source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r15 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r18 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208009945
@global_var_1001d0bc.3 = global i32 0
@global_var_1001d0cc.4 = local_unnamed_addr global i32* @global_var_1001d0bc.3
@global_var_1001d2a8.6 = global i32 0
@global_var_1000c648.7 = constant [4 x i8] c"GET\00"
@global_var_1000c64c.8 = constant i32 788529152
@global_var_10000458.9 = constant [3 x i8] c"8`\00"
@global_var_10000460.10 = constant [3 x i8] c"8`\00"
@global_var_10000468.11 = constant [3 x i8] c"8`\00"
@global_var_10000470.12 = constant [3 x i8] c"8`\00"
@global_var_10000478.13 = constant [3 x i8] c"8`\00"
@global_var_10000480.14 = constant [3 x i8] c"8`\00"
@global_var_10000488.15 = constant [3 x i8] c"8`\00"
@global_var_10000490.16 = constant [3 x i8] c"8`\00"
@global_var_10000498.17 = constant [3 x i8] c"8`\00"
@global_var_100004a0.18 = constant [3 x i8] c"8`\00"
@global_var_10000528.19 = constant i32 939524143
@global_var_1000057c.20 = constant i32 1006685388
@global_var_1000c68c.21 = constant i32 -43588
@global_var_100005cc.22 = constant [3 x i8] c"9`\00"
@global_var_1000c640.23 = constant i32 536870912
@global_var_1000c63c.24 = constant [3 x i8] c"\0D\0A\00"
@global_var_100006c0.25 = constant [3 x i8] c"8`\00"
@global_var_1000c618.26 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1000c630.27 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_10000984.28 = constant [3 x i8] c"8`\00"
@global_var_100009b0.29 = constant [3 x i8] c"8`\00"
@global_var_100009cc.30 = constant [3 x i8] c"8`\00"
@global_var_100009f8.31 = constant [3 x i8] c"8`\00"
@global_var_10000a14.32 = constant [3 x i8] c"8`\00"
@global_var_10000a40.33 = constant [3 x i8] c"8`\00"
@global_var_10000a8c.34 = constant [3 x i8] c"8`\00"
@global_var_1000c650.35 = constant [9 x i8] c"Cookie: \00"
@global_var_1000c65c.36 = constant [3 x i8] c"; \00"
@global_var_1000c660.37 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10000d08.38 = constant i32 939524096
@global_var_1000c668.39 = constant i32 989855744
@global_var_1000c66c.40 = constant [5 x i8] c"http\00"
@global_var_100014f8.41 = constant i32 939589631
@global_var_10001560.42 = constant i32 939589631
@global_var_1000c674.43 = constant [5 x i8] c"url=\00"
@global_var_10001710.44 = constant [3 x i8] c"8`\00"
@global_var_1000c67c.45 = constant [5 x i8] c"POST\00"
@global_var_10001824.46 = constant [3 x i8] c"9`\00"
@global_var_1000c684.47 = constant i32 654311424
@global_var_10001b24.49 = constant [3 x i8] c"9`\00"
@global_var_1000c9c8.50 = constant i32 1023410176
@global_var_1000209c.56 = constant [3 x i8] c";{\00"
@global_var_100020bc.57 = constant i32 939524096
@global_var_1001d238.59 = local_unnamed_addr global i32 0
@global_var_1001d230.61 = local_unnamed_addr global i32 0
@global_var_10002b38.62 = constant i32 939524096
@global_var_100030f0.63 = constant i32 939524096
@global_var_100033f4.64 = constant [3 x i8] c"8`\00"
@global_var_10003474.65 = constant [3 x i8] c"8`\00"
@global_var_100037c4.66 = constant i32 939524096
@global_var_10003ba8.67 = constant i32 939524096
@global_var_10003dcc.68 = constant i32 939524096
@global_var_10004178.69 = constant i32 939524104
@global_var_1000419c.70 = constant [3 x i8] c"9 \00"
@global_var_100044b8.71 = constant i32 939524096
@global_var_100044d8.72 = constant i32 939524096
@global_var_10004bb8.73 = constant i32 939524096
@global_var_100052f8.74 = constant [3 x i8] c"8`\00"
@global_var_100057a0.75 = constant [3 x i8] c"9!\00"
@global_var_1001d23c.76 = local_unnamed_addr global i32 0
@global_var_10005a10.77 = constant [3 x i8] c"8`\00"
@global_var_10005a18.78 = constant [3 x i8] c"8`\00"
@global_var_10005a20.79 = constant [3 x i8] c"8`\00"
@global_var_10005b20.80 = constant i32 956301312
@global_var_10005e6c.81 = constant [3 x i8] c"8`\00"
@global_var_10005e74.82 = constant [3 x i8] c"8`\00"
@global_var_10005e7c.83 = constant [3 x i8] c"8`\00"
@global_var_10005e84.84 = constant [3 x i8] c"8`\00"
@global_var_10005e8c.85 = constant [3 x i8] c"8`\00"
@global_var_10005ef8.86 = constant [3 x i8] c"8`\00"
@global_var_10005f00.87 = constant [3 x i8] c"8`\00"
@global_var_10005f08.88 = constant [3 x i8] c"8`\00"
@global_var_1000602c.89 = constant i32 939524096
@global_var_1001d240.90 = local_unnamed_addr global i32 0
@global_var_1001d244.91 = local_unnamed_addr global i32 0
@global_var_1000606c.92 = constant i32 1207976577
@global_var_1000610c.93 = constant [3 x i8] c"8`\00"
@global_var_10006158.94 = constant [3 x i8] c"8`\00"
@global_var_10006160.95 = constant [3 x i8] c"8`\00"
@global_var_100061c0.96 = constant i32 1207972837
@global_var_10006230.97 = constant [3 x i8] c"8`\00"
@global_var_1001d218.98 = local_unnamed_addr global i32 268474536
@global_var_100062f8.99 = constant i32 1006646822
@global_var_1001d310.100 = global i32 0
@global_var_1001d314.101 = local_unnamed_addr global i32 0
@global_var_1001d312.102 = local_unnamed_addr global i32 0
@global_var_1001d210.103 = local_unnamed_addr global i32 -1
@global_var_100064c8.105 = constant [3 x i8] c"8`\00"
@global_var_1001d248.106 = local_unnamed_addr global i32 0
@global_var_10006570.107 = constant [3 x i8] c"8`\00"
@global_var_100065cc.108 = constant [3 x i8] c"8`\00"
@global_var_10006604.109 = constant [3 x i8] c"8`\00"
@global_var_1000660c.110 = constant [3 x i8] c"8`\00"
@global_var_100066c8.111 = constant i32 1207972321
@global_var_10006704.112 = constant i32 1207961357
@global_var_10006720.113 = constant [3 x i8] c";a\00"
@global_var_10006784.114 = constant i32 1207961149
@global_var_100067d8.115 = constant [3 x i8] c"8`\00"
@global_var_1000c6a0.116 = constant i32 167772160
@global_var_10006810.117 = constant [3 x i8] c"8`\00"
@global_var_10006824.118 = constant i32 1207973389
@global_var_100068c4.119 = constant [3 x i8] c":`\00"
@global_var_100068d4.120 = constant [3 x i8] c"8`\00"
@global_var_100068dc.121 = constant [3 x i8] c"8`\00"
@global_var_1001d214.122 = local_unnamed_addr global i32 -1
@global_var_10006a9c.124 = constant i32 939589631
@global_var_10006b54.125 = constant i32 939589631
@global_var_10006c28.126 = constant i32 939589631
@global_var_10006c34.127 = constant i32 1006685388
@global_var_10006c6c.128 = constant i32 1207960361
@global_var_10006c74.129 = constant [3 x i8] c"|q\00"
@global_var_1000c6a4.130 = constant i32 1
@global_var_10006d1c.131 = constant i32 939589631
@global_var_1001d2cc.132 = local_unnamed_addr global i32 0
@global_var_1001d2c0.133 = local_unnamed_addr global i32 0
@global_var_1001d2c8.134 = local_unnamed_addr global i32 0
@global_var_1001d2c4.135 = local_unnamed_addr global i32 0
@global_var_1001d268.136 = local_unnamed_addr global i32 0
@global_var_1001d25c.137 = local_unnamed_addr global i32 0
@global_var_1001d250.138 = local_unnamed_addr global i32 0
@global_var_1001d254.139 = local_unnamed_addr global i32 0
@global_var_10007350.141 = constant [3 x i8] c"8`\00"
@global_var_1000736c.142 = constant i32 939524096
@global_var_1001d260.143 = local_unnamed_addr global i32 0
@global_var_1001d264.144 = local_unnamed_addr global i32 0
@global_var_1001d2d0.145 = global i32 0
@global_var_1001d2e4.146 = global i32 0
@global_var_1000c79c.147 = constant [9 x i8] c"381>75=5\00"
@global_var_1001d2d2.148 = local_unnamed_addr global i32 0
@global_var_1001d2f0.149 = local_unnamed_addr global i32 0
@global_var_1001d2d8.150 = local_unnamed_addr global i32 0
@global_var_1001d2d9.151 = local_unnamed_addr global i32 0
@global_var_1001d2d4.152 = local_unnamed_addr global i32 0
@global_var_1000c784.153 = constant [6 x i8] c"14=9>\00"
@global_var_1000c7a8.155 = constant i32 1730492957
@global_var_1001d2f2.156 = local_unnamed_addr global i32 0
@global_var_1000c78c.157 = constant [8 x i8] c"1!%1\229?\00"
@global_var_1000c664.158 = constant i32 0
@global_var_1000c6f8.159 = constant [8 x i8] c"4561%<$\00"
@global_var_1000c794.160 = constant [5 x i8] c" 1##\00"
@global_var_1000c77c.161 = constant [5 x i8] c"abcd\00"
@global_var_1000c6ac.162 = constant [4 x i8] c"14=\00"
@global_var_1000c6b0.163 = constant [5 x i8] c"\22??$\00"
@global_var_1000c6b8.164 = constant [5 x i8] c"1>;?\00"
@global_var_1000c6c0.165 = constant [7 x i8] c"(3ceaa\00"
@global_var_1000c6c8.166 = constant [6 x i8] c"$$>5$\00"
@global_var_1000c6d0.167 = constant [9 x i8] c"8%>$egei\00"
@global_var_1000c6dc.168 = constant [6 x i8] c"&9*(&\00"
@global_var_1000c6e4.169 = constant [6 x i8] c"abcde\00"
@global_var_1000c6ec.170 = constant [9 x i8] c"a``a389>\00"
@global_var_1000c700.171 = constant [4 x i8] c"abc\00"
@global_var_1000c704.172 = constant [7 x i8] c"1>$#<!\00"
@global_var_1000c70c.173 = constant [4 x i8] c"e% \00"
@global_var_1000c710.174 = constant [9 x i8] c":%1>$538\00"
@global_var_1000c71c.175 = constant [6 x i8] c"*<((~\00"
@global_var_1000c724.176 = constant [7 x i8] c"abcdef\00"
@global_var_1000c72c.177 = constant [11 x i8] c"?5<9>%(abc\00"
@global_var_1000c738.178 = constant [7 x i8] c"\0A$5eba\00"
@global_var_1000c740.179 = constant i32 1730492957
@global_var_1000c750.180 = constant [5 x i8] c"%#5\22\00"
@global_var_1000c758.181 = constant [7 x i8] c"415=?>\00"
@global_var_1000c760.182 = constant [4 x i8] c"29>\00"
@global_var_1000c764.183 = constant [8 x i8] c"#%  ?\22$\00"
@global_var_1000c76c.184 = constant [11 x i8] c"#% 5\22&9#?\22\00"
@global_var_1000c778.185 = constant [9 x i8] c"*)14abcd\00"
@global_var_1001d2dc.186 = local_unnamed_addr global i32 0
@global_var_1000c7b8.187 = constant i32 -19172
@global_var_1001d2e0.188 = local_unnamed_addr global i32 0
@global_var_1001d2da.189 = local_unnamed_addr global i32 0
@global_var_1001d2f4.190 = local_unnamed_addr global i32 0
@global_var_1001d2e8.191 = local_unnamed_addr global i32 0
@global_var_10007aa4.192 = constant i32 939524096
@global_var_10007c44.193 = constant [3 x i8] c"8`\00"
@global_var_10007c4c.194 = constant i32 939524096
@global_var_10007e18.195 = constant [3 x i8] c"8`\00"
@global_var_1001d320.213 = global i32 0
@global_var_1001d21c.214 = local_unnamed_addr global i32 1043935
@global_var_1000c8a4.215 = constant i32 1510759519
@global_var_1000c8c8.216 = constant i32 307845195
@global_var_1000c7f4.217 = constant i32 1016659968
@global_var_10008cc8.218 = constant [3 x i8] c"8`\00"
@global_var_1001d330.219 = local_unnamed_addr global i32 0
@global_var_1001d334.220 = local_unnamed_addr global i32 0
@global_var_1000c7f8.221 = constant i32 -2032664576
@global_var_10008cf0.222 = constant [3 x i8] c"8`\00"
@global_var_1001d340.223 = local_unnamed_addr global i32 0
@global_var_1000c8d8.224 = constant i32 307845195
@global_var_1001d344.225 = local_unnamed_addr global i32 0
@global_var_1000c7fc.226 = constant i32 2036095321
@global_var_10008d18.227 = constant i32 939524125
@global_var_1001d34c.228 = local_unnamed_addr global i32 0
@global_var_1001d348.229 = local_unnamed_addr global i32 0
@global_var_1000c81c.230 = constant i32 307056466
@global_var_10008d40.231 = constant [3 x i8] c"8`\00"
@global_var_1001d350.232 = local_unnamed_addr global i32 0
@global_var_1001d354.233 = local_unnamed_addr global i32 0
@global_var_1000c824.234 = constant i32 307774808
@global_var_10008d68.235 = constant [3 x i8] c"8`\00"
@global_var_1001d358.236 = local_unnamed_addr global i32 0
@global_var_1000c8bc.237 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_1001d35c.238 = local_unnamed_addr global i32 0
@global_var_1000c82c.239 = constant i32 307976509
@global_var_10008d90.240 = constant i32 939524100
@global_var_1001d364.241 = local_unnamed_addr global i32 0
@global_var_1001d360.242 = local_unnamed_addr global i32 0
@global_var_1000c834.243 = constant i32 307056466
@global_var_10008db8.244 = constant [3 x i8] c"8`\00"
@global_var_1001d368.245 = local_unnamed_addr global i32 0
@global_var_1001d36c.246 = local_unnamed_addr global i32 0
@global_var_1000c844.247 = constant i32 307256397
@global_var_10008ddc.248 = constant [3 x i8] c"8`\00"
@global_var_1001d370.249 = local_unnamed_addr global i32 0
@global_var_1001d374.250 = local_unnamed_addr global i32 0
@global_var_1000c84c.251 = constant i32 307120476
@global_var_10008e00.252 = constant [3 x i8] c"8`\00"
@global_var_1001d378.253 = local_unnamed_addr global i32 0
@global_var_1001d37c.254 = local_unnamed_addr global i32 0
@global_var_1000c858.255 = constant i32 324817748
@global_var_10008e24.256 = constant [3 x i8] c"8`\00"
@global_var_1001d380.257 = local_unnamed_addr global i32 0
@global_var_1001d384.258 = local_unnamed_addr global i32 0
@global_var_1000c860.259 = constant i32 307056466
@global_var_10008e48.260 = constant [3 x i8] c"8`\00"
@global_var_1001d388.261 = local_unnamed_addr global i32 0
@global_var_1001d38c.262 = local_unnamed_addr global i32 0
@global_var_1000c874.263 = constant i32 307056466
@global_var_10008e6c.264 = constant [3 x i8] c"8`\00"
@global_var_1001d390.265 = local_unnamed_addr global i32 0
@global_var_1001d394.266 = local_unnamed_addr global i32 0
@global_var_1000c884.267 = constant i32 2138208882
@global_var_10008e90.268 = constant [3 x i8] c"8`\00"
@global_var_1001d398.269 = local_unnamed_addr global i32 0
@global_var_1001d39c.270 = local_unnamed_addr global i32 0
@global_var_1000c890.271 = constant i32 307775838
@global_var_10008eb4.272 = constant [3 x i8] c"8`\00"
@global_var_1001d3a0.273 = local_unnamed_addr global i32 0
@global_var_1001d3a4.274 = local_unnamed_addr global i32 0
@global_var_10008ed4.275 = constant [3 x i8] c"8`\00"
@global_var_1001d3a8.276 = local_unnamed_addr global i32 0
@global_var_1001d3ac.277 = local_unnamed_addr global i32 0
@global_var_10008ef4.278 = constant [3 x i8] c"8`\00"
@global_var_1001d3b0.279 = local_unnamed_addr global i32 0
@global_var_1001d3b4.280 = local_unnamed_addr global i32 0
@global_var_10008f14.281 = constant [3 x i8] c"8`\00"
@global_var_1001d3b8.282 = local_unnamed_addr global i32 0
@global_var_1001d3bc.283 = local_unnamed_addr global i32 0
@global_var_10008f34.284 = constant [3 x i8] c"8`\00"
@global_var_1001d3c0.285 = local_unnamed_addr global i32 0
@global_var_1001d3c4.286 = local_unnamed_addr global i32 0
@global_var_1000c8ec.287 = constant i32 307845195
@global_var_10008f58.288 = constant [3 x i8] c"8`\00"
@global_var_1001d3c8.289 = local_unnamed_addr global i32 0
@global_var_1001d3cc.290 = local_unnamed_addr global i32 0
@global_var_1000c904.291 = constant i32 307845195
@global_var_10008f7c.292 = constant i32 939524120
@global_var_1001d3d4.293 = local_unnamed_addr global i32 0
@global_var_1001d3d0.294 = local_unnamed_addr global i32 0
@global_var_1000c920.295 = constant i32 307845195
@global_var_10008fa4.296 = constant i32 939524111
@global_var_1001d3dc.297 = local_unnamed_addr global i32 0
@global_var_1001d3d8.298 = local_unnamed_addr global i32 0
@global_var_1000c930.299 = constant [7 x i8] c"NUXQQ=\00"
@global_var_10008fcc.300 = constant [3 x i8] c"8`\00"
@global_var_1001d3e0.301 = local_unnamed_addr global i32 0
@global_var_1001d3e4.302 = local_unnamed_addr global i32 0
@global_var_1000c938.303 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_10008ff0.304 = constant [3 x i8] c"8`\00"
@global_var_1001d3e8.305 = local_unnamed_addr global i32 0
@global_var_1001d3ec.306 = local_unnamed_addr global i32 0
@global_var_1000c940.307 = constant [8 x i8] c"NDNIXP=\00"
@global_var_10009014.308 = constant [3 x i8] c"8`\00"
@global_var_1001d3f0.309 = local_unnamed_addr global i32 0
@global_var_1001d3f4.310 = local_unnamed_addr global i32 0
@global_var_1000c948.311 = constant [4 x i8] c"NU=\00"
@global_var_10009038.312 = constant i32 939524099
@global_var_1001d3fc.313 = local_unnamed_addr global i32 0
@global_var_1001d3f8.314 = local_unnamed_addr global i32 0
@global_var_1000c94c.315 = constant i32 308237395
@global_var_10009060.316 = constant [3 x i8] c"8`\00"
@global_var_1001d400.317 = local_unnamed_addr global i32 0
@global_var_1001d404.318 = local_unnamed_addr global i32 0
@global_var_1000c964.319 = constant i32 1499224409
@global_var_10009088.320 = constant i32 939524124
@global_var_1001d40c.321 = local_unnamed_addr global i32 0
@global_var_1001d408.322 = local_unnamed_addr global i32 0
@global_var_1000c984.323 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_100090b0.324 = constant [3 x i8] c"8`\00"
@global_var_1001d410.325 = local_unnamed_addr global i32 0
@global_var_1001d414.326 = local_unnamed_addr global i32 0
@global_var_100090d0.327 = constant [3 x i8] c"8`\00"
@global_var_1001d418.328 = local_unnamed_addr global i32 0
@global_var_1001d41c.329 = local_unnamed_addr global i32 0
@global_var_1000c990.330 = constant [6 x i8] c"RZTS=\00"
@global_var_100090f4.331 = constant [3 x i8] c"8`\00"
@global_var_1001d420.332 = local_unnamed_addr global i32 0
@global_var_1001d424.333 = local_unnamed_addr global i32 0
@global_var_1000c998.334 = constant [7 x i8] c"XSIXO=\00"
@global_var_1000911c.335 = constant [3 x i8] c"8`\00"
@global_var_1001d428.336 = local_unnamed_addr global i32 0
@global_var_1001d42c.337 = local_unnamed_addr global i32 0
@global_var_1000c9a0.338 = constant i32 308237395
@global_var_10009140.339 = constant [3 x i8] c"8`\00"
@global_var_1001d430.340 = local_unnamed_addr global i32 0
@global_var_1001d434.341 = local_unnamed_addr global i32 0
@global_var_1000c9b4.342 = constant i32 308237395
@global_var_10009168.343 = constant [3 x i8] c"8`\00"
@global_var_1001d438.344 = local_unnamed_addr global i32 0
@global_var_1001d43c.345 = local_unnamed_addr global i32 0
@global_var_1000c9cc.346 = constant i32 1768837704
@global_var_1000918c.347 = constant [3 x i8] c"8`\00"
@global_var_1001d440.348 = local_unnamed_addr global i32 0
@global_var_1001d444.349 = local_unnamed_addr global i32 0
@global_var_1000c9e4.350 = constant i32 307775838
@global_var_100091b0.351 = constant i32 939524113
@global_var_1001d44c.352 = local_unnamed_addr global i32 0
@global_var_1001d448.353 = local_unnamed_addr global i32 0
@global_var_1000c9f8.354 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_100091d8.355 = constant [3 x i8] c"8`\00"
@global_var_1001d450.356 = local_unnamed_addr global i32 0
@global_var_1001d454.357 = local_unnamed_addr global i32 0
@global_var_1000ca04.358 = constant i32 2119324499
@global_var_10009200.359 = constant [3 x i8] c"8`\00"
@global_var_1001d458.360 = local_unnamed_addr global i32 0
@global_var_1001d45c.361 = local_unnamed_addr global i32 0
@global_var_1000cd28.362 = constant i32 2086559320
@global_var_10009224.363 = constant i32 939524179
@global_var_1001d464.364 = local_unnamed_addr global i32 0
@global_var_1001d460.365 = local_unnamed_addr global i32 0
@global_var_1000cd7c.366 = constant i32 2086559320
@global_var_1000924c.367 = constant i32 939524128
@global_var_1001d46c.368 = local_unnamed_addr global i32 0
@global_var_1001d468.369 = local_unnamed_addr global i32 0
@global_var_1000ca1c.370 = constant i32 2119324489
@global_var_10009274.371 = constant i32 939524144
@global_var_1001d474.372 = local_unnamed_addr global i32 0
@global_var_1001d470.373 = local_unnamed_addr global i32 0
@global_var_1000ca50.374 = constant i32 1314408830
@global_var_1000929c.375 = constant [3 x i8] c"8`\00"
@global_var_1001d478.376 = local_unnamed_addr global i32 0
@global_var_1001d47c.377 = local_unnamed_addr global i32 0
@global_var_1000ca60.378 = constant i32 1331190607
@global_var_100092c0.379 = constant [3 x i8] c"8`\00"
@global_var_1001d480.380 = local_unnamed_addr global i32 0
@global_var_1001d484.381 = local_unnamed_addr global i32 0
@global_var_1000ca6c.382 = constant i32 1364352604
@global_var_100092e4.383 = constant [3 x i8] c"8`\00"
@global_var_1001d488.384 = local_unnamed_addr global i32 0
@global_var_1001d48c.385 = local_unnamed_addr global i32 0
@global_var_1000ca78.386 = constant i32 1314408720
@global_var_10009308.387 = constant [3 x i8] c"8`\00"
@global_var_1001d490.388 = local_unnamed_addr global i32 0
@global_var_1001d494.389 = local_unnamed_addr global i32 0
@global_var_1000ca88.390 = constant i32 1582453577
@global_var_1000932c.391 = constant [3 x i8] c"8`\00"
@global_var_1001d498.392 = local_unnamed_addr global i32 0
@global_var_1001d49c.393 = local_unnamed_addr global i32 0
@global_var_1000ca9c.394 = constant i32 1229937747
@global_var_10009350.395 = constant [3 x i8] c"8`\00"
@global_var_1001d4a0.396 = local_unnamed_addr global i32 0
@global_var_1001d4a4.397 = local_unnamed_addr global i32 0
@global_var_1000cab0.398 = constant [9 x i8] c"^UHSVXY=\00"
@global_var_10009374.399 = constant [3 x i8] c"8`\00"
@global_var_1001d4a8.400 = local_unnamed_addr global i32 0
@global_var_1001d4ac.401 = local_unnamed_addr global i32 0
@global_var_1000ca10.402 = constant i32 1448630349
@global_var_10009398.403 = constant [3 x i8] c"8`\00"
@global_var_1001d4b0.404 = local_unnamed_addr global i32 0
@global_var_1001d4b4.405 = local_unnamed_addr global i32 0
@global_var_1000cabc.406 = constant i32 1582453587
@global_var_100093bc.407 = constant [3 x i8] c"8`\00"
@global_var_1001d4b8.408 = local_unnamed_addr global i32 0
@global_var_1001d4bc.409 = local_unnamed_addr global i32 0
@global_var_1000cacc.410 = constant i32 1314410315
@global_var_100093e0.411 = constant i32 939524114
@global_var_1001d4c4.412 = local_unnamed_addr global i32 0
@global_var_1001d4c0.413 = local_unnamed_addr global i32 0
@global_var_1000cae0.414 = constant i32 1314410315
@global_var_10009408.415 = constant i32 939524121
@global_var_1001d4cc.416 = local_unnamed_addr global i32 0
@global_var_1001d4c8.417 = local_unnamed_addr global i32 0
@global_var_1000cafc.418 = constant i32 1884440404
@global_var_10009434.419 = constant [3 x i8] c"8`\00"
@global_var_1001d4d0.420 = local_unnamed_addr global i32 0
@global_var_1001d4d4.421 = local_unnamed_addr global i32 0
@global_var_1000cb70.422 = constant i32 1884440404
@global_var_10009458.423 = constant [3 x i8] c"8`\00"
@global_var_1001d4d8.424 = local_unnamed_addr global i32 0
@global_var_1001d4dc.425 = local_unnamed_addr global i32 0
@global_var_1000cbe4.426 = constant i32 1884440404
@global_var_1000947c.427 = constant i32 939524175
@global_var_1001d4e4.428 = local_unnamed_addr global i32 0
@global_var_1001d4e0.429 = local_unnamed_addr global i32 0
@global_var_1000cc34.430 = constant i32 1884440404
@global_var_100094a8.431 = constant [3 x i8] c"8`\00"
@global_var_1001d4e8.432 = local_unnamed_addr global i32 0
@global_var_1001d4ec.433 = local_unnamed_addr global i32 0
@global_var_1000cca8.434 = constant i32 1884440404
@global_var_100094cc.435 = constant [3 x i8] c"8`\00"
@global_var_1001d4f0.436 = local_unnamed_addr global i32 0
@global_var_1001d4f4.437 = local_unnamed_addr global i32 0
@global_var_100094ec.438 = constant [3 x i8] c"8`\00"
@global_var_1001d4f8.439 = local_unnamed_addr global i32 0
@global_var_1001d4fc.440 = local_unnamed_addr global i32 0
@global_var_1000950c.441 = constant [3 x i8] c"8`\00"
@global_var_1001d500.442 = local_unnamed_addr global i32 0
@global_var_1001d504.443 = local_unnamed_addr global i32 0
@global_var_1000952c.444 = constant [3 x i8] c"8`\00"
@global_var_1001d508.445 = local_unnamed_addr global i32 0
@global_var_1001d50c.446 = local_unnamed_addr global i32 0
@global_var_1000cd1c.447 = constant [11 x i8] c"YKOuXQMXO=\00"
@global_var_1001d514.448 = local_unnamed_addr global i32 0
@global_var_1001d510.449 = local_unnamed_addr global i32 0
@global_var_100098cc.450 = constant i32 939524096
@global_var_10009c98.451 = constant i32 1207959564
@global_var_1000a174.452 = constant i32 939524118
@global_var_1000b688.453 = constant [3 x i8] c"8`\00"
@global_var_1000a284.454 = constant i32 939524105
@global_var_1000a2a0.455 = constant i32 939589631
@global_var_1000a3c8.456 = constant i32 1207959797
@global_var_1000a3cc.457 = constant i32 939524108
@global_var_1001d28c.458 = global i32 0
@global_var_1000ab44.459 = constant i32 939524118
@global_var_1000abcc.460 = constant i32 939524118
@global_var_1001d518.461 = global i32 0
@global_var_1001d2f8.462 = global i32 0
@global_var_1001d220 = external global i32
@global_var_1000ceac.464 = constant i32 33554944
@global_var_1001d27c.465 = local_unnamed_addr global i32 0
@global_var_1001d598.466 = global i32 0
@global_var_1000ae28.467 = constant i32 939524108
@global_var_1000ae7c.468 = constant i32 939524108
@global_var_1000af30.469 = constant [3 x i8] c"8`\00"
@global_var_1000afdc.470 = constant [3 x i8] c"8`\00"
@global_var_1000b304.471 = constant i32 1207959640
@global_var_1000b340.472 = constant i32 1207959580
@global_var_1001d1e0.473 = global i32 0
@global_var_1001d270.474 = local_unnamed_addr global i32 0
@global_var_1000b400.475 = constant i32 1207960053
@global_var_1000b404.476 = constant [3 x i8] c"= \00"
@global_var_1001d0b0.477 = global i32 -1
@global_var_1001d280.478 = local_unnamed_addr global i32 0
@global_var_1001d284.479 = local_unnamed_addr global i32 0
@global_var_1000cda0.480 = constant [10 x i8] c"/dev/null\00"
@global_var_1001d288.481 = local_unnamed_addr global i32 0
@global_var_1001d274.483 = local_unnamed_addr global i32 0
@global_var_1001d278.484 = local_unnamed_addr global i32 0
@global_var_1000b9a0.485 = constant i32 939524096
@global_var_1000bc2c.487 = constant i32 939524118
@global_var_1000be28.488 = constant i32 939589631
@global_var_1001d2a0.489 = local_unnamed_addr global i32 0
@global_var_1001d22c.490 = local_unnamed_addr global i32* @global_var_1000ceac.464
@global_var_1001d1f8.491 = global i32 0
@global_var_1000c34c.492 = constant i32 939524129
@global_var_1001d294.493 = local_unnamed_addr global i32 0
@global_var_1000c3c0.494 = constant [3 x i8] c"8`\00"
@global_var_1000c3f8.495 = constant i32 939524129
@global_var_1001d298.496 = local_unnamed_addr global i32 0
@global_var_1001d29c.497 = local_unnamed_addr global i32 0
@global_var_1001d0b4.498 = global i32 0
@global_var_1001d2a4.2 = local_unnamed_addr global i8 0
@global_var_1001d234.58 = local_unnamed_addr global i8 0
@global_var_1001d235.60 = global i8 0
@global_var_1001d0d0.104 = local_unnamed_addr global i8 1
@global_var_1001d24c.123 = local_unnamed_addr global i16 0
@global_var_1001d258.140 = global i16 0
@global_var_1001d2e6.154 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000c57c(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001d2a4.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001d0cc.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001d0cc.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001d0cc.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001d2a4.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001d2a4.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268554432 to i32*), align 64
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268554432
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %lr.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_10000210, i32* %r4.global-to-local, align 4
  %v2_10000214 = ptrtoint i32* %stack_var_4 to i32
  store i32 268461588, i32* %r3.global-to-local, align 4
  %v7_10000234 = call i32 @function_1000b774(i32 268461588, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268486120, i32 %arg1)
  store i32 %v7_10000234, i32* %r3.global-to-local, align 4
  %v0_10000238 = load i32, i32* @r1, align 4
  %v2_10000238 = add i32 %v0_10000238, -20896
  %v3_10000238 = inttoptr i32 %v2_10000238 to i32*
  store i32 %v0_10000238, i32* %v3_10000238, align 4
  %v0_1000023c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_1000023c, i32* %r0.global-to-local, align 4
  %v0_10000240 = call i32 @__asm_mfcr()
  %v0_10000244 = load i32, i32* @r29, align 4
  %v1_10000244 = load i32, i32* @r1, align 4
  %v2_10000244 = add i32 %v1_10000244, 20884
  %v3_10000244 = inttoptr i32 %v2_10000244 to i32*
  store i32 %v0_10000244, i32* %v3_10000244, align 4
  store i32 %v2_10000214, i32* %r29.global-to-local, align 4
  %v0_1000024c = load i32, i32* @r22, align 4
  %v1_1000024c = load i32, i32* @r1, align 4
  %v2_1000024c = add i32 %v1_1000024c, 20856
  %v3_1000024c = inttoptr i32 %v2_1000024c to i32*
  store i32 %v0_1000024c, i32* %v3_1000024c, align 4
  %v0_10000254 = load i32, i32* @r23, align 4
  %v1_10000254 = load i32, i32* @r1, align 4
  %v2_10000254 = add i32 %v1_10000254, 20860
  %v3_10000254 = inttoptr i32 %v2_10000254 to i32*
  store i32 %v0_10000254, i32* %v3_10000254, align 4
  store i32 %v2_10000210, i32* %r22.global-to-local, align 4
  %v0_1000025c = load i32, i32* @r28, align 4
  %v1_1000025c = load i32, i32* @r1, align 4
  %v2_1000025c = add i32 %v1_1000025c, 20880
  %v3_1000025c = inttoptr i32 %v2_1000025c to i32*
  store i32 %v0_1000025c, i32* %v3_1000025c, align 4
  store i32 268435604, i32* %r4.global-to-local, align 4
  store i32 268435604, i32* %r28.global-to-local, align 4
  store i32 %v0_10000240, i32* %r23.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  %v0_10000274 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000274 = load i32, i32* @r1, align 4
  %v2_10000274 = add i32 %v1_10000274, 20900
  %v3_10000274 = inttoptr i32 %v2_10000274 to i32*
  store i32 %v0_10000274, i32* %v3_10000274, align 4
  %v1_10000278 = load i32, i32* @r1, align 4
  %v2_10000278 = add i32 %v1_10000278, 20820
  %v3_10000278 = inttoptr i32 %v2_10000278 to i32*
  store i32 %v0_10000240, i32* %v3_10000278, align 4
  %v0_1000027c = load i32, i32* @r20, align 4
  %v1_1000027c = load i32, i32* @r1, align 4
  %v2_1000027c = add i32 %v1_1000027c, 20848
  %v3_1000027c = inttoptr i32 %v2_1000027c to i32*
  store i32 %v0_1000027c, i32* %v3_1000027c, align 4
  %v0_10000280 = load i32, i32* @r1, align 4
  %v1_10000280 = add i32 %v0_10000280, 10540
  store i32 %v1_10000280, i32* %r20.global-to-local, align 4
  %v0_10000284 = load i32, i32* @r25, align 4
  %v2_10000284 = add i32 %v0_10000280, 20868
  %v3_10000284 = inttoptr i32 %v2_10000284 to i32*
  store i32 %v0_10000284, i32* %v3_10000284, align 4
  %v0_10000288 = load i32, i32* @r26, align 4
  %v1_10000288 = load i32, i32* @r1, align 4
  %v2_10000288 = add i32 %v1_10000288, 20872
  %v3_10000288 = inttoptr i32 %v2_10000288 to i32*
  store i32 %v0_10000288, i32* %v3_10000288, align 4
  %v0_1000028c = load i32, i32* @r27, align 4
  %v1_1000028c = load i32, i32* @r1, align 4
  %v2_1000028c = add i32 %v1_1000028c, 20876
  %v3_1000028c = inttoptr i32 %v2_1000028c to i32*
  store i32 %v0_1000028c, i32* %v3_1000028c, align 4
  %v0_10000290 = load i32, i32* @r31, align 4
  %v1_10000290 = load i32, i32* @r1, align 4
  %v2_10000290 = add i32 %v1_10000290, 20892
  %v3_10000290 = inttoptr i32 %v2_10000290 to i32*
  store i32 %v0_10000290, i32* %v3_10000290, align 4
  %v0_10000294 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000294 = load i32, i32* @r1, align 4
  %v2_10000294 = add i32 %v1_10000294, 20824
  %v3_10000294 = inttoptr i32 %v2_10000294 to i32*
  store i32 %v0_10000294, i32* %v3_10000294, align 4
  %v0_10000298 = load i32, i32* @r15, align 4
  %v1_10000298 = load i32, i32* @r1, align 4
  %v2_10000298 = add i32 %v1_10000298, 20828
  %v3_10000298 = inttoptr i32 %v2_10000298 to i32*
  store i32 %v0_10000298, i32* %v3_10000298, align 4
  %v0_1000029c = load i32, i32* @r16, align 4
  %v1_1000029c = load i32, i32* @r1, align 4
  %v2_1000029c = add i32 %v1_1000029c, 20832
  %v3_1000029c = inttoptr i32 %v2_1000029c to i32*
  store i32 %v0_1000029c, i32* %v3_1000029c, align 4
  %v0_100002a0 = load i32, i32* @r17, align 4
  %v1_100002a0 = load i32, i32* @r1, align 4
  %v2_100002a0 = add i32 %v1_100002a0, 20836
  %v3_100002a0 = inttoptr i32 %v2_100002a0 to i32*
  store i32 %v0_100002a0, i32* %v3_100002a0, align 4
  %v0_100002a4 = load i32, i32* @r18, align 4
  %v1_100002a4 = load i32, i32* @r1, align 4
  %v2_100002a4 = add i32 %v1_100002a4, 20840
  %v3_100002a4 = inttoptr i32 %v2_100002a4 to i32*
  store i32 %v0_100002a4, i32* %v3_100002a4, align 4
  %v0_100002a8 = load i32, i32* @r19, align 4
  %v1_100002a8 = load i32, i32* @r1, align 4
  %v2_100002a8 = add i32 %v1_100002a8, 20844
  %v3_100002a8 = inttoptr i32 %v2_100002a8 to i32*
  store i32 %v0_100002a8, i32* %v3_100002a8, align 4
  %v0_100002ac = load i32, i32* @r21, align 4
  %v1_100002ac = load i32, i32* @r1, align 4
  %v2_100002ac = add i32 %v1_100002ac, 20852
  %v3_100002ac = inttoptr i32 %v2_100002ac to i32*
  store i32 %v0_100002ac, i32* %v3_100002ac, align 4
  %v0_100002b0 = load i32, i32* @r24, align 4
  %v1_100002b0 = load i32, i32* @r1, align 4
  %v2_100002b0 = add i32 %v1_100002b0, 20864
  %v3_100002b0 = inttoptr i32 %v2_100002b0 to i32*
  store i32 %v0_100002b0, i32* %v3_100002b0, align 4
  %v0_100002b4 = load i32, i32* @r30, align 4
  %v1_100002b4 = load i32, i32* @r1, align 4
  %v2_100002b4 = add i32 %v1_100002b4, 20888
  %v3_100002b4 = inttoptr i32 %v2_100002b4 to i32*
  store i32 %v0_100002b4, i32* %v3_100002b4, align 4
  store i32 268436156, i32* @lr, align 4
  %v5_100002b8 = call i32 @function_10001d50(i32 %v2_10000214, i32* inttoptr (i32 268435604 to i32*), i32 20, i32 0)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100002c0 = load i32, i32* @r1, align 4
  %v2_100002c0 = add i32 %v1_100002c0, 20804
  %v3_100002c0 = inttoptr i32 %v2_100002c0 to i32*
  store i32 %v5_100002b8, i32* %v3_100002c0, align 4
  %v0_100002cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002cc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436184, i32* @lr, align 4
  %v5_100002d4 = inttoptr i32 %v0_100002cc to i32*
  %v6_100002d4 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v5_100002d4, i32 19, i32 ptrtoint ([4 x i8]* @global_var_1000c648.7 to i32))
  %v0_100002d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002d8, i32* %r4.global-to-local, align 4
  store i32 %v6_100002d4, i32* %r25.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436208, i32* @lr, align 4
  %v4_100002ec = inttoptr i32 %v0_100002d8 to i32*
  %v5_100002ec = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_100002ec, i32 8, i32 0)
  store i32 %v5_100002ec, i32* %r26.global-to-local, align 4
  %v0_10000300 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000300, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436236, i32* @lr, align 4
  %v4_10000308 = inttoptr i32 %v0_10000300 to i32*
  %v5_10000308 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_10000308, i32 21, i32 ptrtoint (i32* @global_var_1000c64c.8 to i32))
  %v0_1000030c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000030c, i32* %r4.global-to-local, align 4
  store i32 %v5_10000308, i32* %r27.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436260, i32* @lr, align 4
  %v4_10000320 = inttoptr i32 %v0_1000030c to i32*
  %v5_10000320 = call i32 @function_10001e18(i32 %v2_10000214, i32* %v4_10000320, i32 23, i32 1)
  %v0_10000324 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000324, i32* %r4.global-to-local, align 4
  store i32 %v5_10000320, i32* %r31.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436284, i32* @lr, align 4
  %v4_10000338 = inttoptr i32 %v0_10000324 to i32*
  %v5_10000338 = call i32 @function_10001e18(i32 %v2_10000214, i32* %v4_10000338, i32 7, i32 80)
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000340 = urem i32 %v5_10000338, 65536
  %v1_10000348 = load i32, i32* @r1, align 4
  %v2_10000348 = add i32 %v1_10000348, 20800
  %v3_10000348 = inttoptr i32 %v2_10000348 to i32*
  store i32 %v1_10000340, i32* %v3_10000348, align 4
  %v0_1000034c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000034c, i32* %r3.global-to-local, align 4
  store i32 268436308, i32* @lr, align 4
  %v3_10000350 = call i32 @function_1000a5a4(i32 %v0_1000034c, i32 0, i32 10241)
  store i32 %v3_10000350, i32* %r3.global-to-local, align 4
  %v0_10000354 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000354 = icmp slt i32 %v0_10000354, 0
  %v2_10000354 = icmp sgt i32 %v0_10000354, 0
  %v3_10000354 = icmp eq i32 %v0_10000354, 0
  store i1 %v1_10000354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000354, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000354, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000354, label %dec_label_pc_10000374, label %dec_label_pc_1000035c

dec_label_pc_1000035c:                            ; preds = %entry
  %v0_1000035c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000035c = icmp slt i32 %v0_1000035c, 0
  %v2_1000035c = icmp sgt i32 %v0_1000035c, 0
  %v3_1000035c = icmp eq i32 %v0_1000035c, 0
  store i1 %v1_1000035c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000035c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000035c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000035c, label %dec_label_pc_10000374, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_1000035c
  store i32 %v0_1000035c, i32* %r3.global-to-local, align 4
  store i32 268436332, i32* @lr, align 4
  %v1_10000368 = inttoptr i32 %v0_1000035c to i8*
  %v2_10000368 = call i32 @function_100095a4(i8* %v1_10000368)
  store i32 %v2_10000368, i32* %r3.global-to-local, align 4
  %v1_1000036c = icmp slt i32 %v2_10000368, 255
  %v2_1000036c = icmp sgt i32 %v2_10000368, 255
  %v3_1000036c = icmp eq i32 %v2_10000368, 255
  store i1 %v1_1000036c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000036c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000036c, i1* %cr7_eq.global-to-local, align 1
  %tmp63 = icmp slt i32 %v2_10000368, 256
  br i1 %tmp63, label %dec_label_pc_100003d4, label %dec_label_pc_10000374

dec_label_pc_10000374:                            ; preds = %dec_label_pc_100003e4, %dec_label_pc_100003d4, %dec_label_pc_10000364, %dec_label_pc_1000035c, %entry
  %v0_10000374 = load i32, i32* @r1, align 4
  %v1_10000374 = add i32 %v0_10000374, 20900
  %v2_10000374 = inttoptr i32 %v1_10000374 to i32*
  %v3_10000374 = load i32, i32* %v2_10000374, align 4
  store i32 %v3_10000374, i32* %r0.global-to-local, align 4
  %v1_10000378 = add i32 %v0_10000374, 20820
  %v2_10000378 = inttoptr i32 %v1_10000378 to i32*
  %v3_10000378 = load i32, i32* %v2_10000378, align 4
  %v1_1000037c = add i32 %v0_10000374, 20824
  %v2_1000037c = inttoptr i32 %v1_1000037c to i32*
  %v3_1000037c = load i32, i32* %v2_1000037c, align 4
  store i32 %v3_1000037c, i32* %r14.global-to-local, align 4
  store i32 %v3_10000374, i32* %lr.global-to-local, align 4
  %v1_10000384 = add i32 %v0_10000374, 20828
  %v2_10000384 = inttoptr i32 %v1_10000384 to i32*
  %v3_10000384 = load i32, i32* %v2_10000384, align 4
  store i32 %v3_10000384, i32* %r15.global-to-local, align 4
  %v1_10000388 = call %0 @__asm_mtcrf(i32 24, i32 %v3_10000378)
  %v0_1000038c = load i32, i32* @r1, align 4
  %v1_1000038c = add i32 %v0_1000038c, 20832
  %v2_1000038c = inttoptr i32 %v1_1000038c to i32*
  %v3_1000038c = load i32, i32* %v2_1000038c, align 4
  store i32 %v3_1000038c, i32* %r16.global-to-local, align 4
  %v1_10000390 = add i32 %v0_1000038c, 20836
  %v2_10000390 = inttoptr i32 %v1_10000390 to i32*
  %v3_10000390 = load i32, i32* %v2_10000390, align 4
  store i32 %v3_10000390, i32* %r17.global-to-local, align 4
  %v1_10000394 = add i32 %v0_1000038c, 20840
  %v2_10000394 = inttoptr i32 %v1_10000394 to i32*
  %v3_10000394 = load i32, i32* %v2_10000394, align 4
  store i32 %v3_10000394, i32* %r18.global-to-local, align 4
  %v1_10000398 = add i32 %v0_1000038c, 20844
  %v2_10000398 = inttoptr i32 %v1_10000398 to i32*
  %v3_10000398 = load i32, i32* %v2_10000398, align 4
  store i32 %v3_10000398, i32* %r19.global-to-local, align 4
  %v1_1000039c = add i32 %v0_1000038c, 20848
  %v2_1000039c = inttoptr i32 %v1_1000039c to i32*
  %v3_1000039c = load i32, i32* %v2_1000039c, align 4
  store i32 %v3_1000039c, i32* %r20.global-to-local, align 4
  %v1_100003a0 = add i32 %v0_1000038c, 20852
  %v2_100003a0 = inttoptr i32 %v1_100003a0 to i32*
  %v3_100003a0 = load i32, i32* %v2_100003a0, align 4
  store i32 %v3_100003a0, i32* %r21.global-to-local, align 4
  %v1_100003a4 = add i32 %v0_1000038c, 20856
  %v2_100003a4 = inttoptr i32 %v1_100003a4 to i32*
  %v3_100003a4 = load i32, i32* %v2_100003a4, align 4
  store i32 %v3_100003a4, i32* %r22.global-to-local, align 4
  %v1_100003a8 = add i32 %v0_1000038c, 20860
  %v2_100003a8 = inttoptr i32 %v1_100003a8 to i32*
  %v3_100003a8 = load i32, i32* %v2_100003a8, align 4
  store i32 %v3_100003a8, i32* %r23.global-to-local, align 4
  %v1_100003ac = add i32 %v0_1000038c, 20864
  %v2_100003ac = inttoptr i32 %v1_100003ac to i32*
  %v3_100003ac = load i32, i32* %v2_100003ac, align 4
  store i32 %v3_100003ac, i32* %r24.global-to-local, align 4
  %v1_100003b0 = add i32 %v0_1000038c, 20868
  %v2_100003b0 = inttoptr i32 %v1_100003b0 to i32*
  %v3_100003b0 = load i32, i32* %v2_100003b0, align 4
  store i32 %v3_100003b0, i32* %r25.global-to-local, align 4
  %v1_100003b4 = add i32 %v0_1000038c, 20872
  %v2_100003b4 = inttoptr i32 %v1_100003b4 to i32*
  %v3_100003b4 = load i32, i32* %v2_100003b4, align 4
  store i32 %v3_100003b4, i32* %r26.global-to-local, align 4
  %v1_100003b8 = add i32 %v0_1000038c, 20876
  %v2_100003b8 = inttoptr i32 %v1_100003b8 to i32*
  %v3_100003b8 = load i32, i32* %v2_100003b8, align 4
  store i32 %v3_100003b8, i32* %r27.global-to-local, align 4
  %v1_100003bc = add i32 %v0_1000038c, 20880
  %v2_100003bc = inttoptr i32 %v1_100003bc to i32*
  %v3_100003bc = load i32, i32* %v2_100003bc, align 4
  store i32 %v3_100003bc, i32* %r28.global-to-local, align 4
  %v1_100003c0 = add i32 %v0_1000038c, 20884
  %v2_100003c0 = inttoptr i32 %v1_100003c0 to i32*
  %v3_100003c0 = load i32, i32* %v2_100003c0, align 4
  store i32 %v3_100003c0, i32* %r29.global-to-local, align 4
  %v1_100003c4 = add i32 %v0_1000038c, 20888
  %v2_100003c4 = inttoptr i32 %v1_100003c4 to i32*
  %v3_100003c4 = load i32, i32* %v2_100003c4, align 4
  store i32 %v3_100003c4, i32* %r30.global-to-local, align 4
  %v1_100003c8 = add i32 %v0_1000038c, 20892
  %v2_100003c8 = inttoptr i32 %v1_100003c8 to i32*
  %v3_100003c8 = load i32, i32* %v2_100003c8, align 4
  store i32 %v3_100003c8, i32* %r31.global-to-local, align 4
  %v0_100003d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100003d0

dec_label_pc_100003d4:                            ; preds = %dec_label_pc_10000364
  %v0_100003d4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100003d4, i32* %r3.global-to-local, align 4
  store i32 268436444, i32* @lr, align 4
  %v1_100003d8 = inttoptr i32 %v0_100003d4 to i8*
  %v2_100003d8 = call i32 @function_100095a4(i8* %v1_100003d8)
  store i32 %v2_100003d8, i32* %r3.global-to-local, align 4
  %v1_100003dc = icmp slt i32 %v2_100003d8, 127
  %v2_100003dc = icmp sgt i32 %v2_100003d8, 127
  %v3_100003dc = icmp eq i32 %v2_100003d8, 127
  store i1 %v1_100003dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003dc, label %dec_label_pc_10000374, label %dec_label_pc_100003e4

dec_label_pc_100003e4:                            ; preds = %dec_label_pc_100003d4
  %v0_100003e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003e4, i32* %r3.global-to-local, align 4
  store i32 268436460, i32* @lr, align 4
  %v1_100003e8 = inttoptr i32 %v0_100003e4 to i8*
  %v2_100003e8 = call i32 @function_100095a4(i8* %v1_100003e8)
  store i32 %v2_100003e8, i32* %r3.global-to-local, align 4
  %v1_100003ec = icmp slt i32 %v2_100003e8, 9
  %v2_100003ec = icmp sgt i32 %v2_100003e8, 9
  %v3_100003ec = icmp eq i32 %v2_100003e8, 9
  store i1 %v1_100003ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003ec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003ec, label %dec_label_pc_10000374, label %dec_label_pc_100003f4

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100003f8 = load i32, i32* @r1, align 4
  %v2_100003f8 = add i32 %v1_100003f8, 8
  %v3_100003f8 = inttoptr i32 %v2_100003f8 to i32*
  store i32 0, i32* %v3_100003f8, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_100003fc:                            ; preds = %dec_label_pc_10000430, %dec_label_pc_100003f4
  %v0_100003fc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003fc, i32* %r3.global-to-local, align 4
  store i32 268436484, i32* @lr, align 4
  %v1_10000400 = inttoptr i32 %v0_100003fc to i8*
  %v2_10000400 = call i32 @function_100095a4(i8* %v1_10000400)
  store i32 %v2_10000400, i32* %r3.global-to-local, align 4
  %v0_10000404 = load i32, i32* @r1, align 4
  %v1_10000404 = add i32 %v0_10000404, 8
  %v2_10000404 = inttoptr i32 %v1_10000404 to i32*
  %v3_10000404 = load i32, i32* %v2_10000404, align 4
  store i32 %v3_10000404, i32* %r11.global-to-local, align 4
  %v2_10000408 = icmp slt i32 %v2_10000400, %v3_10000404
  %v3_10000408 = icmp sgt i32 %v2_10000400, %v3_10000404
  %v4_10000408 = icmp eq i32 %v2_10000400, %v3_10000404
  store i1 %v2_10000408, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000408, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000408, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000408, label %dec_label_pc_10000410, label %dec_label_pc_1000043c

dec_label_pc_10000410:                            ; preds = %dec_label_pc_100003fc
  %v0_10000410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000410 = add i32 %v0_10000410, %v3_10000404
  %v3_10000410 = inttoptr i32 %v2_10000410 to i8*
  %v4_10000410 = load i8, i8* %v3_10000410, align 1
  %v5_10000410 = zext i8 %v4_10000410 to i32
  store i32 %v5_10000410, i32* %r9.global-to-local, align 4
  %v1_10000414 = add nuw nsw i32 %v5_10000410, 159
  %v1_10000418 = urem i32 %v1_10000414, 256
  store i32 %v1_10000418, i32* %r0.global-to-local, align 4
  %v1_1000041c = icmp ult i32 %v1_10000418, 25
  %v2_1000041c = icmp ugt i32 %v1_10000418, 25
  %v3_1000041c = icmp eq i32 %v1_10000418, 25
  store i1 %v1_1000041c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000041c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000041c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000041c, label %dec_label_pc_10000430, label %dec_label_pc_10000424

dec_label_pc_10000424:                            ; preds = %dec_label_pc_10000410
  %v1_10000424 = add nsw i32 %v5_10000410, -32
  store i32 %v1_10000424, i32* %r0.global-to-local, align 4
  %v3_10000428 = trunc i32 %v1_10000424 to i8
  store i8 %v3_10000428, i8* %v3_10000410, align 1
  %v0_1000042c = load i32, i32* @r1, align 4
  %v1_1000042c = add i32 %v0_1000042c, 8
  %v2_1000042c = inttoptr i32 %v1_1000042c to i32*
  %v3_1000042c = load i32, i32* %v2_1000042c, align 4
  store i32 %v3_1000042c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10000430

dec_label_pc_10000430:                            ; preds = %dec_label_pc_10000410, %dec_label_pc_10000424
  %v1_10000434 = phi i32 [ %v0_10000404, %dec_label_pc_10000410 ], [ %v0_1000042c, %dec_label_pc_10000424 ]
  %v0_10000430 = phi i32 [ %v3_10000404, %dec_label_pc_10000410 ], [ %v3_1000042c, %dec_label_pc_10000424 ]
  %v1_10000430 = add i32 %v0_10000430, 1
  store i32 %v1_10000430, i32* %r11.global-to-local, align 4
  %v2_10000434 = add i32 %v1_10000434, 8
  %v3_10000434 = inttoptr i32 %v2_10000434 to i32*
  store i32 %v1_10000430, i32* %v3_10000434, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003fc
  %v0_1000043c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000043c = icmp slt i32 %v0_1000043c, 512
  %v2_1000043c = icmp sgt i32 %v0_1000043c, 512
  %v3_1000043c = icmp eq i32 %v0_1000043c, 512
  store i1 %v1_1000043c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000043c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000043c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000440. = select i1 %v2_1000043c, i32 512, i32 %v0_1000043c
  store i32 %v0_10000440., i32* %r21.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  %v1_10000450 = icmp slt i32 %v0_10000440., 0
  %v3_10000450 = icmp eq i32 %v0_10000440., 0
  store i1 %v1_10000450, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000450, i1* %cr4_eq.global-to-local, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10000458.9 to i32), i32* @lr, align 4
  %v1_10000454 = call i32 @function_10008b98(i32 43)
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000460.10 to i32), i32* @lr, align 4
  %v1_1000045c = call i32 @function_10008b98(i32 44)
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000468.11 to i32), i32* @lr, align 4
  %v1_10000464 = call i32 @function_10008b98(i32 45)
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000470.12 to i32), i32* @lr, align 4
  %v1_1000046c = call i32 @function_10008b98(i32 46)
  store i32 47, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000478.13 to i32), i32* @lr, align 4
  %v1_10000474 = call i32 @function_10008b98(i32 47)
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000480.14 to i32), i32* @lr, align 4
  %v1_1000047c = call i32 @function_10008b98(i32 48)
  store i32 49, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000488.15 to i32), i32* @lr, align 4
  %v1_10000484 = call i32 @function_10008b98(i32 49)
  store i32 50, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000490.16 to i32), i32* @lr, align 4
  %v1_1000048c = call i32 @function_10008b98(i32 50)
  store i32 51, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000498.17 to i32), i32* @lr, align 4
  %v1_10000494 = call i32 @function_10008b98(i32 51)
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100004a0.18 to i32), i32* @lr, align 4
  %v1_1000049c = call i32 @function_10008b98(i32 52)
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 268436648, i32* @lr, align 4
  %v1_100004a4 = call i32 @function_10008b98(i32 53)
  %v0_100004a8 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100004a8, i32* %r3.global-to-local, align 4
  store i32 3140, i32* %r4.global-to-local, align 4
  store i32 268436660, i32* @lr, align 4
  %v2_100004b0 = call i32 @function_1000ae4c(i32 %v0_100004a8, i32 3140)
  store i32 %v2_100004b0, i32* %r3.global-to-local, align 4
  %v1_100004b4 = load i32, i32* @r1, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 20796
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v2_100004b0, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004b8 = or i1 %v0_100004b8, %v1_100004b8
  br i1 %v2_100004b8, label %dec_label_pc_100005b4, label %dec_label_pc_100004bc

dec_label_pc_100004bc:                            ; preds = %dec_label_pc_1000043c
  store i32 %v2_100004b0, i32* @r31, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge, %dec_label_pc_100004bc
  %v2_100004d4 = phi i32 [ %v2_100004d4.pre, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ %v2_100004b0, %dec_label_pc_100004bc ]
  %v0_100004c8 = phi i32 [ %v1_10001c84, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ 0, %dec_label_pc_100004bc ]
  %v1_100004c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004c8 = sdiv i32 %v0_100004c8, %v1_100004c8
  store i32 %v2_100004c8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v3_100004d4 = add i32 %v2_100004d4, 4
  %v4_100004d4 = inttoptr i32 %v3_100004d4 to i8*
  store i8 0, i8* %v4_100004d4, align 1
  %v0_100004d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004d8 = load i32, i32* @r31, align 4
  %v2_100004d8 = inttoptr i32 %v1_100004d8 to i32*
  store i32 %v0_100004d8, i32* %v2_100004d8, align 4
  %v0_100004dc = load i32, i32* @r31, align 4
  %v1_100004dc = add i32 %v0_100004dc, 532
  store i32 %v1_100004dc, i32* %r24.global-to-local, align 4
  store i32 %v1_100004dc, i32* @r3, align 4
  %v0_100004e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100004e4, i32* %r4.global-to-local, align 4
  %v0_100004e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100004e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004e8 = mul i32 %v1_100004e8, %v0_100004e8
  %v1_100004ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100004ec = sub i32 %v1_100004ec, %v2_100004e8
  %v1_100004f0 = mul i32 %v2_100004ec, 24
  store i32 %v1_100004f0, i32* %r0.global-to-local, align 4
  %v1_100004f4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100004f4 = add i32 %v1_100004f4, %v1_100004f0
  store i32 %v2_100004f4, i32* %r30.global-to-local, align 4
  %v1_100004f8 = add i32 %v2_100004f4, 16
  %v2_100004f8 = inttoptr i32 %v1_100004f8 to i32*
  %v3_100004f8 = load i32, i32* %v2_100004f8, align 4
  store i32 %v3_100004f8, i32* %r9.global-to-local, align 4
  %v2_100004fc = add i32 %v0_100004dc, 16
  %v3_100004fc = inttoptr i32 %v2_100004fc to i32*
  store i32 %v3_100004f8, i32* %v3_100004fc, align 4
  store i32 268436740, i32* %lr.global-to-local, align 4
  %v2_10000500 = inttoptr i32 %v1_100004dc to i8*
  %v3_10000500 = call i32 @function_100095cc(i8* %v2_10000500, i32 %v0_100004e4)
  store i32 %v3_10000500, i32* %r3.global-to-local, align 4
  %v0_10000504 = load i32, i32* @r31, align 4
  %v1_10000504 = add i32 %v0_10000504, 532
  %v2_10000504 = inttoptr i32 %v1_10000504 to i8*
  %v3_10000504 = load i8, i8* %v2_10000504, align 1
  %v4_10000504 = zext i8 %v3_10000504 to i32
  store i32 %v4_10000504, i32* %r0.global-to-local, align 4
  %v1_10000508 = icmp ult i8 %v3_10000504, 47
  %v2_10000508 = icmp ugt i8 %v3_10000504, 47
  %v3_10000508 = icmp eq i8 %v3_10000504, 47
  store i1 %v1_10000508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000508, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000508, label %dec_label_pc_10000530, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_100004c8
  %v0_10000510 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000510, i32* %r3.global-to-local, align 4
  store i32 268436760, i32* @lr, align 4
  %v1_10000514 = inttoptr i32 %v0_10000510 to i8*
  %v2_10000514 = call i32 @function_100095a4(i8* %v1_10000514)
  %v0_10000518 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000518, i32* %r4.global-to-local, align 4
  %v0_10000520 = load i32, i32* @r31, align 4
  %v1_10000520 = add i32 %v0_10000520, 533
  store i32 %v1_10000520, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000528.19 to i32), i32* @lr, align 4
  %v3_10000524 = call i32 @function_1000a500(i32 %v1_10000520, i32 %v0_10000518, i32 %v2_10000514)
  store i32 %v3_10000524, i32* %r3.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_1000052c = load i32, i32* @r31, align 4
  %v3_1000052c = add i32 %v2_1000052c, 532
  %v4_1000052c = inttoptr i32 %v3_1000052c to i8*
  store i8 47, i8* %v4_1000052c, align 1
  %v0_10000534.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10000530

dec_label_pc_10000530:                            ; preds = %dec_label_pc_100004c8, %dec_label_pc_10000510
  %v0_10000534 = phi i32 [ %v0_10000504, %dec_label_pc_100004c8 ], [ %v0_10000534.pre, %dec_label_pc_10000510 ]
  %v0_10000530 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000530, i32* %r4.global-to-local, align 4
  %v1_10000534 = add i32 %v0_10000534, 1440
  store i32 %v1_10000534, i32* @r3, align 4
  store i32 268436796, i32* %lr.global-to-local, align 4
  %v2_10000538 = inttoptr i32 %v1_10000534 to i8*
  %v3_10000538 = call i32 @function_100095cc(i8* %v2_10000538, i32 %v0_10000530)
  %v0_1000053c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000053c, i32* %r4.global-to-local, align 4
  %v0_10000540 = load i32, i32* @r31, align 4
  %v1_10000540 = add i32 %v0_10000540, 1431
  store i32 %v1_10000540, i32* @r3, align 4
  store i32 268436808, i32* %lr.global-to-local, align 4
  %v2_10000544 = inttoptr i32 %v1_10000540 to i8*
  %v3_10000544 = call i32 @function_100095cc(i8* %v2_10000544, i32 %v0_1000053c)
  %v0_10000548 = load i32, i32* @r31, align 4
  %v1_10000548 = add i32 %v0_10000548, 789
  store i32 %v1_10000548, i32* @r3, align 4
  %v0_1000054c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000054c, i32* %r4.global-to-local, align 4
  store i32 268436820, i32* %lr.global-to-local, align 4
  %v2_10000550 = inttoptr i32 %v1_10000548 to i8*
  %v3_10000550 = call i32 @function_100095cc(i8* %v2_10000550, i32 %v0_1000054c)
  store i32 %v3_10000550, i32* %r3.global-to-local, align 4
  %v0_10000554 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000554 = add i32 %v0_10000554, 20
  %v2_10000554 = inttoptr i32 %v1_10000554 to i8*
  %v3_10000554 = load i8, i8* %v2_10000554, align 1
  %v4_10000554 = zext i8 %v3_10000554 to i32
  store i32 %v4_10000554, i32* %r0.global-to-local, align 4
  %v1_10000558 = icmp ult i8 %v3_10000554, 31
  %v2_10000558 = icmp ugt i8 %v3_10000554, 31
  %v3_10000558 = icmp eq i8 %v3_10000554, 31
  store i1 %v1_10000558, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000558, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000558, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000558, label %dec_label_pc_10000578, label %dec_label_pc_10000560

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000530
  %v1_10000560 = add i32 %v0_10000554, 16
  %v2_10000560 = inttoptr i32 %v1_10000560 to i32*
  %v3_10000560 = load i32, i32* %v2_10000560, align 4
  store i32 %v3_10000560, i32* %r29.global-to-local, align 4
  store i32 268436840, i32* %lr.global-to-local, align 4
  %v0_10000564 = call i32 @function_10006dc0()
  store i32 %v0_10000564, i32* %r3.global-to-local, align 4
  %v0_10000568 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 20
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v4_10000568, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000568, 64
  %v2_1000056c = zext i8 %tmp to i32
  %v3_1000056c = lshr i32 %v0_10000564, %v2_1000056c
  store i32 %v3_1000056c, i32* %r3.global-to-local, align 4
  %v0_10000570 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000570 = add i32 %v3_1000056c, %v0_10000570
  store i32 %v2_10000570, i32* %r29.global-to-local, align 4
  %v1_10000574 = load i32, i32* @r31, align 4
  %v2_10000574 = add i32 %v1_10000574, 16
  %v3_10000574 = inttoptr i32 %v2_10000574 to i32*
  store i32 %v2_10000570, i32* %v3_10000574, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000530, %dec_label_pc_10000560
  store i32 ptrtoint (i32* @global_var_1000057c.20 to i32), i32* %lr.global-to-local, align 4
  %v0_10000578 = call i32 @function_10006dc0()
  %v1_10000578 = sext i32 %v0_10000578 to i64
  %v5_10000584 = mul nuw nsw i64 %v1_10000578, 3435973837
  %v1_100005881 = udiv i64 %v5_10000584, 17179869184
  %v1_10000588 = trunc i64 %v1_100005881 to i32
  %v1_1000058c = mul i32 %v1_10000588, 5
  store i32 %v1_1000058c, i32* %r0.global-to-local, align 4
  %v3_10000590 = sub i32 %v0_10000578, %v1_1000058c
  store i32 %v3_10000590, i32* %r3.global-to-local, align 4
  %v1_10000594 = icmp ult i32 %v3_10000590, 4
  %v2_10000594 = icmp ugt i32 %v3_10000590, 4
  %v3_10000594 = icmp eq i32 %v3_10000590, 4
  store i1 %v1_10000594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000594, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000594, label %dec_label_pc_10001c70, label %dec_label_pc_1000059c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_10000578
  store i32 ptrtoint (i32* @global_var_1000c68c.21 to i32), i32* %r9.global-to-local, align 4
  %v1_100005a0 = mul i32 %v3_10000590, 4
  store i32 %v1_100005a0, i32* %r11.global-to-local, align 4
  %v2_100005a4 = add i32 %v1_100005a0, ptrtoint (i32* @global_var_1000c68c.21 to i32)
  %v3_100005a4 = inttoptr i32 %v2_100005a4 to i32*
  %v4_100005a4 = load i32, i32* %v3_100005a4, align 4
  %v2_100005a8 = add i32 %v4_100005a4, ptrtoint (i32* @global_var_1000c68c.21 to i32)
  store i32 %v2_100005a8, i32* %r0.global-to-local, align 4
  store i32 %v2_100005a8, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100005a8)
  br label %dec_label_pc_100005b4

dec_label_pc_100005b4:                            ; preds = %dec_label_pc_1000043c, %dec_label_pc_1000059c
  %v0_100005b4 = load i32, i32* @r1, align 4
  %v1_100005b4 = add i32 %v0_100005b4, 20804
  %v2_100005b4 = inttoptr i32 %v1_100005b4 to i32*
  %v3_100005b4 = load i32, i32* %v2_100005b4, align 4
  store i32 %v3_100005b4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

dec_label_pc_100005c4.preheader:                  ; preds = %dec_label_pc_100005b4, %dec_label_pc_10001c8c
  %storemerge9.in = phi i32 [ %v0_100005b4, %dec_label_pc_100005b4 ], [ %v0_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge.in = phi i32 [ %v3_100005b4, %dec_label_pc_100005b4 ], [ %v3_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge10 = add i32 %storemerge9.in, 8
  store i32 %storemerge10, i32* %r18.global-to-local, align 4
  %storemerge9 = add i32 %storemerge9.in, 300
  store i32 %storemerge9, i32* %r22.global-to-local, align 4
  %storemerge = icmp eq i32 %storemerge.in, 0
  store i1 %storemerge, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100005c4

dec_label_pc_100005c4:                            ; preds = %dec_label_pc_1000079c, %dec_label_pc_10000794, %dec_label_pc_10000610, %dec_label_pc_10000824, %dec_label_pc_100005c4.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100005cc.22 to i32), i32* @lr, align 4
  %v0_100005c8 = call i32 @function_1000a1b8()
  store i32 %v0_100005c8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v0_100005c8, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 44, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100005e895 = load i32, i32* @r1, align 4
  %v3_100005e896 = add i32 %v2_100005e895, 44
  %v4_100005e897 = inttoptr i32 %v3_100005e896 to i32*
  store i32 0, i32* %v4_100005e897, align 4
  %v0_100005ec98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec99 = add i32 %v0_100005ec98, -1
  store i32 %v1_100005ec99, i32* %ctr.global-to-local, align 4
  %v2_100005ec100 = icmp eq i32 %v1_100005ec99, 0
  br i1 %v2_100005ec100, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge: ; preds = %dec_label_pc_100005c4, %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge
  %v0_100005e0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100005e8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100005e0 = add i32 %v0_100005e0.pre, 44
  store i32 %v1_100005e0, i32* %r11.global-to-local, align 4
  %v1_100005e4 = add i32 %v0_100005e0.pre, 4
  store i32 %v1_100005e4, i32* %r9.global-to-local, align 4
  %v2_100005e8 = load i32, i32* @r1, align 4
  %v3_100005e8 = add i32 %v2_100005e8, %v1_100005e0
  %v4_100005e8 = inttoptr i32 %v3_100005e8 to i32*
  store i32 %v0_100005e8.pre, i32* %v4_100005e8, align 4
  %v0_100005ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec = add i32 %v0_100005ec, -1
  store i32 %v1_100005ec, i32* %ctr.global-to-local, align 4
  %v2_100005ec = icmp eq i32 %v1_100005ec, 0
  br i1 %v2_100005ec, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, %dec_label_pc_100005c4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 172, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10000608101 = load i32, i32* @r1, align 4
  %v3_10000608102 = add i32 %v2_10000608101, 172
  %v4_10000608103 = inttoptr i32 %v3_10000608102 to i32*
  store i32 0, i32* %v4_10000608103, align 4
  %v0_1000060c104 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c105 = add i32 %v0_1000060c104, -1
  store i32 %v1_1000060c105, i32* %ctr.global-to-local, align 4
  %v2_1000060c106 = icmp eq i32 %v1_1000060c105, 0
  br i1 %v2_1000060c106, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000600.dec_label_pc_10000600_crit_edge: ; preds = %dec_label_pc_100005f0, %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge
  %v0_10000600.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10000608.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10000600 = add i32 %v0_10000600.pre, 172
  store i32 %v1_10000600, i32* %r11.global-to-local, align 4
  %v1_10000604 = add i32 %v0_10000600.pre, 4
  store i32 %v1_10000604, i32* %r9.global-to-local, align 4
  %v2_10000608 = load i32, i32* @r1, align 4
  %v3_10000608 = add i32 %v2_10000608, %v1_10000600
  %v4_10000608 = inttoptr i32 %v3_10000608 to i32*
  store i32 %v0_10000608.pre, i32* %v4_10000608, align 4
  %v0_1000060c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c = add i32 %v0_1000060c, -1
  store i32 %v1_1000060c, i32* %ctr.global-to-local, align 4
  %v2_1000060c = icmp eq i32 %v1_1000060c, 0
  br i1 %v2_1000060c, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000610:                            ; preds = %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, %dec_label_pc_100005f0
  %v0_10000610 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000610 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000610 = or i1 %v0_10000610, %v1_10000610
  br i1 %v2_10000610, label %dec_label_pc_100005c4, label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_10000610
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_1000061c = load i32, i32* @r1, align 4
  %v1_1000061c = add i32 %v0_1000061c, 20796
  %v2_1000061c = inttoptr i32 %v1_1000061c to i32*
  %v3_1000061c = load i32, i32* %v2_1000061c, align 4
  store i32 %v3_1000061c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c640.23 to i32), i32* %r16.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32* %r24.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 1, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_10000688

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000694
  %v2_10000640 = icmp ugt i8 %v3_10000688, 2
  %v3_10000640 = icmp eq i8 %v3_10000688, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000640, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000640, label %dec_label_pc_10000c94, label %dec_label_pc_10000648

dec_label_pc_10000648:                            ; preds = %dec_label_pc_10000640
  %v1_10000648 = icmp ult i8 %v3_10000688, 4
  %v2_10000648 = icmp ugt i8 %v3_10000688, 4
  %v3_10000648 = icmp eq i8 %v3_10000688, 4
  store i1 %v1_10000648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000648, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000648, label %dec_label_pc_100008b0, label %dec_label_pc_10000650

dec_label_pc_10000650:                            ; preds = %dec_label_pc_10000648
  %v1_10000650 = icmp ult i8 %v3_10000688, 6
  %v2_10000650 = icmp ugt i8 %v3_10000688, 6
  %v3_10000650 = icmp eq i8 %v3_10000688, 6
  store i1 %v1_10000650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000650, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000650, label %dec_label_pc_10000c5c, label %dec_label_pc_10000658

dec_label_pc_10000658:                            ; preds = %dec_label_pc_10000650
  %v1_10000658 = icmp ult i8 %v3_10000688, 7
  %v2_10000658 = icmp ugt i8 %v3_10000688, 7
  %v3_10000658 = icmp eq i8 %v3_10000688, 7
  store i1 %v1_10000658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000658, label %dec_label_pc_10000c5c, label %dec_label_pc_10000660

dec_label_pc_10000660:                            ; preds = %dec_label_pc_10000658
  %v1_10000660 = icmp ult i8 %v3_10000688, 10
  %v2_10000660 = icmp ugt i8 %v3_10000688, 10
  %v3_10000660 = icmp eq i8 %v3_10000688, 10
  store i1 %v1_10000660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000660, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000660, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000660, label %dec_label_pc_10000c5c, label %dec_label_pc_10000668

dec_label_pc_10000668:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_10000660
  %v1_10000668 = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000668 = load i32, i32* %v1_10000668, align 4
  store i32 %v2_10000668, i32* %r3.global-to-local, align 4
  %v0_1000066c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000066c = trunc i32 %v0_1000066c to i8
  store i8 %v1_1000066c, i8* %v2_10000688, align 1
  store i32 268437108, i32* @lr, align 4
  %v0_10000670 = call i32 @function_10009de8()
  store i32 %v0_10000670, i32* %r3.global-to-local, align 4
  %v0_10000674 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000674 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000674 = inttoptr i32 %v1_10000674 to i32*
  store i32 %v0_10000674, i32* %v2_10000674, align 4
  br label %dec_label_pc_10000678

dec_label_pc_10000678:                            ; preds = %dec_label_pc_10000758, %dec_label_pc_10000c5c, %dec_label_pc_10000c00, %dec_label_pc_100006c0, %dec_label_pc_10000668
  %v0_10000678 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000678 = add i32 %v0_10000678, 1
  store i32 %v1_10000678, i32* %r28.global-to-local, align 4
  %v0_1000067c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000067c = add i32 %v0_1000067c, 3140
  store i32 %v1_1000067c, i32* %r30.global-to-local, align 4
  %v0_10000680 = load i32, i32* %r21.global-to-local, align 4
  %v2_10000680 = icmp slt i32 %v0_10000680, %v1_10000678
  %v3_10000680 = icmp sgt i32 %v0_10000680, %v1_10000678
  %v4_10000680 = icmp eq i32 %v0_10000680, %v1_10000678
  store i1 %v2_10000680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000680, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000680, label %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge, label %dec_label_pc_10000688

dec_label_pc_10000678.dec_label_pc_10000794_crit_edge: ; preds = %dec_label_pc_10000678
  %v0_10000794.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000794

dec_label_pc_10000688:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678, %dec_label_pc_10000614
  %v2_10000c8c = phi i32 [ %v3_1000061c, %dec_label_pc_10000614 ], [ %v1_1000067c, %dec_label_pc_10000678 ], [ %v1_10000788, %dec_label_pc_10000784 ]
  %v1_10000688 = add i32 %v2_10000c8c, 4
  %v2_10000688 = inttoptr i32 %v1_10000688 to i8*
  %v3_10000688 = load i8, i8* %v2_10000688, align 1
  %v4_10000688 = zext i8 %v3_10000688 to i32
  store i32 %v4_10000688, i32* %r0.global-to-local, align 4
  %v1_1000068c = icmp eq i8 %v3_10000688, 0
  %v2_1000068c = icmp ugt i8 %v3_10000688, 1
  %v3_1000068c = icmp eq i8 %v3_10000688, 1
  store i1 %v1_1000068c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000068c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000068c, label %dec_label_pc_1000089c, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %dec_label_pc_10000688
  %v2_10000694 = icmp ne i8 %v3_10000688, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000694, i1* %cr7_gt.global-to-local, align 1
  store i1 %v1_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000068c, label %dec_label_pc_1000069c, label %dec_label_pc_10000640

dec_label_pc_1000069c:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_10000c8c
  %v0_1000069c = phi i32 [ %v2_10000c8c, %dec_label_pc_10000694 ], [ %v0_1000069c.pre, %dec_label_pc_10000c8c ]
  %v1_1000069c = inttoptr i32 %v0_1000069c to i32*
  %v2_1000069c = load i32, i32* %v1_1000069c, align 4
  store i32 %v2_1000069c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100006a4 = load i32, i32* @r1, align 4
  %v2_100006a4 = add i32 %v1_100006a4, 40
  %v3_100006a4 = inttoptr i32 %v2_100006a4 to i32*
  store i32 0, i32* %v3_100006a4, align 4
  %v0_100006a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100006a8 = icmp slt i32 %v0_100006a8, -1
  %v2_100006a8 = icmp sgt i32 %v0_100006a8, -1
  %v3_100006a8 = icmp eq i32 %v0_100006a8, -1
  store i1 %v1_100006a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006a8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006a8, i1* %cr7_eq.global-to-local, align 1
  %v0_100006ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100006ac = load i32, i32* @r1, align 4
  %v2_100006ac = add i32 %v1_100006ac, 28
  %v3_100006ac = inttoptr i32 %v2_100006ac to i32*
  store i32 %v0_100006ac, i32* %v3_100006ac, align 4
  %v0_100006b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b0 = load i32, i32* @r1, align 4
  %v2_100006b0 = add i32 %v1_100006b0, 32
  %v3_100006b0 = inttoptr i32 %v2_100006b0 to i32*
  store i32 %v0_100006b0, i32* %v3_100006b0, align 4
  %v0_100006b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b4 = load i32, i32* @r1, align 4
  %v2_100006b4 = add i32 %v1_100006b4, 36
  %v3_100006b4 = inttoptr i32 %v2_100006b4 to i32*
  store i32 %v0_100006b4, i32* %v3_100006b4, align 4
  br i1 %v3_100006a8, label %dec_label_pc_100006c0, label %dec_label_pc_100006bc

dec_label_pc_100006bc:                            ; preds = %dec_label_pc_1000069c
  store i32 ptrtoint ([3 x i8]* @global_var_100006c0.25 to i32), i32* @lr, align 4
  %v0_100006bc = call i32 @function_10009de8()
  store i32 %v0_100006bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_1000069c, %dec_label_pc_100006bc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 268437200, i32* @lr, align 4
  %v3_100006cc = call i32 @function_1000aaf0(i32 2, i32 1, i32 0)
  store i32 %v3_100006cc, i32* %r3.global-to-local, align 4
  %v1_100006d0 = icmp slt i32 %v3_100006cc, -1
  %v2_100006d0 = icmp sgt i32 %v3_100006cc, -1
  %v3_100006d0 = icmp eq i32 %v3_100006cc, -1
  store i1 %v1_100006d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100006cc, i32* @r31, align 4
  %v1_100006d8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100006d8 = inttoptr i32 %v1_100006d8 to i32*
  store i32 %v3_100006cc, i32* %v2_100006d8, align 4
  br i1 %v3_100006d0, label %dec_label_pc_10000678, label %dec_label_pc_100006e0

dec_label_pc_100006e0:                            ; preds = %dec_label_pc_100006c0
  store i32 3, i32* @r4, align 4
  store i32 268437232, i32* @lr, align 4
  %v1_100006ec = call i32 @function_10009d00(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100006f8 = load i32, i32* @r31, align 4
  store i32 %v0_100006f8, i32* %r3.global-to-local, align 4
  store i32 268437252, i32* @lr, align 4
  %v2_10000700 = call i32 @function_10009d00(i32 %v0_100006f8)
  store i32 %v2_10000700, i32* %r3.global-to-local, align 4
  %v0_10000704 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000704 = inttoptr i32 %v0_10000704 to i32*
  %v2_10000704 = load i32, i32* %v1_10000704, align 4
  store i32 %v2_10000704, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 65535, i32* %r11.global-to-local, align 4
  %v0_10000718 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000720 = load i32, i32* @r1, align 4
  %v2_10000720 = add i32 %v1_10000720, 8
  %v3_10000720 = inttoptr i32 %v2_10000720 to i32*
  store i32 65535, i32* %v3_10000720, align 4
  store i32 268437288, i32* @lr, align 4
  %v5_10000724 = call i32 @function_1000aab4(i32 %v2_10000704, i32 0, i32 8, i32 %v0_10000718, i32 4)
  store i32 %v5_10000724, i32* %r3.global-to-local, align 4
  %v0_10000728 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000728 = add i32 %v0_10000728, 16
  %v2_10000728 = inttoptr i32 %v1_10000728 to i32*
  %v3_10000728 = load i32, i32* %v2_10000728, align 4
  store i32 %v3_10000728, i32* %r9.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000730 = inttoptr i32 %v0_10000728 to i32*
  %v2_10000730 = load i32, i32* %v1_10000730, align 4
  store i32 %v2_10000730, i32* @r3, align 4
  %v0_10000734 = load i32, i32* @r1, align 4
  %v1_10000734 = add i32 %v0_10000734, 28
  store i32 %v1_10000734, i32* %r4.global-to-local, align 4
  %v2_10000738 = add i32 %v0_10000734, 32
  %v3_10000738 = inttoptr i32 %v2_10000738 to i32*
  store i32 %v3_10000728, i32* %v3_10000738, align 4
  %v0_10000740 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000740 = trunc i32 %v0_10000740 to i8
  %v2_10000740 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000740 = add i32 %v2_10000740, 4
  %v4_10000740 = inttoptr i32 %v3_10000740 to i8*
  store i8 %v1_10000740, i8* %v4_10000740, align 1
  %v0_10000744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000744 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000744 = add i32 %v1_10000744, 8
  %v3_10000744 = inttoptr i32 %v2_10000744 to i32*
  store i32 %v0_10000744, i32* %v3_10000744, align 4
  %v0_10000748 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000748 = trunc i32 %v0_10000748 to i16
  %v2_10000748 = load i32, i32* @r1, align 4
  %v3_10000748 = add i32 %v2_10000748, 28
  %v4_10000748 = inttoptr i32 %v3_10000748 to i16*
  store i16 %v1_10000748, i16* %v4_10000748, align 2
  %v0_1000074c = load i32, i32* @r1, align 4
  %v1_1000074c = add i32 %v0_1000074c, 20800
  %v2_1000074c = inttoptr i32 %v1_1000074c to i32*
  %v3_1000074c = load i32, i32* %v2_1000074c, align 4
  store i32 %v3_1000074c, i32* %r0.global-to-local, align 4
  %v1_10000750 = trunc i32 %v3_1000074c to i16
  %v3_10000750 = add i32 %v0_1000074c, 30
  %v4_10000750 = inttoptr i32 %v3_10000750 to i16*
  store i16 %v1_10000750, i16* %v4_10000750, align 2
  store i32 268437336, i32* @lr, align 4
  %v0_10000754 = call i32 @function_1000a8f0()
  store i32 %v0_10000754, i32* %r3.global-to-local, align 4
  %v0_10000758.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10000758

dec_label_pc_10000758:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_100006e0
  %v0_10000758 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000c94 ], [ %v0_10000758.pre, %dec_label_pc_100006e0 ]
  %v1_10000758 = inttoptr i32 %v0_10000758 to i32*
  %v2_10000758 = load i32, i32* %v1_10000758, align 4
  %v1_1000075c = call i32 @__asm_rlwinm(i32 %v2_10000758, i32 29, i32 3, i32 29)
  %v0_10000760 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000760 = icmp slt i32 %v0_10000760, %v2_10000758
  %v3_10000760 = icmp sgt i32 %v0_10000760, %v2_10000758
  %v4_10000760 = icmp eq i32 %v0_10000760, %v2_10000758
  store i1 %v2_10000760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000760, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000760, i1* %cr7_eq.global-to-local, align 1
  %v1_10000764 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000764 = add i32 %v1_10000764, %v1_1000075c
  store i32 %v2_10000764, i32* %r11.global-to-local, align 4
  %v1_10000768 = urem i32 %v2_10000758, 32
  store i32 %v1_10000768, i32* %r0.global-to-local, align 4
  %v1_1000076c = add i32 %v2_10000764, 164
  %v2_1000076c = inttoptr i32 %v1_1000076c to i32*
  %v3_1000076c = load i32, i32* %v2_1000076c, align 4
  %v0_10000770 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000770 = shl i32 %v0_10000770, %v1_10000768
  store i32 %v3_10000770, i32* %r0.global-to-local, align 4
  %v2_10000774 = or i32 %v3_10000770, %v3_1000076c
  store i32 %v2_10000774, i32* %r9.global-to-local, align 4
  store i32 %v2_10000774, i32* %v2_1000076c, align 4
  br i1 %v2_10000760, label %dec_label_pc_10000780, label %dec_label_pc_10000678

dec_label_pc_10000780:                            ; preds = %dec_label_pc_10000758
  %v1_10000780 = add i32 %v2_10000758, 1
  store i32 %v1_10000780, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000784:                            ; preds = %dec_label_pc_10000c84, %dec_label_pc_10000c54, %dec_label_pc_10000780
  %v0_1000079425 = phi i32 [ %v1_10000c84, %dec_label_pc_10000c84 ], [ %v1_10000c54, %dec_label_pc_10000c54 ], [ %v1_10000780, %dec_label_pc_10000780 ]
  %v0_10000784 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000784 = add i32 %v0_10000784, 1
  store i32 %v1_10000784, i32* %r28.global-to-local, align 4
  %v0_10000788 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000788 = add i32 %v0_10000788, 3140
  store i32 %v1_10000788, i32* %r30.global-to-local, align 4
  %v0_1000078c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000078c = icmp slt i32 %v0_1000078c, %v1_10000784
  %v3_1000078c = icmp sgt i32 %v0_1000078c, %v1_10000784
  %v4_1000078c = icmp eq i32 %v0_1000078c, %v1_10000784
  store i1 %v2_1000078c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000078c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000078c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000078c, label %dec_label_pc_10000794, label %dec_label_pc_10000688

dec_label_pc_10000794:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge
  %v0_100007b4 = phi i32 [ %v0_10000794.pre, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge ], [ %v0_1000079425, %dec_label_pc_10000784 ]
  %v1_10000794 = icmp slt i32 %v0_100007b4, 0
  %v2_10000794 = icmp sgt i32 %v0_100007b4, 0
  %v3_10000794 = icmp eq i32 %v0_100007b4, 0
  store i1 %v1_10000794, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000794, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000794, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000794, label %dec_label_pc_100005c4, label %dec_label_pc_1000079c

dec_label_pc_1000079c:                            ; preds = %dec_label_pc_10000794
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100007a4 = load i32, i32* @r1, align 4
  %v1_100007a4 = add i32 %v0_100007a4, 44
  store i32 %v1_100007a4, i32* %r4.global-to-local, align 4
  %v1_100007a8 = add i32 %v0_100007a4, 172
  %v1_100007b0 = add i32 %v0_100007a4, 20
  store i32 %v0_100007b4, i32* %r3.global-to-local, align 4
  %v2_100007b8 = add i32 %v0_100007a4, 24
  %v3_100007b8 = inttoptr i32 %v2_100007b8 to i32*
  store i32 0, i32* %v3_100007b8, align 4
  %v0_100007bc = load i32, i32* %r9.global-to-local, align 4
  %v1_100007bc = load i32, i32* @r1, align 4
  %v2_100007bc = add i32 %v1_100007bc, 20
  %v3_100007bc = inttoptr i32 %v2_100007bc to i32*
  store i32 %v0_100007bc, i32* %v3_100007bc, align 4
  store i32 268437444, i32* @lr, align 4
  %v5_100007c0 = call i32 @function_1000a0b0(i32 %v0_100007b4, i32 %v1_100007a4, i32 %v1_100007a8, i32 0, i32 %v1_100007b0)
  store i32 %v5_100007c0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268437456, i32* @lr, align 4
  %v0_100007cc = call i32 @function_1000a1b8()
  store i32 %v0_100007cc, i32* %r3.global-to-local, align 4
  %v0_100007d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100007d0 = icmp slt i32 %v0_100007d0, 0
  %v2_100007d0 = icmp sgt i32 %v0_100007d0, 0
  %v3_100007d0 = icmp eq i32 %v0_100007d0, 0
  store i1 %v1_100007d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100007d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100007d0, i1* %cr7_eq.global-to-local, align 1
  %v1_100007d4 = load i32, i32* @r1, align 4
  %v2_100007d4 = add i32 %v1_100007d4, 20792
  %v3_100007d4 = inttoptr i32 %v2_100007d4 to i32*
  store i32 %v0_100007cc, i32* %v3_100007d4, align 4
  %tmp66 = icmp slt i32 %v0_100007d0, 1
  br i1 %tmp66, label %dec_label_pc_100005c4, label %dec_label_pc_100007dc

dec_label_pc_100007dc:                            ; preds = %dec_label_pc_1000079c
  %v0_100007dc = load i32, i32* @r1, align 4
  %v1_100007dc = add i32 %v0_100007dc, 20796
  %v2_100007dc = inttoptr i32 %v1_100007dc to i32*
  %v3_100007dc = load i32, i32* %v2_100007dc, align 4
  store i32 %v3_100007dc, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  %v1_100007e4 = add i32 %v3_100007dc, 533
  store i32 %v1_100007e4, i32* @r30, align 4
  br label %dec_label_pc_10000838

dec_label_pc_100007ec:                            ; preds = %dec_label_pc_10000844, %dec_label_pc_10000890
  %v0_100007ec = phi i32 [ %v0_10000848, %dec_label_pc_10000844 ], [ %v0_100007ec.pre, %dec_label_pc_10000890 ]
  %v1_100007ec = call i32 @__asm_rlwinm(i32 %v0_100007ec, i32 29, i32 3, i32 29)
  %v0_100007f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100007f0 = urem i32 %v0_100007f0, 32
  store i32 %v1_100007f0, i32* %r11.global-to-local, align 4
  %v1_100007f4 = load i32, i32* %r18.global-to-local, align 4
  %v2_100007f4 = add i32 %v1_100007f4, %v1_100007ec
  store i32 %v2_100007f4, i32* %r9.global-to-local, align 4
  %v1_100007f8 = add i32 %v2_100007f4, 36
  %v2_100007f8 = inttoptr i32 %v1_100007f8 to i32*
  %v3_100007f8 = load i32, i32* %v2_100007f8, align 4
  %v3_100007fc = lshr i32 %v3_100007f8, %v1_100007f0
  store i32 %v3_100007fc, i32* %r0.global-to-local, align 4
  %v1_10000800 = urem i32 %v3_100007fc, 2
  store i32 %v1_10000800, i32* %r9.global-to-local, align 4
  %v3_10000800 = icmp eq i32 %v1_10000800, 0
  br i1 %v3_10000800, label %dec_label_pc_10000824, label %dec_label_pc_10000808

dec_label_pc_10000808:                            ; preds = %dec_label_pc_100007ec
  %v0_10000808 = load i32, i32* @r30, align 4
  %v1_10000808 = add i32 %v0_10000808, -529
  %v2_10000808 = inttoptr i32 %v1_10000808 to i8*
  %v3_10000808 = load i8, i8* %v2_10000808, align 1
  %v4_10000808 = zext i8 %v3_10000808 to i32
  store i32 %v4_10000808, i32* %r0.global-to-local, align 4
  %v1_1000080c = icmp ult i8 %v3_10000808, 6
  %v2_1000080c = icmp ugt i8 %v3_10000808, 6
  %v3_1000080c = icmp eq i8 %v3_10000808, 6
  store i1 %v1_1000080c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000080c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000080c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000080c, label %dec_label_pc_10000ca8, label %dec_label_pc_10000814

dec_label_pc_10000814:                            ; preds = %dec_label_pc_10000808
  %v1_10000814 = icmp ult i8 %v3_10000808, 7
  %v2_10000814 = icmp ugt i8 %v3_10000808, 7
  %v3_10000814 = icmp eq i8 %v3_10000808, 7
  store i1 %v1_10000814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000814, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000814, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000814, label %dec_label_pc_10001294, label %dec_label_pc_1000081c

dec_label_pc_1000081c:                            ; preds = %dec_label_pc_10000814
  %v1_1000081c = icmp ult i8 %v3_10000808, 10
  %v2_1000081c = icmp ugt i8 %v3_10000808, 10
  %v3_1000081c = icmp eq i8 %v3_10000808, 10
  store i1 %v1_1000081c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000081c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000081c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000081c, label %dec_label_pc_10001518, label %dec_label_pc_10000824

dec_label_pc_10000824:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_100013b0, %dec_label_pc_1000190c, %dec_label_pc_100017d4, %dec_label_pc_1000081c, %dec_label_pc_100007ec, %dec_label_pc_10000838, %dec_label_pc_10001b70, %dec_label_pc_100019ac, %dec_label_pc_100018f0, %dec_label_pc_100017bc, %dec_label_pc_10001758, %dec_label_pc_10001558, %dec_label_pc_100014f0, %dec_label_pc_10001414, %dec_label_pc_100011e4
  %v0_10000824 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 1
  store i32 %v1_10000824, i32* %r19.global-to-local, align 4
  %v0_10000828 = load i32, i32* %r23.global-to-local, align 4
  %v1_10000828 = add i32 %v0_10000828, 3140
  store i32 %v1_10000828, i32* %r23.global-to-local, align 4
  %v1_1000082c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000082c = icmp slt i32 %v1_10000824, %v1_1000082c
  %v3_1000082c = icmp sgt i32 %v1_10000824, %v1_1000082c
  %v4_1000082c = icmp eq i32 %v1_10000824, %v1_1000082c
  store i1 %v2_1000082c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000082c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000082c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000830 = load i32, i32* @r30, align 4
  %v1_10000830 = add i32 %v0_10000830, 3140
  store i32 %v1_10000830, i32* @r30, align 4
  br i1 %v4_1000082c, label %dec_label_pc_100005c4, label %dec_label_pc_10000838

dec_label_pc_10000838:                            ; preds = %dec_label_pc_10000824, %dec_label_pc_100007dc
  %v0_10000838 = phi i32 [ %v1_10000830, %dec_label_pc_10000824 ], [ %v1_100007e4, %dec_label_pc_100007dc ]
  %v1_10000838 = add i32 %v0_10000838, -533
  %v2_10000838 = inttoptr i32 %v1_10000838 to i32*
  %v3_10000838 = load i32, i32* %v2_10000838, align 4
  store i32 %v3_10000838, i32* %r3.global-to-local, align 4
  %v1_1000083c = icmp slt i32 %v3_10000838, -1
  %v2_1000083c = icmp sgt i32 %v3_10000838, -1
  %v3_1000083c = icmp eq i32 %v3_10000838, -1
  store i1 %v1_1000083c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000083c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000083c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000083c, label %dec_label_pc_10000824, label %dec_label_pc_10000844

dec_label_pc_10000844:                            ; preds = %dec_label_pc_10000838
  %v1_10000844 = call i32 @__asm_rlwinm(i32 %v3_10000838, i32 29, i32 3, i32 29)
  %v0_10000848 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000848 = urem i32 %v0_10000848, 32
  store i32 %v1_10000848, i32* %r11.global-to-local, align 4
  %v1_1000084c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000084c = add i32 %v1_1000084c, %v1_10000844
  store i32 %v2_1000084c, i32* %r9.global-to-local, align 4
  %v1_10000850 = add i32 %v2_1000084c, 164
  %v2_10000850 = inttoptr i32 %v1_10000850 to i32*
  %v3_10000850 = load i32, i32* %v2_10000850, align 4
  %v3_10000854 = lshr i32 %v3_10000850, %v1_10000848
  store i32 %v3_10000854, i32* %r0.global-to-local, align 4
  %v1_10000858 = urem i32 %v3_10000854, 2
  store i32 %v1_10000858, i32* %r9.global-to-local, align 4
  %v3_10000858 = icmp eq i32 %v1_10000858, 0
  br i1 %v3_10000858, label %dec_label_pc_100007ec, label %dec_label_pc_10000860

dec_label_pc_10000860:                            ; preds = %dec_label_pc_10000844
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* @r31, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v0_10000870 = load i32, i32* @r1, align 4
  %v1_10000870 = add i32 %v0_10000870, 12
  %v1_10000874 = add i32 %v0_10000870, 16
  %v3_10000878 = inttoptr i32 %v1_10000870 to i32*
  store i32 0, i32* %v3_10000878, align 4
  %v0_1000087c = load i32, i32* @r31, align 4
  %v1_1000087c = load i32, i32* @r1, align 4
  %v2_1000087c = add i32 %v1_1000087c, 16
  %v3_1000087c = inttoptr i32 %v2_1000087c to i32*
  store i32 %v0_1000087c, i32* %v3_1000087c, align 4
  store i32 268437636, i32* @lr, align 4
  %v5_10000880 = call i32 @function_1000a958(i32 1, i32 4, i32 %v1_10000870, i32 %v1_10000874, i32 %v1_10000858)
  store i32 %v5_10000880, i32* %r3.global-to-local, align 4
  %v0_10000884 = load i32, i32* @r1, align 4
  %v1_10000884 = add i32 %v0_10000884, 12
  %v2_10000884 = inttoptr i32 %v1_10000884 to i32*
  %v3_10000884 = load i32, i32* %v2_10000884, align 4
  store i32 %v3_10000884, i32* %r0.global-to-local, align 4
  %v2_10000888 = or i32 %v3_10000884, %v5_10000880
  store i32 %v2_10000888, i32* %r9.global-to-local, align 4
  %v5_10000888 = icmp eq i32 %v2_10000888, 0
  %v0_10000890 = load i32, i32* @r30, align 4
  %v1_10000890 = add i32 %v0_10000890, -533
  %v2_10000890 = inttoptr i32 %v1_10000890 to i32*
  %v3_10000890 = load i32, i32* %v2_10000890, align 4
  store i32 %v3_10000890, i32* %r3.global-to-local, align 4
  br i1 %v5_10000888, label %dec_label_pc_10000890, label %dec_label_pc_100014f0

dec_label_pc_10000890:                            ; preds = %dec_label_pc_10000860
  %v0_10000894 = load i32, i32* @r31, align 4
  %v1_10000894 = trunc i32 %v0_10000894 to i8
  %v3_10000894 = add i32 %v0_10000890, -529
  %v4_10000894 = inttoptr i32 %v3_10000894 to i8*
  store i8 %v1_10000894, i8* %v4_10000894, align 1
  %v0_100007ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100007ec

dec_label_pc_1000089c:                            ; preds = %dec_label_pc_10000688
  %v1_1000089c = add i32 %v2_10000c8c, 1456
  %v2_1000089c = inttoptr i32 %v1_1000089c to i32*
  %v3_1000089c = load i32, i32* %v2_1000089c, align 4
  store i32 %v3_1000089c, i32* %r0.global-to-local, align 4
  %v1_100008a0 = icmp slt i32 %v3_1000089c, 0
  %v2_100008a0 = icmp sgt i32 %v3_1000089c, 0
  %v3_100008a0 = icmp eq i32 %v3_1000089c, 0
  store i1 %v1_100008a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100008a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100008a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100008a0, label %dec_label_pc_10000c8c, label %dec_label_pc_100008a8

dec_label_pc_100008a8:                            ; preds = %dec_label_pc_1000089c
  store i32 4, i32* %r0.global-to-local, align 4
  store i8 4, i8* %v2_10000688, align 1
  %v1_100008b4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100008b0

dec_label_pc_100008b0:                            ; preds = %dec_label_pc_10000648, %dec_label_pc_100008a8
  %v1_100008b4 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000648 ], [ %v1_100008b4.pre, %dec_label_pc_100008a8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100008b4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100008b4 = add i32 %v1_100008b4, 1464
  %v3_100008b4 = inttoptr i32 %v2_100008b4 to i32*
  store i32 %v0_100008b4, i32* %v3_100008b4, align 4
  %v0_100008b8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100008b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100008b8 = add i32 %v1_100008b8, 1452
  %v3_100008b8 = inttoptr i32 %v2_100008b8 to i32*
  store i32 %v0_100008b8, i32* %v3_100008b8, align 4
  %v0_100008bc = load i32, i32* %r30.global-to-local, align 4
  %v1_100008bc = add i32 %v0_100008bc, 2116
  store i32 %v1_100008bc, i32* @r3, align 4
  store i32 1024, i32* @r4, align 4
  %v1_100008c4 = add i32 %v0_100008bc, 1431
  store i32 %v1_100008c4, i32* %r27.global-to-local, align 4
  store i32 268437708, i32* @lr, align 4
  %v0_100008c8 = call i32 @function_1000964c()
  %v0_100008cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100008cc = load i32, i32* %r30.global-to-local, align 4
  %v2_100008cc = add i32 %v1_100008cc, 2112
  %v3_100008cc = inttoptr i32 %v2_100008cc to i32*
  store i32 %v0_100008cc, i32* %v3_100008cc, align 4
  store i32 10240, i32* @r4, align 4
  %v0_100008d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008d4, i32* @r3, align 4
  store i32 268437724, i32* @lr, align 4
  %v0_100008d8 = call i32 @function_1000964c()
  %v0_100008dc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008dc, i32* %r3.global-to-local, align 4
  store i32 268437732, i32* @lr, align 4
  %v1_100008e0 = inttoptr i32 %v0_100008dc to i8*
  %v2_100008e0 = call i32 @function_100095a4(i8* %v1_100008e0)
  %v0_100008e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100008e4, i32* %r4.global-to-local, align 4
  %v0_100008e8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100008e8 = add i32 %v0_100008e8, %v2_100008e0
  store i32 %v2_100008e8, i32* @r3, align 4
  store i32 268437744, i32* %lr.global-to-local, align 4
  %v2_100008ec = inttoptr i32 %v2_100008e8 to i8*
  %v3_100008ec = call i32 @function_100095cc(i8* %v2_100008ec, i32 %v0_100008e4)
  %v0_100008f0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008f0, i32* %r3.global-to-local, align 4
  store i32 268437752, i32* @lr, align 4
  %v1_100008f4 = inttoptr i32 %v0_100008f0 to i8*
  %v2_100008f4 = call i32 @function_100095a4(i8* %v1_100008f4)
  %v0_100008f8 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100008f8, i32* %r4.global-to-local, align 4
  %v0_100008fc = load i32, i32* %r22.global-to-local, align 4
  %v2_100008fc = add i32 %v0_100008fc, %v2_100008f4
  store i32 %v2_100008fc, i32* @r3, align 4
  store i32 268437764, i32* %lr.global-to-local, align 4
  %v2_10000900 = inttoptr i32 %v2_100008fc to i8*
  %v3_10000900 = call i32 @function_100095cc(i8* %v2_10000900, i32 %v0_100008f8)
  %v0_10000904 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000904, i32* %r3.global-to-local, align 4
  store i32 268437772, i32* @lr, align 4
  %v1_10000908 = inttoptr i32 %v0_10000904 to i8*
  %v2_10000908 = call i32 @function_100095a4(i8* %v1_10000908)
  %v0_1000090c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000090c = add i32 %v0_1000090c, 532
  store i32 %v1_1000090c, i32* %r4.global-to-local, align 4
  %v0_10000910 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000910 = add i32 %v0_10000910, %v2_10000908
  store i32 %v2_10000910, i32* @r3, align 4
  store i32 268437784, i32* %lr.global-to-local, align 4
  %v2_10000914 = inttoptr i32 %v2_10000910 to i8*
  %v3_10000914 = call i32 @function_100095cc(i8* %v2_10000914, i32 %v1_1000090c)
  %v0_10000918 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000918, i32* %r3.global-to-local, align 4
  store i32 268437792, i32* @lr, align 4
  %v1_1000091c = inttoptr i32 %v0_10000918 to i8*
  %v2_1000091c = call i32 @function_100095a4(i8* %v1_1000091c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000c618.26 to i32), i32* %r4.global-to-local, align 4
  %v0_10000928 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000928 = add i32 %v0_10000928, %v2_1000091c
  store i32 %v2_10000928, i32* @r3, align 4
  store i32 268437808, i32* %lr.global-to-local, align 4
  %v3_1000092c = inttoptr i32 %v2_10000928 to i8*
  %v4_1000092c = call i32 @function_100095cc(i8* %v3_1000092c, i32 ptrtoint ([24 x i8]* @global_var_1000c618.26 to i32))
  %v0_10000930 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000930, i32* %r3.global-to-local, align 4
  store i32 268437816, i32* @lr, align 4
  %v1_10000934 = inttoptr i32 %v0_10000930 to i8*
  %v2_10000934 = call i32 @function_100095a4(i8* %v1_10000934)
  %v0_10000938 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000938 = add i32 %v0_10000938, 20
  store i32 %v1_10000938, i32* %r4.global-to-local, align 4
  %v0_1000093c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000093c = add i32 %v0_1000093c, %v2_10000934
  store i32 %v2_1000093c, i32* @r3, align 4
  store i32 268437828, i32* %lr.global-to-local, align 4
  %v2_10000940 = inttoptr i32 %v2_1000093c to i8*
  %v3_10000940 = call i32 @function_100095cc(i8* %v2_10000940, i32 %v1_10000938)
  %v0_10000944 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000944, i32* %r3.global-to-local, align 4
  store i32 268437836, i32* @lr, align 4
  %v1_10000948 = inttoptr i32 %v0_10000944 to i8*
  %v2_10000948 = call i32 @function_100095a4(i8* %v1_10000948)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000c630.27 to i32), i32* %r4.global-to-local, align 4
  %v0_10000954 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000954 = add i32 %v0_10000954, %v2_10000948
  store i32 %v2_10000954, i32* @r3, align 4
  store i32 268437852, i32* %lr.global-to-local, align 4
  %v3_10000958 = inttoptr i32 %v2_10000954 to i8*
  %v4_10000958 = call i32 @function_100095cc(i8* %v3_10000958, i32 ptrtoint ([9 x i8]* @global_var_1000c630.27 to i32))
  %v0_1000095c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000095c, i32* %r3.global-to-local, align 4
  store i32 268437860, i32* @lr, align 4
  %v1_10000960 = inttoptr i32 %v0_1000095c to i8*
  %v2_10000960 = call i32 @function_100095a4(i8* %v1_10000960)
  %v0_10000964 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000964 = add i32 %v0_10000964, 789
  store i32 %v1_10000964, i32* %r4.global-to-local, align 4
  %v0_10000968 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000968 = add i32 %v0_10000968, %v2_10000960
  store i32 %v2_10000968, i32* @r3, align 4
  store i32 268437872, i32* %lr.global-to-local, align 4
  %v2_1000096c = inttoptr i32 %v2_10000968 to i8*
  %v3_1000096c = call i32 @function_100095cc(i8* %v2_1000096c, i32 %v1_10000964)
  %v0_10000970 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000970, i32* %r3.global-to-local, align 4
  store i32 268437880, i32* @lr, align 4
  %v1_10000974 = inttoptr i32 %v0_10000970 to i8*
  %v2_10000974 = call i32 @function_100095a4(i8* %v1_10000974)
  %v0_10000978 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000978, i32* %r4.global-to-local, align 4
  %v0_1000097c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000097c = add i32 %v0_1000097c, %v2_10000974
  store i32 %v2_1000097c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000984.28 to i32), i32* %lr.global-to-local, align 4
  %v3_10000980 = inttoptr i32 %v2_1000097c to i8*
  %v4_10000980 = call i32 @function_100095cc(i8* %v3_10000980, i32 %v0_10000978)
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268437900, i32* @lr, align 4
  %v1_10000988 = call i32 @function_10008b98(i32 39)
  %v0_1000098c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000098c, i32* %r3.global-to-local, align 4
  store i32 268437908, i32* @lr, align 4
  %v1_10000990 = inttoptr i32 %v0_1000098c to i8*
  %v2_10000990 = call i32 @function_100095a4(i8* %v1_10000990)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000990, i32* %r29.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268437924, i32* %lr.global-to-local, align 4
  %v3_100009a0 = call i32 @function_10008ae4(i32 39, i32* null)
  store i32 %v3_100009a0, i32* %r4.global-to-local, align 4
  %v0_100009a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009a8 = add i32 %v1_100009a8, %v0_100009a8
  store i32 %v2_100009a8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009b0.29 to i32), i32* %lr.global-to-local, align 4
  %v2_100009ac = inttoptr i32 %v2_100009a8 to i8*
  %v3_100009ac = call i32 @function_100095cc(i8* %v2_100009ac, i32 %v3_100009a0)
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268437944, i32* @lr, align 4
  %v1_100009b4 = call i32 @function_10008b0c(i32 39)
  %v0_100009b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009b8, i32* %r3.global-to-local, align 4
  store i32 268437952, i32* @lr, align 4
  %v1_100009bc = inttoptr i32 %v0_100009b8 to i8*
  %v2_100009bc = call i32 @function_100095a4(i8* %v1_100009bc)
  %v0_100009c0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100009c4 = add i32 %v0_100009c4, %v2_100009bc
  store i32 %v2_100009c4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009cc.30 to i32), i32* %lr.global-to-local, align 4
  %v3_100009c8 = inttoptr i32 %v2_100009c4 to i8*
  %v4_100009c8 = call i32 @function_100095cc(i8* %v3_100009c8, i32 %v0_100009c0)
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268437972, i32* @lr, align 4
  %v1_100009d0 = call i32 @function_10008b98(i32 40)
  %v0_100009d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009d4, i32* %r3.global-to-local, align 4
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = inttoptr i32 %v0_100009d4 to i8*
  %v2_100009d8 = call i32 @function_100095a4(i8* %v1_100009d8)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_100009d8, i32* %r29.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268437996, i32* %lr.global-to-local, align 4
  %v3_100009e8 = call i32 @function_10008ae4(i32 40, i32* null)
  store i32 %v3_100009e8, i32* %r4.global-to-local, align 4
  %v0_100009f0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009f0 = add i32 %v1_100009f0, %v0_100009f0
  store i32 %v2_100009f0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009f8.31 to i32), i32* %lr.global-to-local, align 4
  %v2_100009f4 = inttoptr i32 %v2_100009f0 to i8*
  %v3_100009f4 = call i32 @function_100095cc(i8* %v2_100009f4, i32 %v3_100009e8)
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = call i32 @function_10008b0c(i32 40)
  %v0_10000a00 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a00, i32* %r3.global-to-local, align 4
  store i32 268438024, i32* @lr, align 4
  %v1_10000a04 = inttoptr i32 %v0_10000a00 to i8*
  %v2_10000a04 = call i32 @function_100095a4(i8* %v1_10000a04)
  %v0_10000a08 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a08, i32* %r4.global-to-local, align 4
  %v0_10000a0c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a0c = add i32 %v0_10000a0c, %v2_10000a04
  store i32 %v2_10000a0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a14.32 to i32), i32* %lr.global-to-local, align 4
  %v3_10000a10 = inttoptr i32 %v2_10000a0c to i8*
  %v4_10000a10 = call i32 @function_100095cc(i8* %v3_10000a10, i32 %v0_10000a08)
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268438044, i32* @lr, align 4
  %v1_10000a18 = call i32 @function_10008b98(i32 41)
  %v0_10000a1c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a1c, i32* %r3.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v1_10000a20 = inttoptr i32 %v0_10000a1c to i8*
  %v2_10000a20 = call i32 @function_100095a4(i8* %v1_10000a20)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a20, i32* %r29.global-to-local, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268438068, i32* %lr.global-to-local, align 4
  %v3_10000a30 = call i32 @function_10008ae4(i32 41, i32* null)
  store i32 %v3_10000a30, i32* %r4.global-to-local, align 4
  %v0_10000a38 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a38 = add i32 %v1_10000a38, %v0_10000a38
  store i32 %v2_10000a38, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a40.33 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a3c = inttoptr i32 %v2_10000a38 to i8*
  %v3_10000a3c = call i32 @function_100095cc(i8* %v2_10000a3c, i32 %v3_10000a30)
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268438088, i32* @lr, align 4
  %v1_10000a44 = call i32 @function_10008b0c(i32 41)
  %v0_10000a48 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a48, i32* %r3.global-to-local, align 4
  store i32 268438096, i32* @lr, align 4
  %v1_10000a4c = inttoptr i32 %v0_10000a48 to i8*
  %v2_10000a4c = call i32 @function_100095a4(i8* %v1_10000a4c)
  %v0_10000a50 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a50, i32* %r4.global-to-local, align 4
  %v0_10000a54 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a54 = add i32 %v0_10000a54, %v2_10000a4c
  store i32 %v2_10000a54, i32* @r3, align 4
  store i32 268438108, i32* %lr.global-to-local, align 4
  %v3_10000a58 = inttoptr i32 %v2_10000a54 to i8*
  %v4_10000a58 = call i32 @function_100095cc(i8* %v3_10000a58, i32 %v0_10000a50)
  store i32 %v4_10000a58, i32* %r3.global-to-local, align 4
  %v0_10000a5c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000a5c, label %dec_label_pc_10000b18, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_100008b0
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268438120, i32* @lr, align 4
  %v1_10000a64 = call i32 @function_10008b98(i32 42)
  %v0_10000a68 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a68, i32* %r3.global-to-local, align 4
  store i32 268438128, i32* @lr, align 4
  %v1_10000a6c = inttoptr i32 %v0_10000a68 to i8*
  %v2_10000a6c = call i32 @function_100095a4(i8* %v1_10000a6c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a6c, i32* %r29.global-to-local, align 4
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268438144, i32* %lr.global-to-local, align 4
  %v3_10000a7c = call i32 @function_10008ae4(i32 42, i32* null)
  store i32 %v3_10000a7c, i32* %r4.global-to-local, align 4
  %v0_10000a84 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a84 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a84 = add i32 %v1_10000a84, %v0_10000a84
  store i32 %v2_10000a84, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a8c.34 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a88 = inttoptr i32 %v2_10000a84 to i8*
  %v3_10000a88 = call i32 @function_100095cc(i8* %v2_10000a88, i32 %v3_10000a7c)
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268438164, i32* @lr, align 4
  %v1_10000a90 = call i32 @function_10008b0c(i32 42)
  %v0_10000a94 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a94, i32* %r3.global-to-local, align 4
  store i32 268438172, i32* @lr, align 4
  %v1_10000a98 = inttoptr i32 %v0_10000a94 to i8*
  %v2_10000a98 = call i32 @function_100095a4(i8* %v1_10000a98)
  %v0_10000a9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a9c, i32* %r4.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000aa0 = add i32 %v0_10000aa0, %v2_10000a98
  store i32 %v2_10000aa0, i32* @r3, align 4
  store i32 268438184, i32* %lr.global-to-local, align 4
  %v3_10000aa4 = inttoptr i32 %v2_10000aa0 to i8*
  %v4_10000aa4 = call i32 @function_100095cc(i8* %v3_10000aa4, i32 %v0_10000a9c)
  %v0_10000aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aa8, i32* %r3.global-to-local, align 4
  store i32 268438192, i32* @lr, align 4
  %v1_10000aac = inttoptr i32 %v0_10000aa8 to i8*
  %v2_10000aac = call i32 @function_100095a4(i8* %v1_10000aac)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000aac, i32* %r29.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  store i32 268438208, i32* %lr.global-to-local, align 4
  %v3_10000abc = call i32 @function_10008ae4(i32 47, i32* null)
  store i32 %v3_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000ac4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000ac4 = add i32 %v1_10000ac4, %v0_10000ac4
  store i32 %v2_10000ac4, i32* @r3, align 4
  store i32 268438220, i32* %lr.global-to-local, align 4
  %v2_10000ac8 = inttoptr i32 %v2_10000ac4 to i8*
  %v3_10000ac8 = call i32 @function_100095cc(i8* %v2_10000ac8, i32 %v3_10000abc)
  %v0_10000acc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000acc, i32* %r3.global-to-local, align 4
  store i32 268438228, i32* @lr, align 4
  %v1_10000ad0 = inttoptr i32 %v0_10000acc to i8*
  %v2_10000ad0 = call i32 @function_100095a4(i8* %v1_10000ad0)
  %v0_10000ad4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10000ad4, i32* %r4.global-to-local, align 4
  %v0_10000ad8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000ad8 = add i32 %v0_10000ad8, %v2_10000ad0
  store i32 %v2_10000ad8, i32* @r3, align 4
  store i32 268438240, i32* %lr.global-to-local, align 4
  %v2_10000adc = inttoptr i32 %v2_10000ad8 to i8*
  %v3_10000adc = call i32 @function_100095cc(i8* %v2_10000adc, i32 %v0_10000ad4)
  store i32 %v3_10000adc, i32* %r3.global-to-local, align 4
  %v0_10000ae0 = load i32, i32* @r1, align 4
  %v1_10000ae0 = add i32 %v0_10000ae0, 20804
  %v2_10000ae0 = inttoptr i32 %v1_10000ae0 to i32*
  %v3_10000ae0 = load i32, i32* %v2_10000ae0, align 4
  store i32 %v3_10000ae0, i32* %r3.global-to-local, align 4
  store i32 268438248, i32* @lr, align 4
  %v1_10000ae4 = inttoptr i32 %v3_10000ae0 to i8*
  %v2_10000ae4 = call i32 @function_100095a4(i8* %v1_10000ae4)
  store i32 %v2_10000ae4, i32* %r29.global-to-local, align 4
  %v0_10000aec = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aec, i32* %r3.global-to-local, align 4
  store i32 268438260, i32* @lr, align 4
  %v1_10000af0 = inttoptr i32 %v0_10000aec to i8*
  %v2_10000af0 = call i32 @function_100095a4(i8* %v1_10000af0)
  store i32 10, i32* %r4.global-to-local, align 4
  %v0_10000af8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000af8 = add i32 %v0_10000af8, %v2_10000af0
  %v0_10000afc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000afc, i32* %r3.global-to-local, align 4
  store i32 268438276, i32* %lr.global-to-local, align 4
  %v3_10000b00 = trunc i32 %v0_10000afc to i8
  %v4_10000b00 = call i32 @function_10009b04(i8 %v3_10000b00, i32 10, i32 %v2_10000af8)
  %v0_10000b04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b04, i32* %r3.global-to-local, align 4
  store i32 268438284, i32* @lr, align 4
  %v1_10000b08 = inttoptr i32 %v0_10000b04 to i8*
  %v2_10000b08 = call i32 @function_100095a4(i8* %v1_10000b08)
  %v0_10000b0c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r4.global-to-local, align 4
  %v0_10000b10 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b10 = add i32 %v0_10000b10, %v2_10000b08
  store i32 %v2_10000b10, i32* @r3, align 4
  store i32 268438296, i32* %lr.global-to-local, align 4
  %v3_10000b14 = inttoptr i32 %v2_10000b10 to i8*
  %v4_10000b14 = call i32 @function_100095cc(i8* %v3_10000b14, i32 %v0_10000b0c)
  store i32 %v4_10000b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000b18

dec_label_pc_10000b18:                            ; preds = %dec_label_pc_100008b0, %dec_label_pc_10000a60
  %v0_10000b18 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b18 = add i32 %v0_10000b18, 1468
  %v2_10000b18 = inttoptr i32 %v1_10000b18 to i32*
  %v3_10000b18 = load i32, i32* %v2_10000b18, align 4
  store i32 %v3_10000b18, i32* %r0.global-to-local, align 4
  %v1_10000b1c = icmp slt i32 %v3_10000b18, 0
  %v2_10000b1c = icmp sgt i32 %v3_10000b18, 0
  %v3_10000b1c = icmp eq i32 %v3_10000b18, 0
  store i1 %v1_10000b1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b1c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b1c, i1* %cr7_eq.global-to-local, align 1
  %tmp67 = icmp slt i32 %v3_10000b18, 1
  br i1 %tmp67, label %dec_label_pc_10000bb8, label %dec_label_pc_10000b24

dec_label_pc_10000b24:                            ; preds = %dec_label_pc_10000b18
  %v0_10000b24 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b24, i32* %r3.global-to-local, align 4
  store i32 268438316, i32* @lr, align 4
  %v1_10000b28 = inttoptr i32 %v0_10000b24 to i8*
  %v2_10000b28 = call i32 @function_100095a4(i8* %v1_10000b28)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000b30 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b30 = add i32 %v0_10000b30, %v2_10000b28
  store i32 %v2_10000b30, i32* @r3, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000c650.35 to i32), i32* %r4.global-to-local, align 4
  store i32 268438332, i32* %lr.global-to-local, align 4
  %v3_10000b38 = inttoptr i32 %v2_10000b30 to i8*
  %v4_10000b38 = call i32 @function_100095cc(i8* %v3_10000b38, i32 ptrtoint ([9 x i8]* @global_var_1000c650.35 to i32))
  store i32 %v4_10000b38, i32* %r3.global-to-local, align 4
  %v0_10000b3c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b3c = add i32 %v0_10000b3c, 1468
  %v2_10000b3c = inttoptr i32 %v1_10000b3c to i32*
  %v3_10000b3c = load i32, i32* %v2_10000b3c, align 4
  store i32 %v3_10000b3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000b44 = icmp slt i32 %v3_10000b3c, 0
  %v2_10000b44 = icmp sgt i32 %v3_10000b3c, 0
  %v3_10000b44 = icmp eq i32 %v3_10000b3c, 0
  store i1 %v1_10000b44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b44, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b44, i1* %cr7_eq.global-to-local, align 1
  %v1_10000b48 = load i32, i32* @r1, align 4
  %v2_10000b48 = add i32 %v1_10000b48, 8
  %v3_10000b48 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v3_10000b48, align 4
  %tmp68 = icmp slt i32 %v3_10000b3c, 1
  br i1 %tmp68, label %dec_label_pc_10000ba0, label %dec_label_pc_10000b50

dec_label_pc_10000b50:                            ; preds = %dec_label_pc_10000b24, %dec_label_pc_10000b50
  %v0_10000b50 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b50, i32* %r3.global-to-local, align 4
  store i32 268438360, i32* @lr, align 4
  %v1_10000b54 = inttoptr i32 %v0_10000b50 to i8*
  %v2_10000b54 = call i32 @function_100095a4(i8* %v1_10000b54)
  store i32 %v2_10000b54, i32* %r3.global-to-local, align 4
  %v0_10000b58 = load i32, i32* @r1, align 4
  %v1_10000b58 = add i32 %v0_10000b58, 8
  %v2_10000b58 = inttoptr i32 %v1_10000b58 to i32*
  %v3_10000b58 = load i32, i32* %v2_10000b58, align 4
  %v0_10000b5c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b5c = add i32 %v0_10000b5c, %v2_10000b54
  store i32 %v2_10000b5c, i32* @r3, align 4
  %v1_10000b60 = mul i32 %v3_10000b58, 128
  %v1_10000b64 = add i32 %v1_10000b60, 1472
  %v0_10000b68 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000b68 = add i32 %v1_10000b64, %v0_10000b68
  store i32 %v2_10000b68, i32* %r4.global-to-local, align 4
  store i32 268438384, i32* %lr.global-to-local, align 4
  %v2_10000b6c = inttoptr i32 %v2_10000b5c to i8*
  %v3_10000b6c = call i32 @function_100095cc(i8* %v2_10000b6c, i32 %v2_10000b68)
  %v0_10000b70 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b70, i32* %r3.global-to-local, align 4
  store i32 268438392, i32* @lr, align 4
  %v1_10000b74 = inttoptr i32 %v0_10000b70 to i8*
  %v2_10000b74 = call i32 @function_100095a4(i8* %v1_10000b74)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c65c.36 to i32), i32* %r4.global-to-local, align 4
  %v0_10000b80 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b80 = add i32 %v0_10000b80, %v2_10000b74
  store i32 %v2_10000b80, i32* @r3, align 4
  store i32 268438408, i32* %lr.global-to-local, align 4
  %v3_10000b84 = inttoptr i32 %v2_10000b80 to i8*
  %v4_10000b84 = call i32 @function_100095cc(i8* %v3_10000b84, i32 ptrtoint ([3 x i8]* @global_var_1000c65c.36 to i32))
  store i32 %v4_10000b84, i32* %r3.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r1, align 4
  %v1_10000b88 = add i32 %v0_10000b88, 8
  %v2_10000b88 = inttoptr i32 %v1_10000b88 to i32*
  %v3_10000b88 = load i32, i32* %v2_10000b88, align 4
  store i32 %v3_10000b88, i32* %r9.global-to-local, align 4
  %v0_10000b8c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b8c = add i32 %v0_10000b8c, 1468
  %v2_10000b8c = inttoptr i32 %v1_10000b8c to i32*
  %v3_10000b8c = load i32, i32* %v2_10000b8c, align 4
  store i32 %v3_10000b8c, i32* %r0.global-to-local, align 4
  %v1_10000b90 = add i32 %v3_10000b88, 1
  store i32 %v1_10000b90, i32* %r11.global-to-local, align 4
  %v2_10000b94 = icmp slt i32 %v3_10000b8c, %v1_10000b90
  %v3_10000b94 = icmp sgt i32 %v3_10000b8c, %v1_10000b90
  %v4_10000b94 = icmp eq i32 %v3_10000b8c, %v1_10000b90
  store i1 %v2_10000b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b94, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000b94, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000b90, i32* %v2_10000b88, align 4
  br i1 %v3_10000b94, label %dec_label_pc_10000b50, label %dec_label_pc_10000ba0

dec_label_pc_10000ba0:                            ; preds = %dec_label_pc_10000b50, %dec_label_pc_10000b24
  %v0_10000ba0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000ba0, i32* %r3.global-to-local, align 4
  store i32 268438440, i32* @lr, align 4
  %v1_10000ba4 = inttoptr i32 %v0_10000ba0 to i8*
  %v2_10000ba4 = call i32 @function_100095a4(i8* %v1_10000ba4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bac = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bac = add i32 %v0_10000bac, %v2_10000ba4
  store i32 %v2_10000bac, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438456, i32* %lr.global-to-local, align 4
  %v3_10000bb4 = inttoptr i32 %v2_10000bac to i8*
  %v4_10000bb4 = call i32 @function_100095cc(i8* %v3_10000bb4, i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32))
  store i32 %v4_10000bb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000bb8

dec_label_pc_10000bb8:                            ; preds = %dec_label_pc_10000b18, %dec_label_pc_10000ba0
  %v0_10000bb8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bb8, i32* %r3.global-to-local, align 4
  store i32 268438464, i32* @lr, align 4
  %v1_10000bbc = inttoptr i32 %v0_10000bb8 to i8*
  %v2_10000bbc = call i32 @function_100095a4(i8* %v1_10000bbc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bc4 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bc4 = add i32 %v0_10000bc4, %v2_10000bbc
  store i32 %v2_10000bc4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438480, i32* %lr.global-to-local, align 4
  %v3_10000bcc = inttoptr i32 %v2_10000bc4 to i8*
  %v4_10000bcc = call i32 @function_100095cc(i8* %v3_10000bcc, i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32))
  store i32 %v4_10000bcc, i32* %r3.global-to-local, align 4
  %v0_10000bd0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000bd0, label %dec_label_pc_10000be8, label %dec_label_pc_10000bd4

dec_label_pc_10000bd4:                            ; preds = %dec_label_pc_10000bb8
  %v0_10000bd4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v1_10000bd8 = inttoptr i32 %v0_10000bd4 to i8*
  %v2_10000bd8 = call i32 @function_100095a4(i8* %v1_10000bd8)
  store i32 %v2_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000bdc = load i32, i32* @r1, align 4
  %v1_10000bdc = add i32 %v0_10000bdc, 20804
  %v2_10000bdc = inttoptr i32 %v1_10000bdc to i32*
  %v3_10000bdc = load i32, i32* %v2_10000bdc, align 4
  store i32 %v3_10000bdc, i32* %r4.global-to-local, align 4
  %v0_10000be0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000be0 = add i32 %v0_10000be0, %v2_10000bd8
  store i32 %v2_10000be0, i32* @r3, align 4
  store i32 268438504, i32* %lr.global-to-local, align 4
  %v2_10000be4 = inttoptr i32 %v2_10000be0 to i8*
  %v3_10000be4 = call i32 @function_100095cc(i8* %v2_10000be4, i32 %v3_10000bdc)
  store i32 %v3_10000be4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000be8

dec_label_pc_10000be8:                            ; preds = %dec_label_pc_10000bb8, %dec_label_pc_10000bd4
  %v0_10000be8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000be8 = add i32 %v0_10000be8, 1440
  store i32 %v1_10000be8, i32* @r31, align 4
  %v0_10000bec = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000bec, i32* %r3.global-to-local, align 4
  store i32 %v1_10000be8, i32* %r4.global-to-local, align 4
  store i32 268438520, i32* %lr.global-to-local, align 4
  %v2_10000bf4 = inttoptr i32 %v0_10000bec to i8*
  %v3_10000bf4 = call i32 @function_10009a00(i8* %v2_10000bf4, i32 %v1_10000be8)
  store i32 %v3_10000bf4, i32* %r3.global-to-local, align 4
  %v1_10000bf8 = icmp slt i32 %v3_10000bf4, 0
  %v2_10000bf8 = icmp sgt i32 %v3_10000bf4, 0
  %v3_10000bf8 = icmp eq i32 %v3_10000bf4, 0
  store i1 %v1_10000bf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000bf8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000bf8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000bf8, label %dec_label_pc_10001508, label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000be8, %dec_label_pc_10001508
  %v0_10000c00 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c00 = inttoptr i32 %v0_10000c00 to i32*
  %v2_10000c00 = load i32, i32* %v1_10000c00, align 4
  store i32 %v2_10000c00, i32* %r29.global-to-local, align 4
  %v0_10000c04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c04, i32* %r3.global-to-local, align 4
  store i32 268438540, i32* @lr, align 4
  %v1_10000c08 = inttoptr i32 %v0_10000c04 to i8*
  %v2_10000c08 = call i32 @function_100095a4(i8* %v1_10000c08)
  %v0_10000c0c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c0c, i32* %r4.global-to-local, align 4
  %v0_10000c18 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000c18, i32* %r3.global-to-local, align 4
  store i32 268438560, i32* @lr, align 4
  %v4_10000c1c = call i32 @function_1000aa3c(i32 %v0_10000c18, i32 %v0_10000c0c, i32 %v2_10000c08, i32 16384)
  store i32 %v4_10000c1c, i32* %r3.global-to-local, align 4
  %v0_10000c20 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c20 = inttoptr i32 %v0_10000c20 to i32*
  %v2_10000c20 = load i32, i32* %v1_10000c20, align 4
  %v0_10000c24 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c24 = add i32 %v0_10000c20, 12
  %v3_10000c24 = inttoptr i32 %v2_10000c24 to i32*
  store i32 %v0_10000c24, i32* %v3_10000c24, align 4
  %v1_10000c28 = call i32 @__asm_rlwinm(i32 %v2_10000c20, i32 29, i32 3, i32 29)
  %v0_10000c2c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c2c = icmp slt i32 %v0_10000c2c, %v2_10000c20
  %v3_10000c2c = icmp sgt i32 %v0_10000c2c, %v2_10000c20
  %v4_10000c2c = icmp eq i32 %v0_10000c2c, %v2_10000c20
  store i1 %v2_10000c2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c2c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c2c, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c30 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c30 = add i32 %v1_10000c30, %v1_10000c28
  store i32 %v2_10000c30, i32* %r11.global-to-local, align 4
  %v1_10000c34 = urem i32 %v2_10000c20, 32
  store i32 %v1_10000c34, i32* %r0.global-to-local, align 4
  %v1_10000c38 = add i32 %v2_10000c30, 36
  %v2_10000c38 = inttoptr i32 %v1_10000c38 to i32*
  %v3_10000c38 = load i32, i32* %v2_10000c38, align 4
  %v0_10000c3c = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c3c = shl i32 %v0_10000c3c, %v1_10000c34
  %v2_10000c40 = or i32 %v3_10000c3c, %v3_10000c38
  store i32 %v2_10000c40, i32* %r9.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 %v2_10000c40, i32* %v2_10000c38, align 4
  %v0_10000c4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000c4c = trunc i32 %v0_10000c4c to i8
  %v2_10000c4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10000c4c = add i32 %v2_10000c4c, 4
  %v4_10000c4c = inttoptr i32 %v3_10000c4c to i8*
  store i8 %v1_10000c4c, i8* %v4_10000c4c, align 1
  %v0_10000c50 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c50 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v2_10000c50 = or i1 %v0_10000c50, %v1_10000c50
  br i1 %v2_10000c50, label %dec_label_pc_10000678, label %dec_label_pc_10000c54

dec_label_pc_10000c54:                            ; preds = %dec_label_pc_10000c00
  %v1_10000c54 = add i32 %v2_10000c20, 1
  store i32 %v1_10000c54, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c5c:                            ; preds = %dec_label_pc_10000660, %dec_label_pc_10000658, %dec_label_pc_10000650
  %v1_10000c5c = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000c5c = load i32, i32* %v1_10000c5c, align 4
  %v1_10000c60 = call i32 @__asm_rlwinm(i32 %v2_10000c5c, i32 29, i32 3, i32 29)
  %v0_10000c64 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c64 = icmp slt i32 %v0_10000c64, %v2_10000c5c
  %v3_10000c64 = icmp sgt i32 %v0_10000c64, %v2_10000c5c
  %v4_10000c64 = icmp eq i32 %v0_10000c64, %v2_10000c5c
  store i1 %v2_10000c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c64, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c68 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c68 = add i32 %v1_10000c68, %v1_10000c60
  store i32 %v2_10000c68, i32* %r11.global-to-local, align 4
  %v1_10000c6c = urem i32 %v2_10000c5c, 32
  store i32 %v1_10000c6c, i32* %r0.global-to-local, align 4
  %v1_10000c70 = add i32 %v2_10000c68, 36
  %v2_10000c70 = inttoptr i32 %v1_10000c70 to i32*
  %v3_10000c70 = load i32, i32* %v2_10000c70, align 4
  %v0_10000c74 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c74 = shl i32 %v0_10000c74, %v1_10000c6c
  store i32 %v3_10000c74, i32* %r0.global-to-local, align 4
  %v2_10000c78 = or i32 %v3_10000c74, %v3_10000c70
  store i32 %v2_10000c78, i32* %r9.global-to-local, align 4
  store i32 %v2_10000c78, i32* %v2_10000c70, align 4
  br i1 %v2_10000c64, label %dec_label_pc_10000c84, label %dec_label_pc_10000678

dec_label_pc_10000c84:                            ; preds = %dec_label_pc_10000c5c
  %v1_10000c84 = add i32 %v2_10000c5c, 1
  store i32 %v1_10000c84, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_1000089c
  store i8 0, i8* %v2_10000688, align 1
  %v0_1000069c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000069c

dec_label_pc_10000c94:                            ; preds = %dec_label_pc_10000640
  %v1_10000c94 = add i32 %v2_10000c8c, 8
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i32*
  %v3_10000c94 = load i32, i32* %v2_10000c94, align 4
  %v1_10000c98 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c98 = sub i32 %v1_10000c98, %v3_10000c94
  store i32 %v2_10000c98, i32* %r0.global-to-local, align 4
  %v1_10000c9c = icmp ult i32 %v2_10000c98, 30
  %v2_10000c9c = icmp ugt i32 %v2_10000c98, 30
  %v3_10000c9c = icmp eq i32 %v2_10000c98, 30
  store i1 %v1_10000c9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000c9c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000c9c, i1* %cr7_eq.global-to-local, align 1
  %tmp70 = icmp ult i32 %v2_10000c98, 31
  br i1 %tmp70, label %dec_label_pc_10000758, label %dec_label_pc_10000668

dec_label_pc_10000ca8:                            ; preds = %dec_label_pc_10000808
  %v0_10000ca8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000ca8, i32* @r3, align 4
  store i32 10240, i32* @r4, align 4
  store i32 268438708, i32* @lr, align 4
  %v0_10000cb0 = call i32 @function_1000964c()
  store i32 %v0_10000cb0, i32* %r3.global-to-local, align 4
  %v0_10000cb4 = load i32, i32* @r30, align 4
  %v1_10000cb4 = add i32 %v0_10000cb4, -533
  %v2_10000cb4 = inttoptr i32 %v1_10000cb4 to i32*
  %v3_10000cb4 = load i32, i32* %v2_10000cb4, align 4
  store i32 %v3_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cb8, i32* %r4.global-to-local, align 4
  store i32 268438728, i32* @lr, align 4
  %v4_10000cc4 = call i32 @function_1000a9c4(i32 %v3_10000cb4, i32 %v0_10000cb8, i32 10240, i32 16386)
  store i32 %v4_10000cc4, i32* %r3.global-to-local, align 4
  store i32 %v4_10000cc4, i32* %r24.global-to-local, align 4
  %tmp71 = icmp slt i32 %v4_10000cc4, 1
  br i1 %tmp71, label %dec_label_pc_100018f0, label %dec_label_pc_10000cd0

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ca8
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cd4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c660.37 to i32), i32* @r31, align 4
  store i32 %v4_10000cc4, i32* %r4.global-to-local, align 4
  store i32 268438764, i32* %lr.global-to-local, align 4
  %v5_10000ce8 = call i32 @function_10009670(i32 %v0_10000cd4, i32 %v4_10000cc4, i32 ptrtoint ([5 x i8]* @global_var_1000c660.37 to i32), i32 4)
  store i32 %v5_10000ce8, i32* %r3.global-to-local, align 4
  %v1_10000cec = icmp slt i32 %v5_10000ce8, -1
  %v2_10000cec = icmp sgt i32 %v5_10000ce8, -1
  %v3_10000cec = icmp eq i32 %v5_10000ce8, -1
  store i1 %v1_10000cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000cec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000cec, i1* %cr7_eq.global-to-local, align 1
  %v0_100017d4 = load i32, i32* %r24.global-to-local, align 4
  br i1 %v3_10000cec, label %dec_label_pc_100017d4, label %dec_label_pc_10000cf4

dec_label_pc_10000cf4:                            ; preds = %dec_label_pc_10000cd0, %dec_label_pc_100017d4
  %v0_10000cf4 = load i32, i32* @r31, align 4
  store i32 %v0_100017d4, i32* %r4.global-to-local, align 4
  %v0_10000d00 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d00, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000d08.38 to i32), i32* %lr.global-to-local, align 4
  %v5_10000d04 = call i32 @function_10009670(i32 %v0_10000d00, i32 %v0_100017d4, i32 %v0_10000cf4, i32 4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10000d0c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d0c = add i32 %v0_10000d0c, %v5_10000d04
  store i32 %v2_10000d0c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10000d14 = add i32 %v2_10000d0c, 10532
  %v4_10000d14 = inttoptr i32 %v3_10000d14 to i8*
  store i8 0, i8* %v4_10000d14, align 1
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 268438816, i32* %lr.global-to-local, align 4
  %v3_10000d1c = call i32 @function_10008ae4(i32 53, i32* null)
  %v0_10000d20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d20, i32* %r4.global-to-local, align 4
  %v0_10000d28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d28, i32* %r3.global-to-local, align 4
  store i32 268438832, i32* %lr.global-to-local, align 4
  %v3_10000d2c = inttoptr i32 %v0_10000d28 to i8*
  %v4_10000d2c = call i32 @function_10009954(i8* %v3_10000d2c, i32 %v0_10000d20, i32 %v3_10000d1c)
  store i32 %v4_10000d2c, i32* %r3.global-to-local, align 4
  %v1_10000d30 = icmp slt i32 %v4_10000d2c, -1
  %v2_10000d30 = icmp sgt i32 %v4_10000d2c, -1
  %v3_10000d30 = icmp eq i32 %v4_10000d2c, -1
  store i1 %v1_10000d30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d30, label %dec_label_pc_10000d40, label %dec_label_pc_10000d38

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000cf4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000d3c = load i32, i32* @r30, align 4
  %v2_10000d3c = add i32 %v1_10000d3c, 919
  %v3_10000d3c = inttoptr i32 %v2_10000d3c to i32*
  store i32 2, i32* %v3_10000d3c, align 4
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000cf4, %dec_label_pc_10000d38
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 268438860, i32* %lr.global-to-local, align 4
  %v3_10000d48 = call i32 @function_10008ae4(i32 52, i32* null)
  %v0_10000d4c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d4c, i32* %r4.global-to-local, align 4
  %v0_10000d54 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d54, i32* %r3.global-to-local, align 4
  store i32 268438876, i32* %lr.global-to-local, align 4
  %v3_10000d58 = inttoptr i32 %v0_10000d54 to i8*
  %v4_10000d58 = call i32 @function_10009954(i8* %v3_10000d58, i32 %v0_10000d4c, i32 %v3_10000d48)
  store i32 %v4_10000d58, i32* %r3.global-to-local, align 4
  %v1_10000d5c = icmp slt i32 %v4_10000d58, -1
  %v2_10000d5c = icmp sgt i32 %v4_10000d58, -1
  %v3_10000d5c = icmp eq i32 %v4_10000d58, -1
  store i1 %v1_10000d5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d5c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d5c, label %dec_label_pc_10000d6c, label %dec_label_pc_10000d64

dec_label_pc_10000d64:                            ; preds = %dec_label_pc_10000d40
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000d68 = load i32, i32* @r30, align 4
  %v2_10000d68 = add i32 %v1_10000d68, 919
  %v3_10000d68 = inttoptr i32 %v2_10000d68 to i32*
  store i32 1, i32* %v3_10000d68, align 4
  br label %dec_label_pc_10000d6c

dec_label_pc_10000d6c:                            ; preds = %dec_label_pc_10000d40, %dec_label_pc_10000d64
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000d74 = load i32, i32* @r30, align 4
  %v2_10000d74 = add i32 %v1_10000d74, 923
  %v3_10000d74 = inttoptr i32 %v2_10000d74 to i32*
  store i32 0, i32* %v3_10000d74, align 4
  store i32 51, i32* %r3.global-to-local, align 4
  store i32 268438912, i32* %lr.global-to-local, align 4
  %v3_10000d7c = call i32 @function_10008ae4(i32 51, i32* null)
  %v0_10000d80 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d80, i32* %r4.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d88, i32* %r3.global-to-local, align 4
  store i32 268438928, i32* %lr.global-to-local, align 4
  %v3_10000d8c = inttoptr i32 %v0_10000d88 to i8*
  %v4_10000d8c = call i32 @function_10009954(i8* %v3_10000d8c, i32 %v0_10000d80, i32 %v3_10000d7c)
  store i32 %v4_10000d8c, i32* %r3.global-to-local, align 4
  %v1_10000d90 = icmp slt i32 %v4_10000d8c, -1
  %v2_10000d90 = icmp sgt i32 %v4_10000d8c, -1
  %v3_10000d90 = icmp eq i32 %v4_10000d8c, -1
  store i1 %v1_10000d90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d90, label %dec_label_pc_10000e40, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d6c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 51, i32* %r3.global-to-local, align 4
  store i32 268438948, i32* %lr.global-to-local, align 4
  %v3_10000da0 = call i32 @function_10008ae4(i32 51, i32* null)
  %v0_10000da4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000da4, i32* %r4.global-to-local, align 4
  %v0_10000dac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000dac, i32* %r3.global-to-local, align 4
  store i32 268438964, i32* %lr.global-to-local, align 4
  %v3_10000db0 = inttoptr i32 %v0_10000dac to i8*
  %v4_10000db0 = call i32 @function_10009954(i8* %v3_10000db0, i32 %v0_10000da4, i32 %v3_10000da0)
  store i32 %v4_10000db0, i32* %r3.global-to-local, align 4
  %v0_10000db8 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000db8 = add i32 %v0_10000db8, %v4_10000db0
  store i32 %v2_10000db8, i32* %r9.global-to-local, align 4
  %v1_10000dbc = add i32 %v2_10000db8, 10532
  %v2_10000dbc = inttoptr i32 %v1_10000dbc to i8*
  %v3_10000dbc = load i8, i8* %v2_10000dbc, align 1
  %v4_10000dbc = zext i8 %v3_10000dbc to i32
  store i32 %v4_10000dbc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000dc8 = xor i32 %v4_10000dbc, 32
  %v1_10000dcc = sub nsw i32 0, %v1_10000dc8
  %v2_10000dcc = xor i32 %v4_10000dbc, -33
  %v4_10000dcc = icmp uge i32 %v2_10000dcc, %v1_10000dcc
  %v2_10000dd0 = zext i1 %v4_10000dcc to i32
  %v3_10000dd0 = add i32 %v2_10000dd0, %v4_10000db0
  store i32 %v3_10000dd0, i32* %r11.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000dd4 = add i32 %v3_10000dd0, %v0_10000dd4
  store i32 %v2_10000dd4, i32* %r28.global-to-local, align 4
  store i32 %v2_10000dd4, i32* %r3.global-to-local, align 4
  %v1_10000ddc = load i32, i32* %r24.global-to-local, align 4
  %v2_10000ddc = sub i32 %v1_10000ddc, %v3_10000dd0
  store i32 %v2_10000ddc, i32* %r4.global-to-local, align 4
  store i32 %v3_10000dd0, i32* %r31.global-to-local, align 4
  store i32 268439016, i32* %lr.global-to-local, align 4
  %v5_10000de4 = call i32 @function_10009670(i32 %v2_10000dd4, i32 %v2_10000ddc, i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32 2)
  store i32 %v5_10000de4, i32* %r3.global-to-local, align 4
  %v1_10000de8 = icmp slt i32 %v5_10000de4, -1
  %v2_10000de8 = icmp sgt i32 %v5_10000de4, -1
  %v3_10000de8 = icmp eq i32 %v5_10000de4, -1
  store i1 %v1_10000de8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000de8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000de8, label %dec_label_pc_10000e40, label %dec_label_pc_10000df0

dec_label_pc_10000df0:                            ; preds = %dec_label_pc_10000d98
  %v1_10000df0 = icmp slt i32 %v5_10000de4, 1
  %v2_10000df0 = icmp sgt i32 %v5_10000de4, 1
  %v3_10000df0 = icmp eq i32 %v5_10000de4, 1
  store i1 %v1_10000df0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000df0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000df0, i1* %cr7_eq.global-to-local, align 1
  %tmp72 = icmp slt i32 %v5_10000de4, 2
  br i1 %tmp72, label %dec_label_pc_10000dfc, label %dec_label_pc_10000df8

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000df0
  %v1_10000df8 = add i32 %v5_10000de4, -2
  store i32 %v1_10000df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000df0, %dec_label_pc_10000df8
  %v1_10000e00 = phi i32 [ %v5_10000de4, %dec_label_pc_10000df0 ], [ %v1_10000df8, %dec_label_pc_10000df8 ]
  %v0_10000dfc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000dfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10000dfc = add i32 %v0_10000dfc, %v1_10000e00
  %v2_10000e00 = add i32 %v2_10000dfc, %v1_10000dfc
  store i32 %v2_10000e00, i32* %r9.global-to-local, align 4
  %v0_10000e04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e04, i32* %r3.global-to-local, align 4
  %v0_10000e08 = load i32, i32* %r29.global-to-local, align 4
  %v1_10000e08 = trunc i32 %v0_10000e08 to i8
  %v3_10000e08 = add i32 %v2_10000e00, 10532
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 %v1_10000e08, i8* %v4_10000e08, align 1
  store i32 268439056, i32* @lr, align 4
  %v1_10000e0c = inttoptr i32 %v0_10000e04 to i8*
  %v2_10000e0c = call i32 @function_100095a4(i8* %v1_10000e0c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000e0c, i32* %r29.global-to-local, align 4
  store i32 50, i32* %r3.global-to-local, align 4
  store i32 268439072, i32* %lr.global-to-local, align 4
  %v3_10000e1c = call i32 @function_10008ae4(i32 50, i32* null)
  %v0_10000e20 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000e20, i32* %r4.global-to-local, align 4
  %v0_10000e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* %lr.global-to-local, align 4
  %v3_10000e2c = inttoptr i32 %v0_10000e28 to i8*
  %v4_10000e2c = call i32 @function_10009954(i8* %v3_10000e2c, i32 %v0_10000e20, i32 %v3_10000e1c)
  store i32 %v4_10000e2c, i32* %r3.global-to-local, align 4
  %v1_10000e30 = icmp slt i32 %v4_10000e2c, 0
  %v2_10000e30 = icmp sgt i32 %v4_10000e2c, 0
  %v3_10000e30 = icmp eq i32 %v4_10000e2c, 0
  store i1 %v1_10000e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e30, label %dec_label_pc_10000e40, label %dec_label_pc_10000e38

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000dfc
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000e3c = load i32, i32* @r30, align 4
  %v2_10000e3c = add i32 %v1_10000e3c, 923
  %v3_10000e3c = inttoptr i32 %v2_10000e3c to i32*
  store i32 1, i32* %v3_10000e3c, align 4
  br label %dec_label_pc_10000e40

dec_label_pc_10000e40:                            ; preds = %dec_label_pc_10000dfc, %dec_label_pc_10000d98, %dec_label_pc_10000d6c, %dec_label_pc_10000e38
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000e48 = load i32, i32* @r30, align 4
  %v2_10000e48 = add i32 %v1_10000e48, 927
  %v3_10000e48 = inttoptr i32 %v2_10000e48 to i32*
  store i32 0, i32* %v3_10000e48, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 268439124, i32* %lr.global-to-local, align 4
  %v3_10000e50 = call i32 @function_10008ae4(i32 48, i32* null)
  %v0_10000e54 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e54, i32* %r4.global-to-local, align 4
  %v0_10000e5c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e5c, i32* %r3.global-to-local, align 4
  store i32 268439140, i32* %lr.global-to-local, align 4
  %v3_10000e60 = inttoptr i32 %v0_10000e5c to i8*
  %v4_10000e60 = call i32 @function_10009954(i8* %v3_10000e60, i32 %v0_10000e54, i32 %v3_10000e50)
  store i32 %v4_10000e60, i32* %r3.global-to-local, align 4
  %v1_10000e64 = icmp slt i32 %v4_10000e60, -1
  %v2_10000e64 = icmp sgt i32 %v4_10000e60, -1
  %v3_10000e64 = icmp eq i32 %v4_10000e60, -1
  store i1 %v1_10000e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e64, label %dec_label_pc_10000f14, label %dec_label_pc_10000e6c

dec_label_pc_10000e6c:                            ; preds = %dec_label_pc_10000e40
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 268439160, i32* %lr.global-to-local, align 4
  %v3_10000e74 = call i32 @function_10008ae4(i32 48, i32* null)
  %v0_10000e78 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r4.global-to-local, align 4
  %v0_10000e80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e80, i32* %r3.global-to-local, align 4
  store i32 268439176, i32* %lr.global-to-local, align 4
  %v3_10000e84 = inttoptr i32 %v0_10000e80 to i8*
  %v4_10000e84 = call i32 @function_10009954(i8* %v3_10000e84, i32 %v0_10000e78, i32 %v3_10000e74)
  store i32 %v4_10000e84, i32* %r3.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000e8c = add i32 %v0_10000e8c, %v4_10000e84
  store i32 %v2_10000e8c, i32* %r9.global-to-local, align 4
  %v1_10000e90 = add i32 %v2_10000e8c, 10532
  %v2_10000e90 = inttoptr i32 %v1_10000e90 to i8*
  %v3_10000e90 = load i8, i8* %v2_10000e90, align 1
  %v4_10000e90 = zext i8 %v3_10000e90 to i32
  store i32 %v4_10000e90, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000e9c = xor i32 %v4_10000e90, 32
  %v1_10000ea0 = sub nsw i32 0, %v1_10000e9c
  %v2_10000ea0 = xor i32 %v4_10000e90, -33
  %v4_10000ea0 = icmp uge i32 %v2_10000ea0, %v1_10000ea0
  %v2_10000ea4 = zext i1 %v4_10000ea0 to i32
  %v3_10000ea4 = add i32 %v2_10000ea4, %v4_10000e84
  store i32 %v3_10000ea4, i32* %r11.global-to-local, align 4
  %v0_10000ea8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000ea8 = add i32 %v3_10000ea4, %v0_10000ea8
  store i32 %v2_10000ea8, i32* %r28.global-to-local, align 4
  store i32 %v2_10000ea8, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = load i32, i32* %r24.global-to-local, align 4
  %v2_10000eb0 = sub i32 %v1_10000eb0, %v3_10000ea4
  store i32 %v2_10000eb0, i32* %r4.global-to-local, align 4
  store i32 %v3_10000ea4, i32* %r31.global-to-local, align 4
  store i32 268439228, i32* %lr.global-to-local, align 4
  %v5_10000eb8 = call i32 @function_10009670(i32 %v2_10000ea8, i32 %v2_10000eb0, i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32 2)
  store i32 %v5_10000eb8, i32* %r3.global-to-local, align 4
  %v1_10000ebc = icmp slt i32 %v5_10000eb8, -1
  %v2_10000ebc = icmp sgt i32 %v5_10000eb8, -1
  %v3_10000ebc = icmp eq i32 %v5_10000eb8, -1
  store i1 %v1_10000ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ebc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000ebc, label %dec_label_pc_10000f14, label %dec_label_pc_10000ec4

dec_label_pc_10000ec4:                            ; preds = %dec_label_pc_10000e6c
  %v1_10000ec4 = icmp slt i32 %v5_10000eb8, 1
  %v2_10000ec4 = icmp sgt i32 %v5_10000eb8, 1
  %v3_10000ec4 = icmp eq i32 %v5_10000eb8, 1
  store i1 %v1_10000ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ec4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp73 = icmp slt i32 %v5_10000eb8, 2
  br i1 %tmp73, label %dec_label_pc_10000ed0, label %dec_label_pc_10000ecc

dec_label_pc_10000ecc:                            ; preds = %dec_label_pc_10000ec4
  %v1_10000ecc = add i32 %v5_10000eb8, -2
  store i32 %v1_10000ecc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000ec4, %dec_label_pc_10000ecc
  %v1_10000ed4 = phi i32 [ %v5_10000eb8, %dec_label_pc_10000ec4 ], [ %v1_10000ecc, %dec_label_pc_10000ecc ]
  %v0_10000ed0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000ed0 = add i32 %v0_10000ed0, %v1_10000ed4
  %v2_10000ed4 = add i32 %v2_10000ed0, %v1_10000ed0
  store i32 %v2_10000ed4, i32* %r9.global-to-local, align 4
  %v0_10000ed8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000ed8, i32* %r3.global-to-local, align 4
  %v0_10000edc = load i32, i32* %r29.global-to-local, align 4
  %v1_10000edc = trunc i32 %v0_10000edc to i8
  %v3_10000edc = add i32 %v2_10000ed4, 10532
  %v4_10000edc = inttoptr i32 %v3_10000edc to i8*
  store i8 %v1_10000edc, i8* %v4_10000edc, align 1
  store i32 268439268, i32* @lr, align 4
  %v1_10000ee0 = inttoptr i32 %v0_10000ed8 to i8*
  %v2_10000ee0 = call i32 @function_100095a4(i8* %v1_10000ee0)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000ee0, i32* %r29.global-to-local, align 4
  store i32 49, i32* %r3.global-to-local, align 4
  store i32 268439284, i32* %lr.global-to-local, align 4
  %v3_10000ef0 = call i32 @function_10008ae4(i32 49, i32* null)
  %v0_10000ef4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000ef4, i32* %r4.global-to-local, align 4
  %v0_10000efc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000efc, i32* %r3.global-to-local, align 4
  store i32 268439300, i32* %lr.global-to-local, align 4
  %v3_10000f00 = inttoptr i32 %v0_10000efc to i8*
  %v4_10000f00 = call i32 @function_10009954(i8* %v3_10000f00, i32 %v0_10000ef4, i32 %v3_10000ef0)
  store i32 %v4_10000f00, i32* %r3.global-to-local, align 4
  %v1_10000f04 = icmp slt i32 %v4_10000f00, 0
  %v2_10000f04 = icmp sgt i32 %v4_10000f00, 0
  %v3_10000f04 = icmp eq i32 %v4_10000f00, 0
  store i1 %v1_10000f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f04, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f04, label %dec_label_pc_10000f14, label %dec_label_pc_10000f0c

dec_label_pc_10000f0c:                            ; preds = %dec_label_pc_10000ed0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000f10 = load i32, i32* @r30, align 4
  %v2_10000f10 = add i32 %v1_10000f10, 927
  %v3_10000f10 = inttoptr i32 %v2_10000f10 to i32*
  store i32 1, i32* %v3_10000f10, align 4
  br label %dec_label_pc_10000f14

dec_label_pc_10000f14:                            ; preds = %dec_label_pc_10000ed0, %dec_label_pc_10000e6c, %dec_label_pc_10000e40, %dec_label_pc_10000f0c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  store i32 268439328, i32* %lr.global-to-local, align 4
  %v3_10000f1c = call i32 @function_10008ae4(i32 47, i32* null)
  %v0_10000f20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f20, i32* %r4.global-to-local, align 4
  %v0_10000f28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f28, i32* %r3.global-to-local, align 4
  store i32 268439344, i32* %lr.global-to-local, align 4
  %v3_10000f2c = inttoptr i32 %v0_10000f28 to i8*
  %v4_10000f2c = call i32 @function_10009954(i8* %v3_10000f2c, i32 %v0_10000f20, i32 %v3_10000f1c)
  store i32 %v4_10000f2c, i32* %r3.global-to-local, align 4
  %v1_10000f30 = icmp slt i32 %v4_10000f2c, -1
  %v2_10000f30 = icmp sgt i32 %v4_10000f2c, -1
  %v3_10000f30 = icmp eq i32 %v4_10000f2c, -1
  store i1 %v1_10000f30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f30, label %dec_label_pc_10001770, label %dec_label_pc_10000f38

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  store i32 268439364, i32* %lr.global-to-local, align 4
  %v3_10000f40 = call i32 @function_10008ae4(i32 47, i32* null)
  %v0_10000f44 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f44, i32* %r4.global-to-local, align 4
  %v0_10000f4c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f4c, i32* %r3.global-to-local, align 4
  store i32 268439380, i32* %lr.global-to-local, align 4
  %v3_10000f50 = inttoptr i32 %v0_10000f4c to i8*
  %v4_10000f50 = call i32 @function_10009954(i8* %v3_10000f50, i32 %v0_10000f44, i32 %v3_10000f40)
  store i32 %v4_10000f50, i32* %r3.global-to-local, align 4
  %v0_10000f58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000f58 = add i32 %v0_10000f58, %v4_10000f50
  store i32 %v2_10000f58, i32* %r9.global-to-local, align 4
  %v1_10000f5c = add i32 %v2_10000f58, 10532
  %v2_10000f5c = inttoptr i32 %v1_10000f5c to i8*
  %v3_10000f5c = load i8, i8* %v2_10000f5c, align 1
  %v4_10000f5c = zext i8 %v3_10000f5c to i32
  store i32 %v4_10000f5c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000f68 = xor i32 %v4_10000f5c, 32
  %v1_10000f6c = sub nsw i32 0, %v1_10000f68
  %v2_10000f6c = xor i32 %v4_10000f5c, -33
  %v4_10000f6c = icmp uge i32 %v2_10000f6c, %v1_10000f6c
  %v2_10000f70 = zext i1 %v4_10000f6c to i32
  %v3_10000f70 = add i32 %v2_10000f70, %v4_10000f50
  store i32 %v3_10000f70, i32* %r11.global-to-local, align 4
  %v0_10000f74 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000f74 = add i32 %v3_10000f70, %v0_10000f74
  store i32 %v2_10000f74, i32* %r29.global-to-local, align 4
  store i32 %v2_10000f74, i32* %r3.global-to-local, align 4
  %v1_10000f7c = load i32, i32* %r24.global-to-local, align 4
  %v2_10000f7c = sub i32 %v1_10000f7c, %v3_10000f70
  store i32 %v2_10000f7c, i32* %r4.global-to-local, align 4
  store i32 %v3_10000f70, i32* %r31.global-to-local, align 4
  store i32 268439432, i32* %lr.global-to-local, align 4
  %v5_10000f84 = call i32 @function_10009670(i32 %v2_10000f74, i32 %v2_10000f7c, i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32 2)
  store i32 %v5_10000f84, i32* %r3.global-to-local, align 4
  %v1_10000f88 = icmp slt i32 %v5_10000f84, -1
  %v2_10000f88 = icmp sgt i32 %v5_10000f84, -1
  %v3_10000f88 = icmp eq i32 %v5_10000f84, -1
  store i1 %v1_10000f88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f88, label %dec_label_pc_10000fbc, label %dec_label_pc_10000f90

dec_label_pc_10000f90:                            ; preds = %dec_label_pc_10000f38
  %v1_10000f90 = icmp slt i32 %v5_10000f84, 1
  %v2_10000f90 = icmp sgt i32 %v5_10000f84, 1
  %v3_10000f90 = icmp eq i32 %v5_10000f84, 1
  store i1 %v1_10000f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f90, i1* %cr7_eq.global-to-local, align 1
  %tmp74 = icmp slt i32 %v5_10000f84, 2
  br i1 %tmp74, label %dec_label_pc_10000f9c, label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f90
  %v1_10000f98 = add i32 %v5_10000f84, -2
  store i32 %v1_10000f98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f9c

dec_label_pc_10000f9c:                            ; preds = %dec_label_pc_10000f90, %dec_label_pc_10000f98
  %v1_10000fa4 = phi i32 [ %v5_10000f84, %dec_label_pc_10000f90 ], [ %v1_10000f98, %dec_label_pc_10000f98 ]
  %v0_10000f9c = load i32, i32* %r18.global-to-local, align 4
  %v1_10000f9c = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000f9c = add i32 %v0_10000f9c, %v1_10000fa4
  %v2_10000fa4 = add i32 %v2_10000f9c, %v1_10000f9c
  store i32 %v2_10000fa4, i32* %r9.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  %v3_10000fac = add i32 %v2_10000fa4, 10532
  %v4_10000fac = inttoptr i32 %v3_10000fac to i8*
  store i8 0, i8* %v4_10000fac, align 1
  %v0_10000fb0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000fb0, i32* @r3, align 4
  store i32 268439480, i32* @lr, align 4
  %v2_10000fb4 = call i32 @function_100096cc(i32 %v0_10000fb0, i32 10)
  store i32 %v2_10000fb4, i32* %r3.global-to-local, align 4
  %v1_10000fb8 = load i32, i32* @r30, align 4
  %v2_10000fb8 = add i32 %v1_10000fb8, 931
  %v3_10000fb8 = inttoptr i32 %v2_10000fb8 to i32*
  store i32 %v2_10000fb4, i32* %v3_10000fb8, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_10000fbc:                            ; preds = %dec_label_pc_10000f38, %dec_label_pc_10001770, %dec_label_pc_10000f9c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 46, i32* %r3.global-to-local, align 4
  %v0_10000fc8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fc8, i32* %r31.global-to-local, align 4
  store i32 268439504, i32* %lr.global-to-local, align 4
  %v3_10000fcc = call i32 @function_10008ae4(i32 46, i32* null)
  %v0_10000fd0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000fd0, i32* %r4.global-to-local, align 4
  %v0_10000fd8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 268439520, i32* %lr.global-to-local, align 4
  %v3_10000fdc = inttoptr i32 %v0_10000fd8 to i8*
  %v4_10000fdc = call i32 @function_10009954(i8* %v3_10000fdc, i32 %v0_10000fd0, i32 %v3_10000fcc)
  store i32 %v4_10000fdc, i32* %r3.global-to-local, align 4
  %v1_10000fe0 = icmp slt i32 %v4_10000fdc, -1
  %v2_10000fe0 = icmp sgt i32 %v4_10000fdc, -1
  %v3_10000fe0 = icmp eq i32 %v4_10000fdc, -1
  store i1 %v1_10000fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fe0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000fe0, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_10000fe8:                            ; preds = %dec_label_pc_10000fbc, %dec_label_pc_100010f4
  %v0_10000fe8 = load i32, i32* @r30, align 4
  %v1_10000fe8 = add i32 %v0_10000fe8, 935
  %v2_10000fe8 = inttoptr i32 %v1_10000fe8 to i32*
  %v3_10000fe8 = load i32, i32* %v2_10000fe8, align 4
  store i32 %v3_10000fe8, i32* %r0.global-to-local, align 4
  %v1_10000fec = icmp slt i32 %v3_10000fe8, 4
  %v2_10000fec = icmp sgt i32 %v3_10000fe8, 4
  %v3_10000fec = icmp eq i32 %v3_10000fe8, 4
  store i1 %v1_10000fec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000fec, label %dec_label_pc_1000111c, label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fe8
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268439552, i32* %lr.global-to-local, align 4
  %v3_10000ffc = call i32 @function_10008ae4(i32 46, i32* null)
  %v0_10001000 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001000, i32* %r4.global-to-local, align 4
  %v0_10001008 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001008, i32* %r3.global-to-local, align 4
  store i32 268439568, i32* %lr.global-to-local, align 4
  %v3_1000100c = inttoptr i32 %v0_10001008 to i8*
  %v4_1000100c = call i32 @function_10009954(i8* %v3_1000100c, i32 %v0_10001000, i32 %v3_10000ffc)
  store i32 %v4_1000100c, i32* %r3.global-to-local, align 4
  %v0_10001010 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001010 = add i32 %v0_10001010, %v4_1000100c
  store i32 %v2_10001010, i32* %r26.global-to-local, align 4
  %v0_10001014 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001014 = add i32 %v0_10001014, %v2_10001010
  store i32 %v2_10001014, i32* %r9.global-to-local, align 4
  %v1_10001018 = add i32 %v2_10001014, 10532
  %v2_10001018 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001018 = load i8, i8* %v2_10001018, align 1
  %v4_10001018 = zext i8 %v3_10001018 to i32
  store i32 %v4_10001018, i32* %r0.global-to-local, align 4
  %v1_1000101c = icmp ult i8 %v3_10001018, 32
  %v2_1000101c = icmp ugt i8 %v3_10001018, 32
  %v3_1000101c = icmp eq i8 %v3_10001018, 32
  store i1 %v1_1000101c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000101c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000101c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000101c, label %dec_label_pc_1000124c, label %dec_label_pc_10001024

dec_label_pc_10001024:                            ; preds = %dec_label_pc_10000ff4, %dec_label_pc_1000124c
  %v0_1000102c = phi i32 [ %v4_1000100c, %dec_label_pc_10000ff4 ], [ %v1_1000124c, %dec_label_pc_1000124c ]
  %v1_10001024 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001024 = sub i32 %v1_10001024, %v0_10001010
  store i32 %v2_10001024, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000102c = sub i32 %v2_10001024, %v0_1000102c
  store i32 %v2_1000102c, i32* %r27.global-to-local, align 4
  %v0_10001030 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001030 = add i32 %v0_10001030, %v0_1000102c
  store i32 %v2_10001030, i32* %r29.global-to-local, align 4
  store i32 %v2_10001030, i32* %r3.global-to-local, align 4
  store i32 %v2_1000102c, i32* %r4.global-to-local, align 4
  store i32 268439624, i32* %lr.global-to-local, align 4
  %v5_10001044 = call i32 @function_10009670(i32 %v2_10001030, i32 %v2_1000102c, i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32 2)
  store i32 %v5_10001044, i32* %r3.global-to-local, align 4
  %v1_10001048 = icmp slt i32 %v5_10001044, -1
  %v2_10001048 = icmp sgt i32 %v5_10001044, -1
  %v3_10001048 = icmp eq i32 %v5_10001044, -1
  store i1 %v1_10001048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001048, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001048, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_10001044, i32* %r31.global-to-local, align 4
  br i1 %v3_10001048, label %dec_label_pc_100010f0, label %dec_label_pc_10001054

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001024
  %v1_10001054 = icmp slt i32 %v5_10001044, 1
  %v2_10001054 = icmp sgt i32 %v5_10001044, 1
  %v3_10001054 = icmp eq i32 %v5_10001044, 1
  store i1 %v1_10001054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001054, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001054, i1* %cr7_eq.global-to-local, align 1
  %v0_10001058 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001058 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001058 = add i32 %v1_10001058, %v0_10001058
  store i32 %v2_10001058, i32* %r28.global-to-local, align 4
  %tmp75 = icmp slt i32 %v5_10001044, 2
  br i1 %tmp75, label %dec_label_pc_10001064, label %dec_label_pc_10001060

dec_label_pc_10001060:                            ; preds = %dec_label_pc_10001054
  %v1_10001060 = add i32 %v5_10001044, -2
  store i32 %v1_10001060, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001064

dec_label_pc_10001064:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10001060
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001068, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c668.39 to i32), i32* %r25.global-to-local, align 4
  %v0_10001070 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001070, i32* %r4.global-to-local, align 4
  store i32 268439680, i32* %lr.global-to-local, align 4
  %v4_1000107c = call i32 @function_10009670(i32 %v0_10001068, i32 %v0_10001070, i32 ptrtoint (i32* @global_var_1000c668.39 to i32), i32 1)
  store i32 %v4_1000107c, i32* %r3.global-to-local, align 4
  %v1_10001080 = icmp slt i32 %v4_1000107c, 0
  %v2_10001080 = icmp sgt i32 %v4_1000107c, 0
  %v3_10001080 = icmp eq i32 %v4_1000107c, 0
  store i1 %v1_10001080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001080, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001080, i1* %cr7_eq.global-to-local, align 1
  %tmp76 = icmp slt i32 %v4_1000107c, 1
  br i1 %tmp76, label %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, label %dec_label_pc_10001088

dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge: ; preds = %dec_label_pc_10001064
  %v1_100010a0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_10001088:                            ; preds = %dec_label_pc_10001064
  %v0_10001088 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001088, i32* %r3.global-to-local, align 4
  %v0_1000108c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000108c, i32* %r4.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r25.global-to-local, align 4
  store i32 268439708, i32* %lr.global-to-local, align 4
  %v4_10001098 = call i32 @function_10009670(i32 %v0_10001088, i32 %v0_1000108c, i32 %v0_10001090, i32 1)
  store i32 %v4_10001098, i32* %r3.global-to-local, align 4
  %v1_1000109c = add i32 %v4_10001098, -1
  store i32 %v1_1000109c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_100010a0:                            ; preds = %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, %dec_label_pc_10001088
  %v1_100010a0 = phi i32 [ %v1_100010a0.pre, %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge ], [ %v1_1000109c, %dec_label_pc_10001088 ]
  %v0_100010a0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100010a0 = add i32 %v0_100010a0, %v1_100010a0
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100010a8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100010a8 = add i32 %v2_100010a0, %v1_100010a8
  store i32 %v2_100010a8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010a8, 10532
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i8*
  store i8 0, i8* %v4_100010b0, align 1
  %v0_100010b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100010b4 = load i32, i32* @r1, align 4
  %v2_100010b4 = add i32 %v1_100010b4, 8
  %v3_100010b4 = inttoptr i32 %v2_100010b4 to i32*
  store i32 %v0_100010b4, i32* %v3_100010b4, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010bc:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010c8

dec_label_pc_100010c8:                            ; preds = %dec_label_pc_100010bc
  %v1_100010c8 = add i32 %v3_100010d8, 1
  store i32 %v1_100010c8, i32* %r11.global-to-local, align 4
  store i32 %v1_100010c8, i32* %v2_100010d8, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010d0:                            ; preds = %dec_label_pc_100010a0, %dec_label_pc_100010c8
  %v0_100010d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100010d0, i32* %r3.global-to-local, align 4
  store i32 268439768, i32* @lr, align 4
  %v1_100010d4 = inttoptr i32 %v0_100010d0 to i8*
  %v2_100010d4 = call i32 @function_100095a4(i8* %v1_100010d4)
  store i32 %v2_100010d4, i32* %r3.global-to-local, align 4
  %v0_100010d8 = load i32, i32* @r1, align 4
  %v1_100010d8 = add i32 %v0_100010d8, 8
  %v2_100010d8 = inttoptr i32 %v1_100010d8 to i32*
  %v3_100010d8 = load i32, i32* %v2_100010d8, align 4
  store i32 %v3_100010d8, i32* %r29.global-to-local, align 4
  %v2_100010dc = icmp slt i32 %v2_100010d4, %v3_100010d8
  %v3_100010dc = icmp sgt i32 %v2_100010d4, %v3_100010d8
  %v4_100010dc = icmp eq i32 %v2_100010d4, %v3_100010d8
  store i1 %v2_100010dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100010dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100010dc, i1* %cr7_eq.global-to-local, align 1
  %v0_100010bc = load i32, i32* %r28.global-to-local, align 4
  %v2_100010bc = add i32 %v0_100010bc, %v3_100010d8
  %v3_100010bc = inttoptr i32 %v2_100010bc to i8*
  %v4_100010bc = load i8, i8* %v3_100010bc, align 1
  %v5_100010bc = zext i8 %v4_100010bc to i32
  store i32 %v5_100010bc, i32* %r0.global-to-local, align 4
  %v1_100010c0 = icmp ult i8 %v4_100010bc, 61
  %v2_100010c0 = icmp ugt i8 %v4_100010bc, 61
  %v3_100010c0 = icmp eq i8 %v4_100010bc, 61
  store i1 %v1_100010c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100010c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100010c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100010dc, label %dec_label_pc_100010bc, label %dec_label_pc_100010e4

dec_label_pc_100010e4:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010f0

dec_label_pc_100010f0:                            ; preds = %dec_label_pc_10001228, %dec_label_pc_10001258, %dec_label_pc_100010e4, %dec_label_pc_10001024
  %v0_100010f0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100010f0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_100010f4:                            ; preds = %dec_label_pc_10001268, %dec_label_pc_100010f0
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268439808, i32* %lr.global-to-local, align 4
  %v3_100010fc = call i32 @function_10008ae4(i32 46, i32* null)
  %v0_10001100 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001100 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001100 = add i32 %v1_10001100, %v0_10001100
  store i32 %v2_10001100, i32* %r31.global-to-local, align 4
  %v0_10001108 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001108, i32* %r4.global-to-local, align 4
  store i32 %v2_10001100, i32* %r3.global-to-local, align 4
  store i32 268439828, i32* %lr.global-to-local, align 4
  %v3_10001110 = inttoptr i32 %v2_10001100 to i8*
  %v4_10001110 = call i32 @function_10009954(i8* %v3_10001110, i32 %v0_10001108, i32 %v3_100010fc)
  store i32 %v4_10001110, i32* %r3.global-to-local, align 4
  %v1_10001114 = icmp slt i32 %v4_10001110, -1
  %v2_10001114 = icmp sgt i32 %v4_10001110, -1
  %v3_10001114 = icmp eq i32 %v4_10001110, -1
  store i1 %v1_10001114, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001114, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001114, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001114, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_100010f4, %dec_label_pc_10000fe8, %dec_label_pc_10000fbc
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 268439848, i32* %lr.global-to-local, align 4
  %v3_10001124 = call i32 @function_10008ae4(i32 45, i32* null)
  %v0_10001128 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001128, i32* %r4.global-to-local, align 4
  %v0_10001130 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001130, i32* %r3.global-to-local, align 4
  store i32 268439864, i32* %lr.global-to-local, align 4
  %v3_10001134 = inttoptr i32 %v0_10001130 to i8*
  %v4_10001134 = call i32 @function_10009954(i8* %v3_10001134, i32 %v0_10001128, i32 %v3_10001124)
  store i32 %v4_10001134, i32* %r3.global-to-local, align 4
  %v1_10001138 = icmp slt i32 %v4_10001134, -1
  %v2_10001138 = icmp sgt i32 %v4_10001134, -1
  %v3_10001138 = icmp eq i32 %v4_10001134, -1
  store i1 %v1_10001138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001138, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001138, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001138, label %dec_label_pc_10001574, label %dec_label_pc_10001140

dec_label_pc_10001140:                            ; preds = %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 268439884, i32* %lr.global-to-local, align 4
  %v3_10001148 = call i32 @function_10008ae4(i32 45, i32* null)
  %v0_1000114c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000114c, i32* %r4.global-to-local, align 4
  %v0_10001154 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001154, i32* %r3.global-to-local, align 4
  store i32 268439900, i32* %lr.global-to-local, align 4
  %v3_10001158 = inttoptr i32 %v0_10001154 to i8*
  %v4_10001158 = call i32 @function_10009954(i8* %v3_10001158, i32 %v0_1000114c, i32 %v3_10001148)
  store i32 %v4_10001158, i32* %r3.global-to-local, align 4
  %v0_10001160 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001160 = add i32 %v0_10001160, %v4_10001158
  store i32 %v2_10001160, i32* %r9.global-to-local, align 4
  %v1_10001164 = add i32 %v2_10001160, 10532
  %v2_10001164 = inttoptr i32 %v1_10001164 to i8*
  %v3_10001164 = load i8, i8* %v2_10001164, align 1
  %v4_10001164 = zext i8 %v3_10001164 to i32
  store i32 %v4_10001164, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10001170 = xor i32 %v4_10001164, 32
  %v1_10001174 = sub nsw i32 0, %v1_10001170
  %v2_10001174 = xor i32 %v4_10001164, -33
  %v4_10001174 = icmp uge i32 %v2_10001174, %v1_10001174
  %v2_10001178 = zext i1 %v4_10001174 to i32
  %v3_10001178 = add i32 %v2_10001178, %v4_10001158
  store i32 %v3_10001178, i32* %r11.global-to-local, align 4
  %v0_1000117c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000117c = add i32 %v3_10001178, %v0_1000117c
  store i32 %v2_1000117c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000117c, i32* %r3.global-to-local, align 4
  %v1_10001184 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001184 = sub i32 %v1_10001184, %v3_10001178
  store i32 %v2_10001184, i32* %r4.global-to-local, align 4
  store i32 %v3_10001178, i32* @r31, align 4
  store i32 268439952, i32* %lr.global-to-local, align 4
  %v5_1000118c = call i32 @function_10009670(i32 %v2_1000117c, i32 %v2_10001184, i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32 2)
  store i32 %v5_1000118c, i32* %r3.global-to-local, align 4
  %v1_10001190 = icmp slt i32 %v5_1000118c, -1
  %v2_10001190 = icmp sgt i32 %v5_1000118c, -1
  %v3_10001190 = icmp eq i32 %v5_1000118c, -1
  store i1 %v1_10001190, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001190, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001190, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001190, label %dec_label_pc_10001574, label %dec_label_pc_10001198

dec_label_pc_10001198:                            ; preds = %dec_label_pc_10001140
  %v1_10001198 = icmp slt i32 %v5_1000118c, 1
  %v2_10001198 = icmp sgt i32 %v5_1000118c, 1
  %v3_10001198 = icmp eq i32 %v5_1000118c, 1
  store i1 %v1_10001198, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001198, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001198, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp slt i32 %v5_1000118c, 2
  br i1 %tmp77, label %dec_label_pc_100011a4, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001198
  %v1_100011a0 = add i32 %v5_1000118c, -2
  store i32 %v1_100011a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011a4

dec_label_pc_100011a4:                            ; preds = %dec_label_pc_10001198, %dec_label_pc_100011a0
  %v1_100011ac = phi i32 [ %v5_1000118c, %dec_label_pc_10001198 ], [ %v1_100011a0, %dec_label_pc_100011a0 ]
  %v0_100011a4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100011a4 = load i32, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100011a4 = add i32 %v0_100011a4, %v1_100011ac
  %v2_100011ac = add i32 %v2_100011a4, %v1_100011a4
  store i32 %v2_100011ac, i32* %r9.global-to-local, align 4
  %v1_100011b0 = add i32 %v1_100011ac, 1
  store i32 %v1_100011b0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v3_100011b8 = add i32 %v2_100011ac, 10532
  %v4_100011b8 = inttoptr i32 %v3_100011b8 to i8*
  store i8 0, i8* %v4_100011b8, align 1
  %v0_100011bc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100011bc, i32* %r3.global-to-local, align 4
  %v0_100011c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c0, i32* %r4.global-to-local, align 4
  store i32 268440016, i32* %lr.global-to-local, align 4
  %v5_100011cc = call i32 @function_10009670(i32 %v0_100011bc, i32 %v0_100011c0, i32 ptrtoint ([5 x i8]* @global_var_1000c66c.40 to i32), i32 4)
  store i32 %v5_100011cc, i32* %r3.global-to-local, align 4
  %v1_100011d0 = icmp slt i32 %v5_100011cc, 4
  %v2_100011d0 = icmp sgt i32 %v5_100011cc, 4
  %v3_100011d0 = icmp eq i32 %v5_100011cc, 4
  store i1 %v1_100011d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011d0, label %dec_label_pc_100017fc, label %dec_label_pc_100011d8

dec_label_pc_100011d8:                            ; preds = %dec_label_pc_100011a4
  %v0_100011d8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100011d8 = load i32, i32* @r31, align 4
  %v2_100011d8 = add i32 %v1_100011d8, %v0_100011d8
  %v3_100011d8 = inttoptr i32 %v2_100011d8 to i8*
  %v4_100011d8 = load i8, i8* %v3_100011d8, align 1
  %v5_100011d8 = zext i8 %v4_100011d8 to i32
  store i32 %v5_100011d8, i32* %r0.global-to-local, align 4
  %v1_100011dc = icmp ult i8 %v4_100011d8, 47
  %v2_100011dc = icmp ugt i8 %v4_100011d8, 47
  %v3_100011dc = icmp eq i8 %v4_100011d8, 47
  store i1 %v1_100011dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011dc, label %dec_label_pc_10001a1c, label %dec_label_pc_100011e4

dec_label_pc_100011e4:                            ; preds = %dec_label_pc_10001350, %dec_label_pc_1000190c, %dec_label_pc_10001a40, %dec_label_pc_10001a1c, %dec_label_pc_100018b4, %dec_label_pc_1000189c, %dec_label_pc_100011d8, %dec_label_pc_100018d8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100011e8 = load i32, i32* @r30, align 4
  %v3_100011e8 = add i32 %v2_100011e8, -529
  %v4_100011e8 = inttoptr i32 %v3_100011e8 to i8*
  store i8 1, i8* %v4_100011e8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100011f0:                            ; preds = %dec_label_pc_100010bc, %dec_label_pc_100010e4
  %v0_100011f0 = load i32, i32* @r30, align 4
  %v1_100011f0 = add i32 %v0_100011f0, 935
  %v2_100011f0 = inttoptr i32 %v1_100011f0 to i32*
  %v3_100011f0 = load i32, i32* %v2_100011f0, align 4
  store i32 %v3_100011f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_100010d8, align 4
  %v0_100011fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100011fc = icmp slt i32 %v0_100011fc, 0
  %v2_100011fc = icmp sgt i32 %v0_100011fc, 0
  %v3_100011fc = icmp eq i32 %v0_100011fc, 0
  store i1 %v1_100011fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011fc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011fc, i1* %cr7_eq.global-to-local, align 1
  %tmp78 = icmp slt i32 %v0_100011fc, 1
  br i1 %tmp78, label %dec_label_pc_10001258, label %dec_label_pc_10001204

dec_label_pc_10001204:                            ; preds = %dec_label_pc_100011f0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_1000120c:                            ; preds = %dec_label_pc_10001228
  %v0_1000120c = load i32, i32* @r1, align 4
  %v1_1000120c = add i32 %v0_1000120c, 8
  %v2_1000120c = inttoptr i32 %v1_1000120c to i32*
  %v3_1000120c = load i32, i32* %v2_1000120c, align 4
  store i32 %v3_1000120c, i32* %r9.global-to-local, align 4
  %v0_10001210 = load i32, i32* @r30, align 4
  %v1_10001210 = add i32 %v0_10001210, 935
  %v2_10001210 = inttoptr i32 %v1_10001210 to i32*
  %v3_10001210 = load i32, i32* %v2_10001210, align 4
  store i32 %v3_10001210, i32* %r0.global-to-local, align 4
  %v1_10001214 = add i32 %v3_1000120c, 1
  store i32 %v1_10001214, i32* %r11.global-to-local, align 4
  %v2_10001218 = icmp slt i32 %v3_10001210, %v1_10001214
  %v3_10001218 = icmp sgt i32 %v3_10001210, %v1_10001214
  %v4_10001218 = icmp eq i32 %v3_10001210, %v1_10001214
  store i1 %v2_10001218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001218, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001218, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001214, i32* %r4.global-to-local, align 4
  store i32 %v1_10001214, i32* %v2_1000120c, align 4
  br i1 %v3_10001218, label %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, label %dec_label_pc_10001258

dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge: ; preds = %dec_label_pc_1000120c
  %v0_10001228.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_10001228:                            ; preds = %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, %dec_label_pc_10001204
  %v0_10001228 = phi i32 [ %v0_10001228.pre, %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge ], [ 0, %dec_label_pc_10001204 ]
  %v1_10001228 = mul i32 %v0_10001228, 128
  %v0_1000122c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  %v1_10001230 = add i32 %v1_10001228, 1472
  %v0_10001234 = load i32, i32* %r29.global-to-local, align 4
  %v0_10001238 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001238 = add i32 %v1_10001230, %v0_10001238
  store i32 %v2_10001238, i32* %r4.global-to-local, align 4
  store i32 268440128, i32* %lr.global-to-local, align 4
  %v3_1000123c = inttoptr i32 %v0_1000122c to i8*
  %v4_1000123c = call i32 @function_10009a80(i8* %v3_1000123c, i32 %v2_10001238, i32 %v0_10001234)
  store i32 %v4_1000123c, i32* %r3.global-to-local, align 4
  %v1_10001240 = icmp slt i32 %v4_1000123c, 0
  %v2_10001240 = icmp sgt i32 %v4_1000123c, 0
  %v3_10001240 = icmp eq i32 %v4_1000123c, 0
  store i1 %v1_10001240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001240, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001240, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001240, label %dec_label_pc_1000120c, label %dec_label_pc_100010f0

dec_label_pc_1000124c:                            ; preds = %dec_label_pc_10000ff4
  %v1_1000124c = add i32 %v4_1000100c, 1
  store i32 %v1_1000124c, i32* %r3.global-to-local, align 4
  %v2_10001250 = add i32 %v0_10001010, %v1_1000124c
  store i32 %v2_10001250, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001024

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000120c, %dec_label_pc_100011f0
  %v0_10001258 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001258, i32* %r3.global-to-local, align 4
  store i32 268440160, i32* @lr, align 4
  %v1_1000125c = inttoptr i32 %v0_10001258 to i8*
  %v2_1000125c = call i32 @function_100095a4(i8* %v1_1000125c)
  store i32 %v2_1000125c, i32* %r3.global-to-local, align 4
  %v1_10001260 = icmp slt i32 %v2_1000125c, 127
  %v2_10001260 = icmp sgt i32 %v2_1000125c, 127
  %v3_10001260 = icmp eq i32 %v2_1000125c, 127
  store i1 %v1_10001260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001260, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001260, label %dec_label_pc_100010f0, label %dec_label_pc_10001268

dec_label_pc_10001268:                            ; preds = %dec_label_pc_10001258
  %v0_10001268 = load i32, i32* @r30, align 4
  %v1_10001268 = add i32 %v0_10001268, 935
  %v2_10001268 = inttoptr i32 %v1_10001268 to i32*
  %v3_10001268 = load i32, i32* %v2_10001268, align 4
  %v0_1000126c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000126c, i32* %r4.global-to-local, align 4
  %v0_10001270 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001270, i32* %r29.global-to-local, align 4
  %v1_10001274 = mul i32 %v3_10001268, 128
  %v1_10001278 = add i32 %v1_10001274, 1472
  %v0_1000127c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000127c = add i32 %v1_10001278, %v0_1000127c
  store i32 %v2_1000127c, i32* @r3, align 4
  store i32 268440196, i32* %lr.global-to-local, align 4
  %v2_10001280 = inttoptr i32 %v2_1000127c to i8*
  %v3_10001280 = call i32 @function_100095cc(i8* %v2_10001280, i32 %v0_1000126c)
  store i32 %v3_10001280, i32* %r3.global-to-local, align 4
  %v0_10001284 = load i32, i32* @r30, align 4
  %v1_10001284 = add i32 %v0_10001284, 935
  %v2_10001284 = inttoptr i32 %v1_10001284 to i32*
  %v3_10001284 = load i32, i32* %v2_10001284, align 4
  %v1_10001288 = add i32 %v3_10001284, 1
  store i32 %v1_10001288, i32* %r9.global-to-local, align 4
  store i32 %v1_10001288, i32* %v2_10001284, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_10001294:                            ; preds = %dec_label_pc_10000814
  store i32 268440216, i32* %lr.global-to-local, align 4
  %v0_10001294 = call i32 @function_1000a4bc()
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  %v0_10001298 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001298 = add i32 %v0_10001298, 1472
  store i32 %v1_10001298, i32* %r0.global-to-local, align 4
  %v1_1000129c = load i32, i32* @r1, align 4
  %v2_1000129c = add i32 %v1_1000129c, 20808
  %v3_1000129c = inttoptr i32 %v2_1000129c to i32*
  store i32 %v1_10001298, i32* %v3_1000129c, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_100012a4 = load i32, i32* @r30, align 4
  %v1_100012a4 = add i32 %v0_100012a4, 1579
  %v2_100012a4 = inttoptr i32 %v1_100012a4 to i32*
  %v3_100012a4 = load i32, i32* %v2_100012a4, align 4
  store i32 %v3_100012a4, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v0_10001294, i32* %r25.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32* %r15.global-to-local, align 4
  %v1_100012b4 = icmp slt i32 %v3_100012a4, 1024
  %v2_100012b4 = icmp sgt i32 %v3_100012a4, 1024
  %v3_100012b4 = icmp eq i32 %v3_100012a4, 1024
  store i1 %v1_100012b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012b4, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_1000c668.39 to i32), i32* %r14.global-to-local, align 4
  %v0_100012bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100012bc = add i32 %v0_100012bc, 2116
  store i32 %v1_100012bc, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br i1 %v3_100012b4, label %dec_label_pc_100013c8, label %dec_label_pc_100012c8

dec_label_pc_100012c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge, %dec_label_pc_10001294
  %v1_100012d0 = phi i32 [ %v1_100012d0.pre, %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge ], [ %v0_10001294, %dec_label_pc_10001294 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  store i32 0, i32* %v2_100012d0, align 4
  %v0_100012d4 = load i32, i32* @r30, align 4
  %v1_100012d4 = add i32 %v0_100012d4, 1579
  %v2_100012d4 = inttoptr i32 %v1_100012d4 to i32*
  %v3_100012d4 = load i32, i32* %v2_100012d4, align 4
  store i32 %v3_100012d4, i32* %r4.global-to-local, align 4
  %v1_100012d8 = add i32 %v0_100012d4, -533
  %v2_100012d8 = inttoptr i32 %v1_100012d8 to i32*
  %v3_100012d8 = load i32, i32* %v2_100012d8, align 4
  store i32 %v3_100012d8, i32* %r3.global-to-local, align 4
  %v1_100012dc = sub i32 1024, %v3_100012d4
  %v0_100012e0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100012e0 = add i32 %v0_100012e0, %v3_100012d4
  store i32 %v2_100012e0, i32* %r4.global-to-local, align 4
  store i32 268440296, i32* @lr, align 4
  %v4_100012e4 = call i32 @function_1000a9c4(i32 %v3_100012d8, i32 %v2_100012e0, i32 %v1_100012dc, i32 16384)
  store i32 %v4_100012e4, i32* %r3.global-to-local, align 4
  %v3_100012e8 = icmp eq i32 %v4_100012e4, 0
  br i1 %v3_100012e8, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  %v1_10001308 = phi i32 [ %v4_10001400, %dec_label_pc_100013c8 ], [ %v4_100012e4, %dec_label_pc_100012c8 ]
  %v1_100012f0 = icmp slt i32 %v1_10001308, -1
  %v2_100012f0 = icmp sgt i32 %v1_10001308, -1
  %v3_100012f0 = icmp eq i32 %v1_10001308, -1
  store i1 %v1_100012f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100012f0, label %dec_label_pc_100017ec, label %dec_label_pc_100012f8

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012f0
  %v0_100012f8 = load i32, i32* @r30, align 4
  %v1_100012f8 = add i32 %v0_100012f8, 1579
  %v2_100012f8 = inttoptr i32 %v1_100012f8 to i32*
  %v3_100012f8 = load i32, i32* %v2_100012f8, align 4
  store i32 %v3_100012f8, i32* %r29.global-to-local, align 4
  %v0_100012fc = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100012fc, i32* %r24.global-to-local, align 4
  %v0_10001300 = load i32, i32* @r1, align 4
  %v1_10001300 = add i32 %v0_10001300, 20792
  %v2_10001300 = inttoptr i32 %v1_10001300 to i32*
  %v3_10001300 = load i32, i32* %v2_10001300, align 4
  store i32 %v3_10001300, i32* %r0.global-to-local, align 4
  %v0_10001304 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10001304, i32* %r17.global-to-local, align 4
  %v2_10001308 = add i32 %v3_100012f8, %v1_10001308
  store i32 %v2_10001308, i32* %r29.global-to-local, align 4
  %v2_1000130c = add i32 %v0_100012f8, -525
  %v3_1000130c = inttoptr i32 %v2_1000130c to i32*
  store i32 %v3_10001300, i32* %v3_1000130c, align 4
  %v0_10001310 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001310 = load i32, i32* @r30, align 4
  %v2_10001310 = add i32 %v1_10001310, 1579
  %v3_10001310 = inttoptr i32 %v2_10001310 to i32*
  store i32 %v0_10001310, i32* %v3_10001310, align 4
  br label %dec_label_pc_1000139c

dec_label_pc_10001318:                            ; preds = %dec_label_pc_1000139c
  %v1_10001318 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001318 = icmp sgt i32 %v3_1000139c, %v1_10001318
  %v1_10001318.v3_1000139c = select i1 %v3_10001318, i32 %v1_10001318, i32 %v3_1000139c
  store i32 %v1_10001318.v3_1000139c, i32* %r28.global-to-local, align 4
  %v1_10001328 = add i32 %v0_1000139c, 919
  %v2_10001328 = inttoptr i32 %v1_10001328 to i32*
  %v3_10001328 = load i32, i32* %v2_10001328, align 4
  store i32 %v3_10001328, i32* %r0.global-to-local, align 4
  %v2_1000132c = sub i32 %v3_1000139c, %v1_10001318.v3_1000139c
  store i32 %v2_1000132c, i32* @r31, align 4
  store i32 %v2_1000132c, i32* %v2_1000139c, align 4
  %v0_10001334 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001334 = icmp slt i32 %v0_10001334, 1
  %v2_10001334 = icmp sgt i32 %v0_10001334, 1
  %v3_10001334 = icmp eq i32 %v0_10001334, 1
  store i1 %v1_10001334, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001334, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001334, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001334, label %dec_label_pc_1000142c, label %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge

dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge: ; preds = %dec_label_pc_10001318
  %v0_1000133c.pr.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000133c:                            ; preds = %dec_label_pc_100013a8, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge, %dec_label_pc_10001454
  %v0_1000133c = phi i32 [ %v3_10001454, %dec_label_pc_10001454 ], [ %v0_1000133c.pr.pre, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge ], [ %v3_1000139c, %dec_label_pc_100013a8 ]
  %v1_1000133c = icmp slt i32 %v0_1000133c, 0
  %v2_1000133c = icmp sgt i32 %v0_1000133c, 0
  %v3_1000133c = icmp eq i32 %v0_1000133c, 0
  store i1 %v1_1000133c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000133c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000133c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000133c, label %dec_label_pc_10001344, label %dec_label_pc_10001364

dec_label_pc_10001344:                            ; preds = %dec_label_pc_1000133c
  %v0_10001344 = load i32, i32* @r30, align 4
  %v1_10001344 = add i32 %v0_10001344, 927
  %v2_10001344 = inttoptr i32 %v1_10001344 to i32*
  %v3_10001344 = load i32, i32* %v2_10001344, align 4
  store i32 %v3_10001344, i32* %r29.global-to-local, align 4
  %v1_10001348 = icmp slt i32 %v3_10001344, 1
  %v2_10001348 = icmp sgt i32 %v3_10001344, 1
  %v3_10001348 = icmp eq i32 %v3_10001344, 1
  store i1 %v1_10001348, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001348, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001348, i1* %cr7_eq.global-to-local, align 1
  %v1_1000145c = add i32 %v0_10001344, 1579
  %v2_1000145c = inttoptr i32 %v1_1000145c to i32*
  %v3_1000145c = load i32, i32* %v2_1000145c, align 4
  br i1 %v3_10001348, label %dec_label_pc_1000145c, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_10001344
  %v0_10001354 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001354 = sub i32 %v3_1000145c, %v0_10001354
  store i32 %v2_10001354, i32* %r0.global-to-local, align 4
  %v1_10001358 = icmp slt i32 %v2_10001354, 0
  %v2_10001358 = icmp sgt i32 %v2_10001354, 0
  %v3_10001358 = icmp eq i32 %v2_10001354, 0
  store i1 %v1_10001358, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001358, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001358, i1* %cr7_eq.global-to-local, align 1
  %v2_1000135c = add i32 %v0_10001344, 931
  %v3_1000135c = inttoptr i32 %v2_1000135c to i32*
  store i32 %v2_10001354, i32* %v3_1000135c, align 4
  br i1 %v3_10001358, label %dec_label_pc_100011e4, label %dec_label_pc_10001364

dec_label_pc_10001364:                            ; preds = %dec_label_pc_1000133c, %dec_label_pc_1000145c, %dec_label_pc_10001350, %dec_label_pc_100014e4
  %v0_10001364 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001364 = icmp slt i32 %v0_10001364, 0
  %v2_10001364 = icmp sgt i32 %v0_10001364, 0
  %v3_10001364 = icmp eq i32 %v0_10001364, 0
  store i1 %v1_10001364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001364, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001364, label %dec_label_pc_100013b0, label %dec_label_pc_1000136c

dec_label_pc_1000136c:                            ; preds = %dec_label_pc_10001364
  %v0_1000136c = load i32, i32* @r30, align 4
  %v1_1000136c = add i32 %v0_1000136c, 1579
  %v2_1000136c = inttoptr i32 %v1_1000136c to i32*
  %v3_1000136c = load i32, i32* %v2_1000136c, align 4
  store i32 %v3_1000136c, i32* %r0.global-to-local, align 4
  %v0_10001370 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001370 = add i32 %v0_10001370, %v0_10001364
  store i32 %v2_10001370, i32* %r4.global-to-local, align 4
  store i32 %v0_10001370, i32* %r3.global-to-local, align 4
  %v2_10001378 = sub i32 %v3_1000136c, %v0_10001364
  store i32 %v2_10001378, i32* %r29.global-to-local, align 4
  store i32 %v2_10001378, i32* %v2_1000136c, align 4
  %v0_10001380 = load i32, i32* %r29.global-to-local, align 4
  store i32 268440456, i32* @lr, align 4
  %v3_10001384 = call i32 @function_1000a500(i32 %v0_10001370, i32 %v2_10001370, i32 %v0_10001380)
  store i32 %v3_10001384, i32* %r3.global-to-local, align 4
  %v0_10001388 = load i32, i32* @r30, align 4
  %v1_10001388 = add i32 %v0_10001388, 1579
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r29.global-to-local, align 4
  %v1_1000138c = icmp slt i32 %v3_10001388, 0
  %v2_1000138c = icmp sgt i32 %v3_10001388, 0
  %v3_1000138c = icmp eq i32 %v3_10001388, 0
  store i1 %v1_1000138c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000138c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000138c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001390 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, %v3_10001388
  store i32 %v2_10001390, i32* %r9.global-to-local, align 4
  %v0_10001394 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001394 = trunc i32 %v0_10001394 to i8
  %v3_10001394 = add i32 %v2_10001390, 2116
  %v4_10001394 = inttoptr i32 %v3_10001394 to i8*
  store i8 %v1_10001394, i8* %v4_10001394, align 1
  %v0_10001398 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001398, label %dec_label_pc_100013b0, label %dec_label_pc_1000139c

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_100012f8
  %v0_1000139c = load i32, i32* @r30, align 4
  %v1_1000139c = add i32 %v0_1000139c, 931
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  %v3_1000139c = load i32, i32* %v2_1000139c, align 4
  store i32 %v3_1000139c, i32* @r31, align 4
  %v1_100013a0 = icmp slt i32 %v3_1000139c, 0
  %v2_100013a0 = icmp sgt i32 %v3_1000139c, 0
  %v3_100013a0 = icmp eq i32 %v3_1000139c, 0
  store i1 %v1_100013a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100013a0, label %dec_label_pc_10001318, label %dec_label_pc_100013a8

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000139c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_10001364
  %v0_100013b0 = load i32, i32* @r30, align 4
  %v1_100013b0 = add i32 %v0_100013b0, -529
  %v2_100013b0 = inttoptr i32 %v1_100013b0 to i8*
  %v3_100013b0 = load i8, i8* %v2_100013b0, align 1
  %v4_100013b0 = zext i8 %v3_100013b0 to i32
  store i32 %v4_100013b0, i32* %r0.global-to-local, align 4
  %v1_100013b4 = icmp ult i8 %v3_100013b0, 7
  %v2_100013b4 = icmp ugt i8 %v3_100013b0, 7
  %v3_100013b4 = icmp eq i8 %v3_100013b0, 7
  store i1 %v1_100013b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013b4, label %dec_label_pc_100013bc, label %dec_label_pc_10000824

dec_label_pc_100013bc:                            ; preds = %dec_label_pc_100013b0
  %v1_100013bc = add i32 %v0_100013b0, 1579
  %v2_100013bc = inttoptr i32 %v1_100013bc to i32*
  %v3_100013bc = load i32, i32* %v2_100013bc, align 4
  store i32 %v3_100013bc, i32* %r0.global-to-local, align 4
  %v1_100013c0 = icmp slt i32 %v3_100013bc, 1024
  %v2_100013c0 = icmp sgt i32 %v3_100013bc, 1024
  %v3_100013c0 = icmp eq i32 %v3_100013bc, 1024
  store i1 %v1_100013c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013c0, label %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, label %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge

dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v1_100012d0.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100012c8

dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v0_100013c8.pre = load i32, i32* %r23.global-to-local, align 4
  %v0_100013d0.pre = load i32, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100013c8

dec_label_pc_100013c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, %dec_label_pc_10001294
  %v0_100013d0 = phi i32 [ %v0_100013d0.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v1_100012bc, %dec_label_pc_10001294 ]
  %v0_100013c8 = phi i32 [ %v0_100013c8.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v0_100012bc, %dec_label_pc_10001294 ]
  %v1_100013c8 = add i32 %v0_100013c8, 2180
  store i32 %v1_100013c8, i32* %r4.global-to-local, align 4
  store i32 %v0_100013d0, i32* %r3.global-to-local, align 4
  store i32 268440536, i32* @lr, align 4
  %v3_100013d4 = call i32 @function_1000a500(i32 %v0_100013d0, i32 %v1_100013c8, i32 960)
  store i32 %v3_100013d4, i32* %r3.global-to-local, align 4
  %v0_100013d8 = load i32, i32* @r30, align 4
  %v1_100013d8 = add i32 %v0_100013d8, 1579
  %v2_100013d8 = inttoptr i32 %v1_100013d8 to i32*
  %v3_100013d8 = load i32, i32* %v2_100013d8, align 4
  store i32 %v3_100013d8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100013e4 = add i32 %v3_100013d8, -64
  store i32 %v1_100013e4, i32* %r29.global-to-local, align 4
  store i32 %v1_100013e4, i32* %v2_100013d8, align 4
  %v0_100013ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100013ec = load i32, i32* %r25.global-to-local, align 4
  %v2_100013ec = inttoptr i32 %v1_100013ec to i32*
  store i32 %v0_100013ec, i32* %v2_100013ec, align 4
  %v0_100013f0 = load i32, i32* @r30, align 4
  %v1_100013f0 = add i32 %v0_100013f0, 1579
  %v2_100013f0 = inttoptr i32 %v1_100013f0 to i32*
  %v3_100013f0 = load i32, i32* %v2_100013f0, align 4
  store i32 %v3_100013f0, i32* %r4.global-to-local, align 4
  %v1_100013f4 = add i32 %v0_100013f0, -533
  %v2_100013f4 = inttoptr i32 %v1_100013f4 to i32*
  %v3_100013f4 = load i32, i32* %v2_100013f4, align 4
  store i32 %v3_100013f4, i32* %r3.global-to-local, align 4
  %v1_100013f8 = sub i32 1024, %v3_100013f0
  %v0_100013fc = load i32, i32* %r27.global-to-local, align 4
  %v2_100013fc = add i32 %v0_100013fc, %v3_100013f0
  store i32 %v2_100013fc, i32* %r4.global-to-local, align 4
  store i32 268440580, i32* @lr, align 4
  %v4_10001400 = call i32 @function_1000a9c4(i32 %v3_100013f4, i32 %v2_100013fc, i32 %v1_100013f8, i32 16384)
  store i32 %v4_10001400, i32* %r3.global-to-local, align 4
  %v3_10001404 = icmp eq i32 %v4_10001400, 0
  br i1 %v3_10001404, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_1000140c:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10001410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001410 = inttoptr i32 %v1_10001410 to i32*
  store i32 104, i32* %v2_10001410, align 4
  br label %dec_label_pc_10001414

dec_label_pc_10001414:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_1000140c
  %v0_10001414 = load i32, i32* @r30, align 4
  %v1_10001414 = add i32 %v0_10001414, -533
  %v2_10001414 = inttoptr i32 %v1_10001414 to i32*
  %v3_10001414 = load i32, i32* %v2_10001414, align 4
  store i32 %v3_10001414, i32* %r3.global-to-local, align 4
  store i32 268440604, i32* @lr, align 4
  %v0_10001418 = call i32 @function_10009de8()
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10001420 = load i32, i32* @r30, align 4
  %v2_10001420 = add i32 %v1_10001420, -533
  %v3_10001420 = inttoptr i32 %v2_10001420 to i32*
  store i32 -1, i32* %v3_10001420, align 4
  %v0_10001424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001424 = trunc i32 %v0_10001424 to i8
  %v2_10001424 = load i32, i32* @r30, align 4
  %v3_10001424 = add i32 %v2_10001424, -529
  %v4_10001424 = inttoptr i32 %v3_10001424 to i8*
  store i8 %v1_10001424, i8* %v4_10001424, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001318
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 268440632, i32* %lr.global-to-local, align 4
  %v3_10001434 = call i32 @function_10008ae4(i32 43, i32* null)
  %v0_10001438 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001438, i32* %r4.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001444, i32* %r3.global-to-local, align 4
  store i32 268440652, i32* %lr.global-to-local, align 4
  %v4_10001448 = call i32 @function_10009670(i32 %v0_10001444, i32 %v0_10001438, i32 %v3_10001434, i32 11)
  store i32 %v4_10001448, i32* %r3.global-to-local, align 4
  %v1_1000144c = icmp slt i32 %v4_10001448, -1
  %v2_1000144c = icmp sgt i32 %v4_10001448, -1
  %v3_1000144c = icmp eq i32 %v4_10001448, -1
  store i1 %v1_1000144c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000144c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000144c, i1* %cr7_eq.global-to-local, align 1
  %v0_10001454 = load i32, i32* @r30, align 4
  br i1 %v3_1000144c, label %dec_label_pc_10001454, label %dec_label_pc_10001948

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c
  %v1_10001454 = add i32 %v0_10001454, 931
  %v2_10001454 = inttoptr i32 %v1_10001454 to i32*
  %v3_10001454 = load i32, i32* %v2_10001454, align 4
  store i32 %v3_10001454, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000145c:                            ; preds = %dec_label_pc_10001344
  store i32 %v3_1000145c, i32* %r4.global-to-local, align 4
  %v0_10001460 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001460, i32* %r3.global-to-local, align 4
  %v0_10001464 = load i32, i32* %r24.global-to-local, align 4
  store i32 268440688, i32* %lr.global-to-local, align 4
  %v5_1000146c = call i32 @function_10009670(i32 %v0_10001460, i32 %v3_1000145c, i32 %v0_10001464, i32 2)
  store i32 %v5_1000146c, i32* %r3.global-to-local, align 4
  %v1_10001470 = icmp slt i32 %v5_1000146c, -1
  %v2_10001470 = icmp sgt i32 %v5_1000146c, -1
  %v3_10001470 = icmp eq i32 %v5_1000146c, -1
  store i1 %v1_10001470, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001470, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001470, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001470, label %dec_label_pc_10001364, label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_1000145c
  %v0_10001478 = load i32, i32* @r30, align 4
  %v1_10001478 = add i32 %v0_10001478, 1579
  %v2_10001478 = inttoptr i32 %v1_10001478 to i32*
  %v3_10001478 = load i32, i32* %v2_10001478, align 4
  store i32 %v3_10001478, i32* %r4.global-to-local, align 4
  %v0_1000147c = load i32, i32* %r24.global-to-local, align 4
  %v0_10001484 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001484, i32* %r3.global-to-local, align 4
  store i32 268440716, i32* %lr.global-to-local, align 4
  %v5_10001488 = call i32 @function_10009670(i32 %v0_10001484, i32 %v3_10001478, i32 %v0_1000147c, i32 2)
  %v0_1000148c = load i32, i32* %r17.global-to-local, align 4
  %v1_10001490 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001490 = add i32 %v1_10001490, %v5_10001488
  store i32 %v2_10001490, i32* %r9.global-to-local, align 4
  store i32 %v5_10001488, i32* %r28.global-to-local, align 4
  %v0_10001498 = load i32, i32* @r31, align 4
  %v1_10001498 = trunc i32 %v0_10001498 to i8
  %v3_10001498 = add i32 %v2_10001490, 2114
  %v4_10001498 = inttoptr i32 %v3_10001498 to i8*
  store i8 %v1_10001498, i8* %v4_10001498, align 1
  %v0_1000149c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000149c, i32* %r3.global-to-local, align 4
  %v0_100014a0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014a0, i32* %r4.global-to-local, align 4
  store i32 268440748, i32* %lr.global-to-local, align 4
  %v4_100014a8 = call i32 @function_10009670(i32 %v0_1000149c, i32 %v0_100014a0, i32 %v0_1000148c, i32 1)
  store i32 %v4_100014a8, i32* %r3.global-to-local, align 4
  %v1_100014ac = icmp slt i32 %v4_100014a8, -1
  %v2_100014ac = icmp sgt i32 %v4_100014a8, -1
  %v3_100014ac = icmp eq i32 %v4_100014a8, -1
  store i1 %v1_100014ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100014ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100014ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100014ac, label %dec_label_pc_100014d0, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001478
  %v0_100014b4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014b4, i32* %r3.global-to-local, align 4
  %v0_100014b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014b8, i32* %r4.global-to-local, align 4
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  store i32 268440776, i32* %lr.global-to-local, align 4
  %v4_100014c4 = call i32 @function_10009670(i32 %v0_100014b4, i32 %v0_100014b8, i32 %v0_100014bc, i32 1)
  %v1_100014c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100014c8 = add i32 %v1_100014c8, %v4_100014c4
  store i32 %v2_100014c8, i32* %r3.global-to-local, align 4
  %v0_100014cc = load i32, i32* @r31, align 4
  %v1_100014cc = trunc i32 %v0_100014cc to i8
  %v3_100014cc = add i32 %v2_100014c8, 2116
  %v4_100014cc = inttoptr i32 %v3_100014cc to i8*
  store i8 %v1_100014cc, i8* %v4_100014cc, align 1
  br label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_100014b4
  %v0_100014d0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014d0, i32* @r3, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 268440796, i32* @lr, align 4
  %v2_100014d8 = call i32 @function_100096cc(i32 %v0_100014d0, i32 16)
  store i32 %v2_100014d8, i32* %r3.global-to-local, align 4
  %v3_100014dc = icmp eq i32 %v2_100014d8, 0
  br i1 %v3_100014dc, label %dec_label_pc_10001b70, label %dec_label_pc_100014e4

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014d0
  %v1_100014e4 = add i32 %v2_100014d8, 2
  %v1_100014e8 = load i32, i32* @r30, align 4
  %v2_100014e8 = add i32 %v1_100014e8, 931
  %v3_100014e8 = inttoptr i32 %v2_100014e8 to i32*
  store i32 %v1_100014e4, i32* %v3_100014e8, align 4
  br label %dec_label_pc_10001364

dec_label_pc_100014f0:                            ; preds = %dec_label_pc_10000860
  store i32 ptrtoint (i32* @global_var_100014f8.41 to i32), i32* @lr, align 4
  %v0_100014f4 = call i32 @function_10009de8()
  store i32 %v0_100014f4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_100014fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100014fc = trunc i32 %v0_100014fc to i8
  %v2_100014fc = load i32, i32* @r30, align 4
  %v3_100014fc = add i32 %v2_100014fc, -529
  %v4_100014fc = inttoptr i32 %v3_100014fc to i8*
  store i8 %v1_100014fc, i8* %v4_100014fc, align 1
  %v0_10001500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r30, align 4
  %v2_10001500 = add i32 %v1_10001500, -533
  %v3_10001500 = inttoptr i32 %v2_10001500 to i32*
  store i32 %v0_10001500, i32* %v3_10001500, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001508:                            ; preds = %dec_label_pc_10000be8
  %v0_10001508 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001508, i32* @r3, align 4
  %v0_1000150c = load i32, i32* @r31, align 4
  store i32 %v0_1000150c, i32* %r4.global-to-local, align 4
  store i32 268440852, i32* %lr.global-to-local, align 4
  %v2_10001510 = inttoptr i32 %v0_10001508 to i8*
  %v3_10001510 = call i32 @function_100095cc(i8* %v2_10001510, i32 %v0_1000150c)
  store i32 %v3_10001510, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000c00

dec_label_pc_10001518:                            ; preds = %dec_label_pc_1000081c
  store i32 268440860, i32* %lr.global-to-local, align 4
  %v0_10001518 = call i32 @function_1000a4bc()
  store i32 %v0_10001518, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v0_10001518, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_10001524:                            ; preds = %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge, %dec_label_pc_10001518
  %v1_10001524 = phi i32 [ %v1_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ %v0_10001518, %dec_label_pc_10001518 ]
  %v0_10001524 = phi i32 [ %v0_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ 0, %dec_label_pc_10001518 ]
  %v2_10001524 = inttoptr i32 %v1_10001524 to i32*
  store i32 %v0_10001524, i32* %v2_10001524, align 4
  %v0_10001528 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001528, i32* %r4.global-to-local, align 4
  %v0_10001534 = load i32, i32* @r30, align 4
  %v1_10001534 = add i32 %v0_10001534, -533
  %v2_10001534 = inttoptr i32 %v1_10001534 to i32*
  %v3_10001534 = load i32, i32* %v2_10001534, align 4
  store i32 %v3_10001534, i32* %r3.global-to-local, align 4
  store i32 268440892, i32* @lr, align 4
  %v4_10001538 = call i32 @function_1000a9c4(i32 %v3_10001534, i32 %v0_10001528, i32 10240, i32 16384)
  store i32 %v4_10001538, i32* %r3.global-to-local, align 4
  %v3_1000153c = icmp eq i32 %v4_10001538, 0
  br i1 %v3_1000153c, label %dec_label_pc_100017e0, label %dec_label_pc_10001544

dec_label_pc_10001544:                            ; preds = %dec_label_pc_10001524
  %v1_10001544 = icmp slt i32 %v4_10001538, -1
  %v2_10001544 = icmp sgt i32 %v4_10001538, -1
  %v3_10001544 = icmp eq i32 %v4_10001538, -1
  store i1 %v1_10001544, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001544, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001544, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001544, label %dec_label_pc_1000154c, label %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge

dec_label_pc_10001544.dec_label_pc_10001524_crit_edge: ; preds = %dec_label_pc_10001544
  %v0_10001524.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10001524.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_10001544
  %v0_1000154c = load i32, i32* @r31, align 4
  %v1_1000154c = inttoptr i32 %v0_1000154c to i32*
  %v2_1000154c = load i32, i32* %v1_1000154c, align 4
  store i32 %v2_1000154c, i32* %r0.global-to-local, align 4
  %v1_10001550 = icmp slt i32 %v2_1000154c, 11
  %v2_10001550 = icmp sgt i32 %v2_1000154c, 11
  %v3_10001550 = icmp eq i32 %v2_1000154c, 11
  store i1 %v1_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001550, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001550, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001550, label %dec_label_pc_1000190c, label %dec_label_pc_10001558

dec_label_pc_10001558:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100017e0
  %v0_10001558 = load i32, i32* @r30, align 4
  %v1_10001558 = add i32 %v0_10001558, -533
  %v2_10001558 = inttoptr i32 %v1_10001558 to i32*
  %v3_10001558 = load i32, i32* %v2_10001558, align 4
  store i32 %v3_10001558, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10001560.42 to i32), i32* @lr, align 4
  %v0_1000155c = call i32 @function_10009de8()
  store i32 %v0_1000155c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10001568 = load i32, i32* @r30, align 4
  %v2_10001568 = add i32 %v1_10001568, -533
  %v3_10001568 = inttoptr i32 %v2_10001568 to i32*
  store i32 -1, i32* %v3_10001568, align 4
  %v0_1000156c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000156c = trunc i32 %v0_1000156c to i8
  %v2_1000156c = load i32, i32* @r30, align 4
  %v3_1000156c = add i32 %v2_1000156c, -529
  %v4_1000156c = inttoptr i32 %v3_1000156c to i8*
  store i8 %v1_1000156c, i8* %v4_1000156c, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001140, %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268440960, i32* %lr.global-to-local, align 4
  %v3_1000157c = call i32 @function_10008ae4(i32 44, i32* null)
  %v0_10001580 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001580, i32* %r4.global-to-local, align 4
  %v0_10001588 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001588, i32* %r3.global-to-local, align 4
  store i32 268440976, i32* %lr.global-to-local, align 4
  %v3_1000158c = inttoptr i32 %v0_10001588 to i8*
  %v4_1000158c = call i32 @function_10009954(i8* %v3_1000158c, i32 %v0_10001580, i32 %v3_1000157c)
  store i32 %v4_1000158c, i32* %r3.global-to-local, align 4
  %v1_10001590 = icmp slt i32 %v4_1000158c, -1
  %v2_10001590 = icmp sgt i32 %v4_1000158c, -1
  %v3_10001590 = icmp eq i32 %v4_1000158c, -1
  store i1 %v1_10001590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001590, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001590, label %dec_label_pc_1000177c, label %dec_label_pc_10001598

dec_label_pc_10001598:                            ; preds = %dec_label_pc_10001574
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268440996, i32* %lr.global-to-local, align 4
  %v3_100015a0 = call i32 @function_10008ae4(i32 44, i32* null)
  %v0_100015a4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100015a4, i32* %r4.global-to-local, align 4
  %v0_100015ac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* %lr.global-to-local, align 4
  %v3_100015b0 = inttoptr i32 %v0_100015ac to i8*
  %v4_100015b0 = call i32 @function_10009954(i8* %v3_100015b0, i32 %v0_100015a4, i32 %v3_100015a0)
  store i32 %v4_100015b0, i32* %r3.global-to-local, align 4
  %v0_100015b8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100015b8 = add i32 %v0_100015b8, %v4_100015b0
  store i32 %v2_100015b8, i32* %r9.global-to-local, align 4
  %v1_100015bc = add i32 %v2_100015b8, 10532
  %v2_100015bc = inttoptr i32 %v1_100015bc to i8*
  %v3_100015bc = load i8, i8* %v2_100015bc, align 1
  %v4_100015bc = zext i8 %v3_100015bc to i32
  store i32 %v4_100015bc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100015c8 = xor i32 %v4_100015bc, 32
  %v1_100015cc = sub nsw i32 0, %v1_100015c8
  %v2_100015cc = xor i32 %v4_100015bc, -33
  %v4_100015cc = icmp uge i32 %v2_100015cc, %v1_100015cc
  %v2_100015d0 = zext i1 %v4_100015cc to i32
  %v3_100015d0 = add i32 %v2_100015d0, %v4_100015b0
  store i32 %v3_100015d0, i32* %r11.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015d4 = add i32 %v3_100015d0, %v0_100015d4
  store i32 %v2_100015d4, i32* @r28, align 4
  store i32 %v2_100015d4, i32* %r3.global-to-local, align 4
  %v1_100015dc = load i32, i32* %r24.global-to-local, align 4
  %v2_100015dc = sub i32 %v1_100015dc, %v3_100015d0
  store i32 %v2_100015dc, i32* %r4.global-to-local, align 4
  store i32 %v3_100015d0, i32* %r31.global-to-local, align 4
  store i32 268441064, i32* %lr.global-to-local, align 4
  %v5_100015e4 = call i32 @function_10009670(i32 %v2_100015d4, i32 %v2_100015dc, i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), i32 2)
  store i32 %v5_100015e4, i32* %r3.global-to-local, align 4
  %v1_100015e8 = icmp slt i32 %v5_100015e4, -1
  %v2_100015e8 = icmp sgt i32 %v5_100015e4, -1
  %v3_100015e8 = icmp eq i32 %v5_100015e4, -1
  store i1 %v1_100015e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015e8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_100015e4, i32* %r27.global-to-local, align 4
  br i1 %v3_100015e8, label %dec_label_pc_1000177c, label %dec_label_pc_100015f4

dec_label_pc_100015f4:                            ; preds = %dec_label_pc_10001598
  %v1_100015f4 = icmp slt i32 %v5_100015e4, 1
  %v2_100015f4 = icmp sgt i32 %v5_100015e4, 1
  %v3_100015f4 = icmp eq i32 %v5_100015e4, 1
  store i1 %v1_100015f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015f4, i1* %cr7_eq.global-to-local, align 1
  %tmp80 = icmp slt i32 %v5_100015e4, 2
  br i1 %tmp80, label %dec_label_pc_10001600, label %dec_label_pc_100015fc

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f4
  %v1_100015fc = add i32 %v5_100015e4, -2
  store i32 %v1_100015fc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001600

dec_label_pc_10001600:                            ; preds = %dec_label_pc_100015f4, %dec_label_pc_100015fc
  %v1_10001608 = phi i32 [ %v5_100015e4, %dec_label_pc_100015f4 ], [ %v1_100015fc, %dec_label_pc_100015fc ]
  %v0_10001600 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001600 = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10001600 = add i32 %v0_10001600, %v1_10001608
  %v2_10001608 = add i32 %v2_10001600, %v1_10001600
  store i32 %v2_10001608, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v3_10001610 = add i32 %v2_10001608, 10532
  %v4_10001610 = inttoptr i32 %v3_10001610 to i8*
  store i8 0, i8* %v4_10001610, align 1
  %v0_10001614 = load i32, i32* @r28, align 4
  store i32 %v0_10001614, i32* %r4.global-to-local, align 4
  %v0_10001618 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001618 = load i32, i32* @r1, align 4
  %v2_10001618 = add i32 %v1_10001618, 8
  %v3_10001618 = inttoptr i32 %v2_10001618 to i32*
  store i32 %v0_10001618, i32* %v3_10001618, align 4
  %v0_1000161c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000161c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000161c = add i32 %v1_1000161c, %v0_1000161c
  %v3_1000161c = inttoptr i32 %v2_1000161c to i8*
  %v4_1000161c = load i8, i8* %v3_1000161c, align 1
  %v5_1000161c = zext i8 %v4_1000161c to i32
  store i32 %v5_1000161c, i32* %r3.global-to-local, align 4
  %v1_10001620 = add nuw nsw i32 %v5_1000161c, 208
  %v1_10001624 = urem i32 %v1_10001620, 256
  store i32 %v1_10001624, i32* %r0.global-to-local, align 4
  %v1_10001628 = icmp ult i32 %v1_10001624, 9
  %v2_10001628 = icmp ugt i32 %v1_10001624, 9
  %v3_10001628 = icmp eq i32 %v1_10001624, 9
  store i1 %v1_10001628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001628, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001628, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001628, label %dec_label_pc_10001658, label %dec_label_pc_10001630

dec_label_pc_10001630:                            ; preds = %dec_label_pc_10001600
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001634

dec_label_pc_10001634:                            ; preds = %dec_label_pc_10001634, %dec_label_pc_10001630
  %v0_10001634 = phi i32 [ %v0_1000163c, %dec_label_pc_10001634 ], [ 0, %dec_label_pc_10001630 ]
  %v1_10001634 = add i32 %v0_10001634, 1
  store i32 %v1_10001634, i32* %r11.global-to-local, align 4
  %v1_10001638 = load i32, i32* @r1, align 4
  %v2_10001638 = add i32 %v1_10001638, 8
  %v3_10001638 = inttoptr i32 %v2_10001638 to i32*
  store i32 %v1_10001634, i32* %v3_10001638, align 4
  %v0_1000163c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000163c, i32* %r9.global-to-local, align 4
  %v1_10001640 = load i32, i32* @r28, align 4
  %v2_10001640 = add i32 %v1_10001640, %v0_1000163c
  %v3_10001640 = inttoptr i32 %v2_10001640 to i8*
  %v4_10001640 = load i8, i8* %v3_10001640, align 1
  %v5_10001640 = zext i8 %v4_10001640 to i32
  store i32 %v5_10001640, i32* %r3.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v5_10001640, 208
  %v1_10001648 = urem i32 %v1_10001644, 256
  store i32 %v1_10001648, i32* %r0.global-to-local, align 4
  %v1_1000164c = icmp ult i32 %v1_10001648, 9
  %v2_1000164c = icmp ugt i32 %v1_10001648, 9
  %v3_1000164c = icmp eq i32 %v1_10001648, 9
  store i1 %v1_1000164c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000164c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000164c, i1* %cr7_eq.global-to-local, align 1
  %tmp81 = icmp ult i32 %v1_10001648, 10
  br i1 %tmp81, label %dec_label_pc_10001634, label %dec_label_pc_10001654

dec_label_pc_10001654:                            ; preds = %dec_label_pc_10001634
  store i32 %v2_10001640, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001658

dec_label_pc_10001658:                            ; preds = %dec_label_pc_10001600, %dec_label_pc_10001654
  %v0_10001658 = phi i32 [ %v5_1000161c, %dec_label_pc_10001600 ], [ %v5_10001640, %dec_label_pc_10001654 ]
  %v2_10001658 = icmp ne i32 %v0_10001658, 0
  %v3_10001658 = icmp eq i32 %v0_10001658, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001658, label %dec_label_pc_1000177c, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001658
  store i32 0, i32* %r26.global-to-local, align 4
  %v2_10001664 = load i32, i32* %r4.global-to-local, align 4
  %v3_10001664 = inttoptr i32 %v2_10001664 to i8*
  store i8 0, i8* %v3_10001664, align 1
  %v0_10001668 = load i32, i32* @r1, align 4
  %v1_10001668 = add i32 %v0_10001668, 8
  %v2_10001668 = inttoptr i32 %v1_10001668 to i32*
  %v3_10001668 = load i32, i32* %v2_10001668, align 4
  %v1_1000166c = add i32 %v3_10001668, 1
  store i32 %v1_1000166c, i32* %r11.global-to-local, align 4
  store i32 %v1_1000166c, i32* %v2_10001668, align 4
  %v0_10001674 = load i32, i32* @r28, align 4
  %v1_10001674 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001674 = add i32 %v1_10001674, %v0_10001674
  %v3_10001674 = inttoptr i32 %v2_10001674 to i8*
  %v4_10001674 = load i8, i8* %v3_10001674, align 1
  %v5_10001674 = zext i8 %v4_10001674 to i32
  store i32 %v5_10001674, i32* %r0.global-to-local, align 4
  %v1_10001678 = icmp ult i8 %v4_10001674, 32
  %v2_10001678 = icmp ugt i8 %v4_10001674, 32
  %v3_10001678 = icmp eq i8 %v4_10001674, 32
  store i1 %v1_10001678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001678, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001678, label %dec_label_pc_10001b84, label %dec_label_pc_10001680

dec_label_pc_10001680:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_10001b84
  %v1_10001680 = phi i32 [ %v1_10001674, %dec_label_pc_10001660 ], [ %v1_10001680.pre, %dec_label_pc_10001b84 ]
  %v0_10001680 = phi i32 [ %v0_10001674, %dec_label_pc_10001660 ], [ %v0_10001680.pre, %dec_label_pc_10001b84 ]
  %v2_10001680 = add i32 %v0_10001680, %v1_10001680
  store i32 %v2_10001680, i32* %r29.global-to-local, align 4
  store i32 %v2_10001680, i32* %r3.global-to-local, align 4
  store i32 268441228, i32* @lr, align 4
  %v1_10001688 = inttoptr i32 %v2_10001680 to i8*
  %v2_10001688 = call i32 @function_100095a4(i8* %v1_10001688)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c674.43 to i32), i32* %r31.global-to-local, align 4
  store i32 %v2_10001688, i32* %r4.global-to-local, align 4
  %v0_1000169c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* %lr.global-to-local, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000169c to i8*
  %v5_100016a0 = call i32 @function_10009954(i8* %v4_100016a0, i32 %v2_10001688, i32 ptrtoint ([5 x i8]* @global_var_1000c674.43 to i32))
  store i32 %v5_100016a0, i32* %r3.global-to-local, align 4
  %v1_100016a4 = icmp slt i32 %v5_100016a0, -1
  %v2_100016a4 = icmp sgt i32 %v5_100016a0, -1
  %v3_100016a4 = icmp eq i32 %v5_100016a0, -1
  store i1 %v1_100016a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016a4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016a4, i1* %cr7_eq.global-to-local, align 1
  %v0_100019cc = load i32, i32* @r1, align 4
  %v1_100019cc = add i32 %v0_100019cc, 8
  %v2_100019cc = inttoptr i32 %v1_100019cc to i32*
  %v3_100019cc = load i32, i32* %v2_100019cc, align 4
  br i1 %v3_100016a4, label %dec_label_pc_100019cc, label %dec_label_pc_100016ac

dec_label_pc_100016ac:                            ; preds = %dec_label_pc_10001680
  %v0_100016b0 = load i32, i32* @r28, align 4
  %v2_100016b0 = add i32 %v0_100016b0, %v3_100019cc
  store i32 %v2_100016b0, i32* %r29.global-to-local, align 4
  store i32 %v2_100016b0, i32* %r3.global-to-local, align 4
  store i32 268441276, i32* @lr, align 4
  %v1_100016b8 = inttoptr i32 %v2_100016b0 to i8*
  %v2_100016b8 = call i32 @function_100095a4(i8* %v1_100016b8)
  %v0_100016bc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v2_100016b8, i32* %r4.global-to-local, align 4
  %v0_100016c4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100016c4, i32* %r3.global-to-local, align 4
  store i32 268441292, i32* %lr.global-to-local, align 4
  %v4_100016c8 = inttoptr i32 %v0_100016c4 to i8*
  %v5_100016c8 = call i32 @function_10009954(i8* %v4_100016c8, i32 %v2_100016b8, i32 %v0_100016bc)
  store i32 %v5_100016c8, i32* %r3.global-to-local, align 4
  %v0_100016cc = load i32, i32* @r1, align 4
  %v1_100016cc = add i32 %v0_100016cc, 8
  %v2_100016cc = inttoptr i32 %v1_100016cc to i32*
  %v3_100016cc = load i32, i32* %v2_100016cc, align 4
  %v2_100016d0 = add i32 %v3_100016cc, %v5_100016c8
  store i32 %v2_100016d0, i32* %r11.global-to-local, align 4
  store i32 %v2_100016d0, i32* %v2_100016cc, align 4
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016d8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100016d8 = add i32 %v1_100016d8, %v0_100016d8
  %v3_100016d8 = inttoptr i32 %v2_100016d8 to i8*
  %v4_100016d8 = load i8, i8* %v3_100016d8, align 1
  %v5_100016d8 = zext i8 %v4_100016d8 to i32
  store i32 %v5_100016d8, i32* %r0.global-to-local, align 4
  %v1_100016dc = icmp ult i8 %v4_100016d8, 34
  %v2_100016dc = icmp ugt i8 %v4_100016d8, 34
  %v3_100016dc = icmp eq i8 %v4_100016d8, 34
  store i1 %v1_100016dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100016dc, label %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, label %dec_label_pc_100016e4

dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge: ; preds = %dec_label_pc_100016ac
  %v1_100019e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_100019dc

dec_label_pc_100016e4:                            ; preds = %dec_label_pc_100019cc, %dec_label_pc_100019dc, %dec_label_pc_100016ac, %dec_label_pc_10001a00
  %v0_100016e4 = load i32, i32* @r28, align 4
  store i32 %v0_100016e4, i32* @r3, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268441328, i32* @lr, align 4
  %v2_100016ec = call i32 @function_100096cc(i32 %v0_100016e4, i32 10)
  store i32 %v2_100016ec, i32* %r3.global-to-local, align 4
  %v1_100016f0 = add i32 %v2_100016ec, -1
  store i32 %v1_100016f0, i32* %r0.global-to-local, align 4
  %v1_100016f4 = icmp ult i32 %v1_100016f0, 8
  %v2_100016f4 = icmp ugt i32 %v1_100016f0, 8
  %v3_100016f4 = icmp eq i32 %v1_100016f0, 8
  store i1 %v1_100016f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100016f8 = load i32, i32* @r1, align 4
  %v1_100016f8 = add i32 %v0_100016f8, 20792
  %v2_100016f8 = inttoptr i32 %v1_100016f8 to i32*
  %v3_100016f8 = load i32, i32* %v2_100016f8, align 4
  store i32 %v3_100016f8, i32* %r0.global-to-local, align 4
  %v2_100016fc = add i32 %v3_100016f8, %v2_100016ec
  store i32 %v2_100016fc, i32* @r31, align 4
  %tmp82 = icmp ult i32 %v1_100016f0, 9
  br i1 %tmp82, label %dec_label_pc_10001710.preheader, label %dec_label_pc_10001720

dec_label_pc_10001710.preheader:                  ; preds = %dec_label_pc_100016e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_100017144 = call i32 @function_1000a1b8()
  store i32 %v0_100017144, i32* %r3.global-to-local, align 4
  %v1_100017185 = load i32, i32* @r31, align 4
  %v2_100017186 = icmp ult i32 %v0_100017144, %v1_100017185
  %v3_100017187 = icmp ugt i32 %v0_100017144, %v1_100017185
  %v4_100017188 = icmp eq i32 %v0_100017144, %v1_100017185
  store i1 %v2_100017186, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100017187, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100017188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100017186, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001708:                            ; preds = %dec_label_pc_10001710.preheader, %dec_label_pc_10001708
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001710.44 to i32), i32* @lr, align 4
  %v1_1000170c = call i32 @function_1000b420(i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_10001714 = call i32 @function_1000a1b8()
  store i32 %v0_10001714, i32* %r3.global-to-local, align 4
  %v1_10001718 = load i32, i32* @r31, align 4
  %v2_10001718 = icmp ult i32 %v0_10001714, %v1_10001718
  %v3_10001718 = icmp ugt i32 %v0_10001714, %v1_10001718
  %v4_10001718 = icmp eq i32 %v0_10001714, %v1_10001718
  store i1 %v2_10001718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001718, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001720.loopexit:                   ; preds = %dec_label_pc_10001708, %dec_label_pc_10001710.preheader
  %v0_10001720.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001720.loopexit, %dec_label_pc_100016e4
  %v0_10001720 = phi i32 [ %v0_10001720.pre, %dec_label_pc_10001720.loopexit ], [ %v0_100016f8, %dec_label_pc_100016e4 ]
  %v1_10001720 = add i32 %v0_10001720, 8
  %v2_10001720 = inttoptr i32 %v1_10001720 to i32*
  %v3_10001720 = load i32, i32* %v2_10001720, align 4
  store i32 %v3_10001720, i32* %r29.global-to-local, align 4
  %v0_10001724 = load i32, i32* @r28, align 4
  %v2_10001724 = add i32 %v0_10001724, %v3_10001720
  store i32 %v2_10001724, i32* @r31, align 4
  store i32 %v2_10001724, i32* %r3.global-to-local, align 4
  store i32 268441392, i32* @lr, align 4
  %v1_1000172c = inttoptr i32 %v2_10001724 to i8*
  %v2_1000172c = call i32 @function_100095a4(i8* %v1_1000172c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_1000172c, i32* %r4.global-to-local, align 4
  %v0_1000173c = load i32, i32* @r31, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* %lr.global-to-local, align 4
  %v4_10001740 = inttoptr i32 %v0_1000173c to i8*
  %v5_10001740 = call i32 @function_10009954(i8* %v4_10001740, i32 %v2_1000172c, i32 ptrtoint ([5 x i8]* @global_var_1000c66c.40 to i32))
  store i32 %v5_10001740, i32* %r3.global-to-local, align 4
  %v1_10001744 = icmp slt i32 %v5_10001740, 4
  %v2_10001744 = icmp sgt i32 %v5_10001740, 4
  %v3_10001744 = icmp eq i32 %v5_10001740, 4
  store i1 %v1_10001744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001744, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001744, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001744, label %dec_label_pc_10001af0, label %dec_label_pc_1000174c

dec_label_pc_1000174c:                            ; preds = %dec_label_pc_10001720
  %v0_1000174c = load i32, i32* @r28, align 4
  %v1_1000174c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000174c = add i32 %v1_1000174c, %v0_1000174c
  %v3_1000174c = inttoptr i32 %v2_1000174c to i8*
  %v4_1000174c = load i8, i8* %v3_1000174c, align 1
  %v5_1000174c = zext i8 %v4_1000174c to i32
  store i32 %v5_1000174c, i32* %r0.global-to-local, align 4
  %v1_10001750 = icmp ult i8 %v4_1000174c, 47
  %v2_10001750 = icmp ugt i8 %v4_1000174c, 47
  %v3_10001750 = icmp eq i8 %v4_1000174c, 47
  store i1 %v1_10001750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001750, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001750, label %dec_label_pc_10001a9c, label %dec_label_pc_10001758

dec_label_pc_10001758:                            ; preds = %dec_label_pc_10001ab4, %dec_label_pc_10001a9c, %dec_label_pc_1000174c, %dec_label_pc_10001ad8
  store i32 10, i32* %r9.global-to-local, align 4
  store i32 1195725824, i32* %r0.global-to-local, align 4
  %v2_10001764 = load i32, i32* @r30, align 4
  %v3_10001764 = add i32 %v2_10001764, -529
  %v4_10001764 = inttoptr i32 %v3_10001764 to i8*
  store i8 10, i8* %v4_10001764, align 1
  %v0_10001768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001768 = load i32, i32* @r30, align 4
  %v2_10001768 = add i32 %v1_10001768, 898
  %v3_10001768 = inttoptr i32 %v2_10001768 to i32*
  store i32 %v0_10001768, i32* %v3_10001768, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001770:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_10001774 = load i32, i32* @r30, align 4
  %v2_10001774 = add i32 %v1_10001774, 931
  %v3_10001774 = inttoptr i32 %v2_10001774 to i32*
  store i32 0, i32* %v3_10001774, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_1000177c:                            ; preds = %dec_label_pc_10001658, %dec_label_pc_10001598, %dec_label_pc_10001574
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001780 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001780, i32* %r4.global-to-local, align 4
  %v0_1000178c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000178c, i32* %r3.global-to-local, align 4
  %v0_10001790 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001790 = add i32 %v0_10001790, 1431
  store i32 %v1_10001790, i32* @r31, align 4
  store i32 268441496, i32* %lr.global-to-local, align 4
  %v5_10001794 = call i32 @function_10009670(i32 %v0_1000178c, i32 %v0_10001780, i32 ptrtoint ([5 x i8]* @global_var_1000c660.37 to i32), i32 4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v5_10001794, i32* %r29.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c67c.45 to i32), i32* %r4.global-to-local, align 4
  %v0_100017a4 = load i32, i32* @r31, align 4
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  store i32 268441516, i32* %lr.global-to-local, align 4
  %v3_100017a8 = inttoptr i32 %v0_100017a4 to i8*
  %v4_100017a8 = call i32 @function_10009a00(i8* %v3_100017a8, i32 ptrtoint ([5 x i8]* @global_var_1000c67c.45 to i32))
  store i32 %v4_100017a8, i32* %r3.global-to-local, align 4
  %v1_100017ac = icmp slt i32 %v4_100017a8, 0
  %v2_100017ac = icmp sgt i32 %v4_100017a8, 0
  %v3_100017ac = icmp eq i32 %v4_100017a8, 0
  store i1 %v1_100017ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017ac, label %dec_label_pc_1000191c, label %dec_label_pc_100017b4

dec_label_pc_100017b4:                            ; preds = %dec_label_pc_1000191c, %dec_label_pc_1000177c
  store i32 7, i32* %r0.global-to-local, align 4
  %v2_100017b8 = load i32, i32* @r30, align 4
  %v3_100017b8 = add i32 %v2_100017b8, -529
  %v4_100017b8 = inttoptr i32 %v3_100017b8 to i8*
  store i8 7, i8* %v4_100017b8, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_100017bc:                            ; preds = %dec_label_pc_10001b78, %dec_label_pc_1000193c, %dec_label_pc_100017b4
  %v0_100017bc = load i32, i32* @r30, align 4
  %v1_100017bc = add i32 %v0_100017bc, -533
  %v2_100017bc = inttoptr i32 %v1_100017bc to i32*
  %v3_100017bc = load i32, i32* %v2_100017bc, align 4
  store i32 %v3_100017bc, i32* %r3.global-to-local, align 4
  %v0_100017c0 = load i32, i32* %r29.global-to-local, align 4
  %v0_100017c4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100017c4, i32* %r4.global-to-local, align 4
  store i32 268441552, i32* @lr, align 4
  %v4_100017cc = call i32 @function_1000a9c4(i32 %v3_100017bc, i32 %v0_100017c4, i32 %v0_100017c0, i32 16384)
  store i32 %v4_100017cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000824

dec_label_pc_100017d4:                            ; preds = %dec_label_pc_10000cd0
  %v1_100017d4 = icmp slt i32 %v0_100017d4, 10239
  %v2_100017d4 = icmp sgt i32 %v0_100017d4, 10239
  %v3_100017d4 = icmp eq i32 %v0_100017d4, 10239
  store i1 %v1_100017d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017d4, i1* %cr7_eq.global-to-local, align 1
  %tmp83 = icmp slt i32 %v0_100017d4, 10240
  br i1 %tmp83, label %dec_label_pc_10000824, label %dec_label_pc_10000cf4

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001524
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100017e4 = load i32, i32* @r31, align 4
  %v2_100017e4 = inttoptr i32 %v1_100017e4 to i32*
  store i32 104, i32* %v2_100017e4, align 4
  br label %dec_label_pc_10001558

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100012f0
  %v0_100017ec = load i32, i32* %r25.global-to-local, align 4
  %v1_100017ec = inttoptr i32 %v0_100017ec to i32*
  %v2_100017ec = load i32, i32* %v1_100017ec, align 4
  store i32 %v2_100017ec, i32* %r0.global-to-local, align 4
  %v1_100017f0 = icmp slt i32 %v2_100017ec, 11
  %v2_100017f0 = icmp sgt i32 %v2_100017ec, 11
  %v3_100017f0 = icmp eq i32 %v2_100017ec, 11
  store i1 %v1_100017f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017f0, label %dec_label_pc_10000824, label %dec_label_pc_10001414

dec_label_pc_100017fc:                            ; preds = %dec_label_pc_100011a4
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001800 = load i32, i32* @r1, align 4
  %v2_10001800 = add i32 %v1_10001800, 8
  %v3_10001800 = inttoptr i32 %v2_10001800 to i32*
  store i32 7, i32* %v3_10001800, align 4
  %v0_10001804 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001804 = add i32 %v0_10001804, 4
  %v2_10001804 = inttoptr i32 %v1_10001804 to i8*
  %v3_10001804 = load i8, i8* %v2_10001804, align 1
  %v4_10001804 = zext i8 %v3_10001804 to i32
  store i32 %v4_10001804, i32* %r0.global-to-local, align 4
  %v1_10001808 = icmp ult i8 %v3_10001804, 115
  %v2_10001808 = icmp ugt i8 %v3_10001804, 115
  %v3_10001808 = icmp eq i8 %v3_10001804, 115
  store i1 %v1_10001808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001808, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001808, label %dec_label_pc_10001a5c, label %dec_label_pc_10001810

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017fc, %dec_label_pc_10001a5c
  %v0_10001814 = phi i32 [ %v0_10001804, %dec_label_pc_100017fc ], [ %v0_10001814.pre, %dec_label_pc_10001a5c ]
  %v0_10001810 = load i32, i32* @r1, align 4
  %v1_10001810 = add i32 %v0_10001810, 8
  %v2_10001810 = inttoptr i32 %v1_10001810 to i32*
  %v3_10001810 = load i32, i32* %v2_10001810, align 4
  store i32 %v0_10001814, i32* %r3.global-to-local, align 4
  %v1_10001818 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001818 = sub i32 %v1_10001818, %v3_10001810
  %v2_1000181c = add i32 %v3_10001810, %v0_10001814
  store i32 %v2_1000181c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001824.46 to i32), i32* @lr, align 4
  %v3_10001820 = call i32 @function_1000a500(i32 %v0_10001814, i32 %v2_1000181c, i32 %v2_10001818)
  store i32 %v3_10001820, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001828 = load i32, i32* @r1, align 4
  %v2_10001828 = add i32 %v1_10001828, 8
  %v3_10001828 = inttoptr i32 %v2_10001828 to i32*
  store i32 0, i32* %v3_10001828, align 4
  %v0_1000182c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000182c = load i32, i32* @r31, align 4
  %v2_1000182c = add i32 %v1_1000182c, %v0_1000182c
  %v3_1000182c = inttoptr i32 %v2_1000182c to i8*
  %v4_1000182c = load i8, i8* %v3_1000182c, align 1
  %v5_1000182c = zext i8 %v4_1000182c to i32
  store i32 %v5_1000182c, i32* %r3.global-to-local, align 4
  %v2_10001830 = icmp ne i8 %v4_1000182c, 0
  %v3_10001830 = icmp eq i8 %v4_1000182c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001830, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001830, label %dec_label_pc_10001870, label %dec_label_pc_10001838

dec_label_pc_10001838:                            ; preds = %dec_label_pc_10001810
  %v1_10001838 = icmp ult i8 %v4_1000182c, 47
  %v2_10001838 = icmp ugt i8 %v4_1000182c, 47
  %v3_10001838 = icmp eq i8 %v4_1000182c, 47
  store i1 %v1_10001838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001838, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001838, i1* %cr7_eq.global-to-local, align 1
  %v0_1000183c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000183c, i32* %r9.global-to-local, align 4
  br i1 %v3_10001838, label %dec_label_pc_100019c0, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %dec_label_pc_10001838
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001858

dec_label_pc_1000184c:                            ; preds = %dec_label_pc_10001858
  %v1_1000184c = icmp ult i8 %v4_10001864, 47
  %v2_1000184c = icmp ugt i8 %v4_10001864, 47
  %v3_1000184c = icmp eq i8 %v4_10001864, 47
  store i1 %v1_1000184c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000184c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000184c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001850 = add i32 %v0_1000185c, 1
  store i32 %v1_10001850, i32* %r4.global-to-local, align 4
  br i1 %v3_1000184c, label %dec_label_pc_100019c0, label %dec_label_pc_10001858

dec_label_pc_10001858:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001844
  %v0_10001858 = phi i32 [ %v1_10001850, %dec_label_pc_1000184c ], [ 1, %dec_label_pc_10001844 ]
  %v1_10001858 = load i32, i32* @r1, align 4
  %v2_10001858 = add i32 %v1_10001858, 8
  %v3_10001858 = inttoptr i32 %v2_10001858 to i32*
  store i32 %v0_10001858, i32* %v3_10001858, align 4
  %v0_1000185c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000185c, i32* %r11.global-to-local, align 4
  %v0_10001860 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001860 = add i32 %v0_10001860, %v0_1000185c
  store i32 %v2_10001860, i32* %r9.global-to-local, align 4
  %v3_10001864 = inttoptr i32 %v2_10001860 to i8*
  %v4_10001864 = load i8, i8* %v3_10001864, align 1
  %v5_10001864 = zext i8 %v4_10001864 to i32
  store i32 %v5_10001864, i32* %r0.global-to-local, align 4
  %v2_10001868 = icmp ne i8 %v4_10001864, 0
  %v3_10001868 = icmp eq i8 %v4_10001864, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001868, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001868, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001868, label %dec_label_pc_10001870, label %dec_label_pc_1000184c

dec_label_pc_10001870:                            ; preds = %dec_label_pc_10001858, %dec_label_pc_10001810, %dec_label_pc_100019c0
  %v0_10001870 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001870, i32* %r3.global-to-local, align 4
  store i32 268441720, i32* @lr, align 4
  %v1_10001874 = inttoptr i32 %v0_10001870 to i8*
  %v2_10001874 = call i32 @function_100095a4(i8* %v1_10001874)
  store i32 %v2_10001874, i32* %r3.global-to-local, align 4
  %v1_10001878 = icmp slt i32 %v2_10001874, 0
  %v2_10001878 = icmp sgt i32 %v2_10001874, 0
  %v3_10001878 = icmp eq i32 %v2_10001874, 0
  store i1 %v1_10001878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001878, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001878, i1* %cr7_eq.global-to-local, align 1
  %tmp84 = icmp slt i32 %v2_10001874, 1
  br i1 %tmp84, label %dec_label_pc_1000189c, label %dec_label_pc_10001880

dec_label_pc_10001880:                            ; preds = %dec_label_pc_10001870
  %v0_10001880 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001880, i32* %r3.global-to-local, align 4
  store i32 268441736, i32* @lr, align 4
  %v1_10001884 = inttoptr i32 %v0_10001880 to i8*
  %v2_10001884 = call i32 @function_100095a4(i8* %v1_10001884)
  store i32 %v2_10001884, i32* %r3.global-to-local, align 4
  %v1_10001888 = icmp slt i32 %v2_10001884, 127
  %v2_10001888 = icmp sgt i32 %v2_10001884, 127
  %v3_10001888 = icmp eq i32 %v2_10001884, 127
  store i1 %v1_10001888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001888, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001888, label %dec_label_pc_1000189c, label %dec_label_pc_10001890

dec_label_pc_10001890:                            ; preds = %dec_label_pc_10001880
  %v0_10001890 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001890 = add i32 %v0_10001890, 789
  store i32 %v1_10001890, i32* @r3, align 4
  %v0_10001894 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001894, i32* %r4.global-to-local, align 4
  store i32 268441756, i32* %lr.global-to-local, align 4
  %v2_10001898 = inttoptr i32 %v1_10001890 to i8*
  %v3_10001898 = call i32 @function_100095cc(i8* %v2_10001898, i32 %v0_10001894)
  store i32 %v3_10001898, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000189c

dec_label_pc_1000189c:                            ; preds = %dec_label_pc_10001880, %dec_label_pc_10001870, %dec_label_pc_10001890
  %v0_1000189c = load i32, i32* @r1, align 4
  %v1_1000189c = add i32 %v0_1000189c, 8
  %v2_1000189c = inttoptr i32 %v1_1000189c to i32*
  %v3_1000189c = load i32, i32* %v2_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018a0 = add i32 %v3_1000189c, 1
  %v1_100018a4 = add i32 %v2_100018a0, %v0_100018a0
  store i32 %v1_100018a4, i32* %r3.global-to-local, align 4
  store i32 268441772, i32* @lr, align 4
  %v1_100018a8 = inttoptr i32 %v1_100018a4 to i8*
  %v2_100018a8 = call i32 @function_100095a4(i8* %v1_100018a8)
  store i32 %v2_100018a8, i32* %r3.global-to-local, align 4
  %v1_100018ac = icmp slt i32 %v2_100018a8, 255
  %v2_100018ac = icmp sgt i32 %v2_100018a8, 255
  %v3_100018ac = icmp eq i32 %v2_100018a8, 255
  store i1 %v1_100018ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100018ac, label %dec_label_pc_100011e4, label %dec_label_pc_100018b4

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_1000189c
  %v0_100018b4 = load i32, i32* @r30, align 4
  store i32 %v0_100018b4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268441792, i32* @lr, align 4
  %v0_100018bc = call i32 @function_1000964c()
  store i32 %v0_100018bc, i32* %r3.global-to-local, align 4
  %v0_100018c0 = load i32, i32* @r1, align 4
  %v1_100018c0 = add i32 %v0_100018c0, 8
  %v2_100018c0 = inttoptr i32 %v1_100018c0 to i32*
  %v3_100018c0 = load i32, i32* %v2_100018c0, align 4
  %v0_100018c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018c4 = add i32 %v3_100018c0, 1
  %v1_100018c8 = add i32 %v2_100018c4, %v0_100018c4
  store i32 %v1_100018c8, i32* %r3.global-to-local, align 4
  store i32 268441808, i32* @lr, align 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i8*
  %v2_100018cc = call i32 @function_100095a4(i8* %v1_100018cc)
  store i32 %v2_100018cc, i32* %r3.global-to-local, align 4
  %v1_100018d0 = icmp slt i32 %v2_100018cc, 0
  %v2_100018d0 = icmp sgt i32 %v2_100018cc, 0
  %v3_100018d0 = icmp eq i32 %v2_100018cc, 0
  store i1 %v1_100018d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018d0, i1* %cr7_eq.global-to-local, align 1
  %tmp85 = icmp slt i32 %v2_100018cc, 1
  br i1 %tmp85, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_100018d8:                            ; preds = %dec_label_pc_10001a40, %dec_label_pc_100018b4
  %v0_100018d8 = load i32, i32* @r1, align 4
  %v1_100018d8 = add i32 %v0_100018d8, 8
  %v2_100018d8 = inttoptr i32 %v1_100018d8 to i32*
  %v3_100018d8 = load i32, i32* %v2_100018d8, align 4
  %v0_100018dc = load i32, i32* @r30, align 4
  store i32 %v0_100018dc, i32* @r3, align 4
  %v0_100018e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018e0 = add i32 %v3_100018d8, 1
  %v1_100018e4 = add i32 %v2_100018e0, %v0_100018e0
  store i32 %v1_100018e4, i32* %r4.global-to-local, align 4
  store i32 268441836, i32* %lr.global-to-local, align 4
  %v2_100018e8 = inttoptr i32 %v0_100018dc to i8*
  %v3_100018e8 = call i32 @function_100095cc(i8* %v2_100018e8, i32 %v1_100018e4)
  store i32 %v3_100018e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011e4

dec_label_pc_100018f0:                            ; preds = %dec_label_pc_10000ca8
  %v0_100018f0 = load i32, i32* @r30, align 4
  %v1_100018f0 = add i32 %v0_100018f0, -533
  %v2_100018f0 = inttoptr i32 %v1_100018f0 to i32*
  %v3_100018f0 = load i32, i32* %v2_100018f0, align 4
  store i32 %v3_100018f0, i32* %r3.global-to-local, align 4
  store i32 268441848, i32* @lr, align 4
  %v0_100018f4 = call i32 @function_10009de8()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001900 = load i32, i32* @r30, align 4
  %v2_10001900 = add i32 %v1_10001900, -533
  %v3_10001900 = inttoptr i32 %v2_10001900 to i32*
  store i32 -1, i32* %v3_10001900, align 4
  %v0_10001904 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001904 = trunc i32 %v0_10001904 to i8
  %v2_10001904 = load i32, i32* @r30, align 4
  %v3_10001904 = add i32 %v2_10001904, -529
  %v4_10001904 = inttoptr i32 %v3_10001904 to i8*
  store i8 %v1_10001904, i8* %v4_10001904, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_1000154c
  %v0_1000190c = load i32, i32* @r30, align 4
  %v1_1000190c = add i32 %v0_1000190c, -529
  %v2_1000190c = inttoptr i32 %v1_1000190c to i8*
  %v3_1000190c = load i8, i8* %v2_1000190c, align 1
  %v4_1000190c = zext i8 %v3_1000190c to i32
  store i32 %v4_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = icmp ne i8 %v3_1000190c, 0
  %v3_10001910 = icmp eq i8 %v3_1000190c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001910, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001910, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001910, label %dec_label_pc_10000824, label %dec_label_pc_100011e4

dec_label_pc_1000191c:                            ; preds = %dec_label_pc_1000177c
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001920 = load i32, i32* @r31, align 4
  store i32 %v0_10001920, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1000c648.7 to i32), i32* %r4.global-to-local, align 4
  store i32 268441900, i32* %lr.global-to-local, align 4
  %v3_10001928 = inttoptr i32 %v0_10001920 to i8*
  %v4_10001928 = call i32 @function_10009a00(i8* %v3_10001928, i32 ptrtoint ([4 x i8]* @global_var_1000c648.7 to i32))
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v1_1000192c = icmp slt i32 %v4_10001928, 0
  %v2_1000192c = icmp sgt i32 %v4_10001928, 0
  %v3_1000192c = icmp eq i32 %v4_10001928, 0
  store i1 %v1_1000192c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000192c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000192c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000192c, label %dec_label_pc_10001934, label %dec_label_pc_100017b4

dec_label_pc_10001934:                            ; preds = %dec_label_pc_1000191c
  %v0_10001934 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001934 = icmp slt i32 %v0_10001934, %v1_10001934
  %v3_10001934 = icmp sgt i32 %v0_10001934, %v1_10001934
  %v4_10001934 = icmp eq i32 %v0_10001934, %v1_10001934
  store i1 %v2_10001934, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001934, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001934, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001934, label %dec_label_pc_1000193c, label %dec_label_pc_10001b78

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_10001934
  store i32 10, i32* %r0.global-to-local, align 4
  %v2_10001940 = load i32, i32* @r30, align 4
  %v3_10001940 = add i32 %v2_10001940, -529
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 10, i8* %v4_10001940, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001948:                            ; preds = %dec_label_pc_1000142c
  %v1_10001948 = add i32 %v0_10001454, 1579
  %v2_10001948 = inttoptr i32 %v1_10001948 to i32*
  %v3_10001948 = load i32, i32* %v2_10001948, align 4
  store i32 %v3_10001948, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 268441948, i32* %lr.global-to-local, align 4
  %v3_10001958 = call i32 @function_10008ae4(i32 43, i32* null)
  %v0_1000195c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000195c, i32* %r4.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001968, i32* %r3.global-to-local, align 4
  store i32 268441968, i32* %lr.global-to-local, align 4
  %v4_1000196c = call i32 @function_10009670(i32 %v0_10001968, i32 %v0_1000195c, i32 %v3_10001958, i32 11)
  store i32 %v4_1000196c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001974 = load i32, i32* @r30, align 4
  %v1_10001974 = add i32 %v0_10001974, 1579
  %v2_10001974 = inttoptr i32 %v1_10001974 to i32*
  %v3_10001974 = load i32, i32* %v2_10001974, align 4
  %v0_10001978 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001978 = add i32 %v0_10001978, %v4_1000196c
  store i32 %v2_10001978, i32* %r31.global-to-local, align 4
  store i32 %v4_1000196c, i32* %r29.global-to-local, align 4
  %v2_10001984 = sub i32 %v3_10001974, %v4_1000196c
  store i32 %v2_10001984, i32* %r4.global-to-local, align 4
  store i32 %v2_10001978, i32* %r3.global-to-local, align 4
  store i32 268442004, i32* %lr.global-to-local, align 4
  %v4_10001990 = call i32 @function_10009670(i32 %v2_10001978, i32 %v2_10001984, i32 ptrtoint (i32* @global_var_1000c684.47 to i32), i32 1)
  store i32 %v4_10001990, i32* %r3.global-to-local, align 4
  %v0_10001994 = load i32, i32* @r30, align 4
  %v1_10001994 = add i32 %v0_10001994, 935
  %v2_10001994 = inttoptr i32 %v1_10001994 to i32*
  %v3_10001994 = load i32, i32* %v2_10001994, align 4
  store i32 %v3_10001994, i32* %r0.global-to-local, align 4
  %v0_10001998 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001998 = add i32 %v0_10001998, %v4_10001990
  store i32 %v2_10001998, i32* %r28.global-to-local, align 4
  %v1_1000199c = icmp slt i32 %v3_10001994, 4
  %v2_1000199c = icmp sgt i32 %v3_10001994, 4
  %v3_1000199c = icmp eq i32 %v3_10001994, 4
  store i1 %v1_1000199c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000199c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000199c, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100019a0 = add i32 %v1_100019a0, %v2_10001998
  store i32 %v2_100019a0, i32* %r9.global-to-local, align 4
  %v0_100019a4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100019a4 = trunc i32 %v0_100019a4 to i8
  %v3_100019a4 = add i32 %v2_100019a0, 2115
  %v4_100019a4 = inttoptr i32 %v3_100019a4 to i8*
  store i8 %v1_100019a4, i8* %v4_100019a4, align 1
  %v0_100019a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100019a8 = or i1 %v0_100019a8, %v1_100019a8
  br i1 %v2_100019a8, label %dec_label_pc_10001b90, label %dec_label_pc_100019ac

dec_label_pc_100019ac:                            ; preds = %dec_label_pc_10001b90, %dec_label_pc_10001948, %dec_label_pc_10001ba0
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_100019b4 = load i32, i32* @r30, align 4
  %v2_100019b4 = add i32 %v1_100019b4, 931
  %v3_100019b4 = inttoptr i32 %v2_100019b4 to i32*
  store i32 -1, i32* %v3_100019b4, align 4
  %v0_100019b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100019b8 = trunc i32 %v0_100019b8 to i8
  %v2_100019b8 = load i32, i32* @r30, align 4
  %v3_100019b8 = add i32 %v2_100019b8, -529
  %v4_100019b8 = inttoptr i32 %v3_100019b8 to i8*
  store i8 %v1_100019b8, i8* %v4_100019b8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100019c0:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001838
  %v2_100019c4 = phi i32 [ %v0_1000183c, %dec_label_pc_10001838 ], [ %v2_10001860, %dec_label_pc_1000184c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100019c4 = inttoptr i32 %v2_100019c4 to i8*
  store i8 0, i8* %v3_100019c4, align 1
  br label %dec_label_pc_10001870

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_10001680
  store i32 %v3_100019cc, i32* %r11.global-to-local, align 4
  %v0_100019d0 = load i32, i32* @r28, align 4
  %v2_100019d0 = add i32 %v0_100019d0, %v3_100019cc
  %v3_100019d0 = inttoptr i32 %v2_100019d0 to i8*
  %v4_100019d0 = load i8, i8* %v3_100019d0, align 1
  %v5_100019d0 = zext i8 %v4_100019d0 to i32
  store i32 %v5_100019d0, i32* %r0.global-to-local, align 4
  %v1_100019d4 = icmp ult i8 %v4_100019d0, 34
  %v2_100019d4 = icmp ugt i8 %v4_100019d0, 34
  %v3_100019d4 = icmp eq i8 %v4_100019d0, 34
  store i1 %v1_100019d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019d4, label %dec_label_pc_100019dc, label %dec_label_pc_100016e4

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, %dec_label_pc_100019cc
  %v1_100019e4 = phi i32 [ %v0_100019cc, %dec_label_pc_100019cc ], [ %v1_100019e4.pre, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019e0 = phi i32 [ %v0_100019d0, %dec_label_pc_100019cc ], [ %v0_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019dc = phi i32 [ %v3_100019cc, %dec_label_pc_100019cc ], [ %v1_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v1_100019dc = add i32 %v0_100019dc, 1
  store i32 %v1_100019dc, i32* %r11.global-to-local, align 4
  %v2_100019e0 = add i32 %v1_100019dc, %v0_100019e0
  store i32 %v2_100019e0, i32* %r29.global-to-local, align 4
  %v2_100019e4 = add i32 %v1_100019e4, 8
  %v3_100019e4 = inttoptr i32 %v2_100019e4 to i32*
  store i32 %v1_100019dc, i32* %v3_100019e4, align 4
  %v0_100019e8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100019e8, i32* %r3.global-to-local, align 4
  store i32 268442096, i32* @lr, align 4
  %v1_100019ec = inttoptr i32 %v0_100019e8 to i8*
  %v2_100019ec = call i32 @function_100095a4(i8* %v1_100019ec)
  store i32 %v2_100019ec, i32* %r3.global-to-local, align 4
  %v0_100019f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100019f0 = add i32 %v0_100019f0, %v2_100019ec
  store i32 %v2_100019f0, i32* %r29.global-to-local, align 4
  %v1_100019f4 = add i32 %v2_100019f0, -1
  %v2_100019f4 = inttoptr i32 %v1_100019f4 to i8*
  %v3_100019f4 = load i8, i8* %v2_100019f4, align 1
  %v4_100019f4 = zext i8 %v3_100019f4 to i32
  store i32 %v4_100019f4, i32* %r0.global-to-local, align 4
  %v1_100019f8 = icmp ult i8 %v3_100019f4, 34
  %v2_100019f8 = icmp ugt i8 %v3_100019f4, 34
  %v3_100019f8 = icmp eq i8 %v3_100019f4, 34
  store i1 %v1_100019f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019f8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019f8, label %dec_label_pc_10001a00, label %dec_label_pc_100016e4

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_100019dc
  %v0_10001a00 = load i32, i32* @r1, align 4
  %v1_10001a00 = add i32 %v0_10001a00, 8
  %v2_10001a00 = inttoptr i32 %v1_10001a00 to i32*
  %v3_10001a00 = load i32, i32* %v2_10001a00, align 4
  %v0_10001a04 = load i32, i32* @r28, align 4
  %v2_10001a04 = add i32 %v0_10001a04, %v3_10001a00
  store i32 %v2_10001a04, i32* %r29.global-to-local, align 4
  store i32 %v2_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442128, i32* @lr, align 4
  %v1_10001a0c = inttoptr i32 %v2_10001a04 to i8*
  %v2_10001a0c = call i32 @function_100095a4(i8* %v1_10001a0c)
  store i32 %v2_10001a0c, i32* %r3.global-to-local, align 4
  %v0_10001a10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a10 = add i32 %v0_10001a10, %v2_10001a0c
  store i32 %v2_10001a10, i32* %r29.global-to-local, align 4
  %v0_10001a14 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001a14 = trunc i32 %v0_10001a14 to i8
  %v3_10001a14 = add i32 %v2_10001a10, -1
  %v4_10001a14 = inttoptr i32 %v3_10001a14 to i8*
  store i8 %v1_10001a14, i8* %v4_10001a14, align 1
  br label %dec_label_pc_100016e4

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_100011d8
  %v0_10001a1c = load i32, i32* @r30, align 4
  store i32 %v0_10001a1c, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442152, i32* @lr, align 4
  %v0_10001a24 = call i32 @function_1000964c()
  store i32 %v0_10001a24, i32* %r3.global-to-local, align 4
  %v0_10001a28 = load i32, i32* @r1, align 4
  %v1_10001a28 = add i32 %v0_10001a28, 8
  %v2_10001a28 = inttoptr i32 %v1_10001a28 to i32*
  %v3_10001a28 = load i32, i32* %v2_10001a28, align 4
  %v0_10001a2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a2c = add i32 %v3_10001a28, 1
  %v1_10001a30 = add i32 %v2_10001a2c, %v0_10001a2c
  store i32 %v1_10001a30, i32* %r3.global-to-local, align 4
  store i32 268442168, i32* @lr, align 4
  %v1_10001a34 = inttoptr i32 %v1_10001a30 to i8*
  %v2_10001a34 = call i32 @function_100095a4(i8* %v1_10001a34)
  store i32 %v2_10001a34, i32* %r3.global-to-local, align 4
  %v1_10001a38 = icmp slt i32 %v2_10001a34, 0
  %v2_10001a38 = icmp sgt i32 %v2_10001a34, 0
  %v3_10001a38 = icmp eq i32 %v2_10001a34, 0
  store i1 %v1_10001a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a38, i1* %cr7_eq.global-to-local, align 1
  %tmp86 = icmp slt i32 %v2_10001a34, 1
  br i1 %tmp86, label %dec_label_pc_100011e4, label %dec_label_pc_10001a40

dec_label_pc_10001a40:                            ; preds = %dec_label_pc_10001a1c
  %v0_10001a40 = load i32, i32* @r1, align 4
  %v1_10001a40 = add i32 %v0_10001a40, 8
  %v2_10001a40 = inttoptr i32 %v1_10001a40 to i32*
  %v3_10001a40 = load i32, i32* %v2_10001a40, align 4
  %v0_10001a44 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a44 = add i32 %v3_10001a40, 1
  %v1_10001a48 = add i32 %v2_10001a44, %v0_10001a44
  store i32 %v1_10001a48, i32* %r3.global-to-local, align 4
  store i32 268442192, i32* @lr, align 4
  %v1_10001a4c = inttoptr i32 %v1_10001a48 to i8*
  %v2_10001a4c = call i32 @function_100095a4(i8* %v1_10001a4c)
  store i32 %v2_10001a4c, i32* %r3.global-to-local, align 4
  %v1_10001a50 = icmp slt i32 %v2_10001a4c, 255
  %v2_10001a50 = icmp sgt i32 %v2_10001a4c, 255
  %v3_10001a50 = icmp eq i32 %v2_10001a4c, 255
  store i1 %v1_10001a50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a50, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a50, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_100017fc
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001a60 = load i32, i32* @r1, align 4
  %v2_10001a60 = add i32 %v1_10001a60, 8
  %v3_10001a60 = inttoptr i32 %v2_10001a60 to i32*
  store i32 8, i32* %v3_10001a60, align 4
  %v0_10001814.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001810

dec_label_pc_10001a68:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b38
  %v2_10001a6c = phi i32 [ %v0_10001b3c, %dec_label_pc_10001b38 ], [ %v2_10001b5c, %dec_label_pc_10001b4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10001a6c = inttoptr i32 %v2_10001a6c to i8*
  store i8 0, i8* %v3_10001a6c, align 1
  br label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001b58, %dec_label_pc_10001b0c, %dec_label_pc_10001a68
  %v0_10001a70 = load i32, i32* @r31, align 4
  store i32 %v0_10001a70, i32* %r3.global-to-local, align 4
  store i32 268442232, i32* @lr, align 4
  %v1_10001a74 = inttoptr i32 %v0_10001a70 to i8*
  %v2_10001a74 = call i32 @function_100095a4(i8* %v1_10001a74)
  store i32 %v2_10001a74, i32* %r3.global-to-local, align 4
  %v1_10001a78 = icmp slt i32 %v2_10001a74, 0
  %v2_10001a78 = icmp sgt i32 %v2_10001a74, 0
  %v3_10001a78 = icmp eq i32 %v2_10001a74, 0
  store i1 %v1_10001a78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a78, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a78, i1* %cr7_eq.global-to-local, align 1
  %tmp87 = icmp slt i32 %v2_10001a74, 1
  br i1 %tmp87, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a80

dec_label_pc_10001a80:                            ; preds = %dec_label_pc_10001a70
  %v0_10001a80 = load i32, i32* @r31, align 4
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 268442248, i32* @lr, align 4
  %v1_10001a84 = inttoptr i32 %v0_10001a80 to i8*
  %v2_10001a84 = call i32 @function_100095a4(i8* %v1_10001a84)
  store i32 %v2_10001a84, i32* %r3.global-to-local, align 4
  %v1_10001a88 = icmp slt i32 %v2_10001a84, 127
  %v2_10001a88 = icmp sgt i32 %v2_10001a84, 127
  %v3_10001a88 = icmp eq i32 %v2_10001a84, 127
  store i1 %v1_10001a88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a88, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a90

dec_label_pc_10001a90:                            ; preds = %dec_label_pc_10001a80
  %v0_10001a90 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001a90 = add i32 %v0_10001a90, 789
  store i32 %v1_10001a90, i32* @r3, align 4
  %v0_10001a94 = load i32, i32* @r31, align 4
  store i32 %v0_10001a94, i32* %r4.global-to-local, align 4
  store i32 268442268, i32* %lr.global-to-local, align 4
  %v2_10001a98 = inttoptr i32 %v1_10001a90 to i8*
  %v3_10001a98 = call i32 @function_100095cc(i8* %v2_10001a98, i32 %v0_10001a94)
  store i32 %v3_10001a98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a9c

dec_label_pc_10001a9c:                            ; preds = %dec_label_pc_10001a80, %dec_label_pc_10001a70, %dec_label_pc_1000174c, %dec_label_pc_10001a90
  %v0_10001a9c = load i32, i32* @r1, align 4
  %v1_10001a9c = add i32 %v0_10001a9c, 8
  %v2_10001a9c = inttoptr i32 %v1_10001a9c to i32*
  %v3_10001a9c = load i32, i32* %v2_10001a9c, align 4
  %v0_10001aa0 = load i32, i32* @r31, align 4
  %v2_10001aa0 = add i32 %v3_10001a9c, 1
  %v1_10001aa4 = add i32 %v2_10001aa0, %v0_10001aa0
  store i32 %v1_10001aa4, i32* %r3.global-to-local, align 4
  store i32 268442284, i32* @lr, align 4
  %v1_10001aa8 = inttoptr i32 %v1_10001aa4 to i8*
  %v2_10001aa8 = call i32 @function_100095a4(i8* %v1_10001aa8)
  store i32 %v2_10001aa8, i32* %r3.global-to-local, align 4
  %v1_10001aac = icmp slt i32 %v2_10001aa8, 255
  %v2_10001aac = icmp sgt i32 %v2_10001aa8, 255
  %v3_10001aac = icmp eq i32 %v2_10001aa8, 255
  store i1 %v1_10001aac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001aac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001aac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001aac, label %dec_label_pc_10001758, label %dec_label_pc_10001ab4

dec_label_pc_10001ab4:                            ; preds = %dec_label_pc_10001a9c
  %v0_10001ab4 = load i32, i32* @r30, align 4
  store i32 %v0_10001ab4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442304, i32* @lr, align 4
  %v0_10001abc = call i32 @function_1000964c()
  store i32 %v0_10001abc, i32* %r3.global-to-local, align 4
  %v0_10001ac0 = load i32, i32* @r1, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 8
  %v2_10001ac0 = inttoptr i32 %v1_10001ac0 to i32*
  %v3_10001ac0 = load i32, i32* %v2_10001ac0, align 4
  %v0_10001ac4 = load i32, i32* @r31, align 4
  %v2_10001ac4 = add i32 %v3_10001ac0, 1
  %v1_10001ac8 = add i32 %v2_10001ac4, %v0_10001ac4
  store i32 %v1_10001ac8, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v1_10001acc = inttoptr i32 %v1_10001ac8 to i8*
  %v2_10001acc = call i32 @function_100095a4(i8* %v1_10001acc)
  store i32 %v2_10001acc, i32* %r3.global-to-local, align 4
  %v1_10001ad0 = icmp slt i32 %v2_10001acc, 0
  %v2_10001ad0 = icmp sgt i32 %v2_10001acc, 0
  %v3_10001ad0 = icmp eq i32 %v2_10001acc, 0
  store i1 %v1_10001ad0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001ad0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001ad0, i1* %cr7_eq.global-to-local, align 1
  %tmp88 = icmp slt i32 %v2_10001acc, 1
  br i1 %tmp88, label %dec_label_pc_10001758, label %dec_label_pc_10001ad8

dec_label_pc_10001ad8:                            ; preds = %dec_label_pc_10001ab4
  %v0_10001ad8 = load i32, i32* @r1, align 4
  %v1_10001ad8 = add i32 %v0_10001ad8, 8
  %v2_10001ad8 = inttoptr i32 %v1_10001ad8 to i32*
  %v3_10001ad8 = load i32, i32* %v2_10001ad8, align 4
  %v0_10001adc = load i32, i32* @r30, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v0_10001ae0 = load i32, i32* @r31, align 4
  %v2_10001ae0 = add i32 %v3_10001ad8, 1
  %v1_10001ae4 = add i32 %v2_10001ae0, %v0_10001ae0
  store i32 %v1_10001ae4, i32* %r4.global-to-local, align 4
  store i32 268442348, i32* %lr.global-to-local, align 4
  %v2_10001ae8 = inttoptr i32 %v0_10001adc to i8*
  %v3_10001ae8 = call i32 @function_100095cc(i8* %v2_10001ae8, i32 %v1_10001ae4)
  store i32 %v3_10001ae8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001758

dec_label_pc_10001af0:                            ; preds = %dec_label_pc_10001720
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001af4 = load i32, i32* @r1, align 4
  %v2_10001af4 = add i32 %v1_10001af4, 8
  %v3_10001af4 = inttoptr i32 %v2_10001af4 to i32*
  store i32 7, i32* %v3_10001af4, align 4
  %v0_10001af8 = load i32, i32* @r31, align 4
  %v1_10001af8 = add i32 %v0_10001af8, 4
  %v2_10001af8 = inttoptr i32 %v1_10001af8 to i8*
  %v3_10001af8 = load i8, i8* %v2_10001af8, align 1
  %v4_10001af8 = zext i8 %v3_10001af8 to i32
  store i32 %v4_10001af8, i32* %r0.global-to-local, align 4
  %v1_10001afc = icmp ult i8 %v3_10001af8, 115
  %v2_10001afc = icmp ugt i8 %v3_10001af8, 115
  %v3_10001afc = icmp eq i8 %v3_10001af8, 115
  store i1 %v1_10001afc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001afc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001afc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001afc, label %dec_label_pc_10001b04, label %dec_label_pc_10001b0c

dec_label_pc_10001b04:                            ; preds = %dec_label_pc_10001af0
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001b08 = load i32, i32* @r1, align 4
  %v2_10001b08 = add i32 %v1_10001b08, 8
  %v3_10001b08 = inttoptr i32 %v2_10001b08 to i32*
  store i32 8, i32* %v3_10001b08, align 4
  %v0_10001b14.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001b0c

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001af0, %dec_label_pc_10001b04
  %v0_10001b14 = phi i32 [ %v0_10001af8, %dec_label_pc_10001af0 ], [ %v0_10001b14.pre, %dec_label_pc_10001b04 ]
  %v0_10001b0c = load i32, i32* @r1, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 8
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i32*
  %v3_10001b0c = load i32, i32* %v2_10001b0c, align 4
  %v0_10001b10 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001b14, i32* %r3.global-to-local, align 4
  %v1_10001b10 = sub i32 1, %v3_10001b0c
  %v2_10001b18 = add i32 %v1_10001b10, %v0_10001b10
  %v2_10001b1c = add i32 %v3_10001b0c, %v0_10001b14
  store i32 %v2_10001b1c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001b24.49 to i32), i32* @lr, align 4
  %v3_10001b20 = call i32 @function_1000a500(i32 %v0_10001b14, i32 %v2_10001b1c, i32 %v2_10001b18)
  store i32 %v3_10001b20, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001b28 = load i32, i32* @r1, align 4
  %v2_10001b28 = add i32 %v1_10001b28, 8
  %v3_10001b28 = inttoptr i32 %v2_10001b28 to i32*
  store i32 0, i32* %v3_10001b28, align 4
  %v0_10001b2c = load i32, i32* @r28, align 4
  %v1_10001b2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b2c = add i32 %v1_10001b2c, %v0_10001b2c
  %v3_10001b2c = inttoptr i32 %v2_10001b2c to i8*
  %v4_10001b2c = load i8, i8* %v3_10001b2c, align 1
  %v5_10001b2c = zext i8 %v4_10001b2c to i32
  store i32 %v5_10001b2c, i32* %r3.global-to-local, align 4
  %v2_10001b30 = icmp ne i8 %v4_10001b2c, 0
  %v3_10001b30 = icmp eq i8 %v4_10001b2c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b30, label %dec_label_pc_10001a70, label %dec_label_pc_10001b38

dec_label_pc_10001b38:                            ; preds = %dec_label_pc_10001b0c
  %v1_10001b38 = icmp ult i8 %v4_10001b2c, 47
  %v2_10001b38 = icmp ugt i8 %v4_10001b2c, 47
  %v3_10001b38 = icmp eq i8 %v4_10001b2c, 47
  store i1 %v1_10001b38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b38, i1* %cr7_eq.global-to-local, align 1
  %v0_10001b3c = load i32, i32* @r31, align 4
  store i32 %v0_10001b3c, i32* %r11.global-to-local, align 4
  br i1 %v3_10001b38, label %dec_label_pc_10001a68, label %dec_label_pc_10001b44

dec_label_pc_10001b44:                            ; preds = %dec_label_pc_10001b38
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001b58

dec_label_pc_10001b4c:                            ; preds = %dec_label_pc_10001b58
  %v1_10001b4c = icmp ult i8 %v4_10001b60, 47
  %v2_10001b4c = icmp ugt i8 %v4_10001b60, 47
  %v3_10001b4c = icmp eq i8 %v4_10001b60, 47
  store i1 %v1_10001b4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b4c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b4c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001b50 = add i32 %v1_10001b5c, 1
  store i32 %v1_10001b50, i32* %r9.global-to-local, align 4
  br i1 %v3_10001b4c, label %dec_label_pc_10001a68, label %dec_label_pc_10001b58

dec_label_pc_10001b58:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b44
  %v0_10001b58 = phi i32 [ %v1_10001b50, %dec_label_pc_10001b4c ], [ 1, %dec_label_pc_10001b44 ]
  %v1_10001b58 = load i32, i32* @r1, align 4
  %v2_10001b58 = add i32 %v1_10001b58, 8
  %v3_10001b58 = inttoptr i32 %v2_10001b58 to i32*
  store i32 %v0_10001b58, i32* %v3_10001b58, align 4
  %v0_10001b5c = load i32, i32* @r31, align 4
  %v1_10001b5c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b5c = add i32 %v1_10001b5c, %v0_10001b5c
  store i32 %v2_10001b5c, i32* %r11.global-to-local, align 4
  %v3_10001b60 = inttoptr i32 %v2_10001b5c to i8*
  %v4_10001b60 = load i8, i8* %v3_10001b60, align 1
  %v5_10001b60 = zext i8 %v4_10001b60 to i32
  store i32 %v5_10001b60, i32* %r0.global-to-local, align 4
  %v2_10001b64 = icmp ne i8 %v4_10001b60, 0
  %v3_10001b64 = icmp eq i8 %v4_10001b60, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001a70, label %dec_label_pc_10001b4c

dec_label_pc_10001b70:                            ; preds = %dec_label_pc_100014d0
  %v0_10001b70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001b70 = trunc i32 %v0_10001b70 to i8
  %v2_10001b70 = load i32, i32* @r30, align 4
  %v3_10001b70 = add i32 %v2_10001b70, -529
  %v4_10001b70 = inttoptr i32 %v3_10001b70 to i8*
  store i8 %v1_10001b70, i8* %v4_10001b70, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001b78:                            ; preds = %dec_label_pc_10001934
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b7c = load i32, i32* @r30, align 4
  %v3_10001b7c = add i32 %v2_10001b7c, -529
  %v4_10001b7c = inttoptr i32 %v3_10001b7c to i8*
  store i8 1, i8* %v4_10001b7c, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001b84:                            ; preds = %dec_label_pc_10001660
  %v1_10001b84 = add i32 %v1_10001674, 1
  store i32 %v1_10001b84, i32* %r11.global-to-local, align 4
  %v1_10001b88 = load i32, i32* @r1, align 4
  %v2_10001b88 = add i32 %v1_10001b88, 8
  %v3_10001b88 = inttoptr i32 %v2_10001b88 to i32*
  store i32 %v1_10001b84, i32* %v3_10001b88, align 4
  %v0_10001680.pre = load i32, i32* @r28, align 4
  %v1_10001680.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10001680

dec_label_pc_10001b90:                            ; preds = %dec_label_pc_10001948
  %v0_10001b90 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001b90, i32* %r3.global-to-local, align 4
  store i32 268442520, i32* @lr, align 4
  %v1_10001b94 = inttoptr i32 %v0_10001b90 to i8*
  %v2_10001b94 = call i32 @function_100095a4(i8* %v1_10001b94)
  store i32 %v2_10001b94, i32* %r3.global-to-local, align 4
  %v1_10001b98 = icmp slt i32 %v2_10001b94, 127
  %v2_10001b98 = icmp sgt i32 %v2_10001b94, 127
  %v3_10001b98 = icmp eq i32 %v2_10001b94, 127
  store i1 %v1_10001b98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b98, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001b98, label %dec_label_pc_100019ac, label %dec_label_pc_10001ba0

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b90
  %v0_10001ba0 = load i32, i32* @r30, align 4
  %v1_10001ba0 = add i32 %v0_10001ba0, 935
  %v2_10001ba0 = inttoptr i32 %v1_10001ba0 to i32*
  %v3_10001ba0 = load i32, i32* %v2_10001ba0, align 4
  store i32 %v3_10001ba0, i32* %r3.global-to-local, align 4
  %v0_10001ba4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r4.global-to-local, align 4
  %v0_10001ba8 = load i32, i32* @r1, align 4
  %v1_10001ba8 = add i32 %v0_10001ba8, 20808
  %v2_10001ba8 = inttoptr i32 %v1_10001ba8 to i32*
  %v3_10001ba8 = load i32, i32* %v2_10001ba8, align 4
  store i32 %v3_10001ba8, i32* %r0.global-to-local, align 4
  %v0_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v1_10001bac = add i32 %v0_10001bac, 3
  store i32 %v1_10001bac, i32* %r28.global-to-local, align 4
  %v1_10001bb0 = mul i32 %v3_10001ba0, 128
  %v0_10001bb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001bb4 = add i32 %v0_10001bb4, %v1_10001bac
  store i32 %v2_10001bb4, i32* %r27.global-to-local, align 4
  %v2_10001bb8 = add i32 %v3_10001ba8, %v1_10001bb0
  store i32 %v2_10001bb8, i32* @r3, align 4
  store i32 268442560, i32* %lr.global-to-local, align 4
  %v2_10001bbc = inttoptr i32 %v2_10001bb8 to i8*
  %v3_10001bbc = call i32 @function_100095cc(i8* %v2_10001bbc, i32 %v0_10001ba4)
  store i32 %v3_10001bbc, i32* %r3.global-to-local, align 4
  %v0_10001bc0 = load i32, i32* @r30, align 4
  %v1_10001bc0 = add i32 %v0_10001bc0, 935
  %v2_10001bc0 = inttoptr i32 %v1_10001bc0 to i32*
  %v3_10001bc0 = load i32, i32* %v2_10001bc0, align 4
  store i32 %v3_10001bc0, i32* %r29.global-to-local, align 4
  %v0_10001bc4 = load i32, i32* @r1, align 4
  %v1_10001bc4 = add i32 %v0_10001bc4, 20808
  %v2_10001bc4 = inttoptr i32 %v1_10001bc4 to i32*
  %v3_10001bc4 = load i32, i32* %v2_10001bc4, align 4
  store i32 %v3_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = mul i32 %v3_10001bc0, 128
  %v2_10001bcc = add i32 %v3_10001bc4, %v1_10001bc8
  store i32 %v2_10001bcc, i32* %r29.global-to-local, align 4
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  store i32 268442584, i32* @lr, align 4
  %v1_10001bd4 = inttoptr i32 %v2_10001bcc to i8*
  %v2_10001bd4 = call i32 @function_100095a4(i8* %v1_10001bd4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c9c8.50 to i32), i32* %r4.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v2_10001bd4
  store i32 %v2_10001be0, i32* @r3, align 4
  store i32 268442600, i32* %lr.global-to-local, align 4
  %v2_10001be4 = inttoptr i32 %v2_10001be0 to i8*
  %v3_10001be4 = call i32 @function_100095cc(i8* %v2_10001be4, i32 ptrtoint (i32* @global_var_1000c9c8.50 to i32))
  store i32 %v3_10001be4, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001bec = load i32, i32* @r30, align 4
  %v1_10001bec = add i32 %v0_10001bec, 1579
  %v2_10001bec = inttoptr i32 %v1_10001bec to i32*
  %v3_10001bec = load i32, i32* %v2_10001bec, align 4
  %v0_10001bf8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001bf8, i32* %r3.global-to-local, align 4
  %v0_10001bfc = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bfc = sub i32 %v3_10001bec, %v0_10001bfc
  store i32 %v2_10001bfc, i32* %r4.global-to-local, align 4
  %v1_10001c00 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001c00 = add i32 %v1_10001c00, %v0_10001bfc
  store i32 %v2_10001c00, i32* %r28.global-to-local, align 4
  store i32 268442632, i32* %lr.global-to-local, align 4
  %v4_10001c04 = call i32 @function_10009670(i32 %v0_10001bf8, i32 %v2_10001bfc, i32 ptrtoint (i32* @global_var_1000c684.47 to i32), i32 1)
  store i32 %v4_10001c04, i32* %r3.global-to-local, align 4
  %v0_10001c08 = load i32, i32* @r30, align 4
  %v1_10001c08 = add i32 %v0_10001c08, 935
  %v2_10001c08 = inttoptr i32 %v1_10001c08 to i32*
  %v3_10001c08 = load i32, i32* %v2_10001c08, align 4
  store i32 %v3_10001c08, i32* %r29.global-to-local, align 4
  %v0_10001c0c = load i32, i32* @r1, align 4
  %v1_10001c0c = add i32 %v0_10001c0c, 20808
  %v2_10001c0c = inttoptr i32 %v1_10001c0c to i32*
  %v3_10001c0c = load i32, i32* %v2_10001c0c, align 4
  store i32 %v3_10001c0c, i32* %r0.global-to-local, align 4
  %v0_10001c10 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c10 = add i32 %v0_10001c10, %v4_10001c04
  %v1_10001c14 = mul i32 %v3_10001c08, 128
  %v1_10001c18 = add i32 %v2_10001c10, 2111
  store i32 %v1_10001c18, i32* %r28.global-to-local, align 4
  %v2_10001c1c = add i32 %v3_10001c0c, %v1_10001c14
  store i32 %v2_10001c1c, i32* %r29.global-to-local, align 4
  %v0_10001c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001c20 = trunc i32 %v0_10001c20 to i8
  %v3_10001c20 = add i32 %v2_10001c10, 2115
  %v4_10001c20 = inttoptr i32 %v3_10001c20 to i8*
  store i8 %v1_10001c20, i8* %v4_10001c20, align 1
  %v0_10001c24 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c24, i32* %r3.global-to-local, align 4
  store i32 268442668, i32* @lr, align 4
  %v1_10001c28 = inttoptr i32 %v0_10001c24 to i8*
  %v2_10001c28 = call i32 @function_100095a4(i8* %v1_10001c28)
  %v0_10001c2c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c2c, i32* %r4.global-to-local, align 4
  %v0_10001c30 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c30 = add i32 %v0_10001c30, %v2_10001c28
  store i32 %v2_10001c30, i32* @r3, align 4
  store i32 268442680, i32* %lr.global-to-local, align 4
  %v2_10001c34 = inttoptr i32 %v2_10001c30 to i8*
  %v3_10001c34 = call i32 @function_100095cc(i8* %v2_10001c34, i32 %v0_10001c2c)
  store i32 %v3_10001c34, i32* %r3.global-to-local, align 4
  %v0_10001c38 = load i32, i32* @r30, align 4
  %v1_10001c38 = add i32 %v0_10001c38, 935
  %v2_10001c38 = inttoptr i32 %v1_10001c38 to i32*
  %v3_10001c38 = load i32, i32* %v2_10001c38, align 4
  %v1_10001c3c = add i32 %v3_10001c38, 1
  store i32 %v1_10001c3c, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c3c, i32* %v2_10001c38, align 4
  br label %dec_label_pc_100019ac

dec_label_pc_10001c70:                            ; preds = %dec_label_pc_10000578
  %v0_10001c70 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c70, i32* @r3, align 4
  %v0_10001c74 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001c74 = add i32 %v0_10001c74, 1
  store i32 %v1_10001c74, i32* %r28.global-to-local, align 4
  %v0_10001c78 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c78, i32* %r4.global-to-local, align 4
  %v0_10001c7c = load i32, i32* @r31, align 4
  %v1_10001c7c = add i32 %v0_10001c7c, 3140
  store i32 %v1_10001c7c, i32* @r31, align 4
  store i32 268442756, i32* %lr.global-to-local, align 4
  %v2_10001c80 = inttoptr i32 %v0_10001c70 to i8*
  %v3_10001c80 = call i32 @function_100095cc(i8* %v2_10001c80, i32 %v0_10001c78)
  store i32 %v3_10001c80, i32* %r3.global-to-local, align 4
  %v0_10001c84 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001c84 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c84 = icmp slt i32 %v0_10001c84, %v1_10001c84
  %v3_10001c84 = icmp sgt i32 %v0_10001c84, %v1_10001c84
  %v4_10001c84 = icmp eq i32 %v0_10001c84, %v1_10001c84
  store i1 %v2_10001c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c84, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001c84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c84, label %dec_label_pc_10001c8c, label %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge

dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge: ; preds = %dec_label_pc_10001c70
  %v2_100004d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c70
  %v0_10001c8c = load i32, i32* @r1, align 4
  %v1_10001c8c = add i32 %v0_10001c8c, 20804
  %v2_10001c8c = inttoptr i32 %v1_10001c8c to i32*
  %v3_10001c8c = load i32, i32* %v2_10001c8c, align 4
  store i32 %v3_10001c8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

; uselistorder directives
  uselistorder i32 %v3_10001c8c, { 1, 0 }
  uselistorder i32 %v0_10001c8c, { 1, 0 }
  uselistorder i32 %v1_10001c84, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10001b94, { 2, 1, 0, 3 }
  uselistorder i8 %v4_10001b60, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v2_10001b5c, { 1, 2, 0 }
  uselistorder i1 %v3_10001b4c, { 1, 0 }
  uselistorder i32 %v0_10001b3c, { 1, 0 }
  uselistorder i1 %v3_10001b38, { 1, 0 }
  uselistorder i32 %v3_10001b0c, { 1, 0 }
  uselistorder i32 %v0_10001b14, { 2, 0, 1 }
  uselistorder i32 %v2_10001acc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001aa8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a84, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a74, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001a4c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a34, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100019dc, { 1, 0, 2 }
  uselistorder i32 %v0_100019d0, { 1, 0 }
  uselistorder i32 %v3_10001994, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001978, { 1, 0, 2 }
  uselistorder i32 %v4_1000196c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001928, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100018cc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_100018a8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001884, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001874, { 0, 3, 2, 1, 4 }
  uselistorder i8 %v4_10001864, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_1000185c, { 0, 2, 1 }
  uselistorder i1 %v3_1000184c, { 1, 0 }
  uselistorder i1 %v3_10001838, { 1, 0 }
  uselistorder i32 %v0_10001814, { 2, 0, 1 }
  uselistorder i32 %v2_100017ec, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100017a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001740, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10001714, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100016f0, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100016d8, { 1, 0 }
  uselistorder i32 %v0_100016d8, { 1, 0 }
  uselistorder i32 %v3_100019cc, { 2, 0, 3, 1 }
  uselistorder i32 %v5_100016a0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001674, { 2, 1, 0 }
  uselistorder i32 %v0_10001674, { 1, 0 }
  uselistorder i32 %v0_10001658, { 1, 0 }
  uselistorder i32 %v1_10001648, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_1000163c, { 0, 2, 1 }
  uselistorder i32 %v1_10001624, { 1, 2, 3, 0 }
  uselistorder i32 %v5_100015e4, { 0, 1, 5, 4, 3, 2, 6, 9, 8, 7, 10 }
  uselistorder i32 %v3_100015d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1000158c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000154c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001538, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_100014a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001488, { 1, 0 }
  uselistorder i32 %v5_1000146c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10001454, { 1, 0 }
  uselistorder i32 %v4_10001448, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001400, { 1, 2, 0 }
  uselistorder i32 %v0_100013d0, { 1, 0 }
  uselistorder i32 %v3_100013bc, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1000139c, { 6, 5, 4, 7, 3, 0, 2, 1 }
  uselistorder i32* %v2_1000139c, { 1, 0 }
  uselistorder i32 %v0_1000139c, { 1, 0 }
  uselistorder i32 %v3_10001388, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10001370, { 1, 2, 0 }
  uselistorder i32 %v0_10001364, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10001354, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000145c, { 0, 2, 1 }
  uselistorder i32 %v3_10001344, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000133c, { 2, 1, 0 }
  uselistorder i32 %v1_10001308, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100012a4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000125c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000124c, { 0, 2, 1 }
  uselistorder i32 %v4_1000123c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001214, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_10001210, { 2, 1, 0, 3 }
  uselistorder i32 %v5_100011cc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100011ac, { 1, 0 }
  uselistorder i32 %v5_1000118c, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10001178, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10001134, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001110, { 2, 1, 0, 3 }
  uselistorder i1 %v3_100010c0, { 0, 2, 1 }
  uselistorder i32 %v3_100010d8, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %v2_100010d8, { 0, 2, 1 }
  uselistorder i32 %v2_100010d4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_1000107c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v5_10001044, { 2, 0, 5, 4, 3, 1, 8, 7, 6, 9 }
  uselistorder i32 %v0_10001010, { 0, 2, 1 }
  uselistorder i32 %v4_1000100c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000fe8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000fdc, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000f84, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000f70, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000f2c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000f00, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000eb8, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000ea4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000e60, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000e2c, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000de4, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000d8c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d58, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d2c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100017d4, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v5_10000ce8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000cc4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10000c98, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000c84, { 1, 0 }
  uselistorder i32 %v1_10000c6c, { 1, 0 }
  uselistorder i32 %v2_10000c5c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10000c54, { 1, 0 }
  uselistorder i32 %v1_10000c34, { 1, 0 }
  uselistorder i32 %v2_10000c20, { 1, 0, 3, 4, 5, 2 }
  uselistorder i32 %v3_10000bf4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000b90, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b8c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000b3c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b18, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000089c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000870, { 1, 0 }
  uselistorder i32 %v1_10000858, { 2, 1, 0 }
  uselistorder i32 %v1_10000848, { 1, 0 }
  uselistorder i32 %v3_10000838, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000824, { 2, 1, 0, 3 }
  uselistorder i1 %v3_1000081c, { 1, 0 }
  uselistorder i1 %v3_10000814, { 1, 0 }
  uselistorder i32 %v1_10000800, { 1, 0 }
  uselistorder i32 %v1_100007f0, { 1, 0 }
  uselistorder i32 %v0_100007b4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %v1_10000784, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000768, { 1, 0 }
  uselistorder i32 %v2_10000758, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_100006cc, { 1, 0, 4, 3, 2, 5 }
  uselistorder i8 %v3_10000688, { 14, 15, 16, 17, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_10000688, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10000c8c, { 5, 6, 2, 3, 0, 1, 7, 4 }
  uselistorder i32 %v1_10000678, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10000660, { 1, 0 }
  uselistorder i1 %v3_10000658, { 1, 0 }
  uselistorder i1 %v3_10000650, { 1, 0 }
  uselistorder i1 %v3_10000648, { 1, 0 }
  uselistorder i1 %v3_10000640, { 1, 0 }
  uselistorder i32 %v1_1000060c, { 1, 0 }
  uselistorder i32 %v1_100005ec, { 1, 0 }
  uselistorder i32 %v1_100005a0, { 1, 0 }
  uselistorder i32 %v3_10000590, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10000440., { 1, 2, 0 }
  uselistorder i32 %v1_10000418, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10000404, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10000400, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003e8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003d8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000038c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 14, 15 }
  uselistorder i32 %v2_10000368, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1000035c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10000238, { 1, 0 }
  uselistorder i32 %v2_10000214, { 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 0, 11, 12 }
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 74, 75, 76, 77, 51, 52, 53, 54, 57, 58, 55, 56, 59, 60, 61, 62, 63, 65, 64, 1, 67, 66, 0, 68, 69, 70, 71, 72, 73 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 10, 9, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 66, 68, 69, 70, 71, 73, 72, 74, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 85, 87, 86, 89, 88, 91, 90, 92, 93, 94, 138, 139, 140, 141, 142, 143, 144, 145, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 126, 128, 129, 130, 131, 132, 134, 133, 136, 135, 137, 146 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 22, 23, 24, 25, 26, 6, 7, 8, 9, 10, 13, 11, 12, 3, 0, 14, 2, 15, 16, 17, 18, 19, 1, 20, 21, 27, 28, 29, 30, 31 }
  uselistorder i32* %r3.global-to-local, {}
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 34, 21, 42, 43, 44, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 45, 46, 47, 48, 49, 52, 50, 51, 53, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 90, 36, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 58, 54, 55, 56, 57, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 99, 100, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 36, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 28, 29, 30, 16, 17, 18, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 32, 34, 35, 37, 38, 39, 41, 42, 40, 44, 43, 45 }
  uselistorder i32* %r27.global-to-local, { 28, 1, 0, 2, 7, 4, 8, 9, 3, 5, 23, 10, 12, 11, 13, 14, 15, 16, 6, 17, 18, 19, 20, 21, 22, 25, 24, 26, 29, 27, 30, 31 }
  uselistorder i32* %r26.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 9, 8, 12, 10, 11, 13, 14, 18, 15, 19, 16, 20, 17, 21, 23, 24, 22, 25, 26 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 13, 12, 15, 14, 16, 11, 17 }
  uselistorder i32* %r24.global-to-local, { 35, 3, 5, 6, 7, 8, 0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39 }
  uselistorder i32* %r23.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 16, 17, 0, 14, 15, 18, 19, 21, 22, 20, 23 }
  uselistorder i32* %r22.global-to-local, { 45, 44, 46, 47, 48, 1, 49, 53, 50, 52, 51, 0, 54, 3, 2, 6, 4, 5, 7, 9, 8, 11, 10, 13, 12, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 55, 57, 56, 58 }
  uselistorder i32* %r20.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32 }
  uselistorder i32* %r19.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20 }
  uselistorder i32* %r14.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 51, 52, 38, 37, 39, 40, 41, 42, 1, 43, 0, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 48, 49, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 115, 116, 78, 80, 79, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 106, 107, 108, 109, 110, 111, 112, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 1, 4, 5, 7, 6, 0, 8, 9, 10 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 4, 3, 5, 8, 9, 10, 11, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 129, 130, 131, 97, 98, 103, 102, 99, 100, 101, 104, 105, 106, 107, 108, 109, 116, 117, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 4, 3, 5, 8, 9, 10, 11, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 129, 130, 131, 97, 98, 103, 102, 99, 100, 101, 104, 105, 106, 107, 108, 109, 116, 117, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 4, 3, 5, 8, 9, 10, 11, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 131, 132, 133, 99, 100, 105, 104, 101, 102, 103, 106, 107, 108, 109, 110, 111, 118, 119, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268441368, { 1, 0 }
  uselistorder i8 34, { 3, 4, 5, 0, 1, 2, 6, 7, 8 }
  uselistorder i32 1579, { 0, 1, 2, 3, 5, 6, 7, 8, 9, 4, 10, 11, 12, 13 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1000c66c.40 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000c668.39 to i32), { 1, 0, 2 }
  uselistorder i32 931, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009670, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 10240, { 2, 0, 1, 3, 4 }
  uselistorder i8 7, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1000c63c.24 to i32), { 0, 8, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11 }
  uselistorder i32 3140, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 50, { 0, 2, 1, 3 }
  uselistorder i32 49, { 0, 2, 1, 3 }
  uselistorder i32 43, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000c648.7 to i32), { 1, 2, 0 }
  uselistorder i32 268435604, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001a9c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100019dc, { 1, 0 }
  uselistorder label %dec_label_pc_100019ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000189c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001810, { 1, 0 }
  uselistorder label %dec_label_pc_10001758, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001708, { 1, 0 }
  uselistorder label %dec_label_pc_100016e4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10001680, { 1, 0 }
  uselistorder label %dec_label_pc_10001658, { 1, 0 }
  uselistorder label %dec_label_pc_10001600, { 1, 0 }
  uselistorder label %dec_label_pc_10001558, { 1, 0 }
  uselistorder label %dec_label_pc_100014d0, { 1, 0 }
  uselistorder label %dec_label_pc_10001364, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000133c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100011f0, { 1, 0 }
  uselistorder label %dec_label_pc_100011e4, { 2, 3, 1, 7, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_100011a4, { 1, 0 }
  uselistorder label %dec_label_pc_100010f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100010d0, { 1, 0 }
  uselistorder label %dec_label_pc_100010a0, { 1, 0 }
  uselistorder label %dec_label_pc_10001064, { 1, 0 }
  uselistorder label %dec_label_pc_10001024, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10000fbc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10000f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000f14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10000e40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10000d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000be8, { 1, 0 }
  uselistorder label %dec_label_pc_10000bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000b50, { 1, 0 }
  uselistorder label %dec_label_pc_10000b18, { 1, 0 }
  uselistorder label %dec_label_pc_100008b0, { 1, 0 }
  uselistorder label %dec_label_pc_10000824, { 7, 8, 2, 9, 0, 3, 10, 11, 12, 13, 14, 1, 15, 6, 4, 5 }
  uselistorder label %dec_label_pc_100007ec, { 1, 0 }
  uselistorder label %dec_label_pc_100006c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000069c, { 1, 0 }
  uselistorder label %dec_label_pc_10000678, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005c4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_100005c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100005b4, { 1, 0 }
  uselistorder label %dec_label_pc_10000578, { 1, 0 }
  uselistorder label %dec_label_pc_10000530, { 1, 0 }
  uselistorder label %dec_label_pc_10000430, { 1, 0 }
}

define i32 @function_10001d50(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001d50:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10001d5c = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10001d5c)
  %v1_10001d60 = add i32 %tmp, 4
  %v2_10001d60 = inttoptr i32 %v1_10001d60 to i8*
  %v3_10001d60 = load i8, i8* %v2_10001d60, align 1
  %v4_10001d60 = zext i8 %v3_10001d60 to i32
  %v4_10001d68 = icmp eq i32 %v4_10001d60, %arg3
  br i1 %v4_10001d68, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84.preheader

dec_label_pc_10001d84.preheader:                  ; preds = %dec_label_pc_10001d50
  %v0_10001d88.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001d84

dec_label_pc_10001d74:                            ; preds = %dec_label_pc_10001d84
  %v1_10001d74 = add i32 %v0_10001d74.in, 12
  %v2_10001d74 = inttoptr i32 %v1_10001d74 to i8*
  %v3_10001d74 = load i8, i8* %v2_10001d74, align 1
  %v4_10001d74 = zext i8 %v3_10001d74 to i32
  %v4_10001d7c = icmp eq i32 %v4_10001d74, %arg3
  br i1 %v4_10001d7c, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84

dec_label_pc_10001d84:                            ; preds = %dec_label_pc_10001d84.preheader, %dec_label_pc_10001d74
  %v0_10001d88 = phi i32 [ %v0_10001d88.pre, %dec_label_pc_10001d84.preheader ], [ %v1_10001d88, %dec_label_pc_10001d74 ]
  %v0_10001d74.in = phi i32 [ %tmp, %dec_label_pc_10001d84.preheader ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v0_10001d74 = add i32 %v0_10001d74.in, 8
  %v1_10001d88 = add i32 %v0_10001d88, -1
  store i32 %v1_10001d88, i32* %ctr.global-to-local, align 4
  %v2_10001d88 = icmp eq i32 %v1_10001d88, 0
  br i1 %v2_10001d88, label %dec_label_pc_10001d8c, label %dec_label_pc_10001d74

dec_label_pc_10001d8c:                            ; preds = %dec_label_pc_10001d84
  ret i32 %arg4

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d74, %dec_label_pc_10001d50
  %v0_10001d90 = phi i32 [ %tmp, %dec_label_pc_10001d50 ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v1_10001d90 = inttoptr i32 %v0_10001d90 to i32*
  %v2_10001d90 = load i32, i32* %v1_10001d90, align 4
  ret i32 %v2_10001d90

; uselistorder directives
  uselistorder i32 %v1_10001d88, { 2, 1, 0 }
  uselistorder i32 %v0_10001d74.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001d84, { 1, 0 }
}

define i32 @function_10001d98(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10001d98:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10001ddc, label %dec_label_pc_10001db0

dec_label_pc_10001db0:                            ; preds = %dec_label_pc_10001d98
  %v0_10001db0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10001db0 = add i32 %v0_10001db0, 4
  %v2_10001db0 = inttoptr i32 %v1_10001db0 to i8*
  %v3_10001db0 = load i8, i8* %v2_10001db0, align 1
  %v4_10001db0 = zext i8 %v3_10001db0 to i32
  %v4_10001db8 = icmp eq i32 %v4_10001db0, %arg3
  br i1 %v4_10001db8, label %dec_label_pc_10001df0, label %dec_label_pc_10001dd4

dec_label_pc_10001dc4:                            ; preds = %dec_label_pc_10001dd4
  %v1_10001dc4 = add i32 %v0_10001dc4.in, 12
  %v2_10001dc4 = inttoptr i32 %v1_10001dc4 to i8*
  %v3_10001dc4 = load i8, i8* %v2_10001dc4, align 1
  %v4_10001dc4 = zext i8 %v3_10001dc4 to i32
  %v4_10001dcc = icmp eq i32 %v4_10001dc4, %arg3
  br i1 %v4_10001dcc, label %dec_label_pc_10001df0, label %dec_label_pc_10001dd4

dec_label_pc_10001dd4:                            ; preds = %dec_label_pc_10001db0, %dec_label_pc_10001dc4
  %v0_10001dd8 = phi i32 [ %v1_10001dd8, %dec_label_pc_10001dc4 ], [ %arg1, %dec_label_pc_10001db0 ]
  %v0_10001dc4.in = phi i32 [ %v0_10001dc4, %dec_label_pc_10001dc4 ], [ %v0_10001db0, %dec_label_pc_10001db0 ]
  %v0_10001dc4 = add i32 %v0_10001dc4.in, 8
  store i32 %v0_10001dc4, i32* %r4.global-to-local, align 4
  %v1_10001dd8 = add i32 %v0_10001dd8, -1
  %v2_10001dd8 = icmp eq i32 %v1_10001dd8, 0
  br i1 %v2_10001dd8, label %dec_label_pc_10001ddc, label %dec_label_pc_10001dc4

dec_label_pc_10001ddc:                            ; preds = %dec_label_pc_10001dd4, %dec_label_pc_10001df0, %dec_label_pc_10001d98
  ret i32 %arg4

dec_label_pc_10001df0:                            ; preds = %dec_label_pc_10001dc4, %dec_label_pc_10001db0
  %v0_10001df0 = phi i32 [ %v0_10001db0, %dec_label_pc_10001db0 ], [ %v0_10001dc4, %dec_label_pc_10001dc4 ]
  %v1_10001df0 = inttoptr i32 %v0_10001df0 to i32*
  %v2_10001df0 = load i32, i32* %v1_10001df0, align 4
  %v3_10001df4 = icmp eq i32 %v2_10001df0, 0
  br i1 %v3_10001df4, label %dec_label_pc_10001ddc, label %dec_label_pc_10001dfc

dec_label_pc_10001dfc:                            ; preds = %dec_label_pc_10001df0
  store i32 268443136, i32* @lr, align 4
  %v1_10001dfc = call i32 @function_1000a854(i32 %v2_10001df0)
  ret i32 %v1_10001dfc

; uselistorder directives
  uselistorder i32 %v1_10001dd8, { 1, 0 }
  uselistorder i32 %v0_10001dc4, { 1, 0, 2 }
  uselistorder i32 %v0_10001dc4.in, { 1, 0 }
  uselistorder i32 %v0_10001db0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001ddc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001dd4, { 1, 0 }
}

define i32 @function_10001e18(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001e18:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e30

dec_label_pc_10001e30:                            ; preds = %dec_label_pc_10001e18
  %v0_10001e30 = load i32, i32* %r4.global-to-local, align 4
  %v1_10001e30 = add i32 %v0_10001e30, 4
  %v2_10001e30 = inttoptr i32 %v1_10001e30 to i8*
  %v3_10001e30 = load i8, i8* %v2_10001e30, align 1
  %v4_10001e30 = zext i8 %v3_10001e30 to i32
  %v4_10001e38 = icmp eq i32 %v4_10001e30, %arg3
  br i1 %v4_10001e38, label %dec_label_pc_10001e70, label %dec_label_pc_10001e54

dec_label_pc_10001e44:                            ; preds = %dec_label_pc_10001e54
  %v1_10001e44 = add i32 %v0_10001e44.in, 12
  %v2_10001e44 = inttoptr i32 %v1_10001e44 to i8*
  %v3_10001e44 = load i8, i8* %v2_10001e44, align 1
  %v4_10001e44 = zext i8 %v3_10001e44 to i32
  %v4_10001e4c = icmp eq i32 %v4_10001e44, %arg3
  br i1 %v4_10001e4c, label %dec_label_pc_10001e70, label %dec_label_pc_10001e54

dec_label_pc_10001e54:                            ; preds = %dec_label_pc_10001e30, %dec_label_pc_10001e44
  %v0_10001e58 = phi i32 [ %v1_10001e58, %dec_label_pc_10001e44 ], [ %arg1, %dec_label_pc_10001e30 ]
  %v0_10001e44.in = phi i32 [ %v0_10001e44, %dec_label_pc_10001e44 ], [ %v0_10001e30, %dec_label_pc_10001e30 ]
  %v0_10001e44 = add i32 %v0_10001e44.in, 8
  store i32 %v0_10001e44, i32* %r4.global-to-local, align 4
  %v1_10001e58 = add i32 %v0_10001e58, -1
  %v2_10001e58 = icmp eq i32 %v1_10001e58, 0
  br i1 %v2_10001e58, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e44

dec_label_pc_10001e5c:                            ; preds = %dec_label_pc_10001e54, %dec_label_pc_10001e18, %dec_label_pc_10001e70
  ret i32 %arg4

dec_label_pc_10001e70:                            ; preds = %dec_label_pc_10001e44, %dec_label_pc_10001e30
  %v0_10001e70 = phi i32 [ %v0_10001e30, %dec_label_pc_10001e30 ], [ %v0_10001e44, %dec_label_pc_10001e44 ]
  %v1_10001e70 = inttoptr i32 %v0_10001e70 to i32*
  %v2_10001e70 = load i32, i32* %v1_10001e70, align 4
  store i32 %v2_10001e70, i32* @r3, align 4
  %v3_10001e74 = icmp eq i32 %v2_10001e70, 0
  br i1 %v3_10001e74, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e7c

dec_label_pc_10001e7c:                            ; preds = %dec_label_pc_10001e70
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268443268, i32* @lr, align 4
  %v2_10001e80 = call i32 @function_100096cc(i32 %v2_10001e70, i32 10)
  ret i32 %v2_10001e80

; uselistorder directives
  uselistorder i32 %v1_10001e58, { 1, 0 }
  uselistorder i32 %v0_10001e44, { 1, 0, 2 }
  uselistorder i32 %v0_10001e44.in, { 1, 0 }
  uselistorder i32 %v0_10001e30, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10001e5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001e54, { 1, 0 }
}

define i32 @function_10001e9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10001e9c:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001e9c = call i32 @__asm_mfcr()
  store i32 %v0_10001e9c, i32* %r3.global-to-local, align 4
  %v0_10001eac = load i32, i32* @r30, align 4
  %v0_10001edc = load i32, i32* @r28, align 4
  %v0_10001ee0 = load i32, i32* @r29, align 4
  %tmp30 = icmp ult i32 %arg2, 4
  br i1 %tmp30, label %dec_label_pc_10001efc, label %dec_label_pc_10001ef0

dec_label_pc_10001ef0:                            ; preds = %dec_label_pc_10001e9c
  %v3_10001ef0 = icmp eq i32 %arg2, 4
  %v1_10001ef4 = inttoptr i32 %v0_10001e9c to i32*
  %v2_10001ef4 = load i32, i32* %v1_10001ef4, align 4
  store i32 %v2_10001ef4, i32* %r25.global-to-local, align 4
  br i1 %v3_10001ef0, label %dec_label_pc_10001efc, label %dec_label_pc_10001f44

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ef0, %dec_label_pc_100020e0, %dec_label_pc_10001f5c, %dec_label_pc_10001f50, %dec_label_pc_10001f44, %dec_label_pc_10001e9c, %dec_label_pc_10002114
  %v1_10001f10 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10001e9c)
  store i32 %v0_10001edc, i32* @r28, align 4
  store i32 %v0_10001ee0, i32* @r29, align 4
  store i32 %v0_10001eac, i32* @r30, align 4
  %v0_10001f40 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f40

dec_label_pc_10001f44:                            ; preds = %dec_label_pc_10001ef0
  %v3_10001f44 = icmp eq i32 %arg2, 5
  %v1_10001f48 = add i32 %v0_10001e9c, 4
  %v2_10001f48 = inttoptr i32 %v1_10001f48 to i8*
  %v3_10001f48 = load i8, i8* %v2_10001f48, align 1
  %v4_10001f48 = zext i8 %v3_10001f48 to i32
  store i32 %v4_10001f48, i32* %r22.global-to-local, align 4
  br i1 %v3_10001f44, label %dec_label_pc_10001efc, label %dec_label_pc_10001f50

dec_label_pc_10001f50:                            ; preds = %dec_label_pc_10001f44
  %v1_10001f50 = add i32 %v0_10001e9c, 5
  %v2_10001f50 = inttoptr i32 %v1_10001f50 to i8*
  %v3_10001f50 = load i8, i8* %v2_10001f50, align 1
  %v4_10001f50 = zext i8 %v3_10001f50 to i32
  store i32 %v4_10001f50, i32* %r26.global-to-local, align 4
  %v3_10001f54 = icmp eq i8 %v3_10001f50, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001f54, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001f54, label %dec_label_pc_10001efc, label %dec_label_pc_10001f5c

dec_label_pc_10001f5c:                            ; preds = %dec_label_pc_10001f50
  %v1_10001f5c = mul nuw nsw i32 %v4_10001f50, 5
  store i32 %v1_10001f5c, i32* %r27.global-to-local, align 4
  %v1_10001f60 = add i32 %arg2, -6
  store i32 %v1_10001f60, i32* @r28, align 4
  %v2_10001f64 = icmp ult i32 %v1_10001f60, %v1_10001f5c
  br i1 %v2_10001f64, label %dec_label_pc_10001efc, label %dec_label_pc_10001f6c

dec_label_pc_10001f6c:                            ; preds = %dec_label_pc_10001f5c
  store i32 %v4_10001f50, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r4.global-to-local, align 4
  store i32 268443512, i32* @lr, align 4
  %v2_10001f74 = call i32 @function_1000ae4c(i32 %v4_10001f50, i32 24)
  store i32 %v2_10001f74, i32* %r3.global-to-local, align 4
  %v0_10001f78 = load i32, i32* @r31, align 4
  %v1_10001f78 = add i32 %v0_10001f78, 6
  store i32 %v1_10001f78, i32* @r29, align 4
  store i32 %v2_10001f74, i32* %r20.global-to-local, align 4
  %v0_10001f80 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001f80 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001f80 = or i1 %v0_10001f80, %v1_10001f80
  br i1 %v2_10001f80, label %dec_label_pc_10001fdcthread-pre-split, label %dec_label_pc_10001f84

dec_label_pc_10001f84:                            ; preds = %dec_label_pc_10001f6c
  %v1_10001f84 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v2_10001f74, i32* %r11.global-to-local, align 4
  %tmp35 = mul i32 %v1_10001f84, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp35, i32* %r9.global-to-local, align 4
  store i32 %tmp35, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001fac

dec_label_pc_10001fac:                            ; preds = %dec_label_pc_10001fac.dec_label_pc_10001fac_crit_edge, %dec_label_pc_10001f84
  %v2_10001fb8 = phi i32 [ %v1_10001fc8, %dec_label_pc_10001fac.dec_label_pc_10001fac_crit_edge ], [ %v2_10001f74, %dec_label_pc_10001f84 ]
  %v0_10001fb4 = phi i32 [ %v0_10001fac.pre, %dec_label_pc_10001fac.dec_label_pc_10001fac_crit_edge ], [ %v1_10001f78, %dec_label_pc_10001f84 ]
  %v1_10001fac = add i32 %v0_10001fb4, 4
  %v2_10001fac = inttoptr i32 %v1_10001fac to i8*
  %v3_10001fac = load i8, i8* %v2_10001fac, align 1
  %v1_10001fb0 = inttoptr i32 %v0_10001fb4 to i32*
  %v2_10001fb0 = load i32, i32* %v1_10001fb0, align 4
  store i32 %v2_10001fb0, i32* %r9.global-to-local, align 4
  %v1_10001fb4 = add i32 %v0_10001fb4, 5
  store i32 %v1_10001fb4, i32* @r29, align 4
  %v3_10001fb8 = add i32 %v2_10001fb8, 20
  %v4_10001fb8 = inttoptr i32 %v3_10001fb8 to i8*
  store i8 %v3_10001fac, i8* %v4_10001fb8, align 1
  %v0_10001fbc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fbc = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fbc = add i32 %v1_10001fbc, 4
  %v3_10001fbc = inttoptr i32 %v2_10001fbc to i32*
  store i32 %v0_10001fbc, i32* %v3_10001fbc, align 4
  %v0_10001fc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fc0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fc0 = add i32 %v1_10001fc0, 16
  %v3_10001fc0 = inttoptr i32 %v2_10001fc0 to i32*
  store i32 %v0_10001fc0, i32* %v3_10001fc0, align 4
  %v0_10001fc4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001fc4 = trunc i32 %v0_10001fc4 to i16
  %v2_10001fc4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fc4 = inttoptr i32 %v2_10001fc4 to i16*
  store i16 %v1_10001fc4, i16* %v3_10001fc4, align 2
  %v0_10001fc8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001fc8 = add i32 %v0_10001fc8, 24
  store i32 %v1_10001fc8, i32* %r11.global-to-local, align 4
  %v0_10001fcc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10001fcc = add i32 %v0_10001fcc, -1
  store i32 %v1_10001fcc, i32* %ctr.global-to-local, align 4
  %v2_10001fcc = icmp eq i32 %v1_10001fcc, 0
  br i1 %v2_10001fcc, label %dec_label_pc_10001fd0, label %dec_label_pc_10001fac.dec_label_pc_10001fac_crit_edge

dec_label_pc_10001fac.dec_label_pc_10001fac_crit_edge: ; preds = %dec_label_pc_10001fac
  %v0_10001fac.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001fac

dec_label_pc_10001fd0:                            ; preds = %dec_label_pc_10001fac
  %v0_10001fd0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001fd0 = mul i32 %v0_10001fd0, -5
  %v0_10001fd4 = load i32, i32* @r30, align 4
  %v2_10001fd4 = add i32 %v0_10001fd4, %v1_10001fd0
  store i32 %v2_10001fd4, i32* %r9.global-to-local, align 4
  %v1_10001fd8 = add i32 %v2_10001fd4, -6
  store i32 %v1_10001fd8, i32* @r28, align 4
  br label %dec_label_pc_10001fdc

dec_label_pc_10001fdcthread-pre-split:            ; preds = %dec_label_pc_10001f6c
  %v0_10001fdc.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_10001fdc

dec_label_pc_10001fdc:                            ; preds = %dec_label_pc_10001fdcthread-pre-split, %dec_label_pc_10001fd0
  %v0_10001fdc = phi i32 [ %v0_10001fdc.pr, %dec_label_pc_10001fdcthread-pre-split ], [ %v1_10001fd8, %dec_label_pc_10001fd0 ]
  %v3_10001fdc = icmp eq i32 %v0_10001fdc, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_10001fdc, label %dec_label_pc_100020d0, label %dec_label_pc_10001fe8

dec_label_pc_10001fe8:                            ; preds = %dec_label_pc_10001fdc
  %v0_10001fe8 = load i32, i32* @r29, align 4
  %v1_10001fe8 = inttoptr i32 %v0_10001fe8 to i8*
  %v2_10001fe8 = load i8, i8* %v1_10001fe8, align 1
  %v3_10001fe8 = zext i8 %v2_10001fe8 to i32
  store i32 %v3_10001fe8, i32* @r23, align 4
  %v3_10001fec = icmp eq i8 %v2_10001fe8, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001fec, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001fec, label %dec_label_pc_100020b8, label %dec_label_pc_10001ff4

dec_label_pc_10001ff4:                            ; preds = %dec_label_pc_10001fe8
  store i32 %v3_10001fe8, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 268443648, i32* @lr, align 4
  %v2_10001ffc = call i32 @function_1000ae4c(i32 %v3_10001fe8, i32 8)
  store i32 %v2_10001ffc, i32* %r3.global-to-local, align 4
  store i32 %v2_10001ffc, i32* %r21.global-to-local, align 4
  %v0_10002004 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002004 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002004 = or i1 %v0_10002004, %v1_10002004
  br i1 %v2_10002004, label %dec_label_pc_100020b8, label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_10001ff4
  %v0_10002008 = load i32, i32* @r28, align 4
  %v1_10002008 = add i32 %v0_10002008, -1
  %v4_10002008 = icmp eq i32 %v1_10002008, 0
  store i32 %v1_10002008, i32* %ctr.global-to-local, align 4
  br i1 %v4_10002008, label %dec_label_pc_100020d0, label %dec_label_pc_10002014

dec_label_pc_10002014:                            ; preds = %dec_label_pc_10002008
  %v0_10002014 = load i32, i32* @r29, align 4
  %v1_10002014 = add i32 %v0_10002014, 1
  %v2_10002014 = inttoptr i32 %v1_10002014 to i8*
  %v3_10002014 = load i8, i8* %v2_10002014, align 1
  store i32 %v1_10002014, i32* %r9.global-to-local, align 4
  %v3_1000201c = add i32 %v2_10001ffc, 4
  %v4_1000201c = inttoptr i32 %v3_1000201c to i8*
  store i8 %v3_10002014, i8* %v4_1000201c, align 1
  %v0_10002020 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002020 = add i32 %v0_10002020, -1
  store i32 %v1_10002020, i32* %ctr.global-to-local, align 4
  %v2_10002020 = icmp eq i32 %v1_10002020, 0
  br i1 %v2_10002020, label %dec_label_pc_100020d0, label %dec_label_pc_10002024

dec_label_pc_10002024:                            ; preds = %dec_label_pc_10002014
  store i32 %v1_10002020, i32* %r11.global-to-local, align 4
  %v0_10002028 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002028 = add i32 %v0_10002028, 1
  %v2_10002028 = inttoptr i32 %v1_10002028 to i8*
  %v3_10002028 = load i8, i8* %v2_10002028, align 1
  %v4_10002028 = zext i8 %v3_10002028 to i32
  store i32 %v1_10002028, i32* %r4.global-to-local, align 4
  %v1_10002030 = add i32 %v0_10002020, -2
  store i32 %v1_10002030, i32* @r28, align 4
  %v2_10002034 = icmp slt i32 %v1_10002030, %v4_10002028
  br i1 %v2_10002034, label %dec_label_pc_100020d0, label %dec_label_pc_1000203c

dec_label_pc_1000203c:                            ; preds = %dec_label_pc_10002024
  %v1_1000203c = add i32 %v0_10002028, 2
  store i32 %v1_1000203c, i32* @r29, align 4
  %v0_10002040 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002040 = add i32 %v0_10002040, 8
  store i32 %v1_10002040, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10002090

dec_label_pc_10002050:                            ; preds = %dec_label_pc_10002090
  %v0_10002050 = load i32, i32* @r31, align 4
  %v1_10002050 = load i32, i32* @r28, align 4
  %v2_10002050 = sub i32 %v1_10002050, %v0_10002050
  store i32 %v2_10002050, i32* %r9.global-to-local, align 4
  %v5_10002050 = icmp eq i32 %v2_10002050, 0
  br i1 %v5_10002050, label %dec_label_pc_100020d0, label %dec_label_pc_10002058

dec_label_pc_10002058:                            ; preds = %dec_label_pc_10002050
  %v1_10002058 = load i32, i32* @r29, align 4
  %v2_10002058 = add i32 %v1_10002058, %v0_10002050
  %v3_10002058 = inttoptr i32 %v2_10002058 to i8*
  %v4_10002058 = load i8, i8* %v3_10002058, align 1
  %v0_1000205c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v2_10002058, i32* %r4.global-to-local, align 4
  %v3_10002064 = add i32 %v0_1000205c, 4
  %v4_10002064 = inttoptr i32 %v3_10002064 to i8*
  store i8 %v4_10002058, i8* %v4_10002064, align 1
  %v0_10002068 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002068 = add i32 %v0_10002068, -1
  %v4_10002068 = icmp eq i32 %v1_10002068, 0
  br i1 %v4_10002068, label %dec_label_pc_100020d0, label %dec_label_pc_10002070

dec_label_pc_10002070:                            ; preds = %dec_label_pc_10002058
  %v0_10002070 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002070 = add i32 %v0_10002070, 1
  %v2_10002070 = inttoptr i32 %v1_10002070 to i8*
  %v3_10002070 = load i8, i8* %v2_10002070, align 1
  %v4_10002070 = zext i8 %v3_10002070 to i32
  store i32 %v1_10002068, i32* %r9.global-to-local, align 4
  %v1_10002078 = add i32 %v0_10002068, -2
  store i32 %v1_10002078, i32* @r28, align 4
  store i32 %v1_10002070, i32* %r4.global-to-local, align 4
  %v2_10002080 = icmp slt i32 %v1_10002078, %v4_10002070
  %v0_10002084 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002084 = add i32 %v0_10002084, 8
  store i32 %v1_10002084, i32* %r24.global-to-local, align 4
  br i1 %v2_10002080, label %dec_label_pc_100020d0, label %dec_label_pc_1000208c

dec_label_pc_1000208c:                            ; preds = %dec_label_pc_10002070
  %v1_1000208c = add i32 %v0_10002070, 2
  store i32 %v1_1000208c, i32* @r29, align 4
  br label %dec_label_pc_10002090

dec_label_pc_10002090:                            ; preds = %dec_label_pc_1000203c, %dec_label_pc_1000208c
  %v0_10002094 = phi i32 [ %v4_10002028, %dec_label_pc_1000203c ], [ %v4_10002070, %dec_label_pc_1000208c ]
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_10002094 = add nuw nsw i32 %v0_10002094, 1
  store i32 %v1_10002094, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000209c.56 to i32), i32* @lr, align 4
  %v2_10002098 = call i32 @function_1000ae4c(i32 %v1_10002094, i32 1)
  store i32 %v2_10002098, i32* %r3.global-to-local, align 4
  %v0_1000209c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000209c = add i32 %v0_1000209c, 1
  store i32 %v1_1000209c, i32* %r27.global-to-local, align 4
  %v1_100020a0 = load i32, i32* @r30, align 4
  %v2_100020a0 = inttoptr i32 %v1_100020a0 to i32*
  store i32 %v2_10002098, i32* %v2_100020a0, align 4
  %v0_100020a4 = load i32, i32* @r29, align 4
  store i32 %v0_100020a4, i32* %r4.global-to-local, align 4
  %v0_100020a8 = load i32, i32* @r31, align 4
  store i32 268443824, i32* @lr, align 4
  %v3_100020ac = call i32 @function_10009628(i32 %v2_10002098, i32 %v0_100020a4, i32 %v0_100020a8)
  store i32 %v3_100020ac, i32* %r3.global-to-local, align 4
  %v0_100020b0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100020b0 = load i32, i32* @r23, align 4
  %v4_100020b0 = icmp eq i32 %v0_100020b0, %v1_100020b0
  br i1 %v4_100020b0, label %dec_label_pc_100020b8, label %dec_label_pc_10002050

dec_label_pc_100020b8:                            ; preds = %dec_label_pc_10002090, %dec_label_pc_10001ff4, %dec_label_pc_10001fe8
  %v0_100020b8 = call i32 @function_1000a4bc()
  store i32 %v0_100020b8, i32* %r3.global-to-local, align 4
  %v2_100020c0 = inttoptr i32 %v0_100020b8 to i32*
  store i32 0, i32* %v2_100020c0, align 4
  store i32 268443848, i32* @lr, align 4
  %v0_100020c4 = call i32 @function_10009e30()
  store i32 %v0_100020c4, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100020c4, 1
  br i1 %tmp32, label %dec_label_pc_10002120, label %dec_label_pc_100020d0

dec_label_pc_100020d0:                            ; preds = %dec_label_pc_10002070, %dec_label_pc_10002058, %dec_label_pc_10002050, %dec_label_pc_10002120, %dec_label_pc_100020b8, %dec_label_pc_10002024, %dec_label_pc_10002014, %dec_label_pc_10002008, %dec_label_pc_10001fdc
  %v0_100020d0 = load i32, i32* %r20.global-to-local, align 4
  %v3_100020d0 = icmp eq i32 %v0_100020d0, 0
  br i1 %v3_100020d0, label %dec_label_pc_100020e0, label %dec_label_pc_100020d8

dec_label_pc_100020d8:                            ; preds = %dec_label_pc_100020d0
  store i32 %v0_100020d0, i32* @r3, align 4
  store i32 268443872, i32* @lr, align 4
  %v0_100020dc = call i32 @function_1000aebc()
  store i32 %v0_100020dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100020e0

dec_label_pc_100020e0:                            ; preds = %dec_label_pc_100020d0, %dec_label_pc_100020d8
  %v0_100020e0 = load i32, i32* %r21.global-to-local, align 4
  %v3_100020e0 = icmp eq i32 %v0_100020e0, 0
  br i1 %v3_100020e0, label %dec_label_pc_10001efc, label %dec_label_pc_100020e8

dec_label_pc_100020e8:                            ; preds = %dec_label_pc_100020e0
  %v0_100020e8 = load i32, i32* @r23, align 4
  %tmp33 = icmp slt i32 %v0_100020e8, 1
  br i1 %tmp33, label %dec_label_pc_10002114, label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_100020e8
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100020f4

dec_label_pc_100020f4:                            ; preds = %dec_label_pc_10002108, %dec_label_pc_100020f0
  %v0_1000210c12 = phi i32 [ %v0_100020e8, %dec_label_pc_100020f0 ], [ %v0_1000210c, %dec_label_pc_10002108 ]
  %v0_100020f8 = phi i32 [ %v0_100020e0, %dec_label_pc_100020f0 ], [ %v0_10002114.pre, %dec_label_pc_10002108 ]
  %v0_100020f4 = phi i32 [ 0, %dec_label_pc_100020f0 ], [ %v1_10002108, %dec_label_pc_10002108 ]
  %v1_100020f4 = mul i32 %v0_100020f4, 8
  %v2_100020f8 = add i32 %v1_100020f4, %v0_100020f8
  %v3_100020f8 = inttoptr i32 %v2_100020f8 to i32*
  %v4_100020f8 = load i32, i32* %v3_100020f8, align 4
  store i32 %v4_100020f8, i32* @r3, align 4
  %v3_100020fc = icmp eq i32 %v4_100020f8, 0
  br i1 %v3_100020fc, label %dec_label_pc_10002108, label %dec_label_pc_10002104

dec_label_pc_10002104:                            ; preds = %dec_label_pc_100020f4
  store i32 268443912, i32* @lr, align 4
  %v0_10002104 = call i32 @function_1000aebc()
  store i32 %v0_10002104, i32* %r3.global-to-local, align 4
  %v0_10002108.pre = load i32, i32* @r31, align 4
  %v0_1000210c.pre = load i32, i32* @r23, align 4
  %v0_10002114.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10002108

dec_label_pc_10002108:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10002104
  %v0_10002114.pre = phi i32 [ %v0_100020f8, %dec_label_pc_100020f4 ], [ %v0_10002114.pre.pre, %dec_label_pc_10002104 ]
  %v0_1000210c = phi i32 [ %v0_1000210c12, %dec_label_pc_100020f4 ], [ %v0_1000210c.pre, %dec_label_pc_10002104 ]
  %v0_10002108 = phi i32 [ %v0_100020f4, %dec_label_pc_100020f4 ], [ %v0_10002108.pre, %dec_label_pc_10002104 ]
  %v1_10002108 = add i32 %v0_10002108, 1
  store i32 %v1_10002108, i32* @r31, align 4
  %v4_1000210c = icmp eq i32 %v0_1000210c, %v1_10002108
  br i1 %v4_1000210c, label %dec_label_pc_10002114, label %dec_label_pc_100020f4

dec_label_pc_10002114:                            ; preds = %dec_label_pc_10002108, %dec_label_pc_100020e8
  %v0_10002114 = phi i32 [ %v0_100020e0, %dec_label_pc_100020e8 ], [ %v0_10002114.pre, %dec_label_pc_10002108 ]
  store i32 %v0_10002114, i32* @r3, align 4
  store i32 268443932, i32* @lr, align 4
  %v0_10002118 = call i32 @function_1000aebc()
  store i32 %v0_10002118, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001efc

dec_label_pc_10002120:                            ; preds = %dec_label_pc_100020b8
  %v3_10002120 = icmp eq i32 %v0_100020c4, -1
  br i1 %v3_10002120, label %dec_label_pc_100020d0, label %dec_label_pc_10002128

dec_label_pc_10002128:                            ; preds = %dec_label_pc_10002120
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000212c = load i8, i8* @global_var_1001d234.58, align 1
  %v4_1000212c = zext i8 %v3_1000212c to i32
  %v3_10002130 = icmp eq i8 %v3_1000212c, 0
  br i1 %v3_10002130, label %dec_label_pc_10002178, label %dec_label_pc_10002138

dec_label_pc_10002138:                            ; preds = %dec_label_pc_10002128
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v4_1000212c, i32* %ctr.global-to-local, align 4
  %v3_10002140 = load i32, i32* @global_var_1001d238.59, align 4
  store i32 %v3_10002140, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10002148 = inttoptr i32 %v3_10002140 to i32*
  %v2_10002148 = load i32, i32* %v1_10002148, align 4
  store i32 %v2_10002148, i32* %r9.global-to-local, align 4
  %v1_1000214c = add i32 %v2_10002148, 4
  %v2_1000214c = inttoptr i32 %v1_1000214c to i8*
  %v3_1000214c = load i8, i8* %v2_1000214c, align 1
  %v4_1000214c = zext i8 %v3_1000214c to i32
  %v1_10002150 = load i32, i32* %r22.global-to-local, align 4
  %v4_10002150 = icmp eq i32 %v4_1000214c, %v1_10002150
  br i1 %v4_10002150, label %dec_label_pc_10002180, label %dec_label_pc_10002170

dec_label_pc_1000215c:                            ; preds = %dec_label_pc_10002170
  %v1_1000215c = mul i32 %v1_10002170, 4
  store i32 %v1_1000215c, i32* %r9.global-to-local, align 4
  %v2_10002160 = add i32 %v1_1000215c, %v3_10002140
  %v3_10002160 = inttoptr i32 %v2_10002160 to i32*
  %v4_10002160 = load i32, i32* %v3_10002160, align 4
  store i32 %v4_10002160, i32* %r9.global-to-local, align 4
  %v1_10002164 = add i32 %v4_10002160, 4
  %v2_10002164 = inttoptr i32 %v1_10002164 to i8*
  %v3_10002164 = load i8, i8* %v2_10002164, align 1
  %v4_10002164 = zext i8 %v3_10002164 to i32
  %v4_10002168 = icmp eq i32 %v4_10002164, %v1_10002150
  br i1 %v4_10002168, label %dec_label_pc_10002180, label %dec_label_pc_10002170

dec_label_pc_10002170:                            ; preds = %dec_label_pc_10002138, %dec_label_pc_1000215c
  %v0_10002174 = phi i32 [ %v1_10002174, %dec_label_pc_1000215c ], [ %v4_1000212c, %dec_label_pc_10002138 ]
  %v0_10002170 = phi i32 [ %v1_10002170, %dec_label_pc_1000215c ], [ 0, %dec_label_pc_10002138 ]
  %v1_10002170 = add i32 %v0_10002170, 1
  store i32 %v1_10002170, i32* %r11.global-to-local, align 4
  %v1_10002174 = add i32 %v0_10002174, -1
  store i32 %v1_10002174, i32* %ctr.global-to-local, align 4
  %v2_10002174 = icmp eq i32 %v1_10002174, 0
  br i1 %v2_10002174, label %dec_label_pc_10002178, label %dec_label_pc_1000215c

dec_label_pc_10002178:                            ; preds = %dec_label_pc_10002170, %dec_label_pc_10002128, %dec_label_pc_10002180
  %v0_1000217c = call i32 @function_1000b39c()
  store i32 %v0_1000217c, i32* %r3.global-to-local, align 4
  %v0_10002180.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002180

dec_label_pc_10002180:                            ; preds = %dec_label_pc_1000215c, %dec_label_pc_10002138, %dec_label_pc_10002178
  %v0_10002180 = phi i32 [ %v2_10002148, %dec_label_pc_10002138 ], [ %v0_10002180.pre, %dec_label_pc_10002178 ], [ %v4_10002160, %dec_label_pc_1000215c ]
  %v1_10002180 = inttoptr i32 %v0_10002180 to i32*
  %v2_10002180 = load i32, i32* %v1_10002180, align 4
  store i32 %v2_10002180, i32* %r9.global-to-local, align 4
  %v0_10002184 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002184, i32* %r3.global-to-local, align 4
  %v0_10002188 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002188, i32* %r4.global-to-local, align 4
  store i32 %v2_10002180, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10002180)
  br label %dec_label_pc_10002178

; uselistorder directives
  uselistorder i32 %v2_10002180, { 1, 0, 2 }
  uselistorder i32 %v1_10002174, { 2, 1, 0 }
  uselistorder i32 %v1_10002170, { 2, 0, 1 }
  uselistorder i32 %v1_1000215c, { 1, 0 }
  uselistorder i32 %v1_10002108, { 1, 2, 0 }
  uselistorder i32 %v0_1000210c, { 1, 0 }
  uselistorder i32 %v0_100020f4, { 1, 0 }
  uselistorder i32 %v4_10002070, { 1, 0 }
  uselistorder i32 %v1_10002020, { 0, 2, 1 }
  uselistorder i32 %v3_10001fe8, { 1, 0, 2 }
  uselistorder i32 %v1_10001fcc, { 1, 0 }
  uselistorder i32 %v1_10001fc8, { 1, 0 }
  uselistorder i32 %v0_10001fb4, { 0, 2, 1 }
  uselistorder i32 %tmp35, { 1, 0 }
  uselistorder i32 %v4_10001f50, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10001e9c, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r4.global-to-local, { 1, 5, 6, 2, 3, 4, 7, 8, 9, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10002180, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002178, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002170, { 1, 0 }
  uselistorder label %dec_label_pc_10002108, { 1, 0 }
  uselistorder label %dec_label_pc_100020e0, { 1, 0 }
  uselistorder label %dec_label_pc_100020d0, { 3, 4, 0, 1, 2, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10002090, { 1, 0 }
  uselistorder label %dec_label_pc_10001efc, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_100021a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100021a4:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_100021a8 = load i32, i32* @lr, align 4
  store i32 %v0_100021a8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_100021c4 = load i32, i32* @r28, align 4
  store i32 268444112, i32* @lr, align 4
  %v2_100021cc = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_100021d0 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100021d0 = zext i8 %v3_100021d0 to i32
  store i32 %v4_100021d0, i32* %r4.global-to-local, align 4
  store i32 %v2_100021cc, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100021e4 = load i32, i32* @global_var_1001d238.59, align 4
  %v2_100021e8 = inttoptr i32 %v2_100021cc to i32*
  store i32 268453720, i32* %v2_100021e8, align 4
  %v0_100021ec = load i32, i32* %r4.global-to-local, align 4
  %v1_100021ec = mul i32 %v0_100021ec, 4
  store i32 %v1_100021ec, i32* %r4.global-to-local, align 4
  %v0_100021f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100021f0 = trunc i32 %v0_100021f0 to i8
  %v2_100021f0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100021f0 = add i32 %v2_100021f0, 4
  %v4_100021f0 = inttoptr i32 %v3_100021f0 to i8*
  store i8 %v1_100021f0, i8* %v4_100021f0, align 1
  %v0_100021f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100021f4 = add i32 %v0_100021f4, 4
  store i32 %v1_100021f4, i32* %r4.global-to-local, align 4
  store i32 268444156, i32* @lr, align 4
  %v3_100021f8 = call i32 @function_1000afbc(i32 %v3_100021e4, i32 %v1_100021f4, i32 268453720)
  %v3_100021fc = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100021fc = zext i8 %v3_100021fc to i32
  store i32 %v3_100021f8, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_1000220c = mul nuw nsw i32 %v4_100021fc, 4
  %v0_10002210 = load i32, i32* @r28, align 4
  %v3_10002210 = add i32 %v1_1000220c, %v3_100021f8
  %v4_10002210 = inttoptr i32 %v3_10002210 to i32*
  store i32 %v0_10002210, i32* %v4_10002210, align 4
  %v0_10002218 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002218, i32* @global_var_1001d238.59, align 4
  %v0_1000221c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000221c = trunc i32 %v0_1000221c to i8
  store i8 %v1_1000221c, i8* @global_var_1001d234.58, align 1
  store i32 268444196, i32* @lr, align 4
  %v2_10002220 = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_10002224 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_10002224 = zext i8 %v3_10002224 to i32
  store i32 %v4_10002224, i32* %r4.global-to-local, align 4
  store i32 %v2_10002220, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10002238 = load i32, i32* @global_var_1001d238.59, align 4
  %v2_1000223c = inttoptr i32 %v2_10002220 to i32*
  store i32 268455024, i32* %v2_1000223c, align 4
  %v0_10002240 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002240 = mul i32 %v0_10002240, 4
  store i32 %v1_10002240, i32* %r4.global-to-local, align 4
  %v0_10002244 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002244 = trunc i32 %v0_10002244 to i8
  %v2_10002244 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002244 = add i32 %v2_10002244, 4
  %v4_10002244 = inttoptr i32 %v3_10002244 to i8*
  store i8 %v1_10002244, i8* %v4_10002244, align 1
  %v0_10002248 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002248 = add i32 %v0_10002248, 4
  store i32 %v1_10002248, i32* %r4.global-to-local, align 4
  store i32 268444240, i32* @lr, align 4
  %v3_1000224c = call i32 @function_1000afbc(i32 %v3_10002238, i32 %v1_10002248, i32 268455024)
  %v3_10002250 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_10002250 = zext i8 %v3_10002250 to i32
  store i32 %v3_1000224c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_10002260 = mul nuw nsw i32 %v4_10002250, 4
  %v0_10002264 = load i32, i32* @r28, align 4
  %v3_10002264 = add i32 %v1_10002260, %v3_1000224c
  %v4_10002264 = inttoptr i32 %v3_10002264 to i32*
  store i32 %v0_10002264, i32* %v4_10002264, align 4
  %v0_1000226c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000226c, i32* @global_var_1001d238.59, align 4
  %v0_10002270 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002270 = trunc i32 %v0_10002270 to i8
  store i8 %v1_10002270, i8* @global_var_1001d234.58, align 1
  store i32 268444280, i32* @lr, align 4
  %v2_10002274 = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_10002278 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_10002278 = zext i8 %v3_10002278 to i32
  store i32 %v4_10002278, i32* %r4.global-to-local, align 4
  store i32 %v2_10002274, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_1000228c = load i32, i32* @global_var_1001d238.59, align 4
  %v2_10002290 = inttoptr i32 %v2_10002274 to i32*
  store i32 268456240, i32* %v2_10002290, align 4
  %v0_10002294 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002294 = mul i32 %v0_10002294, 4
  store i32 %v1_10002294, i32* %r4.global-to-local, align 4
  %v0_10002298 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002298 = trunc i32 %v0_10002298 to i8
  %v2_10002298 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002298 = add i32 %v2_10002298, 4
  %v4_10002298 = inttoptr i32 %v3_10002298 to i8*
  store i8 %v1_10002298, i8* %v4_10002298, align 1
  %v0_1000229c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000229c = add i32 %v0_1000229c, 4
  store i32 %v1_1000229c, i32* %r4.global-to-local, align 4
  store i32 268444324, i32* @lr, align 4
  %v3_100022a0 = call i32 @function_1000afbc(i32 %v3_1000228c, i32 %v1_1000229c, i32 268456240)
  %v3_100022a4 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100022a4 = zext i8 %v3_100022a4 to i32
  store i32 %v3_100022a0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_100022b4 = mul nuw nsw i32 %v4_100022a4, 4
  %v0_100022b8 = load i32, i32* @r28, align 4
  %v3_100022b8 = add i32 %v1_100022b4, %v3_100022a0
  %v4_100022b8 = inttoptr i32 %v3_100022b8 to i32*
  store i32 %v0_100022b8, i32* %v4_100022b8, align 4
  %v0_100022c0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100022c0, i32* @global_var_1001d238.59, align 4
  %v0_100022c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100022c4 = trunc i32 %v0_100022c4 to i8
  store i8 %v1_100022c4, i8* @global_var_1001d234.58, align 1
  store i32 268444364, i32* @lr, align 4
  %v2_100022c8 = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_100022cc = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100022cc = zext i8 %v3_100022cc to i32
  store i32 %v4_100022cc, i32* %r4.global-to-local, align 4
  store i32 %v2_100022c8, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_100022e0 = load i32, i32* @global_var_1001d238.59, align 4
  %v2_100022e4 = inttoptr i32 %v2_100022c8 to i32*
  store i32 268452820, i32* %v2_100022e4, align 4
  %v0_100022e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100022e8 = mul i32 %v0_100022e8, 4
  store i32 %v1_100022e8, i32* %r4.global-to-local, align 4
  %v0_100022ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100022ec = trunc i32 %v0_100022ec to i8
  %v2_100022ec = load i32, i32* %r28.global-to-local, align 4
  %v3_100022ec = add i32 %v2_100022ec, 4
  %v4_100022ec = inttoptr i32 %v3_100022ec to i8*
  store i8 %v1_100022ec, i8* %v4_100022ec, align 1
  %v0_100022f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100022f0 = add i32 %v0_100022f0, 4
  store i32 %v1_100022f0, i32* %r4.global-to-local, align 4
  store i32 268444408, i32* @lr, align 4
  %v3_100022f4 = call i32 @function_1000afbc(i32 %v3_100022e0, i32 %v1_100022f0, i32 268452820)
  %v3_100022f8 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100022f8 = zext i8 %v3_100022f8 to i32
  store i32 %v3_100022f4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_10002308 = mul nuw nsw i32 %v4_100022f8, 4
  %v0_1000230c = load i32, i32* @r28, align 4
  %v3_1000230c = add i32 %v1_10002308, %v3_100022f4
  %v4_1000230c = inttoptr i32 %v3_1000230c to i32*
  store i32 %v0_1000230c, i32* %v4_1000230c, align 4
  %v0_10002314 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002314, i32* @global_var_1001d238.59, align 4
  %v0_10002318 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002318 = trunc i32 %v0_10002318 to i8
  store i8 %v1_10002318, i8* @global_var_1001d234.58, align 1
  store i32 268444448, i32* @lr, align 4
  %v2_1000231c = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_10002320 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_10002320 = zext i8 %v3_10002320 to i32
  store i32 %v4_10002320, i32* %r4.global-to-local, align 4
  store i32 %v2_1000231c, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_10002334 = load i32, i32* @global_var_1001d238.59, align 4
  %v2_10002338 = inttoptr i32 %v2_1000231c to i32*
  store i32 268451300, i32* %v2_10002338, align 4
  %v0_1000233c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000233c = mul i32 %v0_1000233c, 4
  store i32 %v1_1000233c, i32* %r4.global-to-local, align 4
  %v0_10002340 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002340 = trunc i32 %v0_10002340 to i8
  %v2_10002340 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002340 = add i32 %v2_10002340, 4
  %v4_10002340 = inttoptr i32 %v3_10002340 to i8*
  store i8 %v1_10002340, i8* %v4_10002340, align 1
  %v0_10002344 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002344 = add i32 %v0_10002344, 4
  store i32 %v1_10002344, i32* %r4.global-to-local, align 4
  store i32 268444492, i32* @lr, align 4
  %v3_10002348 = call i32 @function_1000afbc(i32 %v3_10002334, i32 %v1_10002344, i32 268451300)
  %v3_1000234c = load i8, i8* @global_var_1001d234.58, align 1
  %v4_1000234c = zext i8 %v3_1000234c to i32
  store i32 %v3_10002348, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_1000235c = mul nuw nsw i32 %v4_1000234c, 4
  %v0_10002360 = load i32, i32* @r28, align 4
  %v3_10002360 = add i32 %v1_1000235c, %v3_10002348
  %v4_10002360 = inttoptr i32 %v3_10002360 to i32*
  store i32 %v0_10002360, i32* %v4_10002360, align 4
  %v0_10002368 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002368, i32* @global_var_1001d238.59, align 4
  %v0_1000236c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000236c = trunc i32 %v0_1000236c to i8
  store i8 %v1_1000236c, i8* @global_var_1001d234.58, align 1
  store i32 268444532, i32* @lr, align 4
  %v2_10002370 = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_10002374 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_10002374 = zext i8 %v3_10002374 to i32
  store i32 %v4_10002374, i32* %r4.global-to-local, align 4
  store i32 %v2_10002370, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10002388 = load i32, i32* @global_var_1001d238.59, align 4
  %v2_1000238c = inttoptr i32 %v2_10002370 to i32*
  store i32 268449744, i32* %v2_1000238c, align 4
  %v0_10002390 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002390 = mul i32 %v0_10002390, 4
  store i32 %v1_10002390, i32* %r4.global-to-local, align 4
  %v0_10002394 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002394 = trunc i32 %v0_10002394 to i8
  %v2_10002394 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002394 = add i32 %v2_10002394, 4
  %v4_10002394 = inttoptr i32 %v3_10002394 to i8*
  store i8 %v1_10002394, i8* %v4_10002394, align 1
  %v0_10002398 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002398 = add i32 %v0_10002398, 4
  store i32 %v1_10002398, i32* %r4.global-to-local, align 4
  store i32 268444576, i32* @lr, align 4
  %v3_1000239c = call i32 @function_1000afbc(i32 %v3_10002388, i32 %v1_10002398, i32 268449744)
  %v3_100023a0 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100023a0 = zext i8 %v3_100023a0 to i32
  store i32 %v3_1000239c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_100023b0 = mul nuw nsw i32 %v4_100023a0, 4
  %v0_100023b4 = load i32, i32* @r28, align 4
  %v3_100023b4 = add i32 %v1_100023b0, %v3_1000239c
  %v4_100023b4 = inttoptr i32 %v3_100023b4 to i32*
  store i32 %v0_100023b4, i32* %v4_100023b4, align 4
  %v0_100023bc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100023bc, i32* @global_var_1001d238.59, align 4
  %v0_100023c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023c0 = trunc i32 %v0_100023c0 to i8
  store i8 %v1_100023c0, i8* @global_var_1001d234.58, align 1
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_100023c8 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100023c8 = zext i8 %v3_100023c8 to i32
  store i32 %v4_100023c8, i32* %r4.global-to-local, align 4
  store i32 %v2_100023c4, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_100023dc = load i32, i32* @global_var_1001d238.59, align 4
  %v2_100023e0 = inttoptr i32 %v2_100023c4 to i32*
  store i32 268448008, i32* %v2_100023e0, align 4
  %v0_100023e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100023e4 = mul i32 %v0_100023e4, 4
  store i32 %v1_100023e4, i32* %r4.global-to-local, align 4
  %v0_100023e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023e8 = trunc i32 %v0_100023e8 to i8
  %v2_100023e8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100023e8 = add i32 %v2_100023e8, 4
  %v4_100023e8 = inttoptr i32 %v3_100023e8 to i8*
  store i8 %v1_100023e8, i8* %v4_100023e8, align 1
  %v0_100023ec = load i32, i32* %r4.global-to-local, align 4
  %v1_100023ec = add i32 %v0_100023ec, 4
  store i32 %v1_100023ec, i32* %r4.global-to-local, align 4
  store i32 268444660, i32* @lr, align 4
  %v3_100023f0 = call i32 @function_1000afbc(i32 %v3_100023dc, i32 %v1_100023ec, i32 268448008)
  %v3_100023f4 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100023f4 = zext i8 %v3_100023f4 to i32
  store i32 %v3_100023f0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_10002404 = mul nuw nsw i32 %v4_100023f4, 4
  %v0_10002408 = load i32, i32* @r28, align 4
  %v3_10002408 = add i32 %v1_10002404, %v3_100023f0
  %v4_10002408 = inttoptr i32 %v3_10002408 to i32*
  store i32 %v0_10002408, i32* %v4_10002408, align 4
  %v0_10002410 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002410, i32* @global_var_1001d238.59, align 4
  %v0_10002414 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002414 = trunc i32 %v0_10002414 to i8
  store i8 %v1_10002414, i8* @global_var_1001d234.58, align 1
  store i32 268444700, i32* @lr, align 4
  %v2_10002418 = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_1000241c = load i8, i8* @global_var_1001d234.58, align 1
  %v4_1000241c = zext i8 %v3_1000241c to i32
  store i32 %v4_1000241c, i32* %r4.global-to-local, align 4
  store i32 %v2_10002418, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10002430 = load i32, i32* @global_var_1001d238.59, align 4
  %v2_10002434 = inttoptr i32 %v2_10002418 to i32*
  store i32 268446544, i32* %v2_10002434, align 4
  %v0_10002438 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002438 = mul i32 %v0_10002438, 4
  store i32 %v1_10002438, i32* %r4.global-to-local, align 4
  %v0_1000243c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000243c = trunc i32 %v0_1000243c to i8
  %v2_1000243c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000243c = add i32 %v2_1000243c, 4
  %v4_1000243c = inttoptr i32 %v3_1000243c to i8*
  store i8 %v1_1000243c, i8* %v4_1000243c, align 1
  %v0_10002440 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002440 = add i32 %v0_10002440, 4
  store i32 %v1_10002440, i32* %r4.global-to-local, align 4
  store i32 268444744, i32* @lr, align 4
  %v3_10002444 = call i32 @function_1000afbc(i32 %v3_10002430, i32 %v1_10002440, i32 268446544)
  %v3_10002448 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_10002448 = zext i8 %v3_10002448 to i32
  store i32 %v3_10002444, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_10002458 = mul nuw nsw i32 %v4_10002448, 4
  %v0_1000245c = load i32, i32* @r28, align 4
  %v3_1000245c = add i32 %v1_10002458, %v3_10002444
  %v4_1000245c = inttoptr i32 %v3_1000245c to i32*
  store i32 %v0_1000245c, i32* %v4_1000245c, align 4
  %v0_10002464 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002464, i32* @global_var_1001d238.59, align 4
  %v0_10002468 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002468 = trunc i32 %v0_10002468 to i8
  store i8 %v1_10002468, i8* @global_var_1001d234.58, align 1
  store i32 268444784, i32* @lr, align 4
  %v2_1000246c = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_10002470 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_10002470 = zext i8 %v3_10002470 to i32
  store i32 %v4_10002470, i32* %r4.global-to-local, align 4
  store i32 %v2_1000246c, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10002484 = load i32, i32* @global_var_1001d238.59, align 4
  %v2_10002488 = inttoptr i32 %v2_1000246c to i32*
  store i32 268444968, i32* %v2_10002488, align 4
  %v0_1000248c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000248c = mul i32 %v0_1000248c, 4
  store i32 %v1_1000248c, i32* %r4.global-to-local, align 4
  %v0_10002490 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002490 = trunc i32 %v0_10002490 to i8
  %v2_10002490 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002490 = add i32 %v2_10002490, 4
  %v4_10002490 = inttoptr i32 %v3_10002490 to i8*
  store i8 %v1_10002490, i8* %v4_10002490, align 1
  %v0_10002494 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002494 = add i32 %v0_10002494, 4
  store i32 %v1_10002494, i32* %r4.global-to-local, align 4
  store i32 268444828, i32* @lr, align 4
  %v3_10002498 = call i32 @function_1000afbc(i32 %v3_10002484, i32 %v1_10002494, i32 268444968)
  %v3_1000249c = load i8, i8* @global_var_1001d234.58, align 1
  %v4_1000249c = zext i8 %v3_1000249c to i32
  store i32 %v3_10002498, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_100024ac = mul nuw nsw i32 %v4_1000249c, 4
  %v0_100024b0 = load i32, i32* @r28, align 4
  %v3_100024b0 = add i32 %v1_100024ac, %v3_10002498
  %v4_100024b0 = inttoptr i32 %v3_100024b0 to i32*
  store i32 %v0_100024b0, i32* %v4_100024b0, align 4
  %v0_100024b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100024b8 = trunc i32 %v0_100024b8 to i8
  store i8 %v1_100024b8, i8* @global_var_1001d234.58, align 1
  %v0_100024bc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100024bc, i32* @global_var_1001d238.59, align 4
  store i32 268444868, i32* @lr, align 4
  %v2_100024c0 = call i32 @function_1000ae4c(i32 1, i32 8)
  %v3_100024c4 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100024c4 = zext i8 %v3_100024c4 to i32
  store i32 %v4_100024c4, i32* %r4.global-to-local, align 4
  store i32 %v2_100024c0, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_100024d8 = load i32, i32* @global_var_1001d238.59, align 4
  %v2_100024dc = inttoptr i32 %v2_100024c0 to i32*
  store i32 268436024, i32* %v2_100024dc, align 4
  %v0_100024e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024e0 = mul i32 %v0_100024e0, 4
  store i32 %v1_100024e0, i32* %r4.global-to-local, align 4
  %v0_100024e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100024e4 = trunc i32 %v0_100024e4 to i8
  %v2_100024e4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100024e4 = add i32 %v2_100024e4, 4
  %v4_100024e4 = inttoptr i32 %v3_100024e4 to i8*
  store i8 %v1_100024e4, i8* %v4_100024e4, align 1
  %v0_100024e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024e8 = add i32 %v0_100024e8, 4
  store i32 %v1_100024e8, i32* %r4.global-to-local, align 4
  store i32 268444912, i32* @lr, align 4
  %v3_100024ec = call i32 @function_1000afbc(i32 %v3_100024d8, i32 %v1_100024e8, i32 268436024)
  %v3_100024f0 = load i8, i8* @global_var_1001d234.58, align 1
  %v4_100024f0 = zext i8 %v3_100024f0 to i32
  store i32 %v3_100024ec, i32* @global_var_1001d238.59, align 4
  store i32 ptrtoint (i8* @global_var_1001d235.60 to i32), i32* %r0.global-to-local, align 4
  %v1_100024fc = mul nuw nsw i32 %v4_100024f0, 4
  %v0_10002500 = load i32, i32* @r28, align 4
  %v3_10002500 = add i32 %v1_100024fc, %v3_100024ec
  %v4_10002500 = inttoptr i32 %v3_10002500 to i32*
  store i32 %v0_10002500, i32* %v4_10002500, align 4
  %v0_10002508 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002508 = trunc i32 %v0_10002508 to i8
  store i8 %v1_10002508, i8* @global_var_1001d234.58, align 1
  store i32 %v0_100021a8, i32* %r0.global-to-local, align 4
  store i32 %v0_100021c4, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001d235.60 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001d234.58, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10002528(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002528:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-106 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_1000252c = load i32, i32* @lr, align 4
  store i32 %v0_1000252c, i32* %r0.global-to-local, align 4
  %v0_10002530 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  %v0_10002544 = load i32, i32* @r27, align 4
  store i32 %v0_10002530, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10002554 = load i32, i32* %r0.global-to-local, align 4
  %v0_10002570 = load i32, i32* @r24, align 4
  store i32 %arg3, i32* @r25, align 4
  %v0_1000257c = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002588 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_10002590 = load i32, i32* @r30, align 4
  %v0_10002594 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268445100, i32* @lr, align 4
  %v2_100025a8 = call i32 @function_1000ae4c(i32 %arg2, i32 4)
  store i32 %v2_100025a8, i32* %r20.global-to-local, align 4
  %v0_100025b0 = load i32, i32* @r29, align 4
  %v0_100025bc = load i32, i32* @r28, align 4
  store i32 %v0_100025bc, i32* %r3.global-to-local, align 4
  store i32 268445124, i32* @lr, align 4
  %v4_100025c0 = inttoptr i32 %v0_100025b0 to i32*
  %v5_100025c0 = call i32 @function_10001e18(i32 %v0_100025bc, i32* %v4_100025c0, i32 2, i32 0)
  %v5_100025d0 = trunc i32 %v5_100025c0 to i8
  %v0_100025d8 = load i32, i32* @r29, align 4
  %v0_100025dc = load i32, i32* @r28, align 4
  store i32 %v0_100025dc, i32* %r3.global-to-local, align 4
  store i32 268445156, i32* @lr, align 4
  %v4_100025e0 = inttoptr i32 %v0_100025d8 to i32*
  %v5_100025e0 = call i32 @function_10001e18(i32 %v0_100025dc, i32* %v4_100025e0, i32 3, i32 65535)
  %v0_100025e4 = load i32, i32* @r29, align 4
  store i32 %v5_100025e0, i32* %r24.global-to-local, align 4
  %v0_100025f4 = load i32, i32* @r28, align 4
  store i32 %v0_100025f4, i32* %r3.global-to-local, align 4
  store i32 268445180, i32* @lr, align 4
  %v4_100025f8 = inttoptr i32 %v0_100025e4 to i32*
  %v5_100025f8 = call i32 @function_10001e18(i32 %v0_100025f4, i32* %v4_100025f8, i32 4, i32 64)
  %v0_100025fc = load i32, i32* @r29, align 4
  %v1_10002608 = urem i32 %v5_100025f8, 256
  store i32 %v1_10002608, i32* %r14.global-to-local, align 4
  %v0_1000260c = load i32, i32* @r28, align 4
  store i32 %v0_1000260c, i32* %r3.global-to-local, align 4
  store i32 268445204, i32* @lr, align 4
  %v4_10002610 = inttoptr i32 %v0_100025fc to i32*
  %v5_10002610 = call i32 @function_10001e18(i32 %v0_1000260c, i32* %v4_10002610, i32 5, i32 1)
  %v0_10002620 = load i32, i32* @r29, align 4
  %v1_10002624 = urem i32 %v5_10002610, 256
  store i32 %v1_10002624, i32* %r23.global-to-local, align 4
  %v0_10002628 = load i32, i32* @r28, align 4
  store i32 %v0_10002628, i32* %r3.global-to-local, align 4
  store i32 268445232, i32* @lr, align 4
  %v4_1000262c = inttoptr i32 %v0_10002620 to i32*
  %v5_1000262c = call i32 @function_10001e18(i32 %v0_10002628, i32* %v4_1000262c, i32 6, i32 65535)
  %v0_10002634 = load i32, i32* @r29, align 4
  store i32 %v5_1000262c, i32* %r26.global-to-local, align 4
  %v0_10002644 = load i32, i32* @r28, align 4
  store i32 %v0_10002644, i32* %r3.global-to-local, align 4
  store i32 268445260, i32* @lr, align 4
  %v4_10002648 = inttoptr i32 %v0_10002634 to i32*
  %v5_10002648 = call i32 @function_10001e18(i32 %v0_10002644, i32* %v4_10002648, i32 7, i32 65535)
  %v0_1000264c = load i32, i32* @r29, align 4
  store i32 %v5_10002648, i32* %r30.global-to-local, align 4
  %v0_1000265c = load i32, i32* @r28, align 4
  store i32 %v0_1000265c, i32* %r3.global-to-local, align 4
  store i32 268445284, i32* @lr, align 4
  %v4_10002660 = inttoptr i32 %v0_1000264c to i32*
  %v5_10002660 = call i32 @function_10001e18(i32 %v0_1000265c, i32* %v4_10002660, i32 0, i32 512)
  %v0_10002664 = load i32, i32* @r29, align 4
  store i32 %v5_10002660, i32* %r18.global-to-local, align 4
  %v0_10002674 = load i32, i32* @r28, align 4
  store i32 %v0_10002674, i32* %r3.global-to-local, align 4
  store i32 268445308, i32* @lr, align 4
  %v4_10002678 = inttoptr i32 %v0_10002664 to i32*
  %v5_10002678 = call i32 @function_10001e18(i32 %v0_10002674, i32* %v4_10002678, i32 1, i32 1)
  %v0_1000267c = load i32, i32* @r29, align 4
  %v1_10002680 = urem i32 %v5_10002678, 256
  %v0_10002690 = load i32, i32* @r28, align 4
  store i32 %v0_10002690, i32* %r3.global-to-local, align 4
  store i32 268445336, i32* @lr, align 4
  %v4_10002694 = inttoptr i32 %v0_1000267c to i32*
  %v5_10002694 = call i32 @function_10001e18(i32 %v0_10002690, i32* %v4_10002694, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000269c = load i32, i32* @global_var_1001d230.61, align 4
  %v0_100026a0 = load i32, i32* @r29, align 4
  store i32 %v5_10002694, i32* @r31, align 4
  %v0_100026ac = load i32, i32* @r28, align 4
  store i32 %v0_100026ac, i32* %r3.global-to-local, align 4
  store i32 268445364, i32* @lr, align 4
  %v4_100026b0 = inttoptr i32 %v0_100026a0 to i32*
  %v5_100026b0 = call i32 @function_10001e18(i32 %v0_100026ac, i32* %v4_100026b0, i32 24, i32 %v3_1000269c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268445376, i32* @lr, align 4
  %v0_100026bc = call i32 @function_1000a1b8()
  %v1_100026c4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100026c4 = add i32 %v1_100026c4, %v0_100026bc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445400, i32* @lr, align 4
  %v3_100026d4 = call i32 @function_1000aaf0(i32 2, i32 3, i32 6)
  store i32 %v3_100026d4, i32* %r3.global-to-local, align 4
  %v1_100026d8 = icmp slt i32 %v3_100026d4, -1
  %v3_100026d8 = icmp eq i32 %v3_100026d4, -1
  store i1 %v1_100026d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100026d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100026d4, i32* %r21.global-to-local, align 4
  br i1 %v3_100026d8, label %dec_label_pc_10002a40, label %dec_label_pc_100026e4

dec_label_pc_100026e4:                            ; preds = %dec_label_pc_10002528
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100026f0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268445440, i32* @lr, align 4
  %v5_100026fc = call i32 @function_1000aab4(i32 0, i32 3, i32 %v2_100026f0, i32 4, i32 4)
  store i32 %v5_100026fc, i32* %r3.global-to-local, align 4
  %v1_10002700 = icmp slt i32 %v5_100026fc, -1
  %v3_10002700 = icmp eq i32 %v5_100026fc, -1
  store i1 %v1_10002700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002700, label %dec_label_pc_10002b44, label %dec_label_pc_10002708

dec_label_pc_10002708:                            ; preds = %dec_label_pc_100026e4
  %v0_10002708 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002708 = icmp slt i32 %v0_10002708, 0
  %v3_10002708 = icmp eq i32 %v0_10002708, 0
  store i1 %v1_10002708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002708, i1* %cr7_eq.global-to-local, align 1
  %v0_1000270c = load i32, i32* @r31, align 4
  %v1_1000270c = urem i32 %v0_1000270c, 256
  store i32 %v1_1000270c, i32* @r31, align 4
  %v0_10002710 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002710, i32* %stack_var_-120, align 4
  %v0_10002714 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002714 = urem i32 %v0_10002714, 65536
  store i32 %v1_10002714, i32* @r24, align 4
  %v0_10002718 = call i32 @__asm_mfcr()
  store i32 %v0_10002718, i32* %r3.global-to-local, align 4
  %v1_1000271c = mul i32 %v0_10002718, 268435456
  store i32 %v1_1000271c, i32* %r0.global-to-local, align 4
  %v0_10002720 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002720 = urem i32 %v0_10002720, 65536
  store i32 %v1_10002720, i32* %r16.global-to-local, align 4
  %v0_10002724 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002724 = urem i32 %v0_10002724, 65536
  store i32 %v1_10002724, i32* %r17.global-to-local, align 4
  %v0_10002728 = load i32, i32* @r31, align 4
  %v0_10002730 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10002730 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10002730 = or i1 %v0_10002730, %v1_10002730
  br i1 %v2_10002730, label %dec_label_pc_1000289c.preheader, label %dec_label_pc_10002734

dec_label_pc_10002734:                            ; preds = %dec_label_pc_10002708
  %v0_10002734 = load i32, i32* %r23.global-to-local, align 4
  %v3_10002734 = icmp eq i32 %v0_10002734, 0
  store i1 %v3_10002734, i1* %cr3_eq.global-to-local, align 1
  %v3_10002738 = icmp eq i32 %v0_10002728, 0
  store i1 %v3_10002738, i1* %cr4_eq.global-to-local, align 1
  %v0_1000273c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000273c = urem i32 %v0_1000273c, 65536
  %v0_10002740 = load i32, i32* @r24, align 4
  %v1_10002740 = sub i32 -1, %v0_10002740
  store i32 %v1_10002740, i32* %r11.global-to-local, align 4
  %v1_10002748 = add nuw nsw i32 %v1_1000273c, 66
  store i32 %v1_10002748, i32* %r0.global-to-local, align 4
  %v1_1000274c = add nuw nsw i32 %v1_1000273c, 28
  store i32 %v1_1000274c, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_1000273c, 66
  %v1_10002750 = urem i32 %fold, 65536
  store i32 %v1_10002750, i32* %r23.global-to-local, align 4
  %fold5 = add i32 %v0_1000273c, 28
  %v1_10002754 = urem i32 %fold5, 65536
  store i32 %v1_10002754, i32* %r26.global-to-local, align 4
  %v1_10002758 = urem i32 %v1_10002740, 65536
  store i32 %v1_10002758, i32* %r27.global-to-local, align 4
  %fold6 = add i32 %v0_1000273c, 8
  %v1_1000275c = urem i32 %fold6, 65536
  store i32 %v1_1000275c, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r22.global-to-local, align 4
  %v4_100027e4 = sext i8 %v5_100025d0 to i32
  br label %dec_label_pc_10002798

dec_label_pc_10002770:                            ; preds = %dec_label_pc_1000285c
  %v0_10002770 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002770 = add i32 %v0_10002770, 16
  %v2_10002770 = inttoptr i32 %v1_10002770 to i32*
  %v3_10002770 = load i32, i32* %v2_10002770, align 4
  store i32 %v3_10002770, i32* %r0.global-to-local, align 4
  %v0_10002774 = load i32, i32* @r28, align 4
  %v1_10002774 = trunc i32 %v0_10002774 to i16
  %v2_10002774 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002774 = add i32 %v2_10002774, 4
  %v4_10002774 = inttoptr i32 %v3_10002774 to i16*
  store i16 %v1_10002774, i16* %v4_10002774, align 2
  %v0_10002778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002778 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002778 = add i32 %v1_10002778, 16
  %v3_10002778 = inttoptr i32 %v2_10002778 to i32*
  store i32 %v0_10002778, i32* %v3_10002778, align 4
  %v0_1000277c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000277c = trunc i32 %v0_1000277c to i16
  %v2_1000277c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000277c = inttoptr i32 %v2_1000277c to i16*
  store i16 %v1_1000277c, i16* %v3_1000277c, align 2
  %v3_10002780 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002780, i32* %r9.global-to-local, align 4
  %v0_10002784 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002784 = trunc i32 %v0_10002784 to i16
  %v2_10002784 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002784 = add i32 %v2_10002784, 2
  %v4_10002784 = inttoptr i32 %v3_10002784 to i16*
  store i16 %v1_10002784, i16* %v4_10002784, align 2
  %v0_10002788 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002788 = add i32 %v0_10002788, 1
  %v1_1000278c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000278c = icmp slt i32 %v1_10002788, %v1_1000278c
  %v4_1000278c = icmp eq i32 %v1_10002788, %v1_1000278c
  store i1 %v2_1000278c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000278c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002788, i32* %stack_var_-120, align 4
  br i1 %v2_1000278c, label %dec_label_pc_10002798, label %dec_label_pc_1000289c.preheader

dec_label_pc_10002798:                            ; preds = %dec_label_pc_10002770, %dec_label_pc_10002878, %dec_label_pc_10002734
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445604, i32* @lr, align 4
  %v2_100027a0 = call i32 @function_1000ae4c(i32 1510, i32 4)
  store i32 %v2_100027a0, i32* %r3.global-to-local, align 4
  %v3_100027a4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100027a4, i32* %r9.global-to-local, align 4
  %v0_100027a8 = load i32, i32* @r31, align 4
  %v1_100027a8 = mul i32 %v0_100027a8, 4
  store i32 %v1_100027a8, i32* %r0.global-to-local, align 4
  %v1_100027ac = load i32, i32* %r20.global-to-local, align 4
  %v3_100027ac = add i32 %v1_100027ac, %v1_100027a8
  %v4_100027ac = inttoptr i32 %v3_100027ac to i32*
  store i32 %v2_100027a0, i32* %v4_100027ac, align 4
  %v0_100027b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100027b0 = mul i32 %v0_100027b0, 4
  store i32 %v1_100027b0, i32* %r9.global-to-local, align 4
  %v1_100027b4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100027b4 = add i32 %v1_100027b4, %v1_100027b0
  %v3_100027b4 = inttoptr i32 %v2_100027b4 to i32*
  %v4_100027b4 = load i32, i32* %v3_100027b4, align 4
  store i32 %v4_100027b4, i32* %r31.global-to-local, align 4
  %v1_100027b8 = inttoptr i32 %v4_100027b4 to i32*
  %v2_100027b8 = load i32, i32* %v1_100027b8, align 4
  store i32 %v2_100027b8, i32* %r0.global-to-local, align 4
  %v1_100027bc = add i32 %v4_100027b4, 38
  store i32 %v1_100027bc, i32* %r30.global-to-local, align 4
  %v0_100027c0 = load i32, i32* %r14.global-to-local, align 4
  %v1_100027c0 = trunc i32 %v0_100027c0 to i8
  %v3_100027c0 = add i32 %v4_100027b4, 8
  %v4_100027c0 = inttoptr i32 %v3_100027c0 to i8*
  store i8 %v1_100027c0, i8* %v4_100027c0, align 1
  %v0_100027c4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100027c4 = add i32 %v0_100027c4, 58
  store i32 %v1_100027c4, i32* %r29.global-to-local, align 4
  %v1_100027c8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100027c8, i32* %r0.global-to-local, align 4
  %v0_100027cc = load i32, i32* @r24, align 4
  %v1_100027cc = trunc i32 %v0_100027cc to i16
  %v2_100027cc = load i32, i32* %r31.global-to-local, align 4
  %v3_100027cc = add i32 %v2_100027cc, 4
  %v4_100027cc = inttoptr i32 %v3_100027cc to i16*
  store i16 %v1_100027cc, i16* %v4_100027cc, align 2
  %v1_100027d0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100027d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100027d4 = add i32 %v0_100027d4, 20
  store i32 %v1_100027d4, i32* %r9.global-to-local, align 4
  %v2_100027d8 = inttoptr i32 %v0_100027d4 to i32*
  store i32 %v1_100027d0, i32* %v2_100027d8, align 4
  %v0_100027dc = load i32, i32* %r31.global-to-local, align 4
  %v1_100027dc = add i32 %v0_100027dc, 24
  store i32 %v1_100027dc, i32* %r11.global-to-local, align 4
  %v0_100027e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100027e0 = trunc i32 %v0_100027e0 to i16
  %v3_100027e0 = add i32 %v0_100027dc, 2
  %v4_100027e0 = inttoptr i32 %v3_100027e0 to i16*
  store i16 %v1_100027e0, i16* %v4_100027e0, align 2
  store i32 %v4_100027e4, i32* %r0.global-to-local, align 4
  %v2_100027e8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100027e8 = add i32 %v2_100027e8, 1
  %v4_100027e8 = inttoptr i32 %v3_100027e8 to i8*
  store i8 %v5_100025d0, i8* %v4_100027e8, align 1
  %v0_100027ec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100027ec, label %dec_label_pc_100027f8, label %dec_label_pc_100027f0

dec_label_pc_100027f0:                            ; preds = %dec_label_pc_10002798
  %v2_100027f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100027f4 = add i32 %v2_100027f4, 6
  %v4_100027f4 = inttoptr i32 %v3_100027f4 to i16*
  store i16 16384, i16* %v4_100027f4, align 2
  br label %dec_label_pc_100027f8

dec_label_pc_100027f8:                            ; preds = %dec_label_pc_10002798, %dec_label_pc_100027f0
  %v2_100027fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100027fc = add i32 %v2_100027fc, 9
  %v4_100027fc = inttoptr i32 %v3_100027fc to i8*
  store i8 47, i8* %v4_100027fc, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10002804 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002804 = add i32 %v2_10002804, 2
  %v4_10002804 = inttoptr i32 %v3_10002804 to i16*
  store i16 25944, i16* %v4_10002804, align 2
  %v2_1000280c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000280c = add i32 %v2_1000280c, 12
  %v4_1000280c = inttoptr i32 %v3_1000280c to i16*
  store i16 2048, i16* %v4_1000280c, align 2
  %v3_10002810 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002810, i32* %r9.global-to-local, align 4
  %v0_10002814 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002814 = add i32 %v0_10002814, 38
  %v2_10002814 = inttoptr i32 %v1_10002814 to i32*
  %v3_10002814 = load i32, i32* %v2_10002814, align 4
  store i32 %v3_10002814, i32* %r0.global-to-local, align 4
  %v1_1000281c = mul i32 %v3_10002810, 24
  store i32 %v1_1000281c, i32* %r9.global-to-local, align 4
  %v1_10002820 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002820, i32* %r0.global-to-local, align 4
  %v1_10002824 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002824 = add i32 %v1_10002824, 12
  %v3_10002824 = inttoptr i32 %v2_10002824 to i32*
  store i32 %v5_100026b0, i32* %v3_10002824, align 4
  %v0_10002828 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002828 = load i32, i32* @r25, align 4
  %v2_10002828 = add i32 %v1_10002828, %v0_10002828
  store i32 %v2_10002828, i32* %r9.global-to-local, align 4
  %v1_1000282c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000282c, i32* %r0.global-to-local, align 4
  %v0_10002830 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002830 = add i32 %v0_10002830, 16
  %v2_10002830 = inttoptr i32 %v1_10002830 to i32*
  %v3_10002830 = load i32, i32* %v2_10002830, align 4
  store i32 %v3_10002830, i32* %r11.global-to-local, align 4
  %v1_10002834 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002834 = add i32 %v1_10002834, 38
  %v3_10002834 = inttoptr i32 %v2_10002834 to i32*
  store i32 %v1_1000282c, i32* %v3_10002834, align 4
  %v0_10002838 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002838 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002838 = add i32 %v1_10002838, 16
  %v3_10002838 = inttoptr i32 %v2_10002838 to i32*
  store i32 %v0_10002838, i32* %v3_10002838, align 4
  store i32 %v4_100027e4, i32* %r11.global-to-local, align 4
  %v0_10002840 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002840 = trunc i32 %v0_10002840 to i16
  %v2_10002840 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002840 = add i32 %v2_10002840, 2
  %v4_10002840 = inttoptr i32 %v3_10002840 to i16*
  store i16 %v1_10002840, i16* %v4_10002840, align 2
  %v0_10002844 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002844 = trunc i32 %v0_10002844 to i8
  %v2_10002844 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002844 = add i32 %v2_10002844, 1
  %v4_10002844 = inttoptr i32 %v3_10002844 to i8*
  store i8 %v1_10002844, i8* %v4_10002844, align 1
  %v0_10002848 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002848 = trunc i32 %v0_10002848 to i16
  %v2_10002848 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002848 = add i32 %v2_10002848, 4
  %v4_10002848 = inttoptr i32 %v3_10002848 to i16*
  store i16 %v1_10002848, i16* %v4_10002848, align 2
  %v0_1000284c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000284c = trunc i32 %v0_1000284c to i8
  %v2_1000284c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000284c = add i32 %v2_1000284c, 8
  %v4_1000284c = inttoptr i32 %v3_1000284c to i8*
  store i8 %v1_1000284c, i8* %v4_1000284c, align 1
  %v0_10002850 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002850, label %dec_label_pc_1000285c, label %dec_label_pc_10002854

dec_label_pc_10002854:                            ; preds = %dec_label_pc_100027f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002858 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002858 = add i32 %v2_10002858, 6
  %v4_10002858 = inttoptr i32 %v3_10002858 to i16*
  store i16 16384, i16* %v4_10002858, align 2
  br label %dec_label_pc_1000285c

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_100027f8, %dec_label_pc_10002854
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10002860 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002860 = add i32 %v2_10002860, 9
  %v4_10002860 = inttoptr i32 %v3_10002860 to i8*
  store i8 17, i8* %v4_10002860, align 1
  %v0_10002864 = call i32 @function_10006dc0()
  store i32 %v0_10002864, i32* %r3.global-to-local, align 4
  %v1_10002868 = add i32 %v0_10002864, -1024
  store i32 %v1_10002868, i32* %r0.global-to-local, align 4
  %v1_1000286c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000286c = add i32 %v1_1000286c, 12
  %v3_1000286c = inttoptr i32 %v2_1000286c to i32*
  store i32 %v0_10002864, i32* %v3_1000286c, align 4
  %v0_10002870 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002870 = sub i32 -1, %v0_10002870
  store i32 %v1_10002870, i32* %r0.global-to-local, align 4
  %v0_10002874 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002874, label %dec_label_pc_10002878, label %dec_label_pc_10002770

dec_label_pc_10002878:                            ; preds = %dec_label_pc_1000285c
  %v1_10002878 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002878 = add i32 %v1_10002878, 16
  %v3_10002878 = inttoptr i32 %v2_10002878 to i32*
  store i32 %v1_10002870, i32* %v3_10002878, align 4
  %v0_1000287c = load i32, i32* @r28, align 4
  %v1_1000287c = trunc i32 %v0_1000287c to i16
  %v2_1000287c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000287c = add i32 %v2_1000287c, 4
  %v4_1000287c = inttoptr i32 %v3_1000287c to i16*
  store i16 %v1_1000287c, i16* %v4_1000287c, align 2
  %v3_10002880 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002880, i32* %r9.global-to-local, align 4
  %v0_10002884 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002884 = trunc i32 %v0_10002884 to i16
  %v2_10002884 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002884 = inttoptr i32 %v2_10002884 to i16*
  store i16 %v1_10002884, i16* %v3_10002884, align 2
  %v0_10002888 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002888 = add i32 %v0_10002888, 1
  store i32 %v1_10002888, i32* @r31, align 4
  %v0_1000288c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000288c = trunc i32 %v0_1000288c to i16
  %v2_1000288c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000288c = add i32 %v2_1000288c, 2
  %v4_1000288c = inttoptr i32 %v3_1000288c to i16*
  store i16 %v1_1000288c, i16* %v4_1000288c, align 2
  %v0_10002890 = load i32, i32* @r31, align 4
  %v1_10002890 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002890 = icmp slt i32 %v0_10002890, %v1_10002890
  %v4_10002890 = icmp eq i32 %v0_10002890, %v1_10002890
  store i1 %v2_10002890, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002890, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10002890, i32* %stack_var_-120, align 4
  br i1 %v2_10002890, label %dec_label_pc_10002798, label %dec_label_pc_1000289c.preheader

dec_label_pc_1000289c.preheader:                  ; preds = %dec_label_pc_10002878, %dec_label_pc_10002770, %dec_label_pc_10002708
  %v2_100028a8 = urem i32 %v0_10002718, 16
  %v1_100028b0 = mul nuw i32 %v2_100028a8, 268435456
  %v2_100028bc = ptrtoint i32* %stack_var_-108 to i32
  %v2_100028c4 = ptrtoint i32* %stack_var_-106 to i32
  %v2_10002958 = ptrtoint i32* %stack_var_-116 to i32
  %v2_1000296c = ptrtoint i32* %stack_var_-112 to i32
  %v3_100028cc = icmp eq i32 %v0_10002728, 0
  %v3_100028d0 = icmp eq i32 %v5_100026b0, -1
  %v3_100028d8 = icmp eq i32 %v1_10002680, 0
  br label %dec_label_pc_1000289c

dec_label_pc_1000289c:                            ; preds = %dec_label_pc_1000289c.preheader, %dec_label_pc_10002a2c
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_100028a8, i32* %r0.global-to-local, align 4
  %v1_100028ac = call %0 @__asm_mtcrf(i32 1, i32 %v2_100028a8)
  store i32 %v1_100028b0, i32* %r0.global-to-local, align 4
  %v0_100028b4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100028b4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100028b4 = or i1 %v0_100028b4, %v1_100028b4
  br i1 %v2_100028b4, label %dec_label_pc_10002a2c, label %dec_label_pc_100028b8

dec_label_pc_100028b8:                            ; preds = %dec_label_pc_1000289c
  store i32 %v0_10002728, i32* %r0.global-to-local, align 4
  store i32 %v2_100028bc, i32* %r14.global-to-local, align 4
  store i32 %v1_10002680, i32* %r11.global-to-local, align 4
  store i1 %v3_100028cc, i1* %cr4_eq.global-to-local, align 1
  store i1 %v3_100028d0, i1* %cr3_eq.global-to-local, align 1
  %v0_100028d4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100028d4 = add i32 %v0_100028d4, 8
  store i32 %v1_100028d4, i32* %r22.global-to-local, align 4
  store i1 %v3_100028d8, i1* %cr2_eq.global-to-local, align 1
  %v1_100028dc = add i32 %v0_100028d4, 66
  store i32 %v1_100028dc, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_100028e8

dec_label_pc_100028e8:                            ; preds = %dec_label_pc_1000299c, %dec_label_pc_100028b8
  %v0_100028e8 = phi i32 [ %v1_10002a1c, %dec_label_pc_1000299c ], [ 0, %dec_label_pc_100028b8 ]
  %v1_100028e8 = mul i32 %v0_100028e8, 24
  store i32 %v1_100028e8, i32* %r0.global-to-local, align 4
  %v1_100028ec = mul i32 %v0_100028e8, 4
  store i32 %v1_100028ec, i32* %r11.global-to-local, align 4
  %v1_100028f0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100028f0 = add i32 %v1_100028f0, %v1_100028ec
  %v3_100028f0 = inttoptr i32 %v2_100028f0 to i32*
  %v4_100028f0 = load i32, i32* %v3_100028f0, align 4
  store i32 %v4_100028f0, i32* @r28, align 4
  %v1_100028f4 = load i32, i32* @r25, align 4
  %v2_100028f4 = add i32 %v1_100028f4, %v1_100028e8
  %v1_100028f8 = add i32 %v2_100028f4, 20
  %v2_100028f8 = inttoptr i32 %v1_100028f8 to i8*
  %v3_100028f8 = load i8, i8* %v2_100028f8, align 1
  %v4_100028f8 = zext i8 %v3_100028f8 to i32
  store i32 %v4_100028f8, i32* %r9.global-to-local, align 4
  %v1_100028fc = add i32 %v4_100028f0, 24
  store i32 %v1_100028fc, i32* @r31, align 4
  %v1_10002900 = add i32 %v4_100028f0, 38
  store i32 %v1_10002900, i32* @r27, align 4
  %v1_10002904 = add i32 %v4_100028f0, 58
  store i32 %v1_10002904, i32* @r30, align 4
  %v1_10002908 = icmp ult i8 %v3_100028f8, 31
  %v3_10002908 = icmp eq i8 %v3_100028f8, 31
  store i1 %v1_10002908, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002908, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_100028f8, 32
  br i1 %tmp39, label %dec_label_pc_10002aa0, label %dec_label_pc_10002910

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028e8
  %v0_10002910 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002910, label %dec_label_pc_10002ac8, label %dec_label_pc_10002914

dec_label_pc_10002914:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_10002910
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_1000291c = load i32, i32* @r24, align 4
  %v2_1000291c = icmp slt i32 %v0_1000291c, 65535
  %v4_1000291c = icmp eq i32 %v0_1000291c, 65535
  store i1 %v2_1000291c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000291c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000291c, label %dec_label_pc_10002ae0, label %dec_label_pc_10002924

dec_label_pc_10002924:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_10002914
  %v1_10002924 = phi i32 [ %v1_10002ad8, %dec_label_pc_10002ac8 ], [ 65535, %dec_label_pc_10002914 ]
  %v0_10002924 = load i32, i32* %r16.global-to-local, align 4
  %v2_10002924 = icmp slt i32 %v0_10002924, %v1_10002924
  %v4_10002924 = icmp eq i32 %v0_10002924, %v1_10002924
  store i1 %v2_10002924, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002924, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002924, label %dec_label_pc_10002b00, label %dec_label_pc_1000292c

dec_label_pc_1000292c:                            ; preds = %dec_label_pc_10002ae0.dec_label_pc_1000292c_crit_edge, %dec_label_pc_10002924
  %v1_1000292c = phi i32 [ %v1_1000292c.pre, %dec_label_pc_10002ae0.dec_label_pc_1000292c_crit_edge ], [ %v1_10002924, %dec_label_pc_10002924 ]
  %v0_1000292c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000292c = icmp slt i32 %v0_1000292c, %v1_1000292c
  %v4_1000292c = icmp eq i32 %v0_1000292c, %v1_1000292c
  store i1 %v2_1000292c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000292c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000292c, label %dec_label_pc_10002b10, label %dec_label_pc_10002934

dec_label_pc_10002934:                            ; preds = %dec_label_pc_10002b00, %dec_label_pc_1000292c
  %v0_10002934 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002934, label %dec_label_pc_10002b1c, label %dec_label_pc_10002938

dec_label_pc_10002938:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002934
  %v0_10002938 = load i32, i32* @r28, align 4
  %v1_10002938 = add i32 %v0_10002938, 16
  %v2_10002938 = inttoptr i32 %v1_10002938 to i32*
  %v3_10002938 = load i32, i32* %v2_10002938, align 4
  store i32 %v3_10002938, i32* %r0.global-to-local, align 4
  %v1_1000293c = load i32, i32* @r27, align 4
  %v2_1000293c = add i32 %v1_1000293c, 16
  %v3_1000293c = inttoptr i32 %v2_1000293c to i32*
  store i32 %v3_10002938, i32* %v3_1000293c, align 4
  br label %dec_label_pc_10002940

dec_label_pc_10002940:                            ; preds = %dec_label_pc_10002b1c, %dec_label_pc_10002938
  %v0_10002940 = call i32 @function_10006dc0()
  store i32 %v0_10002940, i32* %r3.global-to-local, align 4
  store i32 %v0_10002940, i32* %stack_var_-116, align 4
  %v0_10002948 = call i32 @function_10006dc0()
  store i32 %v0_10002948, i32* %r3.global-to-local, align 4
  store i32 %v0_10002948, i32* %stack_var_-112, align 4
  %v0_10002950 = call i32 @function_10006dc0()
  store i32 %v0_10002950, i32* %stack_var_-108, align 4
  %v0_1000295c = load i32, i32* @r31, align 4
  store i32 %v0_1000295c, i32* %r3.global-to-local, align 4
  store i32 268446056, i32* @lr, align 4
  %v3_10002964 = call i32 @function_10009628(i32 %v0_1000295c, i32 %v2_10002958, i32 4)
  %v0_10002968 = load i32, i32* @r31, align 4
  %v1_10002968 = add i32 %v0_10002968, 6
  store i32 %v1_10002968, i32* %r3.global-to-local, align 4
  store i32 268446072, i32* @lr, align 4
  %v3_10002974 = call i32 @function_10009628(i32 %v1_10002968, i32 %v2_1000296c, i32 4)
  %v0_10002978 = load i32, i32* @r31, align 4
  %v1_10002978 = add i32 %v0_10002978, 4
  store i32 %v1_10002978, i32* %r3.global-to-local, align 4
  store i32 268446088, i32* @lr, align 4
  %v3_10002984 = call i32 @function_10009628(i32 %v1_10002978, i32 %v2_100028bc, i32 2)
  %v0_10002988 = load i32, i32* @r31, align 4
  %v1_10002988 = add i32 %v0_10002988, 10
  store i32 %v1_10002988, i32* %r3.global-to-local, align 4
  store i32 268446104, i32* @lr, align 4
  %v3_10002994 = call i32 @function_10009628(i32 %v1_10002988, i32 %v2_100028c4, i32 2)
  store i32 %v3_10002994, i32* %r3.global-to-local, align 4
  %v0_10002998 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002998, label %dec_label_pc_1000299c, label %dec_label_pc_10002b28

dec_label_pc_1000299c:                            ; preds = %dec_label_pc_10002940, %dec_label_pc_10002b28
  %v0_1000299c = load i32, i32* @r26, align 4
  %v1_1000299c = trunc i32 %v0_1000299c to i16
  %v2_1000299c = load i32, i32* @r28, align 4
  %v3_1000299c = add i32 %v2_1000299c, 10
  %v4_1000299c = inttoptr i32 %v3_1000299c to i16*
  store i16 %v1_1000299c, i16* %v4_1000299c, align 2
  %v0_100029a4 = load i32, i32* @r28, align 4
  store i32 %v0_100029a4, i32* @r3, align 4
  %v2_100029a8 = call i32 @function_10005814(i32 %v0_100029a4, i32 20)
  %v3_100029a8 = trunc i32 %v2_100029a8 to i16
  %v3_100029b0 = load i32, i32* @r28, align 4
  %v4_100029b0 = add i32 %v3_100029b0, 10
  %v5_100029b0 = inttoptr i32 %v4_100029b0 to i16*
  store i16 %v3_100029a8, i16* %v5_100029b0, align 2
  %v0_100029b4 = load i32, i32* @r27, align 4
  store i32 %v0_100029b4, i32* @r3, align 4
  %v0_100029b8 = load i32, i32* @r26, align 4
  %v1_100029b8 = trunc i32 %v0_100029b8 to i16
  %v3_100029b8 = add i32 %v0_100029b4, 10
  %v4_100029b8 = inttoptr i32 %v3_100029b8 to i16*
  store i16 %v1_100029b8, i16* %v4_100029b8, align 2
  %v2_100029bc = call i32 @function_10005814(i32 %v0_100029b4, i32 20)
  %v3_100029bc = trunc i32 %v2_100029bc to i16
  %v0_100029c0 = load i32, i32* @r30, align 4
  store i32 %v0_100029c0, i32* @r4, align 4
  %v3_100029c4 = load i32, i32* @r27, align 4
  %v4_100029c4 = add i32 %v3_100029c4, 10
  %v5_100029c4 = inttoptr i32 %v4_100029c4 to i16*
  store i16 %v3_100029bc, i16* %v5_100029c4, align 2
  %v0_100029c8 = load i32, i32* %r22.global-to-local, align 4
  %v0_100029cc = load i32, i32* @r26, align 4
  %v1_100029cc = trunc i32 %v0_100029cc to i16
  %v2_100029cc = load i32, i32* @r30, align 4
  %v3_100029cc = add i32 %v2_100029cc, 6
  %v4_100029cc = inttoptr i32 %v3_100029cc to i16*
  store i16 %v1_100029cc, i16* %v4_100029cc, align 2
  %v0_100029d0 = load i32, i32* @r27, align 4
  store i32 %v0_100029d0, i32* %r3.global-to-local, align 4
  %v0_100029d4 = load i32, i32* @r30, align 4
  %v1_100029d4 = add i32 %v0_100029d4, 4
  %v2_100029d4 = inttoptr i32 %v1_100029d4 to i16*
  %v3_100029d4 = load i16, i16* %v2_100029d4, align 2
  %v4_100029d4 = zext i16 %v3_100029d4 to i32
  %v4_100029d8 = call i32 @function_10005878(i32 %v0_100029d0, i32 %v0_100029c0, i32 %v4_100029d4, i32 %v0_100029c8)
  %v5_100029d8 = trunc i32 %v4_100029d8 to i16
  store i32 %v4_100029d8, i32* %r3.global-to-local, align 4
  %v3_100029dc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100029dc, i32* %r0.global-to-local, align 4
  %v0_100029e0 = load i32, i32* @r28, align 4
  %v1_100029e0 = add i32 %v0_100029e0, 16
  %v2_100029e0 = inttoptr i32 %v1_100029e0 to i32*
  %v3_100029e0 = load i32, i32* %v2_100029e0, align 4
  store i32 %v3_100029e0, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_100029e8 = mul i32 %v3_100029dc, 24
  store i32 %v1_100029e8, i32* %r0.global-to-local, align 4
  %v3_100029ec = load i32, i32* @r30, align 4
  %v4_100029ec = add i32 %v3_100029ec, 6
  %v5_100029ec = inttoptr i32 %v4_100029ec to i16*
  store i16 %v5_100029d8, i16* %v5_100029ec, align 2
  %v0_100029f0 = load i32, i32* @r28, align 4
  %v0_100029f4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100029f4, i32* %r3.global-to-local, align 4
  %v0_100029f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100029f8 = load i32, i32* @r25, align 4
  %v2_100029f8 = add i32 %v1_100029f8, %v0_100029f8
  %v0_100029fc = load i32, i32* %r9.global-to-local, align 4
  %v3_100029fc = trunc i32 %v0_100029fc to i16
  %v5_100029fc = inttoptr i32 %v2_100029f8 to i16*
  store i16 %v3_100029fc, i16* %v5_100029fc, align 2
  %v0_10002a00 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002a00 = add i32 %v2_100029f8, 4
  %v3_10002a00 = inttoptr i32 %v2_10002a00 to i32*
  store i32 %v0_10002a00, i32* %v3_10002a00, align 4
  %v0_10002a04 = load i32, i32* %r23.global-to-local, align 4
  %v0_10002a08 = load i32, i32* @r26, align 4
  %v1_10002a08 = trunc i32 %v0_10002a08 to i16
  %v3_10002a08 = add i32 %v2_100029f8, 2
  %v4_10002a08 = inttoptr i32 %v3_10002a08 to i16*
  store i16 %v1_10002a08, i16* %v4_10002a08, align 2
  store i32 268446232, i32* @lr, align 4
  %v6_10002a14 = call i32 @function_1000aa74(i32 %v0_100029f4, i32 %v0_100029f0, i32 %v0_10002a04, i32 16384, i32 %v2_100029f8, i32 16)
  store i32 %v6_10002a14, i32* %r3.global-to-local, align 4
  %v3_10002a18 = load i32, i32* %stack_var_-120, align 4
  %v1_10002a1c = add i32 %v3_10002a18, 1
  store i32 %v1_10002a1c, i32* %r9.global-to-local, align 4
  %v1_10002a20 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002a20 = icmp slt i32 %v1_10002a1c, %v1_10002a20
  %v4_10002a20 = icmp eq i32 %v1_10002a1c, %v1_10002a20
  store i1 %v2_10002a20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002a20, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002a1c, i32* %stack_var_-120, align 4
  br i1 %v2_10002a20, label %dec_label_pc_100028e8, label %dec_label_pc_10002a2c

dec_label_pc_10002a2c:                            ; preds = %dec_label_pc_1000299c, %dec_label_pc_1000289c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268446260, i32* @lr, align 4
  %v0_10002a30 = call i32 @function_1000a1b8()
  store i32 %v0_10002a30, i32* %r3.global-to-local, align 4
  store i32 %v2_100026c4, i32* %r0.global-to-local, align 4
  %v2_10002a38 = icmp slt i32 %v2_100026c4, %v0_10002a30
  %v4_10002a38 = icmp eq i32 %v2_100026c4, %v0_10002a30
  store i1 %v2_10002a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002a38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10002a38, label %dec_label_pc_10002a40, label %dec_label_pc_1000289c

dec_label_pc_10002a40:                            ; preds = %dec_label_pc_10002a2c, %dec_label_pc_10002528, %dec_label_pc_10002b44
  store i32 %v0_10002554, i32* %r0.global-to-local, align 4
  %v1_10002a54 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002530)
  store i32 %v0_10002570, i32* %r24.global-to-local, align 4
  store i32 %v0_1000257c, i32* %r26.global-to-local, align 4
  store i32 %v0_10002544, i32* %r27.global-to-local, align 4
  store i32 %v0_10002588, i32* %r29.global-to-local, align 4
  store i32 %v0_10002590, i32* %r30.global-to-local, align 4
  store i32 %v0_10002594, i32* %r31.global-to-local, align 4
  %v0_10002a9c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002a9c

dec_label_pc_10002aa0:                            ; preds = %dec_label_pc_100028e8
  %v1_10002aa0 = add i32 %v2_100028f4, 16
  %v2_10002aa0 = inttoptr i32 %v1_10002aa0 to i32*
  %v3_10002aa0 = load i32, i32* %v2_10002aa0, align 4
  store i32 %v3_10002aa0, i32* %r29.global-to-local, align 4
  %v0_10002aa4 = call i32 @function_10006dc0()
  store i32 %v0_10002aa4, i32* %r3.global-to-local, align 4
  %v3_10002aa8 = load i32, i32* %stack_var_-120, align 4
  %v1_10002aac = mul i32 %v3_10002aa8, 24
  %v1_10002ab0 = load i32, i32* @r25, align 4
  %v2_10002ab0 = add i32 %v1_10002ab0, %v1_10002aac
  store i32 %v2_10002ab0, i32* %r9.global-to-local, align 4
  %v1_10002ab4 = add i32 %v2_10002ab0, 20
  %v2_10002ab4 = inttoptr i32 %v1_10002ab4 to i8*
  %v3_10002ab4 = load i8, i8* %v2_10002ab4, align 1
  %v4_10002ab4 = zext i8 %v3_10002ab4 to i32
  store i32 %v4_10002ab4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ab4, 64
  %v2_10002ab8 = zext i8 %tmp to i32
  %v3_10002ab8 = lshr i32 %v0_10002aa4, %v2_10002ab8
  store i32 %v3_10002ab8, i32* %r3.global-to-local, align 4
  %v0_10002abc = load i32, i32* %r29.global-to-local, align 4
  %v2_10002abc = add i32 %v3_10002ab8, %v0_10002abc
  store i32 %v2_10002abc, i32* %r29.global-to-local, align 4
  %v1_10002ac0 = load i32, i32* @r28, align 4
  %v2_10002ac0 = add i32 %v1_10002ac0, 16
  %v3_10002ac0 = inttoptr i32 %v2_10002ac0 to i32*
  store i32 %v2_10002abc, i32* %v3_10002ac0, align 4
  %v0_10002ac4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ac4, label %dec_label_pc_10002ac8, label %dec_label_pc_10002914

dec_label_pc_10002ac8:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_10002910
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002acc = call i32 @function_10006dc0()
  store i32 %v0_10002acc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10002ad4 = load i32, i32* @r28, align 4
  %v2_10002ad4 = add i32 %v1_10002ad4, 12
  %v3_10002ad4 = inttoptr i32 %v2_10002ad4 to i32*
  store i32 %v0_10002acc, i32* %v3_10002ad4, align 4
  %v0_10002ad8 = load i32, i32* @r24, align 4
  %v1_10002ad8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002ad8 = icmp slt i32 %v0_10002ad8, %v1_10002ad8
  %v4_10002ad8 = icmp eq i32 %v0_10002ad8, %v1_10002ad8
  store i1 %v2_10002ad8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002ad8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ad8, label %dec_label_pc_10002ae0, label %dec_label_pc_10002924

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_10002914
  %v0_10002ae0 = call i32 @function_10006dc0()
  %v0_10002ae4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002ae4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002ae4 = icmp slt i32 %v0_10002ae4, %v1_10002ae4
  %v4_10002ae4 = icmp eq i32 %v0_10002ae4, %v1_10002ae4
  store i1 %v2_10002ae4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002ae4, i1* %cr7_eq.global-to-local, align 1
  %v1_10002ae8 = urem i32 %v0_10002ae0, 65536
  store i32 %v1_10002ae8, i32* %r3.global-to-local, align 4
  %v1_10002aec = add nsw i32 %v1_10002ae8, -1000
  store i32 %v1_10002aec, i32* %r0.global-to-local, align 4
  %v1_10002af0 = trunc i32 %v0_10002ae0 to i16
  %v2_10002af0 = load i32, i32* @r28, align 4
  %v3_10002af0 = add i32 %v2_10002af0, 4
  %v4_10002af0 = inttoptr i32 %v3_10002af0 to i16*
  store i16 %v1_10002af0, i16* %v4_10002af0, align 2
  %v0_10002af4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002af4 = sub i32 -1, %v0_10002af4
  store i32 %v1_10002af4, i32* %r0.global-to-local, align 4
  %v1_10002af8 = trunc i32 %v1_10002af4 to i16
  %v2_10002af8 = load i32, i32* @r27, align 4
  %v3_10002af8 = add i32 %v2_10002af8, 4
  %v4_10002af8 = inttoptr i32 %v3_10002af8 to i16*
  store i16 %v1_10002af8, i16* %v4_10002af8, align 2
  br i1 %v4_10002ae4, label %dec_label_pc_10002b00, label %dec_label_pc_10002ae0.dec_label_pc_1000292c_crit_edge

dec_label_pc_10002ae0.dec_label_pc_1000292c_crit_edge: ; preds = %dec_label_pc_10002ae0
  %v1_1000292c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000292c

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002924
  %v0_10002b00 = call i32 @function_10006dc0()
  %v1_10002b00 = trunc i32 %v0_10002b00 to i16
  store i32 %v0_10002b00, i32* %r3.global-to-local, align 4
  %v0_10002b04 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002b04 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002b04 = icmp slt i32 %v0_10002b04, %v1_10002b04
  %v4_10002b04 = icmp eq i32 %v0_10002b04, %v1_10002b04
  store i1 %v2_10002b04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002b04, i1* %cr7_eq.global-to-local, align 1
  %v3_10002b08 = load i32, i32* @r28, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 58
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b00, i16* %v5_10002b08, align 2
  br i1 %v4_10002b04, label %dec_label_pc_10002b10, label %dec_label_pc_10002934

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b00, %dec_label_pc_1000292c
  %v0_10002b10 = call i32 @function_10006dc0()
  %v1_10002b10 = trunc i32 %v0_10002b10 to i16
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v3_10002b14 = load i32, i32* @r30, align 4
  %v4_10002b14 = add i32 %v3_10002b14, 2
  %v5_10002b14 = inttoptr i32 %v4_10002b14 to i16*
  store i16 %v1_10002b10, i16* %v5_10002b14, align 2
  %v0_10002b18 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002b18, label %dec_label_pc_10002b1c, label %dec_label_pc_10002938

dec_label_pc_10002b1c:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002934
  %v0_10002b1c = call i32 @function_10006dc0()
  store i32 %v0_10002b1c, i32* %r3.global-to-local, align 4
  %v1_10002b20 = load i32, i32* @r27, align 4
  %v2_10002b20 = add i32 %v1_10002b20, 16
  %v3_10002b20 = inttoptr i32 %v2_10002b20 to i32*
  store i32 %v0_10002b1c, i32* %v3_10002b20, align 4
  br label %dec_label_pc_10002940

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002940
  %v0_10002b28 = load i32, i32* @r30, align 4
  %v1_10002b28 = add i32 %v0_10002b28, 8
  store i32 %v1_10002b28, i32* @r29, align 4
  %v0_10002b2c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10002b2c, i32* @r4, align 4
  store i32 %v1_10002b28, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002b38.62 to i32), i32* @lr, align 4
  %v0_10002b34 = call i32 @function_10006e80()
  store i32 %v0_10002b34, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002b3c = load i32, i32* @r29, align 4
  %v2_10002b3c = load i32, i32* %r18.global-to-local, align 4
  %v4_10002b3c = add i32 %v2_10002b3c, %v1_10002b3c
  %v5_10002b3c = inttoptr i32 %v4_10002b3c to i8*
  store i8 0, i8* %v5_10002b3c, align 1
  br label %dec_label_pc_1000299c

dec_label_pc_10002b44:                            ; preds = %dec_label_pc_100026e4
  %v0_10002b44 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002b44, i32* %r3.global-to-local, align 4
  store i32 268446540, i32* @lr, align 4
  %v0_10002b48 = call i32 @function_10009de8()
  store i32 %v0_10002b48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a40

; uselistorder directives
  uselistorder i32 %v0_10002b10, { 1, 0 }
  uselistorder i32 %v0_10002b00, { 1, 0 }
  uselistorder i32 %v1_10002af4, { 1, 0 }
  uselistorder i32 %v1_10002ae8, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v1_10002ad8, { 1, 2, 0 }
  uselistorder i32 %v0_10002a30, { 1, 0, 2 }
  uselistorder i32 %v1_10002a1c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_100029f8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_100029d8, { 1, 0 }
  uselistorder i32 %v1_1000292c, { 1, 0 }
  uselistorder i32 %v1_10002924, { 0, 2, 1 }
  uselistorder i32 %v4_100028f0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100028ec, { 1, 0 }
  uselistorder i32 %v2_100028a8, { 2, 1, 0 }
  uselistorder i32 %v1_10002870, { 1, 0 }
  uselistorder i32 %v1_100027b0, { 1, 0 }
  uselistorder i32 %v1_100027a8, { 1, 0 }
  uselistorder i32 %v1_10002788, { 0, 2, 1 }
  uselistorder i32 %v1_1000273c, { 1, 0 }
  uselistorder i32 %v0_1000273c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10002728, { 2, 1, 0 }
  uselistorder i32 %v5_100026fc, { 1, 0, 2 }
  uselistorder i32 %v3_100026d4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100026c4, { 1, 2, 0 }
  uselistorder i32 %v5_100026b0, { 1, 0 }
  uselistorder i8 %v5_100025d0, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 8, 9, 20, 21 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 29, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 1 }
  uselistorder i32* %r29.global-to-local, { 8, 7, 9, 0, 1, 3, 2, 4, 5, 6, 10, 11, 12, 13, 17, 14, 15, 16 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 15, 16, 30, 31, 32, 33, 34 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002a40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000299c, { 1, 0 }
  uselistorder label %dec_label_pc_1000289c, { 1, 0 }
  uselistorder label %dec_label_pc_1000285c, { 1, 0 }
  uselistorder label %dec_label_pc_100027f8, { 1, 0 }
  uselistorder label %dec_label_pc_10002798, { 1, 0, 2 }
}

define i32 @function_10002b50(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002b50:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10002b54 = load i32, i32* @lr, align 4
  store i32 %v0_10002b54, i32* %r0.global-to-local, align 4
  %v0_10002b58 = call i32 @__asm_mfcr()
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10002b6c = load i32, i32* @r27, align 4
  store i32 %v0_10002b58, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10002b7c = load i32, i32* %r0.global-to-local, align 4
  %v0_10002b98 = load i32, i32* @r24, align 4
  %v0_10002b9c = load i32, i32* @r25, align 4
  store i32 %arg3, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002bb0 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_10002bb8 = load i32, i32* @r30, align 4
  %v0_10002bbc = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268446676, i32* @lr, align 4
  %v2_10002bd0 = call i32 @function_1000ae4c(i32 %arg2, i32 4)
  store i32 %v2_10002bd0, i32* %r21.global-to-local, align 4
  %v0_10002bd8 = load i32, i32* @r29, align 4
  %v0_10002be4 = load i32, i32* @r28, align 4
  store i32 %v0_10002be4, i32* %r3.global-to-local, align 4
  store i32 268446700, i32* @lr, align 4
  %v4_10002be8 = inttoptr i32 %v0_10002bd8 to i32*
  %v5_10002be8 = call i32 @function_10001e18(i32 %v0_10002be4, i32* %v4_10002be8, i32 2, i32 0)
  %v5_10002bf8 = trunc i32 %v5_10002be8 to i8
  %v0_10002c00 = load i32, i32* @r29, align 4
  %v0_10002c04 = load i32, i32* @r28, align 4
  store i32 %v0_10002c04, i32* %r3.global-to-local, align 4
  store i32 268446732, i32* @lr, align 4
  %v4_10002c08 = inttoptr i32 %v0_10002c00 to i32*
  %v5_10002c08 = call i32 @function_10001e18(i32 %v0_10002c04, i32* %v4_10002c08, i32 3, i32 65535)
  %v0_10002c0c = load i32, i32* @r29, align 4
  store i32 %v5_10002c08, i32* %r25.global-to-local, align 4
  %v0_10002c1c = load i32, i32* @r28, align 4
  store i32 %v0_10002c1c, i32* %r3.global-to-local, align 4
  store i32 268446756, i32* @lr, align 4
  %v4_10002c20 = inttoptr i32 %v0_10002c0c to i32*
  %v5_10002c20 = call i32 @function_10001e18(i32 %v0_10002c1c, i32* %v4_10002c20, i32 4, i32 64)
  %v0_10002c24 = load i32, i32* @r29, align 4
  %v1_10002c30 = urem i32 %v5_10002c20, 256
  store i32 %v1_10002c30, i32* %r14.global-to-local, align 4
  %v0_10002c34 = load i32, i32* @r28, align 4
  store i32 %v0_10002c34, i32* %r3.global-to-local, align 4
  store i32 268446780, i32* @lr, align 4
  %v4_10002c38 = inttoptr i32 %v0_10002c24 to i32*
  %v5_10002c38 = call i32 @function_10001e18(i32 %v0_10002c34, i32* %v4_10002c38, i32 5, i32 1)
  %v0_10002c48 = load i32, i32* @r29, align 4
  %v1_10002c4c = urem i32 %v5_10002c38, 256
  store i32 %v1_10002c4c, i32* %r23.global-to-local, align 4
  %v0_10002c50 = load i32, i32* @r28, align 4
  store i32 %v0_10002c50, i32* %r3.global-to-local, align 4
  store i32 268446808, i32* @lr, align 4
  %v4_10002c54 = inttoptr i32 %v0_10002c48 to i32*
  %v5_10002c54 = call i32 @function_10001e18(i32 %v0_10002c50, i32* %v4_10002c54, i32 6, i32 65535)
  %v0_10002c5c = load i32, i32* @r29, align 4
  store i32 %v5_10002c54, i32* %r24.global-to-local, align 4
  %v0_10002c6c = load i32, i32* @r28, align 4
  store i32 %v0_10002c6c, i32* %r3.global-to-local, align 4
  store i32 268446836, i32* @lr, align 4
  %v4_10002c70 = inttoptr i32 %v0_10002c5c to i32*
  %v5_10002c70 = call i32 @function_10001e18(i32 %v0_10002c6c, i32* %v4_10002c70, i32 7, i32 65535)
  %v0_10002c74 = load i32, i32* @r29, align 4
  store i32 %v5_10002c70, i32* %r30.global-to-local, align 4
  %v0_10002c84 = load i32, i32* @r28, align 4
  store i32 %v0_10002c84, i32* %r3.global-to-local, align 4
  store i32 268446860, i32* @lr, align 4
  %v4_10002c88 = inttoptr i32 %v0_10002c74 to i32*
  %v5_10002c88 = call i32 @function_10001e18(i32 %v0_10002c84, i32* %v4_10002c88, i32 0, i32 512)
  %v0_10002c8c = load i32, i32* @r29, align 4
  store i32 %v5_10002c88, i32* %r19.global-to-local, align 4
  %v0_10002c9c = load i32, i32* @r28, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c8c to i32*
  %v5_10002ca0 = call i32 @function_10001e18(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 1, i32 1)
  %v0_10002ca4 = load i32, i32* @r29, align 4
  %v1_10002ca8 = urem i32 %v5_10002ca0, 256
  %v0_10002cb8 = load i32, i32* @r28, align 4
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 268446912, i32* @lr, align 4
  %v4_10002cbc = inttoptr i32 %v0_10002ca4 to i32*
  %v5_10002cbc = call i32 @function_10001e18(i32 %v0_10002cb8, i32* %v4_10002cbc, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002cc4 = load i32, i32* @global_var_1001d230.61, align 4
  %v0_10002cc8 = load i32, i32* @r29, align 4
  store i32 %v5_10002cbc, i32* @r31, align 4
  %v0_10002cd4 = load i32, i32* @r28, align 4
  store i32 %v0_10002cd4, i32* %r3.global-to-local, align 4
  store i32 268446940, i32* @lr, align 4
  %v4_10002cd8 = inttoptr i32 %v0_10002cc8 to i32*
  %v5_10002cd8 = call i32 @function_10001e18(i32 %v0_10002cd4, i32* %v4_10002cd8, i32 24, i32 %v3_10002cc4)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268446952, i32* @lr, align 4
  %v0_10002ce4 = call i32 @function_1000a1b8()
  %v1_10002cec = load i32, i32* %r27.global-to-local, align 4
  %v2_10002cec = add i32 %v1_10002cec, %v0_10002ce4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446976, i32* @lr, align 4
  %v3_10002cfc = call i32 @function_1000aaf0(i32 2, i32 3, i32 6)
  store i32 %v3_10002cfc, i32* %r3.global-to-local, align 4
  %v1_10002d00 = icmp slt i32 %v3_10002cfc, -1
  %v3_10002d00 = icmp eq i32 %v3_10002cfc, -1
  store i1 %v1_10002d00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002d00, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002cfc, i32* %r22.global-to-local, align 4
  br i1 %v3_10002d00, label %dec_label_pc_10002ff8, label %dec_label_pc_10002d0c

dec_label_pc_10002d0c:                            ; preds = %dec_label_pc_10002b50
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002d18 = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268447016, i32* @lr, align 4
  %v5_10002d24 = call i32 @function_1000aab4(i32 0, i32 3, i32 %v2_10002d18, i32 4, i32 4)
  store i32 %v5_10002d24, i32* %r3.global-to-local, align 4
  %v1_10002d28 = icmp slt i32 %v5_10002d24, -1
  %v3_10002d28 = icmp eq i32 %v5_10002d24, -1
  store i1 %v1_10002d28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002d28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002d28, label %dec_label_pc_100030fc, label %dec_label_pc_10002d30

dec_label_pc_10002d30:                            ; preds = %dec_label_pc_10002d0c
  %v0_10002d30 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002d30 = icmp slt i32 %v0_10002d30, 0
  %v3_10002d30 = icmp eq i32 %v0_10002d30, 0
  store i1 %v1_10002d30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002d30, i1* %cr7_eq.global-to-local, align 1
  %v0_10002d34 = load i32, i32* @r31, align 4
  %v1_10002d34 = urem i32 %v0_10002d34, 256
  store i32 %v1_10002d34, i32* @r31, align 4
  %v0_10002d38 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10002d38, i32* %stack_var_-120, align 4
  %v0_10002d3c = load i32, i32* %r25.global-to-local, align 4
  %v1_10002d3c = urem i32 %v0_10002d3c, 65536
  store i32 %v1_10002d3c, i32* @r25, align 4
  %v0_10002d40 = call i32 @__asm_mfcr()
  store i32 %v0_10002d40, i32* %r3.global-to-local, align 4
  %v1_10002d44 = mul i32 %v0_10002d40, 268435456
  store i32 %v1_10002d44, i32* %r0.global-to-local, align 4
  %v0_10002d48 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002d48 = urem i32 %v0_10002d48, 65536
  store i32 %v1_10002d48, i32* %r17.global-to-local, align 4
  %v0_10002d4c = load i32, i32* %r30.global-to-local, align 4
  %v1_10002d4c = urem i32 %v0_10002d4c, 65536
  store i32 %v1_10002d4c, i32* %r18.global-to-local, align 4
  %v0_10002d50 = load i32, i32* @r31, align 4
  %v0_10002d58 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10002d58 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10002d58 = or i1 %v0_10002d58, %v1_10002d58
  br i1 %v2_10002d58, label %dec_label_pc_10002eb8.preheader, label %dec_label_pc_10002d5c

dec_label_pc_10002d5c:                            ; preds = %dec_label_pc_10002d30
  %v0_10002d5c = load i32, i32* %r23.global-to-local, align 4
  %v3_10002d5c = icmp eq i32 %v0_10002d5c, 0
  store i1 %v3_10002d5c, i1* %cr3_eq.global-to-local, align 1
  %v3_10002d60 = icmp eq i32 %v0_10002d50, 0
  store i1 %v3_10002d60, i1* %cr4_eq.global-to-local, align 1
  %v0_10002d64 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002d64 = urem i32 %v0_10002d64, 65536
  %v0_10002d68 = load i32, i32* @r25, align 4
  %v1_10002d68 = sub i32 -1, %v0_10002d68
  store i32 %v1_10002d68, i32* %r11.global-to-local, align 4
  %v1_10002d70 = add nuw nsw i32 %v1_10002d64, 52
  store i32 %v1_10002d70, i32* %r0.global-to-local, align 4
  %v1_10002d74 = add nuw nsw i32 %v1_10002d64, 28
  store i32 %v1_10002d74, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002d64, 52
  %v1_10002d78 = urem i32 %fold, 65536
  store i32 %v1_10002d78, i32* %r23.global-to-local, align 4
  %fold5 = add i32 %v0_10002d64, 28
  %v1_10002d7c = urem i32 %fold5, 65536
  store i32 %v1_10002d7c, i32* %r24.global-to-local, align 4
  %v1_10002d80 = urem i32 %v1_10002d68, 65536
  store i32 %v1_10002d80, i32* %r27.global-to-local, align 4
  %fold6 = add i32 %v0_10002d64, 8
  %v1_10002d84 = urem i32 %fold6, 65536
  store i32 %v1_10002d84, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10002e08 = sext i8 %v5_10002bf8 to i32
  br label %dec_label_pc_10002dc0

dec_label_pc_10002d98:                            ; preds = %dec_label_pc_10002e78
  %v0_10002d98 = load i32, i32* %r29.global-to-local, align 4
  %v1_10002d98 = add i32 %v0_10002d98, 16
  %v2_10002d98 = inttoptr i32 %v1_10002d98 to i32*
  %v3_10002d98 = load i32, i32* %v2_10002d98, align 4
  store i32 %v3_10002d98, i32* %r0.global-to-local, align 4
  %v0_10002d9c = load i32, i32* @r28, align 4
  %v1_10002d9c = trunc i32 %v0_10002d9c to i16
  %v2_10002d9c = load i32, i32* %r30.global-to-local, align 4
  %v3_10002d9c = add i32 %v2_10002d9c, 4
  %v4_10002d9c = inttoptr i32 %v3_10002d9c to i16*
  store i16 %v1_10002d9c, i16* %v4_10002d9c, align 2
  %v0_10002da0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002da0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002da0 = add i32 %v1_10002da0, 16
  %v3_10002da0 = inttoptr i32 %v2_10002da0 to i32*
  store i32 %v0_10002da0, i32* %v3_10002da0, align 4
  %v0_10002da4 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002da4 = trunc i32 %v0_10002da4 to i16
  %v2_10002da4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002da4 = inttoptr i32 %v2_10002da4 to i16*
  store i16 %v1_10002da4, i16* %v3_10002da4, align 2
  %v3_10002da8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002da8, i32* %r9.global-to-local, align 4
  %v0_10002dac = load i32, i32* %r18.global-to-local, align 4
  %v1_10002dac = trunc i32 %v0_10002dac to i16
  %v2_10002dac = load i32, i32* %r30.global-to-local, align 4
  %v3_10002dac = add i32 %v2_10002dac, 2
  %v4_10002dac = inttoptr i32 %v3_10002dac to i16*
  store i16 %v1_10002dac, i16* %v4_10002dac, align 2
  %v0_10002db0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002db0 = add i32 %v0_10002db0, 1
  %v1_10002db4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002db4 = icmp slt i32 %v1_10002db0, %v1_10002db4
  %v4_10002db4 = icmp eq i32 %v1_10002db0, %v1_10002db4
  store i1 %v2_10002db4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002db4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002db0, i32* %stack_var_-120, align 4
  br i1 %v2_10002db4, label %dec_label_pc_10002dc0, label %dec_label_pc_10002eb8.preheader

dec_label_pc_10002dc0:                            ; preds = %dec_label_pc_10002d98, %dec_label_pc_10002e94, %dec_label_pc_10002d5c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447180, i32* @lr, align 4
  %v2_10002dc8 = call i32 @function_1000ae4c(i32 1510, i32 4)
  store i32 %v2_10002dc8, i32* %r3.global-to-local, align 4
  %v3_10002dcc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002dcc, i32* %r9.global-to-local, align 4
  %v0_10002dd0 = load i32, i32* @r31, align 4
  %v1_10002dd0 = mul i32 %v0_10002dd0, 4
  store i32 %v1_10002dd0, i32* %r0.global-to-local, align 4
  %v1_10002dd4 = load i32, i32* %r21.global-to-local, align 4
  %v3_10002dd4 = add i32 %v1_10002dd4, %v1_10002dd0
  %v4_10002dd4 = inttoptr i32 %v3_10002dd4 to i32*
  store i32 %v2_10002dc8, i32* %v4_10002dd4, align 4
  %v0_10002dd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002dd8 = mul i32 %v0_10002dd8, 4
  store i32 %v1_10002dd8, i32* %r9.global-to-local, align 4
  %v1_10002ddc = load i32, i32* %r21.global-to-local, align 4
  %v2_10002ddc = add i32 %v1_10002ddc, %v1_10002dd8
  %v3_10002ddc = inttoptr i32 %v2_10002ddc to i32*
  %v4_10002ddc = load i32, i32* %v3_10002ddc, align 4
  store i32 %v4_10002ddc, i32* %r29.global-to-local, align 4
  %v1_10002de0 = inttoptr i32 %v4_10002ddc to i32*
  %v2_10002de0 = load i32, i32* %v1_10002de0, align 4
  store i32 %v2_10002de0, i32* %r0.global-to-local, align 4
  %v1_10002de4 = add i32 %v4_10002ddc, 24
  store i32 %v1_10002de4, i32* %r31.global-to-local, align 4
  %v0_10002de8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002de8 = trunc i32 %v0_10002de8 to i8
  %v3_10002de8 = add i32 %v4_10002ddc, 8
  %v4_10002de8 = inttoptr i32 %v3_10002de8 to i8*
  store i8 %v1_10002de8, i8* %v4_10002de8, align 1
  %v0_10002dec = load i32, i32* %r29.global-to-local, align 4
  %v1_10002dec = add i32 %v0_10002dec, 44
  store i32 %v1_10002dec, i32* %r30.global-to-local, align 4
  %v1_10002df0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002df0, i32* %r0.global-to-local, align 4
  %v0_10002df4 = load i32, i32* @r25, align 4
  %v1_10002df4 = trunc i32 %v0_10002df4 to i16
  %v2_10002df4 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002df4 = add i32 %v2_10002df4, 4
  %v4_10002df4 = inttoptr i32 %v3_10002df4 to i16*
  store i16 %v1_10002df4, i16* %v4_10002df4, align 2
  %v1_10002df8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10002dfc = load i32, i32* %r29.global-to-local, align 4
  %v1_10002dfc = add i32 %v0_10002dfc, 20
  store i32 %v1_10002dfc, i32* %r9.global-to-local, align 4
  %v2_10002e00 = inttoptr i32 %v0_10002dfc to i32*
  store i32 %v1_10002df8, i32* %v2_10002e00, align 4
  %v0_10002e04 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e04 = trunc i32 %v0_10002e04 to i16
  %v2_10002e04 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002e04 = add i32 %v2_10002e04, 2
  %v4_10002e04 = inttoptr i32 %v3_10002e04 to i16*
  store i16 %v1_10002e04, i16* %v4_10002e04, align 2
  store i32 %v4_10002e08, i32* %r0.global-to-local, align 4
  %v2_10002e0c = load i32, i32* %r29.global-to-local, align 4
  %v3_10002e0c = add i32 %v2_10002e0c, 1
  %v4_10002e0c = inttoptr i32 %v3_10002e0c to i8*
  store i8 %v5_10002bf8, i8* %v4_10002e0c, align 1
  %v0_10002e10 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002e10, label %dec_label_pc_10002e1c, label %dec_label_pc_10002e14

dec_label_pc_10002e14:                            ; preds = %dec_label_pc_10002dc0
  %v2_10002e18 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002e18 = add i32 %v2_10002e18, 6
  %v4_10002e18 = inttoptr i32 %v3_10002e18 to i16*
  store i16 16384, i16* %v4_10002e18, align 2
  br label %dec_label_pc_10002e1c

dec_label_pc_10002e1c:                            ; preds = %dec_label_pc_10002dc0, %dec_label_pc_10002e14
  store i32 47, i32* %r11.global-to-local, align 4
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10002e24 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002e24 = add i32 %v2_10002e24, 9
  %v4_10002e24 = inttoptr i32 %v3_10002e24 to i8*
  store i8 47, i8* %v4_10002e24, align 1
  %v0_10002e28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002e28 = trunc i32 %v0_10002e28 to i16
  %v2_10002e28 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002e28 = add i32 %v2_10002e28, 2
  %v4_10002e28 = inttoptr i32 %v3_10002e28 to i16*
  store i16 %v1_10002e28, i16* %v4_10002e28, align 2
  %v3_10002e2c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e2c, i32* %r9.global-to-local, align 4
  %v0_10002e30 = load i32, i32* %r29.global-to-local, align 4
  %v1_10002e30 = add i32 %v0_10002e30, 24
  %v2_10002e30 = inttoptr i32 %v1_10002e30 to i32*
  %v3_10002e30 = load i32, i32* %v2_10002e30, align 4
  store i32 %v3_10002e30, i32* %r0.global-to-local, align 4
  %v1_10002e38 = mul i32 %v3_10002e2c, 24
  store i32 %v1_10002e38, i32* %r9.global-to-local, align 4
  %v1_10002e3c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e3c, i32* %r0.global-to-local, align 4
  %v1_10002e40 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002e40 = add i32 %v1_10002e40, 12
  %v3_10002e40 = inttoptr i32 %v2_10002e40 to i32*
  store i32 %v5_10002cd8, i32* %v3_10002e40, align 4
  %v0_10002e44 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e44 = load i32, i32* @r26, align 4
  %v2_10002e44 = add i32 %v1_10002e44, %v0_10002e44
  store i32 %v2_10002e44, i32* %r9.global-to-local, align 4
  %v1_10002e48 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002e48, i32* %r0.global-to-local, align 4
  %v0_10002e4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e4c = add i32 %v0_10002e4c, 16
  %v2_10002e4c = inttoptr i32 %v1_10002e4c to i32*
  %v3_10002e4c = load i32, i32* %v2_10002e4c, align 4
  store i32 %v3_10002e4c, i32* %r11.global-to-local, align 4
  %v1_10002e50 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002e50 = add i32 %v1_10002e50, 24
  %v3_10002e50 = inttoptr i32 %v2_10002e50 to i32*
  store i32 %v1_10002e48, i32* %v3_10002e50, align 4
  %v0_10002e54 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002e54 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002e54 = add i32 %v1_10002e54, 16
  %v3_10002e54 = inttoptr i32 %v2_10002e54 to i32*
  store i32 %v0_10002e54, i32* %v3_10002e54, align 4
  store i32 %v4_10002e08, i32* %r11.global-to-local, align 4
  %v0_10002e5c = load i32, i32* %r24.global-to-local, align 4
  %v1_10002e5c = trunc i32 %v0_10002e5c to i16
  %v2_10002e5c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e5c = add i32 %v2_10002e5c, 2
  %v4_10002e5c = inttoptr i32 %v3_10002e5c to i16*
  store i16 %v1_10002e5c, i16* %v4_10002e5c, align 2
  %v0_10002e60 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002e60 = trunc i32 %v0_10002e60 to i8
  %v2_10002e60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e60 = add i32 %v2_10002e60, 1
  %v4_10002e60 = inttoptr i32 %v3_10002e60 to i8*
  store i8 %v1_10002e60, i8* %v4_10002e60, align 1
  %v0_10002e64 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002e64 = trunc i32 %v0_10002e64 to i16
  %v2_10002e64 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e64 = add i32 %v2_10002e64, 4
  %v4_10002e64 = inttoptr i32 %v3_10002e64 to i16*
  store i16 %v1_10002e64, i16* %v4_10002e64, align 2
  %v0_10002e68 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002e68 = trunc i32 %v0_10002e68 to i8
  %v2_10002e68 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e68 = add i32 %v2_10002e68, 8
  %v4_10002e68 = inttoptr i32 %v3_10002e68 to i8*
  store i8 %v1_10002e68, i8* %v4_10002e68, align 1
  %v0_10002e6c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002e6c, label %dec_label_pc_10002e78, label %dec_label_pc_10002e70

dec_label_pc_10002e70:                            ; preds = %dec_label_pc_10002e1c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002e74 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e74 = add i32 %v2_10002e74, 6
  %v4_10002e74 = inttoptr i32 %v3_10002e74 to i16*
  store i16 16384, i16* %v4_10002e74, align 2
  br label %dec_label_pc_10002e78

dec_label_pc_10002e78:                            ; preds = %dec_label_pc_10002e1c, %dec_label_pc_10002e70
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10002e7c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e7c = add i32 %v2_10002e7c, 9
  %v4_10002e7c = inttoptr i32 %v3_10002e7c to i8*
  store i8 17, i8* %v4_10002e7c, align 1
  %v0_10002e80 = call i32 @function_10006dc0()
  store i32 %v0_10002e80, i32* %r3.global-to-local, align 4
  %v1_10002e84 = add i32 %v0_10002e80, -1024
  store i32 %v1_10002e84, i32* %r0.global-to-local, align 4
  %v1_10002e88 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e88 = add i32 %v1_10002e88, 12
  %v3_10002e88 = inttoptr i32 %v2_10002e88 to i32*
  store i32 %v0_10002e80, i32* %v3_10002e88, align 4
  %v0_10002e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10002e8c = sub i32 -1, %v0_10002e8c
  store i32 %v1_10002e8c, i32* %r0.global-to-local, align 4
  %v0_10002e90 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e90, label %dec_label_pc_10002e94, label %dec_label_pc_10002d98

dec_label_pc_10002e94:                            ; preds = %dec_label_pc_10002e78
  %v1_10002e94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e94 = add i32 %v1_10002e94, 16
  %v3_10002e94 = inttoptr i32 %v2_10002e94 to i32*
  store i32 %v1_10002e8c, i32* %v3_10002e94, align 4
  %v0_10002e98 = load i32, i32* @r28, align 4
  %v1_10002e98 = trunc i32 %v0_10002e98 to i16
  %v2_10002e98 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002e98 = add i32 %v2_10002e98, 4
  %v4_10002e98 = inttoptr i32 %v3_10002e98 to i16*
  store i16 %v1_10002e98, i16* %v4_10002e98, align 2
  %v3_10002e9c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e9c, i32* %r9.global-to-local, align 4
  %v0_10002ea0 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002ea0 = trunc i32 %v0_10002ea0 to i16
  %v2_10002ea0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002ea0 = inttoptr i32 %v2_10002ea0 to i16*
  store i16 %v1_10002ea0, i16* %v3_10002ea0, align 2
  %v0_10002ea4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ea4 = add i32 %v0_10002ea4, 1
  store i32 %v1_10002ea4, i32* @r31, align 4
  %v0_10002ea8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002ea8 = trunc i32 %v0_10002ea8 to i16
  %v2_10002ea8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002ea8 = add i32 %v2_10002ea8, 2
  %v4_10002ea8 = inttoptr i32 %v3_10002ea8 to i16*
  store i16 %v1_10002ea8, i16* %v4_10002ea8, align 2
  %v0_10002eac = load i32, i32* @r31, align 4
  %v1_10002eac = load i32, i32* %r20.global-to-local, align 4
  %v2_10002eac = icmp slt i32 %v0_10002eac, %v1_10002eac
  %v4_10002eac = icmp eq i32 %v0_10002eac, %v1_10002eac
  store i1 %v2_10002eac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002eac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10002eac, i32* %stack_var_-120, align 4
  br i1 %v2_10002eac, label %dec_label_pc_10002dc0, label %dec_label_pc_10002eb8.preheader

dec_label_pc_10002eb8.preheader:                  ; preds = %dec_label_pc_10002e94, %dec_label_pc_10002d98, %dec_label_pc_10002d30
  %v2_10002ec4 = urem i32 %v0_10002d40, 16
  %v1_10002ecc = mul nuw i32 %v2_10002ec4, 268435456
  %v3_10002ee8 = icmp eq i32 %v0_10002d50, 0
  %v3_10002eec = icmp eq i32 %v5_10002cd8, -1
  %v3_10002ef4 = icmp eq i32 %v1_10002ca8, 0
  br label %dec_label_pc_10002eb8

dec_label_pc_10002eb8:                            ; preds = %dec_label_pc_10002eb8.preheader, %dec_label_pc_10002fe4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_10002ec4, i32* %r0.global-to-local, align 4
  %v1_10002ec8 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10002ec4)
  store i32 %v1_10002ecc, i32* %r0.global-to-local, align 4
  %v0_10002ed0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10002ed0 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10002ed0 = or i1 %v0_10002ed0, %v1_10002ed0
  br i1 %v2_10002ed0, label %dec_label_pc_10002fe4, label %dec_label_pc_10002ed4

dec_label_pc_10002ed4:                            ; preds = %dec_label_pc_10002eb8
  store i32 %v0_10002d50, i32* %r0.global-to-local, align 4
  %v0_10002ed8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ed8 = add i32 %v0_10002ed8, 8
  store i32 %v1_10002ed8, i32* %r23.global-to-local, align 4
  %v1_10002ee0 = add i32 %v0_10002ed8, 52
  store i32 %v1_10002ee0, i32* @r24, align 4
  store i32 %v1_10002ca8, i32* %r11.global-to-local, align 4
  store i1 %v3_10002ee8, i1* %cr4_eq.global-to-local, align 1
  store i1 %v3_10002eec, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  store i1 %v3_10002ef4, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10002efc

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002f54, %dec_label_pc_10002ed4
  %v0_10002efc = phi i32 [ %v1_10002fd4, %dec_label_pc_10002f54 ], [ 0, %dec_label_pc_10002ed4 ]
  %v1_10002efc = mul i32 %v0_10002efc, 24
  store i32 %v1_10002efc, i32* %r0.global-to-local, align 4
  %v1_10002f00 = mul i32 %v0_10002efc, 4
  store i32 %v1_10002f00, i32* %r11.global-to-local, align 4
  %v1_10002f04 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002f04 = add i32 %v1_10002f04, %v1_10002f00
  %v3_10002f04 = inttoptr i32 %v2_10002f04 to i32*
  %v4_10002f04 = load i32, i32* %v3_10002f04, align 4
  store i32 %v4_10002f04, i32* @r28, align 4
  %v1_10002f08 = load i32, i32* @r26, align 4
  %v2_10002f08 = add i32 %v1_10002f08, %v1_10002efc
  %v1_10002f0c = add i32 %v2_10002f08, 20
  %v2_10002f0c = inttoptr i32 %v1_10002f0c to i8*
  %v3_10002f0c = load i8, i8* %v2_10002f0c, align 1
  %v4_10002f0c = zext i8 %v3_10002f0c to i32
  store i32 %v4_10002f0c, i32* %r9.global-to-local, align 4
  %v1_10002f10 = add i32 %v4_10002f04, 24
  store i32 %v1_10002f10, i32* @r27, align 4
  %v1_10002f14 = add i32 %v4_10002f04, 44
  store i32 %v1_10002f14, i32* @r31, align 4
  %v1_10002f18 = icmp ult i8 %v3_10002f0c, 31
  %v3_10002f18 = icmp eq i8 %v3_10002f0c, 31
  store i1 %v1_10002f18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002f18, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10002f0c, 32
  br i1 %tmp35, label %dec_label_pc_10003058, label %dec_label_pc_10002f20

dec_label_pc_10002f20:                            ; preds = %dec_label_pc_10002efc
  %v0_10002f20 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002f20, label %dec_label_pc_10003080, label %dec_label_pc_10002f24

dec_label_pc_10002f24:                            ; preds = %dec_label_pc_10003058, %dec_label_pc_10002f20
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002f2c = load i32, i32* @r25, align 4
  %v2_10002f2c = icmp slt i32 %v0_10002f2c, 65535
  %v4_10002f2c = icmp eq i32 %v0_10002f2c, 65535
  store i1 %v2_10002f2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002f2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f2c, label %dec_label_pc_10003098, label %dec_label_pc_10002f34

dec_label_pc_10002f34:                            ; preds = %dec_label_pc_10003080, %dec_label_pc_10002f24
  %v1_10002f34 = phi i32 [ %v1_10003090, %dec_label_pc_10003080 ], [ 65535, %dec_label_pc_10002f24 ]
  %v0_10002f34 = load i32, i32* %r17.global-to-local, align 4
  %v2_10002f34 = icmp slt i32 %v0_10002f34, %v1_10002f34
  %v4_10002f34 = icmp eq i32 %v0_10002f34, %v1_10002f34
  store i1 %v2_10002f34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002f34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f34, label %dec_label_pc_100030b8, label %dec_label_pc_10002f3c

dec_label_pc_10002f3c:                            ; preds = %dec_label_pc_10003098.dec_label_pc_10002f3c_crit_edge, %dec_label_pc_10002f34
  %v1_10002f3c = phi i32 [ %v1_10002f3c.pre, %dec_label_pc_10003098.dec_label_pc_10002f3c_crit_edge ], [ %v1_10002f34, %dec_label_pc_10002f34 ]
  %v0_10002f3c = load i32, i32* %r18.global-to-local, align 4
  %v2_10002f3c = icmp slt i32 %v0_10002f3c, %v1_10002f3c
  %v4_10002f3c = icmp eq i32 %v0_10002f3c, %v1_10002f3c
  store i1 %v2_10002f3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002f3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f3c, label %dec_label_pc_100030c8, label %dec_label_pc_10002f44

dec_label_pc_10002f44:                            ; preds = %dec_label_pc_100030b8, %dec_label_pc_10002f3c
  %v0_10002f44 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f44, label %dec_label_pc_100030d4, label %dec_label_pc_10002f48

dec_label_pc_10002f48:                            ; preds = %dec_label_pc_100030c8, %dec_label_pc_10002f44
  %v0_10002f48 = load i32, i32* @r28, align 4
  %v1_10002f48 = add i32 %v0_10002f48, 16
  %v2_10002f48 = inttoptr i32 %v1_10002f48 to i32*
  %v3_10002f48 = load i32, i32* %v2_10002f48, align 4
  store i32 %v3_10002f48, i32* %r0.global-to-local, align 4
  %v1_10002f4c = load i32, i32* @r27, align 4
  %v2_10002f4c = add i32 %v1_10002f4c, 16
  %v3_10002f4c = inttoptr i32 %v2_10002f4c to i32*
  store i32 %v3_10002f48, i32* %v3_10002f4c, align 4
  %v0_10002f50 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002f50, label %dec_label_pc_10002f54, label %dec_label_pc_100030e0

dec_label_pc_10002f54:                            ; preds = %dec_label_pc_10002f48, %dec_label_pc_100030d4, %dec_label_pc_100030e0
  %v0_10002f54 = load i32, i32* @r30, align 4
  %v1_10002f54 = trunc i32 %v0_10002f54 to i16
  %v2_10002f54 = load i32, i32* @r28, align 4
  %v3_10002f54 = add i32 %v2_10002f54, 10
  %v4_10002f54 = inttoptr i32 %v3_10002f54 to i16*
  store i16 %v1_10002f54, i16* %v4_10002f54, align 2
  %v0_10002f5c = load i32, i32* @r28, align 4
  store i32 %v0_10002f5c, i32* @r3, align 4
  %v2_10002f60 = call i32 @function_10005814(i32 %v0_10002f5c, i32 20)
  %v3_10002f60 = trunc i32 %v2_10002f60 to i16
  %v3_10002f68 = load i32, i32* @r28, align 4
  %v4_10002f68 = add i32 %v3_10002f68, 10
  %v5_10002f68 = inttoptr i32 %v4_10002f68 to i16*
  store i16 %v3_10002f60, i16* %v5_10002f68, align 2
  %v0_10002f6c = load i32, i32* @r27, align 4
  store i32 %v0_10002f6c, i32* @r3, align 4
  %v0_10002f70 = load i32, i32* @r30, align 4
  %v1_10002f70 = trunc i32 %v0_10002f70 to i16
  %v3_10002f70 = add i32 %v0_10002f6c, 10
  %v4_10002f70 = inttoptr i32 %v3_10002f70 to i16*
  store i16 %v1_10002f70, i16* %v4_10002f70, align 2
  %v2_10002f74 = call i32 @function_10005814(i32 %v0_10002f6c, i32 20)
  %v3_10002f74 = trunc i32 %v2_10002f74 to i16
  %v0_10002f78 = load i32, i32* @r31, align 4
  store i32 %v0_10002f78, i32* @r4, align 4
  %v3_10002f7c = load i32, i32* @r27, align 4
  %v4_10002f7c = add i32 %v3_10002f7c, 10
  %v5_10002f7c = inttoptr i32 %v4_10002f7c to i16*
  store i16 %v3_10002f74, i16* %v5_10002f7c, align 2
  %v0_10002f80 = load i32, i32* %r23.global-to-local, align 4
  %v0_10002f84 = load i32, i32* @r30, align 4
  %v1_10002f84 = trunc i32 %v0_10002f84 to i16
  %v2_10002f84 = load i32, i32* @r31, align 4
  %v3_10002f84 = add i32 %v2_10002f84, 6
  %v4_10002f84 = inttoptr i32 %v3_10002f84 to i16*
  store i16 %v1_10002f84, i16* %v4_10002f84, align 2
  %v0_10002f88 = load i32, i32* @r27, align 4
  store i32 %v0_10002f88, i32* %r3.global-to-local, align 4
  %v0_10002f8c = load i32, i32* @r31, align 4
  %v1_10002f8c = add i32 %v0_10002f8c, 4
  %v2_10002f8c = inttoptr i32 %v1_10002f8c to i16*
  %v3_10002f8c = load i16, i16* %v2_10002f8c, align 2
  %v4_10002f8c = zext i16 %v3_10002f8c to i32
  %v4_10002f90 = call i32 @function_10005878(i32 %v0_10002f88, i32 %v0_10002f78, i32 %v4_10002f8c, i32 %v0_10002f80)
  %v5_10002f90 = trunc i32 %v4_10002f90 to i16
  store i32 %v4_10002f90, i32* %r3.global-to-local, align 4
  %v3_10002f94 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002f94, i32* %r0.global-to-local, align 4
  %v0_10002f98 = load i32, i32* @r28, align 4
  %v1_10002f98 = add i32 %v0_10002f98, 16
  %v2_10002f98 = inttoptr i32 %v1_10002f98 to i32*
  %v3_10002f98 = load i32, i32* %v2_10002f98, align 4
  store i32 %v3_10002f98, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002fa0 = mul i32 %v3_10002f94, 24
  store i32 %v1_10002fa0, i32* %r0.global-to-local, align 4
  %v3_10002fa4 = load i32, i32* @r31, align 4
  %v4_10002fa4 = add i32 %v3_10002fa4, 6
  %v5_10002fa4 = inttoptr i32 %v4_10002fa4 to i16*
  store i16 %v5_10002f90, i16* %v5_10002fa4, align 2
  %v0_10002fa8 = load i32, i32* @r28, align 4
  %v0_10002fac = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002fac, i32* %r3.global-to-local, align 4
  %v0_10002fb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fb0 = load i32, i32* @r26, align 4
  %v2_10002fb0 = add i32 %v1_10002fb0, %v0_10002fb0
  %v0_10002fb4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fb4 = trunc i32 %v0_10002fb4 to i16
  %v5_10002fb4 = inttoptr i32 %v2_10002fb0 to i16*
  store i16 %v3_10002fb4, i16* %v5_10002fb4, align 2
  %v0_10002fb8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002fb8 = add i32 %v2_10002fb0, 4
  %v3_10002fb8 = inttoptr i32 %v2_10002fb8 to i32*
  store i32 %v0_10002fb8, i32* %v3_10002fb8, align 4
  %v0_10002fbc = load i32, i32* @r24, align 4
  %v0_10002fc0 = load i32, i32* @r30, align 4
  %v1_10002fc0 = trunc i32 %v0_10002fc0 to i16
  %v3_10002fc0 = add i32 %v2_10002fb0, 2
  %v4_10002fc0 = inttoptr i32 %v3_10002fc0 to i16*
  store i16 %v1_10002fc0, i16* %v4_10002fc0, align 2
  store i32 268447696, i32* @lr, align 4
  %v6_10002fcc = call i32 @function_1000aa74(i32 %v0_10002fac, i32 %v0_10002fa8, i32 %v0_10002fbc, i32 16384, i32 %v2_10002fb0, i32 16)
  store i32 %v6_10002fcc, i32* %r3.global-to-local, align 4
  %v3_10002fd0 = load i32, i32* %stack_var_-120, align 4
  %v1_10002fd4 = add i32 %v3_10002fd0, 1
  store i32 %v1_10002fd4, i32* %r9.global-to-local, align 4
  %v1_10002fd8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002fd8 = icmp slt i32 %v1_10002fd4, %v1_10002fd8
  %v4_10002fd8 = icmp eq i32 %v1_10002fd4, %v1_10002fd8
  store i1 %v2_10002fd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002fd8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002fd4, i32* %stack_var_-120, align 4
  br i1 %v2_10002fd8, label %dec_label_pc_10002efc, label %dec_label_pc_10002fe4

dec_label_pc_10002fe4:                            ; preds = %dec_label_pc_10002f54, %dec_label_pc_10002eb8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447724, i32* @lr, align 4
  %v0_10002fe8 = call i32 @function_1000a1b8()
  store i32 %v0_10002fe8, i32* %r3.global-to-local, align 4
  store i32 %v2_10002cec, i32* %r0.global-to-local, align 4
  %v2_10002ff0 = icmp slt i32 %v2_10002cec, %v0_10002fe8
  %v4_10002ff0 = icmp eq i32 %v2_10002cec, %v0_10002fe8
  store i1 %v2_10002ff0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002ff0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10002ff0, label %dec_label_pc_10002ff8, label %dec_label_pc_10002eb8

dec_label_pc_10002ff8:                            ; preds = %dec_label_pc_10002fe4, %dec_label_pc_10002b50, %dec_label_pc_100030fc
  store i32 %v0_10002b7c, i32* %r0.global-to-local, align 4
  %v1_1000300c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002b58)
  store i32 %v0_10002b98, i32* %r24.global-to-local, align 4
  store i32 %v0_10002b9c, i32* %r25.global-to-local, align 4
  store i32 %v0_10002b6c, i32* %r27.global-to-local, align 4
  store i32 %v0_10002bb0, i32* %r29.global-to-local, align 4
  store i32 %v0_10002bb8, i32* %r30.global-to-local, align 4
  store i32 %v0_10002bbc, i32* %r31.global-to-local, align 4
  %v0_10003054 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003054

dec_label_pc_10003058:                            ; preds = %dec_label_pc_10002efc
  %v1_10003058 = add i32 %v2_10002f08, 16
  %v2_10003058 = inttoptr i32 %v1_10003058 to i32*
  %v3_10003058 = load i32, i32* %v2_10003058, align 4
  store i32 %v3_10003058, i32* %r29.global-to-local, align 4
  %v0_1000305c = call i32 @function_10006dc0()
  store i32 %v0_1000305c, i32* %r3.global-to-local, align 4
  %v3_10003060 = load i32, i32* %stack_var_-120, align 4
  %v1_10003064 = mul i32 %v3_10003060, 24
  %v1_10003068 = load i32, i32* @r26, align 4
  %v2_10003068 = add i32 %v1_10003068, %v1_10003064
  store i32 %v2_10003068, i32* %r9.global-to-local, align 4
  %v1_1000306c = add i32 %v2_10003068, 20
  %v2_1000306c = inttoptr i32 %v1_1000306c to i8*
  %v3_1000306c = load i8, i8* %v2_1000306c, align 1
  %v4_1000306c = zext i8 %v3_1000306c to i32
  store i32 %v4_1000306c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000306c, 64
  %v2_10003070 = zext i8 %tmp to i32
  %v3_10003070 = lshr i32 %v0_1000305c, %v2_10003070
  store i32 %v3_10003070, i32* %r3.global-to-local, align 4
  %v0_10003074 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003074 = add i32 %v3_10003070, %v0_10003074
  store i32 %v2_10003074, i32* %r29.global-to-local, align 4
  %v1_10003078 = load i32, i32* @r28, align 4
  %v2_10003078 = add i32 %v1_10003078, 16
  %v3_10003078 = inttoptr i32 %v2_10003078 to i32*
  store i32 %v2_10003074, i32* %v3_10003078, align 4
  %v0_1000307c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000307c, label %dec_label_pc_10003080, label %dec_label_pc_10002f24

dec_label_pc_10003080:                            ; preds = %dec_label_pc_10003058, %dec_label_pc_10002f20
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003084 = call i32 @function_10006dc0()
  store i32 %v0_10003084, i32* %r3.global-to-local, align 4
  %v0_10003088 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003088 = or i32 %v0_10003088, 65535
  store i32 %v1_10003088, i32* %r29.global-to-local, align 4
  %v1_1000308c = load i32, i32* @r28, align 4
  %v2_1000308c = add i32 %v1_1000308c, 12
  %v3_1000308c = inttoptr i32 %v2_1000308c to i32*
  store i32 %v0_10003084, i32* %v3_1000308c, align 4
  %v0_10003090 = load i32, i32* @r25, align 4
  %v1_10003090 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003090 = icmp slt i32 %v0_10003090, %v1_10003090
  %v4_10003090 = icmp eq i32 %v0_10003090, %v1_10003090
  store i1 %v2_10003090, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003090, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003090, label %dec_label_pc_10003098, label %dec_label_pc_10002f34

dec_label_pc_10003098:                            ; preds = %dec_label_pc_10003080, %dec_label_pc_10002f24
  %v0_10003098 = call i32 @function_10006dc0()
  %v0_1000309c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000309c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000309c = icmp slt i32 %v0_1000309c, %v1_1000309c
  %v4_1000309c = icmp eq i32 %v0_1000309c, %v1_1000309c
  store i1 %v2_1000309c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000309c, i1* %cr7_eq.global-to-local, align 1
  %v1_100030a0 = urem i32 %v0_10003098, 65536
  store i32 %v1_100030a0, i32* %r3.global-to-local, align 4
  %v1_100030a4 = add nsw i32 %v1_100030a0, -1000
  store i32 %v1_100030a4, i32* %r0.global-to-local, align 4
  %v1_100030a8 = trunc i32 %v0_10003098 to i16
  %v2_100030a8 = load i32, i32* @r28, align 4
  %v3_100030a8 = add i32 %v2_100030a8, 4
  %v4_100030a8 = inttoptr i32 %v3_100030a8 to i16*
  store i16 %v1_100030a8, i16* %v4_100030a8, align 2
  %v0_100030ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100030ac = sub i32 -1, %v0_100030ac
  store i32 %v1_100030ac, i32* %r0.global-to-local, align 4
  %v1_100030b0 = trunc i32 %v1_100030ac to i16
  %v2_100030b0 = load i32, i32* @r27, align 4
  %v3_100030b0 = add i32 %v2_100030b0, 4
  %v4_100030b0 = inttoptr i32 %v3_100030b0 to i16*
  store i16 %v1_100030b0, i16* %v4_100030b0, align 2
  br i1 %v4_1000309c, label %dec_label_pc_100030b8, label %dec_label_pc_10003098.dec_label_pc_10002f3c_crit_edge

dec_label_pc_10003098.dec_label_pc_10002f3c_crit_edge: ; preds = %dec_label_pc_10003098
  %v1_10002f3c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002f3c

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_10003098, %dec_label_pc_10002f34
  %v0_100030b8 = call i32 @function_10006dc0()
  %v1_100030b8 = trunc i32 %v0_100030b8 to i16
  store i32 %v0_100030b8, i32* %r3.global-to-local, align 4
  %v0_100030bc = load i32, i32* %r18.global-to-local, align 4
  %v1_100030bc = load i32, i32* %r29.global-to-local, align 4
  %v2_100030bc = icmp slt i32 %v0_100030bc, %v1_100030bc
  %v4_100030bc = icmp eq i32 %v0_100030bc, %v1_100030bc
  store i1 %v2_100030bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100030bc, i1* %cr7_eq.global-to-local, align 1
  %v3_100030c0 = load i32, i32* @r28, align 4
  %v4_100030c0 = add i32 %v3_100030c0, 44
  %v5_100030c0 = inttoptr i32 %v4_100030c0 to i16*
  store i16 %v1_100030b8, i16* %v5_100030c0, align 2
  br i1 %v4_100030bc, label %dec_label_pc_100030c8, label %dec_label_pc_10002f44

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030b8, %dec_label_pc_10002f3c
  %v0_100030c8 = call i32 @function_10006dc0()
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  %v3_100030cc = load i32, i32* @r31, align 4
  %v4_100030cc = add i32 %v3_100030cc, 2
  %v5_100030cc = inttoptr i32 %v4_100030cc to i16*
  store i16 %v1_100030c8, i16* %v5_100030cc, align 2
  %v0_100030d0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100030d0, label %dec_label_pc_100030d4, label %dec_label_pc_10002f48

dec_label_pc_100030d4:                            ; preds = %dec_label_pc_100030c8, %dec_label_pc_10002f44
  %v0_100030d4 = call i32 @function_10006dc0()
  store i32 %v0_100030d4, i32* %r3.global-to-local, align 4
  %v1_100030d8 = load i32, i32* @r27, align 4
  %v2_100030d8 = add i32 %v1_100030d8, 16
  %v3_100030d8 = inttoptr i32 %v2_100030d8 to i32*
  store i32 %v0_100030d4, i32* %v3_100030d8, align 4
  %v0_100030dc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100030dc, label %dec_label_pc_10002f54, label %dec_label_pc_100030e0

dec_label_pc_100030e0:                            ; preds = %dec_label_pc_10002f48, %dec_label_pc_100030d4
  %v0_100030e0 = load i32, i32* @r31, align 4
  %v1_100030e0 = add i32 %v0_100030e0, 8
  store i32 %v1_100030e0, i32* @r29, align 4
  %v0_100030e4 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_100030e4, i32* @r4, align 4
  store i32 %v1_100030e0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100030f0.63 to i32), i32* @lr, align 4
  %v0_100030ec = call i32 @function_10006e80()
  store i32 %v0_100030ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100030f4 = load i32, i32* @r29, align 4
  %v2_100030f4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100030f4 = add i32 %v2_100030f4, %v1_100030f4
  %v5_100030f4 = inttoptr i32 %v4_100030f4 to i8*
  store i8 0, i8* %v5_100030f4, align 1
  br label %dec_label_pc_10002f54

dec_label_pc_100030fc:                            ; preds = %dec_label_pc_10002d0c
  %v0_100030fc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100030fc, i32* %r3.global-to-local, align 4
  store i32 268448004, i32* @lr, align 4
  %v0_10003100 = call i32 @function_10009de8()
  store i32 %v0_10003100, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002ff8

; uselistorder directives
  uselistorder i32 %v0_100030c8, { 1, 0 }
  uselistorder i32 %v0_100030b8, { 1, 0 }
  uselistorder i32 %v1_100030ac, { 1, 0 }
  uselistorder i32 %v1_100030a0, { 1, 0 }
  uselistorder i32 %v0_10003098, { 1, 0 }
  uselistorder i32 %v1_10003090, { 1, 2, 0 }
  uselistorder i32 %v0_10002fe8, { 1, 0, 2 }
  uselistorder i32 %v1_10002fd4, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002fb0, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002f90, { 1, 0 }
  uselistorder i32 %v1_10002f3c, { 1, 0 }
  uselistorder i32 %v1_10002f34, { 0, 2, 1 }
  uselistorder i32 %v4_10002f04, { 1, 0, 2 }
  uselistorder i32 %v1_10002f00, { 1, 0 }
  uselistorder i32 %v2_10002ec4, { 2, 1, 0 }
  uselistorder i32 %v1_10002e8c, { 1, 0 }
  uselistorder i32 %v1_10002dd8, { 1, 0 }
  uselistorder i32 %v1_10002dd0, { 1, 0 }
  uselistorder i32 %v1_10002db0, { 0, 2, 1 }
  uselistorder i32 %v1_10002d64, { 1, 0 }
  uselistorder i32 %v0_10002d64, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10002d50, { 2, 0, 1 }
  uselistorder i32 %v5_10002d24, { 1, 0, 2 }
  uselistorder i32 %v3_10002cfc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002cec, { 1, 2, 0 }
  uselistorder i32 %v5_10002cd8, { 1, 0 }
  uselistorder i8 %v5_10002bf8, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 8, 9, 20, 21 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 4, 5, 6, 9, 7, 8, 10, 2, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 1 }
  uselistorder i32* %r29.global-to-local, { 9, 8, 10, 0, 1, 3, 4, 2, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 15, 16, 31, 32, 33, 34, 35 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i8 47, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100030e0, { 1, 0 }
  uselistorder label %dec_label_pc_10002ff8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002f54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10002e78, { 1, 0 }
  uselistorder label %dec_label_pc_10002e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10002dc0, { 1, 0, 2 }
}

define i32 @function_10003108(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10003108:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i16 @__decompiler_undefined_function_2()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %v0_1000310c = load i32, i32* @lr, align 4
  store i32 %v0_1000310c, i32* %r0.global-to-local, align 4
  %v0_10003110 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r21.global-to-local, align 4
  %v0_1000311c = load i32, i32* @r25, align 4
  %v0_10003124 = load i32, i32* @r27, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 %v0_10003110, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10003134 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r22.global-to-local, align 4
  %v0_10003168 = load i32, i32* @r26, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10003174 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 0, i32* %stack_var_-424, align 4
  store i32 268448140, i32* @lr, align 4
  %v2_10003188 = call i32 @function_1000ae4c(i32 %arg2, i32 16)
  store i32 %v2_10003188, i32* %r19.global-to-local, align 4
  %v0_10003194 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003194, i32* %r3.global-to-local, align 4
  store i32 268448156, i32* @lr, align 4
  %v2_10003198 = call i32 @function_1000ae4c(i32 %v0_10003194, i32 4)
  %v0_1000319c = load i32, i32* @r28, align 4
  store i32 %v2_10003198, i32* %r20.global-to-local, align 4
  %v0_100031ac = load i32, i32* @r29, align 4
  store i32 %v0_100031ac, i32* %r3.global-to-local, align 4
  store i32 268448180, i32* @lr, align 4
  %v4_100031b0 = inttoptr i32 %v0_1000319c to i32*
  %v5_100031b0 = call i32 @function_10001e18(i32 %v0_100031ac, i32* %v4_100031b0, i32 2, i32 0)
  %v5_100031c0 = trunc i32 %v5_100031b0 to i8
  %v0_100031c8 = load i32, i32* @r28, align 4
  %v0_100031cc = load i32, i32* @r29, align 4
  store i32 %v0_100031cc, i32* %r3.global-to-local, align 4
  store i32 268448212, i32* @lr, align 4
  %v4_100031d0 = inttoptr i32 %v0_100031c8 to i32*
  %v5_100031d0 = call i32 @function_10001e18(i32 %v0_100031cc, i32* %v4_100031d0, i32 3, i32 65535)
  %v0_100031d4 = load i32, i32* @r28, align 4
  store i32 %v5_100031d0, i32* %r26.global-to-local, align 4
  %v0_100031e4 = load i32, i32* @r29, align 4
  store i32 %v0_100031e4, i32* %r3.global-to-local, align 4
  store i32 268448236, i32* @lr, align 4
  %v4_100031e8 = inttoptr i32 %v0_100031d4 to i32*
  %v5_100031e8 = call i32 @function_10001e18(i32 %v0_100031e4, i32* %v4_100031e8, i32 4, i32 64)
  %v0_100031ec = load i32, i32* @r28, align 4
  %v0_10003200 = load i32, i32* @r29, align 4
  store i32 %v0_10003200, i32* %r3.global-to-local, align 4
  store i32 268448264, i32* @lr, align 4
  %v4_10003204 = inttoptr i32 %v0_100031ec to i32*
  %v5_10003204 = call i32 @function_10001e18(i32 %v0_10003200, i32* %v4_10003204, i32 5, i32 1)
  %v1_1000320c = urem i32 %v5_10003204, 256
  %v0_10003218 = load i32, i32* @r28, align 4
  %v0_10003220 = load i32, i32* @r29, align 4
  store i32 %v0_10003220, i32* %r3.global-to-local, align 4
  store i32 268448296, i32* @lr, align 4
  %v4_10003224 = inttoptr i32 %v0_10003218 to i32*
  %v5_10003224 = call i32 @function_10001e18(i32 %v0_10003220, i32* %v4_10003224, i32 7, i32 65535)
  %v0_10003228 = load i32, i32* @r28, align 4
  %v1_10003234 = urem i32 %v5_10003224, 65536
  store i32 %v1_10003234, i32* @r24, align 4
  %v0_10003238 = load i32, i32* @r29, align 4
  store i32 %v0_10003238, i32* %r3.global-to-local, align 4
  store i32 268448320, i32* @lr, align 4
  %v4_1000323c = inttoptr i32 %v0_10003228 to i32*
  %v5_1000323c = call i32 @function_10001e18(i32 %v0_10003238, i32* %v4_1000323c, i32 10, i32 0)
  %v0_10003240 = load i32, i32* @r28, align 4
  %v1_10003244 = urem i32 %v5_1000323c, 256
  %v0_10003254 = load i32, i32* @r29, align 4
  store i32 %v0_10003254, i32* %r3.global-to-local, align 4
  store i32 268448348, i32* @lr, align 4
  %v4_10003258 = inttoptr i32 %v0_10003240 to i32*
  %v5_10003258 = call i32 @function_10001e18(i32 %v0_10003254, i32* %v4_10003258, i32 11, i32 1)
  %v0_1000325c = load i32, i32* @r28, align 4
  %v1_10003260 = urem i32 %v5_10003258, 256
  %v0_10003270 = load i32, i32* @r29, align 4
  store i32 %v0_10003270, i32* %r3.global-to-local, align 4
  store i32 268448376, i32* @lr, align 4
  %v4_10003274 = inttoptr i32 %v0_1000325c to i32*
  %v5_10003274 = call i32 @function_10001e18(i32 %v0_10003270, i32* %v4_10003274, i32 12, i32 1)
  %v0_10003278 = load i32, i32* @r28, align 4
  %v1_10003284 = urem i32 %v5_10003274, 256
  %v0_10003288 = load i32, i32* @r29, align 4
  store i32 %v0_10003288, i32* %r3.global-to-local, align 4
  store i32 268448400, i32* @lr, align 4
  %v4_1000328c = inttoptr i32 %v0_10003278 to i32*
  %v5_1000328c = call i32 @function_10001e18(i32 %v0_10003288, i32* %v4_1000328c, i32 13, i32 0)
  %v0_10003290 = load i32, i32* @r28, align 4
  %v1_1000329c = urem i32 %v5_1000328c, 256
  %v0_100032a0 = load i32, i32* @r29, align 4
  store i32 %v0_100032a0, i32* %r3.global-to-local, align 4
  store i32 268448424, i32* @lr, align 4
  %v4_100032a4 = inttoptr i32 %v0_10003290 to i32*
  %v5_100032a4 = call i32 @function_10001e18(i32 %v0_100032a0, i32* %v4_100032a4, i32 14, i32 0)
  %v0_100032a8 = load i32, i32* @r28, align 4
  %v1_100032b4 = urem i32 %v5_100032a4, 256
  store i32 %v1_100032b4, i32* %r18.global-to-local, align 4
  %v0_100032b8 = load i32, i32* @r29, align 4
  store i32 %v0_100032b8, i32* %r3.global-to-local, align 4
  store i32 268448448, i32* @lr, align 4
  %v4_100032bc = inttoptr i32 %v0_100032a8 to i32*
  %v5_100032bc = call i32 @function_10001e18(i32 %v0_100032b8, i32* %v4_100032bc, i32 15, i32 0)
  %v0_100032c8 = load i32, i32* @r28, align 4
  %v1_100032cc = urem i32 %v5_100032bc, 256
  store i32 %v1_100032cc, i32* %r23.global-to-local, align 4
  %v0_100032d0 = load i32, i32* @r29, align 4
  store i32 %v0_100032d0, i32* %r3.global-to-local, align 4
  store i32 268448472, i32* @lr, align 4
  %v4_100032d4 = inttoptr i32 %v0_100032c8 to i32*
  %v5_100032d4 = call i32 @function_10001e18(i32 %v0_100032d0, i32* %v4_100032d4, i32 0, i32 768)
  %v0_100032d8 = load i32, i32* @r28, align 4
  store i32 %v5_100032d4, i32* @r30, align 4
  %v0_100032e8 = load i32, i32* @r29, align 4
  store i32 %v0_100032e8, i32* %r3.global-to-local, align 4
  store i32 268448496, i32* @lr, align 4
  %v4_100032ec = inttoptr i32 %v0_100032d8 to i32*
  %v5_100032ec = call i32 @function_10001e18(i32 %v0_100032e8, i32* %v4_100032ec, i32 1, i32 1)
  %v1_100032f0 = urem i32 %v5_100032ec, 256
  store i32 %v1_100032f0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448508, i32* @lr, align 4
  %v0_100032f8 = call i32 @function_1000a1b8()
  %v1_10003300 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003300 = add i32 %v1_10003300, %v0_100032f8
  store i32 %v2_10003300, i32* %r17.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448528, i32* @lr, align 4
  %v3_1000330c = call i32 @function_1000aaf0(i32 2, i32 3, i32 6)
  store i32 %v3_1000330c, i32* %r3.global-to-local, align 4
  %v3_10003310 = icmp eq i32 %v3_1000330c, -1
  store i1 %v3_10003310, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000330c, i32* @r31, align 4
  br i1 %v3_10003310, label %dec_label_pc_100035c4, label %dec_label_pc_1000331c

dec_label_pc_1000331c:                            ; preds = %dec_label_pc_10003108
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003328 = ptrtoint i32* %stack_var_-424 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-424, align 4
  store i32 268448568, i32* @lr, align 4
  %v5_10003334 = call i32 @function_1000aab4(i32 0, i32 3, i32 %v2_10003328, i32 4, i32 4)
  store i32 %v5_10003334, i32* %r3.global-to-local, align 4
  %v3_10003338 = icmp eq i32 %v5_10003334, -1
  store i1 %v3_10003338, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003338, label %dec_label_pc_100035bc, label %dec_label_pc_10003340

dec_label_pc_10003340:                            ; preds = %dec_label_pc_1000331c
  %v0_10003340 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003340 = icmp slt i32 %v0_10003340, 0
  %v3_10003340 = icmp eq i32 %v0_10003340, 0
  store i1 %v1_10003340, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10003340, i1* %cr2_eq.global-to-local, align 1
  %v0_10003344 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003344 = urem i32 %v0_10003344, 65536
  store i32 %v1_10003344, i32* %r26.global-to-local, align 4
  %v0_10003348 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003348, i32* %stack_var_-424, align 4
  %v5_1000334c = trunc i32 %v0_10003344 to i16
  %tmp48 = icmp slt i32 %v0_10003340, 1
  br i1 %tmp48, label %dec_label_pc_10003340.dec_label_pc_100034a4.preheader_crit_edge, label %dec_label_pc_10003354

dec_label_pc_10003340.dec_label_pc_100034a4.preheader_crit_edge: ; preds = %dec_label_pc_10003340
  %.pre = sext i16 %v5_1000334c to i32
  br label %dec_label_pc_100034a4.preheader

dec_label_pc_10003354:                            ; preds = %dec_label_pc_10003340
  %v2_10003358 = ptrtoint i32* %stack_var_-400 to i32
  %v2_10003360 = ptrtoint i32* %stack_var_-384 to i32
  %v0_10003364 = load i32, i32* @r24, align 4
  %v4_10003364 = icmp eq i32 %v0_10003364, 65535
  store i1 %v4_10003364, i1* %cr4_eq.global-to-local, align 1
  %v0_10003368 = load i32, i32* @r30, align 4
  %v1_10003368 = add i32 %v0_10003368, 40
  store i32 %v1_10003368, i32* %r0.global-to-local, align 4
  %v5_1000336c = trunc i32 %v1_10003368 to i16
  %v2_10003370 = ptrtoint i32* %stack_var_-420 to i32
  %v4_1000344c = zext i16 %tmp10 to i32
  %v1_100035a0 = and i32 %tmp9, 1179648
  %v1_100035a4 = and i32 %tmp9, 327680
  %v3_100035a4 = icmp eq i32 %v1_100035a4, 0
  %v3_100036d4 = icmp eq i32 %v1_1000320c, 0
  %v4_100036f0 = sext i16 %v5_1000334c to i32
  %sext = mul i32 %v5_100031e8, 16777216
  %v4_10003704 = sdiv i32 %sext, 16777216
  %v4_100035ac = icmp eq i32 %v1_100035a0, 1179648
  br label %dec_label_pc_10003374

dec_label_pc_10003374:                            ; preds = %dec_label_pc_10003490, %dec_label_pc_10003354
  %stack_var_-120.0 = phi i32 [ %tmp, %dec_label_pc_10003354 ], [ %stack_var_-120.1, %dec_label_pc_10003490 ]
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448644, i32* @lr, align 4
  %v3_10003380 = call i32 @function_1000aaf0(i32 2, i32 1, i32 0)
  store i32 %v3_10003380, i32* %r3.global-to-local, align 4
  %v3_10003384 = icmp eq i32 %v3_10003380, -1
  store i1 %v3_10003384, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003380, i32* @r28, align 4
  br i1 %v3_10003384, label %dec_label_pc_10003490, label %dec_label_pc_10003390

dec_label_pc_10003390:                            ; preds = %dec_label_pc_10003374, %dec_label_pc_1000346c
  store i32 3, i32* @r4, align 4
  store i32 268448672, i32* @lr, align 4
  %v1_1000339c = call i32 @function_10009d00(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100033a8 = load i32, i32* @r28, align 4
  store i32 %v0_100033a8, i32* %r3.global-to-local, align 4
  store i32 268448692, i32* @lr, align 4
  %v2_100033b0 = call i32 @function_10009d00(i32 %v0_100033a8)
  store i32 %v2_100033b0, i32* %r3.global-to-local, align 4
  %v3_100033b4 = load i32, i32* %stack_var_-424, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_100033bc = mul i32 %v3_100033b4, 24
  store i32 %v1_100033bc, i32* %r0.global-to-local, align 4
  %v0_100033c4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100033c4 = add i32 %v0_100033c4, %v1_100033bc
  store i32 %v2_100033c4, i32* %r11.global-to-local, align 4
  %v1_100033c8 = add i32 %v2_100033c4, 20
  %v2_100033c8 = inttoptr i32 %v1_100033c8 to i8*
  %v3_100033c8 = load i8, i8* %v2_100033c8, align 1
  %v4_100033c8 = zext i8 %v3_100033c8 to i32
  store i32 %v4_100033c8, i32* %r9.global-to-local, align 4
  %v3_100033cc = icmp eq i8 %v3_100033c8, 31
  store i1 %v3_100033cc, i1* %cr7_eq.global-to-local, align 1
  %tmp49 = icmp ult i8 %v3_100033c8, 32
  %v1_10003624 = add i32 %v2_100033c4, 16
  %v2_10003624 = inttoptr i32 %v1_10003624 to i32*
  %v3_10003624 = load i32, i32* %v2_10003624, align 4
  br i1 %tmp49, label %dec_label_pc_10003624, label %dec_label_pc_100033d4

dec_label_pc_100033d4:                            ; preds = %dec_label_pc_10003390
  store i32 %v3_10003624, i32* %r0.global-to-local, align 4
  %v0_100033dc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100033dc, label %dec_label_pc_1000364c, label %dec_label_pc_100033e0

dec_label_pc_100033e0:                            ; preds = %dec_label_pc_10003624, %dec_label_pc_100033d4
  %stack_var_-412.0 = phi i32 [ %v2_10003640, %dec_label_pc_10003624 ], [ %v3_10003624, %dec_label_pc_100033d4 ]
  %v0_100033e0 = load i32, i32* @r24, align 4
  %v1_100033e0 = trunc i32 %v0_100033e0 to i16
  br label %dec_label_pc_100033e4

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_1000364c, %dec_label_pc_100033e0
  %stack_var_-412.1 = phi i32 [ %stack_var_-412.2, %dec_label_pc_1000364c ], [ %stack_var_-412.0, %dec_label_pc_100033e0 ]
  %storemerge = phi i16 [ %v1_1000364c, %dec_label_pc_1000364c ], [ %v1_100033e0, %dec_label_pc_100033e0 ]
  %v0_100033ec = load i32, i32* @r28, align 4
  store i32 %v0_100033ec, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100033f4.64 to i32), i32* @lr, align 4
  %v0_100033f0 = call i32 @function_1000a8f0()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448764, i32* @lr, align 4
  %v0_100033f8 = call i32 @function_1000a1b8()
  store i32 %v0_100033f8, i32* %r3.global-to-local, align 4
  store i32 %v0_100033f8, i32* %r29.global-to-local, align 4
  %v4_10003440 = icmp eq i32 %tmp11, %stack_var_-412.1
  %v4_10003450 = zext i16 %storemerge to i32
  %v4_10003454 = icmp eq i16 %storemerge, %tmp10
  %v4_10003440.not = xor i1 %v4_10003440, true
  br label %dec_label_pc_10003400

dec_label_pc_10003400:                            ; preds = %dec_label_pc_1000345c, %dec_label_pc_100033e4
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10003358, i32* %r7.global-to-local, align 4
  store i32 %v2_10003370, i32* %r8.global-to-local, align 4
  %v0_10003418 = load i32, i32* @r31, align 4
  store i32 %v0_10003418, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-420, align 4
  store i32 268448804, i32* @lr, align 4
  %v6_10003420 = call i32 @function_1000a9fc(i32 %v0_10003418, i32 %v2_10003360, i32 256, i32 16384, i32 %v2_10003358, i32 %v2_10003370)
  store i32 %v6_10003420, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1000342c = icmp eq i32 %v6_10003420, -1
  store i1 %v3_1000342c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000342c, label %dec_label_pc_100035c4, label %dec_label_pc_10003438

dec_label_pc_10003438:                            ; preds = %dec_label_pc_10003400
  store i32 %tmp11, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-412.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10003440, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i32 %v6_10003420, 41
  %or.cond = or i1 %tmp50, %v4_10003440.not
  br i1 %or.cond, label %dec_label_pc_1000345c, label %dec_label_pc_1000344c

dec_label_pc_1000344c:                            ; preds = %dec_label_pc_10003438
  store i32 %v4_1000344c, i32* %r0.global-to-local, align 4
  store i32 %v4_10003450, i32* %r8.global-to-local, align 4
  store i1 %v4_10003454, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003454, label %dec_label_pc_1000359c, label %dec_label_pc_1000345c

dec_label_pc_1000345c:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_100035b4, %dec_label_pc_1000344c
  store i32 268448864, i32* @lr, align 4
  %v0_1000345c = call i32 @function_1000a1b8()
  %v0_10003460 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003460 = sub i32 %v0_1000345c, %v0_10003460
  store i32 %v2_10003460, i32* %r3.global-to-local, align 4
  %v3_10003464 = icmp eq i32 %v2_10003460, 10
  store i1 %v3_10003464, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp slt i32 %v2_10003460, 11
  br i1 %tmp51, label %dec_label_pc_10003400, label %dec_label_pc_1000346c

dec_label_pc_1000346c:                            ; preds = %dec_label_pc_100035b4, %dec_label_pc_1000345c
  %v0_1000346c = load i32, i32* @r28, align 4
  store i32 %v0_1000346c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003474.65 to i32), i32* @lr, align 4
  %v0_10003470 = call i32 @function_10009de8()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448900, i32* @lr, align 4
  %v3_10003480 = call i32 @function_1000aaf0(i32 2, i32 1, i32 0)
  store i32 %v3_10003480, i32* %r3.global-to-local, align 4
  %v3_10003484 = icmp eq i32 %v3_10003480, -1
  store i1 %v3_10003484, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003480, i32* @r28, align 4
  br i1 %v3_10003484, label %dec_label_pc_10003490, label %dec_label_pc_10003390

dec_label_pc_10003490:                            ; preds = %dec_label_pc_1000346c, %dec_label_pc_10003374, %dec_label_pc_10003720
  %stack_var_-120.1 = phi i32 [ %stack_var_-120.0, %dec_label_pc_10003374 ], [ %v0_10003710, %dec_label_pc_10003720 ], [ %stack_var_-120.0, %dec_label_pc_1000346c ]
  %v3_10003490 = load i32, i32* %stack_var_-424, align 4
  %v1_10003494 = add i32 %v3_10003490, 1
  store i32 %v1_10003494, i32* %r9.global-to-local, align 4
  %v1_10003498 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003498 = icmp slt i32 %v1_10003494, %v1_10003498
  %v4_10003498 = icmp eq i32 %v1_10003494, %v1_10003498
  store i1 %v4_10003498, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003494, i32* %stack_var_-424, align 4
  br i1 %v2_10003498, label %dec_label_pc_10003374, label %dec_label_pc_100034a4.preheader

dec_label_pc_100034a4.preheader:                  ; preds = %dec_label_pc_10003490, %dec_label_pc_10003340.dec_label_pc_100034a4.preheader_crit_edge
  %v4_100034b0.pre-phi = phi i32 [ %.pre, %dec_label_pc_10003340.dec_label_pc_100034a4.preheader_crit_edge ], [ %v4_100036f0, %dec_label_pc_10003490 ]
  br label %dec_label_pc_100034a4

dec_label_pc_100034a4:                            ; preds = %dec_label_pc_100034a4.preheader, %dec_label_pc_10003664
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-424, align 4
  %v0_100034ac = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_100034ac = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_100034ac = or i1 %v0_100034ac, %v1_100034ac
  br i1 %v2_100034ac, label %dec_label_pc_10003664, label %dec_label_pc_100034b0

dec_label_pc_100034b0:                            ; preds = %dec_label_pc_100034a4
  store i32 %v4_100034b0.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100034b8 = load i32, i32* %r16.global-to-local, align 4
  %v3_100034b8 = icmp eq i32 %v0_100034b8, 0
  store i1 %v3_100034b8, i1* %cr4_eq.global-to-local, align 1
  %v0_100034bc = load i32, i32* @r30, align 4
  %v1_100034bc = add i32 %v0_100034bc, 20
  store i32 %v1_100034bc, i32* @r26, align 4
  store i1 false, i1* %cr3_eq.global-to-local, align 1
  %v1_100034c4 = urem i32 %v1_100034bc, 65536
  store i32 %v1_100034c4, i32* %r23.global-to-local, align 4
  %v1_100034c8 = add i32 %v0_100034bc, 40
  store i32 %v1_100034c8, i32* @r25, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* @r24, align 4
  br label %dec_label_pc_10003570

dec_label_pc_100034dc:                            ; preds = %dec_label_pc_10003584, %dec_label_pc_10003590
  %v0_100034dc = load i32, i32* @r24, align 4
  %v1_100034dc = trunc i32 %v0_100034dc to i16
  %v2_100034dc = load i32, i32* @r29, align 4
  %v3_100034dc = add i32 %v2_100034dc, 10
  %v4_100034dc = inttoptr i32 %v3_100034dc to i16*
  store i16 %v1_100034dc, i16* %v4_100034dc, align 2
  %v0_100034e4 = load i32, i32* @r29, align 4
  store i32 %v0_100034e4, i32* @r3, align 4
  %v2_100034e8 = call i32 @function_10005814(i32 %v0_100034e4, i32 20)
  %v3_100034e8 = trunc i32 %v2_100034e8 to i16
  store i32 %v2_100034e8, i32* %r3.global-to-local, align 4
  %v3_100034ec = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100034ec, i32* %r9.global-to-local, align 4
  %v3_100034f0 = load i32, i32* @r29, align 4
  %v4_100034f0 = add i32 %v3_100034f0, 10
  %v5_100034f0 = inttoptr i32 %v4_100034f0 to i16*
  store i16 %v3_100034e8, i16* %v5_100034f0, align 2
  %v0_100034f4 = load i32, i32* @r28, align 4
  store i32 %v0_100034f4, i32* @r4, align 4
  %v0_100034f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100034f8 = mul i32 %v0_100034f8, 16
  store i32 %v1_100034f8, i32* %r9.global-to-local, align 4
  %v0_100034fc = load i32, i32* @r24, align 4
  %v1_100034fc = trunc i32 %v0_100034fc to i16
  %v3_100034fc = add i32 %v0_100034f4, 16
  %v4_100034fc = inttoptr i32 %v3_100034fc to i16*
  store i16 %v1_100034fc, i16* %v4_100034fc, align 2
  %v0_10003500 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003500 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003500 = add i32 %v1_10003500, %v0_10003500
  store i32 %v2_10003500, i32* %r9.global-to-local, align 4
  %v0_10003504 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003508 = add i32 %v2_10003500, 4
  %v2_10003508 = inttoptr i32 %v1_10003508 to i32*
  %v3_10003508 = load i32, i32* %v2_10003508, align 4
  store i32 %v3_10003508, i32* %r11.global-to-local, align 4
  %v0_1000350c = load i32, i32* @r26, align 4
  %v0_10003510 = load i32, i32* @r29, align 4
  store i32 %v0_10003510, i32* %r3.global-to-local, align 4
  %v1_10003514 = load i32, i32* @r28, align 4
  %v2_10003514 = add i32 %v1_10003514, 4
  %v3_10003514 = inttoptr i32 %v2_10003514 to i32*
  store i32 %v3_10003508, i32* %v3_10003514, align 4
  %v0_10003518 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003518 = add i32 %v0_10003518, 1
  store i32 %v1_10003518, i32* %r11.global-to-local, align 4
  %v1_1000351c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000351c = add i32 %v1_1000351c, 4
  %v3_1000351c = inttoptr i32 %v2_1000351c to i32*
  store i32 %v1_10003518, i32* %v3_1000351c, align 4
  %v0_10003520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003520 = add i32 %v0_10003520, 8
  %v2_10003520 = inttoptr i32 %v1_10003520 to i32*
  %v3_10003520 = load i32, i32* %v2_10003520, align 4
  store i32 %v3_10003520, i32* %r0.global-to-local, align 4
  %v1_10003524 = load i32, i32* @r28, align 4
  %v2_10003524 = add i32 %v1_10003524, 8
  %v3_10003524 = inttoptr i32 %v2_10003524 to i32*
  store i32 %v3_10003520, i32* %v3_10003524, align 4
  %v4_10003528 = call i32 @function_10005878(i32 %v0_10003510, i32 %v0_100034f4, i32 %v0_10003504, i32 %v0_1000350c)
  %v5_10003528 = trunc i32 %v4_10003528 to i16
  store i32 %v4_10003528, i32* %r3.global-to-local, align 4
  %v3_1000352c = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_1000352c, i32* %r7.global-to-local, align 4
  %v0_10003530 = load i32, i32* @r28, align 4
  %v1_10003530 = add i32 %v0_10003530, 2
  %v2_10003530 = inttoptr i32 %v1_10003530 to i16*
  %v3_10003530 = load i16, i16* %v2_10003530, align 2
  %v4_10003530 = zext i16 %v3_10003530 to i32
  store i32 %v4_10003530, i32* %r0.global-to-local, align 4
  %v0_10003534 = load i32, i32* @r29, align 4
  %v1_10003538 = mul i32 %v3_1000352c, 24
  store i32 %v1_10003538, i32* %r7.global-to-local, align 4
  %v4_1000353c = add i32 %v0_10003530, 16
  %v5_1000353c = inttoptr i32 %v4_1000353c to i16*
  store i16 %v5_10003528, i16* %v5_1000353c, align 2
  %v0_10003540 = load i32, i32* @r25, align 4
  %v0_10003544 = load i32, i32* @r31, align 4
  store i32 %v0_10003544, i32* %r3.global-to-local, align 4
  %v0_10003548 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003548 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003548 = add i32 %v1_10003548, %v0_10003548
  store i32 %v2_10003548, i32* %r7.global-to-local, align 4
  %v0_10003550 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003550 = trunc i32 %v0_10003550 to i16
  %v3_10003550 = add i32 %v2_10003548, 2
  %v4_10003550 = inttoptr i32 %v3_10003550 to i16*
  store i16 %v1_10003550, i16* %v4_10003550, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449116, i32* @lr, align 4
  %v6_10003558 = call i32 @function_1000aa74(i32 %v0_10003544, i32 %v0_10003534, i32 %v0_10003540, i32 16384, i32 %v2_10003548, i32 16)
  store i32 %v6_10003558, i32* %r3.global-to-local, align 4
  %v3_1000355c = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_1000355c, i32* %r9.global-to-local, align 4
  %v1_10003560 = add i32 %v3_1000355c, 1
  store i32 %v1_10003560, i32* %r0.global-to-local, align 4
  %v1_10003564 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003564 = icmp slt i32 %v1_10003560, %v1_10003564
  %v4_10003564 = icmp eq i32 %v1_10003560, %v1_10003564
  store i1 %v4_10003564, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003560, i32* %stack_var_-424, align 4
  br i1 %v2_10003564, label %dec_label_pc_100034dc.dec_label_pc_10003570_crit_edge, label %dec_label_pc_10003664

dec_label_pc_100034dc.dec_label_pc_10003570_crit_edge: ; preds = %dec_label_pc_100034dc
  %v0_10003580.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003570

dec_label_pc_10003570:                            ; preds = %dec_label_pc_100034dc.dec_label_pc_10003570_crit_edge, %dec_label_pc_100034b0
  %v0_10003580 = phi i1 [ %v0_10003580.pre, %dec_label_pc_100034dc.dec_label_pc_10003570_crit_edge ], [ false, %dec_label_pc_100034b0 ]
  %v0_10003570 = phi i32 [ %v1_10003560, %dec_label_pc_100034dc.dec_label_pc_10003570_crit_edge ], [ 0, %dec_label_pc_100034b0 ]
  %v1_10003570 = mul i32 %v0_10003570, 4
  store i32 %v1_10003570, i32* %r0.global-to-local, align 4
  %v0_10003574 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003574 = add i32 %v0_10003574, %v1_10003570
  %v3_10003574 = inttoptr i32 %v2_10003574 to i32*
  %v4_10003574 = load i32, i32* %v3_10003574, align 4
  store i32 %v4_10003574, i32* @r29, align 4
  %v1_10003578 = add i32 %v4_10003574, 40
  store i32 %v1_10003578, i32* @r27, align 4
  %v1_1000357c = add i32 %v4_10003574, 20
  store i32 %v1_1000357c, i32* @r28, align 4
  br i1 %v0_10003580, label %dec_label_pc_10003658, label %dec_label_pc_10003584

dec_label_pc_10003584:                            ; preds = %dec_label_pc_10003570, %dec_label_pc_10003658
  %v0_10003584 = phi i32 [ %v1_10003578, %dec_label_pc_10003570 ], [ %v0_10003584.pre, %dec_label_pc_10003658 ]
  store i32 %v0_10003584, i32* @r3, align 4
  %v0_10003588 = load i32, i32* @r30, align 4
  store i32 %v0_10003588, i32* @r4, align 4
  %v0_1000358c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000358c, label %dec_label_pc_100034dc, label %dec_label_pc_10003590

dec_label_pc_10003590:                            ; preds = %dec_label_pc_10003584
  store i32 268449172, i32* @lr, align 4
  %v0_10003590 = call i32 @function_10006e80()
  store i32 %v0_10003590, i32* %r3.global-to-local, align 4
  %v0_10003594 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003594 = load i32, i32* @r27, align 4
  %v2_10003594 = load i32, i32* @r30, align 4
  %v3_10003594 = trunc i32 %v0_10003594 to i8
  %v4_10003594 = add i32 %v2_10003594, %v1_10003594
  %v5_10003594 = inttoptr i32 %v4_10003594 to i8*
  store i8 %v3_10003594, i8* %v5_10003594, align 1
  br label %dec_label_pc_100034dc

dec_label_pc_1000359c:                            ; preds = %dec_label_pc_1000344c
  store i32 %tmp9, i32* %r9.global-to-local, align 4
  store i32 %v1_100035a0, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100035ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100035ac, label %dec_label_pc_10003678, label %dec_label_pc_100035b4

dec_label_pc_100035b4:                            ; preds = %dec_label_pc_1000359c
  br i1 %v3_100035a4, label %dec_label_pc_1000345c, label %dec_label_pc_1000346c

dec_label_pc_100035bc:                            ; preds = %dec_label_pc_1000331c
  %v0_100035bc = load i32, i32* @r31, align 4
  store i32 %v0_100035bc, i32* %r3.global-to-local, align 4
  store i32 268449220, i32* @lr, align 4
  %v0_100035c0 = call i32 @function_10009de8()
  store i32 %v0_100035c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100035c4

dec_label_pc_100035c4:                            ; preds = %dec_label_pc_10003400, %dec_label_pc_10003664, %dec_label_pc_10003108, %dec_label_pc_100035bc
  store i32 %v0_10003134, i32* %r0.global-to-local, align 4
  %v1_100035d8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003110)
  store i32 %v0_1000311c, i32* %r25.global-to-local, align 4
  store i32 %v0_10003168, i32* %r26.global-to-local, align 4
  store i32 %v0_10003124, i32* %r27.global-to-local, align 4
  store i32 %v0_10003174, i32* %r29.global-to-local, align 4
  %v0_10003620 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003620

dec_label_pc_10003624:                            ; preds = %dec_label_pc_10003390
  store i32 %v3_10003624, i32* %r29.global-to-local, align 4
  %v0_10003628 = call i32 @function_10006dc0()
  store i32 %v0_10003628, i32* %r3.global-to-local, align 4
  %v3_1000362c = load i32, i32* %stack_var_-424, align 4
  %v1_10003630 = mul i32 %v3_1000362c, 24
  %v1_10003634 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003634 = add i32 %v1_10003634, %v1_10003630
  store i32 %v2_10003634, i32* %r9.global-to-local, align 4
  %v1_10003638 = add i32 %v2_10003634, 20
  %v2_10003638 = inttoptr i32 %v1_10003638 to i8*
  %v3_10003638 = load i8, i8* %v2_10003638, align 1
  %v4_10003638 = zext i8 %v3_10003638 to i32
  store i32 %v4_10003638, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_10003638, 64
  %v2_1000363c = zext i8 %tmp53 to i32
  %v3_1000363c = lshr i32 %v0_10003628, %v2_1000363c
  store i32 %v3_1000363c, i32* %r3.global-to-local, align 4
  %v0_10003640 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003640 = add i32 %v3_1000363c, %v0_10003640
  store i32 %v2_10003640, i32* %r29.global-to-local, align 4
  %v0_10003648 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003648, label %dec_label_pc_1000364c, label %dec_label_pc_100033e0

dec_label_pc_1000364c:                            ; preds = %dec_label_pc_10003624, %dec_label_pc_100033d4
  %stack_var_-412.2 = phi i32 [ %v2_10003640, %dec_label_pc_10003624 ], [ %v3_10003624, %dec_label_pc_100033d4 ]
  %v0_1000364c = call i32 @function_10006dc0()
  %v1_1000364c = trunc i32 %v0_1000364c to i16
  store i32 %v0_1000364c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100033e4

dec_label_pc_10003658:                            ; preds = %dec_label_pc_10003570
  %v0_10003658 = call i32 @function_10006dc0()
  %v1_10003658 = trunc i32 %v0_10003658 to i16
  store i32 %v0_10003658, i32* %r3.global-to-local, align 4
  %v3_1000365c = load i32, i32* @r29, align 4
  %v4_1000365c = add i32 %v3_1000365c, 4
  %v5_1000365c = inttoptr i32 %v4_1000365c to i16*
  store i16 %v1_10003658, i16* %v5_1000365c, align 2
  %v0_10003584.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10003584

dec_label_pc_10003664:                            ; preds = %dec_label_pc_100034dc, %dec_label_pc_100034a4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449388, i32* @lr, align 4
  %v0_10003668 = call i32 @function_1000a1b8()
  store i32 %v0_10003668, i32* %r3.global-to-local, align 4
  %v0_1000366c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000366c = icmp slt i32 %v0_1000366c, %v0_10003668
  %v4_1000366c = icmp eq i32 %v0_1000366c, %v0_10003668
  store i1 %v4_1000366c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000366c, label %dec_label_pc_100035c4, label %dec_label_pc_100034a4

dec_label_pc_10003678:                            ; preds = %dec_label_pc_1000359c
  %v3_10003678 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10003678, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r9.global-to-local, align 4
  store i32 %v1_10003368, i32* @r3, align 4
  %v1_10003684 = add i32 %stack_var_-120.0, 2
  %v2_10003684 = inttoptr i32 %v1_10003684 to i16*
  %v3_10003684 = load i16, i16* %v2_10003684, align 2
  %v4_10003684 = zext i16 %v3_10003684 to i32
  store i32 %v4_10003684, i32* %r11.global-to-local, align 4
  %v1_10003688 = mul i32 %v3_10003678, 16
  store i32 %v1_10003688, i32* %r9.global-to-local, align 4
  %v1_1000368c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000368c = add i32 %v1_1000368c, %v1_10003688
  %v4_1000368c = inttoptr i32 %v3_1000368c to i32*
  store i32 %tmp11, i32* %v4_1000368c, align 4
  %v0_10003690 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003690 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003690 = add i32 %v1_10003690, %v0_10003690
  store i32 %v2_10003690, i32* %r9.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r10.global-to-local, align 4
  %v0_10003698 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003698 = mul i32 %v0_10003698, 4
  store i32 %v1_10003698, i32* @r29, align 4
  %v0_1000369c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000369c = trunc i32 %v0_1000369c to i16
  %v3_1000369c = add i32 %v2_10003690, 12
  %v4_1000369c = inttoptr i32 %v3_1000369c to i16*
  store i16 %v1_1000369c, i16* %v4_1000369c, align 2
  %v0_100036a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100036a0 = add i32 %v0_100036a0, 4
  %v2_100036a0 = inttoptr i32 %v1_100036a0 to i32*
  %v3_100036a0 = load i32, i32* %v2_100036a0, align 4
  store i32 %v3_100036a0, i32* %r0.global-to-local, align 4
  %v0_100036a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100036a4 = trunc i32 %v0_100036a4 to i16
  %v2_100036a4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100036a4 = add i32 %v2_100036a4, 14
  %v4_100036a4 = inttoptr i32 %v3_100036a4 to i16*
  store i16 %v1_100036a4, i16* %v4_100036a4, align 2
  %v0_100036a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100036a8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100036a8 = add i32 %v1_100036a8, 4
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v0_100036a8, i32* %v3_100036a8, align 4
  %v0_100036ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100036ac = add i32 %v0_100036ac, 8
  %v2_100036ac = inttoptr i32 %v1_100036ac to i32*
  %v3_100036ac = load i32, i32* %v2_100036ac, align 4
  store i32 %v3_100036ac, i32* %r0.global-to-local, align 4
  %v1_100036b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100036b0 = add i32 %v1_100036b0, 8
  %v3_100036b0 = inttoptr i32 %v2_100036b0 to i32*
  store i32 %v3_100036ac, i32* %v3_100036b0, align 4
  store i32 268449464, i32* @lr, align 4
  %v0_100036b4 = call i32 @function_1000acf4()
  store i32 %v0_100036b4, i32* %r3.global-to-local, align 4
  %v3_100036b8 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100036b8, i32* %r0.global-to-local, align 4
  %v1_100036bc = load i32, i32* @r29, align 4
  %v2_100036bc = load i32, i32* %r20.global-to-local, align 4
  %v3_100036bc = add i32 %v2_100036bc, %v1_100036bc
  %v4_100036bc = inttoptr i32 %v3_100036bc to i32*
  store i32 %v0_100036b4, i32* %v4_100036bc, align 4
  %v0_100036c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100036c0 = mul i32 %v0_100036c0, 4
  store i32 %v1_100036c0, i32* %r0.global-to-local, align 4
  %v0_100036c4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100036c4 = add i32 %v0_100036c4, %v1_100036c0
  %v3_100036c4 = inttoptr i32 %v2_100036c4 to i32*
  %v4_100036c4 = load i32, i32* %v3_100036c4, align 4
  store i32 %v4_100036c4, i32* %r10.global-to-local, align 4
  store i32 %v1_1000320c, i32* %r0.global-to-local, align 4
  %v1_100036cc = inttoptr i32 %v4_100036c4 to i32*
  %v2_100036cc = load i32, i32* %v1_100036cc, align 4
  store i32 %v2_100036cc, i32* %r9.global-to-local, align 4
  %v1_100036d0 = add i32 %v4_100036c4, 40
  store i32 %v1_100036d0, i32* @r29, align 4
  store i1 %v3_100036d4, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100036dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036dc, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100036e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100036e8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100036e8 = inttoptr i32 %v1_100036e8 to i32*
  store i32 %v1_100036e4, i32* %v2_100036e8, align 4
  store i32 %v4_100036f0, i32* %r9.global-to-local, align 4
  %v2_100036f4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f4 = add i32 %v2_100036f4, 1
  %v4_100036f4 = inttoptr i32 %v3_100036f4 to i8*
  store i8 %v5_100031c0, i8* %v4_100036f4, align 1
  %v0_100036f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100036f8 = add i32 %v0_100036f8, 20
  store i32 %v1_100036f8, i32* %r11.global-to-local, align 4
  %v0_100036fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036fc = trunc i32 %v0_100036fc to i16
  %v3_100036fc = add i32 %v0_100036f8, 4
  %v4_100036fc = inttoptr i32 %v3_100036fc to i16*
  store i16 %v1_100036fc, i16* %v4_100036fc, align 2
  store i32 %v1_10003368, i32* %r0.global-to-local, align 4
  store i32 %v4_10003704, i32* %r9.global-to-local, align 4
  %v2_10003708 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003708 = add i32 %v2_10003708, 2
  %v4_10003708 = inttoptr i32 %v3_10003708 to i16*
  store i16 %v5_1000336c, i16* %v4_10003708, align 2
  %v0_1000370c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000370c = trunc i32 %v0_1000370c to i8
  %v2_1000370c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000370c = add i32 %v2_1000370c, 8
  %v4_1000370c = inttoptr i32 %v3_1000370c to i8*
  store i8 %v1_1000370c, i8* %v4_1000370c, align 1
  %v0_10003710 = load i32, i32* %r11.global-to-local, align 4
  %v0_10003714 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003714, label %dec_label_pc_10003720, label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_10003678
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000371c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000371c = add i32 %v2_1000371c, 6
  %v4_1000371c = inttoptr i32 %v3_1000371c to i16*
  store i16 16384, i16* %v4_1000371c, align 2
  br label %dec_label_pc_10003720

dec_label_pc_10003720:                            ; preds = %dec_label_pc_10003678, %dec_label_pc_10003718
  %v2_10003728 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003728 = add i32 %v2_10003728, 9
  %v4_10003728 = inttoptr i32 %v3_10003728 to i8*
  store i8 6, i8* %v4_10003728, align 1
  %v3_1000372c = load i32, i32* @global_var_1001d230.61, align 4
  store i32 %v3_1000372c, i32* %r0.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, 12
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  store i32 %v3_1000372c, i32* %v3_10003730, align 4
  %v3_10003734 = load i32, i32* %stack_var_-424, align 4
  %v1_10003738 = mul i32 %v3_10003734, 16
  store i32 %v1_10003738, i32* %r9.global-to-local, align 4
  %v1_1000373c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000373c = add i32 %v1_1000373c, %v1_10003738
  %v3_1000373c = inttoptr i32 %v2_1000373c to i32*
  %v4_1000373c = load i32, i32* %v3_1000373c, align 4
  store i32 %v4_1000373c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000373c, i32* %r9.global-to-local, align 4
  %v1_10003744 = add i32 %v2_1000373c, 12
  %v2_10003744 = inttoptr i32 %v1_10003744 to i16*
  %v3_10003744 = load i16, i16* %v2_10003744, align 2
  %v4_10003744 = zext i16 %v3_10003744 to i32
  store i32 %v4_10003744, i32* %r11.global-to-local, align 4
  %v1_10003748 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003748 = add i32 %v1_10003748, 16
  %v3_10003748 = inttoptr i32 %v2_10003748 to i32*
  store i32 %v4_1000373c, i32* %v3_10003748, align 4
  %v0_1000374c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000374c = trunc i32 %v0_1000374c to i16
  %v2_1000374c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000374c = add i32 %v2_1000374c, 20
  %v4_1000374c = inttoptr i32 %v3_1000374c to i16*
  store i16 %v1_1000374c, i16* %v4_1000374c, align 2
  %v0_10003750 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003750 = add i32 %v0_10003750, 8
  %v2_10003750 = inttoptr i32 %v1_10003750 to i32*
  %v3_10003750 = load i32, i32* %v2_10003750, align 4
  store i32 %v3_10003750, i32* %r0.global-to-local, align 4
  store i32 %v0_10003710, i32* %r10.global-to-local, align 4
  %v1_10003758 = add i32 %v0_10003710, 12
  %v2_10003758 = inttoptr i32 %v1_10003758 to i32*
  %v3_10003758 = load i32, i32* %v2_10003758, align 4
  store i32 %v3_10003758, i32* %r11.global-to-local, align 4
  %v2_1000375c = add i32 %v0_10003710, 4
  %v3_1000375c = inttoptr i32 %v2_1000375c to i32*
  store i32 %v3_10003750, i32* %v3_1000375c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003764 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003764, i32* %r11.global-to-local, align 4
  %v0_10003768 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003768 = add i32 %v0_10003768, 14
  %v2_10003768 = inttoptr i32 %v1_10003768 to i16*
  %v3_10003768 = load i16, i16* %v2_10003768, align 2
  %v4_10003768 = zext i16 %v3_10003768 to i32
  store i32 %v4_10003768, i32* %r0.global-to-local, align 4
  %v1_1000376c = add i32 %v0_10003768, 4
  %v2_1000376c = inttoptr i32 %v1_1000376c to i32*
  %v3_1000376c = load i32, i32* %v2_1000376c, align 4
  store i32 %v3_1000376c, i32* %r10.global-to-local, align 4
  %v1_10003770 = or i32 %v1_10003764, 1114112
  store i32 %v1_10003770, i32* %r11.global-to-local, align 4
  store i32 %v0_10003710, i32* %r9.global-to-local, align 4
  %v3_10003778 = add i32 %v0_10003710, 2
  %v4_10003778 = inttoptr i32 %v3_10003778 to i16*
  store i16 %v3_10003768, i16* %v4_10003778, align 2
  %v0_1000377c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000377c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000377c = add i32 %v1_1000377c, 8
  %v3_1000377c = inttoptr i32 %v2_1000377c to i32*
  store i32 %v0_1000377c, i32* %v3_1000377c, align 4
  %v0_10003780 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003780 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003780 = add i32 %v1_10003780, 12
  %v3_10003780 = inttoptr i32 %v2_10003780 to i32*
  store i32 %v0_10003780, i32* %v3_10003780, align 4
  %v0_10003784 = call i32 @function_10006dc0()
  %v1_10003784 = trunc i32 %v0_10003784 to i16
  store i32 %v0_10003710, i32* %r9.global-to-local, align 4
  store i32 %v1_10003244, i32* %r10.global-to-local, align 4
  %v0_10003790 = load i32, i32* @r30, align 4
  store i32 %v0_10003790, i32* @r4, align 4
  %v4_10003794 = add i32 %v0_10003710, 14
  %v5_10003794 = inttoptr i32 %v4_10003794 to i16*
  store i16 %v1_10003784, i16* %v5_10003794, align 2
  %v0_10003798 = load i32, i32* @r29, align 4
  store i32 %v0_10003798, i32* @r3, align 4
  store i32 %v1_10003260, i32* %r11.global-to-local, align 4
  %v0_100037a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037a0 = add i32 %v0_100037a0, 12
  %v2_100037a0 = inttoptr i32 %v1_100037a0 to i32*
  %v3_100037a0 = load i32, i32* %v2_100037a0, align 4
  store i32 %v3_100037a0, i32* %r0.global-to-local, align 4
  %v1_100037a4 = call i32 @__asm_rlwimi(i32 %v1_10003244, i32 21, i32 10, i32 10)
  store i32 %v1_100037a4, i32* %r0.global-to-local, align 4
  %v1_100037a8 = call i32 @__asm_rlwimi(i32 %v1_10003260, i32 20, i32 11, i32 11)
  store i32 %v1_100037a8, i32* %r0.global-to-local, align 4
  %v1_100037ac = call i32 @__asm_rlwimi(i32 %v1_10003284, i32 19, i32 12, i32 12)
  store i32 %v1_100037ac, i32* %r0.global-to-local, align 4
  %v1_100037b0 = call i32 @__asm_rlwimi(i32 %v1_1000329c, i32 18, i32 13, i32 13)
  store i32 %v1_100037b0, i32* %r0.global-to-local, align 4
  %v1_100037b4 = call i32 @__asm_rlwimi(i32 %v1_100032b4, i32 17, i32 14, i32 14)
  store i32 %v1_100037b4, i32* %r0.global-to-local, align 4
  %v1_100037b8 = call i32 @__asm_rlwimi(i32 %v1_100032cc, i32 16, i32 15, i32 15)
  store i32 %v1_100037b8, i32* %r0.global-to-local, align 4
  %v1_100037bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100037bc = add i32 %v1_100037bc, 12
  %v3_100037bc = inttoptr i32 %v2_100037bc to i32*
  store i32 %v1_100037b8, i32* %v3_100037bc, align 4
  store i32 ptrtoint (i32* @global_var_100037c4.66 to i32), i32* @lr, align 4
  %v0_100037c0 = call i32 @function_10006e80()
  store i32 %v0_100037c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100037c8 = load i32, i32* @r29, align 4
  %v2_100037c8 = load i32, i32* @r30, align 4
  %v4_100037c8 = add i32 %v2_100037c8, %v1_100037c8
  %v5_100037c8 = inttoptr i32 %v4_100037c8 to i8*
  store i8 0, i8* %v5_100037c8, align 1
  br label %dec_label_pc_10003490

; uselistorder directives
  uselistorder i32 %v2_1000373c, { 1, 0, 2 }
  uselistorder i32 %v1_10003738, { 1, 0 }
  uselistorder i32 %v0_10003710, { 1, 2, 4, 3, 7, 6, 5, 0 }
  uselistorder i32 %v1_100036c0, { 1, 0 }
  uselistorder i32 %v1_10003688, { 1, 0 }
  uselistorder i32 %v0_10003668, { 1, 0, 2 }
  uselistorder i32 %v0_10003658, { 1, 0 }
  uselistorder i32 %v0_1000364c, { 1, 0 }
  uselistorder i32 %v2_10003640, { 1, 2, 0 }
  uselistorder i32 %v1_10003570, { 1, 0 }
  uselistorder i32 %v1_10003560, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v4_10003528, { 1, 0 }
  uselistorder i32 %v0_100034f4, { 1, 0, 2 }
  uselistorder i32 %v2_100034e8, { 1, 0 }
  uselistorder i32 %v1_10003494, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10003440, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10003624, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-120.0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v4_100036f0, { 1, 0 }
  uselistorder i32 %v1_100035a0, { 1, 0 }
  uselistorder i32 %v1_10003368, { 1, 0, 2, 3 }
  uselistorder i16 %v5_1000334c, { 1, 0 }
  uselistorder i32 %v0_10003344, { 1, 0 }
  uselistorder i32 %v1_100032cc, { 1, 0 }
  uselistorder i32 %v1_100032b4, { 1, 0 }
  uselistorder i32 %v1_1000320c, { 1, 0 }
  uselistorder i32* %stack_var_-424, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i16 %tmp10, { 1, 0 }
  uselistorder i32 %tmp9, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 30, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 27, 28, 29, 30, 31, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr4_eq.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 1179648, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003720, { 1, 0 }
  uselistorder label %dec_label_pc_100035c4, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10003584, { 1, 0 }
  uselistorder label %dec_label_pc_100034dc, { 1, 0 }
  uselistorder label %dec_label_pc_100034a4, { 1, 0 }
  uselistorder label %dec_label_pc_10003490, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000345c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003390, { 1, 0 }
}

define i32 @function_100037d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100037d0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100037d0 = load i32, i32* @lr, align 4
  store i32 %v0_100037d0, i32* %r0.global-to-local, align 4
  %v0_100037d8 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_100037e4 = load i32, i32* @r27, align 4
  store i32 %v0_100037d8, i32* %r27.global-to-local, align 4
  %v0_100037ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003828 = load i32, i32* @r24, align 4
  %v0_1000382c = load i32, i32* @r25, align 4
  %v0_10003830 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_1000383c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268449876, i32* @lr, align 4
  %v2_10003850 = call i32 @function_1000ae4c(i32 %arg2, i32 4)
  %v0_10003854 = load i32, i32* @r29, align 4
  store i32 %v2_10003850, i32* %r21.global-to-local, align 4
  %v0_10003864 = load i32, i32* @r28, align 4
  store i32 %v0_10003864, i32* %r3.global-to-local, align 4
  store i32 268449900, i32* @lr, align 4
  %v4_10003868 = inttoptr i32 %v0_10003854 to i32*
  %v5_10003868 = call i32 @function_10001e18(i32 %v0_10003864, i32* %v4_10003868, i32 2, i32 0)
  %v5_10003878 = trunc i32 %v5_10003868 to i8
  %v0_10003880 = load i32, i32* @r29, align 4
  %v0_10003884 = load i32, i32* @r28, align 4
  store i32 %v0_10003884, i32* %r3.global-to-local, align 4
  store i32 268449932, i32* @lr, align 4
  %v4_10003888 = inttoptr i32 %v0_10003880 to i32*
  %v5_10003888 = call i32 @function_10001e18(i32 %v0_10003884, i32* %v4_10003888, i32 3, i32 65535)
  %v0_1000388c = load i32, i32* @r29, align 4
  store i32 %v5_10003888, i32* %r17.global-to-local, align 4
  %v0_1000389c = load i32, i32* @r28, align 4
  store i32 %v0_1000389c, i32* %r3.global-to-local, align 4
  store i32 268449956, i32* @lr, align 4
  %v4_100038a0 = inttoptr i32 %v0_1000388c to i32*
  %v5_100038a0 = call i32 @function_10001e18(i32 %v0_1000389c, i32* %v4_100038a0, i32 4, i32 64)
  %v0_100038a4 = load i32, i32* @r29, align 4
  %v5_100038b0 = trunc i32 %v5_100038a0 to i8
  %v0_100038b8 = load i32, i32* @r28, align 4
  store i32 %v0_100038b8, i32* %r3.global-to-local, align 4
  store i32 268449984, i32* @lr, align 4
  %v4_100038bc = inttoptr i32 %v0_100038a4 to i32*
  %v5_100038bc = call i32 @function_10001e18(i32 %v0_100038b8, i32* %v4_100038bc, i32 5, i32 0)
  %v1_100038c4 = urem i32 %v5_100038bc, 256
  %v0_100038d4 = load i32, i32* @r29, align 4
  %v0_100038d8 = load i32, i32* @r28, align 4
  store i32 %v0_100038d8, i32* %r3.global-to-local, align 4
  store i32 268450016, i32* @lr, align 4
  %v4_100038dc = inttoptr i32 %v0_100038d4 to i32*
  %v5_100038dc = call i32 @function_10001e18(i32 %v0_100038d8, i32* %v4_100038dc, i32 6, i32 65535)
  %v0_100038e4 = load i32, i32* @r29, align 4
  store i32 %v5_100038dc, i32* %r18.global-to-local, align 4
  %v0_100038f4 = load i32, i32* @r28, align 4
  store i32 %v0_100038f4, i32* %r3.global-to-local, align 4
  store i32 268450044, i32* @lr, align 4
  %v4_100038f8 = inttoptr i32 %v0_100038e4 to i32*
  %v5_100038f8 = call i32 @function_10001e18(i32 %v0_100038f4, i32* %v4_100038f8, i32 7, i32 65535)
  %v0_10003900 = load i32, i32* @r29, align 4
  store i32 %v5_100038f8, i32* %r19.global-to-local, align 4
  %v0_10003910 = load i32, i32* @r28, align 4
  store i32 %v0_10003910, i32* %r3.global-to-local, align 4
  store i32 268450072, i32* @lr, align 4
  %v4_10003914 = inttoptr i32 %v0_10003900 to i32*
  %v5_10003914 = call i32 @function_10001e18(i32 %v0_10003910, i32* %v4_10003914, i32 16, i32 65535)
  %v0_1000391c = load i32, i32* @r29, align 4
  store i32 %v5_10003914, i32* %r16.global-to-local, align 4
  %v0_1000392c = load i32, i32* @r28, align 4
  store i32 %v0_1000392c, i32* %r3.global-to-local, align 4
  store i32 268450100, i32* @lr, align 4
  %v4_10003930 = inttoptr i32 %v0_1000391c to i32*
  %v5_10003930 = call i32 @function_10001e18(i32 %v0_1000392c, i32* %v4_10003930, i32 17, i32 65535)
  %v0_10003934 = load i32, i32* @r29, align 4
  store i32 %v5_10003930, i32* %r15.global-to-local, align 4
  %v0_10003944 = load i32, i32* @r28, align 4
  store i32 %v0_10003944, i32* %r3.global-to-local, align 4
  store i32 268450124, i32* @lr, align 4
  %v4_10003948 = inttoptr i32 %v0_10003934 to i32*
  %v5_10003948 = call i32 @function_10001e18(i32 %v0_10003944, i32* %v4_10003948, i32 10, i32 0)
  %v0_1000394c = load i32, i32* @r29, align 4
  %v0_1000395c = load i32, i32* @r28, align 4
  store i32 %v0_1000395c, i32* %r3.global-to-local, align 4
  store i32 268450148, i32* @lr, align 4
  %v4_10003960 = inttoptr i32 %v0_1000394c to i32*
  %v5_10003960 = call i32 @function_10001e18(i32 %v0_1000395c, i32* %v4_10003960, i32 11, i32 1)
  %v0_10003964 = load i32, i32* @r29, align 4
  store i32 %v5_10003960, i32* %r14.global-to-local, align 4
  %v0_10003974 = load i32, i32* @r28, align 4
  store i32 %v0_10003974, i32* %r3.global-to-local, align 4
  store i32 268450172, i32* @lr, align 4
  %v4_10003978 = inttoptr i32 %v0_10003964 to i32*
  %v5_10003978 = call i32 @function_10001e18(i32 %v0_10003974, i32* %v4_10003978, i32 12, i32 0)
  %v0_1000397c = load i32, i32* @r29, align 4
  store i32 %v5_10003978, i32* %r23.global-to-local, align 4
  %v0_1000398c = load i32, i32* @r28, align 4
  store i32 %v0_1000398c, i32* %r3.global-to-local, align 4
  store i32 268450196, i32* @lr, align 4
  %v4_10003990 = inttoptr i32 %v0_1000397c to i32*
  %v5_10003990 = call i32 @function_10001e18(i32 %v0_1000398c, i32* %v4_10003990, i32 13, i32 0)
  %v0_10003994 = load i32, i32* @r29, align 4
  store i32 %v5_10003990, i32* %r24.global-to-local, align 4
  %v0_100039a4 = load i32, i32* @r28, align 4
  store i32 %v0_100039a4, i32* %r3.global-to-local, align 4
  store i32 268450220, i32* @lr, align 4
  %v4_100039a8 = inttoptr i32 %v0_10003994 to i32*
  %v5_100039a8 = call i32 @function_10001e18(i32 %v0_100039a4, i32* %v4_100039a8, i32 14, i32 0)
  %v0_100039ac = load i32, i32* @r29, align 4
  store i32 %v5_100039a8, i32* %r26.global-to-local, align 4
  %v0_100039bc = load i32, i32* @r28, align 4
  store i32 %v0_100039bc, i32* %r3.global-to-local, align 4
  store i32 268450244, i32* @lr, align 4
  %v4_100039c0 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039c0 = call i32 @function_10001e18(i32 %v0_100039bc, i32* %v4_100039c0, i32 15, i32 0)
  %v0_100039c4 = load i32, i32* @r29, align 4
  store i32 %v5_100039c0, i32* %r25.global-to-local, align 4
  %v0_100039d4 = load i32, i32* @r28, align 4
  store i32 %v0_100039d4, i32* %r3.global-to-local, align 4
  store i32 268450268, i32* @lr, align 4
  %v4_100039d8 = inttoptr i32 %v0_100039c4 to i32*
  %v5_100039d8 = call i32 @function_10001e18(i32 %v0_100039d4, i32* %v4_100039d8, i32 0, i32 512)
  %v0_100039dc = load i32, i32* @r29, align 4
  store i32 %v5_100039d8, i32* @r30, align 4
  %v0_100039ec = load i32, i32* @r28, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_10001e18(i32 %v0_100039ec, i32* %v4_100039f0, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100039f8 = load i32, i32* @global_var_1001d230.61, align 4
  %v1_100039fc = urem i32 %v5_100039f0, 256
  %v0_10003a00 = load i32, i32* @r29, align 4
  %v0_10003a0c = load i32, i32* @r28, align 4
  store i32 %v0_10003a0c, i32* %r3.global-to-local, align 4
  store i32 268450324, i32* @lr, align 4
  %v5_10003a10 = inttoptr i32 %v0_10003a00 to i32*
  %v6_10003a10 = call i32 @function_10001d98(i32 %v0_10003a0c, i32* %v5_10003a10, i32 24, i32 %v3_100039f8, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268450336, i32* @lr, align 4
  %v0_10003a1c = call i32 @function_1000a1b8()
  %v1_10003a24 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003a24 = add i32 %v1_10003a24, %v0_10003a1c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450360, i32* @lr, align 4
  %v3_10003a34 = call i32 @function_1000aaf0(i32 2, i32 3, i32 6)
  store i32 %v3_10003a34, i32* %r3.global-to-local, align 4
  %v3_10003a38 = icmp eq i32 %v3_10003a34, -1
  store i32 %v3_10003a34, i32* %r22.global-to-local, align 4
  br i1 %v3_10003a38, label %dec_label_pc_10003cd0, label %dec_label_pc_10003a44

dec_label_pc_10003a44:                            ; preds = %dec_label_pc_100037d0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003a50 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450400, i32* @lr, align 4
  %v5_10003a5c = call i32 @function_1000aab4(i32 0, i32 3, i32 %v2_10003a50, i32 4, i32 4)
  store i32 %v5_10003a5c, i32* %r3.global-to-local, align 4
  %v3_10003a60 = icmp eq i32 %v5_10003a5c, -1
  br i1 %v3_10003a60, label %dec_label_pc_10003dd8, label %dec_label_pc_10003a68

dec_label_pc_10003a68:                            ; preds = %dec_label_pc_10003a44
  %v0_10003a68 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003a68 = icmp slt i32 %v0_10003a68, 0
  %v3_10003a68 = icmp eq i32 %v0_10003a68, 0
  store i1 %v1_10003a68, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10003a68, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003a74 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003a74 = urem i32 %v0_10003a74, 65536
  store i32 %v1_10003a74, i32* %r17.global-to-local, align 4
  %v0_10003a78 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003a78 = urem i32 %v0_10003a78, 65536
  store i32 %v1_10003a78, i32* %r18.global-to-local, align 4
  %v0_10003a7c = load i32, i32* %r19.global-to-local, align 4
  %v1_10003a7c = urem i32 %v0_10003a7c, 65536
  store i32 %v1_10003a7c, i32* %r19.global-to-local, align 4
  %tmp39 = icmp slt i32 %v0_10003a68, 1
  br i1 %tmp39, label %dec_label_pc_10003bc4.preheader, label %dec_label_pc_10003a84

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a68
  %v0_10003a88 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003a88 = urem i32 %v0_10003a88, 256
  store i32 %v1_10003a88, i32* %r0.global-to-local, align 4
  %v3_10003a90 = icmp eq i32 %v1_10003a88, 0
  store i1 %v3_10003a90, i1* %cr4_eq.global-to-local, align 1
  %v1_10003a94 = urem i32 %v5_10003948, 2
  %v0_10003a98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003a98 = urem i32 %v0_10003a98, 2
  %v0_10003aa0 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003aa0 = urem i32 %v0_10003aa0, 2
  store i32 %v1_10003aa0, i32* %r11.global-to-local, align 4
  %v3_10003aa4 = icmp eq i32 %v1_100038c4, 0
  store i1 %v3_10003aa4, i1* %cr3_eq.global-to-local, align 1
  %v0_10003aac = load i32, i32* @r30, align 4
  %v1_10003aac = add i32 %v0_10003aac, 40
  store i32 %v1_10003aac, i32* %r9.global-to-local, align 4
  %v0_10003ab0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003ab0 = urem i32 %v0_10003ab0, 2
  store i32 %v1_10003ab0, i32* %r14.global-to-local, align 4
  %v0_10003ab4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ab4 = urem i32 %v0_10003ab4, 2
  %v1_10003ab8 = urem i32 %v0_10003a88, 2
  %v1_10003abc = urem i32 %v1_10003aac, 65536
  store i32 %v1_10003abc, i32* @r24, align 4
  store i32 0, i32* @r29, align 4
  store i32 5, i32* %r23.global-to-local, align 4
  %v4_10003b0c = sext i8 %v5_100038b0 to i32
  %v4_10003b14 = sext i8 %v5_10003878 to i32
  br label %dec_label_pc_10003ac8

dec_label_pc_10003ac8:                            ; preds = %dec_label_pc_10003ba4, %dec_label_pc_10003a84
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450516, i32* @lr, align 4
  %v2_10003ad0 = call i32 @function_1000ae4c(i32 1510, i32 1)
  store i32 %v2_10003ad0, i32* %r3.global-to-local, align 4
  %v3_10003ad4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003ad4, i32* %r9.global-to-local, align 4
  %v0_10003ad8 = load i32, i32* @r29, align 4
  %v1_10003ad8 = mul i32 %v0_10003ad8, 4
  store i32 %v1_10003ad8, i32* %r0.global-to-local, align 4
  %v1_10003adc = load i32, i32* %r21.global-to-local, align 4
  %v3_10003adc = add i32 %v1_10003adc, %v1_10003ad8
  %v4_10003adc = inttoptr i32 %v3_10003adc to i32*
  store i32 %v2_10003ad0, i32* %v4_10003adc, align 4
  %v0_10003ae0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003ae0 = mul i32 %v0_10003ae0, 4
  store i32 %v1_10003ae0, i32* %r9.global-to-local, align 4
  %v1_10003ae4 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003ae4 = add i32 %v1_10003ae4, %v1_10003ae0
  %v3_10003ae4 = inttoptr i32 %v2_10003ae4 to i32*
  %v4_10003ae4 = load i32, i32* %v3_10003ae4, align 4
  store i32 %v4_10003ae4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003aec = inttoptr i32 %v4_10003ae4 to i32*
  %v2_10003aec = load i32, i32* %v1_10003aec, align 4
  store i32 %v2_10003aec, i32* %r0.global-to-local, align 4
  %v1_10003af0 = add i32 %v4_10003ae4, 20
  store i32 %v1_10003af0, i32* @r29, align 4
  %v0_10003af4 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003af4 = trunc i32 %v0_10003af4 to i16
  %v3_10003af4 = add i32 %v4_10003ae4, 4
  %v4_10003af4 = inttoptr i32 %v3_10003af4 to i16*
  store i16 %v1_10003af4, i16* %v4_10003af4, align 2
  %v0_10003af8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003af8 = add i32 %v0_10003af8, 40
  store i32 %v1_10003af8, i32* @r28, align 4
  %v1_10003afc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003afc, i32* %r0.global-to-local, align 4
  %v1_10003b00 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v2_10003b04 = inttoptr i32 %v0_10003af8 to i32*
  store i32 %v1_10003b00, i32* %v2_10003b04, align 4
  %v0_10003b08 = load i32, i32* @r24, align 4
  %v1_10003b08 = trunc i32 %v0_10003b08 to i16
  %v2_10003b08 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003b08 = add i32 %v2_10003b08, 2
  %v4_10003b08 = inttoptr i32 %v3_10003b08 to i16*
  store i16 %v1_10003b08, i16* %v4_10003b08, align 2
  store i32 %v4_10003b0c, i32* %r0.global-to-local, align 4
  %v2_10003b10 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003b10 = add i32 %v2_10003b10, 8
  %v4_10003b10 = inttoptr i32 %v3_10003b10 to i8*
  store i8 %v5_100038b0, i8* %v4_10003b10, align 1
  store i32 %v4_10003b14, i32* %r9.global-to-local, align 4
  %v2_10003b18 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003b18 = add i32 %v2_10003b18, 1
  %v4_10003b18 = inttoptr i32 %v3_10003b18 to i8*
  store i8 %v5_10003878, i8* %v4_10003b18, align 1
  %v0_10003b1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003b1c, label %dec_label_pc_10003b28, label %dec_label_pc_10003b20

dec_label_pc_10003b20:                            ; preds = %dec_label_pc_10003ac8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003b24 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003b24 = add i32 %v2_10003b24, 6
  %v4_10003b24 = inttoptr i32 %v3_10003b24 to i16*
  store i16 16384, i16* %v4_10003b24, align 2
  br label %dec_label_pc_10003b28

dec_label_pc_10003b28:                            ; preds = %dec_label_pc_10003ac8, %dec_label_pc_10003b20
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003b2c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b2c = trunc i32 %v0_10003b2c to i16
  %v2_10003b2c = load i32, i32* %r11.global-to-local, align 4
  %v3_10003b2c = add i32 %v2_10003b2c, 20
  %v4_10003b2c = inttoptr i32 %v3_10003b2c to i16*
  store i16 %v1_10003b2c, i16* %v4_10003b2c, align 2
  %v0_10003b30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b30 = trunc i32 %v0_10003b30 to i8
  %v2_10003b30 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003b30 = add i32 %v2_10003b30, 9
  %v4_10003b30 = inttoptr i32 %v3_10003b30 to i8*
  store i8 %v1_10003b30, i8* %v4_10003b30, align 1
  %v0_10003b34 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b34 = trunc i32 %v0_10003b34 to i16
  %v2_10003b34 = load i32, i32* @r29, align 4
  %v3_10003b34 = add i32 %v2_10003b34, 2
  %v4_10003b34 = inttoptr i32 %v3_10003b34 to i16*
  store i16 %v1_10003b34, i16* %v4_10003b34, align 2
  store i32 %v6_10003a10, i32* %r0.global-to-local, align 4
  %v1_10003b3c = load i32, i32* %r11.global-to-local, align 4
  %v2_10003b3c = add i32 %v1_10003b3c, 12
  %v3_10003b3c = inttoptr i32 %v2_10003b3c to i32*
  store i32 %v6_10003a10, i32* %v3_10003b3c, align 4
  %v3_10003b40 = load i32, i32* %stack_var_-136, align 4
  %v1_10003b44 = mul i32 %v3_10003b40, 24
  %v1_10003b48 = load i32, i32* @r31, align 4
  %v2_10003b48 = add i32 %v1_10003b48, %v1_10003b44
  store i32 %v2_10003b48, i32* %r9.global-to-local, align 4
  %v1_10003b4c = add i32 %v2_10003b48, 16
  %v2_10003b4c = inttoptr i32 %v1_10003b4c to i32*
  %v3_10003b4c = load i32, i32* %v2_10003b4c, align 4
  store i32 %v3_10003b4c, i32* %r0.global-to-local, align 4
  store i32 %v1_10003a94, i32* %r9.global-to-local, align 4
  %v1_10003b54 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003b54 = add i32 %v1_10003b54, 16
  %v3_10003b54 = inttoptr i32 %v2_10003b54 to i32*
  store i32 %v3_10003b4c, i32* %v3_10003b54, align 4
  store i32 %v1_10003aa0, i32* %r11.global-to-local, align 4
  %v0_10003b5c = load i32, i32* @r29, align 4
  %v1_10003b5c = add i32 %v0_10003b5c, 12
  %v2_10003b5c = inttoptr i32 %v1_10003b5c to i32*
  %v3_10003b5c = load i32, i32* %v2_10003b5c, align 4
  store i32 %v3_10003b5c, i32* %r0.global-to-local, align 4
  %v0_10003b60 = load i32, i32* %r16.global-to-local, align 4
  %v2_10003b60 = add i32 %v0_10003b5c, 4
  %v3_10003b60 = inttoptr i32 %v2_10003b60 to i32*
  store i32 %v0_10003b60, i32* %v3_10003b60, align 4
  %v1_10003b64 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003b64, i32* %r0.global-to-local, align 4
  %v1_10003b68 = call i32 @__asm_rlwimi(i32 %v1_10003a94, i32 21, i32 10, i32 10)
  store i32 %v1_10003b68, i32* %r0.global-to-local, align 4
  %v1_10003b6c = call i32 @__asm_rlwimi(i32 %v1_10003aa0, i32 20, i32 11, i32 11)
  store i32 %v1_10003b6c, i32* %r0.global-to-local, align 4
  %v1_10003b70 = call i32 @__asm_rlwimi(i32 %v1_10003ab8, i32 19, i32 12, i32 12)
  store i32 %v1_10003b70, i32* %r0.global-to-local, align 4
  %v1_10003b74 = call i32 @__asm_rlwimi(i32 %v1_10003ab0, i32 18, i32 13, i32 13)
  store i32 %v1_10003b74, i32* %r0.global-to-local, align 4
  %v1_10003b78 = call i32 @__asm_rlwimi(i32 %v1_10003ab4, i32 17, i32 14, i32 14)
  store i32 %v1_10003b78, i32* %r0.global-to-local, align 4
  %v1_10003b7c = call i32 @__asm_rlwimi(i32 %v1_10003a98, i32 16, i32 15, i32 15)
  store i32 %v1_10003b7c, i32* %r0.global-to-local, align 4
  %v1_10003b80 = load i32, i32* @r29, align 4
  %v2_10003b80 = add i32 %v1_10003b80, 12
  %v3_10003b80 = inttoptr i32 %v2_10003b80 to i32*
  store i32 %v1_10003b7c, i32* %v3_10003b80, align 4
  %v0_10003b84 = call i32 @function_10006dc0()
  %v1_10003b84 = trunc i32 %v0_10003b84 to i16
  %v0_10003b88 = load i32, i32* @r30, align 4
  store i32 %v0_10003b88, i32* @r4, align 4
  %v3_10003b8c = load i32, i32* @r29, align 4
  %v4_10003b8c = add i32 %v3_10003b8c, 14
  %v5_10003b8c = inttoptr i32 %v4_10003b8c to i16*
  store i16 %v1_10003b84, i16* %v5_10003b8c, align 2
  %v0_10003b90 = load i32, i32* @r28, align 4
  store i32 %v0_10003b90, i32* @r3, align 4
  %v0_10003b94 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003b94, label %dec_label_pc_10003ba4, label %dec_label_pc_10003b98

dec_label_pc_10003b98:                            ; preds = %dec_label_pc_10003b28
  %v0_10003b98 = load i32, i32* @r29, align 4
  %v1_10003b98 = add i32 %v0_10003b98, 12
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  %v1_10003b9c = or i32 %v3_10003b98, 524288
  store i32 %v1_10003b9c, i32* %r0.global-to-local, align 4
  store i32 %v1_10003b9c, i32* %v2_10003b98, align 4
  br label %dec_label_pc_10003ba4

dec_label_pc_10003ba4:                            ; preds = %dec_label_pc_10003b28, %dec_label_pc_10003b98
  store i32 ptrtoint (i32* @global_var_10003ba8.67 to i32), i32* @lr, align 4
  %v0_10003ba4 = call i32 @function_10006e80()
  store i32 %v0_10003ba4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003bac = load i32, i32* @r28, align 4
  %v2_10003bac = load i32, i32* @r30, align 4
  %v4_10003bac = add i32 %v2_10003bac, %v1_10003bac
  %v5_10003bac = inttoptr i32 %v4_10003bac to i8*
  store i8 0, i8* %v5_10003bac, align 1
  %v3_10003bb0 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003bb0, i32* %r9.global-to-local, align 4
  %v1_10003bb4 = add i32 %v3_10003bb0, 1
  store i32 %v1_10003bb4, i32* @r29, align 4
  %v1_10003bb8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003bb8 = icmp slt i32 %v1_10003bb4, %v1_10003bb8
  store i32 %v1_10003bb4, i32* %stack_var_-136, align 4
  br i1 %v2_10003bb8, label %dec_label_pc_10003ac8, label %dec_label_pc_10003bc4.preheader

dec_label_pc_10003bc4.preheader:                  ; preds = %dec_label_pc_10003ba4, %dec_label_pc_10003a68
  %v3_10003be0 = icmp eq i32 %v6_10003a10, -1
  %v3_10003be8 = icmp eq i32 %v1_100039fc, 0
  br label %dec_label_pc_10003bc4

dec_label_pc_10003bc4:                            ; preds = %dec_label_pc_10003bc4.preheader, %dec_label_pc_10003cbc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003bcc = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10003bcc = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10003bcc = or i1 %v0_10003bcc, %v1_10003bcc
  br i1 %v2_10003bcc, label %dec_label_pc_10003cbc, label %dec_label_pc_10003bd0

dec_label_pc_10003bd0:                            ; preds = %dec_label_pc_10003bc4
  store i32 %v6_10003a10, i32* %r0.global-to-local, align 4
  %v0_10003bd4 = load i32, i32* @r30, align 4
  %v1_10003bd4 = add i32 %v0_10003bd4, 20
  store i32 %v1_10003bd4, i32* @r26, align 4
  %v1_10003bdc = urem i32 %v1_10003bd4, 65536
  store i32 %v1_10003bdc, i32* @r24, align 4
  store i1 %v3_10003be0, i1* %cr3_eq.global-to-local, align 1
  %v1_10003be4 = add i32 %v0_10003bd4, 40
  store i32 %v1_10003be4, i32* @r25, align 4
  store i1 %v3_10003be8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003bf4

dec_label_pc_10003bf4:                            ; preds = %dec_label_pc_10003c4c, %dec_label_pc_10003bd0
  %v0_10003bf4 = phi i32 [ %v1_10003cac, %dec_label_pc_10003c4c ], [ 0, %dec_label_pc_10003bd0 ]
  %v1_10003bf4 = mul i32 %v0_10003bf4, 24
  store i32 %v1_10003bf4, i32* %r0.global-to-local, align 4
  %v1_10003bf8 = mul i32 %v0_10003bf4, 4
  store i32 %v1_10003bf8, i32* %r11.global-to-local, align 4
  %v1_10003bfc = load i32, i32* %r21.global-to-local, align 4
  %v2_10003bfc = add i32 %v1_10003bfc, %v1_10003bf8
  %v3_10003bfc = inttoptr i32 %v2_10003bfc to i32*
  %v4_10003bfc = load i32, i32* %v3_10003bfc, align 4
  store i32 %v4_10003bfc, i32* @r28, align 4
  %v1_10003c00 = load i32, i32* @r31, align 4
  %v2_10003c00 = add i32 %v1_10003c00, %v1_10003bf4
  %v1_10003c04 = add i32 %v2_10003c00, 20
  %v2_10003c04 = inttoptr i32 %v1_10003c04 to i8*
  %v3_10003c04 = load i8, i8* %v2_10003c04, align 1
  %v4_10003c04 = zext i8 %v3_10003c04 to i32
  store i32 %v4_10003c04, i32* %r9.global-to-local, align 4
  %v1_10003c08 = add i32 %v4_10003bfc, 20
  store i32 %v1_10003c08, i32* @r27, align 4
  %tmp40 = icmp ult i8 %v3_10003c04, 32
  br i1 %tmp40, label %dec_label_pc_10003d30, label %dec_label_pc_10003c14

dec_label_pc_10003c14:                            ; preds = %dec_label_pc_10003bf4
  %v0_10003c14 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c14, label %dec_label_pc_10003d58, label %dec_label_pc_10003c18

dec_label_pc_10003c18:                            ; preds = %dec_label_pc_10003d30, %dec_label_pc_10003c14
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10003c20 = load i32, i32* %r17.global-to-local, align 4
  %v4_10003c20 = icmp eq i32 %v0_10003c20, 65535
  br i1 %v4_10003c20, label %dec_label_pc_10003d70, label %dec_label_pc_10003c28

dec_label_pc_10003c28:                            ; preds = %dec_label_pc_10003d58, %dec_label_pc_10003c18
  %v1_10003c28 = phi i32 [ %v1_10003d68, %dec_label_pc_10003d58 ], [ 65535, %dec_label_pc_10003c18 ]
  %v0_10003c28 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003c28 = icmp eq i32 %v0_10003c28, %v1_10003c28
  br i1 %v4_10003c28, label %dec_label_pc_10003d80, label %dec_label_pc_10003c30

dec_label_pc_10003c30:                            ; preds = %dec_label_pc_10003d70.dec_label_pc_10003c30_crit_edge, %dec_label_pc_10003c28
  %v1_10003c30 = phi i32 [ %v1_10003c30.pre, %dec_label_pc_10003d70.dec_label_pc_10003c30_crit_edge ], [ %v1_10003c28, %dec_label_pc_10003c28 ]
  %v0_10003c30 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003c30 = icmp eq i32 %v0_10003c30, %v1_10003c30
  br i1 %v4_10003c30, label %dec_label_pc_10003d90, label %dec_label_pc_10003c38

dec_label_pc_10003c38:                            ; preds = %dec_label_pc_10003d80.dec_label_pc_10003c38_crit_edge, %dec_label_pc_10003c30
  %v1_10003c38 = phi i32 [ %v1_10003c38.pre, %dec_label_pc_10003d80.dec_label_pc_10003c38_crit_edge ], [ %v1_10003c30, %dec_label_pc_10003c30 ]
  %v0_10003c38 = load i32, i32* %r16.global-to-local, align 4
  %v4_10003c38 = icmp eq i32 %v0_10003c38, %v1_10003c38
  br i1 %v4_10003c38, label %dec_label_pc_10003da0, label %dec_label_pc_10003c40

dec_label_pc_10003c40:                            ; preds = %dec_label_pc_10003d90.dec_label_pc_10003c40_crit_edge, %dec_label_pc_10003c38
  %v1_10003c40 = phi i32 [ %v1_10003c40.pre, %dec_label_pc_10003d90.dec_label_pc_10003c40_crit_edge ], [ %v1_10003c38, %dec_label_pc_10003c38 ]
  %v0_10003c40 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003c40 = icmp eq i32 %v0_10003c40, %v1_10003c40
  br i1 %v4_10003c40, label %dec_label_pc_10003db0, label %dec_label_pc_10003c48

dec_label_pc_10003c48:                            ; preds = %dec_label_pc_10003da0, %dec_label_pc_10003c40
  %v0_10003c48 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003c48, label %dec_label_pc_10003c4c, label %dec_label_pc_10003dbc

dec_label_pc_10003c4c:                            ; preds = %dec_label_pc_10003c48, %dec_label_pc_10003db0, %dec_label_pc_10003dbc
  %v0_10003c4c = load i32, i32* %r23.global-to-local, align 4
  %v1_10003c4c = trunc i32 %v0_10003c4c to i16
  %v2_10003c4c = load i32, i32* @r28, align 4
  %v3_10003c4c = add i32 %v2_10003c4c, 10
  %v4_10003c4c = inttoptr i32 %v3_10003c4c to i16*
  store i16 %v1_10003c4c, i16* %v4_10003c4c, align 2
  %v0_10003c54 = load i32, i32* @r28, align 4
  store i32 %v0_10003c54, i32* @r3, align 4
  %v2_10003c58 = call i32 @function_10005814(i32 %v0_10003c54, i32 20)
  %v3_10003c58 = trunc i32 %v2_10003c58 to i16
  %v0_10003c5c = load i32, i32* @r27, align 4
  store i32 %v0_10003c5c, i32* @r4, align 4
  %v3_10003c60 = load i32, i32* @r28, align 4
  %v4_10003c60 = add i32 %v3_10003c60, 10
  %v5_10003c60 = inttoptr i32 %v4_10003c60 to i16*
  store i16 %v3_10003c58, i16* %v5_10003c60, align 2
  %v0_10003c64 = load i32, i32* @r24, align 4
  %v0_10003c68 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003c68 = trunc i32 %v0_10003c68 to i16
  %v2_10003c68 = load i32, i32* @r27, align 4
  %v3_10003c68 = add i32 %v2_10003c68, 16
  %v4_10003c68 = inttoptr i32 %v3_10003c68 to i16*
  store i16 %v1_10003c68, i16* %v4_10003c68, align 2
  %v0_10003c6c = load i32, i32* @r26, align 4
  %v0_10003c70 = load i32, i32* @r28, align 4
  store i32 %v0_10003c70, i32* %r3.global-to-local, align 4
  %v4_10003c74 = call i32 @function_10005878(i32 %v0_10003c70, i32 %v0_10003c5c, i32 %v0_10003c64, i32 %v0_10003c6c)
  %v5_10003c74 = trunc i32 %v4_10003c74 to i16
  store i32 %v4_10003c74, i32* %r3.global-to-local, align 4
  %v3_10003c78 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003c78, i32* %r7.global-to-local, align 4
  %v0_10003c7c = load i32, i32* @r27, align 4
  %v1_10003c7c = add i32 %v0_10003c7c, 2
  %v2_10003c7c = inttoptr i32 %v1_10003c7c to i16*
  %v3_10003c7c = load i16, i16* %v2_10003c7c, align 2
  %v4_10003c7c = zext i16 %v3_10003c7c to i32
  store i32 %v4_10003c7c, i32* %r0.global-to-local, align 4
  %v0_10003c80 = load i32, i32* @r28, align 4
  %v1_10003c84 = mul i32 %v3_10003c78, 24
  store i32 %v1_10003c84, i32* %r7.global-to-local, align 4
  %v4_10003c88 = add i32 %v0_10003c7c, 16
  %v5_10003c88 = inttoptr i32 %v4_10003c88 to i16*
  store i16 %v5_10003c74, i16* %v5_10003c88, align 2
  %v0_10003c8c = load i32, i32* @r25, align 4
  %v0_10003c90 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10003c90, i32* %r3.global-to-local, align 4
  %v0_10003c94 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003c94 = load i32, i32* @r31, align 4
  %v2_10003c94 = add i32 %v1_10003c94, %v0_10003c94
  store i32 %v2_10003c94, i32* %r7.global-to-local, align 4
  %v0_10003c9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003c9c = trunc i32 %v0_10003c9c to i16
  %v3_10003c9c = add i32 %v2_10003c94, 2
  %v4_10003c9c = inttoptr i32 %v3_10003c9c to i16*
  store i16 %v1_10003c9c, i16* %v4_10003c9c, align 2
  store i32 268450984, i32* @lr, align 4
  %v6_10003ca4 = call i32 @function_1000aa74(i32 %v0_10003c90, i32 %v0_10003c80, i32 %v0_10003c8c, i32 16384, i32 %v2_10003c94, i32 16)
  store i32 %v6_10003ca4, i32* %r3.global-to-local, align 4
  %v3_10003ca8 = load i32, i32* %stack_var_-136, align 4
  %v1_10003cac = add i32 %v3_10003ca8, 1
  store i32 %v1_10003cac, i32* %r9.global-to-local, align 4
  %v1_10003cb0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003cb0 = icmp slt i32 %v1_10003cac, %v1_10003cb0
  store i32 %v1_10003cac, i32* %stack_var_-136, align 4
  br i1 %v2_10003cb0, label %dec_label_pc_10003bf4, label %dec_label_pc_10003cbc

dec_label_pc_10003cbc:                            ; preds = %dec_label_pc_10003c4c, %dec_label_pc_10003bc4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268451012, i32* @lr, align 4
  %v0_10003cc0 = call i32 @function_1000a1b8()
  store i32 %v0_10003cc0, i32* %r3.global-to-local, align 4
  store i32 %v2_10003a24, i32* %r0.global-to-local, align 4
  %v2_10003cc8 = icmp slt i32 %v2_10003a24, %v0_10003cc0
  br i1 %v2_10003cc8, label %dec_label_pc_10003cd0, label %dec_label_pc_10003bc4

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003cbc, %dec_label_pc_100037d0, %dec_label_pc_10003dd8
  store i32 %v0_100037ec, i32* %r0.global-to-local, align 4
  %v1_10003ce4 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100037d8)
  store i32 %v0_10003828, i32* %r24.global-to-local, align 4
  store i32 %v0_1000382c, i32* %r25.global-to-local, align 4
  store i32 %v0_10003830, i32* %r26.global-to-local, align 4
  store i32 %v0_100037e4, i32* %r27.global-to-local, align 4
  store i32 %v0_1000383c, i32* %r29.global-to-local, align 4
  %v0_10003d2c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003d2c

dec_label_pc_10003d30:                            ; preds = %dec_label_pc_10003bf4
  %v1_10003d30 = add i32 %v2_10003c00, 16
  %v2_10003d30 = inttoptr i32 %v1_10003d30 to i32*
  %v3_10003d30 = load i32, i32* %v2_10003d30, align 4
  store i32 %v3_10003d30, i32* %r29.global-to-local, align 4
  %v0_10003d34 = call i32 @function_10006dc0()
  store i32 %v0_10003d34, i32* %r3.global-to-local, align 4
  %v3_10003d38 = load i32, i32* %stack_var_-136, align 4
  %v1_10003d3c = mul i32 %v3_10003d38, 24
  %v1_10003d40 = load i32, i32* @r31, align 4
  %v2_10003d40 = add i32 %v1_10003d40, %v1_10003d3c
  store i32 %v2_10003d40, i32* %r9.global-to-local, align 4
  %v1_10003d44 = add i32 %v2_10003d40, 20
  %v2_10003d44 = inttoptr i32 %v1_10003d44 to i8*
  %v3_10003d44 = load i8, i8* %v2_10003d44, align 1
  %v4_10003d44 = zext i8 %v3_10003d44 to i32
  store i32 %v4_10003d44, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d44, 64
  %v2_10003d48 = zext i8 %tmp to i32
  %v3_10003d48 = lshr i32 %v0_10003d34, %v2_10003d48
  store i32 %v3_10003d48, i32* %r3.global-to-local, align 4
  %v0_10003d4c = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d4c = add i32 %v3_10003d48, %v0_10003d4c
  store i32 %v2_10003d4c, i32* %r29.global-to-local, align 4
  %v1_10003d50 = load i32, i32* @r28, align 4
  %v2_10003d50 = add i32 %v1_10003d50, 16
  %v3_10003d50 = inttoptr i32 %v2_10003d50 to i32*
  store i32 %v2_10003d4c, i32* %v3_10003d50, align 4
  %v0_10003d54 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d54, label %dec_label_pc_10003d58, label %dec_label_pc_10003c18

dec_label_pc_10003d58:                            ; preds = %dec_label_pc_10003d30, %dec_label_pc_10003c14
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003d5c = call i32 @function_10006dc0()
  store i32 %v0_10003d5c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10003d64 = load i32, i32* @r28, align 4
  %v2_10003d64 = add i32 %v1_10003d64, 12
  %v3_10003d64 = inttoptr i32 %v2_10003d64 to i32*
  store i32 %v0_10003d5c, i32* %v3_10003d64, align 4
  %v0_10003d68 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003d68 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003d68 = icmp eq i32 %v0_10003d68, %v1_10003d68
  br i1 %v4_10003d68, label %dec_label_pc_10003d70, label %dec_label_pc_10003c28

dec_label_pc_10003d70:                            ; preds = %dec_label_pc_10003d58, %dec_label_pc_10003c18
  %v0_10003d70 = call i32 @function_10006dc0()
  %v1_10003d70 = trunc i32 %v0_10003d70 to i16
  store i32 %v0_10003d70, i32* %r3.global-to-local, align 4
  %v0_10003d74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003d74 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003d74 = icmp eq i32 %v0_10003d74, %v1_10003d74
  %v3_10003d78 = load i32, i32* @r28, align 4
  %v4_10003d78 = add i32 %v3_10003d78, 4
  %v5_10003d78 = inttoptr i32 %v4_10003d78 to i16*
  store i16 %v1_10003d70, i16* %v5_10003d78, align 2
  br i1 %v4_10003d74, label %dec_label_pc_10003d80, label %dec_label_pc_10003d70.dec_label_pc_10003c30_crit_edge

dec_label_pc_10003d70.dec_label_pc_10003c30_crit_edge: ; preds = %dec_label_pc_10003d70
  %v1_10003c30.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003c30

dec_label_pc_10003d80:                            ; preds = %dec_label_pc_10003d70, %dec_label_pc_10003c28
  %v0_10003d80 = call i32 @function_10006dc0()
  %v1_10003d80 = trunc i32 %v0_10003d80 to i16
  store i32 %v0_10003d80, i32* %r3.global-to-local, align 4
  %v0_10003d84 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003d84 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003d84 = icmp eq i32 %v0_10003d84, %v1_10003d84
  %v3_10003d88 = load i32, i32* @r28, align 4
  %v4_10003d88 = add i32 %v3_10003d88, 20
  %v5_10003d88 = inttoptr i32 %v4_10003d88 to i16*
  store i16 %v1_10003d80, i16* %v5_10003d88, align 2
  br i1 %v4_10003d84, label %dec_label_pc_10003d90, label %dec_label_pc_10003d80.dec_label_pc_10003c38_crit_edge

dec_label_pc_10003d80.dec_label_pc_10003c38_crit_edge: ; preds = %dec_label_pc_10003d80
  %v1_10003c38.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003c38

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003d80, %dec_label_pc_10003c30
  %v0_10003d90 = call i32 @function_10006dc0()
  %v1_10003d90 = trunc i32 %v0_10003d90 to i16
  store i32 %v0_10003d90, i32* %r3.global-to-local, align 4
  %v0_10003d94 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003d94 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003d94 = icmp eq i32 %v0_10003d94, %v1_10003d94
  %v3_10003d98 = load i32, i32* @r27, align 4
  %v4_10003d98 = add i32 %v3_10003d98, 2
  %v5_10003d98 = inttoptr i32 %v4_10003d98 to i16*
  store i16 %v1_10003d90, i16* %v5_10003d98, align 2
  br i1 %v4_10003d94, label %dec_label_pc_10003da0, label %dec_label_pc_10003d90.dec_label_pc_10003c40_crit_edge

dec_label_pc_10003d90.dec_label_pc_10003c40_crit_edge: ; preds = %dec_label_pc_10003d90
  %v1_10003c40.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003c40

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d90, %dec_label_pc_10003c38
  %v0_10003da0 = call i32 @function_10006dc0()
  store i32 %v0_10003da0, i32* %r3.global-to-local, align 4
  %v0_10003da4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003da4 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003da4 = icmp eq i32 %v0_10003da4, %v1_10003da4
  %v1_10003da8 = load i32, i32* @r27, align 4
  %v2_10003da8 = add i32 %v1_10003da8, 4
  %v3_10003da8 = inttoptr i32 %v2_10003da8 to i32*
  store i32 %v0_10003da0, i32* %v3_10003da8, align 4
  br i1 %v4_10003da4, label %dec_label_pc_10003db0, label %dec_label_pc_10003c48

dec_label_pc_10003db0:                            ; preds = %dec_label_pc_10003da0, %dec_label_pc_10003c40
  %v0_10003db0 = call i32 @function_10006dc0()
  store i32 %v0_10003db0, i32* %r3.global-to-local, align 4
  %v1_10003db4 = load i32, i32* @r27, align 4
  %v2_10003db4 = add i32 %v1_10003db4, 8
  %v3_10003db4 = inttoptr i32 %v2_10003db4 to i32*
  store i32 %v0_10003db0, i32* %v3_10003db4, align 4
  %v0_10003db8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003db8, label %dec_label_pc_10003c4c, label %dec_label_pc_10003dbc

dec_label_pc_10003dbc:                            ; preds = %dec_label_pc_10003c48, %dec_label_pc_10003db0
  %v0_10003dbc = load i32, i32* @r28, align 4
  %v1_10003dbc = add i32 %v0_10003dbc, 40
  store i32 %v1_10003dbc, i32* @r29, align 4
  %v0_10003dc0 = load i32, i32* @r30, align 4
  store i32 %v0_10003dc0, i32* @r4, align 4
  store i32 %v1_10003dbc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10003dcc.68 to i32), i32* @lr, align 4
  %v0_10003dc8 = call i32 @function_10006e80()
  store i32 %v0_10003dc8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003dd0 = load i32, i32* @r29, align 4
  %v2_10003dd0 = load i32, i32* @r30, align 4
  %v4_10003dd0 = add i32 %v2_10003dd0, %v1_10003dd0
  %v5_10003dd0 = inttoptr i32 %v4_10003dd0 to i8*
  store i8 0, i8* %v5_10003dd0, align 1
  br label %dec_label_pc_10003c4c

dec_label_pc_10003dd8:                            ; preds = %dec_label_pc_10003a44
  %v0_10003dd8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10003dd8, i32* %r3.global-to-local, align 4
  store i32 268451296, i32* @lr, align 4
  %v0_10003ddc = call i32 @function_10009de8()
  store i32 %v0_10003ddc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003cd0

; uselistorder directives
  uselistorder i32 %v0_10003d90, { 1, 0 }
  uselistorder i32 %v0_10003d80, { 1, 0 }
  uselistorder i32 %v0_10003d70, { 1, 0 }
  uselistorder i32 %v1_10003d68, { 1, 0 }
  uselistorder i32 %v1_10003cac, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003c74, { 1, 0 }
  uselistorder i32 %v1_10003bf8, { 1, 0 }
  uselistorder i32 %v1_10003ae0, { 1, 0 }
  uselistorder i32 %v1_10003ad8, { 1, 0 }
  uselistorder i32 %v1_10003ab0, { 1, 0 }
  uselistorder i32 %v1_10003aa0, { 2, 1, 0 }
  uselistorder i32 %v1_10003a88, { 1, 0 }
  uselistorder i32 %v2_10003a24, { 1, 0 }
  uselistorder i32 %v6_10003a10, { 3, 0, 2, 1 }
  uselistorder i8 %v5_100038b0, { 1, 0 }
  uselistorder i8 %v5_10003878, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r29.global-to-local, { 10, 7, 11, 8, 12, 9, 13, 0, 1, 3, 2, 4, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_10003dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10003cd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003c4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10003ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10003b28, { 1, 0 }
}

define i32 @function_10003de4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10003de4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003de4 = load i32, i32* @lr, align 4
  store i32 %v0_10003de4, i32* %r0.global-to-local, align 4
  %v0_10003dec = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r24.global-to-local, align 4
  store i32 %v0_10003dec, i32* %r27.global-to-local, align 4
  %v0_10003e00 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003e48 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003e50 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268451432, i32* @lr, align 4
  %v2_10003e64 = call i32 @function_1000ae4c(i32 %arg2, i32 4)
  %v0_10003e68 = load i32, i32* @r29, align 4
  store i32 %v2_10003e64, i32* %r25.global-to-local, align 4
  %v0_10003e78 = load i32, i32* @r28, align 4
  store i32 %v0_10003e78, i32* %r3.global-to-local, align 4
  store i32 268451456, i32* @lr, align 4
  %v4_10003e7c = inttoptr i32 %v0_10003e68 to i32*
  %v5_10003e7c = call i32 @function_10001e18(i32 %v0_10003e78, i32* %v4_10003e7c, i32 2, i32 0)
  %v5_10003e8c = trunc i32 %v5_10003e7c to i8
  %v0_10003e94 = load i32, i32* @r29, align 4
  %v0_10003e98 = load i32, i32* @r28, align 4
  store i32 %v0_10003e98, i32* %r3.global-to-local, align 4
  store i32 268451488, i32* @lr, align 4
  %v4_10003e9c = inttoptr i32 %v0_10003e94 to i32*
  %v5_10003e9c = call i32 @function_10001e18(i32 %v0_10003e98, i32* %v4_10003e9c, i32 3, i32 65535)
  %v0_10003ea0 = load i32, i32* @r29, align 4
  store i32 %v5_10003e9c, i32* %r21.global-to-local, align 4
  %v0_10003eb0 = load i32, i32* @r28, align 4
  store i32 %v0_10003eb0, i32* %r3.global-to-local, align 4
  store i32 268451512, i32* @lr, align 4
  %v4_10003eb4 = inttoptr i32 %v0_10003ea0 to i32*
  %v5_10003eb4 = call i32 @function_10001e18(i32 %v0_10003eb0, i32* %v4_10003eb4, i32 4, i32 64)
  %v0_10003eb8 = load i32, i32* @r29, align 4
  %v5_10003ec4 = trunc i32 %v5_10003eb4 to i8
  %v0_10003ecc = load i32, i32* @r28, align 4
  store i32 %v0_10003ecc, i32* %r3.global-to-local, align 4
  store i32 268451540, i32* @lr, align 4
  %v4_10003ed0 = inttoptr i32 %v0_10003eb8 to i32*
  %v5_10003ed0 = call i32 @function_10001e18(i32 %v0_10003ecc, i32* %v4_10003ed0, i32 5, i32 1)
  %v1_10003ed8 = urem i32 %v5_10003ed0, 256
  %v0_10003ee8 = load i32, i32* @r29, align 4
  %v0_10003eec = load i32, i32* @r28, align 4
  store i32 %v0_10003eec, i32* %r3.global-to-local, align 4
  store i32 268451572, i32* @lr, align 4
  %v4_10003ef0 = inttoptr i32 %v0_10003ee8 to i32*
  %v5_10003ef0 = call i32 @function_10001e18(i32 %v0_10003eec, i32* %v4_10003ef0, i32 6, i32 65535)
  %v0_10003ef8 = load i32, i32* @r29, align 4
  store i32 %v5_10003ef0, i32* %r22.global-to-local, align 4
  %v0_10003f08 = load i32, i32* @r28, align 4
  store i32 %v0_10003f08, i32* %r3.global-to-local, align 4
  store i32 268451600, i32* @lr, align 4
  %v4_10003f0c = inttoptr i32 %v0_10003ef8 to i32*
  %v5_10003f0c = call i32 @function_10001e18(i32 %v0_10003f08, i32* %v4_10003f0c, i32 7, i32 65535)
  %v0_10003f14 = load i32, i32* @r29, align 4
  store i32 %v5_10003f0c, i32* %r23.global-to-local, align 4
  %v0_10003f24 = load i32, i32* @r28, align 4
  store i32 %v0_10003f24, i32* %r3.global-to-local, align 4
  store i32 268451628, i32* @lr, align 4
  %v4_10003f28 = inttoptr i32 %v0_10003f14 to i32*
  %v5_10003f28 = call i32 @function_10001e18(i32 %v0_10003f24, i32* %v4_10003f28, i32 16, i32 65535)
  %v0_10003f2c = load i32, i32* @r29, align 4
  store i32 %v5_10003f28, i32* %r20.global-to-local, align 4
  %v0_10003f3c = load i32, i32* @r28, align 4
  store i32 %v0_10003f3c, i32* %r3.global-to-local, align 4
  store i32 268451652, i32* @lr, align 4
  %v4_10003f40 = inttoptr i32 %v0_10003f2c to i32*
  %v5_10003f40 = call i32 @function_10001e18(i32 %v0_10003f3c, i32* %v4_10003f40, i32 17, i32 0)
  %v0_10003f44 = load i32, i32* @r29, align 4
  store i32 %v5_10003f40, i32* %r19.global-to-local, align 4
  %v0_10003f54 = load i32, i32* @r28, align 4
  store i32 %v0_10003f54, i32* %r3.global-to-local, align 4
  store i32 268451676, i32* @lr, align 4
  %v4_10003f58 = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f58 = call i32 @function_10001e18(i32 %v0_10003f54, i32* %v4_10003f58, i32 10, i32 0)
  %v0_10003f5c = load i32, i32* @r29, align 4
  store i32 %v5_10003f58, i32* %r14.global-to-local, align 4
  %v0_10003f6c = load i32, i32* @r28, align 4
  store i32 %v0_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451700, i32* @lr, align 4
  %v4_10003f70 = inttoptr i32 %v0_10003f5c to i32*
  %v5_10003f70 = call i32 @function_10001e18(i32 %v0_10003f6c, i32* %v4_10003f70, i32 11, i32 0)
  %v0_10003f74 = load i32, i32* @r29, align 4
  store i32 %v5_10003f70, i32* %r15.global-to-local, align 4
  %v0_10003f84 = load i32, i32* @r28, align 4
  store i32 %v0_10003f84, i32* %r3.global-to-local, align 4
  store i32 268451724, i32* @lr, align 4
  %v4_10003f88 = inttoptr i32 %v0_10003f74 to i32*
  %v5_10003f88 = call i32 @function_10001e18(i32 %v0_10003f84, i32* %v4_10003f88, i32 12, i32 0)
  %v0_10003f8c = load i32, i32* @r29, align 4
  store i32 %v5_10003f88, i32* %r16.global-to-local, align 4
  %v0_10003f9c = load i32, i32* @r28, align 4
  store i32 %v0_10003f9c, i32* %r3.global-to-local, align 4
  store i32 268451748, i32* @lr, align 4
  %v4_10003fa0 = inttoptr i32 %v0_10003f8c to i32*
  %v5_10003fa0 = call i32 @function_10001e18(i32 %v0_10003f9c, i32* %v4_10003fa0, i32 13, i32 0)
  %v0_10003fa4 = load i32, i32* @r29, align 4
  store i32 %v5_10003fa0, i32* %r17.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r28, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_10001e18(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 14, i32 1)
  %v0_10003fbc = load i32, i32* @r29, align 4
  store i32 %v5_10003fb8, i32* %r18.global-to-local, align 4
  %v0_10003fcc = load i32, i32* @r28, align 4
  store i32 %v0_10003fcc, i32* %r3.global-to-local, align 4
  store i32 268451796, i32* @lr, align 4
  %v4_10003fd0 = inttoptr i32 %v0_10003fbc to i32*
  %v5_10003fd0 = call i32 @function_10001e18(i32 %v0_10003fcc, i32* %v4_10003fd0, i32 15, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003fd8 = load i32, i32* @global_var_1001d230.61, align 4
  %v0_10003fdc = load i32, i32* @r29, align 4
  store i32 %v5_10003fd0, i32* %r30.global-to-local, align 4
  %v0_10003fe8 = load i32, i32* @r28, align 4
  store i32 %v0_10003fe8, i32* %r3.global-to-local, align 4
  store i32 268451824, i32* @lr, align 4
  %v5_10003fec = inttoptr i32 %v0_10003fdc to i32*
  %v6_10003fec = call i32 @function_10001d98(i32 %v0_10003fe8, i32* %v5_10003fec, i32 24, i32 %v3_10003fd8, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268451836, i32* @lr, align 4
  %v0_10003ff8 = call i32 @function_1000a1b8()
  %v1_10004000 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004000 = add i32 %v1_10004000, %v0_10003ff8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451860, i32* @lr, align 4
  %v3_10004010 = call i32 @function_1000aaf0(i32 2, i32 3, i32 6)
  store i32 %v3_10004010, i32* %r3.global-to-local, align 4
  %v3_10004014 = icmp eq i32 %v3_10004010, -1
  store i32 %v3_10004010, i32* %r26.global-to-local, align 4
  br i1 %v3_10004014, label %dec_label_pc_100042d0, label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10003de4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000402c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268451900, i32* @lr, align 4
  %v5_10004038 = call i32 @function_1000aab4(i32 0, i32 3, i32 %v2_1000402c, i32 4, i32 4)
  store i32 %v5_10004038, i32* %r3.global-to-local, align 4
  %v3_1000403c = icmp eq i32 %v5_10004038, -1
  br i1 %v3_1000403c, label %dec_label_pc_100043c8, label %dec_label_pc_10004044

dec_label_pc_10004044:                            ; preds = %dec_label_pc_10004020
  %v0_10004044 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004044 = icmp slt i32 %v0_10004044, 0
  %v3_10004044 = icmp eq i32 %v0_10004044, 0
  store i1 %v1_10004044, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10004044, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000404c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000404c = urem i32 %v0_1000404c, 256
  store i32 %v1_1000404c, i32* %r14.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10004054 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004054 = urem i32 %v0_10004054, 65536
  store i32 %v1_10004054, i32* %r21.global-to-local, align 4
  %v0_10004058 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004058 = urem i32 %v0_10004058, 65536
  store i32 %v1_10004058, i32* %r22.global-to-local, align 4
  %v0_1000405c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000405c = urem i32 %v0_1000405c, 65536
  store i32 %v1_1000405c, i32* %r23.global-to-local, align 4
  %tmp39 = icmp slt i32 %v0_10004044, 1
  br i1 %tmp39, label %dec_label_pc_100041d0.preheader, label %dec_label_pc_10004068

dec_label_pc_10004068:                            ; preds = %dec_label_pc_10004044
  %v0_1000406c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000406c = urem i32 %v0_1000406c, 2
  %v0_10004074 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004074 = urem i32 %v0_10004074, 2
  store i32 %v1_10004074, i32* %r0.global-to-local, align 4
  %v3_10004078 = icmp eq i32 %v1_10003ed8, 0
  store i1 %v3_10004078, i1* %cr4_eq.global-to-local, align 1
  %v0_1000407c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 2
  %v0_10004084 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004084 = urem i32 %v0_10004084, 2
  store i32 %v1_10004084, i32* %r14.global-to-local, align 4
  store i32 %v1_1000404c, i32* %r9.global-to-local, align 4
  %v0_1000408c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 2
  store i32 %v1_1000408c, i32* %r15.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_10004098 = urem i32 %v0_1000404c, 2
  store i32 %v1_10004098, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r30.global-to-local, align 4
  store i32 6, i32* %r27.global-to-local, align 4
  store i32 10, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r17.global-to-local, align 4
  store i32 3, i32* %r16.global-to-local, align 4
  %v4_100040f4 = sext i8 %v5_10003e8c to i32
  %v4_100040fc = sext i8 %v5_10003ec4 to i32
  br label %dec_label_pc_100040b0

dec_label_pc_100040b0:                            ; preds = %dec_label_pc_10004110, %dec_label_pc_10004068
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452028, i32* @lr, align 4
  %v2_100040b8 = call i32 @function_1000ae4c(i32 128, i32 1)
  store i32 %v2_100040b8, i32* %r3.global-to-local, align 4
  %v3_100040bc = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100040bc, i32* %r9.global-to-local, align 4
  %v0_100040c0 = load i32, i32* @r29, align 4
  %v1_100040c0 = mul i32 %v0_100040c0, 4
  store i32 %v1_100040c0, i32* %r0.global-to-local, align 4
  %v1_100040c4 = load i32, i32* %r25.global-to-local, align 4
  %v3_100040c4 = add i32 %v1_100040c4, %v1_100040c0
  %v4_100040c4 = inttoptr i32 %v3_100040c4 to i32*
  store i32 %v2_100040b8, i32* %v4_100040c4, align 4
  %v0_100040c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040c8 = mul i32 %v0_100040c8, 4
  store i32 %v1_100040c8, i32* %r9.global-to-local, align 4
  %v1_100040cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100040cc = add i32 %v1_100040cc, %v1_100040c8
  %v3_100040cc = inttoptr i32 %v2_100040cc to i32*
  %v4_100040cc = load i32, i32* %v3_100040cc, align 4
  store i32 %v4_100040cc, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100040d4 = inttoptr i32 %v4_100040cc to i32*
  %v2_100040d4 = load i32, i32* %v1_100040d4, align 4
  store i32 %v2_100040d4, i32* %r0.global-to-local, align 4
  %v1_100040d8 = add i32 %v4_100040cc, 20
  store i32 %v1_100040d8, i32* %r11.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r21.global-to-local, align 4
  %v1_100040dc = trunc i32 %v0_100040dc to i16
  %v3_100040dc = add i32 %v4_100040cc, 4
  %v4_100040dc = inttoptr i32 %v3_100040dc to i16*
  store i16 %v1_100040dc, i16* %v4_100040dc, align 2
  %v2_100040e0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v2_100040e0, i32* %r0.global-to-local, align 4
  %v1_100040e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_100040ec = load i32, i32* %r29.global-to-local, align 4
  %v2_100040ec = inttoptr i32 %v1_100040ec to i32*
  store i32 %v1_100040e4, i32* %v2_100040ec, align 4
  %v0_100040f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040f0 = trunc i32 %v0_100040f0 to i16
  %v2_100040f0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100040f0 = add i32 %v2_100040f0, 2
  %v4_100040f0 = inttoptr i32 %v3_100040f0 to i16*
  store i16 %v1_100040f0, i16* %v4_100040f0, align 2
  store i32 %v4_100040f4, i32* %r0.global-to-local, align 4
  %v2_100040f8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100040f8 = add i32 %v2_100040f8, 1
  %v4_100040f8 = inttoptr i32 %v3_100040f8 to i8*
  store i8 %v5_10003e8c, i8* %v4_100040f8, align 1
  store i32 %v4_100040fc, i32* %r9.global-to-local, align 4
  %v2_10004100 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004100 = add i32 %v2_10004100, 8
  %v4_10004100 = inttoptr i32 %v3_10004100 to i8*
  store i8 %v5_10003ec4, i8* %v4_10004100, align 1
  %v0_10004104 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004104, label %dec_label_pc_10004110, label %dec_label_pc_10004108

dec_label_pc_10004108:                            ; preds = %dec_label_pc_100040b0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000410c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000410c = add i32 %v2_1000410c, 6
  %v4_1000410c = inttoptr i32 %v3_1000410c to i16*
  store i16 16384, i16* %v4_1000410c, align 2
  br label %dec_label_pc_10004110

dec_label_pc_10004110:                            ; preds = %dec_label_pc_100040b0, %dec_label_pc_10004108
  %v0_10004110 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004110 = trunc i32 %v0_10004110 to i8
  %v2_10004110 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004110 = add i32 %v2_10004110, 9
  %v4_10004110 = inttoptr i32 %v3_10004110 to i8*
  store i8 %v1_10004110, i8* %v4_10004110, align 1
  %v0_10004114 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004114 = trunc i32 %v0_10004114 to i16
  %v2_10004114 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 20
  %v4_10004114 = inttoptr i32 %v3_10004114 to i16*
  store i16 %v1_10004114, i16* %v4_10004114, align 2
  store i32 %v6_10003fec, i32* %r0.global-to-local, align 4
  %v0_1000411c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000411c = trunc i32 %v0_1000411c to i16
  %v2_1000411c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000411c = add i32 %v2_1000411c, 2
  %v4_1000411c = inttoptr i32 %v3_1000411c to i16*
  store i16 %v1_1000411c, i16* %v4_1000411c, align 2
  %v0_10004120 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004120 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004120 = add i32 %v1_10004120, 12
  %v3_10004120 = inttoptr i32 %v2_10004120 to i32*
  store i32 %v0_10004120, i32* %v3_10004120, align 4
  %v3_10004124 = load i32, i32* %stack_var_-136, align 4
  %v1_10004128 = mul i32 %v3_10004124, 24
  %v1_1000412c = load i32, i32* @r31, align 4
  %v2_1000412c = add i32 %v1_1000412c, %v1_10004128
  store i32 %v2_1000412c, i32* %r9.global-to-local, align 4
  %v1_10004130 = add i32 %v2_1000412c, 16
  %v2_10004130 = inttoptr i32 %v1_10004130 to i32*
  %v3_10004130 = load i32, i32* %v2_10004130, align 4
  store i32 %v3_10004130, i32* %r0.global-to-local, align 4
  store i32 %v1_1000406c, i32* %r9.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, 16
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v3_10004130, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000413c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000413c = add i32 %v1_1000413c, 4
  %v3_1000413c = inttoptr i32 %v2_1000413c to i32*
  store i32 %v0_1000413c, i32* %v3_1000413c, align 4
  %v0_10004140 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004140 = add i32 %v0_10004140, 12
  %v2_10004140 = inttoptr i32 %v1_10004140 to i32*
  %v3_10004140 = load i32, i32* %v2_10004140, align 4
  store i32 %v3_10004140, i32* %r0.global-to-local, align 4
  %v2_10004144 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v2_10004144, i32* %r0.global-to-local, align 4
  %v1_10004148 = call i32 @__asm_rlwimi(i32 %v1_10004098, i32 21, i32 10, i32 10)
  store i32 %v1_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = call i32 @__asm_rlwimi(i32 %v1_1000406c, i32 20, i32 11, i32 11)
  store i32 %v1_1000414c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000407c, i32* %r9.global-to-local, align 4
  %v1_10004154 = call i32 @__asm_rlwimi(i32 %v1_1000407c, i32 19, i32 12, i32 12)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  store i32 %v1_10004074, i32* %r9.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 %v1_10004074, i32 18, i32 13, i32 13)
  store i32 %v1_1000415c, i32* %r0.global-to-local, align 4
  %v1_10004160 = call i32 @__asm_rlwimi(i32 %v1_10004084, i32 17, i32 14, i32 14)
  store i32 %v1_10004160, i32* %r0.global-to-local, align 4
  %v1_10004164 = call i32 @__asm_rlwimi(i32 %v1_1000408c, i32 16, i32 15, i32 15)
  store i32 %v1_10004164, i32* %r0.global-to-local, align 4
  %v1_10004168 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004168 = add i32 %v1_10004168, 12
  %v3_10004168 = inttoptr i32 %v2_10004168 to i32*
  store i32 %v1_10004164, i32* %v3_10004168, align 4
  %v0_1000416c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000416c = trunc i32 %v0_1000416c to i8
  %v2_1000416c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000416c = add i32 %v2_1000416c, 40
  %v4_1000416c = inttoptr i32 %v3_1000416c to i8*
  store i8 %v1_1000416c, i8* %v4_1000416c, align 1
  %v3_10004170 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004170 = add i32 %v3_10004170, 41
  %v5_10004170 = inttoptr i32 %v4_10004170 to i8*
  store i8 4, i8* %v5_10004170, align 1
  %v0_10004174 = call i32 @function_10006dc0()
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000417c = urem i32 %v0_10004174, 16
  store i32 %v1_1000417c, i32* %r3.global-to-local, align 4
  %v2_10004180 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004180 = add i32 %v2_10004180, 46
  %v4_10004180 = inttoptr i32 %v3_10004180 to i8*
  store i8 8, i8* %v4_10004180, align 1
  %v0_10004184 = load i32, i32* %r3.global-to-local, align 4
  %v1_10004184 = add i32 %v0_10004184, 1400
  store i32 %v1_10004184, i32* %r3.global-to-local, align 4
  %v3_10004188 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004188 = add i32 %v3_10004188, 44
  %v5_10004188 = inttoptr i32 %v4_10004188 to i8*
  store i8 4, i8* %v5_10004188, align 1
  %v0_1000418c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000418c = trunc i32 %v0_1000418c to i16
  %v2_1000418c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000418c = add i32 %v2_1000418c, 42
  %v4_1000418c = inttoptr i32 %v3_1000418c to i16*
  store i16 %v1_1000418c, i16* %v4_1000418c, align 2
  %v0_10004190 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004190 = trunc i32 %v0_10004190 to i8
  %v2_10004190 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004190 = add i32 %v2_10004190, 45
  %v4_10004190 = inttoptr i32 %v3_10004190 to i8*
  store i8 %v1_10004190, i8* %v4_10004190, align 1
  %v3_10004194 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004194 = add i32 %v3_10004194, 47
  %v5_10004194 = inttoptr i32 %v4_10004194 to i8*
  store i8 10, i8* %v5_10004194, align 1
  %v0_10004198 = call i32 @function_10006dc0()
  store i32 %v0_10004198, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100041a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100041a4 = add i32 %v1_100041a4, 48
  %v3_100041a4 = inttoptr i32 %v2_100041a4 to i32*
  store i32 %v0_10004198, i32* %v3_100041a4, align 4
  %v0_100041a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100041a8 = add i32 %v1_100041a8, 52
  %v3_100041a8 = inttoptr i32 %v2_100041a8 to i32*
  store i32 %v0_100041a8, i32* %v3_100041a8, align 4
  %v0_100041ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100041ac = trunc i32 %v0_100041ac to i8
  %v2_100041ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100041ac = add i32 %v2_100041ac, 56
  %v4_100041ac = inttoptr i32 %v3_100041ac to i8*
  store i8 %v1_100041ac, i8* %v4_100041ac, align 1
  %v0_100041b0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100041b0 = trunc i32 %v0_100041b0 to i8
  %v2_100041b0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100041b0 = add i32 %v2_100041b0, 59
  %v4_100041b0 = inttoptr i32 %v3_100041b0 to i8*
  store i8 %v1_100041b0, i8* %v4_100041b0, align 1
  %v0_100041b4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100041b4 = trunc i32 %v0_100041b4 to i8
  %v2_100041b4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100041b4 = add i32 %v2_100041b4, 57
  %v4_100041b4 = inttoptr i32 %v3_100041b4 to i8*
  store i8 %v1_100041b4, i8* %v4_100041b4, align 1
  %v0_100041b8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100041b8 = trunc i32 %v0_100041b8 to i8
  %v2_100041b8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100041b8 = add i32 %v2_100041b8, 58
  %v4_100041b8 = inttoptr i32 %v3_100041b8 to i8*
  store i8 %v1_100041b8, i8* %v4_100041b8, align 1
  %v3_100041bc = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100041bc, i32* %r9.global-to-local, align 4
  %v1_100041c0 = add i32 %v3_100041bc, 1
  store i32 %v1_100041c0, i32* @r29, align 4
  %v1_100041c4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100041c4 = icmp slt i32 %v1_100041c0, %v1_100041c4
  store i32 %v1_100041c0, i32* %stack_var_-136, align 4
  br i1 %v2_100041c4, label %dec_label_pc_100040b0, label %dec_label_pc_100041d0.preheader

dec_label_pc_100041d0.preheader:                  ; preds = %dec_label_pc_10004110, %dec_label_pc_10004044
  %v3_100041e8 = icmp eq i32 %v6_10003fec, -1
  %v3_100041ec = icmp eq i32 %v1_1000404c, 0
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_100041d0.preheader, %dec_label_pc_100042bc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100041d8 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_100041d8 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_100041d8 = or i1 %v0_100041d8, %v1_100041d8
  br i1 %v2_100041d8, label %dec_label_pc_100042bc, label %dec_label_pc_100041dc

dec_label_pc_100041dc:                            ; preds = %dec_label_pc_100041d0
  store i32 %v6_10003fec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i1 %v3_100041e8, i1* %cr3_eq.global-to-local, align 1
  store i1 %v3_100041ec, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100041f4

dec_label_pc_100041f4:                            ; preds = %dec_label_pc_1000424c, %dec_label_pc_100041dc
  %v0_100041f4 = phi i32 [ %v1_100042ac, %dec_label_pc_1000424c ], [ 0, %dec_label_pc_100041dc ]
  %v1_100041f4 = mul i32 %v0_100041f4, 24
  store i32 %v1_100041f4, i32* %r0.global-to-local, align 4
  %v1_100041f8 = mul i32 %v0_100041f4, 4
  store i32 %v1_100041f8, i32* %r11.global-to-local, align 4
  %v1_100041fc = load i32, i32* %r25.global-to-local, align 4
  %v2_100041fc = add i32 %v1_100041fc, %v1_100041f8
  %v3_100041fc = inttoptr i32 %v2_100041fc to i32*
  %v4_100041fc = load i32, i32* %v3_100041fc, align 4
  store i32 %v4_100041fc, i32* %r28.global-to-local, align 4
  %v1_10004200 = load i32, i32* @r31, align 4
  %v2_10004200 = add i32 %v1_10004200, %v1_100041f4
  %v1_10004204 = add i32 %v2_10004200, 20
  %v2_10004204 = inttoptr i32 %v1_10004204 to i8*
  %v3_10004204 = load i8, i8* %v2_10004204, align 1
  %v4_10004204 = zext i8 %v3_10004204 to i32
  store i32 %v4_10004204, i32* %r9.global-to-local, align 4
  %v1_10004208 = add i32 %v4_100041fc, 20
  store i32 %v1_10004208, i32* %r27.global-to-local, align 4
  %tmp40 = icmp ult i8 %v3_10004204, 32
  br i1 %tmp40, label %dec_label_pc_10004330, label %dec_label_pc_10004214

dec_label_pc_10004214:                            ; preds = %dec_label_pc_100041f4
  %v0_10004214 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004214, label %dec_label_pc_10004358, label %dec_label_pc_10004218

dec_label_pc_10004218:                            ; preds = %dec_label_pc_10004330, %dec_label_pc_10004214
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004220 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004220 = icmp eq i32 %v0_10004220, 65535
  br i1 %v4_10004220, label %dec_label_pc_10004370, label %dec_label_pc_10004228

dec_label_pc_10004228:                            ; preds = %dec_label_pc_10004358, %dec_label_pc_10004218
  %v1_10004228 = phi i32 [ %v1_10004368, %dec_label_pc_10004358 ], [ 65535, %dec_label_pc_10004218 ]
  %v0_10004228 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004228 = icmp eq i32 %v0_10004228, %v1_10004228
  br i1 %v4_10004228, label %dec_label_pc_10004380, label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_10004370.dec_label_pc_10004230_crit_edge, %dec_label_pc_10004228
  %v1_10004230 = phi i32 [ %v1_10004230.pre, %dec_label_pc_10004370.dec_label_pc_10004230_crit_edge ], [ %v1_10004228, %dec_label_pc_10004228 ]
  %v0_10004230 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004230 = icmp eq i32 %v0_10004230, %v1_10004230
  br i1 %v4_10004230, label %dec_label_pc_10004390, label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_10004380.dec_label_pc_10004238_crit_edge, %dec_label_pc_10004230
  %v1_10004238 = phi i32 [ %v1_10004238.pre, %dec_label_pc_10004380.dec_label_pc_10004238_crit_edge ], [ %v1_10004230, %dec_label_pc_10004230 ]
  %v0_10004238 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004238 = icmp eq i32 %v0_10004238, %v1_10004238
  br i1 %v4_10004238, label %dec_label_pc_100043a0, label %dec_label_pc_10004240

dec_label_pc_10004240:                            ; preds = %dec_label_pc_10004390.dec_label_pc_10004240_crit_edge, %dec_label_pc_10004238
  %v1_10004240 = phi i32 [ %v1_10004240.pre, %dec_label_pc_10004390.dec_label_pc_10004240_crit_edge ], [ %v1_10004238, %dec_label_pc_10004238 ]
  %v0_10004240 = load i32, i32* %r19.global-to-local, align 4
  %v4_10004240 = icmp eq i32 %v0_10004240, %v1_10004240
  br i1 %v4_10004240, label %dec_label_pc_100043b0, label %dec_label_pc_10004248

dec_label_pc_10004248:                            ; preds = %dec_label_pc_100043a0, %dec_label_pc_10004240
  %v0_10004248 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004248, label %dec_label_pc_1000424c, label %dec_label_pc_100043bc

dec_label_pc_1000424c:                            ; preds = %dec_label_pc_10004248, %dec_label_pc_100043b0, %dec_label_pc_100043bc
  %v0_1000424c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000424c = trunc i32 %v0_1000424c to i16
  %v2_1000424c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000424c = add i32 %v2_1000424c, 10
  %v4_1000424c = inttoptr i32 %v3_1000424c to i16*
  store i16 %v1_1000424c, i16* %v4_1000424c, align 2
  %v0_10004254 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004254, i32* @r3, align 4
  %v2_10004258 = call i32 @function_10005814(i32 %v0_10004254, i32 20)
  %v3_10004258 = trunc i32 %v2_10004258 to i16
  %v0_1000425c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000425c, i32* @r4, align 4
  %v4_10004260 = add i32 %v0_10004254, 10
  %v5_10004260 = inttoptr i32 %v4_10004260 to i16*
  store i16 %v3_10004258, i16* %v5_10004260, align 2
  %v0_10004268 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004268 = trunc i32 %v0_10004268 to i16
  %v2_10004268 = load i32, i32* %r27.global-to-local, align 4
  %v3_10004268 = add i32 %v2_10004268, 16
  %v4_10004268 = inttoptr i32 %v3_10004268 to i16*
  store i16 %v1_10004268, i16* %v4_10004268, align 2
  %v0_10004270 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004270, i32* %r3.global-to-local, align 4
  %v4_10004274 = call i32 @function_10005878(i32 %v0_10004270, i32 %v0_1000425c, i32 40, i32 40)
  %v5_10004274 = trunc i32 %v4_10004274 to i16
  store i32 %v4_10004274, i32* %r3.global-to-local, align 4
  %v3_10004278 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10004278, i32* %r7.global-to-local, align 4
  %v0_1000427c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000427c = add i32 %v0_1000427c, 2
  %v2_1000427c = inttoptr i32 %v1_1000427c to i16*
  %v3_1000427c = load i16, i16* %v2_1000427c, align 2
  %v4_1000427c = zext i16 %v3_1000427c to i32
  store i32 %v4_1000427c, i32* %r0.global-to-local, align 4
  %v0_10004280 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004284 = mul i32 %v3_10004278, 24
  store i32 %v1_10004284, i32* %r7.global-to-local, align 4
  %v4_10004288 = add i32 %v0_1000427c, 16
  %v5_10004288 = inttoptr i32 %v4_10004288 to i16*
  store i16 %v5_10004274, i16* %v5_10004288, align 2
  %v0_10004290 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004290, i32* %r3.global-to-local, align 4
  %v0_10004294 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004294 = load i32, i32* @r31, align 4
  %v2_10004294 = add i32 %v1_10004294, %v0_10004294
  store i32 %v2_10004294, i32* %r7.global-to-local, align 4
  %v0_1000429c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000429c = trunc i32 %v0_1000429c to i16
  %v3_1000429c = add i32 %v2_10004294, 2
  %v4_1000429c = inttoptr i32 %v3_1000429c to i16*
  store i16 %v1_1000429c, i16* %v4_1000429c, align 2
  store i32 268452520, i32* @lr, align 4
  %v6_100042a4 = call i32 @function_1000aa74(i32 %v0_10004290, i32 %v0_10004280, i32 60, i32 16384, i32 %v2_10004294, i32 16)
  store i32 %v6_100042a4, i32* %r3.global-to-local, align 4
  %v3_100042a8 = load i32, i32* %stack_var_-136, align 4
  %v1_100042ac = add i32 %v3_100042a8, 1
  store i32 %v1_100042ac, i32* %r9.global-to-local, align 4
  %v1_100042b0 = load i32, i32* %r24.global-to-local, align 4
  %v2_100042b0 = icmp slt i32 %v1_100042ac, %v1_100042b0
  store i32 %v1_100042ac, i32* %stack_var_-136, align 4
  br i1 %v2_100042b0, label %dec_label_pc_100041f4, label %dec_label_pc_100042bc

dec_label_pc_100042bc:                            ; preds = %dec_label_pc_1000424c, %dec_label_pc_100041d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268452548, i32* @lr, align 4
  %v0_100042c0 = call i32 @function_1000a1b8()
  store i32 %v0_100042c0, i32* %r3.global-to-local, align 4
  store i32 %v2_10004000, i32* %r0.global-to-local, align 4
  %v2_100042c8 = icmp slt i32 %v2_10004000, %v0_100042c0
  br i1 %v2_100042c8, label %dec_label_pc_100042d0, label %dec_label_pc_100041d0

dec_label_pc_100042d0:                            ; preds = %dec_label_pc_100042bc, %dec_label_pc_10003de4, %dec_label_pc_100043c8
  store i32 %v0_10003e00, i32* %r0.global-to-local, align 4
  %v1_100042e4 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003dec)
  store i32 %v0_10003e48, i32* %r28.global-to-local, align 4
  store i32 %v0_10003e50, i32* %r29.global-to-local, align 4
  %v0_1000432c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000432c

dec_label_pc_10004330:                            ; preds = %dec_label_pc_100041f4
  %v1_10004330 = add i32 %v2_10004200, 16
  %v2_10004330 = inttoptr i32 %v1_10004330 to i32*
  %v3_10004330 = load i32, i32* %v2_10004330, align 4
  store i32 %v3_10004330, i32* %r29.global-to-local, align 4
  %v0_10004334 = call i32 @function_10006dc0()
  store i32 %v0_10004334, i32* %r3.global-to-local, align 4
  %v3_10004338 = load i32, i32* %stack_var_-136, align 4
  %v1_1000433c = mul i32 %v3_10004338, 24
  %v1_10004340 = load i32, i32* @r31, align 4
  %v2_10004340 = add i32 %v1_10004340, %v1_1000433c
  store i32 %v2_10004340, i32* %r9.global-to-local, align 4
  %v1_10004344 = add i32 %v2_10004340, 20
  %v2_10004344 = inttoptr i32 %v1_10004344 to i8*
  %v3_10004344 = load i8, i8* %v2_10004344, align 1
  %v4_10004344 = zext i8 %v3_10004344 to i32
  store i32 %v4_10004344, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004344, 64
  %v2_10004348 = zext i8 %tmp to i32
  %v3_10004348 = lshr i32 %v0_10004334, %v2_10004348
  store i32 %v3_10004348, i32* %r3.global-to-local, align 4
  %v0_1000434c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000434c = add i32 %v3_10004348, %v0_1000434c
  store i32 %v2_1000434c, i32* %r29.global-to-local, align 4
  %v1_10004350 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004350 = add i32 %v1_10004350, 16
  %v3_10004350 = inttoptr i32 %v2_10004350 to i32*
  store i32 %v2_1000434c, i32* %v3_10004350, align 4
  %v0_10004354 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004354, label %dec_label_pc_10004358, label %dec_label_pc_10004218

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004330, %dec_label_pc_10004214
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000435c = call i32 @function_10006dc0()
  store i32 %v0_1000435c, i32* %r3.global-to-local, align 4
  %v0_10004360 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004360 = or i32 %v0_10004360, 65535
  store i32 %v1_10004360, i32* %r29.global-to-local, align 4
  %v1_10004364 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004364 = add i32 %v1_10004364, 12
  %v3_10004364 = inttoptr i32 %v2_10004364 to i32*
  store i32 %v0_1000435c, i32* %v3_10004364, align 4
  %v0_10004368 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004368 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004368 = icmp eq i32 %v0_10004368, %v1_10004368
  br i1 %v4_10004368, label %dec_label_pc_10004370, label %dec_label_pc_10004228

dec_label_pc_10004370:                            ; preds = %dec_label_pc_10004358, %dec_label_pc_10004218
  %v0_10004370 = call i32 @function_10006dc0()
  %v1_10004370 = trunc i32 %v0_10004370 to i16
  store i32 %v0_10004370, i32* %r3.global-to-local, align 4
  %v0_10004374 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004374 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004374 = icmp eq i32 %v0_10004374, %v1_10004374
  %v3_10004378 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004378 = add i32 %v3_10004378, 4
  %v5_10004378 = inttoptr i32 %v4_10004378 to i16*
  store i16 %v1_10004370, i16* %v5_10004378, align 2
  br i1 %v4_10004374, label %dec_label_pc_10004380, label %dec_label_pc_10004370.dec_label_pc_10004230_crit_edge

dec_label_pc_10004370.dec_label_pc_10004230_crit_edge: ; preds = %dec_label_pc_10004370
  %v1_10004230.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004230

dec_label_pc_10004380:                            ; preds = %dec_label_pc_10004370, %dec_label_pc_10004228
  %v0_10004380 = call i32 @function_10006dc0()
  %v1_10004380 = trunc i32 %v0_10004380 to i16
  store i32 %v0_10004380, i32* %r3.global-to-local, align 4
  %v0_10004384 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004384 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004384 = icmp eq i32 %v0_10004384, %v1_10004384
  %v3_10004388 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004388 = add i32 %v3_10004388, 20
  %v5_10004388 = inttoptr i32 %v4_10004388 to i16*
  store i16 %v1_10004380, i16* %v5_10004388, align 2
  br i1 %v4_10004384, label %dec_label_pc_10004390, label %dec_label_pc_10004380.dec_label_pc_10004238_crit_edge

dec_label_pc_10004380.dec_label_pc_10004238_crit_edge: ; preds = %dec_label_pc_10004380
  %v1_10004238.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004238

dec_label_pc_10004390:                            ; preds = %dec_label_pc_10004380, %dec_label_pc_10004230
  %v0_10004390 = call i32 @function_10006dc0()
  %v1_10004390 = trunc i32 %v0_10004390 to i16
  store i32 %v0_10004390, i32* %r3.global-to-local, align 4
  %v0_10004394 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004394 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004394 = icmp eq i32 %v0_10004394, %v1_10004394
  %v3_10004398 = load i32, i32* %r27.global-to-local, align 4
  %v4_10004398 = add i32 %v3_10004398, 2
  %v5_10004398 = inttoptr i32 %v4_10004398 to i16*
  store i16 %v1_10004390, i16* %v5_10004398, align 2
  br i1 %v4_10004394, label %dec_label_pc_100043a0, label %dec_label_pc_10004390.dec_label_pc_10004240_crit_edge

dec_label_pc_10004390.dec_label_pc_10004240_crit_edge: ; preds = %dec_label_pc_10004390
  %v1_10004240.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004240

dec_label_pc_100043a0:                            ; preds = %dec_label_pc_10004390, %dec_label_pc_10004238
  %v0_100043a0 = call i32 @function_10006dc0()
  store i32 %v0_100043a0, i32* %r3.global-to-local, align 4
  %v0_100043a4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100043a4 = load i32, i32* %r29.global-to-local, align 4
  %v4_100043a4 = icmp eq i32 %v0_100043a4, %v1_100043a4
  %v1_100043a8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100043a8 = add i32 %v1_100043a8, 4
  %v3_100043a8 = inttoptr i32 %v2_100043a8 to i32*
  store i32 %v0_100043a0, i32* %v3_100043a8, align 4
  br i1 %v4_100043a4, label %dec_label_pc_100043b0, label %dec_label_pc_10004248

dec_label_pc_100043b0:                            ; preds = %dec_label_pc_100043a0, %dec_label_pc_10004240
  %v0_100043b0 = call i32 @function_10006dc0()
  store i32 %v0_100043b0, i32* %r3.global-to-local, align 4
  %v1_100043b4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100043b4 = add i32 %v1_100043b4, 8
  %v3_100043b4 = inttoptr i32 %v2_100043b4 to i32*
  store i32 %v0_100043b0, i32* %v3_100043b4, align 4
  %v0_100043b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100043b8, label %dec_label_pc_1000424c, label %dec_label_pc_100043bc

dec_label_pc_100043bc:                            ; preds = %dec_label_pc_10004248, %dec_label_pc_100043b0
  %v0_100043bc = call i32 @function_10006dc0()
  %v1_100043bc = trunc i32 %v0_100043bc to i16
  store i32 %v0_100043bc, i32* %r3.global-to-local, align 4
  %v3_100043c0 = load i32, i32* %r27.global-to-local, align 4
  %v4_100043c0 = add i32 %v3_100043c0, 18
  %v5_100043c0 = inttoptr i32 %v4_100043c0 to i16*
  store i16 %v1_100043bc, i16* %v5_100043c0, align 2
  br label %dec_label_pc_1000424c

dec_label_pc_100043c8:                            ; preds = %dec_label_pc_10004020
  %v0_100043c8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100043c8, i32* %r3.global-to-local, align 4
  store i32 268452816, i32* @lr, align 4
  %v0_100043cc = call i32 @function_10009de8()
  store i32 %v0_100043cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100042d0

; uselistorder directives
  uselistorder i32 %v0_100043bc, { 1, 0 }
  uselistorder i32 %v0_10004390, { 1, 0 }
  uselistorder i32 %v0_10004380, { 1, 0 }
  uselistorder i32 %v0_10004370, { 1, 0 }
  uselistorder i32 %v1_10004368, { 1, 0 }
  uselistorder i32 %v1_100042ac, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10004274, { 1, 0 }
  uselistorder i32 %v1_100041f8, { 1, 0 }
  uselistorder i32 %v1_100040c8, { 1, 0 }
  uselistorder i32 %v1_100040c0, { 1, 0 }
  uselistorder i32 %v1_10004098, { 1, 0 }
  uselistorder i32 %v1_1000408c, { 1, 0 }
  uselistorder i32 %v1_10004084, { 1, 0 }
  uselistorder i32 %v1_10004074, { 2, 1, 0 }
  uselistorder i32 %v1_1000404c, { 1, 2, 0 }
  uselistorder i32 %v2_10004000, { 1, 0 }
  uselistorder i32 %v6_10003fec, { 1, 2, 0 }
  uselistorder i8 %v5_10003ec4, { 1, 0 }
  uselistorder i8 %v5_10003e8c, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 27, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 18, 0 }
  uselistorder i32* %r29.global-to-local, { 11, 10, 12, 9, 13, 8, 14, 0, 1, 3, 4, 2, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r27.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 12, 10, 11, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 25, 26, 27, 28, 30, 31, 32, 6, 7, 8 }
  uselistorder i32 42, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 46, { 4, 0, 5, 1, 6, 2, 7, 3, 8 }
  uselistorder i8 4, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @function_10001d98, { 1, 0 }
  uselistorder label %dec_label_pc_100043bc, { 1, 0 }
  uselistorder label %dec_label_pc_100042d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000424c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100041d0, { 1, 0 }
  uselistorder label %dec_label_pc_10004110, { 1, 0 }
}

define i32 @function_100043d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100043d4:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %v0_100043dc = call i32 @__asm_mfcr()
  %v0_100043e8 = load i32, i32* @r27, align 4
  store i32 %v0_100043dc, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_1000441c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004424 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268452928, i32* @lr, align 4
  %v2_1000443c = call i32 @function_1000ae4c(i32 %arg2, i32 4)
  store i32 %v2_1000443c, i32* @r24, align 4
  %v0_10004448 = load i32, i32* @r30, align 4
  store i32 %v0_10004448, i32* %r3.global-to-local, align 4
  store i32 268452944, i32* @lr, align 4
  %v2_1000444c = call i32 @function_1000ae4c(i32 %v0_10004448, i32 4)
  %v0_10004454 = load i32, i32* @r29, align 4
  store i32 %v2_1000444c, i32* @r26, align 4
  %v0_10004464 = load i32, i32* @r28, align 4
  store i32 %v0_10004464, i32* %r3.global-to-local, align 4
  store i32 268452972, i32* @lr, align 4
  %v4_10004468 = inttoptr i32 %v0_10004454 to i32*
  %v5_10004468 = call i32 @function_10001e18(i32 %v0_10004464, i32* %v4_10004468, i32 7, i32 65535)
  %v0_10004474 = load i32, i32* @r29, align 4
  %v1_1000447c = urem i32 %v5_10004468, 65536
  store i32 %v1_1000447c, i32* %r20.global-to-local, align 4
  %v0_10004480 = load i32, i32* @r28, align 4
  store i32 %v0_10004480, i32* %r3.global-to-local, align 4
  store i32 268453000, i32* @lr, align 4
  %v4_10004484 = inttoptr i32 %v0_10004474 to i32*
  %v5_10004484 = call i32 @function_10001e18(i32 %v0_10004480, i32* %v4_10004484, i32 6, i32 65535)
  %v0_10004488 = load i32, i32* @r29, align 4
  %v1_1000448c = urem i32 %v5_10004484, 65536
  store i32 %v1_1000448c, i32* @r25, align 4
  %v0_10004498 = load i32, i32* @r28, align 4
  store i32 %v0_10004498, i32* %r3.global-to-local, align 4
  store i32 268453024, i32* @lr, align 4
  %v4_1000449c = inttoptr i32 %v0_10004488 to i32*
  %v5_1000449c = call i32 @function_10001e18(i32 %v0_10004498, i32* %v4_1000449c, i32 0, i32 512)
  %v0_100044a0 = load i32, i32* @r29, align 4
  %v1_100044ac = urem i32 %v5_1000449c, 65536
  store i32 %v1_100044ac, i32* %r23.global-to-local, align 4
  %v0_100044b0 = load i32, i32* @r28, align 4
  store i32 %v0_100044b0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100044b8.71 to i32), i32* @lr, align 4
  %v4_100044b4 = inttoptr i32 %v0_100044a0 to i32*
  %v5_100044b4 = call i32 @function_10001e18(i32 %v0_100044b0, i32* %v4_100044b4, i32 1, i32 1)
  %v1_100044bc = urem i32 %v5_100044b4, 256
  store i32 %v1_100044bc, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 ptrtoint (i32* @global_var_100044d8.72 to i32), i32* @lr, align 4
  %v0_100044d4 = call i32 @function_1000a1b8()
  store i32 %v0_100044d4, i32* %r3.global-to-local, align 4
  %v1_100044dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100044dc = add i32 %v1_100044dc, %v0_100044d4
  store i32 %v2_100044dc, i32* %r18.global-to-local, align 4
  %v0_100044e4 = load i32, i32* @r25, align 4
  %v4_100044e4 = icmp eq i32 %v0_100044e4, 65535
  br i1 %v4_100044e4, label %dec_label_pc_10004704, label %dec_label_pc_100044ec

dec_label_pc_100044ec:                            ; preds = %dec_label_pc_100043d4, %dec_label_pc_10004704
  %v0_100044ec = load i32, i32* @r30, align 4
  %v1_100044ec = icmp slt i32 %v0_100044ec, 0
  %v3_100044ec = icmp eq i32 %v0_100044ec, 0
  store i1 %v1_100044ec, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100044ec, i1* %cr4_eq.global-to-local, align 1
  %tmp34 = icmp slt i32 %v0_100044ec, 1
  br i1 %tmp34, label %dec_label_pc_100046a4, label %dec_label_pc_100044f4

dec_label_pc_100044f4:                            ; preds = %dec_label_pc_100044ec
  %v0_100044f8 = load i32, i32* @r31, align 4
  store i32 %v0_100044f8, i32* @r29, align 4
  %v0_10004504 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004504 = icmp eq i32 %v0_10004504, 65535
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %r21.global-to-local, align 4
  %v2_1000461c = ptrtoint i32* %stack_var_-88 to i32
  br i1 %v4_10004504, label %dec_label_pc_100045ec, label %dec_label_pc_1000453c

dec_label_pc_1000451c:                            ; preds = %dec_label_pc_1000457c, %dec_label_pc_10004598
  %v0_1000451c = load i32, i32* @r28, align 4
  %v1_1000451c = load i32, i32* @r26, align 4
  %v2_1000451c = add i32 %v1_1000451c, %v0_1000451c
  %v3_1000451c = inttoptr i32 %v2_1000451c to i32*
  %v4_1000451c = load i32, i32* %v3_1000451c, align 4
  store i32 %v4_1000451c, i32* @r3, align 4
  %v1_10004528 = add i32 %v0_1000451c, 4
  store i32 %v1_10004528, i32* @r28, align 4
  store i32 268453168, i32* @lr, align 4
  %v0_1000452c = call i32 @function_1000a8f0()
  store i32 %v0_1000452c, i32* %r3.global-to-local, align 4
  %v0_10004530 = load i32, i32* @r31, align 4
  %v1_10004530 = load i32, i32* @r30, align 4
  %v4_10004530 = icmp eq i32 %v0_10004530, %v1_10004530
  %v0_10004534 = load i32, i32* @r29, align 4
  %v1_10004534 = add i32 %v0_10004534, 24
  store i32 %v1_10004534, i32* @r29, align 4
  br i1 %v4_10004530, label %dec_label_pc_1000466c, label %dec_label_pc_1000453c

dec_label_pc_1000453c:                            ; preds = %dec_label_pc_100044f4, %dec_label_pc_1000451c
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 268453200, i32* @lr, align 4
  %v2_1000454c = call i32 @function_1000ae4c(i32 65535, i32 1)
  %v0_10004550 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004550 = trunc i32 %v0_10004550 to i16
  %v2_10004550 = load i32, i32* @r29, align 4
  %v3_10004550 = add i32 %v2_10004550, 2
  %v4_10004550 = inttoptr i32 %v3_10004550 to i16*
  store i16 %v1_10004550, i16* %v4_10004550, align 2
  %v1_10004554 = load i32, i32* @r28, align 4
  %v2_10004554 = load i32, i32* @r24, align 4
  %v3_10004554 = add i32 %v2_10004554, %v1_10004554
  %v4_10004554 = inttoptr i32 %v3_10004554 to i32*
  store i32 %v2_1000454c, i32* %v4_10004554, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453224, i32* @lr, align 4
  %v3_10004564 = call i32 @function_1000aaf0(i32 2, i32 2, i32 17)
  store i32 %v3_10004564, i32* %r3.global-to-local, align 4
  %v3_1000456c = icmp eq i32 %v3_10004564, -1
  %v1_10004574 = load i32, i32* @r28, align 4
  %v2_10004574 = load i32, i32* @r26, align 4
  %v3_10004574 = add i32 %v2_10004574, %v1_10004574
  %v4_10004574 = inttoptr i32 %v3_10004574 to i32*
  store i32 %v3_10004564, i32* %v4_10004574, align 4
  br i1 %v3_1000456c, label %dec_label_pc_100046b4, label %dec_label_pc_1000457c

dec_label_pc_1000457c:                            ; preds = %dec_label_pc_1000453c
  %v0_1000457c = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_1000457c, i32* %stack_var_-88, align 4
  store i32 268453260, i32* @lr, align 4
  %v0_10004588 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004588 = call i32 @function_1000a8bc(i32 %v0_10004588, i32 %v2_1000461c, i32 16)
  store i32 %v3_10004588, i32* %r3.global-to-local, align 4
  %v0_1000458c = load i32, i32* @r29, align 4
  %v1_1000458c = add i32 %v0_1000458c, 20
  %v2_1000458c = inttoptr i32 %v1_1000458c to i8*
  %v3_1000458c = load i8, i8* %v2_1000458c, align 1
  %v2_10004590 = icmp ugt i8 %v3_1000458c, 31
  br i1 %v2_10004590, label %dec_label_pc_1000451c, label %dec_label_pc_10004598

dec_label_pc_10004598:                            ; preds = %dec_label_pc_1000457c
  %v1_10004598 = add i32 %v0_1000458c, 16
  %v2_10004598 = inttoptr i32 %v1_10004598 to i32*
  %v3_10004598 = load i32, i32* %v2_10004598, align 4
  store i32 %v3_10004598, i32* %r27.global-to-local, align 4
  %v0_1000459c = call i32 @function_10006dc0()
  store i32 %v0_1000459c, i32* %r3.global-to-local, align 4
  %v0_100045a0 = load i32, i32* @r29, align 4
  %v1_100045a0 = add i32 %v0_100045a0, 20
  %v2_100045a0 = inttoptr i32 %v1_100045a0 to i8*
  %v3_100045a0 = load i8, i8* %v2_100045a0, align 1
  %tmp = urem i8 %v3_100045a0, 64
  %v2_100045a4 = zext i8 %tmp to i32
  %v3_100045a4 = lshr i32 %v0_1000459c, %v2_100045a4
  %v0_100045a8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100045a8 = add i32 %v3_100045a4, %v0_100045a8
  store i32 %v2_100045a8, i32* %r3.global-to-local, align 4
  %v2_100045ac = add i32 %v0_100045a0, 4
  %v3_100045ac = inttoptr i32 %v2_100045ac to i32*
  store i32 %v2_100045a8, i32* %v3_100045ac, align 4
  br label %dec_label_pc_1000451c

dec_label_pc_100045b4:                            ; preds = %dec_label_pc_10004630
  %v1_100045b4 = add i32 %v0_10004640, 16
  %v2_100045b4 = inttoptr i32 %v1_100045b4 to i32*
  %v3_100045b4 = load i32, i32* %v2_100045b4, align 4
  store i32 %v3_100045b4, i32* %r27.global-to-local, align 4
  %v0_100045b8 = call i32 @function_10006dc0()
  store i32 %v0_100045b8, i32* %r3.global-to-local, align 4
  %v0_100045bc = load i32, i32* @r29, align 4
  %v1_100045bc = add i32 %v0_100045bc, 20
  %v2_100045bc = inttoptr i32 %v1_100045bc to i8*
  %v3_100045bc = load i8, i8* %v2_100045bc, align 1
  %tmp39 = urem i8 %v3_100045bc, 64
  %v2_100045c8 = zext i8 %tmp39 to i32
  %v3_100045c8 = lshr i32 %v0_100045b8, %v2_100045c8
  %v0_100045cc = load i32, i32* %r27.global-to-local, align 4
  %v2_100045cc = add i32 %v0_100045cc, %v3_100045c8
  store i32 %v2_100045cc, i32* %r3.global-to-local, align 4
  %v2_100045d0 = add i32 %v0_100045bc, 4
  %v3_100045d0 = inttoptr i32 %v2_100045d0 to i32*
  store i32 %v2_100045cc, i32* %v3_100045d0, align 4
  %v0_100045d4 = load i32, i32* @r29, align 4
  %v1_100045d4 = add i32 %v0_100045d4, 24
  store i32 %v1_100045d4, i32* @r29, align 4
  %v0_100045d8 = load i32, i32* @r28, align 4
  %v1_100045d8 = load i32, i32* @r26, align 4
  %v2_100045d8 = add i32 %v1_100045d8, %v0_100045d8
  %v3_100045d8 = inttoptr i32 %v2_100045d8 to i32*
  %v4_100045d8 = load i32, i32* %v3_100045d8, align 4
  store i32 %v4_100045d8, i32* @r3, align 4
  %v1_100045dc = add i32 %v0_100045d8, 4
  store i32 %v1_100045dc, i32* @r28, align 4
  store i32 268453348, i32* @lr, align 4
  %v0_100045e0 = call i32 @function_1000a8f0()
  store i32 %v0_100045e0, i32* %r3.global-to-local, align 4
  %v0_100045e4 = load i32, i32* @r31, align 4
  %v1_100045e4 = load i32, i32* @r30, align 4
  %v4_100045e4 = icmp eq i32 %v0_100045e4, %v1_100045e4
  br i1 %v4_100045e4, label %dec_label_pc_1000466c, label %dec_label_pc_100045ec

dec_label_pc_100045ec:                            ; preds = %dec_label_pc_1000464c, %dec_label_pc_100045b4, %dec_label_pc_100044f4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 268453376, i32* @lr, align 4
  %v2_100045fc = call i32 @function_1000ae4c(i32 65535, i32 1)
  store i32 %v2_100045fc, i32* %r3.global-to-local, align 4
  %v1_10004600 = load i32, i32* @r28, align 4
  %v2_10004600 = load i32, i32* @r24, align 4
  %v3_10004600 = add i32 %v2_10004600, %v1_10004600
  %v4_10004600 = inttoptr i32 %v3_10004600 to i32*
  store i32 %v2_100045fc, i32* %v4_10004600, align 4
  %v0_10004604 = call i32 @function_10006dc0()
  %v1_10004604 = trunc i32 %v0_10004604 to i16
  %v3_10004608 = load i32, i32* @r29, align 4
  %v4_10004608 = add i32 %v3_10004608, 2
  %v5_10004608 = inttoptr i32 %v4_10004608 to i16*
  store i16 %v1_10004604, i16* %v5_10004608, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453404, i32* @lr, align 4
  %v3_10004618 = call i32 @function_1000aaf0(i32 2, i32 2, i32 17)
  store i32 %v3_10004618, i32* %r3.global-to-local, align 4
  %v3_10004620 = icmp eq i32 %v3_10004618, -1
  %v1_10004628 = load i32, i32* @r28, align 4
  %v2_10004628 = load i32, i32* @r26, align 4
  %v3_10004628 = add i32 %v2_10004628, %v1_10004628
  %v4_10004628 = inttoptr i32 %v3_10004628 to i32*
  store i32 %v3_10004618, i32* %v4_10004628, align 4
  br i1 %v3_10004620, label %dec_label_pc_100046b4, label %dec_label_pc_10004630

dec_label_pc_10004630:                            ; preds = %dec_label_pc_100045ec
  %v0_10004630 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10004630, i32* %stack_var_-88, align 4
  store i32 268453440, i32* @lr, align 4
  %v0_1000463c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000463c = call i32 @function_1000a8bc(i32 %v0_1000463c, i32 %v2_1000461c, i32 16)
  store i32 %v3_1000463c, i32* %r3.global-to-local, align 4
  %v0_10004640 = load i32, i32* @r29, align 4
  %v1_10004640 = add i32 %v0_10004640, 20
  %v2_10004640 = inttoptr i32 %v1_10004640 to i8*
  %v3_10004640 = load i8, i8* %v2_10004640, align 1
  %tmp35 = icmp ult i8 %v3_10004640, 32
  br i1 %tmp35, label %dec_label_pc_100045b4, label %dec_label_pc_1000464c

dec_label_pc_1000464c:                            ; preds = %dec_label_pc_10004630
  %v0_1000464c = load i32, i32* @r28, align 4
  %v1_1000464c = load i32, i32* @r26, align 4
  %v2_1000464c = add i32 %v1_1000464c, %v0_1000464c
  %v3_1000464c = inttoptr i32 %v2_1000464c to i32*
  %v4_1000464c = load i32, i32* %v3_1000464c, align 4
  store i32 %v4_1000464c, i32* @r3, align 4
  %v1_10004658 = add i32 %v0_1000464c, 4
  store i32 %v1_10004658, i32* @r28, align 4
  store i32 268453472, i32* @lr, align 4
  %v0_1000465c = call i32 @function_1000a8f0()
  store i32 %v0_1000465c, i32* %r3.global-to-local, align 4
  %v0_10004660 = load i32, i32* @r31, align 4
  %v1_10004660 = load i32, i32* @r30, align 4
  %v4_10004660 = icmp eq i32 %v0_10004660, %v1_10004660
  %v0_10004664 = load i32, i32* @r29, align 4
  %v1_10004664 = add i32 %v0_10004664, 24
  store i32 %v1_10004664, i32* @r29, align 4
  br i1 %v4_10004660, label %dec_label_pc_1000466c, label %dec_label_pc_100045ec

dec_label_pc_1000466c:                            ; preds = %dec_label_pc_1000451c, %dec_label_pc_1000464c, %dec_label_pc_100045b4, %dec_label_pc_100046a4
  %v0_1000466c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000466c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000466c = or i1 %v0_1000466c, %v1_1000466c
  br i1 %v2_1000466c, label %dec_label_pc_100046a4, label %dec_label_pc_10004670

dec_label_pc_10004670:                            ; preds = %dec_label_pc_1000466c
  %v0_10004670 = load i32, i32* %r19.global-to-local, align 4
  %v3_10004670 = icmp eq i32 %v0_10004670, 0
  br i1 %v3_10004670, label %dec_label_pc_10004678, label %dec_label_pc_10004710

dec_label_pc_10004678:                            ; preds = %dec_label_pc_10004670
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004680.dec_label_pc_10004680_crit_edge, %dec_label_pc_10004678
  %v0_10004684 = phi i32 [ %v0_1000469c, %dec_label_pc_10004680.dec_label_pc_10004680_crit_edge ], [ 0, %dec_label_pc_10004678 ]
  %v0_10004694 = phi i32 [ %v0_10004680.pre, %dec_label_pc_10004680.dec_label_pc_10004680_crit_edge ], [ 0, %dec_label_pc_10004678 ]
  %v1_10004680 = load i32, i32* @r26, align 4
  %v2_10004680 = add i32 %v1_10004680, %v0_10004694
  %v3_10004680 = inttoptr i32 %v2_10004680 to i32*
  %v4_10004680 = load i32, i32* %v3_10004680, align 4
  store i32 %v4_10004680, i32* %r3.global-to-local, align 4
  %v1_10004684 = add i32 %v0_10004684, 1
  store i32 %v1_10004684, i32* %r28.global-to-local, align 4
  %v1_10004688 = load i32, i32* @r24, align 4
  %v2_10004688 = add i32 %v1_10004688, %v0_10004694
  %v3_10004688 = inttoptr i32 %v2_10004688 to i32*
  %v4_10004688 = load i32, i32* %v3_10004688, align 4
  %v0_1000468c = load i32, i32* %r23.global-to-local, align 4
  %v1_10004694 = add i32 %v0_10004694, 4
  store i32 %v1_10004694, i32* %r29.global-to-local, align 4
  store i32 268453532, i32* @lr, align 4
  %v4_10004698 = call i32 @function_1000aa3c(i32 %v4_10004680, i32 %v4_10004688, i32 %v0_1000468c, i32 16384)
  store i32 %v4_10004698, i32* %r3.global-to-local, align 4
  %v0_1000469c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000469c = load i32, i32* @r30, align 4
  %v4_1000469c = icmp eq i32 %v0_1000469c, %v1_1000469c
  br i1 %v4_1000469c, label %dec_label_pc_100046a4, label %dec_label_pc_10004680.dec_label_pc_10004680_crit_edge

dec_label_pc_10004680.dec_label_pc_10004680_crit_edge: ; preds = %dec_label_pc_10004680
  %v0_10004680.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004680

dec_label_pc_100046a4:                            ; preds = %dec_label_pc_1000471c, %dec_label_pc_10004680, %dec_label_pc_1000466c, %dec_label_pc_100044ec
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268453548, i32* @lr, align 4
  %v0_100046a8 = call i32 @function_1000a1b8()
  store i32 %v0_100046a8, i32* %r3.global-to-local, align 4
  %v0_100046ac = load i32, i32* %r18.global-to-local, align 4
  %v2_100046ac = icmp slt i32 %v0_100046ac, %v0_100046a8
  br i1 %v2_100046ac, label %dec_label_pc_100046b4, label %dec_label_pc_1000466c

dec_label_pc_100046b4:                            ; preds = %dec_label_pc_1000453c, %dec_label_pc_100045ec, %dec_label_pc_100046a4
  %v1_100046c8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100043dc)
  store i32 %v0_100043e8, i32* %r27.global-to-local, align 4
  store i32 %v0_1000441c, i32* %r28.global-to-local, align 4
  store i32 %v0_10004424, i32* %r29.global-to-local, align 4
  %v0_10004700 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004700

dec_label_pc_10004704:                            ; preds = %dec_label_pc_100043d4
  %v0_10004704 = call i32 @function_10006dc0()
  store i32 %v0_10004704, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100044ec

dec_label_pc_10004710:                            ; preds = %dec_label_pc_10004670
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000471c

dec_label_pc_1000471c:                            ; preds = %dec_label_pc_1000471c.dec_label_pc_1000471c_crit_edge, %dec_label_pc_10004710
  %v0_10004724 = phi i32 [ %v0_1000474c, %dec_label_pc_1000471c.dec_label_pc_1000471c_crit_edge ], [ 0, %dec_label_pc_10004710 ]
  %v0_1000471c = phi i32 [ %v0_1000471c.pre, %dec_label_pc_1000471c.dec_label_pc_1000471c_crit_edge ], [ 0, %dec_label_pc_10004710 ]
  %v1_1000471c = load i32, i32* @r24, align 4
  %v2_1000471c = add i32 %v1_1000471c, %v0_1000471c
  %v3_1000471c = inttoptr i32 %v2_1000471c to i32*
  %v4_1000471c = load i32, i32* %v3_1000471c, align 4
  store i32 %v4_1000471c, i32* @r29, align 4
  %v0_10004720 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10004720, i32* @r4, align 4
  %v1_10004724 = add i32 %v0_10004724, 1
  store i32 %v1_10004724, i32* @r31, align 4
  store i32 %v4_1000471c, i32* @r3, align 4
  store i32 268453680, i32* @lr, align 4
  %v0_1000472c = call i32 @function_10006e80()
  store i32 %v0_1000472c, i32* %r3.global-to-local, align 4
  %v0_10004730 = load i32, i32* @r27, align 4
  %v1_10004730 = load i32, i32* @r29, align 4
  %v2_10004730 = load i32, i32* %r23.global-to-local, align 4
  %v3_10004730 = trunc i32 %v0_10004730 to i8
  %v4_10004730 = add i32 %v2_10004730, %v1_10004730
  %v5_10004730 = inttoptr i32 %v4_10004730 to i8*
  store i8 %v3_10004730, i8* %v5_10004730, align 1
  %v0_10004734 = load i32, i32* @r29, align 4
  %v0_10004738 = load i32, i32* %r23.global-to-local, align 4
  %v0_1000473c = load i32, i32* @r28, align 4
  %v1_1000473c = load i32, i32* @r26, align 4
  %v2_1000473c = add i32 %v1_1000473c, %v0_1000473c
  %v3_1000473c = inttoptr i32 %v2_1000473c to i32*
  %v4_1000473c = load i32, i32* %v3_1000473c, align 4
  store i32 %v4_1000473c, i32* %r3.global-to-local, align 4
  %v1_10004744 = add i32 %v0_1000473c, 4
  store i32 %v1_10004744, i32* @r28, align 4
  store i32 268453708, i32* @lr, align 4
  %v4_10004748 = call i32 @function_1000aa3c(i32 %v4_1000473c, i32 %v0_10004734, i32 %v0_10004738, i32 16384)
  store i32 %v4_10004748, i32* %r3.global-to-local, align 4
  %v0_1000474c = load i32, i32* @r31, align 4
  %v1_1000474c = load i32, i32* @r30, align 4
  %v4_1000474c = icmp eq i32 %v0_1000474c, %v1_1000474c
  br i1 %v4_1000474c, label %dec_label_pc_100046a4, label %dec_label_pc_1000471c.dec_label_pc_1000471c_crit_edge

dec_label_pc_1000471c.dec_label_pc_1000471c_crit_edge: ; preds = %dec_label_pc_1000471c
  %v0_1000471c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000471c

; uselistorder directives
  uselistorder i32 %v0_1000474c, { 1, 0 }
  uselistorder i32 %v0_1000473c, { 1, 0 }
  uselistorder i32 %v0_1000469c, { 1, 0 }
  uselistorder i32 %v0_10004694, { 2, 0, 1 }
  uselistorder i32 %v0_1000464c, { 1, 0 }
  uselistorder i32 %v0_10004640, { 1, 0 }
  uselistorder i32 %v0_100045d8, { 1, 0 }
  uselistorder i32 %v0_1000451c, { 1, 0 }
  uselistorder i32 %v2_1000461c, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 24, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 10, 11, 12, 19, 20, 22, 23, 25, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100046b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000466c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000453c, { 1, 0 }
  uselistorder label %dec_label_pc_1000451c, { 1, 0 }
  uselistorder label %dec_label_pc_100044ec, { 1, 0 }
}

define i32 @function_10004758(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10004758:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10004758 = load i32, i32* @lr, align 4
  store i32 %v0_10004758, i32* %r0.global-to-local, align 4
  %v0_10004760 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r18.global-to-local, align 4
  %v0_1000476c = load i32, i32* @r27, align 4
  store i32 %v0_10004760, i32* %r27.global-to-local, align 4
  %v0_10004774 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_100047a8 = load i32, i32* @r25, align 4
  %v0_100047ac = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100047b8 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_100047c0 = load i32, i32* @r30, align 4
  store i32 268453852, i32* @lr, align 4
  %v2_100047d8 = call i32 @function_1000ae4c(i32 %arg2, i32 4)
  store i32 %v2_100047d8, i32* %r19.global-to-local, align 4
  %v0_100047e0 = load i32, i32* @r29, align 4
  %v0_100047ec = load i32, i32* @r28, align 4
  store i32 %v0_100047ec, i32* %r3.global-to-local, align 4
  store i32 268453876, i32* @lr, align 4
  %v4_100047f0 = inttoptr i32 %v0_100047e0 to i32*
  %v5_100047f0 = call i32 @function_10001e18(i32 %v0_100047ec, i32* %v4_100047f0, i32 2, i32 0)
  %v0_10004800 = load i32, i32* @r29, align 4
  %v1_10004804 = urem i32 %v5_100047f0, 256
  store i32 %v1_10004804, i32* %r15.global-to-local, align 4
  %v0_10004808 = load i32, i32* @r28, align 4
  store i32 %v0_10004808, i32* %r3.global-to-local, align 4
  store i32 268453904, i32* @lr, align 4
  %v4_1000480c = inttoptr i32 %v0_10004800 to i32*
  %v5_1000480c = call i32 @function_10001e18(i32 %v0_10004808, i32* %v4_1000480c, i32 3, i32 65535)
  %v0_10004810 = load i32, i32* @r29, align 4
  store i32 %v5_1000480c, i32* %r23.global-to-local, align 4
  %v0_10004820 = load i32, i32* @r28, align 4
  store i32 %v0_10004820, i32* %r3.global-to-local, align 4
  store i32 268453928, i32* @lr, align 4
  %v4_10004824 = inttoptr i32 %v0_10004810 to i32*
  %v5_10004824 = call i32 @function_10001e18(i32 %v0_10004820, i32* %v4_10004824, i32 4, i32 64)
  %v0_10004828 = load i32, i32* @r29, align 4
  %v1_10004834 = urem i32 %v5_10004824, 256
  store i32 %v1_10004834, i32* %r16.global-to-local, align 4
  %v0_10004838 = load i32, i32* @r28, align 4
  store i32 %v0_10004838, i32* %r3.global-to-local, align 4
  store i32 268453952, i32* @lr, align 4
  %v4_1000483c = inttoptr i32 %v0_10004828 to i32*
  %v5_1000483c = call i32 @function_10001e18(i32 %v0_10004838, i32* %v4_1000483c, i32 5, i32 0)
  %v1_10004844 = urem i32 %v5_1000483c, 256
  %v0_10004854 = load i32, i32* @r29, align 4
  %v0_10004858 = load i32, i32* @r28, align 4
  store i32 %v0_10004858, i32* %r3.global-to-local, align 4
  store i32 268453984, i32* @lr, align 4
  %v4_1000485c = inttoptr i32 %v0_10004854 to i32*
  %v5_1000485c = call i32 @function_10001e18(i32 %v0_10004858, i32* %v4_1000485c, i32 6, i32 65535)
  %v0_10004864 = load i32, i32* @r29, align 4
  store i32 %v5_1000485c, i32* %r25.global-to-local, align 4
  %v0_10004874 = load i32, i32* @r28, align 4
  store i32 %v0_10004874, i32* %r3.global-to-local, align 4
  store i32 268454012, i32* @lr, align 4
  %v4_10004878 = inttoptr i32 %v0_10004864 to i32*
  %v5_10004878 = call i32 @function_10001e18(i32 %v0_10004874, i32* %v4_10004878, i32 7, i32 65535)
  %v0_1000487c = load i32, i32* @r29, align 4
  store i32 %v5_10004878, i32* %r26.global-to-local, align 4
  %v0_1000488c = load i32, i32* @r28, align 4
  store i32 %v0_1000488c, i32* %r3.global-to-local, align 4
  store i32 268454036, i32* @lr, align 4
  %v4_10004890 = inttoptr i32 %v0_1000487c to i32*
  %v5_10004890 = call i32 @function_10001e18(i32 %v0_1000488c, i32* %v4_10004890, i32 0, i32 512)
  %v0_10004894 = load i32, i32* @r29, align 4
  store i32 %v5_10004890, i32* %r30.global-to-local, align 4
  %v0_100048a4 = load i32, i32* @r28, align 4
  store i32 %v0_100048a4, i32* %r3.global-to-local, align 4
  store i32 268454060, i32* @lr, align 4
  %v4_100048a8 = inttoptr i32 %v0_10004894 to i32*
  %v5_100048a8 = call i32 @function_10001e18(i32 %v0_100048a4, i32* %v4_100048a8, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100048b0 = load i32, i32* @global_var_1001d230.61, align 4
  %v1_100048b4 = urem i32 %v5_100048a8, 256
  %v0_100048b8 = load i32, i32* @r29, align 4
  %v0_100048c4 = load i32, i32* @r28, align 4
  store i32 %v0_100048c4, i32* %r3.global-to-local, align 4
  store i32 268454092, i32* @lr, align 4
  %v4_100048c8 = inttoptr i32 %v0_100048b8 to i32*
  %v5_100048c8 = call i32 @function_10001e18(i32 %v0_100048c4, i32* %v4_100048c8, i32 24, i32 %v3_100048b0)
  store i32 %v5_100048c8, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268454104, i32* @lr, align 4
  %v0_100048d4 = call i32 @function_1000a1b8()
  %v1_100048dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100048dc = add i32 %v1_100048dc, %v0_100048d4
  store i32 %v2_100048dc, i32* %r14.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268454124, i32* @lr, align 4
  %v3_100048e8 = call i32 @function_1000aaf0(i32 2, i32 3, i32 17)
  store i32 %v3_100048e8, i32* %r3.global-to-local, align 4
  %v3_100048ec = icmp eq i32 %v3_100048e8, -1
  store i32 %v3_100048e8, i32* %r20.global-to-local, align 4
  br i1 %v3_100048ec, label %dec_label_pc_10004adc, label %dec_label_pc_100048f8

dec_label_pc_100048f8:                            ; preds = %dec_label_pc_10004758
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004904 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268454164, i32* @lr, align 4
  %v5_10004910 = call i32 @function_1000aab4(i32 0, i32 3, i32 %v2_10004904, i32 4, i32 4)
  store i32 %v5_10004910, i32* %r3.global-to-local, align 4
  %v3_10004914 = icmp eq i32 %v5_10004910, -1
  br i1 %v3_10004914, label %dec_label_pc_10004bcc, label %dec_label_pc_1000491c

dec_label_pc_1000491c:                            ; preds = %dec_label_pc_100048f8
  %v0_1000491c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000491c = urem i32 %v0_1000491c, 65536
  store i32 %v1_1000491c, i32* @r24, align 4
  %v0_10004920 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004920 = urem i32 %v0_10004920, 65536
  store i32 %v1_10004920, i32* %r21.global-to-local, align 4
  %v2_10004924 = icmp ugt i32 %v1_1000491c, 1460
  %v0_10004928 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004928 = urem i32 %v0_10004928, 65536
  store i32 %v1_10004928, i32* %r22.global-to-local, align 4
  %v0_1000492c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000492c = urem i32 %v0_1000492c, 65536
  store i32 %v1_1000492c, i32* %r23.global-to-local, align 4
  br i1 %v2_10004924, label %dec_label_pc_10004bc4, label %dec_label_pc_10004934

dec_label_pc_10004934:                            ; preds = %dec_label_pc_1000491c, %dec_label_pc_10004bc4
  %v0_10004954 = phi i32 [ %v1_1000491c, %dec_label_pc_1000491c ], [ 1460, %dec_label_pc_10004bc4 ]
  %v0_10004934 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004934 = icmp slt i32 %v0_10004934, 0
  %v3_10004934 = icmp eq i32 %v0_10004934, 0
  store i1 %v1_10004934, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10004934, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp30 = icmp slt i32 %v0_10004934, 1
  br i1 %tmp30, label %dec_label_pc_100049ec.preheader, label %dec_label_pc_10004944

dec_label_pc_10004944:                            ; preds = %dec_label_pc_10004934
  %v1_10004948 = add nuw nsw i32 %v0_10004954, 8
  store i32 %v1_10004948, i32* %r9.global-to-local, align 4
  %v1_1000494c = urem i32 %v1_10004948, 65536
  store i32 %v1_1000494c, i32* %r26.global-to-local, align 4
  %v3_10004950 = icmp eq i32 %v1_10004844, 0
  %v1_10004954 = add nuw nsw i32 %v0_10004954, 28
  store i32 %v1_10004954, i32* %r0.global-to-local, align 4
  %v1_10004958 = urem i32 %v1_10004954, 65536
  store i32 %v1_10004958, i32* %r25.global-to-local, align 4
  br i1 %v3_10004950, label %dec_label_pc_10004960, label %dec_label_pc_10004bd8

dec_label_pc_10004960:                            ; preds = %dec_label_pc_10004944
  store i32 0, i32* @r29, align 4
  store i32 4, i32* %r27.global-to-local, align 4
  store i32 5, i32* %r30.global-to-local, align 4
  store i32 17, i32* @r28, align 4
  br label %dec_label_pc_10004970

dec_label_pc_10004970:                            ; preds = %dec_label_pc_10004970, %dec_label_pc_10004960
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268454268, i32* @lr, align 4
  %v2_10004978 = call i32 @function_1000ae4c(i32 1510, i32 1)
  store i32 %v2_10004978, i32* %r3.global-to-local, align 4
  %v3_1000497c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000497c, i32* %r9.global-to-local, align 4
  %v0_10004980 = load i32, i32* @r29, align 4
  %v1_10004980 = mul i32 %v0_10004980, 4
  store i32 %v1_10004980, i32* %r0.global-to-local, align 4
  %v1_10004984 = load i32, i32* %r19.global-to-local, align 4
  %v3_10004984 = add i32 %v1_10004984, %v1_10004980
  %v4_10004984 = inttoptr i32 %v3_10004984 to i32*
  store i32 %v2_10004978, i32* %v4_10004984, align 4
  %v0_10004988 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004988 = mul i32 %v0_10004988, 4
  store i32 %v1_10004988, i32* %r9.global-to-local, align 4
  %v1_1000498c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000498c = add i32 %v1_1000498c, %v1_10004988
  %v3_1000498c = inttoptr i32 %v2_1000498c to i32*
  %v4_1000498c = load i32, i32* %v3_1000498c, align 4
  store i32 %v4_1000498c, i32* %r11.global-to-local, align 4
  %v1_10004990 = inttoptr i32 %v4_1000498c to i32*
  %v2_10004990 = load i32, i32* %v1_10004990, align 4
  store i32 %v2_10004990, i32* %r0.global-to-local, align 4
  %v1_10004994 = add i32 %v4_1000498c, 20
  store i32 %v1_10004994, i32* %r10.global-to-local, align 4
  %v0_10004998 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004998 = trunc i32 %v0_10004998 to i8
  %v3_10004998 = add i32 %v4_1000498c, 8
  %v4_10004998 = inttoptr i32 %v3_10004998 to i8*
  store i8 %v1_10004998, i8* %v4_10004998, align 1
  %v1_1000499c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000499c, i32* %r0.global-to-local, align 4
  %v0_100049a0 = load i32, i32* @r28, align 4
  %v1_100049a0 = trunc i32 %v0_100049a0 to i8
  %v2_100049a0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049a0 = add i32 %v2_100049a0, 9
  %v4_100049a0 = inttoptr i32 %v3_100049a0 to i8*
  store i8 %v1_100049a0, i8* %v4_100049a0, align 1
  %v1_100049a4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100049a4, i32* %r0.global-to-local, align 4
  %v0_100049a8 = load i32, i32* %r17.global-to-local, align 4
  %v1_100049a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100049a8 = add i32 %v1_100049a8, 12
  %v3_100049a8 = inttoptr i32 %v2_100049a8 to i32*
  store i32 %v0_100049a8, i32* %v3_100049a8, align 4
  %v1_100049ac = load i32, i32* %r11.global-to-local, align 4
  %v2_100049ac = inttoptr i32 %v1_100049ac to i32*
  store i32 %v1_100049a4, i32* %v2_100049ac, align 4
  %v0_100049b0 = load i32, i32* %r15.global-to-local, align 4
  %v1_100049b0 = trunc i32 %v0_100049b0 to i8
  %v2_100049b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049b0 = add i32 %v2_100049b0, 1
  %v4_100049b0 = inttoptr i32 %v3_100049b0 to i8*
  store i8 %v1_100049b0, i8* %v4_100049b0, align 1
  %v0_100049b4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100049b4 = trunc i32 %v0_100049b4 to i16
  %v2_100049b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049b4 = add i32 %v2_100049b4, 2
  %v4_100049b4 = inttoptr i32 %v3_100049b4 to i16*
  store i16 %v1_100049b4, i16* %v4_100049b4, align 2
  %v3_100049b8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100049b8, i32* %r9.global-to-local, align 4
  %v0_100049bc = load i32, i32* %r21.global-to-local, align 4
  %v1_100049bc = trunc i32 %v0_100049bc to i16
  %v2_100049bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100049bc = add i32 %v2_100049bc, 4
  %v4_100049bc = inttoptr i32 %v3_100049bc to i16*
  store i16 %v1_100049bc, i16* %v4_100049bc, align 2
  %v0_100049c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100049c0 = add i32 %v0_100049c0, 1
  store i32 %v1_100049c0, i32* @r29, align 4
  %v1_100049c4 = mul i32 %v0_100049c0, 24
  store i32 %v1_100049c4, i32* %r9.global-to-local, align 4
  %v1_100049c8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100049c8 = icmp slt i32 %v1_100049c0, %v1_100049c8
  %v0_100049cc = load i32, i32* %r22.global-to-local, align 4
  %v1_100049cc = trunc i32 %v0_100049cc to i16
  %v2_100049cc = load i32, i32* %r11.global-to-local, align 4
  %v3_100049cc = add i32 %v2_100049cc, 20
  %v4_100049cc = inttoptr i32 %v3_100049cc to i16*
  store i16 %v1_100049cc, i16* %v4_100049cc, align 2
  %v0_100049d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100049d0 = load i32, i32* @r31, align 4
  %v2_100049d0 = add i32 %v1_100049d0, %v0_100049d0
  store i32 %v2_100049d0, i32* %r9.global-to-local, align 4
  %v0_100049d4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100049d4 = trunc i32 %v0_100049d4 to i16
  %v2_100049d4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100049d4 = add i32 %v2_100049d4, 4
  %v4_100049d4 = inttoptr i32 %v3_100049d4 to i16*
  store i16 %v1_100049d4, i16* %v4_100049d4, align 2
  %v0_100049d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100049d8 = add i32 %v0_100049d8, 16
  %v2_100049d8 = inttoptr i32 %v1_100049d8 to i32*
  %v3_100049d8 = load i32, i32* %v2_100049d8, align 4
  store i32 %v3_100049d8, i32* %r0.global-to-local, align 4
  %v0_100049dc = load i32, i32* %r23.global-to-local, align 4
  %v1_100049dc = trunc i32 %v0_100049dc to i16
  %v2_100049dc = load i32, i32* %r10.global-to-local, align 4
  %v3_100049dc = add i32 %v2_100049dc, 2
  %v4_100049dc = inttoptr i32 %v3_100049dc to i16*
  store i16 %v1_100049dc, i16* %v4_100049dc, align 2
  %v0_100049e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100049e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100049e0 = add i32 %v1_100049e0, 16
  %v3_100049e0 = inttoptr i32 %v2_100049e0 to i32*
  store i32 %v0_100049e0, i32* %v3_100049e0, align 4
  %v0_100049e4 = load i32, i32* @r29, align 4
  store i32 %v0_100049e4, i32* %stack_var_-104, align 4
  br i1 %v2_100049c8, label %dec_label_pc_10004970, label %dec_label_pc_100049ec.preheader

dec_label_pc_100049ec.preheader:                  ; preds = %dec_label_pc_10004be8, %dec_label_pc_10004970, %dec_label_pc_10004934
  %v3_10004a08 = icmp eq i32 %v1_100048b4, 0
  br label %dec_label_pc_100049ec

dec_label_pc_100049ec:                            ; preds = %dec_label_pc_100049ec.preheader, %dec_label_pc_10004acc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_100049f4 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_100049f4 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_100049f4 = or i1 %v0_100049f4, %v1_100049f4
  br i1 %v2_100049f4, label %dec_label_pc_10004acc, label %dec_label_pc_100049f8

dec_label_pc_100049f8:                            ; preds = %dec_label_pc_100049ec
  store i32 %v1_100048b4, i32* %r0.global-to-local, align 4
  %v0_100049fc = load i32, i32* %r17.global-to-local, align 4
  %v3_100049fc = icmp eq i32 %v0_100049fc, -1
  store i1 %v3_100049fc, i1* %cr3_eq.global-to-local, align 1
  %v0_10004a00 = load i32, i32* @r24, align 4
  %v1_10004a00 = add i32 %v0_10004a00, 8
  store i32 %v1_10004a00, i32* @r26, align 4
  %v1_10004a04 = add i32 %v0_10004a00, 28
  store i32 %v1_10004a04, i32* @r30, align 4
  store i1 %v3_10004a08, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  br label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_10004a5c, %dec_label_pc_100049f8
  %v0_10004a14 = phi i32 [ %v1_10004abc, %dec_label_pc_10004a5c ], [ 0, %dec_label_pc_100049f8 ]
  %v1_10004a14 = mul i32 %v0_10004a14, 24
  store i32 %v1_10004a14, i32* %r0.global-to-local, align 4
  %v1_10004a18 = mul i32 %v0_10004a14, 4
  store i32 %v1_10004a18, i32* %r11.global-to-local, align 4
  %v1_10004a1c = load i32, i32* %r19.global-to-local, align 4
  %v2_10004a1c = add i32 %v1_10004a1c, %v1_10004a18
  %v3_10004a1c = inttoptr i32 %v2_10004a1c to i32*
  %v4_10004a1c = load i32, i32* %v3_10004a1c, align 4
  store i32 %v4_10004a1c, i32* @r28, align 4
  %v1_10004a20 = load i32, i32* @r31, align 4
  %v2_10004a20 = add i32 %v1_10004a20, %v1_10004a14
  store i32 %v2_10004a20, i32* %r10.global-to-local, align 4
  %v1_10004a24 = add i32 %v2_10004a20, 20
  %v2_10004a24 = inttoptr i32 %v1_10004a24 to i8*
  %v3_10004a24 = load i8, i8* %v2_10004a24, align 1
  %v4_10004a24 = zext i8 %v3_10004a24 to i32
  store i32 %v4_10004a24, i32* %r9.global-to-local, align 4
  %v1_10004a28 = add i32 %v4_10004a1c, 20
  store i32 %v1_10004a28, i32* @r27, align 4
  %tmp31 = icmp ult i8 %v3_10004a24, 32
  br i1 %tmp31, label %dec_label_pc_10004b3c, label %dec_label_pc_10004a34

dec_label_pc_10004a34:                            ; preds = %dec_label_pc_10004a14
  %v0_10004a34 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004a34, label %dec_label_pc_10004b64, label %dec_label_pc_10004a38

dec_label_pc_10004a38:                            ; preds = %dec_label_pc_10004b3c, %dec_label_pc_10004a34
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004a40 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004a40 = icmp eq i32 %v0_10004a40, 65535
  br i1 %v4_10004a40, label %dec_label_pc_10004b7c, label %dec_label_pc_10004a48

dec_label_pc_10004a48:                            ; preds = %dec_label_pc_10004b64, %dec_label_pc_10004a38
  %v1_10004a48 = phi i32 [ %v1_10004b74, %dec_label_pc_10004b64 ], [ 65535, %dec_label_pc_10004a38 ]
  %v0_10004a48 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004a48 = icmp eq i32 %v0_10004a48, %v1_10004a48
  br i1 %v4_10004a48, label %dec_label_pc_10004b8c, label %dec_label_pc_10004a50

dec_label_pc_10004a50:                            ; preds = %dec_label_pc_10004b7c.dec_label_pc_10004a50_crit_edge, %dec_label_pc_10004a48
  %v1_10004a50 = phi i32 [ %v1_10004a50.pre, %dec_label_pc_10004b7c.dec_label_pc_10004a50_crit_edge ], [ %v1_10004a48, %dec_label_pc_10004a48 ]
  %v0_10004a50 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004a50 = icmp eq i32 %v0_10004a50, %v1_10004a50
  br i1 %v4_10004a50, label %dec_label_pc_10004b9c, label %dec_label_pc_10004a58

dec_label_pc_10004a58:                            ; preds = %dec_label_pc_10004b8c, %dec_label_pc_10004a50
  %v0_10004a58 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004a58, label %dec_label_pc_10004a5c, label %dec_label_pc_10004ba8

dec_label_pc_10004a5c:                            ; preds = %dec_label_pc_10004a58, %dec_label_pc_10004b9c, %dec_label_pc_10004ba8
  %v0_10004a5c = load i32, i32* @r25, align 4
  %v1_10004a5c = trunc i32 %v0_10004a5c to i16
  %v2_10004a5c = load i32, i32* @r28, align 4
  %v3_10004a5c = add i32 %v2_10004a5c, 10
  %v4_10004a5c = inttoptr i32 %v3_10004a5c to i16*
  store i16 %v1_10004a5c, i16* %v4_10004a5c, align 2
  %v0_10004a64 = load i32, i32* @r28, align 4
  store i32 %v0_10004a64, i32* @r3, align 4
  %v2_10004a68 = call i32 @function_10005814(i32 %v0_10004a64, i32 20)
  %v3_10004a68 = trunc i32 %v2_10004a68 to i16
  %v0_10004a6c = load i32, i32* @r27, align 4
  store i32 %v0_10004a6c, i32* @r4, align 4
  %v3_10004a70 = load i32, i32* @r28, align 4
  %v4_10004a70 = add i32 %v3_10004a70, 10
  %v5_10004a70 = inttoptr i32 %v4_10004a70 to i16*
  store i16 %v3_10004a68, i16* %v5_10004a70, align 2
  %v0_10004a74 = load i32, i32* @r26, align 4
  %v0_10004a78 = load i32, i32* @r25, align 4
  %v1_10004a78 = trunc i32 %v0_10004a78 to i16
  %v2_10004a78 = load i32, i32* @r27, align 4
  %v3_10004a78 = add i32 %v2_10004a78, 6
  %v4_10004a78 = inttoptr i32 %v3_10004a78 to i16*
  store i16 %v1_10004a78, i16* %v4_10004a78, align 2
  %v0_10004a7c = load i32, i32* @r28, align 4
  store i32 %v0_10004a7c, i32* %r3.global-to-local, align 4
  %v0_10004a80 = load i32, i32* @r27, align 4
  %v1_10004a80 = add i32 %v0_10004a80, 4
  %v2_10004a80 = inttoptr i32 %v1_10004a80 to i16*
  %v3_10004a80 = load i16, i16* %v2_10004a80, align 2
  %v4_10004a80 = zext i16 %v3_10004a80 to i32
  %v4_10004a84 = call i32 @function_10005878(i32 %v0_10004a7c, i32 %v0_10004a6c, i32 %v4_10004a80, i32 %v0_10004a74)
  %v5_10004a84 = trunc i32 %v4_10004a84 to i16
  store i32 %v4_10004a84, i32* %r3.global-to-local, align 4
  %v3_10004a88 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004a88, i32* %r7.global-to-local, align 4
  %v0_10004a8c = load i32, i32* @r27, align 4
  %v1_10004a8c = add i32 %v0_10004a8c, 2
  %v2_10004a8c = inttoptr i32 %v1_10004a8c to i16*
  %v3_10004a8c = load i16, i16* %v2_10004a8c, align 2
  %v4_10004a8c = zext i16 %v3_10004a8c to i32
  store i32 %v4_10004a8c, i32* %r0.global-to-local, align 4
  %v0_10004a90 = load i32, i32* @r28, align 4
  %v1_10004a94 = mul i32 %v3_10004a88, 24
  store i32 %v1_10004a94, i32* %r7.global-to-local, align 4
  %v4_10004a98 = add i32 %v0_10004a8c, 6
  %v5_10004a98 = inttoptr i32 %v4_10004a98 to i16*
  store i16 %v5_10004a84, i16* %v5_10004a98, align 2
  %v0_10004a9c = load i32, i32* @r30, align 4
  %v0_10004aa0 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10004aa0, i32* %r3.global-to-local, align 4
  %v0_10004aa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004aa4 = load i32, i32* @r31, align 4
  %v2_10004aa4 = add i32 %v1_10004aa4, %v0_10004aa4
  store i32 %v2_10004aa4, i32* %r7.global-to-local, align 4
  %v0_10004aac = load i32, i32* %r0.global-to-local, align 4
  %v1_10004aac = trunc i32 %v0_10004aac to i16
  %v3_10004aac = add i32 %v2_10004aa4, 2
  %v4_10004aac = inttoptr i32 %v3_10004aac to i16*
  store i16 %v1_10004aac, i16* %v4_10004aac, align 2
  store i32 268454584, i32* @lr, align 4
  %v6_10004ab4 = call i32 @function_1000aa74(i32 %v0_10004aa0, i32 %v0_10004a90, i32 %v0_10004a9c, i32 16384, i32 %v2_10004aa4, i32 16)
  store i32 %v6_10004ab4, i32* %r3.global-to-local, align 4
  %v3_10004ab8 = load i32, i32* %stack_var_-104, align 4
  %v1_10004abc = add i32 %v3_10004ab8, 1
  store i32 %v1_10004abc, i32* %r9.global-to-local, align 4
  %v1_10004ac0 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004ac0 = icmp slt i32 %v1_10004abc, %v1_10004ac0
  store i32 %v1_10004abc, i32* %stack_var_-104, align 4
  br i1 %v2_10004ac0, label %dec_label_pc_10004a14, label %dec_label_pc_10004acc

dec_label_pc_10004acc:                            ; preds = %dec_label_pc_10004a5c, %dec_label_pc_100049ec
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268454612, i32* @lr, align 4
  %v0_10004ad0 = call i32 @function_1000a1b8()
  store i32 %v0_10004ad0, i32* %r3.global-to-local, align 4
  %v0_10004ad4 = load i32, i32* %r14.global-to-local, align 4
  %v2_10004ad4 = icmp slt i32 %v0_10004ad4, %v0_10004ad0
  br i1 %v2_10004ad4, label %dec_label_pc_10004adc, label %dec_label_pc_100049ec

dec_label_pc_10004adc:                            ; preds = %dec_label_pc_10004acc, %dec_label_pc_10004758, %dec_label_pc_10004bcc
  store i32 %v0_10004774, i32* %r0.global-to-local, align 4
  %v1_10004af0 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10004760)
  store i32 %v0_100047a8, i32* %r25.global-to-local, align 4
  store i32 %v0_100047ac, i32* %r26.global-to-local, align 4
  store i32 %v0_1000476c, i32* %r27.global-to-local, align 4
  store i32 %v0_100047b8, i32* %r29.global-to-local, align 4
  store i32 %v0_100047c0, i32* %r30.global-to-local, align 4
  %v0_10004b38 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004b38

dec_label_pc_10004b3c:                            ; preds = %dec_label_pc_10004a14
  %v1_10004b3c = add i32 %v2_10004a20, 16
  %v2_10004b3c = inttoptr i32 %v1_10004b3c to i32*
  %v3_10004b3c = load i32, i32* %v2_10004b3c, align 4
  store i32 %v3_10004b3c, i32* %r29.global-to-local, align 4
  %v0_10004b40 = call i32 @function_10006dc0()
  store i32 %v0_10004b40, i32* %r3.global-to-local, align 4
  %v3_10004b44 = load i32, i32* %stack_var_-104, align 4
  %v1_10004b48 = mul i32 %v3_10004b44, 24
  %v1_10004b4c = load i32, i32* @r31, align 4
  %v2_10004b4c = add i32 %v1_10004b4c, %v1_10004b48
  store i32 %v2_10004b4c, i32* %r9.global-to-local, align 4
  %v1_10004b50 = add i32 %v2_10004b4c, 20
  %v2_10004b50 = inttoptr i32 %v1_10004b50 to i8*
  %v3_10004b50 = load i8, i8* %v2_10004b50, align 1
  %v4_10004b50 = zext i8 %v3_10004b50 to i32
  store i32 %v4_10004b50, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004b50, 64
  %v2_10004b54 = zext i8 %tmp to i32
  %v3_10004b54 = lshr i32 %v0_10004b40, %v2_10004b54
  store i32 %v3_10004b54, i32* %r3.global-to-local, align 4
  %v0_10004b58 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004b58 = add i32 %v3_10004b54, %v0_10004b58
  store i32 %v2_10004b58, i32* %r29.global-to-local, align 4
  %v1_10004b5c = load i32, i32* @r28, align 4
  %v2_10004b5c = add i32 %v1_10004b5c, 16
  %v3_10004b5c = inttoptr i32 %v2_10004b5c to i32*
  store i32 %v2_10004b58, i32* %v3_10004b5c, align 4
  %v0_10004b60 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004b60, label %dec_label_pc_10004b64, label %dec_label_pc_10004a38

dec_label_pc_10004b64:                            ; preds = %dec_label_pc_10004b3c, %dec_label_pc_10004a34
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10004b68 = call i32 @function_10006dc0()
  store i32 %v0_10004b68, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004b70 = load i32, i32* @r28, align 4
  %v2_10004b70 = add i32 %v1_10004b70, 12
  %v3_10004b70 = inttoptr i32 %v2_10004b70 to i32*
  store i32 %v0_10004b68, i32* %v3_10004b70, align 4
  %v0_10004b74 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004b74 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004b74 = icmp eq i32 %v0_10004b74, %v1_10004b74
  br i1 %v4_10004b74, label %dec_label_pc_10004b7c, label %dec_label_pc_10004a48

dec_label_pc_10004b7c:                            ; preds = %dec_label_pc_10004b64, %dec_label_pc_10004a38
  %v0_10004b7c = call i32 @function_10006dc0()
  %v1_10004b7c = trunc i32 %v0_10004b7c to i16
  store i32 %v0_10004b7c, i32* %r3.global-to-local, align 4
  %v0_10004b80 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004b80 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004b80 = icmp eq i32 %v0_10004b80, %v1_10004b80
  %v3_10004b84 = load i32, i32* @r28, align 4
  %v4_10004b84 = add i32 %v3_10004b84, 4
  %v5_10004b84 = inttoptr i32 %v4_10004b84 to i16*
  store i16 %v1_10004b7c, i16* %v5_10004b84, align 2
  br i1 %v4_10004b80, label %dec_label_pc_10004b8c, label %dec_label_pc_10004b7c.dec_label_pc_10004a50_crit_edge

dec_label_pc_10004b7c.dec_label_pc_10004a50_crit_edge: ; preds = %dec_label_pc_10004b7c
  %v1_10004a50.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004a50

dec_label_pc_10004b8c:                            ; preds = %dec_label_pc_10004b7c, %dec_label_pc_10004a48
  %v0_10004b8c = call i32 @function_10006dc0()
  %v1_10004b8c = trunc i32 %v0_10004b8c to i16
  store i32 %v0_10004b8c, i32* %r3.global-to-local, align 4
  %v0_10004b90 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004b90 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004b90 = icmp eq i32 %v0_10004b90, %v1_10004b90
  %v3_10004b94 = load i32, i32* @r28, align 4
  %v4_10004b94 = add i32 %v3_10004b94, 20
  %v5_10004b94 = inttoptr i32 %v4_10004b94 to i16*
  store i16 %v1_10004b8c, i16* %v5_10004b94, align 2
  br i1 %v4_10004b90, label %dec_label_pc_10004b9c, label %dec_label_pc_10004a58

dec_label_pc_10004b9c:                            ; preds = %dec_label_pc_10004b8c, %dec_label_pc_10004a50
  %v0_10004b9c = call i32 @function_10006dc0()
  %v1_10004b9c = trunc i32 %v0_10004b9c to i16
  store i32 %v0_10004b9c, i32* %r3.global-to-local, align 4
  %v3_10004ba0 = load i32, i32* @r27, align 4
  %v4_10004ba0 = add i32 %v3_10004ba0, 2
  %v5_10004ba0 = inttoptr i32 %v4_10004ba0 to i16*
  store i16 %v1_10004b9c, i16* %v5_10004ba0, align 2
  %v0_10004ba4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004ba4, label %dec_label_pc_10004a5c, label %dec_label_pc_10004ba8

dec_label_pc_10004ba8:                            ; preds = %dec_label_pc_10004a58, %dec_label_pc_10004b9c
  %v0_10004ba8 = load i32, i32* @r28, align 4
  %v1_10004ba8 = add i32 %v0_10004ba8, 28
  store i32 %v1_10004ba8, i32* @r29, align 4
  %v0_10004bac = load i32, i32* @r24, align 4
  store i32 %v0_10004bac, i32* @r4, align 4
  store i32 %v1_10004ba8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004bb8.73 to i32), i32* @lr, align 4
  %v0_10004bb4 = call i32 @function_10006e80()
  store i32 %v0_10004bb4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10004bbc = load i32, i32* @r29, align 4
  %v2_10004bbc = load i32, i32* @r24, align 4
  %v4_10004bbc = add i32 %v2_10004bbc, %v1_10004bbc
  %v5_10004bbc = inttoptr i32 %v4_10004bbc to i8*
  store i8 0, i8* %v5_10004bbc, align 1
  br label %dec_label_pc_10004a5c

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_1000491c
  store i32 1460, i32* @r24, align 4
  br label %dec_label_pc_10004934

dec_label_pc_10004bcc:                            ; preds = %dec_label_pc_100048f8
  %v0_10004bcc = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10004bcc, i32* %r3.global-to-local, align 4
  store i32 268454868, i32* @lr, align 4
  %v0_10004bd0 = call i32 @function_10009de8()
  store i32 %v0_10004bd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004adc

dec_label_pc_10004bd8:                            ; preds = %dec_label_pc_10004944
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 16384, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10004be8

dec_label_pc_10004be8:                            ; preds = %dec_label_pc_10004be8, %dec_label_pc_10004bd8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268454900, i32* @lr, align 4
  %v2_10004bf0 = call i32 @function_1000ae4c(i32 1510, i32 1)
  store i32 %v2_10004bf0, i32* %r3.global-to-local, align 4
  %v3_10004bf4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004bf4, i32* %r9.global-to-local, align 4
  %v0_10004bf8 = load i32, i32* @r30, align 4
  %v1_10004bf8 = mul i32 %v0_10004bf8, 4
  store i32 %v1_10004bf8, i32* %r0.global-to-local, align 4
  %v1_10004bfc = load i32, i32* %r19.global-to-local, align 4
  %v3_10004bfc = add i32 %v1_10004bfc, %v1_10004bf8
  %v4_10004bfc = inttoptr i32 %v3_10004bfc to i32*
  store i32 %v2_10004bf0, i32* %v4_10004bfc, align 4
  %v0_10004c00 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004c00 = mul i32 %v0_10004c00, 4
  store i32 %v1_10004c00, i32* %r9.global-to-local, align 4
  %v1_10004c04 = load i32, i32* %r19.global-to-local, align 4
  %v2_10004c04 = add i32 %v1_10004c04, %v1_10004c00
  %v3_10004c04 = inttoptr i32 %v2_10004c04 to i32*
  %v4_10004c04 = load i32, i32* %v3_10004c04, align 4
  store i32 %v4_10004c04, i32* %r11.global-to-local, align 4
  %v1_10004c08 = inttoptr i32 %v4_10004c04 to i32*
  %v2_10004c08 = load i32, i32* %v1_10004c08, align 4
  store i32 %v2_10004c08, i32* %r0.global-to-local, align 4
  %v1_10004c0c = add i32 %v4_10004c04, 20
  store i32 %v1_10004c0c, i32* %r10.global-to-local, align 4
  %v0_10004c10 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004c10 = trunc i32 %v0_10004c10 to i8
  %v3_10004c10 = add i32 %v4_10004c04, 8
  %v4_10004c10 = inttoptr i32 %v3_10004c10 to i8*
  store i8 %v1_10004c10, i8* %v4_10004c10, align 1
  %v1_10004c14 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004c14, i32* %r0.global-to-local, align 4
  %v0_10004c18 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004c18 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004c18 = add i32 %v1_10004c18, 12
  %v3_10004c18 = inttoptr i32 %v2_10004c18 to i32*
  store i32 %v0_10004c18, i32* %v3_10004c18, align 4
  %v1_10004c1c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10004c20 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004c20 = trunc i32 %v0_10004c20 to i16
  %v2_10004c20 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c20 = add i32 %v2_10004c20, 4
  %v4_10004c20 = inttoptr i32 %v3_10004c20 to i16*
  store i16 %v1_10004c20, i16* %v4_10004c20, align 2
  %v1_10004c24 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004c24 = inttoptr i32 %v1_10004c24 to i32*
  store i32 %v1_10004c1c, i32* %v2_10004c24, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10004c2c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c2c = add i32 %v2_10004c2c, 9
  %v4_10004c2c = inttoptr i32 %v3_10004c2c to i8*
  store i8 17, i8* %v4_10004c2c, align 1
  %v0_10004c30 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004c30 = trunc i32 %v0_10004c30 to i8
  %v2_10004c30 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c30 = add i32 %v2_10004c30, 1
  %v4_10004c30 = inttoptr i32 %v3_10004c30 to i8*
  store i8 %v1_10004c30, i8* %v4_10004c30, align 1
  %v0_10004c34 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004c34 = trunc i32 %v0_10004c34 to i16
  %v2_10004c34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c34 = add i32 %v2_10004c34, 2
  %v4_10004c34 = inttoptr i32 %v3_10004c34 to i16*
  store i16 %v1_10004c34, i16* %v4_10004c34, align 2
  %v3_10004c38 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004c38, i32* %r9.global-to-local, align 4
  %v0_10004c3c = load i32, i32* %r27.global-to-local, align 4
  %v1_10004c3c = trunc i32 %v0_10004c3c to i16
  %v2_10004c3c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c3c = add i32 %v2_10004c3c, 6
  %v4_10004c3c = inttoptr i32 %v3_10004c3c to i16*
  store i16 %v1_10004c3c, i16* %v4_10004c3c, align 2
  %v0_10004c40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004c40 = add i32 %v0_10004c40, 1
  store i32 %v1_10004c40, i32* %r30.global-to-local, align 4
  %v1_10004c44 = mul i32 %v0_10004c40, 24
  store i32 %v1_10004c44, i32* %r9.global-to-local, align 4
  %v1_10004c48 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004c48 = icmp slt i32 %v1_10004c40, %v1_10004c48
  %v0_10004c4c = load i32, i32* %r22.global-to-local, align 4
  %v1_10004c4c = trunc i32 %v0_10004c4c to i16
  %v2_10004c4c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c4c = add i32 %v2_10004c4c, 20
  %v4_10004c4c = inttoptr i32 %v3_10004c4c to i16*
  store i16 %v1_10004c4c, i16* %v4_10004c4c, align 2
  %v0_10004c50 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004c50 = load i32, i32* @r31, align 4
  %v2_10004c50 = add i32 %v1_10004c50, %v0_10004c50
  store i32 %v2_10004c50, i32* %r9.global-to-local, align 4
  %v0_10004c54 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004c54 = trunc i32 %v0_10004c54 to i16
  %v2_10004c54 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004c54 = add i32 %v2_10004c54, 4
  %v4_10004c54 = inttoptr i32 %v3_10004c54 to i16*
  store i16 %v1_10004c54, i16* %v4_10004c54, align 2
  %v0_10004c58 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004c58 = add i32 %v0_10004c58, 16
  %v2_10004c58 = inttoptr i32 %v1_10004c58 to i32*
  %v3_10004c58 = load i32, i32* %v2_10004c58, align 4
  store i32 %v3_10004c58, i32* %r0.global-to-local, align 4
  %v0_10004c5c = load i32, i32* %r23.global-to-local, align 4
  %v1_10004c5c = trunc i32 %v0_10004c5c to i16
  %v2_10004c5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004c5c = add i32 %v2_10004c5c, 2
  %v4_10004c5c = inttoptr i32 %v3_10004c5c to i16*
  store i16 %v1_10004c5c, i16* %v4_10004c5c, align 2
  %v0_10004c60 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004c60 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004c60 = add i32 %v1_10004c60, 16
  %v3_10004c60 = inttoptr i32 %v2_10004c60 to i32*
  store i32 %v0_10004c60, i32* %v3_10004c60, align 4
  %v0_10004c64 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10004c64, i32* %stack_var_-104, align 4
  br i1 %v2_10004c48, label %dec_label_pc_10004be8, label %dec_label_pc_100049ec.preheader

; uselistorder directives
  uselistorder i32 %v1_10004c00, { 1, 0 }
  uselistorder i32 %v1_10004bf8, { 1, 0 }
  uselistorder i32 %v0_10004b9c, { 1, 0 }
  uselistorder i32 %v0_10004b8c, { 1, 0 }
  uselistorder i32 %v0_10004b7c, { 1, 0 }
  uselistorder i32 %v1_10004b74, { 1, 0 }
  uselistorder i32 %v1_10004abc, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10004a84, { 1, 0 }
  uselistorder i32 %v1_10004a18, { 1, 0 }
  uselistorder i32 %v1_10004988, { 1, 0 }
  uselistorder i32 %v1_10004980, { 1, 0 }
  uselistorder i32 %v1_1000491c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 9, 8, 10, 1, 2, 4, 3, 5, 6, 7, 11 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 1460, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10004adc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004a5c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100049ec, { 1, 0 }
  uselistorder label %dec_label_pc_10004934, { 1, 0 }
}

define i32 @function_10004c70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10004c70:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v0_10004c74 = load i32, i32* @lr, align 4
  store i32 %v0_10004c74, i32* %r0.global-to-local, align 4
  %v0_10004c78 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 %v0_10004c78, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10004c9c = load i32, i32* %r0.global-to-local, align 4
  %v0_10004cc4 = load i32, i32* @r28, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10004ccc = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 268455156, i32* @lr, align 4
  %v2_10004cf0 = call i32 @function_1000ae4c(i32 %arg2, i32 4)
  store i32 %v2_10004cf0, i32* %r21.global-to-local, align 4
  %v0_10004cf8 = load i32, i32* @r28, align 4
  %v0_10004cfc = load i32, i32* @r29, align 4
  store i32 %v0_10004cfc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268455180, i32* @lr, align 4
  %v4_10004d08 = inttoptr i32 %v0_10004cf8 to i32*
  %v5_10004d08 = call i32 @function_10001e18(i32 %v0_10004cfc, i32* %v4_10004d08, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10004d18 = load i32, i32* @r28, align 4
  %v1_10004d1c = urem i32 %v5_10004d08, 256
  store i32 %v1_10004d1c, i32* %r18.global-to-local, align 4
  %v0_10004d20 = load i32, i32* @r29, align 4
  store i32 %v0_10004d20, i32* %r3.global-to-local, align 4
  store i32 268455208, i32* @lr, align 4
  %v4_10004d24 = inttoptr i32 %v0_10004d18 to i32*
  %v5_10004d24 = call i32 @function_10001e18(i32 %v0_10004d20, i32* %v4_10004d24, i32 3, i32 65535)
  %v0_10004d28 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10004d24, i32* %r24.global-to-local, align 4
  %v0_10004d38 = load i32, i32* @r29, align 4
  store i32 %v0_10004d38, i32* %r3.global-to-local, align 4
  store i32 268455232, i32* @lr, align 4
  %v4_10004d3c = inttoptr i32 %v0_10004d28 to i32*
  %v5_10004d3c = call i32 @function_10001e18(i32 %v0_10004d38, i32* %v4_10004d3c, i32 4, i32 64)
  %v0_10004d40 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10004d4c = urem i32 %v5_10004d3c, 256
  store i32 %v1_10004d4c, i32* %r19.global-to-local, align 4
  %v0_10004d50 = load i32, i32* @r29, align 4
  store i32 %v0_10004d50, i32* %r3.global-to-local, align 4
  store i32 268455256, i32* @lr, align 4
  %v4_10004d54 = inttoptr i32 %v0_10004d40 to i32*
  %v5_10004d54 = call i32 @function_10001e18(i32 %v0_10004d50, i32* %v4_10004d54, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10004d64 = load i32, i32* @r28, align 4
  %v1_10004d68 = urem i32 %v5_10004d54, 256
  store i32 %v1_10004d68, i32* %r16.global-to-local, align 4
  %v0_10004d6c = load i32, i32* @r29, align 4
  store i32 %v0_10004d6c, i32* %r3.global-to-local, align 4
  store i32 268455284, i32* @lr, align 4
  %v4_10004d70 = inttoptr i32 %v0_10004d64 to i32*
  %v5_10004d70 = call i32 @function_10001e18(i32 %v0_10004d6c, i32* %v4_10004d70, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10004d7c = load i32, i32* @r28, align 4
  store i32 %v5_10004d70, i32* %r25.global-to-local, align 4
  %v0_10004d84 = load i32, i32* @r29, align 4
  store i32 %v0_10004d84, i32* %r3.global-to-local, align 4
  store i32 268455308, i32* @lr, align 4
  %v4_10004d88 = inttoptr i32 %v0_10004d7c to i32*
  %v5_10004d88 = call i32 @function_10001e18(i32 %v0_10004d84, i32* %v4_10004d88, i32 7, i32 27015)
  %v0_10004d8c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004d8c, i32* %stack_var_-100, align 4
  store i32 %v5_10004d88, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268455324, i32* @lr, align 4
  %v0_10004d98 = call i32 @function_1000a1b8()
  %v1_10004d9c = load i32, i32* %r27.global-to-local, align 4
  %v2_10004d9c = add i32 %v1_10004d9c, %v0_10004d98
  store i32 %v2_10004d9c, i32* %r17.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 268455336, i32* @lr, align 4
  %v1_10004da4 = call i32 @function_10008b98(i32 36)
  store i32 36, i32* %r3.global-to-local, align 4
  %v3_10004db0 = call i32 @function_10008ae4(i32 36, i32* nonnull %stack_var_-100)
  store i32 %v3_10004db0, i32* @r29, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268455368, i32* @lr, align 4
  %v3_10004dc4 = call i32 @function_1000aaf0(i32 2, i32 3, i32 17)
  store i32 %v3_10004dc4, i32* %r3.global-to-local, align 4
  %v3_10004dc8 = icmp eq i32 %v3_10004dc4, -1
  store i32 %v3_10004dc4, i32* %r22.global-to-local, align 4
  br i1 %v3_10004dc8, label %dec_label_pc_100050c4, label %dec_label_pc_10004dd4

dec_label_pc_10004dd4:                            ; preds = %dec_label_pc_10004c70
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10004de0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10004de0, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268455408, i32* @lr, align 4
  %v5_10004dec = call i32 @function_1000aab4(i32 0, i32 3, i32 %v2_10004de0, i32 4, i32 4)
  store i32 %v5_10004dec, i32* %r3.global-to-local, align 4
  %v3_10004df0 = icmp eq i32 %v5_10004dec, -1
  br i1 %v3_10004df0, label %dec_label_pc_10005124, label %dec_label_pc_10004df8

dec_label_pc_10004df8:                            ; preds = %dec_label_pc_10004dd4
  %v0_10004df8 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004df8 = icmp slt i32 %v0_10004df8, 0
  %v3_10004df8 = icmp eq i32 %v0_10004df8, 0
  store i1 %v1_10004df8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004df8, i1* %cr4_eq.global-to-local, align 1
  %v0_10004dfc = load i32, i32* %r24.global-to-local, align 4
  %v1_10004dfc = urem i32 %v0_10004dfc, 65536
  store i32 %v1_10004dfc, i32* %r23.global-to-local, align 4
  %v0_10004e00 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004e00, i32* %stack_var_-104, align 4
  %v0_10004e04 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004e04 = urem i32 %v0_10004e04, 65536
  store i32 %v1_10004e04, i32* %r24.global-to-local, align 4
  %v0_10004e08 = load i32, i32* @r31, align 4
  %v1_10004e08 = urem i32 %v0_10004e08, 65536
  store i32 %v1_10004e08, i32* %r25.global-to-local, align 4
  %tmp28 = icmp slt i32 %v0_10004df8, 1
  br i1 %tmp28, label %dec_label_pc_10004edc, label %dec_label_pc_10004e10

dec_label_pc_10004e10:                            ; preds = %dec_label_pc_10004df8
  %v0_10004e10 = load i32, i32* %r16.global-to-local, align 4
  %v3_10004e10 = icmp eq i32 %v0_10004e10, 0
  store i32 4, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r27.global-to-local, align 4
  store i32 16384, i32* %r26.global-to-local, align 4
  store i32 17, i32* %r16.global-to-local, align 4
  store i32 -1, i32* %r15.global-to-local, align 4
  br i1 %v3_10004e10, label %dec_label_pc_10004e34, label %dec_label_pc_10005004

dec_label_pc_10004e34:                            ; preds = %dec_label_pc_10004e10, %dec_label_pc_10004e34
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268455488, i32* @lr, align 4
  %v2_10004e3c = call i32 @function_1000ae4c(i32 128, i32 1)
  %v3_10004e40 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004e40, i32* %r9.global-to-local, align 4
  %v0_10004e44 = load i32, i32* @r31, align 4
  %v1_10004e44 = mul i32 %v0_10004e44, 4
  store i32 %v1_10004e44, i32* %r0.global-to-local, align 4
  %v1_10004e4c = load i32, i32* %r21.global-to-local, align 4
  %v3_10004e4c = add i32 %v1_10004e4c, %v1_10004e44
  %v4_10004e4c = inttoptr i32 %v3_10004e4c to i32*
  store i32 %v2_10004e3c, i32* %v4_10004e4c, align 4
  %v0_10004e50 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004e50 = mul i32 %v0_10004e50, 4
  store i32 %v1_10004e50, i32* %r3.global-to-local, align 4
  %v1_10004e54 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004e54 = add i32 %v1_10004e54, %v1_10004e50
  %v3_10004e54 = inttoptr i32 %v2_10004e54 to i32*
  %v4_10004e54 = load i32, i32* %v3_10004e54, align 4
  store i32 %v4_10004e54, i32* %r3.global-to-local, align 4
  %v1_10004e58 = inttoptr i32 %v4_10004e54 to i32*
  %v2_10004e58 = load i32, i32* %v1_10004e58, align 4
  store i32 %v2_10004e58, i32* %r0.global-to-local, align 4
  %v1_10004e5c = add i32 %v4_10004e54, 20
  store i32 %v1_10004e5c, i32* %r8.global-to-local, align 4
  %v0_10004e60 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004e60 = trunc i32 %v0_10004e60 to i16
  %v3_10004e60 = add i32 %v4_10004e54, 4
  %v4_10004e60 = inttoptr i32 %v3_10004e60 to i16*
  store i16 %v1_10004e60, i16* %v4_10004e60, align 2
  %v1_10004e64 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004e64, i32* %r0.global-to-local, align 4
  %v0_10004e68 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004e68 = trunc i32 %v0_10004e68 to i16
  %v2_10004e68 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004e68 = add i32 %v2_10004e68, 20
  %v4_10004e68 = inttoptr i32 %v3_10004e68 to i16*
  store i16 %v1_10004e68, i16* %v4_10004e68, align 2
  %v1_10004e6c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10004e70 = load i32, i32* %r3.global-to-local, align 4
  %v2_10004e70 = inttoptr i32 %v1_10004e70 to i32*
  store i32 %v1_10004e6c, i32* %v2_10004e70, align 4
  %v0_10004e74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004e74 = trunc i32 %v0_10004e74 to i8
  %v2_10004e74 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004e74 = add i32 %v2_10004e74, 1
  %v4_10004e74 = inttoptr i32 %v3_10004e74 to i8*
  store i8 %v1_10004e74, i8* %v4_10004e74, align 1
  %v3_10004e78 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10004e78, i32* %r9.global-to-local, align 4
  %v0_10004e7c = load i32, i32* %r19.global-to-local, align 4
  %v1_10004e7c = trunc i32 %v0_10004e7c to i8
  %v2_10004e7c = load i32, i32* %r3.global-to-local, align 4
  %v3_10004e7c = add i32 %v2_10004e7c, 8
  %v4_10004e7c = inttoptr i32 %v3_10004e7c to i8*
  store i8 %v1_10004e7c, i8* %v4_10004e7c, align 1
  %v0_10004e80 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004e80 = trunc i32 %v0_10004e80 to i8
  %v2_10004e80 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004e80 = add i32 %v2_10004e80, 9
  %v4_10004e80 = inttoptr i32 %v3_10004e80 to i8*
  store i8 %v1_10004e80, i8* %v4_10004e80, align 1
  %v0_10004e84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004e84 = add i32 %v0_10004e84, 32
  %v1_10004e88 = trunc i32 %v1_10004e84 to i16
  %v2_10004e88 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004e88 = add i32 %v2_10004e88, 2
  %v4_10004e88 = inttoptr i32 %v3_10004e88 to i16*
  store i16 %v1_10004e88, i16* %v4_10004e88, align 2
  %v3_10004e8c = load i32, i32* %stack_var_-104, align 4
  %v3_10004e90 = load i32, i32* @global_var_1001d230.61, align 4
  store i32 %v3_10004e90, i32* %r0.global-to-local, align 4
  %v1_10004e94 = mul i32 %v3_10004e8c, 24
  store i32 %v1_10004e94, i32* %r9.global-to-local, align 4
  %v0_10004e98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004e98 = trunc i32 %v0_10004e98 to i16
  %v2_10004e98 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004e98 = add i32 %v2_10004e98, 2
  %v4_10004e98 = inttoptr i32 %v3_10004e98 to i16*
  store i16 %v1_10004e98, i16* %v4_10004e98, align 2
  %v0_10004e9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10004e9c = load i32, i32* %r3.global-to-local, align 4
  %v2_10004e9c = add i32 %v1_10004e9c, 12
  %v3_10004e9c = inttoptr i32 %v2_10004e9c to i32*
  store i32 %v0_10004e9c, i32* %v3_10004e9c, align 4
  %v0_10004ea0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004ea0 = load i32, i32* @r30, align 4
  %v2_10004ea0 = add i32 %v1_10004ea0, %v0_10004ea0
  store i32 %v2_10004ea0, i32* %r9.global-to-local, align 4
  %v1_10004ea4 = add i32 %v2_10004ea0, 16
  %v2_10004ea4 = inttoptr i32 %v1_10004ea4 to i32*
  %v3_10004ea4 = load i32, i32* %v2_10004ea4, align 4
  store i32 %v3_10004ea4, i32* %r9.global-to-local, align 4
  %v3_10004ea8 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10004ea8, i32* %r11.global-to-local, align 4
  %v1_10004eac = load i32, i32* %r3.global-to-local, align 4
  %v2_10004eac = add i32 %v1_10004eac, 16
  %v3_10004eac = inttoptr i32 %v2_10004eac to i32*
  store i32 %v3_10004ea4, i32* %v3_10004eac, align 4
  %v0_10004eb0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004eb0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10004eb0 = add i32 %v1_10004eb0, 28
  %v3_10004eb0 = inttoptr i32 %v2_10004eb0 to i32*
  store i32 %v0_10004eb0, i32* %v3_10004eb0, align 4
  %v0_10004eb4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004eb4 = add i32 %v0_10004eb4, 12
  store i32 %v1_10004eb4, i32* %r0.global-to-local, align 4
  %v1_10004eb8 = trunc i32 %v1_10004eb4 to i16
  %v2_10004eb8 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004eb8 = add i32 %v2_10004eb8, 4
  %v4_10004eb8 = inttoptr i32 %v3_10004eb8 to i16*
  store i16 %v1_10004eb8, i16* %v4_10004eb8, align 2
  %v0_10004ebc = load i32, i32* %r3.global-to-local, align 4
  %v1_10004ebc = add i32 %v0_10004ebc, 32
  store i32 %v1_10004ebc, i32* %r3.global-to-local, align 4
  %v3_10004ec0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10004ec0, i32* %r5.global-to-local, align 4
  store i32 268455624, i32* @lr, align 4
  %v3_10004ec4 = call i32 @function_10009628(i32 %v1_10004ebc, i32 %v3_10004ec0, i32 %v3_10004ec0)
  store i32 %v3_10004ec4, i32* %r3.global-to-local, align 4
  %v3_10004ec8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004ec8, i32* %r9.global-to-local, align 4
  %v1_10004ecc = add i32 %v3_10004ec8, 1
  %v1_10004ed0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004ed0 = icmp slt i32 %v1_10004ecc, %v1_10004ed0
  store i32 %v1_10004ecc, i32* %stack_var_-104, align 4
  br i1 %v2_10004ed0, label %dec_label_pc_10004e34, label %dec_label_pc_10004edc

dec_label_pc_10004edc:                            ; preds = %dec_label_pc_10004df8, %dec_label_pc_10004e34, %dec_label_pc_10005004, %dec_label_pc_100050b4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10004ee4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004ee4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004ee4 = or i1 %v0_10004ee4, %v1_10004ee4
  br i1 %v2_10004ee4, label %dec_label_pc_100050b4, label %dec_label_pc_10004ee8

dec_label_pc_10004ee8:                            ; preds = %dec_label_pc_10004edc
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10004f84

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004f84
  %v0_10004ef4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004ef4 = icmp eq i32 %v0_10004ef4, 65535
  br i1 %v4_10004ef4, label %dec_label_pc_10004fd8, label %dec_label_pc_10004efc

dec_label_pc_10004efc:                            ; preds = %dec_label_pc_10004fac.dec_label_pc_10004efc_crit_edge, %dec_label_pc_10004ef4
  %v1_10004efc = phi i32 [ %v1_10004efc.pre, %dec_label_pc_10004fac.dec_label_pc_10004efc_crit_edge ], [ 65535, %dec_label_pc_10004ef4 ]
  %v0_10004efc = load i32, i32* %r24.global-to-local, align 4
  %v4_10004efc = icmp eq i32 %v0_10004efc, %v1_10004efc
  br i1 %v4_10004efc, label %dec_label_pc_10004fe8, label %dec_label_pc_10004f04

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004fd8.dec_label_pc_10004f04_crit_edge, %dec_label_pc_10004efc
  %v1_10004f04 = phi i32 [ %v1_10004f04.pre, %dec_label_pc_10004fd8.dec_label_pc_10004f04_crit_edge ], [ %v1_10004efc, %dec_label_pc_10004efc ]
  %v0_10004f04 = load i32, i32* %r25.global-to-local, align 4
  %v4_10004f04 = icmp eq i32 %v0_10004f04, %v1_10004f04
  br i1 %v4_10004f04, label %dec_label_pc_10004ff8, label %dec_label_pc_10004f0c

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004fe8, %dec_label_pc_10004f04, %dec_label_pc_10004ff8
  %v0_10004f0c = load i32, i32* %r26.global-to-local, align 4
  %v1_10004f0c = trunc i32 %v0_10004f0c to i16
  %v2_10004f0c = load i32, i32* %r28.global-to-local, align 4
  %v3_10004f0c = add i32 %v2_10004f0c, 10
  %v4_10004f0c = inttoptr i32 %v3_10004f0c to i16*
  store i16 %v1_10004f0c, i16* %v4_10004f0c, align 2
  %v0_10004f14 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004f14, i32* @r3, align 4
  %v2_10004f18 = call i32 @function_10005814(i32 %v0_10004f14, i32 20)
  %v3_10004f18 = trunc i32 %v2_10004f18 to i16
  store i32 %v2_10004f18, i32* %r3.global-to-local, align 4
  %v3_10004f1c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10004f1c, i32* %r6.global-to-local, align 4
  %v3_10004f20 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004f20 = add i32 %v3_10004f20, 10
  %v5_10004f20 = inttoptr i32 %v4_10004f20 to i16*
  store i16 %v3_10004f18, i16* %v5_10004f20, align 2
  %v0_10004f24 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10004f24, i32* @r4, align 4
  %v0_10004f28 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004f28 = trunc i32 %v0_10004f28 to i16
  %v3_10004f28 = add i32 %v0_10004f24, 6
  %v4_10004f28 = inttoptr i32 %v3_10004f28 to i16*
  store i16 %v1_10004f28, i16* %v4_10004f28, align 2
  %v0_10004f2c = load i32, i32* %r6.global-to-local, align 4
  %v1_10004f2c = add i32 %v0_10004f2c, 12
  store i32 %v1_10004f2c, i32* %r6.global-to-local, align 4
  %v0_10004f30 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004f30 = add i32 %v0_10004f30, 4
  %v2_10004f30 = inttoptr i32 %v1_10004f30 to i16*
  %v3_10004f30 = load i16, i16* %v2_10004f30, align 2
  %v4_10004f30 = zext i16 %v3_10004f30 to i32
  store i32 %v4_10004f30, i32* %r5.global-to-local, align 4
  %v0_10004f34 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004f34, i32* %r3.global-to-local, align 4
  %v4_10004f38 = call i32 @function_10005878(i32 %v0_10004f34, i32 %v0_10004f24, i32 %v4_10004f30, i32 %v1_10004f2c)
  %v5_10004f38 = trunc i32 %v4_10004f38 to i16
  store i32 %v4_10004f38, i32* %r3.global-to-local, align 4
  %v3_10004f3c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004f3c, i32* %r7.global-to-local, align 4
  %v0_10004f40 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004f40 = add i32 %v0_10004f40, 2
  %v2_10004f40 = inttoptr i32 %v1_10004f40 to i16*
  %v3_10004f40 = load i16, i16* %v2_10004f40, align 2
  %v4_10004f40 = zext i16 %v3_10004f40 to i32
  store i32 %v4_10004f40, i32* %r0.global-to-local, align 4
  %v0_10004f44 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004f48 = mul i32 %v3_10004f3c, 24
  store i32 %v1_10004f48, i32* %r7.global-to-local, align 4
  %v3_10004f4c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10004f4c, i32* %r5.global-to-local, align 4
  %v4_10004f50 = add i32 %v0_10004f40, 6
  %v5_10004f50 = inttoptr i32 %v4_10004f50 to i16*
  store i16 %v5_10004f38, i16* %v5_10004f50, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10004f58 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004f58 = load i32, i32* @r30, align 4
  %v2_10004f58 = add i32 %v1_10004f58, %v0_10004f58
  store i32 %v2_10004f58, i32* %r7.global-to-local, align 4
  %v0_10004f5c = load i32, i32* %r5.global-to-local, align 4
  %v1_10004f5c = add i32 %v0_10004f5c, 32
  store i32 %v1_10004f5c, i32* %r5.global-to-local, align 4
  %v0_10004f60 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004f60 = trunc i32 %v0_10004f60 to i16
  %v3_10004f60 = add i32 %v2_10004f58, 2
  %v4_10004f60 = inttoptr i32 %v3_10004f60 to i16*
  store i16 %v1_10004f60, i16* %v4_10004f60, align 2
  %v0_10004f64 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10004f64, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268455792, i32* @lr, align 4
  %v6_10004f6c = call i32 @function_1000aa74(i32 %v0_10004f64, i32 %v0_10004f44, i32 %v1_10004f5c, i32 16384, i32 %v2_10004f58, i32 16)
  store i32 %v6_10004f6c, i32* %r3.global-to-local, align 4
  %v3_10004f70 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004f70, i32* %r9.global-to-local, align 4
  %v1_10004f74 = add i32 %v3_10004f70, 1
  store i32 %v1_10004f74, i32* %r11.global-to-local, align 4
  %v1_10004f78 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004f78 = icmp slt i32 %v1_10004f74, %v1_10004f78
  store i32 %v1_10004f74, i32* %stack_var_-104, align 4
  br i1 %v2_10004f78, label %dec_label_pc_10004f84, label %dec_label_pc_100050b4

dec_label_pc_10004f84:                            ; preds = %dec_label_pc_10004f0c, %dec_label_pc_10004ee8
  %v0_10004f94 = phi i32 [ %v1_10004f74, %dec_label_pc_10004f0c ], [ 0, %dec_label_pc_10004ee8 ]
  %v1_10004f84 = mul i32 %v0_10004f94, 24
  store i32 65535, i32* @r31, align 4
  %v1_10004f90 = load i32, i32* @r30, align 4
  %v2_10004f90 = add i32 %v1_10004f90, %v1_10004f84
  %v1_10004f94 = mul i32 %v0_10004f94, 4
  store i32 %v1_10004f94, i32* %r0.global-to-local, align 4
  %v1_10004f98 = add i32 %v2_10004f90, 20
  %v2_10004f98 = inttoptr i32 %v1_10004f98 to i8*
  %v3_10004f98 = load i8, i8* %v2_10004f98, align 1
  %v4_10004f98 = zext i8 %v3_10004f98 to i32
  store i32 %v4_10004f98, i32* %r9.global-to-local, align 4
  %v0_10004f9c = load i32, i32* %r21.global-to-local, align 4
  %v2_10004f9c = add i32 %v0_10004f9c, %v1_10004f94
  %v3_10004f9c = inttoptr i32 %v2_10004f9c to i32*
  %v4_10004f9c = load i32, i32* %v3_10004f9c, align 4
  store i32 %v4_10004f9c, i32* %r28.global-to-local, align 4
  %v2_10004fa0 = icmp ugt i8 %v3_10004f98, 31
  %v1_10004fa4 = add i32 %v4_10004f9c, 20
  store i32 %v1_10004fa4, i32* %r27.global-to-local, align 4
  br i1 %v2_10004fa0, label %dec_label_pc_10004ef4, label %dec_label_pc_10004fac

dec_label_pc_10004fac:                            ; preds = %dec_label_pc_10004f84
  %v1_10004fac = add i32 %v2_10004f90, 16
  %v2_10004fac = inttoptr i32 %v1_10004fac to i32*
  %v3_10004fac = load i32, i32* %v2_10004fac, align 4
  store i32 %v3_10004fac, i32* %r29.global-to-local, align 4
  %v0_10004fb0 = call i32 @function_10006dc0()
  store i32 %v0_10004fb0, i32* %r3.global-to-local, align 4
  %v3_10004fb4 = load i32, i32* %stack_var_-104, align 4
  %v0_10004fb8 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004fb8 = load i32, i32* @r31, align 4
  %v4_10004fb8 = icmp eq i32 %v0_10004fb8, %v1_10004fb8
  %v1_10004fbc = mul i32 %v3_10004fb4, 24
  %v1_10004fc0 = load i32, i32* @r30, align 4
  %v2_10004fc0 = add i32 %v1_10004fc0, %v1_10004fbc
  store i32 %v2_10004fc0, i32* %r9.global-to-local, align 4
  %v1_10004fc4 = add i32 %v2_10004fc0, 20
  %v2_10004fc4 = inttoptr i32 %v1_10004fc4 to i8*
  %v3_10004fc4 = load i8, i8* %v2_10004fc4, align 1
  %v4_10004fc4 = zext i8 %v3_10004fc4 to i32
  store i32 %v4_10004fc4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004fc4, 64
  %v2_10004fc8 = zext i8 %tmp to i32
  %v3_10004fc8 = lshr i32 %v0_10004fb0, %v2_10004fc8
  store i32 %v3_10004fc8, i32* %r3.global-to-local, align 4
  %v0_10004fcc = load i32, i32* %r29.global-to-local, align 4
  %v2_10004fcc = add i32 %v3_10004fc8, %v0_10004fcc
  store i32 %v2_10004fcc, i32* %r29.global-to-local, align 4
  %v1_10004fd0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004fd0 = add i32 %v1_10004fd0, 16
  %v3_10004fd0 = inttoptr i32 %v2_10004fd0 to i32*
  store i32 %v2_10004fcc, i32* %v3_10004fd0, align 4
  br i1 %v4_10004fb8, label %dec_label_pc_10004fd8, label %dec_label_pc_10004fac.dec_label_pc_10004efc_crit_edge

dec_label_pc_10004fac.dec_label_pc_10004efc_crit_edge: ; preds = %dec_label_pc_10004fac
  %v1_10004efc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004efc

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10004fac, %dec_label_pc_10004ef4
  %v0_10004fd8 = call i32 @function_10006dc0()
  %v1_10004fd8 = trunc i32 %v0_10004fd8 to i16
  store i32 %v0_10004fd8, i32* %r3.global-to-local, align 4
  %v0_10004fdc = load i32, i32* %r24.global-to-local, align 4
  %v1_10004fdc = load i32, i32* @r31, align 4
  %v4_10004fdc = icmp eq i32 %v0_10004fdc, %v1_10004fdc
  %v3_10004fe0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004fe0 = add i32 %v3_10004fe0, 4
  %v5_10004fe0 = inttoptr i32 %v4_10004fe0 to i16*
  store i16 %v1_10004fd8, i16* %v5_10004fe0, align 2
  br i1 %v4_10004fdc, label %dec_label_pc_10004fe8, label %dec_label_pc_10004fd8.dec_label_pc_10004f04_crit_edge

dec_label_pc_10004fd8.dec_label_pc_10004f04_crit_edge: ; preds = %dec_label_pc_10004fd8
  %v1_10004f04.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004f04

dec_label_pc_10004fe8:                            ; preds = %dec_label_pc_10004fd8, %dec_label_pc_10004efc
  %v0_10004fe8 = call i32 @function_10006dc0()
  %v1_10004fe8 = trunc i32 %v0_10004fe8 to i16
  store i32 %v0_10004fe8, i32* %r3.global-to-local, align 4
  %v0_10004fec = load i32, i32* %r25.global-to-local, align 4
  %v1_10004fec = load i32, i32* @r31, align 4
  %v4_10004fec = icmp eq i32 %v0_10004fec, %v1_10004fec
  %v3_10004ff0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004ff0 = add i32 %v3_10004ff0, 20
  %v5_10004ff0 = inttoptr i32 %v4_10004ff0 to i16*
  store i16 %v1_10004fe8, i16* %v5_10004ff0, align 2
  br i1 %v4_10004fec, label %dec_label_pc_10004ff8, label %dec_label_pc_10004f0c

dec_label_pc_10004ff8:                            ; preds = %dec_label_pc_10004fe8, %dec_label_pc_10004f04
  %v0_10004ff8 = call i32 @function_10006dc0()
  %v1_10004ff8 = trunc i32 %v0_10004ff8 to i16
  store i32 %v0_10004ff8, i32* %r3.global-to-local, align 4
  %v3_10004ffc = load i32, i32* %r27.global-to-local, align 4
  %v4_10004ffc = add i32 %v3_10004ffc, 2
  %v5_10004ffc = inttoptr i32 %v4_10004ffc to i16*
  store i16 %v1_10004ff8, i16* %v5_10004ffc, align 2
  br label %dec_label_pc_10004f0c

dec_label_pc_10005004:                            ; preds = %dec_label_pc_10004e10, %dec_label_pc_10005004
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268455952, i32* @lr, align 4
  %v2_1000500c = call i32 @function_1000ae4c(i32 128, i32 1)
  %v3_10005010 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10005010, i32* %r9.global-to-local, align 4
  %v0_10005014 = load i32, i32* @r31, align 4
  %v1_10005014 = mul i32 %v0_10005014, 4
  store i32 %v1_10005014, i32* %r0.global-to-local, align 4
  %v1_1000501c = load i32, i32* %r21.global-to-local, align 4
  %v3_1000501c = add i32 %v1_1000501c, %v1_10005014
  %v4_1000501c = inttoptr i32 %v3_1000501c to i32*
  store i32 %v2_1000500c, i32* %v4_1000501c, align 4
  %v0_10005020 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005020 = mul i32 %v0_10005020, 4
  store i32 %v1_10005020, i32* %r3.global-to-local, align 4
  %v1_10005024 = load i32, i32* %r21.global-to-local, align 4
  %v2_10005024 = add i32 %v1_10005024, %v1_10005020
  %v3_10005024 = inttoptr i32 %v2_10005024 to i32*
  %v4_10005024 = load i32, i32* %v3_10005024, align 4
  store i32 %v4_10005024, i32* %r3.global-to-local, align 4
  %v1_10005028 = inttoptr i32 %v4_10005024 to i32*
  %v2_10005028 = load i32, i32* %v1_10005028, align 4
  store i32 %v2_10005028, i32* %r0.global-to-local, align 4
  %v1_1000502c = add i32 %v4_10005024, 20
  store i32 %v1_1000502c, i32* %r8.global-to-local, align 4
  %v0_10005030 = load i32, i32* %r23.global-to-local, align 4
  %v1_10005030 = trunc i32 %v0_10005030 to i16
  %v3_10005030 = add i32 %v4_10005024, 4
  %v4_10005030 = inttoptr i32 %v3_10005030 to i16*
  store i16 %v1_10005030, i16* %v4_10005030, align 2
  %v1_10005034 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10005034, i32* %r0.global-to-local, align 4
  %v0_10005038 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005038 = trunc i32 %v0_10005038 to i16
  %v2_10005038 = load i32, i32* %r3.global-to-local, align 4
  %v3_10005038 = add i32 %v2_10005038, 6
  %v4_10005038 = inttoptr i32 %v3_10005038 to i16*
  store i16 %v1_10005038, i16* %v4_10005038, align 2
  %v1_1000503c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10005040 = load i32, i32* %r24.global-to-local, align 4
  %v1_10005040 = trunc i32 %v0_10005040 to i16
  %v2_10005040 = load i32, i32* %r3.global-to-local, align 4
  %v3_10005040 = add i32 %v2_10005040, 20
  %v4_10005040 = inttoptr i32 %v3_10005040 to i16*
  store i16 %v1_10005040, i16* %v4_10005040, align 2
  %v1_10005044 = load i32, i32* %r3.global-to-local, align 4
  %v2_10005044 = inttoptr i32 %v1_10005044 to i32*
  store i32 %v1_1000503c, i32* %v2_10005044, align 4
  %v0_10005048 = load i32, i32* %r18.global-to-local, align 4
  %v1_10005048 = trunc i32 %v0_10005048 to i8
  %v2_10005048 = load i32, i32* %r3.global-to-local, align 4
  %v3_10005048 = add i32 %v2_10005048, 1
  %v4_10005048 = inttoptr i32 %v3_10005048 to i8*
  store i8 %v1_10005048, i8* %v4_10005048, align 1
  %v3_1000504c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000504c, i32* %r9.global-to-local, align 4
  %v0_10005050 = load i32, i32* %r19.global-to-local, align 4
  %v1_10005050 = trunc i32 %v0_10005050 to i8
  %v2_10005050 = load i32, i32* %r3.global-to-local, align 4
  %v3_10005050 = add i32 %v2_10005050, 8
  %v4_10005050 = inttoptr i32 %v3_10005050 to i8*
  store i8 %v1_10005050, i8* %v4_10005050, align 1
  %v0_10005054 = load i32, i32* %r16.global-to-local, align 4
  %v1_10005054 = trunc i32 %v0_10005054 to i8
  %v2_10005054 = load i32, i32* %r3.global-to-local, align 4
  %v3_10005054 = add i32 %v2_10005054, 9
  %v4_10005054 = inttoptr i32 %v3_10005054 to i8*
  store i8 %v1_10005054, i8* %v4_10005054, align 1
  %v0_10005058 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005058 = add i32 %v0_10005058, 32
  %v1_1000505c = trunc i32 %v1_10005058 to i16
  %v2_1000505c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000505c = add i32 %v2_1000505c, 2
  %v4_1000505c = inttoptr i32 %v3_1000505c to i16*
  store i16 %v1_1000505c, i16* %v4_1000505c, align 2
  %v3_10005060 = load i32, i32* %stack_var_-104, align 4
  %v3_10005064 = load i32, i32* @global_var_1001d230.61, align 4
  store i32 %v3_10005064, i32* %r0.global-to-local, align 4
  %v1_10005068 = mul i32 %v3_10005060, 24
  store i32 %v1_10005068, i32* %r9.global-to-local, align 4
  %v0_1000506c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000506c = trunc i32 %v0_1000506c to i16
  %v2_1000506c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000506c = add i32 %v2_1000506c, 2
  %v4_1000506c = inttoptr i32 %v3_1000506c to i16*
  store i16 %v1_1000506c, i16* %v4_1000506c, align 2
  %v0_10005070 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005070 = load i32, i32* %r3.global-to-local, align 4
  %v2_10005070 = add i32 %v1_10005070, 12
  %v3_10005070 = inttoptr i32 %v2_10005070 to i32*
  store i32 %v0_10005070, i32* %v3_10005070, align 4
  %v0_10005074 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005074 = load i32, i32* @r30, align 4
  %v2_10005074 = add i32 %v1_10005074, %v0_10005074
  store i32 %v2_10005074, i32* %r9.global-to-local, align 4
  %v1_10005078 = add i32 %v2_10005074, 16
  %v2_10005078 = inttoptr i32 %v1_10005078 to i32*
  %v3_10005078 = load i32, i32* %v2_10005078, align 4
  store i32 %v3_10005078, i32* %r9.global-to-local, align 4
  %v3_1000507c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000507c, i32* %r11.global-to-local, align 4
  %v1_10005080 = load i32, i32* %r3.global-to-local, align 4
  %v2_10005080 = add i32 %v1_10005080, 16
  %v3_10005080 = inttoptr i32 %v2_10005080 to i32*
  store i32 %v3_10005078, i32* %v3_10005080, align 4
  %v0_10005084 = load i32, i32* %r15.global-to-local, align 4
  %v1_10005084 = load i32, i32* %r3.global-to-local, align 4
  %v2_10005084 = add i32 %v1_10005084, 28
  %v3_10005084 = inttoptr i32 %v2_10005084 to i32*
  store i32 %v0_10005084, i32* %v3_10005084, align 4
  %v0_10005088 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005088 = add i32 %v0_10005088, 12
  store i32 %v1_10005088, i32* %r0.global-to-local, align 4
  %v1_1000508c = trunc i32 %v1_10005088 to i16
  %v2_1000508c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000508c = add i32 %v2_1000508c, 4
  %v4_1000508c = inttoptr i32 %v3_1000508c to i16*
  store i16 %v1_1000508c, i16* %v4_1000508c, align 2
  %v0_10005090 = load i32, i32* %r3.global-to-local, align 4
  %v1_10005090 = add i32 %v0_10005090, 32
  store i32 %v1_10005090, i32* %r3.global-to-local, align 4
  %v3_10005094 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10005094, i32* %r5.global-to-local, align 4
  store i32 268456092, i32* @lr, align 4
  %v3_10005098 = call i32 @function_10009628(i32 %v1_10005090, i32 %v3_10005094, i32 %v3_10005094)
  store i32 %v3_10005098, i32* %r3.global-to-local, align 4
  %v3_1000509c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000509c, i32* %r9.global-to-local, align 4
  %v1_100050a0 = add i32 %v3_1000509c, 1
  %v1_100050a4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100050a4 = icmp slt i32 %v1_100050a0, %v1_100050a4
  store i32 %v1_100050a0, i32* %stack_var_-104, align 4
  br i1 %v2_100050a4, label %dec_label_pc_10005004, label %dec_label_pc_10004edc

dec_label_pc_100050b4:                            ; preds = %dec_label_pc_10004f0c, %dec_label_pc_10004edc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268456124, i32* @lr, align 4
  %v0_100050b8 = call i32 @function_1000a1b8()
  store i32 %v0_100050b8, i32* %r3.global-to-local, align 4
  %v0_100050bc = load i32, i32* %r17.global-to-local, align 4
  %v2_100050bc = icmp slt i32 %v0_100050bc, %v0_100050b8
  br i1 %v2_100050bc, label %dec_label_pc_100050c4, label %dec_label_pc_10004edc

dec_label_pc_100050c4:                            ; preds = %dec_label_pc_100050b4, %dec_label_pc_10004c70, %dec_label_pc_10005124
  store i32 %v0_10004c9c, i32* %r0.global-to-local, align 4
  %v1_100050d8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10004c78)
  store i32 %v0_10004cc4, i32* %r28.global-to-local, align 4
  store i32 %v0_10004ccc, i32* %r29.global-to-local, align 4
  %v0_10005120 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005120

dec_label_pc_10005124:                            ; preds = %dec_label_pc_10004dd4
  %v0_10005124 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10005124, i32* %r3.global-to-local, align 4
  store i32 268456236, i32* @lr, align 4
  %v0_10005128 = call i32 @function_10009de8()
  store i32 %v0_10005128, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100050c4

; uselistorder directives
  uselistorder i32 %v1_10005020, { 1, 0 }
  uselistorder i32 %v1_10005014, { 1, 0 }
  uselistorder i32 %v0_10004ff8, { 1, 0 }
  uselistorder i32 %v0_10004fe8, { 1, 0 }
  uselistorder i32 %v0_10004fd8, { 1, 0 }
  uselistorder i32 %v1_10004f94, { 1, 0 }
  uselistorder i32 %v1_10004f74, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10004f38, { 1, 0 }
  uselistorder i32 %v2_10004f18, { 1, 0 }
  uselistorder i32 %v1_10004e50, { 1, 0 }
  uselistorder i32 %v1_10004e44, { 1, 0 }
  uselistorder i32* %stack_var_-100, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 47, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i8 31, { 0, 3, 4, 5, 6, 1, 2, 7, 8, 9 }
  uselistorder label %dec_label_pc_100050c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005004, { 1, 0 }
  uselistorder label %dec_label_pc_10004f0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004edc, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10004e34, { 1, 0 }
}

define i32 @function_10005130(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10005130:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2200 = alloca i32, align 4
  %stack_var_-2196 = alloca i32, align 4
  %stack_var_-2164 = alloca i32, align 4
  %v0_10005130 = load i32, i32* @lr, align 4
  store i32 %v0_10005130, i32* %r0.global-to-local, align 4
  %v0_10005138 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  %v0_10005144 = load i32, i32* @r26, align 4
  store i32 %v0_10005138, i32* %r26.global-to-local, align 4
  %v0_1000514c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %arg3, i32* %r17.global-to-local, align 4
  %v0_10005180 = load i32, i32* @r24, align 4
  %v0_10005184 = load i32, i32* @r25, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10005190 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  %v0_10005198 = load i32, i32* @r31, align 4
  %v0_100051a8 = load i32, i32* @r27, align 4
  %v0_100051ac = load i32, i32* @r30, align 4
  store i32 268456372, i32* @lr, align 4
  %v2_100051b0 = call i32 @function_1000ae4c(i32 %arg2, i32 4)
  store i32 %v2_100051b0, i32* %r20.global-to-local, align 4
  %v0_100051b8 = load i32, i32* @r28, align 4
  %v0_100051c4 = load i32, i32* @r29, align 4
  store i32 %v0_100051c4, i32* %r3.global-to-local, align 4
  store i32 268456396, i32* @lr, align 4
  %v4_100051c8 = inttoptr i32 %v0_100051b8 to i32*
  %v5_100051c8 = call i32 @function_10001e18(i32 %v0_100051c4, i32* %v4_100051c8, i32 2, i32 0)
  %v0_100051d4 = load i32, i32* @r28, align 4
  %v5_100051dc = trunc i32 %v5_100051c8 to i8
  %v0_100051e4 = load i32, i32* @r29, align 4
  store i32 %v0_100051e4, i32* %r3.global-to-local, align 4
  store i32 268456428, i32* @lr, align 4
  %v4_100051e8 = inttoptr i32 %v0_100051d4 to i32*
  %v5_100051e8 = call i32 @function_10001e18(i32 %v0_100051e4, i32* %v4_100051e8, i32 3, i32 65535)
  %v0_100051ec = load i32, i32* @r28, align 4
  store i32 %v5_100051e8, i32* %r14.global-to-local, align 4
  %v0_100051fc = load i32, i32* @r29, align 4
  store i32 %v0_100051fc, i32* %r3.global-to-local, align 4
  store i32 268456452, i32* @lr, align 4
  %v4_10005200 = inttoptr i32 %v0_100051ec to i32*
  %v5_10005200 = call i32 @function_10001e18(i32 %v0_100051fc, i32* %v4_10005200, i32 4, i32 64)
  %v0_10005204 = load i32, i32* @r28, align 4
  %v5_10005210 = trunc i32 %v5_10005200 to i8
  %v0_10005218 = load i32, i32* @r29, align 4
  store i32 %v0_10005218, i32* %r3.global-to-local, align 4
  store i32 268456480, i32* @lr, align 4
  %v4_1000521c = inttoptr i32 %v0_10005204 to i32*
  %v5_1000521c = call i32 @function_10001e18(i32 %v0_10005218, i32* %v4_1000521c, i32 5, i32 0)
  %v0_10005224 = load i32, i32* @r28, align 4
  %v1_10005230 = urem i32 %v5_1000521c, 256
  store i32 %v1_10005230, i32* %r25.global-to-local, align 4
  %v0_10005234 = load i32, i32* @r29, align 4
  store i32 %v0_10005234, i32* %r3.global-to-local, align 4
  store i32 268456508, i32* @lr, align 4
  %v4_10005238 = inttoptr i32 %v0_10005224 to i32*
  %v5_10005238 = call i32 @function_10001e18(i32 %v0_10005234, i32* %v4_10005238, i32 6, i32 65535)
  %v0_1000523c = load i32, i32* @r28, align 4
  store i32 %v5_10005238, i32* %r15.global-to-local, align 4
  %v0_1000524c = load i32, i32* @r29, align 4
  store i32 %v0_1000524c, i32* %r3.global-to-local, align 4
  store i32 268456532, i32* @lr, align 4
  %v4_10005250 = inttoptr i32 %v0_1000523c to i32*
  %v5_10005250 = call i32 @function_10001e18(i32 %v0_1000524c, i32* %v4_10005250, i32 7, i32 53)
  %v0_10005258 = load i32, i32* @r28, align 4
  store i32 %v5_10005250, i32* %r16.global-to-local, align 4
  %v0_10005268 = load i32, i32* @r29, align 4
  store i32 %v0_10005268, i32* %r3.global-to-local, align 4
  store i32 268456560, i32* @lr, align 4
  %v4_1000526c = inttoptr i32 %v0_10005258 to i32*
  %v5_1000526c = call i32 @function_10001e18(i32 %v0_10005268, i32* %v4_1000526c, i32 9, i32 65535)
  %v0_10005270 = load i32, i32* @r28, align 4
  store i32 %v5_1000526c, i32* %r22.global-to-local, align 4
  %v0_10005280 = load i32, i32* @r29, align 4
  store i32 %v0_10005280, i32* %r3.global-to-local, align 4
  store i32 268456584, i32* @lr, align 4
  %v4_10005284 = inttoptr i32 %v0_10005270 to i32*
  %v5_10005284 = call i32 @function_10001e18(i32 %v0_10005280, i32* %v4_10005284, i32 0, i32 12)
  %v0_10005290 = load i32, i32* @r28, align 4
  store i32 %v5_10005284, i32* %r24.global-to-local, align 4
  %v0_10005298 = load i32, i32* @r29, align 4
  store i32 %v0_10005298, i32* %r3.global-to-local, align 4
  store i32 268456608, i32* @lr, align 4
  %v4_1000529c = inttoptr i32 %v0_10005290 to i32*
  %v5_1000529c = call i32 @function_10001d50(i32 %v0_10005298, i32* %v4_1000529c, i32 8, i32 0)
  store i32 %v5_1000529c, i32* @r28, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268456620, i32* @lr, align 4
  %v1_100052a8 = call i32 @function_10008b98(i32 37)
  store i32 37, i32* %r3.global-to-local, align 4
  %v3_100052b4 = call i32 @function_10008ae4(i32 37, i32* null)
  store i32 %v3_100052b4, i32* %r3.global-to-local, align 4
  store i32 268456644, i32* @lr, align 4
  %v2_100052c0 = call i32 @function_10009f50(i32 %v3_100052b4, i32 0)
  store i32 %v2_100052c0, i32* @r31, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268456656, i32* @lr, align 4
  %v1_100052cc = call i32 @function_10008b0c(i32 37)
  store i32 %v1_100052cc, i32* %r3.global-to-local, align 4
  %v0_100052d0 = load i32, i32* @r31, align 4
  %v1_100052d0 = icmp slt i32 %v0_100052d0, 0
  %v3_100052d0 = icmp eq i32 %v0_100052d0, 0
  store i1 %v1_100052d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100052d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100052d0, label %dec_label_pc_100053a0, label %dec_label_pc_100052d8

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_10005130
  %v2_100052d8 = ptrtoint i32* %stack_var_-2164 to i32
  store i32 %v2_100052d8, i32* %r27.global-to-local, align 4
  store i32 %v0_100052d0, i32* %r3.global-to-local, align 4
  store i32 268456684, i32* @lr, align 4
  %v3_100052e8 = call i32 @function_1000a020(i32 %v0_100052d0, i32 %v2_100052d8, i32 2048)
  store i32 %v3_100052e8, i32* %r30.global-to-local, align 4
  %v0_100052f0 = load i32, i32* @r31, align 4
  store i32 %v0_100052f0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100052f8.74 to i32), i32* @lr, align 4
  %v0_100052f4 = call i32 @function_10009de8()
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268456704, i32* @lr, align 4
  %v1_100052fc = call i32 @function_10008b98(i32 38)
  store i32 38, i32* %r3.global-to-local, align 4
  %v3_10005308 = call i32 @function_10008ae4(i32 38, i32* null)
  %v0_1000530c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100052d8, i32* %r3.global-to-local, align 4
  %v3_10005318 = bitcast i32* %stack_var_-2164 to i8*
  %v4_10005318 = call i32 @function_10009954(i8* %v3_10005318, i32 %v0_1000530c, i32 %v3_10005308)
  store i32 %v4_10005318, i32* @r31, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268456744, i32* @lr, align 4
  %v1_10005324 = call i32 @function_10008b0c(i32 38)
  store i32 %v1_10005324, i32* %r3.global-to-local, align 4
  %v0_10005328 = load i32, i32* @r31, align 4
  %v1_10005328 = icmp slt i32 %v0_10005328, -1
  %v3_10005328 = icmp eq i32 %v0_10005328, -1
  store i1 %v1_10005328, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005328, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005328, label %dec_label_pc_100053a0, label %dec_label_pc_10005330

dec_label_pc_10005330:                            ; preds = %dec_label_pc_100052d8
  %v0_10005330 = load i32, i32* %r30.global-to-local, align 4
  %v2_10005330 = icmp slt i32 %v0_10005330, %v0_10005328
  %v3_10005330 = icmp sgt i32 %v0_10005330, %v0_10005328
  %v4_10005330 = icmp eq i32 %v0_10005330, %v0_10005328
  store i1 %v2_10005330, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10005330, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005330, label %dec_label_pc_10005338, label %dec_label_pc_100053a0

dec_label_pc_10005338:                            ; preds = %dec_label_pc_10005330
  %v2_10005338 = sub i32 %v0_10005330, %v0_10005328
  store i32 %v2_10005338, i32* %r0.global-to-local, align 4
  %v1_1000533c = add i32 %v0_10005330, -1
  store i32 %v1_1000533c, i32* %r3.global-to-local, align 4
  store i32 %v2_10005338, i32* %ctr.global-to-local, align 4
  store i32 %v0_10005328, i32* %r29.global-to-local, align 4
  %v0_10005348 = load i32, i32* %r27.global-to-local, align 4
  %v2_10005348 = add i32 %v0_10005348, %v0_10005328
  store i32 %v2_10005348, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10005350 = ptrtoint i32* %stack_var_-2196 to i32
  store i32 %v2_10005350, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005354

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005398, %dec_label_pc_10005338
  %v0_1000539c = phi i32 [ %v1_1000539c, %dec_label_pc_10005398 ], [ %v2_10005338, %dec_label_pc_10005338 ]
  %v0_10005398 = phi i32 [ %v1_10005398, %dec_label_pc_10005398 ], [ %v0_10005328, %dec_label_pc_10005338 ]
  %v0_10005360 = phi i32 [ %v1_10005360, %dec_label_pc_10005398 ], [ %v2_10005348, %dec_label_pc_10005338 ]
  %v0_10005354 = phi i32 [ %v0_100053545, %dec_label_pc_10005398 ], [ 0, %dec_label_pc_10005338 ]
  %v1_10005354 = icmp slt i32 %v0_10005354, 0
  %v3_10005354 = icmp eq i32 %v0_10005354, 0
  store i1 %v1_10005354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005354, i1* %cr7_eq.global-to-local, align 1
  %v1_10005358 = inttoptr i32 %v0_10005360 to i8*
  %v2_10005358 = load i8, i8* %v1_10005358, align 1
  %v3_10005358 = zext i8 %v2_10005358 to i32
  store i32 %v3_10005358, i32* %r9.global-to-local, align 4
  %v4_1000535c = icmp eq i32 %v1_1000533c, %v0_10005398
  %v1_10005360 = add i32 %v0_10005360, 1
  store i32 %v1_10005360, i32* %r11.global-to-local, align 4
  br i1 %v3_10005354, label %dec_label_pc_10005370, label %dec_label_pc_10005380

dec_label_pc_10005370:                            ; preds = %dec_label_pc_10005354
  %v1_10005370 = icmp ult i8 %v2_10005358, 9
  %v3_10005370 = icmp eq i8 %v2_10005358, 9
  store i1 %v1_10005370, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005370, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10005358, label %dec_label_pc_1000537c [
    i8 32, label %dec_label_pc_10005398
    i8 9, label %dec_label_pc_10005398
  ]

dec_label_pc_1000537c:                            ; preds = %dec_label_pc_10005370
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10005380

dec_label_pc_10005380:                            ; preds = %dec_label_pc_10005354, %dec_label_pc_1000537c
  %v0_100053546 = phi i32 [ %v0_10005354, %dec_label_pc_10005354 ], [ 1, %dec_label_pc_1000537c ]
  %v1_10005380 = add nuw nsw i32 %v3_10005358, 208
  %v1_10005384 = urem i32 %v1_10005380, 256
  store i32 %v1_10005384, i32* %r0.global-to-local, align 4
  %v1_10005388 = icmp ult i32 %v1_10005384, 9
  %v2_10005388 = icmp ugt i32 %v1_10005384, 9
  %v3_10005388 = icmp eq i32 %v1_10005384, 9
  store i1 %v1_10005388, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005388, i1* %cr7_eq.global-to-local, align 1
  %v3_10005364.not = icmp ne i8 %v2_10005358, 46
  %brmerge.not = and i1 %v3_10005364.not, %v2_10005388
  %brmerge25 = or i1 %v4_1000535c, %brmerge.not
  br i1 %brmerge25, label %dec_label_pc_1000578c, label %dec_label_pc_10005398

dec_label_pc_10005398:                            ; preds = %dec_label_pc_10005380, %dec_label_pc_10005370, %dec_label_pc_10005370
  %v0_100053545 = phi i32 [ 0, %dec_label_pc_10005370 ], [ 0, %dec_label_pc_10005370 ], [ %v0_100053546, %dec_label_pc_10005380 ]
  %v1_10005398 = add i32 %v0_10005398, 1
  store i32 %v1_10005398, i32* %r29.global-to-local, align 4
  %v1_1000539c = add i32 %v0_1000539c, -1
  store i32 %v1_1000539c, i32* %ctr.global-to-local, align 4
  %v2_1000539c = icmp eq i32 %v1_1000539c, 0
  br i1 %v2_1000539c, label %dec_label_pc_100053a0, label %dec_label_pc_10005354

dec_label_pc_100053a0:                            ; preds = %dec_label_pc_10005398, %dec_label_pc_10005330, %dec_label_pc_100052d8, %dec_label_pc_10005130
  %v0_100053a0 = call i32 @function_10006dc0()
  %v1_100053a4 = urem i32 %v0_100053a0, 4
  store i32 %v1_100053a4, i32* %r3.global-to-local, align 4
  %v1_100053a8 = icmp eq i32 %v1_100053a4, 0
  %v3_100053a8 = icmp eq i32 %v1_100053a4, 1
  store i1 %v1_100053a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100053a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100053a8, label %dec_label_pc_100053d4, label %dec_label_pc_100053b0

dec_label_pc_100053b0:                            ; preds = %dec_label_pc_100053a0
  store i1 %v1_100053a8, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100053a8, label %dec_label_pc_100057f0, label %dec_label_pc_100053b8

dec_label_pc_100053b8:                            ; preds = %dec_label_pc_100053b0
  %v2_100053b8 = icmp eq i32 %v1_100053a4, 3
  %v3_100053b8 = icmp eq i32 %v1_100053a4, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100053b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100053b8, label %dec_label_pc_100057fc, label %dec_label_pc_100053c0

dec_label_pc_100053c0:                            ; preds = %dec_label_pc_100053b8
  %v1_100053c0 = icmp ne i32 %v1_100053a4, 3
  store i1 %v1_100053c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100053b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100053b8, label %dec_label_pc_100053c8, label %dec_label_pc_100053dc

dec_label_pc_100053c8:                            ; preds = %dec_label_pc_100053c0
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_100053dc

dec_label_pc_100053d4:                            ; preds = %dec_label_pc_100053a0
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_100053dc

dec_label_pc_100053dc:                            ; preds = %dec_label_pc_100053c0, %dec_label_pc_100057fc, %dec_label_pc_100057f0, %dec_label_pc_1000578c, %dec_label_pc_100053c8, %dec_label_pc_100053d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268456932, i32* @lr, align 4
  %v0_100053e0 = call i32 @function_1000a1b8()
  %v0_100053e4 = load i32, i32* @r28, align 4
  %v1_100053e4 = icmp slt i32 %v0_100053e4, 0
  %v3_100053e4 = icmp eq i32 %v0_100053e4, 0
  store i1 %v1_100053e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100053e4, i1* %cr7_eq.global-to-local, align 1
  %v1_100053e8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100053e8 = add i32 %v1_100053e8, %v0_100053e0
  store i32 %v2_100053e8, i32* %r3.global-to-local, align 4
  br i1 %v3_100053e4, label %dec_label_pc_100056f0, label %dec_label_pc_100053f4

dec_label_pc_100053f4:                            ; preds = %dec_label_pc_100053dc
  store i32 %v0_100053e4, i32* %r3.global-to-local, align 4
  store i32 268456956, i32* @lr, align 4
  %v1_100053f8 = inttoptr i32 %v0_100053e4 to i8*
  %v2_100053f8 = call i32 @function_100095a4(i8* %v1_100053f8)
  store i32 %v2_100053f8, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268456976, i32* @lr, align 4
  %v3_1000540c = call i32 @function_1000aaf0(i32 2, i32 3, i32 17)
  store i32 %v3_1000540c, i32* %r3.global-to-local, align 4
  %v1_10005410 = icmp slt i32 %v3_1000540c, -1
  %v3_10005410 = icmp eq i32 %v3_1000540c, -1
  store i1 %v1_10005410, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005410, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000540c, i32* %r23.global-to-local, align 4
  br i1 %v3_10005410, label %dec_label_pc_100056f0, label %dec_label_pc_1000541c

dec_label_pc_1000541c:                            ; preds = %dec_label_pc_100053f4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10005428 = ptrtoint i32* %stack_var_-2200 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2200, align 4
  store i32 268457016, i32* @lr, align 4
  %v5_10005434 = call i32 @function_1000aab4(i32 0, i32 3, i32 %v2_10005428, i32 4, i32 4)
  store i32 %v5_10005434, i32* %r3.global-to-local, align 4
  %v1_10005438 = icmp slt i32 %v5_10005434, -1
  %v3_10005438 = icmp eq i32 %v5_10005434, -1
  store i1 %v1_10005438, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005438, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005438, label %dec_label_pc_10005808, label %dec_label_pc_10005440

dec_label_pc_10005440:                            ; preds = %dec_label_pc_1000541c
  %v0_10005440 = load i32, i32* %r19.global-to-local, align 4
  %v1_10005440 = icmp slt i32 %v0_10005440, 0
  %v3_10005440 = icmp eq i32 %v0_10005440, 0
  store i1 %v1_10005440, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005440, i1* %cr7_eq.global-to-local, align 1
  %v0_10005444 = load i32, i32* %r14.global-to-local, align 4
  %v1_10005444 = urem i32 %v0_10005444, 65536
  store i32 %v1_10005444, i32* %r14.global-to-local, align 4
  %v5_10005448 = trunc i32 %v0_10005444 to i16
  %v0_1000544c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000544c = urem i32 %v0_1000544c, 256
  store i32 %v1_1000544c, i32* @r30, align 4
  %v0_10005450 = call i32 @__asm_mfcr()
  store i32 %v0_10005450, i32* %r3.global-to-local, align 4
  %v0_10005458 = load i32, i32* %r15.global-to-local, align 4
  %v1_10005458 = urem i32 %v0_10005458, 65536
  store i32 %v1_10005458, i32* %r14.global-to-local, align 4
  %v0_1000545c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000545c = urem i32 %v0_1000545c, 65536
  store i32 %v1_1000545c, i32* %r15.global-to-local, align 4
  %v0_10005460 = load i32, i32* %r22.global-to-local, align 4
  %v1_10005460 = urem i32 %v0_10005460, 65536
  store i32 %v1_10005460, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  %v0_10005470 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10005470 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10005470 = or i1 %v0_10005470, %v1_10005470
  br i1 %v2_10005470, label %dec_label_pc_100055d4.preheader, label %dec_label_pc_10005474

dec_label_pc_10005474:                            ; preds = %dec_label_pc_10005440
  %v0_10005474 = load i32, i32* @r30, align 4
  %v1_10005474 = load i32, i32* %r18.global-to-local, align 4
  %v2_10005474 = add i32 %v1_10005474, %v0_10005474
  %v1_10005478 = icmp slt i32 %v1_10005474, 0
  %v3_10005478 = icmp eq i32 %v1_10005474, 0
  store i1 %v1_10005478, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10005478, i1* %cr4_eq.global-to-local, align 1
  %v1_1000547c = urem i32 %v2_10005474, 65536
  %v0_10005480 = load i32, i32* %r25.global-to-local, align 4
  %v3_10005480 = icmp eq i32 %v0_10005480, 0
  store i1 %v3_10005480, i1* %cr3_eq.global-to-local, align 1
  %v1_10005484 = add nuw nsw i32 %v1_1000547c, 27
  store i32 %v1_10005484, i32* %r0.global-to-local, align 4
  %v1_10005488 = add nuw nsw i32 %v1_1000547c, 47
  store i32 %v1_10005488, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10005474, 47
  %v1_1000548c = urem i32 %fold, 65536
  store i32 %v1_1000548c, i32* %r24.global-to-local, align 4
  %fold4 = add i32 %v2_10005474, 27
  %v1_10005490 = urem i32 %fold4, 65536
  store i32 %v1_10005490, i32* %r25.global-to-local, align 4
  %v1_10005494 = add i32 %v1_10005474, 1
  store i32 %v1_10005494, i32* %r26.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268566528, i32* %r22.global-to-local, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  %v4_100054f8 = sext i8 %v5_10005210 to i32
  br label %dec_label_pc_100054a4

dec_label_pc_100054a4:                            ; preds = %dec_label_pc_100057c0, %dec_label_pc_100055b0, %dec_label_pc_10005474
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268457136, i32* @lr, align 4
  %v2_100054ac = call i32 @function_1000ae4c(i32 600, i32 1)
  store i32 %v2_100054ac, i32* %r3.global-to-local, align 4
  %v3_100054b0 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100054b0, i32* %r0.global-to-local, align 4
  %v0_100054b4 = load i32, i32* @r31, align 4
  %v1_100054b4 = mul i32 %v0_100054b4, 4
  store i32 %v1_100054b4, i32* %r9.global-to-local, align 4
  %v2_100054b8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100054b8 = add i32 %v2_100054b8, %v1_100054b4
  %v4_100054b8 = inttoptr i32 %v3_100054b8 to i32*
  store i32 %v2_100054ac, i32* %v4_100054b8, align 4
  %v0_100054bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100054bc = mul i32 %v0_100054bc, 4
  store i32 %v1_100054bc, i32* %r0.global-to-local, align 4
  %v0_100054c0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100054c0 = add i32 %v0_100054c0, %v1_100054bc
  %v3_100054c0 = inttoptr i32 %v2_100054c0 to i32*
  %v4_100054c0 = load i32, i32* %v3_100054c0, align 4
  store i32 %v4_100054c0, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100054c8 = inttoptr i32 %v4_100054c0 to i32*
  %v2_100054c8 = load i32, i32* %v1_100054c8, align 4
  store i32 %v2_100054c8, i32* %r9.global-to-local, align 4
  %v1_100054cc = add i32 %v4_100054c0, 20
  store i32 %v1_100054cc, i32* %r10.global-to-local, align 4
  %v1_100054d0 = add i32 %v4_100054c0, 28
  store i32 %v1_100054d0, i32* %r8.global-to-local, align 4
  %v1_100054d4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100054d4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100054dc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100054dc, i32* %r9.global-to-local, align 4
  %v1_100054e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100054e0 = inttoptr i32 %v1_100054e0 to i32*
  store i32 %v1_100054dc, i32* %v2_100054e0, align 4
  %v0_100054e4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100054e4 = trunc i32 %v0_100054e4 to i16
  %v2_100054e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100054e4 = add i32 %v2_100054e4, 2
  %v4_100054e4 = inttoptr i32 %v3_100054e4 to i16*
  store i16 %v1_100054e4, i16* %v4_100054e4, align 2
  %v2_100054ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100054ec = add i32 %v2_100054ec, 4
  %v4_100054ec = inttoptr i32 %v3_100054ec to i16*
  store i16 %v5_10005448, i16* %v4_100054ec, align 2
  %v2_100054f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100054f4 = add i32 %v2_100054f4, 1
  %v4_100054f4 = inttoptr i32 %v3_100054f4 to i8*
  store i8 %v5_100051dc, i8* %v4_100054f4, align 1
  store i32 %v4_100054f8, i32* %r0.global-to-local, align 4
  %v2_100054fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100054fc = add i32 %v2_100054fc, 8
  %v4_100054fc = inttoptr i32 %v3_100054fc to i8*
  store i8 %v5_10005210, i8* %v4_100054fc, align 1
  %v0_10005500 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005500, label %dec_label_pc_1000550c, label %dec_label_pc_10005504

dec_label_pc_10005504:                            ; preds = %dec_label_pc_100054a4
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10005508 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005508 = add i32 %v2_10005508, 6
  %v4_10005508 = inttoptr i32 %v3_10005508 to i16*
  store i16 16384, i16* %v4_10005508, align 2
  br label %dec_label_pc_1000550c

dec_label_pc_1000550c:                            ; preds = %dec_label_pc_100054a4, %dec_label_pc_10005504
  %v0_10005510 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005510 = add i32 %v0_10005510, 41
  store i32 %v1_10005510, i32* %r9.global-to-local, align 4
  %v3_10005514 = add i32 %v0_10005510, 9
  %v4_10005514 = inttoptr i32 %v3_10005514 to i8*
  store i8 17, i8* %v4_10005514, align 1
  %v0_10005518 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005518 = load i32, i32* @r30, align 4
  %v2_10005518 = add i32 %v1_10005518, %v0_10005518
  store i32 %v2_10005518, i32* %r29.global-to-local, align 4
  %v0_1000551c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000551c = trunc i32 %v0_1000551c to i16
  %v2_1000551c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000551c = add i32 %v2_1000551c, 4
  %v4_1000551c = inttoptr i32 %v3_1000551c to i16*
  store i16 %v1_1000551c, i16* %v4_1000551c, align 2
  %v0_10005520 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005520 = add i32 %v0_10005520, 1
  store i32 %v1_10005520, i32* %r31.global-to-local, align 4
  %v3_10005524 = load i32, i32* @global_var_1001d230.61, align 4
  store i32 %v3_10005524, i32* %r0.global-to-local, align 4
  store i32 %v1_10005520, i32* %r3.global-to-local, align 4
  %v0_1000552c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000552c = trunc i32 %v0_1000552c to i16
  %v2_1000552c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000552c = add i32 %v2_1000552c, 2
  %v4_1000552c = inttoptr i32 %v3_1000552c to i16*
  store i16 %v1_1000552c, i16* %v4_1000552c, align 2
  %v0_10005530 = load i32, i32* @r28, align 4
  %v0_10005534 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005534 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005534 = add i32 %v1_10005534, 12
  %v3_10005534 = inttoptr i32 %v2_10005534 to i32*
  store i32 %v0_10005534, i32* %v3_10005534, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_1000553c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000553c = trunc i32 %v0_1000553c to i16
  %v2_1000553c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000553c = add i32 %v2_1000553c, 20
  %v4_1000553c = inttoptr i32 %v3_1000553c to i16*
  store i16 %v1_1000553c, i16* %v4_1000553c, align 2
  %v0_10005540 = load i32, i32* %r26.global-to-local, align 4
  %v0_10005544 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005544 = trunc i32 %v0_10005544 to i16
  %v2_10005544 = load i32, i32* %r8.global-to-local, align 4
  %v3_10005544 = add i32 %v2_10005544, 2
  %v4_10005544 = inttoptr i32 %v3_10005544 to i16*
  store i16 %v1_10005544, i16* %v4_10005544, align 2
  %v0_10005548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10005548 = trunc i32 %v0_10005548 to i16
  %v2_10005548 = load i32, i32* %r8.global-to-local, align 4
  %v3_10005548 = add i32 %v2_10005548, 4
  %v4_10005548 = inttoptr i32 %v3_10005548 to i16*
  store i16 %v1_10005548, i16* %v4_10005548, align 2
  %v0_1000554c = load i32, i32* @r21, align 4
  %v1_1000554c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000554c = add i32 %v1_1000554c, 16
  %v3_1000554c = inttoptr i32 %v2_1000554c to i32*
  store i32 %v0_1000554c, i32* %v3_1000554c, align 4
  %v0_10005550 = load i32, i32* %r16.global-to-local, align 4
  %v1_10005550 = trunc i32 %v0_10005550 to i16
  %v2_10005550 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005550 = add i32 %v2_10005550, 28
  %v4_10005550 = inttoptr i32 %v3_10005550 to i16*
  store i16 %v1_10005550, i16* %v4_10005550, align 2
  %v0_10005554 = load i32, i32* @r30, align 4
  %v1_10005554 = trunc i32 %v0_10005554 to i8
  %v2_10005554 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005554 = add i32 %v2_10005554, 40
  %v4_10005554 = inttoptr i32 %v3_10005554 to i8*
  store i8 %v1_10005554, i8* %v4_10005554, align 1
  store i32 268457308, i32* @lr, align 4
  %v3_10005558 = call i32 @function_10009628(i32 %v1_10005520, i32 %v0_10005530, i32 %v0_10005540)
  store i32 %v3_10005558, i32* %r3.global-to-local, align 4
  %v0_1000555c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000555c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000555c = or i1 %v0_1000555c, %v1_1000555c
  br i1 %v2_1000555c, label %dec_label_pc_100057c0, label %dec_label_pc_10005560

dec_label_pc_10005560:                            ; preds = %dec_label_pc_1000550c
  %v0_10005560 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10005560, i32* %ctr.global-to-local, align 4
  %v0_10005564 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005564, i32* %r3.global-to-local, align 4
  %v0_10005568 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10005568, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10005588.outer

dec_label_pc_10005588.outer:                      ; preds = %dec_label_pc_10005598, %dec_label_pc_10005560
  %v2_10005598.ph = phi i32 [ %v0_100055a0, %dec_label_pc_10005598 ], [ %v0_10005568, %dec_label_pc_10005560 ]
  %v0_10005584.ph = phi i32 [ %v1_100055ac, %dec_label_pc_10005598 ], [ %v0_10005560, %dec_label_pc_10005560 ]
  %v0_10005580.ph = phi i32 [ %v1_100055a8, %dec_label_pc_10005598 ], [ %v0_10005564, %dec_label_pc_10005560 ]
  %v0_1000557c.ph = phi i32 [ %v1_1000559c, %dec_label_pc_10005598 ], [ 0, %dec_label_pc_10005560 ]
  %v1_10005588.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005588

dec_label_pc_10005578:                            ; preds = %dec_label_pc_10005588
  %v1_10005578 = urem i32 %v1_1000558c, 256
  store i32 %v1_10005578, i32* %r8.global-to-local, align 4
  %v1_1000557c = add i32 %v0_1000557c, 1
  store i32 %v1_1000557c, i32* %r11.global-to-local, align 4
  %v1_10005580 = add i32 %v0_10005580, 1
  store i32 %v1_10005580, i32* %r3.global-to-local, align 4
  %v1_10005584 = add i32 %v0_10005584, -1
  store i32 %v1_10005584, i32* %ctr.global-to-local, align 4
  %v2_10005584 = icmp eq i32 %v1_10005584, 0
  br i1 %v2_10005584, label %dec_label_pc_100055b0.loopexit, label %dec_label_pc_10005588

dec_label_pc_10005588:                            ; preds = %dec_label_pc_10005588.outer, %dec_label_pc_10005578
  %v0_10005584 = phi i32 [ %v1_10005584, %dec_label_pc_10005578 ], [ %v0_10005584.ph, %dec_label_pc_10005588.outer ]
  %v0_10005580 = phi i32 [ %v1_10005580, %dec_label_pc_10005578 ], [ %v0_10005580.ph, %dec_label_pc_10005588.outer ]
  %v0_10005598 = phi i32 [ %v1_10005578, %dec_label_pc_10005578 ], [ 0, %dec_label_pc_10005588.outer ]
  %v0_1000557c = phi i32 [ %v1_1000557c, %dec_label_pc_10005578 ], [ %v0_1000557c.ph, %dec_label_pc_10005588.outer ]
  %v2_10005588 = add i32 %v1_10005588.pre, %v0_1000557c
  %v3_10005588 = inttoptr i32 %v2_10005588 to i8*
  %v4_10005588 = load i8, i8* %v3_10005588, align 1
  %v5_10005588 = zext i8 %v4_10005588 to i32
  store i32 %v5_10005588, i32* %r0.global-to-local, align 4
  %v1_1000558c = add nuw nsw i32 %v0_10005598, 1
  store i32 %v1_1000558c, i32* %r9.global-to-local, align 4
  %v1_10005590 = icmp ult i8 %v4_10005588, 46
  %v3_10005590 = icmp eq i8 %v4_10005588, 46
  store i1 %v1_10005590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005590, label %dec_label_pc_10005598, label %dec_label_pc_10005578

dec_label_pc_10005598:                            ; preds = %dec_label_pc_10005588
  %v1_10005598 = trunc i32 %v0_10005598 to i8
  %v3_10005598 = inttoptr i32 %v2_10005598.ph to i8*
  store i8 %v1_10005598, i8* %v3_10005598, align 1
  %v0_1000559c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000559c = add i32 %v0_1000559c, 1
  store i32 %v1_1000559c, i32* %r11.global-to-local, align 4
  %v0_100055a0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100055a0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_100055a8 = add i32 %v0_100055a0, 1
  store i32 %v1_100055a8, i32* %r3.global-to-local, align 4
  %v0_100055ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100055ac = add i32 %v0_100055ac, -1
  store i32 %v1_100055ac, i32* %ctr.global-to-local, align 4
  %v2_100055ac = icmp eq i32 %v1_100055ac, 0
  br i1 %v2_100055ac, label %dec_label_pc_100055b0, label %dec_label_pc_10005588.outer

dec_label_pc_100055b0.loopexit:                   ; preds = %dec_label_pc_10005578
  %extract.t.le = trunc i32 %v1_1000558c to i8
  br label %dec_label_pc_100055b0

dec_label_pc_100055b0:                            ; preds = %dec_label_pc_10005598, %dec_label_pc_100055b0.loopexit
  %v2_100055b0 = phi i32 [ %v2_10005598.ph, %dec_label_pc_100055b0.loopexit ], [ %v0_100055a0, %dec_label_pc_10005598 ]
  %v0_100055b0.off0 = phi i8 [ %extract.t.le, %dec_label_pc_100055b0.loopexit ], [ 0, %dec_label_pc_10005598 ]
  %v3_100055b0 = inttoptr i32 %v2_100055b0 to i8*
  store i8 %v0_100055b0.off0, i8* %v3_100055b0, align 1
  %v0_100055b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100055b4 = load i32, i32* %r18.global-to-local, align 4
  %v2_100055b4 = add i32 %v1_100055b4, %v0_100055b4
  store i32 %v2_100055b4, i32* %r9.global-to-local, align 4
  %v0_100055b8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100055b8 = trunc i32 %v0_100055b8 to i16
  %v3_100055b8 = add i32 %v2_100055b4, 4
  %v4_100055b8 = inttoptr i32 %v3_100055b8 to i16*
  store i16 %v1_100055b8, i16* %v4_100055b8, align 2
  %v3_100055bc = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100055bc, i32* %r11.global-to-local, align 4
  %v0_100055c0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100055c0 = trunc i32 %v0_100055c0 to i16
  %v2_100055c0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100055c0 = add i32 %v2_100055c0, 2
  %v4_100055c0 = inttoptr i32 %v3_100055c0 to i16*
  store i16 %v1_100055c0, i16* %v4_100055c0, align 2
  %v0_100055c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100055c4 = add i32 %v0_100055c4, 1
  %v1_100055c8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100055c8 = icmp slt i32 %v1_100055c4, %v1_100055c8
  %v4_100055c8 = icmp eq i32 %v1_100055c4, %v1_100055c8
  store i1 %v2_100055c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100055c8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100055c4, i32* %stack_var_-2200, align 4
  br i1 %v2_100055c8, label %dec_label_pc_100054a4, label %dec_label_pc_100055d4.preheader

dec_label_pc_100055d4.preheader:                  ; preds = %dec_label_pc_100055b0, %dec_label_pc_100057c0, %dec_label_pc_10005440
  %v4_100055f4.pre-phi = sext i16 %v5_10005448 to i32
  %v2_100055e0 = urem i32 %v0_10005450, 16
  %v1_100055e8 = mul nuw i32 %v2_100055e0, 268435456
  br label %dec_label_pc_100055d4

dec_label_pc_100055d4:                            ; preds = %dec_label_pc_100055d4.preheader, %dec_label_pc_100056dc
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %v2_100055e0, i32* %r0.global-to-local, align 4
  %v1_100055e4 = call %0 @__asm_mtcrf(i32 1, i32 %v2_100055e0)
  store i32 %v1_100055e8, i32* %r0.global-to-local, align 4
  %v0_100055ec = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100055ec = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100055ec = or i1 %v0_100055ec, %v1_100055ec
  br i1 %v2_100055ec, label %dec_label_pc_100056dc, label %dec_label_pc_100055f0

dec_label_pc_100055f0:                            ; preds = %dec_label_pc_100055d4
  store i32 %v4_100055f4.pre-phi, i32* %r11.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_100055fc = load i32, i32* @r30, align 4
  %v1_100055fc = load i32, i32* %r18.global-to-local, align 4
  %v2_100055fc = add i32 %v1_100055fc, %v0_100055fc
  store i32 %v2_100055fc, i32* %r9.global-to-local, align 4
  %v0_10005600 = load i32, i32* %r15.global-to-local, align 4
  %v2_10005600 = icmp slt i32 %v0_10005600, 65535
  %v4_10005600 = icmp eq i32 %v0_10005600, 65535
  store i1 %v2_10005600, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10005600, i1* %cr7_eq.global-to-local, align 1
  store i1 false, i1* %cr2_eq.global-to-local, align 1
  %v0_10005608 = load i32, i32* %r14.global-to-local, align 4
  %v4_10005608 = icmp eq i32 %v0_10005608, 65535
  store i1 %v4_10005608, i1* %cr3_eq.global-to-local, align 1
  %v0_1000560c = load i32, i32* %r16.global-to-local, align 4
  %v2_1000560c = icmp slt i32 %v0_1000560c, 65535
  %v4_1000560c = icmp eq i32 %v0_1000560c, 65535
  store i1 %v2_1000560c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v4_1000560c, i1* %cr4_eq.global-to-local, align 1
  %v0_10005610 = call i32 @__asm_mfcr()
  store i32 %v0_10005610, i32* %r3.global-to-local, align 4
  %v1_10005614 = mul i32 %v0_10005610, 268435456
  store i32 %v1_10005614, i32* @r24, align 4
  %v0_10005618 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005618 = add i32 %v0_10005618, 47
  store i32 %v1_10005618, i32* @r25, align 4
  %v1_1000561c = add i32 %v0_10005618, 27
  store i32 %v1_1000561c, i32* @r27, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_1000562c

dec_label_pc_1000562c:                            ; preds = %dec_label_pc_10005658, %dec_label_pc_100055f0
  %v0_1000562c = phi i32 [ %v1_100056cc, %dec_label_pc_10005658 ], [ 0, %dec_label_pc_100055f0 ]
  %v1_1000562c = mul i32 %v0_1000562c, 4
  store i32 %v1_1000562c, i32* %r0.global-to-local, align 4
  %v0_10005630 = load i32, i32* %r20.global-to-local, align 4
  %v2_10005630 = add i32 %v0_10005630, %v1_1000562c
  %v3_10005630 = inttoptr i32 %v2_10005630 to i32*
  %v4_10005630 = load i32, i32* %v3_10005630, align 4
  store i32 %v4_10005630, i32* @r29, align 4
  %v1_10005634 = add i32 %v4_10005630, 20
  store i32 %v1_10005634, i32* @r28, align 4
  %v1_10005638 = add i32 %v4_10005630, 41
  store i32 %v1_10005638, i32* @r31, align 4
  %v0_1000563c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000563c, label %dec_label_pc_10005750, label %dec_label_pc_10005640

dec_label_pc_10005640:                            ; preds = %dec_label_pc_1000562c
  %v0_10005640 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005640, label %dec_label_pc_1000575c, label %dec_label_pc_10005644

dec_label_pc_10005644:                            ; preds = %dec_label_pc_10005750, %dec_label_pc_10005640
  %v0_10005644 = load i32, i32* @r24, align 4
  %v1_10005644 = mul i32 %v0_10005644, 16
  %v2_10005644 = udiv i32 %v0_10005644, 268435456
  %v3_10005644 = or i32 %v2_10005644, %v1_10005644
  store i32 %v3_10005644, i32* %r24.global-to-local, align 4
  %v1_10005648 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10005644)
  %v1_1000564c = mul nuw i32 %v2_10005644, 268435456
  %v2_1000564c = urem i32 %v0_10005644, 268435456
  %v3_1000564c = or i32 %v1_1000564c, %v2_1000564c
  store i32 %v3_1000564c, i32* @r24, align 4
  %v0_10005650 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005650, label %dec_label_pc_10005774, label %dec_label_pc_10005654

dec_label_pc_10005654:                            ; preds = %dec_label_pc_1000575c, %dec_label_pc_10005644
  %v0_10005654 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10005654, label %dec_label_pc_10005780, label %dec_label_pc_10005658

dec_label_pc_10005658:                            ; preds = %dec_label_pc_10005774, %dec_label_pc_10005654, %dec_label_pc_10005780
  %v0_10005658 = load i32, i32* @r31, align 4
  store i32 %v0_10005658, i32* @r3, align 4
  %v0_1000565c = load i32, i32* @r30, align 4
  store i32 %v0_1000565c, i32* @r4, align 4
  store i32 268457572, i32* @lr, align 4
  %v0_10005660 = call i32 @function_10006e80()
  %v0_10005664 = load i32, i32* %r22.global-to-local, align 4
  %v1_10005664 = load i32, i32* @r31, align 4
  %v2_10005664 = load i32, i32* @r30, align 4
  %v3_10005664 = trunc i32 %v0_10005664 to i8
  %v4_10005664 = add i32 %v2_10005664, %v1_10005664
  %v5_10005664 = inttoptr i32 %v4_10005664 to i8*
  store i8 %v3_10005664, i8* %v5_10005664, align 1
  %v0_10005668 = load i32, i32* @r26, align 4
  %v1_10005668 = trunc i32 %v0_10005668 to i16
  %v2_10005668 = load i32, i32* @r29, align 4
  %v3_10005668 = add i32 %v2_10005668, 10
  %v4_10005668 = inttoptr i32 %v3_10005668 to i16*
  store i16 %v1_10005668, i16* %v4_10005668, align 2
  %v0_10005670 = load i32, i32* @r29, align 4
  store i32 %v0_10005670, i32* @r3, align 4
  %v2_10005674 = call i32 @function_10005814(i32 %v0_10005670, i32 20)
  %v3_10005674 = trunc i32 %v2_10005674 to i16
  %v0_10005678 = load i32, i32* @r28, align 4
  store i32 %v0_10005678, i32* @r4, align 4
  %v3_1000567c = load i32, i32* @r29, align 4
  %v4_1000567c = add i32 %v3_1000567c, 10
  %v5_1000567c = inttoptr i32 %v4_1000567c to i16*
  store i16 %v3_10005674, i16* %v5_1000567c, align 2
  %v0_10005680 = load i32, i32* @r27, align 4
  %v0_10005684 = load i32, i32* @r26, align 4
  %v1_10005684 = trunc i32 %v0_10005684 to i16
  %v2_10005684 = load i32, i32* @r28, align 4
  %v3_10005684 = add i32 %v2_10005684, 6
  %v4_10005684 = inttoptr i32 %v3_10005684 to i16*
  store i16 %v1_10005684, i16* %v4_10005684, align 2
  %v0_10005688 = load i32, i32* @r29, align 4
  store i32 %v0_10005688, i32* %r3.global-to-local, align 4
  %v0_1000568c = load i32, i32* @r28, align 4
  %v1_1000568c = add i32 %v0_1000568c, 4
  %v2_1000568c = inttoptr i32 %v1_1000568c to i16*
  %v3_1000568c = load i16, i16* %v2_1000568c, align 2
  %v4_1000568c = zext i16 %v3_1000568c to i32
  %v4_10005690 = call i32 @function_10005878(i32 %v0_10005688, i32 %v0_10005678, i32 %v4_1000568c, i32 %v0_10005680)
  %v5_10005690 = trunc i32 %v4_10005690 to i16
  store i32 %v4_10005690, i32* %r3.global-to-local, align 4
  %v3_10005694 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10005694, i32* %r7.global-to-local, align 4
  %v0_10005698 = load i32, i32* @r28, align 4
  %v1_10005698 = add i32 %v0_10005698, 2
  %v2_10005698 = inttoptr i32 %v1_10005698 to i16*
  %v3_10005698 = load i16, i16* %v2_10005698, align 2
  %v4_10005698 = zext i16 %v3_10005698 to i32
  store i32 %v4_10005698, i32* %r0.global-to-local, align 4
  %v0_1000569c = load i32, i32* @r29, align 4
  %v1_100056a0 = mul i32 %v3_10005694, 24
  store i32 %v1_100056a0, i32* %r7.global-to-local, align 4
  %v4_100056a4 = add i32 %v0_10005698, 6
  %v5_100056a4 = inttoptr i32 %v4_100056a4 to i16*
  store i16 %v5_10005690, i16* %v5_100056a4, align 2
  %v0_100056a8 = load i32, i32* @r25, align 4
  %v0_100056ac = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100056ac, i32* %r3.global-to-local, align 4
  %v0_100056b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100056b0 = load i32, i32* %r17.global-to-local, align 4
  %v2_100056b0 = add i32 %v1_100056b0, %v0_100056b0
  store i32 %v2_100056b0, i32* %r7.global-to-local, align 4
  %v0_100056b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100056b8 = trunc i32 %v0_100056b8 to i16
  %v3_100056b8 = add i32 %v2_100056b0, 2
  %v4_100056b8 = inttoptr i32 %v3_100056b8 to i16*
  store i16 %v1_100056b8, i16* %v4_100056b8, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100056c0 = load i32, i32* @r21, align 4
  %v2_100056c0 = add i32 %v2_100056b0, 4
  %v3_100056c0 = inttoptr i32 %v2_100056c0 to i32*
  store i32 %v0_100056c0, i32* %v3_100056c0, align 4
  store i32 268457672, i32* @lr, align 4
  %v6_100056c4 = call i32 @function_1000aa74(i32 %v0_100056ac, i32 %v0_1000569c, i32 %v0_100056a8, i32 16384, i32 %v2_100056b0, i32 16)
  store i32 %v6_100056c4, i32* %r3.global-to-local, align 4
  %v3_100056c8 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100056c8, i32* %r9.global-to-local, align 4
  %v1_100056cc = add i32 %v3_100056c8, 1
  store i32 %v1_100056cc, i32* %r0.global-to-local, align 4
  %v1_100056d0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100056d0 = icmp slt i32 %v1_100056cc, %v1_100056d0
  %v4_100056d0 = icmp eq i32 %v1_100056cc, %v1_100056d0
  store i1 %v2_100056d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100056d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100056cc, i32* %stack_var_-2200, align 4
  br i1 %v2_100056d0, label %dec_label_pc_1000562c, label %dec_label_pc_100056dc

dec_label_pc_100056dc:                            ; preds = %dec_label_pc_10005658, %dec_label_pc_100055d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268457700, i32* @lr, align 4
  %v0_100056e0 = call i32 @function_1000a1b8()
  store i32 %v0_100056e0, i32* %r3.global-to-local, align 4
  store i32 %v2_100053e8, i32* %r0.global-to-local, align 4
  %v2_100056e8 = icmp slt i32 %v2_100053e8, %v0_100056e0
  %v4_100056e8 = icmp eq i32 %v2_100053e8, %v0_100056e0
  store i1 %v2_100056e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100056e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100056e8, label %dec_label_pc_100056f0, label %dec_label_pc_100055d4

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056dc, %dec_label_pc_100053f4, %dec_label_pc_100053dc, %dec_label_pc_10005808
  store i32 %v0_1000514c, i32* %r0.global-to-local, align 4
  %v1_10005704 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10005138)
  store i32 %v0_10005180, i32* %r24.global-to-local, align 4
  store i32 %v0_10005184, i32* %r25.global-to-local, align 4
  store i32 %v0_10005144, i32* %r26.global-to-local, align 4
  store i32 %v0_100051a8, i32* %r27.global-to-local, align 4
  store i32 %v0_10005190, i32* %r29.global-to-local, align 4
  store i32 %v0_100051ac, i32* %r30.global-to-local, align 4
  store i32 %v0_10005198, i32* %r31.global-to-local, align 4
  %v0_1000574c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000574c

dec_label_pc_10005750:                            ; preds = %dec_label_pc_1000562c
  %v0_10005750 = call i32 @function_10006dc0()
  %v1_10005750 = trunc i32 %v0_10005750 to i16
  store i32 %v0_10005750, i32* %r3.global-to-local, align 4
  %v3_10005754 = load i32, i32* @r29, align 4
  %v4_10005754 = add i32 %v3_10005754, 4
  %v5_10005754 = inttoptr i32 %v4_10005754 to i16*
  store i16 %v1_10005750, i16* %v5_10005754, align 2
  %v0_10005758 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005758, label %dec_label_pc_1000575c, label %dec_label_pc_10005644

dec_label_pc_1000575c:                            ; preds = %dec_label_pc_10005750, %dec_label_pc_10005640
  %v0_1000575c = call i32 @function_10006dc0()
  %v1_1000575c = trunc i32 %v0_1000575c to i16
  store i32 %v0_1000575c, i32* %r3.global-to-local, align 4
  %v0_10005760 = load i32, i32* @r24, align 4
  %v1_10005760 = mul i32 %v0_10005760, 16
  %v2_10005760 = udiv i32 %v0_10005760, 268435456
  %v3_10005760 = or i32 %v2_10005760, %v1_10005760
  store i32 %v3_10005760, i32* %r24.global-to-local, align 4
  %v1_10005764 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10005760)
  %v1_10005768 = mul nuw i32 %v2_10005760, 268435456
  %v2_10005768 = urem i32 %v0_10005760, 268435456
  %v3_10005768 = or i32 %v1_10005768, %v2_10005768
  store i32 %v3_10005768, i32* @r24, align 4
  %v3_1000576c = load i32, i32* @r29, align 4
  %v4_1000576c = add i32 %v3_1000576c, 20
  %v5_1000576c = inttoptr i32 %v4_1000576c to i16*
  store i16 %v1_1000575c, i16* %v5_1000576c, align 2
  %v0_10005770 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005770, label %dec_label_pc_10005774, label %dec_label_pc_10005654

dec_label_pc_10005774:                            ; preds = %dec_label_pc_1000575c, %dec_label_pc_10005644
  %v0_10005774 = call i32 @function_10006dc0()
  %v1_10005774 = trunc i32 %v0_10005774 to i16
  store i32 %v0_10005774, i32* %r3.global-to-local, align 4
  %v3_10005778 = load i32, i32* @r28, align 4
  %v4_10005778 = add i32 %v3_10005778, 2
  %v5_10005778 = inttoptr i32 %v4_10005778 to i16*
  store i16 %v1_10005774, i16* %v5_10005778, align 2
  %v0_1000577c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000577c, label %dec_label_pc_10005780, label %dec_label_pc_10005658

dec_label_pc_10005780:                            ; preds = %dec_label_pc_10005774, %dec_label_pc_10005654
  %v0_10005780 = call i32 @function_10006dc0()
  %v1_10005780 = trunc i32 %v0_10005780 to i16
  store i32 %v0_10005780, i32* %r3.global-to-local, align 4
  %v3_10005784 = load i32, i32* @r29, align 4
  %v4_10005784 = add i32 %v3_10005784, 28
  %v5_10005784 = inttoptr i32 %v4_10005784 to i16*
  store i16 %v1_10005780, i16* %v5_10005784, align 2
  br label %dec_label_pc_10005658

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005380
  %v2_1000578c = sub i32 %v0_10005398, %v0_10005328
  store i32 %v2_1000578c, i32* %r29.global-to-local, align 4
  store i32 %v2_10005350, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100057a0.75 to i32), i32* @lr, align 4
  %v3_1000579c = call i32 @function_10009628(i32 %v2_10005350, i32 %v2_10005348, i32 %v2_1000578c)
  %v2_100057a0 = ptrtoint i32* %stack_var_-2200 to i32
  %v2_100057a4 = add i32 %v2_1000578c, %v2_100057a0
  store i32 %v2_100057a4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100057ac = add i32 %v2_100057a4, 4
  %v4_100057ac = inttoptr i32 %v3_100057ac to i8*
  store i8 0, i8* %v4_100057ac, align 1
  store i32 %v2_10005350, i32* %r3.global-to-local, align 4
  store i32 268457912, i32* @lr, align 4
  %v1_100057b4 = call i32 @function_1000a854(i32 %v2_10005350)
  store i32 %v1_100057b4, i32* %r3.global-to-local, align 4
  store i32 %v1_100057b4, i32* @r21, align 4
  br label %dec_label_pc_100053dc

dec_label_pc_100057c0:                            ; preds = %dec_label_pc_1000550c
  %v0_100057c0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100057c0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_100057c8 = inttoptr i32 %v0_100057c0 to i8*
  store i8 0, i8* %v3_100057c8, align 1
  %v0_100057cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100057cc = load i32, i32* %r18.global-to-local, align 4
  %v2_100057cc = add i32 %v1_100057cc, %v0_100057cc
  store i32 %v2_100057cc, i32* %r9.global-to-local, align 4
  %v0_100057d0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100057d0 = trunc i32 %v0_100057d0 to i16
  %v3_100057d0 = add i32 %v2_100057cc, 4
  %v4_100057d0 = inttoptr i32 %v3_100057d0 to i16*
  store i16 %v1_100057d0, i16* %v4_100057d0, align 2
  %v3_100057d4 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100057d4, i32* %r11.global-to-local, align 4
  %v0_100057d8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100057d8 = trunc i32 %v0_100057d8 to i16
  %v2_100057d8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100057d8 = add i32 %v2_100057d8, 2
  %v4_100057d8 = inttoptr i32 %v3_100057d8 to i16*
  store i16 %v1_100057d8, i16* %v4_100057d8, align 2
  %v0_100057dc = load i32, i32* %r11.global-to-local, align 4
  %v1_100057dc = add i32 %v0_100057dc, 1
  %v1_100057e0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100057e0 = icmp slt i32 %v1_100057dc, %v1_100057e0
  %v4_100057e0 = icmp eq i32 %v1_100057dc, %v1_100057e0
  store i1 %v2_100057e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100057e0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100057dc, i32* %stack_var_-2200, align 4
  br i1 %v2_100057e0, label %dec_label_pc_100054a4, label %dec_label_pc_100055d4.preheader

dec_label_pc_100057f0:                            ; preds = %dec_label_pc_100053b0
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_100053dc

dec_label_pc_100057fc:                            ; preds = %dec_label_pc_100053b8
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_100053dc

dec_label_pc_10005808:                            ; preds = %dec_label_pc_1000541c
  %v0_10005808 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10005808, i32* %r3.global-to-local, align 4
  store i32 268458000, i32* @lr, align 4
  %v0_1000580c = call i32 @function_10009de8()
  store i32 %v0_1000580c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100056f0

; uselistorder directives
  uselistorder i32 %v1_100057dc, { 0, 2, 1 }
  uselistorder i32 %v0_10005780, { 1, 0 }
  uselistorder i32 %v0_10005774, { 1, 0 }
  uselistorder i32 %v0_10005760, { 2, 1, 0 }
  uselistorder i32 %v0_1000575c, { 1, 0 }
  uselistorder i32 %v0_10005750, { 1, 0 }
  uselistorder i32 %v0_100056e0, { 1, 0, 2 }
  uselistorder i32 %v1_100056cc, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10005690, { 1, 0 }
  uselistorder i32 %v0_10005644, { 2, 1, 0 }
  uselistorder i32 %v1_1000562c, { 1, 0 }
  uselistorder i32 %v2_100055e0, { 2, 1, 0 }
  uselistorder i32 %v1_100055c4, { 0, 2, 1 }
  uselistorder i32 %v1_100055ac, { 2, 1, 0 }
  uselistorder i32 %v1_100055a8, { 1, 0 }
  uselistorder i32 %v0_100055a0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000559c, { 1, 0 }
  uselistorder i32 %v1_1000558c, { 1, 2, 0 }
  uselistorder i32 %v1_10005584, { 0, 2, 1 }
  uselistorder i32 %v1_10005578, { 1, 0 }
  uselistorder i32 %v1_100054bc, { 1, 0 }
  uselistorder i32 %v1_100054b4, { 1, 0 }
  uselistorder i32 %v2_10005474, { 1, 2, 0 }
  uselistorder i32 %v1_10005474, { 1, 3, 2, 0 }
  uselistorder i32 %v0_10005444, { 1, 0 }
  uselistorder i32 %v5_10005434, { 1, 0, 2 }
  uselistorder i32 %v3_1000540c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100053e8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_100053e4, { 1, 0, 2, 3 }
  uselistorder i1 %v2_100053b8, { 1, 0 }
  uselistorder i1 %v1_100053a8, { 1, 0, 2 }
  uselistorder i32 %v1_100053a4, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_1000539c, { 2, 1, 0 }
  uselistorder i32 %v1_10005398, { 1, 0 }
  uselistorder i32 %v1_10005384, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10005360, { 1, 0 }
  uselistorder i32 %v0_10005354, { 2, 1, 0 }
  uselistorder i32 %v2_10005350, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10005330, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10005328, { 1, 2, 0, 3, 4, 7, 6, 5, 8, 9 }
  uselistorder i32 %v0_100052d0, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10005210, { 1, 0 }
  uselistorder i32* %stack_var_-2200, { 0, 1, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 29, 12, 13, 14, 15, 16, 17, 1, 18, 20, 19, 21, 22, 23, 24, 25, 0, 26, 27, 28, 31, 30, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 2 }
  uselistorder i32* %r29.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r27.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 15, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 3, 1, 2, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 (i32)* @function_1000a854, { 1, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i32 47, { 5, 0, 6, 7, 8, 2, 9, 3, 10, 1, 11, 12, 4, 13 }
  uselistorder i32 38, { 0, 3, 1, 4, 2, 5, 6, 7, 8, 9 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 53, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_10001e18, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90, 91 }
  uselistorder label %dec_label_pc_100056f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005658, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100055d4, { 1, 0 }
  uselistorder label %dec_label_pc_100055d4.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100055b0, { 1, 0 }
  uselistorder label %dec_label_pc_10005588, { 1, 0 }
  uselistorder label %dec_label_pc_1000550c, { 1, 0 }
  uselistorder label %dec_label_pc_100053dc, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10005380, { 1, 0 }
}

define i32 @function_10005814(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005814:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10005848, label %dec_label_pc_10005820

dec_label_pc_10005820:                            ; preds = %dec_label_pc_10005814
  %v1_10005820 = add i32 %arg1, -2
  %v1_10005824 = udiv i32 %v1_10005820, 2
  %v1_10005828 = add nuw i32 %v1_10005824, 1
  %v0_10005834.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005834

dec_label_pc_10005834:                            ; preds = %dec_label_pc_10005834, %dec_label_pc_10005820
  %v0_10005844 = phi i32 [ %v1_10005844, %dec_label_pc_10005834 ], [ %v1_10005828, %dec_label_pc_10005820 ]
  %v0_10005840 = phi i32 [ %v2_10005840, %dec_label_pc_10005834 ], [ 0, %dec_label_pc_10005820 ]
  %v0_1000583c = phi i32 [ %v1_1000583c, %dec_label_pc_10005834 ], [ %v0_10005834.pre, %dec_label_pc_10005820 ]
  %v1_10005834 = inttoptr i32 %v0_1000583c to i16*
  %v2_10005834 = load i16, i16* %v1_10005834, align 2
  %v3_10005834 = zext i16 %v2_10005834 to i32
  %v1_1000583c = add i32 %v0_1000583c, 2
  store i32 %v1_1000583c, i32* @r3, align 4
  %v2_10005840 = add i32 %v3_10005834, %v0_10005840
  %v1_10005844 = add i32 %v0_10005844, -1
  %v2_10005844 = icmp eq i32 %v1_10005844, 0
  br i1 %v2_10005844, label %dec_label_pc_10005848.loopexit, label %dec_label_pc_10005834

dec_label_pc_10005848.loopexit:                   ; preds = %dec_label_pc_10005834
  %tmp11 = mul i32 %v1_10005824, -2
  %tmp10 = add i32 %v1_10005820, %tmp11
  br label %dec_label_pc_10005848

dec_label_pc_10005848:                            ; preds = %dec_label_pc_10005848.loopexit, %dec_label_pc_10005814
  %v0_10005854 = phi i32 [ 0, %dec_label_pc_10005814 ], [ %v2_10005840, %dec_label_pc_10005848.loopexit ]
  %v0_10005848 = phi i32 [ %arg1, %dec_label_pc_10005814 ], [ %tmp10, %dec_label_pc_10005848.loopexit ]
  %v3_10005848 = icmp eq i32 %v0_10005848, 1
  br i1 %v3_10005848, label %dec_label_pc_10005850, label %dec_label_pc_10005858

dec_label_pc_10005850:                            ; preds = %dec_label_pc_10005848
  %v0_10005850 = load i32, i32* @r3, align 4
  %v1_10005850 = add i32 %v0_10005850, 1
  %v2_10005850 = inttoptr i32 %v1_10005850 to i8*
  %v3_10005850 = load i8, i8* %v2_10005850, align 1
  %v4_10005850 = zext i8 %v3_10005850 to i32
  %v2_10005854 = add i32 %v4_10005850, %v0_10005854
  br label %dec_label_pc_10005858

dec_label_pc_10005858:                            ; preds = %dec_label_pc_10005848, %dec_label_pc_10005850
  %v0_10005858 = phi i32 [ %v0_10005854, %dec_label_pc_10005848 ], [ %v2_10005854, %dec_label_pc_10005850 ]
  %v1_10005858 = urem i32 %v0_10005858, 65536
  %v1_1000585c = udiv i32 %v0_10005858, 65536
  %v2_10005860 = add nuw nsw i32 %v1_10005858, %v1_1000585c
  %v1_10005864 = udiv i32 %v2_10005860, 65536
  %v2_10005868 = add nuw nsw i32 %v1_10005864, %v2_10005860
  %v1_1000586c = urem i32 %v2_10005868, 65536
  %v1_10005870 = xor i32 %v1_1000586c, 65535
  ret i32 %v1_10005870

; uselistorder directives
  uselistorder i32 %v2_10005860, { 1, 0 }
  uselistorder i32 %v0_10005854, { 1, 0 }
  uselistorder i32 %v1_10005844, { 1, 0 }
  uselistorder i32 %v1_1000583c, { 1, 0 }
  uselistorder label %dec_label_pc_10005858, { 1, 0 }
}

define i32 @function_10005878(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10005878:
  %r0.global-to-local = alloca i32, align 4
  %v1_1000587c = add i32 %arg1, 12
  %v2_1000587c = inttoptr i32 %v1_1000587c to i32*
  %v3_1000587c = load i32, i32* %v2_1000587c, align 4
  %v1_10005880 = add i32 %arg1, 16
  %v2_10005880 = inttoptr i32 %v1_10005880 to i32*
  %v3_10005880 = load i32, i32* %v2_10005880, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_100058bc, label %dec_label_pc_10005888

dec_label_pc_10005888:                            ; preds = %dec_label_pc_10005878
  %v1_10005888 = add i32 %arg3, -2
  %v1_10005890 = icmp slt i32 %v1_10005888, 0
  %v1_10005894 = udiv i32 %v1_10005888, 2
  %v1_10005898 = add nuw i32 %v1_10005894, 1
  br i1 %v1_10005890, label %dec_label_pc_10005924, label %dec_label_pc_100058a4.preheader

dec_label_pc_100058a4.preheader:                  ; preds = %dec_label_pc_10005924, %dec_label_pc_10005888
  %v0_100058b84 = phi i32 [ 1, %dec_label_pc_10005924 ], [ %v1_10005898, %dec_label_pc_10005888 ]
  %v0_100058a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100058a4

dec_label_pc_100058a4:                            ; preds = %dec_label_pc_100058a4.preheader, %dec_label_pc_100058a4
  %v0_100058b8 = phi i32 [ %v0_100058b84, %dec_label_pc_100058a4.preheader ], [ %v1_100058b8, %dec_label_pc_100058a4 ]
  %v0_100058b4 = phi i32 [ 0, %dec_label_pc_100058a4.preheader ], [ %v2_100058b4, %dec_label_pc_100058a4 ]
  %v0_100058ac = phi i32 [ %v0_100058a4.pre, %dec_label_pc_100058a4.preheader ], [ %v1_100058ac, %dec_label_pc_100058a4 ]
  %v1_100058a4 = inttoptr i32 %v0_100058ac to i16*
  %v2_100058a4 = load i16, i16* %v1_100058a4, align 2
  %v3_100058a4 = zext i16 %v2_100058a4 to i32
  store i32 %v3_100058a4, i32* %r0.global-to-local, align 4
  %v1_100058ac = add i32 %v0_100058ac, 2
  %v2_100058b4 = add i32 %v3_100058a4, %v0_100058b4
  %v1_100058b8 = add i32 %v0_100058b8, -1
  %v2_100058b8 = icmp eq i32 %v1_100058b8, 0
  br i1 %v2_100058b8, label %dec_label_pc_100058bc.loopexit, label %dec_label_pc_100058a4

dec_label_pc_100058bc.loopexit:                   ; preds = %dec_label_pc_100058a4
  %tmp14 = mul i32 %v0_100058b84, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_100058b0 = icmp eq i32 %tmp13, 1
  br i1 %v3_100058b0, label %dec_label_pc_10005910, label %dec_label_pc_100058c0

dec_label_pc_100058bc:                            ; preds = %dec_label_pc_10005878
  %v3_10005878 = icmp eq i32 %arg3, 1
  br i1 %v3_10005878, label %dec_label_pc_100058bc.dec_label_pc_10005910_crit_edge, label %dec_label_pc_100058c0

dec_label_pc_100058bc.dec_label_pc_10005910_crit_edge: ; preds = %dec_label_pc_100058bc
  %v0_10005910.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005910

dec_label_pc_100058c0:                            ; preds = %dec_label_pc_100058bc.loopexit, %dec_label_pc_100058bc, %dec_label_pc_10005910
  %v0_100058d8 = phi i32 [ 0, %dec_label_pc_100058bc ], [ %v2_10005914, %dec_label_pc_10005910 ], [ %v2_100058b4, %dec_label_pc_100058bc.loopexit ]
  %v1_100058c0 = urem i32 %v3_1000587c, 65536
  %v1_100058c4 = udiv i32 %v3_1000587c, 65536
  %v2_100058c8 = add nuw nsw i32 %v1_100058c0, %v1_100058c4
  store i32 %v2_100058c8, i32* %r0.global-to-local, align 4
  %v1_100058cc = urem i32 %v3_10005880, 65536
  %v1_100058d0 = add i32 %arg1, 9
  %v2_100058d0 = inttoptr i32 %v1_100058d0 to i8*
  %v3_100058d0 = load i8, i8* %v2_100058d0, align 1
  %v4_100058d0 = zext i8 %v3_100058d0 to i32
  %v1_100058d4 = udiv i32 %v3_10005880, 65536
  %v2_100058d8 = add i32 %v0_100058d8, %v1_100058d4
  %v2_100058e0 = add i32 %v2_100058d8, %v4_100058d0
  %v2_100058dc = add i32 %v2_100058c8, %arg2
  %v2_100058e4 = add i32 %v2_100058dc, %v1_100058cc
  %v2_100058e8 = add i32 %v2_100058e4, %v2_100058e0
  store i32 %v2_100058e8, i32* %r0.global-to-local, align 4
  %v1_100058ec = call i32 @__asm_rlwinm.(i32 %v2_100058e8, i32 16, i32 16, i32 31)
  %v4_100058ec = icmp eq i32 %v1_100058ec, 0
  br i1 %v4_100058ec, label %dec_label_pc_10005904, label %dec_label_pc_100058f4

dec_label_pc_100058f4:                            ; preds = %dec_label_pc_100058c0, %dec_label_pc_100058f4
  %v1_100058f8 = phi i32 [ %v1_100058fc, %dec_label_pc_100058f4 ], [ %v1_100058ec, %dec_label_pc_100058c0 ]
  %v0_100058f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100058f4 = urem i32 %v0_100058f4, 65536
  %v2_100058f8 = add i32 %v1_100058f4, %v1_100058f8
  store i32 %v2_100058f8, i32* %r0.global-to-local, align 4
  %v1_100058fc = call i32 @__asm_rlwinm.(i32 %v2_100058f8, i32 16, i32 16, i32 31)
  %v4_100058fc = icmp eq i32 %v1_100058fc, 0
  br i1 %v4_100058fc, label %dec_label_pc_10005904, label %dec_label_pc_100058f4

dec_label_pc_10005904:                            ; preds = %dec_label_pc_100058f4, %dec_label_pc_100058c0
  %v0_10005904 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005904 = urem i32 %v0_10005904, 65536
  %v1_10005908 = xor i32 %v1_10005904, 65535
  ret i32 %v1_10005908

dec_label_pc_10005910:                            ; preds = %dec_label_pc_100058bc.dec_label_pc_10005910_crit_edge, %dec_label_pc_100058bc.loopexit
  %v0_10005910 = phi i32 [ %v1_100058ac, %dec_label_pc_100058bc.loopexit ], [ %v0_10005910.pre, %dec_label_pc_100058bc.dec_label_pc_10005910_crit_edge ]
  %v0_1000591410 = phi i32 [ %v2_100058b4, %dec_label_pc_100058bc.loopexit ], [ 0, %dec_label_pc_100058bc.dec_label_pc_10005910_crit_edge ]
  %v1_10005910 = inttoptr i32 %v0_10005910 to i8*
  %v2_10005910 = load i8, i8* %v1_10005910, align 1
  %v3_10005910 = zext i8 %v2_10005910 to i32
  store i32 %v3_10005910, i32* %r0.global-to-local, align 4
  %v2_10005914 = add i32 %v3_10005910, %v0_1000591410
  br label %dec_label_pc_100058c0

dec_label_pc_10005924:                            ; preds = %dec_label_pc_10005888
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100058a4.preheader

; uselistorder directives
  uselistorder i32 %v1_100058fc, { 1, 0 }
  uselistorder i32 %v1_100058b8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 65535, { 41, 42, 4, 3, 5, 44, 43, 45, 14, 15, 16, 46, 6, 7, 17, 47, 18, 48, 0, 8, 49, 50, 19, 20, 21, 53, 54, 51, 52, 55, 56, 22, 23, 69, 9, 57, 58, 24, 25, 26, 27, 1, 10, 59, 60, 28, 29, 30, 31, 32, 61, 33, 34, 70, 11, 63, 62, 64, 35, 36, 37, 2, 12, 66, 65, 67, 38, 39, 40, 13, 68 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100058f4, { 1, 0 }
  uselistorder label %dec_label_pc_100058c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100058a4, { 1, 0 }
}

define i32 @function_10005930(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005930:
  %v3_10005944 = load i32, i32* @global_var_1001d23c.76, align 4
  store i32 268458316, i32* @lr, align 4
  %v2_10005948 = call i32 @function_10009f08(i32 %v3_10005944, i32 9)
  ret i32 %v2_10005948
}

define i32 @function_1000595c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000595c:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_1000596c = load i32, i32* @r27, align 4
  %v2_10005970 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10005970, i32* @r27, align 4
  %v2_10005978 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_1000597c = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_1000598c = load i32, i32* @r25, align 4
  %v2_10005990 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10005994 = load i32, i32* @r30, align 4
  %v2_10005998 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10005998, i32* @r30, align 4
  %v0_1000599c = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_100059a4 = load i32, i32* @r23, align 4
  %v0_100059ac = load i32, i32* @r28, align 4
  store i32 268458420, i32* @lr, align 4
  %v3_100059b0 = call i32 @function_1000a5a4(i32 %v2_10005970, i32 0, i32 4096)
  store i32 268458436, i32* @lr, align 4
  %v3_100059c0 = call i32 @function_1000a5a4(i32 %v2_10005978, i32 0, i32 4096)
  store i32 268458452, i32* @lr, align 4
  %v3_100059d0 = call i32 @function_1000a5a4(i32 %v2_10005998, i32 0, i32 513)
  %v0_100059dc = load i32, i32* @r29, align 4
  %v0_100059e0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100059e0, i32* %stack_var_-8792, align 4
  %v3_100059f0 = trunc i32 %v0_100059dc to i8
  %v4_100059f0 = call i32 @function_10009b04(i8 %v3_100059f0, i32 16, i32 %v2_10005990)
  store i32 268458492, i32* @lr, align 4
  %v2_100059f8 = call i32 @function_100095a4(i8* nonnull %stack_var_-8776)
  %v3_100059fc = icmp eq i32 %v2_100059f8, 2
  br i1 %v3_100059fc, label %dec_label_pc_10005f48, label %dec_label_pc_10005a04

dec_label_pc_10005a04:                            ; preds = %dec_label_pc_1000595c, %dec_label_pc_10005f48
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005a10.77 to i32), i32* @lr, align 4
  %v1_10005a0c = call i32 @function_10008b98(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005a18.78 to i32), i32* @lr, align 4
  %v1_10005a14 = call i32 @function_10008b98(i32 7)
  store i32 ptrtoint ([3 x i8]* @global_var_10005a20.79 to i32), i32* @lr, align 4
  %v1_10005a1c = call i32 @function_10008b98(i32 8)
  store i32 268458536, i32* @lr, align 4
  %v1_10005a24 = call i32 @function_10008b98(i32 9)
  %v3_10005a30 = call i32 @function_10008ae4(i32 9, i32* null)
  store i32 268458560, i32* @lr, align 4
  %v2_10005a3c = call i32 @function_10009f50(i32 %v3_10005a30, i32 0)
  %v3_10005a40 = icmp eq i32 %v2_10005a3c, -1
  store i32 %v2_10005a3c, i32* @r28, align 4
  br i1 %v3_10005a40, label %dec_label_pc_10005e94, label %dec_label_pc_10005a4c

dec_label_pc_10005a4c:                            ; preds = %dec_label_pc_10005a04
  %v2_10005a4c = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10005a4c, i32* %r26.global-to-local, align 4
  store i32 268458592, i32* @lr, align 4
  %v4_10005a5c88 = call i32 @function_10009804(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_10005a3c)
  %v3_10005a6091 = icmp eq i32 %v4_10005a5c88, 0
  br i1 %v3_10005a6091, label %dec_label_pc_10005c0c.loopexit, label %dec_label_pc_10005a68

dec_label_pc_10005a68:                            ; preds = %dec_label_pc_10005a4c, %dec_label_pc_10005a50.backedge
  %v3_10005a68 = load i8, i8* %stack_var_-8760, align 1
  %v3_10005a6c = icmp eq i8 %v3_10005a68, 0
  br i1 %v3_10005a6c, label %dec_label_pc_10005a50.backedge, label %dec_label_pc_10005a74

dec_label_pc_10005a50.backedge:                   ; preds = %dec_label_pc_10005a88, %dec_label_pc_10005a68, %dec_label_pc_10005af8, %dec_label_pc_10005b90, %dec_label_pc_10005be0
  %v0_10005a58.pre = load i32, i32* @r28, align 4
  store i32 268458592, i32* @lr, align 4
  %v4_10005a5c = call i32 @function_10009804(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10005a58.pre)
  %v3_10005a60 = icmp eq i32 %v4_10005a5c, 0
  br i1 %v3_10005a60, label %dec_label_pc_10005c0c.loopexit, label %dec_label_pc_10005a68

dec_label_pc_10005a74:                            ; preds = %dec_label_pc_10005a68
  %v3_10005a74 = icmp eq i8 %v3_10005a68, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10005a74, label %dec_label_pc_10005aa8, label %dec_label_pc_10005a84

dec_label_pc_10005a84:                            ; preds = %dec_label_pc_10005a74
  %v1_10005a8c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005a88

dec_label_pc_10005a88:                            ; preds = %dec_label_pc_10005a9c, %dec_label_pc_10005a84
  %v0_10005a88 = phi i32 [ %v1_10005a88, %dec_label_pc_10005a9c ], [ 0, %dec_label_pc_10005a84 ]
  %v1_10005a88 = add i32 %v0_10005a88, 1
  %v2_10005a8c = add i32 %v1_10005a88, %v1_10005a8c.pre
  %v3_10005a8c = inttoptr i32 %v2_10005a8c to i8*
  %v4_10005a8c = load i8, i8* %v3_10005a8c, align 1
  %v3_10005a90 = icmp eq i8 %v4_10005a8c, 0
  br i1 %v3_10005a90, label %dec_label_pc_10005a50.backedge, label %dec_label_pc_10005a9c

dec_label_pc_10005a9c:                            ; preds = %dec_label_pc_10005a88
  %v3_10005a94 = icmp eq i8 %v4_10005a8c, 58
  br i1 %v3_10005a94, label %dec_label_pc_10005aa0, label %dec_label_pc_10005a88

dec_label_pc_10005aa0:                            ; preds = %dec_label_pc_10005a9c
  %v1_10005aa0 = add i32 %v0_10005a88, 4
  store i32 %v1_10005aa0, i32* @r31, align 4
  %v1_10005aa4 = add i32 %v0_10005a88, 3
  br label %dec_label_pc_10005aa8

dec_label_pc_10005aa8:                            ; preds = %dec_label_pc_10005a74, %dec_label_pc_10005aa0
  %v1_10005b00 = phi i32 [ 2, %dec_label_pc_10005a74 ], [ %v1_10005aa4, %dec_label_pc_10005aa0 ]
  %v0_10005aa8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005aa8 = add i32 %v0_10005aa8, %v1_10005b00
  %v1_10005ab0 = add i32 %v2_10005aa8, 32
  %v2_10005ab0 = inttoptr i32 %v1_10005ab0 to i8*
  %v3_10005ab0 = load i8, i8* %v2_10005ab0, align 1
  %v3_10005ab4 = icmp eq i8 %v3_10005ab0, 0
  br i1 %v3_10005ab4, label %dec_label_pc_10005af8, label %dec_label_pc_10005abc

dec_label_pc_10005abc:                            ; preds = %dec_label_pc_10005aa8
  %v3_10005abc = icmp eq i8 %v3_10005ab0, 32
  %v1_10005ac0 = add i32 %v1_10005b00, 1
  store i32 %v1_10005ac0, i32* @r31, align 4
  br i1 %v3_10005abc, label %dec_label_pc_10005af8, label %dec_label_pc_10005ac8

dec_label_pc_10005ac8:                            ; preds = %dec_label_pc_10005abc
  %v0_10005ad0 = load i32, i32* @r30, align 4
  %v2_10005ad0 = add i32 %v0_10005ad0, %v1_10005ac0
  br label %dec_label_pc_10005adc

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005adc, %dec_label_pc_10005ac8
  %v0_10005ae0 = phi i32 [ %v1_10005ae0, %dec_label_pc_10005adc ], [ %v1_10005b00, %dec_label_pc_10005ac8 ]
  %v0_10005ae4 = phi i32 [ %v1_10005ae4, %dec_label_pc_10005adc ], [ %v2_10005ad0, %dec_label_pc_10005ac8 ]
  %v1_10005adc = inttoptr i32 %v0_10005ae4 to i8*
  %v2_10005adc = load i8, i8* %v1_10005adc, align 1
  %v1_10005ae0 = add i32 %v0_10005ae0, 1
  %v1_10005ae4 = add i32 %v0_10005ae4, 1
  %tmp59 = or i8 %v2_10005adc, 32
  %tmp60 = icmp eq i8 %tmp59, 32
  br i1 %tmp60, label %dec_label_pc_10005af4, label %dec_label_pc_10005adc

dec_label_pc_10005af4:                            ; preds = %dec_label_pc_10005adc
  %v1_10005af4 = add i32 %v0_10005ae0, 2
  store i32 %v1_10005af4, i32* @r31, align 4
  br label %dec_label_pc_10005af8

dec_label_pc_10005af8:                            ; preds = %dec_label_pc_10005abc, %dec_label_pc_10005aa8, %dec_label_pc_10005af4
  %v1_10005af8 = phi i32 [ %v1_10005b00, %dec_label_pc_10005abc ], [ %v1_10005b00, %dec_label_pc_10005aa8 ], [ %v1_10005ae0, %dec_label_pc_10005af4 ]
  %v2_10005af8 = add i32 %v1_10005af8, %v0_10005aa8
  %v0_10005b00 = load i32, i32* @r30, align 4
  %v2_10005b00 = add i32 %v0_10005b00, %v1_10005b00
  store i32 %v2_10005b00, i32* @r29, align 4
  %v3_10005b04 = add i32 %v2_10005af8, 32
  %v4_10005b04 = inttoptr i32 %v3_10005b04 to i8*
  store i8 0, i8* %v4_10005b04, align 1
  %v0_10005b08 = load i32, i32* @r29, align 4
  store i32 268458768, i32* @lr, align 4
  %v1_10005b0c = inttoptr i32 %v0_10005b08 to i8*
  %v2_10005b0c = call i32 @function_100095a4(i8* %v1_10005b0c)
  %v0_10005b18 = load i32, i32* @r29, align 4
  %v3_10005b1c = inttoptr i32 %v0_10005b18 to i8*
  %v4_10005b1c = call i32 @function_10009954(i8* %v3_10005b1c, i32 %v2_10005b0c, i32 %v2_10005990)
  %v3_10005b24 = icmp eq i32 %v4_10005b1c, -1
  br i1 %v3_10005b24, label %dec_label_pc_10005a50.backedge, label %dec_label_pc_10005b30.preheader

dec_label_pc_10005b30.preheader:                  ; preds = %dec_label_pc_10005af8
  %v0_10005b30.pre = load i32, i32* @r31, align 4
  %v0_10005b38.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005b30.outer

dec_label_pc_10005b30.outer:                      ; preds = %dec_label_pc_10005ee4, %dec_label_pc_10005b30.preheader
  %v0_10005b4c27.ph = phi i32 [ %v1_10005ecc, %dec_label_pc_10005ee4 ], [ 0, %dec_label_pc_10005b30.preheader ]
  %v0_10005b30.ph = phi i32 [ %v1_10005be876, %dec_label_pc_10005ee4 ], [ %v0_10005b30.pre, %dec_label_pc_10005b30.preheader ]
  %v0_10005b90.ph = phi i32 [ 1, %dec_label_pc_10005ee4 ], [ 0, %dec_label_pc_10005b30.preheader ]
  br label %dec_label_pc_10005b30

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005b30.outer, %dec_label_pc_10005ed4
  %v0_10005b4c27 = phi i32 [ %v1_10005ecc, %dec_label_pc_10005ed4 ], [ %v0_10005b4c27.ph, %dec_label_pc_10005b30.outer ]
  %v0_10005b30 = phi i32 [ %v1_10005be876, %dec_label_pc_10005ed4 ], [ %v0_10005b30.ph, %dec_label_pc_10005b30.outer ]
  %v1_10005b30 = add i32 %v0_10005b30, 1
  %v2_10005b38 = add i32 %v1_10005b30, %v0_10005b38.pre
  %v1_10005b6467 = inttoptr i32 %v2_10005b38 to i8*
  %v2_10005b6468 = load i8, i8* %v1_10005b6467, align 1
  store i32 %v1_10005b30, i32* @r31, align 4
  %v3_10005b6c71 = icmp eq i8 %v2_10005b6468, 0
  br i1 %v3_10005b6c71, label %dec_label_pc_10005b90, label %dec_label_pc_10005b7c

dec_label_pc_10005b40:                            ; preds = %dec_label_pc_10005b7c
  %v3_10005b7079 = icmp eq i8 %v3_10005b7079.in, 9
  br i1 %v3_10005b7079, label %dec_label_pc_10005b80, label %dec_label_pc_10005b4c

dec_label_pc_10005b4c:                            ; preds = %dec_label_pc_10005b40
  %v3_10005b40 = icmp eq i32 %v0_10005b4075, 1
  br i1 %v3_10005b40, label %dec_label_pc_10005ecc, label %dec_label_pc_10005b54

dec_label_pc_10005b54:                            ; preds = %dec_label_pc_10005b4c, %dec_label_pc_10005ecc
  %v0_10005b54 = phi i32 [ %v1_10005ecc, %dec_label_pc_10005ecc ], [ %v0_10005b8074, %dec_label_pc_10005b4c ]
  %v2_10005b54 = icmp sgt i32 %v0_10005b54, 6
  br i1 %v2_10005b54, label %dec_label_pc_10005b90, label %dec_label_pc_10005b60

dec_label_pc_10005b60:                            ; preds = %dec_label_pc_10005b80, %dec_label_pc_10005b54
  %v0_10005b4c26 = phi i32 [ %v0_10005b8074, %dec_label_pc_10005b80 ], [ %v0_10005b54, %dec_label_pc_10005b54 ]
  %v0_10005b4024 = phi i32 [ 1, %dec_label_pc_10005b80 ], [ 0, %dec_label_pc_10005b54 ]
  %v0_10005b6421 = add i32 %v0_10005b8878, 1
  %v1_10005b60 = add i32 %v1_10005be876, 1
  %v1_10005b64 = inttoptr i32 %v0_10005b6421 to i8*
  %v2_10005b64 = load i8, i8* %v1_10005b64, align 1
  store i32 %v1_10005b60, i32* @r31, align 4
  %v3_10005b6c = icmp eq i8 %v2_10005b64, 0
  br i1 %v3_10005b6c, label %dec_label_pc_10005b90, label %dec_label_pc_10005b7c

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b30, %dec_label_pc_10005b60
  %v3_10005b7079.in = phi i8 [ %v2_10005b64, %dec_label_pc_10005b60 ], [ %v2_10005b6468, %dec_label_pc_10005b30 ]
  %v3_10005b7480.in = phi i8 [ %v2_10005b64, %dec_label_pc_10005b60 ], [ %v2_10005b6468, %dec_label_pc_10005b30 ]
  %v0_10005b8878 = phi i32 [ %v0_10005b6421, %dec_label_pc_10005b60 ], [ %v2_10005b38, %dec_label_pc_10005b30 ]
  %v1_10005be876 = phi i32 [ %v1_10005b60, %dec_label_pc_10005b60 ], [ %v1_10005b30, %dec_label_pc_10005b30 ]
  %v0_10005b4075 = phi i32 [ %v0_10005b4024, %dec_label_pc_10005b60 ], [ 0, %dec_label_pc_10005b30 ]
  %v0_10005b8074 = phi i32 [ %v0_10005b4c26, %dec_label_pc_10005b60 ], [ %v0_10005b4c27, %dec_label_pc_10005b30 ]
  %v3_10005b7480 = icmp eq i8 %v3_10005b7480.in, 32
  br i1 %v3_10005b7480, label %dec_label_pc_10005b80, label %dec_label_pc_10005b40

dec_label_pc_10005b80:                            ; preds = %dec_label_pc_10005b7c, %dec_label_pc_10005b40
  %tmp61 = icmp slt i32 %v0_10005b8074, 7
  br i1 %tmp61, label %dec_label_pc_10005b60, label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005b60, %dec_label_pc_10005b54, %dec_label_pc_10005b80, %dec_label_pc_10005b30
  %v1_10005be8.lcssa = phi i32 [ %v1_10005b30, %dec_label_pc_10005b30 ], [ %v1_10005be876, %dec_label_pc_10005b80 ], [ %v1_10005be876, %dec_label_pc_10005b54 ], [ %v1_10005b60, %dec_label_pc_10005b60 ]
  %v3_10005b90 = icmp eq i32 %v0_10005b90.ph, 0
  br i1 %v3_10005b90, label %dec_label_pc_10005a50.backedge, label %dec_label_pc_10005b9c

dec_label_pc_10005b9c:                            ; preds = %dec_label_pc_10005b90
  %v0_10005b9c = load i32, i32* %r26.global-to-local, align 4
  %v2_10005b9c = add i32 %v0_10005b9c, %v1_10005be8.lcssa
  %v1_10005ba0 = add i32 %v2_10005b9c, 32
  %v2_10005ba0 = inttoptr i32 %v1_10005ba0 to i8*
  %v3_10005ba0 = load i8, i8* %v2_10005ba0, align 1
  %v3_10005ba4 = icmp eq i8 %v3_10005ba0, 0
  br i1 %v3_10005ba4, label %dec_label_pc_10005be0, label %dec_label_pc_10005bac

dec_label_pc_10005bac:                            ; preds = %dec_label_pc_10005b9c
  %v3_10005bac = icmp eq i8 %v3_10005ba0, 32
  br i1 %v3_10005bac, label %dec_label_pc_10005be0, label %dec_label_pc_10005bb4

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005bac
  %v1_10005bb4 = add i32 %v1_10005be8.lcssa, 1
  %v2_10005bb8 = add i32 %v1_10005bb4, %v0_10005b38.pre
  br label %dec_label_pc_10005bc8

dec_label_pc_10005bc4:                            ; preds = %dec_label_pc_10005bc8
  %v1_10005bd0 = add i32 %v0_10005bd0, 1
  %v1_10005bc4 = add i32 %v0_10005bc4, 1
  br label %dec_label_pc_10005bc8

dec_label_pc_10005bc8:                            ; preds = %dec_label_pc_10005bb4, %dec_label_pc_10005bc4
  %v0_10005bc4 = phi i32 [ %v1_10005bb4, %dec_label_pc_10005bb4 ], [ %v1_10005bc4, %dec_label_pc_10005bc4 ]
  %v0_10005bd0 = phi i32 [ %v2_10005bb8, %dec_label_pc_10005bb4 ], [ %v1_10005bd0, %dec_label_pc_10005bc4 ]
  %v1_10005bc8 = inttoptr i32 %v0_10005bd0 to i8*
  %v2_10005bc8 = load i8, i8* %v1_10005bc8, align 1
  store i32 %v0_10005bc4, i32* %r31.global-to-local, align 4
  %tmp62 = or i8 %v2_10005bc8, 32
  %tmp63 = icmp eq i8 %tmp62, 32
  br i1 %tmp63, label %dec_label_pc_10005be0, label %dec_label_pc_10005bc4

dec_label_pc_10005be0:                            ; preds = %dec_label_pc_10005bc8, %dec_label_pc_10005bac, %dec_label_pc_10005b9c
  %v1_10005be0 = phi i32 [ %v1_10005be8.lcssa, %dec_label_pc_10005bac ], [ %v1_10005be8.lcssa, %dec_label_pc_10005b9c ], [ %v0_10005bc4, %dec_label_pc_10005bc8 ]
  %v2_10005be0 = add i32 %v1_10005be0, %v0_10005b9c
  %v2_10005be8 = add i32 %v1_10005be8.lcssa, %v0_10005b38.pre
  store i32 %v2_10005be8, i32* @r31, align 4
  %v3_10005bec = add i32 %v2_10005be0, 32
  %v4_10005bec = inttoptr i32 %v3_10005bec to i8*
  store i8 0, i8* %v4_10005bec, align 1
  %v0_10005bf0 = load i32, i32* @r31, align 4
  store i32 268459000, i32* @lr, align 4
  %v1_10005bf4 = inttoptr i32 %v0_10005bf0 to i8*
  %v2_10005bf4 = call i32 @function_100095a4(i8* %v1_10005bf4)
  %v2_10005bf8 = icmp sgt i32 %v2_10005bf4, 15
  br i1 %v2_10005bf8, label %dec_label_pc_10005a50.backedge, label %dec_label_pc_10005c00

dec_label_pc_10005c00:                            ; preds = %dec_label_pc_10005be0
  %v0_10005c00 = load i32, i32* @r31, align 4
  store i32 %v2_10005a4c, i32* @r3, align 4
  %v2_10005c08 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10005c08 = call i32 @function_100095cc(i8* %v2_10005c08, i32 %v0_10005c00)
  br label %dec_label_pc_10005c0c

dec_label_pc_10005c0c.loopexit:                   ; preds = %dec_label_pc_10005a50.backedge, %dec_label_pc_10005a4c
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10005c0c

dec_label_pc_10005c0c:                            ; preds = %dec_label_pc_10005c0c.loopexit, %dec_label_pc_10005c00
  %v1_10005c18.pre-phi = phi i8* [ %.pre, %dec_label_pc_10005c0c.loopexit ], [ %v2_10005c08, %dec_label_pc_10005c00 ]
  store i32 268459028, i32* @lr, align 4
  %v0_10005c10 = call i32 @function_10009de8()
  store i32 268459036, i32* @lr, align 4
  %v2_10005c18 = call i32 @function_100095a4(i8* %v1_10005c18.pre-phi)
  %v3_10005c1c = icmp eq i32 %v2_10005c18, 0
  br i1 %v3_10005c1c, label %dec_label_pc_10005eec, label %dec_label_pc_10005c24

dec_label_pc_10005c24:                            ; preds = %dec_label_pc_10005c0c
  %v3_10005c2c = call i32 @function_10008ae4(i32 6, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268459064, i32* @lr, align 4
  %v1_10005c34 = call i32 @function_1000a2ec(i32 %v3_10005c2c)
  store i32 %v1_10005c34, i32* @r23, align 4
  %v3_10005c38 = icmp eq i32 %v1_10005c34, 0
  br i1 %v3_10005c38, label %dec_label_pc_10005e6c, label %dec_label_pc_10005c40

dec_label_pc_10005c40:                            ; preds = %dec_label_pc_10005c24
  store i32 0, i32* @r28, align 4
  store i32 268459084, i32* @lr, align 4
  %v1_10005c487 = inttoptr i32 %v1_10005c34 to i32*
  %v2_10005c488 = call i32 @function_1000a3fc(i32* %v1_10005c487)
  %v3_10005c4c10 = icmp eq i32 %v2_10005c488, 0
  br i1 %v3_10005c4c10, label %dec_label_pc_10005e60, label %dec_label_pc_10005c54.preheader.lr.ph

dec_label_pc_10005c54.preheader.lr.ph:            ; preds = %dec_label_pc_10005c40
  %v2_10005c88 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10005df8 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10005c54.preheader

dec_label_pc_10005c44.loopexit:                   ; preds = %dec_label_pc_10005c5c, %dec_label_pc_10005c74, %dec_label_pc_10005cdc
  %v0_10005c44 = load i32, i32* @r23, align 4
  store i32 268459084, i32* @lr, align 4
  %v1_10005c48 = inttoptr i32 %v0_10005c44 to i32*
  %v2_10005c48 = call i32 @function_1000a3fc(i32* %v1_10005c48)
  %v3_10005c4c = icmp eq i32 %v2_10005c48, 0
  br i1 %v3_10005c4c, label %dec_label_pc_10005e60, label %dec_label_pc_10005c54.preheader

dec_label_pc_10005c54.preheader:                  ; preds = %dec_label_pc_10005c54.preheader.lr.ph, %dec_label_pc_10005c44.loopexit
  %v0_10005c5c34 = phi i32 [ %v2_10005c488, %dec_label_pc_10005c54.preheader.lr.ph ], [ %v2_10005c48, %dec_label_pc_10005c44.loopexit ]
  br label %dec_label_pc_10005c54

dec_label_pc_10005c54:                            ; preds = %dec_label_pc_10005c54.preheader, %dec_label_pc_10005e48
  %v0_10005c5c = phi i32 [ %v0_10005c5c34, %dec_label_pc_10005c54.preheader ], [ %v2_10005e54, %dec_label_pc_10005e48 ]
  %v0_10005c54 = load i32, i32* @r28, align 4
  %v3_10005c54 = icmp eq i32 %v0_10005c54, 0
  br i1 %v3_10005c54, label %dec_label_pc_10005c5c, label %dec_label_pc_10005e60

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005c54
  %v1_10005c5c = add i32 %v0_10005c5c, 11
  %v2_10005c5c = inttoptr i32 %v1_10005c5c to i8*
  %v3_10005c5c = load i8, i8* %v2_10005c5c, align 1
  %v4_10005c5c = zext i8 %v3_10005c5c to i32
  store i32 %v1_10005c5c, i32* @r30, align 4
  %v1_10005c64 = add nuw nsw i32 %v4_10005c5c, 208
  %v1_10005c68 = urem i32 %v1_10005c64, 256
  %v2_10005c6c = icmp ugt i32 %v1_10005c68, 9
  br i1 %v2_10005c6c, label %dec_label_pc_10005c44.loopexit, label %dec_label_pc_10005c74

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c5c
  %v3_10005c7c = call i32 @function_10008ae4(i32 6, i32* null)
  store i32 %v2_10005970, i32* @r3, align 4
  %v3_10005c88 = call i32 @function_100095cc(i8* %v2_10005c88, i32 %v3_10005c7c)
  store i32 268459156, i32* @lr, align 4
  %v2_10005c90 = call i32 @function_100095a4(i8* %v2_10005c88)
  %v0_10005c94 = load i32, i32* @r30, align 4
  %v0_10005c98 = load i32, i32* @r27, align 4
  %v2_10005c98 = add i32 %v0_10005c98, %v2_10005c90
  store i32 %v2_10005c98, i32* @r3, align 4
  %v2_10005c9c = inttoptr i32 %v2_10005c98 to i8*
  %v3_10005c9c = call i32 @function_100095cc(i8* %v2_10005c9c, i32 %v0_10005c94)
  store i32 268459176, i32* @lr, align 4
  %v2_10005ca4 = call i32 @function_100095a4(i8* %v2_10005c88)
  %v3_10005cb4 = call i32 @function_10008ae4(i32 7, i32* null)
  %v0_10005cbc = load i32, i32* @r27, align 4
  %v2_10005cbc = add i32 %v2_10005ca4, %v0_10005cbc
  store i32 %v2_10005cbc, i32* @r3, align 4
  %v2_10005cc0 = inttoptr i32 %v2_10005cbc to i8*
  %v3_10005cc0 = call i32 @function_100095cc(i8* %v2_10005cc0, i32 %v3_10005cb4)
  store i32 4096, i32* @r5, align 4
  store i32 268459220, i32* @lr, align 4
  %v3_10005cd0 = call i32 @function_1000a068(i32 %v2_10005970, i32 %v2_10005978, i32 4096)
  %v3_10005cd4 = icmp eq i32 %v3_10005cd0, -1
  br i1 %v3_10005cd4, label %dec_label_pc_10005c44.loopexit, label %dec_label_pc_10005cdc

dec_label_pc_10005cdc:                            ; preds = %dec_label_pc_10005c74
  %v3_10005ce4 = call i32 @function_10008ae4(i32 6, i32* null)
  store i32 %v2_10005970, i32* @r3, align 4
  %v3_10005cf0 = call i32 @function_100095cc(i8* %v2_10005c88, i32 %v3_10005ce4)
  store i32 268459260, i32* @lr, align 4
  %v2_10005cf8 = call i32 @function_100095a4(i8* %v2_10005c88)
  %v0_10005cfc = load i32, i32* @r30, align 4
  %v0_10005d00 = load i32, i32* @r27, align 4
  %v2_10005d00 = add i32 %v0_10005d00, %v2_10005cf8
  store i32 %v2_10005d00, i32* @r3, align 4
  %v2_10005d04 = inttoptr i32 %v2_10005d00 to i8*
  %v3_10005d04 = call i32 @function_100095cc(i8* %v2_10005d04, i32 %v0_10005cfc)
  store i32 268459280, i32* @lr, align 4
  %v2_10005d0c = call i32 @function_100095a4(i8* %v2_10005c88)
  %v3_10005d1c = call i32 @function_10008ae4(i32 8, i32* null)
  %v0_10005d24 = load i32, i32* @r27, align 4
  %v2_10005d24 = add i32 %v2_10005d0c, %v0_10005d24
  store i32 %v2_10005d24, i32* @r3, align 4
  %v2_10005d28 = inttoptr i32 %v2_10005d24 to i8*
  %v3_10005d28 = call i32 @function_100095cc(i8* %v2_10005d28, i32 %v3_10005d1c)
  store i32 268459316, i32* @lr, align 4
  %v1_10005d30 = call i32 @function_1000a2ec(i32 %v2_10005970)
  store i32 %v1_10005d30, i32* @r25, align 4
  %v3_10005d34 = icmp eq i32 %v1_10005d30, 0
  br i1 %v3_10005d34, label %dec_label_pc_10005c44.loopexit, label %dec_label_pc_10005d3c

dec_label_pc_10005d3c.loopexit:                   ; preds = %dec_label_pc_10005d5c, %dec_label_pc_10005df8
  %v0_10005d3c.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_10005d3c

dec_label_pc_10005d3c:                            ; preds = %dec_label_pc_10005cdc, %dec_label_pc_10005d3c.loopexit
  %v0_10005d3c = phi i32 [ %v0_10005d3c.pre, %dec_label_pc_10005d3c.loopexit ], [ %v1_10005d30, %dec_label_pc_10005cdc ]
  store i32 268459332, i32* @lr, align 4
  %v1_10005d40 = inttoptr i32 %v0_10005d3c to i32*
  %v2_10005d40 = call i32 @function_1000a3fc(i32* %v1_10005d40)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_10005d40, i32* @r31, align 4
  %v3_10005d48 = icmp eq i32 %v2_10005d40, 0
  %v0_10005d4c = load i32, i32* @r28, align 4
  store i32 %v2_10005978, i32* @r3, align 4
  %v3_10005d4c.not = icmp ne i32 %v0_10005d4c, 0
  %brmerge = or i1 %v3_10005d48, %v3_10005d4c.not
  br i1 %brmerge, label %dec_label_pc_10005e48, label %dec_label_pc_10005d5c

dec_label_pc_10005d5c:                            ; preds = %dec_label_pc_10005d3c
  store i32 268459360, i32* @lr, align 4
  %v0_10005d5c = call i32 @function_1000964c()
  %v3_10005d68 = call i32 @function_10008ae4(i32 6, i32* null)
  store i32 %v2_10005970, i32* @r3, align 4
  %v3_10005d74 = call i32 @function_100095cc(i8* %v2_10005c88, i32 %v3_10005d68)
  store i32 268459392, i32* @lr, align 4
  %v2_10005d7c = call i32 @function_100095a4(i8* %v2_10005c88)
  %v0_10005d80 = load i32, i32* @r30, align 4
  %v0_10005d84 = load i32, i32* @r27, align 4
  %v2_10005d84 = add i32 %v0_10005d84, %v2_10005d7c
  store i32 %v2_10005d84, i32* @r3, align 4
  %v2_10005d88 = inttoptr i32 %v2_10005d84 to i8*
  %v3_10005d88 = call i32 @function_100095cc(i8* %v2_10005d88, i32 %v0_10005d80)
  store i32 268459412, i32* @lr, align 4
  %v2_10005d90 = call i32 @function_100095a4(i8* %v2_10005c88)
  %v3_10005da0 = call i32 @function_10008ae4(i32 8, i32* null)
  %v0_10005da8 = load i32, i32* @r27, align 4
  %v2_10005da8 = add i32 %v2_10005d90, %v0_10005da8
  store i32 %v2_10005da8, i32* @r3, align 4
  %v2_10005dac = inttoptr i32 %v2_10005da8 to i8*
  %v3_10005dac = call i32 @function_100095cc(i8* %v2_10005dac, i32 %v3_10005da0)
  store i32 268459448, i32* @lr, align 4
  %v2_10005db4 = call i32 @function_100095a4(i8* %v2_10005c88)
  %v0_10005dc0 = load i32, i32* @r27, align 4
  %v2_10005dc0 = add i32 %v0_10005dc0, %v2_10005db4
  store i32 %v2_10005dc0, i32* @r3, align 4
  %v2_10005dc4 = inttoptr i32 %v2_10005dc0 to i8*
  %v3_10005dc4 = call i32 @function_100095cc(i8* %v2_10005dc4, i32 ptrtoint (i32* @global_var_1000c64c.8 to i32))
  store i32 268459472, i32* @lr, align 4
  %v2_10005dcc = call i32 @function_100095a4(i8* %v2_10005c88)
  %v0_10005dd0 = load i32, i32* @r31, align 4
  %v1_10005dd0 = add i32 %v0_10005dd0, 11
  %v0_10005dd4 = load i32, i32* @r27, align 4
  %v2_10005dd4 = add i32 %v0_10005dd4, %v2_10005dcc
  store i32 %v2_10005dd4, i32* @r3, align 4
  %v2_10005dd8 = inttoptr i32 %v2_10005dd4 to i8*
  %v3_10005dd8 = call i32 @function_100095cc(i8* %v2_10005dd8, i32 %v1_10005dd0)
  store i32 268459500, i32* @lr, align 4
  %v3_10005de8 = call i32 @function_1000a068(i32 %v2_10005970, i32 %v2_10005978, i32 4096)
  %v3_10005dec = icmp eq i32 %v3_10005de8, -1
  br i1 %v3_10005dec, label %dec_label_pc_10005d3c.loopexit, label %dec_label_pc_10005df8

dec_label_pc_10005df8:                            ; preds = %dec_label_pc_10005d5c
  store i32 268459516, i32* @lr, align 4
  %v2_10005df8 = call i32 @function_100095a4(i8* %v1_10005df8)
  %v4_10005e08 = call i32 @function_10009954(i8* %v1_10005df8, i32 %v2_10005df8, i32 %v2_10005a4c)
  %v3_10005e10 = icmp eq i32 %v4_10005e08, -1
  %v0_10005e14 = load i32, i32* @r30, align 4
  store i32 %v0_10005e14, i32* @r3, align 4
  br i1 %v3_10005e10, label %dec_label_pc_10005d3c.loopexit, label %dec_label_pc_10005e1c

dec_label_pc_10005e1c:                            ; preds = %dec_label_pc_10005df8
  store i32 268459552, i32* @lr, align 4
  %v2_10005e1c = call i32 @function_100096cc(i32 %v0_10005e14, i32 10)
  store i32 268459560, i32* @lr, align 4
  %v2_10005e24 = call i32 @function_10009f08(i32 %v2_10005e1c, i32 9)
  %v0_10005e28 = load i32, i32* @r25, align 4
  store i32 268459568, i32* @lr, align 4
  %v1_10005e2c = inttoptr i32 %v0_10005e28 to i32*
  %v2_10005e2c = call i32 @function_1000a3fc(i32* %v1_10005e2c)
  store i32 1, i32* @r28, align 4
  store i32 %v2_10005e2c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005e48

dec_label_pc_10005e48:                            ; preds = %dec_label_pc_10005d3c, %dec_label_pc_10005e1c
  %v0_10005e48 = load i32, i32* @r25, align 4
  store i32 268459600, i32* @lr, align 4
  %v1_10005e4c = inttoptr i32 %v0_10005e48 to i32*
  %v2_10005e4c = call i32 @function_1000a248(i32* %v1_10005e4c)
  %v0_10005e50 = load i32, i32* @r23, align 4
  store i32 268459608, i32* @lr, align 4
  %v1_10005e54 = inttoptr i32 %v0_10005e50 to i32*
  %v2_10005e54 = call i32 @function_1000a3fc(i32* %v1_10005e54)
  %v3_10005e58 = icmp eq i32 %v2_10005e54, 0
  br i1 %v3_10005e58, label %dec_label_pc_10005e60, label %dec_label_pc_10005c54

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005c44.loopexit, %dec_label_pc_10005e48, %dec_label_pc_10005c54, %dec_label_pc_10005c40
  %v0_10005e60 = load i32, i32* @r23, align 4
  %v0_10005e64 = load i32, i32* @r28, align 4
  %v1_10005e64 = urem i32 %v0_10005e64, 256
  store i32 %v1_10005e64, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005e6c.81 to i32), i32* @lr, align 4
  %v1_10005e68 = inttoptr i32 %v0_10005e60 to i32*
  %v2_10005e68 = call i32 @function_1000a248(i32* %v1_10005e68)
  br label %dec_label_pc_10005e6c

dec_label_pc_10005e6c:                            ; preds = %dec_label_pc_10005c24, %dec_label_pc_10005e60
  store i32 ptrtoint ([3 x i8]* @global_var_10005e74.82 to i32), i32* @lr, align 4
  %v1_10005e70 = call i32 @function_1000b420(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10005e7c.83 to i32), i32* @lr, align 4
  %v1_10005e78 = call i32 @function_10008b0c(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005e84.84 to i32), i32* @lr, align 4
  %v1_10005e80 = call i32 @function_10008b0c(i32 7)
  store i32 ptrtoint ([3 x i8]* @global_var_10005e8c.85 to i32), i32* @lr, align 4
  %v1_10005e88 = call i32 @function_10008b0c(i32 8)
  store i32 268459668, i32* @lr, align 4
  %v1_10005e90 = call i32 @function_10008b0c(i32 9)
  br label %dec_label_pc_10005e94

dec_label_pc_10005e94:                            ; preds = %dec_label_pc_10005a04, %dec_label_pc_10005e6c
  %v0_10005e98 = load i32, i32* @r31, align 4
  store i32 %v0_100059a4, i32* @r23, align 4
  store i32 %v0_1000598c, i32* @r25, align 4
  store i32 %v0_1000596c, i32* @r27, align 4
  store i32 %v0_100059ac, i32* @r28, align 4
  store i32 %v0_1000597c, i32* @r29, align 4
  store i32 %v0_10005994, i32* @r30, align 4
  store i32 %v0_1000599c, i32* @r31, align 4
  ret i32 %v0_10005e98

dec_label_pc_10005ecc:                            ; preds = %dec_label_pc_10005b4c
  %v3_10005b4c = icmp eq i32 %v0_10005b8074, 0
  %v1_10005ecc = add i32 %v0_10005b8074, 1
  br i1 %v3_10005b4c, label %dec_label_pc_10005ed4, label %dec_label_pc_10005b54

dec_label_pc_10005ed4:                            ; preds = %dec_label_pc_10005ecc
  %v0_10005ed4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005ed4 = add i32 %v0_10005ed4, %v1_10005be876
  %v1_10005ed8 = add i32 %v2_10005ed4, 33
  %v2_10005ed8 = inttoptr i32 %v1_10005ed8 to i8*
  %v3_10005ed8 = load i8, i8* %v2_10005ed8, align 1
  %v3_10005edc = icmp eq i8 %v3_10005ed8, 65
  br i1 %v3_10005edc, label %dec_label_pc_10005ee4, label %dec_label_pc_10005b30

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005ed4
  br label %dec_label_pc_10005b30.outer

dec_label_pc_10005eec:                            ; preds = %dec_label_pc_10005c0c
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005ef8.86 to i32), i32* @lr, align 4
  %v1_10005ef4 = call i32 @function_10008b0c(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005f00.87 to i32), i32* @lr, align 4
  %v1_10005efc = call i32 @function_10008b0c(i32 7)
  store i32 ptrtoint ([3 x i8]* @global_var_10005f08.88 to i32), i32* @lr, align 4
  %v1_10005f04 = call i32 @function_10008b0c(i32 8)
  store i32 268459792, i32* @lr, align 4
  %v1_10005f0c = call i32 @function_10008b0c(i32 9)
  %v0_10005f14 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100059a4, i32* @r23, align 4
  store i32 %v0_1000598c, i32* @r25, align 4
  store i32 %v0_1000596c, i32* @r27, align 4
  store i32 %v0_100059ac, i32* @r28, align 4
  store i32 %v0_1000597c, i32* @r29, align 4
  store i32 %v0_10005994, i32* @r30, align 4
  store i32 %v0_1000599c, i32* @r31, align 4
  ret i32 %v0_10005f14

dec_label_pc_10005f48:                            ; preds = %dec_label_pc_1000595c
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10005a04

; uselistorder directives
  uselistorder i32 %v2_10005e54, { 1, 0 }
  uselistorder i32 %v0_10005bd0, { 1, 0 }
  uselistorder i32 %v0_10005bc4, { 0, 2, 1 }
  uselistorder i32 %v1_10005bb4, { 1, 0 }
  uselistorder i32 %v1_10005be8.lcssa, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_10005b8074, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_10005be876, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_10005b6421, { 1, 0 }
  uselistorder i32 %v1_10005b00, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10005a4c, { 1, 0, 2 }
  uselistorder i32 %v2_10005990, { 1, 0 }
  uselistorder i32 %v2_10005970, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000c64c.8 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a068, { 1, 0 }
  uselistorder i32 268459084, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10009804, { 1, 0 }
  uselistorder i32 268458592, { 1, 0 }
  uselistorder label %dec_label_pc_10005e94, { 1, 0 }
  uselistorder label %dec_label_pc_10005e6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e60, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10005e48, { 1, 0 }
  uselistorder label %dec_label_pc_10005d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10005d3c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10005c54, { 1, 0 }
  uselistorder label %dec_label_pc_10005c54.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005c44.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10005b90, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10005b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005b54, { 1, 0 }
  uselistorder label %dec_label_pc_10005b30, { 1, 0 }
  uselistorder label %dec_label_pc_10005af8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10005a50.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10005a68, { 1, 0 }
  uselistorder label %dec_label_pc_10005a04, { 1, 0 }
}

define i32 @function_10005f6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005f6c:
  %r10.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-552 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %v0_10005f78 = load i32, i32* @r30, align 4
  %v0_10005f88 = load i32, i32* @r25, align 4
  %v0_10005f8c = load i32, i32* @r26, align 4
  %v0_10005f90 = load i32, i32* @r27, align 4
  %v0_10005f94 = load i32, i32* @r28, align 4
  %v0_10005f98 = load i32, i32* @r29, align 4
  %v0_10005f9c = load i32, i32* @r31, align 4
  store i32 268459940, i32* @lr, align 4
  %v0_10005fa0 = call i32 @function_1000a1b8()
  store i32 %v0_10005fa0, i32* @r30, align 4
  store i32 268459948, i32* @lr, align 4
  %v0_10005fa8 = call i32 @function_10009e30()
  store i32 %v0_10005fa8, i32* @global_var_1001d23c.76, align 4
  %tmp36 = icmp slt i32 %v0_10005fa8, 1
  br i1 %tmp36, label %dec_label_pc_10005ff0, label %dec_label_pc_10005fbc

dec_label_pc_10005fbc:                            ; preds = %dec_label_pc_10006058, %dec_label_pc_10005ff0, %dec_label_pc_10005f6c
  %v0_10005fec = phi i32 [ -1, %dec_label_pc_10005ff0 ], [ %v0_10005fa8, %dec_label_pc_10005f6c ], [ 0, %dec_label_pc_10006058 ]
  store i32 %v0_10005f88, i32* @r25, align 4
  store i32 %v0_10005f8c, i32* @r26, align 4
  store i32 %v0_10005f90, i32* @r27, align 4
  store i32 %v0_10005f94, i32* @r28, align 4
  store i32 %v0_10005f98, i32* @r29, align 4
  store i32 %v0_10005f78, i32* @r30, align 4
  store i32 %v0_10005f9c, i32* @r31, align 4
  ret i32 %v0_10005fec

dec_label_pc_10005ff0:                            ; preds = %dec_label_pc_10005f6c
  %v3_10005ff0 = icmp eq i32 %v0_10005fa8, -1
  br i1 %v3_10005ff0, label %dec_label_pc_10005fbc, label %dec_label_pc_10005ff8

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005ff0
  store i32 2, i32* %stack_var_-632, align 4
  store i32 268460048, i32* @lr, align 4
  %v1_1000600c = call i32 @function_1000595c(i32 81)
  %v3_10006010 = icmp eq i32 %v1_1000600c, 0
  br i1 %v3_10006010, label %dec_label_pc_10006018, label %dec_label_pc_10006288

dec_label_pc_10006018:                            ; preds = %dec_label_pc_10005ff8, %dec_label_pc_10006288, %dec_label_pc_100062ac
  %v0_1000601c = load i32, i32* @r30, align 4
  store i32 %v0_1000601c, i32* %r29.global-to-local, align 4
  store i32 268460068, i32* @lr, align 4
  %v1_10006020 = call i32 @function_1000b420(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000602c.89 to i32), i32* @lr, align 4
  %v0_10006028 = call i32 @function_1000acf4()
  %v1_10006028 = inttoptr i32 %v0_10006028 to i8*
  store i32 0, i32* %r10.global-to-local, align 4
  store i8 0, i8* %v1_10006028, align 1
  %v0_10006040 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006040, i32* @global_var_1001d240.90, align 4
  store i32 400, i32* @r28, align 4
  store i32 %v0_10006028, i32* @global_var_1001d244.91, align 4
  store i32 0, i32* @r26, align 4
  %v2_10006050 = ptrtoint i32* %stack_var_-616 to i32
  store i32 %v2_10006050, i32* @r25, align 4
  %v2_10006054 = ptrtoint i32* %stack_var_-552 to i32
  %v2_10006128 = bitcast i32* %stack_var_-616 to i8*
  br label %dec_label_pc_10006058

dec_label_pc_10006058:                            ; preds = %dec_label_pc_100060ec, %dec_label_pc_10006018
  store i32 268460128, i32* @lr, align 4
  %v1_1000605c = call i32 @function_10008b98(i32 6)
  %v3_10006068 = call i32 @function_10008ae4(i32 6, i32* null)
  store i32 268460144, i32* @lr, align 4
  %v1_1000606c = call i32 @function_1000a2ec(i32 %v3_10006068)
  store i32 %v1_1000606c, i32* @r27, align 4
  %v3_10006070 = icmp eq i32 %v1_1000606c, 0
  br i1 %v3_10006070, label %dec_label_pc_10005fbc, label %dec_label_pc_10006078

dec_label_pc_10006078:                            ; preds = %dec_label_pc_10006058
  store i32 268460160, i32* @lr, align 4
  %v1_1000607c = call i32 @function_10008b0c(i32 6)
  %v0_100060807 = load i32, i32* @r27, align 4
  store i32 268460168, i32* @lr, align 4
  %v1_100060848 = inttoptr i32 %v0_100060807 to i32*
  %v2_100060849 = call i32 @function_1000a3fc(i32* %v1_100060848)
  %v3_1000608811 = icmp eq i32 %v2_100060849, 0
  br i1 %v3_1000608811, label %dec_label_pc_100060ec, label %dec_label_pc_10006090.preheader

dec_label_pc_10006090.preheader:                  ; preds = %dec_label_pc_10006078, %dec_label_pc_10006080.backedge
  %v0_1000609013 = phi i32 [ %v2_10006084, %dec_label_pc_10006080.backedge ], [ %v2_100060849, %dec_label_pc_10006078 ]
  br label %dec_label_pc_10006090

dec_label_pc_10006090:                            ; preds = %dec_label_pc_10006090.preheader, %dec_label_pc_100060d8
  %v0_100060a4 = phi i32 [ %v0_1000609013, %dec_label_pc_10006090.preheader ], [ %v2_100060e0, %dec_label_pc_100060d8 ]
  %v1_10006090 = add i32 %v0_100060a4, 11
  %v2_10006090 = inttoptr i32 %v1_10006090 to i8*
  %v3_10006090 = load i8, i8* %v2_10006090, align 1
  %v4_10006090 = zext i8 %v3_10006090 to i32
  %v1_10006094 = add nuw nsw i32 %v4_10006090, 208
  %v1_10006098 = urem i32 %v1_10006094, 256
  %v2_1000609c = icmp ugt i32 %v1_10006098, 9
  br i1 %v2_1000609c, label %dec_label_pc_10006080.backedge, label %dec_label_pc_100060a4

dec_label_pc_100060a4:                            ; preds = %dec_label_pc_10006090
  store i32 %v1_10006090, i32* @r31, align 4
  store i32 %v1_10006090, i32* @r3, align 4
  %v0_100060b0 = load i32, i32* @r26, align 4
  %v1_100060b0 = add i32 %v0_100060b0, 1
  store i32 %v1_100060b0, i32* @r26, align 4
  store i32 268460216, i32* @lr, align 4
  %v2_100060b4 = call i32 @function_100096cc(i32 %v1_10006090, i32 10)
  %v0_100060b8 = load i32, i32* @r28, align 4
  %v2_100060b8 = icmp slt i32 %v0_100060b8, %v2_100060b4
  store i32 %v2_100060b4, i32* @r30, align 4
  br i1 %v2_100060b8, label %dec_label_pc_100060f8, label %dec_label_pc_100060c4

dec_label_pc_100060c4:                            ; preds = %dec_label_pc_100060a4
  store i32 268460236, i32* @lr, align 4
  %v0_100060c8 = call i32 @function_1000a1b8()
  %v0_100060cc = load i32, i32* @r29, align 4
  %v2_100060cc = sub i32 %v0_100060c8, %v0_100060cc
  %tmp37 = icmp slt i32 %v2_100060cc, 601
  br i1 %tmp37, label %dec_label_pc_10006244, label %dec_label_pc_100060d8

dec_label_pc_100060d8:                            ; preds = %dec_label_pc_100060c4
  %v0_100060d8 = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268460260, i32* @lr, align 4
  %v1_100060e0 = inttoptr i32 %v0_100060d8 to i32*
  %v2_100060e0 = call i32 @function_1000a3fc(i32* %v1_100060e0)
  %v3_100060e4 = icmp eq i32 %v2_100060e0, 0
  br i1 %v3_100060e4, label %dec_label_pc_100060ec, label %dec_label_pc_10006090

dec_label_pc_100060ec:                            ; preds = %dec_label_pc_10006080.backedge, %dec_label_pc_100060d8, %dec_label_pc_10006078
  %v0_100060ec = load i32, i32* @r27, align 4
  store i32 268460276, i32* @lr, align 4
  %v1_100060f0 = inttoptr i32 %v0_100060ec to i32*
  %v2_100060f0 = call i32 @function_1000a248(i32* %v1_100060f0)
  br label %dec_label_pc_10006058

dec_label_pc_100060f8:                            ; preds = %dec_label_pc_100060a4
  store i32 268460288, i32* @lr, align 4
  %v0_100060fc = call i32 @function_1000a1b8()
  store i32 %v0_100060fc, i32* %r24.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000610c.93 to i32), i32* @lr, align 4
  %v1_10006108 = call i32 @function_10008b98(i32 6)
  store i32 268460308, i32* @lr, align 4
  %v1_10006110 = call i32 @function_10008b98(i32 10)
  %v3_1000611c = call i32 @function_10008ae4(i32 6, i32* null)
  store i32 %v2_10006050, i32* @r3, align 4
  %v3_10006128 = call i32 @function_100095cc(i8* %v2_10006128, i32 %v3_1000611c)
  %v0_1000612c = load i32, i32* @r31, align 4
  %v0_10006130 = load i32, i32* @r25, align 4
  %v2_10006130 = add i32 %v0_10006130, %v3_10006128
  store i32 %v2_10006130, i32* %r28.global-to-local, align 4
  store i32 %v2_10006130, i32* @r3, align 4
  %v2_10006138 = inttoptr i32 %v2_10006130 to i8*
  %v3_10006138 = call i32 @function_100095cc(i8* %v2_10006138, i32 %v0_1000612c)
  store i32 %v3_10006138, i32* %r29.global-to-local, align 4
  %v3_10006148 = call i32 @function_10008ae4(i32 10, i32* null)
  %v2_10006150 = add i32 %v3_10006138, %v2_10006130
  store i32 %v2_10006150, i32* @r3, align 4
  %v2_10006154 = inttoptr i32 %v2_10006150 to i8*
  %v3_10006154 = call i32 @function_100095cc(i8* %v2_10006154, i32 %v3_10006148)
  store i32 ptrtoint ([3 x i8]* @global_var_10006160.95 to i32), i32* @lr, align 4
  %v1_1000615c = call i32 @function_10008b0c(i32 6)
  store i32 268460392, i32* @lr, align 4
  %v1_10006164 = call i32 @function_10008b0c(i32 10)
  store i32 268460408, i32* @lr, align 4
  %v2_10006174 = call i32 @function_10009f50(i32 %v2_10006050, i32 0)
  %v3_10006178 = icmp eq i32 %v2_10006174, -1
  store i32 %v2_10006174, i32* @r31, align 4
  br i1 %v3_10006178, label %dec_label_pc_10006224, label %dec_label_pc_10006184

dec_label_pc_10006184:                            ; preds = %dec_label_pc_100060f8
  store i32 268460428, i32* @lr, align 4
  %v1_10006188 = call i32 @function_10008b98(i32 62)
  %v0_1000618c41 = load i32, i32* @r31, align 4
  store i32 268460444, i32* @lr, align 4
  %v3_1000619842 = call i32 @function_1000a020(i32 %v0_1000618c41, i32 %v2_10006054, i32 512)
  store i32 %v3_1000619842, i32* %r28.global-to-local, align 4
  %tmp3844 = icmp slt i32 %v3_1000619842, 1
  br i1 %tmp3844, label %dec_label_pc_10006274, label %dec_label_pc_100061a4

dec_label_pc_100061a4:                            ; preds = %dec_label_pc_10006184, %dec_label_pc_1000618c.backedge
  %v3_100061ac = call i32 @function_10008ae4(i32 62, i32* null)
  store i32 %v3_100061ac, i32* %r29.global-to-local, align 4
  %v3_100061bc = call i32 @function_10008ae4(i32 62, i32* null)
  store i32 268460484, i32* @lr, align 4
  %v1_100061c0 = inttoptr i32 %v3_100061bc to i8*
  %v2_100061c0 = call i32 @function_100095a4(i8* %v1_100061c0)
  %v0_100061c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100061c4 = icmp slt i32 %v0_100061c4, %v2_100061c0
  br i1 %v2_100061c4, label %dec_label_pc_1000618c.backedge, label %dec_label_pc_100061cc

dec_label_pc_100061cc:                            ; preds = %dec_label_pc_100061a4
  %v1_100061cc = add i32 %v0_100061c4, 1
  store i32 %v1_100061cc, i32* %r28.global-to-local, align 4
  store i32 %v2_10006054, i32* %r10.global-to-local, align 4
  %v2_100061dc6 = icmp eq i32 %v0_100061c4, 0
  br i1 %v2_100061dc6, label %dec_label_pc_1000618c.backedge, label %dec_label_pc_100061e0.lr.ph

dec_label_pc_1000618c.backedge:                   ; preds = %dec_label_pc_100061fc, %dec_label_pc_100061cc, %dec_label_pc_100061a4
  %v0_1000618c = load i32, i32* @r31, align 4
  store i32 268460444, i32* @lr, align 4
  %v3_10006198 = call i32 @function_1000a020(i32 %v0_1000618c, i32 %v2_10006054, i32 512)
  store i32 %v3_10006198, i32* %r28.global-to-local, align 4
  %tmp38 = icmp slt i32 %v3_10006198, 1
  br i1 %tmp38, label %dec_label_pc_10006274, label %dec_label_pc_100061a4

dec_label_pc_100061e0.lr.ph:                      ; preds = %dec_label_pc_100061cc
  %v0_100061e0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100061e0

dec_label_pc_100061e0:                            ; preds = %dec_label_pc_100061e0.lr.ph, %dec_label_pc_100061fc
  %v0_100061dc = phi i32 [ %v0_100061c4, %dec_label_pc_100061e0.lr.ph ], [ %v1_100061dc, %dec_label_pc_100061fc ]
  %v0_100061fc = phi i32 [ %v2_10006054, %dec_label_pc_100061e0.lr.ph ], [ %v1_100061fc, %dec_label_pc_100061fc ]
  %v1_100061e0 = phi i32 [ 0, %dec_label_pc_100061e0.lr.ph ], [ %v1_100061e015, %dec_label_pc_100061fc ]
  %v2_100061e0 = add i32 %v1_100061e0, %v0_100061e0.pre
  %v3_100061e0 = inttoptr i32 %v2_100061e0 to i8*
  %v4_100061e0 = load i8, i8* %v3_100061e0, align 1
  %v1_100061e4 = add i32 %v1_100061e0, 1
  %v1_100061e8 = inttoptr i32 %v0_100061fc to i8*
  %v2_100061e8 = load i8, i8* %v1_100061e8, align 1
  %v4_100061f0 = icmp eq i8 %v2_100061e8, %v4_100061e0
  br i1 %v4_100061f0, label %dec_label_pc_10006204, label %dec_label_pc_100061f8

dec_label_pc_100061f8:                            ; preds = %dec_label_pc_100061e0
  br label %dec_label_pc_100061fc

dec_label_pc_100061fc:                            ; preds = %dec_label_pc_10006204, %dec_label_pc_100061f8
  %v1_100061e015 = phi i32 [ %v1_100061e4, %dec_label_pc_10006204 ], [ 0, %dec_label_pc_100061f8 ]
  %v1_100061fc = add i32 %v0_100061fc, 1
  store i32 %v1_100061fc, i32* %r10.global-to-local, align 4
  %v1_100061dc = add i32 %v0_100061dc, -1
  %v2_100061dc = icmp eq i32 %v1_100061dc, 0
  br i1 %v2_100061dc, label %dec_label_pc_1000618c.backedge, label %dec_label_pc_100061e0

dec_label_pc_10006204:                            ; preds = %dec_label_pc_100061e0
  %v4_100061ec = icmp eq i32 %v2_100061c0, %v1_100061e4
  br i1 %v4_100061ec, label %dec_label_pc_10006208, label %dec_label_pc_100061fc

dec_label_pc_10006208:                            ; preds = %dec_label_pc_10006204
  store i32 268460560, i32* @lr, align 4
  %v1_1000620c = call i32 @function_10008b0c(i32 62)
  store i32 268460568, i32* @lr, align 4
  %v0_10006214 = call i32 @function_10009de8()
  %v0_10006218 = load i32, i32* @r30, align 4
  store i32 268460580, i32* @lr, align 4
  %v2_10006220 = call i32 @function_10009f08(i32 %v0_10006218, i32 9)
  br label %dec_label_pc_10006224

dec_label_pc_10006224:                            ; preds = %dec_label_pc_100060f8, %dec_label_pc_10006274, %dec_label_pc_10006208
  store i32 %v2_10006050, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006230.97 to i32), i32* @lr, align 4
  %v0_1000622c = call i32 @function_1000964c()
  store i32 268460600, i32* @lr, align 4
  %v1_10006234 = call i32 @function_1000b420(i32 1)
  %v0_10006238 = load i32, i32* @r30, align 4
  store i32 %v0_10006238, i32* @r28, align 4
  %v0_1000623c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000623c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006080.backedge

dec_label_pc_10006080.backedge:                   ; preds = %dec_label_pc_10006090, %dec_label_pc_10006224, %dec_label_pc_10006268, %dec_label_pc_10006244, %dec_label_pc_1000624c
  %v0_10006080 = load i32, i32* @r27, align 4
  store i32 268460168, i32* @lr, align 4
  %v1_10006084 = inttoptr i32 %v0_10006080 to i32*
  %v2_10006084 = call i32 @function_1000a3fc(i32* %v1_10006084)
  %v3_10006088 = icmp eq i32 %v2_10006084, 0
  br i1 %v3_10006088, label %dec_label_pc_100060ec, label %dec_label_pc_10006090.preheader

dec_label_pc_10006244:                            ; preds = %dec_label_pc_100060c4
  %v0_10006244 = load i32, i32* @r30, align 4
  %tmp39 = icmp slt i32 %v0_10006244, 401
  br i1 %tmp39, label %dec_label_pc_10006080.backedge, label %dec_label_pc_1000624c

dec_label_pc_1000624c:                            ; preds = %dec_label_pc_10006244
  %v0_10006254 = load i32, i32* @r26, align 4
  %v1_10006258 = urem i32 %v0_10006254, 10
  %v4_10006260 = icmp eq i32 %v1_10006258, 0
  br i1 %v4_10006260, label %dec_label_pc_10006268, label %dec_label_pc_10006080.backedge

dec_label_pc_10006268:                            ; preds = %dec_label_pc_1000624c
  store i32 268460656, i32* @lr, align 4
  %v1_1000626c = call i32 @function_1000b420(i32 1)
  br label %dec_label_pc_10006080.backedge

dec_label_pc_10006274:                            ; preds = %dec_label_pc_1000618c.backedge, %dec_label_pc_10006184
  store i32 268460668, i32* @lr, align 4
  %v1_10006278 = call i32 @function_10008b0c(i32 62)
  store i32 268460676, i32* @lr, align 4
  %v0_10006280 = call i32 @function_10009de8()
  br label %dec_label_pc_10006224

dec_label_pc_10006288:                            ; preds = %dec_label_pc_10005ff8
  store i32 268460704, i32* @lr, align 4
  %v3_1000629c = call i32 @function_1000aaf0(i32 2, i32 1, i32 0)
  %v3_100062a0 = icmp eq i32 %v3_1000629c, -1
  store i32 %v3_1000629c, i32* @r31, align 4
  br i1 %v3_100062a0, label %dec_label_pc_10006018, label %dec_label_pc_100062ac

dec_label_pc_100062ac:                            ; preds = %dec_label_pc_10006288
  %v2_100062ac = ptrtoint i32* %stack_var_-632 to i32
  store i32 268460728, i32* @lr, align 4
  %v3_100062b4 = call i32 @function_1000a8bc(i32 %v2_100062ac, i32 16, i32 16)
  %v0_100062b8 = load i32, i32* @r31, align 4
  store i32 268460740, i32* @lr, align 4
  %v2_100062c0 = call i32 @function_1000a994(i32 %v0_100062b8, i32 1)
  br label %dec_label_pc_10006018

; uselistorder directives
  uselistorder i32 %v2_10006084, { 1, 0 }
  uselistorder i32 %v1_100061dc, { 1, 0 }
  uselistorder i32 %v1_100061fc, { 1, 0 }
  uselistorder i32 %v1_100061e4, { 1, 0 }
  uselistorder i32 %v1_100061e0, { 1, 0 }
  uselistorder i32 %v0_100061c4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100060e0, { 1, 0 }
  uselistorder i32 %v1_10006090, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10006054, { 1, 3, 2, 0 }
  uselistorder i32 %v0_10005fa8, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-632, { 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 3, 4, 2 }
  uselistorder i32 268460444, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_100096cc, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32*)* @function_1000a3fc, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268460168, { 1, 0 }
  uselistorder i32 (i32)* @function_1000a2ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006080.backedge, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_10006224, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100061e0, { 1, 0 }
  uselistorder label %dec_label_pc_100061a4, { 1, 0 }
  uselistorder label %dec_label_pc_10006090, { 1, 0 }
  uselistorder label %dec_label_pc_10006090.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006018, { 2, 1, 0 }
}

define i32 @function_100062c8() local_unnamed_addr {
dec_label_pc_100062c8:
  store i32 268460764, i32* @global_var_1001d218.98, align 4
  %v0_100062d8 = load i32, i32* @r3, align 4
  ret i32 %v0_100062d8
}

define i32 @function_100062dc() local_unnamed_addr {
dec_label_pc_100062dc:
  store i32 ptrtoint (i32* @global_var_100062f8.99 to i32), i32* @lr, align 4
  %v1_100062f4 = call i32 @function_10008b98(i32 2)
  store i32 908470905, i32* @global_var_1001d314.101, align 4
  %v3_10006310 = call i32 @function_10008ae4(i32 2, i32* null)
  %v4_10006310 = inttoptr i32 %v3_10006310 to i16*
  %v3_10006314 = load i16, i16* %v4_10006310, align 2
  store i16 %v3_10006314, i16* bitcast (i32* @global_var_1001d312.102 to i16*), align 4
  store i32 268460836, i32* @lr, align 4
  %v1_10006320 = call i32 @function_10008b0c(i32 2)
  ret i32 %v1_10006320
}

define i32 @function_10006338(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006338:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10006358 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_10006368 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_10006374 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10006374, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268460928, i32* @lr, align 4
  %v3_1000637c = call i32 @function_1000aaf0(i32 2, i32 1, i32 0)
  %v3_10006380 = icmp eq i32 %v3_1000637c, -1
  store i32 %v3_1000637c, i32* @global_var_1001d210.103, align 4
  br i1 %v3_10006380, label %dec_label_pc_10006430, label %dec_label_pc_1000639c

dec_label_pc_1000639c:                            ; preds = %dec_label_pc_10006338
  %v2_10006384 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268460960, i32* @lr, align 4
  %v5_1000639c = call i32 @function_1000aab4(i32 %v3_1000637c, i32 1, i32 2, i32 %v2_10006384, i32 4)
  %v3_100063a0 = load i32, i32* @global_var_1001d210.103, align 4
  store i32 3, i32* @r4, align 4
  store i32 268460984, i32* @lr, align 4
  %v2_100063b4 = call i32 @function_10009d00(i32 %v3_100063a0)
  store i32 4, i32* @r4, align 4
  store i32 268461004, i32* @lr, align 4
  %v2_100063c8 = call i32 @function_10009d00(i32 %v3_100063a0)
  %v3_100063cc = load i8, i8* @global_var_1001d0d0.104, align 1
  %v3_100063d4 = icmp eq i8 %v3_100063cc, 0
  br i1 %v3_100063d4, label %dec_label_pc_10006454, label %dec_label_pc_100063e0

dec_label_pc_100063e0:                            ; preds = %dec_label_pc_1000639c
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100063f4 = call i32 @function_1000a4bc()
  %v0_100063f8 = load i32, i32* @r27, align 4
  %v2_100063f8 = inttoptr i32 %v0_100063f4 to i32*
  store i32 %v0_100063f8, i32* %v2_100063f8, align 4
  store i32 %v0_100063f4, i32* @r29, align 4
  %v3_10006408 = load i32, i32* @global_var_1001d210.103, align 4
  store i32 268461072, i32* @lr, align 4
  %v3_1000640c = call i32 @function_1000a8bc(i32 %v3_10006408, i32 %v2_10006374, i32 16)
  %v3_10006414 = icmp eq i32 %v3_1000640c, -1
  br i1 %v3_10006414, label %dec_label_pc_1000649c, label %dec_label_pc_10006420

dec_label_pc_10006420:                            ; preds = %dec_label_pc_10006454, %dec_label_pc_100063e0
  %v3_10006428 = load i32, i32* @global_var_1001d210.103, align 4
  store i32 268461104, i32* @lr, align 4
  %v2_1000642c = call i32 @function_1000a994(i32 %v3_10006428, i32 1)
  br label %dec_label_pc_10006430

dec_label_pc_10006430:                            ; preds = %dec_label_pc_10006338, %dec_label_pc_10006420
  %v0_10006450 = phi i32 [ -1, %dec_label_pc_10006338 ], [ %v2_1000642c, %dec_label_pc_10006420 ]
  store i32 %v0_10006358, i32* @r28, align 4
  store i32 %v0_10006368, i32* @r31, align 4
  ret i32 %v0_10006450

dec_label_pc_10006454:                            ; preds = %dec_label_pc_1000639c
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10006470 = call i32 @function_1000a4bc()
  %v0_10006474 = load i32, i32* @r27, align 4
  %v2_10006474 = inttoptr i32 %v0_10006470 to i32*
  store i32 %v0_10006474, i32* %v2_10006474, align 4
  store i32 %v0_10006470, i32* @r29, align 4
  %v3_10006484 = load i32, i32* @global_var_1001d210.103, align 4
  store i32 268461196, i32* @lr, align 4
  %v3_10006488 = call i32 @function_1000a8bc(i32 %v3_10006484, i32 %v2_10006374, i32 16)
  %v3_10006490 = icmp eq i32 %v3_10006488, -1
  br i1 %v3_10006490, label %dec_label_pc_1000649c, label %dec_label_pc_10006420

dec_label_pc_1000649c:                            ; preds = %dec_label_pc_10006454, %dec_label_pc_100063e0
  %v0_1000649c = load i32, i32* @r29, align 4
  %v1_1000649c = inttoptr i32 %v0_1000649c to i32*
  %v2_1000649c = load i32, i32* %v1_1000649c, align 4
  %v3_100064a0 = load i32, i32* @global_var_1001d210.103, align 4
  store i32 %v3_100064a0, i32* @r3, align 4
  %v3_100064a4 = icmp eq i32 %v2_1000649c, 99
  br i1 %v3_100064a4, label %dec_label_pc_10006508, label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_10006508, %dec_label_pc_1000649c, %dec_label_pc_10006514
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100064c8.105 to i32), i32* @lr, align 4
  %v0_100064c4 = call i32 @function_1000a8f0()
  store i32 268461264, i32* @lr, align 4
  %v1_100064cc = call i32 @function_1000b420(i32 5)
  store i32 268461272, i32* @lr, align 4
  %v0_100064d4 = call i32 @function_10009de8()
  store i32 268461280, i32* @lr, align 4
  %v1_100064dc = call i32 @function_1000595c(i32 1991)
  store i32 268461284, i32* @lr, align 4
  %v1_100064e0 = call i32 @function_10006338(i32 %v1_100064dc)
  store i32 %v0_10006358, i32* @r28, align 4
  store i32 %v0_10006368, i32* @r31, align 4
  ret i32 %v1_100064e0

dec_label_pc_10006508:                            ; preds = %dec_label_pc_1000649c
  %v3_10006508 = load i8, i8* @global_var_1001d0d0.104, align 1
  %v3_1000650c = icmp eq i8 %v3_10006508, 0
  br i1 %v3_1000650c, label %dec_label_pc_100064ac, label %dec_label_pc_10006514

dec_label_pc_10006514:                            ; preds = %dec_label_pc_10006508
  %v0_10006518 = load i32, i32* @r27, align 4
  %v1_10006518 = trunc i32 %v0_10006518 to i8
  store i8 %v1_10006518, i8* @global_var_1001d0d0.104, align 1
  br label %dec_label_pc_100064ac

; uselistorder directives
  uselistorder i32 %v2_10006374, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_1000595c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a994, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a8bc, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001d0d0.104, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100064ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006430, { 1, 0 }
}

define i32 @function_10006520(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006520:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10006520 = load i32, i32* @lr, align 4
  store i32 %v0_10006520, i32* %r0.global-to-local, align 4
  %v0_10006528 = load i32, i32* @r31, align 4
  store i32 268461364, i32* @lr, align 4
  %v0_10006530 = call i32 @function_10009e30()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10006530, i32* @global_var_1001d248.106, align 4
  %tmp47 = icmp slt i32 %v0_10006530, 1
  br i1 %tmp47, label %dec_label_pc_10006558, label %dec_label_pc_10006544

dec_label_pc_10006544:                            ; preds = %dec_label_pc_10006558, %dec_label_pc_10006520
  store i32 %v0_10006520, i32* %r0.global-to-local, align 4
  store i32 %v0_10006528, i32* @r31, align 4
  ret i32 %v0_10006530

dec_label_pc_10006558:                            ; preds = %dec_label_pc_10006520
  %v3_10006558 = icmp eq i32 %v0_10006530, -1
  br i1 %v3_10006558, label %dec_label_pc_10006544, label %dec_label_pc_10006560

dec_label_pc_10006560:                            ; preds = %dec_label_pc_10006558
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006570.107 to i32), i32* @lr, align 4
  %v1_1000656c = call i32 @function_10008b98(i32 59)
  store i32 268461432, i32* @lr, align 4
  %v1_10006574 = call i32 @function_10008b98(i32 60)
  %v3_10006580 = call i32 @function_10008ae4(i32 59, i32* null)
  store i32 268461456, i32* @lr, align 4
  %v2_1000658c = call i32 @function_10009f50(i32 %v3_10006580, i32 2)
  %v3_10006590 = icmp eq i32 %v2_1000658c, -1
  store i32 %v2_1000658c, i32* @r31, align 4
  br i1 %v3_10006590, label %dec_label_pc_100065d8, label %dec_label_pc_1000659c

dec_label_pc_1000659c:                            ; preds = %dec_label_pc_100065d8, %dec_label_pc_10006560
  %v0_100065a0 = phi i32 [ %v2_100065ec, %dec_label_pc_100065d8 ], [ %v2_1000658c, %dec_label_pc_10006560 ]
  %v2_100065a8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268461492, i32* @lr, align 4
  %v3_100065b0 = call i32 @function_10009c18(i32 %v0_100065a0, i32 -2147199228, i32 %v2_100065a8)
  br label %dec_label_pc_100065b4

dec_label_pc_100065b4:                            ; preds = %dec_label_pc_100065b4, %dec_label_pc_1000659c
  %v0_100065b8 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100065cc.108 to i32), i32* @lr, align 4
  %v3_100065c8 = call i32 @function_10009c18(i32 %v0_100065b8, i32 -2147199227, i32 0)
  store i32 268461524, i32* @lr, align 4
  %v1_100065d0 = call i32 @function_1000b420(i32 10)
  br label %dec_label_pc_100065b4

dec_label_pc_100065d8:                            ; preds = %dec_label_pc_10006560
  %v3_100065e0 = call i32 @function_10008ae4(i32 60, i32* null)
  store i32 268461552, i32* @lr, align 4
  %v2_100065ec = call i32 @function_10009f50(i32 %v3_100065e0, i32 2)
  %v3_100065f0 = icmp eq i32 %v2_100065ec, -1
  store i32 %v2_100065ec, i32* @r31, align 4
  br i1 %v3_100065f0, label %dec_label_pc_100065fc, label %dec_label_pc_1000659c

dec_label_pc_100065fc:                            ; preds = %dec_label_pc_100065d8
  store i32 ptrtoint ([3 x i8]* @global_var_10006604.109 to i32), i32* @lr, align 4
  %v1_10006600 = call i32 @function_10008b0c(i32 59)
  store i32 ptrtoint ([3 x i8]* @global_var_1000660c.110 to i32), i32* @lr, align 4
  %v1_10006608 = call i32 @function_10008b0c(i32 60)
  %v0_10006610 = call i32 @function_1000b39c()
  %v0_10006618 = load i32, i32* @lr, align 4
  %v0_1000661c = load i32, i32* @r29, align 4
  %v2_10006620 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_10006620, i32* @r29, align 4
  %v0_10006624 = load i32, i32* @r28, align 4
  store i32 %v0_10006610, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  %v0_10006644 = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_1000664c = load i32, i32* @r24, align 4
  %v2_10006650 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10006650, i32* @r24, align 4
  %v0_10006654 = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_1000665c = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_1000666c = load i32, i32* @r17, align 4
  %v0_10006674 = load i32, i32* @r19, align 4
  %v0_1000667c = load i32, i32* @r23, align 4
  %v0_10006680 = load i32, i32* @r26, align 4
  %v0_10006684 = load i32, i32* @r27, align 4
  %v0_10006688 = load i32, i32* @r30, align 4
  store i32 268461712, i32* @lr, align 4
  %v1_1000668c = call i32 @function_1000ab70(i32 %v2_10006620)
  store i32 %v2_10006620, i32* @r3, align 4
  store i32 268461724, i32* @lr, align 4
  %v2_10006698 = call i32 @function_1000ab24(i32 %v2_10006620, i32 2)
  store i32 268461740, i32* @lr, align 4
  %v3_100066a8 = call i32 @function_1000a140(i32 0, i32 %v2_10006620, i32 0)
  store i32 268461752, i32* @lr, align 4
  %v2_100066b4 = call i32 @function_1000ab9c(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100066c8.111 to i32), i32* @lr, align 4
  %v2_100066c4 = call i32 @function_1000ab9c(i32 5, i32 268460744)
  store i32 268461772, i32* @lr, align 4
  %v1_100066c8 = call i32 @function_100098a8(i32 %v2_100066c4)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001d314.101, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001d312.102 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100066c8, i32* @global_var_1001d230.61, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001d310.100 to i16*), align 4
  store i32 268461812, i32* @lr, align 4
  %v2_100066f0 = call i32 @function_10008c24(i32 %v1_100066c8, i32 -1334109607)
  store i32 268460764, i32* %r9.global-to-local, align 4
  store i32 268460764, i32* @global_var_1001d218.98, align 4
  store i32 ptrtoint (i32* @global_var_10006704.112 to i32), i32* @lr, align 4
  %v1_10006700 = call i32 @function_10006338(i32 %v2_100066f0)
  store i32 268461832, i32* @lr, align 4
  %v1_10006704 = call i32 @function_10006e10(i32 %v1_10006700)
  store i32 %v2_10006650, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268461844, i32* @lr, align 4
  %v0_10006710 = call i32 @function_1000964c()
  %v0_10006714 = load i32, i32* @r28, align 4
  %v3_10006714 = icmp eq i32 %v0_10006714, 2
  br i1 %v3_10006714, label %dec_label_pc_10006888, label %dec_label_pc_1000671c

dec_label_pc_1000671c:                            ; preds = %dec_label_pc_10006888, %dec_label_pc_100065fc, %dec_label_pc_10006898
  %v0_1000671c = call i32 @function_10006dc0()
  %v2_10006720 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_10006720, i32* @r27, align 4
  store i32 %v0_1000671c, i32* %r29.global-to-local, align 4
  %v0_10006728 = load i32, i32* @r31, align 4
  %v1_10006728 = inttoptr i32 %v0_10006728 to i32*
  %v2_10006728 = load i32, i32* %v1_10006728, align 4
  %v2_1000672c = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_1000672c, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268461880, i32* @lr, align 4
  %v1_10006734 = inttoptr i32 %v2_10006728 to i8*
  %v2_10006734 = call i32 @function_100095a4(i8* %v1_10006734)
  store i32 %v2_10006734, i32* %r28.global-to-local, align 4
  %v0_1000673c = load i32, i32* @r31, align 4
  %v1_1000673c = inttoptr i32 %v0_1000673c to i32*
  %v2_1000673c = load i32, i32* %v1_1000673c, align 4
  %v1_10006740 = sub i32 20, %v2_10006734
  store i32 %v1_10006740, i32* @r28, align 4
  store i32 268461896, i32* @lr, align 4
  %v1_10006744 = inttoptr i32 %v2_1000673c to i8*
  %v2_10006744 = call i32 @function_100095a4(i8* %v1_10006744)
  %v0_10006748 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006748 = load i32, i32* @r28, align 4
  %v2_10006748 = urem i32 %v0_10006748, %v1_10006748
  %v2_1000674c = sub i32 %v0_10006748, %v2_10006748
  store i32 %v2_1000674c, i32* %r0.global-to-local, align 4
  %v2_10006754 = add i32 %v2_10006748, %v2_10006744
  store i32 %v2_10006720, i32* @r3, align 4
  store i32 %v2_10006754, i32* @r4, align 4
  %v0_10006760 = load i32, i32* @r30, align 4
  %v2_10006760 = add i32 %v0_10006760, %v2_10006754
  store i32 %v2_10006760, i32* @r29, align 4
  store i32 268461928, i32* @lr, align 4
  %v0_10006764 = call i32 @function_10006e80()
  %v0_10006768 = load i32, i32* @r31, align 4
  %v1_10006768 = inttoptr i32 %v0_10006768 to i32*
  %v2_10006768 = load i32, i32* %v1_10006768, align 4
  store i32 %v2_10006768, i32* @r3, align 4
  %v0_1000676c = load i32, i32* @r26, align 4
  %v1_1000676c = trunc i32 %v0_1000676c to i8
  %v2_1000676c = load i32, i32* @r29, align 4
  %v3_1000676c = add i32 %v2_1000676c, 40
  %v4_1000676c = inttoptr i32 %v3_1000676c to i8*
  store i8 %v1_1000676c, i8* %v4_1000676c, align 1
  %v2_10006774 = inttoptr i32 %v2_10006768 to i8*
  %v3_10006774 = call i32 @function_100095cc(i8* %v2_10006774, i32 %v2_10006720)
  store i32 32, i32* @r4, align 4
  store i32 %v2_10006720, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10006784.114 to i32), i32* @lr, align 4
  %v0_10006780 = call i32 @function_1000964c()
  %v0_10006784 = call i32 @function_10006dc0()
  store i32 %v0_10006784, i32* %r28.global-to-local, align 4
  %v0_1000678c = load i32, i32* @r31, align 4
  %v1_1000678c = inttoptr i32 %v0_1000678c to i32*
  %v2_1000678c = load i32, i32* %v1_1000678c, align 4
  store i32 268461972, i32* @lr, align 4
  %v1_10006790 = inttoptr i32 %v2_1000678c to i8*
  %v2_10006790 = call i32 @function_100095a4(i8* %v1_10006790)
  store i32 %v2_10006790, i32* %r29.global-to-local, align 4
  %v0_10006798 = load i32, i32* @r31, align 4
  %v1_10006798 = inttoptr i32 %v0_10006798 to i32*
  %v2_10006798 = load i32, i32* %v1_10006798, align 4
  %v1_1000679c = sub i32 20, %v2_10006790
  store i32 %v1_1000679c, i32* @r29, align 4
  store i32 268461988, i32* @lr, align 4
  %v1_100067a0 = inttoptr i32 %v2_10006798 to i8*
  %v2_100067a0 = call i32 @function_100095a4(i8* %v1_100067a0)
  %v0_100067a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100067a4 = load i32, i32* @r29, align 4
  %v2_100067a4 = urem i32 %v0_100067a4, %v1_100067a4
  %v2_100067a8 = sub i32 %v0_100067a4, %v2_100067a4
  store i32 %v2_100067a8, i32* %r0.global-to-local, align 4
  %v2_100067b0 = add i32 %v2_100067a4, %v2_100067a0
  store i32 %v2_10006720, i32* @r3, align 4
  store i32 %v2_100067b0, i32* @r4, align 4
  %v0_100067bc = load i32, i32* @r30, align 4
  %v2_100067bc = add i32 %v0_100067bc, %v2_100067b0
  store i32 %v2_100067bc, i32* @r28, align 4
  store i32 268462020, i32* @lr, align 4
  %v0_100067c0 = call i32 @function_10006e80()
  %v0_100067c4 = load i32, i32* @r26, align 4
  %v1_100067c4 = trunc i32 %v0_100067c4 to i8
  %v2_100067c4 = load i32, i32* @r28, align 4
  %v3_100067c4 = add i32 %v2_100067c4, 40
  %v4_100067c4 = inttoptr i32 %v3_100067c4 to i8*
  store i8 %v1_100067c4, i8* %v4_100067c4, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100067d8.115 to i32), i32* @lr, align 4
  %v2_100067d4 = call i32 @function_10009fd8(i32 15, i32 %v2_10006720)
  store i32 268462048, i32* @lr, align 4
  %v1_100067dc = call i32 @function_10008b98(i32 5)
  %v3_100067e8 = call i32 @function_10008ae4(i32 5, i32* nonnull %stack_var_-1620)
  %v3_100067ec = load i32, i32* %stack_var_-1620, align 4
  store i32 268462076, i32* @lr, align 4
  %v3_100067f8 = call i32 @function_1000a200(i32 1, i32 %v3_100067e8, i32 %v3_100067ec)
  store i32 ptrtoint ([3 x i8]* @global_var_10006810.117 to i32), i32* @lr, align 4
  %v3_1000680c = call i32 @function_1000a200(i32 1, i32 ptrtoint (i32* @global_var_1000c6a0.116 to i32), i32 1)
  store i32 268462104, i32* @lr, align 4
  %v1_10006814 = call i32 @function_10008b0c(i32 5)
  store i32 268462108, i32* @lr, align 4
  %v1_10006818 = call i32 @function_100021a4(i32 %v1_10006814)
  store i32 268462112, i32* @lr, align 4
  %v1_1000681c = call i32 @function_10005f6c(i32 %v1_10006818)
  store i32 ptrtoint (i32* @global_var_10006824.118 to i32), i32* @lr, align 4
  %v1_10006820 = call i32 @function_10006520(i32 %v1_1000681c)
  store i32 268462120, i32* @lr, align 4
  %v0_10006824 = call i32 @function_10009e30()
  %tmp48 = icmp slt i32 %v0_10006824, 1
  br i1 %tmp48, label %dec_label_pc_100068c0, label %dec_label_pc_10006830

dec_label_pc_10006830:                            ; preds = %dec_label_pc_1000671c
  store i32 %v0_10006618, i32* %r0.global-to-local, align 4
  store i32 %v0_1000666c, i32* @r17, align 4
  store i32 %v0_10006674, i32* @r19, align 4
  store i32 %v0_10006644, i32* @r22, align 4
  store i32 %v0_1000667c, i32* @r23, align 4
  store i32 %v0_1000664c, i32* @r24, align 4
  store i32 %v0_10006654, i32* @r25, align 4
  store i32 %v0_10006680, i32* @r26, align 4
  store i32 %v0_10006684, i32* @r27, align 4
  store i32 %v0_10006624, i32* @r28, align 4
  store i32 %v0_1000661c, i32* @r29, align 4
  store i32 %v0_10006688, i32* @r30, align 4
  store i32 %v0_1000665c, i32* @r31, align 4
  ret i32 0

dec_label_pc_10006888:                            ; preds = %dec_label_pc_100065fc
  %v0_10006888 = load i32, i32* @r31, align 4
  %v1_10006888 = add i32 %v0_10006888, 4
  %v2_10006888 = inttoptr i32 %v1_10006888 to i32*
  %v3_10006888 = load i32, i32* %v2_10006888, align 4
  store i32 268462224, i32* @lr, align 4
  %v1_1000688c = inttoptr i32 %v3_10006888 to i8*
  %v2_1000688c = call i32 @function_100095a4(i8* %v1_1000688c)
  %v2_10006890 = icmp sgt i32 %v2_1000688c, 31
  br i1 %v2_10006890, label %dec_label_pc_1000671c, label %dec_label_pc_10006898

dec_label_pc_10006898:                            ; preds = %dec_label_pc_10006888
  %v0_10006898 = load i32, i32* @r31, align 4
  %v1_10006898 = add i32 %v0_10006898, 4
  %v2_10006898 = inttoptr i32 %v1_10006898 to i32*
  %v3_10006898 = load i32, i32* %v2_10006898, align 4
  store i32 %v2_10006650, i32* @r3, align 4
  %v2_100068a0 = bitcast i32* %stack_var_-1552 to i8*
  %v3_100068a0 = call i32 @function_100095cc(i8* %v2_100068a0, i32 %v3_10006898)
  %v0_100068a4 = load i32, i32* @r31, align 4
  %v1_100068a4 = add i32 %v0_100068a4, 4
  %v2_100068a4 = inttoptr i32 %v1_100068a4 to i32*
  %v3_100068a4 = load i32, i32* %v2_100068a4, align 4
  store i32 %v3_100068a4, i32* %r29.global-to-local, align 4
  store i32 268462256, i32* @lr, align 4
  %v1_100068ac = inttoptr i32 %v3_100068a4 to i8*
  %v2_100068ac = call i32 @function_100095a4(i8* %v1_100068ac)
  store i32 %v2_100068ac, i32* @r4, align 4
  store i32 %v3_100068a4, i32* @r3, align 4
  store i32 268462268, i32* @lr, align 4
  %v0_100068b8 = call i32 @function_1000964c()
  br label %dec_label_pc_1000671c

dec_label_pc_100068c0:                            ; preds = %dec_label_pc_1000671c
  store i32 ptrtoint ([3 x i8]* @global_var_100068c4.119 to i32), i32* @lr, align 4
  %v1_100068c0 = call i32 @function_1000a0f8(i32 %v0_10006824)
  store i32 0, i32* @r19, align 4
  store i32 %v1_100068c0, i32* @r17, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100068d4.120 to i32), i32* @lr, align 4
  %v0_100068d0 = call i32 @function_10009de8()
  store i32 ptrtoint ([3 x i8]* @global_var_100068dc.121 to i32), i32* @lr, align 4
  %v0_100068d8 = call i32 @function_10009de8()
  store i32 268462308, i32* @lr, align 4
  %v0_100068e0 = call i32 @function_10009de8()
  %v2_100068e4 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_100068e4, i32* @r28, align 4
  store i32 268462316, i32* @lr, align 4
  %v1_100068e8 = call i32 @function_100021a4(i32 %v0_100068e0)
  %v2_100068ec = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_100068ec, i32* @r29, align 4
  store i32 268462324, i32* @lr, align 4
  %v1_100068f0 = call i32 @function_10005f6c(i32 %v1_100068e8)
  store i32 268462332, i32* @lr, align 4
  %v1_100068f8 = call i32 @function_10006520(i32 %v1_100068f0)
  store i32 268566528, i32* @r26, align 4
  store i32 268462340, i32* @lr, align 4
  %v1_10006900 = call i32 @function_10007268(i32 %v1_100068f8)
  %v2_10006908 = ptrtoint i32* %stack_var_-1608 to i32
  %v2_1000690c = ptrtoint i32* %stack_var_-1616 to i32
  %v2_10006d44 = ptrtoint i32* %stack_var_-1136 to i32
  %v2_10006c04 = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10006c9c = bitcast i32* %stack_var_-1552 to i8*
  %v2_10006c60 = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_10006910

dec_label_pc_10006910:                            ; preds = %dec_label_pc_10006d68, %dec_label_pc_10006d04, %dec_label_pc_10006cf8, %dec_label_pc_10006c98, %dec_label_pc_10006ae8, %dec_label_pc_10006ad8, %dec_label_pc_100069c8, %dec_label_pc_10006da8, %dec_label_pc_10006d9c, %dec_label_pc_10006d1c, %dec_label_pc_10006ce4, %dec_label_pc_10006c20, %dec_label_pc_10006b4c, %dec_label_pc_10006a9c, %dec_label_pc_100068c0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000692050 = load i32, i32* @r28, align 4
  %v4_1000692052 = inttoptr i32 %v2_1000692050 to i32*
  store i32 0, i32* %v4_1000692052, align 4
  %v0_1000692453 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000692454 = add i32 %v0_1000692453, 4
  store i32 %v1_1000692454, i32* %r9.global-to-local, align 4
  %v0_1000692855 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000692856 = add i32 %v0_1000692855, -1
  store i32 %v1_1000692856, i32* %ctr.global-to-local, align 4
  %v2_1000692857 = icmp eq i32 %v1_1000692856, 0
  br i1 %v2_1000692857, label %dec_label_pc_1000692c, label %dec_label_pc_10006920.dec_label_pc_10006920_crit_edge

dec_label_pc_10006920.dec_label_pc_10006920_crit_edge: ; preds = %dec_label_pc_10006910, %dec_label_pc_10006920.dec_label_pc_10006920_crit_edge
  %v1_1000692458 = phi i32 [ %v1_10006924, %dec_label_pc_10006920.dec_label_pc_10006920_crit_edge ], [ %v1_1000692454, %dec_label_pc_10006910 ]
  %v0_10006920.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006920 = load i32, i32* @r28, align 4
  %v3_10006920 = add i32 %v2_10006920, %v1_1000692458
  %v4_10006920 = inttoptr i32 %v3_10006920 to i32*
  store i32 %v0_10006920.pre, i32* %v4_10006920, align 4
  %v0_10006924 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006924 = add i32 %v0_10006924, 4
  store i32 %v1_10006924, i32* %r9.global-to-local, align 4
  %v0_10006928 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006928 = add i32 %v0_10006928, -1
  store i32 %v1_10006928, i32* %ctr.global-to-local, align 4
  %v2_10006928 = icmp eq i32 %v1_10006928, 0
  br i1 %v2_10006928, label %dec_label_pc_1000692c, label %dec_label_pc_10006920.dec_label_pc_10006920_crit_edge

dec_label_pc_1000692c:                            ; preds = %dec_label_pc_10006920.dec_label_pc_10006920_crit_edge, %dec_label_pc_10006910
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000693c59 = load i32, i32* @r29, align 4
  %v4_1000693c61 = inttoptr i32 %v2_1000693c59 to i32*
  store i32 0, i32* %v4_1000693c61, align 4
  %v0_1000694062 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000694063 = add i32 %v0_1000694062, 4
  store i32 %v1_1000694063, i32* %r9.global-to-local, align 4
  %v0_1000694464 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000694465 = add i32 %v0_1000694464, -1
  store i32 %v1_1000694465, i32* %ctr.global-to-local, align 4
  %v2_1000694466 = icmp eq i32 %v1_1000694465, 0
  br i1 %v2_1000694466, label %dec_label_pc_10006948, label %dec_label_pc_1000693c.dec_label_pc_1000693c_crit_edge

dec_label_pc_1000693c.dec_label_pc_1000693c_crit_edge: ; preds = %dec_label_pc_1000692c, %dec_label_pc_1000693c.dec_label_pc_1000693c_crit_edge
  %v1_1000694067 = phi i32 [ %v1_10006940, %dec_label_pc_1000693c.dec_label_pc_1000693c_crit_edge ], [ %v1_1000694063, %dec_label_pc_1000692c ]
  %v0_1000693c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_1000693c = load i32, i32* @r29, align 4
  %v3_1000693c = add i32 %v2_1000693c, %v1_1000694067
  %v4_1000693c = inttoptr i32 %v3_1000693c to i32*
  store i32 %v0_1000693c.pre, i32* %v4_1000693c, align 4
  %v0_10006940 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006940 = add i32 %v0_10006940, 4
  store i32 %v1_10006940, i32* %r9.global-to-local, align 4
  %v0_10006944 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006944 = add i32 %v0_10006944, -1
  store i32 %v1_10006944, i32* %ctr.global-to-local, align 4
  %v2_10006944 = icmp eq i32 %v1_10006944, 0
  br i1 %v2_10006944, label %dec_label_pc_10006948, label %dec_label_pc_1000693c.dec_label_pc_1000693c_crit_edge

dec_label_pc_10006948:                            ; preds = %dec_label_pc_1000693c.dec_label_pc_1000693c_crit_edge, %dec_label_pc_1000692c
  %v3_10006948 = load i32, i32* @global_var_1001d210.103, align 4
  %v3_1000694c = icmp eq i32 %v3_10006948, -1
  br i1 %v3_1000694c, label %dec_label_pc_10006974, label %dec_label_pc_10006954

dec_label_pc_10006954:                            ; preds = %dec_label_pc_10006948
  %v1_10006954 = call i32 @__asm_rlwinm(i32 %v3_10006948, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000695c = load i32, i32* @r30, align 4
  %v2_1000695c = add i32 %v1_1000695c, %v1_10006954
  %v1_10006960 = urem i32 %v3_10006948, 32
  %v1_10006964 = add i32 %v2_1000695c, 232
  %v2_10006964 = inttoptr i32 %v1_10006964 to i32*
  %v3_10006964 = load i32, i32* %v2_10006964, align 4
  %v3_10006968 = shl i32 1, %v1_10006960
  store i32 %v3_10006968, i32* %r0.global-to-local, align 4
  %v2_1000696c = or i32 %v3_10006964, %v3_10006968
  store i32 %v2_1000696c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000696c, i32* %v2_10006964, align 4
  br label %dec_label_pc_10006974

dec_label_pc_10006974:                            ; preds = %dec_label_pc_10006948, %dec_label_pc_10006954
  %v3_10006974 = load i32, i32* @global_var_1001d214.122, align 4
  store i32 %v3_10006974, i32* %r0.global-to-local, align 4
  %v3_1000697c = icmp eq i32 %v3_10006974, -1
  br i1 %v3_1000697c, label %dec_label_pc_10006b60, label %dec_label_pc_10006984

dec_label_pc_10006984:                            ; preds = %dec_label_pc_10006b60, %dec_label_pc_10006974, %dec_label_pc_10006bb8
  %v3_10006ab0 = phi i32 [ -1, %dec_label_pc_10006b60 ], [ %v3_10006974, %dec_label_pc_10006974 ], [ %v3_10006ab0.pre, %dec_label_pc_10006bb8 ]
  %v3_10006984 = load i8, i8* bitcast (i16* @global_var_1001d24c.123 to i8*), align 2
  %v3_10006988 = icmp eq i8 %v3_10006984, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006ab8 = call i32 @__asm_rlwinm(i32 %v3_10006ab0, i32 29, i32 3, i32 29)
  %v1_10006abc = urem i32 %v3_10006ab0, 32
  %v1_10006ac0 = load i32, i32* @r30, align 4
  %v2_10006ac0 = add i32 %v1_10006ac0, %v1_10006ab8
  %v0_10006ac4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006ac4 = shl i32 %v0_10006ac4, %v1_10006abc
  store i32 %v3_10006ac4, i32* %r0.global-to-local, align 4
  br i1 %v3_10006988, label %dec_label_pc_10006ab0, label %dec_label_pc_10006990

dec_label_pc_10006990:                            ; preds = %dec_label_pc_10006984
  %v1_100069a8 = add i32 %v2_10006ac0, 360
  %v2_100069a8 = inttoptr i32 %v1_100069a8 to i32*
  %v3_100069a8 = load i32, i32* %v2_100069a8, align 4
  %v2_100069ac = or i32 %v3_100069a8, %v3_10006ac4
  store i32 %v2_100069ac, i32* %r9.global-to-local, align 4
  store i32 %v2_100069ac, i32* %v2_100069a8, align 4
  br label %dec_label_pc_100069b4

dec_label_pc_100069b4:                            ; preds = %dec_label_pc_10006ab0, %dec_label_pc_10006990
  %v3_100069b4 = load i32, i32* @global_var_1001d214.122, align 4
  store i32 %v3_100069b4, i32* %r0.global-to-local, align 4
  %v3_100069b8 = load i32, i32* @global_var_1001d210.103, align 4
  %v2_100069bc = icmp slt i32 %v3_100069b8, %v3_100069b4
  br i1 %v2_100069bc, label %dec_label_pc_100069c4, label %dec_label_pc_100069c8

dec_label_pc_100069c4:                            ; preds = %dec_label_pc_100069b4
  br label %dec_label_pc_100069c8

dec_label_pc_100069c8:                            ; preds = %dec_label_pc_100069b4, %dec_label_pc_100069c4
  %v0_100069d0 = phi i32 [ %v3_100069b8, %dec_label_pc_100069b4 ], [ %v3_100069b4, %dec_label_pc_100069c4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100069d0 = add i32 %v0_100069d0, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268462576, i32* @lr, align 4
  %v5_100069ec = call i32 @function_1000a0b0(i32 %v1_100069d0, i32 %v2_100068e4, i32 %v2_100068ec, i32 0, i32 %v2_10006908)
  %v6_100069ec = trunc i32 %v5_100069ec to i16
  %v4_100069f0 = icmp eq i16 %v6_100069ec, -1
  br i1 %v4_100069f0, label %dec_label_pc_10006910, label %dec_label_pc_100069f8

dec_label_pc_100069f8:                            ; preds = %dec_label_pc_100069c8
  %v4_100069f8 = icmp eq i16 %v6_100069ec, 0
  br i1 %v4_100069f8, label %dec_label_pc_10006a00, label %dec_label_pc_10006a2c

dec_label_pc_10006a00:                            ; preds = %dec_label_pc_100069f8
  %v0_10006a04 = load i32, i32* @r19, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10006a14 = srem i32 %v0_10006a04, 6
  %v1_10006a18 = sub i32 %v0_10006a04, %v2_10006a14
  store i32 %v1_10006a18, i32* %r9.global-to-local, align 4
  store i32 %v2_10006a14, i32* %r0.global-to-local, align 4
  %v1_10006a20 = add i32 %v0_10006a04, 1
  store i32 %v1_10006a20, i32* @r19, align 4
  %v3_10006a24 = icmp eq i32 %v2_10006a14, 0
  br i1 %v3_10006a24, label %dec_label_pc_10006bd4, label %dec_label_pc_10006a2c

dec_label_pc_10006a2c:                            ; preds = %dec_label_pc_100069f8, %dec_label_pc_10006a00, %dec_label_pc_10006bd4
  %v3_10006a2c = load i32, i32* @global_var_1001d210.103, align 4
  %v3_10006a30 = icmp eq i32 %v3_10006a2c, -1
  br i1 %v3_10006a30, label %dec_label_pc_10006a54, label %dec_label_pc_10006a38

dec_label_pc_10006a38:                            ; preds = %dec_label_pc_10006a2c
  %v1_10006a38 = call i32 @__asm_rlwinm(i32 %v3_10006a2c, i32 29, i32 3, i32 29)
  %v1_10006a3c = urem i32 %v3_10006a2c, 32
  %v1_10006a40 = load i32, i32* @r30, align 4
  %v2_10006a40 = add i32 %v1_10006a40, %v1_10006a38
  store i32 %v2_10006a40, i32* %r9.global-to-local, align 4
  %v1_10006a44 = add i32 %v2_10006a40, 232
  %v2_10006a44 = inttoptr i32 %v1_10006a44 to i32*
  %v3_10006a44 = load i32, i32* %v2_10006a44, align 4
  %v3_10006a48 = lshr i32 %v3_10006a44, %v1_10006a3c
  store i32 %v3_10006a48, i32* %r0.global-to-local, align 4
  %v1_10006a4c = urem i32 %v3_10006a48, 2
  store i32 %v1_10006a4c, i32* %r9.global-to-local, align 4
  %v3_10006a4c = icmp eq i32 %v1_10006a4c, 0
  br i1 %v3_10006a4c, label %dec_label_pc_10006a54, label %dec_label_pc_10006c58

dec_label_pc_10006a54:                            ; preds = %dec_label_pc_10006a38, %dec_label_pc_10006a2c
  %v3_10006a54 = load i8, i8* bitcast (i16* @global_var_1001d24c.123 to i8*), align 2
  %v4_10006a54 = zext i8 %v3_10006a54 to i32
  store i32 %v4_10006a54, i32* @r31, align 4
  %v3_10006a58 = icmp eq i8 %v3_10006a54, 0
  %v3_10006ad8 = load i32, i32* @global_var_1001d214.122, align 4
  br i1 %v3_10006a58, label %dec_label_pc_10006ad8, label %dec_label_pc_10006a60

dec_label_pc_10006a60:                            ; preds = %dec_label_pc_10006a54
  store i32 268566528, i32* @r31, align 4
  %v1_10006a68 = call i32 @__asm_rlwinm(i32 %v3_10006ad8, i32 29, i32 3, i32 29)
  %v1_10006a6c = urem i32 %v3_10006ad8, 32
  %v1_10006a70 = load i32, i32* @r30, align 4
  %v2_10006a70 = add i32 %v1_10006a70, %v1_10006a68
  store i32 %v2_10006a70, i32* %r9.global-to-local, align 4
  %v1_10006a74 = add i32 %v2_10006a70, 360
  %v2_10006a74 = inttoptr i32 %v1_10006a74 to i32*
  %v3_10006a74 = load i32, i32* %v2_10006a74, align 4
  %v3_10006a78 = lshr i32 %v3_10006a74, %v1_10006a6c
  store i32 %v3_10006a78, i32* %r0.global-to-local, align 4
  %v1_10006a80 = urem i32 %v3_10006a78, 2
  %v3_10006a80 = icmp eq i32 %v1_10006a80, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001d24c.123 to i8*), align 2
  br i1 %v3_10006a80, label %dec_label_pc_10006a90, label %dec_label_pc_10006bf0

dec_label_pc_10006a90:                            ; preds = %dec_label_pc_10006a60
  %v3_10006a90 = icmp eq i32 %v3_10006ad8, -1
  br i1 %v3_10006a90, label %dec_label_pc_10006a9c, label %dec_label_pc_10006a98

dec_label_pc_10006a98:                            ; preds = %dec_label_pc_10006a90
  store i32 ptrtoint (i32* @global_var_10006a9c.124 to i32), i32* @lr, align 4
  %v0_10006a98 = call i32 @function_10009de8()
  br label %dec_label_pc_10006a9c

dec_label_pc_10006a9c:                            ; preds = %dec_label_pc_10006a90, %dec_label_pc_10006a98
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001d214.122, align 4
  store i32 268462764, i32* @lr, align 4
  %v1_10006aa8 = call i32 @function_1000b420(i32 1)
  br label %dec_label_pc_10006910

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006984
  %v1_10006ac8 = add i32 %v2_10006ac0, 232
  %v2_10006ac8 = inttoptr i32 %v1_10006ac8 to i32*
  %v3_10006ac8 = load i32, i32* %v2_10006ac8, align 4
  %v2_10006acc = or i32 %v3_10006ac8, %v3_10006ac4
  store i32 %v2_10006acc, i32* %r9.global-to-local, align 4
  store i32 %v2_10006acc, i32* %v2_10006ac8, align 4
  br label %dec_label_pc_100069b4

dec_label_pc_10006ad8:                            ; preds = %dec_label_pc_10006a54
  %v3_10006ae0 = icmp eq i32 %v3_10006ad8, -1
  br i1 %v3_10006ae0, label %dec_label_pc_10006910, label %dec_label_pc_10006ae8

dec_label_pc_10006ae8:                            ; preds = %dec_label_pc_10006ad8
  %v1_10006ae8 = call i32 @__asm_rlwinm(i32 %v3_10006ad8, i32 29, i32 3, i32 29)
  %v1_10006aec = urem i32 %v3_10006ad8, 32
  %v1_10006af0 = load i32, i32* @r30, align 4
  %v2_10006af0 = add i32 %v1_10006af0, %v1_10006ae8
  store i32 %v2_10006af0, i32* %r9.global-to-local, align 4
  %v1_10006af4 = add i32 %v2_10006af0, 232
  %v2_10006af4 = inttoptr i32 %v1_10006af4 to i32*
  %v3_10006af4 = load i32, i32* %v2_10006af4, align 4
  %v3_10006af8 = lshr i32 %v3_10006af4, %v1_10006aec
  store i32 %v3_10006af8, i32* %r0.global-to-local, align 4
  %v1_10006afc = urem i32 %v3_10006af8, 2
  store i32 %v1_10006afc, i32* %r9.global-to-local, align 4
  %v3_10006afc = icmp eq i32 %v1_10006afc, 0
  br i1 %v3_10006afc, label %dec_label_pc_10006910, label %dec_label_pc_10006b04

dec_label_pc_10006b04:                            ; preds = %dec_label_pc_10006ae8
  %v0_10006b04 = load i32, i32* @r31, align 4
  %v6_10006b04 = trunc i32 %v0_10006b04 to i16
  store i16 %v6_10006b04, i16* %stack_var_-1624, align 2
  %v0_10006b08 = call i32 @function_1000a4bc()
  %v0_10006b0c = load i32, i32* @r31, align 4
  %v2_10006b0c = inttoptr i32 %v0_10006b08 to i32*
  store i32 %v0_10006b0c, i32* %v2_10006b0c, align 4
  store i32 %v0_10006b08, i32* @r23, align 4
  %v3_10006b1c = load i32, i32* @global_var_1001d214.122, align 4
  store i32 268462888, i32* @lr, align 4
  %v4_10006b24 = call i32 @function_1000a9c4(i32 %v3_10006b1c, i32 %v2_1000672c, i32 2, i32 16386)
  %v3_10006b28 = icmp eq i32 %v4_10006b24, -1
  br i1 %v3_10006b28, label %dec_label_pc_10006cf8, label %dec_label_pc_10006b30

dec_label_pc_10006b30:                            ; preds = %dec_label_pc_10006b04
  %v3_10006b30 = icmp eq i32 %v4_10006b24, 0
  br i1 %v3_10006b30, label %dec_label_pc_10006d0c, label %dec_label_pc_10006b38

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006b30
  %v3_10006b38 = load i16, i16* %stack_var_-1624, align 2
  %v4_10006b38 = sext i16 %v3_10006b38 to i32
  %v4_10006b3c = icmp eq i16 %v3_10006b38, 0
  br i1 %v4_10006b3c, label %dec_label_pc_10006da8, label %dec_label_pc_10006b44

dec_label_pc_10006b44:                            ; preds = %dec_label_pc_10006b38
  %tmp49 = icmp ult i16 %v3_10006b38, 1025
  br i1 %tmp49, label %dec_label_pc_10006d40, label %dec_label_pc_10006b4c

dec_label_pc_10006b4c:                            ; preds = %dec_label_pc_10006b44
  store i32 ptrtoint (i32* @global_var_10006b54.125 to i32), i32* @lr, align 4
  %v0_10006b50 = call i32 @function_10009de8()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001d214.122, align 4
  br label %dec_label_pc_10006910

dec_label_pc_10006b60:                            ; preds = %dec_label_pc_10006974
  store i32 268462960, i32* @lr, align 4
  %v3_10006b6c = call i32 @function_1000aaf0(i32 2, i32 1, i32 0)
  %v3_10006b70 = icmp eq i32 %v3_10006b6c, -1
  store i32 %v3_10006b6c, i32* @r31, align 4
  store i32 %v3_10006b6c, i32* @global_var_1001d214.122, align 4
  br i1 %v3_10006b70, label %dec_label_pc_10006984, label %dec_label_pc_10006b80

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_10006b60
  store i32 3, i32* @r4, align 4
  store i32 268462992, i32* @lr, align 4
  %v1_10006b8c = call i32 @function_10009d00(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10006b98 = load i32, i32* @r31, align 4
  store i32 268463012, i32* @lr, align 4
  %v2_10006ba0 = call i32 @function_10009d00(i32 %v0_10006b98)
  %v3_10006ba4 = load i32, i32* @global_var_1001d218.98, align 4
  store i32 %v3_10006ba4, i32* %r0.global-to-local, align 4
  %v3_10006ba8 = icmp eq i32 %v3_10006ba4, 0
  br i1 %v3_10006ba8, label %dec_label_pc_10006bb8, label %dec_label_pc_10006bb0

dec_label_pc_10006bb0:                            ; preds = %dec_label_pc_10006b80
  store i32 %v3_10006ba4, i32* %ctr.global-to-local, align 4
  store i32 268463032, i32* @lr, align 4
  %v2_10006bb4 = call i32 @function_100098a8(i32 %v2_10006ba0)
  br label %dec_label_pc_10006bb8

dec_label_pc_10006bb8:                            ; preds = %dec_label_pc_10006b80, %dec_label_pc_10006bb0
  %v3_10006bb8 = load i32, i32* @global_var_1001d214.122, align 4
  store i32 %v3_10006bb8, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001d24c.123 to i8*), align 2
  store i32 268463056, i32* @lr, align 4
  %v0_10006bcc = call i32 @function_1000a8f0()
  %v3_10006ab0.pre = load i32, i32* @global_var_1001d214.122, align 4
  br label %dec_label_pc_10006984

dec_label_pc_10006bd4:                            ; preds = %dec_label_pc_10006a00
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006bdc = load i32, i32* @global_var_1001d214.122, align 4
  store i32 268463084, i32* @lr, align 4
  %v4_10006be8 = call i32 @function_1000aa3c(i32 %v3_10006bdc, i32 %v2_1000672c, i32 2, i32 16384)
  br label %dec_label_pc_10006a2c

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006a60
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268463124, i32* @lr, align 4
  %v5_10006c10 = call i32 @function_1000a958(i32 1, i32 4, i32 %v2_1000690c, i32 %v2_10006c04, i32 4)
  %v3_10006c14 = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10006c14, i32* %r0.global-to-local, align 4
  %v3_10006c18 = icmp eq i32 %v3_10006c14, 0
  br i1 %v3_10006c18, label %dec_label_pc_10006c98, label %dec_label_pc_10006c20

dec_label_pc_10006c20:                            ; preds = %dec_label_pc_10006bf0
  store i32 ptrtoint (i32* @global_var_10006c28.126 to i32), i32* @lr, align 4
  %v0_10006c24 = call i32 @function_10009de8()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001d214.122, align 4
  %v0_10006c30 = call i32 @function_10006dc0()
  %v1_10006c30 = sext i32 %v0_10006c30 to i64
  %v5_10006c3c = mul nuw nsw i64 %v1_10006c30, 3435973837
  %v1_10006c402 = udiv i64 %v5_10006c3c, 34359738368
  %v1_10006c40 = trunc i64 %v1_10006c402 to i32
  %v1_10006c44 = mul i32 %v1_10006c40, 10
  store i32 %v1_10006c44, i32* %r0.global-to-local, align 4
  %v3_10006c48 = sub i32 %v0_10006c30, %v1_10006c44
  %v1_10006c4c = add i32 %v3_10006c48, 1
  store i32 268463188, i32* @lr, align 4
  %v1_10006c50 = call i32 @function_1000b420(i32 %v1_10006c4c)
  br label %dec_label_pc_10006910

dec_label_pc_10006c58:                            ; preds = %dec_label_pc_10006a38
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_10006c6c.128 to i32), i32* @lr, align 4
  %v3_10006c68 = call i32 @function_1000a888(i32 %v2_10006c60, i32 %v2_1000690c, i32 %v1_10006a4c)
  store i32 268463216, i32* @lr, align 4
  %v1_10006c6c = call i32 @function_10006f94(i32 %v3_10006c68)
  store i32 ptrtoint ([3 x i8]* @global_var_10006c74.129 to i32), i32* @lr, align 4
  %v1_10006c70 = call i32 @function_10005930(i32 %v1_10006c6c)
  %v0_10006c74 = load i32, i32* @r17, align 4
  %v1_10006c74 = sub i32 0, %v0_10006c74
  store i32 268463232, i32* @lr, align 4
  %v2_10006c7c = call i32 @function_10009f08(i32 %v1_10006c74, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006c84 = load i32, i32* @global_var_1001d248.106, align 4
  %v3_10006c88 = icmp eq i32 %v3_10006c84, 0
  br i1 %v3_10006c88, label %dec_label_pc_10006c90, label %dec_label_pc_10006d34

dec_label_pc_10006c90:                            ; preds = %dec_label_pc_10006c58, %dec_label_pc_10006d34
  %v0_10006c94 = call i32 @function_1000b39c()
  br label %dec_label_pc_10006c98

dec_label_pc_10006c98:                            ; preds = %dec_label_pc_10006bf0, %dec_label_pc_10006c90
  store i32 268463264, i32* @lr, align 4
  %v2_10006c9c = call i32 @function_100095a4(i8* %v1_10006c9c)
  %v3_10006c9c = trunc i32 %v2_10006c9c to i8
  %v7_10006ca0 = sext i8 %v3_10006c9c to i16
  store i16 %v7_10006ca0, i16* %stack_var_-1624, align 2
  store i32 268463272, i32* @lr, align 4
  %v2_10006ca4 = call i32 @function_100098a8(i32 %v2_10006c9c)
  store i32 %v2_10006ca4, i32* @global_var_1001d230.61, align 4
  %v0_10006cb0 = load i32, i32* @r31, align 4
  %v1_10006cb0 = add i32 %v0_10006cb0, -11756
  %v2_10006cb0 = inttoptr i32 %v1_10006cb0 to i32*
  %v3_10006cb0 = load i32, i32* %v2_10006cb0, align 4
  store i32 268463300, i32* @lr, align 4
  %v4_10006cc0 = call i32 @function_1000aa3c(i32 %v3_10006cb0, i32 ptrtoint (i32* @global_var_1000c6a4.130 to i32), i32 4, i32 16384)
  %v0_10006cc4 = load i32, i32* @r31, align 4
  %v1_10006cc4 = add i32 %v0_10006cc4, -11756
  %v2_10006cc4 = inttoptr i32 %v1_10006cc4 to i32*
  %v3_10006cc4 = load i32, i32* %v2_10006cc4, align 4
  store i32 268463320, i32* @lr, align 4
  %v4_10006cd4 = call i32 @function_1000aa3c(i32 %v3_10006cc4, i32 %v2_1000672c, i32 1, i32 16384)
  %v3_10006cd8 = load i16, i16* %stack_var_-1624, align 2
  %v4_10006cdc = icmp eq i16 %v3_10006cd8, 0
  br i1 %v4_10006cdc, label %dec_label_pc_10006910, label %dec_label_pc_10006ce4

dec_label_pc_10006ce4:                            ; preds = %dec_label_pc_10006c98
  %v4_10006cd8 = sext i16 %v3_10006cd8 to i32
  %v0_10006ce4 = load i32, i32* @r31, align 4
  %v1_10006ce4 = add i32 %v0_10006ce4, -11756
  %v2_10006ce4 = inttoptr i32 %v1_10006ce4 to i32*
  %v3_10006ce4 = load i32, i32* %v2_10006ce4, align 4
  store i32 268463348, i32* @lr, align 4
  %v5_10006cf0 = call i32 @function_1000aa3c(i32 %v3_10006ce4, i32 %v2_10006650, i32 %v4_10006cd8, i32 16384)
  br label %dec_label_pc_10006910

dec_label_pc_10006cf8:                            ; preds = %dec_label_pc_10006d40, %dec_label_pc_10006b04
  %v0_10006cf8 = load i32, i32* @r23, align 4
  %v1_10006cf8 = inttoptr i32 %v0_10006cf8 to i32*
  %v2_10006cf8 = load i32, i32* %v1_10006cf8, align 4
  %v3_10006cfc = icmp eq i32 %v2_10006cf8, 11
  br i1 %v3_10006cfc, label %dec_label_pc_10006910, label %dec_label_pc_10006d04

dec_label_pc_10006d04:                            ; preds = %dec_label_pc_10006cf8
  %v3_10006d04 = icmp eq i32 %v2_10006cf8, 4
  br i1 %v3_10006d04, label %dec_label_pc_10006910, label %dec_label_pc_10006d0c

dec_label_pc_10006d0c:                            ; preds = %dec_label_pc_10006d60, %dec_label_pc_10006d04, %dec_label_pc_10006b30
  %v3_10006d0c = load i32, i32* @global_var_1001d214.122, align 4
  %v3_10006d10 = icmp eq i32 %v3_10006d0c, -1
  br i1 %v3_10006d10, label %dec_label_pc_10006d1c, label %dec_label_pc_10006d18

dec_label_pc_10006d18:                            ; preds = %dec_label_pc_10006d0c
  store i32 ptrtoint (i32* @global_var_10006d1c.131 to i32), i32* @lr, align 4
  %v0_10006d18 = call i32 @function_10009de8()
  br label %dec_label_pc_10006d1c

dec_label_pc_10006d1c:                            ; preds = %dec_label_pc_10006d0c, %dec_label_pc_10006d18
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001d214.122, align 4
  store i32 268463408, i32* @lr, align 4
  %v1_10006d2c = call i32 @function_1000b420(i32 1)
  br label %dec_label_pc_10006910

dec_label_pc_10006d34:                            ; preds = %dec_label_pc_10006c58
  store i32 268463420, i32* @lr, align 4
  %v2_10006d38 = call i32 @function_10009f08(i32 %v3_10006c84, i32 9)
  br label %dec_label_pc_10006c90

dec_label_pc_10006d40:                            ; preds = %dec_label_pc_10006b44
  %v0_10006d40 = load i32, i32* @r31, align 4
  %v1_10006d40 = load i32, i32* @r23, align 4
  %v2_10006d40 = inttoptr i32 %v1_10006d40 to i32*
  store i32 %v0_10006d40, i32* %v2_10006d40, align 4
  store i32 %v2_10006d44, i32* @r31, align 4
  %v3_10006d50 = load i32, i32* @global_var_1001d214.122, align 4
  store i32 268463448, i32* @lr, align 4
  %v5_10006d54 = call i32 @function_1000a9c4(i32 %v3_10006d50, i32 %v2_10006d44, i32 %v4_10006b38, i32 16386)
  %v3_10006d58 = icmp eq i32 %v5_10006d54, -1
  br i1 %v3_10006d58, label %dec_label_pc_10006cf8, label %dec_label_pc_10006d60

dec_label_pc_10006d60:                            ; preds = %dec_label_pc_10006d40
  %v3_10006d60 = icmp eq i32 %v5_10006d54, 0
  br i1 %v3_10006d60, label %dec_label_pc_10006d0c, label %dec_label_pc_10006d68

dec_label_pc_10006d68:                            ; preds = %dec_label_pc_10006d60
  %v3_10006d68 = load i32, i32* @global_var_1001d214.122, align 4
  store i32 268463484, i32* @lr, align 4
  %v4_10006d78 = call i32 @function_1000a9c4(i32 %v3_10006d68, i32 %v2_1000672c, i32 2, i32 16384)
  %v3_10006d7c = load i32, i32* @global_var_1001d214.122, align 4
  %v3_10006d80 = load i16, i16* %stack_var_-1624, align 2
  %v4_10006d80 = sext i16 %v3_10006d80 to i32
  store i32 268463504, i32* @lr, align 4
  %v5_10006d8c = call i32 @function_1000a9c4(i32 %v3_10006d7c, i32 %v2_10006d44, i32 %v4_10006d80, i32 16384)
  %v3_10006d90 = load i16, i16* %stack_var_-1624, align 2
  %v4_10006d94 = icmp eq i16 %v3_10006d90, 0
  br i1 %v4_10006d94, label %dec_label_pc_10006910, label %dec_label_pc_10006d9c

dec_label_pc_10006d9c:                            ; preds = %dec_label_pc_10006d68
  %v4_10006d90 = sext i16 %v3_10006d90 to i32
  store i32 268463524, i32* @lr, align 4
  %v3_10006da0 = call i32 @function_10001e9c(i32 %v2_10006d44, i32 %v4_10006d90)
  br label %dec_label_pc_10006910

dec_label_pc_10006da8:                            ; preds = %dec_label_pc_10006b38
  %v3_10006da8 = load i32, i32* @global_var_1001d214.122, align 4
  store i32 268463548, i32* @lr, align 4
  %v4_10006db8 = call i32 @function_1000a9c4(i32 %v3_10006da8, i32 %v2_1000672c, i32 2, i32 16384)
  br label %dec_label_pc_10006910

; uselistorder directives
  uselistorder i16 %v3_10006d90, { 1, 0 }
  uselistorder i16 %v3_10006cd8, { 1, 0 }
  uselistorder i32 %v3_10006b6c, { 1, 0, 2 }
  uselistorder i32 %v1_10006afc, { 1, 0 }
  uselistorder i32 %v3_10006ad8, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10006a4c, { 2, 1, 0 }
  uselistorder i32 %v2_10006a14, { 1, 0, 2 }
  uselistorder i32 %v0_10006a04, { 2, 0, 1 }
  uselistorder i32 %v2_10006ac0, { 1, 0 }
  uselistorder i32 %v1_10006944, { 1, 0 }
  uselistorder i32 %v1_10006940, { 1, 0 }
  uselistorder i32 %v1_10006928, { 1, 0 }
  uselistorder i32 %v1_10006924, { 1, 0 }
  uselistorder i32 %v2_10006d44, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1000690c, { 1, 0 }
  uselistorder i32 %v2_1000672c, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_100066c8, { 1, 0 }
  uselistorder i32 %v2_10006620, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_100065ec, { 1, 2, 0 }
  uselistorder i32 %v0_10006530, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 27, 16, 17, 18, 24, 25, 19, 20, 21, 22, 23 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i8* bitcast (i16* @global_var_1001d24c.123 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001d214.122, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_10006520, { 1, 0 }
  uselistorder i32 (i32)* @function_10005f6c, { 1, 0 }
  uselistorder i32 (i32)* @function_100021a4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a200, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_100095cc, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 50, 51, 52, 53, 54, 55, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 ()* @function_10006e80, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10006338, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000ab9c, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b420, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 60, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10006d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10006c98, { 1, 0 }
  uselistorder label %dec_label_pc_10006c90, { 1, 0 }
  uselistorder label %dec_label_pc_10006bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10006a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10006a2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100069c8, { 1, 0 }
  uselistorder label %dec_label_pc_10006984, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006974, { 1, 0 }
  uselistorder label %dec_label_pc_1000693c.dec_label_pc_1000693c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006920.dec_label_pc_10006920_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006910, { 7, 8, 0, 9, 1, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_1000671c, { 2, 0, 1 }
}

define i32 @function_10006dc0() local_unnamed_addr {
dec_label_pc_10006dc0:
  %v3_10006dc8 = load i32, i32* @global_var_1001d2cc.132, align 4
  %v3_10006dd0 = load i32, i32* @global_var_1001d2c0.133, align 4
  %v1_10006dd8 = udiv i32 %v3_10006dc8, 524288
  %v3_10006ddc = load i32, i32* @global_var_1001d2c8.134, align 4
  %v1_10006de0 = mul i32 %v3_10006dd0, 2048
  %v2_10006de4 = xor i32 %v1_10006dd8, %v3_10006dc8
  %v2_10006de8 = xor i32 %v1_10006de0, %v3_10006dd0
  %v3_10006dec = load i32, i32* @global_var_1001d2c4.135, align 4
  %v2_10006df0 = xor i32 %v2_10006de4, %v2_10006de8
  %v1_10006df4 = udiv i32 %v2_10006de8, 256
  %v2_10006df8 = xor i32 %v2_10006df0, %v1_10006df4
  store i32 %v3_10006dec, i32* @global_var_1001d2c0.133, align 4
  store i32 %v3_10006ddc, i32* @global_var_1001d2c4.135, align 4
  store i32 %v3_10006dc8, i32* @global_var_1001d2c8.134, align 4
  store i32 %v2_10006df8, i32* @global_var_1001d2cc.132, align 4
  ret i32 %v2_10006df8

; uselistorder directives
  uselistorder i32 %v2_10006df8, { 1, 0 }
  uselistorder i32 %v3_10006dd0, { 1, 0 }
  uselistorder i32 %v3_10006dc8, { 2, 1, 0 }
}

define i32 @function_10006e10(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006e10:
  store i32 268463664, i32* @lr, align 4
  %v0_10006e2c = call i32 @function_1000a1b8()
  store i32 %v0_10006e2c, i32* @global_var_1001d2c0.133, align 4
  store i32 268463676, i32* @lr, align 4
  %v0_10006e38 = call i32 @function_10009e78()
  store i32 268463684, i32* @lr, align 4
  %v0_10006e40 = call i32 @function_10009ec0()
  %v2_10006e44 = xor i32 %v0_10006e38, %v0_10006e40
  store i32 %v2_10006e44, i32* @global_var_1001d2c4.135, align 4
  store i32 268463696, i32* @lr, align 4
  %v1_10006e4c = call i32 @function_1000a4c8(i32 %v0_10006e40)
  %v3_10006e50 = load i32, i32* @global_var_1001d2c4.135, align 4
  %v2_10006e60 = xor i32 %v3_10006e50, %v1_10006e4c
  store i32 %v2_10006e60, i32* @global_var_1001d2cc.132, align 4
  store i32 %v1_10006e4c, i32* @global_var_1001d2c8.134, align 4
  ret i32 %v1_10006e4c

; uselistorder directives
  uselistorder i32 %v1_10006e4c, { 2, 1, 0 }
  uselistorder i32 %v0_10006e40, { 1, 0 }
}

define i32 @function_10006e80() local_unnamed_addr {
dec_label_pc_10006e80:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10006e8c = load i32, i32* @r3, align 4
  store i32 %v0_10006e8c, i32* %r31.global-to-local, align 4
  %v2_10006e9c = ptrtoint i32* %stack_var_-72 to i32
  %v0_10006ea4 = load i32, i32* @r4, align 4
  store i32 268463808, i32* @lr, align 4
  %v1_10006ebc = call i32 @function_10008b98(i32 61)
  %v3_10006ec8 = call i32 @function_10008ae4(i32 61, i32* null)
  %v2_10006ed4 = inttoptr i32 %v3_10006ec8 to i8*
  %v3_10006ed4 = call i32 @function_1000a634(i32 %v2_10006e9c, i8* %v2_10006ed4)
  %v3_10006ed8 = icmp eq i32 %v0_10006ea4, 0
  br i1 %v3_10006ed8, label %dec_label_pc_10006f5c, label %dec_label_pc_10006ee0

dec_label_pc_10006ee0:                            ; preds = %dec_label_pc_10006e80
  %v1_10006ee0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006ee0 = add i32 %v1_10006ee0, %v0_10006ea4
  store i32 %v2_10006ee0, i32* %r26.global-to-local, align 4
  %v1_10006f34 = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10006ef4

dec_label_pc_10006ef4:                            ; preds = %dec_label_pc_10006ef4, %dec_label_pc_10006ee0
  %v3_10006ef4 = load i32, i32* @global_var_1001d2cc.132, align 4
  %v3_10006efc = load i32, i32* @global_var_1001d2c0.133, align 4
  %v1_10006f00 = udiv i32 %v3_10006ef4, 524288
  %v3_10006f04 = load i32, i32* @global_var_1001d2c8.134, align 4
  %v1_10006f08 = mul i32 %v3_10006efc, 2048
  %v2_10006f0c = xor i32 %v1_10006f00, %v3_10006ef4
  %v2_10006f10 = xor i32 %v1_10006f08, %v3_10006efc
  %v3_10006f14 = load i32, i32* @global_var_1001d2c4.135, align 4
  %v2_10006f18 = xor i32 %v2_10006f0c, %v2_10006f10
  %v1_10006f1c = udiv i32 %v2_10006f10, 256
  %v2_10006f20 = xor i32 %v2_10006f18, %v1_10006f1c
  store i32 %v2_10006f20, i32* %r29.global-to-local, align 4
  store i32 %v3_10006f14, i32* @global_var_1001d2c0.133, align 4
  store i32 %v2_10006f20, i32* @global_var_1001d2cc.132, align 4
  store i32 %v3_10006f04, i32* @global_var_1001d2c4.135, align 4
  store i32 %v3_10006ef4, i32* @global_var_1001d2c8.134, align 4
  store i32 268463928, i32* @lr, align 4
  %v2_10006f34 = call i32 @function_100095a4(i8* %v1_10006f34)
  %v0_10006f38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10006f38 = urem i32 %v0_10006f38, %v2_10006f34
  store i32 %v2_10006f38, i32* %r29.global-to-local, align 4
  %v0_10006f44 = load i32, i32* @r1, align 4
  %v2_10006f44 = add i32 %v0_10006f44, %v2_10006f38
  %v1_10006f48 = add i32 %v2_10006f44, 8
  %v2_10006f48 = inttoptr i32 %v1_10006f48 to i8*
  %v3_10006f48 = load i8, i8* %v2_10006f48, align 1
  %v2_10006f4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10006f4c = inttoptr i32 %v2_10006f4c to i8*
  store i8 %v3_10006f48, i8* %v3_10006f4c, align 1
  %v0_10006f50 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006f50 = add i32 %v0_10006f50, 1
  store i32 %v1_10006f50, i32* %r31.global-to-local, align 4
  %v1_10006f54 = load i32, i32* %r26.global-to-local, align 4
  %v4_10006f54 = icmp eq i32 %v1_10006f50, %v1_10006f54
  br i1 %v4_10006f54, label %dec_label_pc_10006f5c, label %dec_label_pc_10006ef4

dec_label_pc_10006f5c:                            ; preds = %dec_label_pc_10006ef4, %dec_label_pc_10006e80
  store i32 268463972, i32* @lr, align 4
  %v1_10006f60 = call i32 @function_10008b0c(i32 61)
  ret i32 %v1_10006f60

; uselistorder directives
  uselistorder i32 %v3_10006efc, { 1, 0 }
  uselistorder i32 %v3_10006ef4, { 2, 1, 0 }
  uselistorder i32 %v0_10006ea4, { 1, 0 }
  uselistorder i32 (i32)* @function_10008b0c, { 4, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_10008ae4, { 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 (i32)* @function_10008b98, { 15, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 61, { 1, 2, 0 }
}

define i32 @function_10006f94(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006f94:
  %v3_10006fa8 = load i32, i32* @global_var_1001d268.136, align 4
  store i32 268464048, i32* @lr, align 4
  %v2_10006fac = call i32 @function_10009f08(i32 %v3_10006fa8, i32 9)
  ret i32 %v2_10006fac
}

define i32 @function_10006fc0() local_unnamed_addr {
dec_label_pc_10006fc0:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006fc8 = load i32, i32* @r31, align 4
  %v0_10006fcc = load i32, i32* @r3, align 4
  store i32 %v0_10006fcc, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10006fdc = add i32 %v0_10006fcc, 4
  %v2_10006fdc = inttoptr i32 %v1_10006fdc to i32*
  %v3_10006fdc = load i32, i32* %v2_10006fdc, align 4
  %v3_10006fe4 = icmp eq i32 %v3_10006fdc, -1
  br i1 %v3_10006fe4, label %dec_label_pc_10006ffc, label %dec_label_pc_10006ff8

dec_label_pc_10006ff8:                            ; preds = %dec_label_pc_10006fc0
  store i32 268464124, i32* @lr, align 4
  %v0_10006ff8 = call i32 @function_10009de8()
  br label %dec_label_pc_10006ffc

dec_label_pc_10006ffc:                            ; preds = %dec_label_pc_10006fc0, %dec_label_pc_10006ff8
  store i32 268464140, i32* @lr, align 4
  %v3_10007008 = call i32 @function_1000aaf0(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10007014 = load i32, i32* @r31, align 4
  %v1_10007014 = add i32 %v0_10007014, 28
  store i32 %v1_10007014, i32* @r3, align 4
  %v3_10007018 = icmp eq i32 %v3_10007008, -1
  %v2_1000701c = add i32 %v0_10007014, 4
  %v3_1000701c = inttoptr i32 %v2_1000701c to i32*
  store i32 %v3_10007008, i32* %v3_1000701c, align 4
  br i1 %v3_10007018, label %dec_label_pc_10006ffc.dec_label_pc_10007094_crit_edge, label %dec_label_pc_10007024

dec_label_pc_10006ffc.dec_label_pc_10007094_crit_edge: ; preds = %dec_label_pc_10006ffc
  %v0_100070a8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007094

dec_label_pc_10007024:                            ; preds = %dec_label_pc_10006ffc
  %v0_10007024 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007024 = load i32, i32* @r31, align 4
  %v2_10007024 = add i32 %v1_10007024, 24
  %v3_10007024 = inttoptr i32 %v2_10007024 to i32*
  store i32 %v0_10007024, i32* %v3_10007024, align 4
  store i32 268464172, i32* @lr, align 4
  %v0_10007028 = call i32 @function_1000964c()
  %v0_1000702c = load i32, i32* @r31, align 4
  %v1_1000702c = add i32 %v0_1000702c, 4
  %v2_1000702c = inttoptr i32 %v1_1000702c to i32*
  %v3_1000702c = load i32, i32* %v2_1000702c, align 4
  store i32 %v3_1000702c, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268464196, i32* @lr, align 4
  %v2_10007040 = call i32 @function_10009d00(i32 %v3_1000702c)
  store i32 4, i32* @r4, align 4
  store i32 268464216, i32* @lr, align 4
  %v2_10007054 = call i32 @function_10009d00(i32 %v3_1000702c)
  %v3_1000705c = load i32, i32* @global_var_1001d25c.137, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10007064 = load i32, i32* @r31, align 4
  %v2_1000706c = add i32 %v0_10007064, 8
  %v3_1000706c = inttoptr i32 %v2_1000706c to i32*
  store i32 %v3_1000705c, i32* %v3_1000706c, align 4
  %v0_10007074 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007074 = load i32, i32* @r31, align 4
  %v2_10007074 = add i32 %v1_10007074, 12
  %v3_10007074 = inttoptr i32 %v2_10007074 to i32*
  store i32 %v0_10007074, i32* %v3_10007074, align 4
  %v0_1000707c = load i32, i32* @r31, align 4
  %v1_1000707c = add i32 %v0_1000707c, 4
  %v2_1000707c = inttoptr i32 %v1_1000707c to i32*
  %v3_1000707c = load i32, i32* %v2_1000707c, align 4
  store i32 %v3_1000707c, i32* @r3, align 4
  %v1_10007080 = add i32 %v0_1000707c, 16
  %v2_10007080 = inttoptr i32 %v1_10007080 to i32*
  %v3_10007080 = load i32, i32* %v2_10007080, align 4
  store i32 %v3_10007080, i32* %r9.global-to-local, align 4
  store i32 268464276, i32* @lr, align 4
  %v0_10007090 = call i32 @function_1000a8f0()
  br label %dec_label_pc_10007094

dec_label_pc_10007094:                            ; preds = %dec_label_pc_10006ffc.dec_label_pc_10007094_crit_edge, %dec_label_pc_10007024
  %v0_100070a8 = phi i32 [ %v0_100070a8.pre, %dec_label_pc_10006ffc.dec_label_pc_10007094_crit_edge ], [ %v0_10007090, %dec_label_pc_10007024 ]
  store i32 %v0_10006fc8, i32* @r31, align 4
  ret i32 %v0_100070a8

; uselistorder directives
  uselistorder i32 ()* @function_1000964c, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007094, { 1, 0 }
  uselistorder label %dec_label_pc_10006ffc, { 1, 0 }
}

define i32 @function_100070ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100070ac:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100070b0 = load i32, i32* @lr, align 4
  store i32 %v0_100070b0, i32* %r0.global-to-local, align 4
  %v3_100070bc = load i32, i32* @global_var_1001d250.138, align 4
  %v1_100070c8 = mul i32 %v3_100070bc, 16
  store i32 %v1_100070c8, i32* %r9.global-to-local, align 4
  %v0_100070cc = load i32, i32* @r28, align 4
  %v3_100070d4 = load i32, i32* @global_var_1001d254.139, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_100070e0 = add i32 %v1_100070c8, 16
  %v0_100070f8 = load i32, i32* @r29, align 4
  %v0_100070fc = load i32, i32* @r30, align 4
  store i32 268464392, i32* @lr, align 4
  %v3_10007104 = call i32 @function_1000afbc(i32 %v3_100070d4, i32 %v1_100070e0, i32 %v1_100070c8)
  store i32 %v3_10007104, i32* %r25.global-to-local, align 4
  %v0_1000710c = load i32, i32* @r28, align 4
  store i32 %v3_10007104, i32* @global_var_1001d254.139, align 4
  %v3_10007114 = load i32, i32* @global_var_1001d250.138, align 4
  store i32 %v3_10007114, i32* %r24.global-to-local, align 4
  store i32 268464412, i32* @lr, align 4
  %v1_10007118 = inttoptr i32 %v0_1000710c to i8*
  %v2_10007118 = call i32 @function_100095a4(i8* %v1_10007118)
  %sext = mul i32 %v2_10007118, 16777216
  %v1_1000711c = sdiv i32 %sext, 16777216
  %v2_1000711c = add nsw i32 %v1_1000711c, 1
  store i32 %v2_1000711c, i32* @r29, align 4
  store i32 %v1_1000711c, i32* @r30, align 4
  store i32 %v2_1000711c, i32* @r3, align 4
  store i32 268464428, i32* @lr, align 4
  %v0_10007128 = call i32 @function_1000acf4()
  %v0_1000712c = load i32, i32* @r28, align 4
  %v0_10007130 = load i32, i32* @r29, align 4
  store i32 %v0_10007128, i32* %r31.global-to-local, align 4
  store i32 268464444, i32* @lr, align 4
  %v3_10007138 = call i32 @function_10009628(i32 %v0_1000712c, i32 %v0_10007130, i32 %v0_10007130)
  %v0_1000713c = load i32, i32* @r30, align 4
  %tmp23 = icmp slt i32 %v0_1000713c, 1
  %extract.t8 = trunc i32 %v0_1000713c to i8
  br i1 %tmp23, label %dec_label_pc_10007168, label %dec_label_pc_10007144

dec_label_pc_10007144:                            ; preds = %dec_label_pc_100070ac
  store i32 %v0_1000713c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -81, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007150

dec_label_pc_10007150:                            ; preds = %dec_label_pc_10007150.dec_label_pc_10007150_crit_edge, %dec_label_pc_10007144
  %v1_10007158 = phi i32 [ %v1_10007158.pre, %dec_label_pc_10007150.dec_label_pc_10007150_crit_edge ], [ -81, %dec_label_pc_10007144 ]
  %v1_1000715c = phi i32 [ %v1_10007160, %dec_label_pc_10007150.dec_label_pc_10007150_crit_edge ], [ 0, %dec_label_pc_10007144 ]
  %v1_10007150 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007150 = add i32 %v1_10007150, %v1_1000715c
  %v3_10007150 = inttoptr i32 %v2_10007150 to i8*
  %v4_10007150 = load i8, i8* %v3_10007150, align 1
  %v5_10007150 = zext i8 %v4_10007150 to i32
  %v1_10007154 = sub i32 -1, %v1_10007158
  %v2_10007158 = xor i32 %v5_10007150, %v1_10007154
  store i32 %v2_10007158, i32* %r0.global-to-local, align 4
  %v3_1000715c = trunc i32 %v2_10007158 to i8
  store i8 %v3_1000715c, i8* %v3_10007150, align 1
  %v0_10007160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007160 = add i32 %v0_10007160, 1
  store i32 %v1_10007160, i32* %r9.global-to-local, align 4
  %v0_10007164 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007164 = add i32 %v0_10007164, -1
  store i32 %v1_10007164, i32* %ctr.global-to-local, align 4
  %v2_10007164 = icmp eq i32 %v1_10007164, 0
  br i1 %v2_10007164, label %dec_label_pc_10007168.loopexit, label %dec_label_pc_10007150.dec_label_pc_10007150_crit_edge

dec_label_pc_10007150.dec_label_pc_10007150_crit_edge: ; preds = %dec_label_pc_10007150
  %v1_10007158.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007150

dec_label_pc_10007168.loopexit:                   ; preds = %dec_label_pc_10007150
  %v0_10007180.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10007180.pre to i8
  br label %dec_label_pc_10007168

dec_label_pc_10007168:                            ; preds = %dec_label_pc_10007168.loopexit, %dec_label_pc_100070ac
  %v0_10007180.off0 = phi i8 [ %extract.t, %dec_label_pc_10007168.loopexit ], [ %extract.t8, %dec_label_pc_100070ac ]
  %v3_10007168 = load i32, i32* @global_var_1001d250.138, align 4
  %v0_1000716c = load i32, i32* %r23.global-to-local, align 4
  %v3_10007170 = load i32, i32* @global_var_1001d254.139, align 4
  %v1_10007174 = mul i32 %v3_10007168, 16
  %v2_10007178 = add i32 %v3_10007170, %v1_10007174
  store i32 %v2_10007178, i32* %r9.global-to-local, align 4
  %v0_1000717c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000717c = mul i32 %v0_1000717c, 16
  store i32 %v1_1000717c, i32* %r0.global-to-local, align 4
  %v3_10007180 = add i32 %v2_10007178, 12
  %v4_10007180 = inttoptr i32 %v3_10007180 to i8*
  store i8 %v0_10007180.off0, i8* %v4_10007180, align 1
  %v0_10007184 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007184 = load i32, i32* %r25.global-to-local, align 4
  %v2_10007184 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007184 = add i32 %v2_10007184, %v1_10007184
  %v4_10007184 = inttoptr i32 %v3_10007184 to i32*
  store i32 %v0_10007184, i32* %v4_10007184, align 4
  %v3_10007188 = load i32, i32* @global_var_1001d250.138, align 4
  store i32 %v3_10007188, i32* @r30, align 4
  %v3_1000718c = load i32, i32* @global_var_1001d254.139, align 4
  store i32 %v3_1000718c, i32* %r25.global-to-local, align 4
  store i32 268464532, i32* @lr, align 4
  %v1_10007190 = inttoptr i32 %v0_1000716c to i8*
  %v2_10007190 = call i32 @function_100095a4(i8* %v1_10007190)
  %sext1 = mul i32 %v2_10007190, 16777216
  %v1_10007194 = sdiv i32 %sext1, 16777216
  %v2_10007194 = add nsw i32 %v1_10007194, 1
  store i32 %v2_10007194, i32* @r29, align 4
  store i32 %v1_10007194, i32* @r28, align 4
  store i32 %v2_10007194, i32* @r3, align 4
  store i32 268464548, i32* @lr, align 4
  %v0_100071a0 = call i32 @function_1000acf4()
  %v0_100071a4 = load i32, i32* %r23.global-to-local, align 4
  %v0_100071a8 = load i32, i32* @r29, align 4
  store i32 %v0_100071a0, i32* %r31.global-to-local, align 4
  store i32 268464564, i32* @lr, align 4
  %v3_100071b0 = call i32 @function_10009628(i32 %v0_100071a4, i32 %v0_100071a8, i32 %v0_100071a8)
  %v0_100071b4 = load i32, i32* @r28, align 4
  %tmp24 = icmp slt i32 %v0_100071b4, 1
  %extract.t10 = trunc i32 %v0_100071b4 to i8
  br i1 %tmp24, label %dec_label_pc_100071e0, label %dec_label_pc_100071bc

dec_label_pc_100071bc:                            ; preds = %dec_label_pc_10007168
  store i32 %v0_100071b4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -81, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100071c8

dec_label_pc_100071c8:                            ; preds = %dec_label_pc_100071c8.dec_label_pc_100071c8_crit_edge, %dec_label_pc_100071bc
  %v1_100071d0 = phi i32 [ %v1_100071d0.pre, %dec_label_pc_100071c8.dec_label_pc_100071c8_crit_edge ], [ -81, %dec_label_pc_100071bc ]
  %v1_100071d4 = phi i32 [ %v1_100071d8, %dec_label_pc_100071c8.dec_label_pc_100071c8_crit_edge ], [ 0, %dec_label_pc_100071bc ]
  %v1_100071c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100071c8 = add i32 %v1_100071c8, %v1_100071d4
  %v3_100071c8 = inttoptr i32 %v2_100071c8 to i8*
  %v4_100071c8 = load i8, i8* %v3_100071c8, align 1
  %v5_100071c8 = zext i8 %v4_100071c8 to i32
  %v1_100071cc = sub i32 -1, %v1_100071d0
  %v2_100071d0 = xor i32 %v5_100071c8, %v1_100071cc
  store i32 %v2_100071d0, i32* %r0.global-to-local, align 4
  %v3_100071d4 = trunc i32 %v2_100071d0 to i8
  store i8 %v3_100071d4, i8* %v3_100071c8, align 1
  %v0_100071d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100071d8 = add i32 %v0_100071d8, 1
  store i32 %v1_100071d8, i32* %r9.global-to-local, align 4
  %v0_100071dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100071dc = add i32 %v0_100071dc, -1
  store i32 %v1_100071dc, i32* %ctr.global-to-local, align 4
  %v2_100071dc = icmp eq i32 %v1_100071dc, 0
  br i1 %v2_100071dc, label %dec_label_pc_100071e0.loopexit, label %dec_label_pc_100071c8.dec_label_pc_100071c8_crit_edge

dec_label_pc_100071c8.dec_label_pc_100071c8_crit_edge: ; preds = %dec_label_pc_100071c8
  %v1_100071d0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100071c8

dec_label_pc_100071e0.loopexit:                   ; preds = %dec_label_pc_100071c8
  %v0_100071f4.pre = load i32, i32* @r28, align 4
  %extract.t9 = trunc i32 %v0_100071f4.pre to i8
  br label %dec_label_pc_100071e0

dec_label_pc_100071e0:                            ; preds = %dec_label_pc_100071e0.loopexit, %dec_label_pc_10007168
  %v0_100071f4.off0 = phi i8 [ %extract.t9, %dec_label_pc_100071e0.loopexit ], [ %extract.t10, %dec_label_pc_10007168 ]
  %v3_100071e0 = load i32, i32* @global_var_1001d250.138, align 4
  %v3_100071e8 = load i32, i32* @global_var_1001d254.139, align 4
  %v1_100071ec = mul i32 %v3_100071e0, 16
  %v2_100071f0 = or i32 %v1_100071ec, 13
  %v3_100071f4 = add i32 %v2_100071f0, %v3_100071e8
  %v4_100071f4 = inttoptr i32 %v3_100071f4 to i8*
  store i8 %v0_100071f4.off0, i8* %v4_100071f4, align 1
  %v0_100071f8 = load i32, i32* @r30, align 4
  %v1_100071f8 = mul i32 %v0_100071f8, 16
  %v1_100071fc = load i32, i32* %r25.global-to-local, align 4
  %v2_100071fc = add i32 %v1_100071fc, %v1_100071f8
  store i32 %v2_100071fc, i32* %r9.global-to-local, align 4
  %v3_10007200 = load i32, i32* @global_var_1001d250.138, align 4
  %v3_10007204 = load i32, i32* @global_var_1001d254.139, align 4
  %v1_10007208 = mul i32 %v3_10007200, 16
  %v3_1000720c = load i16, i16* @global_var_1001d258.140, align 2
  %v4_1000720c = zext i16 %v3_1000720c to i32
  store i32 %v4_1000720c, i32* %r7.global-to-local, align 4
  %v2_10007210 = add i32 %v3_10007204, %v1_10007208
  store i32 %v2_10007210, i32* %r11.global-to-local, align 4
  store i32 %v0_100070b0, i32* %r0.global-to-local, align 4
  %v1_10007218 = add i32 %v3_10007200, 1
  store i32 %v1_10007218, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001d258.140 to i32), i32* %r8.global-to-local, align 4
  %v0_10007220 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007220 = add i32 %v2_100071fc, 4
  %v3_10007220 = inttoptr i32 %v2_10007220 to i32*
  store i32 %v0_10007220, i32* %v3_10007220, align 4
  %v0_10007228 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10007228, i32* @global_var_1001d250.138, align 4
  store i32 %v0_100070cc, i32* @r28, align 4
  store i32 %v0_100070f8, i32* @r29, align 4
  store i32 %v0_100070fc, i32* @r30, align 4
  %v0_10007258 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007258 = trunc i32 %v0_10007258 to i16
  %v2_10007258 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007258 = add i32 %v2_10007258, 10
  %v4_10007258 = inttoptr i32 %v3_10007258 to i16*
  store i16 %v1_10007258, i16* %v4_10007258, align 2
  %v0_1000725c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000725c = trunc i32 %v0_1000725c to i16
  %v2_1000725c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000725c = add i32 %v2_1000725c, 8
  %v4_1000725c = inttoptr i32 %v3_1000725c to i16*
  store i16 %v1_1000725c, i16* %v4_1000725c, align 2
  %v0_10007260 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007260 = trunc i32 %v0_10007260 to i16
  store i16 %v1_10007260, i16* @global_var_1001d258.140, align 2
  ret i32 %v3_100071b0

; uselistorder directives
  uselistorder i32 %v3_10007200, { 1, 0 }
  uselistorder i32 %v1_100071dc, { 1, 0 }
  uselistorder i32 %v1_100071d8, { 1, 0 }
  uselistorder i32 %v0_100071b4, { 1, 0, 2 }
  uselistorder i32 %v1_10007164, { 1, 0 }
  uselistorder i32 %v1_10007160, { 1, 0 }
  uselistorder i32 %v0_1000713c, { 1, 0, 2 }
  uselistorder i32 %v1_100070c8, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 -81, { 0, 2, 1, 3 }
  uselistorder i32 (i8*)* @function_100095a4, { 0, 1, 24, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 31, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 74, 75, 76, 77, 78, 79, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32 (i32, i32, i32)* @function_1000afbc, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10007268(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007268:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i16 @__decompiler_undefined_function_2()
  %tmp56 = call i16 @__decompiler_undefined_function_2()
  %tmp57 = call i8 @__decompiler_undefined_function_1()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1916 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1920 = alloca i64, align 8
  %v0_10007268 = load i32, i32* @lr, align 4
  store i32 %v0_10007268, i32* %r0.global-to-local, align 4
  %v0_10007270 = call i32 @__asm_mfcr()
  store i32 %v0_10007270, i32* %r3.global-to-local, align 4
  %v0_100072a8 = load i32, i32* @r27, align 4
  %v0_100072ac = load i32, i32* @r28, align 4
  %v0_100072b0 = load i32, i32* @r29, align 4
  %v0_100072b4 = load i32, i32* @r30, align 4
  %v0_100072bc = load i32, i32* %r0.global-to-local, align 4
  store i32 268464840, i32* @lr, align 4
  %v0_100072c4 = call i32 @function_10009e30()
  store i32 %v0_100072c4, i32* %r3.global-to-local, align 4
  %v1_100072c8 = icmp slt i32 %v0_100072c4, 0
  %v3_100072c8 = icmp eq i32 %v0_100072c4, 0
  store i1 %v1_100072c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072c8, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100072c4, i32* @global_var_1001d268.136, align 4
  %tmp99 = icmp slt i32 %v0_100072c4, 1
  br i1 %tmp99, label %dec_label_pc_10007338, label %dec_label_pc_100072d8

dec_label_pc_100072d8:                            ; preds = %dec_label_pc_10007338, %dec_label_pc_10007268
  store i32 %v0_100072bc, i32* %r0.global-to-local, align 4
  %v1_100072ec = call %0 @__asm_mtcrf(i32 8, i32 %v0_10007270)
  store i32 %v0_100072a8, i32* %r27.global-to-local, align 4
  store i32 %v0_100072ac, i32* @r28, align 4
  store i32 %v0_100072b0, i32* @r29, align 4
  store i32 %v0_100072b4, i32* @r30, align 4
  ret i32 %v0_100072c4

dec_label_pc_10007338:                            ; preds = %dec_label_pc_10007268
  %v1_10007338 = icmp slt i32 %v0_100072c4, -1
  %v3_10007338 = icmp eq i32 %v0_100072c4, -1
  store i1 %v1_10007338, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007338, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007338, label %dec_label_pc_100072d8, label %dec_label_pc_10007340

dec_label_pc_10007340:                            ; preds = %dec_label_pc_10007338
  store i32 268464964, i32* @lr, align 4
  %v1_10007340 = call i32 @function_100098a8(i32 %v0_100072c4)
  store i32 %v1_10007340, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10007340, i32* @global_var_1001d230.61, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007350.141 to i32), i32* @lr, align 4
  %v1_1000734c = call i32 @function_10006e10(i32 %v1_10007340)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268464988, i32* @lr, align 4
  %v0_10007358 = call i32 @function_1000a1b8()
  store i32 %v0_10007358, i32* @global_var_1001d25c.137, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000736c.142 to i32), i32* @lr, align 4
  %v2_10007368 = call i32 @function_1000ae4c(i32 256, i32 288)
  store i32 %v2_10007368, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1920, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10007368, i32* @global_var_1001d260.143, align 4
  store i32 %v2_10007368, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007398 = add i32 %v2_10007368, 4
  store i32 %v1_10007398, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000739c

dec_label_pc_1000739c:                            ; preds = %dec_label_pc_1000739c.dec_label_pc_1000739c_crit_edge, %dec_label_pc_10007340
  %v1_100073b0 = phi i32 [ %v1_100073b8, %dec_label_pc_1000739c.dec_label_pc_1000739c_crit_edge ], [ %v1_10007398, %dec_label_pc_10007340 ]
  %v0_100073b0 = phi i32 [ %v0_100073b0.pre, %dec_label_pc_1000739c.dec_label_pc_1000739c_crit_edge ], [ -1, %dec_label_pc_10007340 ]
  %v1_100073ac = phi i32 [ %v1_100073ac.pre, %dec_label_pc_1000739c.dec_label_pc_1000739c_crit_edge ], [ %v2_10007368, %dec_label_pc_10007340 ]
  %v0_100073a8 = phi i32 [ %v0_100073bc, %dec_label_pc_1000739c.dec_label_pc_1000739c_crit_edge ], [ 0, %dec_label_pc_10007340 ]
  %v1_1000739c = mul i32 %v0_100073a8, 256
  store i32 %v1_1000739c, i32* %r0.global-to-local, align 4
  %v2_100073a4 = mul i32 %v0_100073a8, 288
  %v1_100073a8 = add i32 %v0_100073a8, 1
  store i32 %v1_100073a8, i32* %r10.global-to-local, align 4
  %v2_100073ac = add i32 %v2_100073a4, %v1_100073ac
  store i32 %v2_100073ac, i32* %r9.global-to-local, align 4
  %v2_100073b0 = inttoptr i32 %v1_100073b0 to i32*
  store i32 %v0_100073b0, i32* %v2_100073b0, align 4
  %v0_100073b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100073b4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100073b4 = add i32 %v1_100073b4, 12
  %v3_100073b4 = inttoptr i32 %v2_100073b4 to i32*
  store i32 %v0_100073b4, i32* %v3_100073b4, align 4
  %v0_100073b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100073b8 = add i32 %v0_100073b8, 288
  store i32 %v1_100073b8, i32* %r11.global-to-local, align 4
  %v0_100073bc = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100073bc, i32* %r9.global-to-local, align 4
  %v0_100073c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100073c0 = add i32 %v0_100073c0, -1
  store i32 %v1_100073c0, i32* %ctr.global-to-local, align 4
  %v2_100073c0 = icmp eq i32 %v1_100073c0, 0
  br i1 %v2_100073c0, label %dec_label_pc_100073c4, label %dec_label_pc_1000739c.dec_label_pc_1000739c_crit_edge

dec_label_pc_1000739c.dec_label_pc_1000739c_crit_edge: ; preds = %dec_label_pc_1000739c
  %v1_100073ac.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100073b0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000739c

dec_label_pc_100073c4:                            ; preds = %dec_label_pc_1000739c
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1920, align 8
  store i32 268465116, i32* @lr, align 4
  %v3_100073d8 = call i32 @function_1000aaf0(i32 2, i32 3, i32 6)
  %v4_100073d8 = trunc i32 %v3_100073d8 to i16
  store i32 %v3_100073d8, i32* %r3.global-to-local, align 4
  %v2_100073dc = icmp slt i16 %v4_100073d8, -1
  %v4_100073dc = icmp eq i16 %v4_100073d8, -1
  store i1 %v2_100073dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100073dc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100073d8, i32* @r29, align 4
  store i32 %v3_100073d8, i32* @global_var_1001d264.144, align 4
  br i1 %v4_100073dc, label %dec_label_pc_10007e18, label %dec_label_pc_100073f0

dec_label_pc_100073f0:                            ; preds = %dec_label_pc_100073c4
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268465152, i32* @lr, align 4
  %v1_100073fc = call i32 @function_10009d00(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10007404 = or i32 %v1_100073fc, 2048
  store i32 %v1_10007404, i32* %r5.global-to-local, align 4
  %v0_10007408 = load i32, i32* @r29, align 4
  store i32 %v0_10007408, i32* %r3.global-to-local, align 4
  store i32 268465172, i32* @lr, align 4
  %v2_10007410 = call i32 @function_10009d00(i32 %v0_10007408)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007418 = load i32, i32* @global_var_1001d264.144, align 4
  store i32 %v3_10007418, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10007428 = ptrtoint i64* %stack_var_-1920 to i32
  store i32 %v2_10007428, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1920, align 8
  store i32 268465208, i32* @lr, align 4
  %v5_10007434 = call i32 @function_1000aab4(i32 %v3_10007418, i32 0, i32 3, i32 %v2_10007428, i32 4)
  store i32 %v5_10007434, i32* %r3.global-to-local, align 4
  %v1_10007438 = icmp slt i32 %v5_10007434, 0
  %v3_10007438 = icmp eq i32 %v5_10007434, 0
  store i1 %v1_10007438, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007438, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007438, label %dec_label_pc_10007440, label %dec_label_pc_10008aa0

dec_label_pc_10007440:                            ; preds = %dec_label_pc_100073f0, %dec_label_pc_10007440
  %v0_10007440 = call i32 @function_10006dc0()
  store i32 %v0_10007440, i32* %r3.global-to-local, align 4
  %v1_10007444 = urem i32 %v0_10007440, 65536
  store i32 %v1_10007444, i32* @r22, align 4
  %v1_10007448 = icmp ult i32 %v1_10007444, 1023
  %v3_10007448 = icmp eq i32 %v1_10007444, 1023
  store i1 %v1_10007448, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007448, i1* %cr7_eq.global-to-local, align 1
  %tmp100 = icmp ult i32 %v1_10007444, 1024
  br i1 %tmp100, label %dec_label_pc_10007440, label %dec_label_pc_10007450

dec_label_pc_10007450:                            ; preds = %dec_label_pc_10007440
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10007458 = load i32, i32* @global_var_1001d2d0.145, align 4
  store i32 %v3_10007458, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001d2d0.145 to i32), i32* @r23, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001d2e4.146 to i32), i32* @r24, align 4
  %v1_10007468 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007468, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r27.global-to-local, align 4
  %v1_10007470 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10007470, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10007470, i32* @global_var_1001d2d0.145, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000c79c.147 to i32), i32* @r27, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001d2d2.148 to i16*), align 4
  %v0_10007484 = call i32 @function_10006dc0()
  %v1_10007484 = trunc i32 %v0_10007484 to i16
  store i32 %v0_10007484, i32* %r3.global-to-local, align 4
  %v3_10007488 = load i32, i32* @global_var_1001d2f0.149, align 4
  store i32 %v3_10007488, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001d2d8.150 to i8*), align 4
  %v1_10007498 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10007498, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_100074a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100074a0 = trunc i32 %v0_100074a0 to i8
  store i8 %v1_100074a0, i8* bitcast (i32* @global_var_1001d2d9.151 to i8*), align 4
  store i16 %v1_10007484, i16* bitcast (i32* @global_var_1001d2d4.152 to i16*), align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c784.153 to i32), i32* @r29, align 4
  store i32 %v1_10007498, i32* @global_var_1001d2f0.149, align 4
  store i16 23, i16* @global_var_1001d2e6.154, align 2
  store i32 ptrtoint (i32* @global_var_1000c7a8.155 to i32), i32* @r26, align 4
  %v0_100074c0 = load i32, i32* @r22, align 4
  %v1_100074c0 = trunc i32 %v0_100074c0 to i16
  store i16 %v1_100074c0, i16* bitcast (i32* @global_var_1001d2e4.146 to i16*), align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v0_100074c8 = call i32 @function_10006dc0()
  %v1_100074c8 = trunc i32 %v0_100074c8 to i16
  store i16 %v1_100074c8, i16* bitcast (i32* @global_var_1001d2f2.156 to i16*), align 4
  %v0_100074d8 = load i32, i32* @r29, align 4
  store i32 %v0_100074d8, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  %v3_100074e0 = load i32, i32* @global_var_1001d2f0.149, align 4
  store i32 ptrtoint (i32* @global_var_1000c664.158 to i32), i32* @r28, align 4
  %v1_100074f0 = or i32 %v3_100074e0, 131072
  store i32 %v1_100074f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000c6f8.159 to i32), i32* @r25, align 4
  store i32 %v1_100074f0, i32* @global_var_1001d2f0.149, align 4
  store i32 268465408, i32* @lr, align 4
  %v5_100074fc = call i32 @function_100070ac(i32 %v0_100074d8, i32 ptrtoint ([8 x i8]* @global_var_1000c78c.157 to i32), i32 12)
  %v0_10007504 = load i32, i32* @r29, align 4
  store i32 %v0_10007504, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268465428, i32* @lr, align 4
  %v5_10007510 = call i32 @function_100070ac(i32 %v0_10007504, i32 ptrtoint ([5 x i8]* @global_var_1000c794.160 to i32), i32 9)
  %v0_10007514 = load i32, i32* @r29, align 4
  store i32 %v0_10007514, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  %v0_1000751c = load i32, i32* @r27, align 4
  store i32 268465444, i32* @lr, align 4
  %v5_10007520 = call i32 @function_100070ac(i32 %v0_10007514, i32 %v0_1000751c, i32 13)
  %v0_10007524 = load i32, i32* @r29, align 4
  store i32 %v0_10007524, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465460, i32* @lr, align 4
  %v5_10007530 = call i32 @function_100070ac(i32 %v0_10007524, i32 %v0_10007524, i32 10)
  %v0_10007534 = load i32, i32* @r29, align 4
  store i32 %v0_10007534, i32* %r3.global-to-local, align 4
  %v0_10007538 = load i32, i32* @r26, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268465476, i32* @lr, align 4
  %v4_10007540 = call i32 @function_100070ac(i32 %v0_10007534, i32 %v0_10007538, i32 17)
  %v0_10007544 = load i32, i32* @r29, align 4
  store i32 %v0_10007544, i32* %r3.global-to-local, align 4
  %v0_10007548 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268465492, i32* @lr, align 4
  %v4_10007550 = call i32 @function_100070ac(i32 %v0_10007544, i32 %v0_10007548, i32 5)
  %v0_10007558 = load i32, i32* @r29, align 4
  store i32 %v0_10007558, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268465516, i32* @lr, align 4
  %v5_10007568 = call i32 @function_100070ac(i32 %v0_10007558, i32 ptrtoint ([5 x i8]* @global_var_1000c77c.161 to i32), i32 9)
  store i32 ptrtoint ([4 x i8]* @global_var_1000c6ac.162 to i32), i32* %r3.global-to-local, align 4
  %v0_10007574 = load i32, i32* @r28, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000c6b0.163 to i32), i32* @r29, align 4
  store i32 268465540, i32* @lr, align 4
  %v4_10007580 = call i32 @function_100070ac(i32 ptrtoint ([4 x i8]* @global_var_1000c6ac.162 to i32), i32 %v0_10007574, i32 3)
  %v0_1000758c = load i32, i32* @r29, align 4
  store i32 %v0_1000758c, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465560, i32* @lr, align 4
  %v5_10007594 = call i32 @function_100070ac(i32 %v0_1000758c, i32 ptrtoint ([5 x i8]* @global_var_1000c6b8.164 to i32), i32 8)
  store i32 10, i32* %r5.global-to-local, align 4
  %v0_100075a4 = load i32, i32* @r29, align 4
  store i32 %v0_100075a4, i32* %r3.global-to-local, align 4
  store i32 268465580, i32* @lr, align 4
  %v5_100075a8 = call i32 @function_100070ac(i32 %v0_100075a4, i32 ptrtoint ([7 x i8]* @global_var_1000c6c0.165 to i32), i32 10)
  %v0_100075ac = load i32, i32* @r29, align 4
  store i32 %v0_100075ac, i32* %r3.global-to-local, align 4
  %v0_100075b0 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268465596, i32* @lr, align 4
  %v4_100075b8 = call i32 @function_100070ac(i32 %v0_100075ac, i32 %v0_100075b0, i32 4)
  %v0_100075c4 = load i32, i32* @r29, align 4
  store i32 %v0_100075c4, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268465616, i32* @lr, align 4
  %v5_100075cc = call i32 @function_100070ac(i32 %v0_100075c4, i32 ptrtoint ([6 x i8]* @global_var_1000c6c8.166 to i32), i32 9)
  %v0_100075d8 = load i32, i32* @r29, align 4
  store i32 %v0_100075d8, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268465636, i32* @lr, align 4
  %v5_100075e0 = call i32 @function_100070ac(i32 %v0_100075d8, i32 ptrtoint ([9 x i8]* @global_var_1000c6d0.167 to i32), i32 12)
  %v0_100075ec = load i32, i32* @r29, align 4
  store i32 %v0_100075ec, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268465656, i32* @lr, align 4
  %v5_100075f4 = call i32 @function_100070ac(i32 %v0_100075ec, i32 ptrtoint ([6 x i8]* @global_var_1000c6dc.168 to i32), i32 9)
  %v0_10007600 = load i32, i32* @r29, align 4
  store i32 %v0_10007600, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268465676, i32* @lr, align 4
  %v5_10007608 = call i32 @function_100070ac(i32 %v0_10007600, i32 ptrtoint ([6 x i8]* @global_var_1000c6e4.169 to i32), i32 9)
  %v0_10007614 = load i32, i32* @r29, align 4
  store i32 %v0_10007614, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268465696, i32* @lr, align 4
  %v5_1000761c = call i32 @function_100070ac(i32 %v0_10007614, i32 ptrtoint ([9 x i8]* @global_var_1000c6ec.170 to i32), i32 12)
  %v0_10007620 = load i32, i32* @r29, align 4
  store i32 %v0_10007620, i32* %r3.global-to-local, align 4
  %v0_10007624 = load i32, i32* @r25, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268465712, i32* @lr, align 4
  %v5_1000762c = call i32 @function_100070ac(i32 %v0_10007620, i32 %v0_10007624, i32 11)
  %v0_10007638 = load i32, i32* @r29, align 4
  store i32 %v0_10007638, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268465732, i32* @lr, align 4
  %v5_10007640 = call i32 @function_100070ac(i32 %v0_10007638, i32 ptrtoint ([4 x i8]* @global_var_1000c700.171 to i32), i32 7)
  %v0_1000764c = load i32, i32* @r29, align 4
  store i32 %v0_1000764c, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465752, i32* @lr, align 4
  %v5_10007654 = call i32 @function_100070ac(i32 %v0_1000764c, i32 ptrtoint ([7 x i8]* @global_var_1000c704.172 to i32), i32 10)
  %v0_10007660 = load i32, i32* @r29, align 4
  store i32 %v0_10007660, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268465772, i32* @lr, align 4
  %v5_10007668 = call i32 @function_100070ac(i32 %v0_10007660, i32 ptrtoint ([4 x i8]* @global_var_1000c70c.173 to i32), i32 7)
  store i32 12, i32* %r5.global-to-local, align 4
  %v0_10007678 = load i32, i32* @r29, align 4
  store i32 %v0_10007678, i32* %r3.global-to-local, align 4
  store i32 268465792, i32* @lr, align 4
  %v5_1000767c = call i32 @function_100070ac(i32 %v0_10007678, i32 ptrtoint ([9 x i8]* @global_var_1000c710.174 to i32), i32 12)
  %v0_10007680 = load i32, i32* @r29, align 4
  store i32 %v0_10007680, i32* %r3.global-to-local, align 4
  %v0_10007684 = load i32, i32* @r27, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268465808, i32* @lr, align 4
  %v5_1000768c = call i32 @function_100070ac(i32 %v0_10007680, i32 %v0_10007684, i32 12)
  %v0_10007690 = load i32, i32* @r29, align 4
  store i32 %v0_10007690, i32* %r3.global-to-local, align 4
  %v0_10007694 = load i32, i32* @r26, align 4
  store i32 16, i32* %r5.global-to-local, align 4
  store i32 268465824, i32* @lr, align 4
  %v4_1000769c = call i32 @function_100070ac(i32 %v0_10007690, i32 %v0_10007694, i32 16)
  %v0_100076a8 = load i32, i32* @r29, align 4
  store i32 %v0_100076a8, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268465844, i32* @lr, align 4
  %v5_100076b0 = call i32 @function_100070ac(i32 %v0_100076a8, i32 ptrtoint ([6 x i8]* @global_var_1000c71c.175 to i32), i32 9)
  %v0_100076bc = load i32, i32* @r29, align 4
  store i32 %v0_100076bc, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465864, i32* @lr, align 4
  %v5_100076c4 = call i32 @function_100070ac(i32 %v0_100076bc, i32 ptrtoint ([7 x i8]* @global_var_1000c724.176 to i32), i32 10)
  %v0_100076d0 = load i32, i32* @r29, align 4
  store i32 %v0_100076d0, i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268465884, i32* @lr, align 4
  %v5_100076d8 = call i32 @function_100070ac(i32 %v0_100076d0, i32 ptrtoint ([11 x i8]* @global_var_1000c72c.177 to i32), i32 14)
  %v0_100076e4 = load i32, i32* @r29, align 4
  store i32 %v0_100076e4, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268465904, i32* @lr, align 4
  %v5_100076ec = call i32 @function_100070ac(i32 %v0_100076e4, i32 ptrtoint ([7 x i8]* @global_var_1000c738.178 to i32), i32 10)
  %v0_100076f4 = load i32, i32* @r29, align 4
  store i32 %v0_100076f4, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r5.global-to-local, align 4
  store i32 268465924, i32* @lr, align 4
  %v4_10007700 = call i32 @function_100070ac(i32 %v0_100076f4, i32 ptrtoint (i32* @global_var_1000c740.179 to i32), i32 16)
  %v0_10007704 = load i32, i32* @r25, align 4
  store i32 %v0_10007704, i32* %r3.global-to-local, align 4
  %v0_10007708 = load i32, i32* @r28, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268465940, i32* @lr, align 4
  %v4_10007710 = call i32 @function_100070ac(i32 %v0_10007704, i32 %v0_10007708, i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1000c750.180 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268465960, i32* @lr, align 4
  %v4_10007724 = call i32 @function_100070ac(i32 ptrtoint ([5 x i8]* @global_var_1000c750.180 to i32), i32 8, i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1000c758.181 to i32), i32* %r3.global-to-local, align 4
  %v0_10007730 = load i32, i32* @r28, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268465980, i32* @lr, align 4
  %v4_10007738 = call i32 @function_100070ac(i32 ptrtoint ([7 x i8]* @global_var_1000c758.181 to i32), i32 %v0_10007730, i32 6)
  store i32 ptrtoint ([4 x i8]* @global_var_1000c760.182 to i32), i32* %r3.global-to-local, align 4
  %v0_10007744 = load i32, i32* @r28, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268466000, i32* @lr, align 4
  %v4_1000774c = call i32 @function_100070ac(i32 ptrtoint ([4 x i8]* @global_var_1000c760.182 to i32), i32 %v0_10007744, i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1000c764.183 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268466020, i32* @lr, align 4
  %v4_10007760 = call i32 @function_100070ac(i32 ptrtoint ([8 x i8]* @global_var_1000c764.183 to i32), i32 14, i32 14)
  store i32 ptrtoint ([11 x i8]* @global_var_1000c76c.184 to i32), i32* %r3.global-to-local, align 4
  store i32 18, i32* %r5.global-to-local, align 4
  store i32 268466044, i32* @lr, align 4
  %v5_10007778 = call i32 @function_100070ac(i32 ptrtoint ([11 x i8]* @global_var_1000c76c.184 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000c778.185 to i32), i32 18)
  store i32 %v5_10007778, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000777c

dec_label_pc_1000777c:                            ; preds = %dec_label_pc_10007c5c, %dec_label_pc_10007450
  %v3_1000777c = load i32, i32* @global_var_1001d25c.137, align 4
  store i32 %v3_1000777c, i32* @r31, align 4
  %v0_10007780 = load i32, i32* @r30, align 4
  %v2_10007780 = icmp slt i32 %v0_10007780, %v3_1000777c
  %v4_10007780 = icmp eq i32 %v0_10007780, %v3_1000777c
  store i1 %v2_10007780, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007780, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007780, label %dec_label_pc_10007978, label %dec_label_pc_10007788

dec_label_pc_10007788:                            ; preds = %dec_label_pc_1000777c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000778c = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_1000778c, i32* @r28, align 4
  store i64 0, i64* %stack_var_-1920, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000779c

dec_label_pc_1000779c:                            ; preds = %dec_label_pc_100078a4.dec_label_pc_1000779c_crit_edge, %dec_label_pc_10007788
  %v0_1000779c = phi i32 [ %v0_1000779c.pre, %dec_label_pc_100078a4.dec_label_pc_1000779c_crit_edge ], [ 0, %dec_label_pc_10007788 ]
  store i32 %v0_1000779c, i32* %stack_var_-1888, align 4
  %v0_100077ac = call i32 @function_10006dc0()
  %v1_100077ac = trunc i32 %v0_100077ac to i16
  store i32 %v0_100077ac, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_100077ac, i16* bitcast (i32* @global_var_1001d2d4.152 to i16*), align 4
  %v3_100077b8 = load i32, i32* @global_var_1001d230.61, align 4
  store i32 %v3_100077b8, i32* %r0.global-to-local, align 4
  store i32 %v3_100077b8, i32* @global_var_1001d2dc.186, align 4
  br label %dec_label_pc_100077c0.preheader

dec_label_pc_100077c0.preheader:                  ; preds = %dec_label_pc_1000779c, %dec_label_pc_10007e20
  br label %dec_label_pc_100077c0

dec_label_pc_100077c0:                            ; preds = %dec_label_pc_10007e68, %dec_label_pc_10007e54, %dec_label_pc_10007e48, %dec_label_pc_10007e34, %dec_label_pc_1000789c, %dec_label_pc_10007894, %dec_label_pc_1000788c, %dec_label_pc_10007884, %dec_label_pc_1000787c, %dec_label_pc_10007874, %dec_label_pc_1000786c, %dec_label_pc_10007864, %dec_label_pc_1000785c, %dec_label_pc_10007854, %dec_label_pc_1000784c, %dec_label_pc_1000783c, %dec_label_pc_10007834, %dec_label_pc_10007804, %dec_label_pc_100077fc, %dec_label_pc_100077ec, %dec_label_pc_100077e4, %dec_label_pc_100077dc, %dec_label_pc_100077c0, %dec_label_pc_100077c0.preheader
  %v0_100077c0 = call i32 @function_10006dc0()
  store i32 %v0_100077c0, i32* %r3.global-to-local, align 4
  %v1_100077c4 = urem i32 %v0_100077c0, 256
  store i32 %v1_100077c4, i32* %r11.global-to-local, align 4
  %v1_100077c8 = udiv i32 %v0_100077c0, 16777216
  store i32 %v1_100077c8, i32* %r10.global-to-local, align 4
  %v1_100077cc = icmp ult i32 %v1_100077c4, 127
  %v3_100077cc = icmp eq i32 %v1_100077c4, 127
  store i1 %v1_100077cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077cc, i1* %cr7_eq.global-to-local, align 1
  %v1_100077d0 = call i32 @__asm_rlwinm(i32 %v0_100077c0, i32 24, i32 24, i32 31)
  store i32 %v1_100077d0, i32* @r9, align 4
  %v1_100077d4 = call i32 @__asm_rlwinm(i32 %v0_100077c0, i32 16, i32 24, i32 31)
  store i32 %v1_100077d4, i32* %r3.global-to-local, align 4
  %v0_100077d8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100077d8, label %dec_label_pc_100077c0, label %dec_label_pc_100077dc

dec_label_pc_100077dc:                            ; preds = %dec_label_pc_100077c0
  %v0_100077dc = load i32, i32* %r11.global-to-local, align 4
  %v1_100077dc = icmp slt i32 %v0_100077dc, 0
  %v3_100077dc = icmp eq i32 %v0_100077dc, 0
  store i1 %v1_100077dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077dc, label %dec_label_pc_100077c0, label %dec_label_pc_100077e4

dec_label_pc_100077e4:                            ; preds = %dec_label_pc_100077dc
  %v1_100077e4 = icmp slt i32 %v0_100077dc, 3
  %v3_100077e4 = icmp eq i32 %v0_100077dc, 3
  store i1 %v1_100077e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077e4, label %dec_label_pc_100077c0, label %dec_label_pc_100077ec

dec_label_pc_100077ec:                            ; preds = %dec_label_pc_100077e4
  %v1_100077ec = add i32 %v0_100077dc, 241
  %v1_100077f0 = urem i32 %v1_100077ec, 256
  store i32 %v1_100077f0, i32* %r0.global-to-local, align 4
  %v1_100077f4 = icmp eq i32 %v1_100077f0, 0
  %v3_100077f4 = icmp eq i32 %v1_100077f0, 1
  store i1 %v1_100077f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077f4, i1* %cr7_eq.global-to-local, align 1
  %tmp101 = or i32 %v1_100077f0, 1
  %tmp102 = icmp eq i32 %tmp101, 1
  br i1 %tmp102, label %dec_label_pc_100077c0, label %dec_label_pc_100077fc

dec_label_pc_100077fc:                            ; preds = %dec_label_pc_100077ec
  %v1_100077fc = icmp slt i32 %v0_100077dc, 56
  %v3_100077fc = icmp eq i32 %v0_100077dc, 56
  store i1 %v1_100077fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077fc, label %dec_label_pc_100077c0, label %dec_label_pc_10007804

dec_label_pc_10007804:                            ; preds = %dec_label_pc_100077fc
  %v1_10007804 = icmp slt i32 %v0_100077dc, 10
  %v3_10007804 = icmp eq i32 %v0_100077dc, 10
  store i1 %v1_10007804, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007804, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007804, label %dec_label_pc_100077c0, label %dec_label_pc_1000780c

dec_label_pc_1000780c:                            ; preds = %dec_label_pc_10007804
  %v1_1000780c = icmp slt i32 %v0_100077dc, 192
  %v3_1000780c = icmp eq i32 %v0_100077dc, 192
  store i1 %v1_1000780c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000780c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000780c, label %dec_label_pc_10007e20, label %dec_label_pc_10007814

dec_label_pc_10007814:                            ; preds = %dec_label_pc_1000780c
  %v1_10007814 = icmp slt i32 %v0_100077dc, 172
  %v3_10007814 = icmp eq i32 %v0_100077dc, 172
  store i1 %v1_10007814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007814, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007814, label %dec_label_pc_10007e2c, label %dec_label_pc_1000781c

dec_label_pc_1000781c:                            ; preds = %dec_label_pc_10007814
  %v1_1000781c = icmp slt i32 %v0_100077dc, 100
  %v3_1000781c = icmp eq i32 %v0_100077dc, 100
  store i1 %v1_1000781c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000781c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000781c, label %dec_label_pc_10007e40, label %dec_label_pc_10007824

dec_label_pc_10007824:                            ; preds = %dec_label_pc_1000781c
  %v1_10007824 = icmp slt i32 %v0_100077dc, 169
  %v3_10007824 = icmp eq i32 %v0_100077dc, 169
  store i1 %v1_10007824, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007824, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007824, label %dec_label_pc_10007e54, label %dec_label_pc_1000782c

dec_label_pc_1000782c:                            ; preds = %dec_label_pc_10007824
  %v1_1000782c = icmp slt i32 %v0_100077dc, 198
  %v3_1000782c = icmp eq i32 %v0_100077dc, 198
  store i1 %v1_1000782c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000782c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000782c, label %dec_label_pc_10007e60, label %dec_label_pc_10007834

dec_label_pc_10007834:                            ; preds = %dec_label_pc_1000782c
  %v1_10007834 = icmp ult i32 %v0_100077dc, 223
  %v2_10007834 = icmp ugt i32 %v0_100077dc, 223
  %v3_10007834 = icmp eq i32 %v0_100077dc, 223
  store i1 %v1_10007834, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007834, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007834, label %dec_label_pc_100077c0, label %dec_label_pc_1000783c

dec_label_pc_1000783c:                            ; preds = %dec_label_pc_10007834
  %v1_1000783c = add i32 %v0_100077dc, 250
  %v1_10007840 = urem i32 %v1_1000783c, 256
  store i32 %v1_10007840, i32* %r0.global-to-local, align 4
  %v1_10007844 = icmp eq i32 %v1_10007840, 0
  %v3_10007844 = icmp eq i32 %v1_10007840, 1
  store i1 %v1_10007844, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007844, i1* %cr7_eq.global-to-local, align 1
  %tmp103 = or i32 %v1_10007840, 1
  %tmp104 = icmp eq i32 %tmp103, 1
  br i1 %tmp104, label %dec_label_pc_100077c0, label %dec_label_pc_1000784c

dec_label_pc_1000784c:                            ; preds = %dec_label_pc_1000783c
  %v1_1000784c = icmp slt i32 %v0_100077dc, 11
  %v3_1000784c = icmp eq i32 %v0_100077dc, 11
  store i1 %v1_1000784c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000784c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000784c, label %dec_label_pc_100077c0, label %dec_label_pc_10007854

dec_label_pc_10007854:                            ; preds = %dec_label_pc_1000784c
  %v1_10007854 = icmp slt i32 %v0_100077dc, 21
  %v3_10007854 = icmp eq i32 %v0_100077dc, 21
  store i1 %v1_10007854, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007854, label %dec_label_pc_100077c0, label %dec_label_pc_1000785c

dec_label_pc_1000785c:                            ; preds = %dec_label_pc_10007854
  %v1_1000785c = icmp slt i32 %v0_100077dc, 22
  %v3_1000785c = icmp eq i32 %v0_100077dc, 22
  store i1 %v1_1000785c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000785c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000785c, label %dec_label_pc_100077c0, label %dec_label_pc_10007864

dec_label_pc_10007864:                            ; preds = %dec_label_pc_1000785c
  %v1_10007864 = icmp slt i32 %v0_100077dc, 26
  %v3_10007864 = icmp eq i32 %v0_100077dc, 26
  store i1 %v1_10007864, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007864, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007864, label %dec_label_pc_100077c0, label %dec_label_pc_1000786c

dec_label_pc_1000786c:                            ; preds = %dec_label_pc_10007864
  %v1_1000786c = icmp slt i32 %v0_100077dc, 28
  %v3_1000786c = icmp eq i32 %v0_100077dc, 28
  store i1 %v1_1000786c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000786c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000786c, label %dec_label_pc_100077c0, label %dec_label_pc_10007874

dec_label_pc_10007874:                            ; preds = %dec_label_pc_1000786c
  %v1_10007874 = icmp slt i32 %v0_100077dc, 29
  %v3_10007874 = icmp eq i32 %v0_100077dc, 29
  store i1 %v1_10007874, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007874, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007874, label %dec_label_pc_100077c0, label %dec_label_pc_1000787c

dec_label_pc_1000787c:                            ; preds = %dec_label_pc_10007874
  %v1_1000787c = icmp slt i32 %v0_100077dc, 30
  %v3_1000787c = icmp eq i32 %v0_100077dc, 30
  store i1 %v1_1000787c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000787c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000787c, label %dec_label_pc_100077c0, label %dec_label_pc_10007884

dec_label_pc_10007884:                            ; preds = %dec_label_pc_1000787c
  %v1_10007884 = icmp slt i32 %v0_100077dc, 33
  %v3_10007884 = icmp eq i32 %v0_100077dc, 33
  store i1 %v1_10007884, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007884, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007884, label %dec_label_pc_100077c0, label %dec_label_pc_1000788c

dec_label_pc_1000788c:                            ; preds = %dec_label_pc_10007884
  %v1_1000788c = icmp slt i32 %v0_100077dc, 55
  %v3_1000788c = icmp eq i32 %v0_100077dc, 55
  store i1 %v1_1000788c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000788c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000788c, label %dec_label_pc_100077c0, label %dec_label_pc_10007894

dec_label_pc_10007894:                            ; preds = %dec_label_pc_1000788c
  %v1_10007894 = icmp slt i32 %v0_100077dc, 214
  %v3_10007894 = icmp eq i32 %v0_100077dc, 214
  store i1 %v1_10007894, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007894, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007894, label %dec_label_pc_100077c0, label %dec_label_pc_1000789c

dec_label_pc_1000789c:                            ; preds = %dec_label_pc_10007894
  %v1_1000789c = icmp slt i32 %v0_100077dc, 215
  %v3_1000789c = icmp eq i32 %v0_100077dc, 215
  store i1 %v1_1000789c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000789c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000789c, label %dec_label_pc_100077c0, label %dec_label_pc_1000789c.dec_label_pc_100078a4.loopexit_crit_edge

dec_label_pc_1000789c.dec_label_pc_100078a4.loopexit_crit_edge: ; preds = %dec_label_pc_1000789c
  %v0_100078a8.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_100078a4

dec_label_pc_100078a4:                            ; preds = %dec_label_pc_10007e68, %dec_label_pc_10007e54, %dec_label_pc_10007e48, %dec_label_pc_10007e34, %dec_label_pc_10007e60, %dec_label_pc_10007e40, %dec_label_pc_10007e2c, %dec_label_pc_1000789c.dec_label_pc_100078a4.loopexit_crit_edge, %dec_label_pc_10007e20.dec_label_pc_100078a4_crit_edge
  %v0_100078b0 = phi i32 [ %v0_100078b016, %dec_label_pc_10007e20.dec_label_pc_100078a4_crit_edge ], [ %v1_100077d4, %dec_label_pc_1000789c.dec_label_pc_100078a4.loopexit_crit_edge ], [ %v1_100077d4, %dec_label_pc_10007e2c ], [ %v1_100077d4, %dec_label_pc_10007e40 ], [ %v1_100077d4, %dec_label_pc_10007e60 ], [ %v1_100077d4, %dec_label_pc_10007e34 ], [ %v1_100077d4, %dec_label_pc_10007e48 ], [ %v1_100077d4, %dec_label_pc_10007e54 ], [ %v1_100077d4, %dec_label_pc_10007e68 ]
  %v0_100078a8 = phi i32 [ %v0_10007e20, %dec_label_pc_10007e20.dec_label_pc_100078a4_crit_edge ], [ %v0_100078a8.pre.pre, %dec_label_pc_1000789c.dec_label_pc_100078a4.loopexit_crit_edge ], [ %v0_10007e2c, %dec_label_pc_10007e2c ], [ %v0_10007e40, %dec_label_pc_10007e40 ], [ %v0_10007e60, %dec_label_pc_10007e60 ], [ %v0_10007e2c, %dec_label_pc_10007e34 ], [ %v0_10007e40, %dec_label_pc_10007e48 ], [ %v0_10007e54, %dec_label_pc_10007e54 ], [ %v0_10007e60, %dec_label_pc_10007e68 ]
  %v0_100078a4 = phi i32 [ %v0_100078a4.pre, %dec_label_pc_10007e20.dec_label_pc_100078a4_crit_edge ], [ %v0_100077dc, %dec_label_pc_1000789c.dec_label_pc_100078a4.loopexit_crit_edge ], [ 172, %dec_label_pc_10007e2c ], [ 100, %dec_label_pc_10007e40 ], [ 198, %dec_label_pc_10007e60 ], [ 172, %dec_label_pc_10007e34 ], [ 100, %dec_label_pc_10007e48 ], [ 169, %dec_label_pc_10007e54 ], [ 198, %dec_label_pc_10007e68 ]
  %v1_100078a4 = mul i32 %v0_100078a4, 16777216
  %v1_100078a8 = mul i32 %v0_100078a8, 65536
  %v2_100078ac = or i32 %v1_100078a4, %v1_100078a8
  %v1_100078b0 = mul i32 %v0_100078b0, 256
  %v1_100078b4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100078b4 = or i32 %v2_100078ac, %v1_100078b4
  store i32 %v2_100078b4, i32* %r0.global-to-local, align 4
  %v0_100078b8 = load i32, i32* @r23, align 4
  store i32 %v0_100078b8, i32* @r3, align 4
  %v2_100078bc = or i32 %v2_100078b4, %v1_100078b0
  store i32 %v2_100078bc, i32* %r9.global-to-local, align 4
  store i32 %v2_100078bc, i32* @global_var_1001d2e0.188, align 4
  %v0_100078c8 = load i32, i32* @r29, align 4
  %v1_100078c8 = trunc i32 %v0_100078c8 to i16
  store i16 %v1_100078c8, i16* bitcast (i32* @global_var_1001d2da.189 to i16*), align 4
  %v2_100078cc = call i32 @function_10005814(i32 %v0_100078b8, i32 20)
  %v3_100078cc = trunc i32 %v2_100078cc to i16
  %v3_100078d0 = load i64, i64* %stack_var_-1920, align 8
  %v4_100078d0 = trunc i64 %v3_100078d0 to i32
  store i32 %v4_100078d0, i32* %r9.global-to-local, align 4
  store i16 %v3_100078cc, i16* bitcast (i32* @global_var_1001d2da.189 to i16*), align 4
  %v4_100078e0 = mul nsw i64 %v3_100078d0, 1717986919
  %v5_100078e0 = udiv i64 %v4_100078e0, 4294967296
  %v6_100078e0 = trunc i64 %v5_100078e0 to i32
  %tmp = icmp slt i32 %v4_100078d0, 0
  %v1_100078e4 = zext i1 %tmp to i32
  %v2_100078e4 = ashr i32 %v4_100078d0, 31
  %v3_100078e4 = and i32 %v2_100078e4, -2
  %v4_100078e4 = or i32 %v3_100078e4, %v1_100078e4
  store i32 %v4_100078e4, i32* %r11.global-to-local, align 4
  %v1_100078e845 = udiv i64 %v4_100078e0, 17179869184
  %v1_100078e8 = trunc i64 %v1_100078e845 to i32
  %v2_100078e8 = ashr i32 %v6_100078e0, 31
  %v3_100078e8 = and i32 %v2_100078e8, -1073741824
  %v4_100078e8 = or i32 %v3_100078e8, %v1_100078e8
  %v2_100078ec = sub nsw i32 %v4_100078e8, %v4_100078e4
  %v1_100078f0 = mul i32 %v2_100078ec, 10
  %v2_100078f4 = icmp slt i32 %v4_100078d0, %v1_100078f0
  %v4_100078f4 = icmp eq i32 %v4_100078d0, %v1_100078f0
  store i1 %v2_100078f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100078f4, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_100078f4, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001d2e6.154, align 2
  %v3_10007904 = load i32, i32* @global_var_1001d2e0.188, align 4
  store i32 %v3_10007904, i32* %r0.global-to-local, align 4
  %v0_10007908 = load i32, i32* @r24, align 4
  store i32 %v0_10007908, i32* @r4, align 4
  %v0_1000790c = load i32, i32* @r29, align 4
  %v1_1000790c = trunc i32 %v0_1000790c to i16
  store i16 %v1_1000790c, i16* bitcast (i32* @global_var_1001d2f4.190 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_10007904, i32* @global_var_1001d2e8.191, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_1000791c = load i32, i32* @r23, align 4
  store i32 %v0_1000791c, i32* %r3.global-to-local, align 4
  %v4_10007920 = call i32 @function_10005878(i32 %v0_1000791c, i32 %v0_10007908, i32 20, i32 20)
  %v5_10007920 = trunc i32 %v4_10007920 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10007920, i16* bitcast (i32* @global_var_1001d2f4.190 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10007930 = load i32, i32* @global_var_1001d2e0.188, align 4
  store i32 %v3_10007930, i32* %r9.global-to-local, align 4
  %v0_10007934 = load i32, i32* @r23, align 4
  %v3_10007938 = load i16, i16* @global_var_1001d2e6.154, align 2
  %v4_10007938 = zext i16 %v3_10007938 to i32
  store i32 %v4_10007938, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10007940 = load i32, i32* @global_var_1001d264.144, align 4
  store i32 %v3_10007940, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007948 = load i32, i32* @r28, align 4
  store i32 %v0_10007948, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268466528, i32* @lr, align 4
  %v6_1000795c = call i32 @function_1000aa74(i32 %v3_10007940, i32 %v0_10007934, i32 40, i32 16384, i32 %v0_10007948, i32 16)
  store i32 %v6_1000795c, i32* %r3.global-to-local, align 4
  %v3_10007960 = load i64, i64* %stack_var_-1920, align 8
  %v4_10007960 = trunc i64 %v3_10007960 to i32
  %v1_10007964 = add i32 %v4_10007960, 1
  store i32 %v1_10007964, i32* %r9.global-to-local, align 4
  %v1_10007968 = icmp slt i32 %v1_10007964, 383
  %v3_10007968 = icmp eq i32 %v1_10007964, 383
  store i1 %v1_10007968, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007968, i1* %cr7_eq.global-to-local, align 1
  %v5_1000796c = sext i32 %v1_10007964 to i64
  store i64 %v5_1000796c, i64* %stack_var_-1920, align 8
  %tmp105 = icmp slt i32 %v1_10007964, 384
  br i1 %tmp105, label %dec_label_pc_100078a4.dec_label_pc_1000779c_crit_edge, label %dec_label_pc_10007974

dec_label_pc_100078a4.dec_label_pc_1000779c_crit_edge: ; preds = %dec_label_pc_100078a4
  %v0_1000779c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000779c

dec_label_pc_10007974:                            ; preds = %dec_label_pc_100078a4
  %v0_10007974 = load i32, i32* @r31, align 4
  store i32 %v0_10007974, i32* @r30, align 4
  br label %dec_label_pc_10007978

dec_label_pc_10007978:                            ; preds = %dec_label_pc_1000777c, %dec_label_pc_10007974
  %v0_10007978 = call i32 @function_1000a4bc()
  store i32 %v0_10007978, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 %v0_10007978, i32* @r31, align 4
  %v1_10007990 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_100079dc = zext i8 %tmp57 to i32
  %v1_100079e0 = icmp ult i8 %tmp57, 6
  %v3_100079e0 = icmp eq i8 %tmp57, 6
  %v4_100079e8 = zext i16 %tmp56 to i32
  %v1_100079f0 = icmp ult i16 %tmp56, 23
  %v3_100079f0 = icmp eq i16 %tmp56, 23
  %v4_10007a00 = zext i16 %tmp55 to i32
  %v1_10007a10 = and i32 %tmp54, 131072
  %v3_10007a10 = icmp eq i32 %v1_10007a10, 0
  %v1_10007a38 = add i32 %tmp53, -1
  %v2_10007a3c = icmp slt i32 %v1_10007a38, %tmp52
  %v4_10007a3c = icmp eq i32 %v1_10007a38, %tmp52
  %v1_10007a18 = and i32 %tmp54, 1048576
  %v3_10007a18 = icmp eq i32 %v1_10007a18, 0
  %v1_10007a20 = and i32 %tmp54, 262144
  %v3_10007a20 = icmp eq i32 %v1_10007a20, 0
  %v1_10007a28 = and i32 %tmp54, 65536
  %v3_10007a28 = icmp eq i32 %v1_10007a28, 0
  %v1_100079f8 = icmp ult i16 %tmp56, 2323
  %v3_100079f8 = icmp eq i16 %tmp56, 2323
  br label %dec_label_pc_10007984

dec_label_pc_10007984:                            ; preds = %dec_label_pc_10007a30, %dec_label_pc_10007a28, %dec_label_pc_10007a20, %dec_label_pc_10007a00, %dec_label_pc_100079f8, %dec_label_pc_100079dc, %dec_label_pc_100079c8, %dec_label_pc_10007a18, %dec_label_pc_10007a0c, %dec_label_pc_100079c0, %dec_label_pc_10007978
  %v1_1000798c = phi i32 [ %v0_10007978, %dec_label_pc_10007978 ], [ %v0_100079b4, %dec_label_pc_100079c0 ], [ %v0_100079b4, %dec_label_pc_10007a0c ], [ %v0_100079b4, %dec_label_pc_10007a18 ], [ %v0_100079b4, %dec_label_pc_100079c8 ], [ %v0_100079b4, %dec_label_pc_100079dc ], [ %v0_100079b4, %dec_label_pc_100079f8 ], [ %v0_100079b4, %dec_label_pc_10007a00 ], [ %v0_100079b4, %dec_label_pc_10007a20 ], [ %v0_100079b4, %dec_label_pc_10007a28 ], [ %v0_100079b4, %dec_label_pc_10007a30 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_1000798c = inttoptr i32 %v1_1000798c to i32*
  store i32 0, i32* %v2_1000798c, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_1000799c = load i32, i32* @global_var_1001d264.144, align 4
  store i32 %v3_1000799c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268466604, i32* @lr, align 4
  %v6_100079a8 = call i32 @function_1000a9fc(i32 %v3_1000799c, i32 %v1_10007990, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_100079a8, i32* %r3.global-to-local, align 4
  %tmp106 = icmp slt i32 %v6_100079a8, 1
  br i1 %tmp106, label %dec_label_pc_10007ad4, label %dec_label_pc_100079b4

dec_label_pc_100079b4:                            ; preds = %dec_label_pc_10007984, %dec_label_pc_10007a98
  %v0_100079c0 = phi i32 [ %v6_10007ac8, %dec_label_pc_10007a98 ], [ %v6_100079a8, %dec_label_pc_10007984 ]
  %v0_100079b4 = load i32, i32* @r31, align 4
  %v1_100079b4 = inttoptr i32 %v0_100079b4 to i32*
  %v2_100079b4 = load i32, i32* %v1_100079b4, align 4
  store i32 %v2_100079b4, i32* %r0.global-to-local, align 4
  %v1_100079b8 = icmp slt i32 %v2_100079b4, 11
  %v3_100079b8 = icmp eq i32 %v2_100079b4, 11
  store i1 %v1_100079b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100079b8, label %dec_label_pc_10007ad4, label %dec_label_pc_100079c0

dec_label_pc_100079c0:                            ; preds = %dec_label_pc_100079b4
  %v1_100079c0 = icmp ult i32 %v0_100079c0, 39
  %v3_100079c0 = icmp eq i32 %v0_100079c0, 39
  store i1 %v1_100079c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079c0, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_100079c0, 40
  br i1 %tmp107, label %dec_label_pc_10007984, label %dec_label_pc_100079c8

dec_label_pc_100079c8:                            ; preds = %dec_label_pc_100079c0
  %v3_100079cc = load i32, i32* @global_var_1001d230.61, align 4
  store i32 %v3_100079cc, i32* %r0.global-to-local, align 4
  store i32 %tmp58, i32* %r9.global-to-local, align 4
  %v2_100079d4 = icmp slt i32 %tmp58, %v3_100079cc
  %v4_100079d4 = icmp eq i32 %tmp58, %v3_100079cc
  store i1 %v2_100079d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100079d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100079d4, label %dec_label_pc_100079dc, label %dec_label_pc_10007984

dec_label_pc_100079dc:                            ; preds = %dec_label_pc_100079c8
  store i32 %v4_100079dc, i32* %r0.global-to-local, align 4
  store i1 %v1_100079e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100079e0, label %dec_label_pc_100079e8, label %dec_label_pc_10007984

dec_label_pc_100079e8:                            ; preds = %dec_label_pc_100079dc
  store i32 %v4_100079e8, i32* %r8.global-to-local, align 4
  store i32 %v4_100079e8, i32* %r0.global-to-local, align 4
  store i1 %v1_100079f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100079f0, label %dec_label_pc_10007a00, label %dec_label_pc_100079f8

dec_label_pc_100079f8:                            ; preds = %dec_label_pc_100079e8
  store i1 %v1_100079f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100079f8, label %dec_label_pc_10007a00, label %dec_label_pc_10007984

dec_label_pc_10007a00:                            ; preds = %dec_label_pc_100079f8, %dec_label_pc_100079e8
  store i32 %v4_10007a00, i32* %r0.global-to-local, align 4
  %v1_10007a04 = load i32, i32* @r22, align 4
  %v2_10007a04 = icmp slt i32 %v4_10007a00, %v1_10007a04
  %v4_10007a04 = icmp eq i32 %v4_10007a00, %v1_10007a04
  store i1 %v2_10007a04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007a04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007a04, label %dec_label_pc_10007a0c, label %dec_label_pc_10007984

dec_label_pc_10007a0c:                            ; preds = %dec_label_pc_10007a00
  store i32 %tmp54, i32* %r0.global-to-local, align 4
  store i32 %v1_10007a10, i32* %r10.global-to-local, align 4
  br i1 %v3_10007a10, label %dec_label_pc_10007984, label %dec_label_pc_10007a18

dec_label_pc_10007a18:                            ; preds = %dec_label_pc_10007a0c
  store i32 %v1_10007a18, i32* %r11.global-to-local, align 4
  br i1 %v3_10007a18, label %dec_label_pc_10007984, label %dec_label_pc_10007a20

dec_label_pc_10007a20:                            ; preds = %dec_label_pc_10007a18
  store i32 %v1_10007a20, i32* %r9.global-to-local, align 4
  br i1 %v3_10007a20, label %dec_label_pc_10007a28, label %dec_label_pc_10007984

dec_label_pc_10007a28:                            ; preds = %dec_label_pc_10007a20
  store i32 %v1_10007a28, i32* %r10.global-to-local, align 4
  br i1 %v3_10007a28, label %dec_label_pc_10007a30, label %dec_label_pc_10007984

dec_label_pc_10007a30:                            ; preds = %dec_label_pc_10007a28
  store i32 %tmp53, i32* %r9.global-to-local, align 4
  store i32 %tmp52, i32* %r0.global-to-local, align 4
  store i32 %v1_10007a38, i32* %r10.global-to-local, align 4
  store i1 %v2_10007a3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007a3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007a3c, label %dec_label_pc_10007a44, label %dec_label_pc_10007984

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_10007a30
  %v0_10007a44 = load i32, i32* @r29, align 4
  %v1_10007a44 = icmp slt i32 %v0_10007a44, 255
  %v2_10007a44 = icmp sgt i32 %v0_10007a44, 255
  %v3_10007a44 = icmp eq i32 %v0_10007a44, 255
  store i1 %v1_10007a44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007a44, label %dec_label_pc_10007ad4, label %dec_label_pc_10007a4c

dec_label_pc_10007a4c:                            ; preds = %dec_label_pc_10007a44
  %v3_10007a54 = load i32, i32* @global_var_1001d260.143, align 4
  store i32 %v3_10007a54, i32* %r11.global-to-local, align 4
  %v1_10007a58 = mul i32 %v0_10007a44, 256
  store i32 %v1_10007a58, i32* %r9.global-to-local, align 4
  %v2_10007a5c = mul i32 %v0_10007a44, 288
  store i32 %v2_10007a5c, i32* %r0.global-to-local, align 4
  %v2_10007a60 = add i32 %v3_10007a54, %v2_10007a5c
  store i32 %v2_10007a60, i32* @r3, align 4
  %v1_10007a64 = add i32 %v2_10007a60, 12
  %v2_10007a64 = inttoptr i32 %v1_10007a64 to i32*
  %v3_10007a64 = load i32, i32* %v2_10007a64, align 4
  store i32 %v3_10007a64, i32* %r9.global-to-local, align 4
  %v1_10007a68 = icmp slt i32 %v3_10007a64, 0
  %v3_10007a68 = icmp eq i32 %v3_10007a64, 0
  store i1 %v1_10007a68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a68, label %dec_label_pc_10007a98, label %dec_label_pc_10007a70

dec_label_pc_10007a70:                            ; preds = %dec_label_pc_10007a4c
  %v1_10007a70 = sub i32 256, %v0_10007a44
  store i32 %v1_10007a70, i32* %r11.global-to-local, align 4
  %v1_10007a74 = add i32 %v2_10007a60, 288
  store i32 %v1_10007a74, i32* %r9.global-to-local, align 4
  store i32 %v1_10007a70, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007a7c

dec_label_pc_10007a7c:                            ; preds = %dec_label_pc_10007a84, %dec_label_pc_10007a70
  %v0_10007a84 = phi i32 [ %v1_10007a8c, %dec_label_pc_10007a84 ], [ %v1_10007a74, %dec_label_pc_10007a70 ]
  %v0_10007a80 = phi i32 [ %v1_10007a80, %dec_label_pc_10007a84 ], [ %v1_10007a70, %dec_label_pc_10007a70 ]
  %v0_10007a7c = phi i32 [ %v1_10007a7c, %dec_label_pc_10007a84 ], [ %v0_10007a44, %dec_label_pc_10007a70 ]
  %v1_10007a7c = add i32 %v0_10007a7c, 1
  store i32 %v1_10007a7c, i32* @r29, align 4
  %v1_10007a80 = add i32 %v0_10007a80, -1
  store i32 %v1_10007a80, i32* %ctr.global-to-local, align 4
  %v2_10007a80 = icmp eq i32 %v1_10007a80, 0
  br i1 %v2_10007a80, label %dec_label_pc_10007ad4, label %dec_label_pc_10007a84

dec_label_pc_10007a84:                            ; preds = %dec_label_pc_10007a7c
  %v1_10007a84 = add i32 %v0_10007a84, 12
  %v2_10007a84 = inttoptr i32 %v1_10007a84 to i32*
  %v3_10007a84 = load i32, i32* %v2_10007a84, align 4
  store i32 %v3_10007a84, i32* %r0.global-to-local, align 4
  store i32 %v0_10007a84, i32* @r3, align 4
  %v1_10007a8c = add i32 %v0_10007a84, 288
  store i32 %v1_10007a8c, i32* %r9.global-to-local, align 4
  %v1_10007a90 = icmp slt i32 %v3_10007a84, 0
  %v3_10007a90 = icmp eq i32 %v3_10007a84, 0
  store i1 %v1_10007a90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a90, label %dec_label_pc_10007a98, label %dec_label_pc_10007a7c

dec_label_pc_10007a98:                            ; preds = %dec_label_pc_10007a84, %dec_label_pc_10007a4c
  %v1_10007a98 = phi i32 [ %v2_10007a60, %dec_label_pc_10007a4c ], [ %v0_10007a84, %dec_label_pc_10007a84 ]
  %v2_10007a98 = add i32 %v1_10007a98, 16
  %v3_10007a98 = inttoptr i32 %v2_10007a98 to i32*
  store i32 %tmp52, i32* %v3_10007a98, align 4
  %v0_10007a9c = load i32, i32* %r8.global-to-local, align 4
  %v1_10007a9c = trunc i32 %v0_10007a9c to i16
  %v2_10007a9c = load i32, i32* @r3, align 4
  %v3_10007a9c = add i32 %v2_10007a9c, 20
  %v4_10007a9c = inttoptr i32 %v3_10007a9c to i16*
  store i16 %v1_10007a9c, i16* %v4_10007a9c, align 2
  store i32 ptrtoint (i32* @global_var_10007aa4.192 to i32), i32* @lr, align 4
  %v0_10007aa0 = call i32 @function_10006fc0()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007aa8 = load i32, i32* @r31, align 4
  %v2_10007aa8 = inttoptr i32 %v1_10007aa8 to i32*
  store i32 0, i32* %v2_10007aa8, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  %v3_10007ab8 = load i32, i32* @global_var_1001d264.144, align 4
  store i32 %v3_10007ab8, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268466892, i32* @lr, align 4
  %v6_10007ac8 = call i32 @function_1000a9fc(i32 %v3_10007ab8, i32 %v1_10007990, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10007ac8, i32* %r3.global-to-local, align 4
  %v2_10007acc = icmp sgt i32 %v6_10007ac8, 0
  br i1 %v2_10007acc, label %dec_label_pc_100079b4, label %dec_label_pc_10007ad4

dec_label_pc_10007ad4:                            ; preds = %dec_label_pc_10007984, %dec_label_pc_10007a98, %dec_label_pc_10007a44, %dec_label_pc_100079b4, %dec_label_pc_10007a7c
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10007aec139 = load i32, i32* @r1, align 4
  %v3_10007aec140 = add i32 %v2_10007aec139, 64
  %v4_10007aec141 = inttoptr i32 %v3_10007aec140 to i32*
  store i32 0, i32* %v4_10007aec141, align 4
  %v0_10007af0142 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007af0143 = add i32 %v0_10007af0142, -1
  store i32 %v1_10007af0143, i32* %ctr.global-to-local, align 4
  %v2_10007af0144 = icmp eq i32 %v1_10007af0143, 0
  br i1 %v2_10007af0144, label %dec_label_pc_10007af4, label %dec_label_pc_10007ae4.dec_label_pc_10007ae4_crit_edge

dec_label_pc_10007ae4.dec_label_pc_10007ae4_crit_edge: ; preds = %dec_label_pc_10007ad4, %dec_label_pc_10007ae4.dec_label_pc_10007ae4_crit_edge
  %v0_10007ae4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007aec.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10007ae4 = add i32 %v0_10007ae4.pre, 64
  store i32 %v1_10007ae4, i32* %r11.global-to-local, align 4
  %v1_10007ae8 = add i32 %v0_10007ae4.pre, 4
  store i32 %v1_10007ae8, i32* %r9.global-to-local, align 4
  %v2_10007aec = load i32, i32* @r1, align 4
  %v3_10007aec = add i32 %v2_10007aec, %v1_10007ae4
  %v4_10007aec = inttoptr i32 %v3_10007aec to i32*
  store i32 %v0_10007aec.pre, i32* %v4_10007aec, align 4
  %v0_10007af0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007af0 = add i32 %v0_10007af0, -1
  store i32 %v1_10007af0, i32* %ctr.global-to-local, align 4
  %v2_10007af0 = icmp eq i32 %v1_10007af0, 0
  br i1 %v2_10007af0, label %dec_label_pc_10007af4, label %dec_label_pc_10007ae4.dec_label_pc_10007ae4_crit_edge

dec_label_pc_10007af4:                            ; preds = %dec_label_pc_10007ae4.dec_label_pc_10007ae4_crit_edge, %dec_label_pc_10007ad4
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10007b0c133 = load i32, i32* @r1, align 4
  %v3_10007b0c134 = add i32 %v2_10007b0c133, 192
  %v4_10007b0c135 = inttoptr i32 %v3_10007b0c134 to i32*
  store i32 0, i32* %v4_10007b0c135, align 4
  %v0_10007b10136 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007b10137 = add i32 %v0_10007b10136, -1
  store i32 %v1_10007b10137, i32* %ctr.global-to-local, align 4
  %v2_10007b10138 = icmp eq i32 %v1_10007b10137, 0
  br i1 %v2_10007b10138, label %dec_label_pc_10007b14, label %dec_label_pc_10007b04.dec_label_pc_10007b04_crit_edge

dec_label_pc_10007b04.dec_label_pc_10007b04_crit_edge: ; preds = %dec_label_pc_10007af4, %dec_label_pc_10007b04.dec_label_pc_10007b04_crit_edge
  %v0_10007b04.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007b0c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10007b04 = add i32 %v0_10007b04.pre, 192
  store i32 %v1_10007b04, i32* %r11.global-to-local, align 4
  %v1_10007b08 = add i32 %v0_10007b04.pre, 4
  store i32 %v1_10007b08, i32* %r9.global-to-local, align 4
  %v2_10007b0c = load i32, i32* @r1, align 4
  %v3_10007b0c = add i32 %v2_10007b0c, %v1_10007b04
  %v4_10007b0c = inttoptr i32 %v3_10007b0c to i32*
  store i32 %v0_10007b0c.pre, i32* %v4_10007b0c, align 4
  %v0_10007b10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007b10 = add i32 %v0_10007b10, -1
  store i32 %v1_10007b10, i32* %ctr.global-to-local, align 4
  %v2_10007b10 = icmp eq i32 %v1_10007b10, 0
  br i1 %v2_10007b10, label %dec_label_pc_10007b14, label %dec_label_pc_10007b04.dec_label_pc_10007b04_crit_edge

dec_label_pc_10007b14:                            ; preds = %dec_label_pc_10007b04.dec_label_pc_10007b04_crit_edge, %dec_label_pc_10007af4
  %v0_10007b14 = load i32, i32* %r0.global-to-local, align 4
  %v5_10007b14 = sext i32 %v0_10007b14 to i64
  store i64 %v5_10007b14, i64* %stack_var_-1920, align 8
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v2_10007e94 = ptrtoint i32* %stack_var_-1928 to i32
  br label %dec_label_pc_10007b80

dec_label_pc_10007b30:                            ; preds = %dec_label_pc_10007ba8
  %v1_10007b30 = icmp slt i32 %v3_10007b9c, 1
  store i1 %v1_10007b30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ba0, i1* %cr7_eq.global-to-local, align 1
  %v1_10007e90 = add i32 %v2_10007b98, 4
  %v2_10007e90 = inttoptr i32 %v1_10007e90 to i32*
  %v3_10007e90 = load i32, i32* %v2_10007e90, align 4
  store i32 %v3_10007e90, i32* %r3.global-to-local, align 4
  br i1 %v3_10007ba0, label %dec_label_pc_10007e90, label %dec_label_pc_10007b38

dec_label_pc_10007b38:                            ; preds = %dec_label_pc_10007b30
  store i32 %v2_10007e94, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10007b44 = call i32 @__asm_rlwinm(i32 %v3_10007e90, i32 29, i32 3, i32 29)
  %v0_10007b48 = load i32, i32* %r27.global-to-local, align 4
  %v2_10007b48 = icmp slt i32 %v0_10007b48, %v3_10007e90
  %v4_10007b48 = icmp eq i32 %v0_10007b48, %v3_10007e90
  store i1 %v2_10007b48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007b48, i1* %cr7_eq.global-to-local, align 1
  %v1_10007b4c = load i32, i32* %r9.global-to-local, align 4
  %v2_10007b4c = add i32 %v1_10007b4c, %v1_10007b44
  store i32 %v2_10007b4c, i32* %r11.global-to-local, align 4
  %v1_10007b50 = urem i32 %v3_10007e90, 32
  store i32 %v1_10007b50, i32* %r10.global-to-local, align 4
  %v1_10007b54 = add i32 %v2_10007b4c, 56
  %v2_10007b54 = inttoptr i32 %v1_10007b54 to i32*
  %v3_10007b54 = load i32, i32* %v2_10007b54, align 4
  %v0_10007b58 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007b58 = shl i32 %v0_10007b58, %v1_10007b50
  store i32 %v3_10007b58, i32* %r0.global-to-local, align 4
  %v2_10007b5c = or i32 %v3_10007b58, %v3_10007b54
  store i32 %v2_10007b5c, i32* %r9.global-to-local, align 4
  store i32 %v2_10007b5c, i32* %v2_10007b54, align 4
  br i1 %v2_10007b48, label %dec_label_pc_10007b68, label %dec_label_pc_10007b6c

dec_label_pc_10007b68:                            ; preds = %dec_label_pc_10007b38
  store i32 %v3_10007e90, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10007b6c

dec_label_pc_10007b6c:                            ; preds = %dec_label_pc_10007e90, %dec_label_pc_10007b38, %dec_label_pc_10007e80, %dec_label_pc_10007ec4, %dec_label_pc_10007ebc, %dec_label_pc_10007b68
  %v3_10007b6c = load i64, i64* %stack_var_-1920, align 8
  %v4_10007b6c = trunc i64 %v3_10007b6c to i32
  store i32 %v4_10007b6c, i32* %r9.global-to-local, align 4
  %v1_10007b70 = add i32 %v4_10007b6c, 1
  store i32 %v1_10007b70, i32* %r0.global-to-local, align 4
  %v1_10007b74 = icmp slt i32 %v1_10007b70, 255
  %v2_10007b74 = icmp sgt i32 %v1_10007b70, 255
  %v3_10007b74 = icmp eq i32 %v1_10007b70, 255
  store i1 %v1_10007b74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b74, i1* %cr7_eq.global-to-local, align 1
  %v5_10007b78 = sext i32 %v1_10007b70 to i64
  store i64 %v5_10007b78, i64* %stack_var_-1920, align 8
  br i1 %v2_10007b74, label %dec_label_pc_10007c0c, label %dec_label_pc_10007b80

dec_label_pc_10007b80:                            ; preds = %dec_label_pc_10007bf0, %dec_label_pc_10007b6c, %dec_label_pc_10007b14
  %v0_10007b84 = phi i32 [ 0, %dec_label_pc_10007b14 ], [ %v1_10007b70, %dec_label_pc_10007b6c ], [ %v1_10007bfc, %dec_label_pc_10007bf0 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10007b88 = load i32, i32* @global_var_1001d260.143, align 4
  store i32 %v3_10007b88, i32* %r9.global-to-local, align 4
  %v2_10007b90 = mul i32 %v0_10007b84, 288
  store i32 %v2_10007b90, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10007b98 = add i32 %v3_10007b88, %v2_10007b90
  store i32 %v2_10007b98, i32* @r29, align 4
  %v1_10007b9c = add i32 %v2_10007b98, 12
  %v2_10007b9c = inttoptr i32 %v1_10007b9c to i32*
  %v3_10007b9c = load i32, i32* %v2_10007b9c, align 4
  store i32 %v3_10007b9c, i32* %r10.global-to-local, align 4
  %v1_10007ba0 = icmp eq i32 %v3_10007b9c, 0
  %v3_10007ba0 = icmp eq i32 %v3_10007b9c, 1
  store i1 %v1_10007ba0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ba0, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = or i32 %v3_10007b9c, 1
  %tmp110 = icmp eq i32 %tmp109, 1
  br i1 %tmp110, label %dec_label_pc_10007e80, label %dec_label_pc_10007ba8

dec_label_pc_10007ba8:                            ; preds = %dec_label_pc_10007b80, %dec_label_pc_10007e88
  %v1_10007bb4 = phi i32 [ 30, %dec_label_pc_10007b80 ], [ 5, %dec_label_pc_10007e88 ]
  %v3_10007ba8 = load i32, i32* @global_var_1001d25c.137, align 4
  store i32 %v3_10007ba8, i32* %r0.global-to-local, align 4
  %v1_10007bac = add i32 %v2_10007b98, 8
  %v2_10007bac = inttoptr i32 %v1_10007bac to i32*
  %v3_10007bac = load i32, i32* %v2_10007bac, align 4
  store i32 %v3_10007bac, i32* %r9.global-to-local, align 4
  %v2_10007bb0 = sub i32 %v3_10007ba8, %v3_10007bac
  store i32 %v2_10007bb0, i32* %r0.global-to-local, align 4
  %v2_10007bb4 = icmp ult i32 %v2_10007bb0, %v1_10007bb4
  %v3_10007bb4 = icmp ugt i32 %v2_10007bb0, %v1_10007bb4
  %v4_10007bb4 = icmp eq i32 %v2_10007bb0, %v1_10007bb4
  store i1 %v2_10007bb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007bb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bb4, label %dec_label_pc_10007bbc, label %dec_label_pc_10007b30

dec_label_pc_10007bbc:                            ; preds = %dec_label_pc_10007ba8
  %v1_10007bbc = add i32 %v2_10007b98, 4
  %v2_10007bbc = inttoptr i32 %v1_10007bbc to i32*
  %v3_10007bbc = load i32, i32* %v2_10007bbc, align 4
  store i32 %v3_10007bbc, i32* %r3.global-to-local, align 4
  store i32 268467140, i32* @lr, align 4
  %v0_10007bc0 = call i32 @function_10009de8()
  store i32 %v0_10007bc0, i32* %r3.global-to-local, align 4
  %v0_10007bc4 = load i32, i32* @r29, align 4
  %v1_10007bc4 = add i32 %v0_10007bc4, 12
  %v2_10007bc4 = inttoptr i32 %v1_10007bc4 to i32*
  %v3_10007bc4 = load i32, i32* %v2_10007bc4, align 4
  store i32 %v3_10007bc4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10007bcc = icmp ult i32 %v3_10007bc4, 2
  %v3_10007bcc = icmp eq i32 %v3_10007bc4, 2
  store i1 %v1_10007bcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bcc, i1* %cr7_eq.global-to-local, align 1
  %v2_10007bd0 = add i32 %v0_10007bc4, 4
  %v3_10007bd0 = inttoptr i32 %v2_10007bd0 to i32*
  store i32 -1, i32* %v3_10007bd0, align 4
  %tmp111 = icmp ult i32 %v3_10007bc4, 3
  br i1 %tmp111, label %dec_label_pc_10007ec4, label %dec_label_pc_10007bd8

dec_label_pc_10007bd8:                            ; preds = %dec_label_pc_10007bbc
  %v0_10007bd8 = load i32, i32* @r29, align 4
  %v1_10007bd8 = add i32 %v0_10007bd8, 284
  %v2_10007bd8 = inttoptr i32 %v1_10007bd8 to i8*
  %v3_10007bd8 = load i8, i8* %v2_10007bd8, align 1
  %v4_10007bd8 = zext i8 %v3_10007bd8 to i32
  %v1_10007bdc = add nuw nsw i32 %v4_10007bd8, 1
  %v1_10007be0 = urem i32 %v1_10007bdc, 256
  store i32 %v1_10007be0, i32* %r9.global-to-local, align 4
  %v1_10007be4 = icmp ult i32 %v1_10007be0, 10
  %v3_10007be4 = icmp eq i32 %v1_10007be0, 10
  store i1 %v1_10007be4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007be4, i1* %cr7_eq.global-to-local, align 1
  %v1_10007be8 = trunc i32 %v1_10007bdc to i8
  store i8 %v1_10007be8, i8* %v2_10007bd8, align 1
  %v0_10007bec = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007bec, label %dec_label_pc_10007ec4, label %dec_label_pc_10007bf0

dec_label_pc_10007bf0:                            ; preds = %dec_label_pc_10007bd8
  %v0_10007bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10007bf0, i32* @r3, align 4
  store i32 268467192, i32* @lr, align 4
  %v0_10007bf4 = call i32 @function_10006fc0()
  store i32 %v0_10007bf4, i32* %r3.global-to-local, align 4
  %v3_10007bf8 = load i64, i64* %stack_var_-1920, align 8
  %v4_10007bf8 = trunc i64 %v3_10007bf8 to i32
  store i32 %v4_10007bf8, i32* %r9.global-to-local, align 4
  %v1_10007bfc = add i32 %v4_10007bf8, 1
  store i32 %v1_10007bfc, i32* %r0.global-to-local, align 4
  %v1_10007c00 = icmp slt i32 %v1_10007bfc, 255
  %v3_10007c00 = icmp eq i32 %v1_10007bfc, 255
  store i1 %v1_10007c00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c00, i1* %cr7_eq.global-to-local, align 1
  %v5_10007c04 = sext i32 %v1_10007bfc to i64
  store i64 %v5_10007c04, i64* %stack_var_-1920, align 8
  %tmp112 = icmp slt i32 %v1_10007bfc, 256
  br i1 %tmp112, label %dec_label_pc_10007b80, label %dec_label_pc_10007c0c

dec_label_pc_10007c0c:                            ; preds = %dec_label_pc_10007bf0, %dec_label_pc_10007b6c
  %v0_10007c0c = load i32, i32* %r27.global-to-local, align 4
  %v1_10007c0c = load i32, i32* %r28.global-to-local, align 4
  %v2_10007c0c = icmp slt i32 %v0_10007c0c, %v1_10007c0c
  %v4_10007c0c = icmp eq i32 %v0_10007c0c, %v1_10007c0c
  store i1 %v2_10007c0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007c0c, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_10007c0c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10007c0c, label %dec_label_pc_10007c28, label %dec_label_pc_10007c2c

dec_label_pc_10007c28:                            ; preds = %dec_label_pc_10007c0c
  store i32 %v1_10007c0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007c2c

dec_label_pc_10007c2c:                            ; preds = %dec_label_pc_10007c0c, %dec_label_pc_10007c28
  %v0_10007c3c = phi i32 [ %v0_10007c0c, %dec_label_pc_10007c0c ], [ %v1_10007c0c, %dec_label_pc_10007c28 ]
  %v2_10007c2c = ptrtoint i32* %stack_var_-1872 to i32
  %v2_10007c30 = ptrtoint i32* %stack_var_-1744 to i32
  store i32 %v2_10007c30, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10007c38 = ptrtoint i32* %stack_var_-1908 to i32
  store i32 %v2_10007c38, i32* %r7.global-to-local, align 4
  %v1_10007c3c = add i32 %v0_10007c3c, 1
  store i32 %v1_10007c3c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c44.193 to i32), i32* @lr, align 4
  %v5_10007c40 = call i32 @function_1000a0b0(i32 %v1_10007c3c, i32 %v2_10007c2c, i32 %v2_10007c30, i32 0, i32 %v2_10007c38)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007c4c.194 to i32), i32* @lr, align 4
  %v0_10007c48 = call i32 @function_1000a1b8()
  store i32 %v0_10007c48, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10007c48, i32* @global_var_1001d25c.137, align 4
  %v0_10007c54 = load i32, i32* %r29.global-to-local, align 4
  %v5_10007c54 = sext i32 %v0_10007c54 to i64
  store i64 %v5_10007c54, i64* %stack_var_-1920, align 8
  %v2_10008940 = ptrtoint i32* %stack_var_-1912 to i32
  %v2_10008944 = ptrtoint i32* %stack_var_-1916 to i32
  br label %dec_label_pc_10007c70

dec_label_pc_10007c5c:                            ; preds = %dec_label_pc_10007cd4, %dec_label_pc_100087c8, %dec_label_pc_10007cb4, %dec_label_pc_10007c70, %dec_label_pc_10008ad8, %dec_label_pc_100089dc, %dec_label_pc_100087fc
  %v3_10007c5c = load i64, i64* %stack_var_-1920, align 8
  %v4_10007c5c = trunc i64 %v3_10007c5c to i32
  store i32 %v4_10007c5c, i32* %r9.global-to-local, align 4
  %v1_10007c60 = add i32 %v4_10007c5c, 1
  store i32 %v1_10007c60, i32* %r0.global-to-local, align 4
  %v1_10007c64 = icmp slt i32 %v1_10007c60, 255
  %v2_10007c64 = icmp sgt i32 %v1_10007c60, 255
  %v3_10007c64 = icmp eq i32 %v1_10007c60, 255
  store i1 %v1_10007c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c64, i1* %cr7_eq.global-to-local, align 1
  %v5_10007c68 = sext i32 %v1_10007c60 to i64
  store i64 %v5_10007c68, i64* %stack_var_-1920, align 8
  br i1 %v2_10007c64, label %dec_label_pc_1000777c, label %dec_label_pc_10007c70

dec_label_pc_10007c70:                            ; preds = %dec_label_pc_10007c5c, %dec_label_pc_10007c2c
  %v0_10007c74 = phi i32 [ %v1_10007c60, %dec_label_pc_10007c5c ], [ 0, %dec_label_pc_10007c2c ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10007c74 = mul i32 %v0_10007c74, 256
  store i32 %v1_10007c74, i32* %r11.global-to-local, align 4
  %v3_10007c78 = load i32, i32* @global_var_1001d260.143, align 4
  store i32 %v3_10007c78, i32* %r9.global-to-local, align 4
  %v2_10007c80 = mul i32 %v0_10007c74, 288
  store i32 %v2_10007c80, i32* %r0.global-to-local, align 4
  %v2_10007c84 = add i32 %v3_10007c78, %v2_10007c80
  store i32 %v2_10007c84, i32* @r28, align 4
  %v1_10007c88 = add i32 %v2_10007c84, 4
  %v2_10007c88 = inttoptr i32 %v1_10007c88 to i32*
  %v3_10007c88 = load i32, i32* %v2_10007c88, align 4
  store i32 %v3_10007c88, i32* %r3.global-to-local, align 4
  %v1_10007c8c = icmp slt i32 %v3_10007c88, -1
  %v3_10007c8c = icmp eq i32 %v3_10007c88, -1
  store i1 %v1_10007c8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c8c, label %dec_label_pc_10007c5c, label %dec_label_pc_10007c94

dec_label_pc_10007c94:                            ; preds = %dec_label_pc_10007c70
  store i32 %v2_10007e94, i32* %r11.global-to-local, align 4
  %v1_10007c98 = call i32 @__asm_rlwinm(i32 %v3_10007c88, i32 29, i32 3, i32 29)
  %v1_10007c9c = load i32, i32* %r11.global-to-local, align 4
  %v2_10007c9c = add i32 %v1_10007c9c, %v1_10007c98
  store i32 %v2_10007c9c, i32* %r9.global-to-local, align 4
  %v0_10007ca0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007ca0 = urem i32 %v0_10007ca0, 32
  store i32 %v1_10007ca0, i32* %r11.global-to-local, align 4
  %v1_10007ca4 = add i32 %v2_10007c9c, 184
  %v2_10007ca4 = inttoptr i32 %v1_10007ca4 to i32*
  %v3_10007ca4 = load i32, i32* %v2_10007ca4, align 4
  %v3_10007ca8 = lshr i32 %v3_10007ca4, %v1_10007ca0
  store i32 %v3_10007ca8, i32* %r0.global-to-local, align 4
  %v1_10007cac = urem i32 %v3_10007ca8, 2
  store i32 %v1_10007cac, i32* %r9.global-to-local, align 4
  %v3_10007cac = icmp eq i32 %v1_10007cac, 0
  br i1 %v3_10007cac, label %dec_label_pc_10007cb4, label %dec_label_pc_10008930

dec_label_pc_10007cb4:                            ; preds = %dec_label_pc_10007c94, %dec_label_pc_100089c8
  %v0_10007cb8 = phi i32 [ %v0_10007ca0, %dec_label_pc_10007c94 ], [ %v0_10007cb8.pre, %dec_label_pc_100089c8 ]
  store i32 %v2_10007e94, i32* %r0.global-to-local, align 4
  %v1_10007cb8 = call i32 @__asm_rlwinm(i32 %v0_10007cb8, i32 29, i32 3, i32 29)
  %v1_10007cbc = load i32, i32* %r0.global-to-local, align 4
  %v2_10007cbc = add i32 %v1_10007cbc, %v1_10007cb8
  store i32 %v2_10007cbc, i32* %r9.global-to-local, align 4
  %v0_10007cc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007cc0 = urem i32 %v0_10007cc0, 32
  store i32 %v1_10007cc0, i32* %r11.global-to-local, align 4
  %v1_10007cc4 = add i32 %v2_10007cbc, 56
  %v2_10007cc4 = inttoptr i32 %v1_10007cc4 to i32*
  %v3_10007cc4 = load i32, i32* %v2_10007cc4, align 4
  %v3_10007cc8 = lshr i32 %v3_10007cc4, %v1_10007cc0
  store i32 %v3_10007cc8, i32* %r0.global-to-local, align 4
  %v1_10007ccc = urem i32 %v3_10007cc8, 2
  store i32 %v1_10007ccc, i32* %r9.global-to-local, align 4
  %v3_10007ccc = icmp eq i32 %v1_10007ccc, 0
  br i1 %v3_10007ccc, label %dec_label_pc_10007c5c, label %dec_label_pc_10007cd4.preheader

dec_label_pc_10007cd4.preheader:                  ; preds = %dec_label_pc_10007cb4
  %v0_10007cd4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007cd4

dec_label_pc_10007cd4:                            ; preds = %dec_label_pc_10007cd4.preheader, %dec_label_pc_10007d40
  %v0_10008818 = phi i32 [ %v0_10007cd4.pre, %dec_label_pc_10007cd4.preheader ], [ %v0_10007d54, %dec_label_pc_10007d40 ]
  %v1_10007cd4 = add i32 %v0_10008818, 12
  %v2_10007cd4 = inttoptr i32 %v1_10007cd4 to i32*
  %v3_10007cd4 = load i32, i32* %v2_10007cd4, align 4
  store i32 %v3_10007cd4, i32* %r10.global-to-local, align 4
  %v1_10007cd8 = icmp slt i32 %v3_10007cd4, 0
  %v3_10007cd8 = icmp eq i32 %v3_10007cd4, 0
  store i1 %v1_10007cd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cd8, label %dec_label_pc_10007c5c, label %dec_label_pc_10007ce0

dec_label_pc_10007ce0:                            ; preds = %dec_label_pc_10007cd4
  %v1_10007ce0 = add i32 %v0_10008818, 24
  %v2_10007ce0 = inttoptr i32 %v1_10007ce0 to i32*
  %v3_10007ce0 = load i32, i32* %v2_10007ce0, align 4
  store i32 %v3_10007ce0, i32* %r0.global-to-local, align 4
  %v1_10007ce4 = add i32 %v0_10008818, 28
  store i32 %v1_10007ce4, i32* %r26.global-to-local, align 4
  %v1_10007ce8 = icmp slt i32 %v3_10007ce0, 256
  %v3_10007ce8 = icmp eq i32 %v3_10007ce0, 256
  store i1 %v1_10007ce8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ce8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ce8, label %dec_label_pc_10008810, label %dec_label_pc_10007cf0

dec_label_pc_10007cf0:                            ; preds = %dec_label_pc_10007ce0, %dec_label_pc_10008810
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10007cf8 = load i32, i32* @r31, align 4
  %v2_10007cf8 = inttoptr i32 %v1_10007cf8 to i32*
  store i32 0, i32* %v2_10007cf8, align 4
  %v0_10007cfc = load i32, i32* @r28, align 4
  %v1_10007cfc = add i32 %v0_10007cfc, 24
  %v2_10007cfc = inttoptr i32 %v1_10007cfc to i32*
  %v3_10007cfc = load i32, i32* %v2_10007cfc, align 4
  store i32 %v3_10007cfc, i32* %r5.global-to-local, align 4
  %v1_10007d00 = add i32 %v0_10007cfc, 4
  %v2_10007d00 = inttoptr i32 %v1_10007d00 to i32*
  %v3_10007d00 = load i32, i32* %v2_10007d00, align 4
  store i32 %v3_10007d00, i32* %r3.global-to-local, align 4
  %v0_10007d04 = load i32, i32* %r26.global-to-local, align 4
  %v2_10007d04 = add i32 %v0_10007d04, %v3_10007cfc
  store i32 %v2_10007d04, i32* @r29, align 4
  %v1_10007d08 = sub i32 256, %v3_10007cfc
  store i32 %v1_10007d08, i32* %r5.global-to-local, align 4
  store i32 268467476, i32* @lr, align 4
  %v4_10007d10 = call i32 @function_1000a9c4(i32 %v3_10007d00, i32 %v2_10007d04, i32 %v1_10007d08, i32 16384)
  store i32 %v4_10007d10, i32* %r3.global-to-local, align 4
  %tmp114 = icmp slt i32 %v4_10007d10, 1
  br i1 %tmp114, label %dec_label_pc_100087bc, label %dec_label_pc_10007d1c

dec_label_pc_10007d1c:                            ; preds = %dec_label_pc_10007cf0
  store i32 %v4_10007d10, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007d28

dec_label_pc_10007d28:                            ; preds = %dec_label_pc_10007d38, %dec_label_pc_10007d1c
  %v0_10007d3c41 = phi i32 [ %v1_10007d3c, %dec_label_pc_10007d38 ], [ %v4_10007d10, %dec_label_pc_10007d1c ]
  %v1_10007d34 = phi i32 [ %v1_10007d38, %dec_label_pc_10007d38 ], [ 0, %dec_label_pc_10007d1c ]
  %v1_10007d28 = load i32, i32* @r29, align 4
  %v2_10007d28 = add i32 %v1_10007d28, %v1_10007d34
  %v3_10007d28 = inttoptr i32 %v2_10007d28 to i8*
  %v4_10007d28 = load i8, i8* %v3_10007d28, align 1
  %v5_10007d28 = zext i8 %v4_10007d28 to i32
  store i32 %v5_10007d28, i32* %r0.global-to-local, align 4
  %v3_10007d2c = icmp eq i8 %v4_10007d28, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d2c, label %dec_label_pc_10007d34, label %dec_label_pc_10007d38

dec_label_pc_10007d34:                            ; preds = %dec_label_pc_10007d28
  %v0_10007d34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007d34 = trunc i32 %v0_10007d34 to i8
  store i8 %v3_10007d34, i8* %v3_10007d28, align 1
  %v0_10007d38.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007d3c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007d38

dec_label_pc_10007d38:                            ; preds = %dec_label_pc_10007d28, %dec_label_pc_10007d34
  %v0_10007d3c = phi i32 [ %v0_10007d3c41, %dec_label_pc_10007d28 ], [ %v0_10007d3c.pre, %dec_label_pc_10007d34 ]
  %v0_10007d38 = phi i32 [ %v1_10007d34, %dec_label_pc_10007d28 ], [ %v0_10007d38.pre, %dec_label_pc_10007d34 ]
  %v1_10007d38 = add i32 %v0_10007d38, 1
  store i32 %v1_10007d38, i32* %r9.global-to-local, align 4
  %v1_10007d3c = add i32 %v0_10007d3c, -1
  store i32 %v1_10007d3c, i32* %ctr.global-to-local, align 4
  %v2_10007d3c = icmp eq i32 %v1_10007d3c, 0
  br i1 %v2_10007d3c, label %dec_label_pc_10007d40, label %dec_label_pc_10007d28

dec_label_pc_10007d40:                            ; preds = %dec_label_pc_10007d38, %dec_label_pc_100087c0
  %v0_10007d40 = load i32, i32* @r28, align 4
  %v1_10007d40 = add i32 %v0_10007d40, 24
  %v2_10007d40 = inttoptr i32 %v1_10007d40 to i32*
  %v3_10007d40 = load i32, i32* %v2_10007d40, align 4
  %v3_10007d44 = load i32, i32* @global_var_1001d25c.137, align 4
  store i32 %v3_10007d44, i32* %r0.global-to-local, align 4
  %v2_10007d48 = add i32 %v3_10007d40, %v4_10007d10
  store i32 %v2_10007d48, i32* %r5.global-to-local, align 4
  store i32 %v2_10007d48, i32* %v2_10007d40, align 4
  %v0_10007d50 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007d50 = load i32, i32* @r28, align 4
  %v2_10007d50 = add i32 %v1_10007d50, 8
  %v3_10007d50 = inttoptr i32 %v2_10007d50 to i32*
  store i32 %v0_10007d50, i32* %v3_10007d50, align 4
  %v0_10007d54 = load i32, i32* @r28, align 4
  %v1_10007d54 = add i32 %v0_10007d54, 12
  %v2_10007d54 = inttoptr i32 %v1_10007d54 to i32*
  %v3_10007d54 = load i32, i32* %v2_10007d54, align 4
  store i32 %v3_10007d54, i32* %r10.global-to-local, align 4
  %v1_10007d58 = icmp ult i32 %v3_10007d54, 10
  %v2_10007d58 = icmp ugt i32 %v3_10007d54, 10
  %v3_10007d58 = icmp eq i32 %v3_10007d54, 10
  store i1 %v1_10007d58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007d58, label %dec_label_pc_10007cd4, label %dec_label_pc_10007d60

dec_label_pc_10007d60:                            ; preds = %dec_label_pc_10007d40
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10007d64 = mul i32 %v3_10007d54, 4
  store i32 %v1_10007d64, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c7b8.187 to i32), i32* %r11.global-to-local, align 4
  %v2_10007d6c = add i32 %v1_10007d64, ptrtoint (i32* @global_var_1000c7b8.187 to i32)
  %v3_10007d6c = inttoptr i32 %v2_10007d6c to i32*
  %v4_10007d6c = load i32, i32* %v3_10007d6c, align 4
  %v2_10007d70 = add i32 %v4_10007d6c, ptrtoint (i32* @global_var_1000c7b8.187 to i32)
  store i32 %v2_10007d70, i32* %r9.global-to-local, align 4
  store i32 %v2_10007d70, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10007d70)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007d8c = load i32, i32* @r29, align 4
  store i32 %v0_10007d8c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1916, align 4
  store i32 268467608, i32* @lr, align 4
  %v4_10007d94 = call i32 @function_1000aa3c(i32 %v0_10007d8c, i32 %v2_10008944, i32 1, i32 16384)
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007da4 = load i32, i32* @r29, align 4
  store i32 %v0_10007da4, i32* %r3.global-to-local, align 4
  store i32 268467628, i32* @lr, align 4
  %v4_10007da8 = call i32 @function_1000aa3c(i32 %v0_10007da4, i32 %v2_10008940, i32 4, i32 16384)
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007db8 = load i32, i32* @r29, align 4
  store i32 %v0_10007db8, i32* %r3.global-to-local, align 4
  store i32 268467648, i32* @lr, align 4
  %v4_10007dbc = call i32 @function_1000aa3c(i32 %v0_10007db8, i32 %v2_10007e94, i32 2, i32 16384)
  %v0_10007dc0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007dc0 = add i32 %v0_10007dc0, 12
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007dcc = load i32, i32* @r29, align 4
  store i32 %v0_10007dcc, i32* %r3.global-to-local, align 4
  store i32 268467668, i32* @lr, align 4
  %v4_10007dd0 = call i32 @function_1000aa3c(i32 %v0_10007dcc, i32 %v1_10007dc0, i32 1, i32 16384)
  store i32 %v4_10007dd0, i32* %r3.global-to-local, align 4
  %v0_10007dd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007dd4 = inttoptr i32 %v0_10007dd4 to i32*
  %v2_10007dd4 = load i32, i32* %v1_10007dd4, align 4
  %v1_10007dd8 = add i32 %v0_10007dd4, 12
  %v2_10007dd8 = inttoptr i32 %v1_10007dd8 to i8*
  %v3_10007dd8 = load i8, i8* %v2_10007dd8, align 1
  %v4_10007dd8 = zext i8 %v3_10007dd8 to i32
  store i32 %v4_10007dd8, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007de0 = load i32, i32* @r29, align 4
  store i32 %v0_10007de0, i32* %r3.global-to-local, align 4
  store i32 268467688, i32* @lr, align 4
  %v4_10007de4 = call i32 @function_1000aa3c(i32 %v0_10007de0, i32 %v2_10007dd4, i32 %v4_10007dd8, i32 16384)
  %v0_10007de8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007de8 = add i32 %v0_10007de8, 13
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007df4 = load i32, i32* @r29, align 4
  store i32 %v0_10007df4, i32* %r3.global-to-local, align 4
  store i32 268467708, i32* @lr, align 4
  %v4_10007df8 = call i32 @function_1000aa3c(i32 %v0_10007df4, i32 %v1_10007de8, i32 1, i32 16384)
  store i32 %v4_10007df8, i32* %r3.global-to-local, align 4
  %v0_10007dfc = load i32, i32* %r25.global-to-local, align 4
  %v1_10007dfc = add i32 %v0_10007dfc, 13
  %v2_10007dfc = inttoptr i32 %v1_10007dfc to i8*
  %v3_10007dfc = load i8, i8* %v2_10007dfc, align 1
  %v4_10007dfc = zext i8 %v3_10007dfc to i32
  store i32 %v4_10007dfc, i32* %r5.global-to-local, align 4
  %v1_10007e00 = add i32 %v0_10007dfc, 4
  %v2_10007e00 = inttoptr i32 %v1_10007e00 to i32*
  %v3_10007e00 = load i32, i32* %v2_10007e00, align 4
  %v0_10007e04 = load i32, i32* @r29, align 4
  store i32 %v0_10007e04, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268467728, i32* @lr, align 4
  %v4_10007e0c = call i32 @function_1000aa3c(i32 %v0_10007e04, i32 %v3_10007e00, i32 %v4_10007dfc, i32 16384)
  %v0_10007e10 = load i32, i32* @r29, align 4
  store i32 %v0_10007e10, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e18.195 to i32), i32* @lr, align 4
  %v0_10007e14 = call i32 @function_10009de8()
  store i32 %v0_10007e14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007e18

dec_label_pc_10007e18:                            ; preds = %dec_label_pc_100073c4, %dec_label_pc_10008aa0, %dec_label_pc_10007d60
  %v0_10007e1c = call i32 @function_1000b39c()
  store i32 %v0_10007e1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007e20

dec_label_pc_10007e20:                            ; preds = %dec_label_pc_1000780c, %dec_label_pc_10007e18
  %v0_100078b016 = phi i32 [ %v0_10007e1c, %dec_label_pc_10007e18 ], [ %v1_100077d4, %dec_label_pc_1000780c ]
  %v0_10007e20 = load i32, i32* @r9, align 4
  %v1_10007e20 = icmp slt i32 %v0_10007e20, 168
  %v3_10007e20 = icmp eq i32 %v0_10007e20, 168
  store i1 %v1_10007e20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e20, label %dec_label_pc_100077c0.preheader, label %dec_label_pc_10007e20.dec_label_pc_100078a4_crit_edge

dec_label_pc_10007e20.dec_label_pc_100078a4_crit_edge: ; preds = %dec_label_pc_10007e20
  %v0_100078a4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100078a4

dec_label_pc_10007e2c:                            ; preds = %dec_label_pc_10007814
  %v0_10007e2c = load i32, i32* @r9, align 4
  %v1_10007e2c = icmp ult i32 %v0_10007e2c, 15
  %v3_10007e2c = icmp eq i32 %v0_10007e2c, 15
  store i1 %v1_10007e2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e2c, i1* %cr7_eq.global-to-local, align 1
  %tmp115 = icmp ult i32 %v0_10007e2c, 16
  br i1 %tmp115, label %dec_label_pc_100078a4, label %dec_label_pc_10007e34

dec_label_pc_10007e34:                            ; preds = %dec_label_pc_10007e2c
  %v1_10007e34 = icmp ult i32 %v0_10007e2c, 31
  %v3_10007e34 = icmp eq i32 %v0_10007e2c, 31
  store i1 %v1_10007e34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e34, i1* %cr7_eq.global-to-local, align 1
  %tmp116 = icmp ult i32 %v0_10007e2c, 32
  br i1 %tmp116, label %dec_label_pc_100077c0, label %dec_label_pc_100078a4

dec_label_pc_10007e40:                            ; preds = %dec_label_pc_1000781c
  %v0_10007e40 = load i32, i32* @r9, align 4
  %v1_10007e40 = icmp ult i32 %v0_10007e40, 63
  %v3_10007e40 = icmp eq i32 %v0_10007e40, 63
  store i1 %v1_10007e40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e40, i1* %cr7_eq.global-to-local, align 1
  %tmp117 = icmp ult i32 %v0_10007e40, 64
  br i1 %tmp117, label %dec_label_pc_100078a4, label %dec_label_pc_10007e48

dec_label_pc_10007e48:                            ; preds = %dec_label_pc_10007e40
  %v1_10007e48 = icmp ult i32 %v0_10007e40, 126
  %v3_10007e48 = icmp eq i32 %v0_10007e40, 126
  store i1 %v1_10007e48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e48, i1* %cr7_eq.global-to-local, align 1
  %tmp118 = icmp ult i32 %v0_10007e40, 127
  br i1 %tmp118, label %dec_label_pc_100077c0, label %dec_label_pc_100078a4

dec_label_pc_10007e54:                            ; preds = %dec_label_pc_10007824
  %v0_10007e54 = load i32, i32* @r9, align 4
  %v1_10007e54 = icmp slt i32 %v0_10007e54, 255
  %v3_10007e54 = icmp eq i32 %v0_10007e54, 255
  store i1 %v1_10007e54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e54, label %dec_label_pc_100077c0, label %dec_label_pc_100078a4

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_1000782c
  %v0_10007e60 = load i32, i32* @r9, align 4
  %v1_10007e60 = icmp ult i32 %v0_10007e60, 17
  %v3_10007e60 = icmp eq i32 %v0_10007e60, 17
  store i1 %v1_10007e60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e60, i1* %cr7_eq.global-to-local, align 1
  %tmp119 = icmp ult i32 %v0_10007e60, 18
  br i1 %tmp119, label %dec_label_pc_100078a4, label %dec_label_pc_10007e68

dec_label_pc_10007e68:                            ; preds = %dec_label_pc_10007e60
  %v1_10007e68 = icmp eq i32 %v0_10007e60, 18
  %v3_10007e68 = icmp eq i32 %v0_10007e60, 19
  store i1 %v1_10007e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e68, i1* %cr7_eq.global-to-local, align 1
  %tmp120 = icmp ult i32 %v0_10007e60, 20
  br i1 %tmp120, label %dec_label_pc_100077c0, label %dec_label_pc_100078a4

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007b80
  %v1_10007e80 = icmp slt i32 %v3_10007b9c, 0
  store i1 %v1_10007e80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10007ba0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10007ba0, label %dec_label_pc_10007b6c, label %dec_label_pc_10007e88

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007e80
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007ba8

dec_label_pc_10007e90:                            ; preds = %dec_label_pc_10007b30
  store i32 %v2_10007e94, i32* %r0.global-to-local, align 4
  %v1_10007e98 = call i32 @__asm_rlwinm(i32 %v3_10007e90, i32 29, i32 3, i32 29)
  %v0_10007e9c = load i32, i32* %r28.global-to-local, align 4
  %v2_10007e9c = icmp slt i32 %v0_10007e9c, %v3_10007e90
  %v4_10007e9c = icmp eq i32 %v0_10007e9c, %v3_10007e90
  store i1 %v2_10007e9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007e9c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007ea0 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007ea0 = add i32 %v1_10007ea0, %v1_10007e98
  store i32 %v2_10007ea0, i32* %r11.global-to-local, align 4
  %v1_10007ea4 = urem i32 %v3_10007e90, 32
  store i32 %v1_10007ea4, i32* %r0.global-to-local, align 4
  %v1_10007ea8 = add i32 %v2_10007ea0, 184
  %v2_10007ea8 = inttoptr i32 %v1_10007ea8 to i32*
  %v3_10007ea8 = load i32, i32* %v2_10007ea8, align 4
  %v0_10007eac = load i32, i32* %r10.global-to-local, align 4
  %v3_10007eac = shl i32 %v0_10007eac, %v1_10007ea4
  store i32 %v3_10007eac, i32* %r0.global-to-local, align 4
  %v2_10007eb0 = or i32 %v3_10007eac, %v3_10007ea8
  store i32 %v2_10007eb0, i32* %r9.global-to-local, align 4
  store i32 %v2_10007eb0, i32* %v2_10007ea8, align 4
  br i1 %v2_10007e9c, label %dec_label_pc_10007ebc, label %dec_label_pc_10007b6c

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007e90
  store i32 %v3_10007e90, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007b6c

dec_label_pc_10007ec4:                            ; preds = %dec_label_pc_10007bd8, %dec_label_pc_10007bbc
  %v0_10007ec4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007ec4 = load i32, i32* @r29, align 4
  %v2_10007ec4 = add i32 %v1_10007ec4, 12
  %v3_10007ec4 = inttoptr i32 %v2_10007ec4 to i32*
  store i32 %v0_10007ec4, i32* %v3_10007ec4, align 4
  %v0_10007ec8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007ec8 = trunc i32 %v0_10007ec8 to i8
  %v2_10007ec8 = load i32, i32* @r29, align 4
  %v3_10007ec8 = add i32 %v2_10007ec8, 284
  %v4_10007ec8 = inttoptr i32 %v3_10007ec8 to i8*
  store i8 %v1_10007ec8, i8* %v4_10007ec8, align 1
  br label %dec_label_pc_10007b6c

dec_label_pc_100087bc:                            ; preds = %dec_label_pc_10007cf0
  %v3_10007d14 = icmp eq i32 %v4_10007d10, 0
  br i1 %v3_10007d14, label %dec_label_pc_10008a84, label %dec_label_pc_100087c0

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087bc
  %v1_100087c0 = icmp slt i32 %v4_10007d10, -1
  %v3_100087c0 = icmp eq i32 %v4_10007d10, -1
  store i1 %v1_100087c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100087c0, label %dec_label_pc_100087c8, label %dec_label_pc_10007d40

dec_label_pc_100087c8:                            ; preds = %dec_label_pc_100087c0
  %v0_100087c8 = load i32, i32* @r31, align 4
  %v1_100087c8 = inttoptr i32 %v0_100087c8 to i32*
  %v2_100087c8 = load i32, i32* %v1_100087c8, align 4
  store i32 %v2_100087c8, i32* %r0.global-to-local, align 4
  %v1_100087cc = icmp slt i32 %v2_100087c8, 11
  %v3_100087cc = icmp eq i32 %v2_100087c8, 11
  store i1 %v1_100087cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100087cc, label %dec_label_pc_10007c5c, label %dec_label_pc_100087d4

dec_label_pc_100087d4:                            ; preds = %dec_label_pc_100087c8, %dec_label_pc_10008a84
  %v0_100087d4 = load i32, i32* @r28, align 4
  %v1_100087d4 = add i32 %v0_100087d4, 4
  %v2_100087d4 = inttoptr i32 %v1_100087d4 to i32*
  %v3_100087d4 = load i32, i32* %v2_100087d4, align 4
  store i32 %v3_100087d4, i32* %r3.global-to-local, align 4
  store i32 268470236, i32* @lr, align 4
  %v0_100087d8 = call i32 @function_10009de8()
  store i32 %v0_100087d8, i32* %r3.global-to-local, align 4
  %v0_100087dc = load i32, i32* @r28, align 4
  %v1_100087dc = add i32 %v0_100087dc, 284
  %v2_100087dc = inttoptr i32 %v1_100087dc to i8*
  %v3_100087dc = load i8, i8* %v2_100087dc, align 1
  %v4_100087dc = zext i8 %v3_100087dc to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100087e4 = add nuw nsw i32 %v4_100087dc, 1
  store i32 %v1_100087e4, i32* %r9.global-to-local, align 4
  %v2_100087e8 = add i32 %v0_100087dc, 4
  %v3_100087e8 = inttoptr i32 %v2_100087e8 to i32*
  store i32 -1, i32* %v3_100087e8, align 4
  %v0_100087ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100087ec = urem i32 %v0_100087ec, 256
  store i32 %v1_100087ec, i32* %r9.global-to-local, align 4
  %v1_100087f0 = icmp ult i32 %v1_100087ec, 9
  %v3_100087f0 = icmp eq i32 %v1_100087ec, 9
  store i1 %v1_100087f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100087f4 = trunc i32 %v0_100087ec to i8
  %v2_100087f4 = load i32, i32* @r28, align 4
  %v3_100087f4 = add i32 %v2_100087f4, 284
  %v4_100087f4 = inttoptr i32 %v3_100087f4 to i8*
  store i8 %v1_100087f4, i8* %v4_100087f4, align 1
  %v0_100087f8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100087f8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100087f8 = or i1 %v0_100087f8, %v1_100087f8
  br i1 %v2_100087f8, label %dec_label_pc_10008ad8, label %dec_label_pc_100087fc

dec_label_pc_100087fc:                            ; preds = %dec_label_pc_100087d4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008804 = load i32, i32* @r28, align 4
  %v2_10008804 = add i32 %v1_10008804, 12
  %v3_10008804 = inttoptr i32 %v2_10008804 to i32*
  store i32 0, i32* %v3_10008804, align 4
  %v0_10008808 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008808 = trunc i32 %v0_10008808 to i8
  %v2_10008808 = load i32, i32* @r28, align 4
  %v3_10008808 = add i32 %v2_10008808, 284
  %v4_10008808 = inttoptr i32 %v3_10008808 to i8*
  store i8 %v1_10008808, i8* %v4_10008808, align 1
  br label %dec_label_pc_10007c5c

dec_label_pc_10008810:                            ; preds = %dec_label_pc_10007ce0
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10007ce4, i32* %r3.global-to-local, align 4
  %v1_10008818 = add i32 %v0_10008818, 92
  store i32 268470304, i32* @lr, align 4
  %v3_1000881c = call i32 @function_1000a500(i32 %v1_10007ce4, i32 %v1_10008818, i32 192)
  store i32 %v3_1000881c, i32* %r3.global-to-local, align 4
  %v0_10008820 = load i32, i32* @r28, align 4
  %v1_10008820 = add i32 %v0_10008820, 24
  %v2_10008820 = inttoptr i32 %v1_10008820 to i32*
  %v3_10008820 = load i32, i32* %v2_10008820, align 4
  store i32 %v3_10008820, i32* %r9.global-to-local, align 4
  %v1_10008824 = add i32 %v3_10008820, -64
  store i32 %v1_10008824, i32* %r5.global-to-local, align 4
  store i32 %v1_10008824, i32* %v2_10008820, align 4
  br label %dec_label_pc_10007cf0

dec_label_pc_10008930:                            ; preds = %dec_label_pc_10007c94
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10008940, i32* %r6.global-to-local, align 4
  store i32 %v2_10008944, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1916, align 4
  store i32 0, i32* %stack_var_-1912, align 4
  store i32 268470612, i32* @lr, align 4
  %v5_10008950 = call i32 @function_1000a958(i32 1, i32 4, i32 %v2_10008940, i32 %v2_10008944, i32 %v1_10007cac)
  store i32 %v5_10008950, i32* %r3.global-to-local, align 4
  %v3_10008954 = load i32, i32* %stack_var_-1912, align 4
  store i32 %v3_10008954, i32* %r0.global-to-local, align 4
  %v2_10008958 = or i32 %v3_10008954, %v5_10008950
  store i32 %v2_10008958, i32* %r9.global-to-local, align 4
  %v5_10008958 = icmp eq i32 %v2_10008958, 0
  br i1 %v5_10008958, label %dec_label_pc_10008960, label %dec_label_pc_100089dc

dec_label_pc_10008960:                            ; preds = %dec_label_pc_10008930
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10008964 = load i32, i32* @r28, align 4
  %v2_10008964 = add i32 %v1_10008964, 12
  %v3_10008964 = inttoptr i32 %v2_10008964 to i32*
  store i32 2, i32* %v3_10008964, align 4
  %v0_10008968 = call i32 @function_10006dc0()
  %v3_10008970 = load i16, i16* @global_var_1001d258.140, align 2
  %v4_10008970 = zext i16 %v3_10008970 to i32
  store i32 %v4_10008970, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10008978 = load i32, i32* @global_var_1001d250.138, align 4
  store i32 %v3_10008978, i32* %r10.global-to-local, align 4
  %v1_10008980 = icmp slt i32 %v3_10008978, 0
  %v3_10008980 = icmp eq i32 %v3_10008978, 0
  store i1 %v1_10008980, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008980, i1* %cr7_eq.global-to-local, align 1
  %v2_1000897c = urem i32 %v0_10008968, %v4_10008970
  %v2_10008984 = sub i32 %v0_10008968, %v2_1000897c
  store i32 %v2_10008984, i32* %r0.global-to-local, align 4
  store i32 %v2_1000897c, i32* %r3.global-to-local, align 4
  %tmp122 = icmp slt i32 %v3_10008978, 1
  br i1 %tmp122, label %dec_label_pc_10008a7c, label %dec_label_pc_10008994

dec_label_pc_10008994:                            ; preds = %dec_label_pc_10008960
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10008978, i32* %ctr.global-to-local, align 4
  %v3_1000899c = load i32, i32* @global_var_1001d254.139, align 4
  store i32 %v3_1000899c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100089ac

dec_label_pc_100089a4:                            ; preds = %dec_label_pc_100089bc, %dec_label_pc_100089ac
  %v4_100089c08 = phi i1 [ %v4_100089c0, %dec_label_pc_100089bc ], [ %v4_100089b4, %dec_label_pc_100089ac ]
  %v2_100089c06 = phi i1 [ %v2_100089c0, %dec_label_pc_100089bc ], [ %v2_100089b4, %dec_label_pc_100089ac ]
  %v1_100089a4 = add i32 %v0_100089a4, 16
  store i32 %v1_100089a4, i32* %r0.global-to-local, align 4
  %v1_100089a8 = add i32 %v0_100089a8, -1
  store i32 %v1_100089a8, i32* %ctr.global-to-local, align 4
  %v2_100089a8 = icmp eq i32 %v1_100089a8, 0
  br i1 %v2_100089a8, label %dec_label_pc_10008a7c.loopexit, label %dec_label_pc_100089ac

dec_label_pc_100089ac:                            ; preds = %dec_label_pc_100089a4, %dec_label_pc_10008994
  %v0_100089a8 = phi i32 [ %v1_100089a8, %dec_label_pc_100089a4 ], [ %v3_10008978, %dec_label_pc_10008994 ]
  %v0_100089a4 = phi i32 [ %v1_100089a4, %dec_label_pc_100089a4 ], [ %v3_1000899c, %dec_label_pc_10008994 ]
  store i32 %v0_100089a4, i32* %r9.global-to-local, align 4
  %v1_100089b0 = add i32 %v0_100089a4, 8
  %v2_100089b0 = inttoptr i32 %v1_100089b0 to i16*
  %v3_100089b0 = load i16, i16* %v2_100089b0, align 2
  %v4_100089b0 = zext i16 %v3_100089b0 to i32
  store i32 %v4_100089b0, i32* %r0.global-to-local, align 4
  %v2_100089b4 = icmp ult i32 %v4_100089b0, %v2_1000897c
  %v3_100089b4 = icmp ugt i32 %v4_100089b0, %v2_1000897c
  %v4_100089b4 = icmp eq i32 %v4_100089b0, %v2_1000897c
  br i1 %v3_100089b4, label %dec_label_pc_100089a4, label %dec_label_pc_100089bc

dec_label_pc_100089bc:                            ; preds = %dec_label_pc_100089ac
  %v1_100089bc = add i32 %v0_100089a4, 10
  %v2_100089bc = inttoptr i32 %v1_100089bc to i16*
  %v3_100089bc = load i16, i16* %v2_100089bc, align 2
  %v4_100089bc = zext i16 %v3_100089bc to i32
  store i32 %v4_100089bc, i32* %r0.global-to-local, align 4
  %v2_100089c0 = icmp ult i32 %v4_100089bc, %v2_1000897c
  %v3_100089c0 = icmp ugt i32 %v4_100089bc, %v2_1000897c
  %v4_100089c0 = icmp eq i32 %v4_100089bc, %v2_1000897c
  br i1 %v3_100089c0, label %dec_label_pc_100089c8.loopexit, label %dec_label_pc_100089a4

dec_label_pc_100089c8.loopexit:                   ; preds = %dec_label_pc_100089bc
  store i1 %v2_100089c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100089c0, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100089c8

dec_label_pc_100089c8:                            ; preds = %dec_label_pc_100089c8.loopexit, %dec_label_pc_10008a7c
  %v0_100089d0 = phi i32 [ %v0_100089a4, %dec_label_pc_100089c8.loopexit ], [ 0, %dec_label_pc_10008a7c ]
  %v0_100089c8 = load i32, i32* @r28, align 4
  %v1_100089c8 = add i32 %v0_100089c8, 4
  %v2_100089c8 = inttoptr i32 %v1_100089c8 to i32*
  %v3_100089c8 = load i32, i32* %v2_100089c8, align 4
  store i32 %v3_100089c8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100089d0 = inttoptr i32 %v0_100089c8 to i32*
  store i32 %v0_100089d0, i32* %v2_100089d0, align 4
  %v0_100089d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100089d4 = load i32, i32* @r28, align 4
  %v2_100089d4 = add i32 %v1_100089d4, 24
  %v3_100089d4 = inttoptr i32 %v2_100089d4 to i32*
  store i32 %v0_100089d4, i32* %v3_100089d4, align 4
  %v0_10007cb8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007cb4

dec_label_pc_100089dc:                            ; preds = %dec_label_pc_10008930
  %v0_100089dc = load i32, i32* @r28, align 4
  %v1_100089dc = add i32 %v0_100089dc, 4
  %v2_100089dc = inttoptr i32 %v1_100089dc to i32*
  %v3_100089dc = load i32, i32* %v2_100089dc, align 4
  store i32 %v3_100089dc, i32* %r3.global-to-local, align 4
  store i32 268470756, i32* @lr, align 4
  %v0_100089e0 = call i32 @function_10009de8()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100089ec = load i32, i32* @r28, align 4
  %v2_100089ec = add i32 %v1_100089ec, 4
  %v3_100089ec = inttoptr i32 %v2_100089ec to i32*
  store i32 -1, i32* %v3_100089ec, align 4
  %v0_100089f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100089f0 = load i32, i32* @r28, align 4
  %v2_100089f0 = add i32 %v1_100089f0, 12
  %v3_100089f0 = inttoptr i32 %v2_100089f0 to i32*
  store i32 %v0_100089f0, i32* %v3_100089f0, align 4
  %v0_100089f4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100089f4 = trunc i32 %v0_100089f4 to i8
  %v2_100089f4 = load i32, i32* @r28, align 4
  %v3_100089f4 = add i32 %v2_100089f4, 284
  %v4_100089f4 = inttoptr i32 %v3_100089f4 to i8*
  store i8 %v1_100089f4, i8* %v4_100089f4, align 1
  br label %dec_label_pc_10007c5c

dec_label_pc_10008a7c.loopexit:                   ; preds = %dec_label_pc_100089a4
  store i1 %v2_100089c06, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100089c08, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10008a7c

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_10008a7c.loopexit, %dec_label_pc_10008960
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100089c8

dec_label_pc_10008a84:                            ; preds = %dec_label_pc_100087bc
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10008a88 = load i32, i32* @r31, align 4
  %v2_10008a88 = inttoptr i32 %v1_10008a88 to i32*
  store i32 104, i32* %v2_10008a88, align 4
  br label %dec_label_pc_100087d4

dec_label_pc_10008aa0:                            ; preds = %dec_label_pc_100073f0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10008aa4 = load i32, i32* @global_var_1001d264.144, align 4
  store i32 %v3_10008aa4, i32* %r3.global-to-local, align 4
  store i32 268470956, i32* @lr, align 4
  %v0_10008aa8 = call i32 @function_10009de8()
  store i32 %v0_10008aa8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007e18

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_100087d4
  %v0_10008ad8 = load i32, i32* @r28, align 4
  store i32 %v0_10008ad8, i32* @r3, align 4
  store i32 268471008, i32* @lr, align 4
  %v0_10008adc = call i32 @function_10006fc0()
  store i32 %v0_10008adc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007c5c

; uselistorder directives
  uselistorder i32 %v4_100089bc, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100089b0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100089a4, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_100089a8, { 0, 2, 1 }
  uselistorder i32 %v2_1000897c, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10008978, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_100087ec, { 1, 2, 0 }
  uselistorder i32 %v0_100087ec, { 1, 0 }
  uselistorder i32 %v2_100087c8, { 1, 0, 2 }
  uselistorder i32 %v1_10007ea4, { 1, 0 }
  uselistorder i32 %v0_10007e60, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10007e54, { 1, 2, 0 }
  uselistorder i32 %v0_10007e40, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10007e2c, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10007e20, { 1, 2, 0 }
  uselistorder i32 %v1_10007d64, { 1, 0 }
  uselistorder i32 %v3_10007d54, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10007d54, { 1, 0 }
  uselistorder i32 %v1_10007d3c, { 2, 1, 0 }
  uselistorder i32 %v1_10007d38, { 1, 0 }
  uselistorder i32 %v1_10007d34, { 1, 0 }
  uselistorder i32 %v4_10007d10, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_10007cfc, { 1, 0, 2 }
  uselistorder i32 %v1_10007ce4, { 1, 0, 2 }
  uselistorder i32 %v3_10007ce0, { 1, 0, 2 }
  uselistorder i32 %v3_10007cd4, { 1, 0, 2 }
  uselistorder i32 %v0_10008818, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10007ccc, { 1, 0 }
  uselistorder i32 %v1_10007cc0, { 1, 0 }
  uselistorder i32 %v1_10007cac, { 2, 1, 0 }
  uselistorder i32 %v1_10007ca0, { 1, 0 }
  uselistorder i32 %v0_10007ca0, { 1, 0 }
  uselistorder i32 %v3_10007c88, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10007c74, { 1, 0 }
  uselistorder i32 %v1_10007c60, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10008944, { 1, 2, 0 }
  uselistorder i32 %v2_10008940, { 1, 2, 0 }
  uselistorder i32 %v1_10007bfc, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10007be0, { 1, 2, 0 }
  uselistorder i32 %v1_10007bdc, { 1, 0 }
  uselistorder i32 %v3_10007bc4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10007bb0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10007bb4, { 2, 1, 0 }
  uselistorder i1 %v3_10007ba0, { 2, 0, 1 }
  uselistorder i1 %v1_10007ba0, { 1, 0, 2 }
  uselistorder i32 %v3_10007b9c, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v2_10007b98, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_10007b70, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_10007b50, { 1, 0 }
  uselistorder i32 %v3_10007e90, { 7, 0, 6, 5, 9, 2, 1, 4, 3, 8, 10 }
  uselistorder i32 %v2_10007e94, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v1_10007b10, { 1, 0 }
  uselistorder i32 %v1_10007af0, { 1, 0 }
  uselistorder i32 %v6_10007ac8, { 1, 2, 0 }
  uselistorder i32 %v1_10007a8c, { 1, 0 }
  uselistorder i32 %v3_10007a84, { 1, 0, 2 }
  uselistorder i32 %v1_10007a80, { 2, 1, 0 }
  uselistorder i32 %v1_10007a7c, { 1, 0 }
  uselistorder i32 %v0_10007a84, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10007a64, { 1, 0, 2 }
  uselistorder i32 %v0_10007a44, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_100079cc, { 1, 0, 2 }
  uselistorder i32 %v2_100079b4, { 1, 0, 2 }
  uselistorder i32 %v0_100079b4, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_100079c0, { 2, 1, 0 }
  uselistorder i1 %v3_100079f8, { 1, 0 }
  uselistorder i32 %v1_10007a28, { 1, 0 }
  uselistorder i32 %v1_10007a20, { 1, 0 }
  uselistorder i32 %v1_10007a18, { 1, 0 }
  uselistorder i32 %v1_10007a38, { 2, 1, 0 }
  uselistorder i32 %v1_10007a10, { 1, 0 }
  uselistorder i32 %v4_10007a00, { 1, 0, 2 }
  uselistorder i32 %v1_10007964, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100078f0, { 1, 0 }
  uselistorder i32 %v4_100078d0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10007840, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100077f0, { 3, 1, 2, 0 }
  uselistorder i32 %v0_100077dc, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 26, 25, 24, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 41, 43, 42, 44, 45 }
  uselistorder i32 %v1_100077c4, { 1, 2, 0 }
  uselistorder i32 %v0_100077c0, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_100077ac, { 1, 0 }
  uselistorder i32 %v3_1000777c, { 1, 0, 2 }
  uselistorder i32 %v0_10007484, { 1, 0 }
  uselistorder i32 %v1_10007444, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10007434, { 1, 0, 2 }
  uselistorder i32 %v3_100073d8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100073c0, { 1, 0 }
  uselistorder i32 %v0_100073bc, { 1, 0 }
  uselistorder i32 %v1_100073b8, { 1, 0 }
  uselistorder i32 %v0_100073a8, { 1, 2, 0 }
  uselistorder i32 %v2_10007368, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_100072c4, { 1, 5, 4, 2, 0, 3, 7, 6, 8 }
  uselistorder i64* %stack_var_-1920, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1908, { 1, 0 }
  uselistorder i32 %tmp58, { 1, 2, 0 }
  uselistorder i8 %tmp57, { 2, 1, 0 }
  uselistorder i16 %tmp56, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp54, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 29, 30, 25, 26, 27, 28, 31, 60, 61, 32, 58, 59, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 52, 53, 54, 56, 57 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r5.global-to-local, { 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 57, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32* %r3.global-to-local, { 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 28, 29, 30, 31, 32, 33, 35, 34, 37, 36, 38, 39, 40, 26, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63, 64, 66, 65, 67, 68, 69, 71, 70, 72, 73, 74, 75, 77, 76, 78, 79, 80, 81, 82, 83, 85, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r26.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r25.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 25, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 30, 14, 29, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 38, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 35, 36, 37, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 19, 20, 7, 8, 9, 17, 18, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 72, 71, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 28, 29, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74 }
  uselistorder i1* %cr7_eq.global-to-local, { 75, 73, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 29, 30, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76 }
  uselistorder i16* @global_var_1001d258.140, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000a958, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000aa3c, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a9c4, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000a0b0, { 2, 1, 0 }
  uselistorder i32 ()* @function_10006fc0, { 2, 1, 0 }
  uselistorder i32 39, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000a9fc, { 2, 1, 0 }
  uselistorder i32 1514, { 0, 2, 1, 3 }
  uselistorder i8 6, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000aa74, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16384, { 25, 34, 9, 35, 8, 36, 7, 37, 6, 38, 0, 39, 1, 40, 2, 41, 3, 42, 4, 43, 5, 44, 27, 28, 29, 30, 31, 32, 26, 10, 45, 11, 46, 47, 48, 12, 14, 13, 15, 49, 16, 50, 51, 18, 17, 19, 52, 20, 53, 33, 21, 22, 23, 24 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10005878, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10005814, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 198, { 1, 0, 2, 3 }
  uselistorder i32 172, { 1, 0, 4, 5, 6, 7, 2, 3 }
  uselistorder i32 192, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @function_100070ac, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001d2e6.154, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0, 4 }
  uselistorder i8 64, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 65536, { 61, 0, 1, 2, 3, 4, 6, 5, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 ()* @function_10006dc0, { 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 42, 43, 41, 40, 39, 38, 37, 36, 35, 34, 33, 3, 2, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000aab4, { 10, 9, 8, 7, 6, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 2048, { 3, 0, 1, 2, 4 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_1000a1b8, { 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 4, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 (i32)* @function_10006e10, { 1, 0 }
  uselistorder i32 (i32)* @function_100098a8, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10009e30, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100089c8, { 1, 0 }
  uselistorder label %dec_label_pc_100087d4, { 1, 0 }
  uselistorder label %dec_label_pc_10007e20, { 1, 0 }
  uselistorder label %dec_label_pc_10007e18, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007d40, { 1, 0 }
  uselistorder label %dec_label_pc_10007d38, { 1, 0 }
  uselistorder label %dec_label_pc_10007cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10007cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10007cb4, { 1, 0 }
  uselistorder label %dec_label_pc_10007c5c, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10007c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10007ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10007b6c, { 3, 4, 0, 2, 5, 1 }
  uselistorder label %dec_label_pc_10007b04.dec_label_pc_10007b04_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007ae4.dec_label_pc_10007ae4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007ad4, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_100079b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007984, { 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 10 }
  uselistorder label %dec_label_pc_10007978, { 1, 0 }
  uselistorder label %dec_label_pc_100078a4, { 0, 4, 1, 2, 5, 3, 6, 8, 7 }
  uselistorder label %dec_label_pc_100077c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10007440, { 1, 0 }
}

define i32 @function_10008ae4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10008ae4:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008ae4 = icmp eq i32* %arg2, null
  %v1_10008aec = mul i32 %arg1, 8
  store i32 %v1_10008aec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001d320.213 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10008ae4, label %dec_label_pc_10008b04, label %dec_label_pc_10008afc

dec_label_pc_10008afc:                            ; preds = %dec_label_pc_10008ae4
  %v1_10008afc = add i32 %v1_10008aec, add (i32 ptrtoint (i32* @global_var_1001d320.213 to i32), i32 4)
  %v2_10008afc = inttoptr i32 %v1_10008afc to i16*
  %v3_10008afc = load i16, i16* %v2_10008afc, align 4
  %v4_10008afc = zext i16 %v3_10008afc to i32
  store i32 %v4_10008afc, i32* %arg2, align 4
  %v0_10008b04.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10008b04.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008b04

dec_label_pc_10008b04:                            ; preds = %dec_label_pc_10008ae4, %dec_label_pc_10008afc
  %v1_10008b04 = phi i32 [ ptrtoint (i32* @global_var_1001d320.213 to i32), %dec_label_pc_10008ae4 ], [ %v1_10008b04.pre, %dec_label_pc_10008afc ]
  %v0_10008b04 = phi i32 [ %v1_10008aec, %dec_label_pc_10008ae4 ], [ %v0_10008b04.pre, %dec_label_pc_10008afc ]
  %v2_10008b04 = add i32 %v0_10008b04, %v1_10008b04
  %v3_10008b04 = inttoptr i32 %v2_10008b04 to i32*
  %v4_10008b04 = load i32, i32* %v3_10008b04, align 4
  store i32 %v4_10008b04, i32* %r3.global-to-local, align 4
  ret i32 %v4_10008b04

; uselistorder directives
  uselistorder i32 %v1_10008aec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008b04, { 1, 0 }
}

define i32 @function_10008b0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008b0c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008b10 = mul i32 %arg1, 8
  %v2_10008b18 = add i32 %v1_10008b10, ptrtoint (i32* @global_var_1001d320.213 to i32)
  %v1_10008b20 = add i32 %v1_10008b10, add (i32 ptrtoint (i32* @global_var_1001d320.213 to i32), i32 4)
  %v2_10008b20 = inttoptr i32 %v1_10008b20 to i16*
  %v3_10008b20 = load i16, i16* %v2_10008b20, align 4
  %v3_10008b24 = icmp eq i16 %v3_10008b20, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008b24, i1* %cr7_eq.global-to-local, align 1
  %v3_10008b28 = load i32, i32* @global_var_1001d21c.214, align 4
  %v1_10008b2c = udiv i32 %v3_10008b28, 16777216
  store i32 %v1_10008b2c, i32* @r5, align 4
  %v1_10008b30 = urem i32 %v3_10008b28, 256
  store i32 %v1_10008b30, i32* %r6.global-to-local, align 4
  %v1_10008b34 = call i32 @__asm_rlwinm(i32 %v3_10008b28, i32 24, i32 24, i32 31)
  %v1_10008b38 = call i32 @__asm_rlwinm(i32 %v3_10008b28, i32 16, i32 24, i32 31)
  %v0_10008b3c = load i32, i32* @lr, align 4
  %v1_10008b3c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008b3c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008b3c = or i1 %v1_10008b3c, %v2_10008b3c
  call void @__pseudo_cond_branch(i1 %v3_10008b3c, i32 %v0_10008b3c)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008b44 = inttoptr i32 %v2_10008b18 to i32*
  br label %dec_label_pc_10008b44

dec_label_pc_10008b44:                            ; preds = %dec_label_pc_10008b44, %dec_label_pc_10008b0c
  %v1_10008b50 = phi i32 [ %v1_10008b84, %dec_label_pc_10008b44 ], [ 0, %dec_label_pc_10008b0c ]
  %v2_10008b44 = load i32, i32* %v1_10008b44, align 4
  %v2_10008b48 = add i32 %v2_10008b44, %v1_10008b50
  %v3_10008b48 = inttoptr i32 %v2_10008b48 to i8*
  %v4_10008b48 = load i8, i8* %v3_10008b48, align 1
  %v5_10008b48 = zext i8 %v4_10008b48 to i32
  %v0_10008b4c = load i32, i32* %r6.global-to-local, align 4
  %v2_10008b4c = xor i32 %v0_10008b4c, %v5_10008b48
  %v3_10008b50 = trunc i32 %v2_10008b4c to i8
  store i8 %v3_10008b50, i8* %v3_10008b48, align 1
  %v2_10008b54 = load i32, i32* %v1_10008b44, align 4
  %v0_10008b58 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008b58 = add i32 %v0_10008b58, %v2_10008b54
  %v3_10008b58 = inttoptr i32 %v2_10008b58 to i8*
  %v4_10008b58 = load i8, i8* %v3_10008b58, align 1
  %v5_10008b58 = zext i8 %v4_10008b58 to i32
  %v2_10008b5c = xor i32 %v5_10008b58, %v1_10008b34
  %v3_10008b60 = trunc i32 %v2_10008b5c to i8
  store i8 %v3_10008b60, i8* %v3_10008b58, align 1
  %v2_10008b64 = load i32, i32* %v1_10008b44, align 4
  %v0_10008b68 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008b68 = add i32 %v0_10008b68, %v2_10008b64
  %v3_10008b68 = inttoptr i32 %v2_10008b68 to i8*
  %v4_10008b68 = load i8, i8* %v3_10008b68, align 1
  %v5_10008b68 = zext i8 %v4_10008b68 to i32
  %v2_10008b6c = xor i32 %v5_10008b68, %v1_10008b38
  %v3_10008b70 = trunc i32 %v2_10008b6c to i8
  store i8 %v3_10008b70, i8* %v3_10008b68, align 1
  %v2_10008b74 = load i32, i32* %v1_10008b44, align 4
  %v0_10008b78 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008b78 = add i32 %v0_10008b78, %v2_10008b74
  %v3_10008b78 = inttoptr i32 %v2_10008b78 to i8*
  %v4_10008b78 = load i8, i8* %v3_10008b78, align 1
  %v5_10008b78 = zext i8 %v4_10008b78 to i32
  %v0_10008b7c = load i32, i32* @r5, align 4
  %v2_10008b7c = xor i32 %v0_10008b7c, %v5_10008b78
  %v3_10008b80 = trunc i32 %v2_10008b7c to i8
  store i8 %v3_10008b80, i8* %v3_10008b78, align 1
  %v0_10008b84 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008b84 = add i32 %v0_10008b84, 1
  store i32 %v1_10008b84, i32* %r10.global-to-local, align 4
  %v3_10008b88 = load i16, i16* %v2_10008b20, align 4
  %v4_10008b88 = zext i16 %v3_10008b88 to i32
  %v2_10008b8c = icmp slt i32 %v4_10008b88, %v1_10008b84
  %v3_10008b8c = icmp sgt i32 %v4_10008b88, %v1_10008b84
  %v4_10008b8c = icmp eq i32 %v4_10008b88, %v1_10008b84
  store i1 %v2_10008b8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008b8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008b8c, label %dec_label_pc_10008b44, label %dec_label_pc_10008b94

dec_label_pc_10008b94:                            ; preds = %dec_label_pc_10008b44
  ret i32 %v2_10008b18

; uselistorder directives
  uselistorder i32 %v4_10008b88, { 2, 1, 0 }
  uselistorder i32 %v1_10008b84, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008b28, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008b10, { 1, 0 }
}

define i32 @function_10008b98(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008b98:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008b9c = mul i32 %arg1, 8
  %v2_10008ba4 = add i32 %v1_10008b9c, ptrtoint (i32* @global_var_1001d320.213 to i32)
  %v1_10008bac = add i32 %v1_10008b9c, add (i32 ptrtoint (i32* @global_var_1001d320.213 to i32), i32 4)
  %v2_10008bac = inttoptr i32 %v1_10008bac to i16*
  %v3_10008bac = load i16, i16* %v2_10008bac, align 4
  %v3_10008bb0 = icmp eq i16 %v3_10008bac, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008bb0, i1* %cr7_eq.global-to-local, align 1
  %v3_10008bb4 = load i32, i32* @global_var_1001d21c.214, align 4
  %v1_10008bb8 = udiv i32 %v3_10008bb4, 16777216
  store i32 %v1_10008bb8, i32* @r5, align 4
  %v1_10008bbc = urem i32 %v3_10008bb4, 256
  store i32 %v1_10008bbc, i32* %r6.global-to-local, align 4
  %v1_10008bc0 = call i32 @__asm_rlwinm(i32 %v3_10008bb4, i32 24, i32 24, i32 31)
  %v1_10008bc4 = call i32 @__asm_rlwinm(i32 %v3_10008bb4, i32 16, i32 24, i32 31)
  %v0_10008bc8 = load i32, i32* @lr, align 4
  %v1_10008bc8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008bc8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008bc8 = or i1 %v1_10008bc8, %v2_10008bc8
  call void @__pseudo_cond_branch(i1 %v3_10008bc8, i32 %v0_10008bc8)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008bd0 = inttoptr i32 %v2_10008ba4 to i32*
  br label %dec_label_pc_10008bd0

dec_label_pc_10008bd0:                            ; preds = %dec_label_pc_10008bd0, %dec_label_pc_10008b98
  %v1_10008bdc = phi i32 [ %v1_10008c10, %dec_label_pc_10008bd0 ], [ 0, %dec_label_pc_10008b98 ]
  %v2_10008bd0 = load i32, i32* %v1_10008bd0, align 4
  %v2_10008bd4 = add i32 %v2_10008bd0, %v1_10008bdc
  %v3_10008bd4 = inttoptr i32 %v2_10008bd4 to i8*
  %v4_10008bd4 = load i8, i8* %v3_10008bd4, align 1
  %v5_10008bd4 = zext i8 %v4_10008bd4 to i32
  %v0_10008bd8 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008bd8 = xor i32 %v0_10008bd8, %v5_10008bd4
  %v3_10008bdc = trunc i32 %v2_10008bd8 to i8
  store i8 %v3_10008bdc, i8* %v3_10008bd4, align 1
  %v2_10008be0 = load i32, i32* %v1_10008bd0, align 4
  %v0_10008be4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008be4 = add i32 %v0_10008be4, %v2_10008be0
  %v3_10008be4 = inttoptr i32 %v2_10008be4 to i8*
  %v4_10008be4 = load i8, i8* %v3_10008be4, align 1
  %v5_10008be4 = zext i8 %v4_10008be4 to i32
  %v2_10008be8 = xor i32 %v5_10008be4, %v1_10008bc0
  %v3_10008bec = trunc i32 %v2_10008be8 to i8
  store i8 %v3_10008bec, i8* %v3_10008be4, align 1
  %v2_10008bf0 = load i32, i32* %v1_10008bd0, align 4
  %v0_10008bf4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008bf4 = add i32 %v0_10008bf4, %v2_10008bf0
  %v3_10008bf4 = inttoptr i32 %v2_10008bf4 to i8*
  %v4_10008bf4 = load i8, i8* %v3_10008bf4, align 1
  %v5_10008bf4 = zext i8 %v4_10008bf4 to i32
  %v2_10008bf8 = xor i32 %v5_10008bf4, %v1_10008bc4
  %v3_10008bfc = trunc i32 %v2_10008bf8 to i8
  store i8 %v3_10008bfc, i8* %v3_10008bf4, align 1
  %v2_10008c00 = load i32, i32* %v1_10008bd0, align 4
  %v0_10008c04 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008c04 = add i32 %v0_10008c04, %v2_10008c00
  %v3_10008c04 = inttoptr i32 %v2_10008c04 to i8*
  %v4_10008c04 = load i8, i8* %v3_10008c04, align 1
  %v5_10008c04 = zext i8 %v4_10008c04 to i32
  %v0_10008c08 = load i32, i32* @r5, align 4
  %v2_10008c08 = xor i32 %v0_10008c08, %v5_10008c04
  %v3_10008c0c = trunc i32 %v2_10008c08 to i8
  store i8 %v3_10008c0c, i8* %v3_10008c04, align 1
  %v0_10008c10 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008c10 = add i32 %v0_10008c10, 1
  store i32 %v1_10008c10, i32* %r10.global-to-local, align 4
  %v3_10008c14 = load i16, i16* %v2_10008bac, align 4
  %v4_10008c14 = zext i16 %v3_10008c14 to i32
  %v2_10008c18 = icmp slt i32 %v4_10008c14, %v1_10008c10
  %v3_10008c18 = icmp sgt i32 %v4_10008c14, %v1_10008c10
  %v4_10008c18 = icmp eq i32 %v4_10008c14, %v1_10008c10
  store i1 %v2_10008c18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008c18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008c18, label %dec_label_pc_10008bd0, label %dec_label_pc_10008c20

dec_label_pc_10008c20:                            ; preds = %dec_label_pc_10008bd0
  ret i32 %v2_10008ba4

; uselistorder directives
  uselistorder i32 %v4_10008c14, { 2, 1, 0 }
  uselistorder i32 %v1_10008c10, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008bb4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_10008ba4, { 1, 0 }
  uselistorder i32 %v1_10008b9c, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6, 9, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001d320.213 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d320.213 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10008c24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008c24:
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 5, i32* %r15.global-to-local, align 4
  store i32 14, i32* %r16.global-to-local, align 4
  store i32 19, i32* %r17.global-to-local, align 4
  store i32 16, i32* %r19.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c8a4.215 to i32), i32* %r18.global-to-local, align 4
  store i32 8, i32* %r22.global-to-local, align 4
  store i32 9, i32* %r23.global-to-local, align 4
  store i32 23, i32* %r24.global-to-local, align 4
  store i32 6, i32* %r25.global-to-local, align 4
  store i32 7, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c8c8.216 to i32), i32* %r21.global-to-local, align 4
  store i32 268471468, i32* @lr, align 4
  %v0_10008ca8 = call i32 @function_1000acf4()
  store i32 %v0_10008ca8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cc8.218 to i32), i32* @lr, align 4
  %v3_10008cc4 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c7f4.217 to i32), i32 2, i32 2)
  store i32 2, i32* @r3, align 4
  %v0_10008ccc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ccc, i32* @global_var_1001d330.219, align 4
  store i32 268500992, i32* %r20.global-to-local, align 4
  %v0_10008cd4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008cd4 = trunc i32 %v0_10008cd4 to i16
  store i16 %v1_10008cd4, i16* bitcast (i32* @global_var_1001d334.220 to i16*), align 4
  store i32 268471516, i32* @lr, align 4
  %v0_10008cd8 = call i32 @function_1000acf4()
  store i32 %v0_10008cd8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cf0.222 to i32), i32* @lr, align 4
  %v3_10008cec = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c7f8.221 to i32), i32 2, i32 2)
  store i32 29, i32* @r3, align 4
  %v0_10008cf4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cf4, i32* @global_var_1001d340.223, align 4
  store i32 ptrtoint (i32* @global_var_1000c8d8.224 to i32), i32* %r20.global-to-local, align 4
  %v0_10008cfc = load i32, i32* %r27.global-to-local, align 4
  %v1_10008cfc = trunc i32 %v0_10008cfc to i16
  store i16 %v1_10008cfc, i16* bitcast (i32* @global_var_1001d344.225 to i16*), align 4
  store i32 268471556, i32* @lr, align 4
  %v0_10008d00 = call i32 @function_1000acf4()
  store i32 %v0_10008d00, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008d18.227 to i32), i32* @lr, align 4
  %v3_10008d14 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c7fc.226 to i32), i32 29, i32 29)
  store i32 7, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001d34c.228 to i16*), align 4
  %v0_10008d24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d24, i32* @global_var_1001d348.229, align 4
  store i32 268471596, i32* @lr, align 4
  %v0_10008d28 = call i32 @function_1000acf4()
  store i32 %v0_10008d28, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d40.231 to i32), i32* @lr, align 4
  %v3_10008d3c = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c81c.230 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10008d44 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d44, i32* @global_var_1001d350.232, align 4
  store i32 268500992, i32* %r27.global-to-local, align 4
  %v0_10008d4c = load i32, i32* %r26.global-to-local, align 4
  %v1_10008d4c = trunc i32 %v0_10008d4c to i16
  store i16 %v1_10008d4c, i16* bitcast (i32* @global_var_1001d354.233 to i16*), align 4
  store i32 268471636, i32* @lr, align 4
  %v0_10008d50 = call i32 @function_1000acf4()
  store i32 %v0_10008d50, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d68.235 to i32), i32* @lr, align 4
  %v3_10008d64 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c824.234 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10008d6c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d6c, i32* @global_var_1001d358.236, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000c8bc.237 to i32), i32* %r27.global-to-local, align 4
  %v0_10008d74 = load i32, i32* %r15.global-to-local, align 4
  %v1_10008d74 = trunc i32 %v0_10008d74 to i16
  store i16 %v1_10008d74, i16* bitcast (i32* @global_var_1001d35c.238 to i16*), align 4
  store i32 268471676, i32* @lr, align 4
  %v0_10008d78 = call i32 @function_1000acf4()
  store i32 %v0_10008d78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008d90.240 to i32), i32* @lr, align 4
  %v3_10008d8c = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c82c.239 to i32), i32 4, i32 4)
  store i32 14, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001d364.241 to i16*), align 4
  %v0_10008d9c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d9c, i32* @global_var_1001d360.242, align 4
  store i32 268471716, i32* @lr, align 4
  %v0_10008da0 = call i32 @function_1000acf4()
  store i32 %v0_10008da0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008db8.244 to i32), i32* @lr, align 4
  %v3_10008db4 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c834.243 to i32), i32 14, i32 14)
  store i32 6, i32* @r3, align 4
  %v0_10008dbc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008dbc, i32* @global_var_1001d368.245, align 4
  %v0_10008dc0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10008dc0 = trunc i32 %v0_10008dc0 to i16
  store i16 %v1_10008dc0, i16* bitcast (i32* @global_var_1001d36c.246 to i16*), align 4
  store i32 268471752, i32* @lr, align 4
  %v0_10008dc4 = call i32 @function_1000acf4()
  store i32 %v0_10008dc4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ddc.248 to i32), i32* @lr, align 4
  %v3_10008dd8 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c844.247 to i32), i32 6, i32 6)
  store i32 8, i32* @r3, align 4
  %v0_10008de0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008de0, i32* @global_var_1001d370.249, align 4
  %v0_10008de4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008de4 = trunc i32 %v0_10008de4 to i16
  store i16 %v1_10008de4, i16* bitcast (i32* @global_var_1001d374.250 to i16*), align 4
  store i32 268471788, i32* @lr, align 4
  %v0_10008de8 = call i32 @function_1000acf4()
  store i32 %v0_10008de8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e00.252 to i32), i32* @lr, align 4
  %v3_10008dfc = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c84c.251 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10008e04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e04, i32* @global_var_1001d378.253, align 4
  %v0_10008e08 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008e08 = trunc i32 %v0_10008e08 to i16
  store i16 %v1_10008e08, i16* bitcast (i32* @global_var_1001d37c.254 to i16*), align 4
  store i32 268471824, i32* @lr, align 4
  %v0_10008e0c = call i32 @function_1000acf4()
  store i32 %v0_10008e0c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e24.256 to i32), i32* @lr, align 4
  %v3_10008e20 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c858.255 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10008e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e28, i32* @global_var_1001d380.257, align 4
  %v0_10008e2c = load i32, i32* %r26.global-to-local, align 4
  %v1_10008e2c = trunc i32 %v0_10008e2c to i16
  store i16 %v1_10008e2c, i16* bitcast (i32* @global_var_1001d384.258 to i16*), align 4
  store i32 268471860, i32* @lr, align 4
  %v0_10008e30 = call i32 @function_1000acf4()
  store i32 %v0_10008e30, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e48.260 to i32), i32* @lr, align 4
  %v3_10008e44 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c860.259 to i32), i32 16, i32 16)
  store i32 14, i32* @r3, align 4
  %v0_10008e4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e4c, i32* @global_var_1001d388.261, align 4
  %v0_10008e50 = load i32, i32* %r19.global-to-local, align 4
  %v1_10008e50 = trunc i32 %v0_10008e50 to i16
  store i16 %v1_10008e50, i16* bitcast (i32* @global_var_1001d38c.262 to i16*), align 4
  store i32 268471896, i32* @lr, align 4
  %v0_10008e54 = call i32 @function_1000acf4()
  store i32 %v0_10008e54, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e6c.264 to i32), i32* @lr, align 4
  %v3_10008e68 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c874.263 to i32), i32 14, i32 14)
  store i32 9, i32* @r3, align 4
  %v0_10008e70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e70, i32* @global_var_1001d390.265, align 4
  %v0_10008e74 = load i32, i32* %r16.global-to-local, align 4
  %v1_10008e74 = trunc i32 %v0_10008e74 to i16
  store i16 %v1_10008e74, i16* bitcast (i32* @global_var_1001d394.266 to i16*), align 4
  store i32 268471932, i32* @lr, align 4
  %v0_10008e78 = call i32 @function_1000acf4()
  store i32 %v0_10008e78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e90.268 to i32), i32* @lr, align 4
  %v3_10008e8c = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c884.267 to i32), i32 9, i32 9)
  store i32 19, i32* @r3, align 4
  %v0_10008e94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e94, i32* @global_var_1001d398.269, align 4
  %v0_10008e98 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008e98 = trunc i32 %v0_10008e98 to i16
  store i16 %v1_10008e98, i16* bitcast (i32* @global_var_1001d39c.270 to i16*), align 4
  store i32 268471968, i32* @lr, align 4
  %v0_10008e9c = call i32 @function_1000acf4()
  store i32 %v0_10008e9c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008eb4.272 to i32), i32* @lr, align 4
  %v3_10008eb0 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c890.271 to i32), i32 19, i32 19)
  store i32 23, i32* @r3, align 4
  %v0_10008eb8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008eb8, i32* @global_var_1001d3a0.273, align 4
  %v0_10008ebc = load i32, i32* %r17.global-to-local, align 4
  %v1_10008ebc = trunc i32 %v0_10008ebc to i16
  store i16 %v1_10008ebc, i16* bitcast (i32* @global_var_1001d3a4.274 to i16*), align 4
  store i32 268472004, i32* @lr, align 4
  %v0_10008ec0 = call i32 @function_1000acf4()
  %v0_10008ec4 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10008ec0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ed4.275 to i32), i32* @lr, align 4
  %v3_10008ed0 = call i32 @function_10009628(i32 %v0_10008ec4, i32 23, i32 23)
  store i32 8, i32* @r3, align 4
  %v0_10008ed8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ed8, i32* @global_var_1001d3a8.276, align 4
  %v0_10008edc = load i32, i32* %r24.global-to-local, align 4
  %v1_10008edc = trunc i32 %v0_10008edc to i16
  store i16 %v1_10008edc, i16* bitcast (i32* @global_var_1001d3ac.277 to i16*), align 4
  store i32 268472036, i32* @lr, align 4
  %v0_10008ee0 = call i32 @function_1000acf4()
  %v0_10008ee4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10008ee0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ef4.278 to i32), i32* @lr, align 4
  %v4_10008ef0 = call i32 @function_10009628(i32 %v0_10008ee4, i32 8, i32 8)
  store i32 14, i32* @r3, align 4
  %v0_10008ef8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ef8, i32* @global_var_1001d3b0.279, align 4
  %v0_10008efc = load i32, i32* %r22.global-to-local, align 4
  %v1_10008efc = trunc i32 %v0_10008efc to i16
  store i16 %v1_10008efc, i16* bitcast (i32* @global_var_1001d3b4.280 to i16*), align 4
  store i32 268472068, i32* @lr, align 4
  %v0_10008f00 = call i32 @function_1000acf4()
  %v0_10008f04 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10008f00, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f14.281 to i32), i32* @lr, align 4
  %v3_10008f10 = call i32 @function_10009628(i32 %v0_10008f04, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008f18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f18, i32* @global_var_1001d3b8.282, align 4
  %v0_10008f1c = load i32, i32* %r16.global-to-local, align 4
  %v1_10008f1c = trunc i32 %v0_10008f1c to i16
  store i16 %v1_10008f1c, i16* bitcast (i32* @global_var_1001d3bc.283 to i16*), align 4
  store i32 268472100, i32* @lr, align 4
  %v0_10008f20 = call i32 @function_1000acf4()
  %v0_10008f24 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10008f20, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f34.284 to i32), i32* @lr, align 4
  %v3_10008f30 = call i32 @function_10009628(i32 %v0_10008f24, i32 19, i32 19)
  store i32 23, i32* @r3, align 4
  %v0_10008f38 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f38, i32* @global_var_1001d3c0.285, align 4
  %v0_10008f3c = load i32, i32* %r17.global-to-local, align 4
  %v1_10008f3c = trunc i32 %v0_10008f3c to i16
  store i16 %v1_10008f3c, i16* bitcast (i32* @global_var_1001d3c4.286 to i16*), align 4
  store i32 268472132, i32* @lr, align 4
  %v0_10008f40 = call i32 @function_1000acf4()
  store i32 %v0_10008f40, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f58.288 to i32), i32* @lr, align 4
  %v3_10008f54 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c8ec.287 to i32), i32 23, i32 23)
  store i32 24, i32* @r3, align 4
  %v0_10008f5c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f5c, i32* @global_var_1001d3c8.289, align 4
  %v0_10008f60 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008f60 = trunc i32 %v0_10008f60 to i16
  store i16 %v1_10008f60, i16* bitcast (i32* @global_var_1001d3cc.290 to i16*), align 4
  store i32 268472168, i32* @lr, align 4
  %v0_10008f64 = call i32 @function_1000acf4()
  store i32 %v0_10008f64, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008f7c.292 to i32), i32* @lr, align 4
  %v3_10008f78 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c904.291 to i32), i32 24, i32 24)
  store i32 15, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001d3d4.293 to i16*), align 4
  %v0_10008f88 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f88, i32* @global_var_1001d3d0.294, align 4
  store i32 268472208, i32* @lr, align 4
  %v0_10008f8c = call i32 @function_1000acf4()
  store i32 %v0_10008f8c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008fa4.296 to i32), i32* @lr, align 4
  %v3_10008fa0 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c920.295 to i32), i32 15, i32 15)
  store i32 6, i32* @r3, align 4
  store i16 15, i16* bitcast (i32* @global_var_1001d3dc.297 to i16*), align 4
  %v0_10008fb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008fb0, i32* @global_var_1001d3d8.298, align 4
  store i32 268472248, i32* @lr, align 4
  %v0_10008fb4 = call i32 @function_1000acf4()
  store i32 %v0_10008fb4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008fcc.300 to i32), i32* @lr, align 4
  %v4_10008fc8 = call i32 @function_10009628(i32 ptrtoint ([7 x i8]* @global_var_1000c930.299 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10008fd0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008fd0, i32* @global_var_1001d3e0.301, align 4
  %v0_10008fd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008fd4 = trunc i32 %v0_10008fd4 to i16
  store i16 %v1_10008fd4, i16* bitcast (i32* @global_var_1001d3e4.302 to i16*), align 4
  store i32 268472284, i32* @lr, align 4
  %v0_10008fd8 = call i32 @function_1000acf4()
  store i32 %v0_10008fd8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ff0.304 to i32), i32* @lr, align 4
  %v4_10008fec = call i32 @function_10009628(i32 ptrtoint ([8 x i8]* @global_var_1000c938.303 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10008ff4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ff4, i32* @global_var_1001d3e8.305, align 4
  %v0_10008ff8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008ff8 = trunc i32 %v0_10008ff8 to i16
  store i16 %v1_10008ff8, i16* bitcast (i32* @global_var_1001d3ec.306 to i16*), align 4
  store i32 268472320, i32* @lr, align 4
  %v0_10008ffc = call i32 @function_1000acf4()
  store i32 %v0_10008ffc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009014.308 to i32), i32* @lr, align 4
  %v4_10009010 = call i32 @function_10009628(i32 ptrtoint ([8 x i8]* @global_var_1000c940.307 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_10009018 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009018, i32* @global_var_1001d3f0.309, align 4
  %v0_1000901c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000901c = trunc i32 %v0_1000901c to i16
  store i16 %v1_1000901c, i16* bitcast (i32* @global_var_1001d3f4.310 to i16*), align 4
  store i32 268472356, i32* @lr, align 4
  %v0_10009020 = call i32 @function_1000acf4()
  store i32 %v0_10009020, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009038.312 to i32), i32* @lr, align 4
  %v4_10009034 = call i32 @function_10009628(i32 ptrtoint ([4 x i8]* @global_var_1000c948.311 to i32), i32 3, i32 3)
  store i32 23, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001d3fc.313 to i16*), align 4
  %v0_10009044 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009044, i32* @global_var_1001d3f8.314, align 4
  store i32 268472396, i32* @lr, align 4
  %v0_10009048 = call i32 @function_1000acf4()
  store i32 %v0_10009048, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009060.316 to i32), i32* @lr, align 4
  %v3_1000905c = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c94c.315 to i32), i32 23, i32 23)
  store i32 28, i32* @r3, align 4
  %v0_10009064 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009064, i32* @global_var_1001d400.317, align 4
  store i32 11, i32* %r26.global-to-local, align 4
  %v0_1000906c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000906c = trunc i32 %v0_1000906c to i16
  store i16 %v1_1000906c, i16* bitcast (i32* @global_var_1001d404.318 to i16*), align 4
  store i32 268472436, i32* @lr, align 4
  %v0_10009070 = call i32 @function_1000acf4()
  store i32 %v0_10009070, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009088.320 to i32), i32* @lr, align 4
  %v3_10009084 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c964.319 to i32), i32 28, i32 28)
  store i32 9, i32* @r3, align 4
  store i16 28, i16* bitcast (i32* @global_var_1001d40c.321 to i16*), align 4
  %v0_10009094 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009094, i32* @global_var_1001d408.322, align 4
  store i32 268472476, i32* @lr, align 4
  %v0_10009098 = call i32 @function_1000acf4()
  store i32 %v0_10009098, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100090b0.324 to i32), i32* @lr, align 4
  %v4_100090ac = call i32 @function_10009628(i32 ptrtoint ([10 x i8]* @global_var_1000c984.323 to i32), i32 9, i32 9)
  store i32 8, i32* @r3, align 4
  %v0_100090b4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100090b4, i32* @global_var_1001d410.325, align 4
  %v0_100090b8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100090b8 = trunc i32 %v0_100090b8 to i16
  store i16 %v1_100090b8, i16* bitcast (i32* @global_var_1001d414.326 to i16*), align 4
  store i32 268472512, i32* @lr, align 4
  %v0_100090bc = call i32 @function_1000acf4()
  %v0_100090c0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100090bc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100090d0.327 to i32), i32* @lr, align 4
  %v4_100090cc = call i32 @function_10009628(i32 %v0_100090c0, i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_100090d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100090d4, i32* @global_var_1001d418.328, align 4
  %v0_100090d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100090d8 = trunc i32 %v0_100090d8 to i16
  store i16 %v1_100090d8, i16* bitcast (i32* @global_var_1001d41c.329 to i16*), align 4
  store i32 268472544, i32* @lr, align 4
  %v0_100090dc = call i32 @function_1000acf4()
  store i32 %v0_100090dc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100090f4.331 to i32), i32* @lr, align 4
  %v4_100090f0 = call i32 @function_10009628(i32 ptrtoint ([6 x i8]* @global_var_1000c990.330 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_100090f8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100090f8, i32* @global_var_1001d420.332, align 4
  store i32 21, i32* %r27.global-to-local, align 4
  %v0_10009100 = load i32, i32* %r15.global-to-local, align 4
  %v1_10009100 = trunc i32 %v0_10009100 to i16
  store i16 %v1_10009100, i16* bitcast (i32* @global_var_1001d424.333 to i16*), align 4
  store i32 268472584, i32* @lr, align 4
  %v0_10009104 = call i32 @function_1000acf4()
  store i32 %v0_10009104, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000911c.335 to i32), i32* @lr, align 4
  %v4_10009118 = call i32 @function_10009628(i32 ptrtoint ([7 x i8]* @global_var_1000c998.334 to i32), i32 6, i32 6)
  store i32 16, i32* @r3, align 4
  %v0_10009120 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009120, i32* @global_var_1001d428.336, align 4
  %v0_10009124 = load i32, i32* %r25.global-to-local, align 4
  %v1_10009124 = trunc i32 %v0_10009124 to i16
  store i16 %v1_10009124, i16* bitcast (i32* @global_var_1001d42c.337 to i16*), align 4
  store i32 268472620, i32* @lr, align 4
  %v0_10009128 = call i32 @function_1000acf4()
  store i32 %v0_10009128, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009140.339 to i32), i32* @lr, align 4
  %v3_1000913c = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c9a0.338 to i32), i32 16, i32 16)
  store i32 21, i32* @r3, align 4
  %v0_10009144 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009144, i32* @global_var_1001d430.340, align 4
  store i32 10, i32* %r25.global-to-local, align 4
  %v0_1000914c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000914c = trunc i32 %v0_1000914c to i16
  store i16 %v1_1000914c, i16* bitcast (i32* @global_var_1001d434.341 to i16*), align 4
  store i32 268472660, i32* @lr, align 4
  %v0_10009150 = call i32 @function_1000acf4()
  store i32 %v0_10009150, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009168.343 to i32), i32* @lr, align 4
  %v3_10009164 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c9b4.342 to i32), i32 21, i32 21)
  store i32 21, i32* @r3, align 4
  %v0_1000916c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000916c, i32* @global_var_1001d438.344, align 4
  %v0_10009170 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009170 = trunc i32 %v0_10009170 to i16
  store i16 %v1_10009170, i16* bitcast (i32* @global_var_1001d43c.345 to i16*), align 4
  store i32 268472696, i32* @lr, align 4
  %v0_10009174 = call i32 @function_1000acf4()
  store i32 %v0_10009174, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000918c.347 to i32), i32* @lr, align 4
  %v3_10009188 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c9cc.346 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  %v0_10009190 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009190, i32* @global_var_1001d440.348, align 4
  %v0_10009194 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009194 = trunc i32 %v0_10009194 to i16
  store i16 %v1_10009194, i16* bitcast (i32* @global_var_1001d444.349 to i16*), align 4
  store i32 268472732, i32* @lr, align 4
  %v0_10009198 = call i32 @function_1000acf4()
  store i32 %v0_10009198, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100091b0.351 to i32), i32* @lr, align 4
  %v3_100091ac = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000c9e4.350 to i32), i32 17, i32 17)
  store i32 11, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001d44c.352 to i16*), align 4
  %v0_100091bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100091bc, i32* @global_var_1001d448.353, align 4
  store i32 268472772, i32* @lr, align 4
  %v0_100091c0 = call i32 @function_1000acf4()
  store i32 %v0_100091c0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091d8.355 to i32), i32* @lr, align 4
  %v4_100091d4 = call i32 @function_10009628(i32 ptrtoint ([12 x i8]* @global_var_1000c9f8.354 to i32), i32 11, i32 11)
  store i32 23, i32* @r3, align 4
  %v0_100091dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100091dc, i32* @global_var_1001d450.356, align 4
  store i32 12, i32* %r27.global-to-local, align 4
  %v0_100091e4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100091e4 = trunc i32 %v0_100091e4 to i16
  store i16 %v1_100091e4, i16* bitcast (i32* @global_var_1001d454.357 to i16*), align 4
  store i32 268472812, i32* @lr, align 4
  %v0_100091e8 = call i32 @function_1000acf4()
  store i32 %v0_100091e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009200.359 to i32), i32* @lr, align 4
  %v3_100091fc = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca04.358 to i32), i32 23, i32 23)
  store i32 83, i32* @r3, align 4
  %v0_10009204 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009204, i32* @global_var_1001d458.360, align 4
  %v0_10009208 = load i32, i32* %r24.global-to-local, align 4
  %v1_10009208 = trunc i32 %v0_10009208 to i16
  store i16 %v1_10009208, i16* bitcast (i32* @global_var_1001d45c.361 to i16*), align 4
  store i32 268472848, i32* @lr, align 4
  %v0_1000920c = call i32 @function_1000acf4()
  store i32 %v0_1000920c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009224.363 to i32), i32* @lr, align 4
  %v3_10009220 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cd28.362 to i32), i32 83, i32 83)
  store i32 32, i32* @r3, align 4
  store i16 83, i16* bitcast (i32* @global_var_1001d464.364 to i16*), align 4
  %v0_10009230 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009230, i32* @global_var_1001d460.365, align 4
  store i32 268472888, i32* @lr, align 4
  %v0_10009234 = call i32 @function_1000acf4()
  store i32 %v0_10009234, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000924c.367 to i32), i32* @lr, align 4
  %v3_10009248 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cd7c.366 to i32), i32 32, i32 32)
  store i32 48, i32* @r3, align 4
  store i16 32, i16* bitcast (i32* @global_var_1001d46c.368 to i16*), align 4
  %v0_10009258 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009258, i32* @global_var_1001d468.369, align 4
  store i32 268472928, i32* @lr, align 4
  %v0_1000925c = call i32 @function_1000acf4()
  store i32 %v0_1000925c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009274.371 to i32), i32* @lr, align 4
  %v3_10009270 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca1c.370 to i32), i32 48, i32 48)
  store i32 12, i32* @r3, align 4
  store i16 48, i16* bitcast (i32* @global_var_1001d474.372 to i16*), align 4
  %v0_10009280 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009280, i32* @global_var_1001d470.373, align 4
  store i32 268472968, i32* @lr, align 4
  %v0_10009284 = call i32 @function_1000acf4()
  store i32 %v0_10009284, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000929c.375 to i32), i32* @lr, align 4
  %v3_10009298 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca50.374 to i32), i32 12, i32 12)
  store i32 9, i32* @r3, align 4
  %v0_100092a0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100092a0, i32* @global_var_1001d478.376, align 4
  %v0_100092a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100092a4 = trunc i32 %v0_100092a4 to i16
  store i16 %v1_100092a4, i16* bitcast (i32* @global_var_1001d47c.377 to i16*), align 4
  store i32 268473004, i32* @lr, align 4
  %v0_100092a8 = call i32 @function_1000acf4()
  store i32 %v0_100092a8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100092c0.379 to i32), i32* @lr, align 4
  %v3_100092bc = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca60.378 to i32), i32 9, i32 9)
  store i32 10, i32* @r3, align 4
  %v0_100092c4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100092c4, i32* @global_var_1001d480.380, align 4
  %v0_100092c8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100092c8 = trunc i32 %v0_100092c8 to i16
  store i16 %v1_100092c8, i16* bitcast (i32* @global_var_1001d484.381 to i16*), align 4
  store i32 268473040, i32* @lr, align 4
  %v0_100092cc = call i32 @function_1000acf4()
  store i32 %v0_100092cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100092e4.383 to i32), i32* @lr, align 4
  %v3_100092e0 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca6c.382 to i32), i32 10, i32 10)
  store i32 12, i32* @r3, align 4
  %v0_100092e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100092e8, i32* @global_var_1001d488.384, align 4
  %v0_100092ec = load i32, i32* %r25.global-to-local, align 4
  %v1_100092ec = trunc i32 %v0_100092ec to i16
  store i16 %v1_100092ec, i16* bitcast (i32* @global_var_1001d48c.385 to i16*), align 4
  store i32 268473076, i32* @lr, align 4
  %v0_100092f0 = call i32 @function_1000acf4()
  store i32 %v0_100092f0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009308.387 to i32), i32* @lr, align 4
  %v3_10009304 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca78.386 to i32), i32 12, i32 12)
  store i32 16, i32* @r3, align 4
  %v0_1000930c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000930c, i32* @global_var_1001d490.388, align 4
  %v0_10009310 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009310 = trunc i32 %v0_10009310 to i16
  store i16 %v1_10009310, i16* bitcast (i32* @global_var_1001d494.389 to i16*), align 4
  store i32 268473112, i32* @lr, align 4
  %v0_10009314 = call i32 @function_1000acf4()
  store i32 %v0_10009314, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000932c.391 to i32), i32* @lr, align 4
  %v3_10009328 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca88.390 to i32), i32 16, i32 16)
  store i32 19, i32* @r3, align 4
  %v0_10009330 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009330, i32* @global_var_1001d498.392, align 4
  %v0_10009334 = load i32, i32* %r19.global-to-local, align 4
  %v1_10009334 = trunc i32 %v0_10009334 to i16
  store i16 %v1_10009334, i16* bitcast (i32* @global_var_1001d49c.393 to i16*), align 4
  store i32 268473148, i32* @lr, align 4
  %v0_10009338 = call i32 @function_1000acf4()
  store i32 %v0_10009338, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009350.395 to i32), i32* @lr, align 4
  %v3_1000934c = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca9c.394 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10009354 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009354, i32* @global_var_1001d4a0.396, align 4
  %v0_10009358 = load i32, i32* %r17.global-to-local, align 4
  %v1_10009358 = trunc i32 %v0_10009358 to i16
  store i16 %v1_10009358, i16* bitcast (i32* @global_var_1001d4a4.397 to i16*), align 4
  store i32 268473184, i32* @lr, align 4
  %v0_1000935c = call i32 @function_1000acf4()
  store i32 %v0_1000935c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009374.399 to i32), i32* @lr, align 4
  %v4_10009370 = call i32 @function_10009628(i32 ptrtoint ([9 x i8]* @global_var_1000cab0.398 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_10009378 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009378, i32* @global_var_1001d4a8.400, align 4
  %v0_1000937c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000937c = trunc i32 %v0_1000937c to i16
  store i16 %v1_1000937c, i16* bitcast (i32* @global_var_1001d4ac.401 to i16*), align 4
  store i32 268473220, i32* @lr, align 4
  %v0_10009380 = call i32 @function_1000acf4()
  store i32 %v0_10009380, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009398.403 to i32), i32* @lr, align 4
  %v3_10009394 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000ca10.402 to i32), i32 11, i32 11)
  store i32 12, i32* @r3, align 4
  %v0_1000939c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000939c, i32* @global_var_1001d4b0.404, align 4
  %v0_100093a0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100093a0 = trunc i32 %v0_100093a0 to i16
  store i16 %v1_100093a0, i16* bitcast (i32* @global_var_1001d4b4.405 to i16*), align 4
  store i32 268473256, i32* @lr, align 4
  %v0_100093a4 = call i32 @function_1000acf4()
  store i32 %v0_100093a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100093bc.407 to i32), i32* @lr, align 4
  %v3_100093b8 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cabc.406 to i32), i32 12, i32 12)
  store i32 18, i32* @r3, align 4
  %v0_100093c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100093c0, i32* @global_var_1001d4b8.408, align 4
  %v0_100093c4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100093c4 = trunc i32 %v0_100093c4 to i16
  store i16 %v1_100093c4, i16* bitcast (i32* @global_var_1001d4bc.409 to i16*), align 4
  store i32 268473292, i32* @lr, align 4
  %v0_100093c8 = call i32 @function_1000acf4()
  store i32 %v0_100093c8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100093e0.411 to i32), i32* @lr, align 4
  %v3_100093dc = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cacc.410 to i32), i32 18, i32 18)
  store i32 25, i32* @r3, align 4
  store i16 18, i16* bitcast (i32* @global_var_1001d4c4.412 to i16*), align 4
  %v0_100093ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100093ec, i32* @global_var_1001d4c0.413, align 4
  store i32 268473332, i32* @lr, align 4
  %v0_100093f0 = call i32 @function_1000acf4()
  store i32 %v0_100093f0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009408.415 to i32), i32* @lr, align 4
  %v3_10009404 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cae0.414 to i32), i32 25, i32 25)
  store i32 115, i32* @r3, align 4
  store i16 25, i16* bitcast (i32* @global_var_1001d4cc.416 to i16*), align 4
  %v0_10009414 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009414, i32* @global_var_1001d4c8.417, align 4
  store i32 268473372, i32* @lr, align 4
  %v0_10009418 = call i32 @function_1000acf4()
  store i32 %v0_10009418, i32* %r28.global-to-local, align 4
  store i32 115, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009434.419 to i32), i32* @lr, align 4
  %v3_10009430 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cafc.418 to i32), i32 115, i32 115)
  store i32 115, i32* @r3, align 4
  %v0_10009438 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009438, i32* @global_var_1001d4d0.420, align 4
  store i16 115, i16* bitcast (i32* @global_var_1001d4d4.421 to i16*), align 4
  store i32 268473412, i32* @lr, align 4
  %v0_10009440 = call i32 @function_1000acf4()
  store i32 %v0_10009440, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009458.423 to i32), i32* @lr, align 4
  %v3_10009454 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cb70.422 to i32), i32 115, i32 115)
  store i32 79, i32* @r3, align 4
  %v0_1000945c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000945c, i32* @global_var_1001d4d8.424, align 4
  %v0_10009460 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009460 = trunc i32 %v0_10009460 to i16
  store i16 %v1_10009460, i16* bitcast (i32* @global_var_1001d4dc.425 to i16*), align 4
  store i32 268473448, i32* @lr, align 4
  %v0_10009464 = call i32 @function_1000acf4()
  store i32 %v0_10009464, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000947c.427 to i32), i32* @lr, align 4
  %v3_10009478 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cbe4.426 to i32), i32 79, i32 79)
  store i32 114, i32* @r3, align 4
  store i16 79, i16* bitcast (i32* @global_var_1001d4e4.428 to i16*), align 4
  %v0_10009488 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009488, i32* @global_var_1001d4e0.429, align 4
  store i32 268473488, i32* @lr, align 4
  %v0_1000948c = call i32 @function_1000acf4()
  store i32 %v0_1000948c, i32* %r28.global-to-local, align 4
  store i32 114, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100094a8.431 to i32), i32* @lr, align 4
  %v3_100094a4 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cc34.430 to i32), i32 114, i32 114)
  store i32 114, i32* @r3, align 4
  %v0_100094ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100094ac, i32* @global_var_1001d4e8.432, align 4
  store i16 114, i16* bitcast (i32* @global_var_1001d4ec.433 to i16*), align 4
  store i32 268473528, i32* @lr, align 4
  %v0_100094b4 = call i32 @function_1000acf4()
  store i32 %v0_100094b4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100094cc.435 to i32), i32* @lr, align 4
  %v3_100094c8 = call i32 @function_10009628(i32 ptrtoint (i32* @global_var_1000cca8.434 to i32), i32 114, i32 114)
  store i32 14, i32* @r3, align 4
  %v0_100094d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100094d0, i32* @global_var_1001d4f0.436, align 4
  %v0_100094d4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100094d4 = trunc i32 %v0_100094d4 to i16
  store i16 %v1_100094d4, i16* bitcast (i32* @global_var_1001d4f4.437 to i16*), align 4
  store i32 268473564, i32* @lr, align 4
  %v0_100094d8 = call i32 @function_1000acf4()
  %v0_100094dc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100094d8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100094ec.438 to i32), i32* @lr, align 4
  %v3_100094e8 = call i32 @function_10009628(i32 %v0_100094dc, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_100094f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100094f0, i32* @global_var_1001d4f8.439, align 4
  %v0_100094f4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100094f4 = trunc i32 %v0_100094f4 to i16
  store i16 %v1_100094f4, i16* bitcast (i32* @global_var_1001d4fc.440 to i16*), align 4
  store i32 268473596, i32* @lr, align 4
  %v0_100094f8 = call i32 @function_1000acf4()
  %v0_100094fc = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100094f8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000950c.441 to i32), i32* @lr, align 4
  %v3_10009508 = call i32 @function_10009628(i32 %v0_100094fc, i32 19, i32 19)
  store i32 23, i32* @r3, align 4
  %v0_10009510 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009510, i32* @global_var_1001d500.442, align 4
  %v0_10009514 = load i32, i32* %r17.global-to-local, align 4
  %v1_10009514 = trunc i32 %v0_10009514 to i16
  store i16 %v1_10009514, i16* bitcast (i32* @global_var_1001d504.443 to i16*), align 4
  store i32 268473628, i32* @lr, align 4
  %v0_10009518 = call i32 @function_1000acf4()
  %v0_1000951c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10009518, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000952c.444 to i32), i32* @lr, align 4
  %v3_10009528 = call i32 @function_10009628(i32 %v0_1000951c, i32 23, i32 23)
  store i32 10, i32* @r3, align 4
  %v0_10009530 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009530, i32* @global_var_1001d508.445, align 4
  %v0_10009534 = load i32, i32* %r24.global-to-local, align 4
  %v1_10009534 = trunc i32 %v0_10009534 to i16
  store i16 %v1_10009534, i16* bitcast (i32* @global_var_1001d50c.446 to i16*), align 4
  store i32 268473660, i32* @lr, align 4
  %v0_10009538 = call i32 @function_1000acf4()
  store i32 %v0_10009538, i32* %r28.global-to-local, align 4
  store i32 268473680, i32* @lr, align 4
  %v4_1000954c = call i32 @function_10009628(i32 ptrtoint ([11 x i8]* @global_var_1000cd1c.447 to i32), i32 10, i32 10)
  %v0_10009554 = load i32, i32* %r25.global-to-local, align 4
  %v1_10009554 = trunc i32 %v0_10009554 to i16
  store i16 %v1_10009554, i16* bitcast (i32* @global_var_1001d514.448 to i16*), align 4
  %v0_10009558 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009558, i32* @global_var_1001d510.449, align 4
  ret i32 %v4_1000954c

; uselistorder directives
  uselistorder i32 114, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 115, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 21, { 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009628, { 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100095a4(i8* %arg1) local_unnamed_addr {
dec_label_pc_100095a4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100095a4 = load i8, i8* %arg1, align 1
  %v3_100095b0 = icmp eq i8 %v3_100095a4, 0
  %v0_100095b4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100095b0, i32 %v0_100095b4)
  br label %dec_label_pc_100095b8

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_100095b8, %dec_label_pc_100095a4
  %v0_100095b8 = phi i32 [ %v1_100095b8, %dec_label_pc_100095b8 ], [ 0, %dec_label_pc_100095a4 ]
  %v1_100095b8 = add i32 %v0_100095b8, 1
  %v2_100095bc = add i32 %v1_100095b8, %tmp
  %v3_100095bc = inttoptr i32 %v2_100095bc to i8*
  %v4_100095bc = load i8, i8* %v3_100095bc, align 1
  %v3_100095c0 = icmp eq i8 %v4_100095bc, 0
  br i1 %v3_100095c0, label %dec_label_pc_100095c8, label %dec_label_pc_100095b8

dec_label_pc_100095c8:                            ; preds = %dec_label_pc_100095b8
  ret i32 %v1_100095b8
}

define i32 @function_100095cc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100095cc:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100095cc = load i8, i8* %arg1, align 1
  %v3_100095d0 = icmp eq i8 %v2_100095cc, 0
  br i1 %v3_100095d0, label %dec_label_pc_1000961c, label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_100095cc
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100095dc

dec_label_pc_100095dc:                            ; preds = %dec_label_pc_100095dc, %dec_label_pc_100095d8
  %v0_100095dc = phi i32 [ %v1_100095dc, %dec_label_pc_100095dc ], [ 0, %dec_label_pc_100095d8 ]
  %v1_100095dc = add i32 %v0_100095dc, 1
  store i32 %v1_100095dc, i32* %r9.global-to-local, align 4
  %v2_100095e0 = add i32 %v1_100095dc, %tmp
  %v3_100095e0 = inttoptr i32 %v2_100095e0 to i8*
  %v4_100095e0 = load i8, i8* %v3_100095e0, align 1
  %v3_100095e4 = icmp eq i8 %v4_100095e0, 0
  br i1 %v3_100095e4, label %dec_label_pc_100095ec, label %dec_label_pc_100095dc

dec_label_pc_100095ec:                            ; preds = %dec_label_pc_100095dc
  %v3_100095ec = icmp eq i32 %v1_100095dc, -1
  br i1 %v3_100095ec, label %dec_label_pc_10009614, label %dec_label_pc_100095f4

dec_label_pc_100095f4:                            ; preds = %dec_label_pc_100095ec
  %phitmp = add i32 %v0_100095dc, 2
  br label %dec_label_pc_100095f8

dec_label_pc_100095f8:                            ; preds = %dec_label_pc_1000961c, %dec_label_pc_100095f4
  %v0_100095f8 = phi i32 [ 1, %dec_label_pc_1000961c ], [ %phitmp, %dec_label_pc_100095f4 ]
  store i32 %v0_100095f8, i32* %ctr.global-to-local, align 4
  %v2_10009608.pre = load i32, i32* @r3, align 4
  %v2_100096008 = load i8, i8* %arg1, align 1
  %v1_1000960410 = add i32 %tmp, 1
  store i32 %v1_1000960410, i32* %r4.global-to-local, align 4
  %v3_1000960811 = inttoptr i32 %v2_10009608.pre to i8*
  store i8 %v2_100096008, i8* %v3_1000960811, align 1
  %v0_1000960c12 = load i32, i32* @r3, align 4
  %v1_1000960c13 = add i32 %v0_1000960c12, 1
  store i32 %v1_1000960c13, i32* %r3.global-to-local, align 4
  %v0_1000961014 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000961015 = add i32 %v0_1000961014, -1
  store i32 %v1_1000961015, i32* %ctr.global-to-local, align 4
  %v2_1000961016 = icmp eq i32 %v1_1000961015, 0
  br i1 %v2_1000961016, label %dec_label_pc_10009614.loopexit, label %dec_label_pc_10009600.dec_label_pc_10009600_crit_edge

dec_label_pc_10009600.dec_label_pc_10009600_crit_edge: ; preds = %dec_label_pc_100095f8, %dec_label_pc_10009600.dec_label_pc_10009600_crit_edge
  %v1_1000960c17 = phi i32 [ %v1_1000960c, %dec_label_pc_10009600.dec_label_pc_10009600_crit_edge ], [ %v1_1000960c13, %dec_label_pc_100095f8 ]
  %v0_10009600.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009600 = inttoptr i32 %v0_10009600.pre to i8*
  %v2_10009600 = load i8, i8* %v1_10009600, align 1
  %v1_10009604 = add i32 %v0_10009600.pre, 1
  store i32 %v1_10009604, i32* %r4.global-to-local, align 4
  %v3_10009608 = inttoptr i32 %v1_1000960c17 to i8*
  store i8 %v2_10009600, i8* %v3_10009608, align 1
  %v0_1000960c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000960c = add i32 %v0_1000960c, 1
  store i32 %v1_1000960c, i32* %r3.global-to-local, align 4
  %v0_10009610 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009610 = add i32 %v0_10009610, -1
  store i32 %v1_10009610, i32* %ctr.global-to-local, align 4
  %v2_10009610 = icmp eq i32 %v1_10009610, 0
  br i1 %v2_10009610, label %dec_label_pc_10009614.loopexit, label %dec_label_pc_10009600.dec_label_pc_10009600_crit_edge

dec_label_pc_10009614.loopexit:                   ; preds = %dec_label_pc_10009600.dec_label_pc_10009600_crit_edge, %dec_label_pc_100095f8
  %v0_10009614.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009614

dec_label_pc_10009614:                            ; preds = %dec_label_pc_10009614.loopexit, %dec_label_pc_100095ec
  %v0_10009614 = phi i32 [ %v0_10009614.pre, %dec_label_pc_10009614.loopexit ], [ -1, %dec_label_pc_100095ec ]
  store i32 %v0_10009614, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009614

dec_label_pc_1000961c:                            ; preds = %dec_label_pc_100095cc
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100095f8

; uselistorder directives
  uselistorder i32 %v0_10009614, { 1, 0 }
  uselistorder i32 %v1_10009610, { 1, 0 }
  uselistorder i32 %v1_1000960c, { 1, 0 }
  uselistorder i32 %v1_100095dc, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009600.dec_label_pc_10009600_crit_edge, { 1, 0 }
}

define i32 @function_10009628(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009628:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10009628 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10009630 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009628, i32 %v0_10009630)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009638

dec_label_pc_10009638:                            ; preds = %dec_label_pc_10009638, %dec_label_pc_10009628
  %v0_10009638 = phi i32 [ %v1_10009640, %dec_label_pc_10009638 ], [ 0, %dec_label_pc_10009628 ]
  %v2_10009638 = add i32 %v0_10009638, %arg2
  %v3_10009638 = inttoptr i32 %v2_10009638 to i8*
  %v4_10009638 = load i8, i8* %v3_10009638, align 1
  %v4_1000963c = add i32 %v0_10009638, %arg1
  %v5_1000963c = inttoptr i32 %v4_1000963c to i8*
  store i8 %v4_10009638, i8* %v5_1000963c, align 1
  %v0_10009640 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009640 = add i32 %v0_10009640, 1
  store i32 %v1_10009640, i32* %r9.global-to-local, align 4
  %v0_10009644 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009644 = add i32 %v0_10009644, -1
  store i32 %v1_10009644, i32* %ctr.global-to-local, align 4
  %v2_10009644 = icmp eq i32 %v1_10009644, 0
  br i1 %v2_10009644, label %dec_label_pc_10009648, label %dec_label_pc_10009638

dec_label_pc_10009648:                            ; preds = %dec_label_pc_10009638
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009644, { 1, 0 }
  uselistorder i32 %v1_10009640, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1000964c() local_unnamed_addr {
dec_label_pc_1000964c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000964c = load i32, i32* @r4, align 4
  store i32 %v0_1000964c, i32* %r0.global-to-local, align 4
  %v3_1000964c = icmp eq i32 %v0_1000964c, 0
  store i32 %v0_1000964c, i32* %ctr.global-to-local, align 4
  %v0_10009654 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000964c, i32 %v0_10009654)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100096603 = load i32, i32* @r3, align 4
  %v5_100096604 = inttoptr i32 %v2_100096603 to i8*
  store i8 0, i8* %v5_100096604, align 1
  %v0_100096645 = load i32, i32* %r9.global-to-local, align 4
  %v1_100096646 = add i32 %v0_100096645, 1
  store i32 %v1_100096646, i32* %r9.global-to-local, align 4
  %v0_100096687 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100096688 = add i32 %v0_100096687, -1
  store i32 %v1_100096688, i32* %ctr.global-to-local, align 4
  %v2_100096689 = icmp eq i32 %v1_100096688, 0
  br i1 %v2_100096689, label %dec_label_pc_1000966c, label %dec_label_pc_10009660.dec_label_pc_10009660_crit_edge

dec_label_pc_10009660.dec_label_pc_10009660_crit_edge: ; preds = %dec_label_pc_1000964c, %dec_label_pc_10009660.dec_label_pc_10009660_crit_edge
  %v1_1000966410 = phi i32 [ %v1_10009664, %dec_label_pc_10009660.dec_label_pc_10009660_crit_edge ], [ %v1_100096646, %dec_label_pc_1000964c ]
  %v0_10009660.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10009660.pre to i8
  %v2_10009660 = load i32, i32* @r3, align 4
  %v4_10009660 = add i32 %v2_10009660, %v1_1000966410
  %v5_10009660 = inttoptr i32 %v4_10009660 to i8*
  store i8 %extract.t, i8* %v5_10009660, align 1
  %v0_10009664 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009664 = add i32 %v0_10009664, 1
  store i32 %v1_10009664, i32* %r9.global-to-local, align 4
  %v0_10009668 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009668 = add i32 %v0_10009668, -1
  store i32 %v1_10009668, i32* %ctr.global-to-local, align 4
  %v2_10009668 = icmp eq i32 %v1_10009668, 0
  br i1 %v2_10009668, label %dec_label_pc_1000966c, label %dec_label_pc_10009660.dec_label_pc_10009660_crit_edge

dec_label_pc_1000966c:                            ; preds = %dec_label_pc_10009660.dec_label_pc_10009660_crit_edge, %dec_label_pc_1000964c
  %v0_1000966c = load i32, i32* @r3, align 4
  ret i32 %v0_1000966c

; uselistorder directives
  uselistorder i32 %v1_10009668, { 1, 0 }
  uselistorder i32 %v1_10009664, { 1, 0 }
  uselistorder i32 %v0_1000964c, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009660.dec_label_pc_10009660_crit_edge, { 1, 0 }
}

define i32 @function_10009670(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009670:
  %v3_10009670 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10009670, label %dec_label_pc_1000967c, label %dec_label_pc_10009684

dec_label_pc_1000967c:                            ; preds = %dec_label_pc_100096a0, %dec_label_pc_10009670, %dec_label_pc_10009684
  ret i32 -1

dec_label_pc_10009684:                            ; preds = %dec_label_pc_10009670
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_1000967c, label %dec_label_pc_1000968c

dec_label_pc_1000968c:                            ; preds = %dec_label_pc_10009684
  br label %dec_label_pc_100096a8

dec_label_pc_1000969c:                            ; preds = %dec_label_pc_100096a8
  br label %dec_label_pc_100096a0

dec_label_pc_100096a0:                            ; preds = %dec_label_pc_100096c0, %dec_label_pc_1000969c
  %v0_100096a81 = phi i32 [ %v1_100096ac, %dec_label_pc_100096c0 ], [ 0, %dec_label_pc_1000969c ]
  %v1_100096a0 = add i32 %v0_100096c4, 1
  %v1_100096a4 = add i32 %v0_100096a4, -1
  %v2_100096a4 = icmp eq i32 %v1_100096a4, 0
  br i1 %v2_100096a4, label %dec_label_pc_1000967c, label %dec_label_pc_100096a8

dec_label_pc_100096a8:                            ; preds = %dec_label_pc_100096a0, %dec_label_pc_1000968c
  %v0_100096a4 = phi i32 [ %v1_100096a4, %dec_label_pc_100096a0 ], [ %arg2, %dec_label_pc_1000968c ]
  %v0_100096c4 = phi i32 [ %v1_100096a0, %dec_label_pc_100096a0 ], [ 0, %dec_label_pc_1000968c ]
  %v0_100096a8 = phi i32 [ %v0_100096a81, %dec_label_pc_100096a0 ], [ 0, %dec_label_pc_1000968c ]
  %v2_100096a8 = add i32 %v0_100096a8, %arg3
  %v3_100096a8 = inttoptr i32 %v2_100096a8 to i8*
  %v4_100096a8 = load i8, i8* %v3_100096a8, align 1
  %v1_100096ac = add i32 %v0_100096a8, 1
  %v2_100096b0 = add i32 %v0_100096c4, %arg1
  %v3_100096b0 = inttoptr i32 %v2_100096b0 to i8*
  %v4_100096b0 = load i8, i8* %v3_100096b0, align 1
  %v4_100096b8 = icmp eq i8 %v4_100096b0, %v4_100096a8
  br i1 %v4_100096b8, label %dec_label_pc_100096c0, label %dec_label_pc_1000969c

dec_label_pc_100096c0:                            ; preds = %dec_label_pc_100096a8
  %v4_100096b4 = icmp eq i32 %v1_100096ac, %arg4
  br i1 %v4_100096b4, label %dec_label_pc_100096c4, label %dec_label_pc_100096a0

dec_label_pc_100096c4:                            ; preds = %dec_label_pc_100096c0
  %v1_100096c4 = add i32 %v0_100096c4, 1
  ret i32 %v1_100096c4

; uselistorder directives
  uselistorder i32 %v0_100096a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000967c, { 0, 2, 1 }
}

define i32 @function_100096cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_100096cc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100096cc

dec_label_pc_100096cc:                            ; preds = %dec_label_pc_100096e8, %dec_label_pc_100096cc, %bb
  %v0_100096cc = phi i32 [ %v0_100096cc.pre, %bb ], [ %v1_100096d0, %dec_label_pc_100096cc ], [ %v1_100096d0, %dec_label_pc_100096e8 ]
  %v1_100096cc = inttoptr i32 %v0_100096cc to i8*
  %v2_100096cc = load i8, i8* %v1_100096cc, align 1
  %v1_100096d0 = add i32 %v0_100096cc, 1
  %v3_100096dc = icmp eq i8 %v2_100096cc, 32
  br i1 %v3_100096dc, label %dec_label_pc_100096cc, label %dec_label_pc_100096e8

dec_label_pc_100096e8:                            ; preds = %dec_label_pc_100096cc
  %v2_100096cc.off = add i8 %v2_100096cc, -9
  %tmp = icmp ult i8 %v2_100096cc.off, 2
  br i1 %tmp, label %dec_label_pc_100096cc, label %dec_label_pc_100096f4

dec_label_pc_100096f4:                            ; preds = %dec_label_pc_100096e8
  %v3_100096f4 = icmp eq i8 %v2_100096cc, 45
  br i1 %v3_100096f4, label %dec_label_pc_100097a0, label %dec_label_pc_100096fc

dec_label_pc_100096fc:                            ; preds = %dec_label_pc_100096f4
  %v3_100096fc = icmp eq i8 %v2_100096cc, 43
  br i1 %v3_100096fc, label %dec_label_pc_100097f8, label %dec_label_pc_10009704

dec_label_pc_10009704:                            ; preds = %dec_label_pc_100096fc, %dec_label_pc_100097f8
  %v0_1000979426 = phi i32 [ %v1_100096d0, %dec_label_pc_100096fc ], [ %v1_100097fc, %dec_label_pc_100097f8 ]
  %v0_100097245.in = phi i8 [ %v2_100096cc, %dec_label_pc_100096fc ], [ %v2_100097f8, %dec_label_pc_100097f8 ]
  br label %dec_label_pc_10009710

dec_label_pc_10009710:                            ; preds = %dec_label_pc_100097a0, %dec_label_pc_10009704
  %v0_1000979425 = phi i32 [ %v1_100097a8, %dec_label_pc_100097a0 ], [ %v0_1000979426, %dec_label_pc_10009704 ]
  %v0_100097244.in = phi i8 [ %v2_100097a0, %dec_label_pc_100097a0 ], [ %v0_100097245.in, %dec_label_pc_10009704 ]
  %v0_100097e8 = phi i32 [ 1, %dec_label_pc_100097a0 ], [ 0, %dec_label_pc_10009704 ]
  %v1_10009720 = phi i32 [ -2147483648, %dec_label_pc_100097a0 ], [ 2147483647, %dec_label_pc_10009704 ]
  %v2_10009710 = udiv i32 %v1_10009720, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_1000971c = mul i32 %v2_10009710, %arg1
  %v2_10009720 = sub i32 %v1_10009720, %v2_1000971c
  br label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_10009794, %dec_label_pc_10009710
  %v0_10009794 = phi i32 [ %v1_10009798, %dec_label_pc_10009794 ], [ %v0_1000979425, %dec_label_pc_10009710 ]
  %v0_10009788 = phi i32 [ %v0_1000978017, %dec_label_pc_10009794 ], [ 0, %dec_label_pc_10009710 ]
  %v0_10009778 = phi i32 [ %v0_100097d811, %dec_label_pc_10009794 ], [ 0, %dec_label_pc_10009710 ]
  %v0_10009770 = phi i32 [ %v0_100097cc9, %dec_label_pc_10009794 ], [ 0, %dec_label_pc_10009710 ]
  %v1_10009764.in = phi i8 [ %v2_10009794, %dec_label_pc_10009794 ], [ %v0_100097244.in, %dec_label_pc_10009710 ]
  %v1_10009764 = zext i8 %v1_10009764.in to i32
  %v1_10009728 = add nsw i32 %v1_10009764, -48
  %fold = add nuw nsw i32 %v1_10009764, 208
  %v1_10009730 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10009730, 10
  br i1 %tmp27, label %dec_label_pc_10009768, label %dec_label_pc_1000973c

dec_label_pc_1000973c:                            ; preds = %dec_label_pc_10009724
  %v1_1000973c = add nuw nsw i32 %v1_10009764, 191
  %v1_10009740 = urem i32 %v1_1000973c, 256
  %tmp28 = icmp ult i32 %v1_10009740, 26
  br i1 %tmp28, label %dec_label_pc_10009764, label %dec_label_pc_10009750

dec_label_pc_10009750:                            ; preds = %dec_label_pc_1000973c
  %v1_10009750 = add nuw nsw i32 %v1_10009764, 159
  %v1_10009754 = urem i32 %v1_10009750, 256
  %v2_10009758 = icmp ugt i32 %v1_10009754, 25
  br i1 %v2_10009758, label %dec_label_pc_100097cc, label %dec_label_pc_10009760

dec_label_pc_10009760:                            ; preds = %dec_label_pc_10009750
  br label %dec_label_pc_10009764

dec_label_pc_10009764:                            ; preds = %dec_label_pc_1000973c, %dec_label_pc_10009760
  %v0_10009764 = phi i32 [ 55, %dec_label_pc_1000973c ], [ 87, %dec_label_pc_10009760 ]
  %v2_10009764 = sub nsw i32 %v1_10009764, %v0_10009764
  br label %dec_label_pc_10009768

dec_label_pc_10009768:                            ; preds = %dec_label_pc_10009724, %dec_label_pc_10009764
  %v1_10009790 = phi i32 [ %v1_10009728, %dec_label_pc_10009724 ], [ %v2_10009764, %dec_label_pc_10009764 ]
  %v2_10009768 = icmp slt i32 %v1_10009790, %arg1
  br i1 %v2_10009768, label %dec_label_pc_10009770, label %dec_label_pc_100097cc

dec_label_pc_10009770:                            ; preds = %dec_label_pc_10009768
  %v1_10009770 = icmp slt i32 %v0_10009770, 0
  br i1 %v1_10009770, label %dec_label_pc_100097b4, label %dec_label_pc_10009778

dec_label_pc_10009778:                            ; preds = %dec_label_pc_10009770
  %v3_10009778 = icmp ugt i32 %v0_10009778, %v2_10009710
  br i1 %v3_10009778, label %dec_label_pc_100097b4, label %dec_label_pc_10009780

dec_label_pc_10009780:                            ; preds = %dec_label_pc_10009778
  %v4_10009780 = icmp eq i32 %v0_10009788, %v2_10009710
  br i1 %v4_10009780, label %dec_label_pc_100097bc, label %dec_label_pc_10009788

dec_label_pc_10009788:                            ; preds = %dec_label_pc_100097bc, %dec_label_pc_10009780
  %v2_10009788 = mul i32 %v0_10009788, %arg1
  %v2_10009790 = add i32 %v1_10009790, %v2_10009788
  store i32 %v2_10009790, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009794

dec_label_pc_10009794:                            ; preds = %dec_label_pc_100097bc, %dec_label_pc_100097b4, %dec_label_pc_10009788
  %v0_1000978017 = phi i32 [ %v2_10009710, %dec_label_pc_100097bc ], [ %v0_10009788, %dec_label_pc_100097b4 ], [ %v2_10009790, %dec_label_pc_10009788 ]
  %v0_100097d811 = phi i32 [ %v2_10009710, %dec_label_pc_100097bc ], [ %v0_10009778, %dec_label_pc_100097b4 ], [ %v2_10009790, %dec_label_pc_10009788 ]
  %v0_100097cc9 = phi i32 [ -1, %dec_label_pc_100097bc ], [ -1, %dec_label_pc_100097b4 ], [ 1, %dec_label_pc_10009788 ]
  %v1_10009794 = inttoptr i32 %v0_10009794 to i8*
  %v2_10009794 = load i8, i8* %v1_10009794, align 1
  %v1_10009798 = add i32 %v0_10009794, 1
  br label %dec_label_pc_10009724

dec_label_pc_100097a0:                            ; preds = %dec_label_pc_100096f4
  %v1_100097a0 = inttoptr i32 %v1_100096d0 to i8*
  %v2_100097a0 = load i8, i8* %v1_100097a0, align 1
  %v1_100097a8 = add i32 %v0_100096cc, 2
  br label %dec_label_pc_10009710

dec_label_pc_100097b4:                            ; preds = %dec_label_pc_10009778, %dec_label_pc_10009770
  br label %dec_label_pc_10009794

dec_label_pc_100097bc:                            ; preds = %dec_label_pc_10009780
  %v3_100097bc = icmp sgt i32 %v1_10009790, %v2_10009720
  br i1 %v3_100097bc, label %dec_label_pc_10009794, label %dec_label_pc_10009788

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_10009768, %dec_label_pc_10009750
  %v1_100097cc = icmp slt i32 %v0_10009770, 0
  br i1 %v1_100097cc, label %dec_label_pc_100097e8, label %dec_label_pc_100097d4

dec_label_pc_100097d4:                            ; preds = %dec_label_pc_100097cc
  %v3_100097d4 = icmp eq i32 %v0_100097e8, 0
  %v0_100097dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100097d4, i32 %v0_100097dc)
  %v0_100097e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100097e0 = sub i32 0, %v0_100097e0
  ret i32 %v1_100097e0

dec_label_pc_100097e8:                            ; preds = %dec_label_pc_100097cc
  %v1_100097e8 = xor i32 %v0_100097e8, 1
  %v2_100097f0 = sub nuw i32 -2147483648, %v1_100097e8
  ret i32 %v2_100097f0

dec_label_pc_100097f8:                            ; preds = %dec_label_pc_100096fc
  %v1_100097f8 = inttoptr i32 %v1_100096d0 to i8*
  %v2_100097f8 = load i8, i8* %v1_100097f8, align 1
  %v1_100097fc = add i32 %v0_100096cc, 2
  br label %dec_label_pc_10009704

; uselistorder directives
  uselistorder i32 %v2_10009790, { 1, 0, 2 }
  uselistorder i32 %v1_10009790, { 1, 0, 2 }
  uselistorder i32 %v1_10009764, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10009788, { 2, 0, 1 }
  uselistorder i32 %v0_10009794, { 1, 0 }
  uselistorder i32 %v2_10009710, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100096d0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_100096cc, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 9, 2, 3, 4, 0, 5, 6, 7, 1, 10, 11, 12, 13, 14, 15, 8, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009768, { 1, 0 }
  uselistorder label %dec_label_pc_10009764, { 1, 0 }
  uselistorder label %dec_label_pc_10009704, { 1, 0 }
}

define i32 @function_10009804(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009804:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10009830 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10009838

dec_label_pc_10009838:                            ; preds = %dec_label_pc_10009864.dec_label_pc_10009838_crit_edge, %dec_label_pc_10009804
  %v0_1000983c = phi i32 [ %v0_1000983c.pre, %dec_label_pc_10009864.dec_label_pc_10009838_crit_edge ], [ %arg3, %dec_label_pc_10009804 ]
  %v0_10009838 = phi i32 [ %v1_10009850, %dec_label_pc_10009864.dec_label_pc_10009838_crit_edge ], [ %tmp, %dec_label_pc_10009804 ]
  store i32 1, i32* @r5, align 4
  store i32 268474440, i32* @lr, align 4
  %v4_10009844 = call i32 @function_1000a020(i32 %v0_1000983c, i32 %v0_10009838, i32 1)
  %v0_10009848 = load i32, i32* @r31, align 4
  %v3_1000984c = icmp eq i32 %v4_10009844, 1
  %v1_10009850 = add i32 %v0_10009848, 1
  store i32 %v1_10009850, i32* @r31, align 4
  %v0_10009858 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000984c, label %dec_label_pc_10009858, label %dec_label_pc_10009870

dec_label_pc_10009858:                            ; preds = %dec_label_pc_10009838
  %v1_10009858 = add i32 %v0_10009858, 1
  store i32 %v1_10009858, i32* %r30.global-to-local, align 4
  %v0_1000985c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000985c = icmp sgt i32 %v0_1000985c, %v1_10009858
  br i1 %v3_1000985c, label %dec_label_pc_10009864, label %dec_label_pc_10009870

dec_label_pc_10009864:                            ; preds = %dec_label_pc_10009858
  %v1_10009864 = inttoptr i32 %v0_10009848 to i8*
  %v2_10009864 = load i8, i8* %v1_10009864, align 1
  %v3_10009868 = icmp eq i8 %v2_10009864, 10
  br i1 %v3_10009868, label %dec_label_pc_10009870, label %dec_label_pc_10009864.dec_label_pc_10009838_crit_edge

dec_label_pc_10009864.dec_label_pc_10009838_crit_edge: ; preds = %dec_label_pc_10009864
  %v0_1000983c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009838

dec_label_pc_10009870:                            ; preds = %dec_label_pc_10009838, %dec_label_pc_10009864, %dec_label_pc_10009858
  %v1_10009878 = phi i32 [ %v1_10009858, %dec_label_pc_10009864 ], [ %v1_10009858, %dec_label_pc_10009858 ], [ %v0_10009858, %dec_label_pc_10009838 ]
  %tmp12 = icmp slt i32 %v1_10009878, 0
  %v1_10009870 = zext i1 %tmp12 to i32
  %v2_10009870 = ashr i32 %v1_10009878, 31
  %v3_10009870 = and i32 %v2_10009870, -2
  %v4_10009870 = or i32 %v3_10009870, %v1_10009870
  %v2_10009878 = xor i32 %v4_10009870, %v1_10009878
  %v2_10009880 = sub i32 %v4_10009870, %v2_10009878
  %tmp13 = icmp slt i32 %v2_10009880, 0
  %v1_10009888 = zext i1 %tmp13 to i32
  %v2_10009888 = ashr i32 %v2_10009880, 31
  %v3_10009888 = and i32 %v2_10009888, -2
  %v4_10009888 = or i32 %v3_10009888, %v1_10009888
  %v0_10009890 = load i32, i32* %r27.global-to-local, align 4
  %v2_10009890 = and i32 %v4_10009888, %v0_10009890
  store i32 %v0_10009830, i32* @r31, align 4
  ret i32 %v2_10009890

; uselistorder directives
  uselistorder i32 %v2_10009880, { 1, 0 }
  uselistorder i32 %v4_10009870, { 1, 0 }
  uselistorder i32 %v1_10009878, { 1, 2, 0 }
  uselistorder i32 %v1_10009850, { 1, 0 }
  uselistorder i8 10, { 7, 6, 8, 9, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000a020, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10009870, { 1, 2, 0 }
}

define i32 @function_100098a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100098a8:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_100098c0 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_100098c8 = call i32 @function_1000a4bc()
  %v2_100098d4 = inttoptr i32 %v0_100098c8 to i32*
  store i32 0, i32* %v2_100098d4, align 4
  store i32 268474596, i32* @lr, align 4
  %v3_100098e0 = call i32 @function_1000aaf0(i32 2, i32 2, i32 0)
  store i32 %v3_100098e0, i32* @r3, align 4
  %v3_100098e8 = icmp eq i32 %v3_100098e0, -1
  store i32 %v3_100098e0, i32* @r31, align 4
  br i1 %v3_100098e8, label %dec_label_pc_10009938, label %dec_label_pc_10009904

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098a8
  %v2_100098b4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268474652, i32* @lr, align 4
  %v0_10009918 = call i32 @function_1000a8f0()
  %v2_10009920 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10009924 = load i32, i32* @r31, align 4
  store i32 268474668, i32* @lr, align 4
  %v3_10009928 = call i32 @function_1000a924(i32 %v0_10009924, i32 %v2_100098b4, i32 %v2_10009920)
  store i32 268474676, i32* @lr, align 4
  %v0_10009930 = call i32 @function_10009de8()
  br label %dec_label_pc_10009938

dec_label_pc_10009938:                            ; preds = %dec_label_pc_100098a8, %dec_label_pc_10009904
  %v0_10009938 = phi i32 [ 0, %dec_label_pc_100098a8 ], [ 134744072, %dec_label_pc_10009904 ]
  store i32 %v0_100098c0, i32* @r31, align 4
  ret i32 %v0_10009938

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_1000a8f0, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000aaf0, { 18, 16, 17, 15, 14, 13, 12, 11, 10, 9, 8, 1, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009938, { 1, 0 }
}

define i32 @function_10009954(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009954:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10009954 = load i8, i8* %tmp, align 1
  %v3_10009960 = icmp eq i8 %v3_10009954, 0
  br i1 %v3_10009960, label %dec_label_pc_10009978, label %dec_label_pc_10009968

dec_label_pc_10009968:                            ; preds = %dec_label_pc_10009954, %dec_label_pc_10009968
  %v0_10009968 = phi i32 [ %v1_10009968, %dec_label_pc_10009968 ], [ 0, %dec_label_pc_10009954 ]
  %v1_10009968 = add i32 %v0_10009968, 1
  %v3_1000996c = add i32 %v1_10009968, %arg3
  %v4_1000996c = inttoptr i32 %v3_1000996c to i8*
  %v5_1000996c = load i8, i8* %v4_1000996c, align 1
  %v3_10009970 = icmp eq i8 %v5_1000996c, 0
  br i1 %v3_10009970, label %dec_label_pc_10009978, label %dec_label_pc_10009968

dec_label_pc_10009978:                            ; preds = %dec_label_pc_10009968, %dec_label_pc_10009954
  %v0_100099a811 = phi i32 [ 0, %dec_label_pc_10009954 ], [ %v1_10009968, %dec_label_pc_10009968 ]
  %v1_10009978 = icmp slt i32 %arg2, 0
  %v1_1000997c = add i32 %arg2, 1
  br i1 %v1_10009978, label %dec_label_pc_100099f4, label %dec_label_pc_10009990

dec_label_pc_10009990:                            ; preds = %dec_label_pc_10009978, %dec_label_pc_100099f4, %dec_label_pc_100099e8
  %v2_1000999c8 = phi i32 [ %v1_100099a0, %dec_label_pc_100099e8 ], [ 0, %dec_label_pc_100099f4 ], [ 0, %dec_label_pc_10009978 ]
  %v0_100099946 = phi i32 [ %v1_10009998, %dec_label_pc_100099e8 ], [ %tmp16, %dec_label_pc_100099f4 ], [ %tmp16, %dec_label_pc_10009978 ]
  %v0_10009990 = phi i32 [ %v0_100099dc, %dec_label_pc_100099e8 ], [ 1, %dec_label_pc_100099f4 ], [ %v1_1000997c, %dec_label_pc_10009978 ]
  %v1_10009990 = add i32 %v0_10009990, -1
  %v2_10009990 = icmp eq i32 %v1_10009990, 0
  br i1 %v2_10009990, label %dec_label_pc_100099e0, label %dec_label_pc_10009994

dec_label_pc_10009994:                            ; preds = %dec_label_pc_10009990, %dec_label_pc_100099d8
  %v2_1000999c = phi i32 [ 0, %dec_label_pc_100099d8 ], [ %v2_1000999c8, %dec_label_pc_10009990 ]
  %v0_10009994 = phi i32 [ %v1_10009998, %dec_label_pc_100099d8 ], [ %v0_100099946, %dec_label_pc_10009990 ]
  %v0_100099dc = phi i32 [ %v1_100099dc, %dec_label_pc_100099d8 ], [ %v1_10009990, %dec_label_pc_10009990 ]
  %v1_10009994 = inttoptr i32 %v0_10009994 to i8*
  %v2_10009994 = load i8, i8* %v1_10009994, align 1
  %v3_10009994 = zext i8 %v2_10009994 to i32
  %v1_10009998 = add i32 %v0_10009994, 1
  %v3_1000999c = add i32 %v2_1000999c, %arg3
  %v4_1000999c = inttoptr i32 %v3_1000999c to i8*
  %v5_1000999c = load i8, i8* %v4_1000999c, align 1
  %v6_1000999c = zext i8 %v5_1000999c to i32
  %v1_100099a0 = add i32 %v2_1000999c, 1
  %v1_100099a4 = add nuw nsw i32 %v3_10009994, 191
  %v1_100099ac = urem i32 %v1_100099a4, 256
  %v2_100099b0 = icmp ugt i32 %v1_100099ac, 25
  %v1_100099b4 = add nuw nsw i32 %v6_1000999c, 191
  %v1_100099b8 = urem i32 %v1_100099b4, 256
  %v2_100099bc = icmp ugt i32 %v1_100099b8, 25
  br i1 %v2_100099b0, label %dec_label_pc_100099c8, label %dec_label_pc_100099c4

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_10009994
  %v1_100099c4 = or i32 %v3_10009994, 96
  br i1 %v2_100099bc, label %dec_label_pc_100099d0, label %dec_label_pc_100099cc

dec_label_pc_100099c8:                            ; preds = %dec_label_pc_10009994
  br i1 %v2_100099bc, label %dec_label_pc_100099d0, label %dec_label_pc_100099cc

dec_label_pc_100099cc:                            ; preds = %dec_label_pc_100099c4, %dec_label_pc_100099c8
  %v1_100099d014 = phi i32 [ %v1_100099c4, %dec_label_pc_100099c4 ], [ %v3_10009994, %dec_label_pc_100099c8 ]
  %v1_100099cc = or i32 %v6_1000999c, 96
  br label %dec_label_pc_100099d0

dec_label_pc_100099d0:                            ; preds = %dec_label_pc_100099c4, %dec_label_pc_100099c8, %dec_label_pc_100099cc
  %v1_100099d0 = phi i32 [ %v1_100099c4, %dec_label_pc_100099c4 ], [ %v3_10009994, %dec_label_pc_100099c8 ], [ %v1_100099d014, %dec_label_pc_100099cc ]
  %v0_100099d0 = phi i32 [ %v6_1000999c, %dec_label_pc_100099c4 ], [ %v6_1000999c, %dec_label_pc_100099c8 ], [ %v1_100099cc, %dec_label_pc_100099cc ]
  %v4_100099d0 = icmp eq i32 %v0_100099d0, %v1_100099d0
  br i1 %v4_100099d0, label %dec_label_pc_100099e8, label %dec_label_pc_100099d8

dec_label_pc_100099d8:                            ; preds = %dec_label_pc_100099d0
  %v1_100099dc = add i32 %v0_100099dc, -1
  %v2_100099dc = icmp eq i32 %v1_100099dc, 0
  br i1 %v2_100099dc, label %dec_label_pc_100099e0, label %dec_label_pc_10009994

dec_label_pc_100099e0:                            ; preds = %dec_label_pc_10009990, %dec_label_pc_100099d8
  ret i32 -1

dec_label_pc_100099e8:                            ; preds = %dec_label_pc_100099d0
  %v4_100099a8.le = icmp eq i32 %v0_100099a811, %v1_100099a0
  br i1 %v4_100099a8.le, label %dec_label_pc_100099ec, label %dec_label_pc_10009990

dec_label_pc_100099ec:                            ; preds = %dec_label_pc_100099e8
  %v2_100099ec = sub i32 %v1_10009998, %tmp16
  ret i32 %v2_100099ec

dec_label_pc_100099f4:                            ; preds = %dec_label_pc_10009978
  br label %dec_label_pc_10009990

; uselistorder directives
  uselistorder i32 %v1_100099dc, { 1, 0 }
  uselistorder i32 %v1_100099c4, { 1, 0 }
  uselistorder i1 %v2_100099bc, { 1, 0 }
  uselistorder i32 %v1_100099a0, { 1, 0 }
  uselistorder i32 %v3_10009994, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100099dc, { 1, 0 }
  uselistorder i32 %v0_10009994, { 1, 0 }
  uselistorder i32 %v2_1000999c, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 3, 4, 5, 0, 1, 2, 6, 7, 8 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100099e0, { 1, 0 }
  uselistorder label %dec_label_pc_100099d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100099cc, { 1, 0 }
  uselistorder label %dec_label_pc_10009994, { 1, 0 }
  uselistorder label %dec_label_pc_10009990, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009968, { 1, 0 }
}

define i32 @function_10009a00(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009a00:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10009a00 = load i8, i8* %arg1, align 1
  %v3_10009a08 = icmp eq i8 %v2_10009a00, 0
  br i1 %v3_10009a08, label %dec_label_pc_10009a20, label %dec_label_pc_10009a10

dec_label_pc_10009a10:                            ; preds = %dec_label_pc_10009a00, %dec_label_pc_10009a10
  %v0_10009a10 = phi i32 [ %v1_10009a10, %dec_label_pc_10009a10 ], [ 0, %dec_label_pc_10009a00 ]
  %v1_10009a10 = add i32 %v0_10009a10, 1
  %v2_10009a14 = add i32 %v1_10009a10, %tmp
  %v3_10009a14 = inttoptr i32 %v2_10009a14 to i8*
  %v4_10009a14 = load i8, i8* %v3_10009a14, align 1
  %v3_10009a18 = icmp eq i8 %v4_10009a14, 0
  br i1 %v3_10009a18, label %dec_label_pc_10009a20, label %dec_label_pc_10009a10

dec_label_pc_10009a20:                            ; preds = %dec_label_pc_10009a10, %dec_label_pc_10009a00
  %v0_10009a40 = phi i32 [ 0, %dec_label_pc_10009a00 ], [ %v1_10009a10, %dec_label_pc_10009a10 ]
  %v1_10009a20 = inttoptr i32 %arg2 to i8*
  %v2_10009a20 = load i8, i8* %v1_10009a20, align 1
  %v3_10009a28 = icmp eq i8 %v2_10009a20, 0
  br i1 %v3_10009a28, label %dec_label_pc_10009a40, label %dec_label_pc_10009a30

dec_label_pc_10009a30:                            ; preds = %dec_label_pc_10009a20, %dec_label_pc_10009a30
  %v0_10009a30 = phi i32 [ %v1_10009a30, %dec_label_pc_10009a30 ], [ 0, %dec_label_pc_10009a20 ]
  %v1_10009a30 = add i32 %v0_10009a30, 1
  %v2_10009a34 = add i32 %v1_10009a30, %arg2
  %v3_10009a34 = inttoptr i32 %v2_10009a34 to i8*
  %v4_10009a34 = load i8, i8* %v3_10009a34, align 1
  %v3_10009a38 = icmp eq i8 %v4_10009a34, 0
  br i1 %v3_10009a38, label %dec_label_pc_10009a40, label %dec_label_pc_10009a30

dec_label_pc_10009a40:                            ; preds = %dec_label_pc_10009a30, %dec_label_pc_10009a20
  %v0_10009a44 = phi i32 [ 0, %dec_label_pc_10009a20 ], [ %v1_10009a30, %dec_label_pc_10009a30 ]
  %v4_10009a40 = icmp eq i32 %v0_10009a40, %v0_10009a44
  br i1 %v4_10009a40, label %dec_label_pc_10009a58, label %dec_label_pc_10009a50

dec_label_pc_10009a50:                            ; preds = %dec_label_pc_10009a5c, %dec_label_pc_10009a40
  ret i32 0

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a40
  %v2_10009a58 = icmp eq i32 %v0_10009a40, 0
  br i1 %v2_10009a58, label %dec_label_pc_10009a78, label %dec_label_pc_10009a5c

dec_label_pc_10009a5c:                            ; preds = %dec_label_pc_10009a58, %dec_label_pc_10009a74
  %v0_10009a74 = phi i32 [ %v1_10009a74, %dec_label_pc_10009a74 ], [ %v0_10009a40, %dec_label_pc_10009a58 ]
  %v0_10009a64 = phi i32 [ %v1_10009a68, %dec_label_pc_10009a74 ], [ %arg2, %dec_label_pc_10009a58 ]
  %v0_10009a5c = phi i32 [ %v1_10009a60, %dec_label_pc_10009a74 ], [ %tmp, %dec_label_pc_10009a58 ]
  %v1_10009a5c = inttoptr i32 %v0_10009a5c to i8*
  %v2_10009a5c = load i8, i8* %v1_10009a5c, align 1
  %v1_10009a64 = inttoptr i32 %v0_10009a64 to i8*
  %v2_10009a64 = load i8, i8* %v1_10009a64, align 1
  %v4_10009a6c = icmp eq i8 %v2_10009a5c, %v2_10009a64
  br i1 %v4_10009a6c, label %dec_label_pc_10009a74, label %dec_label_pc_10009a50

dec_label_pc_10009a74:                            ; preds = %dec_label_pc_10009a5c
  %v1_10009a68 = add i32 %v0_10009a64, 1
  %v1_10009a60 = add i32 %v0_10009a5c, 1
  %v1_10009a74 = add i32 %v0_10009a74, -1
  %v2_10009a74 = icmp eq i32 %v1_10009a74, 0
  br i1 %v2_10009a74, label %dec_label_pc_10009a78, label %dec_label_pc_10009a5c

dec_label_pc_10009a78:                            ; preds = %dec_label_pc_10009a74, %dec_label_pc_10009a58
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10009a74, { 1, 0 }
  uselistorder i32 %v0_10009a5c, { 1, 0 }
  uselistorder i32 %v0_10009a64, { 1, 0 }
  uselistorder label %dec_label_pc_10009a5c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a30, { 1, 0 }
  uselistorder label %dec_label_pc_10009a10, { 1, 0 }
}

define i32 @function_10009a80(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009a80:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10009a80 = load i8, i8* %arg1, align 1
  %v3_10009a88 = icmp eq i8 %v2_10009a80, 0
  br i1 %v3_10009a88, label %dec_label_pc_10009aa0, label %dec_label_pc_10009a90

dec_label_pc_10009a90:                            ; preds = %dec_label_pc_10009a80, %dec_label_pc_10009a90
  %v0_10009a90 = phi i32 [ %v1_10009a90, %dec_label_pc_10009a90 ], [ 0, %dec_label_pc_10009a80 ]
  %v1_10009a90 = add i32 %v0_10009a90, 1
  %v2_10009a94 = add i32 %v1_10009a90, %tmp
  %v3_10009a94 = inttoptr i32 %v2_10009a94 to i8*
  %v4_10009a94 = load i8, i8* %v3_10009a94, align 1
  %v3_10009a98 = icmp eq i8 %v4_10009a94, 0
  br i1 %v3_10009a98, label %dec_label_pc_10009aa0, label %dec_label_pc_10009a90

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_10009a90, %dec_label_pc_10009a80
  %v1_10009ac0 = phi i32 [ 0, %dec_label_pc_10009a80 ], [ %v1_10009a90, %dec_label_pc_10009a90 ]
  %v1_10009aa0 = inttoptr i32 %arg2 to i8*
  %v2_10009aa0 = load i8, i8* %v1_10009aa0, align 1
  %v3_10009aa8 = icmp eq i8 %v2_10009aa0, 0
  br i1 %v3_10009aa8, label %dec_label_pc_10009ac0, label %dec_label_pc_10009ab0

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009aa0, %dec_label_pc_10009ab0
  %v0_10009ab0 = phi i32 [ %v1_10009ab0, %dec_label_pc_10009ab0 ], [ 0, %dec_label_pc_10009aa0 ]
  %v1_10009ab0 = add i32 %v0_10009ab0, 1
  %v2_10009ab4 = add i32 %v1_10009ab0, %arg2
  %v3_10009ab4 = inttoptr i32 %v2_10009ab4 to i8*
  %v4_10009ab4 = load i8, i8* %v3_10009ab4, align 1
  %v3_10009ab8 = icmp eq i8 %v4_10009ab4, 0
  br i1 %v3_10009ab8, label %dec_label_pc_10009ac0, label %dec_label_pc_10009ab0

dec_label_pc_10009ac0:                            ; preds = %dec_label_pc_10009ab0, %dec_label_pc_10009aa0
  %v1_10009ac8 = phi i32 [ 0, %dec_label_pc_10009aa0 ], [ %v1_10009ab0, %dec_label_pc_10009ab0 ]
  %v3_10009ac0 = icmp slt i32 %v1_10009ac0, %arg3
  br i1 %v3_10009ac0, label %dec_label_pc_10009af4, label %dec_label_pc_10009ac8

dec_label_pc_10009ac8:                            ; preds = %dec_label_pc_10009ac0
  %v3_10009ac8 = icmp slt i32 %v1_10009ac8, %arg3
  %v1_10009acc = add i32 %arg3, 1
  br i1 %v3_10009ac8, label %dec_label_pc_10009af4, label %dec_label_pc_10009ad8

dec_label_pc_10009ad8:                            ; preds = %dec_label_pc_10009ac8, %dec_label_pc_10009adc
  %v0_10009ae4 = phi i32 [ %v1_10009ae8, %dec_label_pc_10009adc ], [ %arg2, %dec_label_pc_10009ac8 ]
  %v0_10009adc = phi i32 [ %v1_10009ae0, %dec_label_pc_10009adc ], [ %tmp, %dec_label_pc_10009ac8 ]
  %v0_10009ad8 = phi i32 [ %v1_10009ad8, %dec_label_pc_10009adc ], [ %v1_10009acc, %dec_label_pc_10009ac8 ]
  %v1_10009ad8 = add i32 %v0_10009ad8, -1
  %v2_10009ad8 = icmp eq i32 %v1_10009ad8, 0
  br i1 %v2_10009ad8, label %dec_label_pc_10009afc, label %dec_label_pc_10009adc

dec_label_pc_10009adc:                            ; preds = %dec_label_pc_10009ad8
  %v1_10009adc = inttoptr i32 %v0_10009adc to i8*
  %v2_10009adc = load i8, i8* %v1_10009adc, align 1
  %v1_10009ae0 = add i32 %v0_10009adc, 1
  %v1_10009ae4 = inttoptr i32 %v0_10009ae4 to i8*
  %v2_10009ae4 = load i8, i8* %v1_10009ae4, align 1
  %v1_10009ae8 = add i32 %v0_10009ae4, 1
  %v4_10009aec = icmp eq i8 %v2_10009adc, %v2_10009ae4
  br i1 %v4_10009aec, label %dec_label_pc_10009ad8, label %dec_label_pc_10009af4

dec_label_pc_10009af4:                            ; preds = %dec_label_pc_10009adc, %dec_label_pc_10009ac8, %dec_label_pc_10009ac0
  ret i32 0

dec_label_pc_10009afc:                            ; preds = %dec_label_pc_10009ad8
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10009ad8, { 1, 0 }
  uselistorder i32 %v0_10009adc, { 1, 0 }
  uselistorder i32 %v0_10009ae4, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ad8, { 1, 0 }
  uselistorder label %dec_label_pc_10009ab0, { 1, 0 }
  uselistorder label %dec_label_pc_10009a90, { 1, 0 }
}

define i32 @function_10009b04(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009b04:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009b04 = icmp eq i32 %arg3, 0
  %v4_10009b08 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009b08, i32* %stack_var_-64, align 4
  %v5_10009b08 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10009b04, label %dec_label_pc_10009b24, label %dec_label_pc_10009b10

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009b04
  %v0_10009b10 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009b10 = icmp eq i32 %v0_10009b10, 0
  store i1 %v3_10009b10, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10009b10, label %dec_label_pc_10009b18, label %dec_label_pc_10009b30

dec_label_pc_10009b18:                            ; preds = %dec_label_pc_10009b10
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10009b1c = add i32 %arg3, 1
  %v5_10009b1c = inttoptr i32 %v4_10009b1c to i8*
  store i8 0, i8* %v5_10009b1c, align 1
  %v0_10009b20 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009b20 = trunc i32 %v0_10009b20 to i8
  store i8 %v1_10009b20, i8* %tmp, align 1
  br label %dec_label_pc_10009b24

dec_label_pc_10009b24:                            ; preds = %dec_label_pc_10009b04, %dec_label_pc_10009bb0, %dec_label_pc_10009b18
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10009b30:                            ; preds = %dec_label_pc_10009b10
  %v2_10009b10 = icmp sgt i32 %v0_10009b10, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009b30.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10009b10, %v3_10009b30.not
  br i1 %brmerge, label %dec_label_pc_10009b44, label %dec_label_pc_10009bf8

dec_label_pc_10009b44:                            ; preds = %dec_label_pc_10009b30, %dec_label_pc_10009bf8
  %v0_10009b482 = phi i32 [ %v0_10009b10, %dec_label_pc_10009b30 ], [ %v1_10009bf8, %dec_label_pc_10009bf8 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10009b30 ], [ 1, %dec_label_pc_10009bf8 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b48

dec_label_pc_10009b48:                            ; preds = %dec_label_pc_10009b74.dec_label_pc_10009b48_crit_edge, %dec_label_pc_10009b44
  %v1_10009b4c = phi i32 [ %v1_10009b4c.pre, %dec_label_pc_10009b74.dec_label_pc_10009b48_crit_edge ], [ 32, %dec_label_pc_10009b44 ]
  %v0_10009b4c = phi i32 [ %v0_10009b4c.pre, %dec_label_pc_10009b74.dec_label_pc_10009b48_crit_edge ], [ %v5_10009b08, %dec_label_pc_10009b44 ]
  %v1_10009b5c = phi i32 [ %v0_10009b48.pre, %dec_label_pc_10009b74.dec_label_pc_10009b48_crit_edge ], [ %v0_10009b482, %dec_label_pc_10009b44 ]
  %v2_10009b48 = udiv i32 %v1_10009b5c, %arg2
  %v2_10009b4c = add i32 %v0_10009b4c, %v1_10009b4c
  store i32 %v2_10009b4c, i32* %r11.global-to-local, align 4
  %v1_10009b50 = add i32 %v1_10009b4c, -1
  store i32 %v1_10009b50, i32* %r10.global-to-local, align 4
  %v2_10009b54 = mul i32 %v2_10009b48, %arg2
  %v3_10009b58 = icmp ult i32 %v1_10009b5c, %arg2
  store i1 %v3_10009b58, i1* %cr6_eq.global-to-local, align 1
  %v2_10009b5c = sub i32 %v1_10009b5c, %v2_10009b54
  store i32 %v2_10009b5c, i32* %r9.global-to-local, align 4
  store i32 %v2_10009b48, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10009b5c, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10009b5c
  %v0_10009b74.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10009b74 = add i32 %v2_10009b4c, 8
  %v4_10009b74 = inttoptr i32 %v3_10009b74 to i8*
  store i8 %v0_10009b74.off0, i8* %v4_10009b74, align 1
  %v0_10009b78 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10009b78, label %dec_label_pc_10009b7c, label %dec_label_pc_10009b74.dec_label_pc_10009b48_crit_edge

dec_label_pc_10009b74.dec_label_pc_10009b48_crit_edge: ; preds = %dec_label_pc_10009b48
  %v0_10009b48.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10009b4c.pre = load i32, i32* @r1, align 4
  %v1_10009b4c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b48

dec_label_pc_10009b7c:                            ; preds = %dec_label_pc_10009b48
  %v0_10009b7c = load i32, i32* %r8.global-to-local, align 4
  %v3_10009b7c = icmp eq i32 %v0_10009b7c, 0
  br i1 %v3_10009b7c, label %dec_label_pc_10009b84, label %dec_label_pc_10009be4

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009b7c
  %v0_10009b84 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009b84 = add i32 %v0_10009b84, 1
  store i32 %v1_10009b84, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b88

dec_label_pc_10009b88:                            ; preds = %dec_label_pc_10009be4, %dec_label_pc_10009b84
  %v1_10009b90 = phi i32 [ %v1_10009b8c.pre, %dec_label_pc_10009be4 ], [ %v1_10009b84, %dec_label_pc_10009b84 ]
  %v2_10009b88 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009b88, i32* %r9.global-to-local, align 4
  %v2_10009b8c = add i32 %v1_10009b90, %v2_10009b88
  %v3_10009b8c = inttoptr i32 %v2_10009b8c to i8*
  %v4_10009b8c = load i8, i8* %v3_10009b8c, align 1
  %v5_10009b8c = zext i8 %v4_10009b8c to i32
  store i32 %v5_10009b8c, i32* %r0.global-to-local, align 4
  store i32 %v2_10009b8c, i32* %r9.global-to-local, align 4
  %v3_10009b94 = icmp eq i8 %v4_10009b8c, 0
  br i1 %v3_10009b94, label %dec_label_pc_10009c0c, label %dec_label_pc_10009b9c

dec_label_pc_10009b9c:                            ; preds = %dec_label_pc_10009b88
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009ba0

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009ba0, %dec_label_pc_10009b9c
  %v0_10009ba0 = phi i32 [ %v1_10009ba0, %dec_label_pc_10009ba0 ], [ 0, %dec_label_pc_10009b9c ]
  %v1_10009ba0 = add i32 %v0_10009ba0, 1
  store i32 %v1_10009ba0, i32* %r10.global-to-local, align 4
  %v2_10009ba4 = add i32 %v1_10009ba0, %v2_10009b8c
  %v3_10009ba4 = inttoptr i32 %v2_10009ba4 to i8*
  %v4_10009ba4 = load i8, i8* %v3_10009ba4, align 1
  %v5_10009ba4 = zext i8 %v4_10009ba4 to i32
  store i32 %v5_10009ba4, i32* %r0.global-to-local, align 4
  %v3_10009ba8 = icmp eq i8 %v4_10009ba4, 0
  br i1 %v3_10009ba8, label %dec_label_pc_10009bb0, label %dec_label_pc_10009ba0

dec_label_pc_10009bb0:                            ; preds = %dec_label_pc_10009ba0
  %v3_10009bb0 = icmp eq i32 %v1_10009ba0, -1
  br i1 %v3_10009bb0, label %dec_label_pc_10009b24, label %dec_label_pc_10009bb8

dec_label_pc_10009bb8:                            ; preds = %dec_label_pc_10009bb0
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10009ba0, 2
  br label %dec_label_pc_10009bbc

dec_label_pc_10009bbc:                            ; preds = %dec_label_pc_10009c0c, %dec_label_pc_10009bb8
  %v0_10009bbc = phi i32 [ 1, %dec_label_pc_10009c0c ], [ %phitmp, %dec_label_pc_10009bb8 ]
  store i32 %v0_10009bbc, i32* %r10.global-to-local, align 4
  store i32 %v0_10009bbc, i32* %ctr.global-to-local, align 4
  %v2_10009bc424 = load i8, i8* %v3_10009b8c, align 1
  %v3_10009bc425 = zext i8 %v2_10009bc424 to i32
  store i32 %v3_10009bc425, i32* %r0.global-to-local, align 4
  %v1_10009bc826 = add i32 %v2_10009b8c, 1
  store i32 %v1_10009bc826, i32* %r9.global-to-local, align 4
  store i8 %v2_10009bc424, i8* %tmp, align 1
  %v0_10009bd028 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bd029 = add i32 %v0_10009bd028, 1
  store i32 %v1_10009bd029, i32* %r11.global-to-local, align 4
  %v0_10009bd430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009bd431 = add i32 %v0_10009bd430, -1
  store i32 %v1_10009bd431, i32* %ctr.global-to-local, align 4
  %v2_10009bd432 = icmp eq i32 %v1_10009bd431, 0
  br i1 %v2_10009bd432, label %dec_label_pc_10009bd8, label %dec_label_pc_10009bc4.dec_label_pc_10009bc4_crit_edge

dec_label_pc_10009bc4.dec_label_pc_10009bc4_crit_edge: ; preds = %dec_label_pc_10009bbc, %dec_label_pc_10009bc4.dec_label_pc_10009bc4_crit_edge
  %v1_10009bd033 = phi i32 [ %v1_10009bd0, %dec_label_pc_10009bc4.dec_label_pc_10009bc4_crit_edge ], [ %v1_10009bd029, %dec_label_pc_10009bbc ]
  %v0_10009bc4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bc4 = inttoptr i32 %v0_10009bc4.pre to i8*
  %v2_10009bc4 = load i8, i8* %v1_10009bc4, align 1
  %v3_10009bc4 = zext i8 %v2_10009bc4 to i32
  store i32 %v3_10009bc4, i32* %r0.global-to-local, align 4
  %v1_10009bc8 = add i32 %v0_10009bc4.pre, 1
  store i32 %v1_10009bc8, i32* %r9.global-to-local, align 4
  %v3_10009bcc = inttoptr i32 %v1_10009bd033 to i8*
  store i8 %v2_10009bc4, i8* %v3_10009bcc, align 1
  %v0_10009bd0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bd0 = add i32 %v0_10009bd0, 1
  store i32 %v1_10009bd0, i32* %r11.global-to-local, align 4
  %v0_10009bd4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009bd4 = add i32 %v0_10009bd4, -1
  store i32 %v1_10009bd4, i32* %ctr.global-to-local, align 4
  %v2_10009bd4 = icmp eq i32 %v1_10009bd4, 0
  br i1 %v2_10009bd4, label %dec_label_pc_10009bd8, label %dec_label_pc_10009bc4.dec_label_pc_10009bc4_crit_edge

dec_label_pc_10009bd8:                            ; preds = %dec_label_pc_10009bc4.dec_label_pc_10009bc4_crit_edge, %dec_label_pc_10009bbc
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10009be4:                            ; preds = %dec_label_pc_10009b7c
  %v0_10009be4.pre = load i32, i32* @r1, align 4
  %v1_10009be4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009be4 = add i32 %v1_10009be4.pre, %v0_10009be4.pre
  store i32 %v2_10009be4, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10009bec = add i32 %v2_10009be4, 8
  %v4_10009bec = inttoptr i32 %v3_10009bec to i8*
  store i8 45, i8* %v4_10009bec, align 1
  %v1_10009b8c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b88

dec_label_pc_10009bf8:                            ; preds = %dec_label_pc_10009b30
  %v1_10009bf8 = sub i32 0, %v0_10009b10
  store i32 %v1_10009bf8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b44

dec_label_pc_10009c0c:                            ; preds = %dec_label_pc_10009b88
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009bbc

; uselistorder directives
  uselistorder i32 %v1_10009bf8, { 1, 0 }
  uselistorder i32 %v1_10009bd4, { 1, 0 }
  uselistorder i32 %v1_10009bd0, { 1, 0 }
  uselistorder i32 %v0_10009bbc, { 1, 0 }
  uselistorder i32 %v1_10009ba0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10009b48, { 1, 0 }
  uselistorder i32 %v1_10009b5c, { 1, 0, 2 }
  uselistorder i32 %v1_10009b4c, { 1, 0 }
  uselistorder i32 %v0_10009b10, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 4, 3, 0, 5, 6, 1 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 4, 3, 0, 5, 6, 1 }
  uselistorder i32* %r10.global-to-local, { 6, 7, 2, 0, 8, 9, 11, 10, 3, 1, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 45, { 4, 3, 0, 5, 1, 6, 2, 7 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10009bc4.dec_label_pc_10009bc4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009b44, { 1, 0 }
  uselistorder label %dec_label_pc_10009b24, { 1, 2, 0 }
}

define i32 @function_10009c18(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c18:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10009c28 = icmp eq i32 %arg2, -2143521772
  %v2_10009c3c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009c3c, i32* %stack_var_-32, align 4
  br i1 %v4_10009c28, label %dec_label_pc_10009c9c, label %dec_label_pc_10009c5c

dec_label_pc_10009c5c:                            ; preds = %dec_label_pc_10009c18
  %v3_10009c5c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10009c5c, label %dec_label_pc_10009c74, label %dec_label_pc_10009c64

dec_label_pc_10009c64:                            ; preds = %dec_label_pc_10009c5c
  %v3_10009c68 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10009c68, label %dec_label_pc_10009c90, label %dec_label_pc_10009cbc

dec_label_pc_10009c74:                            ; preds = %dec_label_pc_10009c5c
  %v1_10009c74 = xor i32 %arg2, -2143551488
  %v3_10009c78 = icmp eq i32 %v1_10009c74, 29717
  br i1 %v3_10009c78, label %dec_label_pc_10009cac, label %dec_label_pc_10009c80

dec_label_pc_10009c80:                            ; preds = %dec_label_pc_10009c74
  %v3_10009c84 = icmp eq i32 %v1_10009c74, 29718
  br i1 %v3_10009c84, label %dec_label_pc_10009cb4, label %dec_label_pc_10009cbc

dec_label_pc_10009c90:                            ; preds = %dec_label_pc_10009c64
  store i32 ptrtoint (i32* @global_var_10009c98.451 to i32), i32* @lr, align 4
  %v2_10009c94 = inttoptr i32 %arg3 to i32*
  %v3_10009c94 = call i32 @function_1000a654(i32* %v2_10009c94, i32 %arg1)
  br label %dec_label_pc_10009ca4

dec_label_pc_10009c9c:                            ; preds = %dec_label_pc_10009c18
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10009ca0

dec_label_pc_10009ca0:                            ; preds = %dec_label_pc_10009cb4, %dec_label_pc_10009cac, %dec_label_pc_10009c9c
  store i32 268475556, i32* @lr, align 4
  %v0_10009ca0 = call i32 @function_1000a6f0()
  br label %dec_label_pc_10009ca4

dec_label_pc_10009ca4:                            ; preds = %dec_label_pc_10009c90, %dec_label_pc_10009ca0
  %storemerge = phi i32 [ %v0_10009ca0, %dec_label_pc_10009ca0 ], [ %v3_10009c94, %dec_label_pc_10009c90 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009ce8

dec_label_pc_10009cac:                            ; preds = %dec_label_pc_10009c74
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10009ca0

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009c80
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10009ca0

dec_label_pc_10009cbc:                            ; preds = %dec_label_pc_10009c80, %dec_label_pc_10009c64
  %v0_10009ccc = call i32 @__asm_mfcr()
  %v1_10009cd0 = and i32 %v0_10009ccc, 268435456
  %v3_10009cd0 = icmp eq i32 %v1_10009cd0, 0
  store i32 %v0_10009ccc, i32* %r31.global-to-local, align 4
  br i1 %v3_10009cd0, label %dec_label_pc_10009ce8, label %dec_label_pc_10009cdc

dec_label_pc_10009cdc:                            ; preds = %dec_label_pc_10009cbc
  %v0_10009cdc = call i32 @function_1000a4bc()
  %v0_10009ce0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009ce0 = inttoptr i32 %v0_10009cdc to i32*
  store i32 %v0_10009ce0, i32* %v2_10009ce0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009ce8

dec_label_pc_10009ce8:                            ; preds = %dec_label_pc_10009cbc, %dec_label_pc_10009ca4, %dec_label_pc_10009cdc
  %v0_10009cec = phi i32 [ %v0_10009ccc, %dec_label_pc_10009cbc ], [ %storemerge, %dec_label_pc_10009ca4 ], [ -1, %dec_label_pc_10009cdc ]
  ret i32 %v0_10009cec

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009ce8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ca4, { 1, 0 }
}

define i32 @function_10009d00(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009d00:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10009d14 = load i32, i32* @r4, align 4
  %v1_10009d14 = add i32 %v0_10009d14, -12
  %v2_10009d18 = icmp ugt i32 %v1_10009d14, 2
  %v2_10009d20 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009d20, i32* %stack_var_-32, align 4
  br i1 %v2_10009d18, label %dec_label_pc_10009d4c, label %dec_label_pc_10009d3c

dec_label_pc_10009d3c:                            ; preds = %dec_label_pc_10009d00
  store i32 268475716, i32* @lr, align 4
  %v2_10009d40 = call i32 @function_10009d84(i32 3)
  store i32 %v2_10009d40, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009d6c

dec_label_pc_10009d4c:                            ; preds = %dec_label_pc_10009d00
  %v0_10009d50 = call i32 @__asm_mfcr()
  %v1_10009d54 = and i32 %v0_10009d50, 268435456
  %v3_10009d54 = icmp eq i32 %v1_10009d54, 0
  store i32 %v0_10009d50, i32* %r31.global-to-local, align 4
  br i1 %v3_10009d54, label %dec_label_pc_10009d6c, label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %dec_label_pc_10009d4c
  %v0_10009d60 = call i32 @function_1000a4bc()
  %v0_10009d64 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009d64 = inttoptr i32 %v0_10009d60 to i32*
  store i32 %v0_10009d64, i32* %v2_10009d64, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009d6c

dec_label_pc_10009d6c:                            ; preds = %dec_label_pc_10009d4c, %dec_label_pc_10009d3c, %dec_label_pc_10009d60
  %v0_10009d70 = phi i32 [ %v0_10009d50, %dec_label_pc_10009d4c ], [ %v2_10009d40, %dec_label_pc_10009d3c ], [ -1, %dec_label_pc_10009d60 ]
  ret i32 %v0_10009d70

; uselistorder directives
  uselistorder i32* %r31.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10009d6c, { 2, 0, 1 }
}

define i32 @function_10009d84(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009d84:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10009d9c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009d9c, i32* %stack_var_-32, align 4
  %v0_10009db8 = call i32 @__asm_mfcr()
  %v1_10009dbc = and i32 %v0_10009db8, 268435456
  %v3_10009dbc = icmp eq i32 %v1_10009dbc, 0
  store i32 %v0_10009db8, i32* %r31.global-to-local, align 4
  br i1 %v3_10009dbc, label %dec_label_pc_10009dd4, label %dec_label_pc_10009dc8

dec_label_pc_10009dc8:                            ; preds = %dec_label_pc_10009d84
  %v0_10009dc8 = call i32 @function_1000a4bc()
  %v0_10009dcc = load i32, i32* %r31.global-to-local, align 4
  %v2_10009dcc = inttoptr i32 %v0_10009dc8 to i32*
  store i32 %v0_10009dcc, i32* %v2_10009dcc, align 4
  br label %dec_label_pc_10009dd4

dec_label_pc_10009dd4:                            ; preds = %dec_label_pc_10009d84, %dec_label_pc_10009dc8
  %v0_10009de4 = phi i32 [ %v0_10009db8, %dec_label_pc_10009d84 ], [ -1, %dec_label_pc_10009dc8 ]
  ret i32 %v0_10009de4

; uselistorder directives
  uselistorder label %dec_label_pc_10009dd4, { 1, 0 }
}

define i32 @function_10009de8() local_unnamed_addr {
dec_label_pc_10009de8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009e00 = call i32 @__asm_mfcr()
  %v1_10009e04 = and i32 %v0_10009e00, 268435456
  %v3_10009e04 = icmp eq i32 %v1_10009e04, 0
  store i32 %v0_10009e00, i32* %r31.global-to-local, align 4
  br i1 %v3_10009e04, label %dec_label_pc_10009e1c, label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009de8
  %v0_10009e10 = call i32 @function_1000a4bc()
  %v0_10009e14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009e14 = inttoptr i32 %v0_10009e10 to i32*
  store i32 %v0_10009e14, i32* %v2_10009e14, align 4
  br label %dec_label_pc_10009e1c

dec_label_pc_10009e1c:                            ; preds = %dec_label_pc_10009de8, %dec_label_pc_10009e10
  %v0_10009e2c = phi i32 [ %v0_10009e00, %dec_label_pc_10009de8 ], [ -1, %dec_label_pc_10009e10 ]
  ret i32 %v0_10009e2c

; uselistorder directives
  uselistorder label %dec_label_pc_10009e1c, { 1, 0 }
}

define i32 @function_10009e30() local_unnamed_addr {
dec_label_pc_10009e30:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009e48 = call i32 @__asm_mfcr()
  %v1_10009e4c = and i32 %v0_10009e48, 268435456
  %v3_10009e4c = icmp eq i32 %v1_10009e4c, 0
  store i32 %v0_10009e48, i32* %r31.global-to-local, align 4
  br i1 %v3_10009e4c, label %dec_label_pc_10009e64, label %dec_label_pc_10009e58

dec_label_pc_10009e58:                            ; preds = %dec_label_pc_10009e30
  %v0_10009e58 = call i32 @function_1000a4bc()
  %v0_10009e5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009e5c = inttoptr i32 %v0_10009e58 to i32*
  store i32 %v0_10009e5c, i32* %v2_10009e5c, align 4
  br label %dec_label_pc_10009e64

dec_label_pc_10009e64:                            ; preds = %dec_label_pc_10009e30, %dec_label_pc_10009e58
  %v0_10009e74 = phi i32 [ %v0_10009e48, %dec_label_pc_10009e30 ], [ -1, %dec_label_pc_10009e58 ]
  ret i32 %v0_10009e74

; uselistorder directives
  uselistorder label %dec_label_pc_10009e64, { 1, 0 }
}

define i32 @function_10009e78() local_unnamed_addr {
dec_label_pc_10009e78:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009e90 = call i32 @__asm_mfcr()
  %v1_10009e94 = and i32 %v0_10009e90, 268435456
  %v3_10009e94 = icmp eq i32 %v1_10009e94, 0
  store i32 %v0_10009e90, i32* %r31.global-to-local, align 4
  br i1 %v3_10009e94, label %dec_label_pc_10009eac, label %dec_label_pc_10009ea0

dec_label_pc_10009ea0:                            ; preds = %dec_label_pc_10009e78
  %v0_10009ea0 = call i32 @function_1000a4bc()
  %v0_10009ea4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009ea4 = inttoptr i32 %v0_10009ea0 to i32*
  store i32 %v0_10009ea4, i32* %v2_10009ea4, align 4
  br label %dec_label_pc_10009eac

dec_label_pc_10009eac:                            ; preds = %dec_label_pc_10009e78, %dec_label_pc_10009ea0
  %v0_10009ebc = phi i32 [ %v0_10009e90, %dec_label_pc_10009e78 ], [ -1, %dec_label_pc_10009ea0 ]
  ret i32 %v0_10009ebc

; uselistorder directives
  uselistorder label %dec_label_pc_10009eac, { 1, 0 }
}

define i32 @function_10009ec0() local_unnamed_addr {
dec_label_pc_10009ec0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009ed8 = call i32 @__asm_mfcr()
  %v1_10009edc = and i32 %v0_10009ed8, 268435456
  %v3_10009edc = icmp eq i32 %v1_10009edc, 0
  store i32 %v0_10009ed8, i32* %r31.global-to-local, align 4
  br i1 %v3_10009edc, label %dec_label_pc_10009ef4, label %dec_label_pc_10009ee8

dec_label_pc_10009ee8:                            ; preds = %dec_label_pc_10009ec0
  %v0_10009ee8 = call i32 @function_1000a4bc()
  %v0_10009eec = load i32, i32* %r31.global-to-local, align 4
  %v2_10009eec = inttoptr i32 %v0_10009ee8 to i32*
  store i32 %v0_10009eec, i32* %v2_10009eec, align 4
  br label %dec_label_pc_10009ef4

dec_label_pc_10009ef4:                            ; preds = %dec_label_pc_10009ec0, %dec_label_pc_10009ee8
  %v0_10009f04 = phi i32 [ %v0_10009ed8, %dec_label_pc_10009ec0 ], [ -1, %dec_label_pc_10009ee8 ]
  ret i32 %v0_10009f04

; uselistorder directives
  uselistorder label %dec_label_pc_10009ef4, { 1, 0 }
}

define i32 @function_10009f08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009f08:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009f20 = call i32 @__asm_mfcr()
  %v1_10009f24 = and i32 %v0_10009f20, 268435456
  %v3_10009f24 = icmp eq i32 %v1_10009f24, 0
  store i32 %v0_10009f20, i32* %r31.global-to-local, align 4
  br i1 %v3_10009f24, label %dec_label_pc_10009f3c, label %dec_label_pc_10009f30

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009f08
  %v0_10009f30 = call i32 @function_1000a4bc()
  %v0_10009f34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f34 = inttoptr i32 %v0_10009f30 to i32*
  store i32 %v0_10009f34, i32* %v2_10009f34, align 4
  br label %dec_label_pc_10009f3c

dec_label_pc_10009f3c:                            ; preds = %dec_label_pc_10009f08, %dec_label_pc_10009f30
  %v0_10009f4c = phi i32 [ %v0_10009f20, %dec_label_pc_10009f08 ], [ -1, %dec_label_pc_10009f30 ]
  ret i32 %v0_10009f4c

; uselistorder directives
  uselistorder label %dec_label_pc_10009f3c, { 1, 0 }
}

define i32 @function_10009f50(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009f50:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009f64 = and i32 %arg2, 64
  %v3_10009f64 = icmp eq i32 %v1_10009f64, 0
  br i1 %v3_10009f64, label %dec_label_pc_10009f90, label %dec_label_pc_10009f74

dec_label_pc_10009f74:                            ; preds = %dec_label_pc_10009f50
  %v2_10009f7c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009f7c, i32* %stack_var_-32, align 4
  %v0_10009f8c = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009f90

dec_label_pc_10009f90:                            ; preds = %dec_label_pc_10009f50, %dec_label_pc_10009f74
  %v0_10009f90 = phi i32 [ 0, %dec_label_pc_10009f50 ], [ %v0_10009f8c, %dec_label_pc_10009f74 ]
  store i32 %v0_10009f90, i32* @r5, align 4
  %v0_10009f98 = call i32 @__asm_mfcr()
  %v1_10009f9c = and i32 %v0_10009f98, 268435456
  %v3_10009f9c = icmp eq i32 %v1_10009f9c, 0
  store i32 %v0_10009f98, i32* %r31.global-to-local, align 4
  br i1 %v3_10009f9c, label %dec_label_pc_10009fb4, label %dec_label_pc_10009fa8

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009f90
  %v0_10009fa8 = call i32 @function_1000a4bc()
  %v0_10009fac = load i32, i32* %r31.global-to-local, align 4
  %v2_10009fac = inttoptr i32 %v0_10009fa8 to i32*
  store i32 %v0_10009fac, i32* %v2_10009fac, align 4
  br label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009f90, %dec_label_pc_10009fa8
  %v0_10009fc4 = phi i32 [ %v0_10009f98, %dec_label_pc_10009f90 ], [ -1, %dec_label_pc_10009fa8 ]
  ret i32 %v0_10009fc4

; uselistorder directives
  uselistorder label %dec_label_pc_10009fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10009f90, { 1, 0 }
}

define i32 @function_10009fc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009fc8:
  store i32 %arg1, i32* @r5, align 4
  %v2_10009fd4 = call i32 @function_10009f50(i32 577, i32 577)
  ret i32 %v2_10009fd4
}

define i32 @function_10009fd8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009fd8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009ff0 = call i32 @__asm_mfcr()
  %v1_10009ff4 = and i32 %v0_10009ff0, 268435456
  %v3_10009ff4 = icmp eq i32 %v1_10009ff4, 0
  store i32 %v0_10009ff0, i32* %r31.global-to-local, align 4
  br i1 %v3_10009ff4, label %dec_label_pc_1000a00c, label %dec_label_pc_1000a000

dec_label_pc_1000a000:                            ; preds = %dec_label_pc_10009fd8
  %v0_1000a000 = call i32 @function_1000a4bc()
  %v0_1000a004 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a004 = inttoptr i32 %v0_1000a000 to i32*
  store i32 %v0_1000a004, i32* %v2_1000a004, align 4
  br label %dec_label_pc_1000a00c

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_10009fd8, %dec_label_pc_1000a000
  %v0_1000a01c = phi i32 [ %v0_10009ff0, %dec_label_pc_10009fd8 ], [ -1, %dec_label_pc_1000a000 ]
  ret i32 %v0_1000a01c

; uselistorder directives
  uselistorder label %dec_label_pc_1000a00c, { 1, 0 }
}

define i32 @function_1000a020(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a020:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a038 = call i32 @__asm_mfcr()
  %v1_1000a03c = and i32 %v0_1000a038, 268435456
  %v3_1000a03c = icmp eq i32 %v1_1000a03c, 0
  store i32 %v0_1000a038, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a03c, label %dec_label_pc_1000a054, label %dec_label_pc_1000a048

dec_label_pc_1000a048:                            ; preds = %dec_label_pc_1000a020
  %v0_1000a048 = call i32 @function_1000a4bc()
  %v0_1000a04c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a04c = inttoptr i32 %v0_1000a048 to i32*
  store i32 %v0_1000a04c, i32* %v2_1000a04c, align 4
  br label %dec_label_pc_1000a054

dec_label_pc_1000a054:                            ; preds = %dec_label_pc_1000a020, %dec_label_pc_1000a048
  %v0_1000a064 = phi i32 [ %v0_1000a038, %dec_label_pc_1000a020 ], [ -1, %dec_label_pc_1000a048 ]
  ret i32 %v0_1000a064

; uselistorder directives
  uselistorder label %dec_label_pc_1000a054, { 1, 0 }
}

define i32 @function_1000a068(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a068:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a080 = call i32 @__asm_mfcr()
  %v1_1000a084 = and i32 %v0_1000a080, 268435456
  %v3_1000a084 = icmp eq i32 %v1_1000a084, 0
  store i32 %v0_1000a080, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a084, label %dec_label_pc_1000a09c, label %dec_label_pc_1000a090

dec_label_pc_1000a090:                            ; preds = %dec_label_pc_1000a068
  %v0_1000a090 = call i32 @function_1000a4bc()
  %v0_1000a094 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a094 = inttoptr i32 %v0_1000a090 to i32*
  store i32 %v0_1000a094, i32* %v2_1000a094, align 4
  br label %dec_label_pc_1000a09c

dec_label_pc_1000a09c:                            ; preds = %dec_label_pc_1000a068, %dec_label_pc_1000a090
  %v0_1000a0ac = phi i32 [ %v0_1000a080, %dec_label_pc_1000a068 ], [ -1, %dec_label_pc_1000a090 ]
  ret i32 %v0_1000a0ac

; uselistorder directives
  uselistorder label %dec_label_pc_1000a09c, { 1, 0 }
}

define i32 @function_1000a0b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000a0b0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a0c8 = call i32 @__asm_mfcr()
  %v1_1000a0cc = and i32 %v0_1000a0c8, 268435456
  %v3_1000a0cc = icmp eq i32 %v1_1000a0cc, 0
  store i32 %v0_1000a0c8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a0cc, label %dec_label_pc_1000a0e4, label %dec_label_pc_1000a0d8

dec_label_pc_1000a0d8:                            ; preds = %dec_label_pc_1000a0b0
  %v0_1000a0d8 = call i32 @function_1000a4bc()
  %v0_1000a0dc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a0dc = inttoptr i32 %v0_1000a0d8 to i32*
  store i32 %v0_1000a0dc, i32* %v2_1000a0dc, align 4
  br label %dec_label_pc_1000a0e4

dec_label_pc_1000a0e4:                            ; preds = %dec_label_pc_1000a0b0, %dec_label_pc_1000a0d8
  %v0_1000a0f4 = phi i32 [ %v0_1000a0c8, %dec_label_pc_1000a0b0 ], [ -1, %dec_label_pc_1000a0d8 ]
  ret i32 %v0_1000a0f4

; uselistorder directives
  uselistorder label %dec_label_pc_1000a0e4, { 1, 0 }
}

define i32 @function_1000a0f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a0f8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a110 = call i32 @__asm_mfcr()
  %v1_1000a114 = and i32 %v0_1000a110, 268435456
  %v3_1000a114 = icmp eq i32 %v1_1000a114, 0
  store i32 %v0_1000a110, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a114, label %dec_label_pc_1000a12c, label %dec_label_pc_1000a120

dec_label_pc_1000a120:                            ; preds = %dec_label_pc_1000a0f8
  %v0_1000a120 = call i32 @function_1000a4bc()
  %v0_1000a124 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a124 = inttoptr i32 %v0_1000a120 to i32*
  store i32 %v0_1000a124, i32* %v2_1000a124, align 4
  br label %dec_label_pc_1000a12c

dec_label_pc_1000a12c:                            ; preds = %dec_label_pc_1000a0f8, %dec_label_pc_1000a120
  %v0_1000a13c = phi i32 [ %v0_1000a110, %dec_label_pc_1000a0f8 ], [ -1, %dec_label_pc_1000a120 ]
  ret i32 %v0_1000a13c

; uselistorder directives
  uselistorder label %dec_label_pc_1000a12c, { 1, 0 }
}

define i32 @function_1000a140(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a140:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000a140 = icmp eq i32 %arg2, 0
  br i1 %v3_1000a140, label %dec_label_pc_1000a180, label %dec_label_pc_1000a168

dec_label_pc_1000a168:                            ; preds = %dec_label_pc_1000a140
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000a180, label %dec_label_pc_1000a170

dec_label_pc_1000a170:                            ; preds = %dec_label_pc_1000a168
  %v0_1000a170 = call i32 @function_1000a4bc()
  %v2_1000a178 = inttoptr i32 %v0_1000a170 to i32*
  store i32 22, i32* %v2_1000a178, align 4
  %v0_1000a1a4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a1a0

dec_label_pc_1000a180:                            ; preds = %dec_label_pc_1000a168, %dec_label_pc_1000a140
  %v0_1000a184 = call i32 @__asm_mfcr()
  %v1_1000a188 = and i32 %v0_1000a184, 268435456
  %v3_1000a188 = icmp eq i32 %v1_1000a188, 0
  store i32 %v0_1000a184, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a188, label %dec_label_pc_1000a1a0, label %dec_label_pc_1000a194

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a180
  %v0_1000a194 = call i32 @function_1000a4bc()
  %v0_1000a198 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a198 = inttoptr i32 %v0_1000a194 to i32*
  store i32 %v0_1000a198, i32* %v2_1000a198, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a1a0

dec_label_pc_1000a1a0:                            ; preds = %dec_label_pc_1000a180, %dec_label_pc_1000a170, %dec_label_pc_1000a194
  %v0_1000a1a4 = phi i32 [ %v0_1000a184, %dec_label_pc_1000a180 ], [ %v0_1000a1a4.pre, %dec_label_pc_1000a170 ], [ -1, %dec_label_pc_1000a194 ]
  ret i32 %v0_1000a1a4

; uselistorder directives
  uselistorder label %dec_label_pc_1000a1a0, { 2, 0, 1 }
}

define i32 @function_1000a1b8() local_unnamed_addr {
dec_label_pc_1000a1b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a1d0 = call i32 @__asm_mfcr()
  %v1_1000a1d4 = and i32 %v0_1000a1d0, 268435456
  %v3_1000a1d4 = icmp eq i32 %v1_1000a1d4, 0
  store i32 %v0_1000a1d0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a1d4, label %dec_label_pc_1000a1ec, label %dec_label_pc_1000a1e0

dec_label_pc_1000a1e0:                            ; preds = %dec_label_pc_1000a1b8
  %v0_1000a1e0 = call i32 @function_1000a4bc()
  %v0_1000a1e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a1e4 = inttoptr i32 %v0_1000a1e0 to i32*
  store i32 %v0_1000a1e4, i32* %v2_1000a1e4, align 4
  br label %dec_label_pc_1000a1ec

dec_label_pc_1000a1ec:                            ; preds = %dec_label_pc_1000a1b8, %dec_label_pc_1000a1e0
  %v0_1000a1fc = phi i32 [ %v0_1000a1d0, %dec_label_pc_1000a1b8 ], [ -1, %dec_label_pc_1000a1e0 ]
  ret i32 %v0_1000a1fc

; uselistorder directives
  uselistorder label %dec_label_pc_1000a1ec, { 1, 0 }
}

define i32 @function_1000a200(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a200:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a218 = call i32 @__asm_mfcr()
  %v1_1000a21c = and i32 %v0_1000a218, 268435456
  %v3_1000a21c = icmp eq i32 %v1_1000a21c, 0
  store i32 %v0_1000a218, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a21c, label %dec_label_pc_1000a234, label %dec_label_pc_1000a228

dec_label_pc_1000a228:                            ; preds = %dec_label_pc_1000a200
  %v0_1000a228 = call i32 @function_1000a4bc()
  %v0_1000a22c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a22c = inttoptr i32 %v0_1000a228 to i32*
  store i32 %v0_1000a22c, i32* %v2_1000a22c, align 4
  br label %dec_label_pc_1000a234

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a200, %dec_label_pc_1000a228
  %v0_1000a244 = phi i32 [ %v0_1000a218, %dec_label_pc_1000a200 ], [ -1, %dec_label_pc_1000a228 ]
  ret i32 %v0_1000a244

; uselistorder directives
  uselistorder label %dec_label_pc_1000a234, { 1, 0 }
}

define i32 @function_1000a248(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000a248:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a264 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1000a26c = load i32, i32* %arg1, align 4
  store i32 %v2_1000a264, i32* @r3, align 4
  %v3_1000a278 = icmp eq i32 %v2_1000a26c, -1
  br i1 %v3_1000a278, label %dec_label_pc_1000a280, label %dec_label_pc_1000a294

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a248
  %v0_1000a280 = call i32 @function_1000a4bc()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000a28c = inttoptr i32 %v0_1000a280 to i32*
  store i32 9, i32* %v2_1000a28c, align 4
  %v0_1000a2d8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a2d4

dec_label_pc_1000a294:                            ; preds = %dec_label_pc_1000a248
  %v3_1000a294 = call i32 @function_1000b690(i32 %v2_1000a264, i32 ptrtoint ([3 x i8]* @global_var_1000b688.453 to i32))
  %v0_1000a29c = call i32 @function_1000b688()
  %v0_1000a2a4 = load i32, i32* @r31, align 4
  %v1_1000a2a4 = inttoptr i32 %v0_1000a2a4 to i32*
  %v2_1000a2a4 = load i32, i32* %v1_1000a2a4, align 4
  store i32 %v2_1000a2a4, i32* @r29, align 4
  store i32 -1, i32* %v1_1000a2a4, align 4
  store i32 %v2_1000a264, i32* @r3, align 4
  %v2_1000a2b4 = call i32 @function_1000b690(i32 %v2_1000a264, i32 1)
  %v0_1000a2b8 = load i32, i32* @r31, align 4
  %v1_1000a2b8 = add i32 %v0_1000a2b8, 12
  %v2_1000a2b8 = inttoptr i32 %v1_1000a2b8 to i32*
  %v3_1000a2b8 = load i32, i32* %v2_1000a2b8, align 4
  store i32 %v3_1000a2b8, i32* @r3, align 4
  store i32 268477120, i32* @lr, align 4
  %v0_1000a2bc = call i32 @function_1000aebc()
  %v0_1000a2c0 = load i32, i32* @r31, align 4
  store i32 %v0_1000a2c0, i32* @r3, align 4
  store i32 268477128, i32* @lr, align 4
  %v0_1000a2c4 = call i32 @function_1000aebc()
  store i32 268477136, i32* @lr, align 4
  %v0_1000a2cc = call i32 @function_10009de8()
  store i32 %v0_1000a2cc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a2d4

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a280, %dec_label_pc_1000a294
  %v0_1000a2d8 = phi i32 [ %v0_1000a2d8.pre, %dec_label_pc_1000a280 ], [ %v0_1000a2cc, %dec_label_pc_1000a294 ]
  ret i32 %v0_1000a2d8

; uselistorder directives
  uselistorder i32 %v2_1000a264, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a2d4, { 1, 0 }
}

define i32 @function_1000a2ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a2ec:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_1000a2ec = load i32, i32* @lr, align 4
  store i32 %v0_1000a2ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268477196, i32* @lr, align 4
  %v2_1000a308 = call i32 @function_10009f50(i32 18432, i32 18432)
  %v1_1000a30c = icmp slt i32 %v2_1000a308, 0
  br i1 %v1_1000a30c, label %dec_label_pc_1000a3e4, label %dec_label_pc_1000a314

dec_label_pc_1000a314:                            ; preds = %dec_label_pc_1000a2ec
  %v2_1000a314 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a314, i32* @r4, align 4
  store i32 268477212, i32* @lr, align 4
  %v1_1000a318 = call i32 @function_1000ba64(i32 %v2_1000a314)
  %v1_1000a31c = icmp slt i32 %v1_1000a318, 0
  br i1 %v1_1000a31c, label %dec_label_pc_1000a340, label %dec_label_pc_1000a324

dec_label_pc_1000a324:                            ; preds = %dec_label_pc_1000a314
  %v0_1000a324 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268477240, i32* @lr, align 4
  %v2_1000a334 = call i32 @function_10009d00(i32 %v0_1000a324)
  %tmp5 = icmp sgt i32 %v2_1000a334, -1
  br i1 %tmp5, label %dec_label_pc_1000a360, label %dec_label_pc_1000a340

dec_label_pc_1000a340:                            ; preds = %dec_label_pc_1000a324, %dec_label_pc_1000a314
  %v0_1000a340 = call i32 @function_1000a4bc()
  store i32 0, i32* @r31, align 4
  store i32 %v0_1000a340, i32* @r28, align 4
  %v1_1000a350 = inttoptr i32 %v0_1000a340 to i32*
  %v2_1000a350 = load i32, i32* %v1_1000a350, align 4
  store i32 268477272, i32* @lr, align 4
  %v0_1000a354 = call i32 @function_10009de8()
  %v1_1000a358 = load i32, i32* @r28, align 4
  %v2_1000a358 = inttoptr i32 %v1_1000a358 to i32*
  store i32 %v2_1000a350, i32* %v2_1000a358, align 4
  br label %dec_label_pc_1000a3e4

dec_label_pc_1000a360:                            ; preds = %dec_label_pc_1000a324
  store i32 48, i32* @r3, align 4
  store i32 268477288, i32* @lr, align 4
  %v0_1000a364 = call i32 @function_1000acf4()
  store i32 %v0_1000a364, i32* %r31.global-to-local, align 4
  %v3_1000a368 = icmp eq i32 %v0_1000a364, 0
  br i1 %v3_1000a368, label %dec_label_pc_1000a3bc, label %dec_label_pc_1000a370

dec_label_pc_1000a370:                            ; preds = %dec_label_pc_1000a360
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000a374 = load i32, i32* @r29, align 4
  %v2_1000a374 = inttoptr i32 %v0_1000a364 to i32*
  store i32 %v0_1000a374, i32* %v2_1000a374, align 4
  %v0_1000a378 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a378 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a378 = add i32 %v1_1000a378, 4
  %v3_1000a378 = inttoptr i32 %v2_1000a378 to i32*
  store i32 %v0_1000a378, i32* %v3_1000a378, align 4
  %v0_1000a37c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a37c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a37c = add i32 %v1_1000a37c, 16
  %v3_1000a37c = inttoptr i32 %v2_1000a37c to i32*
  store i32 %v0_1000a37c, i32* %v3_1000a37c, align 4
  %v0_1000a380 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a380 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a380 = add i32 %v1_1000a380, 8
  %v3_1000a380 = inttoptr i32 %v2_1000a380 to i32*
  store i32 %v0_1000a380, i32* %v3_1000a380, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1000a388 = icmp ugt i32 %tmp, 511
  %v1_1000a38c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a38c = add i32 %v1_1000a38c, 20
  %v3_1000a38c = inttoptr i32 %v2_1000a38c to i32*
  store i32 %tmp, i32* %v3_1000a38c, align 4
  br i1 %v2_1000a388, label %dec_label_pc_1000a39c, label %dec_label_pc_1000a394

dec_label_pc_1000a394:                            ; preds = %dec_label_pc_1000a370
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_1000a398 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a398 = add i32 %v1_1000a398, 20
  %v3_1000a398 = inttoptr i32 %v2_1000a398 to i32*
  store i32 512, i32* %v3_1000a398, align 4
  br label %dec_label_pc_1000a39c

dec_label_pc_1000a39c:                            ; preds = %dec_label_pc_1000a370, %dec_label_pc_1000a394
  %v0_1000a39c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a39c = add i32 %v0_1000a39c, 20
  %v2_1000a39c = inttoptr i32 %v1_1000a39c to i32*
  %v3_1000a39c = load i32, i32* %v2_1000a39c, align 4
  store i32 268477352, i32* @lr, align 4
  %v2_1000a3a4 = call i32 @function_1000ae4c(i32 1, i32 %v3_1000a39c)
  %v3_1000a3a8 = icmp eq i32 %v2_1000a3a4, 0
  %v1_1000a3ac = load i32, i32* @r31, align 4
  %v2_1000a3ac = add i32 %v1_1000a3ac, 12
  %v3_1000a3ac = inttoptr i32 %v2_1000a3ac to i32*
  store i32 %v2_1000a3a4, i32* %v3_1000a3ac, align 4
  br i1 %v3_1000a3a8, label %dec_label_pc_1000a3b4, label %dec_label_pc_1000a3d8

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a39c
  %v0_1000a3b4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a3b4, i32* @r3, align 4
  store i32 268477372, i32* @lr, align 4
  %v0_1000a3b8 = call i32 @function_1000aebc()
  br label %dec_label_pc_1000a3bc

dec_label_pc_1000a3bc:                            ; preds = %dec_label_pc_1000a360, %dec_label_pc_1000a3b4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1000a3c8.456 to i32), i32* @lr, align 4
  %v0_1000a3c4 = call i32 @function_10009de8()
  %v0_1000a3c8 = call i32 @function_1000a4bc()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_1000a3d0 = inttoptr i32 %v0_1000a3c8 to i32*
  store i32 12, i32* %v2_1000a3d0, align 4
  br label %dec_label_pc_1000a3e4

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a39c
  %v0_1000a3e0 = call i32 @function_1000b688()
  br label %dec_label_pc_1000a3e4

dec_label_pc_1000a3e4:                            ; preds = %dec_label_pc_1000a2ec, %dec_label_pc_1000a3bc, %dec_label_pc_1000a340, %dec_label_pc_1000a3d8
  store i32 %v0_1000a2ec, i32* %r0.global-to-local, align 4
  %v0_1000a3e8 = load i32, i32* @r31, align 4
  ret i32 %v0_1000a3e8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000ae4c, { 1, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 3, 2, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 512, { 8, 11, 9, 0, 10, 1, 3, 4, 5, 6, 7, 2, 12, 13, 14 }
  uselistorder i32 ()* @function_10009de8, { 8, 7, 6, 35, 34, 33, 32, 36, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3e4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a3bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a39c, { 1, 0 }
}

define i32 @function_1000a3fc(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000a3fc:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a400 = load i32, i32* @lr, align 4
  store i32 %v0_1000a400, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a418 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a418, i32* @r3, align 4
  %v3_1000a424 = call i32 @function_1000b690(i32 %v2_1000a418, i32 ptrtoint ([3 x i8]* @global_var_1000b688.453 to i32))
  %v0_1000a42c = call i32 @function_1000b688()
  br label %dec_label_pc_1000a430

dec_label_pc_1000a430:                            ; preds = %dec_label_pc_1000a46c, %dec_label_pc_1000a3fc
  %v0_1000a430 = load i32, i32* @r31, align 4
  %v1_1000a430 = add i32 %v0_1000a430, 4
  %v2_1000a430 = inttoptr i32 %v1_1000a430 to i32*
  %v3_1000a430 = load i32, i32* %v2_1000a430, align 4
  store i32 %v3_1000a430, i32* %r0.global-to-local, align 4
  %v1_1000a434 = add i32 %v0_1000a430, 8
  %v2_1000a434 = inttoptr i32 %v1_1000a434 to i32*
  %v3_1000a434 = load i32, i32* %v2_1000a434, align 4
  store i32 %v3_1000a434, i32* %r9.global-to-local, align 4
  %v3_1000a438 = icmp ugt i32 %v3_1000a434, %v3_1000a430
  br i1 %v3_1000a438, label %dec_label_pc_1000a46c, label %dec_label_pc_1000a440

dec_label_pc_1000a440:                            ; preds = %dec_label_pc_1000a430
  %v1_1000a440 = inttoptr i32 %v0_1000a430 to i32*
  %v2_1000a440 = load i32, i32* %v1_1000a440, align 4
  store i32 %v2_1000a440, i32* @r3, align 4
  %v1_1000a444 = add i32 %v0_1000a430, 12
  %v2_1000a444 = inttoptr i32 %v1_1000a444 to i32*
  %v3_1000a444 = load i32, i32* %v2_1000a444, align 4
  %v1_1000a448 = add i32 %v0_1000a430, 20
  %v2_1000a448 = inttoptr i32 %v1_1000a448 to i32*
  %v3_1000a448 = load i32, i32* %v2_1000a448, align 4
  store i32 %v3_1000a448, i32* @r5, align 4
  store i32 268477520, i32* @lr, align 4
  %v4_1000a44c = inttoptr i32 %v2_1000a440 to i32*
  %v5_1000a44c = call i32 @function_1000bad8(i32* %v4_1000a44c, i32 %v3_1000a444, i32 %v3_1000a448, i32 %v3_1000a434)
  %v2_1000a450 = icmp sgt i32 %v5_1000a44c, 0
  br i1 %v2_1000a450, label %dec_label_pc_1000a460, label %dec_label_pc_1000a458

dec_label_pc_1000a458:                            ; preds = %dec_label_pc_1000a440
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000a498

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a440
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a464 = load i32, i32* @r31, align 4
  %v2_1000a464 = add i32 %v1_1000a464, 8
  %v3_1000a464 = inttoptr i32 %v2_1000a464 to i32*
  store i32 %v5_1000a44c, i32* %v3_1000a464, align 4
  %v0_1000a468 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a468 = load i32, i32* @r31, align 4
  %v2_1000a468 = add i32 %v1_1000a468, 4
  %v3_1000a468 = inttoptr i32 %v2_1000a468 to i32*
  store i32 %v0_1000a468, i32* %v3_1000a468, align 4
  %v0_1000a46c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a46c

dec_label_pc_1000a46c:                            ; preds = %dec_label_pc_1000a430, %dec_label_pc_1000a460
  %v1_1000a480 = phi i32 [ %v0_1000a430, %dec_label_pc_1000a430 ], [ %v0_1000a46c.pre, %dec_label_pc_1000a460 ]
  %v1_1000a46c = add i32 %v1_1000a480, 4
  %v2_1000a46c = inttoptr i32 %v1_1000a46c to i32*
  %v3_1000a46c = load i32, i32* %v2_1000a46c, align 4
  store i32 %v3_1000a46c, i32* %r9.global-to-local, align 4
  %v1_1000a470 = add i32 %v1_1000a480, 12
  %v2_1000a470 = inttoptr i32 %v1_1000a470 to i32*
  %v3_1000a470 = load i32, i32* %v2_1000a470, align 4
  store i32 %v3_1000a470, i32* %r11.global-to-local, align 4
  %v2_1000a474 = add i32 %v3_1000a470, %v3_1000a46c
  store i32 %v2_1000a474, i32* @r29, align 4
  %v1_1000a478 = add i32 %v2_1000a474, 8
  %v2_1000a478 = inttoptr i32 %v1_1000a478 to i16*
  %v3_1000a478 = load i16, i16* %v2_1000a478, align 2
  %v4_1000a478 = zext i16 %v3_1000a478 to i32
  %v2_1000a47c = add i32 %v4_1000a478, %v3_1000a46c
  store i32 %v2_1000a47c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a47c, i32* %v2_1000a46c, align 4
  %v0_1000a484 = load i32, i32* @r29, align 4
  %v1_1000a484 = add i32 %v0_1000a484, 4
  %v2_1000a484 = inttoptr i32 %v1_1000a484 to i32*
  %v3_1000a484 = load i32, i32* %v2_1000a484, align 4
  store i32 %v3_1000a484, i32* %r0.global-to-local, align 4
  %v1_1000a488 = load i32, i32* @r31, align 4
  %v2_1000a488 = add i32 %v1_1000a488, 16
  %v3_1000a488 = inttoptr i32 %v2_1000a488 to i32*
  store i32 %v3_1000a484, i32* %v3_1000a488, align 4
  %v0_1000a48c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a48c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a48c = add i32 %v1_1000a48c, %v0_1000a48c
  %v3_1000a48c = inttoptr i32 %v2_1000a48c to i32*
  %v4_1000a48c = load i32, i32* %v3_1000a48c, align 4
  store i32 %v4_1000a48c, i32* %r0.global-to-local, align 4
  %v3_1000a490 = icmp eq i32 %v4_1000a48c, 0
  br i1 %v3_1000a490, label %dec_label_pc_1000a430, label %dec_label_pc_1000a498

dec_label_pc_1000a498:                            ; preds = %dec_label_pc_1000a46c, %dec_label_pc_1000a458
  store i32 %v2_1000a418, i32* @r3, align 4
  %v2_1000a4a0 = call i32 @function_1000b690(i32 %v2_1000a418, i32 1)
  store i32 %v0_1000a400, i32* %r0.global-to-local, align 4
  %v0_1000a4a8 = load i32, i32* @r29, align 4
  ret i32 %v0_1000a4a8

; uselistorder directives
  uselistorder i32 %v1_1000a480, { 1, 0 }
  uselistorder i32 %v0_1000a430, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_1000a418, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a46c, { 1, 0 }
}

define i32 @function_1000a4bc() local_unnamed_addr {
dec_label_pc_1000a4bc:
  ret i32 ptrtoint (i32* @global_var_1001d28c.458 to i32)
}

define i32 @function_1000a4c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a4c8:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a4d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268477660, i32* @lr, align 4
  %v1_1000a4d8 = call i32 @function_1000bf18(i32 %v2_1000a4d0)
  %v3_1000a4e0 = load i32, i32* %stack_var_-24, align 4
  %v2_1000a4e4 = add i32 %v3_1000a4e0, %tmp
  %v1_1000a4ec = mul i32 %v2_1000a4e4, 10000
  %v1_1000a4f8 = and i32 %v1_1000a4ec, 2147483632
  ret i32 %v1_1000a4f8
}

define i32 @function_1000a500(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a500:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000a500 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_1000a500, label %dec_label_pc_1000a514, label %dec_label_pc_1000a510

dec_label_pc_1000a510:                            ; preds = %dec_label_pc_1000a500
  %v0_1000a510 = call i32 @function_1000c0dc()
  store i32 %v0_1000a510, i32* @r3, align 4
  br label %dec_label_pc_1000a514

dec_label_pc_1000a514:                            ; preds = %dec_label_pc_1000a500, %dec_label_pc_1000a510
  %v1_1000a514 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000a514, i32* %r9.global-to-local, align 4
  %v4_1000a514 = icmp eq i32 %v1_1000a514, 0
  %v2_1000a518 = add i32 %arg3, %arg2
  store i32 %v2_1000a518, i32* %r4.global-to-local, align 4
  %v0_1000a51c = load i32, i32* @r3, align 4
  %v2_1000a51c = add i32 %v0_1000a51c, %arg3
  store i32 %v2_1000a51c, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a514, label %dec_label_pc_1000a544, label %dec_label_pc_1000a524

dec_label_pc_1000a524:                            ; preds = %dec_label_pc_1000a514
  %v1_1000a524 = urem i32 %v2_1000a51c, 4
  %v3_1000a524 = icmp eq i32 %v1_1000a524, 0
  br i1 %v3_1000a524, label %dec_label_pc_1000a52c, label %dec_label_pc_1000a578

dec_label_pc_1000a52c:                            ; preds = %dec_label_pc_1000a590.dec_label_pc_1000a52c_crit_edge, %dec_label_pc_1000a524
  %v1_1000a538.pre = phi i32 [ %v1_1000a538.pre.pre, %dec_label_pc_1000a590.dec_label_pc_1000a52c_crit_edge ], [ %v2_1000a51c, %dec_label_pc_1000a524 ]
  %v0_1000a52c = phi i32 [ %v1_1000a590, %dec_label_pc_1000a590.dec_label_pc_1000a52c_crit_edge ], [ %v1_1000a514, %dec_label_pc_1000a524 ]
  store i32 %v0_1000a52c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a530

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a530, %dec_label_pc_1000a52c
  %v1_1000a538 = phi i32 [ %v2_1000a53c, %dec_label_pc_1000a530 ], [ %v1_1000a538.pre, %dec_label_pc_1000a52c ]
  %v0_1000a530 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a530 = add i32 %v0_1000a530, -4
  %v2_1000a530 = inttoptr i32 %v1_1000a530 to i32*
  %v3_1000a530 = load i32, i32* %v2_1000a530, align 4
  %v1_1000a534 = add i32 %v0_1000a530, -8
  %v2_1000a534 = inttoptr i32 %v1_1000a534 to i32*
  %v3_1000a534 = load i32, i32* %v2_1000a534, align 4
  store i32 %v3_1000a534, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a534, i32* %r4.global-to-local, align 4
  %v2_1000a538 = add i32 %v1_1000a538, -4
  %v3_1000a538 = inttoptr i32 %v2_1000a538 to i32*
  store i32 %v3_1000a530, i32* %v3_1000a538, align 4
  %v0_1000a53c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a53c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a53c = add i32 %v1_1000a53c, -8
  %v3_1000a53c = inttoptr i32 %v2_1000a53c to i32*
  store i32 %v0_1000a53c, i32* %v3_1000a53c, align 4
  store i32 %v2_1000a53c, i32* %r10.global-to-local, align 4
  %v0_1000a540 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a540 = add i32 %v0_1000a540, -1
  store i32 %v1_1000a540, i32* %ctr.global-to-local, align 4
  %v2_1000a540 = icmp eq i32 %v1_1000a540, 0
  br i1 %v2_1000a540, label %dec_label_pc_1000a544, label %dec_label_pc_1000a530

dec_label_pc_1000a544:                            ; preds = %dec_label_pc_1000a530, %dec_label_pc_1000a590, %dec_label_pc_1000a514
  %v0_1000a544 = load i32, i32* @r11, align 4
  %v1_1000a544 = urem i32 %v0_1000a544, 8
  store i32 %v1_1000a544, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000a544, 4
  br i1 %tmp, label %dec_label_pc_1000a55c, label %dec_label_pc_1000a550

dec_label_pc_1000a550:                            ; preds = %dec_label_pc_1000a544
  %v0_1000a550 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a550 = add i32 %v0_1000a550, -4
  %v2_1000a550 = inttoptr i32 %v1_1000a550 to i32*
  %v3_1000a550 = load i32, i32* %v2_1000a550, align 4
  store i32 %v1_1000a550, i32* %r4.global-to-local, align 4
  %v1_1000a554 = add nsw i32 %v1_1000a544, -4
  store i32 %v1_1000a554, i32* %r5.global-to-local, align 4
  %v1_1000a558 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a558 = add i32 %v1_1000a558, -4
  %v3_1000a558 = inttoptr i32 %v2_1000a558 to i32*
  store i32 %v3_1000a550, i32* %v3_1000a558, align 4
  store i32 %v2_1000a558, i32* %r10.global-to-local, align 4
  %v0_1000a55c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a55c

dec_label_pc_1000a55c:                            ; preds = %dec_label_pc_1000a544, %dec_label_pc_1000a550
  %v0_1000a564 = phi i32 [ %v1_1000a544, %dec_label_pc_1000a544 ], [ %v0_1000a55c.pre, %dec_label_pc_1000a550 ]
  %v3_1000a55c = icmp eq i32 %v0_1000a564, 0
  br i1 %v3_1000a55c, label %dec_label_pc_1000a59c, label %dec_label_pc_1000a564

dec_label_pc_1000a564:                            ; preds = %dec_label_pc_1000a55c
  store i32 %v0_1000a564, i32* %ctr.global-to-local, align 4
  %v2_1000a56c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a568

dec_label_pc_1000a568:                            ; preds = %dec_label_pc_1000a568, %dec_label_pc_1000a564
  %v2_1000a56c = phi i32 [ %v3_1000a56c, %dec_label_pc_1000a568 ], [ %v2_1000a56c.pre, %dec_label_pc_1000a564 ]
  %v0_1000a568 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a568 = add i32 %v0_1000a568, -1
  %v2_1000a568 = inttoptr i32 %v1_1000a568 to i8*
  %v3_1000a568 = load i8, i8* %v2_1000a568, align 1
  store i32 %v1_1000a568, i32* %r4.global-to-local, align 4
  %v3_1000a56c = add i32 %v2_1000a56c, -1
  %v4_1000a56c = inttoptr i32 %v3_1000a56c to i8*
  store i8 %v3_1000a568, i8* %v4_1000a56c, align 1
  store i32 %v3_1000a56c, i32* %r10.global-to-local, align 4
  %v0_1000a570 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a570 = add i32 %v0_1000a570, -1
  store i32 %v1_1000a570, i32* %ctr.global-to-local, align 4
  %v2_1000a570 = icmp eq i32 %v1_1000a570, 0
  br i1 %v2_1000a570, label %dec_label_pc_1000a59c, label %dec_label_pc_1000a568

dec_label_pc_1000a578:                            ; preds = %dec_label_pc_1000a524
  %v1_1000a578 = sub nsw i32 4, %v1_1000a524
  store i32 %v1_1000a578, i32* %ctr.global-to-local, align 4
  %v2_1000a580 = sub i32 %arg3, %v1_1000a578
  store i32 %v2_1000a580, i32* @r11, align 4
  %v1_1000a5848 = add i32 %v2_1000a518, -1
  %v2_1000a5849 = inttoptr i32 %v1_1000a5848 to i8*
  %v3_1000a58410 = load i8, i8* %v2_1000a5849, align 1
  store i32 %v1_1000a5848, i32* %r4.global-to-local, align 4
  %v3_1000a58812 = add i32 %v2_1000a51c, -1
  %v4_1000a58813 = inttoptr i32 %v3_1000a58812 to i8*
  store i8 %v3_1000a58410, i8* %v4_1000a58813, align 1
  store i32 %v3_1000a58812, i32* %r10.global-to-local, align 4
  %v0_1000a58c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a58c15 = add i32 %v0_1000a58c14, -1
  store i32 %v1_1000a58c15, i32* %ctr.global-to-local, align 4
  %v2_1000a58c16 = icmp eq i32 %v1_1000a58c15, 0
  br i1 %v2_1000a58c16, label %dec_label_pc_1000a590, label %dec_label_pc_1000a584.dec_label_pc_1000a584_crit_edge

dec_label_pc_1000a584.dec_label_pc_1000a584_crit_edge: ; preds = %dec_label_pc_1000a578, %dec_label_pc_1000a584.dec_label_pc_1000a584_crit_edge
  %v3_1000a58817 = phi i32 [ %v3_1000a588, %dec_label_pc_1000a584.dec_label_pc_1000a584_crit_edge ], [ %v3_1000a58812, %dec_label_pc_1000a578 ]
  %v0_1000a584.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a584 = add i32 %v0_1000a584.pre, -1
  %v2_1000a584 = inttoptr i32 %v1_1000a584 to i8*
  %v3_1000a584 = load i8, i8* %v2_1000a584, align 1
  store i32 %v1_1000a584, i32* %r4.global-to-local, align 4
  %v3_1000a588 = add i32 %v3_1000a58817, -1
  %v4_1000a588 = inttoptr i32 %v3_1000a588 to i8*
  store i8 %v3_1000a584, i8* %v4_1000a588, align 1
  store i32 %v3_1000a588, i32* %r10.global-to-local, align 4
  %v0_1000a58c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a58c = add i32 %v0_1000a58c, -1
  store i32 %v1_1000a58c, i32* %ctr.global-to-local, align 4
  %v2_1000a58c = icmp eq i32 %v1_1000a58c, 0
  br i1 %v2_1000a58c, label %dec_label_pc_1000a590, label %dec_label_pc_1000a584.dec_label_pc_1000a584_crit_edge

dec_label_pc_1000a590:                            ; preds = %dec_label_pc_1000a584.dec_label_pc_1000a584_crit_edge, %dec_label_pc_1000a578
  %v0_1000a590 = load i32, i32* @r11, align 4
  %v1_1000a590 = call i32 @__asm_rlwinm.(i32 %v0_1000a590, i32 29, i32 3, i32 31)
  store i32 %v1_1000a590, i32* %r9.global-to-local, align 4
  %v4_1000a590 = icmp eq i32 %v1_1000a590, 0
  br i1 %v4_1000a590, label %dec_label_pc_1000a544, label %dec_label_pc_1000a590.dec_label_pc_1000a52c_crit_edge

dec_label_pc_1000a590.dec_label_pc_1000a52c_crit_edge: ; preds = %dec_label_pc_1000a590
  %v1_1000a538.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a52c

dec_label_pc_1000a59c:                            ; preds = %dec_label_pc_1000a568, %dec_label_pc_1000a55c
  %v0_1000a59c = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000a59c

; uselistorder directives
  uselistorder i32 %v1_1000a590, { 1, 2, 0 }
  uselistorder i32 %v1_1000a58c, { 1, 0 }
  uselistorder i32 %v3_1000a588, { 1, 2, 0 }
  uselistorder i32 %v1_1000a570, { 1, 0 }
  uselistorder i32 %v3_1000a56c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a544, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a540, { 1, 0 }
  uselistorder i32 %v2_1000a53c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a524, { 1, 0 }
  uselistorder i32 %v2_1000a51c, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg3, { 4, 0, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_1000a584.dec_label_pc_1000a584_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a55c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a544, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a514, { 1, 0 }
}

define i32 @function_1000a5a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a5a4:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000a5a4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000a5a4, i32* %r9.global-to-local, align 4
  %v4_1000a5a4 = icmp eq i32 %v1_1000a5a4, 0
  %v1_1000a5ac = add i32 %arg1, -4
  store i32 %v1_1000a5ac, i32* %r11.global-to-local, align 4
  %v1_1000a5b0 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000a5b4 = call i32 @__asm_rlwimi(i32 %v1_1000a5b0, i32 16, i32 0, i32 15)
  %v2_1000a5b4 = trunc i32 %v1_1000a5b4 to i8
  br i1 %v4_1000a5a4, label %dec_label_pc_1000a5dc, label %dec_label_pc_1000a5bc

dec_label_pc_1000a5bc:                            ; preds = %dec_label_pc_1000a5a4
  %v0_1000a5bc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a5bc = urem i32 %v0_1000a5bc, 4
  %v3_1000a5bc = icmp eq i32 %v1_1000a5bc, 0
  br i1 %v3_1000a5bc, label %dec_label_pc_1000a5bc.dec_label_pc_1000a5c4_crit_edge, label %dec_label_pc_1000a60c

dec_label_pc_1000a5bc.dec_label_pc_1000a5c4_crit_edge: ; preds = %dec_label_pc_1000a5bc
  %v0_1000a5c4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a5c4

dec_label_pc_1000a5c4:                            ; preds = %dec_label_pc_1000a624.dec_label_pc_1000a5c4_crit_edge, %dec_label_pc_1000a5bc.dec_label_pc_1000a5c4_crit_edge
  %v0_1000a5c8.pre = phi i32 [ %v0_1000a5bc, %dec_label_pc_1000a5bc.dec_label_pc_1000a5c4_crit_edge ], [ %v0_1000a5c8.pre.pre, %dec_label_pc_1000a624.dec_label_pc_1000a5c4_crit_edge ]
  %v0_1000a5c4 = phi i32 [ %v0_1000a5c4.pre, %dec_label_pc_1000a5bc.dec_label_pc_1000a5c4_crit_edge ], [ %v1_1000a624, %dec_label_pc_1000a624.dec_label_pc_1000a5c4_crit_edge ]
  store i32 %v0_1000a5c4, i32* %ctr.global-to-local, align 4
  %v1_1000a5cc = sext i8 %v2_1000a5b4 to i32
  br label %dec_label_pc_1000a5c8

dec_label_pc_1000a5c8:                            ; preds = %dec_label_pc_1000a5c8, %dec_label_pc_1000a5c4
  %v0_1000a5c8 = phi i32 [ %v1_1000a5d4, %dec_label_pc_1000a5c8 ], [ %v0_1000a5c8.pre, %dec_label_pc_1000a5c4 ]
  %v1_1000a5c8 = add i32 %v0_1000a5c8, 4
  store i32 %v1_1000a5c8, i32* %r9.global-to-local, align 4
  %v4_1000a5cc = inttoptr i32 %v1_1000a5c8 to i32*
  store i32 %v1_1000a5cc, i32* %v4_1000a5cc, align 4
  %v2_1000a5d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a5d0 = add i32 %v2_1000a5d0, 4
  %v4_1000a5d0 = inttoptr i32 %v3_1000a5d0 to i32*
  store i32 %v1_1000a5cc, i32* %v4_1000a5d0, align 4
  %v0_1000a5d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a5d4 = add i32 %v0_1000a5d4, 4
  store i32 %v1_1000a5d4, i32* %r11.global-to-local, align 4
  %v0_1000a5d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a5d8 = add i32 %v0_1000a5d8, -1
  store i32 %v1_1000a5d8, i32* %ctr.global-to-local, align 4
  %v2_1000a5d8 = icmp eq i32 %v1_1000a5d8, 0
  br i1 %v2_1000a5d8, label %dec_label_pc_1000a5dc, label %dec_label_pc_1000a5c8

dec_label_pc_1000a5dc:                            ; preds = %dec_label_pc_1000a5c8, %dec_label_pc_1000a624, %dec_label_pc_1000a5a4
  %v0_1000a5dc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a5dc = urem i32 %v0_1000a5dc, 8
  store i32 %v1_1000a5dc, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000a5dc, 4
  br i1 %tmp, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a5e8

dec_label_pc_1000a5e8:                            ; preds = %dec_label_pc_1000a5dc
  %v1_1000a5e8 = sext i8 %v2_1000a5b4 to i32
  %v2_1000a5e8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000a5e8 = add i32 %v2_1000a5e8, 4
  %v4_1000a5e8 = inttoptr i32 %v3_1000a5e8 to i32*
  store i32 %v1_1000a5e8, i32* %v4_1000a5e8, align 4
  store i32 %v3_1000a5e8, i32* %r11.global-to-local, align 4
  %v0_1000a5ec = load i32, i32* @r5, align 4
  %v1_1000a5ec = add i32 %v0_1000a5ec, -4
  store i32 %v1_1000a5ec, i32* @r5, align 4
  br label %dec_label_pc_1000a5f0

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a5dc, %dec_label_pc_1000a5e8
  %v0_1000a5f0 = phi i32 [ %v1_1000a5dc, %dec_label_pc_1000a5dc ], [ %v1_1000a5ec, %dec_label_pc_1000a5e8 ]
  %v3_1000a5f0 = icmp eq i32 %v0_1000a5f0, 0
  %v0_1000a5f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a5f0, i32 %v0_1000a5f4)
  %v0_1000a5f8 = load i32, i32* @r5, align 4
  store i32 %v0_1000a5f8, i32* %ctr.global-to-local, align 4
  %v0_1000a5fc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a5fc = add i32 %v0_1000a5fc, 3
  store i32 %v1_1000a5fc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a600

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a600, %dec_label_pc_1000a5f0
  %v3_1000a600 = phi i32 [ %v4_1000a600, %dec_label_pc_1000a600 ], [ %v1_1000a5fc, %dec_label_pc_1000a5f0 ]
  %v4_1000a600 = add i32 %v3_1000a600, 1
  %v5_1000a600 = inttoptr i32 %v4_1000a600 to i8*
  store i8 %v2_1000a5b4, i8* %v5_1000a600, align 1
  store i32 %v4_1000a600, i32* %r9.global-to-local, align 4
  %v0_1000a604 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a604 = add i32 %v0_1000a604, -1
  store i32 %v1_1000a604, i32* %ctr.global-to-local, align 4
  %v2_1000a604 = icmp eq i32 %v1_1000a604, 0
  br i1 %v2_1000a604, label %dec_label_pc_1000a630, label %dec_label_pc_1000a600

dec_label_pc_1000a60c:                            ; preds = %dec_label_pc_1000a5bc
  %v1_1000a60c = sub nsw i32 4, %v1_1000a5bc
  store i32 %v1_1000a60c, i32* %ctr.global-to-local, align 4
  %v1_1000a614 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000a614 = sub i32 %v1_1000a614, %v1_1000a60c
  store i32 %v2_1000a614, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a618

dec_label_pc_1000a618:                            ; preds = %dec_label_pc_1000a618, %dec_label_pc_1000a60c
  %v3_1000a618 = phi i32 [ %v1_1000a61c, %dec_label_pc_1000a618 ], [ %v0_1000a5bc, %dec_label_pc_1000a60c ]
  %v4_1000a618 = add i32 %v3_1000a618, 4
  %v5_1000a618 = inttoptr i32 %v4_1000a618 to i8*
  store i8 %v2_1000a5b4, i8* %v5_1000a618, align 1
  %v0_1000a61c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a61c = add i32 %v0_1000a61c, 1
  store i32 %v1_1000a61c, i32* %r11.global-to-local, align 4
  %v0_1000a620 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a620 = add i32 %v0_1000a620, -1
  store i32 %v1_1000a620, i32* %ctr.global-to-local, align 4
  %v2_1000a620 = icmp eq i32 %v1_1000a620, 0
  br i1 %v2_1000a620, label %dec_label_pc_1000a624, label %dec_label_pc_1000a618

dec_label_pc_1000a624:                            ; preds = %dec_label_pc_1000a618
  %v0_1000a624 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a624 = call i32 @__asm_rlwinm.(i32 %v0_1000a624, i32 29, i32 3, i32 31)
  store i32 %v1_1000a624, i32* %r9.global-to-local, align 4
  %v4_1000a624 = icmp eq i32 %v1_1000a624, 0
  br i1 %v4_1000a624, label %dec_label_pc_1000a5dc, label %dec_label_pc_1000a624.dec_label_pc_1000a5c4_crit_edge

dec_label_pc_1000a624.dec_label_pc_1000a5c4_crit_edge: ; preds = %dec_label_pc_1000a624
  %v0_1000a5c8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a5c4

dec_label_pc_1000a630:                            ; preds = %dec_label_pc_1000a600
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000a624, { 1, 2, 0 }
  uselistorder i32 %v1_1000a620, { 1, 0 }
  uselistorder i32 %v1_1000a61c, { 1, 0 }
  uselistorder i32 %v1_1000a604, { 1, 0 }
  uselistorder i32 %v4_1000a600, { 1, 2, 0 }
  uselistorder i32 %v1_1000a5dc, { 2, 1, 0 }
  uselistorder i32 %v1_1000a5d8, { 1, 0 }
  uselistorder i32 %v1_1000a5d4, { 1, 0 }
  uselistorder i32 %v1_1000a5bc, { 1, 0 }
  uselistorder i32 %v0_1000a5bc, { 2, 1, 0 }
  uselistorder i8 %v2_1000a5b4, { 0, 3, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 48, 49, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5dc, { 1, 0, 2 }
}

define i32 @function_1000a634(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_1000a634:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000a634 = add i32 %arg1, -1
  %v1_1000a638 = sub i32 %v2_1000a634, %tmp
  store i32 %v1_1000a638, i32* %r9.global-to-local, align 4
  %v2_1000a63c4 = load i8, i8* %arg2, align 1
  %v1_1000a6406 = add i32 %tmp, 1
  store i32 %v1_1000a6406, i32* %r4.global-to-local, align 4
  %v3_1000a6448 = icmp eq i8 %v2_1000a63c4, 0
  store i1 %v3_1000a6448, i1* %cr7_eq.global-to-local, align 1
  %v5_1000a6489 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000a63c4, i8* %v5_1000a6489, align 1
  %v0_1000a64c10 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a64c10, label %dec_label_pc_1000a650, label %dec_label_pc_1000a63c.dec_label_pc_1000a63c_crit_edge

dec_label_pc_1000a63c.dec_label_pc_1000a63c_crit_edge: ; preds = %dec_label_pc_1000a634, %dec_label_pc_1000a63c.dec_label_pc_1000a63c_crit_edge
  %v0_1000a63c.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000a648.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a63c = inttoptr i32 %v0_1000a63c.pre to i8*
  %v2_1000a63c = load i8, i8* %v1_1000a63c, align 1
  %v1_1000a640 = add i32 %v0_1000a63c.pre, 1
  store i32 %v1_1000a640, i32* %r4.global-to-local, align 4
  %v3_1000a644 = icmp eq i8 %v2_1000a63c, 0
  store i1 %v3_1000a644, i1* %cr7_eq.global-to-local, align 1
  %v4_1000a648 = add i32 %v1_1000a640, %v2_1000a648.pre
  %v5_1000a648 = inttoptr i32 %v4_1000a648 to i8*
  store i8 %v2_1000a63c, i8* %v5_1000a648, align 1
  %v0_1000a64c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a64c, label %dec_label_pc_1000a650, label %dec_label_pc_1000a63c.dec_label_pc_1000a63c_crit_edge

dec_label_pc_1000a650:                            ; preds = %dec_label_pc_1000a63c.dec_label_pc_1000a63c_crit_edge, %dec_label_pc_1000a634
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a63c.dec_label_pc_1000a63c_crit_edge, { 1, 0 }
}

define i32 @function_1000a654(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a654:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_1()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a658 = load i32, i32* @lr, align 4
  store i32 %v0_1000a658, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a668 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268478076, i32* @lr, align 4
  %v3_1000a678 = call i32 @function_10009c18(i32 1076655123, i32 %v2_1000a668, i32 %v2_1000a668)
  %v2_1000a67c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a67c, i32* @r4, align 4
  store i32 %v3_1000a678, i32* @r30, align 4
  %v3_1000a680 = icmp eq i32 %v3_1000a678, 0
  %v0_1000a688 = load i32, i32* @r31, align 4
  br i1 %v3_1000a680, label %dec_label_pc_1000a690, label %dec_label_pc_1000a6d8

dec_label_pc_1000a690:                            ; preds = %dec_label_pc_1000a654
  %v1_1000a688 = add i32 %v0_1000a688, 17
  %v3_1000a6a8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000a6a8, i32* %r0.global-to-local, align 4
  %v2_1000a6ac = add i32 %v0_1000a688, 4
  %v3_1000a6ac = inttoptr i32 %v2_1000a6ac to i32*
  store i32 %tmp7, i32* %v3_1000a6ac, align 4
  %v0_1000a6b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a6b0 = load i32, i32* @r31, align 4
  %v2_1000a6b0 = inttoptr i32 %v1_1000a6b0 to i32*
  store i32 %v0_1000a6b0, i32* %v2_1000a6b0, align 4
  %v0_1000a6b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a6b4 = load i32, i32* @r31, align 4
  %v2_1000a6b4 = add i32 %v1_1000a6b4, 8
  %v3_1000a6b4 = inttoptr i32 %v2_1000a6b4 to i32*
  store i32 %v0_1000a6b4, i32* %v3_1000a6b4, align 4
  %v0_1000a6b8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a6b8 = load i32, i32* @r31, align 4
  %v2_1000a6b8 = add i32 %v1_1000a6b8, 12
  %v3_1000a6b8 = inttoptr i32 %v2_1000a6b8 to i32*
  store i32 %v0_1000a6b8, i32* %v3_1000a6b8, align 4
  %v3_1000a6bc = load i32, i32* @r31, align 4
  %v4_1000a6bc = add i32 %v3_1000a6bc, 16
  %v5_1000a6bc = inttoptr i32 %v4_1000a6bc to i8*
  store i8 %tmp4, i8* %v5_1000a6bc, align 1
  %v1_1000a6c0 = load i32, i32* @r31, align 4
  %v2_1000a6c0 = add i32 %v1_1000a6c0, 52
  %v3_1000a6c0 = inttoptr i32 %v2_1000a6c0 to i32*
  store i32 %tmp3, i32* %v3_1000a6c0, align 4
  %v1_1000a6c4 = load i32, i32* @r31, align 4
  %v2_1000a6c4 = add i32 %v1_1000a6c4, 56
  %v3_1000a6c4 = inttoptr i32 %v2_1000a6c4 to i32*
  store i32 %tmp2, i32* %v3_1000a6c4, align 4
  store i32 268478156, i32* @lr, align 4
  %v6_1000a6c8 = sext i8 %tmp4 to i32
  %v8_1000a6c8 = call i32 @function_1000c178(i32 %v1_1000a688, i32 %v2_1000a67c, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000a6c8, i32 %tmp7)
  store i32 268478168, i32* @lr, align 4
  %v3_1000a6d4 = call i32 @function_1000a5a4(i32 %v8_1000a6c8, i32 0, i32 13)
  %v0_1000a6dc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a6d8

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a654, %dec_label_pc_1000a690
  %v0_1000a6dc = phi i32 [ %v3_1000a678, %dec_label_pc_1000a654 ], [ %v0_1000a6dc.pre, %dec_label_pc_1000a690 ]
  store i32 %v0_1000a658, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a6dc

; uselistorder directives
  uselistorder i32 %v2_1000a668, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 5, 6, 7, 1, 8, 0, 9, 10, 2, 11, 12, 3, 13, 14, 4 }
  uselistorder label %dec_label_pc_1000a6d8, { 1, 0 }
}

define i32 @function_1000a6f0() local_unnamed_addr {
dec_label_pc_1000a6f0:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a6f0 = load i32, i32* @r4, align 4
  %v3_1000a6f0 = icmp eq i32 %v0_1000a6f0, 1
  %v0_1000a700 = load i32, i32* @r3, align 4
  store i32 %v0_1000a700, i32* %r27.global-to-local, align 4
  %v0_1000a708 = load i32, i32* @r5, align 4
  store i32 %v0_1000a708, i32* @r31, align 4
  br i1 %v3_1000a6f0, label %dec_label_pc_1000a72c, label %dec_label_pc_1000a710

dec_label_pc_1000a710:                            ; preds = %dec_label_pc_1000a6f0
  %v3_1000a710 = icmp eq i32 %v0_1000a6f0, 2
  br i1 %v3_1000a710, label %dec_label_pc_1000a74c, label %dec_label_pc_1000a718

dec_label_pc_1000a718:                            ; preds = %dec_label_pc_1000a710
  %v3_1000a718 = icmp eq i32 %v0_1000a6f0, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000a718, label %dec_label_pc_1000a754, label %dec_label_pc_1000a738

dec_label_pc_1000a72c:                            ; preds = %dec_label_pc_1000a6f0
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000a754

dec_label_pc_1000a738:                            ; preds = %dec_label_pc_1000a718
  %v0_1000a738 = call i32 @function_1000a4bc()
  store i32 -1, i32* @r28, align 4
  %v2_1000a744 = inttoptr i32 %v0_1000a738 to i32*
  store i32 22, i32* %v2_1000a744, align 4
  br label %dec_label_pc_1000a83c

dec_label_pc_1000a74c:                            ; preds = %dec_label_pc_1000a710
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000a754

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a718, %dec_label_pc_1000a72c, %dec_label_pc_1000a74c
  %v1_1000a754 = inttoptr i32 %v0_1000a708 to i32*
  %v2_1000a754 = load i32, i32* %v1_1000a754, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000a75c = add i32 %v0_1000a708, 4
  %v2_1000a75c = inttoptr i32 %v1_1000a75c to i32*
  %v3_1000a75c = load i32, i32* %v2_1000a75c, align 4
  store i32 %v3_1000a75c, i32* %r9.global-to-local, align 4
  %v1_1000a760 = add i32 %v0_1000a708, 17
  store i32 %v1_1000a760, i32* @r4, align 4
  %v1_1000a764 = add i32 %v0_1000a708, 8
  %v2_1000a764 = inttoptr i32 %v1_1000a764 to i32*
  %v3_1000a764 = load i32, i32* %v2_1000a764, align 4
  %v2_1000a768 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000a768, i32* @r3, align 4
  %v2_1000a770 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000a754, i32* %stack_var_-72, align 4
  store i32 268478368, i32* @lr, align 4
  %v0_1000a79c = call i32 @function_1000c0dc()
  %v0_1000a7a0 = load i32, i32* %r27.global-to-local, align 4
  %v0_1000a7a4 = load i32, i32* @r30, align 4
  store i32 268478388, i32* @lr, align 4
  %v3_1000a7b0 = call i32 @function_10009c18(i32 %v0_1000a7a0, i32 %v0_1000a7a4, i32 %v2_1000a770)
  store i32 %v3_1000a7b0, i32* @r28, align 4
  %v3_1000a7b4 = icmp eq i32 %v3_1000a7b0, 0
  br i1 %v3_1000a7b4, label %dec_label_pc_1000a7bc, label %dec_label_pc_1000a83c

dec_label_pc_1000a7bc:                            ; preds = %dec_label_pc_1000a754
  %v0_1000a7bc = load i32, i32* @r30, align 4
  %v3_1000a7c0 = icmp eq i32 %v0_1000a7bc, -2144570348
  br i1 %v3_1000a7c0, label %dec_label_pc_1000a7c8, label %dec_label_pc_1000a838

dec_label_pc_1000a7c8:                            ; preds = %dec_label_pc_1000a7bc
  %v0_1000a7c8 = call i32 @function_1000a4bc()
  store i32 %v0_1000a7c8, i32* @r29, align 4
  %v0_1000a7d8 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a7e0 = inttoptr i32 %v0_1000a7c8 to i32*
  %v2_1000a7e0 = load i32, i32* %v1_1000a7e0, align 4
  store i32 %v2_1000a7e0, i32* @r30, align 4
  store i32 268478444, i32* @lr, align 4
  %v3_1000a7e8 = call i32 @function_10009c18(i32 %v0_1000a7d8, i32 1076655123, i32 %v2_1000a770)
  %v3_1000a7ec = icmp eq i32 %v3_1000a7e8, 0
  br i1 %v3_1000a7ec, label %dec_label_pc_1000a7fc, label %dec_label_pc_1000a7f4

dec_label_pc_1000a7f4:                            ; preds = %dec_label_pc_1000a7c8
  %v0_1000a7f4 = load i32, i32* @r30, align 4
  %v1_1000a7f4 = load i32, i32* @r29, align 4
  %v2_1000a7f4 = inttoptr i32 %v1_1000a7f4 to i32*
  store i32 %v0_1000a7f4, i32* %v2_1000a7f4, align 4
  br label %dec_label_pc_1000a83c

dec_label_pc_1000a7fc:                            ; preds = %dec_label_pc_1000a7c8
  %v0_1000a7fc = load i32, i32* @r31, align 4
  %v1_1000a7fc = add i32 %v0_1000a7fc, 8
  %v2_1000a7fc = inttoptr i32 %v1_1000a7fc to i32*
  %v3_1000a7fc = load i32, i32* %v2_1000a7fc, align 4
  %v1_1000a804 = call i32 @__asm_rlwinm(i32 %v3_1000a7fc, i32 0, i32 19, i32 20)
  %v1_1000a808 = call i32 @__asm_rlwinm(i32 %v3_1000a764, i32 0, i32 19, i32 20)
  store i32 %v1_1000a808, i32* %r9.global-to-local, align 4
  %v4_1000a80c = icmp eq i32 %v1_1000a804, %v1_1000a808
  br i1 %v4_1000a80c, label %dec_label_pc_1000a814, label %dec_label_pc_1000a828

dec_label_pc_1000a814:                            ; preds = %dec_label_pc_1000a7fc
  %v1_1000a814 = and i32 %v3_1000a7fc, 768
  store i32 %v1_1000a814, i32* %r9.global-to-local, align 4
  %v3_1000a814 = icmp eq i32 %v1_1000a814, 0
  br i1 %v3_1000a814, label %dec_label_pc_1000a838, label %dec_label_pc_1000a81c

dec_label_pc_1000a81c:                            ; preds = %dec_label_pc_1000a814
  %v1_1000a81c = call i32 @__asm_rlwinm(i32 %v3_1000a764, i32 0, i32 22, i32 23)
  %v0_1000a820 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000a820 = icmp eq i32 %v0_1000a820, %v1_1000a81c
  br i1 %v4_1000a820, label %dec_label_pc_1000a838, label %dec_label_pc_1000a828

dec_label_pc_1000a828:                            ; preds = %dec_label_pc_1000a7fc, %dec_label_pc_1000a81c
  store i32 -1, i32* @r28, align 4
  %v1_1000a830 = load i32, i32* @r29, align 4
  %v2_1000a830 = inttoptr i32 %v1_1000a830 to i32*
  store i32 22, i32* %v2_1000a830, align 4
  br label %dec_label_pc_1000a83c

dec_label_pc_1000a838:                            ; preds = %dec_label_pc_1000a7bc, %dec_label_pc_1000a81c, %dec_label_pc_1000a814
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a83c

dec_label_pc_1000a83c:                            ; preds = %dec_label_pc_1000a754, %dec_label_pc_1000a828, %dec_label_pc_1000a7f4, %dec_label_pc_1000a738, %dec_label_pc_1000a838
  %v0_1000a840 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a840

; uselistorder directives
  uselistorder i32 %v0_1000a708, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009c18, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a83c, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000a838, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a828, { 1, 0 }
  uselistorder label %dec_label_pc_1000a754, { 2, 1, 0 }
}

define i32 @function_1000a854(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a854:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a85c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000a85c, i32* @r4, align 4
  store i32 268478568, i32* @lr, align 4
  %v1_1000a864 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000a864 = call i32 @function_1000c1ac(i8* %v1_1000a864)
  %v3_1000a868 = icmp eq i32 %v2_1000a864, 0
  br i1 %v3_1000a868, label %dec_label_pc_1000a878, label %dec_label_pc_1000a874

dec_label_pc_1000a874:                            ; preds = %dec_label_pc_1000a854
  %v3_1000a874 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a854, %dec_label_pc_1000a874
  %v0_1000a884 = phi i32 [ -1, %dec_label_pc_1000a854 ], [ %v3_1000a874, %dec_label_pc_1000a874 ]
  ret i32 %v0_1000a884

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a878, { 1, 0 }
}

define i32 @function_1000a888(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a888:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a89c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478636, i32* @lr, align 4
  %v2_1000a8a8 = call i32 @function_1000b9e0(i32 5, i32 %v2_1000a89c)
  ret i32 %v2_1000a8a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a8bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a8bc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a8d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478688, i32* @lr, align 4
  %v2_1000a8dc = call i32 @function_1000b9e0(i32 2, i32 %v2_1000a8d0)
  ret i32 %v2_1000a8dc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a8f0() local_unnamed_addr {
dec_label_pc_1000a8f0:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a8f8 = load i32, i32* @r3, align 4
  store i32 %v0_1000a8f8, i32* %stack_var_-24, align 4
  %v2_1000a904 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478740, i32* @lr, align 4
  %v2_1000a910 = call i32 @function_1000b9e0(i32 3, i32 %v2_1000a904)
  ret i32 %v2_1000a910

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a924(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a924:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a938 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478792, i32* @lr, align 4
  %v2_1000a944 = call i32 @function_1000b9e0(i32 6, i32 %v2_1000a938)
  ret i32 %v2_1000a944

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a958(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000a958:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a96c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268478852, i32* @lr, align 4
  %v2_1000a980 = call i32 @function_1000b9e0(i32 15, i32 %v2_1000a96c)
  ret i32 %v2_1000a980

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 17, 4, 5, 7, 8, 9, 6, 10, 11, 12, 1, 13, 14, 2, 15, 16, 3 }
}

define i32 @function_1000a994(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a994:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a9a8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478900, i32* @lr, align 4
  %v2_1000a9b0 = call i32 @function_1000b9e0(i32 4, i32 %v2_1000a9a8)
  ret i32 %v2_1000a9b0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a9c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a9c4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a9d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268478956, i32* @lr, align 4
  %v2_1000a9e8 = call i32 @function_1000b9e0(i32 10, i32 %v2_1000a9d8)
  ret i32 %v2_1000a9e8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a9fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a9fc:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000aa10 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479020, i32* @lr, align 4
  %v2_1000aa28 = call i32 @function_1000b9e0(i32 12, i32 %v2_1000aa10)
  ret i32 %v2_1000aa28

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000aa3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000aa3c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000aa50 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479076, i32* @lr, align 4
  %v2_1000aa60 = call i32 @function_1000b9e0(i32 9, i32 %v2_1000aa50)
  ret i32 %v2_1000aa60

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 1, 7, 8, 9, 26, 10, 11, 27, 12, 13, 28, 29, 30, 31, 14, 32, 15, 33, 16, 34, 17, 35, 2, 36, 3, 37, 4, 18, 19, 20, 38, 21, 22, 23, 39, 24, 25, 5, 53, 40, 41, 42, 43, 6, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 0, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
}

define i32 @function_1000aa74(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000aa74:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000aa88 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479140, i32* @lr, align 4
  %v2_1000aaa0 = call i32 @function_1000b9e0(i32 11, i32 %v2_1000aa88)
  ret i32 %v2_1000aaa0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000aab4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000aab4:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000aac8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479200, i32* @lr, align 4
  %v2_1000aadc = call i32 @function_1000b9e0(i32 14, i32 %v2_1000aac8)
  ret i32 %v2_1000aadc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000aaf0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000aaf0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ab04 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479252, i32* @lr, align 4
  %v2_1000ab10 = call i32 @function_1000b9e0(i32 1, i32 %v2_1000ab04)
  ret i32 %v2_1000ab10

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000b9e0, { 5, 4, 6, 3, 7, 2, 9, 1, 11, 0, 8, 10 }
}

define i32 @function_1000ab24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab24:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000ab54, label %dec_label_pc_1000ab40

dec_label_pc_1000ab40:                            ; preds = %dec_label_pc_1000ab24
  %v0_1000ab40 = call i32 @function_1000a4bc()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ab4c = inttoptr i32 %v0_1000ab40 to i32*
  store i32 22, i32* %v2_1000ab4c, align 4
  %v0_1000ab60.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ab5c

dec_label_pc_1000ab54:                            ; preds = %dec_label_pc_1000ab24
  %v0_1000ab54 = call i32 @function_1000aca4()
  store i32 %v0_1000ab54, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ab5c

dec_label_pc_1000ab5c:                            ; preds = %dec_label_pc_1000ab40, %dec_label_pc_1000ab54
  %v0_1000ab60 = phi i32 [ %v0_1000ab60.pre, %dec_label_pc_1000ab40 ], [ %v0_1000ab54, %dec_label_pc_1000ab54 ]
  ret i32 %v0_1000ab60

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab5c, { 1, 0 }
}

define i32 @function_1000ab70(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab70:
  store i32 268479368, i32* @lr, align 4
  %v3_1000ab84 = call i32 @function_1000a5a4(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_1000ab9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab9c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000ab9c = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab9c, label %dec_label_pc_1000abc8, label %dec_label_pc_1000abb8

dec_label_pc_1000abb8:                            ; preds = %dec_label_pc_1000ab9c
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000abc8, label %dec_label_pc_1000abc0

dec_label_pc_1000abc0:                            ; preds = %dec_label_pc_1000abb8
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000abf8.lr.ph, label %dec_label_pc_1000abc8

dec_label_pc_1000abc8:                            ; preds = %dec_label_pc_1000abc0, %dec_label_pc_1000abb8, %dec_label_pc_1000ab9c
  %v0_1000abc8 = call i32 @function_1000a4bc()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000abd4 = inttoptr i32 %v0_1000abc8 to i32*
  store i32 22, i32* %v2_1000abd4, align 4
  %v0_1000ac68.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ac64

dec_label_pc_1000abf8.lr.ph:                      ; preds = %dec_label_pc_1000abc0
  %v2_1000abe8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000abe8, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000abf822 = add i32 %v2_1000abe8, 128
  %v3_1000abf823 = inttoptr i32 %v2_1000abf822 to i32*
  store i32 0, i32* %v3_1000abf823, align 4
  %v0_1000abfc24 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000abfc25 = add i32 %v0_1000abfc24, -1
  store i32 %v1_1000abfc25, i32* %r11.global-to-local, align 4
  %v1_1000ac0026 = mul i32 %v1_1000abfc25, 4
  %v1_1000ac0427 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ac0428 = add i32 %v1_1000ac0427, %v1_1000ac0026
  store i32 %v2_1000ac0428, i32* %r9.global-to-local, align 4
  %v0_1000ac0829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac0830 = add i32 %v0_1000ac0829, -1
  store i32 %v1_1000ac0830, i32* %ctr.global-to-local, align 4
  %v2_1000ac0831 = icmp eq i32 %v1_1000ac0830, 0
  br i1 %v2_1000ac0831, label %dec_label_pc_1000ac0c, label %dec_label_pc_1000abf8.dec_label_pc_1000abf8_crit_edge

dec_label_pc_1000abf8.dec_label_pc_1000abf8_crit_edge: ; preds = %dec_label_pc_1000abf8.lr.ph, %dec_label_pc_1000abf8.dec_label_pc_1000abf8_crit_edge
  %v2_1000ac0432 = phi i32 [ %v2_1000ac04, %dec_label_pc_1000abf8.dec_label_pc_1000abf8_crit_edge ], [ %v2_1000ac0428, %dec_label_pc_1000abf8.lr.ph ]
  %v0_1000abf8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000abf8 = add i32 %v2_1000ac0432, 4
  %v3_1000abf8 = inttoptr i32 %v2_1000abf8 to i32*
  store i32 %v0_1000abf8.pre, i32* %v3_1000abf8, align 4
  %v0_1000abfc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000abfc = add i32 %v0_1000abfc, -1
  store i32 %v1_1000abfc, i32* %r11.global-to-local, align 4
  %v1_1000ac00 = mul i32 %v1_1000abfc, 4
  %v1_1000ac04 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ac04 = add i32 %v1_1000ac04, %v1_1000ac00
  store i32 %v2_1000ac04, i32* %r9.global-to-local, align 4
  %v0_1000ac08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac08 = add i32 %v0_1000ac08, -1
  store i32 %v1_1000ac08, i32* %ctr.global-to-local, align 4
  %v2_1000ac08 = icmp eq i32 %v1_1000ac08, 0
  br i1 %v2_1000ac08, label %dec_label_pc_1000ac0c, label %dec_label_pc_1000abf8.dec_label_pc_1000abf8_crit_edge

dec_label_pc_1000ac0c:                            ; preds = %dec_label_pc_1000abf8.dec_label_pc_1000abf8_crit_edge, %dec_label_pc_1000abf8.lr.ph
  %v0_1000ac10.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac0c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000ac0c, i32* @r3, align 4
  store i32 %v0_1000ac10.pre, i32* @r4, align 4
  %v0_1000ac14 = call i32 @function_1000aca4()
  %v1_1000ac18 = icmp slt i32 %v0_1000ac14, 0
  br i1 %v1_1000ac18, label %dec_label_pc_1000ac60, label %dec_label_pc_1000ac20

dec_label_pc_1000ac20:                            ; preds = %dec_label_pc_1000ac0c
  %v0_1000ac24 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac2c = call i32 @function_1000ac7c(i32 ptrtoint (i32* @global_var_1001d518.461 to i32), i32 %v0_1000ac24)
  %v2_1000ac38 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268479568, i32* @lr, align 4
  %v4_1000ac4c = call i32 @function_1000c26c(i32 %v0_1000ac24, i32* nonnull %stack_var_-296, i32 %v2_1000ac38)
  %v1_1000ac50 = icmp slt i32 %v4_1000ac4c, 0
  br i1 %v1_1000ac50, label %dec_label_pc_1000ac60, label %dec_label_pc_1000ac58

dec_label_pc_1000ac58:                            ; preds = %dec_label_pc_1000ac20
  %v3_1000ac58 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000ac58, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ac64

dec_label_pc_1000ac60:                            ; preds = %dec_label_pc_1000ac20, %dec_label_pc_1000ac0c
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ac64

dec_label_pc_1000ac64:                            ; preds = %dec_label_pc_1000ac58, %dec_label_pc_1000abc8, %dec_label_pc_1000ac60
  %v0_1000ac68 = phi i32 [ %v3_1000ac58, %dec_label_pc_1000ac58 ], [ %v0_1000ac68.pre, %dec_label_pc_1000abc8 ], [ -1, %dec_label_pc_1000ac60 ]
  ret i32 %v0_1000ac68

; uselistorder directives
  uselistorder i32 %v1_1000ac08, { 1, 0 }
  uselistorder i32 %v2_1000ac04, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ac64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000abf8.dec_label_pc_1000abf8_crit_edge, { 1, 0 }
}

define i32 @function_1000ac7c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ac7c:
  %v1_1000ac7c = add i32 %arg2, -1
  %v1_1000ac80 = call i32 @__asm_rlwinm(i32 %v1_1000ac7c, i32 29, i32 3, i32 29)
  %v1_1000ac84 = urem i32 %v1_1000ac7c, 32
  %v2_1000ac88 = add i32 %v1_1000ac80, %arg1
  %v3_1000ac88 = inttoptr i32 %v2_1000ac88 to i32*
  %v4_1000ac88 = load i32, i32* %v3_1000ac88, align 4
  %v3_1000ac90 = shl i32 1, %v1_1000ac84
  %v2_1000ac94 = and i32 %v4_1000ac88, %v3_1000ac90
  %v2_1000ac98 = icmp ne i32 %v2_1000ac94, 0
  %v5_1000ac9c = zext i1 %v2_1000ac98 to i32
  ret i32 %v5_1000ac9c
}

define i32 @function_1000aca4() local_unnamed_addr {
dec_label_pc_1000aca4:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000aca4 = load i32, i32* @r4, align 4
  %v1_1000aca4 = add i32 %v0_1000aca4, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000acac = call i32 @__asm_rlwinm(i32 %v1_1000aca4, i32 29, i32 3, i32 29)
  %v1_1000acb0 = urem i32 %v1_1000aca4, 32
  %v1_1000acb4 = load i32, i32* @r3, align 4
  %v2_1000acb4 = add i32 %v1_1000acb4, %v1_1000acac
  %v3_1000acb4 = inttoptr i32 %v2_1000acb4 to i32*
  %v4_1000acb4 = load i32, i32* %v3_1000acb4, align 4
  %v0_1000acb8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000acb8 = shl i32 %v0_1000acb8, %v1_1000acb0
  store i32 %v3_1000acb8, i32* %r0.global-to-local, align 4
  %v2_1000acbc = or i32 %v3_1000acb8, %v4_1000acb4
  store i32 %v2_1000acbc, i32* %v3_1000acb4, align 4
  ret i32 0
}

define i32 @function_1000accc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000accc:
  %v1_1000accc = add i32 %arg2, -1
  %v1_1000acd4 = call i32 @__asm_rlwinm(i32 %v1_1000accc, i32 29, i32 3, i32 29)
  %v1_1000acd8 = urem i32 %v1_1000accc, 32
  %v2_1000acdc = add i32 %v1_1000acd4, %arg1
  %v3_1000acdc = inttoptr i32 %v2_1000acdc to i32*
  %v4_1000acdc = load i32, i32* %v3_1000acdc, align 4
  %v3_1000ace0 = shl i32 -2, %v1_1000acd8
  %v4_1000ace0 = sub nsw i32 32, %v1_1000acd8
  %v5_1000ace0 = lshr i32 -2, %v4_1000ace0
  %v6_1000ace0 = or i32 %v5_1000ace0, %v3_1000ace0
  %v2_1000ace4 = and i32 %v6_1000ace0, %v4_1000acdc
  store i32 %v2_1000ace4, i32* %v3_1000acdc, align 4
  ret i32 0
}

define i32 @function_1000acf4() local_unnamed_addr {
dec_label_pc_1000acf4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000acf4 = load i32, i32* @r3, align 4
  %v3_1000acf4 = icmp eq i32 %v0_1000acf4, 0
  br i1 %v3_1000acf4, label %dec_label_pc_1000ad0c, label %dec_label_pc_1000ad10

dec_label_pc_1000ad0c:                            ; preds = %dec_label_pc_1000acf4
  br label %dec_label_pc_1000ad10

dec_label_pc_1000ad10:                            ; preds = %dec_label_pc_1000acf4, %dec_label_pc_1000ad0c
  %v0_1000ad20 = phi i32 [ 1, %dec_label_pc_1000ad0c ], [ %v0_1000acf4, %dec_label_pc_1000acf4 ]
  %v3_1000ad14 = icmp ugt i32 %v0_1000ad20, -8
  br i1 %v3_1000ad14, label %dec_label_pc_1000ae24, label %dec_label_pc_1000ad1c

dec_label_pc_1000ad1c:                            ; preds = %dec_label_pc_1000ad10
  %v1_1000ad20 = add i32 %v0_1000ad20, 4
  store i32 ptrtoint (i32* @global_var_1001d2f8.462 to i32), i32* @r29, align 4
  store i32 %v1_1000ad20, i32* %stack_var_-40, align 4
  %v0_1000ad30 = call i32 @function_1000b688()
  %v2_1000ad38 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000ad40 = call i32 @function_1000b0ec(i32* inttoptr (i32 268554784 to i32*), i32 %v2_1000ad38)
  store i32 %v3_1000ad40, i32* %r31.global-to-local, align 4
  %v0_1000ad4c = call i32 @function_1000b688()
  %v3_1000ad50 = icmp eq i32 %v3_1000ad40, 0
  br i1 %v3_1000ad50, label %dec_label_pc_1000ad58, label %dec_label_pc_1000ae08.thread

dec_label_pc_1000ae08.thread:                     ; preds = %dec_label_pc_1000ad1c
  br label %dec_label_pc_1000ae1c

dec_label_pc_1000ad58:                            ; preds = %dec_label_pc_1000ad1c
  %v3_1000ad5c = load i32, i32* @global_var_1001d27c.465, align 4
  store i32 %v3_1000ad5c, i32* %r31.global-to-local, align 4
  %v3_1000ad60 = load i32, i32* %stack_var_-40, align 4
  %v2_1000ad64 = icmp ult i32 %v3_1000ad60, %v3_1000ad5c
  br i1 %v2_1000ad64, label %dec_label_pc_1000ad7c, label %dec_label_pc_1000ad6c

dec_label_pc_1000ad6c:                            ; preds = %dec_label_pc_1000ad58
  %v1_1000ad70 = sub i32 0, %v3_1000ad5c
  %v2_1000ad6c = add i32 %v3_1000ad5c, -1
  %v1_1000ad74 = add i32 %v2_1000ad6c, %v3_1000ad60
  %v2_1000ad78 = and i32 %v1_1000ad74, %v1_1000ad70
  store i32 %v2_1000ad78, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ad7c

dec_label_pc_1000ad7c:                            ; preds = %dec_label_pc_1000ad58, %dec_label_pc_1000ad6c
  %v0_1000ad88 = call i32 @function_1000b688()
  %v0_1000ad8c = load i32, i32* %r31.global-to-local, align 4
  store i32 268479892, i32* @lr, align 4
  %v1_1000ad90 = call i32 @function_1000bea8(i32 %v0_1000ad8c)
  %v3_1000ad94 = icmp eq i32 %v1_1000ad90, -1
  br i1 %v3_1000ad94, label %dec_label_pc_1000adb4, label %dec_label_pc_1000ad9c

dec_label_pc_1000ad9c:                            ; preds = %dec_label_pc_1000ad7c
  %v1_1000ad9c = add i32 %v1_1000ad90, 3
  %v1_1000ada0 = call i32 @__asm_rlwinm(i32 %v1_1000ad9c, i32 0, i32 0, i32 29)
  store i32 %v1_1000ada0, i32* @r30, align 4
  %v4_1000ada4 = icmp eq i32 %v1_1000ada0, %v1_1000ad90
  br i1 %v4_1000ada4, label %dec_label_pc_1000adb4, label %dec_label_pc_1000adac

dec_label_pc_1000adac:                            ; preds = %dec_label_pc_1000ad9c
  %v2_1000adac = sub i32 %v1_1000ada0, %v1_1000ad90
  store i32 268479924, i32* @lr, align 4
  %v1_1000adb0 = call i32 @function_1000bea8(i32 %v2_1000adac)
  br label %dec_label_pc_1000adb4

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ad9c, %dec_label_pc_1000ad7c, %dec_label_pc_1000adac
  %v0_1000adbc = call i32 @function_1000b688()
  %v0_1000adc0 = load i32, i32* @r30, align 4
  %v3_1000adc0 = icmp eq i32 %v0_1000adc0, -1
  br i1 %v3_1000adc0, label %dec_label_pc_1000ae24, label %dec_label_pc_1000ae08

dec_label_pc_1000ae08:                            ; preds = %dec_label_pc_1000adb4
  store i32 ptrtoint (i32* @global_var_1001d2f8.462 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001d220 to i32), i32* @r29, align 4
  %v0_1000addc = call i32 @function_1000b688()
  %v0_1000ade0 = load i32, i32* @r31, align 4
  %v0_1000ade4 = load i32, i32* @r30, align 4
  %v0_1000ade8 = load i32, i32* @r29, align 4
  store i32 268479984, i32* @lr, align 4
  %v3_1000adec = inttoptr i32 %v0_1000ade8 to i32*
  %v4_1000adec = call i32 @function_1000b270(i32* %v3_1000adec, i32 %v0_1000ade4, i32 %v0_1000ade0)
  %v0_1000adf0 = load i32, i32* @r29, align 4
  %v2_1000adf8 = inttoptr i32 %v0_1000adf0 to i32*
  %v3_1000adf8 = call i32 @function_1000b0ec(i32* %v2_1000adf8, i32 %v2_1000ad38)
  store i32 %v3_1000adf8, i32* %r31.global-to-local, align 4
  %v0_1000ae04 = call i32 @function_1000b688()
  %v3_1000ae08 = icmp eq i32 %v3_1000adf8, 0
  br i1 %v3_1000ae08, label %dec_label_pc_1000ae1c.thread, label %dec_label_pc_1000ae1c

dec_label_pc_1000ae1c.thread:                     ; preds = %dec_label_pc_1000ae08
  br label %dec_label_pc_1000ae24

dec_label_pc_1000ae1c:                            ; preds = %dec_label_pc_1000ae08, %dec_label_pc_1000ae08.thread
  %v0_1000ae1c.pr6 = phi i32 [ %v3_1000ad40, %dec_label_pc_1000ae08.thread ], [ %v3_1000adf8, %dec_label_pc_1000ae08 ]
  %v3_1000ae10 = load i32, i32* %stack_var_-40, align 4
  %v2_1000ae14 = inttoptr i32 %v0_1000ae1c.pr6 to i32*
  store i32 %v3_1000ae10, i32* %v2_1000ae14, align 4
  %v0_1000ae18 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ae18 = add i32 %v0_1000ae18, 4
  store i32 %v1_1000ae18, i32* @r31, align 4
  %v3_1000ae1c = icmp eq i32 %v1_1000ae18, 0
  br i1 %v3_1000ae1c, label %dec_label_pc_1000ae24, label %dec_label_pc_1000ae34

dec_label_pc_1000ae24:                            ; preds = %dec_label_pc_1000ae1c.thread, %dec_label_pc_1000ae1c, %dec_label_pc_1000adb4, %dec_label_pc_1000ad10
  %v0_1000ae24 = call i32 @function_1000a4bc()
  %v2_1000ae2c = inttoptr i32 %v0_1000ae24 to i32*
  store i32 12, i32* %v2_1000ae2c, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000ae34

dec_label_pc_1000ae34:                            ; preds = %dec_label_pc_1000ae1c, %dec_label_pc_1000ae24
  %v0_1000ae38 = phi i32 [ %v1_1000ae18, %dec_label_pc_1000ae1c ], [ 0, %dec_label_pc_1000ae24 ]
  ret i32 %v0_1000ae38

; uselistorder directives
  uselistorder i32 %v1_1000ae18, { 1, 0, 2 }
  uselistorder i32 %v1_1000ada0, { 1, 0, 2 }
  uselistorder i32 %v1_1000ad90, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000ad5c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000ad40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000ae34, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae24, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000adb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ad7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad10, { 1, 0 }
}

define i32 @function_1000ae4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ae4c:
  %v3_1000ae4c = icmp eq i32 %arg1, 0
  %v2_1000ae5c = mul i32 %arg2, %arg1
  store i32 %v2_1000ae5c, i32* @r31, align 4
  br i1 %v3_1000ae4c, label %dec_label_pc_1000ae88, label %dec_label_pc_1000ae68

dec_label_pc_1000ae68:                            ; preds = %dec_label_pc_1000ae4c
  %v2_1000ae68 = udiv i32 %v2_1000ae5c, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000ae70 = icmp eq i32 %v2_1000ae68, %arg2
  br i1 %v4_1000ae70, label %dec_label_pc_1000ae88, label %dec_label_pc_1000ae78

dec_label_pc_1000ae78:                            ; preds = %dec_label_pc_1000ae68
  %v0_1000ae78 = call i32 @function_1000a4bc()
  %v2_1000ae80 = inttoptr i32 %v0_1000ae78 to i32*
  store i32 12, i32* %v2_1000ae80, align 4
  br label %dec_label_pc_1000aea4

dec_label_pc_1000ae88:                            ; preds = %dec_label_pc_1000ae68, %dec_label_pc_1000ae4c
  store i32 %v2_1000ae5c, i32* @r3, align 4
  store i32 268480144, i32* @lr, align 4
  %v0_1000ae8c = call i32 @function_1000acf4()
  %v0_1000ae90 = load i32, i32* @r31, align 4
  store i32 %v0_1000ae8c, i32* @r30, align 4
  %v3_1000ae94 = icmp eq i32 %v0_1000ae8c, 0
  br i1 %v3_1000ae94, label %dec_label_pc_1000aea4, label %dec_label_pc_1000aea0

dec_label_pc_1000aea0:                            ; preds = %dec_label_pc_1000ae88
  store i32 268480164, i32* @lr, align 4
  %v3_1000aea0 = call i32 @function_1000a5a4(i32 0, i32 %v0_1000ae90, i32 %v0_1000ae90)
  br label %dec_label_pc_1000aea4

dec_label_pc_1000aea4:                            ; preds = %dec_label_pc_1000ae88, %dec_label_pc_1000ae78, %dec_label_pc_1000aea0
  %v0_1000aea8 = load i32, i32* @r30, align 4
  ret i32 %v0_1000aea8

; uselistorder directives
  uselistorder i32 %v0_1000ae90, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aea4, { 2, 0, 1 }
}

define i32 @function_1000aebc() local_unnamed_addr {
dec_label_pc_1000aebc:
  %v0_1000aebc = load i32, i32* @r3, align 4
  %v3_1000aebc = icmp eq i32 %v0_1000aebc, 0
  br i1 %v3_1000aebc, label %dec_label_pc_1000afa8, label %dec_label_pc_1000aed4

dec_label_pc_1000aed4:                            ; preds = %dec_label_pc_1000aebc
  %v1_1000aed8 = add i32 %v0_1000aebc, -4
  %v2_1000aed8 = inttoptr i32 %v1_1000aed8 to i32*
  %v3_1000aed8 = load i32, i32* %v2_1000aed8, align 4
  store i32 %v3_1000aed8, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000aeec = call i32 @function_1000b688()
  %v0_1000aef4 = load i32, i32* @r28, align 4
  store i32 268480256, i32* @lr, align 4
  %v4_1000aefc = call i32 @function_1000b270(i32* nonnull @global_var_1001d220, i32 %v1_1000aed8, i32 %v0_1000aef4)
  %v3_1000af04 = load i32, i32* @global_var_1001d27c.465, align 4
  store i32 %v4_1000aefc, i32* @r29, align 4
  %v1_1000af0c = inttoptr i32 %v4_1000aefc to i32*
  %v2_1000af0c = load i32, i32* %v1_1000af0c, align 4
  store i32 %v2_1000af0c, i32* @r27, align 4
  %v1_1000af10 = mul i32 %v3_1000af04, 8
  %v2_1000af14 = icmp ult i32 %v2_1000af0c, %v1_1000af10
  br i1 %v2_1000af14, label %dec_label_pc_1000af48, label %dec_label_pc_1000af1c

dec_label_pc_1000af1c:                            ; preds = %dec_label_pc_1000aed4
  store i32 ptrtoint (i32* @global_var_1001d598.466 to i32), i32* @r28, align 4
  %v0_1000af2c = call i32 @function_1000b688()
  store i32 268480312, i32* @lr, align 4
  %v1_1000af34 = call i32 @function_1000bea8(i32 0)
  %v0_1000af38 = load i32, i32* @r31, align 4
  %v4_1000af38 = icmp eq i32 %v0_1000af38, %v1_1000af34
  br i1 %v4_1000af38, label %dec_label_pc_1000af50, label %dec_label_pc_1000af40

dec_label_pc_1000af40:                            ; preds = %dec_label_pc_1000af1c
  %v0_1000af44 = call i32 @function_1000b688()
  br label %dec_label_pc_1000af48

dec_label_pc_1000af48:                            ; preds = %dec_label_pc_1000aed4, %dec_label_pc_1000af40
  br label %dec_label_pc_1000afa4

dec_label_pc_1000af50:                            ; preds = %dec_label_pc_1000af1c
  %v0_1000af50 = load i32, i32* @r29, align 4
  %v1_1000af50 = add i32 %v0_1000af50, 4
  %v2_1000af50 = inttoptr i32 %v1_1000af50 to i32*
  %v3_1000af50 = load i32, i32* %v2_1000af50, align 4
  %v3_1000af54 = icmp eq i32 %v3_1000af50, 0
  br i1 %v3_1000af54, label %dec_label_pc_1000af64, label %dec_label_pc_1000af5c

dec_label_pc_1000af5c:                            ; preds = %dec_label_pc_1000af50
  %v1_1000af5c = add i32 %v0_1000af50, 8
  %v2_1000af5c = inttoptr i32 %v1_1000af5c to i32*
  %v3_1000af5c = load i32, i32* %v2_1000af5c, align 4
  %v2_1000af60 = add i32 %v3_1000af50, 8
  %v3_1000af60 = inttoptr i32 %v2_1000af60 to i32*
  store i32 %v3_1000af5c, i32* %v3_1000af60, align 4
  %v0_1000af64.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000af64

dec_label_pc_1000af64:                            ; preds = %dec_label_pc_1000af50, %dec_label_pc_1000af5c
  %v0_1000af64 = phi i32 [ %v0_1000af50, %dec_label_pc_1000af50 ], [ %v0_1000af64.pre, %dec_label_pc_1000af5c ]
  %v1_1000af64 = add i32 %v0_1000af64, 8
  %v2_1000af64 = inttoptr i32 %v1_1000af64 to i32*
  %v3_1000af64 = load i32, i32* %v2_1000af64, align 4
  %v1_1000af68 = add i32 %v0_1000af64, 4
  %v2_1000af68 = inttoptr i32 %v1_1000af68 to i32*
  %v3_1000af68 = load i32, i32* %v2_1000af68, align 4
  %v3_1000af6c = icmp eq i32 %v3_1000af64, 0
  br i1 %v3_1000af6c, label %dec_label_pc_1000af7c, label %dec_label_pc_1000af74

dec_label_pc_1000af74:                            ; preds = %dec_label_pc_1000af64
  %v2_1000af74 = add i32 %v3_1000af64, 4
  %v3_1000af74 = inttoptr i32 %v2_1000af74 to i32*
  store i32 %v3_1000af68, i32* %v3_1000af74, align 4
  br label %dec_label_pc_1000af80

dec_label_pc_1000af7c:                            ; preds = %dec_label_pc_1000af64
  store i32 %v3_1000af68, i32* @global_var_1001d220, align 4
  br label %dec_label_pc_1000af80

dec_label_pc_1000af80:                            ; preds = %dec_label_pc_1000af74, %dec_label_pc_1000af7c
  %v0_1000af88 = call i32 @function_1000b688()
  %v0_1000af8c = load i32, i32* @r27, align 4
  %v1_1000af8c = load i32, i32* @r29, align 4
  %v0_1000af94 = load i32, i32* @r31, align 4
  %v2_1000af8c = sub i32 12, %v0_1000af8c
  %v1_1000af90 = add i32 %v2_1000af8c, %v1_1000af8c
  %v2_1000af94 = sub i32 %v1_1000af90, %v0_1000af94
  store i32 268480412, i32* @lr, align 4
  %v1_1000af98 = call i32 @function_1000bea8(i32 %v2_1000af94)
  br label %dec_label_pc_1000afa4

dec_label_pc_1000afa4:                            ; preds = %dec_label_pc_1000af48, %dec_label_pc_1000af80
  %v0_1000afa4 = call i32 @function_1000b688()
  br label %dec_label_pc_1000afa8

dec_label_pc_1000afa8:                            ; preds = %dec_label_pc_1000aebc, %dec_label_pc_1000afa4
  %.0 = phi i32 [ undef, %dec_label_pc_1000aebc ], [ %v0_1000afa4, %dec_label_pc_1000afa4 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000af64, { 1, 0 }
  uselistorder i32 (i32)* @function_1000bea8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000afa8, { 1, 0 }
  uselistorder label %dec_label_pc_1000afa4, { 1, 0 }
  uselistorder label %dec_label_pc_1000af80, { 1, 0 }
  uselistorder label %dec_label_pc_1000af64, { 1, 0 }
  uselistorder label %dec_label_pc_1000af48, { 1, 0 }
}

define i32 @function_1000afbc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000afbc:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000afbc = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000afbc, label %dec_label_pc_1000afd8, label %dec_label_pc_1000afe4

dec_label_pc_1000afd8:                            ; preds = %dec_label_pc_1000afbc
  store i32 ptrtoint ([3 x i8]* @global_var_1000afdc.470 to i32), i32* @lr, align 4
  %v0_1000afd8 = call i32 @function_1000aebc()
  br label %dec_label_pc_1000aff0

dec_label_pc_1000afe4:                            ; preds = %dec_label_pc_1000afbc
  %v3_1000afe4 = icmp eq i32 %arg1, 0
  br i1 %v3_1000afe4, label %dec_label_pc_1000aff0, label %dec_label_pc_1000affc

dec_label_pc_1000aff0:                            ; preds = %dec_label_pc_1000afe4, %dec_label_pc_1000afd8
  %storemerge = phi i32 [ 0, %dec_label_pc_1000afd8 ], [ %arg2, %dec_label_pc_1000afe4 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268480500, i32* @lr, align 4
  %v0_1000aff0 = call i32 @function_1000acf4()
  store i32 %v0_1000aff0, i32* @r28, align 4
  br label %dec_label_pc_1000b0d4

dec_label_pc_1000affc:                            ; preds = %dec_label_pc_1000afe4
  %v1_1000affc = add i32 %arg2, 7
  %v1_1000b000 = add i32 %arg1, -4
  store i32 %v1_1000b000, i32* %r27.global-to-local, align 4
  %v1_1000b004 = call i32 @__asm_rlwinm(i32 %v1_1000affc, i32 0, i32 0, i32 29)
  store i32 %v1_1000b004, i32* @r31, align 4
  %v2_1000b008 = inttoptr i32 %v1_1000b000 to i32*
  %v3_1000b008 = load i32, i32* %v2_1000b008, align 4
  store i32 %v3_1000b008, i32* @r30, align 4
  %v2_1000b00c = icmp ugt i32 %v1_1000b004, 11
  br i1 %v2_1000b00c, label %dec_label_pc_1000b018, label %dec_label_pc_1000b014

dec_label_pc_1000b014:                            ; preds = %dec_label_pc_1000affc
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000b018

dec_label_pc_1000b018:                            ; preds = %dec_label_pc_1000affc, %dec_label_pc_1000b014
  %v0_1000b098 = phi i32 [ %v1_1000b004, %dec_label_pc_1000affc ], [ 12, %dec_label_pc_1000b014 ]
  %v3_1000b018 = icmp ugt i32 %v0_1000b098, %v3_1000b008
  br i1 %v3_1000b018, label %dec_label_pc_1000b020, label %dec_label_pc_1000b098

dec_label_pc_1000b020:                            ; preds = %dec_label_pc_1000b018
  %v0_1000b02c = call i32 @function_1000b688()
  %v0_1000b034 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b034 = load i32, i32* @r30, align 4
  %v2_1000b034 = add i32 %v1_1000b034, %v0_1000b034
  %v1_1000b038 = load i32, i32* @r31, align 4
  %v2_1000b038 = sub i32 %v1_1000b038, %v1_1000b034
  %v4_1000b040 = call i32 @function_1000b18c(i32* nonnull @global_var_1001d220, i32 %v2_1000b034, i32 %v2_1000b038)
  store i32 %v4_1000b040, i32* %r27.global-to-local, align 4
  %v0_1000b04c = call i32 @function_1000b688()
  %v3_1000b050 = icmp eq i32 %v4_1000b040, 0
  br i1 %v3_1000b050, label %dec_label_pc_1000b064, label %dec_label_pc_1000b058

dec_label_pc_1000b058:                            ; preds = %dec_label_pc_1000b020
  %v0_1000b058 = load i32, i32* @r30, align 4
  %v2_1000b058 = add i32 %v0_1000b058, %v4_1000b040
  %v1_1000b05c = load i32, i32* @r28, align 4
  %v2_1000b05c = add i32 %v1_1000b05c, -4
  %v3_1000b05c = inttoptr i32 %v2_1000b05c to i32*
  store i32 %v2_1000b058, i32* %v3_1000b05c, align 4
  br label %dec_label_pc_1000b0d4

dec_label_pc_1000b064:                            ; preds = %dec_label_pc_1000b020
  %v0_1000b064 = load i32, i32* @r31, align 4
  %v1_1000b064 = add i32 %v0_1000b064, -4
  store i32 %v1_1000b064, i32* @r3, align 4
  store i32 268480620, i32* @lr, align 4
  %v0_1000b068 = call i32 @function_1000acf4()
  store i32 %v0_1000b068, i32* @r3, align 4
  store i32 %v0_1000b068, i32* @r31, align 4
  %v3_1000b06c = icmp eq i32 %v0_1000b068, 0
  br i1 %v3_1000b06c, label %dec_label_pc_1000b074, label %dec_label_pc_1000b07c

dec_label_pc_1000b074:                            ; preds = %dec_label_pc_1000b064
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b0d4

dec_label_pc_1000b07c:                            ; preds = %dec_label_pc_1000b064
  %v0_1000b07c = load i32, i32* @r28, align 4
  store i32 %v0_1000b07c, i32* @r4, align 4
  %v0_1000b080 = load i32, i32* @r30, align 4
  %v1_1000b080 = add i32 %v0_1000b080, -4
  store i32 %v1_1000b080, i32* @r5, align 4
  store i32 268480648, i32* @lr, align 4
  %v0_1000b084 = call i32 @function_1000c0dc()
  %v0_1000b088 = load i32, i32* @r28, align 4
  store i32 %v0_1000b088, i32* @r3, align 4
  store i32 268480656, i32* @lr, align 4
  %v0_1000b08c = call i32 @function_1000aebc()
  %v0_1000b090 = load i32, i32* @r31, align 4
  store i32 %v0_1000b090, i32* @r28, align 4
  br label %dec_label_pc_1000b0d4

dec_label_pc_1000b098:                            ; preds = %dec_label_pc_1000b018
  %v1_1000b098 = add i32 %v0_1000b098, 28
  %v3_1000b09c = icmp ugt i32 %v1_1000b098, %v3_1000b008
  br i1 %v3_1000b09c, label %dec_label_pc_1000b0d4, label %dec_label_pc_1000b0a4

dec_label_pc_1000b0a4:                            ; preds = %dec_label_pc_1000b098
  store i32 ptrtoint (i32* @global_var_1001d2f8.462 to i32), i32* @r29, align 4
  %v0_1000b0b0 = call i32 @function_1000b688()
  %v0_1000b0b8 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b0b8 = load i32, i32* @r31, align 4
  %v2_1000b0b8 = add i32 %v1_1000b0b8, %v0_1000b0b8
  %v1_1000b0bc = load i32, i32* @r30, align 4
  %v2_1000b0bc = sub i32 %v1_1000b0bc, %v1_1000b0b8
  store i32 268480712, i32* @lr, align 4
  %v4_1000b0c4 = call i32 @function_1000b270(i32* nonnull @global_var_1001d220, i32 %v2_1000b0b8, i32 %v2_1000b0bc)
  %v0_1000b0cc = call i32 @function_1000b688()
  %v0_1000b0d0 = load i32, i32* @r31, align 4
  %v1_1000b0d0 = load i32, i32* @r28, align 4
  %v2_1000b0d0 = add i32 %v1_1000b0d0, -4
  %v3_1000b0d0 = inttoptr i32 %v2_1000b0d0 to i32*
  store i32 %v0_1000b0d0, i32* %v3_1000b0d0, align 4
  br label %dec_label_pc_1000b0d4

dec_label_pc_1000b0d4:                            ; preds = %dec_label_pc_1000b098, %dec_label_pc_1000b07c, %dec_label_pc_1000b074, %dec_label_pc_1000b058, %dec_label_pc_1000aff0, %dec_label_pc_1000b0a4
  %v0_1000b0d8 = load i32, i32* @r28, align 4
  ret i32 %v0_1000b0d8

; uselistorder directives
  uselistorder i32 %v1_1000b0b8, { 1, 0 }
  uselistorder i32 %v4_1000b040, { 1, 0, 2 }
  uselistorder i32 %v1_1000b034, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001d220, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000acf4, { 3, 2, 1, 0, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 ()* @function_1000aebc, { 7, 6, 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000b0d4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000b018, { 1, 0 }
}

define i32 @function_1000b0ec(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b0ec:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000b0ec = inttoptr i32 %arg2 to i32*
  %v2_1000b0ec = load i32, i32* %v1_1000b0ec, align 4
  %v1_1000b0f0 = add i32 %v2_1000b0ec, 3
  store i32 %v1_1000b0f0, i32* %r9.global-to-local, align 4
  %v1_1000b0f4 = call i32 @__asm_rlwinm(i32 %v1_1000b0f0, i32 0, i32 0, i32 29)
  %v2_1000b0f8 = icmp ugt i32 %v1_1000b0f4, 11
  br i1 %v2_1000b0f8, label %dec_label_pc_1000b17c.preheader, label %dec_label_pc_1000b100

dec_label_pc_1000b100:                            ; preds = %dec_label_pc_1000b0ec
  br label %dec_label_pc_1000b17c.preheader

dec_label_pc_1000b17c.preheader:                  ; preds = %dec_label_pc_1000b0ec, %dec_label_pc_1000b100
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000b100 ], [ %v1_1000b0f4, %dec_label_pc_1000b0ec ]
  %v0_1000b160 = phi i32 [ 12, %dec_label_pc_1000b100 ], [ %v1_1000b0f4, %dec_label_pc_1000b0ec ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000b17c5 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000b17c5, label %dec_label_pc_1000b184, label %dec_label_pc_1000b10c

dec_label_pc_1000b10c:                            ; preds = %dec_label_pc_1000b17c.preheader, %dec_label_pc_1000b178
  %v0_1000b178 = phi i32 [ %storemerge, %dec_label_pc_1000b178 ], [ %storemerge2, %dec_label_pc_1000b17c.preheader ]
  %v1_1000b10c = inttoptr i32 %v0_1000b178 to i32*
  %v2_1000b10c = load i32, i32* %v1_1000b10c, align 4
  store i32 %v2_1000b10c, i32* %r10.global-to-local, align 4
  %v2_1000b110 = icmp ult i32 %v2_1000b10c, %v0_1000b160
  br i1 %v2_1000b110, label %dec_label_pc_1000b178, label %dec_label_pc_1000b118

dec_label_pc_1000b118:                            ; preds = %dec_label_pc_1000b10c
  %v1_1000b118 = add i32 %v0_1000b160, 44
  %v2_1000b11c = icmp ult i32 %v2_1000b10c, %v1_1000b118
  br i1 %v2_1000b11c, label %dec_label_pc_1000b124, label %dec_label_pc_1000b160

dec_label_pc_1000b124:                            ; preds = %dec_label_pc_1000b118
  %v1_1000b124 = add i32 %v0_1000b178, 4
  %v2_1000b124 = inttoptr i32 %v1_1000b124 to i32*
  %v3_1000b124 = load i32, i32* %v2_1000b124, align 4
  store i32 %v3_1000b124, i32* %r11.global-to-local, align 4
  %v3_1000b128 = icmp eq i32 %v3_1000b124, 0
  br i1 %v3_1000b128, label %dec_label_pc_1000b138, label %dec_label_pc_1000b130

dec_label_pc_1000b130:                            ; preds = %dec_label_pc_1000b124
  %v1_1000b130 = add i32 %v0_1000b178, 8
  %v2_1000b130 = inttoptr i32 %v1_1000b130 to i32*
  %v3_1000b130 = load i32, i32* %v2_1000b130, align 4
  %v2_1000b134 = add i32 %v3_1000b124, 8
  %v3_1000b134 = inttoptr i32 %v2_1000b134 to i32*
  store i32 %v3_1000b130, i32* %v3_1000b134, align 4
  %v0_1000b138.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000b154.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b138

dec_label_pc_1000b138:                            ; preds = %dec_label_pc_1000b124, %dec_label_pc_1000b130
  %v0_1000b154 = phi i32 [ %v2_1000b10c, %dec_label_pc_1000b124 ], [ %v0_1000b154.pre, %dec_label_pc_1000b130 ]
  %v0_1000b138 = phi i32 [ %v0_1000b178, %dec_label_pc_1000b124 ], [ %v0_1000b138.pre, %dec_label_pc_1000b130 ]
  %v1_1000b138 = add i32 %v0_1000b138, 8
  %v2_1000b138 = inttoptr i32 %v1_1000b138 to i32*
  %v3_1000b138 = load i32, i32* %v2_1000b138, align 4
  %v1_1000b13c = add i32 %v0_1000b138, 4
  %v2_1000b13c = inttoptr i32 %v1_1000b13c to i32*
  %v3_1000b13c = load i32, i32* %v2_1000b13c, align 4
  %v3_1000b140 = icmp eq i32 %v3_1000b138, 0
  store i32 %v0_1000b154, i32* %r11.global-to-local, align 4
  br i1 %v3_1000b140, label %dec_label_pc_1000b154, label %dec_label_pc_1000b148

dec_label_pc_1000b148:                            ; preds = %dec_label_pc_1000b138
  %v2_1000b14c = add i32 %v3_1000b138, 4
  %v3_1000b14c = inttoptr i32 %v2_1000b14c to i32*
  store i32 %v3_1000b13c, i32* %v3_1000b14c, align 4
  br label %dec_label_pc_1000b168

dec_label_pc_1000b154:                            ; preds = %dec_label_pc_1000b138
  store i32 %v3_1000b13c, i32* %arg1, align 4
  br label %dec_label_pc_1000b168

dec_label_pc_1000b160:                            ; preds = %dec_label_pc_1000b118
  %v2_1000b160 = sub i32 %v2_1000b10c, %v0_1000b160
  store i32 %v2_1000b160, i32* %v1_1000b10c, align 4
  br label %dec_label_pc_1000b168

dec_label_pc_1000b168:                            ; preds = %dec_label_pc_1000b154, %dec_label_pc_1000b148, %dec_label_pc_1000b160
  %v0_1000b168 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b168 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b168 = sub i32 %v1_1000b168, %v0_1000b168
  store i32 %v2_1000b168, i32* %r9.global-to-local, align 4
  %v0_1000b16c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b16c, i32* %v1_1000b0ec, align 4
  %v0_1000b170 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b170 = add i32 %v0_1000b170, 12
  ret i32 %v1_1000b170

dec_label_pc_1000b178:                            ; preds = %dec_label_pc_1000b10c
  %v1_1000b178 = add i32 %v0_1000b178, 4
  %storemerge.in = inttoptr i32 %v1_1000b178 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000b17c = icmp eq i32 %storemerge, 0
  br i1 %v3_1000b17c, label %dec_label_pc_1000b17c.dec_label_pc_1000b184_crit_edge, label %dec_label_pc_1000b10c

dec_label_pc_1000b17c.dec_label_pc_1000b184_crit_edge: ; preds = %dec_label_pc_1000b178
  br label %dec_label_pc_1000b184

dec_label_pc_1000b184:                            ; preds = %dec_label_pc_1000b17c.dec_label_pc_1000b184_crit_edge, %dec_label_pc_1000b17c.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000b138, { 1, 0 }
  uselistorder i32 %v2_1000b10c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000b178, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000b160, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b168, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b138, { 1, 0 }
  uselistorder label %dec_label_pc_1000b10c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b17c.preheader, { 1, 0 }
}

define i32 @function_1000b18c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b18c:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000b18c = load i32, i32* %arg1, align 4
  store i32 %v2_1000b18c, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000b194 = add i32 %arg3, 3
  %v3_1000b2183 = icmp eq i32 %v2_1000b18c, 0
  br i1 %v3_1000b2183, label %dec_label_pc_1000b220, label %dec_label_pc_1000b19c

dec_label_pc_1000b19c:                            ; preds = %dec_label_pc_1000b18c, %dec_label_pc_1000b214
  %v0_1000b214 = phi i32 [ %v3_1000b214, %dec_label_pc_1000b214 ], [ %v2_1000b18c, %dec_label_pc_1000b18c ]
  %v1_1000b19c = inttoptr i32 %v0_1000b214 to i32*
  %v2_1000b19c = load i32, i32* %v1_1000b19c, align 4
  %v2_1000b1a0 = sub i32 %v0_1000b214, %v2_1000b19c
  %v1_1000b1a4 = add i32 %v2_1000b1a0, 12
  %v3_1000b1a8 = icmp ugt i32 %v1_1000b1a4, %arg2
  br i1 %v3_1000b1a8, label %dec_label_pc_1000b214, label %dec_label_pc_1000b1b0

dec_label_pc_1000b1b0:                            ; preds = %dec_label_pc_1000b19c
  %v4_1000b1a8 = icmp eq i32 %v1_1000b1a4, %arg2
  br i1 %v4_1000b1a8, label %dec_label_pc_1000b1b8, label %dec_label_pc_1000b220

dec_label_pc_1000b1b8:                            ; preds = %dec_label_pc_1000b1b0
  %v1_1000b1b8 = call i32 @__asm_rlwinm(i32 %v1_1000b194, i32 0, i32 0, i32 29)
  %v2_1000b1bc = icmp ult i32 %v2_1000b19c, %v1_1000b1b8
  br i1 %v2_1000b1bc, label %dec_label_pc_1000b220, label %dec_label_pc_1000b1c4

dec_label_pc_1000b1c4:                            ; preds = %dec_label_pc_1000b1b8
  %v1_1000b1c4 = add i32 %v1_1000b1b8, 44
  %v2_1000b1c8 = icmp ult i32 %v2_1000b19c, %v1_1000b1c4
  br i1 %v2_1000b1c8, label %dec_label_pc_1000b1d0, label %dec_label_pc_1000b204

dec_label_pc_1000b1d0:                            ; preds = %dec_label_pc_1000b1c4
  %v0_1000b1d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b1d0 = add i32 %v0_1000b1d0, 4
  %v2_1000b1d0 = inttoptr i32 %v1_1000b1d0 to i32*
  %v3_1000b1d0 = load i32, i32* %v2_1000b1d0, align 4
  %v3_1000b1d4 = icmp eq i32 %v3_1000b1d0, 0
  br i1 %v3_1000b1d4, label %dec_label_pc_1000b1e4, label %dec_label_pc_1000b1dc

dec_label_pc_1000b1dc:                            ; preds = %dec_label_pc_1000b1d0
  %v1_1000b1dc = add i32 %v0_1000b1d0, 8
  %v2_1000b1dc = inttoptr i32 %v1_1000b1dc to i32*
  %v3_1000b1dc = load i32, i32* %v2_1000b1dc, align 4
  %v2_1000b1e0 = add i32 %v3_1000b1d0, 8
  %v3_1000b1e0 = inttoptr i32 %v2_1000b1e0 to i32*
  store i32 %v3_1000b1dc, i32* %v3_1000b1e0, align 4
  %v0_1000b1e4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b1e4

dec_label_pc_1000b1e4:                            ; preds = %dec_label_pc_1000b1d0, %dec_label_pc_1000b1dc
  %v0_1000b1e4 = phi i32 [ %v0_1000b1d0, %dec_label_pc_1000b1d0 ], [ %v0_1000b1e4.pre, %dec_label_pc_1000b1dc ]
  %v1_1000b1e4 = add i32 %v0_1000b1e4, 8
  %v2_1000b1e4 = inttoptr i32 %v1_1000b1e4 to i32*
  %v3_1000b1e4 = load i32, i32* %v2_1000b1e4, align 4
  %v1_1000b1e8 = add i32 %v0_1000b1e4, 4
  %v2_1000b1e8 = inttoptr i32 %v1_1000b1e8 to i32*
  %v3_1000b1e8 = load i32, i32* %v2_1000b1e8, align 4
  %v3_1000b1ec = icmp eq i32 %v3_1000b1e4, 0
  br i1 %v3_1000b1ec, label %dec_label_pc_1000b1fc, label %dec_label_pc_1000b1f4

dec_label_pc_1000b1f4:                            ; preds = %dec_label_pc_1000b1e4
  %v2_1000b1f4 = add i32 %v3_1000b1e4, 4
  %v3_1000b1f4 = inttoptr i32 %v2_1000b1f4 to i32*
  store i32 %v3_1000b1e8, i32* %v3_1000b1f4, align 4
  ret i32 %v2_1000b19c

dec_label_pc_1000b1fc:                            ; preds = %dec_label_pc_1000b1e4
  %v1_1000b1fc = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b1fc = inttoptr i32 %v1_1000b1fc to i32*
  store i32 %v3_1000b1e8, i32* %v2_1000b1fc, align 4
  ret i32 %v2_1000b19c

dec_label_pc_1000b204:                            ; preds = %dec_label_pc_1000b1c4
  %v2_1000b204 = sub i32 %v2_1000b19c, %v1_1000b1b8
  %v1_1000b20c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b20c = inttoptr i32 %v1_1000b20c to i32*
  store i32 %v2_1000b204, i32* %v2_1000b20c, align 4
  ret i32 %v1_1000b1b8

dec_label_pc_1000b214:                            ; preds = %dec_label_pc_1000b19c
  %v1_1000b214 = add i32 %v0_1000b214, 4
  %v2_1000b214 = inttoptr i32 %v1_1000b214 to i32*
  %v3_1000b214 = load i32, i32* %v2_1000b214, align 4
  store i32 %v3_1000b214, i32* %r11.global-to-local, align 4
  %v3_1000b218 = icmp eq i32 %v3_1000b214, 0
  br i1 %v3_1000b218, label %dec_label_pc_1000b218.dec_label_pc_1000b220.loopexit_crit_edge, label %dec_label_pc_1000b19c

dec_label_pc_1000b218.dec_label_pc_1000b220.loopexit_crit_edge: ; preds = %dec_label_pc_1000b214
  br label %dec_label_pc_1000b220

dec_label_pc_1000b220:                            ; preds = %dec_label_pc_1000b18c, %dec_label_pc_1000b218.dec_label_pc_1000b220.loopexit_crit_edge, %dec_label_pc_1000b1b0, %dec_label_pc_1000b1b8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000b214, { 1, 2, 0 }
  uselistorder i32 %v0_1000b1e4, { 1, 0 }
  uselistorder i32 %v1_1000b1b8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000b19c, { 1, 0, 3, 4, 2, 5 }
  uselistorder i32 %v0_1000b214, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000b220, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000b1e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b19c, { 1, 0 }
}

define i32 @function_1000b228(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b228:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000b228 = icmp eq i32 %arg3, 0
  %v2_1000b22c = add i32 %arg2, 4
  %v3_1000b22c = inttoptr i32 %v2_1000b22c to i32*
  store i32 %arg4, i32* %v3_1000b22c, align 4
  %v2_1000b230 = add i32 %arg2, 8
  %v3_1000b230 = inttoptr i32 %v2_1000b230 to i32*
  store i32 %arg3, i32* %v3_1000b230, align 4
  br i1 %v3_1000b228, label %dec_label_pc_1000b240, label %dec_label_pc_1000b238

dec_label_pc_1000b238:                            ; preds = %dec_label_pc_1000b228
  %v2_1000b238 = add i32 %arg3, 4
  %v3_1000b238 = inttoptr i32 %v2_1000b238 to i32*
  store i32 %arg2, i32* %v3_1000b238, align 4
  br label %dec_label_pc_1000b244

dec_label_pc_1000b240:                            ; preds = %dec_label_pc_1000b228
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000b244

dec_label_pc_1000b244:                            ; preds = %dec_label_pc_1000b238, %dec_label_pc_1000b240
  %v3_1000b244 = icmp eq i32 %arg4, 0
  %v0_1000b248 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b244, i32 %v0_1000b248)
  %v2_1000b24c = add i32 %arg4, 8
  %v3_1000b24c = inttoptr i32 %v2_1000b24c to i32*
  store i32 %arg2, i32* %v3_1000b24c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000b244, { 1, 0 }
}

define i32 @function_1000b254(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b254:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000b254 = icmp eq i32 %arg3, 0
  br i1 %v3_1000b254, label %dec_label_pc_1000b264, label %dec_label_pc_1000b25c

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b254
  %v2_1000b25c = add i32 %arg3, 4
  %v3_1000b25c = inttoptr i32 %v2_1000b25c to i32*
  store i32 %arg2, i32* %v3_1000b25c, align 4
  br label %dec_label_pc_1000b268

dec_label_pc_1000b264:                            ; preds = %dec_label_pc_1000b254
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000b268

dec_label_pc_1000b268:                            ; preds = %dec_label_pc_1000b25c, %dec_label_pc_1000b264
  %v2_1000b268 = add i32 %arg2, 8
  %v3_1000b268 = inttoptr i32 %v2_1000b268 to i32*
  store i32 %arg3, i32* %v3_1000b268, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b268, { 1, 0 }
}

define i32 @function_1000b270(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b270:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000b288 = load i32, i32* %arg1, align 4
  store i32 %v2_1000b288, i32* @r31, align 4
  %v2_1000b28c = add i32 %arg3, %arg2
  store i32 %v2_1000b28c, i32* %r3.global-to-local, align 4
  %v3_1000b2a07 = icmp eq i32 %v2_1000b288, 0
  %v1_1000b2a48 = add i32 %v2_1000b288, 12
  %tmp69 = icmp uge i32 %v1_1000b2a48, %arg2
  %or.cond10 = or i1 %v3_1000b2a07, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000b2b0, label %dec_label_pc_1000b298

dec_label_pc_1000b298:                            ; preds = %dec_label_pc_1000b270, %dec_label_pc_1000b298
  %v0_1000b2f811 = phi i32 [ %v3_1000b29c, %dec_label_pc_1000b298 ], [ %v2_1000b288, %dec_label_pc_1000b270 ]
  store i32 %v0_1000b2f811, i32* %r11.global-to-local, align 4
  %v1_1000b29c = add i32 %v0_1000b2f811, 4
  %v2_1000b29c = inttoptr i32 %v1_1000b29c to i32*
  %v3_1000b29c = load i32, i32* %v2_1000b29c, align 4
  store i32 %v3_1000b29c, i32* @r31, align 4
  %v3_1000b2a0 = icmp eq i32 %v3_1000b29c, 0
  %v1_1000b2a4 = add i32 %v3_1000b29c, 12
  %tmp6 = icmp uge i32 %v1_1000b2a4, %arg2
  %or.cond = or i1 %v3_1000b2a0, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000b2b0, label %dec_label_pc_1000b298

dec_label_pc_1000b2b0:                            ; preds = %dec_label_pc_1000b298, %dec_label_pc_1000b270
  %v0_1000b2ec.lcssa = phi i32 [ 0, %dec_label_pc_1000b270 ], [ %v0_1000b2f811, %dec_label_pc_1000b298 ]
  %v0_1000b2f8.lcssa = phi i32 [ %v2_1000b288, %dec_label_pc_1000b270 ], [ %v3_1000b29c, %dec_label_pc_1000b298 ]
  %v3_1000b2a0.lcssa = phi i1 [ %v3_1000b2a07, %dec_label_pc_1000b270 ], [ %v3_1000b2a0, %dec_label_pc_1000b298 ]
  br i1 %v3_1000b2a0.lcssa, label %dec_label_pc_1000b368, label %dec_label_pc_1000b2b8

dec_label_pc_1000b2b8:                            ; preds = %dec_label_pc_1000b2b0
  %v1_1000b2b8 = inttoptr i32 %v0_1000b2f8.lcssa to i32*
  %v2_1000b2b8 = load i32, i32* %v1_1000b2b8, align 4
  %v2_1000b2bc = sub i32 %v0_1000b2f8.lcssa, %v2_1000b2b8
  %v1_1000b2c0 = add i32 %v2_1000b2bc, 12
  %v3_1000b2c4 = icmp ugt i32 %v1_1000b2c0, %v2_1000b28c
  br i1 %v3_1000b2c4, label %dec_label_pc_1000b368, label %dec_label_pc_1000b2cc

dec_label_pc_1000b2cc:                            ; preds = %dec_label_pc_1000b2b8
  %v4_1000b2c4 = icmp eq i32 %v1_1000b2c0, %v2_1000b28c
  %v2_1000b2d0 = add i32 %v2_1000b2b8, %arg3
  store i32 %v2_1000b2d0, i32* @r29, align 4
  br i1 %v4_1000b2c4, label %dec_label_pc_1000b2d8, label %dec_label_pc_1000b308

dec_label_pc_1000b2d8:                            ; preds = %dec_label_pc_1000b2cc
  %v3_1000b2d8 = icmp eq i32 %v0_1000b2ec.lcssa, 0
  br i1 %v3_1000b2d8, label %dec_label_pc_1000b35c, label %dec_label_pc_1000b2e0

dec_label_pc_1000b2e0:                            ; preds = %dec_label_pc_1000b2d8
  %v1_1000b2e0 = add i32 %v0_1000b2ec.lcssa, 12
  %v4_1000b2e4 = icmp eq i32 %v1_1000b2e0, %arg2
  br i1 %v4_1000b2e4, label %dec_label_pc_1000b2ec, label %dec_label_pc_1000b35c

dec_label_pc_1000b2ec:                            ; preds = %dec_label_pc_1000b2e0
  %v1_1000b2ec = inttoptr i32 %v0_1000b2ec.lcssa to i32*
  %v2_1000b2ec = load i32, i32* %v1_1000b2ec, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000b2f4 = add i32 %v0_1000b2ec.lcssa, 8
  %v2_1000b2f4 = inttoptr i32 %v1_1000b2f4 to i32*
  %v3_1000b2f4 = load i32, i32* %v2_1000b2f4, align 4
  %v2_1000b2fc = add i32 %v2_1000b2ec, %v2_1000b2d0
  store i32 %v2_1000b2fc, i32* @r29, align 4
  %v5_1000b300 = call i32 @function_1000b254(i32* %arg1, i32 %v0_1000b2f8.lcssa, i32 %v3_1000b2f4, i32 %v2_1000b28c)
  store i32 %v5_1000b300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b35c

dec_label_pc_1000b308:                            ; preds = %dec_label_pc_1000b2cc
  %v1_1000b308 = add i32 %v0_1000b2f8.lcssa, 4
  %v2_1000b308 = inttoptr i32 %v1_1000b308 to i32*
  %v3_1000b308 = load i32, i32* %v2_1000b308, align 4
  %v3_1000b30c = icmp eq i32 %v3_1000b308, 0
  br i1 %v3_1000b30c, label %dec_label_pc_1000b344, label %dec_label_pc_1000b314

dec_label_pc_1000b314:                            ; preds = %dec_label_pc_1000b308
  %v1_1000b314 = inttoptr i32 %v3_1000b308 to i32*
  %v2_1000b314 = load i32, i32* %v1_1000b314, align 4
  %v2_1000b318 = sub i32 %v3_1000b308, %v2_1000b314
  %v1_1000b31c = add i32 %v2_1000b318, 12
  %v4_1000b320 = icmp eq i32 %v2_1000b28c, %v1_1000b31c
  br i1 %v4_1000b320, label %dec_label_pc_1000b328, label %dec_label_pc_1000b344

dec_label_pc_1000b328:                            ; preds = %dec_label_pc_1000b314
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000b334 = add i32 %v2_1000b314, %v2_1000b2d0
  store i32 %v2_1000b334, i32* @r29, align 4
  store i32 %v3_1000b308, i32* @r31, align 4
  %v5_1000b33c = call i32 @function_1000b254(i32* %arg1, i32 %v3_1000b308, i32 %v0_1000b2ec.lcssa, i32 %v2_1000b28c)
  store i32 %v5_1000b33c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b35c

dec_label_pc_1000b344:                            ; preds = %dec_label_pc_1000b314, %dec_label_pc_1000b308
  %v2_1000b344 = add i32 %v0_1000b2f8.lcssa, %arg3
  store i32 %v2_1000b344, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268481372, i32* @lr, align 4
  %v5_1000b358 = call i32 @function_1000b228(i32* %arg1, i32 %v2_1000b344, i32 %v0_1000b2ec.lcssa, i32 %v3_1000b308)
  store i32 %v5_1000b358, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b35c

dec_label_pc_1000b35c:                            ; preds = %dec_label_pc_1000b2e0, %dec_label_pc_1000b2d8, %dec_label_pc_1000b328, %dec_label_pc_1000b2ec, %dec_label_pc_1000b344
  %v0_1000b35c = load i32, i32* @r31, align 4
  store i32 %v0_1000b35c, i32* @r30, align 4
  %v0_1000b360 = load i32, i32* @r29, align 4
  %v2_1000b360 = inttoptr i32 %v0_1000b35c to i32*
  store i32 %v0_1000b360, i32* %v2_1000b360, align 4
  br label %dec_label_pc_1000b384

dec_label_pc_1000b368:                            ; preds = %dec_label_pc_1000b2b8, %dec_label_pc_1000b2b0
  %v2_1000b368 = add i32 %v2_1000b28c, -12
  %v3_1000b368 = inttoptr i32 %v2_1000b368 to i32*
  store i32 %arg3, i32* %v3_1000b368, align 4
  %v0_1000b36c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b36c = add i32 %v0_1000b36c, -12
  store i32 %v1_1000b36c, i32* @r30, align 4
  %v0_1000b370 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000b374 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b374, i32* %r3.global-to-local, align 4
  %v0_1000b378 = load i32, i32* @r31, align 4
  store i32 268481412, i32* @lr, align 4
  %v4_1000b380 = inttoptr i32 %v0_1000b374 to i32*
  %v5_1000b380 = call i32 @function_1000b228(i32* %v4_1000b380, i32 %v1_1000b36c, i32 %v0_1000b370, i32 %v0_1000b378)
  store i32 %v5_1000b380, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b384

dec_label_pc_1000b384:                            ; preds = %dec_label_pc_1000b35c, %dec_label_pc_1000b368
  %v0_1000b388 = load i32, i32* @r30, align 4
  store i32 %v0_1000b388, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b388

; uselistorder directives
  uselistorder i32 %v3_1000b308, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000b2c0, { 1, 0 }
  uselistorder i32 %v0_1000b2f8.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000b2ec.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000b29c, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000b28c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000b384, { 1, 0 }
  uselistorder label %dec_label_pc_1000b35c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000b298, { 1, 0 }
}

define i32 @function_1000b39c() local_unnamed_addr {
dec_label_pc_1000b39c:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000b3b4 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000b3c0 = load i32, i32* @r3, align 4
  store i32 %v0_1000b3c0, i32* @r31, align 4
  store i32 %v2_1000b3b4, i32* @r3, align 4
  %v3_1000b3cc = call i32 @function_1000b690(i32 %v2_1000b3b4, i32 ptrtoint ([3 x i8]* @global_var_1000b688.453 to i32))
  %v0_1000b3d4 = call i32 @function_1000b688()
  %v3_1000b3dc = load i32, i32* @global_var_1001d270.474, align 4
  %v3_1000b3e0 = icmp eq i32 %v3_1000b3dc, 0
  br i1 %v3_1000b3e0, label %dec_label_pc_1000b3f4, label %dec_label_pc_1000b3e8

dec_label_pc_1000b3e8:                            ; preds = %dec_label_pc_1000b39c
  %v0_1000b3e8 = load i32, i32* @r31, align 4
  %v3_1000b3f0 = call i32 @unknown_0(i32 %v0_1000b3e8, i32 268566528)
  br label %dec_label_pc_1000b3f4

dec_label_pc_1000b3f4:                            ; preds = %dec_label_pc_1000b39c, %dec_label_pc_1000b3e8
  store i32 %v2_1000b3b4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000b3fc = call i32 @function_1000b690(i32 %v2_1000b3b4, i32 1)
  store i32 %v2_1000b3fc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b404.476 to i32), i32* @lr, align 4
  %v1_1000b400 = call i32 @function_1000b5f4(i32 %v2_1000b3fc)
  %v0_1000b418 = load i32, i32* @r31, align 4
  %v1_1000b41c = call i32 @function_1000ba28(i32 %v0_1000b418)
  ret i32 %v1_1000b41c

; uselistorder directives
  uselistorder i32 %v2_1000b3b4, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000b690, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000b3f4, { 1, 0 }
}

define i32 @function_1000b420(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b420:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000b420 = icmp eq i32 %arg1, 0
  br i1 %v3_1000b420, label %dec_label_pc_1000b5d4, label %dec_label_pc_1000b450.lr.ph

dec_label_pc_1000b450.lr.ph:                      ; preds = %dec_label_pc_1000b420
  %v2_1000b444 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000b444, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000b45042 = add i32 %v2_1000b444, 132
  %v3_1000b45043 = inttoptr i32 %v2_1000b45042 to i32*
  store i32 0, i32* %v3_1000b45043, align 4
  %v0_1000b45444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b45445 = add i32 %v0_1000b45444, -1
  store i32 %v1_1000b45445, i32* %r11.global-to-local, align 4
  %v1_1000b45846 = mul i32 %v1_1000b45445, 4
  %v1_1000b45c47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b45c48 = add i32 %v1_1000b45c47, %v1_1000b45846
  %v0_1000b46049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b46050 = add i32 %v0_1000b46049, -1
  store i32 %v1_1000b46050, i32* %ctr.global-to-local, align 4
  %v2_1000b46051 = icmp eq i32 %v1_1000b46050, 0
  br i1 %v2_1000b46051, label %dec_label_pc_1000b464, label %dec_label_pc_1000b450.dec_label_pc_1000b450_crit_edge

dec_label_pc_1000b450.dec_label_pc_1000b450_crit_edge: ; preds = %dec_label_pc_1000b450.lr.ph, %dec_label_pc_1000b450.dec_label_pc_1000b450_crit_edge
  %v2_1000b45c52 = phi i32 [ %v2_1000b45c, %dec_label_pc_1000b450.dec_label_pc_1000b450_crit_edge ], [ %v2_1000b45c48, %dec_label_pc_1000b450.lr.ph ]
  %v0_1000b450.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b450 = add i32 %v2_1000b45c52, 8
  %v3_1000b450 = inttoptr i32 %v2_1000b450 to i32*
  store i32 %v0_1000b450.pre, i32* %v3_1000b450, align 4
  %v0_1000b454 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b454 = add i32 %v0_1000b454, -1
  store i32 %v1_1000b454, i32* %r11.global-to-local, align 4
  %v1_1000b458 = mul i32 %v1_1000b454, 4
  %v1_1000b45c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b45c = add i32 %v1_1000b45c, %v1_1000b458
  %v0_1000b460 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b460 = add i32 %v0_1000b460, -1
  store i32 %v1_1000b460, i32* %ctr.global-to-local, align 4
  %v2_1000b460 = icmp eq i32 %v1_1000b460, 0
  br i1 %v2_1000b460, label %dec_label_pc_1000b464, label %dec_label_pc_1000b450.dec_label_pc_1000b450_crit_edge

dec_label_pc_1000b464:                            ; preds = %dec_label_pc_1000b450.dec_label_pc_1000b450_crit_edge, %dec_label_pc_1000b450.lr.ph
  %v0_1000b478.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b464 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000b464, i32* @r29, align 4
  store i32 %v2_1000b464, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000b478.pre, i32* %stack_var_-440, align 4
  %v0_1000b47c = call i32 @function_1000aca4()
  store i32 %v0_1000b47c, i32* %r3.global-to-local, align 4
  %v1_1000b480 = icmp slt i32 %v0_1000b47c, 0
  br i1 %v1_1000b480, label %dec_label_pc_1000b5dc, label %dec_label_pc_1000b488

dec_label_pc_1000b488:                            ; preds = %dec_label_pc_1000b464
  %v2_1000b488 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000b488, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268481692, i32* @lr, align 4
  %v3_1000b498 = call i32 @function_1000a140(i32 0, i32 %v2_1000b464, i32 %v2_1000b488)
  store i32 %v3_1000b498, i32* %r3.global-to-local, align 4
  %v3_1000b49c = icmp eq i32 %v3_1000b498, 0
  br i1 %v3_1000b49c, label %dec_label_pc_1000b4a4, label %dec_label_pc_1000b5dc

dec_label_pc_1000b4a4:                            ; preds = %dec_label_pc_1000b488
  store i32 %v2_1000b488, i32* %r3.global-to-local, align 4
  %v2_1000b4ac = call i32 @function_1000ac7c(i32 %v2_1000b488, i32 17)
  store i32 %v2_1000b4ac, i32* %r3.global-to-local, align 4
  %v3_1000b4b0 = icmp eq i32 %v2_1000b4ac, 0
  br i1 %v3_1000b4b0, label %dec_label_pc_1000b4d0.lr.ph, label %dec_label_pc_1000b59c

dec_label_pc_1000b4d0.lr.ph:                      ; preds = %dec_label_pc_1000b4a4
  store i32 %v2_1000b444, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000b45043, align 4
  %v0_1000b4d433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b4d434 = add i32 %v0_1000b4d433, -1
  store i32 %v1_1000b4d434, i32* %r11.global-to-local, align 4
  %v1_1000b4d835 = mul i32 %v1_1000b4d434, 4
  %v1_1000b4dc36 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b4dc37 = add i32 %v1_1000b4dc36, %v1_1000b4d835
  %v0_1000b4e038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b4e039 = add i32 %v0_1000b4e038, -1
  store i32 %v1_1000b4e039, i32* %ctr.global-to-local, align 4
  %v2_1000b4e040 = icmp eq i32 %v1_1000b4e039, 0
  br i1 %v2_1000b4e040, label %dec_label_pc_1000b4e4, label %dec_label_pc_1000b4d0.dec_label_pc_1000b4d0_crit_edge

dec_label_pc_1000b4d0.dec_label_pc_1000b4d0_crit_edge: ; preds = %dec_label_pc_1000b4d0.lr.ph, %dec_label_pc_1000b4d0.dec_label_pc_1000b4d0_crit_edge
  %v2_1000b4dc41 = phi i32 [ %v2_1000b4dc, %dec_label_pc_1000b4d0.dec_label_pc_1000b4d0_crit_edge ], [ %v2_1000b4dc37, %dec_label_pc_1000b4d0.lr.ph ]
  %v0_1000b4d0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b4d0 = add i32 %v2_1000b4dc41, 8
  %v3_1000b4d0 = inttoptr i32 %v2_1000b4d0 to i32*
  store i32 %v0_1000b4d0.pre, i32* %v3_1000b4d0, align 4
  %v0_1000b4d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b4d4 = add i32 %v0_1000b4d4, -1
  store i32 %v1_1000b4d4, i32* %r11.global-to-local, align 4
  %v1_1000b4d8 = mul i32 %v1_1000b4d4, 4
  %v1_1000b4dc = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b4dc = add i32 %v1_1000b4dc, %v1_1000b4d8
  %v0_1000b4e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b4e0 = add i32 %v0_1000b4e0, -1
  store i32 %v1_1000b4e0, i32* %ctr.global-to-local, align 4
  %v2_1000b4e0 = icmp eq i32 %v1_1000b4e0, 0
  br i1 %v2_1000b4e0, label %dec_label_pc_1000b4e4, label %dec_label_pc_1000b4d0.dec_label_pc_1000b4d0_crit_edge

dec_label_pc_1000b4e4:                            ; preds = %dec_label_pc_1000b4d0.dec_label_pc_1000b4d0_crit_edge, %dec_label_pc_1000b4d0.lr.ph
  store i32 %v2_1000b464, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000b4ec = call i32 @function_1000aca4()
  store i32 %v0_1000b4ec, i32* %r3.global-to-local, align 4
  %v1_1000b4f0 = icmp slt i32 %v0_1000b4ec, 0
  br i1 %v1_1000b4f0, label %dec_label_pc_1000b5dc, label %dec_label_pc_1000b4f8

dec_label_pc_1000b4f8:                            ; preds = %dec_label_pc_1000b4e4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000b500 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268481800, i32* @lr, align 4
  %v4_1000b504 = call i32 @function_1000c26c(i32 17, i32* null, i32 %v2_1000b500)
  store i32 %v4_1000b504, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000b504, -1
  br i1 %tmp30, label %dec_label_pc_1000b538, label %dec_label_pc_1000b510

dec_label_pc_1000b510:                            ; preds = %dec_label_pc_1000b4f8
  %v0_1000b510 = call i32 @function_1000a4bc()
  store i32 %v0_1000b510, i32* %r3.global-to-local, align 4
  %v1_1000b518 = inttoptr i32 %v0_1000b510 to i32*
  %v2_1000b518 = load i32, i32* %v1_1000b518, align 4
  store i32 %v2_1000b518, i32* @r28, align 4
  store i32 %v0_1000b510, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268481836, i32* @lr, align 4
  %v3_1000b528 = call i32 @function_1000a140(i32 2, i32 %v2_1000b488, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000b530 = load i32, i32* @r28, align 4
  %v1_1000b530 = load i32, i32* @r29, align 4
  %v2_1000b530 = inttoptr i32 %v1_1000b530 to i32*
  store i32 %v0_1000b530, i32* %v2_1000b530, align 4
  %v0_1000b5f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b5e0

dec_label_pc_1000b538:                            ; preds = %dec_label_pc_1000b4f8
  %v3_1000b538 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000b488, i32* @r28, align 4
  %v3_1000b544 = icmp eq i32 %v3_1000b538, 1
  br i1 %v3_1000b544, label %dec_label_pc_1000b54c, label %dec_label_pc_1000b580

dec_label_pc_1000b54c:                            ; preds = %dec_label_pc_1000b538
  store i32 %v2_1000b444, i32* %r3.global-to-local, align 4
  store i32 268481880, i32* @lr, align 4
  %v2_1000b554 = call i32 @function_1000be60(i32 %v2_1000b444, i32 %v2_1000b444)
  store i32 %v2_1000b554, i32* %r3.global-to-local, align 4
  store i32 %v2_1000b554, i32* @r31, align 4
  %v0_1000b55c = call i32 @function_1000a4bc()
  store i32 %v0_1000b55c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000b55c, i32* @r29, align 4
  %v1_1000b56c = inttoptr i32 %v0_1000b55c to i32*
  %v2_1000b56c = load i32, i32* %v1_1000b56c, align 4
  store i32 %v2_1000b56c, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268481912, i32* @lr, align 4
  %v3_1000b574 = call i32 @function_1000a140(i32 2, i32 %v2_1000b488, i32 0)
  store i32 %v3_1000b574, i32* %r3.global-to-local, align 4
  %v0_1000b578 = load i32, i32* @r28, align 4
  %v1_1000b578 = load i32, i32* @r29, align 4
  %v2_1000b578 = inttoptr i32 %v1_1000b578 to i32*
  store i32 %v0_1000b578, i32* %v2_1000b578, align 4
  %v0_1000b5a8.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b5a8

dec_label_pc_1000b580:                            ; preds = %dec_label_pc_1000b538
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268481936, i32* @lr, align 4
  %v3_1000b58c = call i32 @function_1000a140(i32 2, i32 %v2_1000b488, i32 0)
  br label %dec_label_pc_1000b59c

dec_label_pc_1000b59c:                            ; preds = %dec_label_pc_1000b4a4, %dec_label_pc_1000b580
  store i32 %v2_1000b444, i32* %r3.global-to-local, align 4
  store i32 268481956, i32* @lr, align 4
  %v2_1000b5a0 = call i32 @function_1000be60(i32 %v2_1000b444, i32 %v2_1000b444)
  store i32 %v2_1000b5a0, i32* %r3.global-to-local, align 4
  store i32 %v2_1000b5a0, i32* @r31, align 4
  br label %dec_label_pc_1000b5a8

dec_label_pc_1000b5a8:                            ; preds = %dec_label_pc_1000b54c, %dec_label_pc_1000b59c
  %v0_1000b5a8 = phi i32 [ %v0_1000b5a8.pr, %dec_label_pc_1000b54c ], [ %v2_1000b5a0, %dec_label_pc_1000b59c ]
  %v3_1000b5a8 = icmp eq i32 %v0_1000b5a8, 0
  br i1 %v3_1000b5a8, label %dec_label_pc_1000b5d4, label %dec_label_pc_1000b5b0

dec_label_pc_1000b5b0:                            ; preds = %dec_label_pc_1000b5a8
  %v3_1000b5c0 = load i32, i32* %stack_var_-440, align 4
  %v0_1000b5c4 = call i32 @__asm_mfcr()
  store i32 %v0_1000b5c4, i32* %r3.global-to-local, align 4
  %v1_1000b5c8 = call i32 @__asm_rlwinm(i32 %v0_1000b5c4, i32 30, i32 31, i32 31)
  %v2_1000b5cc = add i32 %v3_1000b5c0, %v1_1000b5c8
  store i32 %v2_1000b5cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b5e0

dec_label_pc_1000b5d4:                            ; preds = %dec_label_pc_1000b5a8, %dec_label_pc_1000b420
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b5e0

dec_label_pc_1000b5dc:                            ; preds = %dec_label_pc_1000b488, %dec_label_pc_1000b4e4, %dec_label_pc_1000b464
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b5e0

dec_label_pc_1000b5e0:                            ; preds = %dec_label_pc_1000b5d4, %dec_label_pc_1000b5b0, %dec_label_pc_1000b510, %dec_label_pc_1000b5dc
  %v0_1000b5f0 = phi i32 [ 0, %dec_label_pc_1000b5d4 ], [ %v2_1000b5cc, %dec_label_pc_1000b5b0 ], [ %v0_1000b5f0.pre, %dec_label_pc_1000b510 ], [ -1, %dec_label_pc_1000b5dc ]
  ret i32 %v0_1000b5f0

; uselistorder directives
  uselistorder i32 %v1_1000b4e0, { 1, 0 }
  uselistorder i32 %v2_1000b488, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000b460, { 1, 0 }
  uselistorder i32 %v2_1000b444, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 1, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 3, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000be60, { 1, 0 }
  uselistorder i32 17, { 2, 28, 29, 3, 30, 13, 14, 4, 5, 15, 16, 17, 6, 18, 7, 8, 19, 9, 20, 21, 22, 10, 12, 11, 23, 0, 24, 1, 25, 26, 27 }
  uselistorder label %dec_label_pc_1000b5e0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b5dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b5a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b59c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b4d0.dec_label_pc_1000b4d0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b450.dec_label_pc_1000b450_crit_edge, { 1, 0 }
}

define i32 @function_1000b5f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b644:
  %v3_1000b648 = load i32, i32* @global_var_1001d280.478, align 4
  %v3_1000b64c = icmp eq i32 %v3_1000b648, 0
  br i1 %v3_1000b64c, label %dec_label_pc_1000b65c, label %dec_label_pc_1000b654

dec_label_pc_1000b654:                            ; preds = %dec_label_pc_1000b644
  %v2_1000b658 = load i32, i32* @r4, align 4
  %v3_1000b658 = call i32 @unknown_0(i32 268566528, i32 %v2_1000b658)
  store i32 %v3_1000b658, i32* @r3, align 4
  br label %dec_label_pc_1000b65c

dec_label_pc_1000b65c:                            ; preds = %dec_label_pc_1000b644, %dec_label_pc_1000b654
  %v3_1000b660 = load i32, i32* @global_var_1001d284.479, align 4
  %v3_1000b664 = icmp eq i32 %v3_1000b660, 0
  br i1 %v3_1000b664, label %dec_label_pc_1000b65c.dec_label_pc_1000b674_crit_edge, label %dec_label_pc_1000b66c

dec_label_pc_1000b65c.dec_label_pc_1000b674_crit_edge: ; preds = %dec_label_pc_1000b65c
  %v0_1000b684.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000b674

dec_label_pc_1000b66c:                            ; preds = %dec_label_pc_1000b65c
  %v2_1000b670 = load i32, i32* @r4, align 4
  %v3_1000b670 = call i32 @unknown_0(i32 268566528, i32 %v2_1000b670)
  br label %dec_label_pc_1000b674

dec_label_pc_1000b674:                            ; preds = %dec_label_pc_1000b65c.dec_label_pc_1000b674_crit_edge, %dec_label_pc_1000b66c
  %v0_1000b684 = phi i32 [ %v0_1000b684.pre, %dec_label_pc_1000b65c.dec_label_pc_1000b674_crit_edge ], [ %v3_1000b670, %dec_label_pc_1000b66c ]
  ret i32 %v0_1000b684

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b674, { 1, 0 }
  uselistorder label %dec_label_pc_1000b65c, { 1, 0 }
}

define i32 @function_1000b688() local_unnamed_addr {
dec_label_pc_1000b688:
  ret i32 0
}

define i32 @function_1000b690(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b690:
  %v0_1000b690 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b690
}

define i32 @function_1000b694(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b694:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268482232, i32* @lr, align 4
  %v1_1000b6b4 = call i32 @function_10009d00(i32 1)
  %v3_1000b6b8 = icmp eq i32 %v1_1000b6b4, -1
  br i1 %v3_1000b6b8, label %dec_label_pc_1000b6c0, label %dec_label_pc_1000b6e0

dec_label_pc_1000b6c0:                            ; preds = %dec_label_pc_1000b694
  %v0_1000b6c4 = load i32, i32* @r30, align 4
  store i32 268482260, i32* @lr, align 4
  %v3_1000b6d0 = call i32 @function_10009f50(i32 ptrtoint ([10 x i8]* @global_var_1000cda0.480 to i32), i32 %v0_1000b6c4)
  %v1_1000b6d4 = load i32, i32* @r31, align 4
  %v4_1000b6d4 = icmp eq i32 %v3_1000b6d0, %v1_1000b6d4
  br i1 %v4_1000b6d4, label %dec_label_pc_1000b6e0, label %dec_label_pc_1000b6dc

dec_label_pc_1000b6dc:                            ; preds = %dec_label_pc_1000b6c0
  %v1_1000b6dc = call i32 @function_1000c330(i32 %v3_1000b6d0)
  br label %dec_label_pc_1000b6e0

dec_label_pc_1000b6e0:                            ; preds = %dec_label_pc_1000b694, %dec_label_pc_1000b6c0, %dec_label_pc_1000b6dc
  %v0_1000b6f0 = phi i32 [ %v1_1000b6b4, %dec_label_pc_1000b694 ], [ %v3_1000b6d0, %dec_label_pc_1000b6c0 ], [ %v1_1000b6dc, %dec_label_pc_1000b6dc ]
  ret i32 %v0_1000b6f0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009f50, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @function_10009d00, { 0, 3, 11, 10, 13, 12, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder label %dec_label_pc_1000b6e0, { 2, 1, 0 }
}

define i32 @function_1000b6f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b6f4:
  %v3_1000b714 = load i32, i32* @global_var_1001d288.481, align 4
  %v3_1000b718 = icmp eq i32 %v3_1000b714, 0
  br i1 %v3_1000b718, label %dec_label_pc_1000b73c, label %dec_label_pc_1000b760

dec_label_pc_1000b73c:                            ; preds = %dec_label_pc_1000b6f4
  store i32 1, i32* @global_var_1001d288.481, align 4
  store i32 4096, i32* @global_var_1001d27c.465, align 4
  br label %dec_label_pc_1000b760

dec_label_pc_1000b760:                            ; preds = %dec_label_pc_1000b73c, %dec_label_pc_1000b6f4
  %v0_1000b770 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b770
}

define i32 @function_1000b774(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000b774:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000b78c = mul i32 %arg2, 4
  %v2_1000b790 = add i32 %tmp, %v1_1000b78c
  %v0_1000b794 = load i32, i32* @r9, align 4
  store i32 %v0_1000b794, i32* @global_var_1001d274.483, align 4
  %v1_1000b798 = add i32 %v2_1000b790, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b798, i32* @global_var_1001d278.484, align 4
  store i32 %arg6, i32* @global_var_1001d284.479, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000b7b8 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000b7c0 = icmp eq i32 %v1_1000b798, %v2_1000b7b8
  br i1 %v4_1000b7c0, label %dec_label_pc_1000b7c8, label %dec_label_pc_1000b7cc

dec_label_pc_1000b7c8:                            ; preds = %dec_label_pc_1000b774
  store i32 %v2_1000b790, i32* @global_var_1001d278.484, align 4
  br label %dec_label_pc_1000b7cc

dec_label_pc_1000b7cc:                            ; preds = %dec_label_pc_1000b774, %dec_label_pc_1000b7c8
  %v2_1000b7cc = ptrtoint i32* %stack_var_-168 to i32
  store i32 268482524, i32* @lr, align 4
  %v3_1000b7d8 = call i32 @function_1000a5a4(i32 %v2_1000b7cc, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001d278.484, align 4
  br label %dec_label_pc_1000b7e8

dec_label_pc_1000b7e8:                            ; preds = %dec_label_pc_1000b7e8, %dec_label_pc_1000b7cc
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000b7cc ], [ %v1_1000b7ec, %dec_label_pc_1000b7e8 ]
  %v1_1000b7e8 = inttoptr i32 %storemerge to i32*
  %v2_1000b7e8 = load i32, i32* %v1_1000b7e8, align 4
  %v1_1000b7ec = add i32 %storemerge, 4
  %v3_1000b7f0 = icmp eq i32 %v2_1000b7e8, 0
  br i1 %v3_1000b7f0, label %dec_label_pc_1000b7f8, label %dec_label_pc_1000b7e8

dec_label_pc_1000b7f8:                            ; preds = %dec_label_pc_1000b7e8
  store i32 %v1_1000b7ec, i32* %r29.global-to-local, align 4
  %v1_1000b82412 = inttoptr i32 %v1_1000b7ec to i32*
  %v2_1000b82413 = load i32, i32* %v1_1000b82412, align 4
  %v3_1000b82816 = icmp eq i32 %v2_1000b82413, 0
  br i1 %v3_1000b82816, label %dec_label_pc_1000b830, label %dec_label_pc_1000b800

dec_label_pc_1000b800:                            ; preds = %dec_label_pc_1000b7f8, %dec_label_pc_1000b820
  %v0_1000b814 = phi i32 [ %v1_1000b820, %dec_label_pc_1000b820 ], [ %v1_1000b7ec, %dec_label_pc_1000b7f8 ]
  %v0_1000b808 = phi i32 [ %v2_1000b824, %dec_label_pc_1000b820 ], [ %v2_1000b82413, %dec_label_pc_1000b7f8 ]
  %v2_1000b800 = icmp ugt i32 %v0_1000b808, 14
  br i1 %v2_1000b800, label %dec_label_pc_1000b820, label %dec_label_pc_1000b808

dec_label_pc_1000b808:                            ; preds = %dec_label_pc_1000b800
  %v1_1000b808 = mul i32 %v0_1000b808, 8
  %v2_1000b810 = add i32 %v1_1000b808, %v2_1000b7cc
  store i32 %v2_1000b810, i32* @r3, align 4
  store i32 %v0_1000b814, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268482592, i32* @lr, align 4
  %v0_1000b81c = call i32 @function_1000c0dc()
  %v0_1000b820.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b820

dec_label_pc_1000b820:                            ; preds = %dec_label_pc_1000b800, %dec_label_pc_1000b808
  %v0_1000b820 = phi i32 [ %v0_1000b814, %dec_label_pc_1000b800 ], [ %v0_1000b820.pre, %dec_label_pc_1000b808 ]
  %v1_1000b820 = add i32 %v0_1000b820, 8
  store i32 %v1_1000b820, i32* %r29.global-to-local, align 4
  %v1_1000b824 = inttoptr i32 %v1_1000b820 to i32*
  %v2_1000b824 = load i32, i32* %v1_1000b824, align 4
  %v3_1000b828 = icmp eq i32 %v2_1000b824, 0
  br i1 %v3_1000b828, label %dec_label_pc_1000b830, label %dec_label_pc_1000b800

dec_label_pc_1000b830:                            ; preds = %dec_label_pc_1000b820, %dec_label_pc_1000b7f8
  %v1_1000b834 = call i32 @function_1000c480(i32 %v2_1000b7cc)
  store i32 %v1_1000b834, i32* @r3, align 4
  store i32 268482620, i32* @lr, align 4
  %v1_1000b838 = call i32 @function_1000b6f4(i32 %v1_1000b834)
  %v3_1000b840 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000b840, label %dec_label_pc_1000b848, label %dec_label_pc_1000b84c

dec_label_pc_1000b848:                            ; preds = %dec_label_pc_1000b830
  br label %dec_label_pc_1000b84c

dec_label_pc_1000b84c:                            ; preds = %dec_label_pc_1000b830, %dec_label_pc_1000b848
  %v0_1000b854 = phi i32 [ %tmp27, %dec_label_pc_1000b830 ], [ 4096, %dec_label_pc_1000b848 ]
  store i32 %v0_1000b854, i32* @global_var_1001d27c.465, align 4
  %v3_1000b858 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000b858, label %dec_label_pc_1000b860, label %dec_label_pc_1000b894

dec_label_pc_1000b860:                            ; preds = %dec_label_pc_1000b84c
  store i32 268482660, i32* @lr, align 4
  %v1_1000b860 = call i32 @function_1000bd98(i32 268566528)
  store i32 %v1_1000b860, i32* %r29.global-to-local, align 4
  store i32 268482668, i32* @lr, align 4
  %v0_1000b868 = call i32 @function_1000bd08()
  %v4_1000b86c = icmp eq i32 %v1_1000b860, %v0_1000b868
  br i1 %v4_1000b86c, label %dec_label_pc_1000b874, label %dec_label_pc_1000b8b0

dec_label_pc_1000b874:                            ; preds = %dec_label_pc_1000b860
  store i32 268482680, i32* @lr, align 4
  %v1_1000b874 = call i32 @function_1000bd50(i32 %v0_1000b868)
  store i32 %v1_1000b874, i32* %r29.global-to-local, align 4
  store i32 268482688, i32* @lr, align 4
  %v0_1000b87c = call i32 @function_1000bcc0()
  %v4_1000b880 = icmp eq i32 %v1_1000b874, %v0_1000b87c
  br i1 %v4_1000b880, label %dec_label_pc_1000b888.thread, label %dec_label_pc_1000b8b0

dec_label_pc_1000b888.thread:                     ; preds = %dec_label_pc_1000b874
  br label %dec_label_pc_1000b8e0

dec_label_pc_1000b894:                            ; preds = %dec_label_pc_1000b84c
  %v4_1000b898 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000b898, label %dec_label_pc_1000b8a0, label %dec_label_pc_1000b8b0

dec_label_pc_1000b8a0:                            ; preds = %dec_label_pc_1000b894
  br label %dec_label_pc_1000b8b0

dec_label_pc_1000b8b0:                            ; preds = %dec_label_pc_1000b8a0, %dec_label_pc_1000b894, %dec_label_pc_1000b874, %dec_label_pc_1000b860
  store i32 268482752, i32* @lr, align 4
  %v2_1000b8bc = call i32 @function_1000b694(i32 0, i32 32768)
  store i32 268482768, i32* @lr, align 4
  %v2_1000b8cc = call i32 @function_1000b694(i32 1, i32 32770)
  store i32 268482784, i32* @lr, align 4
  %v2_1000b8dc = call i32 @function_1000b694(i32 2, i32 32770)
  br label %dec_label_pc_1000b8e0

dec_label_pc_1000b8e0:                            ; preds = %dec_label_pc_1000b888.thread, %dec_label_pc_1000b8b0
  %v0_1000b8ec = load i32, i32* @r30, align 4
  %v1_1000b8ec = inttoptr i32 %v0_1000b8ec to i32*
  %v2_1000b8ec = load i32, i32* %v1_1000b8ec, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000b8ec, i32* inttoptr (i32 268554788 to i32*), align 4
  %v0_1000b90c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000b90c, i32* @global_var_1001d280.478, align 4
  br i1 false, label %dec_label_pc_1000b914, label %dec_label_pc_1000b98c

dec_label_pc_1000b914:                            ; preds = %dec_label_pc_1000b8e0, %dec_label_pc_1000b914
  br i1 undef, label %dec_label_pc_1000b914, label %dec_label_pc_1000b98c

dec_label_pc_1000b98c:                            ; preds = %dec_label_pc_1000b914, %dec_label_pc_1000b8e0
  %v0_1000b938 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000b938)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000b99c = call i32 @function_1000a4bc()
  %v2_1000b9a4 = inttoptr i32 %v0_1000b99c to i32*
  store i32 0, i32* %v2_1000b9a4, align 4
  %v0_1000b9d0 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000b9d0)
  %v0_1000b9dc = call i32 @function_1000b39c()
  ret i32 %v0_1000b9dc

; uselistorder directives
  uselistorder i32 %v2_1000b824, { 1, 0 }
  uselistorder i32 %v1_1000b820, { 2, 1, 0 }
  uselistorder i32 %v1_1000b7ec, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000b7cc, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000b39c, { 0, 4, 3, 2, 1 }
  uselistorder i1 false, { 0, 9, 10, 11, 3, 1, 4, 5, 6, 12, 13, 14, 15, 18, 16, 17, 7, 8, 2 }
  uselistorder i32 (i32, i32)* @function_1000b694, { 2, 1, 0 }
  uselistorder i32 4096, { 0, 2, 6, 3, 7, 4, 8, 5, 1 }
  uselistorder i32 14, { 32, 0, 4, 5, 15, 6, 7, 16, 8, 9, 17, 10, 11, 18, 19, 12, 13, 20, 14, 21, 22, 23, 1, 24, 25, 26, 2, 27, 28, 29, 30, 31, 3 }
  uselistorder i32* @r9, { 7, 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1000b914, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b84c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b820, { 1, 0 }
  uselistorder label %dec_label_pc_1000b800, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7cc, { 1, 0 }
}

define i32 @function_1000b9e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b9e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b9f8 = call i32 @__asm_mfcr()
  %v1_1000b9fc = and i32 %v0_1000b9f8, 268435456
  %v3_1000b9fc = icmp eq i32 %v1_1000b9fc, 0
  store i32 %v0_1000b9f8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b9fc, label %dec_label_pc_1000ba14, label %dec_label_pc_1000ba08

dec_label_pc_1000ba08:                            ; preds = %dec_label_pc_1000b9e0
  %v0_1000ba08 = call i32 @function_1000a4bc()
  %v0_1000ba0c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ba0c = inttoptr i32 %v0_1000ba08 to i32*
  store i32 %v0_1000ba0c, i32* %v2_1000ba0c, align 4
  br label %dec_label_pc_1000ba14

dec_label_pc_1000ba14:                            ; preds = %dec_label_pc_1000b9e0, %dec_label_pc_1000ba08
  %v0_1000ba24 = phi i32 [ %v0_1000b9f8, %dec_label_pc_1000b9e0 ], [ -1, %dec_label_pc_1000ba08 ]
  ret i32 %v0_1000ba24

; uselistorder directives
  uselistorder label %dec_label_pc_1000ba14, { 1, 0 }
}

define i32 @function_1000ba28(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba28:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000ba3c

dec_label_pc_1000ba3c:                            ; preds = %dec_label_pc_1000ba3c.backedge, %dec_label_pc_1000ba28
  %v0_1000ba48 = call i32 @__asm_mfcr()
  %v1_1000ba4c = and i32 %v0_1000ba48, 268435456
  %v3_1000ba4c = icmp eq i32 %v1_1000ba4c, 0
  store i32 %v0_1000ba48, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ba4c, label %dec_label_pc_1000ba3c.backedge, label %dec_label_pc_1000ba58

dec_label_pc_1000ba58:                            ; preds = %dec_label_pc_1000ba3c
  %v0_1000ba58 = call i32 @function_1000a4bc()
  %v0_1000ba5c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ba5c = inttoptr i32 %v0_1000ba58 to i32*
  store i32 %v0_1000ba5c, i32* %v2_1000ba5c, align 4
  br label %dec_label_pc_1000ba3c.backedge

dec_label_pc_1000ba3c.backedge:                   ; preds = %dec_label_pc_1000ba58, %dec_label_pc_1000ba3c
  br label %dec_label_pc_1000ba3c
}

define i32 @function_1000ba64(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba64:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000ba70 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000ba70, i32* @r29, align 4
  %v0_1000ba78 = load i32, i32* @r4, align 4
  store i32 %v0_1000ba78, i32* @r30, align 4
  %v0_1000ba88 = call i32 @__asm_mfcr()
  %v1_1000ba8c = and i32 %v0_1000ba88, 268435456
  %v3_1000ba8c = icmp eq i32 %v1_1000ba8c, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000ba88, i32* @r31, align 4
  br i1 %v3_1000ba8c, label %dec_label_pc_1000baa8, label %dec_label_pc_1000ba9c

dec_label_pc_1000ba9c:                            ; preds = %dec_label_pc_1000ba64
  %v0_1000ba9c = call i32 @function_1000a4bc()
  %v0_1000baa0 = load i32, i32* @r31, align 4
  %v2_1000baa0 = inttoptr i32 %v0_1000ba9c to i32*
  store i32 %v0_1000baa0, i32* %v2_1000baa0, align 4
  br label %dec_label_pc_1000bac0

dec_label_pc_1000baa8:                            ; preds = %dec_label_pc_1000ba64
  %v3_1000baa8 = icmp eq i32 %v0_1000ba88, 0
  store i32 %v0_1000ba88, i32* @r28, align 4
  br i1 %v3_1000baa8, label %dec_label_pc_1000babc, label %dec_label_pc_1000bac0

dec_label_pc_1000babc:                            ; preds = %dec_label_pc_1000baa8
  %v0_1000bab0 = load i32, i32* @r30, align 4
  store i32 268483264, i32* @lr, align 4
  %v4_1000babc = call i32 @function_1000c02c(i32* nonnull %stack_var_-104, i32 %v0_1000bab0, i32 0)
  br label %dec_label_pc_1000bac0

dec_label_pc_1000bac0:                            ; preds = %dec_label_pc_1000baa8, %dec_label_pc_1000ba9c, %dec_label_pc_1000babc
  %v0_1000bac4 = load i32, i32* @r28, align 4
  ret i32 %v0_1000bac4

; uselistorder directives
  uselistorder i32 %v0_1000ba88, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000bac0, { 2, 0, 1 }
}

define i32 @function_1000bad8(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000bad8:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000baec = call i32 @function_1000bb68()
  store i32 %v0_1000baec, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000baec, 1
  br i1 %tmp18, label %dec_label_pc_1000bb50, label %dec_label_pc_1000baf8

dec_label_pc_1000baf8:                            ; preds = %dec_label_pc_1000bad8
  %v0_1000baf8 = load i32, i32* @r31, align 4
  %v2_1000baf8 = add i32 %v0_1000baf8, %v0_1000baec
  store i32 %v2_1000baf8, i32* %r29.global-to-local, align 4
  %v2_1000bb403 = icmp ult i32 %v0_1000baf8, %v2_1000baf8
  br i1 %v2_1000bb403, label %dec_label_pc_1000bb00, label %dec_label_pc_1000bb50

dec_label_pc_1000bb00:                            ; preds = %dec_label_pc_1000baf8, %dec_label_pc_1000bb00
  %v1_1000bb10 = phi i32 [ %v2_1000bb3c, %dec_label_pc_1000bb00 ], [ %v0_1000baf8, %dec_label_pc_1000baf8 ]
  %v1_1000bb4410.in = phi i32 [ %v2_1000bb3c, %dec_label_pc_1000bb00 ], [ %v0_1000baf8, %dec_label_pc_1000baf8 ]
  %v1_1000bb4811.in = phi i32 [ %v2_1000bb3c, %dec_label_pc_1000bb00 ], [ %v0_1000baf8, %dec_label_pc_1000baf8 ]
  %v1_1000bb4410 = add i32 %v1_1000bb4410.in, 11
  %v1_1000bb4811 = add i32 %v1_1000bb4811.in, 19
  %v1_1000bb00 = add i32 %v1_1000bb10, 4
  %v2_1000bb00 = inttoptr i32 %v1_1000bb00 to i32*
  %v3_1000bb00 = load i32, i32* %v2_1000bb00, align 4
  store i32 %v3_1000bb00, i32* %r11.global-to-local, align 4
  %v1_1000bb04 = add i32 %v1_1000bb10, 12
  %v2_1000bb04 = inttoptr i32 %v1_1000bb04 to i32*
  %v3_1000bb04 = load i32, i32* %v2_1000bb04, align 4
  %v1_1000bb08 = add i32 %v1_1000bb10, 16
  %v2_1000bb08 = inttoptr i32 %v1_1000bb08 to i16*
  %v3_1000bb08 = load i16, i16* %v2_1000bb08, align 2
  %v4_1000bb08 = zext i16 %v3_1000bb08 to i32
  store i32 %v4_1000bb08, i32* %r5.global-to-local, align 4
  %v1_1000bb0c = add i32 %v1_1000bb10, 18
  %v2_1000bb0c = inttoptr i32 %v1_1000bb0c to i8*
  %v3_1000bb0c = load i8, i8* %v2_1000bb0c, align 1
  %v4_1000bb0c = zext i8 %v3_1000bb0c to i32
  store i32 %v4_1000bb0c, i32* %r9.global-to-local, align 4
  store i32 %v3_1000bb04, i32* %v2_1000bb00, align 4
  %v0_1000bb14 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bb14 = load i32, i32* @r31, align 4
  %v2_1000bb14 = inttoptr i32 %v1_1000bb14 to i32*
  store i32 %v0_1000bb14, i32* %v2_1000bb14, align 4
  %v0_1000bb18 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bb18 = trunc i32 %v0_1000bb18 to i8
  %v2_1000bb18 = load i32, i32* @r31, align 4
  %v3_1000bb18 = add i32 %v2_1000bb18, 10
  %v4_1000bb18 = inttoptr i32 %v3_1000bb18 to i8*
  store i8 %v1_1000bb18, i8* %v4_1000bb18, align 1
  %v0_1000bb1c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bb1c = trunc i32 %v0_1000bb1c to i16
  %v2_1000bb1c = load i32, i32* @r31, align 4
  %v3_1000bb1c = add i32 %v2_1000bb1c, 8
  %v4_1000bb1c = inttoptr i32 %v3_1000bb1c to i16*
  store i16 %v1_1000bb1c, i16* %v4_1000bb1c, align 2
  %v0_1000bb20 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bb20 = add i32 %v0_1000bb20, -19
  store i32 %v1_1000bb20, i32* %r5.global-to-local, align 4
  store i32 268483368, i32* @lr, align 4
  %v3_1000bb24 = call i32 @function_1000a500(i32 %v1_1000bb4410, i32 %v1_1000bb4811, i32 %v1_1000bb20)
  %v0_1000bb28 = load i32, i32* @r31, align 4
  %v1_1000bb28 = add i32 %v0_1000bb28, 8
  %v2_1000bb28 = inttoptr i32 %v1_1000bb28 to i16*
  %v3_1000bb28 = load i16, i16* %v2_1000bb28, align 2
  %v4_1000bb28 = zext i16 %v3_1000bb28 to i32
  store i32 %v4_1000bb28, i32* %r5.global-to-local, align 4
  store i32 268483384, i32* @lr, align 4
  %v3_1000bb34 = call i32 @function_1000a500(i32 %v0_1000bb28, i32 %v0_1000bb28, i32 %v4_1000bb28)
  %v0_1000bb38 = load i32, i32* @r31, align 4
  %v1_1000bb38 = add i32 %v0_1000bb38, 8
  %v2_1000bb38 = inttoptr i32 %v1_1000bb38 to i16*
  %v3_1000bb38 = load i16, i16* %v2_1000bb38, align 2
  %v4_1000bb38 = zext i16 %v3_1000bb38 to i32
  %v2_1000bb3c = add i32 %v4_1000bb38, %v0_1000bb38
  store i32 %v2_1000bb3c, i32* @r31, align 4
  %v1_1000bb40 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bb40 = icmp ult i32 %v2_1000bb3c, %v1_1000bb40
  br i1 %v2_1000bb40, label %dec_label_pc_1000bb00, label %dec_label_pc_1000bb40.dec_label_pc_1000bb50.loopexit_crit_edge

dec_label_pc_1000bb40.dec_label_pc_1000bb50.loopexit_crit_edge: ; preds = %dec_label_pc_1000bb00
  %v0_1000bb54.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000bb50

dec_label_pc_1000bb50:                            ; preds = %dec_label_pc_1000baf8, %dec_label_pc_1000bb40.dec_label_pc_1000bb50.loopexit_crit_edge, %dec_label_pc_1000bad8
  %v0_1000bb54 = phi i32 [ %v0_1000baec, %dec_label_pc_1000bad8 ], [ %v0_1000bb54.pre.pre, %dec_label_pc_1000bb40.dec_label_pc_1000bb50.loopexit_crit_edge ], [ %v0_1000baec, %dec_label_pc_1000baf8 ]
  ret i32 %v0_1000bb54

; uselistorder directives
  uselistorder i32 %v2_1000bb3c, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000bb28, { 1, 0, 2 }
  uselistorder i32 %v1_1000bb10, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000baf8, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000baec, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_1000a500, { 6, 5, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 11, { 0, 34, 33, 1, 8, 9, 13, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 26, 27, 28, 3, 29, 30, 4, 31, 32, 12, 5, 6, 35, 36, 37, 38, 39, 40, 7 }
  uselistorder label %dec_label_pc_1000bb50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bb00, { 1, 0 }
}

define i32 @function_1000bb68() local_unnamed_addr {
dec_label_pc_1000bb68:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000bb6c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000bb6c, i32* %stack_var_-48, align 4
  %v5_1000bb6c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000bb6c, i32* %r9.global-to-local, align 4
  %v0_1000bb78 = load i32, i32* @r5, align 4
  %v1_1000bb78 = add i32 %v0_1000bb78, 30
  %v1_1000bb7c = call i32 @__asm_rlwinm(i32 %v1_1000bb78, i32 0, i32 0, i32 27)
  store i32 %v5_1000bb6c, i32* @r31, align 4
  %v1_1000bb8c = load i32, i32* @r1, align 4
  %v3_1000bb8c = sub i32 %v1_1000bb8c, %v1_1000bb7c
  %v4_1000bb8c = inttoptr i32 %v3_1000bb8c to i32*
  store i32 %v4_1000bb6c, i32* %v4_1000bb8c, align 4
  %v0_1000bb90 = load i32, i32* @r4, align 4
  store i32 %v0_1000bb90, i32* @r28, align 4
  %v0_1000bb94 = load i32, i32* @r5, align 4
  store i32 %v0_1000bb94, i32* @r23, align 4
  %v0_1000bb98 = load i32, i32* @r3, align 4
  store i32 %v0_1000bb98, i32* @r22, align 4
  %v1_1000bb9c = add i32 %v3_1000bb8c, 23
  %v1_1000bba0 = call i32 @__asm_rlwinm(i32 %v1_1000bb9c, i32 0, i32 0, i32 27)
  store i32 %v1_1000bba0, i32* @r27, align 4
  store i32 %v1_1000bba0, i32* %r4.global-to-local, align 4
  %v0_1000bbb0 = call i32 @__asm_mfcr()
  %v1_1000bbb4 = and i32 %v0_1000bbb0, 268435456
  store i32 %v1_1000bbb4, i32* %r9.global-to-local, align 4
  %v3_1000bbb4 = icmp eq i32 %v1_1000bbb4, 0
  store i32 %v0_1000bbb0, i32* %r30.global-to-local, align 4
  br i1 %v3_1000bbb4, label %dec_label_pc_1000bbcc, label %dec_label_pc_1000bbc0

dec_label_pc_1000bbc0:                            ; preds = %dec_label_pc_1000bb68
  %v0_1000bbc0 = call i32 @function_1000a4bc()
  %v0_1000bbc4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000bbc4 = inttoptr i32 %v0_1000bbc0 to i32*
  store i32 %v0_1000bbc4, i32* %v2_1000bbc4, align 4
  br label %dec_label_pc_1000bbd8

dec_label_pc_1000bbcc:                            ; preds = %dec_label_pc_1000bb68
  %v3_1000bbcc = icmp eq i32 %v0_1000bbb0, -1
  store i32 %v0_1000bbb0, i32* %r24.global-to-local, align 4
  br i1 %v3_1000bbcc, label %dec_label_pc_1000bbd8, label %dec_label_pc_1000bbe0

dec_label_pc_1000bbd8:                            ; preds = %dec_label_pc_1000bbcc, %dec_label_pc_1000bbc0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bca4

dec_label_pc_1000bbe0:                            ; preds = %dec_label_pc_1000bbcc
  %v0_1000bbe0 = load i32, i32* @r28, align 4
  store i32 %v0_1000bbe0, i32* %r29.global-to-local, align 4
  store i32 %v1_1000bba0, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000bc8812 = add i32 %v0_1000bbb0, %v1_1000bba0
  %v1_1000bc8c13 = load i32, i32* @r23, align 4
  %v2_1000bc8c14 = add i32 %v1_1000bc8c13, %v0_1000bbe0
  store i32 %v2_1000bc8c14, i32* %r10.global-to-local, align 4
  %v2_1000bc9015 = icmp ult i32 %v1_1000bba0, %v2_1000bc8812
  %v1_1000bc9418 = add i32 %v0_1000bbe0, 19
  store i32 %v1_1000bc9418, i32* @r3, align 4
  %v1_1000bc9819 = add i32 %v1_1000bba0, 19
  store i32 %v1_1000bc9819, i32* @r4, align 4
  br i1 %v2_1000bc9015, label %dec_label_pc_1000bbf4, label %dec_label_pc_1000bca0

dec_label_pc_1000bbf4:                            ; preds = %dec_label_pc_1000bbe0, %dec_label_pc_1000bc3c
  %v0_1000bbf420 = phi i32 [ %v2_1000bc84, %dec_label_pc_1000bc3c ], [ %v1_1000bba0, %dec_label_pc_1000bbe0 ]
  %v1_1000bbf4 = add i32 %v0_1000bbf420, 16
  %v2_1000bbf4 = inttoptr i32 %v1_1000bbf4 to i16*
  %v3_1000bbf4 = load i16, i16* %v2_1000bbf4, align 2
  %v4_1000bbf4 = zext i16 %v3_1000bbf4 to i32
  %v1_1000bbf8 = add nuw nsw i32 %v4_1000bbf4, 7
  store i32 %v1_1000bbf8, i32* %r9.global-to-local, align 4
  %v1_1000bbfc = call i32 @__asm_rlwinm(i32 %v1_1000bbf8, i32 0, i32 0, i32 28)
  %v0_1000bc00 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000bc00 = add i32 %v1_1000bbfc, %v0_1000bc00
  store i32 %v3_1000bc00, i32* %r11.global-to-local, align 4
  %v1_1000bc04 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000bc04 = icmp ugt i32 %v3_1000bc00, %v1_1000bc04
  br i1 %v3_1000bc04, label %dec_label_pc_1000bc0c, label %dec_label_pc_1000bc3c

dec_label_pc_1000bc0c:                            ; preds = %dec_label_pc_1000bbf4
  %v0_1000bc0c = load i32, i32* @r22, align 4
  %v0_1000bc10 = load i32, i32* @r25, align 4
  %v0_1000bc14 = load i32, i32* @r26, align 4
  store i32 268483616, i32* @lr, align 4
  %v4_1000bc1c = call i32 @function_1000bde0(i32 %v0_1000bc0c, i32 %v0_1000bc10, i32 %v0_1000bc14, i32 0)
  %v0_1000bc20 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000bc20 = load i32, i32* @r28, align 4
  %v4_1000bc20 = icmp eq i32 %v0_1000bc20, %v1_1000bc20
  br i1 %v4_1000bc20, label %dec_label_pc_1000bc28, label %dec_label_pc_1000bca0

dec_label_pc_1000bc28:                            ; preds = %dec_label_pc_1000bc0c
  %v0_1000bc28 = call i32 @function_1000a4bc()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000bc34 = inttoptr i32 %v0_1000bc28 to i32*
  store i32 22, i32* %v2_1000bc34, align 4
  %v0_1000bca8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bca4

dec_label_pc_1000bc3c:                            ; preds = %dec_label_pc_1000bbf4
  %v2_1000bbfc = trunc i32 %v1_1000bbfc to i16
  %v0_1000bc3c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bc3c = inttoptr i32 %v0_1000bc3c to i32*
  %v2_1000bc3c = load i32, i32* %v1_1000bc3c, align 4
  store i32 %v2_1000bc3c, i32* %r9.global-to-local, align 4
  %v1_1000bc40 = add i32 %v0_1000bc3c, 4
  %v2_1000bc40 = inttoptr i32 %v1_1000bc40 to i32*
  %v3_1000bc40 = load i32, i32* %v2_1000bc40, align 4
  store i32 %v3_1000bc40, i32* %r10.global-to-local, align 4
  %v1_1000bc44 = add i32 %v0_1000bc3c, 8
  %v2_1000bc44 = inttoptr i32 %v1_1000bc44 to i32*
  %v3_1000bc44 = load i32, i32* %v2_1000bc44, align 4
  store i32 %v3_1000bc44, i32* @r25, align 4
  %v1_1000bc48 = add i32 %v0_1000bc3c, 12
  %v2_1000bc48 = inttoptr i32 %v1_1000bc48 to i32*
  %v3_1000bc48 = load i32, i32* %v2_1000bc48, align 4
  store i32 %v3_1000bc48, i32* @r26, align 4
  %v2_1000bc4c = inttoptr i32 %v0_1000bc00 to i32*
  store i32 %v2_1000bc3c, i32* %v2_1000bc4c, align 4
  %v0_1000bc50 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bc50 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bc50 = add i32 %v1_1000bc50, 4
  %v3_1000bc50 = inttoptr i32 %v2_1000bc50 to i32*
  store i32 %v0_1000bc50, i32* %v3_1000bc50, align 4
  %v0_1000bc54 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bc54 = add i32 %v0_1000bc54, 8
  %v2_1000bc54 = inttoptr i32 %v1_1000bc54 to i32*
  %v3_1000bc54 = load i32, i32* %v2_1000bc54, align 4
  store i32 %v3_1000bc54, i32* %r9.global-to-local, align 4
  %v1_1000bc58 = add i32 %v0_1000bc54, 12
  %v2_1000bc58 = inttoptr i32 %v1_1000bc58 to i32*
  %v3_1000bc58 = load i32, i32* %v2_1000bc58, align 4
  store i32 %v3_1000bc58, i32* %r10.global-to-local, align 4
  %v3_1000bc5c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000bc5c = add i32 %v3_1000bc5c, 16
  %v5_1000bc5c = inttoptr i32 %v4_1000bc5c to i16*
  store i16 %v2_1000bbfc, i16* %v5_1000bc5c, align 2
  %v0_1000bc60 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc60 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bc60 = add i32 %v1_1000bc60, 8
  %v3_1000bc60 = inttoptr i32 %v2_1000bc60 to i32*
  store i32 %v0_1000bc60, i32* %v3_1000bc60, align 4
  %v0_1000bc64 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bc64 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bc64 = add i32 %v1_1000bc64, 12
  %v3_1000bc64 = inttoptr i32 %v2_1000bc64 to i32*
  store i32 %v0_1000bc64, i32* %v3_1000bc64, align 4
  %v0_1000bc68 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bc68 = add i32 %v0_1000bc68, 18
  %v2_1000bc68 = inttoptr i32 %v1_1000bc68 to i8*
  %v3_1000bc68 = load i8, i8* %v2_1000bc68, align 1
  %v2_1000bc6c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000bc6c = add i32 %v2_1000bc6c, 18
  %v4_1000bc6c = inttoptr i32 %v3_1000bc6c to i8*
  store i8 %v3_1000bc68, i8* %v4_1000bc6c, align 1
  %v0_1000bc70 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000bc70, i32* %r29.global-to-local, align 4
  %v0_1000bc74 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bc74 = add i32 %v0_1000bc74, 16
  %v2_1000bc74 = inttoptr i32 %v1_1000bc74 to i16*
  %v3_1000bc74 = load i16, i16* %v2_1000bc74, align 2
  %v4_1000bc74 = zext i16 %v3_1000bc74 to i32
  %v1_1000bc78 = add nsw i32 %v4_1000bc74, -19
  store i32 %v1_1000bc78, i32* @r5, align 4
  store i32 268483712, i32* @lr, align 4
  %v0_1000bc7c = call i32 @function_1000c0dc()
  %v0_1000bc80 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bc80 = add i32 %v0_1000bc80, 16
  %v2_1000bc80 = inttoptr i32 %v1_1000bc80 to i16*
  %v3_1000bc80 = load i16, i16* %v2_1000bc80, align 2
  %v4_1000bc80 = zext i16 %v3_1000bc80 to i32
  %v2_1000bc84 = add i32 %v4_1000bc80, %v0_1000bc80
  store i32 %v2_1000bc84, i32* %r30.global-to-local, align 4
  %v1_1000bc88.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000bc8c.pre = load i32, i32* @r28, align 4
  %v0_1000bc94.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bc88 = add i32 %v1_1000bc88.pre, %v1_1000bba0
  %v1_1000bc8c = load i32, i32* @r23, align 4
  %v2_1000bc8c = add i32 %v1_1000bc8c, %v0_1000bc8c.pre
  store i32 %v2_1000bc8c, i32* %r10.global-to-local, align 4
  %v2_1000bc90 = icmp ult i32 %v2_1000bc84, %v2_1000bc88
  %v1_1000bc94 = add i32 %v0_1000bc94.pre, 19
  store i32 %v1_1000bc94, i32* @r3, align 4
  %v1_1000bc98 = add i32 %v2_1000bc84, 19
  store i32 %v1_1000bc98, i32* @r4, align 4
  br i1 %v2_1000bc90, label %dec_label_pc_1000bbf4, label %dec_label_pc_1000bca0

dec_label_pc_1000bca0:                            ; preds = %dec_label_pc_1000bbe0, %dec_label_pc_1000bc3c, %dec_label_pc_1000bc0c
  %v1_1000bca0 = phi i32 [ %v0_1000bc20, %dec_label_pc_1000bc0c ], [ %v0_1000bbe0, %dec_label_pc_1000bbe0 ], [ %v0_1000bc94.pre, %dec_label_pc_1000bc3c ]
  %v0_1000bca0 = phi i32 [ %v1_1000bc20, %dec_label_pc_1000bc0c ], [ %v0_1000bbe0, %dec_label_pc_1000bbe0 ], [ %v0_1000bc8c.pre, %dec_label_pc_1000bc3c ]
  %v2_1000bca0 = sub i32 %v1_1000bca0, %v0_1000bca0
  store i32 %v2_1000bca0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bca4

dec_label_pc_1000bca4:                            ; preds = %dec_label_pc_1000bc28, %dec_label_pc_1000bbd8, %dec_label_pc_1000bca0
  %v0_1000bca8 = phi i32 [ %v0_1000bca8.pre, %dec_label_pc_1000bc28 ], [ -1, %dec_label_pc_1000bbd8 ], [ %v2_1000bca0, %dec_label_pc_1000bca0 ]
  %v0_1000bca4 = load i32, i32* @r1, align 4
  %v1_1000bca4 = inttoptr i32 %v0_1000bca4 to i32*
  %v2_1000bca4 = load i32, i32* %v1_1000bca4, align 4
  store i32 %v2_1000bca4, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000bca8

; uselistorder directives
  uselistorder i32 %v2_1000bc84, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000bc3c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000bbfc, { 1, 0 }
  uselistorder i32 %v0_1000bbb0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000bba0, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r10.global-to-local, { 6, 0, 1, 2, 3, 5, 4 }
  uselistorder i32 18, { 9, 10, 11, 4, 5, 7, 0, 6, 1, 8, 12, 13, 14, 15, 2, 3 }
  uselistorder i32 22, { 0, 1, 2, 3, 6, 4, 5, 7, 8 }
  uselistorder i32 7, { 37, 51, 10, 11, 28, 12, 13, 29, 14, 15, 30, 16, 17, 31, 32, 18, 33, 19, 34, 20, 35, 36, 21, 22, 23, 0, 24, 38, 1, 39, 40, 2, 41, 42, 43, 3, 4, 44, 5, 45, 6, 46, 25, 47, 48, 7, 49, 50, 8, 52, 26, 53, 27, 54, 55, 9 }
  uselistorder i32 19, { 22, 23, 1, 2, 0, 13, 14, 15, 3, 5, 6, 16, 7, 8, 17, 9, 10, 18, 11, 12, 19, 20, 21, 24, 25, 26, 4 }
  uselistorder i32* @r26, { 15, 16, 17, 50, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51 }
  uselistorder i32* @r25, { 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32* @r27, { 19, 72, 73, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 1, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74 }
  uselistorder i32 23, { 19, 11, 20, 1, 2, 12, 3, 4, 13, 5, 6, 14, 7, 8, 15, 9, 10, 16, 17, 18, 0 }
  uselistorder i32* @r22, { 6, 7, 0, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* @r23, { 11, 0, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23 }
  uselistorder i32* @r1, { 10, 11, 4, 5, 8, 1, 9, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 6, 38, 7, 39, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 2, 70, 3, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 15, 16, 17, 31, 18, 20, 19, 21, 0, 33, 32, 1, 2, 3, 22, 23, 24, 25, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 26, 27, 29, 28, 30, 34 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 4, 9, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000bca4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bca0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000bbf4, { 1, 0 }
}

define i32 @function_1000bcc0() local_unnamed_addr {
dec_label_pc_1000bcc0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bcd8 = call i32 @__asm_mfcr()
  %v1_1000bcdc = and i32 %v0_1000bcd8, 268435456
  %v3_1000bcdc = icmp eq i32 %v1_1000bcdc, 0
  store i32 %v0_1000bcd8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bcdc, label %dec_label_pc_1000bcf4, label %dec_label_pc_1000bce8

dec_label_pc_1000bce8:                            ; preds = %dec_label_pc_1000bcc0
  %v0_1000bce8 = call i32 @function_1000a4bc()
  %v0_1000bcec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bcec = inttoptr i32 %v0_1000bce8 to i32*
  store i32 %v0_1000bcec, i32* %v2_1000bcec, align 4
  br label %dec_label_pc_1000bcf4

dec_label_pc_1000bcf4:                            ; preds = %dec_label_pc_1000bcc0, %dec_label_pc_1000bce8
  %v0_1000bd04 = phi i32 [ %v0_1000bcd8, %dec_label_pc_1000bcc0 ], [ -1, %dec_label_pc_1000bce8 ]
  ret i32 %v0_1000bd04

; uselistorder directives
  uselistorder label %dec_label_pc_1000bcf4, { 1, 0 }
}

define i32 @function_1000bd08() local_unnamed_addr {
dec_label_pc_1000bd08:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bd20 = call i32 @__asm_mfcr()
  %v1_1000bd24 = and i32 %v0_1000bd20, 268435456
  %v3_1000bd24 = icmp eq i32 %v1_1000bd24, 0
  store i32 %v0_1000bd20, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bd24, label %dec_label_pc_1000bd3c, label %dec_label_pc_1000bd30

dec_label_pc_1000bd30:                            ; preds = %dec_label_pc_1000bd08
  %v0_1000bd30 = call i32 @function_1000a4bc()
  %v0_1000bd34 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bd34 = inttoptr i32 %v0_1000bd30 to i32*
  store i32 %v0_1000bd34, i32* %v2_1000bd34, align 4
  br label %dec_label_pc_1000bd3c

dec_label_pc_1000bd3c:                            ; preds = %dec_label_pc_1000bd08, %dec_label_pc_1000bd30
  %v0_1000bd4c = phi i32 [ %v0_1000bd20, %dec_label_pc_1000bd08 ], [ -1, %dec_label_pc_1000bd30 ]
  ret i32 %v0_1000bd4c

; uselistorder directives
  uselistorder label %dec_label_pc_1000bd3c, { 1, 0 }
}

define i32 @function_1000bd50(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bd50:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bd68 = call i32 @__asm_mfcr()
  %v1_1000bd6c = and i32 %v0_1000bd68, 268435456
  %v3_1000bd6c = icmp eq i32 %v1_1000bd6c, 0
  store i32 %v0_1000bd68, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bd6c, label %dec_label_pc_1000bd84, label %dec_label_pc_1000bd78

dec_label_pc_1000bd78:                            ; preds = %dec_label_pc_1000bd50
  %v0_1000bd78 = call i32 @function_1000a4bc()
  %v0_1000bd7c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bd7c = inttoptr i32 %v0_1000bd78 to i32*
  store i32 %v0_1000bd7c, i32* %v2_1000bd7c, align 4
  br label %dec_label_pc_1000bd84

dec_label_pc_1000bd84:                            ; preds = %dec_label_pc_1000bd50, %dec_label_pc_1000bd78
  %v0_1000bd94 = phi i32 [ %v0_1000bd68, %dec_label_pc_1000bd50 ], [ -1, %dec_label_pc_1000bd78 ]
  ret i32 %v0_1000bd94

; uselistorder directives
  uselistorder label %dec_label_pc_1000bd84, { 1, 0 }
}

define i32 @function_1000bd98(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bd98:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bdb0 = call i32 @__asm_mfcr()
  %v1_1000bdb4 = and i32 %v0_1000bdb0, 268435456
  %v3_1000bdb4 = icmp eq i32 %v1_1000bdb4, 0
  store i32 %v0_1000bdb0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bdb4, label %dec_label_pc_1000bdcc, label %dec_label_pc_1000bdc0

dec_label_pc_1000bdc0:                            ; preds = %dec_label_pc_1000bd98
  %v0_1000bdc0 = call i32 @function_1000a4bc()
  %v0_1000bdc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bdc4 = inttoptr i32 %v0_1000bdc0 to i32*
  store i32 %v0_1000bdc4, i32* %v2_1000bdc4, align 4
  br label %dec_label_pc_1000bdcc

dec_label_pc_1000bdcc:                            ; preds = %dec_label_pc_1000bd98, %dec_label_pc_1000bdc0
  %v0_1000bddc = phi i32 [ %v0_1000bdb0, %dec_label_pc_1000bd98 ], [ -1, %dec_label_pc_1000bdc0 ]
  ret i32 %v0_1000bddc

; uselistorder directives
  uselistorder label %dec_label_pc_1000bdcc, { 1, 0 }
}

define i32 @function_1000bde0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000bde0:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000bde0 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000be0c = call i32 @__asm_mfcr()
  %v1_1000be10 = and i32 %v0_1000be0c, 268435456
  %v3_1000be10 = icmp eq i32 %v1_1000be10, 0
  store i32 %v0_1000be0c, i32* %r31.global-to-local, align 4
  store i32 %v0_1000be0c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000be10, label %dec_label_pc_1000be34, label %dec_label_pc_1000be24

dec_label_pc_1000be24:                            ; preds = %dec_label_pc_1000bde0
  %v0_1000be24 = call i32 @function_1000a4bc()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000be2c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000be2c = inttoptr i32 %v0_1000be24 to i32*
  store i32 %v0_1000be2c, i32* %v2_1000be2c, align 4
  %v0_1000be38.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000be38

dec_label_pc_1000be34:                            ; preds = %dec_label_pc_1000bde0
  %v3_1000be1c = icmp eq i32 %v0_1000be0c, 0
  br i1 %v3_1000be1c, label %dec_label_pc_1000be44, label %dec_label_pc_1000be38

dec_label_pc_1000be38:                            ; preds = %dec_label_pc_1000be34, %dec_label_pc_1000be24
  %v0_1000be38 = phi i32 [ %v0_1000be0c, %dec_label_pc_1000be34 ], [ %v0_1000be38.pre, %dec_label_pc_1000be24 ]
  %tmp = icmp slt i32 %v0_1000be38, 0
  %v1_1000be3c = zext i1 %tmp to i32
  %v2_1000be3c = ashr i32 %v0_1000be38, 31
  %v3_1000be3c = and i32 %v2_1000be3c, -2
  %v4_1000be3c = or i32 %v3_1000be3c, %v1_1000be3c
  br label %dec_label_pc_1000be4c

dec_label_pc_1000be44:                            ; preds = %dec_label_pc_1000be34
  %v3_1000be44 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000be4c

dec_label_pc_1000be4c:                            ; preds = %dec_label_pc_1000be38, %dec_label_pc_1000be44
  %v0_1000be5c = phi i32 [ %v4_1000be3c, %dec_label_pc_1000be38 ], [ %v3_1000be44, %dec_label_pc_1000be44 ]
  store i32 %v0_1000bde0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000be5c

; uselistorder directives
  uselistorder i32 %v0_1000be38, { 1, 0 }
  uselistorder i32 %v0_1000be0c, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 7, 1, 0, 8, 9, 6, 2, 10, 3, 11, 4, 5, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_1000be4c, { 1, 0 }
}

define i32 @function_1000be60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000be60:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000be78 = call i32 @__asm_mfcr()
  %v1_1000be7c = and i32 %v0_1000be78, 268435456
  %v3_1000be7c = icmp eq i32 %v1_1000be7c, 0
  store i32 %v0_1000be78, i32* %r31.global-to-local, align 4
  br i1 %v3_1000be7c, label %dec_label_pc_1000be94, label %dec_label_pc_1000be88

dec_label_pc_1000be88:                            ; preds = %dec_label_pc_1000be60
  %v0_1000be88 = call i32 @function_1000a4bc()
  %v0_1000be8c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000be8c = inttoptr i32 %v0_1000be88 to i32*
  store i32 %v0_1000be8c, i32* %v2_1000be8c, align 4
  br label %dec_label_pc_1000be94

dec_label_pc_1000be94:                            ; preds = %dec_label_pc_1000be60, %dec_label_pc_1000be88
  %v0_1000bea4 = phi i32 [ %v0_1000be78, %dec_label_pc_1000be60 ], [ -1, %dec_label_pc_1000be88 ]
  ret i32 %v0_1000bea4

; uselistorder directives
  uselistorder label %dec_label_pc_1000be94, { 1, 0 }
}

define i32 @function_1000bea8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bea8:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000bec4 = load i32, i32* @global_var_1001d2a0.489, align 4
  %v3_1000bec8 = icmp eq i32 %v3_1000bec4, 0
  br i1 %v3_1000bec8, label %dec_label_pc_1000bed0, label %dec_label_pc_1000bedc

dec_label_pc_1000bed0:                            ; preds = %dec_label_pc_1000bea8
  store i32 268484308, i32* @lr, align 4
  %v1_1000bed0 = call i32 @function_1000c49c(i32 0)
  %v1_1000bed4 = icmp slt i32 %v1_1000bed0, 0
  br i1 %v1_1000bed4, label %dec_label_pc_1000befc, label %dec_label_pc_1000bed0.dec_label_pc_1000bedc_crit_edge

dec_label_pc_1000bed0.dec_label_pc_1000bedc_crit_edge: ; preds = %dec_label_pc_1000bed0
  %v0_1000bedc.pre = load i32, i32* @r30, align 4
  %v3_1000bee0.pre = load i32, i32* @global_var_1001d2a0.489, align 4
  br label %dec_label_pc_1000bedc

dec_label_pc_1000bedc:                            ; preds = %dec_label_pc_1000bed0.dec_label_pc_1000bedc_crit_edge, %dec_label_pc_1000bea8
  %v3_1000bee0 = phi i32 [ %v3_1000bee0.pre, %dec_label_pc_1000bed0.dec_label_pc_1000bedc_crit_edge ], [ %v3_1000bec4, %dec_label_pc_1000bea8 ]
  %v1_1000bee8 = phi i32 [ %v0_1000bedc.pre, %dec_label_pc_1000bed0.dec_label_pc_1000bedc_crit_edge ], [ %arg1, %dec_label_pc_1000bea8 ]
  %v3_1000bedc = icmp eq i32 %v1_1000bee8, 0
  store i32 %v3_1000bee0, i32* @r31, align 4
  br i1 %v3_1000bedc, label %dec_label_pc_1000bf00, label %dec_label_pc_1000bef0

dec_label_pc_1000bef0:                            ; preds = %dec_label_pc_1000bedc
  %v2_1000bee8 = add i32 %v1_1000bee8, %v3_1000bee0
  store i32 268484340, i32* @lr, align 4
  %v1_1000bef0 = call i32 @function_1000c49c(i32 %v2_1000bee8)
  %tmp6 = icmp sgt i32 %v1_1000bef0, -1
  br i1 %tmp6, label %dec_label_pc_1000bef0.dec_label_pc_1000bf00_crit_edge, label %dec_label_pc_1000befc

dec_label_pc_1000bef0.dec_label_pc_1000bf00_crit_edge: ; preds = %dec_label_pc_1000bef0
  %v0_1000bf04.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bf00

dec_label_pc_1000befc:                            ; preds = %dec_label_pc_1000bef0, %dec_label_pc_1000bed0
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000bf00

dec_label_pc_1000bf00:                            ; preds = %dec_label_pc_1000bef0.dec_label_pc_1000bf00_crit_edge, %dec_label_pc_1000bedc, %dec_label_pc_1000befc
  %v0_1000bf04 = phi i32 [ %v0_1000bf04.pre, %dec_label_pc_1000bef0.dec_label_pc_1000bf00_crit_edge ], [ %v3_1000bee0, %dec_label_pc_1000bedc ], [ -1, %dec_label_pc_1000befc ]
  ret i32 %v0_1000bf04

; uselistorder directives
  uselistorder i32 %v3_1000bee0, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000c49c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf00, { 2, 0, 1 }
}

define i32 @function_1000bf18(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bf18:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bf30 = call i32 @__asm_mfcr()
  %v1_1000bf34 = and i32 %v0_1000bf30, 268435456
  %v3_1000bf34 = icmp eq i32 %v1_1000bf34, 0
  store i32 %v0_1000bf30, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bf34, label %dec_label_pc_1000bf4c, label %dec_label_pc_1000bf40

dec_label_pc_1000bf40:                            ; preds = %dec_label_pc_1000bf18
  %v0_1000bf40 = call i32 @function_1000a4bc()
  %v0_1000bf44 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bf44 = inttoptr i32 %v0_1000bf40 to i32*
  store i32 %v0_1000bf44, i32* %v2_1000bf44, align 4
  br label %dec_label_pc_1000bf4c

dec_label_pc_1000bf4c:                            ; preds = %dec_label_pc_1000bf18, %dec_label_pc_1000bf40
  %v0_1000bf5c = phi i32 [ %v0_1000bf30, %dec_label_pc_1000bf18 ], [ -1, %dec_label_pc_1000bf40 ]
  ret i32 %v0_1000bf5c

; uselistorder directives
  uselistorder label %dec_label_pc_1000bf4c, { 1, 0 }
}

define i32 @function_1000bf60(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bf60:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268484488, i32* @lr, align 4
  %v3_1000bf84 = call i32 @function_1000a5a4(i32 %arg2, i32 0, i32 104)
  %v2_1000bf88 = load i32, i32* %arg1, align 4
  %v1_1000bf8c = add i32 %tmp, 4
  %v2_1000bf8c = inttoptr i32 %v1_1000bf8c to i32*
  %v3_1000bf8c = load i32, i32* %v2_1000bf8c, align 4
  store i32 %v3_1000bf8c, i32* %r10.global-to-local, align 4
  %v1_1000bf90 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bf90 = inttoptr i32 %v1_1000bf90 to i32*
  store i32 %v2_1000bf88, i32* %v2_1000bf90, align 4
  %v0_1000bf94 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bf94 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bf94 = add i32 %v1_1000bf94, 4
  %v3_1000bf94 = inttoptr i32 %v2_1000bf94 to i32*
  store i32 %v0_1000bf94, i32* %v3_1000bf94, align 4
  %v0_1000bf98 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bf98 = add i32 %v0_1000bf98, 8
  %v2_1000bf98 = inttoptr i32 %v1_1000bf98 to i32*
  %v3_1000bf98 = load i32, i32* %v2_1000bf98, align 4
  %v1_1000bf9c = add i32 %v0_1000bf98, 12
  %v2_1000bf9c = inttoptr i32 %v1_1000bf9c to i32*
  %v3_1000bf9c = load i32, i32* %v2_1000bf9c, align 4
  store i32 %v3_1000bf9c, i32* %r10.global-to-local, align 4
  %v1_1000bfa0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfa0 = add i32 %v1_1000bfa0, 8
  %v3_1000bfa0 = inttoptr i32 %v2_1000bfa0 to i32*
  store i32 %v3_1000bf98, i32* %v3_1000bfa0, align 4
  %v0_1000bfa4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bfa4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfa4 = add i32 %v1_1000bfa4, 12
  %v3_1000bfa4 = inttoptr i32 %v2_1000bfa4 to i32*
  store i32 %v0_1000bfa4, i32* %v3_1000bfa4, align 4
  %v0_1000bfa8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bfa8 = add i32 %v0_1000bfa8, 16
  %v2_1000bfa8 = inttoptr i32 %v1_1000bfa8 to i32*
  %v3_1000bfa8 = load i32, i32* %v2_1000bfa8, align 4
  %v1_1000bfac = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfac = add i32 %v1_1000bfac, 16
  %v3_1000bfac = inttoptr i32 %v2_1000bfac to i32*
  store i32 %v3_1000bfa8, i32* %v3_1000bfac, align 4
  %v0_1000bfb0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bfb0 = add i32 %v0_1000bfb0, 20
  %v2_1000bfb0 = inttoptr i32 %v1_1000bfb0 to i32*
  %v3_1000bfb0 = load i32, i32* %v2_1000bfb0, align 4
  %v1_1000bfb4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfb4 = add i32 %v1_1000bfb4, 20
  %v3_1000bfb4 = inttoptr i32 %v2_1000bfb4 to i32*
  store i32 %v3_1000bfb0, i32* %v3_1000bfb4, align 4
  %v0_1000bfb8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bfb8 = add i32 %v0_1000bfb8, 24
  %v2_1000bfb8 = inttoptr i32 %v1_1000bfb8 to i32*
  %v3_1000bfb8 = load i32, i32* %v2_1000bfb8, align 4
  %v1_1000bfbc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfbc = add i32 %v1_1000bfbc, 24
  %v3_1000bfbc = inttoptr i32 %v2_1000bfbc to i32*
  store i32 %v3_1000bfb8, i32* %v3_1000bfbc, align 4
  %v0_1000bfc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bfc0 = add i32 %v0_1000bfc0, 28
  %v2_1000bfc0 = inttoptr i32 %v1_1000bfc0 to i32*
  %v3_1000bfc0 = load i32, i32* %v2_1000bfc0, align 4
  %v1_1000bfc4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfc4 = add i32 %v1_1000bfc4, 28
  %v3_1000bfc4 = inttoptr i32 %v2_1000bfc4 to i32*
  store i32 %v3_1000bfc0, i32* %v3_1000bfc4, align 4
  %v0_1000bfc8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bfc8 = add i32 %v0_1000bfc8, 32
  %v2_1000bfc8 = inttoptr i32 %v1_1000bfc8 to i32*
  %v3_1000bfc8 = load i32, i32* %v2_1000bfc8, align 4
  %v1_1000bfcc = add i32 %v0_1000bfc8, 36
  %v2_1000bfcc = inttoptr i32 %v1_1000bfcc to i32*
  %v3_1000bfcc = load i32, i32* %v2_1000bfcc, align 4
  store i32 %v3_1000bfcc, i32* %r10.global-to-local, align 4
  %v1_1000bfd0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfd0 = add i32 %v1_1000bfd0, 32
  %v3_1000bfd0 = inttoptr i32 %v2_1000bfd0 to i32*
  store i32 %v3_1000bfc8, i32* %v3_1000bfd0, align 4
  %v0_1000bfd4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bfd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfd4 = add i32 %v1_1000bfd4, 36
  %v3_1000bfd4 = inttoptr i32 %v2_1000bfd4 to i32*
  store i32 %v0_1000bfd4, i32* %v3_1000bfd4, align 4
  %v0_1000bfd8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bfd8 = add i32 %v0_1000bfd8, 48
  %v2_1000bfd8 = inttoptr i32 %v1_1000bfd8 to i32*
  %v3_1000bfd8 = load i32, i32* %v2_1000bfd8, align 4
  %v1_1000bfdc = add i32 %v0_1000bfd8, 52
  %v2_1000bfdc = inttoptr i32 %v1_1000bfdc to i32*
  %v3_1000bfdc = load i32, i32* %v2_1000bfdc, align 4
  store i32 %v3_1000bfdc, i32* %r10.global-to-local, align 4
  %v1_1000bfe0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfe0 = add i32 %v1_1000bfe0, 48
  %v3_1000bfe0 = inttoptr i32 %v2_1000bfe0 to i32*
  store i32 %v3_1000bfd8, i32* %v3_1000bfe0, align 4
  %v0_1000bfe4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bfe4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfe4 = add i32 %v1_1000bfe4, 52
  %v3_1000bfe4 = inttoptr i32 %v2_1000bfe4 to i32*
  store i32 %v0_1000bfe4, i32* %v3_1000bfe4, align 4
  %v0_1000bfe8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bfe8 = add i32 %v0_1000bfe8, 56
  %v2_1000bfe8 = inttoptr i32 %v1_1000bfe8 to i32*
  %v3_1000bfe8 = load i32, i32* %v2_1000bfe8, align 4
  %v1_1000bfec = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfec = add i32 %v1_1000bfec, 56
  %v3_1000bfec = inttoptr i32 %v2_1000bfec to i32*
  store i32 %v3_1000bfe8, i32* %v3_1000bfec, align 4
  %v0_1000bff0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bff0 = add i32 %v0_1000bff0, 64
  %v2_1000bff0 = inttoptr i32 %v1_1000bff0 to i32*
  %v3_1000bff0 = load i32, i32* %v2_1000bff0, align 4
  %v1_1000bff4 = add i32 %v0_1000bff0, 68
  %v2_1000bff4 = inttoptr i32 %v1_1000bff4 to i32*
  %v3_1000bff4 = load i32, i32* %v2_1000bff4, align 4
  store i32 %v3_1000bff4, i32* %r10.global-to-local, align 4
  %v1_1000bff8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bff8 = add i32 %v1_1000bff8, 64
  %v3_1000bff8 = inttoptr i32 %v2_1000bff8 to i32*
  store i32 %v3_1000bff0, i32* %v3_1000bff8, align 4
  %v0_1000bffc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bffc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bffc = add i32 %v1_1000bffc, 68
  %v3_1000bffc = inttoptr i32 %v2_1000bffc to i32*
  store i32 %v0_1000bffc, i32* %v3_1000bffc, align 4
  %v0_1000c000 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000c000 = add i32 %v0_1000c000, 72
  %v2_1000c000 = inttoptr i32 %v1_1000c000 to i32*
  %v3_1000c000 = load i32, i32* %v2_1000c000, align 4
  %v1_1000c004 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c004 = add i32 %v1_1000c004, 72
  %v3_1000c004 = inttoptr i32 %v2_1000c004 to i32*
  store i32 %v3_1000c000, i32* %v3_1000c004, align 4
  %v0_1000c008 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000c008 = add i32 %v0_1000c008, 80
  %v2_1000c008 = inttoptr i32 %v1_1000c008 to i32*
  %v3_1000c008 = load i32, i32* %v2_1000c008, align 4
  %v1_1000c00c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c00c = add i32 %v1_1000c00c, 80
  %v3_1000c00c = inttoptr i32 %v2_1000c00c to i32*
  store i32 %v3_1000c008, i32* %v3_1000c00c, align 4
  %v0_1000c010 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000c010 = add i32 %v0_1000c010, 88
  %v2_1000c010 = inttoptr i32 %v1_1000c010 to i32*
  %v3_1000c010 = load i32, i32* %v2_1000c010, align 4
  %v1_1000c014 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c014 = add i32 %v1_1000c014, 88
  %v3_1000c014 = inttoptr i32 %v2_1000c014 to i32*
  store i32 %v3_1000c010, i32* %v3_1000c014, align 4
  ret i32 %v3_1000bf84

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 13, 14, 16, 17, 15, 18 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 10, 6, 7, 0, 9, 8, 11, 12 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 104, { 0, 1, 4, 3, 5, 2, 6 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000c02c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c02c:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000c030 = load i32, i32* @lr, align 4
  store i32 %v0_1000c030, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268484692, i32* @lr, align 4
  %v3_1000c050 = call i32 @function_1000a5a4(i32 %arg2, i32 0, i32 88)
  %v0_1000c054 = load i32, i32* @r28, align 4
  %v1_1000c054 = inttoptr i32 %v0_1000c054 to i32*
  %v2_1000c054 = load i32, i32* %v1_1000c054, align 4
  store i32 %v2_1000c054, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000c05c = load i32, i32* @r29, align 4
  %v2_1000c05c = add i32 %v1_1000c05c, 4
  %v3_1000c05c = inttoptr i32 %v2_1000c05c to i32*
  store i32 %v2_1000c054, i32* %v3_1000c05c, align 4
  %v0_1000c060 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c060 = load i32, i32* @r29, align 4
  %v2_1000c060 = inttoptr i32 %v1_1000c060 to i32*
  store i32 %v0_1000c060, i32* %v2_1000c060, align 4
  %v0_1000c064 = load i32, i32* @r28, align 4
  %v1_1000c064 = add i32 %v0_1000c064, 4
  %v2_1000c064 = inttoptr i32 %v1_1000c064 to i32*
  %v3_1000c064 = load i32, i32* %v2_1000c064, align 4
  store i32 %v3_1000c064, i32* %r0.global-to-local, align 4
  %v1_1000c068 = load i32, i32* @r29, align 4
  %v2_1000c068 = add i32 %v1_1000c068, 12
  %v3_1000c068 = inttoptr i32 %v2_1000c068 to i32*
  store i32 %v3_1000c064, i32* %v3_1000c068, align 4
  %v0_1000c06c = load i32, i32* @r28, align 4
  %v1_1000c06c = add i32 %v0_1000c06c, 8
  %v2_1000c06c = inttoptr i32 %v1_1000c06c to i32*
  %v3_1000c06c = load i32, i32* %v2_1000c06c, align 4
  store i32 %v3_1000c06c, i32* %r0.global-to-local, align 4
  %v1_1000c070 = load i32, i32* @r29, align 4
  %v2_1000c070 = add i32 %v1_1000c070, 16
  %v3_1000c070 = inttoptr i32 %v2_1000c070 to i32*
  store i32 %v3_1000c06c, i32* %v3_1000c070, align 4
  %v0_1000c074 = load i32, i32* @r28, align 4
  %v1_1000c074 = add i32 %v0_1000c074, 12
  %v2_1000c074 = inttoptr i32 %v1_1000c074 to i16*
  %v3_1000c074 = load i16, i16* %v2_1000c074, align 2
  %v4_1000c074 = zext i16 %v3_1000c074 to i32
  store i32 %v4_1000c074, i32* %r0.global-to-local, align 4
  %v1_1000c078 = load i32, i32* @r29, align 4
  %v2_1000c078 = add i32 %v1_1000c078, 20
  %v3_1000c078 = inttoptr i32 %v2_1000c078 to i32*
  store i32 %v4_1000c074, i32* %v3_1000c078, align 4
  %v0_1000c07c = load i32, i32* @r28, align 4
  %v1_1000c07c = add i32 %v0_1000c07c, 16
  %v2_1000c07c = inttoptr i32 %v1_1000c07c to i32*
  %v3_1000c07c = load i32, i32* %v2_1000c07c, align 4
  store i32 %v3_1000c07c, i32* %r0.global-to-local, align 4
  %v1_1000c080 = load i32, i32* @r29, align 4
  %v2_1000c080 = add i32 %v1_1000c080, 24
  %v3_1000c080 = inttoptr i32 %v2_1000c080 to i32*
  store i32 %v3_1000c07c, i32* %v3_1000c080, align 4
  %v0_1000c084 = load i32, i32* @r28, align 4
  %v1_1000c084 = add i32 %v0_1000c084, 20
  %v2_1000c084 = inttoptr i32 %v1_1000c084 to i32*
  %v3_1000c084 = load i32, i32* %v2_1000c084, align 4
  store i32 %v3_1000c084, i32* %r0.global-to-local, align 4
  %v1_1000c088 = load i32, i32* @r29, align 4
  %v2_1000c088 = add i32 %v1_1000c088, 28
  %v3_1000c088 = inttoptr i32 %v2_1000c088 to i32*
  store i32 %v3_1000c084, i32* %v3_1000c088, align 4
  %v0_1000c08c = load i32, i32* @r28, align 4
  %v1_1000c08c = add i32 %v0_1000c08c, 24
  %v2_1000c08c = inttoptr i32 %v1_1000c08c to i32*
  %v3_1000c08c = load i32, i32* %v2_1000c08c, align 4
  store i32 %v3_1000c08c, i32* %r0.global-to-local, align 4
  %v0_1000c090 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c090 = load i32, i32* @r29, align 4
  %v2_1000c090 = add i32 %v1_1000c090, 32
  %v3_1000c090 = inttoptr i32 %v2_1000c090 to i32*
  store i32 %v0_1000c090, i32* %v3_1000c090, align 4
  %v0_1000c094 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c094 = load i32, i32* @r29, align 4
  %v2_1000c094 = add i32 %v1_1000c094, 36
  %v3_1000c094 = inttoptr i32 %v2_1000c094 to i32*
  store i32 %v0_1000c094, i32* %v3_1000c094, align 4
  %v0_1000c098 = load i32, i32* @r28, align 4
  %v1_1000c098 = add i32 %v0_1000c098, 28
  %v2_1000c098 = inttoptr i32 %v1_1000c098 to i32*
  %v3_1000c098 = load i32, i32* %v2_1000c098, align 4
  store i32 %v3_1000c098, i32* %r0.global-to-local, align 4
  %v1_1000c09c = load i32, i32* @r29, align 4
  %v2_1000c09c = add i32 %v1_1000c09c, 44
  %v3_1000c09c = inttoptr i32 %v2_1000c09c to i32*
  store i32 %v3_1000c098, i32* %v3_1000c09c, align 4
  %v0_1000c0a0 = load i32, i32* @r28, align 4
  %v1_1000c0a0 = add i32 %v0_1000c0a0, 32
  %v2_1000c0a0 = inttoptr i32 %v1_1000c0a0 to i32*
  %v3_1000c0a0 = load i32, i32* %v2_1000c0a0, align 4
  store i32 %v3_1000c0a0, i32* %r0.global-to-local, align 4
  %v1_1000c0a4 = load i32, i32* @r29, align 4
  %v2_1000c0a4 = add i32 %v1_1000c0a4, 48
  %v3_1000c0a4 = inttoptr i32 %v2_1000c0a4 to i32*
  store i32 %v3_1000c0a0, i32* %v3_1000c0a4, align 4
  %v0_1000c0a8 = load i32, i32* @r28, align 4
  %v1_1000c0a8 = add i32 %v0_1000c0a8, 36
  %v2_1000c0a8 = inttoptr i32 %v1_1000c0a8 to i32*
  %v3_1000c0a8 = load i32, i32* %v2_1000c0a8, align 4
  store i32 %v3_1000c0a8, i32* %r0.global-to-local, align 4
  %v1_1000c0ac = load i32, i32* @r29, align 4
  %v2_1000c0ac = add i32 %v1_1000c0ac, 52
  %v3_1000c0ac = inttoptr i32 %v2_1000c0ac to i32*
  store i32 %v3_1000c0a8, i32* %v3_1000c0ac, align 4
  %v0_1000c0b0 = load i32, i32* @r28, align 4
  %v1_1000c0b0 = add i32 %v0_1000c0b0, 40
  %v2_1000c0b0 = inttoptr i32 %v1_1000c0b0 to i32*
  %v3_1000c0b0 = load i32, i32* %v2_1000c0b0, align 4
  store i32 %v3_1000c0b0, i32* %r0.global-to-local, align 4
  %v1_1000c0b4 = load i32, i32* @r29, align 4
  %v2_1000c0b4 = add i32 %v1_1000c0b4, 56
  %v3_1000c0b4 = inttoptr i32 %v2_1000c0b4 to i32*
  store i32 %v3_1000c0b0, i32* %v3_1000c0b4, align 4
  %v0_1000c0b8 = load i32, i32* @r28, align 4
  %v1_1000c0b8 = add i32 %v0_1000c0b8, 48
  %v2_1000c0b8 = inttoptr i32 %v1_1000c0b8 to i32*
  %v3_1000c0b8 = load i32, i32* %v2_1000c0b8, align 4
  store i32 %v3_1000c0b8, i32* %r0.global-to-local, align 4
  %v1_1000c0bc = load i32, i32* @r29, align 4
  %v2_1000c0bc = add i32 %v1_1000c0bc, 64
  %v3_1000c0bc = inttoptr i32 %v2_1000c0bc to i32*
  store i32 %v3_1000c0b8, i32* %v3_1000c0bc, align 4
  %v0_1000c0c0 = load i32, i32* @r28, align 4
  %v1_1000c0c0 = add i32 %v0_1000c0c0, 56
  %v2_1000c0c0 = inttoptr i32 %v1_1000c0c0 to i32*
  %v3_1000c0c0 = load i32, i32* %v2_1000c0c0, align 4
  %v1_1000c0c4 = load i32, i32* @r29, align 4
  %v2_1000c0c4 = add i32 %v1_1000c0c4, 72
  %v3_1000c0c4 = inttoptr i32 %v2_1000c0c4 to i32*
  store i32 %v3_1000c0c0, i32* %v3_1000c0c4, align 4
  store i32 %v0_1000c030, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000c050

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 17, 12, 13, 2, 19, 11, 14, 0, 1, 15, 16, 3, 4, 18, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 40, { 11, 3, 0, 7, 8, 9, 10, 12, 2, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 22, 5, 23, 6, 24, 25 }
  uselistorder i32 52, { 6, 3, 4, 5, 7, 8, 0, 9, 1, 10, 2, 11 }
  uselistorder i32 48, { 9, 10, 6, 7, 11, 0, 13, 1, 2, 8, 12, 3, 14, 4, 15, 5, 16 }
  uselistorder i32 36, { 4, 5, 2, 3, 0, 6, 1, 7, 8, 9, 10, 11 }
  uselistorder i32 24, { 21, 22, 8, 9, 5, 6, 10, 76, 77, 78, 79, 80, 81, 11, 12, 13, 14, 15, 17, 18, 19, 20, 16, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 39, 40, 41, 42, 43, 44, 45, 46, 1, 47, 48, 49, 50, 51, 2, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 3, 66, 67, 68, 69, 70, 71, 72, 73, 4, 74, 7, 75, 82, 83, 84 }
  uselistorder i32 20, { 24, 25, 15, 16, 17, 18, 26, 27, 28, 29, 6, 19, 0, 1, 20, 21, 2, 22, 23, 30, 7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 8, 40, 41, 42, 43, 44, 45, 9, 46, 47, 48, 49, 51, 50, 52, 53, 54, 55, 10, 56, 57, 58, 59, 60, 61, 62, 11, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 12, 74, 75, 76, 3, 13, 77, 78, 79, 4, 14, 80, 81, 82, 83, 84, 85, 86, 87, 5 }
  uselistorder i32 16, { 63, 64, 47, 48, 65, 66, 67, 68, 69, 49, 148, 149, 70, 71, 31, 32, 33, 50, 34, 35, 51, 36, 37, 52, 53, 138, 139, 54, 38, 56, 16, 57, 58, 39, 59, 40, 60, 13, 0, 14, 1, 2, 61, 3, 55, 41, 62, 42, 43, 44, 45, 17, 121, 122, 123, 124, 125, 4, 18, 72, 5, 6, 73, 74, 75, 76, 77, 19, 78, 79, 80, 81, 82, 83, 84, 20, 85, 86, 22, 87, 88, 21, 89, 90, 24, 91, 92, 7, 93, 94, 95, 23, 96, 97, 26, 98, 99, 100, 101, 102, 25, 103, 104, 8, 9, 28, 106, 107, 108, 10, 15, 109, 105, 27, 110, 111, 112, 29, 113, 114, 115, 11, 116, 119, 120, 117, 118, 126, 127, 128, 30, 129, 130, 131, 12, 132, 135, 136, 133, 134, 137, 46, 140, 141, 142, 143, 144, 145, 146, 147 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000c0dc() local_unnamed_addr {
dec_label_pc_1000c0dc:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000c0dc = load i32, i32* @r5, align 4
  %v1_1000c0dc = call i32 @__asm_rlwinm.(i32 %v0_1000c0dc, i32 29, i32 3, i32 31)
  store i32 %v1_1000c0dc, i32* %r9.global-to-local, align 4
  %v4_1000c0dc = icmp eq i32 %v1_1000c0dc, 0
  %v0_1000c0e0 = load i32, i32* @r4, align 4
  %v1_1000c0e0 = add i32 %v0_1000c0e0, -4
  store i32 %v1_1000c0e0, i32* %r4.global-to-local, align 4
  %v0_1000c0e4 = load i32, i32* @r3, align 4
  %v1_1000c0e4 = add i32 %v0_1000c0e4, -4
  store i32 %v1_1000c0e4, i32* @r11, align 4
  br i1 %v4_1000c0dc, label %dec_label_pc_1000c10c, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0ec:                            ; preds = %dec_label_pc_1000c0dc
  %v1_1000c0ec = urem i32 %v1_1000c0e4, 4
  %v3_1000c0ec = icmp eq i32 %v1_1000c0ec, 0
  br i1 %v3_1000c0ec, label %dec_label_pc_1000c0f4, label %dec_label_pc_1000c148

dec_label_pc_1000c0f4:                            ; preds = %dec_label_pc_1000c168.dec_label_pc_1000c0f4_crit_edge, %dec_label_pc_1000c0ec
  %v1_1000c100.pre = phi i32 [ %v1_1000c0e4, %dec_label_pc_1000c0ec ], [ %v1_1000c100.pre.pre, %dec_label_pc_1000c168.dec_label_pc_1000c0f4_crit_edge ]
  %v0_1000c0f4 = phi i32 [ %v1_1000c0dc, %dec_label_pc_1000c0ec ], [ %v1_1000c168, %dec_label_pc_1000c168.dec_label_pc_1000c0f4_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000c0ec ], [ %v2_1000c150, %dec_label_pc_1000c168.dec_label_pc_1000c0f4_crit_edge ]
  store i32 %v0_1000c0f4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c0f8

dec_label_pc_1000c0f8:                            ; preds = %dec_label_pc_1000c0f8, %dec_label_pc_1000c0f4
  %v1_1000c100 = phi i32 [ %v2_1000c104, %dec_label_pc_1000c0f8 ], [ %v1_1000c100.pre, %dec_label_pc_1000c0f4 ]
  %v0_1000c0f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c0f8 = add i32 %v0_1000c0f8, 4
  %v2_1000c0f8 = inttoptr i32 %v1_1000c0f8 to i32*
  %v3_1000c0f8 = load i32, i32* %v2_1000c0f8, align 4
  %v1_1000c0fc = add i32 %v0_1000c0f8, 8
  %v2_1000c0fc = inttoptr i32 %v1_1000c0fc to i32*
  %v3_1000c0fc = load i32, i32* %v2_1000c0fc, align 4
  store i32 %v3_1000c0fc, i32* %r9.global-to-local, align 4
  store i32 %v1_1000c0fc, i32* %r4.global-to-local, align 4
  %v2_1000c100 = add i32 %v1_1000c100, 4
  %v3_1000c100 = inttoptr i32 %v2_1000c100 to i32*
  store i32 %v3_1000c0f8, i32* %v3_1000c100, align 4
  %v0_1000c104 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c104 = load i32, i32* @r11, align 4
  %v2_1000c104 = add i32 %v1_1000c104, 8
  %v3_1000c104 = inttoptr i32 %v2_1000c104 to i32*
  store i32 %v0_1000c104, i32* %v3_1000c104, align 4
  store i32 %v2_1000c104, i32* @r11, align 4
  %v0_1000c108 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c108 = add i32 %v0_1000c108, -1
  store i32 %v1_1000c108, i32* %ctr.global-to-local, align 4
  %v2_1000c108 = icmp eq i32 %v1_1000c108, 0
  br i1 %v2_1000c108, label %dec_label_pc_1000c10c, label %dec_label_pc_1000c0f8

dec_label_pc_1000c10c:                            ; preds = %dec_label_pc_1000c0f8, %dec_label_pc_1000c168, %dec_label_pc_1000c0dc
  %.1 = phi i32 [ undef, %dec_label_pc_1000c0dc ], [ %v2_1000c150, %dec_label_pc_1000c168 ], [ %.0, %dec_label_pc_1000c0f8 ]
  %v1_1000c10c = urem i32 %.1, 8
  store i32 %v1_1000c10c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000c10c, 4
  br i1 %tmp, label %dec_label_pc_1000c124, label %dec_label_pc_1000c118

dec_label_pc_1000c118:                            ; preds = %dec_label_pc_1000c10c
  %v0_1000c118 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c118 = add i32 %v0_1000c118, 4
  %v2_1000c118 = inttoptr i32 %v1_1000c118 to i32*
  %v3_1000c118 = load i32, i32* %v2_1000c118, align 4
  store i32 %v1_1000c118, i32* %r4.global-to-local, align 4
  %v1_1000c11c = add nsw i32 %v1_1000c10c, -4
  store i32 %v1_1000c11c, i32* @r5, align 4
  %v1_1000c120 = load i32, i32* @r11, align 4
  %v2_1000c120 = add i32 %v1_1000c120, 4
  %v3_1000c120 = inttoptr i32 %v2_1000c120 to i32*
  store i32 %v3_1000c118, i32* %v3_1000c120, align 4
  store i32 %v2_1000c120, i32* @r11, align 4
  %v0_1000c124.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000c124

dec_label_pc_1000c124:                            ; preds = %dec_label_pc_1000c10c, %dec_label_pc_1000c118
  %v0_1000c124 = phi i32 [ %v1_1000c10c, %dec_label_pc_1000c10c ], [ %v0_1000c124.pre, %dec_label_pc_1000c118 ]
  %v3_1000c124 = icmp eq i32 %v0_1000c124, 0
  %v0_1000c128 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c124, i32 %v0_1000c128)
  %v0_1000c12c = load i32, i32* @r5, align 4
  store i32 %v0_1000c12c, i32* %ctr.global-to-local, align 4
  %v0_1000c130 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c130 = add i32 %v0_1000c130, 3
  store i32 %v1_1000c130, i32* %r4.global-to-local, align 4
  %v0_1000c134 = load i32, i32* @r11, align 4
  %v1_1000c134 = add i32 %v0_1000c134, 3
  store i32 %v1_1000c134, i32* %r9.global-to-local, align 4
  %v1_1000c1389 = add i32 %v0_1000c130, 4
  %v2_1000c13810 = inttoptr i32 %v1_1000c1389 to i8*
  %v3_1000c13811 = load i8, i8* %v2_1000c13810, align 1
  store i32 %v1_1000c1389, i32* %r4.global-to-local, align 4
  %v3_1000c13c13 = add i32 %v0_1000c134, 4
  %v4_1000c13c14 = inttoptr i32 %v3_1000c13c13 to i8*
  store i8 %v3_1000c13811, i8* %v4_1000c13c14, align 1
  store i32 %v3_1000c13c13, i32* %r9.global-to-local, align 4
  %v0_1000c14015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c14016 = add i32 %v0_1000c14015, -1
  store i32 %v1_1000c14016, i32* %ctr.global-to-local, align 4
  %v2_1000c14017 = icmp eq i32 %v1_1000c14016, 0
  br i1 %v2_1000c14017, label %dec_label_pc_1000c174, label %dec_label_pc_1000c138.dec_label_pc_1000c138_crit_edge

dec_label_pc_1000c138.dec_label_pc_1000c138_crit_edge: ; preds = %dec_label_pc_1000c124, %dec_label_pc_1000c138.dec_label_pc_1000c138_crit_edge
  %v3_1000c13c18 = phi i32 [ %v3_1000c13c, %dec_label_pc_1000c138.dec_label_pc_1000c138_crit_edge ], [ %v3_1000c13c13, %dec_label_pc_1000c124 ]
  %v0_1000c138.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c138 = add i32 %v0_1000c138.pre, 1
  %v2_1000c138 = inttoptr i32 %v1_1000c138 to i8*
  %v3_1000c138 = load i8, i8* %v2_1000c138, align 1
  store i32 %v1_1000c138, i32* %r4.global-to-local, align 4
  %v3_1000c13c = add i32 %v3_1000c13c18, 1
  %v4_1000c13c = inttoptr i32 %v3_1000c13c to i8*
  store i8 %v3_1000c138, i8* %v4_1000c13c, align 1
  store i32 %v3_1000c13c, i32* %r9.global-to-local, align 4
  %v0_1000c140 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c140 = add i32 %v0_1000c140, -1
  store i32 %v1_1000c140, i32* %ctr.global-to-local, align 4
  %v2_1000c140 = icmp eq i32 %v1_1000c140, 0
  br i1 %v2_1000c140, label %dec_label_pc_1000c174, label %dec_label_pc_1000c138.dec_label_pc_1000c138_crit_edge

dec_label_pc_1000c148:                            ; preds = %dec_label_pc_1000c0ec
  %v1_1000c148 = sub nsw i32 4, %v1_1000c0ec
  store i32 %v1_1000c148, i32* %ctr.global-to-local, align 4
  %v1_1000c150 = load i32, i32* @r5, align 4
  %v2_1000c150 = sub i32 %v1_1000c150, %v1_1000c148
  br label %dec_label_pc_1000c154

dec_label_pc_1000c154:                            ; preds = %dec_label_pc_1000c154.dec_label_pc_1000c154_crit_edge, %dec_label_pc_1000c148
  %v2_1000c15c = phi i32 [ %v1_1000c160, %dec_label_pc_1000c154.dec_label_pc_1000c154_crit_edge ], [ %v1_1000c0e4, %dec_label_pc_1000c148 ]
  %v0_1000c154 = phi i32 [ %v0_1000c154.pre, %dec_label_pc_1000c154.dec_label_pc_1000c154_crit_edge ], [ %v1_1000c0e0, %dec_label_pc_1000c148 ]
  %v1_1000c154 = add i32 %v0_1000c154, 4
  %v2_1000c154 = inttoptr i32 %v1_1000c154 to i8*
  %v3_1000c154 = load i8, i8* %v2_1000c154, align 1
  %v1_1000c158 = add i32 %v0_1000c154, 1
  store i32 %v1_1000c158, i32* %r4.global-to-local, align 4
  %v3_1000c15c = add i32 %v2_1000c15c, 4
  %v4_1000c15c = inttoptr i32 %v3_1000c15c to i8*
  store i8 %v3_1000c154, i8* %v4_1000c15c, align 1
  %v0_1000c160 = load i32, i32* @r11, align 4
  %v1_1000c160 = add i32 %v0_1000c160, 1
  store i32 %v1_1000c160, i32* @r11, align 4
  %v0_1000c164 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c164 = add i32 %v0_1000c164, -1
  store i32 %v1_1000c164, i32* %ctr.global-to-local, align 4
  %v2_1000c164 = icmp eq i32 %v1_1000c164, 0
  br i1 %v2_1000c164, label %dec_label_pc_1000c168, label %dec_label_pc_1000c154.dec_label_pc_1000c154_crit_edge

dec_label_pc_1000c154.dec_label_pc_1000c154_crit_edge: ; preds = %dec_label_pc_1000c154
  %v0_1000c154.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000c154

dec_label_pc_1000c168:                            ; preds = %dec_label_pc_1000c154
  %v1_1000c168 = call i32 @__asm_rlwinm.(i32 %v2_1000c150, i32 29, i32 3, i32 31)
  store i32 %v1_1000c168, i32* %r9.global-to-local, align 4
  %v4_1000c168 = icmp eq i32 %v1_1000c168, 0
  br i1 %v4_1000c168, label %dec_label_pc_1000c10c, label %dec_label_pc_1000c168.dec_label_pc_1000c0f4_crit_edge

dec_label_pc_1000c168.dec_label_pc_1000c0f4_crit_edge: ; preds = %dec_label_pc_1000c168
  %v1_1000c100.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000c0f4

dec_label_pc_1000c174:                            ; preds = %dec_label_pc_1000c138.dec_label_pc_1000c138_crit_edge, %dec_label_pc_1000c124
  %v0_1000c174 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c174

; uselistorder directives
  uselistorder i32 %v1_1000c168, { 1, 2, 0 }
  uselistorder i32 %v1_1000c164, { 1, 0 }
  uselistorder i32 %v1_1000c160, { 1, 0 }
  uselistorder i32 %v0_1000c154, { 1, 0 }
  uselistorder i32 %v2_1000c150, { 2, 1, 0 }
  uselistorder i32 %v1_1000c140, { 1, 0 }
  uselistorder i32 %v3_1000c13c, { 1, 2, 0 }
  uselistorder i32 %v1_1000c10c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000c108, { 1, 0 }
  uselistorder i32 %v2_1000c104, { 1, 2, 0 }
  uselistorder i32 %v1_1000c0ec, { 1, 0 }
  uselistorder i32 %v1_1000c0e4, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 4, 5, 6, 7, 2, 3, 0, 1 }
  uselistorder i32 29, { 41, 42, 25, 27, 26, 28, 2, 3, 45, 46, 43, 44, 47, 48, 29, 30, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 17, 18, 23, 24, 31, 32, 33, 34, 37, 38, 35, 36, 39, 40 }
  uselistorder label %dec_label_pc_1000c138.dec_label_pc_1000c138_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000c124, { 1, 0 }
  uselistorder label %dec_label_pc_1000c10c, { 1, 0, 2 }
}

define i32 @function_1000c178(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000c178:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268485012, i32* @lr, align 4
  %v0_1000c190 = call i32 @function_1000c0dc()
  %v0_1000c198 = load i32, i32* @r28, align 4
  %v1_1000c198 = load i32, i32* @r29, align 4
  %v2_1000c198 = add i32 %v1_1000c198, %v0_1000c198
  ret i32 %v2_1000c198

; uselistorder directives
  uselistorder i32* @r28, { 9, 10, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 2, 86, 87, 88, 89, 90, 91, 342, 343, 344, 345, 346, 296, 297, 298, 299, 300, 301, 302, 303, 304, 317, 318, 319, 328, 11, 12, 13, 14, 15, 92, 93, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 3, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 43, 4, 44, 45, 46, 47, 48, 52, 1, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 94, 95, 96, 97, 98, 99, 100, 5, 101, 102, 103, 104, 105, 106, 107, 108, 0, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 6, 153, 154, 155, 156, 157, 160, 161, 158, 159, 164, 165, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 321, 322, 323, 8, 324, 325, 326, 327, 7, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341 }
}

define i32 @function_1000c1ac(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000c1ac:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000c1ac = icmp eq i8* %arg1, null
  br i1 %v3_1000c1ac, label %dec_label_pc_1000c264, label %dec_label_pc_1000c1b4

dec_label_pc_1000c1b4:                            ; preds = %dec_label_pc_1000c1ac
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000c1c8.pre = load i32, i32* bitcast (i32** @global_var_1001d22c.490 to i32*), align 4
  br label %dec_label_pc_1000c1c4

dec_label_pc_1000c1c4:                            ; preds = %dec_label_pc_1000c1b4, %dec_label_pc_1000c23c
  %v0_1000c23c = phi i32 [ 0, %dec_label_pc_1000c1b4 ], [ %v2_1000c244, %dec_label_pc_1000c23c ]
  %v0_1000c240 = phi i32 [ 1, %dec_label_pc_1000c1b4 ], [ %v1_1000c240, %dec_label_pc_1000c23c ]
  %v0_1000c1c4 = phi i32 [ %tmp, %dec_label_pc_1000c1b4 ], [ %v0_1000c1c43, %dec_label_pc_1000c23c ]
  %v1_1000c1c4 = inttoptr i32 %v0_1000c1c4 to i8*
  %v2_1000c1c4 = load i8, i8* %v1_1000c1c4, align 1
  %v3_1000c1c4 = zext i8 %v2_1000c1c4 to i32
  %v1_1000c1cc = mul nuw nsw i32 %v3_1000c1c4, 2
  %v2_1000c1d0 = add i32 %v1_1000c1cc, %v3_1000c1c8.pre
  %v3_1000c1d0 = inttoptr i32 %v2_1000c1d0 to i16*
  %v4_1000c1d0 = load i16, i16* %v3_1000c1d0, align 2
  %v1_1000c1d4 = and i16 %v4_1000c1d0, 8
  %v3_1000c1d4 = icmp eq i16 %v1_1000c1d4, 0
  br i1 %v3_1000c1d4, label %dec_label_pc_1000c264, label %dec_label_pc_1000c1dc

dec_label_pc_1000c1dc:                            ; preds = %dec_label_pc_1000c1c4
  br label %dec_label_pc_1000c1f4

dec_label_pc_1000c1e4:                            ; preds = %dec_label_pc_1000c1f4
  %v1_1000c1f8 = mul i32 %v1_1000c244, 10
  %v2_1000c200 = add i32 %v3_1000c1f4, %v1_1000c1f8
  %v1_1000c1e4 = add i32 %v2_1000c200, -48
  %v1_1000c1e8 = add i32 %v0_1000c22c, 1
  %v2_1000c1ec = icmp sgt i32 %v1_1000c1e4, 255
  br i1 %v2_1000c1ec, label %dec_label_pc_1000c264, label %dec_label_pc_1000c1f4

dec_label_pc_1000c1f4:                            ; preds = %dec_label_pc_1000c1e4, %dec_label_pc_1000c1dc
  %v1_1000c244 = phi i32 [ %v1_1000c1e4, %dec_label_pc_1000c1e4 ], [ 0, %dec_label_pc_1000c1dc ]
  %v0_1000c22c = phi i32 [ %v1_1000c1e8, %dec_label_pc_1000c1e4 ], [ %v0_1000c1c4, %dec_label_pc_1000c1dc ]
  %v1_1000c1f4 = inttoptr i32 %v0_1000c22c to i8*
  %v2_1000c1f4 = load i8, i8* %v1_1000c1f4, align 1
  %v3_1000c1f4 = zext i8 %v2_1000c1f4 to i32
  %v1_1000c1fc = mul nuw nsw i32 %v3_1000c1f4, 2
  %v2_1000c204 = add i32 %v1_1000c1fc, %v3_1000c1c8.pre
  %v3_1000c204 = inttoptr i32 %v2_1000c204 to i16*
  %v4_1000c204 = load i16, i16* %v3_1000c204, align 2
  %v5_1000c204 = zext i16 %v4_1000c204 to i32
  %v1_1000c208 = and i32 %v5_1000c204, 8
  %v3_1000c208 = icmp eq i32 %v1_1000c208, 0
  br i1 %v3_1000c208, label %dec_label_pc_1000c210, label %dec_label_pc_1000c1e4

dec_label_pc_1000c210:                            ; preds = %dec_label_pc_1000c1f4
  %v2_1000c210 = icmp sgt i32 %v0_1000c240, 3
  br i1 %v2_1000c210, label %dec_label_pc_1000c228, label %dec_label_pc_1000c218

dec_label_pc_1000c218:                            ; preds = %dec_label_pc_1000c210
  %v3_1000c218 = icmp eq i8 %v2_1000c1f4, 46
  br i1 %v3_1000c218, label %dec_label_pc_1000c220, label %dec_label_pc_1000c264

dec_label_pc_1000c220:                            ; preds = %dec_label_pc_1000c218
  %v1_1000c220 = add i32 %v0_1000c22c, 1
  br label %dec_label_pc_1000c23c

dec_label_pc_1000c228:                            ; preds = %dec_label_pc_1000c210
  %v3_1000c228 = icmp eq i8 %v2_1000c1f4, 0
  %v1_1000c22c = add i32 %v0_1000c22c, 1
  br i1 %v3_1000c228, label %dec_label_pc_1000c23c, label %dec_label_pc_1000c234

dec_label_pc_1000c234:                            ; preds = %dec_label_pc_1000c228
  %v1_1000c234 = and i32 %v5_1000c204, 32
  %v3_1000c234 = icmp eq i32 %v1_1000c234, 0
  br i1 %v3_1000c234, label %dec_label_pc_1000c264, label %dec_label_pc_1000c23c

dec_label_pc_1000c23c:                            ; preds = %dec_label_pc_1000c234, %dec_label_pc_1000c228, %dec_label_pc_1000c220
  %v0_1000c1c43 = phi i32 [ %v1_1000c22c, %dec_label_pc_1000c234 ], [ %v1_1000c22c, %dec_label_pc_1000c228 ], [ %v1_1000c220, %dec_label_pc_1000c220 ]
  %v1_1000c23c = mul i32 %v0_1000c23c, 256
  %v1_1000c240 = add nuw nsw i32 %v0_1000c240, 1
  %v2_1000c244 = or i32 %v1_1000c244, %v1_1000c23c
  store i32 %v2_1000c244, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000c240, 5
  br i1 %tmp10, label %dec_label_pc_1000c1c4, label %dec_label_pc_1000c250

dec_label_pc_1000c250:                            ; preds = %dec_label_pc_1000c23c
  %v0_1000c250 = load i32, i32* @r4, align 4
  %v3_1000c250 = icmp eq i32 %v0_1000c250, 0
  %v0_1000c258 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c250, i32 %v0_1000c258)
  %v0_1000c25c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c25c = load i32, i32* @r4, align 4
  %v2_1000c25c = inttoptr i32 %v1_1000c25c to i32*
  store i32 %v0_1000c25c, i32* %v2_1000c25c, align 4
  ret i32 1

dec_label_pc_1000c264:                            ; preds = %dec_label_pc_1000c218, %dec_label_pc_1000c234, %dec_label_pc_1000c1c4, %dec_label_pc_1000c1e4, %dec_label_pc_1000c1ac
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000c244, { 1, 0 }
  uselistorder i32 %v1_1000c240, { 1, 0 }
  uselistorder i32 %v0_1000c22c, { 0, 1, 3, 2 }
  uselistorder i32 5, { 23, 1, 24, 25, 37, 26, 27, 38, 39, 40, 0, 28, 41, 2, 3, 42, 29, 30, 31, 32, 33, 34, 35, 43, 4, 6, 7, 44, 5, 45, 10, 9, 46, 8, 12, 47, 11, 15, 14, 48, 13, 36, 49, 16, 18, 19, 17, 21, 22, 20, 50, 51, 52, 53, 54, 55 }
  uselistorder i8 0, { 4, 10, 1, 11, 12, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 23, 24, 25, 26, 27, 7, 28, 29, 30, 31, 32, 33, 34, 35, 3, 36, 37, 38, 39, 41, 40, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 51, 58, 66, 67, 59, 60, 61, 62, 56, 57, 9, 63, 64, 65, 8, 5, 68, 69, 70, 71, 72, 73 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 129, 3, 184, 185, 66, 48, 49, 67, 68, 69, 70, 71, 72, 188, 189, 11, 186, 187, 133, 132, 130, 131, 108, 109, 110, 134, 135, 136, 122, 123, 124, 4, 50, 51, 52, 5, 190, 6, 73, 74, 75, 76, 137, 138, 32, 33, 53, 16, 15, 54, 18, 17, 55, 34, 35, 56, 57, 7, 8, 9, 58, 59, 60, 36, 37, 62, 38, 63, 65, 64, 61, 103, 39, 40, 41, 42, 43, 77, 19, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 44, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 12, 104, 105, 106, 107, 13, 20, 111, 21, 112, 22, 113, 23, 114, 24, 115, 25, 116, 117, 26, 118, 27, 119, 28, 120, 29, 121, 10, 125, 126, 45, 127, 128, 0, 1, 2, 139, 140, 141, 142, 46, 143, 144, 145, 146, 147, 148, 47, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 155, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 30, 179, 14, 180, 181, 182, 183, 31 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 10, { 80, 50, 5, 3, 0, 15, 16, 17, 31, 18, 19, 32, 33, 34, 35, 36, 37, 38, 20, 39, 40, 41, 21, 42, 22, 43, 23, 44, 6, 45, 7, 46, 47, 48, 2, 49, 24, 1, 25, 26, 27, 8, 9, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 4, 61, 10, 62, 63, 64, 65, 11, 66, 67, 68, 69, 70, 12, 71, 72, 73, 74, 75, 76, 77, 78, 79, 28, 81, 82, 83, 84, 29, 85, 30, 13, 86, 14, 87 }
  uselistorder i16 0, { 0, 2, 3, 4, 6, 5, 1, 7, 8, 9, 10 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000c264, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000c1c4, { 1, 0 }
}

define i32 @function_1000c26c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c26c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000c270 = load i32, i32* @lr, align 4
  store i32 %v0_1000c270, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000c27c = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000c28c = add i32 %tmp, 4
  store i32 %v1_1000c28c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000c294 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000c294, i32* @r3, align 4
  br i1 %v3_1000c27c, label %dec_label_pc_1000c2bc, label %dec_label_pc_1000c29c

dec_label_pc_1000c29c:                            ; preds = %dec_label_pc_1000c26c
  %v2_1000c29c = load i32, i32* %arg2, align 4
  store i32 %v2_1000c29c, i32* %r0.global-to-local, align 4
  store i32 268485288, i32* @lr, align 4
  %v0_1000c2a4 = call i32 @function_1000c0dc()
  %v0_1000c2a8 = load i32, i32* @r31, align 4
  %v1_1000c2a8 = add i32 %v0_1000c2a8, 132
  %v2_1000c2a8 = inttoptr i32 %v1_1000c2a8 to i32*
  %v3_1000c2a8 = load i32, i32* %v2_1000c2a8, align 4
  store i32 %v3_1000c2a8, i32* %r0.global-to-local, align 4
  %v1_1000c2b4 = add i32 %v0_1000c2a8, 136
  %v2_1000c2b4 = inttoptr i32 %v1_1000c2b4 to i32*
  %v3_1000c2b4 = load i32, i32* %v2_1000c2b4, align 4
  store i32 %v3_1000c2b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000c2bc

dec_label_pc_1000c2bc:                            ; preds = %dec_label_pc_1000c26c, %dec_label_pc_1000c29c
  store i32 268485340, i32* @lr, align 4
  %v0_1000c2d8 = call i32 @function_1000c4d0()
  %v0_1000c2dc = load i32, i32* @r30, align 4
  %v3_1000c2dc = icmp eq i32 %v0_1000c2dc, 0
  store i32 %v0_1000c2d8, i32* @r31, align 4
  br i1 %v3_1000c2dc, label %dec_label_pc_1000c318, label %dec_label_pc_1000c2ec

dec_label_pc_1000c2ec:                            ; preds = %dec_label_pc_1000c2bc
  %v1_1000c2e4 = icmp slt i32 %v0_1000c2d8, 0
  %v1_1000c2ec = add i32 %v0_1000c2dc, 4
  store i32 %v1_1000c2ec, i32* @r3, align 4
  %v2_1000c2f0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000c2f0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000c2e4, label %dec_label_pc_1000c318, label %dec_label_pc_1000c2fc

dec_label_pc_1000c2fc:                            ; preds = %dec_label_pc_1000c2ec
  %v3_1000c2fc = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000c2fc, i32* %r0.global-to-local, align 4
  %v2_1000c300 = inttoptr i32 %v0_1000c2dc to i32*
  store i32 %v3_1000c2fc, i32* %v2_1000c300, align 4
  store i32 268485384, i32* @lr, align 4
  %v0_1000c304 = call i32 @function_1000c0dc()
  %v1_1000c310 = load i32, i32* @r30, align 4
  %v2_1000c310 = add i32 %v1_1000c310, 136
  %v3_1000c310 = inttoptr i32 %v2_1000c310 to i32*
  %v0_1000c314 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c314 = load i32, i32* @r30, align 4
  %v2_1000c314 = add i32 %v1_1000c314, 132
  %v3_1000c314 = inttoptr i32 %v2_1000c314 to i32*
  store i32 %v0_1000c314, i32* %v3_1000c314, align 4
  %v0_1000c31c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c318

dec_label_pc_1000c318:                            ; preds = %dec_label_pc_1000c2ec, %dec_label_pc_1000c2bc, %dec_label_pc_1000c2fc
  %v0_1000c31c = phi i32 [ %v0_1000c2d8, %dec_label_pc_1000c2ec ], [ %v0_1000c2d8, %dec_label_pc_1000c2bc ], [ %v0_1000c31c.pre, %dec_label_pc_1000c2fc ]
  store i32 %v0_1000c270, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c31c

; uselistorder directives
  uselistorder i32 %v0_1000c2d8, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000c0dc, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 19, 20, 1, 21, 22, 0, 23, 24, 25, 8, 9, 10, 28, 14, 6, 7, 29, 30, 31, 32, 4, 11, 5, 26, 27, 2, 3, 12, 15, 16, 17, 18, 13 }
  uselistorder i32 128, { 15, 16, 2, 7, 8, 9, 12, 10, 13, 11, 14, 3, 0, 1, 4, 5, 6 }
  uselistorder i32* @r30, { 199, 200, 201, 202, 0, 120, 1, 45, 46, 47, 203, 206, 204, 205, 121, 122, 123, 111, 112, 113, 114, 115, 124, 125, 129, 126, 127, 128, 7, 8, 9, 10, 11, 12, 13, 2, 14, 15, 3, 16, 17, 24, 25, 18, 19, 20, 4, 21, 22, 23, 26, 28, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 5, 55, 56, 6, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 194, 197, 198 }
  uselistorder i32* null, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44, 31, 32, 45, 33, 34, 35, 36, 1, 37, 38, 39, 40, 2, 41, 42, 3, 43, 4, 26, 27, 28, 29, 30 }
  uselistorder i32* @r31, { 2, 277, 278, 279, 215, 3, 216, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 286, 287, 280, 15, 281, 282, 283, 284, 285, 217, 218, 219, 220, 221, 222, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 227, 224, 225, 226, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 96, 4, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 26, 27, 28, 29, 111, 112, 113, 114, 115, 30, 31, 32, 33, 43, 44, 45, 46, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 81, 82, 83, 84, 85, 116, 117, 118, 119, 120, 121, 122, 123, 124, 1, 5, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 6, 143, 7, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 210, 8, 211, 213, 212, 214, 13, 228, 229, 230, 231, 9, 235, 236, 237, 238, 232, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 14, 247, 248, 11, 249, 250, 251, 252, 253, 255, 10, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 12, 270, 271, 272, 273, 274, 275, 276 }
  uselistorder label %dec_label_pc_1000c318, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c2bc, { 1, 0 }
}

define i32 @function_1000c330(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c364.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000c348 = call i32 @function_1000b688()
  %v2_1000c350 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000c350, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000c36833 = add i32 %v2_1000c350, 124
  %v4_1000c36834 = inttoptr i32 %v3_1000c36833 to i32*
  store i32 0, i32* %v4_1000c36834, align 4
  %v0_1000c36c35 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c36c36 = add i32 %v0_1000c36c35, -1
  store i32 %v1_1000c36c36, i32* %r9.global-to-local, align 4
  %v0_1000c37037 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c37038 = add i32 %v0_1000c37037, -1
  store i32 %v1_1000c37038, i32* %ctr.global-to-local, align 4
  %v2_1000c37039 = icmp eq i32 %v1_1000c37038, 0
  br i1 %v2_1000c37039, label %dec_label_pc_1000c374, label %dec_label_pc_1000c364.dec_label_pc_1000c364_crit_edge

dec_label_pc_1000c364.dec_label_pc_1000c364_crit_edge: ; preds = %dec_label_pc_1000c364.lr.ph, %dec_label_pc_1000c364.dec_label_pc_1000c364_crit_edge
  %v1_1000c36c40 = phi i32 [ %v1_1000c36c, %dec_label_pc_1000c364.dec_label_pc_1000c364_crit_edge ], [ %v1_1000c36c36, %dec_label_pc_1000c364.lr.ph ]
  %v0_1000c368.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c368.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c364 = mul i32 %v1_1000c36c40, 4
  %v3_1000c368 = add i32 %v1_1000c364, %v1_1000c368.pre
  %v4_1000c368 = inttoptr i32 %v3_1000c368 to i32*
  store i32 %v0_1000c368.pre, i32* %v4_1000c368, align 4
  %v0_1000c36c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c36c = add i32 %v0_1000c36c, -1
  store i32 %v1_1000c36c, i32* %r9.global-to-local, align 4
  %v0_1000c370 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c370 = add i32 %v0_1000c370, -1
  store i32 %v1_1000c370, i32* %ctr.global-to-local, align 4
  %v2_1000c370 = icmp eq i32 %v1_1000c370, 0
  br i1 %v2_1000c370, label %dec_label_pc_1000c374, label %dec_label_pc_1000c364.dec_label_pc_1000c364_crit_edge

dec_label_pc_1000c374:                            ; preds = %dec_label_pc_1000c364.dec_label_pc_1000c364_crit_edge, %dec_label_pc_1000c364.lr.ph
  store i32 %v2_1000c350, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000c37c = call i32 @function_1000aca4()
  %v3_1000c380 = icmp eq i32 %v0_1000c37c, 0
  br i1 %v3_1000c380, label %dec_label_pc_1000c388, label %dec_label_pc_1000c398

dec_label_pc_1000c388:                            ; preds = %dec_label_pc_1000c374
  store i32 268485528, i32* @lr, align 4
  %v3_1000c394 = call i32 @function_1000a140(i32 1, i32 %v2_1000c350, i32 0)
  br label %dec_label_pc_1000c398

dec_label_pc_1000c398:                            ; preds = %dec_label_pc_1000c374, %dec_label_pc_1000c388
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000c39c = load i32, i32* @global_var_1001d294.493, align 4
  %v3_1000c3a0 = icmp eq i32 %v3_1000c39c, 0
  br i1 %v3_1000c3a0, label %dec_label_pc_1000c3a8, label %dec_label_pc_1000c3d0

dec_label_pc_1000c3a8:                            ; preds = %dec_label_pc_1000c398
  store i32 1, i32* @global_var_1001d294.493, align 4
  br label %dec_label_pc_1000c3b0

dec_label_pc_1000c3b0:                            ; preds = %dec_label_pc_1000c42c, %dec_label_pc_1000c3a8
  store i32 ptrtoint (i32* @global_var_1001d1f8.491 to i32), i32* %r29.global-to-local, align 4
  %v0_1000c3bc = call i32 @function_1000b688()
  store i32 268485576, i32* @lr, align 4
  %v1_1000c3c4 = call i32 @function_1000c518(i32 6)
  %v0_1000c3cc = call i32 @function_1000b688()
  %v3_1000c3d4.pre = load i32, i32* @global_var_1001d294.493, align 4
  br label %dec_label_pc_1000c3d0

dec_label_pc_1000c3d0:                            ; preds = %dec_label_pc_1000c398, %dec_label_pc_1000c3b0
  %v0_1000c448 = phi i32 [ %v3_1000c39c, %dec_label_pc_1000c398 ], [ %v3_1000c3d4.pre, %dec_label_pc_1000c3b0 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000c3d8 = icmp eq i32 %v0_1000c448, 1
  br i1 %v3_1000c3d8, label %dec_label_pc_1000c418.lr.ph, label %dec_label_pc_1000c448

dec_label_pc_1000c418.lr.ph:                      ; preds = %dec_label_pc_1000c3d0
  %v2_1000c3e4 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001d294.493, align 4
  store i32 ptrtoint (i32* @global_var_1000c3f8.495 to i32), i32* @lr, align 4
  %v3_1000c3f4 = call i32 @function_1000a5a4(i32 %v2_1000c3e4, i32 0, i32 140)
  store i32 %v2_1000c350, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000c36833, i32* %r9.global-to-local, align 4
  %v2_1000c42025 = add i32 %v2_1000c350, 256
  %v3_1000c42026 = inttoptr i32 %v2_1000c42025 to i32*
  store i32 -1, i32* %v3_1000c42026, align 4
  %v0_1000c42427 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c42428 = add i32 %v0_1000c42427, -1
  store i32 %v1_1000c42428, i32* %r11.global-to-local, align 4
  %v0_1000c42829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c42830 = add i32 %v0_1000c42829, -1
  store i32 %v1_1000c42830, i32* %ctr.global-to-local, align 4
  %v2_1000c42831 = icmp eq i32 %v1_1000c42830, 0
  br i1 %v2_1000c42831, label %dec_label_pc_1000c42c, label %dec_label_pc_1000c418.dec_label_pc_1000c418_crit_edge

dec_label_pc_1000c418.dec_label_pc_1000c418_crit_edge: ; preds = %dec_label_pc_1000c418.lr.ph, %dec_label_pc_1000c418.dec_label_pc_1000c418_crit_edge
  %v1_1000c42432 = phi i32 [ %v1_1000c424, %dec_label_pc_1000c418.dec_label_pc_1000c418_crit_edge ], [ %v1_1000c42428, %dec_label_pc_1000c418.lr.ph ]
  %v1_1000c41c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000c420.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c418 = mul i32 %v1_1000c42432, 4
  %v2_1000c41c = add i32 %v1_1000c418, %v1_1000c41c.pre
  store i32 %v2_1000c41c, i32* %r9.global-to-local, align 4
  %v2_1000c420 = add i32 %v2_1000c41c, 132
  %v3_1000c420 = inttoptr i32 %v2_1000c420 to i32*
  store i32 %v0_1000c420.pre, i32* %v3_1000c420, align 4
  %v0_1000c424 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c424 = add i32 %v0_1000c424, -1
  store i32 %v1_1000c424, i32* %r11.global-to-local, align 4
  %v0_1000c428 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c428 = add i32 %v0_1000c428, -1
  store i32 %v1_1000c428, i32* %ctr.global-to-local, align 4
  %v2_1000c428 = icmp eq i32 %v1_1000c428, 0
  br i1 %v2_1000c428, label %dec_label_pc_1000c42c, label %dec_label_pc_1000c418.dec_label_pc_1000c418_crit_edge

dec_label_pc_1000c42c:                            ; preds = %dec_label_pc_1000c418.dec_label_pc_1000c418_crit_edge, %dec_label_pc_1000c418.lr.ph
  store i32 268485700, i32* @lr, align 4
  %v4_1000c440 = call i32 @function_1000c26c(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000c3b0

dec_label_pc_1000c448:                            ; preds = %dec_label_pc_1000c3d0
  %v3_1000c448 = icmp eq i32 %v0_1000c448, 2
  br i1 %v3_1000c448, label %dec_label_pc_1000c450, label %dec_label_pc_1000c45c

dec_label_pc_1000c450:                            ; preds = %dec_label_pc_1000c448
  store i32 3, i32* @global_var_1001d294.493, align 4
  br label %dec_label_pc_1000c45c

dec_label_pc_1000c45c:                            ; preds = %dec_label_pc_1000c448, %dec_label_pc_1000c450
  %v3_1000c45c = phi i32 [ %v0_1000c448, %dec_label_pc_1000c448 ], [ 3, %dec_label_pc_1000c450 ]
  %v1_1000c464 = icmp ne i32 %v3_1000c45c, 3
  call void @__pseudo_cond_branch(i1 %v1_1000c464, i32 268485752)
  store i32 4, i32* @global_var_1001d294.493, align 4
  %v1_1000c474 = call i32 @function_1000ba28(i32 127)
  ret i32 %v1_1000c474

; uselistorder directives
  uselistorder i32 %v1_1000c428, { 1, 0 }
  uselistorder i32 %v1_1000c424, { 1, 0 }
  uselistorder i32 %v1_1000c370, { 1, 0 }
  uselistorder i32 %v1_1000c36c, { 1, 0 }
  uselistorder i32 %v2_1000c350, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000ba28, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 3, { 0, 6, 33, 88, 100, 101, 102, 103, 86, 89, 90, 44, 105, 104, 8, 106, 107, 108, 91, 92, 1, 7, 34, 35, 45, 46, 47, 48, 2, 49, 51, 52, 36, 53, 9, 54, 55, 56, 10, 57, 37, 58, 11, 50, 38, 59, 60, 62, 63, 61, 64, 65, 3, 66, 67, 12, 39, 4, 5, 40, 68, 69, 14, 70, 41, 13, 71, 72, 73, 15, 16, 17, 74, 75, 76, 20, 19, 18, 77, 78, 23, 22, 21, 79, 80, 42, 81, 26, 24, 25, 82, 83, 29, 28, 27, 84, 85, 32, 31, 30, 87, 93, 94, 95, 97, 96, 98, 43, 99 }
  uselistorder i32 (i32, i32*, i32)* @function_1000c26c, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 58, 0, 1, 2, 3, 4, 5, 6, 7, 8, 64, 65, 66, 9, 59, 10, 68, 11, 12, 13, 14, 15, 69, 16, 61, 70, 62, 71, 67, 17, 18, 19, 20, 21, 22, 72, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 60, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63 }
  uselistorder i32 (i32, i32, i32)* @function_1000a5a4, { 1, 8, 4, 0, 3, 10, 9, 7, 6, 5, 2 }
  uselistorder i32 2, { 204, 34, 0, 1, 61, 62, 205, 63, 206, 64, 207, 35, 110, 122, 208, 111, 23, 65, 36, 66, 25, 24, 26, 67, 68, 112, 38, 37, 113, 114, 69, 115, 40, 109, 2, 3, 116, 117, 32, 118, 39, 119, 70, 73, 74, 72, 71, 41, 4, 5, 6, 120, 121, 75, 42, 76, 77, 79, 78, 80, 44, 43, 81, 82, 45, 83, 84, 27, 33, 123, 187, 7, 28, 188, 8, 124, 125, 126, 127, 128, 129, 130, 131, 85, 132, 133, 46, 134, 135, 136, 137, 138, 139, 140, 87, 141, 86, 142, 143, 144, 145, 146, 147, 148, 149, 88, 150, 47, 91, 92, 151, 152, 89, 90, 153, 154, 155, 156, 157, 158, 159, 160, 161, 9, 10, 11, 12, 13, 14, 93, 162, 48, 163, 164, 165, 166, 167, 15, 16, 17, 18, 19, 20, 94, 168, 49, 169, 170, 171, 172, 173, 95, 174, 175, 96, 176, 97, 177, 50, 178, 179, 180, 181, 183, 184, 185, 182, 98, 186, 51, 189, 190, 191, 99, 100, 192, 194, 195, 196, 193, 101, 197, 52, 198, 29, 30, 199, 103, 53, 200, 54, 55, 104, 56, 31, 57, 105, 58, 106, 59, 107, 60, 108, 201, 21, 22, 202, 102, 203 }
  uselistorder i32* @global_var_1001d294.493, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 39, 40, 0, 41, 2, 1, 3, 36, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 4, 32, 5, 33, 34, 35, 37, 38 }
  uselistorder i32 (i32, i32, i32)* @function_1000a140, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000aca4, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 70, 71, 72, 58, 59, 73, 31, 1, 32, 6, 33, 80, 79, 4, 3, 74, 76, 77, 57, 75, 8, 5, 60, 9, 10, 11, 7, 34, 35, 78, 12, 13, 14, 61, 18, 19, 20, 15, 16, 17, 54, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 0, 2, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 51, 52, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 6, { 11, 12, 73, 1, 13, 14, 38, 15, 16, 39, 17, 18, 40, 41, 19, 42, 43, 2, 44, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 45, 32, 46, 47, 48, 3, 49, 50, 51, 4, 52, 53, 54, 55, 5, 6, 56, 57, 33, 7, 58, 59, 34, 8, 60, 35, 61, 62, 63, 64, 36, 9, 65, 66, 67, 68, 69, 37, 10, 70, 71, 72 }
  uselistorder i32 4, { 133, 0, 1, 370, 371, 372, 373, 374, 64, 65, 375, 376, 134, 377, 378, 2, 193, 194, 150, 151, 195, 196, 197, 379, 386, 3, 4, 5, 6, 7, 332, 334, 333, 330, 331, 293, 294, 295, 296, 335, 336, 337, 338, 318, 319, 320, 339, 340, 8, 154, 9, 76, 155, 156, 380, 381, 382, 135, 383, 384, 385, 10, 341, 136, 11, 198, 199, 200, 201, 202, 137, 138, 157, 139, 158, 159, 160, 80, 74, 161, 162, 163, 164, 152, 77, 153, 12, 166, 167, 168, 169, 165, 170, 67, 171, 66, 140, 177, 78, 179, 180, 79, 181, 182, 183, 178, 172, 173, 174, 175, 176, 184, 141, 82, 81, 83, 185, 186, 187, 68, 188, 69, 189, 190, 191, 192, 84, 72, 203, 204, 205, 206, 207, 13, 208, 209, 210, 211, 212, 89, 213, 14, 15, 88, 87, 214, 16, 85, 86, 215, 216, 94, 217, 17, 18, 218, 19, 219, 220, 221, 95, 222, 20, 21, 223, 93, 92, 224, 90, 225, 91, 226, 227, 228, 101, 22, 23, 229, 230, 231, 24, 232, 233, 234, 100, 25, 26, 235, 99, 98, 236, 96, 97, 237, 238, 239, 240, 241, 242, 243, 142, 102, 244, 245, 27, 246, 247, 75, 248, 28, 29, 249, 106, 105, 250, 103, 104, 251, 252, 30, 253, 254, 111, 255, 256, 31, 32, 110, 109, 257, 107, 108, 258, 259, 260, 261, 143, 262, 33, 263, 264, 34, 265, 35, 266, 267, 268, 269, 114, 113, 270, 112, 144, 271, 272, 273, 274, 36, 275, 277, 278, 119, 279, 280, 120, 37, 38, 145, 276, 118, 117, 115, 116, 281, 282, 283, 284, 285, 146, 147, 39, 286, 288, 289, 125, 290, 291, 126, 40, 41, 148, 287, 292, 124, 123, 121, 122, 42, 297, 298, 43, 44, 299, 300, 45, 46, 301, 302, 47, 48, 303, 304, 49, 50, 305, 306, 51, 307, 52, 308, 309, 53, 54, 310, 311, 55, 56, 312, 313, 57, 58, 314, 315, 59, 60, 316, 317, 61, 321, 62, 322, 323, 324, 325, 326, 327, 328, 73, 342, 329, 343, 344, 345, 346, 347, 348, 127, 349, 350, 351, 352, 353, 354, 128, 355, 356, 357, 129, 130, 358, 359, 131, 360, 361, 132, 362, 363, 364, 70, 365, 71, 63, 366, 367, 368, 369, 149 }
  uselistorder i32 32, { 21, 22, 51, 40, 41, 32, 33, 17, 18, 34, 0, 1, 2, 19, 52, 20, 53, 23, 24, 35, 3, 25, 4, 5, 6, 26, 36, 27, 37, 7, 8, 9, 10, 11, 28, 29, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 12, 13, 14, 15, 16, 59, 60, 30, 31 }
  uselistorder i32 31, { 0, 1, 24, 25, 13, 26, 27, 2, 3, 4, 28, 29, 18, 19, 14, 15, 20, 21, 22, 23, 6, 7, 8, 9, 10, 11, 12, 16, 17, 5 }
  uselistorder i32 ()* @function_1000b688, { 3, 2, 1, 0, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_1000c45c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c418.dec_label_pc_1000c418_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000c3d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c398, { 1, 0 }
  uselistorder label %dec_label_pc_1000c364.dec_label_pc_1000c364_crit_edge, { 1, 0 }
}

define i32 @function_1000c480(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c480:
  %v1_1000c480 = add i32 %arg1, 28
  %v2_1000c480 = inttoptr i32 %v1_1000c480 to i32*
  %v3_1000c480 = load i32, i32* %v2_1000c480, align 4
  store i32 %v3_1000c480, i32* @global_var_1001d298.496, align 4
  %v1_1000c490 = add i32 %arg1, 44
  %v2_1000c490 = inttoptr i32 %v1_1000c490 to i32*
  %v3_1000c490 = load i32, i32* %v2_1000c490, align 4
  store i32 %v3_1000c490, i32* @global_var_1001d29c.497, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 17, 5, 10, 11, 6, 7, 8, 9, 2, 12, 3, 13, 14, 15, 0, 1, 4, 16 }
  uselistorder i32 28, { 45, 13, 14, 4, 5, 15, 41, 2, 3, 6, 7, 9, 10, 11, 12, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 1, 40, 42, 43, 44 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000c49c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c49c:
  store i32 %arg1, i32* @global_var_1001d2a0.489, align 4
  %v0_1000c4c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000c4c4)
  %v1_1000c4cc = call i32 @function_1000c548(i32 12)
  ret i32 %v1_1000c4cc

; uselistorder directives
  uselistorder i32 12, { 16, 55, 56, 28, 29, 57, 58, 59, 60, 107, 108, 109, 110, 6, 105, 111, 0, 1, 7, 106, 5, 17, 18, 8, 32, 61, 62, 19, 63, 64, 65, 20, 21, 33, 22, 23, 34, 24, 25, 35, 36, 37, 38, 39, 40, 30, 31, 41, 42, 43, 44, 46, 47, 9, 48, 10, 49, 26, 50, 27, 51, 11, 53, 54, 52, 45, 100, 66, 12, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 13, 81, 82, 83, 84, 85, 86, 87, 14, 88, 89, 90, 91, 92, 93, 94, 95, 96, 15, 97, 98, 99, 101, 102, 103, 104, 2, 3, 4, 112, 113, 114 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 2, 10, 1, 11, 3, 12, 4, 5, 0, 6, 7, 8, 9 }
  uselistorder i1 true, { 1, 0 }
  uselistorder i32* @global_var_1001d2a0.489, { 1, 0, 2 }
}

define i32 @function_1000c4d0() local_unnamed_addr {
dec_label_pc_1000c4d0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c4e8 = call i32 @__asm_mfcr()
  %v1_1000c4ec = and i32 %v0_1000c4e8, 268435456
  %v3_1000c4ec = icmp eq i32 %v1_1000c4ec, 0
  store i32 %v0_1000c4e8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c4ec, label %dec_label_pc_1000c504, label %dec_label_pc_1000c4f8

dec_label_pc_1000c4f8:                            ; preds = %dec_label_pc_1000c4d0
  %v0_1000c4f8 = call i32 @function_1000a4bc()
  %v0_1000c4fc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c4fc = inttoptr i32 %v0_1000c4f8 to i32*
  store i32 %v0_1000c4fc, i32* %v2_1000c4fc, align 4
  br label %dec_label_pc_1000c504

dec_label_pc_1000c504:                            ; preds = %dec_label_pc_1000c4d0, %dec_label_pc_1000c4f8
  %v0_1000c514 = phi i32 [ %v0_1000c4e8, %dec_label_pc_1000c4d0 ], [ -1, %dec_label_pc_1000c4f8 ]
  ret i32 %v0_1000c514

; uselistorder directives
  uselistorder i32 268435456, { 29, 12, 30, 18, 31, 32, 33, 34, 19, 20, 35, 36, 13, 24, 37, 14, 25, 21, 22, 15, 38, 27, 16, 28, 23, 26, 39, 40, 17, 2, 0, 1, 5, 3, 4, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 45, 11, 38, 10, 9, 8, 7, 37, 36, 6, 5, 4, 44, 18, 3, 43, 17, 35, 34, 42, 2, 14, 41, 13, 20, 16, 1, 0, 40, 39, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 19, 15 }
  uselistorder label %dec_label_pc_1000c504, { 1, 0 }
}

define i32 @function_1000c518(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c518:
  %v0_1000c518 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268485936, i32* @lr, align 4
  %v0_1000c52c = call i32 @function_10009e78()
  %v0_1000c534 = load i32, i32* @r29, align 4
  store i32 %v0_1000c518, i32* @lr, align 4
  %v2_1000c544 = call i32 @function_10009f08(i32 %v0_1000c52c, i32 %v0_1000c534)
  ret i32 %v2_1000c544

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009f08, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1000c548(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c548:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000c55c = call i32 @function_1000a4bc()
  %v0_1000c560 = load i32, i32* @r29, align 4
  %v2_1000c560 = inttoptr i32 %v0_1000c55c to i32*
  store i32 %v0_1000c560, i32* %v2_1000c560, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_1000a4bc, { 30, 15, 51, 14, 36, 13, 12, 11, 10, 35, 27, 26, 9, 8, 3, 7, 6, 28, 29, 50, 49, 48, 47, 25, 24, 23, 46, 20, 5, 4, 45, 19, 34, 33, 44, 2, 17, 43, 16, 32, 18, 1, 0, 42, 41, 40, 39, 38, 37, 31, 22, 21 }
  uselistorder i32* @r29, { 304, 305, 315, 316, 317, 11, 12, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 318, 319, 320, 321, 322, 306, 307, 308, 309, 290, 291, 1, 292, 293, 310, 311, 312, 313, 13, 14, 15, 102, 103, 104, 105, 106, 107, 108, 16, 17, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 58, 59, 60, 61, 62, 63, 70, 0, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 168, 169, 170, 173, 176, 177, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 296, 294, 295, 297, 298, 299, 2, 300, 301, 302, 303, 314 }
}

define i32 @function_1000c57c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c57c:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001d0b0.477 to i32), i32* %r31.global-to-local, align 4
  %v3_1000c598 = load i32, i32* @global_var_1001d0b0.477, align 4
  %v3_1000c59c = icmp eq i32 %v3_1000c598, -1
  br i1 %v3_1000c59c, label %dec_label_pc_1000c5b8, label %dec_label_pc_1000c5a4

dec_label_pc_1000c5a4:                            ; preds = %dec_label_pc_1000c57c, %dec_label_pc_1000c5a4
  %v0_1000c5a4 = phi i32 [ %v3_1000c5ac, %dec_label_pc_1000c5a4 ], [ %v3_1000c598, %dec_label_pc_1000c57c ]
  call void @__pseudo_call(i32 %v0_1000c5a4)
  %v0_1000c5ac = load i32, i32* %r31.global-to-local, align 4
  %v1_1000c5ac = add i32 %v0_1000c5ac, -4
  %v2_1000c5ac = inttoptr i32 %v1_1000c5ac to i32*
  %v3_1000c5ac = load i32, i32* %v2_1000c5ac, align 4
  store i32 %v1_1000c5ac, i32* %r31.global-to-local, align 4
  %v3_1000c5b0 = icmp eq i32 %v3_1000c5ac, -1
  br i1 %v3_1000c5b0, label %dec_label_pc_1000c5b8, label %dec_label_pc_1000c5a4

dec_label_pc_1000c5b8:                            ; preds = %dec_label_pc_1000c5a4, %dec_label_pc_1000c57c
  %v0_1000c5c8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c5c8

; uselistorder directives
  uselistorder i32 %v3_1000c5ac, { 1, 0 }
  uselistorder i32 -4, { 0, 12, 13, 14, 1, 2, 3, 4, 5, 6, 15, 16, 7, 8, 9, 10, 11 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 140, 141, 0, 38, 93, 335, 13, 14, 15, 336, 94, 337, 11, 12, 95, 96, 16, 97, 39, 40, 240, 77, 41, 187, 42, 43, 44, 45, 46, 188, 189, 190, 191, 192, 193, 47, 348, 346, 48, 338, 339, 78, 98, 340, 19, 20, 99, 345, 17, 18, 241, 242, 35, 142, 344, 341, 49, 143, 100, 144, 21, 22, 145, 146, 147, 37, 50, 148, 149, 75, 101, 102, 103, 104, 243, 244, 23, 24, 25, 105, 245, 246, 106, 79, 76, 194, 195, 51, 52, 53, 342, 343, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 347, 67, 150, 107, 26, 247, 248, 108, 109, 1, 110, 111, 151, 68, 69, 112, 2, 113, 27, 114, 70, 115, 28, 249, 80, 152, 116, 81, 153, 154, 155, 117, 156, 157, 71, 158, 118, 30, 119, 29, 120, 161, 121, 72, 162, 163, 164, 122, 3, 123, 4, 159, 160, 165, 82, 166, 167, 84, 168, 169, 83, 170, 171, 172, 85, 173, 174, 175, 73, 176, 177, 124, 31, 125, 32, 178, 179, 180, 181, 74, 182, 183, 184, 126, 185, 186, 36, 196, 197, 198, 199, 200, 127, 128, 129, 130, 201, 202, 203, 204, 131, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 5, 227, 6, 7, 228, 229, 230, 231, 8, 232, 9, 10, 233, 234, 235, 236, 132, 237, 238, 133, 239, 134, 135, 136, 137, 250, 251, 87, 86, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 89, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 88, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 138, 33, 139, 34, 334, 90, 91, 92 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_1000c5a4, { 1, 0 }
}

define i32 @function_1000c5cc() local_unnamed_addr {
dec_label_pc_1000c5cc:
  %v0_1000c5e4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c5e4

; uselistorder directives
  uselistorder i32* @r3, { 9, 12, 232, 233, 234, 10, 18, 235, 119, 0, 120, 28, 242, 17, 16, 3, 22, 236, 238, 27, 239, 240, 241, 171, 26, 172, 8, 21, 173, 178, 177, 237, 29, 179, 30, 31, 180, 23, 15, 121, 122, 123, 124, 125, 126, 127, 128, 129, 11, 24, 4, 14, 181, 1, 2, 5, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 94, 6, 95, 96, 165, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 20, 113, 114, 115, 116, 117, 118, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 166, 167, 7, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 159, 161, 162, 163, 164, 168, 169, 170, 174, 175, 176, 182, 183, 184, 185, 186, 188, 189, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 19, 13, 25 }
}

define i32 @function_1000c5e8() local_unnamed_addr {
entry:
  store i32 268486136, i32* @lr, align 4
  %v0_1000c5f4 = call i32 @function_100000b8()
  ret i32 %v0_1000c5f4

; uselistorder directives
  uselistorder i32 0, { 1047, 206, 1048, 31, 207, 143, 1049, 208, 1050, 1051, 29, 30, 1052, 1053, 1054, 0, 808, 809, 810, 76, 75, 811, 1055, 1056, 1057, 32, 1058, 1059, 1060, 1061, 574, 209, 210, 454, 815, 816, 144, 817, 1062, 14, 575, 576, 1063, 1064, 1065, 1066, 211, 577, 578, 579, 580, 581, 582, 583, 77, 584, 585, 1067, 1068, 212, 1086, 1087, 213, 1092, 1094, 135, 1095, 214, 1093, 1, 1069, 1070, 78, 1071, 1072, 215, 145, 216, 1073, 1074, 35, 36, 1075, 1076, 1077, 217, 1080, 1081, 1082, 33, 34, 1083, 1084, 1085, 820, 822, 18, 823, 37, 824, 821, 818, 819, 2, 778, 774, 775, 776, 777, 136, 3, 827, 825, 826, 137, 828, 829, 779, 780, 781, 782, 783, 218, 784, 785, 787, 788, 219, 789, 146, 830, 839, 840, 79, 831, 832, 833, 834, 835, 836, 837, 838, 4, 5, 446, 455, 456, 457, 38, 39, 458, 6, 220, 812, 459, 460, 461, 462, 463, 464, 465, 466, 221, 467, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 841, 842, 40, 843, 844, 845, 846, 847, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 468, 848, 1078, 1079, 469, 849, 598, 615, 470, 1088, 80, 1089, 1045, 471, 1046, 790, 850, 1090, 1091, 472, 473, 851, 852, 853, 41, 81, 854, 855, 205, 856, 858, 857, 142, 7, 859, 64, 19, 65, 20, 860, 861, 8, 66, 21, 67, 22, 862, 68, 863, 23, 24, 864, 69, 25, 82, 222, 223, 15, 16, 599, 865, 866, 867, 868, 86, 84, 83, 869, 85, 88, 87, 870, 89, 871, 42, 872, 873, 874, 791, 90, 792, 793, 875, 876, 43, 91, 877, 9, 92, 878, 93, 879, 474, 475, 476, 97, 477, 478, 479, 480, 132, 481, 224, 482, 483, 487, 484, 95, 453, 485, 96, 486, 225, 488, 489, 490, 491, 492, 98, 493, 494, 147, 495, 496, 447, 70, 497, 498, 499, 500, 501, 502, 46, 47, 503, 504, 44, 45, 505, 506, 148, 149, 507, 508, 226, 509, 511, 512, 513, 514, 515, 150, 151, 520, 521, 227, 522, 516, 517, 518, 519, 523, 17, 448, 449, 524, 525, 94, 526, 527, 528, 533, 534, 535, 536, 152, 537, 538, 99, 539, 540, 541, 542, 543, 544, 529, 100, 530, 531, 101, 532, 228, 510, 752, 545, 546, 547, 548, 133, 549, 550, 229, 551, 552, 553, 554, 555, 153, 556, 557, 48, 49, 558, 559, 560, 50, 51, 561, 562, 563, 10, 564, 230, 231, 232, 565, 233, 154, 566, 234, 13, 569, 567, 103, 102, 139, 235, 568, 138, 570, 571, 572, 573, 26, 600, 611, 601, 11, 602, 603, 604, 605, 140, 606, 607, 608, 609, 610, 27, 104, 58, 57, 105, 612, 52, 238, 613, 236, 237, 155, 614, 72, 753, 754, 71, 755, 106, 756, 73, 757, 107, 616, 617, 618, 108, 619, 620, 621, 239, 622, 623, 60, 624, 59, 625, 626, 627, 628, 629, 630, 631, 240, 632, 633, 634, 160, 635, 636, 637, 241, 638, 61, 62, 639, 640, 109, 641, 642, 643, 242, 156, 157, 158, 159, 243, 644, 645, 646, 110, 647, 648, 244, 649, 650, 651, 652, 653, 162, 654, 161, 655, 245, 656, 111, 657, 658, 659, 660, 661, 662, 112, 663, 664, 246, 666, 665, 667, 668, 669, 247, 670, 671, 672, 163, 673, 164, 165, 166, 248, 674, 116, 115, 675, 676, 677, 114, 113, 678, 679, 680, 681, 682, 683, 249, 684, 167, 685, 686, 117, 687, 689, 250, 690, 688, 691, 692, 693, 694, 695, 251, 696, 697, 698, 175, 699, 168, 169, 170, 171, 172, 173, 174, 252, 700, 701, 702, 703, 118, 704, 705, 253, 707, 706, 708, 709, 710, 711, 712, 713, 254, 714, 715, 716, 184, 717, 176, 177, 178, 179, 180, 181, 182, 183, 255, 718, 719, 720, 721, 723, 119, 725, 726, 727, 728, 256, 729, 257, 730, 731, 258, 722, 724, 732, 733, 185, 734, 186, 187, 188, 189, 190, 191, 120, 735, 736, 737, 738, 121, 739, 741, 259, 740, 742, 743, 744, 745, 746, 747, 748, 749, 195, 750, 192, 193, 194, 122, 751, 758, 759, 760, 123, 761, 762, 260, 763, 764, 765, 766, 767, 768, 769, 770, 771, 199, 772, 196, 197, 198, 124, 773, 786, 794, 28, 795, 796, 63, 797, 798, 799, 261, 800, 801, 802, 803, 804, 805, 806, 807, 880, 881, 813, 814, 882, 264, 887, 888, 889, 890, 884, 885, 886, 883, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 265, 907, 908, 909, 910, 262, 911, 912, 141, 913, 914, 74, 125, 915, 916, 917, 918, 919, 920, 921, 922, 127, 923, 924, 925, 926, 927, 928, 941, 942, 943, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 944, 268, 945, 946, 947, 948, 949, 126, 950, 951, 952, 953, 263, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 266, 978, 979, 980, 981, 982, 983, 984, 985, 267, 986, 987, 988, 989, 990, 991, 992, 993, 130, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 128, 1011, 1013, 1012, 1014, 1015, 1016, 1017, 1018, 200, 129, 1019, 1020, 1021, 1022, 201, 1023, 269, 270, 1024, 1025, 1026, 1027, 1028, 53, 54, 1029, 1030, 55, 56, 1031, 1032, 134, 1033, 131, 1034, 1035, 1036, 271, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 202, 1044, 203, 204, 1104, 1105, 1106, 12, 450, 451, 452, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130 }
  uselistorder i32* @lr, { 7, 841, 842, 843, 698, 844, 845, 846, 847, 848, 849, 850, 851, 695, 17, 852, 362, 363, 8, 699, 700, 364, 365, 366, 367, 368, 369, 861, 862, 866, 867, 868, 869, 870, 871, 872, 874, 863, 865, 853, 854, 855, 856, 857, 858, 859, 860, 701, 703, 702, 656, 657, 658, 659, 660, 661, 683, 684, 685, 704, 708, 705, 706, 707, 18, 19, 709, 710, 628, 711, 573, 712, 328, 713, 20, 714, 500, 21, 696, 22, 23, 24, 25, 26, 27, 28, 873, 29, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 864, 30, 31, 32, 33, 34, 35, 384, 715, 716, 686, 717, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 718, 719, 156, 157, 158, 159, 160, 161, 9, 10, 11, 12, 13, 14, 15, 16, 162, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 210, 211, 212, 213, 214, 215, 216, 217, 168, 169, 170, 171, 172, 173, 229, 629, 630, 631, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 353, 335, 336, 337, 338, 339, 341, 340, 0, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 2, 354, 355, 356, 357, 358, 359, 360, 361, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 3, 415, 416, 417, 418, 419, 420, 1, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 506, 511, 512, 513, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 687, 688, 689, 690, 691, 692, 693, 694, 720, 697, 721, 722, 723, 724, 727, 728, 729, 730, 725, 726, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 745, 4, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 5, 6 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
