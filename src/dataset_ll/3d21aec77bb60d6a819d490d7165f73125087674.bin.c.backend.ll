source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r14 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r18 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208012925
@global_var_1001e00c.3 = global i32 0
@global_var_1001e01c.4 = local_unnamed_addr global i32* @global_var_1001e00c.3
@global_var_1001e1f4.6 = global i32 0
@global_var_1000d1ec.7 = constant [4 x i8] c"GET\00"
@global_var_1000d1f0.8 = constant i32 788529152
@global_var_10000458.9 = constant [3 x i8] c"8`\00"
@global_var_10000460.10 = constant [3 x i8] c"8`\00"
@global_var_10000468.11 = constant [3 x i8] c"8`\00"
@global_var_10000470.12 = constant [3 x i8] c"8`\00"
@global_var_10000478.13 = constant [3 x i8] c"8`\00"
@global_var_10000480.14 = constant [3 x i8] c"8`\00"
@global_var_10000488.15 = constant [3 x i8] c"8`\00"
@global_var_10000490.16 = constant [3 x i8] c"8`\00"
@global_var_10000498.17 = constant [3 x i8] c"8`\00"
@global_var_100004a0.18 = constant [3 x i8] c"8`\00"
@global_var_10000528.19 = constant i32 939524143
@global_var_1000057c.20 = constant i32 1006685388
@global_var_1000d234.21 = constant i32 -46572
@global_var_100005cc.22 = constant [3 x i8] c"9`\00"
@global_var_1000d1e4.23 = constant i32 536870912
@global_var_1000d1e0.24 = constant [3 x i8] c"\0D\0A\00"
@global_var_100006c0.25 = constant [3 x i8] c"8`\00"
@global_var_1000d1bc.26 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1000d1d4.27 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_10000984.28 = constant [3 x i8] c"8`\00"
@global_var_100009b0.29 = constant [3 x i8] c"8`\00"
@global_var_100009cc.30 = constant [3 x i8] c"8`\00"
@global_var_100009f8.31 = constant [3 x i8] c"8`\00"
@global_var_10000a14.32 = constant [3 x i8] c"8`\00"
@global_var_10000a40.33 = constant [3 x i8] c"8`\00"
@global_var_10000a8c.34 = constant [3 x i8] c"8`\00"
@global_var_1000d1f4.35 = constant [9 x i8] c"Cookie: \00"
@global_var_1000d200.36 = constant [3 x i8] c"; \00"
@global_var_1000d204.37 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10000d08.38 = constant i32 939524096
@global_var_1000d20c.39 = constant i32 989855744
@global_var_1000d210.40 = constant [5 x i8] c"http\00"
@global_var_100014f8.41 = constant i32 939589631
@global_var_10001560.42 = constant i32 939589631
@global_var_1000d218.43 = constant [5 x i8] c"url=\00"
@global_var_10001710.44 = constant [3 x i8] c"8`\00"
@global_var_1000d220.45 = constant [5 x i8] c"POST\00"
@global_var_10001824.46 = constant [3 x i8] c"9`\00"
@global_var_1000d228.47 = constant i32 654311424
@global_var_10001b24.49 = constant [3 x i8] c"9`\00"
@global_var_1000d22c.50 = constant i32 1023410176
@global_var_10001e2c.56 = constant i32 1207994953
@global_var_10001e38.57 = constant [3 x i8] c"8`\00"
@global_var_1001e188.59 = local_unnamed_addr global i32 0
@global_var_100020a0.60 = constant [3 x i8] c";{\00"
@global_var_100020cc.61 = constant i32 939524096
@global_var_1001e20c.62 = global i32 0
@global_var_1001e210.63 = local_unnamed_addr global i32 0
@global_var_1001e214.64 = local_unnamed_addr global i32 0
@global_var_1001e218.65 = local_unnamed_addr global i32 0
@global_var_1001e21c.66 = local_unnamed_addr global i32 0
@global_var_1001e220.67 = local_unnamed_addr global i32 0
@global_var_1001e224.68 = local_unnamed_addr global i32 0
@global_var_1001e228.69 = local_unnamed_addr global i32 0
@global_var_1001e180.71 = local_unnamed_addr global i32 0
@global_var_10002bb4.72 = constant [3 x i8] c"8~\00"
@global_var_10002bc4.73 = constant [3 x i8] c"8~\00"
@global_var_10002bd4.74 = constant [3 x i8] c"8~\00"
@global_var_1000353c.75 = constant [3 x i8] c"8`\00"
@global_var_100041f0.76 = constant i32 939524104
@global_var_10004220.77 = constant i32 939524096
@global_var_10004520.78 = constant i32 939524096
@global_var_100051f4.79 = constant [3 x i8] c"8`\00"
@global_var_100052e4.80 = constant [3 x i8] c"9!\00"
@global_var_1001e194.81 = local_unnamed_addr global i32 0
@global_var_100058a8.82 = constant [3 x i8] c"8`\00"
@global_var_100058b0.83 = constant [3 x i8] c"8`\00"
@global_var_1000d248.84 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_100059ac.85 = constant i32 956301312
@global_var_10005cf8.86 = constant [3 x i8] c"8`\00"
@global_var_10005d00.87 = constant [3 x i8] c"8`\00"
@global_var_10005d08.88 = constant [3 x i8] c"8`\00"
@global_var_10005d10.89 = constant [3 x i8] c"8`\00"
@global_var_10005d7c.90 = constant [3 x i8] c"8`\00"
@global_var_10005d84.91 = constant [3 x i8] c"8`\00"
@global_var_10005ebc.92 = constant i32 939524119
@global_var_10005ef8.93 = constant [3 x i8] c"8`\00"
@global_var_1001e18c.94 = local_unnamed_addr global i32 0
@global_var_1001e190.95 = local_unnamed_addr global i32 0
@global_var_10005f2c.96 = constant [3 x i8] c"8`\00"
@global_var_10005fa8.97 = constant [3 x i8] c"8`\00"
@global_var_10005fb0.98 = constant [3 x i8] c"8`\00"
@global_var_10006014.99 = constant i32 1207979221
@global_var_100060b0.100 = constant [3 x i8] c"8`\00"
@global_var_10006140.101 = constant [3 x i8] c"8`\00"
@global_var_10006148.102 = constant [3 x i8] c"8`\00"
@global_var_100061b8.103 = constant [3 x i8] c"8`\00"
@global_var_100061c0.104 = constant i32 1207977581
@global_var_10006270.105 = constant [3 x i8] c"8`\00"
@global_var_10006278.106 = constant [3 x i8] c"8`\00"
@global_var_10006280.107 = constant [3 x i8] c"8`\00"
@global_var_10006288.108 = constant [3 x i8] c"8`\00"
@global_var_10006458.109 = constant [3 x i8] c"8`\00"
@global_var_10006460.110 = constant [3 x i8] c"8`\00"
@global_var_10006468.111 = constant [3 x i8] c"8`\00"
@global_var_10006470.112 = constant [3 x i8] c"8`\00"
@global_var_100064a8.113 = constant [3 x i8] c"8`\00"
@global_var_10006500.114 = constant [3 x i8] c"8`\00"
@global_var_10006508.115 = constant [3 x i8] c"8`\00"
@global_var_10006510.116 = constant [3 x i8] c"8`\00"
@global_var_10006518.117 = constant [3 x i8] c"8`\00"
@global_var_1001e168.118 = local_unnamed_addr global i32 268476948
@global_var_1001e160.119 = local_unnamed_addr global i32 -1
@global_var_100066d0.121 = constant [3 x i8] c"8`\00"
@global_var_100066e0.122 = constant [3 x i8] c"8`\00"
@global_var_10006758.123 = constant i32 1207962573
@global_var_1001e27c.124 = global i32 0
@global_var_1001e280.125 = local_unnamed_addr global i32 0
@global_var_100067a8.126 = constant [3 x i8] c"8`\00"
@global_var_100067b0.127 = constant [3 x i8] c"8`\00"
@global_var_1001e27e.128 = local_unnamed_addr global i32 0
@global_var_1000d258.129 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_100068e4.130 = constant [3 x i8] c";A\00"
@global_var_10006914.131 = constant [3 x i8] c"8`\00"
@global_var_10006920.132 = constant i32 1207961305
@global_var_10006970.133 = constant i32 1207961145
@global_var_10006974.134 = constant i32 1006676650
@global_var_100069bc.135 = constant [3 x i8] c"8`\00"
@global_var_1000d27c.136 = constant i32 167772160
@global_var_100069f4.137 = constant [3 x i8] c"8`\00"
@global_var_100069fc.138 = constant i32 1207975401
@global_var_1000d268.139 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_10006acc.140 = constant [3 x i8] c"8`\00"
@global_var_10006ad4.141 = constant [3 x i8] c"8`\00"
@global_var_10006adc.142 = constant [3 x i8] c":!\00"
@global_var_10006ae4.143 = constant [3 x i8] c";a\00"
@global_var_1001e164.144 = local_unnamed_addr global i32 -1
@global_var_10006c90.146 = constant i32 939589631
@global_var_10006d48.147 = constant i32 939589631
@global_var_10006d90.148 = constant i32 939589631
@global_var_10006e74.149 = constant i32 939589631
@global_var_10006e80.150 = constant i32 1006685388
@global_var_10006eb8.151 = constant i32 1207961993
@global_var_10006ec4.152 = constant [3 x i8] c"|r\00"
@global_var_10006ed0.153 = constant [3 x i8] c"8`\00"
@global_var_1000d280.154 = constant i32 1
@global_var_1001e238.155 = local_unnamed_addr global i32 0
@global_var_1001e22c.156 = local_unnamed_addr global i32 0
@global_var_1001e234.157 = local_unnamed_addr global i32 0
@global_var_1001e230.158 = local_unnamed_addr global i32 0
@global_var_1000d288.159 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_10007390.160 = constant [3 x i8] c"9A\00"
@global_var_10007414.161 = constant i32 939524096
@global_var_10007448.162 = constant i32 1006665728
@global_var_10007474.163 = constant i32 939524098
@global_var_100074bc.164 = constant [3 x i8] c"8`\00"
@global_var_10007530.165 = constant i32 939524128
@global_var_100075dc.166 = constant [3 x i8] c"8c\00"
@global_var_1001e1b4.167 = local_unnamed_addr global i32 0
@global_var_1001e1a8.168 = local_unnamed_addr global i32 0
@global_var_1001e19c.169 = local_unnamed_addr global i32 0
@global_var_1001e1a0.170 = local_unnamed_addr global i32 0
@global_var_10007bdc.172 = constant [3 x i8] c"8`\00"
@global_var_10007bf8.173 = constant i32 939524096
@global_var_1001e1ac.174 = local_unnamed_addr global i32 0
@global_var_1001e1b0.175 = local_unnamed_addr global i32 0
@global_var_1001e23c.176 = global i32 0
@global_var_1001e250.177 = global i32 0
@global_var_1000d368.178 = constant i32 391598592
@global_var_1001e23e.179 = local_unnamed_addr global i32 0
@global_var_1001e25c.180 = local_unnamed_addr global i32 0
@global_var_1001e244.181 = local_unnamed_addr global i32 0
@global_var_1001e245.182 = local_unnamed_addr global i32 0
@global_var_1001e240.183 = local_unnamed_addr global i32 0
@global_var_1000d360.184 = constant [5 x i8] c"PMMV\00"
@global_var_1000d374.186 = constant i32 320017171
@global_var_1001e25e.187 = local_unnamed_addr global i32 0
@global_var_1000d380.188 = constant i32 319820054
@global_var_1000d388.189 = constant i32 319820054
@global_var_1000d390.190 = constant i32 319820054
@global_var_1000d3ac.191 = constant i32 319820054
@global_var_1000d36c.192 = constant i32 55594317
@global_var_1000d3d8.193 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1000d3e4.194 = constant i32 318767104
@global_var_1000d37c.195 = constant i32 319815680
@global_var_1000d420.196 = constant [5 x i8] c"RCQQ\00"
@global_var_1000d398.197 = constant [7 x i8] c"CLVQNS\00"
@global_var_1000d3a0.198 = constant i32 319820054
@global_var_1000d418.199 = constant [6 x i8] c"CFOKL\00"
@global_var_1000d3b8.200 = constant i32 303174162
@global_var_1000d3c0.201 = constant i32 303174162
@global_var_1000d440.202 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1000d3cc.203 = constant i32 319820054
@global_var_1000d3e0.204 = constant i32 387322128
@global_var_1000d464.205 = constant i32 358041711
@global_var_1000d3e8.206 = constant [7 x i8] c"XNZZ\0C\22\00"
@global_var_1000d3f0.207 = constant [6 x i8] c"HT@XF\00"
@global_var_1000d3f8.208 = constant [5 x i8] c"CLIM\00"
@global_var_1000d400.209 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1000d408.210 = constant i32 1514213655
@global_var_1000d410.211 = constant [6 x i8] c"TKXZT\00"
@global_var_1000d428.212 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_1000d430.213 = constant i32 1701779987
@global_var_1000d438.214 = constant i32 437918234
@global_var_1000d44c.215 = constant i32 319951379
@global_var_1000d458.216 = constant i32 1247235158
@global_var_1000d474.217 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1000d480.218 = constant i32 1482376006
@global_var_1000d48c.219 = constant i32 320017171
@global_var_1000d494.220 = constant i32 269488144
@global_var_1000d208.221 = constant i32 0
@global_var_1000d49c.222 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1000d2ac.223 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1000d310.224 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1000d2bc.225 = constant [6 x i8] c"cFOKL\00"
@global_var_1000d2c4.226 = constant [4 x i8] c"CFO\00"
@global_var_1000d2c8.227 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1000d2d4.228 = constant i32 1128681291
@global_var_1000d2e0.229 = constant i32 1128681291
@global_var_1000d2ec.230 = constant i32 1128284435
@global_var_1000d2f4.231 = constant i32 1094931987
@global_var_1000d300.232 = constant i32 1329926423
@global_var_1000d308.233 = constant [7 x i8] c"OGPNKL\00"
@global_var_1000d318.234 = constant [5 x i8] c"WQGP\00"
@global_var_1000d320.235 = constant [6 x i8] c"EWGQV\00"
@global_var_1000d328.236 = constant [7 x i8] c"FCGOML\00"
@global_var_1000d330.237 = constant [4 x i8] c"@KL\00"
@global_var_1000d334.238 = constant [7 x i8] c"VGNLGV\00"
@global_var_1000d33c.239 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_1001e248.240 = local_unnamed_addr global i32 0
@global_var_1000d4ac.241 = constant i32 -19592
@global_var_1001e24c.242 = local_unnamed_addr global i32 0
@global_var_1001e246.243 = local_unnamed_addr global i32 0
@global_var_1001e260.244 = local_unnamed_addr global i32 0
@global_var_1001e254.245 = local_unnamed_addr global i32 0
@global_var_100085f0.246 = constant i32 939524096
@global_var_10008790.247 = constant [3 x i8] c"8`\00"
@global_var_1000d39c.248 = constant [3 x i8] c"NS\00"
@global_var_1000896c.251 = constant [3 x i8] c"8`\00"
@global_var_1001e28c.272 = global i32 0
@global_var_1001e16c.273 = local_unnamed_addr global i32 -559038737
@global_var_1000d4e8.274 = constant [21 x i8] c"ALA\0CJCAIWP@MVLGV\0CAD\22\00"
@global_var_10009790.275 = constant i32 939524116
@global_var_1001e2a8.276 = local_unnamed_addr global i32 0
@global_var_1001e2a4.277 = local_unnamed_addr global i32 0
@global_var_1000d500.278 = constant [3 x i8] c"\22]\00"
@global_var_100097b8.279 = constant [3 x i8] c"8`\00"
@global_var_1001e2ac.280 = local_unnamed_addr global i32 0
@global_var_1001e2b0.281 = local_unnamed_addr global i32 0
@global_var_1000d504.282 = constant [24 x i8] c"PGRMPV\0CJCAIWP@MVLGV\0CAD\22\00"
@global_var_100097dc.283 = constant [3 x i8] c"8`\00"
@global_var_1001e31c.284 = local_unnamed_addr global i32 0
@global_var_1001e320.285 = local_unnamed_addr global i32 0
@global_var_1000d51c.286 = constant i32 -1715011584
@global_var_10009800.287 = constant [3 x i8] c"8`\00"
@global_var_1001e324.288 = local_unnamed_addr global i32 0
@global_var_1001e328.289 = local_unnamed_addr global i32 0
@global_var_1000d520.290 = constant i32 1313558870
@global_var_10009824.291 = constant i32 939524111
@global_var_1001e2a0.292 = local_unnamed_addr global i32 0
@global_var_1001e29c.293 = local_unnamed_addr global i32 0
@global_var_1000d530.294 = constant i32 1247172178
@global_var_1000984c.295 = constant i32 939524125
@global_var_1001e2b8.296 = local_unnamed_addr global i32 0
@global_var_1001e2b4.297 = local_unnamed_addr global i32 0
@global_var_1000d550.298 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_10009878.299 = constant [3 x i8] c"8`\00"
@global_var_1001e2bc.300 = local_unnamed_addr global i32 0
@global_var_1001e2c0.301 = local_unnamed_addr global i32 0
@global_var_1000d558.302 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_1000989c.303 = constant i32 939524101
@global_var_1001e2c8.304 = local_unnamed_addr global i32 0
@global_var_1001e2c4.305 = local_unnamed_addr global i32 0
@global_var_1000d560.306 = constant i32 34227783
@global_var_100098c4.307 = constant [3 x i8] c"8`\00"
@global_var_1001e2cc.308 = local_unnamed_addr global i32 0
@global_var_1001e2d0.309 = local_unnamed_addr global i32 0
@global_var_1000d56c.310 = constant [5 x i8] c"\0DDF\22\00"
@global_var_100098e8.311 = constant i32 939524100
@global_var_1001e2d8.312 = local_unnamed_addr global i32 0
@global_var_1001e2d4.313 = local_unnamed_addr global i32 0
@global_var_1000d574.314 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_10009910.315 = constant [3 x i8] c"8`\00"
@global_var_1001e2dc.316 = local_unnamed_addr global i32 0
@global_var_1001e2e0.317 = local_unnamed_addr global i32 0
@global_var_1000d57c.318 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_10009934.319 = constant [3 x i8] c"8`\00"
@global_var_1001e2e4.320 = local_unnamed_addr global i32 0
@global_var_1001e2e8.321 = local_unnamed_addr global i32 0
@global_var_1000d588.322 = constant i32 1885827693
@global_var_10009958.323 = constant i32 939524109
@global_var_1001e2f0.324 = local_unnamed_addr global i32 0
@global_var_1001e2ec.325 = local_unnamed_addr global i32 0
@global_var_1000d598.326 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_10009980.327 = constant [3 x i8] c"8`\00"
@global_var_1001e2f4.328 = local_unnamed_addr global i32 0
@global_var_1001e2f8.329 = local_unnamed_addr global i32 0
@global_var_1000d5a4.330 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_100099a4.331 = constant [3 x i8] c"8`\00"
@global_var_1001e2fc.332 = local_unnamed_addr global i32 0
@global_var_1001e300.333 = local_unnamed_addr global i32 0
@global_var_1000d5b0.334 = constant i32 2119833370
@global_var_100099c8.335 = constant i32 939524129
@global_var_1001e308.336 = local_unnamed_addr global i32 0
@global_var_1001e304.337 = local_unnamed_addr global i32 0
@global_var_1000d5d4.338 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_100099f0.339 = constant [3 x i8] c"8`\00"
@global_var_1001e30c.340 = local_unnamed_addr global i32 0
@global_var_1001e310.341 = local_unnamed_addr global i32 0
@global_var_1000d5e0.342 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_10009a14.343 = constant [3 x i8] c"8`\00"
@global_var_1001e314.344 = local_unnamed_addr global i32 0
@global_var_1001e318.345 = local_unnamed_addr global i32 0
@global_var_1000d5ec.346 = constant [7 x i8] c"QJGNN\22\00"
@global_var_10009a38.347 = constant i32 939524102
@global_var_1001e330.348 = local_unnamed_addr global i32 0
@global_var_1001e32c.349 = local_unnamed_addr global i32 0
@global_var_1000d5f4.350 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_10009a60.351 = constant [3 x i8] c"8`\00"
@global_var_1001e334.352 = local_unnamed_addr global i32 0
@global_var_1001e338.353 = local_unnamed_addr global i32 0
@global_var_1000d5fc.354 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_10009a84.355 = constant [3 x i8] c"8`\00"
@global_var_1001e33c.356 = local_unnamed_addr global i32 0
@global_var_1001e340.357 = local_unnamed_addr global i32 0
@global_var_1000d604.358 = constant [4 x i8] c"QJ\22\00"
@global_var_10009aa8.359 = constant i32 939524099
@global_var_1001e348.360 = local_unnamed_addr global i32 0
@global_var_1001e344.361 = local_unnamed_addr global i32 0
@global_var_1000d608.362 = constant i32 222317388
@global_var_10009ad0.363 = constant [3 x i8] c"8`\00"
@global_var_1001e34c.364 = local_unnamed_addr global i32 0
@global_var_1001e350.365 = local_unnamed_addr global i32 0
@global_var_1000d61c.366 = constant i32 1869312099
@global_var_10009af8.367 = constant i32 939524120
@global_var_1001e358.368 = local_unnamed_addr global i32 0
@global_var_1001e354.369 = local_unnamed_addr global i32 0
@global_var_1000d638.370 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_10009b20.371 = constant [3 x i8] c"8`\00"
@global_var_1001e35c.372 = local_unnamed_addr global i32 0
@global_var_1001e360.373 = local_unnamed_addr global i32 0
@global_var_1000d644.374 = constant i32 222317388
@global_var_10009b44.375 = constant [3 x i8] c"8`\00"
@global_var_1001e364.376 = local_unnamed_addr global i32 0
@global_var_1001e368.377 = local_unnamed_addr global i32 0
@global_var_1000d658.378 = constant i32 222317388
@global_var_10009b68.379 = constant i32 939524118
@global_var_1001e370.380 = local_unnamed_addr global i32 0
@global_var_1001e36c.381 = local_unnamed_addr global i32 0
@global_var_1000d670.382 = constant i32 1987136855
@global_var_10009b90.383 = constant i32 939524117
@global_var_1001e378.384 = local_unnamed_addr global i32 0
@global_var_1001e374.385 = local_unnamed_addr global i32 0
@global_var_1000d688.386 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_10009bb8.387 = constant i32 939524113
@global_var_1001e380.388 = local_unnamed_addr global i32 0
@global_var_1001e37c.389 = local_unnamed_addr global i32 0
@global_var_1000d69c.390 = constant i32 1279479623
@global_var_10009be0.391 = constant [3 x i8] c"8`\00"
@global_var_1001e384.392 = local_unnamed_addr global i32 0
@global_var_1001e388.393 = local_unnamed_addr global i32 0
@global_var_1000d6ac.394 = constant i32 1632455756
@global_var_10009c04.395 = constant [3 x i8] c"8`\00"
@global_var_1001e38c.396 = local_unnamed_addr global i32 0
@global_var_1001e390.397 = local_unnamed_addr global i32 0
@global_var_1000d6c4.398 = constant i32 1665220935
@global_var_10009c28.399 = constant i32 939524179
@global_var_1001e398.400 = local_unnamed_addr global i32 0
@global_var_1001e394.401 = local_unnamed_addr global i32 0
@global_var_1000d718.402 = constant i32 1665220935
@global_var_10009c50.403 = constant i32 939524128
@global_var_1001e3a0.404 = local_unnamed_addr global i32 0
@global_var_1001e39c.405 = local_unnamed_addr global i32 0
@global_var_1000d73c.406 = constant i32 1632455766
@global_var_10009c78.407 = constant i32 939524144
@global_var_1001e3a8.408 = local_unnamed_addr global i32 0
@global_var_1001e3a4.409 = local_unnamed_addr global i32 0
@global_var_1000d770.410 = constant i32 1363629665
@global_var_10009ca0.411 = constant [3 x i8] c"8`\00"
@global_var_1001e3ac.412 = local_unnamed_addr global i32 0
@global_var_1001e3b0.413 = local_unnamed_addr global i32 0
@global_var_1000d780.414 = constant i32 1346847824
@global_var_10009cc4.415 = constant [3 x i8] c"8`\00"
@global_var_1001e3b4.416 = local_unnamed_addr global i32 0
@global_var_1001e3b8.417 = local_unnamed_addr global i32 0
@global_var_1000d78c.418 = constant i32 1313685827
@global_var_10009ce8.419 = constant [3 x i8] c"8`\00"
@global_var_1001e3bc.420 = local_unnamed_addr global i32 0
@global_var_1001e3c0.421 = local_unnamed_addr global i32 0
@global_var_1000d798.422 = constant i32 1363629583
@global_var_10009d0c.423 = constant [3 x i8] c"8`\00"
@global_var_1001e3c4.424 = local_unnamed_addr global i32 0
@global_var_1001e3c8.425 = local_unnamed_addr global i32 0
@global_var_1000d7a8.426 = constant i32 1095584854
@global_var_10009d30.427 = constant [3 x i8] c"8`\00"
@global_var_1001e3cc.428 = local_unnamed_addr global i32 0
@global_var_1001e3d0.429 = local_unnamed_addr global i32 0
@global_var_1000d7bc.430 = constant i32 1448100684
@global_var_10009d54.431 = constant [3 x i8] c"8`\00"
@global_var_1001e3d4.432 = local_unnamed_addr global i32 0
@global_var_1001e3d8.433 = local_unnamed_addr global i32 0
@global_var_1000d7d0.434 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_10009d78.435 = constant [3 x i8] c"8`\00"
@global_var_1001e3dc.436 = local_unnamed_addr global i32 0
@global_var_1001e3e0.437 = local_unnamed_addr global i32 0
@global_var_1000d6b8.438 = constant i32 1229408082
@global_var_10009d9c.439 = constant [3 x i8] c"8`\00"
@global_var_1001e3e4.440 = local_unnamed_addr global i32 0
@global_var_1001e3e8.441 = local_unnamed_addr global i32 0
@global_var_1000d7dc.442 = constant i32 1095584844
@global_var_10009dc0.443 = constant [3 x i8] c"8`\00"
@global_var_1001e3ec.444 = local_unnamed_addr global i32 0
@global_var_1001e3f0.445 = local_unnamed_addr global i32 0
@global_var_1000d7ec.446 = constant i32 1363628116
@global_var_10009de4.447 = constant i32 939524114
@global_var_1001e3f8.448 = local_unnamed_addr global i32 0
@global_var_1001e3f4.449 = local_unnamed_addr global i32 0
@global_var_1000d800.450 = constant i32 1363628116
@global_var_10009e0c.451 = constant i32 939524121
@global_var_1001e400.452 = local_unnamed_addr global i32 0
@global_var_1001e3fc.453 = local_unnamed_addr global i32 0
@global_var_1000d81c.454 = constant i32 1867339851
@global_var_10009e38.455 = constant [3 x i8] c"8`\00"
@global_var_1001e404.456 = local_unnamed_addr global i32 0
@global_var_1001e408.457 = local_unnamed_addr global i32 0
@global_var_1000d88c.458 = constant i32 1867339851
@global_var_10009e5c.459 = constant [3 x i8] c"8`\00"
@global_var_1001e40c.460 = local_unnamed_addr global i32 0
@global_var_1001e410.461 = local_unnamed_addr global i32 0
@global_var_1000d8fc.462 = constant i32 1867339851
@global_var_10009e84.463 = constant [3 x i8] c"8`\00"
@global_var_1001e414.464 = local_unnamed_addr global i32 0
@global_var_1001e418.465 = local_unnamed_addr global i32 0
@global_var_1000d96c.466 = constant i32 1867339851
@global_var_10009ea8.467 = constant [3 x i8] c"8`\00"
@global_var_1001e41c.468 = local_unnamed_addr global i32 0
@global_var_1001e420.469 = local_unnamed_addr global i32 0
@global_var_1000d9dc.470 = constant i32 1867339851
@global_var_10009ecc.471 = constant i32 939524213
@global_var_1001e428.472 = local_unnamed_addr global i32 0
@global_var_1001e424.473 = local_unnamed_addr global i32 0
@global_var_1000a238.474 = constant i32 939524096
@global_var_1000a604.475 = constant i32 1207959564
@global_var_1000ab28.476 = constant i32 939524118
@global_var_1000c2f8.477 = constant [3 x i8] c"8`\00"
@global_var_1000ac80.478 = constant i32 939524105
@global_var_1000ac9c.479 = constant i32 939589631
@global_var_1000adc4.480 = constant i32 1207959797
@global_var_1000adc8.481 = constant i32 939524108
@global_var_1001e1d8.482 = global i32 0
@global_var_1000b5ec.483 = constant i32 939524118
@global_var_1000b674.484 = constant i32 939524118
@global_var_1001e42c.485 = global i32 0
@global_var_1001e264.486 = global i32 0
@global_var_1001e170 = external global i32
@global_var_1000db60.488 = constant i32 33554944
@global_var_1001e1c8.489 = local_unnamed_addr global i32 0
@global_var_1001e4ac.490 = global i32 0
@global_var_1000b8d0.491 = constant i32 939524108
@global_var_1000b924.492 = constant i32 939524108
@global_var_1000b9d8.493 = constant [3 x i8] c"8`\00"
@global_var_1000ba84.494 = constant [3 x i8] c"8`\00"
@global_var_1000bdac.495 = constant i32 1207959640
@global_var_1000bde8.496 = constant i32 1207959580
@global_var_1001e17c.497 = local_unnamed_addr global i32* @global_var_1000db60.488
@global_var_1000bfdc.498 = constant i32 939524130
@global_var_1001e130.499 = global i32 0
@global_var_1001e1bc.500 = local_unnamed_addr global i32 0
@global_var_1000c070.501 = constant i32 1207960053
@global_var_1000c074.502 = constant [3 x i8] c"= \00"
@global_var_1001e000.503 = global i32 -1
@global_var_1001e1cc.504 = local_unnamed_addr global i32 0
@global_var_1001e1d0.505 = local_unnamed_addr global i32 0
@global_var_1000da54.506 = constant [10 x i8] c"/dev/null\00"
@global_var_1001e1d4.507 = local_unnamed_addr global i32 0
@global_var_1001e1c0.509 = local_unnamed_addr global i32 0
@global_var_1001e1c4.510 = local_unnamed_addr global i32 0
@global_var_1000c610.511 = constant i32 939524096
@global_var_1000c89c.513 = constant i32 939524118
@global_var_1000ca98.514 = constant i32 939589631
@global_var_1001e1ec.515 = local_unnamed_addr global i32 0
@global_var_1001e148.516 = global i32 0
@global_var_1000cf20.517 = constant i32 939524129
@global_var_1001e1e0.518 = local_unnamed_addr global i32 0
@global_var_1000cf94.519 = constant [3 x i8] c"8`\00"
@global_var_1000cfcc.520 = constant i32 939524129
@global_var_1001e1e4.521 = local_unnamed_addr global i32 0
@global_var_1001e1e8.522 = local_unnamed_addr global i32 0
@global_var_1001e004.523 = global i32 0
@global_var_1001e1f0.2 = local_unnamed_addr global i8 0
@global_var_1001e184.58 = local_unnamed_addr global i8 0
@global_var_1001e185.70 = global i8 0
@global_var_1001e020.120 = local_unnamed_addr global i8 1
@global_var_1001e198.145 = local_unnamed_addr global i8 0
@global_var_1001e1a4.171 = global i16 0
@global_var_1001e252.185 = local_unnamed_addr global i16 0
@global_var_1000d39d.249 = constant i8 83

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000d120(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001e1f0.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001e01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001e01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001e01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001e1f0.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001e1f0.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268558352 to i32*), align 16
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268558352
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %lr.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_10000210, i32* %r4.global-to-local, align 4
  %v2_10000214 = ptrtoint i32* %stack_var_4 to i32
  store i32 268462056, i32* %r3.global-to-local, align 4
  %v7_10000234 = call i32 @function_1000c3e4(i32 268462056, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268489100, i32 %arg1)
  store i32 %v7_10000234, i32* %r3.global-to-local, align 4
  %v0_10000238 = load i32, i32* @r1, align 4
  %v2_10000238 = add i32 %v0_10000238, -20896
  %v3_10000238 = inttoptr i32 %v2_10000238 to i32*
  store i32 %v0_10000238, i32* %v3_10000238, align 4
  %v0_1000023c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_1000023c, i32* %r0.global-to-local, align 4
  %v0_10000240 = call i32 @__asm_mfcr()
  %v0_10000244 = load i32, i32* @r29, align 4
  %v1_10000244 = load i32, i32* @r1, align 4
  %v2_10000244 = add i32 %v1_10000244, 20884
  %v3_10000244 = inttoptr i32 %v2_10000244 to i32*
  store i32 %v0_10000244, i32* %v3_10000244, align 4
  store i32 %v2_10000214, i32* %r29.global-to-local, align 4
  %v0_1000024c = load i32, i32* @r22, align 4
  %v1_1000024c = load i32, i32* @r1, align 4
  %v2_1000024c = add i32 %v1_1000024c, 20856
  %v3_1000024c = inttoptr i32 %v2_1000024c to i32*
  store i32 %v0_1000024c, i32* %v3_1000024c, align 4
  %v0_10000254 = load i32, i32* @r23, align 4
  %v1_10000254 = load i32, i32* @r1, align 4
  %v2_10000254 = add i32 %v1_10000254, 20860
  %v3_10000254 = inttoptr i32 %v2_10000254 to i32*
  store i32 %v0_10000254, i32* %v3_10000254, align 4
  store i32 %v2_10000210, i32* %r22.global-to-local, align 4
  %v0_1000025c = load i32, i32* @r28, align 4
  %v1_1000025c = load i32, i32* @r1, align 4
  %v2_1000025c = add i32 %v1_1000025c, 20880
  %v3_1000025c = inttoptr i32 %v2_1000025c to i32*
  store i32 %v0_1000025c, i32* %v3_1000025c, align 4
  store i32 268435604, i32* %r4.global-to-local, align 4
  store i32 268435604, i32* %r28.global-to-local, align 4
  store i32 %v0_10000240, i32* %r23.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  %v0_10000274 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000274 = load i32, i32* @r1, align 4
  %v2_10000274 = add i32 %v1_10000274, 20900
  %v3_10000274 = inttoptr i32 %v2_10000274 to i32*
  store i32 %v0_10000274, i32* %v3_10000274, align 4
  %v1_10000278 = load i32, i32* @r1, align 4
  %v2_10000278 = add i32 %v1_10000278, 20820
  %v3_10000278 = inttoptr i32 %v2_10000278 to i32*
  store i32 %v0_10000240, i32* %v3_10000278, align 4
  %v0_1000027c = load i32, i32* @r20, align 4
  %v1_1000027c = load i32, i32* @r1, align 4
  %v2_1000027c = add i32 %v1_1000027c, 20848
  %v3_1000027c = inttoptr i32 %v2_1000027c to i32*
  store i32 %v0_1000027c, i32* %v3_1000027c, align 4
  %v0_10000280 = load i32, i32* @r1, align 4
  %v1_10000280 = add i32 %v0_10000280, 10540
  store i32 %v1_10000280, i32* %r20.global-to-local, align 4
  %v0_10000284 = load i32, i32* @r25, align 4
  %v2_10000284 = add i32 %v0_10000280, 20868
  %v3_10000284 = inttoptr i32 %v2_10000284 to i32*
  store i32 %v0_10000284, i32* %v3_10000284, align 4
  %v0_10000288 = load i32, i32* @r26, align 4
  %v1_10000288 = load i32, i32* @r1, align 4
  %v2_10000288 = add i32 %v1_10000288, 20872
  %v3_10000288 = inttoptr i32 %v2_10000288 to i32*
  store i32 %v0_10000288, i32* %v3_10000288, align 4
  %v0_1000028c = load i32, i32* @r27, align 4
  %v1_1000028c = load i32, i32* @r1, align 4
  %v2_1000028c = add i32 %v1_1000028c, 20876
  %v3_1000028c = inttoptr i32 %v2_1000028c to i32*
  store i32 %v0_1000028c, i32* %v3_1000028c, align 4
  %v0_10000290 = load i32, i32* @r31, align 4
  %v1_10000290 = load i32, i32* @r1, align 4
  %v2_10000290 = add i32 %v1_10000290, 20892
  %v3_10000290 = inttoptr i32 %v2_10000290 to i32*
  store i32 %v0_10000290, i32* %v3_10000290, align 4
  %v0_10000294 = load i32, i32* @r14, align 4
  %v1_10000294 = load i32, i32* @r1, align 4
  %v2_10000294 = add i32 %v1_10000294, 20824
  %v3_10000294 = inttoptr i32 %v2_10000294 to i32*
  store i32 %v0_10000294, i32* %v3_10000294, align 4
  %v0_10000298 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000298 = load i32, i32* @r1, align 4
  %v2_10000298 = add i32 %v1_10000298, 20828
  %v3_10000298 = inttoptr i32 %v2_10000298 to i32*
  store i32 %v0_10000298, i32* %v3_10000298, align 4
  %v0_1000029c = load i32, i32* @r16, align 4
  %v1_1000029c = load i32, i32* @r1, align 4
  %v2_1000029c = add i32 %v1_1000029c, 20832
  %v3_1000029c = inttoptr i32 %v2_1000029c to i32*
  store i32 %v0_1000029c, i32* %v3_1000029c, align 4
  %v0_100002a0 = load i32, i32* @r17, align 4
  %v1_100002a0 = load i32, i32* @r1, align 4
  %v2_100002a0 = add i32 %v1_100002a0, 20836
  %v3_100002a0 = inttoptr i32 %v2_100002a0 to i32*
  store i32 %v0_100002a0, i32* %v3_100002a0, align 4
  %v0_100002a4 = load i32, i32* @r18, align 4
  %v1_100002a4 = load i32, i32* @r1, align 4
  %v2_100002a4 = add i32 %v1_100002a4, 20840
  %v3_100002a4 = inttoptr i32 %v2_100002a4 to i32*
  store i32 %v0_100002a4, i32* %v3_100002a4, align 4
  %v0_100002a8 = load i32, i32* @r19, align 4
  %v1_100002a8 = load i32, i32* @r1, align 4
  %v2_100002a8 = add i32 %v1_100002a8, 20844
  %v3_100002a8 = inttoptr i32 %v2_100002a8 to i32*
  store i32 %v0_100002a8, i32* %v3_100002a8, align 4
  %v0_100002ac = load i32, i32* @r21, align 4
  %v1_100002ac = load i32, i32* @r1, align 4
  %v2_100002ac = add i32 %v1_100002ac, 20852
  %v3_100002ac = inttoptr i32 %v2_100002ac to i32*
  store i32 %v0_100002ac, i32* %v3_100002ac, align 4
  %v0_100002b0 = load i32, i32* @r24, align 4
  %v1_100002b0 = load i32, i32* @r1, align 4
  %v2_100002b0 = add i32 %v1_100002b0, 20864
  %v3_100002b0 = inttoptr i32 %v2_100002b0 to i32*
  store i32 %v0_100002b0, i32* %v3_100002b0, align 4
  %v0_100002b4 = load i32, i32* @r30, align 4
  %v1_100002b4 = load i32, i32* @r1, align 4
  %v2_100002b4 = add i32 %v1_100002b4, 20888
  %v3_100002b4 = inttoptr i32 %v2_100002b4 to i32*
  store i32 %v0_100002b4, i32* %v3_100002b4, align 4
  store i32 268436156, i32* @lr, align 4
  %v5_100002b8 = call i32 @function_10001d50(i32 %v2_10000214, i32* inttoptr (i32 268435604 to i32*), i32 21, i32 0)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100002c0 = load i32, i32* @r1, align 4
  %v2_100002c0 = add i32 %v1_100002c0, 20804
  %v3_100002c0 = inttoptr i32 %v2_100002c0 to i32*
  store i32 %v5_100002b8, i32* %v3_100002c0, align 4
  %v0_100002cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002cc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436184, i32* @lr, align 4
  %v5_100002d4 = inttoptr i32 %v0_100002cc to i32*
  %v6_100002d4 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v5_100002d4, i32 20, i32 ptrtoint ([4 x i8]* @global_var_1000d1ec.7 to i32))
  %v0_100002d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002d8, i32* %r4.global-to-local, align 4
  store i32 %v6_100002d4, i32* %r25.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436208, i32* @lr, align 4
  %v4_100002ec = inttoptr i32 %v0_100002d8 to i32*
  %v5_100002ec = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_100002ec, i32 8, i32 0)
  store i32 %v5_100002ec, i32* %r26.global-to-local, align 4
  %v0_10000300 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000300, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436236, i32* @lr, align 4
  %v4_10000308 = inttoptr i32 %v0_10000300 to i32*
  %v5_10000308 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_10000308, i32 22, i32 ptrtoint (i32* @global_var_1000d1f0.8 to i32))
  %v0_1000030c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000030c, i32* %r4.global-to-local, align 4
  store i32 %v5_10000308, i32* %r27.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436260, i32* @lr, align 4
  %v4_10000320 = inttoptr i32 %v0_1000030c to i32*
  %v5_10000320 = call i32 @function_1000235c(i32 %v2_10000214, i32* %v4_10000320, i32 24, i32 1)
  %v0_10000324 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000324, i32* %r4.global-to-local, align 4
  store i32 %v5_10000320, i32* %r31.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436284, i32* @lr, align 4
  %v4_10000338 = inttoptr i32 %v0_10000324 to i32*
  %v5_10000338 = call i32 @function_1000235c(i32 %v2_10000214, i32* %v4_10000338, i32 7, i32 80)
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000340 = urem i32 %v5_10000338, 65536
  %v1_10000348 = load i32, i32* @r1, align 4
  %v2_10000348 = add i32 %v1_10000348, 20800
  %v3_10000348 = inttoptr i32 %v2_10000348 to i32*
  store i32 %v1_10000340, i32* %v3_10000348, align 4
  %v0_1000034c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000034c, i32* %r3.global-to-local, align 4
  store i32 268436308, i32* @lr, align 4
  %v3_10000350 = call i32 @function_1000b03c(i32 %v0_1000034c, i32 0, i32 10241)
  store i32 %v3_10000350, i32* %r3.global-to-local, align 4
  %v0_10000354 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000354 = icmp slt i32 %v0_10000354, 0
  %v2_10000354 = icmp sgt i32 %v0_10000354, 0
  %v3_10000354 = icmp eq i32 %v0_10000354, 0
  store i1 %v1_10000354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000354, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000354, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000354, label %dec_label_pc_10000374, label %dec_label_pc_1000035c

dec_label_pc_1000035c:                            ; preds = %entry
  %v0_1000035c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000035c = icmp slt i32 %v0_1000035c, 0
  %v2_1000035c = icmp sgt i32 %v0_1000035c, 0
  %v3_1000035c = icmp eq i32 %v0_1000035c, 0
  store i1 %v1_1000035c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000035c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000035c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000035c, label %dec_label_pc_10000374, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_1000035c
  store i32 %v0_1000035c, i32* %r3.global-to-local, align 4
  store i32 268436332, i32* @lr, align 4
  %v1_10000368 = inttoptr i32 %v0_1000035c to i8*
  %v2_10000368 = call i32 @function_10009f10(i8* %v1_10000368)
  store i32 %v2_10000368, i32* %r3.global-to-local, align 4
  %v1_1000036c = icmp slt i32 %v2_10000368, 255
  %v2_1000036c = icmp sgt i32 %v2_10000368, 255
  %v3_1000036c = icmp eq i32 %v2_10000368, 255
  store i1 %v1_1000036c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000036c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000036c, i1* %cr7_eq.global-to-local, align 1
  %tmp65 = icmp slt i32 %v2_10000368, 256
  br i1 %tmp65, label %dec_label_pc_100003d4, label %dec_label_pc_10000374

dec_label_pc_10000374:                            ; preds = %dec_label_pc_100003e4, %dec_label_pc_100003d4, %dec_label_pc_10000364, %dec_label_pc_1000035c, %entry
  %v0_10000374 = load i32, i32* @r1, align 4
  %v1_10000374 = add i32 %v0_10000374, 20900
  %v2_10000374 = inttoptr i32 %v1_10000374 to i32*
  %v3_10000374 = load i32, i32* %v2_10000374, align 4
  store i32 %v3_10000374, i32* %r0.global-to-local, align 4
  %v1_10000378 = add i32 %v0_10000374, 20820
  %v2_10000378 = inttoptr i32 %v1_10000378 to i32*
  %v3_10000378 = load i32, i32* %v2_10000378, align 4
  %v1_1000037c = add i32 %v0_10000374, 20824
  %v2_1000037c = inttoptr i32 %v1_1000037c to i32*
  %v3_1000037c = load i32, i32* %v2_1000037c, align 4
  store i32 %v3_1000037c, i32* %r14.global-to-local, align 4
  store i32 %v3_10000374, i32* %lr.global-to-local, align 4
  %v1_10000384 = add i32 %v0_10000374, 20828
  %v2_10000384 = inttoptr i32 %v1_10000384 to i32*
  %v3_10000384 = load i32, i32* %v2_10000384, align 4
  store i32 %v3_10000384, i32* %r15.global-to-local, align 4
  %v1_10000388 = call %0 @__asm_mtcrf(i32 24, i32 %v3_10000378)
  %v0_1000038c = load i32, i32* @r1, align 4
  %v1_1000038c = add i32 %v0_1000038c, 20832
  %v2_1000038c = inttoptr i32 %v1_1000038c to i32*
  %v3_1000038c = load i32, i32* %v2_1000038c, align 4
  store i32 %v3_1000038c, i32* %r16.global-to-local, align 4
  %v1_10000390 = add i32 %v0_1000038c, 20836
  %v2_10000390 = inttoptr i32 %v1_10000390 to i32*
  %v3_10000390 = load i32, i32* %v2_10000390, align 4
  store i32 %v3_10000390, i32* %r17.global-to-local, align 4
  %v1_10000394 = add i32 %v0_1000038c, 20840
  %v2_10000394 = inttoptr i32 %v1_10000394 to i32*
  %v3_10000394 = load i32, i32* %v2_10000394, align 4
  store i32 %v3_10000394, i32* %r18.global-to-local, align 4
  %v1_10000398 = add i32 %v0_1000038c, 20844
  %v2_10000398 = inttoptr i32 %v1_10000398 to i32*
  %v3_10000398 = load i32, i32* %v2_10000398, align 4
  store i32 %v3_10000398, i32* %r19.global-to-local, align 4
  %v1_1000039c = add i32 %v0_1000038c, 20848
  %v2_1000039c = inttoptr i32 %v1_1000039c to i32*
  %v3_1000039c = load i32, i32* %v2_1000039c, align 4
  store i32 %v3_1000039c, i32* %r20.global-to-local, align 4
  %v1_100003a0 = add i32 %v0_1000038c, 20852
  %v2_100003a0 = inttoptr i32 %v1_100003a0 to i32*
  %v3_100003a0 = load i32, i32* %v2_100003a0, align 4
  store i32 %v3_100003a0, i32* %r21.global-to-local, align 4
  %v1_100003a4 = add i32 %v0_1000038c, 20856
  %v2_100003a4 = inttoptr i32 %v1_100003a4 to i32*
  %v3_100003a4 = load i32, i32* %v2_100003a4, align 4
  store i32 %v3_100003a4, i32* %r22.global-to-local, align 4
  %v1_100003a8 = add i32 %v0_1000038c, 20860
  %v2_100003a8 = inttoptr i32 %v1_100003a8 to i32*
  %v3_100003a8 = load i32, i32* %v2_100003a8, align 4
  store i32 %v3_100003a8, i32* %r23.global-to-local, align 4
  %v1_100003ac = add i32 %v0_1000038c, 20864
  %v2_100003ac = inttoptr i32 %v1_100003ac to i32*
  %v3_100003ac = load i32, i32* %v2_100003ac, align 4
  store i32 %v3_100003ac, i32* %r24.global-to-local, align 4
  %v1_100003b0 = add i32 %v0_1000038c, 20868
  %v2_100003b0 = inttoptr i32 %v1_100003b0 to i32*
  %v3_100003b0 = load i32, i32* %v2_100003b0, align 4
  store i32 %v3_100003b0, i32* %r25.global-to-local, align 4
  %v1_100003b4 = add i32 %v0_1000038c, 20872
  %v2_100003b4 = inttoptr i32 %v1_100003b4 to i32*
  %v3_100003b4 = load i32, i32* %v2_100003b4, align 4
  store i32 %v3_100003b4, i32* %r26.global-to-local, align 4
  %v1_100003b8 = add i32 %v0_1000038c, 20876
  %v2_100003b8 = inttoptr i32 %v1_100003b8 to i32*
  %v3_100003b8 = load i32, i32* %v2_100003b8, align 4
  store i32 %v3_100003b8, i32* %r27.global-to-local, align 4
  %v1_100003bc = add i32 %v0_1000038c, 20880
  %v2_100003bc = inttoptr i32 %v1_100003bc to i32*
  %v3_100003bc = load i32, i32* %v2_100003bc, align 4
  store i32 %v3_100003bc, i32* %r28.global-to-local, align 4
  %v1_100003c0 = add i32 %v0_1000038c, 20884
  %v2_100003c0 = inttoptr i32 %v1_100003c0 to i32*
  %v3_100003c0 = load i32, i32* %v2_100003c0, align 4
  store i32 %v3_100003c0, i32* %r29.global-to-local, align 4
  %v1_100003c4 = add i32 %v0_1000038c, 20888
  %v2_100003c4 = inttoptr i32 %v1_100003c4 to i32*
  %v3_100003c4 = load i32, i32* %v2_100003c4, align 4
  store i32 %v3_100003c4, i32* %r30.global-to-local, align 4
  %v1_100003c8 = add i32 %v0_1000038c, 20892
  %v2_100003c8 = inttoptr i32 %v1_100003c8 to i32*
  %v3_100003c8 = load i32, i32* %v2_100003c8, align 4
  store i32 %v3_100003c8, i32* %r31.global-to-local, align 4
  %v0_100003d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100003d0

dec_label_pc_100003d4:                            ; preds = %dec_label_pc_10000364
  %v0_100003d4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100003d4, i32* %r3.global-to-local, align 4
  store i32 268436444, i32* @lr, align 4
  %v1_100003d8 = inttoptr i32 %v0_100003d4 to i8*
  %v2_100003d8 = call i32 @function_10009f10(i8* %v1_100003d8)
  store i32 %v2_100003d8, i32* %r3.global-to-local, align 4
  %v1_100003dc = icmp slt i32 %v2_100003d8, 127
  %v2_100003dc = icmp sgt i32 %v2_100003d8, 127
  %v3_100003dc = icmp eq i32 %v2_100003d8, 127
  store i1 %v1_100003dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003dc, label %dec_label_pc_10000374, label %dec_label_pc_100003e4

dec_label_pc_100003e4:                            ; preds = %dec_label_pc_100003d4
  %v0_100003e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003e4, i32* %r3.global-to-local, align 4
  store i32 268436460, i32* @lr, align 4
  %v1_100003e8 = inttoptr i32 %v0_100003e4 to i8*
  %v2_100003e8 = call i32 @function_10009f10(i8* %v1_100003e8)
  store i32 %v2_100003e8, i32* %r3.global-to-local, align 4
  %v1_100003ec = icmp slt i32 %v2_100003e8, 9
  %v2_100003ec = icmp sgt i32 %v2_100003e8, 9
  %v3_100003ec = icmp eq i32 %v2_100003e8, 9
  store i1 %v1_100003ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003ec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003ec, label %dec_label_pc_10000374, label %dec_label_pc_100003f4

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100003f8 = load i32, i32* @r1, align 4
  %v2_100003f8 = add i32 %v1_100003f8, 8
  %v3_100003f8 = inttoptr i32 %v2_100003f8 to i32*
  store i32 0, i32* %v3_100003f8, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_100003fc:                            ; preds = %dec_label_pc_10000430, %dec_label_pc_100003f4
  %v0_100003fc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003fc, i32* %r3.global-to-local, align 4
  store i32 268436484, i32* @lr, align 4
  %v1_10000400 = inttoptr i32 %v0_100003fc to i8*
  %v2_10000400 = call i32 @function_10009f10(i8* %v1_10000400)
  store i32 %v2_10000400, i32* %r3.global-to-local, align 4
  %v0_10000404 = load i32, i32* @r1, align 4
  %v1_10000404 = add i32 %v0_10000404, 8
  %v2_10000404 = inttoptr i32 %v1_10000404 to i32*
  %v3_10000404 = load i32, i32* %v2_10000404, align 4
  store i32 %v3_10000404, i32* %r11.global-to-local, align 4
  %v2_10000408 = icmp slt i32 %v2_10000400, %v3_10000404
  %v3_10000408 = icmp sgt i32 %v2_10000400, %v3_10000404
  %v4_10000408 = icmp eq i32 %v2_10000400, %v3_10000404
  store i1 %v2_10000408, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000408, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000408, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000408, label %dec_label_pc_10000410, label %dec_label_pc_1000043c

dec_label_pc_10000410:                            ; preds = %dec_label_pc_100003fc
  %v0_10000410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000410 = add i32 %v0_10000410, %v3_10000404
  %v3_10000410 = inttoptr i32 %v2_10000410 to i8*
  %v4_10000410 = load i8, i8* %v3_10000410, align 1
  %v5_10000410 = zext i8 %v4_10000410 to i32
  store i32 %v5_10000410, i32* %r9.global-to-local, align 4
  %v1_10000414 = add nuw nsw i32 %v5_10000410, 159
  %v1_10000418 = urem i32 %v1_10000414, 256
  store i32 %v1_10000418, i32* %r0.global-to-local, align 4
  %v1_1000041c = icmp ult i32 %v1_10000418, 25
  %v2_1000041c = icmp ugt i32 %v1_10000418, 25
  %v3_1000041c = icmp eq i32 %v1_10000418, 25
  store i1 %v1_1000041c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000041c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000041c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000041c, label %dec_label_pc_10000430, label %dec_label_pc_10000424

dec_label_pc_10000424:                            ; preds = %dec_label_pc_10000410
  %v1_10000424 = add nsw i32 %v5_10000410, -32
  store i32 %v1_10000424, i32* %r0.global-to-local, align 4
  %v3_10000428 = trunc i32 %v1_10000424 to i8
  store i8 %v3_10000428, i8* %v3_10000410, align 1
  %v0_1000042c = load i32, i32* @r1, align 4
  %v1_1000042c = add i32 %v0_1000042c, 8
  %v2_1000042c = inttoptr i32 %v1_1000042c to i32*
  %v3_1000042c = load i32, i32* %v2_1000042c, align 4
  store i32 %v3_1000042c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10000430

dec_label_pc_10000430:                            ; preds = %dec_label_pc_10000410, %dec_label_pc_10000424
  %v1_10000434 = phi i32 [ %v0_10000404, %dec_label_pc_10000410 ], [ %v0_1000042c, %dec_label_pc_10000424 ]
  %v0_10000430 = phi i32 [ %v3_10000404, %dec_label_pc_10000410 ], [ %v3_1000042c, %dec_label_pc_10000424 ]
  %v1_10000430 = add i32 %v0_10000430, 1
  store i32 %v1_10000430, i32* %r11.global-to-local, align 4
  %v2_10000434 = add i32 %v1_10000434, 8
  %v3_10000434 = inttoptr i32 %v2_10000434 to i32*
  store i32 %v1_10000430, i32* %v3_10000434, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003fc
  %v0_1000043c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000043c = icmp slt i32 %v0_1000043c, 256
  %v2_1000043c = icmp sgt i32 %v0_1000043c, 256
  %v3_1000043c = icmp eq i32 %v0_1000043c, 256
  store i1 %v1_1000043c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000043c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000043c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000440. = select i1 %v2_1000043c, i32 256, i32 %v0_1000043c
  store i32 %v0_10000440., i32* %r21.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_10000450 = icmp slt i32 %v0_10000440., 0
  %v3_10000450 = icmp eq i32 %v0_10000440., 0
  store i1 %v1_10000450, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000450, i1* %cr4_eq.global-to-local, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10000458.9 to i32), i32* @lr, align 4
  %v1_10000454 = call i32 @function_1000968c(i32 36)
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000460.10 to i32), i32* @lr, align 4
  %v1_1000045c = call i32 @function_1000968c(i32 37)
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000468.11 to i32), i32* @lr, align 4
  %v1_10000464 = call i32 @function_1000968c(i32 38)
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000470.12 to i32), i32* @lr, align 4
  %v1_1000046c = call i32 @function_1000968c(i32 39)
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000478.13 to i32), i32* @lr, align 4
  %v1_10000474 = call i32 @function_1000968c(i32 40)
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000480.14 to i32), i32* @lr, align 4
  %v1_1000047c = call i32 @function_1000968c(i32 41)
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000488.15 to i32), i32* @lr, align 4
  %v1_10000484 = call i32 @function_1000968c(i32 42)
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000490.16 to i32), i32* @lr, align 4
  %v1_1000048c = call i32 @function_1000968c(i32 43)
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000498.17 to i32), i32* @lr, align 4
  %v1_10000494 = call i32 @function_1000968c(i32 44)
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100004a0.18 to i32), i32* @lr, align 4
  %v1_1000049c = call i32 @function_1000968c(i32 45)
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268436648, i32* @lr, align 4
  %v1_100004a4 = call i32 @function_1000968c(i32 46)
  %v0_100004a8 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100004a8, i32* %r3.global-to-local, align 4
  store i32 3140, i32* %r4.global-to-local, align 4
  store i32 268436660, i32* @lr, align 4
  %v2_100004b0 = call i32 @function_1000b8f4(i32 %v0_100004a8, i32 3140)
  store i32 %v2_100004b0, i32* %r3.global-to-local, align 4
  %v1_100004b4 = load i32, i32* @r1, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 20796
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v2_100004b0, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004b8 = or i1 %v0_100004b8, %v1_100004b8
  br i1 %v2_100004b8, label %dec_label_pc_100005b4, label %dec_label_pc_100004bc

dec_label_pc_100004bc:                            ; preds = %dec_label_pc_1000043c
  store i32 %v2_100004b0, i32* @r31, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge, %dec_label_pc_100004bc
  %v2_100004d4 = phi i32 [ %v2_100004d4.pre, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ %v2_100004b0, %dec_label_pc_100004bc ]
  %v0_100004c8 = phi i32 [ %v1_10001c84, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ 0, %dec_label_pc_100004bc ]
  %v1_100004c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004c8 = sdiv i32 %v0_100004c8, %v1_100004c8
  store i32 %v2_100004c8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v3_100004d4 = add i32 %v2_100004d4, 4
  %v4_100004d4 = inttoptr i32 %v3_100004d4 to i8*
  store i8 0, i8* %v4_100004d4, align 1
  %v0_100004d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004d8 = load i32, i32* @r31, align 4
  %v2_100004d8 = inttoptr i32 %v1_100004d8 to i32*
  store i32 %v0_100004d8, i32* %v2_100004d8, align 4
  %v0_100004dc = load i32, i32* @r31, align 4
  %v1_100004dc = add i32 %v0_100004dc, 532
  store i32 %v1_100004dc, i32* %r24.global-to-local, align 4
  store i32 %v1_100004dc, i32* @r3, align 4
  %v0_100004e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100004e4, i32* %r4.global-to-local, align 4
  %v0_100004e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100004e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004e8 = mul i32 %v1_100004e8, %v0_100004e8
  %v1_100004ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100004ec = sub i32 %v1_100004ec, %v2_100004e8
  %v1_100004f0 = mul i32 %v2_100004ec, 24
  store i32 %v1_100004f0, i32* %r0.global-to-local, align 4
  %v1_100004f4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100004f4 = add i32 %v1_100004f4, %v1_100004f0
  store i32 %v2_100004f4, i32* %r30.global-to-local, align 4
  %v1_100004f8 = add i32 %v2_100004f4, 16
  %v2_100004f8 = inttoptr i32 %v1_100004f8 to i32*
  %v3_100004f8 = load i32, i32* %v2_100004f8, align 4
  store i32 %v3_100004f8, i32* %r9.global-to-local, align 4
  %v2_100004fc = add i32 %v0_100004dc, 16
  %v3_100004fc = inttoptr i32 %v2_100004fc to i32*
  store i32 %v3_100004f8, i32* %v3_100004fc, align 4
  store i32 268436740, i32* %lr.global-to-local, align 4
  %v2_10000500 = inttoptr i32 %v1_100004dc to i8*
  %v3_10000500 = call i32 @function_10009f38(i8* %v2_10000500, i32 %v0_100004e4)
  store i32 %v3_10000500, i32* %r3.global-to-local, align 4
  %v0_10000504 = load i32, i32* @r31, align 4
  %v1_10000504 = add i32 %v0_10000504, 532
  %v2_10000504 = inttoptr i32 %v1_10000504 to i8*
  %v3_10000504 = load i8, i8* %v2_10000504, align 1
  %v4_10000504 = zext i8 %v3_10000504 to i32
  store i32 %v4_10000504, i32* %r0.global-to-local, align 4
  %v1_10000508 = icmp ult i8 %v3_10000504, 47
  %v2_10000508 = icmp ugt i8 %v3_10000504, 47
  %v3_10000508 = icmp eq i8 %v3_10000504, 47
  store i1 %v1_10000508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000508, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000508, label %dec_label_pc_10000530, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_100004c8
  %v0_10000510 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000510, i32* %r3.global-to-local, align 4
  store i32 268436760, i32* @lr, align 4
  %v1_10000514 = inttoptr i32 %v0_10000510 to i8*
  %v2_10000514 = call i32 @function_10009f10(i8* %v1_10000514)
  %v0_10000518 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000518, i32* %r4.global-to-local, align 4
  %v0_10000520 = load i32, i32* @r31, align 4
  %v1_10000520 = add i32 %v0_10000520, 533
  store i32 %v1_10000520, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000528.19 to i32), i32* @lr, align 4
  %v3_10000524 = call i32 @function_1000af98(i32 %v1_10000520, i32 %v0_10000518, i32 %v2_10000514)
  store i32 %v3_10000524, i32* %r3.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_1000052c = load i32, i32* @r31, align 4
  %v3_1000052c = add i32 %v2_1000052c, 532
  %v4_1000052c = inttoptr i32 %v3_1000052c to i8*
  store i8 47, i8* %v4_1000052c, align 1
  %v0_10000534.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10000530

dec_label_pc_10000530:                            ; preds = %dec_label_pc_100004c8, %dec_label_pc_10000510
  %v0_10000534 = phi i32 [ %v0_10000504, %dec_label_pc_100004c8 ], [ %v0_10000534.pre, %dec_label_pc_10000510 ]
  %v0_10000530 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000530, i32* %r4.global-to-local, align 4
  %v1_10000534 = add i32 %v0_10000534, 1440
  store i32 %v1_10000534, i32* @r3, align 4
  store i32 268436796, i32* %lr.global-to-local, align 4
  %v2_10000538 = inttoptr i32 %v1_10000534 to i8*
  %v3_10000538 = call i32 @function_10009f38(i8* %v2_10000538, i32 %v0_10000530)
  %v0_1000053c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000053c, i32* %r4.global-to-local, align 4
  %v0_10000540 = load i32, i32* @r31, align 4
  %v1_10000540 = add i32 %v0_10000540, 1431
  store i32 %v1_10000540, i32* @r3, align 4
  store i32 268436808, i32* %lr.global-to-local, align 4
  %v2_10000544 = inttoptr i32 %v1_10000540 to i8*
  %v3_10000544 = call i32 @function_10009f38(i8* %v2_10000544, i32 %v0_1000053c)
  %v0_10000548 = load i32, i32* @r31, align 4
  %v1_10000548 = add i32 %v0_10000548, 789
  store i32 %v1_10000548, i32* @r3, align 4
  %v0_1000054c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000054c, i32* %r4.global-to-local, align 4
  store i32 268436820, i32* %lr.global-to-local, align 4
  %v2_10000550 = inttoptr i32 %v1_10000548 to i8*
  %v3_10000550 = call i32 @function_10009f38(i8* %v2_10000550, i32 %v0_1000054c)
  store i32 %v3_10000550, i32* %r3.global-to-local, align 4
  %v0_10000554 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000554 = add i32 %v0_10000554, 20
  %v2_10000554 = inttoptr i32 %v1_10000554 to i8*
  %v3_10000554 = load i8, i8* %v2_10000554, align 1
  %v4_10000554 = zext i8 %v3_10000554 to i32
  store i32 %v4_10000554, i32* %r0.global-to-local, align 4
  %v1_10000558 = icmp ult i8 %v3_10000554, 31
  %v2_10000558 = icmp ugt i8 %v3_10000554, 31
  %v3_10000558 = icmp eq i8 %v3_10000554, 31
  store i1 %v1_10000558, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000558, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000558, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000558, label %dec_label_pc_10000578, label %dec_label_pc_10000560

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000530
  %v1_10000560 = add i32 %v0_10000554, 16
  %v2_10000560 = inttoptr i32 %v1_10000560 to i32*
  %v3_10000560 = load i32, i32* %v2_10000560, align 4
  store i32 %v3_10000560, i32* %r29.global-to-local, align 4
  store i32 268436840, i32* %lr.global-to-local, align 4
  %v0_10000564 = call i32 @function_10006fa8()
  store i32 %v0_10000564, i32* %r3.global-to-local, align 4
  %v0_10000568 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 20
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v4_10000568, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000568, 64
  %v2_1000056c = zext i8 %tmp to i32
  %v3_1000056c = lshr i32 %v0_10000564, %v2_1000056c
  store i32 %v3_1000056c, i32* %r3.global-to-local, align 4
  %v0_10000570 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000570 = add i32 %v3_1000056c, %v0_10000570
  store i32 %v2_10000570, i32* %r29.global-to-local, align 4
  %v1_10000574 = load i32, i32* @r31, align 4
  %v2_10000574 = add i32 %v1_10000574, 16
  %v3_10000574 = inttoptr i32 %v2_10000574 to i32*
  store i32 %v2_10000570, i32* %v3_10000574, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000530, %dec_label_pc_10000560
  store i32 ptrtoint (i32* @global_var_1000057c.20 to i32), i32* %lr.global-to-local, align 4
  %v0_10000578 = call i32 @function_10006fa8()
  %v1_10000578 = sext i32 %v0_10000578 to i64
  %v5_10000584 = mul nuw nsw i64 %v1_10000578, 3435973837
  %v1_100005881 = udiv i64 %v5_10000584, 17179869184
  %v1_10000588 = trunc i64 %v1_100005881 to i32
  %v1_1000058c = mul i32 %v1_10000588, 5
  store i32 %v1_1000058c, i32* %r0.global-to-local, align 4
  %v3_10000590 = sub i32 %v0_10000578, %v1_1000058c
  store i32 %v3_10000590, i32* %r3.global-to-local, align 4
  %v1_10000594 = icmp ult i32 %v3_10000590, 4
  %v2_10000594 = icmp ugt i32 %v3_10000590, 4
  %v3_10000594 = icmp eq i32 %v3_10000590, 4
  store i1 %v1_10000594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000594, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000594, label %dec_label_pc_10001c70, label %dec_label_pc_1000059c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_10000578
  store i32 ptrtoint (i32* @global_var_1000d234.21 to i32), i32* %r9.global-to-local, align 4
  %v1_100005a0 = mul i32 %v3_10000590, 4
  store i32 %v1_100005a0, i32* %r11.global-to-local, align 4
  %v2_100005a4 = add i32 %v1_100005a0, ptrtoint (i32* @global_var_1000d234.21 to i32)
  %v3_100005a4 = inttoptr i32 %v2_100005a4 to i32*
  %v4_100005a4 = load i32, i32* %v3_100005a4, align 4
  %v2_100005a8 = add i32 %v4_100005a4, ptrtoint (i32* @global_var_1000d234.21 to i32)
  store i32 %v2_100005a8, i32* %r0.global-to-local, align 4
  store i32 %v2_100005a8, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100005a8)
  br label %dec_label_pc_100005b4

dec_label_pc_100005b4:                            ; preds = %dec_label_pc_1000043c, %dec_label_pc_1000059c
  %v0_100005b4 = load i32, i32* @r1, align 4
  %v1_100005b4 = add i32 %v0_100005b4, 20804
  %v2_100005b4 = inttoptr i32 %v1_100005b4 to i32*
  %v3_100005b4 = load i32, i32* %v2_100005b4, align 4
  store i32 %v3_100005b4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

dec_label_pc_100005c4.preheader:                  ; preds = %dec_label_pc_100005b4, %dec_label_pc_10001c8c
  %storemerge10.in = phi i32 [ %v0_100005b4, %dec_label_pc_100005b4 ], [ %v0_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge9.in = phi i32 [ %v3_100005b4, %dec_label_pc_100005b4 ], [ %v3_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge11 = add i32 %storemerge10.in, 8
  store i32 %storemerge11, i32* %r18.global-to-local, align 4
  %storemerge10 = add i32 %storemerge10.in, 300
  store i32 %storemerge10, i32* %r22.global-to-local, align 4
  %storemerge = icmp eq i32 %storemerge9.in, 0
  store i1 %storemerge, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100005c4

dec_label_pc_100005c4:                            ; preds = %dec_label_pc_1000079c, %dec_label_pc_10000794, %dec_label_pc_10000610, %dec_label_pc_10000824, %dec_label_pc_100005c4.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100005cc.22 to i32), i32* @lr, align 4
  %v0_100005c8 = call i32 @function_1000ab6c()
  store i32 %v0_100005c8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v0_100005c8, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 44, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100005e897 = load i32, i32* @r1, align 4
  %v3_100005e898 = add i32 %v2_100005e897, 44
  %v4_100005e899 = inttoptr i32 %v3_100005e898 to i32*
  store i32 0, i32* %v4_100005e899, align 4
  %v0_100005ec100 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec101 = add i32 %v0_100005ec100, -1
  store i32 %v1_100005ec101, i32* %ctr.global-to-local, align 4
  %v2_100005ec102 = icmp eq i32 %v1_100005ec101, 0
  br i1 %v2_100005ec102, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge: ; preds = %dec_label_pc_100005c4, %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge
  %v0_100005e0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100005e8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100005e0 = add i32 %v0_100005e0.pre, 44
  store i32 %v1_100005e0, i32* %r11.global-to-local, align 4
  %v1_100005e4 = add i32 %v0_100005e0.pre, 4
  store i32 %v1_100005e4, i32* %r9.global-to-local, align 4
  %v2_100005e8 = load i32, i32* @r1, align 4
  %v3_100005e8 = add i32 %v2_100005e8, %v1_100005e0
  %v4_100005e8 = inttoptr i32 %v3_100005e8 to i32*
  store i32 %v0_100005e8.pre, i32* %v4_100005e8, align 4
  %v0_100005ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec = add i32 %v0_100005ec, -1
  store i32 %v1_100005ec, i32* %ctr.global-to-local, align 4
  %v2_100005ec = icmp eq i32 %v1_100005ec, 0
  br i1 %v2_100005ec, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, %dec_label_pc_100005c4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 172, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10000608103 = load i32, i32* @r1, align 4
  %v3_10000608104 = add i32 %v2_10000608103, 172
  %v4_10000608105 = inttoptr i32 %v3_10000608104 to i32*
  store i32 0, i32* %v4_10000608105, align 4
  %v0_1000060c106 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c107 = add i32 %v0_1000060c106, -1
  store i32 %v1_1000060c107, i32* %ctr.global-to-local, align 4
  %v2_1000060c108 = icmp eq i32 %v1_1000060c107, 0
  br i1 %v2_1000060c108, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000600.dec_label_pc_10000600_crit_edge: ; preds = %dec_label_pc_100005f0, %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge
  %v0_10000600.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10000608.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10000600 = add i32 %v0_10000600.pre, 172
  store i32 %v1_10000600, i32* %r11.global-to-local, align 4
  %v1_10000604 = add i32 %v0_10000600.pre, 4
  store i32 %v1_10000604, i32* %r9.global-to-local, align 4
  %v2_10000608 = load i32, i32* @r1, align 4
  %v3_10000608 = add i32 %v2_10000608, %v1_10000600
  %v4_10000608 = inttoptr i32 %v3_10000608 to i32*
  store i32 %v0_10000608.pre, i32* %v4_10000608, align 4
  %v0_1000060c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c = add i32 %v0_1000060c, -1
  store i32 %v1_1000060c, i32* %ctr.global-to-local, align 4
  %v2_1000060c = icmp eq i32 %v1_1000060c, 0
  br i1 %v2_1000060c, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000610:                            ; preds = %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, %dec_label_pc_100005f0
  %v0_10000610 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000610 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000610 = or i1 %v0_10000610, %v1_10000610
  br i1 %v2_10000610, label %dec_label_pc_100005c4, label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_10000610
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_1000061c = load i32, i32* @r1, align 4
  %v1_1000061c = add i32 %v0_1000061c, 20796
  %v2_1000061c = inttoptr i32 %v1_1000061c to i32*
  %v3_1000061c = load i32, i32* %v2_1000061c, align 4
  store i32 %v3_1000061c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d1e4.23 to i32), i32* %r16.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32* %r24.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 1, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_10000688

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000694
  %v2_10000640 = icmp ugt i8 %v3_10000688, 2
  %v3_10000640 = icmp eq i8 %v3_10000688, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000640, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000640, label %dec_label_pc_10000c94, label %dec_label_pc_10000648

dec_label_pc_10000648:                            ; preds = %dec_label_pc_10000640
  %v1_10000648 = icmp ult i8 %v3_10000688, 4
  %v2_10000648 = icmp ugt i8 %v3_10000688, 4
  %v3_10000648 = icmp eq i8 %v3_10000688, 4
  store i1 %v1_10000648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000648, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000648, label %dec_label_pc_100008b0, label %dec_label_pc_10000650

dec_label_pc_10000650:                            ; preds = %dec_label_pc_10000648
  %v1_10000650 = icmp ult i8 %v3_10000688, 6
  %v2_10000650 = icmp ugt i8 %v3_10000688, 6
  %v3_10000650 = icmp eq i8 %v3_10000688, 6
  store i1 %v1_10000650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000650, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000650, label %dec_label_pc_10000c5c, label %dec_label_pc_10000658

dec_label_pc_10000658:                            ; preds = %dec_label_pc_10000650
  %v1_10000658 = icmp ult i8 %v3_10000688, 7
  %v2_10000658 = icmp ugt i8 %v3_10000688, 7
  %v3_10000658 = icmp eq i8 %v3_10000688, 7
  store i1 %v1_10000658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000658, label %dec_label_pc_10000c5c, label %dec_label_pc_10000660

dec_label_pc_10000660:                            ; preds = %dec_label_pc_10000658
  %v1_10000660 = icmp ult i8 %v3_10000688, 10
  %v2_10000660 = icmp ugt i8 %v3_10000688, 10
  %v3_10000660 = icmp eq i8 %v3_10000688, 10
  store i1 %v1_10000660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000660, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000660, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000660, label %dec_label_pc_10000c5c, label %dec_label_pc_10000668

dec_label_pc_10000668:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_10000660
  %v1_10000668 = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000668 = load i32, i32* %v1_10000668, align 4
  store i32 %v2_10000668, i32* %r3.global-to-local, align 4
  %v0_1000066c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000066c = trunc i32 %v0_1000066c to i8
  store i8 %v1_1000066c, i8* %v2_10000688, align 1
  store i32 268437108, i32* @lr, align 4
  %v0_10000670 = call i32 @function_1000a79c()
  store i32 %v0_10000670, i32* %r3.global-to-local, align 4
  %v0_10000674 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000674 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000674 = inttoptr i32 %v1_10000674 to i32*
  store i32 %v0_10000674, i32* %v2_10000674, align 4
  br label %dec_label_pc_10000678

dec_label_pc_10000678:                            ; preds = %dec_label_pc_10000758, %dec_label_pc_10000c5c, %dec_label_pc_10000c00, %dec_label_pc_100006c0, %dec_label_pc_10000668
  %v0_10000678 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000678 = add i32 %v0_10000678, 1
  store i32 %v1_10000678, i32* %r28.global-to-local, align 4
  %v0_1000067c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000067c = add i32 %v0_1000067c, 3140
  store i32 %v1_1000067c, i32* %r30.global-to-local, align 4
  %v0_10000680 = load i32, i32* %r21.global-to-local, align 4
  %v2_10000680 = icmp slt i32 %v0_10000680, %v1_10000678
  %v3_10000680 = icmp sgt i32 %v0_10000680, %v1_10000678
  %v4_10000680 = icmp eq i32 %v0_10000680, %v1_10000678
  store i1 %v2_10000680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000680, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000680, label %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge, label %dec_label_pc_10000688

dec_label_pc_10000678.dec_label_pc_10000794_crit_edge: ; preds = %dec_label_pc_10000678
  %v0_10000794.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000794

dec_label_pc_10000688:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678, %dec_label_pc_10000614
  %v2_10000c8c = phi i32 [ %v3_1000061c, %dec_label_pc_10000614 ], [ %v1_1000067c, %dec_label_pc_10000678 ], [ %v1_10000788, %dec_label_pc_10000784 ]
  %v1_10000688 = add i32 %v2_10000c8c, 4
  %v2_10000688 = inttoptr i32 %v1_10000688 to i8*
  %v3_10000688 = load i8, i8* %v2_10000688, align 1
  %v4_10000688 = zext i8 %v3_10000688 to i32
  store i32 %v4_10000688, i32* %r0.global-to-local, align 4
  %v1_1000068c = icmp eq i8 %v3_10000688, 0
  %v2_1000068c = icmp ugt i8 %v3_10000688, 1
  %v3_1000068c = icmp eq i8 %v3_10000688, 1
  store i1 %v1_1000068c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000068c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000068c, label %dec_label_pc_1000089c, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %dec_label_pc_10000688
  %v2_10000694 = icmp ne i8 %v3_10000688, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000694, i1* %cr7_gt.global-to-local, align 1
  store i1 %v1_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000068c, label %dec_label_pc_1000069c, label %dec_label_pc_10000640

dec_label_pc_1000069c:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_10000c8c
  %v0_1000069c = phi i32 [ %v2_10000c8c, %dec_label_pc_10000694 ], [ %v0_1000069c.pre, %dec_label_pc_10000c8c ]
  %v1_1000069c = inttoptr i32 %v0_1000069c to i32*
  %v2_1000069c = load i32, i32* %v1_1000069c, align 4
  store i32 %v2_1000069c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100006a4 = load i32, i32* @r1, align 4
  %v2_100006a4 = add i32 %v1_100006a4, 40
  %v3_100006a4 = inttoptr i32 %v2_100006a4 to i32*
  store i32 0, i32* %v3_100006a4, align 4
  %v0_100006a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100006a8 = icmp slt i32 %v0_100006a8, -1
  %v2_100006a8 = icmp sgt i32 %v0_100006a8, -1
  %v3_100006a8 = icmp eq i32 %v0_100006a8, -1
  store i1 %v1_100006a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006a8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006a8, i1* %cr7_eq.global-to-local, align 1
  %v0_100006ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100006ac = load i32, i32* @r1, align 4
  %v2_100006ac = add i32 %v1_100006ac, 28
  %v3_100006ac = inttoptr i32 %v2_100006ac to i32*
  store i32 %v0_100006ac, i32* %v3_100006ac, align 4
  %v0_100006b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b0 = load i32, i32* @r1, align 4
  %v2_100006b0 = add i32 %v1_100006b0, 32
  %v3_100006b0 = inttoptr i32 %v2_100006b0 to i32*
  store i32 %v0_100006b0, i32* %v3_100006b0, align 4
  %v0_100006b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b4 = load i32, i32* @r1, align 4
  %v2_100006b4 = add i32 %v1_100006b4, 36
  %v3_100006b4 = inttoptr i32 %v2_100006b4 to i32*
  store i32 %v0_100006b4, i32* %v3_100006b4, align 4
  br i1 %v3_100006a8, label %dec_label_pc_100006c0, label %dec_label_pc_100006bc

dec_label_pc_100006bc:                            ; preds = %dec_label_pc_1000069c
  store i32 ptrtoint ([3 x i8]* @global_var_100006c0.25 to i32), i32* @lr, align 4
  %v0_100006bc = call i32 @function_1000a79c()
  store i32 %v0_100006bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_1000069c, %dec_label_pc_100006bc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 268437200, i32* @lr, align 4
  %v3_100006cc = call i32 @function_1000b568(i32 2, i32 1, i32 0)
  store i32 %v3_100006cc, i32* %r3.global-to-local, align 4
  %v1_100006d0 = icmp slt i32 %v3_100006cc, -1
  %v2_100006d0 = icmp sgt i32 %v3_100006cc, -1
  %v3_100006d0 = icmp eq i32 %v3_100006cc, -1
  store i1 %v1_100006d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100006cc, i32* @r31, align 4
  %v1_100006d8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100006d8 = inttoptr i32 %v1_100006d8 to i32*
  store i32 %v3_100006cc, i32* %v2_100006d8, align 4
  br i1 %v3_100006d0, label %dec_label_pc_10000678, label %dec_label_pc_100006e0

dec_label_pc_100006e0:                            ; preds = %dec_label_pc_100006c0
  store i32 3, i32* @r4, align 4
  store i32 268437232, i32* @lr, align 4
  %v1_100006ec = call i32 @function_1000a66c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100006f8 = load i32, i32* @r31, align 4
  store i32 %v0_100006f8, i32* %r3.global-to-local, align 4
  store i32 268437252, i32* @lr, align 4
  %v2_10000700 = call i32 @function_1000a66c(i32 %v0_100006f8)
  store i32 %v2_10000700, i32* %r3.global-to-local, align 4
  %v0_10000704 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000704 = inttoptr i32 %v0_10000704 to i32*
  %v2_10000704 = load i32, i32* %v1_10000704, align 4
  store i32 %v2_10000704, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 65535, i32* %r11.global-to-local, align 4
  %v0_10000718 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000720 = load i32, i32* @r1, align 4
  %v2_10000720 = add i32 %v1_10000720, 8
  %v3_10000720 = inttoptr i32 %v2_10000720 to i32*
  store i32 65535, i32* %v3_10000720, align 4
  store i32 268437288, i32* @lr, align 4
  %v5_10000724 = call i32 @function_1000b52c(i32 %v2_10000704, i32 0, i32 8, i32 %v0_10000718, i32 4)
  store i32 %v5_10000724, i32* %r3.global-to-local, align 4
  %v0_10000728 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000728 = add i32 %v0_10000728, 16
  %v2_10000728 = inttoptr i32 %v1_10000728 to i32*
  %v3_10000728 = load i32, i32* %v2_10000728, align 4
  store i32 %v3_10000728, i32* %r9.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000730 = inttoptr i32 %v0_10000728 to i32*
  %v2_10000730 = load i32, i32* %v1_10000730, align 4
  store i32 %v2_10000730, i32* @r3, align 4
  %v0_10000734 = load i32, i32* @r1, align 4
  %v1_10000734 = add i32 %v0_10000734, 28
  store i32 %v1_10000734, i32* %r4.global-to-local, align 4
  %v2_10000738 = add i32 %v0_10000734, 32
  %v3_10000738 = inttoptr i32 %v2_10000738 to i32*
  store i32 %v3_10000728, i32* %v3_10000738, align 4
  %v0_10000740 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000740 = trunc i32 %v0_10000740 to i8
  %v2_10000740 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000740 = add i32 %v2_10000740, 4
  %v4_10000740 = inttoptr i32 %v3_10000740 to i8*
  store i8 %v1_10000740, i8* %v4_10000740, align 1
  %v0_10000744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000744 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000744 = add i32 %v1_10000744, 8
  %v3_10000744 = inttoptr i32 %v2_10000744 to i32*
  store i32 %v0_10000744, i32* %v3_10000744, align 4
  %v0_10000748 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000748 = trunc i32 %v0_10000748 to i16
  %v2_10000748 = load i32, i32* @r1, align 4
  %v3_10000748 = add i32 %v2_10000748, 28
  %v4_10000748 = inttoptr i32 %v3_10000748 to i16*
  store i16 %v1_10000748, i16* %v4_10000748, align 2
  %v0_1000074c = load i32, i32* @r1, align 4
  %v1_1000074c = add i32 %v0_1000074c, 20800
  %v2_1000074c = inttoptr i32 %v1_1000074c to i32*
  %v3_1000074c = load i32, i32* %v2_1000074c, align 4
  store i32 %v3_1000074c, i32* %r0.global-to-local, align 4
  %v1_10000750 = trunc i32 %v3_1000074c to i16
  %v3_10000750 = add i32 %v0_1000074c, 30
  %v4_10000750 = inttoptr i32 %v3_10000750 to i16*
  store i16 %v1_10000750, i16* %v4_10000750, align 2
  store i32 268437336, i32* @lr, align 4
  %v0_10000754 = call i32 @function_1000b368()
  store i32 %v0_10000754, i32* %r3.global-to-local, align 4
  %v0_10000758.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10000758

dec_label_pc_10000758:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_100006e0
  %v0_10000758 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000c94 ], [ %v0_10000758.pre, %dec_label_pc_100006e0 ]
  %v1_10000758 = inttoptr i32 %v0_10000758 to i32*
  %v2_10000758 = load i32, i32* %v1_10000758, align 4
  %v1_1000075c = call i32 @__asm_rlwinm(i32 %v2_10000758, i32 29, i32 3, i32 29)
  %v0_10000760 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000760 = icmp slt i32 %v0_10000760, %v2_10000758
  %v3_10000760 = icmp sgt i32 %v0_10000760, %v2_10000758
  %v4_10000760 = icmp eq i32 %v0_10000760, %v2_10000758
  store i1 %v2_10000760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000760, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000760, i1* %cr7_eq.global-to-local, align 1
  %v1_10000764 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000764 = add i32 %v1_10000764, %v1_1000075c
  store i32 %v2_10000764, i32* %r11.global-to-local, align 4
  %v1_10000768 = urem i32 %v2_10000758, 32
  store i32 %v1_10000768, i32* %r0.global-to-local, align 4
  %v1_1000076c = add i32 %v2_10000764, 164
  %v2_1000076c = inttoptr i32 %v1_1000076c to i32*
  %v3_1000076c = load i32, i32* %v2_1000076c, align 4
  %v0_10000770 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000770 = shl i32 %v0_10000770, %v1_10000768
  store i32 %v3_10000770, i32* %r0.global-to-local, align 4
  %v2_10000774 = or i32 %v3_10000770, %v3_1000076c
  store i32 %v2_10000774, i32* %r9.global-to-local, align 4
  store i32 %v2_10000774, i32* %v2_1000076c, align 4
  br i1 %v2_10000760, label %dec_label_pc_10000780, label %dec_label_pc_10000678

dec_label_pc_10000780:                            ; preds = %dec_label_pc_10000758
  %v1_10000780 = add i32 %v2_10000758, 1
  store i32 %v1_10000780, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000784:                            ; preds = %dec_label_pc_10000c84, %dec_label_pc_10000c54, %dec_label_pc_10000780
  %v0_1000079426 = phi i32 [ %v1_10000c84, %dec_label_pc_10000c84 ], [ %v1_10000c54, %dec_label_pc_10000c54 ], [ %v1_10000780, %dec_label_pc_10000780 ]
  %v0_10000784 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000784 = add i32 %v0_10000784, 1
  store i32 %v1_10000784, i32* %r28.global-to-local, align 4
  %v0_10000788 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000788 = add i32 %v0_10000788, 3140
  store i32 %v1_10000788, i32* %r30.global-to-local, align 4
  %v0_1000078c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000078c = icmp slt i32 %v0_1000078c, %v1_10000784
  %v3_1000078c = icmp sgt i32 %v0_1000078c, %v1_10000784
  %v4_1000078c = icmp eq i32 %v0_1000078c, %v1_10000784
  store i1 %v2_1000078c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000078c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000078c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000078c, label %dec_label_pc_10000794, label %dec_label_pc_10000688

dec_label_pc_10000794:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge
  %v0_100007b4 = phi i32 [ %v0_10000794.pre, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge ], [ %v0_1000079426, %dec_label_pc_10000784 ]
  %v1_10000794 = icmp slt i32 %v0_100007b4, 0
  %v2_10000794 = icmp sgt i32 %v0_100007b4, 0
  %v3_10000794 = icmp eq i32 %v0_100007b4, 0
  store i1 %v1_10000794, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000794, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000794, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000794, label %dec_label_pc_100005c4, label %dec_label_pc_1000079c

dec_label_pc_1000079c:                            ; preds = %dec_label_pc_10000794
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100007a4 = load i32, i32* @r1, align 4
  %v1_100007a4 = add i32 %v0_100007a4, 44
  store i32 %v1_100007a4, i32* %r4.global-to-local, align 4
  %v1_100007a8 = add i32 %v0_100007a4, 172
  %v1_100007b0 = add i32 %v0_100007a4, 20
  store i32 %v0_100007b4, i32* %r3.global-to-local, align 4
  %v2_100007b8 = add i32 %v0_100007a4, 24
  %v3_100007b8 = inttoptr i32 %v2_100007b8 to i32*
  store i32 0, i32* %v3_100007b8, align 4
  %v0_100007bc = load i32, i32* %r9.global-to-local, align 4
  %v1_100007bc = load i32, i32* @r1, align 4
  %v2_100007bc = add i32 %v1_100007bc, 20
  %v3_100007bc = inttoptr i32 %v2_100007bc to i32*
  store i32 %v0_100007bc, i32* %v3_100007bc, align 4
  store i32 268437444, i32* @lr, align 4
  %v5_100007c0 = call i32 @function_1000aa64(i32 %v0_100007b4, i32 %v1_100007a4, i32 %v1_100007a8, i32 0, i32 %v1_100007b0)
  store i32 %v5_100007c0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268437456, i32* @lr, align 4
  %v0_100007cc = call i32 @function_1000ab6c()
  store i32 %v0_100007cc, i32* %r3.global-to-local, align 4
  %v0_100007d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100007d0 = icmp slt i32 %v0_100007d0, 0
  %v2_100007d0 = icmp sgt i32 %v0_100007d0, 0
  %v3_100007d0 = icmp eq i32 %v0_100007d0, 0
  store i1 %v1_100007d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100007d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100007d0, i1* %cr7_eq.global-to-local, align 1
  %v1_100007d4 = load i32, i32* @r1, align 4
  %v2_100007d4 = add i32 %v1_100007d4, 20792
  %v3_100007d4 = inttoptr i32 %v2_100007d4 to i32*
  store i32 %v0_100007cc, i32* %v3_100007d4, align 4
  %tmp68 = icmp slt i32 %v0_100007d0, 1
  br i1 %tmp68, label %dec_label_pc_100005c4, label %dec_label_pc_100007dc

dec_label_pc_100007dc:                            ; preds = %dec_label_pc_1000079c
  %v0_100007dc = load i32, i32* @r1, align 4
  %v1_100007dc = add i32 %v0_100007dc, 20796
  %v2_100007dc = inttoptr i32 %v1_100007dc to i32*
  %v3_100007dc = load i32, i32* %v2_100007dc, align 4
  store i32 %v3_100007dc, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  %v1_100007e4 = add i32 %v3_100007dc, 533
  store i32 %v1_100007e4, i32* @r30, align 4
  br label %dec_label_pc_10000838

dec_label_pc_100007ec:                            ; preds = %dec_label_pc_10000844, %dec_label_pc_10000890
  %v0_100007ec = phi i32 [ %v0_10000848, %dec_label_pc_10000844 ], [ %v0_100007ec.pre, %dec_label_pc_10000890 ]
  %v1_100007ec = call i32 @__asm_rlwinm(i32 %v0_100007ec, i32 29, i32 3, i32 29)
  %v0_100007f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100007f0 = urem i32 %v0_100007f0, 32
  store i32 %v1_100007f0, i32* %r11.global-to-local, align 4
  %v1_100007f4 = load i32, i32* %r18.global-to-local, align 4
  %v2_100007f4 = add i32 %v1_100007f4, %v1_100007ec
  store i32 %v2_100007f4, i32* %r9.global-to-local, align 4
  %v1_100007f8 = add i32 %v2_100007f4, 36
  %v2_100007f8 = inttoptr i32 %v1_100007f8 to i32*
  %v3_100007f8 = load i32, i32* %v2_100007f8, align 4
  %v3_100007fc = lshr i32 %v3_100007f8, %v1_100007f0
  store i32 %v3_100007fc, i32* %r0.global-to-local, align 4
  %v1_10000800 = urem i32 %v3_100007fc, 2
  store i32 %v1_10000800, i32* %r9.global-to-local, align 4
  %v3_10000800 = icmp eq i32 %v1_10000800, 0
  br i1 %v3_10000800, label %dec_label_pc_10000824, label %dec_label_pc_10000808

dec_label_pc_10000808:                            ; preds = %dec_label_pc_100007ec
  %v0_10000808 = load i32, i32* @r30, align 4
  %v1_10000808 = add i32 %v0_10000808, -529
  %v2_10000808 = inttoptr i32 %v1_10000808 to i8*
  %v3_10000808 = load i8, i8* %v2_10000808, align 1
  %v4_10000808 = zext i8 %v3_10000808 to i32
  store i32 %v4_10000808, i32* %r0.global-to-local, align 4
  %v1_1000080c = icmp ult i8 %v3_10000808, 6
  %v2_1000080c = icmp ugt i8 %v3_10000808, 6
  %v3_1000080c = icmp eq i8 %v3_10000808, 6
  store i1 %v1_1000080c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000080c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000080c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000080c, label %dec_label_pc_10000ca8, label %dec_label_pc_10000814

dec_label_pc_10000814:                            ; preds = %dec_label_pc_10000808
  %v1_10000814 = icmp ult i8 %v3_10000808, 7
  %v2_10000814 = icmp ugt i8 %v3_10000808, 7
  %v3_10000814 = icmp eq i8 %v3_10000808, 7
  store i1 %v1_10000814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000814, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000814, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000814, label %dec_label_pc_10001294, label %dec_label_pc_1000081c

dec_label_pc_1000081c:                            ; preds = %dec_label_pc_10000814
  %v1_1000081c = icmp ult i8 %v3_10000808, 10
  %v2_1000081c = icmp ugt i8 %v3_10000808, 10
  %v3_1000081c = icmp eq i8 %v3_10000808, 10
  store i1 %v1_1000081c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000081c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000081c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000081c, label %dec_label_pc_10001518, label %dec_label_pc_10000824

dec_label_pc_10000824:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_100013b0, %dec_label_pc_1000190c, %dec_label_pc_100017d4, %dec_label_pc_1000081c, %dec_label_pc_100007ec, %dec_label_pc_10000838, %dec_label_pc_100019ac, %dec_label_pc_100018f0, %dec_label_pc_100017bc, %dec_label_pc_10001758, %dec_label_pc_10001558, %dec_label_pc_100014f0, %dec_label_pc_10001414, %dec_label_pc_100011e4, %dec_label_pc_10001b70
  %v0_10000824 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 1
  store i32 %v1_10000824, i32* %r19.global-to-local, align 4
  %v0_10000828 = load i32, i32* %r23.global-to-local, align 4
  %v1_10000828 = add i32 %v0_10000828, 3140
  store i32 %v1_10000828, i32* %r23.global-to-local, align 4
  %v1_1000082c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000082c = icmp slt i32 %v1_10000824, %v1_1000082c
  %v3_1000082c = icmp sgt i32 %v1_10000824, %v1_1000082c
  %v4_1000082c = icmp eq i32 %v1_10000824, %v1_1000082c
  store i1 %v2_1000082c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000082c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000082c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000830 = load i32, i32* @r30, align 4
  %v1_10000830 = add i32 %v0_10000830, 3140
  store i32 %v1_10000830, i32* @r30, align 4
  br i1 %v4_1000082c, label %dec_label_pc_100005c4, label %dec_label_pc_10000838

dec_label_pc_10000838:                            ; preds = %dec_label_pc_10000824, %dec_label_pc_100007dc
  %v0_10000838 = phi i32 [ %v1_10000830, %dec_label_pc_10000824 ], [ %v1_100007e4, %dec_label_pc_100007dc ]
  %v1_10000838 = add i32 %v0_10000838, -533
  %v2_10000838 = inttoptr i32 %v1_10000838 to i32*
  %v3_10000838 = load i32, i32* %v2_10000838, align 4
  store i32 %v3_10000838, i32* %r3.global-to-local, align 4
  %v1_1000083c = icmp slt i32 %v3_10000838, -1
  %v2_1000083c = icmp sgt i32 %v3_10000838, -1
  %v3_1000083c = icmp eq i32 %v3_10000838, -1
  store i1 %v1_1000083c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000083c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000083c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000083c, label %dec_label_pc_10000824, label %dec_label_pc_10000844

dec_label_pc_10000844:                            ; preds = %dec_label_pc_10000838
  %v1_10000844 = call i32 @__asm_rlwinm(i32 %v3_10000838, i32 29, i32 3, i32 29)
  %v0_10000848 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000848 = urem i32 %v0_10000848, 32
  store i32 %v1_10000848, i32* %r11.global-to-local, align 4
  %v1_1000084c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000084c = add i32 %v1_1000084c, %v1_10000844
  store i32 %v2_1000084c, i32* %r9.global-to-local, align 4
  %v1_10000850 = add i32 %v2_1000084c, 164
  %v2_10000850 = inttoptr i32 %v1_10000850 to i32*
  %v3_10000850 = load i32, i32* %v2_10000850, align 4
  %v3_10000854 = lshr i32 %v3_10000850, %v1_10000848
  store i32 %v3_10000854, i32* %r0.global-to-local, align 4
  %v1_10000858 = urem i32 %v3_10000854, 2
  store i32 %v1_10000858, i32* %r9.global-to-local, align 4
  %v3_10000858 = icmp eq i32 %v1_10000858, 0
  br i1 %v3_10000858, label %dec_label_pc_100007ec, label %dec_label_pc_10000860

dec_label_pc_10000860:                            ; preds = %dec_label_pc_10000844
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* @r31, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v0_10000870 = load i32, i32* @r1, align 4
  %v1_10000870 = add i32 %v0_10000870, 12
  %v1_10000874 = add i32 %v0_10000870, 16
  %v3_10000878 = inttoptr i32 %v1_10000870 to i32*
  store i32 0, i32* %v3_10000878, align 4
  %v0_1000087c = load i32, i32* @r31, align 4
  %v1_1000087c = load i32, i32* @r1, align 4
  %v2_1000087c = add i32 %v1_1000087c, 16
  %v3_1000087c = inttoptr i32 %v2_1000087c to i32*
  store i32 %v0_1000087c, i32* %v3_1000087c, align 4
  store i32 268437636, i32* @lr, align 4
  %v5_10000880 = call i32 @function_1000b3d0(i32 1, i32 4, i32 %v1_10000870, i32 %v1_10000874, i32 %v1_10000858)
  store i32 %v5_10000880, i32* %r3.global-to-local, align 4
  %v0_10000884 = load i32, i32* @r1, align 4
  %v1_10000884 = add i32 %v0_10000884, 12
  %v2_10000884 = inttoptr i32 %v1_10000884 to i32*
  %v3_10000884 = load i32, i32* %v2_10000884, align 4
  store i32 %v3_10000884, i32* %r0.global-to-local, align 4
  %v2_10000888 = or i32 %v3_10000884, %v5_10000880
  store i32 %v2_10000888, i32* %r9.global-to-local, align 4
  %v5_10000888 = icmp eq i32 %v2_10000888, 0
  %v0_10000890 = load i32, i32* @r30, align 4
  %v1_10000890 = add i32 %v0_10000890, -533
  %v2_10000890 = inttoptr i32 %v1_10000890 to i32*
  %v3_10000890 = load i32, i32* %v2_10000890, align 4
  store i32 %v3_10000890, i32* %r3.global-to-local, align 4
  br i1 %v5_10000888, label %dec_label_pc_10000890, label %dec_label_pc_100014f0

dec_label_pc_10000890:                            ; preds = %dec_label_pc_10000860
  %v0_10000894 = load i32, i32* @r31, align 4
  %v1_10000894 = trunc i32 %v0_10000894 to i8
  %v3_10000894 = add i32 %v0_10000890, -529
  %v4_10000894 = inttoptr i32 %v3_10000894 to i8*
  store i8 %v1_10000894, i8* %v4_10000894, align 1
  %v0_100007ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100007ec

dec_label_pc_1000089c:                            ; preds = %dec_label_pc_10000688
  %v1_1000089c = add i32 %v2_10000c8c, 1456
  %v2_1000089c = inttoptr i32 %v1_1000089c to i32*
  %v3_1000089c = load i32, i32* %v2_1000089c, align 4
  store i32 %v3_1000089c, i32* %r0.global-to-local, align 4
  %v1_100008a0 = icmp slt i32 %v3_1000089c, 0
  %v2_100008a0 = icmp sgt i32 %v3_1000089c, 0
  %v3_100008a0 = icmp eq i32 %v3_1000089c, 0
  store i1 %v1_100008a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100008a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100008a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100008a0, label %dec_label_pc_10000c8c, label %dec_label_pc_100008a8

dec_label_pc_100008a8:                            ; preds = %dec_label_pc_1000089c
  store i32 4, i32* %r0.global-to-local, align 4
  store i8 4, i8* %v2_10000688, align 1
  %v1_100008b4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100008b0

dec_label_pc_100008b0:                            ; preds = %dec_label_pc_10000648, %dec_label_pc_100008a8
  %v1_100008b4 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000648 ], [ %v1_100008b4.pre, %dec_label_pc_100008a8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100008b4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100008b4 = add i32 %v1_100008b4, 1464
  %v3_100008b4 = inttoptr i32 %v2_100008b4 to i32*
  store i32 %v0_100008b4, i32* %v3_100008b4, align 4
  %v0_100008b8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100008b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100008b8 = add i32 %v1_100008b8, 1452
  %v3_100008b8 = inttoptr i32 %v2_100008b8 to i32*
  store i32 %v0_100008b8, i32* %v3_100008b8, align 4
  %v0_100008bc = load i32, i32* %r30.global-to-local, align 4
  %v1_100008bc = add i32 %v0_100008bc, 2116
  store i32 %v1_100008bc, i32* @r3, align 4
  store i32 1024, i32* @r4, align 4
  %v1_100008c4 = add i32 %v0_100008bc, 1431
  store i32 %v1_100008c4, i32* %r27.global-to-local, align 4
  store i32 268437708, i32* @lr, align 4
  %v0_100008c8 = call i32 @function_10009fb8()
  %v0_100008cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100008cc = load i32, i32* %r30.global-to-local, align 4
  %v2_100008cc = add i32 %v1_100008cc, 2112
  %v3_100008cc = inttoptr i32 %v2_100008cc to i32*
  store i32 %v0_100008cc, i32* %v3_100008cc, align 4
  store i32 10240, i32* @r4, align 4
  %v0_100008d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008d4, i32* @r3, align 4
  store i32 268437724, i32* @lr, align 4
  %v0_100008d8 = call i32 @function_10009fb8()
  %v0_100008dc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008dc, i32* %r3.global-to-local, align 4
  store i32 268437732, i32* @lr, align 4
  %v1_100008e0 = inttoptr i32 %v0_100008dc to i8*
  %v2_100008e0 = call i32 @function_10009f10(i8* %v1_100008e0)
  %v0_100008e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100008e4, i32* %r4.global-to-local, align 4
  %v0_100008e8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100008e8 = add i32 %v0_100008e8, %v2_100008e0
  store i32 %v2_100008e8, i32* @r3, align 4
  store i32 268437744, i32* %lr.global-to-local, align 4
  %v2_100008ec = inttoptr i32 %v2_100008e8 to i8*
  %v3_100008ec = call i32 @function_10009f38(i8* %v2_100008ec, i32 %v0_100008e4)
  %v0_100008f0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008f0, i32* %r3.global-to-local, align 4
  store i32 268437752, i32* @lr, align 4
  %v1_100008f4 = inttoptr i32 %v0_100008f0 to i8*
  %v2_100008f4 = call i32 @function_10009f10(i8* %v1_100008f4)
  %v0_100008f8 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100008f8, i32* %r4.global-to-local, align 4
  %v0_100008fc = load i32, i32* %r22.global-to-local, align 4
  %v2_100008fc = add i32 %v0_100008fc, %v2_100008f4
  store i32 %v2_100008fc, i32* @r3, align 4
  store i32 268437764, i32* %lr.global-to-local, align 4
  %v2_10000900 = inttoptr i32 %v2_100008fc to i8*
  %v3_10000900 = call i32 @function_10009f38(i8* %v2_10000900, i32 %v0_100008f8)
  %v0_10000904 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000904, i32* %r3.global-to-local, align 4
  store i32 268437772, i32* @lr, align 4
  %v1_10000908 = inttoptr i32 %v0_10000904 to i8*
  %v2_10000908 = call i32 @function_10009f10(i8* %v1_10000908)
  %v0_1000090c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000090c = add i32 %v0_1000090c, 532
  store i32 %v1_1000090c, i32* %r4.global-to-local, align 4
  %v0_10000910 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000910 = add i32 %v0_10000910, %v2_10000908
  store i32 %v2_10000910, i32* @r3, align 4
  store i32 268437784, i32* %lr.global-to-local, align 4
  %v2_10000914 = inttoptr i32 %v2_10000910 to i8*
  %v3_10000914 = call i32 @function_10009f38(i8* %v2_10000914, i32 %v1_1000090c)
  %v0_10000918 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000918, i32* %r3.global-to-local, align 4
  store i32 268437792, i32* @lr, align 4
  %v1_1000091c = inttoptr i32 %v0_10000918 to i8*
  %v2_1000091c = call i32 @function_10009f10(i8* %v1_1000091c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000d1bc.26 to i32), i32* %r4.global-to-local, align 4
  %v0_10000928 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000928 = add i32 %v0_10000928, %v2_1000091c
  store i32 %v2_10000928, i32* @r3, align 4
  store i32 268437808, i32* %lr.global-to-local, align 4
  %v3_1000092c = inttoptr i32 %v2_10000928 to i8*
  %v4_1000092c = call i32 @function_10009f38(i8* %v3_1000092c, i32 ptrtoint ([24 x i8]* @global_var_1000d1bc.26 to i32))
  %v0_10000930 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000930, i32* %r3.global-to-local, align 4
  store i32 268437816, i32* @lr, align 4
  %v1_10000934 = inttoptr i32 %v0_10000930 to i8*
  %v2_10000934 = call i32 @function_10009f10(i8* %v1_10000934)
  %v0_10000938 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000938 = add i32 %v0_10000938, 20
  store i32 %v1_10000938, i32* %r4.global-to-local, align 4
  %v0_1000093c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000093c = add i32 %v0_1000093c, %v2_10000934
  store i32 %v2_1000093c, i32* @r3, align 4
  store i32 268437828, i32* %lr.global-to-local, align 4
  %v2_10000940 = inttoptr i32 %v2_1000093c to i8*
  %v3_10000940 = call i32 @function_10009f38(i8* %v2_10000940, i32 %v1_10000938)
  %v0_10000944 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000944, i32* %r3.global-to-local, align 4
  store i32 268437836, i32* @lr, align 4
  %v1_10000948 = inttoptr i32 %v0_10000944 to i8*
  %v2_10000948 = call i32 @function_10009f10(i8* %v1_10000948)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000d1d4.27 to i32), i32* %r4.global-to-local, align 4
  %v0_10000954 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000954 = add i32 %v0_10000954, %v2_10000948
  store i32 %v2_10000954, i32* @r3, align 4
  store i32 268437852, i32* %lr.global-to-local, align 4
  %v3_10000958 = inttoptr i32 %v2_10000954 to i8*
  %v4_10000958 = call i32 @function_10009f38(i8* %v3_10000958, i32 ptrtoint ([9 x i8]* @global_var_1000d1d4.27 to i32))
  %v0_1000095c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000095c, i32* %r3.global-to-local, align 4
  store i32 268437860, i32* @lr, align 4
  %v1_10000960 = inttoptr i32 %v0_1000095c to i8*
  %v2_10000960 = call i32 @function_10009f10(i8* %v1_10000960)
  %v0_10000964 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000964 = add i32 %v0_10000964, 789
  store i32 %v1_10000964, i32* %r4.global-to-local, align 4
  %v0_10000968 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000968 = add i32 %v0_10000968, %v2_10000960
  store i32 %v2_10000968, i32* @r3, align 4
  store i32 268437872, i32* %lr.global-to-local, align 4
  %v2_1000096c = inttoptr i32 %v2_10000968 to i8*
  %v3_1000096c = call i32 @function_10009f38(i8* %v2_1000096c, i32 %v1_10000964)
  %v0_10000970 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000970, i32* %r3.global-to-local, align 4
  store i32 268437880, i32* @lr, align 4
  %v1_10000974 = inttoptr i32 %v0_10000970 to i8*
  %v2_10000974 = call i32 @function_10009f10(i8* %v1_10000974)
  %v0_10000978 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000978, i32* %r4.global-to-local, align 4
  %v0_1000097c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000097c = add i32 %v0_1000097c, %v2_10000974
  store i32 %v2_1000097c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000984.28 to i32), i32* %lr.global-to-local, align 4
  %v3_10000980 = inttoptr i32 %v2_1000097c to i8*
  %v4_10000980 = call i32 @function_10009f38(i8* %v3_10000980, i32 %v0_10000978)
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437900, i32* @lr, align 4
  %v1_10000988 = call i32 @function_1000968c(i32 32)
  %v0_1000098c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000098c, i32* %r3.global-to-local, align 4
  store i32 268437908, i32* @lr, align 4
  %v1_10000990 = inttoptr i32 %v0_1000098c to i8*
  %v2_10000990 = call i32 @function_10009f10(i8* %v1_10000990)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000990, i32* %r29.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437924, i32* %lr.global-to-local, align 4
  %v3_100009a0 = call i32 @function_100095d8(i32 32, i32* null)
  store i32 %v3_100009a0, i32* %r4.global-to-local, align 4
  %v0_100009a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009a8 = add i32 %v1_100009a8, %v0_100009a8
  store i32 %v2_100009a8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009b0.29 to i32), i32* %lr.global-to-local, align 4
  %v2_100009ac = inttoptr i32 %v2_100009a8 to i8*
  %v3_100009ac = call i32 @function_10009f38(i8* %v2_100009ac, i32 %v3_100009a0)
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437944, i32* @lr, align 4
  %v1_100009b4 = call i32 @function_10009600(i32 32)
  %v0_100009b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009b8, i32* %r3.global-to-local, align 4
  store i32 268437952, i32* @lr, align 4
  %v1_100009bc = inttoptr i32 %v0_100009b8 to i8*
  %v2_100009bc = call i32 @function_10009f10(i8* %v1_100009bc)
  %v0_100009c0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100009c4 = add i32 %v0_100009c4, %v2_100009bc
  store i32 %v2_100009c4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009cc.30 to i32), i32* %lr.global-to-local, align 4
  %v3_100009c8 = inttoptr i32 %v2_100009c4 to i8*
  %v4_100009c8 = call i32 @function_10009f38(i8* %v3_100009c8, i32 %v0_100009c0)
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268437972, i32* @lr, align 4
  %v1_100009d0 = call i32 @function_1000968c(i32 33)
  %v0_100009d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009d4, i32* %r3.global-to-local, align 4
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = inttoptr i32 %v0_100009d4 to i8*
  %v2_100009d8 = call i32 @function_10009f10(i8* %v1_100009d8)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_100009d8, i32* %r29.global-to-local, align 4
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268437996, i32* %lr.global-to-local, align 4
  %v3_100009e8 = call i32 @function_100095d8(i32 33, i32* null)
  store i32 %v3_100009e8, i32* %r4.global-to-local, align 4
  %v0_100009f0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009f0 = add i32 %v1_100009f0, %v0_100009f0
  store i32 %v2_100009f0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009f8.31 to i32), i32* %lr.global-to-local, align 4
  %v2_100009f4 = inttoptr i32 %v2_100009f0 to i8*
  %v3_100009f4 = call i32 @function_10009f38(i8* %v2_100009f4, i32 %v3_100009e8)
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = call i32 @function_10009600(i32 33)
  %v0_10000a00 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a00, i32* %r3.global-to-local, align 4
  store i32 268438024, i32* @lr, align 4
  %v1_10000a04 = inttoptr i32 %v0_10000a00 to i8*
  %v2_10000a04 = call i32 @function_10009f10(i8* %v1_10000a04)
  %v0_10000a08 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a08, i32* %r4.global-to-local, align 4
  %v0_10000a0c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a0c = add i32 %v0_10000a0c, %v2_10000a04
  store i32 %v2_10000a0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a14.32 to i32), i32* %lr.global-to-local, align 4
  %v3_10000a10 = inttoptr i32 %v2_10000a0c to i8*
  %v4_10000a10 = call i32 @function_10009f38(i8* %v3_10000a10, i32 %v0_10000a08)
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438044, i32* @lr, align 4
  %v1_10000a18 = call i32 @function_1000968c(i32 34)
  %v0_10000a1c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a1c, i32* %r3.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v1_10000a20 = inttoptr i32 %v0_10000a1c to i8*
  %v2_10000a20 = call i32 @function_10009f10(i8* %v1_10000a20)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a20, i32* %r29.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438068, i32* %lr.global-to-local, align 4
  %v3_10000a30 = call i32 @function_100095d8(i32 34, i32* null)
  store i32 %v3_10000a30, i32* %r4.global-to-local, align 4
  %v0_10000a38 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a38 = add i32 %v1_10000a38, %v0_10000a38
  store i32 %v2_10000a38, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a40.33 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a3c = inttoptr i32 %v2_10000a38 to i8*
  %v3_10000a3c = call i32 @function_10009f38(i8* %v2_10000a3c, i32 %v3_10000a30)
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438088, i32* @lr, align 4
  %v1_10000a44 = call i32 @function_10009600(i32 34)
  %v0_10000a48 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a48, i32* %r3.global-to-local, align 4
  store i32 268438096, i32* @lr, align 4
  %v1_10000a4c = inttoptr i32 %v0_10000a48 to i8*
  %v2_10000a4c = call i32 @function_10009f10(i8* %v1_10000a4c)
  %v0_10000a50 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a50, i32* %r4.global-to-local, align 4
  %v0_10000a54 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a54 = add i32 %v0_10000a54, %v2_10000a4c
  store i32 %v2_10000a54, i32* @r3, align 4
  store i32 268438108, i32* %lr.global-to-local, align 4
  %v3_10000a58 = inttoptr i32 %v2_10000a54 to i8*
  %v4_10000a58 = call i32 @function_10009f38(i8* %v3_10000a58, i32 %v0_10000a50)
  store i32 %v4_10000a58, i32* %r3.global-to-local, align 4
  %v0_10000a5c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000a5c, label %dec_label_pc_10000b18, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_100008b0
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438120, i32* @lr, align 4
  %v1_10000a64 = call i32 @function_1000968c(i32 35)
  %v0_10000a68 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a68, i32* %r3.global-to-local, align 4
  store i32 268438128, i32* @lr, align 4
  %v1_10000a6c = inttoptr i32 %v0_10000a68 to i8*
  %v2_10000a6c = call i32 @function_10009f10(i8* %v1_10000a6c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a6c, i32* %r29.global-to-local, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438144, i32* %lr.global-to-local, align 4
  %v3_10000a7c = call i32 @function_100095d8(i32 35, i32* null)
  store i32 %v3_10000a7c, i32* %r4.global-to-local, align 4
  %v0_10000a84 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a84 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a84 = add i32 %v1_10000a84, %v0_10000a84
  store i32 %v2_10000a84, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a8c.34 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a88 = inttoptr i32 %v2_10000a84 to i8*
  %v3_10000a88 = call i32 @function_10009f38(i8* %v2_10000a88, i32 %v3_10000a7c)
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438164, i32* @lr, align 4
  %v1_10000a90 = call i32 @function_10009600(i32 35)
  %v0_10000a94 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a94, i32* %r3.global-to-local, align 4
  store i32 268438172, i32* @lr, align 4
  %v1_10000a98 = inttoptr i32 %v0_10000a94 to i8*
  %v2_10000a98 = call i32 @function_10009f10(i8* %v1_10000a98)
  %v0_10000a9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a9c, i32* %r4.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000aa0 = add i32 %v0_10000aa0, %v2_10000a98
  store i32 %v2_10000aa0, i32* @r3, align 4
  store i32 268438184, i32* %lr.global-to-local, align 4
  %v3_10000aa4 = inttoptr i32 %v2_10000aa0 to i8*
  %v4_10000aa4 = call i32 @function_10009f38(i8* %v3_10000aa4, i32 %v0_10000a9c)
  %v0_10000aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aa8, i32* %r3.global-to-local, align 4
  store i32 268438192, i32* @lr, align 4
  %v1_10000aac = inttoptr i32 %v0_10000aa8 to i8*
  %v2_10000aac = call i32 @function_10009f10(i8* %v1_10000aac)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000aac, i32* %r29.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268438208, i32* %lr.global-to-local, align 4
  %v3_10000abc = call i32 @function_100095d8(i32 40, i32* null)
  store i32 %v3_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000ac4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000ac4 = add i32 %v1_10000ac4, %v0_10000ac4
  store i32 %v2_10000ac4, i32* @r3, align 4
  store i32 268438220, i32* %lr.global-to-local, align 4
  %v2_10000ac8 = inttoptr i32 %v2_10000ac4 to i8*
  %v3_10000ac8 = call i32 @function_10009f38(i8* %v2_10000ac8, i32 %v3_10000abc)
  %v0_10000acc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000acc, i32* %r3.global-to-local, align 4
  store i32 268438228, i32* @lr, align 4
  %v1_10000ad0 = inttoptr i32 %v0_10000acc to i8*
  %v2_10000ad0 = call i32 @function_10009f10(i8* %v1_10000ad0)
  %v0_10000ad4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10000ad4, i32* %r4.global-to-local, align 4
  %v0_10000ad8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000ad8 = add i32 %v0_10000ad8, %v2_10000ad0
  store i32 %v2_10000ad8, i32* @r3, align 4
  store i32 268438240, i32* %lr.global-to-local, align 4
  %v2_10000adc = inttoptr i32 %v2_10000ad8 to i8*
  %v3_10000adc = call i32 @function_10009f38(i8* %v2_10000adc, i32 %v0_10000ad4)
  store i32 %v3_10000adc, i32* %r3.global-to-local, align 4
  %v0_10000ae0 = load i32, i32* @r1, align 4
  %v1_10000ae0 = add i32 %v0_10000ae0, 20804
  %v2_10000ae0 = inttoptr i32 %v1_10000ae0 to i32*
  %v3_10000ae0 = load i32, i32* %v2_10000ae0, align 4
  store i32 %v3_10000ae0, i32* %r3.global-to-local, align 4
  store i32 268438248, i32* @lr, align 4
  %v1_10000ae4 = inttoptr i32 %v3_10000ae0 to i8*
  %v2_10000ae4 = call i32 @function_10009f10(i8* %v1_10000ae4)
  store i32 %v2_10000ae4, i32* %r29.global-to-local, align 4
  %v0_10000aec = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aec, i32* %r3.global-to-local, align 4
  store i32 268438260, i32* @lr, align 4
  %v1_10000af0 = inttoptr i32 %v0_10000aec to i8*
  %v2_10000af0 = call i32 @function_10009f10(i8* %v1_10000af0)
  store i32 10, i32* %r4.global-to-local, align 4
  %v0_10000af8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000af8 = add i32 %v0_10000af8, %v2_10000af0
  %v0_10000afc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000afc, i32* %r3.global-to-local, align 4
  store i32 268438276, i32* %lr.global-to-local, align 4
  %v3_10000b00 = trunc i32 %v0_10000afc to i8
  %v4_10000b00 = call i32 @function_1000a470(i8 %v3_10000b00, i32 10, i32 %v2_10000af8)
  %v0_10000b04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b04, i32* %r3.global-to-local, align 4
  store i32 268438284, i32* @lr, align 4
  %v1_10000b08 = inttoptr i32 %v0_10000b04 to i8*
  %v2_10000b08 = call i32 @function_10009f10(i8* %v1_10000b08)
  %v0_10000b0c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r4.global-to-local, align 4
  %v0_10000b10 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b10 = add i32 %v0_10000b10, %v2_10000b08
  store i32 %v2_10000b10, i32* @r3, align 4
  store i32 268438296, i32* %lr.global-to-local, align 4
  %v3_10000b14 = inttoptr i32 %v2_10000b10 to i8*
  %v4_10000b14 = call i32 @function_10009f38(i8* %v3_10000b14, i32 %v0_10000b0c)
  store i32 %v4_10000b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000b18

dec_label_pc_10000b18:                            ; preds = %dec_label_pc_100008b0, %dec_label_pc_10000a60
  %v0_10000b18 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b18 = add i32 %v0_10000b18, 1468
  %v2_10000b18 = inttoptr i32 %v1_10000b18 to i32*
  %v3_10000b18 = load i32, i32* %v2_10000b18, align 4
  store i32 %v3_10000b18, i32* %r0.global-to-local, align 4
  %v1_10000b1c = icmp slt i32 %v3_10000b18, 0
  %v2_10000b1c = icmp sgt i32 %v3_10000b18, 0
  %v3_10000b1c = icmp eq i32 %v3_10000b18, 0
  store i1 %v1_10000b1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b1c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b1c, i1* %cr7_eq.global-to-local, align 1
  %tmp69 = icmp slt i32 %v3_10000b18, 1
  br i1 %tmp69, label %dec_label_pc_10000bb8, label %dec_label_pc_10000b24

dec_label_pc_10000b24:                            ; preds = %dec_label_pc_10000b18
  %v0_10000b24 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b24, i32* %r3.global-to-local, align 4
  store i32 268438316, i32* @lr, align 4
  %v1_10000b28 = inttoptr i32 %v0_10000b24 to i8*
  %v2_10000b28 = call i32 @function_10009f10(i8* %v1_10000b28)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000b30 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b30 = add i32 %v0_10000b30, %v2_10000b28
  store i32 %v2_10000b30, i32* @r3, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000d1f4.35 to i32), i32* %r4.global-to-local, align 4
  store i32 268438332, i32* %lr.global-to-local, align 4
  %v3_10000b38 = inttoptr i32 %v2_10000b30 to i8*
  %v4_10000b38 = call i32 @function_10009f38(i8* %v3_10000b38, i32 ptrtoint ([9 x i8]* @global_var_1000d1f4.35 to i32))
  store i32 %v4_10000b38, i32* %r3.global-to-local, align 4
  %v0_10000b3c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b3c = add i32 %v0_10000b3c, 1468
  %v2_10000b3c = inttoptr i32 %v1_10000b3c to i32*
  %v3_10000b3c = load i32, i32* %v2_10000b3c, align 4
  store i32 %v3_10000b3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000b44 = icmp slt i32 %v3_10000b3c, 0
  %v2_10000b44 = icmp sgt i32 %v3_10000b3c, 0
  %v3_10000b44 = icmp eq i32 %v3_10000b3c, 0
  store i1 %v1_10000b44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b44, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b44, i1* %cr7_eq.global-to-local, align 1
  %v1_10000b48 = load i32, i32* @r1, align 4
  %v2_10000b48 = add i32 %v1_10000b48, 8
  %v3_10000b48 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v3_10000b48, align 4
  %tmp70 = icmp slt i32 %v3_10000b3c, 1
  br i1 %tmp70, label %dec_label_pc_10000ba0, label %dec_label_pc_10000b50

dec_label_pc_10000b50:                            ; preds = %dec_label_pc_10000b24, %dec_label_pc_10000b50
  %v0_10000b50 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b50, i32* %r3.global-to-local, align 4
  store i32 268438360, i32* @lr, align 4
  %v1_10000b54 = inttoptr i32 %v0_10000b50 to i8*
  %v2_10000b54 = call i32 @function_10009f10(i8* %v1_10000b54)
  store i32 %v2_10000b54, i32* %r3.global-to-local, align 4
  %v0_10000b58 = load i32, i32* @r1, align 4
  %v1_10000b58 = add i32 %v0_10000b58, 8
  %v2_10000b58 = inttoptr i32 %v1_10000b58 to i32*
  %v3_10000b58 = load i32, i32* %v2_10000b58, align 4
  %v0_10000b5c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b5c = add i32 %v0_10000b5c, %v2_10000b54
  store i32 %v2_10000b5c, i32* @r3, align 4
  %v1_10000b60 = mul i32 %v3_10000b58, 128
  %v1_10000b64 = add i32 %v1_10000b60, 1472
  %v0_10000b68 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000b68 = add i32 %v1_10000b64, %v0_10000b68
  store i32 %v2_10000b68, i32* %r4.global-to-local, align 4
  store i32 268438384, i32* %lr.global-to-local, align 4
  %v2_10000b6c = inttoptr i32 %v2_10000b5c to i8*
  %v3_10000b6c = call i32 @function_10009f38(i8* %v2_10000b6c, i32 %v2_10000b68)
  %v0_10000b70 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b70, i32* %r3.global-to-local, align 4
  store i32 268438392, i32* @lr, align 4
  %v1_10000b74 = inttoptr i32 %v0_10000b70 to i8*
  %v2_10000b74 = call i32 @function_10009f10(i8* %v1_10000b74)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d200.36 to i32), i32* %r4.global-to-local, align 4
  %v0_10000b80 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b80 = add i32 %v0_10000b80, %v2_10000b74
  store i32 %v2_10000b80, i32* @r3, align 4
  store i32 268438408, i32* %lr.global-to-local, align 4
  %v3_10000b84 = inttoptr i32 %v2_10000b80 to i8*
  %v4_10000b84 = call i32 @function_10009f38(i8* %v3_10000b84, i32 ptrtoint ([3 x i8]* @global_var_1000d200.36 to i32))
  store i32 %v4_10000b84, i32* %r3.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r1, align 4
  %v1_10000b88 = add i32 %v0_10000b88, 8
  %v2_10000b88 = inttoptr i32 %v1_10000b88 to i32*
  %v3_10000b88 = load i32, i32* %v2_10000b88, align 4
  store i32 %v3_10000b88, i32* %r9.global-to-local, align 4
  %v0_10000b8c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b8c = add i32 %v0_10000b8c, 1468
  %v2_10000b8c = inttoptr i32 %v1_10000b8c to i32*
  %v3_10000b8c = load i32, i32* %v2_10000b8c, align 4
  store i32 %v3_10000b8c, i32* %r0.global-to-local, align 4
  %v1_10000b90 = add i32 %v3_10000b88, 1
  store i32 %v1_10000b90, i32* %r11.global-to-local, align 4
  %v2_10000b94 = icmp slt i32 %v3_10000b8c, %v1_10000b90
  %v3_10000b94 = icmp sgt i32 %v3_10000b8c, %v1_10000b90
  %v4_10000b94 = icmp eq i32 %v3_10000b8c, %v1_10000b90
  store i1 %v2_10000b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b94, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000b94, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000b90, i32* %v2_10000b88, align 4
  br i1 %v3_10000b94, label %dec_label_pc_10000b50, label %dec_label_pc_10000ba0

dec_label_pc_10000ba0:                            ; preds = %dec_label_pc_10000b50, %dec_label_pc_10000b24
  %v0_10000ba0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000ba0, i32* %r3.global-to-local, align 4
  store i32 268438440, i32* @lr, align 4
  %v1_10000ba4 = inttoptr i32 %v0_10000ba0 to i8*
  %v2_10000ba4 = call i32 @function_10009f10(i8* %v1_10000ba4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bac = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bac = add i32 %v0_10000bac, %v2_10000ba4
  store i32 %v2_10000bac, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438456, i32* %lr.global-to-local, align 4
  %v3_10000bb4 = inttoptr i32 %v2_10000bac to i8*
  %v4_10000bb4 = call i32 @function_10009f38(i8* %v3_10000bb4, i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32))
  store i32 %v4_10000bb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000bb8

dec_label_pc_10000bb8:                            ; preds = %dec_label_pc_10000b18, %dec_label_pc_10000ba0
  %v0_10000bb8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bb8, i32* %r3.global-to-local, align 4
  store i32 268438464, i32* @lr, align 4
  %v1_10000bbc = inttoptr i32 %v0_10000bb8 to i8*
  %v2_10000bbc = call i32 @function_10009f10(i8* %v1_10000bbc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bc4 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bc4 = add i32 %v0_10000bc4, %v2_10000bbc
  store i32 %v2_10000bc4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438480, i32* %lr.global-to-local, align 4
  %v3_10000bcc = inttoptr i32 %v2_10000bc4 to i8*
  %v4_10000bcc = call i32 @function_10009f38(i8* %v3_10000bcc, i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32))
  store i32 %v4_10000bcc, i32* %r3.global-to-local, align 4
  %v0_10000bd0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000bd0, label %dec_label_pc_10000be8, label %dec_label_pc_10000bd4

dec_label_pc_10000bd4:                            ; preds = %dec_label_pc_10000bb8
  %v0_10000bd4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v1_10000bd8 = inttoptr i32 %v0_10000bd4 to i8*
  %v2_10000bd8 = call i32 @function_10009f10(i8* %v1_10000bd8)
  store i32 %v2_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000bdc = load i32, i32* @r1, align 4
  %v1_10000bdc = add i32 %v0_10000bdc, 20804
  %v2_10000bdc = inttoptr i32 %v1_10000bdc to i32*
  %v3_10000bdc = load i32, i32* %v2_10000bdc, align 4
  store i32 %v3_10000bdc, i32* %r4.global-to-local, align 4
  %v0_10000be0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000be0 = add i32 %v0_10000be0, %v2_10000bd8
  store i32 %v2_10000be0, i32* @r3, align 4
  store i32 268438504, i32* %lr.global-to-local, align 4
  %v2_10000be4 = inttoptr i32 %v2_10000be0 to i8*
  %v3_10000be4 = call i32 @function_10009f38(i8* %v2_10000be4, i32 %v3_10000bdc)
  store i32 %v3_10000be4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000be8

dec_label_pc_10000be8:                            ; preds = %dec_label_pc_10000bb8, %dec_label_pc_10000bd4
  %v0_10000be8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000be8 = add i32 %v0_10000be8, 1440
  store i32 %v1_10000be8, i32* @r31, align 4
  %v0_10000bec = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000bec, i32* %r3.global-to-local, align 4
  store i32 %v1_10000be8, i32* %r4.global-to-local, align 4
  store i32 268438520, i32* %lr.global-to-local, align 4
  %v2_10000bf4 = inttoptr i32 %v0_10000bec to i8*
  %v3_10000bf4 = call i32 @function_1000a36c(i8* %v2_10000bf4, i32 %v1_10000be8)
  store i32 %v3_10000bf4, i32* %r3.global-to-local, align 4
  %v1_10000bf8 = icmp slt i32 %v3_10000bf4, 0
  %v2_10000bf8 = icmp sgt i32 %v3_10000bf4, 0
  %v3_10000bf8 = icmp eq i32 %v3_10000bf4, 0
  store i1 %v1_10000bf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000bf8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000bf8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000bf8, label %dec_label_pc_10001508, label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000be8, %dec_label_pc_10001508
  %v0_10000c00 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c00 = inttoptr i32 %v0_10000c00 to i32*
  %v2_10000c00 = load i32, i32* %v1_10000c00, align 4
  store i32 %v2_10000c00, i32* %r29.global-to-local, align 4
  %v0_10000c04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c04, i32* %r3.global-to-local, align 4
  store i32 268438540, i32* @lr, align 4
  %v1_10000c08 = inttoptr i32 %v0_10000c04 to i8*
  %v2_10000c08 = call i32 @function_10009f10(i8* %v1_10000c08)
  %v0_10000c0c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c0c, i32* %r4.global-to-local, align 4
  %v0_10000c18 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000c18, i32* %r3.global-to-local, align 4
  store i32 268438560, i32* @lr, align 4
  %v4_10000c1c = call i32 @function_1000b4b4(i32 %v0_10000c18, i32 %v0_10000c0c, i32 %v2_10000c08, i32 16384)
  store i32 %v4_10000c1c, i32* %r3.global-to-local, align 4
  %v0_10000c20 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c20 = inttoptr i32 %v0_10000c20 to i32*
  %v2_10000c20 = load i32, i32* %v1_10000c20, align 4
  %v0_10000c24 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c24 = add i32 %v0_10000c20, 12
  %v3_10000c24 = inttoptr i32 %v2_10000c24 to i32*
  store i32 %v0_10000c24, i32* %v3_10000c24, align 4
  %v1_10000c28 = call i32 @__asm_rlwinm(i32 %v2_10000c20, i32 29, i32 3, i32 29)
  %v0_10000c2c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c2c = icmp slt i32 %v0_10000c2c, %v2_10000c20
  %v3_10000c2c = icmp sgt i32 %v0_10000c2c, %v2_10000c20
  %v4_10000c2c = icmp eq i32 %v0_10000c2c, %v2_10000c20
  store i1 %v2_10000c2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c2c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c2c, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c30 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c30 = add i32 %v1_10000c30, %v1_10000c28
  store i32 %v2_10000c30, i32* %r11.global-to-local, align 4
  %v1_10000c34 = urem i32 %v2_10000c20, 32
  store i32 %v1_10000c34, i32* %r0.global-to-local, align 4
  %v1_10000c38 = add i32 %v2_10000c30, 36
  %v2_10000c38 = inttoptr i32 %v1_10000c38 to i32*
  %v3_10000c38 = load i32, i32* %v2_10000c38, align 4
  %v0_10000c3c = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c3c = shl i32 %v0_10000c3c, %v1_10000c34
  %v2_10000c40 = or i32 %v3_10000c3c, %v3_10000c38
  store i32 %v2_10000c40, i32* %r9.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 %v2_10000c40, i32* %v2_10000c38, align 4
  %v0_10000c4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000c4c = trunc i32 %v0_10000c4c to i8
  %v2_10000c4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10000c4c = add i32 %v2_10000c4c, 4
  %v4_10000c4c = inttoptr i32 %v3_10000c4c to i8*
  store i8 %v1_10000c4c, i8* %v4_10000c4c, align 1
  %v0_10000c50 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c50 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v2_10000c50 = or i1 %v0_10000c50, %v1_10000c50
  br i1 %v2_10000c50, label %dec_label_pc_10000678, label %dec_label_pc_10000c54

dec_label_pc_10000c54:                            ; preds = %dec_label_pc_10000c00
  %v1_10000c54 = add i32 %v2_10000c20, 1
  store i32 %v1_10000c54, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c5c:                            ; preds = %dec_label_pc_10000660, %dec_label_pc_10000658, %dec_label_pc_10000650
  %v1_10000c5c = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000c5c = load i32, i32* %v1_10000c5c, align 4
  %v1_10000c60 = call i32 @__asm_rlwinm(i32 %v2_10000c5c, i32 29, i32 3, i32 29)
  %v0_10000c64 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c64 = icmp slt i32 %v0_10000c64, %v2_10000c5c
  %v3_10000c64 = icmp sgt i32 %v0_10000c64, %v2_10000c5c
  %v4_10000c64 = icmp eq i32 %v0_10000c64, %v2_10000c5c
  store i1 %v2_10000c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c64, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c68 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c68 = add i32 %v1_10000c68, %v1_10000c60
  store i32 %v2_10000c68, i32* %r11.global-to-local, align 4
  %v1_10000c6c = urem i32 %v2_10000c5c, 32
  store i32 %v1_10000c6c, i32* %r0.global-to-local, align 4
  %v1_10000c70 = add i32 %v2_10000c68, 36
  %v2_10000c70 = inttoptr i32 %v1_10000c70 to i32*
  %v3_10000c70 = load i32, i32* %v2_10000c70, align 4
  %v0_10000c74 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c74 = shl i32 %v0_10000c74, %v1_10000c6c
  store i32 %v3_10000c74, i32* %r0.global-to-local, align 4
  %v2_10000c78 = or i32 %v3_10000c74, %v3_10000c70
  store i32 %v2_10000c78, i32* %r9.global-to-local, align 4
  store i32 %v2_10000c78, i32* %v2_10000c70, align 4
  br i1 %v2_10000c64, label %dec_label_pc_10000c84, label %dec_label_pc_10000678

dec_label_pc_10000c84:                            ; preds = %dec_label_pc_10000c5c
  %v1_10000c84 = add i32 %v2_10000c5c, 1
  store i32 %v1_10000c84, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_1000089c
  store i8 0, i8* %v2_10000688, align 1
  %v0_1000069c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000069c

dec_label_pc_10000c94:                            ; preds = %dec_label_pc_10000640
  %v1_10000c94 = add i32 %v2_10000c8c, 8
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i32*
  %v3_10000c94 = load i32, i32* %v2_10000c94, align 4
  %v1_10000c98 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c98 = sub i32 %v1_10000c98, %v3_10000c94
  store i32 %v2_10000c98, i32* %r0.global-to-local, align 4
  %v1_10000c9c = icmp ult i32 %v2_10000c98, 30
  %v2_10000c9c = icmp ugt i32 %v2_10000c98, 30
  %v3_10000c9c = icmp eq i32 %v2_10000c98, 30
  store i1 %v1_10000c9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000c9c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000c9c, i1* %cr7_eq.global-to-local, align 1
  %tmp72 = icmp ult i32 %v2_10000c98, 31
  br i1 %tmp72, label %dec_label_pc_10000758, label %dec_label_pc_10000668

dec_label_pc_10000ca8:                            ; preds = %dec_label_pc_10000808
  %v0_10000ca8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000ca8, i32* @r3, align 4
  store i32 10240, i32* @r4, align 4
  store i32 268438708, i32* @lr, align 4
  %v0_10000cb0 = call i32 @function_10009fb8()
  store i32 %v0_10000cb0, i32* %r3.global-to-local, align 4
  %v0_10000cb4 = load i32, i32* @r30, align 4
  %v1_10000cb4 = add i32 %v0_10000cb4, -533
  %v2_10000cb4 = inttoptr i32 %v1_10000cb4 to i32*
  %v3_10000cb4 = load i32, i32* %v2_10000cb4, align 4
  store i32 %v3_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cb8, i32* %r4.global-to-local, align 4
  store i32 268438728, i32* @lr, align 4
  %v4_10000cc4 = call i32 @function_1000b43c(i32 %v3_10000cb4, i32 %v0_10000cb8, i32 10240, i32 16386)
  store i32 %v4_10000cc4, i32* %r3.global-to-local, align 4
  store i32 %v4_10000cc4, i32* %r24.global-to-local, align 4
  %tmp73 = icmp slt i32 %v4_10000cc4, 1
  br i1 %tmp73, label %dec_label_pc_100018f0, label %dec_label_pc_10000cd0

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ca8
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cd4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d204.37 to i32), i32* @r31, align 4
  store i32 %v4_10000cc4, i32* %r4.global-to-local, align 4
  store i32 268438764, i32* %lr.global-to-local, align 4
  %v5_10000ce8 = call i32 @function_10009fdc(i32 %v0_10000cd4, i32 %v4_10000cc4, i32 ptrtoint ([5 x i8]* @global_var_1000d204.37 to i32), i32 4)
  store i32 %v5_10000ce8, i32* %r3.global-to-local, align 4
  %v1_10000cec = icmp slt i32 %v5_10000ce8, -1
  %v2_10000cec = icmp sgt i32 %v5_10000ce8, -1
  %v3_10000cec = icmp eq i32 %v5_10000ce8, -1
  store i1 %v1_10000cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000cec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000cec, i1* %cr7_eq.global-to-local, align 1
  %v0_100017d4 = load i32, i32* %r24.global-to-local, align 4
  br i1 %v3_10000cec, label %dec_label_pc_100017d4, label %dec_label_pc_10000cf4

dec_label_pc_10000cf4:                            ; preds = %dec_label_pc_10000cd0, %dec_label_pc_100017d4
  %v0_10000cf4 = load i32, i32* @r31, align 4
  store i32 %v0_100017d4, i32* %r4.global-to-local, align 4
  %v0_10000d00 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d00, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000d08.38 to i32), i32* %lr.global-to-local, align 4
  %v5_10000d04 = call i32 @function_10009fdc(i32 %v0_10000d00, i32 %v0_100017d4, i32 %v0_10000cf4, i32 4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10000d0c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d0c = add i32 %v0_10000d0c, %v5_10000d04
  store i32 %v2_10000d0c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10000d14 = add i32 %v2_10000d0c, 10532
  %v4_10000d14 = inttoptr i32 %v3_10000d14 to i8*
  store i8 0, i8* %v4_10000d14, align 1
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268438816, i32* %lr.global-to-local, align 4
  %v3_10000d1c = call i32 @function_100095d8(i32 46, i32* null)
  %v0_10000d20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d20, i32* %r4.global-to-local, align 4
  %v0_10000d28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d28, i32* %r3.global-to-local, align 4
  store i32 268438832, i32* %lr.global-to-local, align 4
  %v3_10000d2c = inttoptr i32 %v0_10000d28 to i8*
  %v4_10000d2c = call i32 @function_1000a2c0(i8* %v3_10000d2c, i32 %v0_10000d20, i32 %v3_10000d1c)
  store i32 %v4_10000d2c, i32* %r3.global-to-local, align 4
  %v1_10000d30 = icmp slt i32 %v4_10000d2c, -1
  %v2_10000d30 = icmp sgt i32 %v4_10000d2c, -1
  %v3_10000d30 = icmp eq i32 %v4_10000d2c, -1
  store i1 %v1_10000d30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d30, label %dec_label_pc_10000d40, label %dec_label_pc_10000d38

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000cf4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000d3c = load i32, i32* @r30, align 4
  %v2_10000d3c = add i32 %v1_10000d3c, 919
  %v3_10000d3c = inttoptr i32 %v2_10000d3c to i32*
  store i32 2, i32* %v3_10000d3c, align 4
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000cf4, %dec_label_pc_10000d38
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 268438860, i32* %lr.global-to-local, align 4
  %v3_10000d48 = call i32 @function_100095d8(i32 45, i32* null)
  %v0_10000d4c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d4c, i32* %r4.global-to-local, align 4
  %v0_10000d54 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d54, i32* %r3.global-to-local, align 4
  store i32 268438876, i32* %lr.global-to-local, align 4
  %v3_10000d58 = inttoptr i32 %v0_10000d54 to i8*
  %v4_10000d58 = call i32 @function_1000a2c0(i8* %v3_10000d58, i32 %v0_10000d4c, i32 %v3_10000d48)
  store i32 %v4_10000d58, i32* %r3.global-to-local, align 4
  %v1_10000d5c = icmp slt i32 %v4_10000d58, -1
  %v2_10000d5c = icmp sgt i32 %v4_10000d58, -1
  %v3_10000d5c = icmp eq i32 %v4_10000d58, -1
  store i1 %v1_10000d5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d5c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d5c, label %dec_label_pc_10000d6c, label %dec_label_pc_10000d64

dec_label_pc_10000d64:                            ; preds = %dec_label_pc_10000d40
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000d68 = load i32, i32* @r30, align 4
  %v2_10000d68 = add i32 %v1_10000d68, 919
  %v3_10000d68 = inttoptr i32 %v2_10000d68 to i32*
  store i32 1, i32* %v3_10000d68, align 4
  br label %dec_label_pc_10000d6c

dec_label_pc_10000d6c:                            ; preds = %dec_label_pc_10000d40, %dec_label_pc_10000d64
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000d74 = load i32, i32* @r30, align 4
  %v2_10000d74 = add i32 %v1_10000d74, 923
  %v3_10000d74 = inttoptr i32 %v2_10000d74 to i32*
  store i32 0, i32* %v3_10000d74, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268438912, i32* %lr.global-to-local, align 4
  %v3_10000d7c = call i32 @function_100095d8(i32 44, i32* null)
  %v0_10000d80 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d80, i32* %r4.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d88, i32* %r3.global-to-local, align 4
  store i32 268438928, i32* %lr.global-to-local, align 4
  %v3_10000d8c = inttoptr i32 %v0_10000d88 to i8*
  %v4_10000d8c = call i32 @function_1000a2c0(i8* %v3_10000d8c, i32 %v0_10000d80, i32 %v3_10000d7c)
  store i32 %v4_10000d8c, i32* %r3.global-to-local, align 4
  %v1_10000d90 = icmp slt i32 %v4_10000d8c, -1
  %v2_10000d90 = icmp sgt i32 %v4_10000d8c, -1
  %v3_10000d90 = icmp eq i32 %v4_10000d8c, -1
  store i1 %v1_10000d90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d90, label %dec_label_pc_10000e40, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d6c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268438948, i32* %lr.global-to-local, align 4
  %v3_10000da0 = call i32 @function_100095d8(i32 44, i32* null)
  %v0_10000da4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000da4, i32* %r4.global-to-local, align 4
  %v0_10000dac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000dac, i32* %r3.global-to-local, align 4
  store i32 268438964, i32* %lr.global-to-local, align 4
  %v3_10000db0 = inttoptr i32 %v0_10000dac to i8*
  %v4_10000db0 = call i32 @function_1000a2c0(i8* %v3_10000db0, i32 %v0_10000da4, i32 %v3_10000da0)
  store i32 %v4_10000db0, i32* %r3.global-to-local, align 4
  %v0_10000db8 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000db8 = add i32 %v0_10000db8, %v4_10000db0
  store i32 %v2_10000db8, i32* %r9.global-to-local, align 4
  %v1_10000dbc = add i32 %v2_10000db8, 10532
  %v2_10000dbc = inttoptr i32 %v1_10000dbc to i8*
  %v3_10000dbc = load i8, i8* %v2_10000dbc, align 1
  %v4_10000dbc = zext i8 %v3_10000dbc to i32
  store i32 %v4_10000dbc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000dc8 = xor i32 %v4_10000dbc, 32
  %v1_10000dcc = sub nsw i32 0, %v1_10000dc8
  %v2_10000dcc = xor i32 %v4_10000dbc, -33
  %v4_10000dcc = icmp uge i32 %v2_10000dcc, %v1_10000dcc
  %v2_10000dd0 = zext i1 %v4_10000dcc to i32
  %v3_10000dd0 = add i32 %v2_10000dd0, %v4_10000db0
  store i32 %v3_10000dd0, i32* %r11.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000dd4 = add i32 %v3_10000dd0, %v0_10000dd4
  store i32 %v2_10000dd4, i32* %r28.global-to-local, align 4
  store i32 %v2_10000dd4, i32* %r3.global-to-local, align 4
  %v1_10000ddc = load i32, i32* %r24.global-to-local, align 4
  %v2_10000ddc = sub i32 %v1_10000ddc, %v3_10000dd0
  store i32 %v2_10000ddc, i32* %r4.global-to-local, align 4
  store i32 %v3_10000dd0, i32* %r31.global-to-local, align 4
  store i32 268439016, i32* %lr.global-to-local, align 4
  %v5_10000de4 = call i32 @function_10009fdc(i32 %v2_10000dd4, i32 %v2_10000ddc, i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32 2)
  store i32 %v5_10000de4, i32* %r3.global-to-local, align 4
  %v1_10000de8 = icmp slt i32 %v5_10000de4, -1
  %v2_10000de8 = icmp sgt i32 %v5_10000de4, -1
  %v3_10000de8 = icmp eq i32 %v5_10000de4, -1
  store i1 %v1_10000de8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000de8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000de8, label %dec_label_pc_10000e40, label %dec_label_pc_10000df0

dec_label_pc_10000df0:                            ; preds = %dec_label_pc_10000d98
  %v1_10000df0 = icmp slt i32 %v5_10000de4, 1
  %v2_10000df0 = icmp sgt i32 %v5_10000de4, 1
  %v3_10000df0 = icmp eq i32 %v5_10000de4, 1
  store i1 %v1_10000df0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000df0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000df0, i1* %cr7_eq.global-to-local, align 1
  %tmp74 = icmp slt i32 %v5_10000de4, 2
  br i1 %tmp74, label %dec_label_pc_10000dfc, label %dec_label_pc_10000df8

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000df0
  %v1_10000df8 = add i32 %v5_10000de4, -2
  store i32 %v1_10000df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000df0, %dec_label_pc_10000df8
  %v1_10000e00 = phi i32 [ %v5_10000de4, %dec_label_pc_10000df0 ], [ %v1_10000df8, %dec_label_pc_10000df8 ]
  %v0_10000dfc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000dfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10000dfc = add i32 %v0_10000dfc, %v1_10000e00
  %v2_10000e00 = add i32 %v2_10000dfc, %v1_10000dfc
  store i32 %v2_10000e00, i32* %r9.global-to-local, align 4
  %v0_10000e04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e04, i32* %r3.global-to-local, align 4
  %v0_10000e08 = load i32, i32* %r29.global-to-local, align 4
  %v1_10000e08 = trunc i32 %v0_10000e08 to i8
  %v3_10000e08 = add i32 %v2_10000e00, 10532
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 %v1_10000e08, i8* %v4_10000e08, align 1
  store i32 268439056, i32* @lr, align 4
  %v1_10000e0c = inttoptr i32 %v0_10000e04 to i8*
  %v2_10000e0c = call i32 @function_10009f10(i8* %v1_10000e0c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000e0c, i32* %r29.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 268439072, i32* %lr.global-to-local, align 4
  %v3_10000e1c = call i32 @function_100095d8(i32 43, i32* null)
  %v0_10000e20 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000e20, i32* %r4.global-to-local, align 4
  %v0_10000e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* %lr.global-to-local, align 4
  %v3_10000e2c = inttoptr i32 %v0_10000e28 to i8*
  %v4_10000e2c = call i32 @function_1000a2c0(i8* %v3_10000e2c, i32 %v0_10000e20, i32 %v3_10000e1c)
  store i32 %v4_10000e2c, i32* %r3.global-to-local, align 4
  %v1_10000e30 = icmp slt i32 %v4_10000e2c, 0
  %v2_10000e30 = icmp sgt i32 %v4_10000e2c, 0
  %v3_10000e30 = icmp eq i32 %v4_10000e2c, 0
  store i1 %v1_10000e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e30, label %dec_label_pc_10000e40, label %dec_label_pc_10000e38

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000dfc
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000e3c = load i32, i32* @r30, align 4
  %v2_10000e3c = add i32 %v1_10000e3c, 923
  %v3_10000e3c = inttoptr i32 %v2_10000e3c to i32*
  store i32 1, i32* %v3_10000e3c, align 4
  br label %dec_label_pc_10000e40

dec_label_pc_10000e40:                            ; preds = %dec_label_pc_10000dfc, %dec_label_pc_10000d98, %dec_label_pc_10000d6c, %dec_label_pc_10000e38
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000e48 = load i32, i32* @r30, align 4
  %v2_10000e48 = add i32 %v1_10000e48, 927
  %v3_10000e48 = inttoptr i32 %v2_10000e48 to i32*
  store i32 0, i32* %v3_10000e48, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268439124, i32* %lr.global-to-local, align 4
  %v3_10000e50 = call i32 @function_100095d8(i32 41, i32* null)
  %v0_10000e54 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e54, i32* %r4.global-to-local, align 4
  %v0_10000e5c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e5c, i32* %r3.global-to-local, align 4
  store i32 268439140, i32* %lr.global-to-local, align 4
  %v3_10000e60 = inttoptr i32 %v0_10000e5c to i8*
  %v4_10000e60 = call i32 @function_1000a2c0(i8* %v3_10000e60, i32 %v0_10000e54, i32 %v3_10000e50)
  store i32 %v4_10000e60, i32* %r3.global-to-local, align 4
  %v1_10000e64 = icmp slt i32 %v4_10000e60, -1
  %v2_10000e64 = icmp sgt i32 %v4_10000e60, -1
  %v3_10000e64 = icmp eq i32 %v4_10000e60, -1
  store i1 %v1_10000e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e64, label %dec_label_pc_10000f14, label %dec_label_pc_10000e6c

dec_label_pc_10000e6c:                            ; preds = %dec_label_pc_10000e40
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268439160, i32* %lr.global-to-local, align 4
  %v3_10000e74 = call i32 @function_100095d8(i32 41, i32* null)
  %v0_10000e78 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r4.global-to-local, align 4
  %v0_10000e80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e80, i32* %r3.global-to-local, align 4
  store i32 268439176, i32* %lr.global-to-local, align 4
  %v3_10000e84 = inttoptr i32 %v0_10000e80 to i8*
  %v4_10000e84 = call i32 @function_1000a2c0(i8* %v3_10000e84, i32 %v0_10000e78, i32 %v3_10000e74)
  store i32 %v4_10000e84, i32* %r3.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000e8c = add i32 %v0_10000e8c, %v4_10000e84
  store i32 %v2_10000e8c, i32* %r9.global-to-local, align 4
  %v1_10000e90 = add i32 %v2_10000e8c, 10532
  %v2_10000e90 = inttoptr i32 %v1_10000e90 to i8*
  %v3_10000e90 = load i8, i8* %v2_10000e90, align 1
  %v4_10000e90 = zext i8 %v3_10000e90 to i32
  store i32 %v4_10000e90, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000e9c = xor i32 %v4_10000e90, 32
  %v1_10000ea0 = sub nsw i32 0, %v1_10000e9c
  %v2_10000ea0 = xor i32 %v4_10000e90, -33
  %v4_10000ea0 = icmp uge i32 %v2_10000ea0, %v1_10000ea0
  %v2_10000ea4 = zext i1 %v4_10000ea0 to i32
  %v3_10000ea4 = add i32 %v2_10000ea4, %v4_10000e84
  store i32 %v3_10000ea4, i32* %r11.global-to-local, align 4
  %v0_10000ea8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000ea8 = add i32 %v3_10000ea4, %v0_10000ea8
  store i32 %v2_10000ea8, i32* %r28.global-to-local, align 4
  store i32 %v2_10000ea8, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = load i32, i32* %r24.global-to-local, align 4
  %v2_10000eb0 = sub i32 %v1_10000eb0, %v3_10000ea4
  store i32 %v2_10000eb0, i32* %r4.global-to-local, align 4
  store i32 %v3_10000ea4, i32* %r31.global-to-local, align 4
  store i32 268439228, i32* %lr.global-to-local, align 4
  %v5_10000eb8 = call i32 @function_10009fdc(i32 %v2_10000ea8, i32 %v2_10000eb0, i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32 2)
  store i32 %v5_10000eb8, i32* %r3.global-to-local, align 4
  %v1_10000ebc = icmp slt i32 %v5_10000eb8, -1
  %v2_10000ebc = icmp sgt i32 %v5_10000eb8, -1
  %v3_10000ebc = icmp eq i32 %v5_10000eb8, -1
  store i1 %v1_10000ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ebc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000ebc, label %dec_label_pc_10000f14, label %dec_label_pc_10000ec4

dec_label_pc_10000ec4:                            ; preds = %dec_label_pc_10000e6c
  %v1_10000ec4 = icmp slt i32 %v5_10000eb8, 1
  %v2_10000ec4 = icmp sgt i32 %v5_10000eb8, 1
  %v3_10000ec4 = icmp eq i32 %v5_10000eb8, 1
  store i1 %v1_10000ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ec4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp slt i32 %v5_10000eb8, 2
  br i1 %tmp75, label %dec_label_pc_10000ed0, label %dec_label_pc_10000ecc

dec_label_pc_10000ecc:                            ; preds = %dec_label_pc_10000ec4
  %v1_10000ecc = add i32 %v5_10000eb8, -2
  store i32 %v1_10000ecc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000ec4, %dec_label_pc_10000ecc
  %v1_10000ed4 = phi i32 [ %v5_10000eb8, %dec_label_pc_10000ec4 ], [ %v1_10000ecc, %dec_label_pc_10000ecc ]
  %v0_10000ed0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000ed0 = add i32 %v0_10000ed0, %v1_10000ed4
  %v2_10000ed4 = add i32 %v2_10000ed0, %v1_10000ed0
  store i32 %v2_10000ed4, i32* %r9.global-to-local, align 4
  %v0_10000ed8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000ed8, i32* %r3.global-to-local, align 4
  %v0_10000edc = load i32, i32* %r29.global-to-local, align 4
  %v1_10000edc = trunc i32 %v0_10000edc to i8
  %v3_10000edc = add i32 %v2_10000ed4, 10532
  %v4_10000edc = inttoptr i32 %v3_10000edc to i8*
  store i8 %v1_10000edc, i8* %v4_10000edc, align 1
  store i32 268439268, i32* @lr, align 4
  %v1_10000ee0 = inttoptr i32 %v0_10000ed8 to i8*
  %v2_10000ee0 = call i32 @function_10009f10(i8* %v1_10000ee0)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000ee0, i32* %r29.global-to-local, align 4
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268439284, i32* %lr.global-to-local, align 4
  %v3_10000ef0 = call i32 @function_100095d8(i32 42, i32* null)
  %v0_10000ef4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000ef4, i32* %r4.global-to-local, align 4
  %v0_10000efc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000efc, i32* %r3.global-to-local, align 4
  store i32 268439300, i32* %lr.global-to-local, align 4
  %v3_10000f00 = inttoptr i32 %v0_10000efc to i8*
  %v4_10000f00 = call i32 @function_1000a2c0(i8* %v3_10000f00, i32 %v0_10000ef4, i32 %v3_10000ef0)
  store i32 %v4_10000f00, i32* %r3.global-to-local, align 4
  %v1_10000f04 = icmp slt i32 %v4_10000f00, 0
  %v2_10000f04 = icmp sgt i32 %v4_10000f00, 0
  %v3_10000f04 = icmp eq i32 %v4_10000f00, 0
  store i1 %v1_10000f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f04, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f04, label %dec_label_pc_10000f14, label %dec_label_pc_10000f0c

dec_label_pc_10000f0c:                            ; preds = %dec_label_pc_10000ed0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000f10 = load i32, i32* @r30, align 4
  %v2_10000f10 = add i32 %v1_10000f10, 927
  %v3_10000f10 = inttoptr i32 %v2_10000f10 to i32*
  store i32 1, i32* %v3_10000f10, align 4
  br label %dec_label_pc_10000f14

dec_label_pc_10000f14:                            ; preds = %dec_label_pc_10000ed0, %dec_label_pc_10000e6c, %dec_label_pc_10000e40, %dec_label_pc_10000f0c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268439328, i32* %lr.global-to-local, align 4
  %v3_10000f1c = call i32 @function_100095d8(i32 40, i32* null)
  %v0_10000f20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f20, i32* %r4.global-to-local, align 4
  %v0_10000f28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f28, i32* %r3.global-to-local, align 4
  store i32 268439344, i32* %lr.global-to-local, align 4
  %v3_10000f2c = inttoptr i32 %v0_10000f28 to i8*
  %v4_10000f2c = call i32 @function_1000a2c0(i8* %v3_10000f2c, i32 %v0_10000f20, i32 %v3_10000f1c)
  store i32 %v4_10000f2c, i32* %r3.global-to-local, align 4
  %v1_10000f30 = icmp slt i32 %v4_10000f2c, -1
  %v2_10000f30 = icmp sgt i32 %v4_10000f2c, -1
  %v3_10000f30 = icmp eq i32 %v4_10000f2c, -1
  store i1 %v1_10000f30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f30, label %dec_label_pc_10001770, label %dec_label_pc_10000f38

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268439364, i32* %lr.global-to-local, align 4
  %v3_10000f40 = call i32 @function_100095d8(i32 40, i32* null)
  %v0_10000f44 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f44, i32* %r4.global-to-local, align 4
  %v0_10000f4c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f4c, i32* %r3.global-to-local, align 4
  store i32 268439380, i32* %lr.global-to-local, align 4
  %v3_10000f50 = inttoptr i32 %v0_10000f4c to i8*
  %v4_10000f50 = call i32 @function_1000a2c0(i8* %v3_10000f50, i32 %v0_10000f44, i32 %v3_10000f40)
  store i32 %v4_10000f50, i32* %r3.global-to-local, align 4
  %v0_10000f58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000f58 = add i32 %v0_10000f58, %v4_10000f50
  store i32 %v2_10000f58, i32* %r9.global-to-local, align 4
  %v1_10000f5c = add i32 %v2_10000f58, 10532
  %v2_10000f5c = inttoptr i32 %v1_10000f5c to i8*
  %v3_10000f5c = load i8, i8* %v2_10000f5c, align 1
  %v4_10000f5c = zext i8 %v3_10000f5c to i32
  store i32 %v4_10000f5c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000f68 = xor i32 %v4_10000f5c, 32
  %v1_10000f6c = sub nsw i32 0, %v1_10000f68
  %v2_10000f6c = xor i32 %v4_10000f5c, -33
  %v4_10000f6c = icmp uge i32 %v2_10000f6c, %v1_10000f6c
  %v2_10000f70 = zext i1 %v4_10000f6c to i32
  %v3_10000f70 = add i32 %v2_10000f70, %v4_10000f50
  store i32 %v3_10000f70, i32* %r11.global-to-local, align 4
  %v0_10000f74 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000f74 = add i32 %v3_10000f70, %v0_10000f74
  store i32 %v2_10000f74, i32* %r29.global-to-local, align 4
  store i32 %v2_10000f74, i32* %r3.global-to-local, align 4
  %v1_10000f7c = load i32, i32* %r24.global-to-local, align 4
  %v2_10000f7c = sub i32 %v1_10000f7c, %v3_10000f70
  store i32 %v2_10000f7c, i32* %r4.global-to-local, align 4
  store i32 %v3_10000f70, i32* %r31.global-to-local, align 4
  store i32 268439432, i32* %lr.global-to-local, align 4
  %v5_10000f84 = call i32 @function_10009fdc(i32 %v2_10000f74, i32 %v2_10000f7c, i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32 2)
  store i32 %v5_10000f84, i32* %r3.global-to-local, align 4
  %v1_10000f88 = icmp slt i32 %v5_10000f84, -1
  %v2_10000f88 = icmp sgt i32 %v5_10000f84, -1
  %v3_10000f88 = icmp eq i32 %v5_10000f84, -1
  store i1 %v1_10000f88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f88, label %dec_label_pc_10000fbc, label %dec_label_pc_10000f90

dec_label_pc_10000f90:                            ; preds = %dec_label_pc_10000f38
  %v1_10000f90 = icmp slt i32 %v5_10000f84, 1
  %v2_10000f90 = icmp sgt i32 %v5_10000f84, 1
  %v3_10000f90 = icmp eq i32 %v5_10000f84, 1
  store i1 %v1_10000f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f90, i1* %cr7_eq.global-to-local, align 1
  %tmp76 = icmp slt i32 %v5_10000f84, 2
  br i1 %tmp76, label %dec_label_pc_10000f9c, label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f90
  %v1_10000f98 = add i32 %v5_10000f84, -2
  store i32 %v1_10000f98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f9c

dec_label_pc_10000f9c:                            ; preds = %dec_label_pc_10000f90, %dec_label_pc_10000f98
  %v1_10000fa4 = phi i32 [ %v5_10000f84, %dec_label_pc_10000f90 ], [ %v1_10000f98, %dec_label_pc_10000f98 ]
  %v0_10000f9c = load i32, i32* %r18.global-to-local, align 4
  %v1_10000f9c = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000f9c = add i32 %v0_10000f9c, %v1_10000fa4
  %v2_10000fa4 = add i32 %v2_10000f9c, %v1_10000f9c
  store i32 %v2_10000fa4, i32* %r9.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  %v3_10000fac = add i32 %v2_10000fa4, 10532
  %v4_10000fac = inttoptr i32 %v3_10000fac to i8*
  store i8 0, i8* %v4_10000fac, align 1
  %v0_10000fb0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000fb0, i32* @r3, align 4
  store i32 268439480, i32* @lr, align 4
  %v2_10000fb4 = call i32 @function_1000a038(i32 %v0_10000fb0, i32 10)
  store i32 %v2_10000fb4, i32* %r3.global-to-local, align 4
  %v1_10000fb8 = load i32, i32* @r30, align 4
  %v2_10000fb8 = add i32 %v1_10000fb8, 931
  %v3_10000fb8 = inttoptr i32 %v2_10000fb8 to i32*
  store i32 %v2_10000fb4, i32* %v3_10000fb8, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_10000fbc:                            ; preds = %dec_label_pc_10000f38, %dec_label_pc_10001770, %dec_label_pc_10000f9c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  %v0_10000fc8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fc8, i32* %r31.global-to-local, align 4
  store i32 268439504, i32* %lr.global-to-local, align 4
  %v3_10000fcc = call i32 @function_100095d8(i32 39, i32* null)
  %v0_10000fd0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000fd0, i32* %r4.global-to-local, align 4
  %v0_10000fd8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 268439520, i32* %lr.global-to-local, align 4
  %v3_10000fdc = inttoptr i32 %v0_10000fd8 to i8*
  %v4_10000fdc = call i32 @function_1000a2c0(i8* %v3_10000fdc, i32 %v0_10000fd0, i32 %v3_10000fcc)
  store i32 %v4_10000fdc, i32* %r3.global-to-local, align 4
  %v1_10000fe0 = icmp slt i32 %v4_10000fdc, -1
  %v2_10000fe0 = icmp sgt i32 %v4_10000fdc, -1
  %v3_10000fe0 = icmp eq i32 %v4_10000fdc, -1
  store i1 %v1_10000fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fe0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000fe0, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_10000fe8:                            ; preds = %dec_label_pc_10000fbc, %dec_label_pc_100010f4
  %v0_10000fe8 = load i32, i32* @r30, align 4
  %v1_10000fe8 = add i32 %v0_10000fe8, 935
  %v2_10000fe8 = inttoptr i32 %v1_10000fe8 to i32*
  %v3_10000fe8 = load i32, i32* %v2_10000fe8, align 4
  store i32 %v3_10000fe8, i32* %r0.global-to-local, align 4
  %v1_10000fec = icmp slt i32 %v3_10000fe8, 4
  %v2_10000fec = icmp sgt i32 %v3_10000fe8, 4
  %v3_10000fec = icmp eq i32 %v3_10000fe8, 4
  store i1 %v1_10000fec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000fec, label %dec_label_pc_1000111c, label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fe8
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439552, i32* %lr.global-to-local, align 4
  %v3_10000ffc = call i32 @function_100095d8(i32 39, i32* null)
  %v0_10001000 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001000, i32* %r4.global-to-local, align 4
  %v0_10001008 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001008, i32* %r3.global-to-local, align 4
  store i32 268439568, i32* %lr.global-to-local, align 4
  %v3_1000100c = inttoptr i32 %v0_10001008 to i8*
  %v4_1000100c = call i32 @function_1000a2c0(i8* %v3_1000100c, i32 %v0_10001000, i32 %v3_10000ffc)
  store i32 %v4_1000100c, i32* %r3.global-to-local, align 4
  %v0_10001010 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001010 = add i32 %v0_10001010, %v4_1000100c
  store i32 %v2_10001010, i32* %r26.global-to-local, align 4
  %v0_10001014 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001014 = add i32 %v0_10001014, %v2_10001010
  store i32 %v2_10001014, i32* %r9.global-to-local, align 4
  %v1_10001018 = add i32 %v2_10001014, 10532
  %v2_10001018 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001018 = load i8, i8* %v2_10001018, align 1
  %v4_10001018 = zext i8 %v3_10001018 to i32
  store i32 %v4_10001018, i32* %r0.global-to-local, align 4
  %v1_1000101c = icmp ult i8 %v3_10001018, 32
  %v2_1000101c = icmp ugt i8 %v3_10001018, 32
  %v3_1000101c = icmp eq i8 %v3_10001018, 32
  store i1 %v1_1000101c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000101c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000101c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000101c, label %dec_label_pc_1000124c, label %dec_label_pc_10001024

dec_label_pc_10001024:                            ; preds = %dec_label_pc_10000ff4, %dec_label_pc_1000124c
  %v0_1000102c = phi i32 [ %v4_1000100c, %dec_label_pc_10000ff4 ], [ %v1_1000124c, %dec_label_pc_1000124c ]
  %v1_10001024 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001024 = sub i32 %v1_10001024, %v0_10001010
  store i32 %v2_10001024, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000102c = sub i32 %v2_10001024, %v0_1000102c
  store i32 %v2_1000102c, i32* %r27.global-to-local, align 4
  %v0_10001030 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001030 = add i32 %v0_10001030, %v0_1000102c
  store i32 %v2_10001030, i32* %r29.global-to-local, align 4
  store i32 %v2_10001030, i32* %r3.global-to-local, align 4
  store i32 %v2_1000102c, i32* %r4.global-to-local, align 4
  store i32 268439624, i32* %lr.global-to-local, align 4
  %v5_10001044 = call i32 @function_10009fdc(i32 %v2_10001030, i32 %v2_1000102c, i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32 2)
  store i32 %v5_10001044, i32* %r3.global-to-local, align 4
  %v1_10001048 = icmp slt i32 %v5_10001044, -1
  %v2_10001048 = icmp sgt i32 %v5_10001044, -1
  %v3_10001048 = icmp eq i32 %v5_10001044, -1
  store i1 %v1_10001048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001048, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001048, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_10001044, i32* %r31.global-to-local, align 4
  br i1 %v3_10001048, label %dec_label_pc_100010f0, label %dec_label_pc_10001054

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001024
  %v1_10001054 = icmp slt i32 %v5_10001044, 1
  %v2_10001054 = icmp sgt i32 %v5_10001044, 1
  %v3_10001054 = icmp eq i32 %v5_10001044, 1
  store i1 %v1_10001054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001054, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001054, i1* %cr7_eq.global-to-local, align 1
  %v0_10001058 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001058 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001058 = add i32 %v1_10001058, %v0_10001058
  store i32 %v2_10001058, i32* %r28.global-to-local, align 4
  %tmp77 = icmp slt i32 %v5_10001044, 2
  br i1 %tmp77, label %dec_label_pc_10001064, label %dec_label_pc_10001060

dec_label_pc_10001060:                            ; preds = %dec_label_pc_10001054
  %v1_10001060 = add i32 %v5_10001044, -2
  store i32 %v1_10001060, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001064

dec_label_pc_10001064:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10001060
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001068, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d20c.39 to i32), i32* %r25.global-to-local, align 4
  %v0_10001070 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001070, i32* %r4.global-to-local, align 4
  store i32 268439680, i32* %lr.global-to-local, align 4
  %v4_1000107c = call i32 @function_10009fdc(i32 %v0_10001068, i32 %v0_10001070, i32 ptrtoint (i32* @global_var_1000d20c.39 to i32), i32 1)
  store i32 %v4_1000107c, i32* %r3.global-to-local, align 4
  %v1_10001080 = icmp slt i32 %v4_1000107c, 0
  %v2_10001080 = icmp sgt i32 %v4_1000107c, 0
  %v3_10001080 = icmp eq i32 %v4_1000107c, 0
  store i1 %v1_10001080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001080, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001080, i1* %cr7_eq.global-to-local, align 1
  %tmp78 = icmp slt i32 %v4_1000107c, 1
  br i1 %tmp78, label %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, label %dec_label_pc_10001088

dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge: ; preds = %dec_label_pc_10001064
  %v1_100010a0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_10001088:                            ; preds = %dec_label_pc_10001064
  %v0_10001088 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001088, i32* %r3.global-to-local, align 4
  %v0_1000108c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000108c, i32* %r4.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r25.global-to-local, align 4
  store i32 268439708, i32* %lr.global-to-local, align 4
  %v4_10001098 = call i32 @function_10009fdc(i32 %v0_10001088, i32 %v0_1000108c, i32 %v0_10001090, i32 1)
  store i32 %v4_10001098, i32* %r3.global-to-local, align 4
  %v1_1000109c = add i32 %v4_10001098, -1
  store i32 %v1_1000109c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_100010a0:                            ; preds = %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, %dec_label_pc_10001088
  %v1_100010a0 = phi i32 [ %v1_100010a0.pre, %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge ], [ %v1_1000109c, %dec_label_pc_10001088 ]
  %v0_100010a0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100010a0 = add i32 %v0_100010a0, %v1_100010a0
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100010a8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100010a8 = add i32 %v2_100010a0, %v1_100010a8
  store i32 %v2_100010a8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010a8, 10532
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i8*
  store i8 0, i8* %v4_100010b0, align 1
  %v0_100010b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100010b4 = load i32, i32* @r1, align 4
  %v2_100010b4 = add i32 %v1_100010b4, 8
  %v3_100010b4 = inttoptr i32 %v2_100010b4 to i32*
  store i32 %v0_100010b4, i32* %v3_100010b4, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010bc:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010c8

dec_label_pc_100010c8:                            ; preds = %dec_label_pc_100010bc
  %v1_100010c8 = add i32 %v3_100010d8, 1
  store i32 %v1_100010c8, i32* %r11.global-to-local, align 4
  store i32 %v1_100010c8, i32* %v2_100010d8, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010d0:                            ; preds = %dec_label_pc_100010a0, %dec_label_pc_100010c8
  %v0_100010d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100010d0, i32* %r3.global-to-local, align 4
  store i32 268439768, i32* @lr, align 4
  %v1_100010d4 = inttoptr i32 %v0_100010d0 to i8*
  %v2_100010d4 = call i32 @function_10009f10(i8* %v1_100010d4)
  store i32 %v2_100010d4, i32* %r3.global-to-local, align 4
  %v0_100010d8 = load i32, i32* @r1, align 4
  %v1_100010d8 = add i32 %v0_100010d8, 8
  %v2_100010d8 = inttoptr i32 %v1_100010d8 to i32*
  %v3_100010d8 = load i32, i32* %v2_100010d8, align 4
  store i32 %v3_100010d8, i32* %r29.global-to-local, align 4
  %v2_100010dc = icmp slt i32 %v2_100010d4, %v3_100010d8
  %v3_100010dc = icmp sgt i32 %v2_100010d4, %v3_100010d8
  %v4_100010dc = icmp eq i32 %v2_100010d4, %v3_100010d8
  store i1 %v2_100010dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100010dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100010dc, i1* %cr7_eq.global-to-local, align 1
  %v0_100010bc = load i32, i32* %r28.global-to-local, align 4
  %v2_100010bc = add i32 %v0_100010bc, %v3_100010d8
  %v3_100010bc = inttoptr i32 %v2_100010bc to i8*
  %v4_100010bc = load i8, i8* %v3_100010bc, align 1
  %v5_100010bc = zext i8 %v4_100010bc to i32
  store i32 %v5_100010bc, i32* %r0.global-to-local, align 4
  %v1_100010c0 = icmp ult i8 %v4_100010bc, 61
  %v2_100010c0 = icmp ugt i8 %v4_100010bc, 61
  %v3_100010c0 = icmp eq i8 %v4_100010bc, 61
  store i1 %v1_100010c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100010c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100010c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100010dc, label %dec_label_pc_100010bc, label %dec_label_pc_100010e4

dec_label_pc_100010e4:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010f0

dec_label_pc_100010f0:                            ; preds = %dec_label_pc_10001228, %dec_label_pc_10001258, %dec_label_pc_100010e4, %dec_label_pc_10001024
  %v0_100010f0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100010f0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_100010f4:                            ; preds = %dec_label_pc_10001268, %dec_label_pc_100010f0
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439808, i32* %lr.global-to-local, align 4
  %v3_100010fc = call i32 @function_100095d8(i32 39, i32* null)
  %v0_10001100 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001100 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001100 = add i32 %v1_10001100, %v0_10001100
  store i32 %v2_10001100, i32* %r31.global-to-local, align 4
  %v0_10001108 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001108, i32* %r4.global-to-local, align 4
  store i32 %v2_10001100, i32* %r3.global-to-local, align 4
  store i32 268439828, i32* %lr.global-to-local, align 4
  %v3_10001110 = inttoptr i32 %v2_10001100 to i8*
  %v4_10001110 = call i32 @function_1000a2c0(i8* %v3_10001110, i32 %v0_10001108, i32 %v3_100010fc)
  store i32 %v4_10001110, i32* %r3.global-to-local, align 4
  %v1_10001114 = icmp slt i32 %v4_10001110, -1
  %v2_10001114 = icmp sgt i32 %v4_10001110, -1
  %v3_10001114 = icmp eq i32 %v4_10001110, -1
  store i1 %v1_10001114, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001114, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001114, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001114, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_100010f4, %dec_label_pc_10000fe8, %dec_label_pc_10000fbc
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268439848, i32* %lr.global-to-local, align 4
  %v3_10001124 = call i32 @function_100095d8(i32 38, i32* null)
  %v0_10001128 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001128, i32* %r4.global-to-local, align 4
  %v0_10001130 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001130, i32* %r3.global-to-local, align 4
  store i32 268439864, i32* %lr.global-to-local, align 4
  %v3_10001134 = inttoptr i32 %v0_10001130 to i8*
  %v4_10001134 = call i32 @function_1000a2c0(i8* %v3_10001134, i32 %v0_10001128, i32 %v3_10001124)
  store i32 %v4_10001134, i32* %r3.global-to-local, align 4
  %v1_10001138 = icmp slt i32 %v4_10001134, -1
  %v2_10001138 = icmp sgt i32 %v4_10001134, -1
  %v3_10001138 = icmp eq i32 %v4_10001134, -1
  store i1 %v1_10001138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001138, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001138, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001138, label %dec_label_pc_10001574, label %dec_label_pc_10001140

dec_label_pc_10001140:                            ; preds = %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268439884, i32* %lr.global-to-local, align 4
  %v3_10001148 = call i32 @function_100095d8(i32 38, i32* null)
  %v0_1000114c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000114c, i32* %r4.global-to-local, align 4
  %v0_10001154 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001154, i32* %r3.global-to-local, align 4
  store i32 268439900, i32* %lr.global-to-local, align 4
  %v3_10001158 = inttoptr i32 %v0_10001154 to i8*
  %v4_10001158 = call i32 @function_1000a2c0(i8* %v3_10001158, i32 %v0_1000114c, i32 %v3_10001148)
  store i32 %v4_10001158, i32* %r3.global-to-local, align 4
  %v0_10001160 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001160 = add i32 %v0_10001160, %v4_10001158
  store i32 %v2_10001160, i32* %r9.global-to-local, align 4
  %v1_10001164 = add i32 %v2_10001160, 10532
  %v2_10001164 = inttoptr i32 %v1_10001164 to i8*
  %v3_10001164 = load i8, i8* %v2_10001164, align 1
  %v4_10001164 = zext i8 %v3_10001164 to i32
  store i32 %v4_10001164, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10001170 = xor i32 %v4_10001164, 32
  %v1_10001174 = sub nsw i32 0, %v1_10001170
  %v2_10001174 = xor i32 %v4_10001164, -33
  %v4_10001174 = icmp uge i32 %v2_10001174, %v1_10001174
  %v2_10001178 = zext i1 %v4_10001174 to i32
  %v3_10001178 = add i32 %v2_10001178, %v4_10001158
  store i32 %v3_10001178, i32* %r11.global-to-local, align 4
  %v0_1000117c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000117c = add i32 %v3_10001178, %v0_1000117c
  store i32 %v2_1000117c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000117c, i32* %r3.global-to-local, align 4
  %v1_10001184 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001184 = sub i32 %v1_10001184, %v3_10001178
  store i32 %v2_10001184, i32* %r4.global-to-local, align 4
  store i32 %v3_10001178, i32* @r31, align 4
  store i32 268439952, i32* %lr.global-to-local, align 4
  %v5_1000118c = call i32 @function_10009fdc(i32 %v2_1000117c, i32 %v2_10001184, i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32 2)
  store i32 %v5_1000118c, i32* %r3.global-to-local, align 4
  %v1_10001190 = icmp slt i32 %v5_1000118c, -1
  %v2_10001190 = icmp sgt i32 %v5_1000118c, -1
  %v3_10001190 = icmp eq i32 %v5_1000118c, -1
  store i1 %v1_10001190, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001190, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001190, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001190, label %dec_label_pc_10001574, label %dec_label_pc_10001198

dec_label_pc_10001198:                            ; preds = %dec_label_pc_10001140
  %v1_10001198 = icmp slt i32 %v5_1000118c, 1
  %v2_10001198 = icmp sgt i32 %v5_1000118c, 1
  %v3_10001198 = icmp eq i32 %v5_1000118c, 1
  store i1 %v1_10001198, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001198, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001198, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v5_1000118c, 2
  br i1 %tmp79, label %dec_label_pc_100011a4, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001198
  %v1_100011a0 = add i32 %v5_1000118c, -2
  store i32 %v1_100011a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011a4

dec_label_pc_100011a4:                            ; preds = %dec_label_pc_10001198, %dec_label_pc_100011a0
  %v1_100011ac = phi i32 [ %v5_1000118c, %dec_label_pc_10001198 ], [ %v1_100011a0, %dec_label_pc_100011a0 ]
  %v0_100011a4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100011a4 = load i32, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100011a4 = add i32 %v0_100011a4, %v1_100011ac
  %v2_100011ac = add i32 %v2_100011a4, %v1_100011a4
  store i32 %v2_100011ac, i32* %r9.global-to-local, align 4
  %v1_100011b0 = add i32 %v1_100011ac, 1
  store i32 %v1_100011b0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v3_100011b8 = add i32 %v2_100011ac, 10532
  %v4_100011b8 = inttoptr i32 %v3_100011b8 to i8*
  store i8 0, i8* %v4_100011b8, align 1
  %v0_100011bc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100011bc, i32* %r3.global-to-local, align 4
  %v0_100011c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c0, i32* %r4.global-to-local, align 4
  store i32 268440016, i32* %lr.global-to-local, align 4
  %v5_100011cc = call i32 @function_10009fdc(i32 %v0_100011bc, i32 %v0_100011c0, i32 ptrtoint ([5 x i8]* @global_var_1000d210.40 to i32), i32 4)
  store i32 %v5_100011cc, i32* %r3.global-to-local, align 4
  %v1_100011d0 = icmp slt i32 %v5_100011cc, 4
  %v2_100011d0 = icmp sgt i32 %v5_100011cc, 4
  %v3_100011d0 = icmp eq i32 %v5_100011cc, 4
  store i1 %v1_100011d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011d0, label %dec_label_pc_100017fc, label %dec_label_pc_100011d8

dec_label_pc_100011d8:                            ; preds = %dec_label_pc_100011a4
  %v0_100011d8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100011d8 = load i32, i32* @r31, align 4
  %v2_100011d8 = add i32 %v1_100011d8, %v0_100011d8
  %v3_100011d8 = inttoptr i32 %v2_100011d8 to i8*
  %v4_100011d8 = load i8, i8* %v3_100011d8, align 1
  %v5_100011d8 = zext i8 %v4_100011d8 to i32
  store i32 %v5_100011d8, i32* %r0.global-to-local, align 4
  %v1_100011dc = icmp ult i8 %v4_100011d8, 47
  %v2_100011dc = icmp ugt i8 %v4_100011d8, 47
  %v3_100011dc = icmp eq i8 %v4_100011d8, 47
  store i1 %v1_100011dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011dc, label %dec_label_pc_10001a1c, label %dec_label_pc_100011e4

dec_label_pc_100011e4:                            ; preds = %dec_label_pc_10001350, %dec_label_pc_1000190c, %dec_label_pc_10001a40, %dec_label_pc_10001a1c, %dec_label_pc_100018b4, %dec_label_pc_1000189c, %dec_label_pc_100011d8, %dec_label_pc_100018d8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100011e8 = load i32, i32* @r30, align 4
  %v3_100011e8 = add i32 %v2_100011e8, -529
  %v4_100011e8 = inttoptr i32 %v3_100011e8 to i8*
  store i8 1, i8* %v4_100011e8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100011f0:                            ; preds = %dec_label_pc_100010bc, %dec_label_pc_100010e4
  %v0_100011f0 = load i32, i32* @r30, align 4
  %v1_100011f0 = add i32 %v0_100011f0, 935
  %v2_100011f0 = inttoptr i32 %v1_100011f0 to i32*
  %v3_100011f0 = load i32, i32* %v2_100011f0, align 4
  store i32 %v3_100011f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_100010d8, align 4
  %v0_100011fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100011fc = icmp slt i32 %v0_100011fc, 0
  %v2_100011fc = icmp sgt i32 %v0_100011fc, 0
  %v3_100011fc = icmp eq i32 %v0_100011fc, 0
  store i1 %v1_100011fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011fc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011fc, i1* %cr7_eq.global-to-local, align 1
  %tmp80 = icmp slt i32 %v0_100011fc, 1
  br i1 %tmp80, label %dec_label_pc_10001258, label %dec_label_pc_10001204

dec_label_pc_10001204:                            ; preds = %dec_label_pc_100011f0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_1000120c:                            ; preds = %dec_label_pc_10001228
  %v0_1000120c = load i32, i32* @r1, align 4
  %v1_1000120c = add i32 %v0_1000120c, 8
  %v2_1000120c = inttoptr i32 %v1_1000120c to i32*
  %v3_1000120c = load i32, i32* %v2_1000120c, align 4
  store i32 %v3_1000120c, i32* %r9.global-to-local, align 4
  %v0_10001210 = load i32, i32* @r30, align 4
  %v1_10001210 = add i32 %v0_10001210, 935
  %v2_10001210 = inttoptr i32 %v1_10001210 to i32*
  %v3_10001210 = load i32, i32* %v2_10001210, align 4
  store i32 %v3_10001210, i32* %r0.global-to-local, align 4
  %v1_10001214 = add i32 %v3_1000120c, 1
  store i32 %v1_10001214, i32* %r11.global-to-local, align 4
  %v2_10001218 = icmp slt i32 %v3_10001210, %v1_10001214
  %v3_10001218 = icmp sgt i32 %v3_10001210, %v1_10001214
  %v4_10001218 = icmp eq i32 %v3_10001210, %v1_10001214
  store i1 %v2_10001218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001218, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001218, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001214, i32* %r4.global-to-local, align 4
  store i32 %v1_10001214, i32* %v2_1000120c, align 4
  br i1 %v3_10001218, label %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, label %dec_label_pc_10001258

dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge: ; preds = %dec_label_pc_1000120c
  %v0_10001228.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_10001228:                            ; preds = %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, %dec_label_pc_10001204
  %v0_10001228 = phi i32 [ %v0_10001228.pre, %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge ], [ 0, %dec_label_pc_10001204 ]
  %v1_10001228 = mul i32 %v0_10001228, 128
  %v0_1000122c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  %v1_10001230 = add i32 %v1_10001228, 1472
  %v0_10001234 = load i32, i32* %r29.global-to-local, align 4
  %v0_10001238 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001238 = add i32 %v1_10001230, %v0_10001238
  store i32 %v2_10001238, i32* %r4.global-to-local, align 4
  store i32 268440128, i32* %lr.global-to-local, align 4
  %v3_1000123c = inttoptr i32 %v0_1000122c to i8*
  %v4_1000123c = call i32 @function_1000a3ec(i8* %v3_1000123c, i32 %v2_10001238, i32 %v0_10001234)
  store i32 %v4_1000123c, i32* %r3.global-to-local, align 4
  %v1_10001240 = icmp slt i32 %v4_1000123c, 0
  %v2_10001240 = icmp sgt i32 %v4_1000123c, 0
  %v3_10001240 = icmp eq i32 %v4_1000123c, 0
  store i1 %v1_10001240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001240, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001240, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001240, label %dec_label_pc_1000120c, label %dec_label_pc_100010f0

dec_label_pc_1000124c:                            ; preds = %dec_label_pc_10000ff4
  %v1_1000124c = add i32 %v4_1000100c, 1
  store i32 %v1_1000124c, i32* %r3.global-to-local, align 4
  %v2_10001250 = add i32 %v0_10001010, %v1_1000124c
  store i32 %v2_10001250, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001024

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000120c, %dec_label_pc_100011f0
  %v0_10001258 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001258, i32* %r3.global-to-local, align 4
  store i32 268440160, i32* @lr, align 4
  %v1_1000125c = inttoptr i32 %v0_10001258 to i8*
  %v2_1000125c = call i32 @function_10009f10(i8* %v1_1000125c)
  store i32 %v2_1000125c, i32* %r3.global-to-local, align 4
  %v1_10001260 = icmp slt i32 %v2_1000125c, 127
  %v2_10001260 = icmp sgt i32 %v2_1000125c, 127
  %v3_10001260 = icmp eq i32 %v2_1000125c, 127
  store i1 %v1_10001260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001260, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001260, label %dec_label_pc_100010f0, label %dec_label_pc_10001268

dec_label_pc_10001268:                            ; preds = %dec_label_pc_10001258
  %v0_10001268 = load i32, i32* @r30, align 4
  %v1_10001268 = add i32 %v0_10001268, 935
  %v2_10001268 = inttoptr i32 %v1_10001268 to i32*
  %v3_10001268 = load i32, i32* %v2_10001268, align 4
  %v0_1000126c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000126c, i32* %r4.global-to-local, align 4
  %v0_10001270 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001270, i32* %r29.global-to-local, align 4
  %v1_10001274 = mul i32 %v3_10001268, 128
  %v1_10001278 = add i32 %v1_10001274, 1472
  %v0_1000127c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000127c = add i32 %v1_10001278, %v0_1000127c
  store i32 %v2_1000127c, i32* @r3, align 4
  store i32 268440196, i32* %lr.global-to-local, align 4
  %v2_10001280 = inttoptr i32 %v2_1000127c to i8*
  %v3_10001280 = call i32 @function_10009f38(i8* %v2_10001280, i32 %v0_1000126c)
  store i32 %v3_10001280, i32* %r3.global-to-local, align 4
  %v0_10001284 = load i32, i32* @r30, align 4
  %v1_10001284 = add i32 %v0_10001284, 935
  %v2_10001284 = inttoptr i32 %v1_10001284 to i32*
  %v3_10001284 = load i32, i32* %v2_10001284, align 4
  %v1_10001288 = add i32 %v3_10001284, 1
  store i32 %v1_10001288, i32* %r9.global-to-local, align 4
  store i32 %v1_10001288, i32* %v2_10001284, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_10001294:                            ; preds = %dec_label_pc_10000814
  store i32 268440216, i32* %lr.global-to-local, align 4
  %v0_10001294 = call i32 @function_1000aeb8()
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  %v0_10001298 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001298 = add i32 %v0_10001298, 1472
  store i32 %v1_10001298, i32* %r0.global-to-local, align 4
  %v1_1000129c = load i32, i32* @r1, align 4
  %v2_1000129c = add i32 %v1_1000129c, 20808
  %v3_1000129c = inttoptr i32 %v2_1000129c to i32*
  store i32 %v1_10001298, i32* %v3_1000129c, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_100012a4 = load i32, i32* @r30, align 4
  %v1_100012a4 = add i32 %v0_100012a4, 1579
  %v2_100012a4 = inttoptr i32 %v1_100012a4 to i32*
  %v3_100012a4 = load i32, i32* %v2_100012a4, align 4
  store i32 %v3_100012a4, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v0_10001294, i32* %r25.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32* %r15.global-to-local, align 4
  %v1_100012b4 = icmp slt i32 %v3_100012a4, 1024
  %v2_100012b4 = icmp sgt i32 %v3_100012a4, 1024
  %v3_100012b4 = icmp eq i32 %v3_100012a4, 1024
  store i1 %v1_100012b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012b4, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_1000d20c.39 to i32), i32* %r14.global-to-local, align 4
  %v0_100012bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100012bc = add i32 %v0_100012bc, 2116
  store i32 %v1_100012bc, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br i1 %v3_100012b4, label %dec_label_pc_100013c8, label %dec_label_pc_100012c8

dec_label_pc_100012c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge, %dec_label_pc_10001294
  %v1_100012d0 = phi i32 [ %v1_100012d0.pre, %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge ], [ %v0_10001294, %dec_label_pc_10001294 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  store i32 0, i32* %v2_100012d0, align 4
  %v0_100012d4 = load i32, i32* @r30, align 4
  %v1_100012d4 = add i32 %v0_100012d4, 1579
  %v2_100012d4 = inttoptr i32 %v1_100012d4 to i32*
  %v3_100012d4 = load i32, i32* %v2_100012d4, align 4
  store i32 %v3_100012d4, i32* %r4.global-to-local, align 4
  %v1_100012d8 = add i32 %v0_100012d4, -533
  %v2_100012d8 = inttoptr i32 %v1_100012d8 to i32*
  %v3_100012d8 = load i32, i32* %v2_100012d8, align 4
  store i32 %v3_100012d8, i32* %r3.global-to-local, align 4
  %v1_100012dc = sub i32 1024, %v3_100012d4
  %v0_100012e0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100012e0 = add i32 %v0_100012e0, %v3_100012d4
  store i32 %v2_100012e0, i32* %r4.global-to-local, align 4
  store i32 268440296, i32* @lr, align 4
  %v4_100012e4 = call i32 @function_1000b43c(i32 %v3_100012d8, i32 %v2_100012e0, i32 %v1_100012dc, i32 16384)
  store i32 %v4_100012e4, i32* %r3.global-to-local, align 4
  %v3_100012e8 = icmp eq i32 %v4_100012e4, 0
  br i1 %v3_100012e8, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  %v1_10001308 = phi i32 [ %v4_10001400, %dec_label_pc_100013c8 ], [ %v4_100012e4, %dec_label_pc_100012c8 ]
  %v1_100012f0 = icmp slt i32 %v1_10001308, -1
  %v2_100012f0 = icmp sgt i32 %v1_10001308, -1
  %v3_100012f0 = icmp eq i32 %v1_10001308, -1
  store i1 %v1_100012f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100012f0, label %dec_label_pc_100017ec, label %dec_label_pc_100012f8

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012f0
  %v0_100012f8 = load i32, i32* @r30, align 4
  %v1_100012f8 = add i32 %v0_100012f8, 1579
  %v2_100012f8 = inttoptr i32 %v1_100012f8 to i32*
  %v3_100012f8 = load i32, i32* %v2_100012f8, align 4
  store i32 %v3_100012f8, i32* %r29.global-to-local, align 4
  %v0_100012fc = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100012fc, i32* %r24.global-to-local, align 4
  %v0_10001300 = load i32, i32* @r1, align 4
  %v1_10001300 = add i32 %v0_10001300, 20792
  %v2_10001300 = inttoptr i32 %v1_10001300 to i32*
  %v3_10001300 = load i32, i32* %v2_10001300, align 4
  store i32 %v3_10001300, i32* %r0.global-to-local, align 4
  %v0_10001304 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10001304, i32* %r17.global-to-local, align 4
  %v2_10001308 = add i32 %v3_100012f8, %v1_10001308
  store i32 %v2_10001308, i32* %r29.global-to-local, align 4
  %v2_1000130c = add i32 %v0_100012f8, -525
  %v3_1000130c = inttoptr i32 %v2_1000130c to i32*
  store i32 %v3_10001300, i32* %v3_1000130c, align 4
  %v0_10001310 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001310 = load i32, i32* @r30, align 4
  %v2_10001310 = add i32 %v1_10001310, 1579
  %v3_10001310 = inttoptr i32 %v2_10001310 to i32*
  store i32 %v0_10001310, i32* %v3_10001310, align 4
  br label %dec_label_pc_1000139c

dec_label_pc_10001318:                            ; preds = %dec_label_pc_1000139c
  %v1_10001318 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001318 = icmp sgt i32 %v3_1000139c, %v1_10001318
  %v1_10001318.v3_1000139c = select i1 %v3_10001318, i32 %v1_10001318, i32 %v3_1000139c
  store i32 %v1_10001318.v3_1000139c, i32* %r28.global-to-local, align 4
  %v1_10001328 = add i32 %v0_1000139c, 919
  %v2_10001328 = inttoptr i32 %v1_10001328 to i32*
  %v3_10001328 = load i32, i32* %v2_10001328, align 4
  store i32 %v3_10001328, i32* %r0.global-to-local, align 4
  %v2_1000132c = sub i32 %v3_1000139c, %v1_10001318.v3_1000139c
  store i32 %v2_1000132c, i32* @r31, align 4
  store i32 %v2_1000132c, i32* %v2_1000139c, align 4
  %v0_10001334 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001334 = icmp slt i32 %v0_10001334, 1
  %v2_10001334 = icmp sgt i32 %v0_10001334, 1
  %v3_10001334 = icmp eq i32 %v0_10001334, 1
  store i1 %v1_10001334, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001334, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001334, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001334, label %dec_label_pc_1000142c, label %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge

dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge: ; preds = %dec_label_pc_10001318
  %v0_1000133c.pr.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000133c:                            ; preds = %dec_label_pc_100013a8, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge, %dec_label_pc_10001454
  %v0_1000133c = phi i32 [ %v3_10001454, %dec_label_pc_10001454 ], [ %v0_1000133c.pr.pre, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge ], [ %v3_1000139c, %dec_label_pc_100013a8 ]
  %v1_1000133c = icmp slt i32 %v0_1000133c, 0
  %v2_1000133c = icmp sgt i32 %v0_1000133c, 0
  %v3_1000133c = icmp eq i32 %v0_1000133c, 0
  store i1 %v1_1000133c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000133c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000133c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000133c, label %dec_label_pc_10001344, label %dec_label_pc_10001364

dec_label_pc_10001344:                            ; preds = %dec_label_pc_1000133c
  %v0_10001344 = load i32, i32* @r30, align 4
  %v1_10001344 = add i32 %v0_10001344, 927
  %v2_10001344 = inttoptr i32 %v1_10001344 to i32*
  %v3_10001344 = load i32, i32* %v2_10001344, align 4
  store i32 %v3_10001344, i32* %r29.global-to-local, align 4
  %v1_10001348 = icmp slt i32 %v3_10001344, 1
  %v2_10001348 = icmp sgt i32 %v3_10001344, 1
  %v3_10001348 = icmp eq i32 %v3_10001344, 1
  store i1 %v1_10001348, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001348, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001348, i1* %cr7_eq.global-to-local, align 1
  %v1_1000145c = add i32 %v0_10001344, 1579
  %v2_1000145c = inttoptr i32 %v1_1000145c to i32*
  %v3_1000145c = load i32, i32* %v2_1000145c, align 4
  br i1 %v3_10001348, label %dec_label_pc_1000145c, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_10001344
  %v0_10001354 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001354 = sub i32 %v3_1000145c, %v0_10001354
  store i32 %v2_10001354, i32* %r0.global-to-local, align 4
  %v1_10001358 = icmp slt i32 %v2_10001354, 0
  %v2_10001358 = icmp sgt i32 %v2_10001354, 0
  %v3_10001358 = icmp eq i32 %v2_10001354, 0
  store i1 %v1_10001358, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001358, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001358, i1* %cr7_eq.global-to-local, align 1
  %v2_1000135c = add i32 %v0_10001344, 931
  %v3_1000135c = inttoptr i32 %v2_1000135c to i32*
  store i32 %v2_10001354, i32* %v3_1000135c, align 4
  br i1 %v3_10001358, label %dec_label_pc_100011e4, label %dec_label_pc_10001364

dec_label_pc_10001364:                            ; preds = %dec_label_pc_1000133c, %dec_label_pc_1000145c, %dec_label_pc_10001350, %dec_label_pc_100014e4
  %v0_10001364 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001364 = icmp slt i32 %v0_10001364, 0
  %v2_10001364 = icmp sgt i32 %v0_10001364, 0
  %v3_10001364 = icmp eq i32 %v0_10001364, 0
  store i1 %v1_10001364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001364, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001364, label %dec_label_pc_100013b0, label %dec_label_pc_1000136c

dec_label_pc_1000136c:                            ; preds = %dec_label_pc_10001364
  %v0_1000136c = load i32, i32* @r30, align 4
  %v1_1000136c = add i32 %v0_1000136c, 1579
  %v2_1000136c = inttoptr i32 %v1_1000136c to i32*
  %v3_1000136c = load i32, i32* %v2_1000136c, align 4
  store i32 %v3_1000136c, i32* %r0.global-to-local, align 4
  %v0_10001370 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001370 = add i32 %v0_10001370, %v0_10001364
  store i32 %v2_10001370, i32* %r4.global-to-local, align 4
  store i32 %v0_10001370, i32* %r3.global-to-local, align 4
  %v2_10001378 = sub i32 %v3_1000136c, %v0_10001364
  store i32 %v2_10001378, i32* %r29.global-to-local, align 4
  store i32 %v2_10001378, i32* %v2_1000136c, align 4
  %v0_10001380 = load i32, i32* %r29.global-to-local, align 4
  store i32 268440456, i32* @lr, align 4
  %v3_10001384 = call i32 @function_1000af98(i32 %v0_10001370, i32 %v2_10001370, i32 %v0_10001380)
  store i32 %v3_10001384, i32* %r3.global-to-local, align 4
  %v0_10001388 = load i32, i32* @r30, align 4
  %v1_10001388 = add i32 %v0_10001388, 1579
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r29.global-to-local, align 4
  %v1_1000138c = icmp slt i32 %v3_10001388, 0
  %v2_1000138c = icmp sgt i32 %v3_10001388, 0
  %v3_1000138c = icmp eq i32 %v3_10001388, 0
  store i1 %v1_1000138c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000138c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000138c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001390 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, %v3_10001388
  store i32 %v2_10001390, i32* %r9.global-to-local, align 4
  %v0_10001394 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001394 = trunc i32 %v0_10001394 to i8
  %v3_10001394 = add i32 %v2_10001390, 2116
  %v4_10001394 = inttoptr i32 %v3_10001394 to i8*
  store i8 %v1_10001394, i8* %v4_10001394, align 1
  %v0_10001398 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001398, label %dec_label_pc_100013b0, label %dec_label_pc_1000139c

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_100012f8
  %v0_1000139c = load i32, i32* @r30, align 4
  %v1_1000139c = add i32 %v0_1000139c, 931
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  %v3_1000139c = load i32, i32* %v2_1000139c, align 4
  store i32 %v3_1000139c, i32* @r31, align 4
  %v1_100013a0 = icmp slt i32 %v3_1000139c, 0
  %v2_100013a0 = icmp sgt i32 %v3_1000139c, 0
  %v3_100013a0 = icmp eq i32 %v3_1000139c, 0
  store i1 %v1_100013a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100013a0, label %dec_label_pc_10001318, label %dec_label_pc_100013a8

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000139c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_10001364
  %v0_100013b0 = load i32, i32* @r30, align 4
  %v1_100013b0 = add i32 %v0_100013b0, -529
  %v2_100013b0 = inttoptr i32 %v1_100013b0 to i8*
  %v3_100013b0 = load i8, i8* %v2_100013b0, align 1
  %v4_100013b0 = zext i8 %v3_100013b0 to i32
  store i32 %v4_100013b0, i32* %r0.global-to-local, align 4
  %v1_100013b4 = icmp ult i8 %v3_100013b0, 7
  %v2_100013b4 = icmp ugt i8 %v3_100013b0, 7
  %v3_100013b4 = icmp eq i8 %v3_100013b0, 7
  store i1 %v1_100013b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013b4, label %dec_label_pc_100013bc, label %dec_label_pc_10000824

dec_label_pc_100013bc:                            ; preds = %dec_label_pc_100013b0
  %v1_100013bc = add i32 %v0_100013b0, 1579
  %v2_100013bc = inttoptr i32 %v1_100013bc to i32*
  %v3_100013bc = load i32, i32* %v2_100013bc, align 4
  store i32 %v3_100013bc, i32* %r0.global-to-local, align 4
  %v1_100013c0 = icmp slt i32 %v3_100013bc, 1024
  %v2_100013c0 = icmp sgt i32 %v3_100013bc, 1024
  %v3_100013c0 = icmp eq i32 %v3_100013bc, 1024
  store i1 %v1_100013c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013c0, label %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, label %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge

dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v1_100012d0.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100012c8

dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v0_100013c8.pre = load i32, i32* %r23.global-to-local, align 4
  %v0_100013d0.pre = load i32, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100013c8

dec_label_pc_100013c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, %dec_label_pc_10001294
  %v0_100013d0 = phi i32 [ %v0_100013d0.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v1_100012bc, %dec_label_pc_10001294 ]
  %v0_100013c8 = phi i32 [ %v0_100013c8.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v0_100012bc, %dec_label_pc_10001294 ]
  %v1_100013c8 = add i32 %v0_100013c8, 2180
  store i32 %v1_100013c8, i32* %r4.global-to-local, align 4
  store i32 %v0_100013d0, i32* %r3.global-to-local, align 4
  store i32 268440536, i32* @lr, align 4
  %v3_100013d4 = call i32 @function_1000af98(i32 %v0_100013d0, i32 %v1_100013c8, i32 960)
  store i32 %v3_100013d4, i32* %r3.global-to-local, align 4
  %v0_100013d8 = load i32, i32* @r30, align 4
  %v1_100013d8 = add i32 %v0_100013d8, 1579
  %v2_100013d8 = inttoptr i32 %v1_100013d8 to i32*
  %v3_100013d8 = load i32, i32* %v2_100013d8, align 4
  store i32 %v3_100013d8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100013e4 = add i32 %v3_100013d8, -64
  store i32 %v1_100013e4, i32* %r29.global-to-local, align 4
  store i32 %v1_100013e4, i32* %v2_100013d8, align 4
  %v0_100013ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100013ec = load i32, i32* %r25.global-to-local, align 4
  %v2_100013ec = inttoptr i32 %v1_100013ec to i32*
  store i32 %v0_100013ec, i32* %v2_100013ec, align 4
  %v0_100013f0 = load i32, i32* @r30, align 4
  %v1_100013f0 = add i32 %v0_100013f0, 1579
  %v2_100013f0 = inttoptr i32 %v1_100013f0 to i32*
  %v3_100013f0 = load i32, i32* %v2_100013f0, align 4
  store i32 %v3_100013f0, i32* %r4.global-to-local, align 4
  %v1_100013f4 = add i32 %v0_100013f0, -533
  %v2_100013f4 = inttoptr i32 %v1_100013f4 to i32*
  %v3_100013f4 = load i32, i32* %v2_100013f4, align 4
  store i32 %v3_100013f4, i32* %r3.global-to-local, align 4
  %v1_100013f8 = sub i32 1024, %v3_100013f0
  %v0_100013fc = load i32, i32* %r27.global-to-local, align 4
  %v2_100013fc = add i32 %v0_100013fc, %v3_100013f0
  store i32 %v2_100013fc, i32* %r4.global-to-local, align 4
  store i32 268440580, i32* @lr, align 4
  %v4_10001400 = call i32 @function_1000b43c(i32 %v3_100013f4, i32 %v2_100013fc, i32 %v1_100013f8, i32 16384)
  store i32 %v4_10001400, i32* %r3.global-to-local, align 4
  %v3_10001404 = icmp eq i32 %v4_10001400, 0
  br i1 %v3_10001404, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_1000140c:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10001410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001410 = inttoptr i32 %v1_10001410 to i32*
  store i32 104, i32* %v2_10001410, align 4
  br label %dec_label_pc_10001414

dec_label_pc_10001414:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_1000140c
  %v0_10001414 = load i32, i32* @r30, align 4
  %v1_10001414 = add i32 %v0_10001414, -533
  %v2_10001414 = inttoptr i32 %v1_10001414 to i32*
  %v3_10001414 = load i32, i32* %v2_10001414, align 4
  store i32 %v3_10001414, i32* %r3.global-to-local, align 4
  store i32 268440604, i32* @lr, align 4
  %v0_10001418 = call i32 @function_1000a79c()
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10001420 = load i32, i32* @r30, align 4
  %v2_10001420 = add i32 %v1_10001420, -533
  %v3_10001420 = inttoptr i32 %v2_10001420 to i32*
  store i32 -1, i32* %v3_10001420, align 4
  %v0_10001424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001424 = trunc i32 %v0_10001424 to i8
  %v2_10001424 = load i32, i32* @r30, align 4
  %v3_10001424 = add i32 %v2_10001424, -529
  %v4_10001424 = inttoptr i32 %v3_10001424 to i8*
  store i8 %v1_10001424, i8* %v4_10001424, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001318
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 268440632, i32* %lr.global-to-local, align 4
  %v3_10001434 = call i32 @function_100095d8(i32 36, i32* null)
  %v0_10001438 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001438, i32* %r4.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001444, i32* %r3.global-to-local, align 4
  store i32 268440652, i32* %lr.global-to-local, align 4
  %v4_10001448 = call i32 @function_10009fdc(i32 %v0_10001444, i32 %v0_10001438, i32 %v3_10001434, i32 11)
  store i32 %v4_10001448, i32* %r3.global-to-local, align 4
  %v1_1000144c = icmp slt i32 %v4_10001448, -1
  %v2_1000144c = icmp sgt i32 %v4_10001448, -1
  %v3_1000144c = icmp eq i32 %v4_10001448, -1
  store i1 %v1_1000144c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000144c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000144c, i1* %cr7_eq.global-to-local, align 1
  %v0_10001454 = load i32, i32* @r30, align 4
  br i1 %v3_1000144c, label %dec_label_pc_10001454, label %dec_label_pc_10001948

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c
  %v1_10001454 = add i32 %v0_10001454, 931
  %v2_10001454 = inttoptr i32 %v1_10001454 to i32*
  %v3_10001454 = load i32, i32* %v2_10001454, align 4
  store i32 %v3_10001454, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000145c:                            ; preds = %dec_label_pc_10001344
  store i32 %v3_1000145c, i32* %r4.global-to-local, align 4
  %v0_10001460 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001460, i32* %r3.global-to-local, align 4
  %v0_10001464 = load i32, i32* %r24.global-to-local, align 4
  store i32 268440688, i32* %lr.global-to-local, align 4
  %v5_1000146c = call i32 @function_10009fdc(i32 %v0_10001460, i32 %v3_1000145c, i32 %v0_10001464, i32 2)
  store i32 %v5_1000146c, i32* %r3.global-to-local, align 4
  %v1_10001470 = icmp slt i32 %v5_1000146c, -1
  %v2_10001470 = icmp sgt i32 %v5_1000146c, -1
  %v3_10001470 = icmp eq i32 %v5_1000146c, -1
  store i1 %v1_10001470, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001470, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001470, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001470, label %dec_label_pc_10001364, label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_1000145c
  %v0_10001478 = load i32, i32* @r30, align 4
  %v1_10001478 = add i32 %v0_10001478, 1579
  %v2_10001478 = inttoptr i32 %v1_10001478 to i32*
  %v3_10001478 = load i32, i32* %v2_10001478, align 4
  store i32 %v3_10001478, i32* %r4.global-to-local, align 4
  %v0_1000147c = load i32, i32* %r24.global-to-local, align 4
  %v0_10001484 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001484, i32* %r3.global-to-local, align 4
  store i32 268440716, i32* %lr.global-to-local, align 4
  %v5_10001488 = call i32 @function_10009fdc(i32 %v0_10001484, i32 %v3_10001478, i32 %v0_1000147c, i32 2)
  %v0_1000148c = load i32, i32* %r17.global-to-local, align 4
  %v1_10001490 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001490 = add i32 %v1_10001490, %v5_10001488
  store i32 %v2_10001490, i32* %r9.global-to-local, align 4
  store i32 %v5_10001488, i32* %r28.global-to-local, align 4
  %v0_10001498 = load i32, i32* @r31, align 4
  %v1_10001498 = trunc i32 %v0_10001498 to i8
  %v3_10001498 = add i32 %v2_10001490, 2114
  %v4_10001498 = inttoptr i32 %v3_10001498 to i8*
  store i8 %v1_10001498, i8* %v4_10001498, align 1
  %v0_1000149c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000149c, i32* %r3.global-to-local, align 4
  %v0_100014a0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014a0, i32* %r4.global-to-local, align 4
  store i32 268440748, i32* %lr.global-to-local, align 4
  %v4_100014a8 = call i32 @function_10009fdc(i32 %v0_1000149c, i32 %v0_100014a0, i32 %v0_1000148c, i32 1)
  store i32 %v4_100014a8, i32* %r3.global-to-local, align 4
  %v1_100014ac = icmp slt i32 %v4_100014a8, -1
  %v2_100014ac = icmp sgt i32 %v4_100014a8, -1
  %v3_100014ac = icmp eq i32 %v4_100014a8, -1
  store i1 %v1_100014ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100014ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100014ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100014ac, label %dec_label_pc_100014d0, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001478
  %v0_100014b4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014b4, i32* %r3.global-to-local, align 4
  %v0_100014b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014b8, i32* %r4.global-to-local, align 4
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  store i32 268440776, i32* %lr.global-to-local, align 4
  %v4_100014c4 = call i32 @function_10009fdc(i32 %v0_100014b4, i32 %v0_100014b8, i32 %v0_100014bc, i32 1)
  %v1_100014c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100014c8 = add i32 %v1_100014c8, %v4_100014c4
  store i32 %v2_100014c8, i32* %r3.global-to-local, align 4
  %v0_100014cc = load i32, i32* @r31, align 4
  %v1_100014cc = trunc i32 %v0_100014cc to i8
  %v3_100014cc = add i32 %v2_100014c8, 2116
  %v4_100014cc = inttoptr i32 %v3_100014cc to i8*
  store i8 %v1_100014cc, i8* %v4_100014cc, align 1
  br label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_100014b4
  %v0_100014d0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014d0, i32* @r3, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 268440796, i32* @lr, align 4
  %v2_100014d8 = call i32 @function_1000a038(i32 %v0_100014d0, i32 16)
  store i32 %v2_100014d8, i32* %r3.global-to-local, align 4
  %v3_100014dc = icmp eq i32 %v2_100014d8, 0
  br i1 %v3_100014dc, label %dec_label_pc_10001b70, label %dec_label_pc_100014e4

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014d0
  %v1_100014e4 = add i32 %v2_100014d8, 2
  %v1_100014e8 = load i32, i32* @r30, align 4
  %v2_100014e8 = add i32 %v1_100014e8, 931
  %v3_100014e8 = inttoptr i32 %v2_100014e8 to i32*
  store i32 %v1_100014e4, i32* %v3_100014e8, align 4
  br label %dec_label_pc_10001364

dec_label_pc_100014f0:                            ; preds = %dec_label_pc_10000860
  store i32 ptrtoint (i32* @global_var_100014f8.41 to i32), i32* @lr, align 4
  %v0_100014f4 = call i32 @function_1000a79c()
  store i32 %v0_100014f4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_100014fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100014fc = trunc i32 %v0_100014fc to i8
  %v2_100014fc = load i32, i32* @r30, align 4
  %v3_100014fc = add i32 %v2_100014fc, -529
  %v4_100014fc = inttoptr i32 %v3_100014fc to i8*
  store i8 %v1_100014fc, i8* %v4_100014fc, align 1
  %v0_10001500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r30, align 4
  %v2_10001500 = add i32 %v1_10001500, -533
  %v3_10001500 = inttoptr i32 %v2_10001500 to i32*
  store i32 %v0_10001500, i32* %v3_10001500, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001508:                            ; preds = %dec_label_pc_10000be8
  %v0_10001508 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001508, i32* @r3, align 4
  %v0_1000150c = load i32, i32* @r31, align 4
  store i32 %v0_1000150c, i32* %r4.global-to-local, align 4
  store i32 268440852, i32* %lr.global-to-local, align 4
  %v2_10001510 = inttoptr i32 %v0_10001508 to i8*
  %v3_10001510 = call i32 @function_10009f38(i8* %v2_10001510, i32 %v0_1000150c)
  store i32 %v3_10001510, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000c00

dec_label_pc_10001518:                            ; preds = %dec_label_pc_1000081c
  store i32 268440860, i32* %lr.global-to-local, align 4
  %v0_10001518 = call i32 @function_1000aeb8()
  store i32 %v0_10001518, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v0_10001518, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_10001524:                            ; preds = %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge, %dec_label_pc_10001518
  %v1_10001524 = phi i32 [ %v1_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ %v0_10001518, %dec_label_pc_10001518 ]
  %v0_10001524 = phi i32 [ %v0_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ 0, %dec_label_pc_10001518 ]
  %v2_10001524 = inttoptr i32 %v1_10001524 to i32*
  store i32 %v0_10001524, i32* %v2_10001524, align 4
  %v0_10001528 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001528, i32* %r4.global-to-local, align 4
  %v0_10001534 = load i32, i32* @r30, align 4
  %v1_10001534 = add i32 %v0_10001534, -533
  %v2_10001534 = inttoptr i32 %v1_10001534 to i32*
  %v3_10001534 = load i32, i32* %v2_10001534, align 4
  store i32 %v3_10001534, i32* %r3.global-to-local, align 4
  store i32 268440892, i32* @lr, align 4
  %v4_10001538 = call i32 @function_1000b43c(i32 %v3_10001534, i32 %v0_10001528, i32 10240, i32 16384)
  store i32 %v4_10001538, i32* %r3.global-to-local, align 4
  %v3_1000153c = icmp eq i32 %v4_10001538, 0
  br i1 %v3_1000153c, label %dec_label_pc_100017e0, label %dec_label_pc_10001544

dec_label_pc_10001544:                            ; preds = %dec_label_pc_10001524
  %v1_10001544 = icmp slt i32 %v4_10001538, -1
  %v2_10001544 = icmp sgt i32 %v4_10001538, -1
  %v3_10001544 = icmp eq i32 %v4_10001538, -1
  store i1 %v1_10001544, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001544, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001544, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001544, label %dec_label_pc_1000154c, label %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge

dec_label_pc_10001544.dec_label_pc_10001524_crit_edge: ; preds = %dec_label_pc_10001544
  %v0_10001524.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10001524.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_10001544
  %v0_1000154c = load i32, i32* @r31, align 4
  %v1_1000154c = inttoptr i32 %v0_1000154c to i32*
  %v2_1000154c = load i32, i32* %v1_1000154c, align 4
  store i32 %v2_1000154c, i32* %r0.global-to-local, align 4
  %v1_10001550 = icmp slt i32 %v2_1000154c, 11
  %v2_10001550 = icmp sgt i32 %v2_1000154c, 11
  %v3_10001550 = icmp eq i32 %v2_1000154c, 11
  store i1 %v1_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001550, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001550, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001550, label %dec_label_pc_1000190c, label %dec_label_pc_10001558

dec_label_pc_10001558:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100017e0
  %v0_10001558 = load i32, i32* @r30, align 4
  %v1_10001558 = add i32 %v0_10001558, -533
  %v2_10001558 = inttoptr i32 %v1_10001558 to i32*
  %v3_10001558 = load i32, i32* %v2_10001558, align 4
  store i32 %v3_10001558, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10001560.42 to i32), i32* @lr, align 4
  %v0_1000155c = call i32 @function_1000a79c()
  store i32 %v0_1000155c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10001568 = load i32, i32* @r30, align 4
  %v2_10001568 = add i32 %v1_10001568, -533
  %v3_10001568 = inttoptr i32 %v2_10001568 to i32*
  store i32 -1, i32* %v3_10001568, align 4
  %v0_1000156c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000156c = trunc i32 %v0_1000156c to i8
  %v2_1000156c = load i32, i32* @r30, align 4
  %v3_1000156c = add i32 %v2_1000156c, -529
  %v4_1000156c = inttoptr i32 %v3_1000156c to i8*
  store i8 %v1_1000156c, i8* %v4_1000156c, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001140, %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268440960, i32* %lr.global-to-local, align 4
  %v3_1000157c = call i32 @function_100095d8(i32 37, i32* null)
  %v0_10001580 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001580, i32* %r4.global-to-local, align 4
  %v0_10001588 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001588, i32* %r3.global-to-local, align 4
  store i32 268440976, i32* %lr.global-to-local, align 4
  %v3_1000158c = inttoptr i32 %v0_10001588 to i8*
  %v4_1000158c = call i32 @function_1000a2c0(i8* %v3_1000158c, i32 %v0_10001580, i32 %v3_1000157c)
  store i32 %v4_1000158c, i32* %r3.global-to-local, align 4
  %v1_10001590 = icmp slt i32 %v4_1000158c, -1
  %v2_10001590 = icmp sgt i32 %v4_1000158c, -1
  %v3_10001590 = icmp eq i32 %v4_1000158c, -1
  store i1 %v1_10001590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001590, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001590, label %dec_label_pc_1000177c, label %dec_label_pc_10001598

dec_label_pc_10001598:                            ; preds = %dec_label_pc_10001574
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268440996, i32* %lr.global-to-local, align 4
  %v3_100015a0 = call i32 @function_100095d8(i32 37, i32* null)
  %v0_100015a4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100015a4, i32* %r4.global-to-local, align 4
  %v0_100015ac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* %lr.global-to-local, align 4
  %v3_100015b0 = inttoptr i32 %v0_100015ac to i8*
  %v4_100015b0 = call i32 @function_1000a2c0(i8* %v3_100015b0, i32 %v0_100015a4, i32 %v3_100015a0)
  store i32 %v4_100015b0, i32* %r3.global-to-local, align 4
  %v0_100015b8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100015b8 = add i32 %v0_100015b8, %v4_100015b0
  store i32 %v2_100015b8, i32* %r9.global-to-local, align 4
  %v1_100015bc = add i32 %v2_100015b8, 10532
  %v2_100015bc = inttoptr i32 %v1_100015bc to i8*
  %v3_100015bc = load i8, i8* %v2_100015bc, align 1
  %v4_100015bc = zext i8 %v3_100015bc to i32
  store i32 %v4_100015bc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100015c8 = xor i32 %v4_100015bc, 32
  %v1_100015cc = sub nsw i32 0, %v1_100015c8
  %v2_100015cc = xor i32 %v4_100015bc, -33
  %v4_100015cc = icmp uge i32 %v2_100015cc, %v1_100015cc
  %v2_100015d0 = zext i1 %v4_100015cc to i32
  %v3_100015d0 = add i32 %v2_100015d0, %v4_100015b0
  store i32 %v3_100015d0, i32* %r11.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015d4 = add i32 %v3_100015d0, %v0_100015d4
  store i32 %v2_100015d4, i32* @r28, align 4
  store i32 %v2_100015d4, i32* %r3.global-to-local, align 4
  %v1_100015dc = load i32, i32* %r24.global-to-local, align 4
  %v2_100015dc = sub i32 %v1_100015dc, %v3_100015d0
  store i32 %v2_100015dc, i32* %r4.global-to-local, align 4
  store i32 %v3_100015d0, i32* %r31.global-to-local, align 4
  store i32 268441064, i32* %lr.global-to-local, align 4
  %v5_100015e4 = call i32 @function_10009fdc(i32 %v2_100015d4, i32 %v2_100015dc, i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), i32 2)
  store i32 %v5_100015e4, i32* %r3.global-to-local, align 4
  %v1_100015e8 = icmp slt i32 %v5_100015e4, -1
  %v2_100015e8 = icmp sgt i32 %v5_100015e4, -1
  %v3_100015e8 = icmp eq i32 %v5_100015e4, -1
  store i1 %v1_100015e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015e8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_100015e4, i32* %r27.global-to-local, align 4
  br i1 %v3_100015e8, label %dec_label_pc_1000177c, label %dec_label_pc_100015f4

dec_label_pc_100015f4:                            ; preds = %dec_label_pc_10001598
  %v1_100015f4 = icmp slt i32 %v5_100015e4, 1
  %v2_100015f4 = icmp sgt i32 %v5_100015e4, 1
  %v3_100015f4 = icmp eq i32 %v5_100015e4, 1
  store i1 %v1_100015f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015f4, i1* %cr7_eq.global-to-local, align 1
  %tmp82 = icmp slt i32 %v5_100015e4, 2
  br i1 %tmp82, label %dec_label_pc_10001600, label %dec_label_pc_100015fc

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f4
  %v1_100015fc = add i32 %v5_100015e4, -2
  store i32 %v1_100015fc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001600

dec_label_pc_10001600:                            ; preds = %dec_label_pc_100015f4, %dec_label_pc_100015fc
  %v1_10001608 = phi i32 [ %v5_100015e4, %dec_label_pc_100015f4 ], [ %v1_100015fc, %dec_label_pc_100015fc ]
  %v0_10001600 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001600 = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10001600 = add i32 %v0_10001600, %v1_10001608
  %v2_10001608 = add i32 %v2_10001600, %v1_10001600
  store i32 %v2_10001608, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v3_10001610 = add i32 %v2_10001608, 10532
  %v4_10001610 = inttoptr i32 %v3_10001610 to i8*
  store i8 0, i8* %v4_10001610, align 1
  %v0_10001614 = load i32, i32* @r28, align 4
  store i32 %v0_10001614, i32* %r4.global-to-local, align 4
  %v0_10001618 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001618 = load i32, i32* @r1, align 4
  %v2_10001618 = add i32 %v1_10001618, 8
  %v3_10001618 = inttoptr i32 %v2_10001618 to i32*
  store i32 %v0_10001618, i32* %v3_10001618, align 4
  %v0_1000161c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000161c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000161c = add i32 %v1_1000161c, %v0_1000161c
  %v3_1000161c = inttoptr i32 %v2_1000161c to i8*
  %v4_1000161c = load i8, i8* %v3_1000161c, align 1
  %v5_1000161c = zext i8 %v4_1000161c to i32
  store i32 %v5_1000161c, i32* %r3.global-to-local, align 4
  %v1_10001620 = add nuw nsw i32 %v5_1000161c, 208
  %v1_10001624 = urem i32 %v1_10001620, 256
  store i32 %v1_10001624, i32* %r0.global-to-local, align 4
  %v1_10001628 = icmp ult i32 %v1_10001624, 9
  %v2_10001628 = icmp ugt i32 %v1_10001624, 9
  %v3_10001628 = icmp eq i32 %v1_10001624, 9
  store i1 %v1_10001628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001628, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001628, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001628, label %dec_label_pc_10001658, label %dec_label_pc_10001630

dec_label_pc_10001630:                            ; preds = %dec_label_pc_10001600
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001634

dec_label_pc_10001634:                            ; preds = %dec_label_pc_10001634, %dec_label_pc_10001630
  %v0_10001634 = phi i32 [ %v0_1000163c, %dec_label_pc_10001634 ], [ 0, %dec_label_pc_10001630 ]
  %v1_10001634 = add i32 %v0_10001634, 1
  store i32 %v1_10001634, i32* %r11.global-to-local, align 4
  %v1_10001638 = load i32, i32* @r1, align 4
  %v2_10001638 = add i32 %v1_10001638, 8
  %v3_10001638 = inttoptr i32 %v2_10001638 to i32*
  store i32 %v1_10001634, i32* %v3_10001638, align 4
  %v0_1000163c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000163c, i32* %r9.global-to-local, align 4
  %v1_10001640 = load i32, i32* @r28, align 4
  %v2_10001640 = add i32 %v1_10001640, %v0_1000163c
  %v3_10001640 = inttoptr i32 %v2_10001640 to i8*
  %v4_10001640 = load i8, i8* %v3_10001640, align 1
  %v5_10001640 = zext i8 %v4_10001640 to i32
  store i32 %v5_10001640, i32* %r3.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v5_10001640, 208
  %v1_10001648 = urem i32 %v1_10001644, 256
  store i32 %v1_10001648, i32* %r0.global-to-local, align 4
  %v1_1000164c = icmp ult i32 %v1_10001648, 9
  %v2_1000164c = icmp ugt i32 %v1_10001648, 9
  %v3_1000164c = icmp eq i32 %v1_10001648, 9
  store i1 %v1_1000164c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000164c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000164c, i1* %cr7_eq.global-to-local, align 1
  %tmp83 = icmp ult i32 %v1_10001648, 10
  br i1 %tmp83, label %dec_label_pc_10001634, label %dec_label_pc_10001654

dec_label_pc_10001654:                            ; preds = %dec_label_pc_10001634
  store i32 %v2_10001640, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001658

dec_label_pc_10001658:                            ; preds = %dec_label_pc_10001600, %dec_label_pc_10001654
  %v0_10001658 = phi i32 [ %v5_1000161c, %dec_label_pc_10001600 ], [ %v5_10001640, %dec_label_pc_10001654 ]
  %v2_10001658 = icmp ne i32 %v0_10001658, 0
  %v3_10001658 = icmp eq i32 %v0_10001658, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001658, label %dec_label_pc_1000177c, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001658
  store i32 0, i32* %r26.global-to-local, align 4
  %v2_10001664 = load i32, i32* %r4.global-to-local, align 4
  %v3_10001664 = inttoptr i32 %v2_10001664 to i8*
  store i8 0, i8* %v3_10001664, align 1
  %v0_10001668 = load i32, i32* @r1, align 4
  %v1_10001668 = add i32 %v0_10001668, 8
  %v2_10001668 = inttoptr i32 %v1_10001668 to i32*
  %v3_10001668 = load i32, i32* %v2_10001668, align 4
  %v1_1000166c = add i32 %v3_10001668, 1
  store i32 %v1_1000166c, i32* %r11.global-to-local, align 4
  store i32 %v1_1000166c, i32* %v2_10001668, align 4
  %v0_10001674 = load i32, i32* @r28, align 4
  %v1_10001674 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001674 = add i32 %v1_10001674, %v0_10001674
  %v3_10001674 = inttoptr i32 %v2_10001674 to i8*
  %v4_10001674 = load i8, i8* %v3_10001674, align 1
  %v5_10001674 = zext i8 %v4_10001674 to i32
  store i32 %v5_10001674, i32* %r0.global-to-local, align 4
  %v1_10001678 = icmp ult i8 %v4_10001674, 32
  %v2_10001678 = icmp ugt i8 %v4_10001674, 32
  %v3_10001678 = icmp eq i8 %v4_10001674, 32
  store i1 %v1_10001678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001678, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001678, label %dec_label_pc_10001b84, label %dec_label_pc_10001680

dec_label_pc_10001680:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_10001b84
  %v1_10001680 = phi i32 [ %v1_10001674, %dec_label_pc_10001660 ], [ %v1_10001680.pre, %dec_label_pc_10001b84 ]
  %v0_10001680 = phi i32 [ %v0_10001674, %dec_label_pc_10001660 ], [ %v0_10001680.pre, %dec_label_pc_10001b84 ]
  %v2_10001680 = add i32 %v0_10001680, %v1_10001680
  store i32 %v2_10001680, i32* %r29.global-to-local, align 4
  store i32 %v2_10001680, i32* %r3.global-to-local, align 4
  store i32 268441228, i32* @lr, align 4
  %v1_10001688 = inttoptr i32 %v2_10001680 to i8*
  %v2_10001688 = call i32 @function_10009f10(i8* %v1_10001688)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d218.43 to i32), i32* %r31.global-to-local, align 4
  store i32 %v2_10001688, i32* %r4.global-to-local, align 4
  %v0_1000169c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* %lr.global-to-local, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000169c to i8*
  %v5_100016a0 = call i32 @function_1000a2c0(i8* %v4_100016a0, i32 %v2_10001688, i32 ptrtoint ([5 x i8]* @global_var_1000d218.43 to i32))
  store i32 %v5_100016a0, i32* %r3.global-to-local, align 4
  %v1_100016a4 = icmp slt i32 %v5_100016a0, -1
  %v2_100016a4 = icmp sgt i32 %v5_100016a0, -1
  %v3_100016a4 = icmp eq i32 %v5_100016a0, -1
  store i1 %v1_100016a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016a4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016a4, i1* %cr7_eq.global-to-local, align 1
  %v0_100019cc = load i32, i32* @r1, align 4
  %v1_100019cc = add i32 %v0_100019cc, 8
  %v2_100019cc = inttoptr i32 %v1_100019cc to i32*
  %v3_100019cc = load i32, i32* %v2_100019cc, align 4
  br i1 %v3_100016a4, label %dec_label_pc_100019cc, label %dec_label_pc_100016ac

dec_label_pc_100016ac:                            ; preds = %dec_label_pc_10001680
  %v0_100016b0 = load i32, i32* @r28, align 4
  %v2_100016b0 = add i32 %v0_100016b0, %v3_100019cc
  store i32 %v2_100016b0, i32* %r29.global-to-local, align 4
  store i32 %v2_100016b0, i32* %r3.global-to-local, align 4
  store i32 268441276, i32* @lr, align 4
  %v1_100016b8 = inttoptr i32 %v2_100016b0 to i8*
  %v2_100016b8 = call i32 @function_10009f10(i8* %v1_100016b8)
  %v0_100016bc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v2_100016b8, i32* %r4.global-to-local, align 4
  %v0_100016c4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100016c4, i32* %r3.global-to-local, align 4
  store i32 268441292, i32* %lr.global-to-local, align 4
  %v4_100016c8 = inttoptr i32 %v0_100016c4 to i8*
  %v5_100016c8 = call i32 @function_1000a2c0(i8* %v4_100016c8, i32 %v2_100016b8, i32 %v0_100016bc)
  store i32 %v5_100016c8, i32* %r3.global-to-local, align 4
  %v0_100016cc = load i32, i32* @r1, align 4
  %v1_100016cc = add i32 %v0_100016cc, 8
  %v2_100016cc = inttoptr i32 %v1_100016cc to i32*
  %v3_100016cc = load i32, i32* %v2_100016cc, align 4
  %v2_100016d0 = add i32 %v3_100016cc, %v5_100016c8
  store i32 %v2_100016d0, i32* %r11.global-to-local, align 4
  store i32 %v2_100016d0, i32* %v2_100016cc, align 4
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016d8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100016d8 = add i32 %v1_100016d8, %v0_100016d8
  %v3_100016d8 = inttoptr i32 %v2_100016d8 to i8*
  %v4_100016d8 = load i8, i8* %v3_100016d8, align 1
  %v5_100016d8 = zext i8 %v4_100016d8 to i32
  store i32 %v5_100016d8, i32* %r0.global-to-local, align 4
  %v1_100016dc = icmp ult i8 %v4_100016d8, 34
  %v2_100016dc = icmp ugt i8 %v4_100016d8, 34
  %v3_100016dc = icmp eq i8 %v4_100016d8, 34
  store i1 %v1_100016dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100016dc, label %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, label %dec_label_pc_100016e4

dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge: ; preds = %dec_label_pc_100016ac
  %v1_100019e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_100019dc

dec_label_pc_100016e4:                            ; preds = %dec_label_pc_100019cc, %dec_label_pc_100019dc, %dec_label_pc_100016ac, %dec_label_pc_10001a00
  %v0_100016e4 = load i32, i32* @r28, align 4
  store i32 %v0_100016e4, i32* @r3, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268441328, i32* @lr, align 4
  %v2_100016ec = call i32 @function_1000a038(i32 %v0_100016e4, i32 10)
  store i32 %v2_100016ec, i32* %r3.global-to-local, align 4
  %v1_100016f0 = add i32 %v2_100016ec, -1
  store i32 %v1_100016f0, i32* %r0.global-to-local, align 4
  %v1_100016f4 = icmp ult i32 %v1_100016f0, 8
  %v2_100016f4 = icmp ugt i32 %v1_100016f0, 8
  %v3_100016f4 = icmp eq i32 %v1_100016f0, 8
  store i1 %v1_100016f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100016f8 = load i32, i32* @r1, align 4
  %v1_100016f8 = add i32 %v0_100016f8, 20792
  %v2_100016f8 = inttoptr i32 %v1_100016f8 to i32*
  %v3_100016f8 = load i32, i32* %v2_100016f8, align 4
  store i32 %v3_100016f8, i32* %r0.global-to-local, align 4
  %v2_100016fc = add i32 %v3_100016f8, %v2_100016ec
  store i32 %v2_100016fc, i32* @r31, align 4
  %tmp84 = icmp ult i32 %v1_100016f0, 9
  br i1 %tmp84, label %dec_label_pc_10001710.preheader, label %dec_label_pc_10001720

dec_label_pc_10001710.preheader:                  ; preds = %dec_label_pc_100016e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_100017144 = call i32 @function_1000ab6c()
  store i32 %v0_100017144, i32* %r3.global-to-local, align 4
  %v1_100017185 = load i32, i32* @r31, align 4
  %v2_100017186 = icmp ult i32 %v0_100017144, %v1_100017185
  %v3_100017187 = icmp ugt i32 %v0_100017144, %v1_100017185
  %v4_100017188 = icmp eq i32 %v0_100017144, %v1_100017185
  store i1 %v2_100017186, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100017187, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100017188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100017186, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001708:                            ; preds = %dec_label_pc_10001710.preheader, %dec_label_pc_10001708
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001710.44 to i32), i32* @lr, align 4
  %v1_1000170c = call i32 @function_1000c090(i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_10001714 = call i32 @function_1000ab6c()
  store i32 %v0_10001714, i32* %r3.global-to-local, align 4
  %v1_10001718 = load i32, i32* @r31, align 4
  %v2_10001718 = icmp ult i32 %v0_10001714, %v1_10001718
  %v3_10001718 = icmp ugt i32 %v0_10001714, %v1_10001718
  %v4_10001718 = icmp eq i32 %v0_10001714, %v1_10001718
  store i1 %v2_10001718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001718, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001720.loopexit:                   ; preds = %dec_label_pc_10001708, %dec_label_pc_10001710.preheader
  %v0_10001720.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001720.loopexit, %dec_label_pc_100016e4
  %v0_10001720 = phi i32 [ %v0_10001720.pre, %dec_label_pc_10001720.loopexit ], [ %v0_100016f8, %dec_label_pc_100016e4 ]
  %v1_10001720 = add i32 %v0_10001720, 8
  %v2_10001720 = inttoptr i32 %v1_10001720 to i32*
  %v3_10001720 = load i32, i32* %v2_10001720, align 4
  store i32 %v3_10001720, i32* %r29.global-to-local, align 4
  %v0_10001724 = load i32, i32* @r28, align 4
  %v2_10001724 = add i32 %v0_10001724, %v3_10001720
  store i32 %v2_10001724, i32* @r31, align 4
  store i32 %v2_10001724, i32* %r3.global-to-local, align 4
  store i32 268441392, i32* @lr, align 4
  %v1_1000172c = inttoptr i32 %v2_10001724 to i8*
  %v2_1000172c = call i32 @function_10009f10(i8* %v1_1000172c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_1000172c, i32* %r4.global-to-local, align 4
  %v0_1000173c = load i32, i32* @r31, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* %lr.global-to-local, align 4
  %v4_10001740 = inttoptr i32 %v0_1000173c to i8*
  %v5_10001740 = call i32 @function_1000a2c0(i8* %v4_10001740, i32 %v2_1000172c, i32 ptrtoint ([5 x i8]* @global_var_1000d210.40 to i32))
  store i32 %v5_10001740, i32* %r3.global-to-local, align 4
  %v1_10001744 = icmp slt i32 %v5_10001740, 4
  %v2_10001744 = icmp sgt i32 %v5_10001740, 4
  %v3_10001744 = icmp eq i32 %v5_10001740, 4
  store i1 %v1_10001744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001744, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001744, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001744, label %dec_label_pc_10001af0, label %dec_label_pc_1000174c

dec_label_pc_1000174c:                            ; preds = %dec_label_pc_10001720
  %v0_1000174c = load i32, i32* @r28, align 4
  %v1_1000174c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000174c = add i32 %v1_1000174c, %v0_1000174c
  %v3_1000174c = inttoptr i32 %v2_1000174c to i8*
  %v4_1000174c = load i8, i8* %v3_1000174c, align 1
  %v5_1000174c = zext i8 %v4_1000174c to i32
  store i32 %v5_1000174c, i32* %r0.global-to-local, align 4
  %v1_10001750 = icmp ult i8 %v4_1000174c, 47
  %v2_10001750 = icmp ugt i8 %v4_1000174c, 47
  %v3_10001750 = icmp eq i8 %v4_1000174c, 47
  store i1 %v1_10001750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001750, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001750, label %dec_label_pc_10001a9c, label %dec_label_pc_10001758

dec_label_pc_10001758:                            ; preds = %dec_label_pc_10001ab4, %dec_label_pc_10001a9c, %dec_label_pc_1000174c, %dec_label_pc_10001ad8
  store i32 10, i32* %r9.global-to-local, align 4
  store i32 1195725824, i32* %r0.global-to-local, align 4
  %v2_10001764 = load i32, i32* @r30, align 4
  %v3_10001764 = add i32 %v2_10001764, -529
  %v4_10001764 = inttoptr i32 %v3_10001764 to i8*
  store i8 10, i8* %v4_10001764, align 1
  %v0_10001768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001768 = load i32, i32* @r30, align 4
  %v2_10001768 = add i32 %v1_10001768, 898
  %v3_10001768 = inttoptr i32 %v2_10001768 to i32*
  store i32 %v0_10001768, i32* %v3_10001768, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001770:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_10001774 = load i32, i32* @r30, align 4
  %v2_10001774 = add i32 %v1_10001774, 931
  %v3_10001774 = inttoptr i32 %v2_10001774 to i32*
  store i32 0, i32* %v3_10001774, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_1000177c:                            ; preds = %dec_label_pc_10001658, %dec_label_pc_10001598, %dec_label_pc_10001574
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001780 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001780, i32* %r4.global-to-local, align 4
  %v0_1000178c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000178c, i32* %r3.global-to-local, align 4
  %v0_10001790 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001790 = add i32 %v0_10001790, 1431
  store i32 %v1_10001790, i32* @r31, align 4
  store i32 268441496, i32* %lr.global-to-local, align 4
  %v5_10001794 = call i32 @function_10009fdc(i32 %v0_1000178c, i32 %v0_10001780, i32 ptrtoint ([5 x i8]* @global_var_1000d204.37 to i32), i32 4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v5_10001794, i32* %r29.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d220.45 to i32), i32* %r4.global-to-local, align 4
  %v0_100017a4 = load i32, i32* @r31, align 4
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  store i32 268441516, i32* %lr.global-to-local, align 4
  %v3_100017a8 = inttoptr i32 %v0_100017a4 to i8*
  %v4_100017a8 = call i32 @function_1000a36c(i8* %v3_100017a8, i32 ptrtoint ([5 x i8]* @global_var_1000d220.45 to i32))
  store i32 %v4_100017a8, i32* %r3.global-to-local, align 4
  %v1_100017ac = icmp slt i32 %v4_100017a8, 0
  %v2_100017ac = icmp sgt i32 %v4_100017a8, 0
  %v3_100017ac = icmp eq i32 %v4_100017a8, 0
  store i1 %v1_100017ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017ac, label %dec_label_pc_1000191c, label %dec_label_pc_100017b4

dec_label_pc_100017b4:                            ; preds = %dec_label_pc_1000191c, %dec_label_pc_1000177c
  store i32 7, i32* %r0.global-to-local, align 4
  %v2_100017b8 = load i32, i32* @r30, align 4
  %v3_100017b8 = add i32 %v2_100017b8, -529
  %v4_100017b8 = inttoptr i32 %v3_100017b8 to i8*
  store i8 7, i8* %v4_100017b8, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_100017bc:                            ; preds = %dec_label_pc_1000193c, %dec_label_pc_10001b78, %dec_label_pc_100017b4
  %v0_100017bc = load i32, i32* @r30, align 4
  %v1_100017bc = add i32 %v0_100017bc, -533
  %v2_100017bc = inttoptr i32 %v1_100017bc to i32*
  %v3_100017bc = load i32, i32* %v2_100017bc, align 4
  store i32 %v3_100017bc, i32* %r3.global-to-local, align 4
  %v0_100017c0 = load i32, i32* %r29.global-to-local, align 4
  %v0_100017c4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100017c4, i32* %r4.global-to-local, align 4
  store i32 268441552, i32* @lr, align 4
  %v4_100017cc = call i32 @function_1000b43c(i32 %v3_100017bc, i32 %v0_100017c4, i32 %v0_100017c0, i32 16384)
  store i32 %v4_100017cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000824

dec_label_pc_100017d4:                            ; preds = %dec_label_pc_10000cd0
  %v1_100017d4 = icmp slt i32 %v0_100017d4, 10239
  %v2_100017d4 = icmp sgt i32 %v0_100017d4, 10239
  %v3_100017d4 = icmp eq i32 %v0_100017d4, 10239
  store i1 %v1_100017d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017d4, i1* %cr7_eq.global-to-local, align 1
  %tmp85 = icmp slt i32 %v0_100017d4, 10240
  br i1 %tmp85, label %dec_label_pc_10000824, label %dec_label_pc_10000cf4

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001524
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100017e4 = load i32, i32* @r31, align 4
  %v2_100017e4 = inttoptr i32 %v1_100017e4 to i32*
  store i32 104, i32* %v2_100017e4, align 4
  br label %dec_label_pc_10001558

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100012f0
  %v0_100017ec = load i32, i32* %r25.global-to-local, align 4
  %v1_100017ec = inttoptr i32 %v0_100017ec to i32*
  %v2_100017ec = load i32, i32* %v1_100017ec, align 4
  store i32 %v2_100017ec, i32* %r0.global-to-local, align 4
  %v1_100017f0 = icmp slt i32 %v2_100017ec, 11
  %v2_100017f0 = icmp sgt i32 %v2_100017ec, 11
  %v3_100017f0 = icmp eq i32 %v2_100017ec, 11
  store i1 %v1_100017f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017f0, label %dec_label_pc_10000824, label %dec_label_pc_10001414

dec_label_pc_100017fc:                            ; preds = %dec_label_pc_100011a4
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001800 = load i32, i32* @r1, align 4
  %v2_10001800 = add i32 %v1_10001800, 8
  %v3_10001800 = inttoptr i32 %v2_10001800 to i32*
  store i32 7, i32* %v3_10001800, align 4
  %v0_10001804 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001804 = add i32 %v0_10001804, 4
  %v2_10001804 = inttoptr i32 %v1_10001804 to i8*
  %v3_10001804 = load i8, i8* %v2_10001804, align 1
  %v4_10001804 = zext i8 %v3_10001804 to i32
  store i32 %v4_10001804, i32* %r0.global-to-local, align 4
  %v1_10001808 = icmp ult i8 %v3_10001804, 115
  %v2_10001808 = icmp ugt i8 %v3_10001804, 115
  %v3_10001808 = icmp eq i8 %v3_10001804, 115
  store i1 %v1_10001808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001808, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001808, label %dec_label_pc_10001a5c, label %dec_label_pc_10001810

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017fc, %dec_label_pc_10001a5c
  %v0_10001814 = phi i32 [ %v0_10001804, %dec_label_pc_100017fc ], [ %v0_10001814.pre, %dec_label_pc_10001a5c ]
  %v0_10001810 = load i32, i32* @r1, align 4
  %v1_10001810 = add i32 %v0_10001810, 8
  %v2_10001810 = inttoptr i32 %v1_10001810 to i32*
  %v3_10001810 = load i32, i32* %v2_10001810, align 4
  store i32 %v0_10001814, i32* %r3.global-to-local, align 4
  %v1_10001818 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001818 = sub i32 %v1_10001818, %v3_10001810
  %v2_1000181c = add i32 %v3_10001810, %v0_10001814
  store i32 %v2_1000181c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001824.46 to i32), i32* @lr, align 4
  %v3_10001820 = call i32 @function_1000af98(i32 %v0_10001814, i32 %v2_1000181c, i32 %v2_10001818)
  store i32 %v3_10001820, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001828 = load i32, i32* @r1, align 4
  %v2_10001828 = add i32 %v1_10001828, 8
  %v3_10001828 = inttoptr i32 %v2_10001828 to i32*
  store i32 0, i32* %v3_10001828, align 4
  %v0_1000182c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000182c = load i32, i32* @r31, align 4
  %v2_1000182c = add i32 %v1_1000182c, %v0_1000182c
  %v3_1000182c = inttoptr i32 %v2_1000182c to i8*
  %v4_1000182c = load i8, i8* %v3_1000182c, align 1
  %v5_1000182c = zext i8 %v4_1000182c to i32
  store i32 %v5_1000182c, i32* %r3.global-to-local, align 4
  %v2_10001830 = icmp ne i8 %v4_1000182c, 0
  %v3_10001830 = icmp eq i8 %v4_1000182c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001830, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001830, label %dec_label_pc_10001870, label %dec_label_pc_10001838

dec_label_pc_10001838:                            ; preds = %dec_label_pc_10001810
  %v1_10001838 = icmp ult i8 %v4_1000182c, 47
  %v2_10001838 = icmp ugt i8 %v4_1000182c, 47
  %v3_10001838 = icmp eq i8 %v4_1000182c, 47
  store i1 %v1_10001838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001838, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001838, i1* %cr7_eq.global-to-local, align 1
  %v0_1000183c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000183c, i32* %r9.global-to-local, align 4
  br i1 %v3_10001838, label %dec_label_pc_100019c0, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %dec_label_pc_10001838
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001858

dec_label_pc_1000184c:                            ; preds = %dec_label_pc_10001858
  %v1_1000184c = icmp ult i8 %v4_10001864, 47
  %v2_1000184c = icmp ugt i8 %v4_10001864, 47
  %v3_1000184c = icmp eq i8 %v4_10001864, 47
  store i1 %v1_1000184c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000184c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000184c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001850 = add i32 %v0_1000185c, 1
  store i32 %v1_10001850, i32* %r4.global-to-local, align 4
  br i1 %v3_1000184c, label %dec_label_pc_100019c0, label %dec_label_pc_10001858

dec_label_pc_10001858:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001844
  %v0_10001858 = phi i32 [ %v1_10001850, %dec_label_pc_1000184c ], [ 1, %dec_label_pc_10001844 ]
  %v1_10001858 = load i32, i32* @r1, align 4
  %v2_10001858 = add i32 %v1_10001858, 8
  %v3_10001858 = inttoptr i32 %v2_10001858 to i32*
  store i32 %v0_10001858, i32* %v3_10001858, align 4
  %v0_1000185c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000185c, i32* %r11.global-to-local, align 4
  %v0_10001860 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001860 = add i32 %v0_10001860, %v0_1000185c
  store i32 %v2_10001860, i32* %r9.global-to-local, align 4
  %v3_10001864 = inttoptr i32 %v2_10001860 to i8*
  %v4_10001864 = load i8, i8* %v3_10001864, align 1
  %v5_10001864 = zext i8 %v4_10001864 to i32
  store i32 %v5_10001864, i32* %r0.global-to-local, align 4
  %v2_10001868 = icmp ne i8 %v4_10001864, 0
  %v3_10001868 = icmp eq i8 %v4_10001864, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001868, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001868, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001868, label %dec_label_pc_10001870, label %dec_label_pc_1000184c

dec_label_pc_10001870:                            ; preds = %dec_label_pc_10001858, %dec_label_pc_10001810, %dec_label_pc_100019c0
  %v0_10001870 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001870, i32* %r3.global-to-local, align 4
  store i32 268441720, i32* @lr, align 4
  %v1_10001874 = inttoptr i32 %v0_10001870 to i8*
  %v2_10001874 = call i32 @function_10009f10(i8* %v1_10001874)
  store i32 %v2_10001874, i32* %r3.global-to-local, align 4
  %v1_10001878 = icmp slt i32 %v2_10001874, 0
  %v2_10001878 = icmp sgt i32 %v2_10001874, 0
  %v3_10001878 = icmp eq i32 %v2_10001874, 0
  store i1 %v1_10001878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001878, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001878, i1* %cr7_eq.global-to-local, align 1
  %tmp86 = icmp slt i32 %v2_10001874, 1
  br i1 %tmp86, label %dec_label_pc_1000189c, label %dec_label_pc_10001880

dec_label_pc_10001880:                            ; preds = %dec_label_pc_10001870
  %v0_10001880 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001880, i32* %r3.global-to-local, align 4
  store i32 268441736, i32* @lr, align 4
  %v1_10001884 = inttoptr i32 %v0_10001880 to i8*
  %v2_10001884 = call i32 @function_10009f10(i8* %v1_10001884)
  store i32 %v2_10001884, i32* %r3.global-to-local, align 4
  %v1_10001888 = icmp slt i32 %v2_10001884, 127
  %v2_10001888 = icmp sgt i32 %v2_10001884, 127
  %v3_10001888 = icmp eq i32 %v2_10001884, 127
  store i1 %v1_10001888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001888, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001888, label %dec_label_pc_1000189c, label %dec_label_pc_10001890

dec_label_pc_10001890:                            ; preds = %dec_label_pc_10001880
  %v0_10001890 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001890 = add i32 %v0_10001890, 789
  store i32 %v1_10001890, i32* @r3, align 4
  %v0_10001894 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001894, i32* %r4.global-to-local, align 4
  store i32 268441756, i32* %lr.global-to-local, align 4
  %v2_10001898 = inttoptr i32 %v1_10001890 to i8*
  %v3_10001898 = call i32 @function_10009f38(i8* %v2_10001898, i32 %v0_10001894)
  store i32 %v3_10001898, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000189c

dec_label_pc_1000189c:                            ; preds = %dec_label_pc_10001880, %dec_label_pc_10001870, %dec_label_pc_10001890
  %v0_1000189c = load i32, i32* @r1, align 4
  %v1_1000189c = add i32 %v0_1000189c, 8
  %v2_1000189c = inttoptr i32 %v1_1000189c to i32*
  %v3_1000189c = load i32, i32* %v2_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018a0 = add i32 %v3_1000189c, 1
  %v1_100018a4 = add i32 %v2_100018a0, %v0_100018a0
  store i32 %v1_100018a4, i32* %r3.global-to-local, align 4
  store i32 268441772, i32* @lr, align 4
  %v1_100018a8 = inttoptr i32 %v1_100018a4 to i8*
  %v2_100018a8 = call i32 @function_10009f10(i8* %v1_100018a8)
  store i32 %v2_100018a8, i32* %r3.global-to-local, align 4
  %v1_100018ac = icmp slt i32 %v2_100018a8, 255
  %v2_100018ac = icmp sgt i32 %v2_100018a8, 255
  %v3_100018ac = icmp eq i32 %v2_100018a8, 255
  store i1 %v1_100018ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100018ac, label %dec_label_pc_100011e4, label %dec_label_pc_100018b4

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_1000189c
  %v0_100018b4 = load i32, i32* @r30, align 4
  store i32 %v0_100018b4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268441792, i32* @lr, align 4
  %v0_100018bc = call i32 @function_10009fb8()
  store i32 %v0_100018bc, i32* %r3.global-to-local, align 4
  %v0_100018c0 = load i32, i32* @r1, align 4
  %v1_100018c0 = add i32 %v0_100018c0, 8
  %v2_100018c0 = inttoptr i32 %v1_100018c0 to i32*
  %v3_100018c0 = load i32, i32* %v2_100018c0, align 4
  %v0_100018c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018c4 = add i32 %v3_100018c0, 1
  %v1_100018c8 = add i32 %v2_100018c4, %v0_100018c4
  store i32 %v1_100018c8, i32* %r3.global-to-local, align 4
  store i32 268441808, i32* @lr, align 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i8*
  %v2_100018cc = call i32 @function_10009f10(i8* %v1_100018cc)
  store i32 %v2_100018cc, i32* %r3.global-to-local, align 4
  %v1_100018d0 = icmp slt i32 %v2_100018cc, 0
  %v2_100018d0 = icmp sgt i32 %v2_100018cc, 0
  %v3_100018d0 = icmp eq i32 %v2_100018cc, 0
  store i1 %v1_100018d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018d0, i1* %cr7_eq.global-to-local, align 1
  %tmp87 = icmp slt i32 %v2_100018cc, 1
  br i1 %tmp87, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_100018d8:                            ; preds = %dec_label_pc_10001a40, %dec_label_pc_100018b4
  %v0_100018d8 = load i32, i32* @r1, align 4
  %v1_100018d8 = add i32 %v0_100018d8, 8
  %v2_100018d8 = inttoptr i32 %v1_100018d8 to i32*
  %v3_100018d8 = load i32, i32* %v2_100018d8, align 4
  %v0_100018dc = load i32, i32* @r30, align 4
  store i32 %v0_100018dc, i32* @r3, align 4
  %v0_100018e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018e0 = add i32 %v3_100018d8, 1
  %v1_100018e4 = add i32 %v2_100018e0, %v0_100018e0
  store i32 %v1_100018e4, i32* %r4.global-to-local, align 4
  store i32 268441836, i32* %lr.global-to-local, align 4
  %v2_100018e8 = inttoptr i32 %v0_100018dc to i8*
  %v3_100018e8 = call i32 @function_10009f38(i8* %v2_100018e8, i32 %v1_100018e4)
  store i32 %v3_100018e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011e4

dec_label_pc_100018f0:                            ; preds = %dec_label_pc_10000ca8
  %v0_100018f0 = load i32, i32* @r30, align 4
  %v1_100018f0 = add i32 %v0_100018f0, -533
  %v2_100018f0 = inttoptr i32 %v1_100018f0 to i32*
  %v3_100018f0 = load i32, i32* %v2_100018f0, align 4
  store i32 %v3_100018f0, i32* %r3.global-to-local, align 4
  store i32 268441848, i32* @lr, align 4
  %v0_100018f4 = call i32 @function_1000a79c()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001900 = load i32, i32* @r30, align 4
  %v2_10001900 = add i32 %v1_10001900, -533
  %v3_10001900 = inttoptr i32 %v2_10001900 to i32*
  store i32 -1, i32* %v3_10001900, align 4
  %v0_10001904 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001904 = trunc i32 %v0_10001904 to i8
  %v2_10001904 = load i32, i32* @r30, align 4
  %v3_10001904 = add i32 %v2_10001904, -529
  %v4_10001904 = inttoptr i32 %v3_10001904 to i8*
  store i8 %v1_10001904, i8* %v4_10001904, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_1000154c
  %v0_1000190c = load i32, i32* @r30, align 4
  %v1_1000190c = add i32 %v0_1000190c, -529
  %v2_1000190c = inttoptr i32 %v1_1000190c to i8*
  %v3_1000190c = load i8, i8* %v2_1000190c, align 1
  %v4_1000190c = zext i8 %v3_1000190c to i32
  store i32 %v4_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = icmp ne i8 %v3_1000190c, 0
  %v3_10001910 = icmp eq i8 %v3_1000190c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001910, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001910, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001910, label %dec_label_pc_10000824, label %dec_label_pc_100011e4

dec_label_pc_1000191c:                            ; preds = %dec_label_pc_1000177c
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001920 = load i32, i32* @r31, align 4
  store i32 %v0_10001920, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1000d1ec.7 to i32), i32* %r4.global-to-local, align 4
  store i32 268441900, i32* %lr.global-to-local, align 4
  %v3_10001928 = inttoptr i32 %v0_10001920 to i8*
  %v4_10001928 = call i32 @function_1000a36c(i8* %v3_10001928, i32 ptrtoint ([4 x i8]* @global_var_1000d1ec.7 to i32))
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v1_1000192c = icmp slt i32 %v4_10001928, 0
  %v2_1000192c = icmp sgt i32 %v4_10001928, 0
  %v3_1000192c = icmp eq i32 %v4_10001928, 0
  store i1 %v1_1000192c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000192c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000192c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000192c, label %dec_label_pc_10001934, label %dec_label_pc_100017b4

dec_label_pc_10001934:                            ; preds = %dec_label_pc_1000191c
  %v0_10001934 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001934 = icmp slt i32 %v0_10001934, %v1_10001934
  %v3_10001934 = icmp sgt i32 %v0_10001934, %v1_10001934
  %v4_10001934 = icmp eq i32 %v0_10001934, %v1_10001934
  store i1 %v2_10001934, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001934, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001934, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001934, label %dec_label_pc_1000193c, label %dec_label_pc_10001b78

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_10001934
  store i32 10, i32* %r0.global-to-local, align 4
  %v2_10001940 = load i32, i32* @r30, align 4
  %v3_10001940 = add i32 %v2_10001940, -529
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 10, i8* %v4_10001940, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001948:                            ; preds = %dec_label_pc_1000142c
  %v1_10001948 = add i32 %v0_10001454, 1579
  %v2_10001948 = inttoptr i32 %v1_10001948 to i32*
  %v3_10001948 = load i32, i32* %v2_10001948, align 4
  store i32 %v3_10001948, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 268441948, i32* %lr.global-to-local, align 4
  %v3_10001958 = call i32 @function_100095d8(i32 36, i32* null)
  %v0_1000195c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000195c, i32* %r4.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001968, i32* %r3.global-to-local, align 4
  store i32 268441968, i32* %lr.global-to-local, align 4
  %v4_1000196c = call i32 @function_10009fdc(i32 %v0_10001968, i32 %v0_1000195c, i32 %v3_10001958, i32 11)
  store i32 %v4_1000196c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001974 = load i32, i32* @r30, align 4
  %v1_10001974 = add i32 %v0_10001974, 1579
  %v2_10001974 = inttoptr i32 %v1_10001974 to i32*
  %v3_10001974 = load i32, i32* %v2_10001974, align 4
  %v0_10001978 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001978 = add i32 %v0_10001978, %v4_1000196c
  store i32 %v2_10001978, i32* %r31.global-to-local, align 4
  store i32 %v4_1000196c, i32* %r29.global-to-local, align 4
  %v2_10001984 = sub i32 %v3_10001974, %v4_1000196c
  store i32 %v2_10001984, i32* %r4.global-to-local, align 4
  store i32 %v2_10001978, i32* %r3.global-to-local, align 4
  store i32 268442004, i32* %lr.global-to-local, align 4
  %v4_10001990 = call i32 @function_10009fdc(i32 %v2_10001978, i32 %v2_10001984, i32 ptrtoint (i32* @global_var_1000d228.47 to i32), i32 1)
  store i32 %v4_10001990, i32* %r3.global-to-local, align 4
  %v0_10001994 = load i32, i32* @r30, align 4
  %v1_10001994 = add i32 %v0_10001994, 935
  %v2_10001994 = inttoptr i32 %v1_10001994 to i32*
  %v3_10001994 = load i32, i32* %v2_10001994, align 4
  store i32 %v3_10001994, i32* %r0.global-to-local, align 4
  %v0_10001998 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001998 = add i32 %v0_10001998, %v4_10001990
  store i32 %v2_10001998, i32* %r28.global-to-local, align 4
  %v1_1000199c = icmp slt i32 %v3_10001994, 4
  %v2_1000199c = icmp sgt i32 %v3_10001994, 4
  %v3_1000199c = icmp eq i32 %v3_10001994, 4
  store i1 %v1_1000199c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000199c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000199c, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100019a0 = add i32 %v1_100019a0, %v2_10001998
  store i32 %v2_100019a0, i32* %r9.global-to-local, align 4
  %v0_100019a4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100019a4 = trunc i32 %v0_100019a4 to i8
  %v3_100019a4 = add i32 %v2_100019a0, 2115
  %v4_100019a4 = inttoptr i32 %v3_100019a4 to i8*
  store i8 %v1_100019a4, i8* %v4_100019a4, align 1
  %v0_100019a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100019a8 = or i1 %v0_100019a8, %v1_100019a8
  br i1 %v2_100019a8, label %dec_label_pc_10001b90, label %dec_label_pc_100019ac

dec_label_pc_100019ac:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001b90, %dec_label_pc_10001ba0
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_100019b4 = load i32, i32* @r30, align 4
  %v2_100019b4 = add i32 %v1_100019b4, 931
  %v3_100019b4 = inttoptr i32 %v2_100019b4 to i32*
  store i32 -1, i32* %v3_100019b4, align 4
  %v0_100019b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100019b8 = trunc i32 %v0_100019b8 to i8
  %v2_100019b8 = load i32, i32* @r30, align 4
  %v3_100019b8 = add i32 %v2_100019b8, -529
  %v4_100019b8 = inttoptr i32 %v3_100019b8 to i8*
  store i8 %v1_100019b8, i8* %v4_100019b8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100019c0:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001838
  %v2_100019c4 = phi i32 [ %v0_1000183c, %dec_label_pc_10001838 ], [ %v2_10001860, %dec_label_pc_1000184c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100019c4 = inttoptr i32 %v2_100019c4 to i8*
  store i8 0, i8* %v3_100019c4, align 1
  br label %dec_label_pc_10001870

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_10001680
  store i32 %v3_100019cc, i32* %r11.global-to-local, align 4
  %v0_100019d0 = load i32, i32* @r28, align 4
  %v2_100019d0 = add i32 %v0_100019d0, %v3_100019cc
  %v3_100019d0 = inttoptr i32 %v2_100019d0 to i8*
  %v4_100019d0 = load i8, i8* %v3_100019d0, align 1
  %v5_100019d0 = zext i8 %v4_100019d0 to i32
  store i32 %v5_100019d0, i32* %r0.global-to-local, align 4
  %v1_100019d4 = icmp ult i8 %v4_100019d0, 34
  %v2_100019d4 = icmp ugt i8 %v4_100019d0, 34
  %v3_100019d4 = icmp eq i8 %v4_100019d0, 34
  store i1 %v1_100019d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019d4, label %dec_label_pc_100019dc, label %dec_label_pc_100016e4

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, %dec_label_pc_100019cc
  %v1_100019e4 = phi i32 [ %v0_100019cc, %dec_label_pc_100019cc ], [ %v1_100019e4.pre, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019e0 = phi i32 [ %v0_100019d0, %dec_label_pc_100019cc ], [ %v0_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019dc = phi i32 [ %v3_100019cc, %dec_label_pc_100019cc ], [ %v1_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v1_100019dc = add i32 %v0_100019dc, 1
  store i32 %v1_100019dc, i32* %r11.global-to-local, align 4
  %v2_100019e0 = add i32 %v1_100019dc, %v0_100019e0
  store i32 %v2_100019e0, i32* %r29.global-to-local, align 4
  %v2_100019e4 = add i32 %v1_100019e4, 8
  %v3_100019e4 = inttoptr i32 %v2_100019e4 to i32*
  store i32 %v1_100019dc, i32* %v3_100019e4, align 4
  %v0_100019e8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100019e8, i32* %r3.global-to-local, align 4
  store i32 268442096, i32* @lr, align 4
  %v1_100019ec = inttoptr i32 %v0_100019e8 to i8*
  %v2_100019ec = call i32 @function_10009f10(i8* %v1_100019ec)
  store i32 %v2_100019ec, i32* %r3.global-to-local, align 4
  %v0_100019f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100019f0 = add i32 %v0_100019f0, %v2_100019ec
  store i32 %v2_100019f0, i32* %r29.global-to-local, align 4
  %v1_100019f4 = add i32 %v2_100019f0, -1
  %v2_100019f4 = inttoptr i32 %v1_100019f4 to i8*
  %v3_100019f4 = load i8, i8* %v2_100019f4, align 1
  %v4_100019f4 = zext i8 %v3_100019f4 to i32
  store i32 %v4_100019f4, i32* %r0.global-to-local, align 4
  %v1_100019f8 = icmp ult i8 %v3_100019f4, 34
  %v2_100019f8 = icmp ugt i8 %v3_100019f4, 34
  %v3_100019f8 = icmp eq i8 %v3_100019f4, 34
  store i1 %v1_100019f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019f8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019f8, label %dec_label_pc_10001a00, label %dec_label_pc_100016e4

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_100019dc
  %v0_10001a00 = load i32, i32* @r1, align 4
  %v1_10001a00 = add i32 %v0_10001a00, 8
  %v2_10001a00 = inttoptr i32 %v1_10001a00 to i32*
  %v3_10001a00 = load i32, i32* %v2_10001a00, align 4
  %v0_10001a04 = load i32, i32* @r28, align 4
  %v2_10001a04 = add i32 %v0_10001a04, %v3_10001a00
  store i32 %v2_10001a04, i32* %r29.global-to-local, align 4
  store i32 %v2_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442128, i32* @lr, align 4
  %v1_10001a0c = inttoptr i32 %v2_10001a04 to i8*
  %v2_10001a0c = call i32 @function_10009f10(i8* %v1_10001a0c)
  store i32 %v2_10001a0c, i32* %r3.global-to-local, align 4
  %v0_10001a10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a10 = add i32 %v0_10001a10, %v2_10001a0c
  store i32 %v2_10001a10, i32* %r29.global-to-local, align 4
  %v0_10001a14 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001a14 = trunc i32 %v0_10001a14 to i8
  %v3_10001a14 = add i32 %v2_10001a10, -1
  %v4_10001a14 = inttoptr i32 %v3_10001a14 to i8*
  store i8 %v1_10001a14, i8* %v4_10001a14, align 1
  br label %dec_label_pc_100016e4

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_100011d8
  %v0_10001a1c = load i32, i32* @r30, align 4
  store i32 %v0_10001a1c, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442152, i32* @lr, align 4
  %v0_10001a24 = call i32 @function_10009fb8()
  store i32 %v0_10001a24, i32* %r3.global-to-local, align 4
  %v0_10001a28 = load i32, i32* @r1, align 4
  %v1_10001a28 = add i32 %v0_10001a28, 8
  %v2_10001a28 = inttoptr i32 %v1_10001a28 to i32*
  %v3_10001a28 = load i32, i32* %v2_10001a28, align 4
  %v0_10001a2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a2c = add i32 %v3_10001a28, 1
  %v1_10001a30 = add i32 %v2_10001a2c, %v0_10001a2c
  store i32 %v1_10001a30, i32* %r3.global-to-local, align 4
  store i32 268442168, i32* @lr, align 4
  %v1_10001a34 = inttoptr i32 %v1_10001a30 to i8*
  %v2_10001a34 = call i32 @function_10009f10(i8* %v1_10001a34)
  store i32 %v2_10001a34, i32* %r3.global-to-local, align 4
  %v1_10001a38 = icmp slt i32 %v2_10001a34, 0
  %v2_10001a38 = icmp sgt i32 %v2_10001a34, 0
  %v3_10001a38 = icmp eq i32 %v2_10001a34, 0
  store i1 %v1_10001a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a38, i1* %cr7_eq.global-to-local, align 1
  %tmp88 = icmp slt i32 %v2_10001a34, 1
  br i1 %tmp88, label %dec_label_pc_100011e4, label %dec_label_pc_10001a40

dec_label_pc_10001a40:                            ; preds = %dec_label_pc_10001a1c
  %v0_10001a40 = load i32, i32* @r1, align 4
  %v1_10001a40 = add i32 %v0_10001a40, 8
  %v2_10001a40 = inttoptr i32 %v1_10001a40 to i32*
  %v3_10001a40 = load i32, i32* %v2_10001a40, align 4
  %v0_10001a44 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a44 = add i32 %v3_10001a40, 1
  %v1_10001a48 = add i32 %v2_10001a44, %v0_10001a44
  store i32 %v1_10001a48, i32* %r3.global-to-local, align 4
  store i32 268442192, i32* @lr, align 4
  %v1_10001a4c = inttoptr i32 %v1_10001a48 to i8*
  %v2_10001a4c = call i32 @function_10009f10(i8* %v1_10001a4c)
  store i32 %v2_10001a4c, i32* %r3.global-to-local, align 4
  %v1_10001a50 = icmp slt i32 %v2_10001a4c, 255
  %v2_10001a50 = icmp sgt i32 %v2_10001a4c, 255
  %v3_10001a50 = icmp eq i32 %v2_10001a4c, 255
  store i1 %v1_10001a50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a50, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a50, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_100017fc
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001a60 = load i32, i32* @r1, align 4
  %v2_10001a60 = add i32 %v1_10001a60, 8
  %v3_10001a60 = inttoptr i32 %v2_10001a60 to i32*
  store i32 8, i32* %v3_10001a60, align 4
  %v0_10001814.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001810

dec_label_pc_10001a68:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b38
  %v2_10001a6c = phi i32 [ %v0_10001b3c, %dec_label_pc_10001b38 ], [ %v2_10001b5c, %dec_label_pc_10001b4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10001a6c = inttoptr i32 %v2_10001a6c to i8*
  store i8 0, i8* %v3_10001a6c, align 1
  br label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001b58, %dec_label_pc_10001b0c, %dec_label_pc_10001a68
  %v0_10001a70 = load i32, i32* @r31, align 4
  store i32 %v0_10001a70, i32* %r3.global-to-local, align 4
  store i32 268442232, i32* @lr, align 4
  %v1_10001a74 = inttoptr i32 %v0_10001a70 to i8*
  %v2_10001a74 = call i32 @function_10009f10(i8* %v1_10001a74)
  store i32 %v2_10001a74, i32* %r3.global-to-local, align 4
  %v1_10001a78 = icmp slt i32 %v2_10001a74, 0
  %v2_10001a78 = icmp sgt i32 %v2_10001a74, 0
  %v3_10001a78 = icmp eq i32 %v2_10001a74, 0
  store i1 %v1_10001a78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a78, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a78, i1* %cr7_eq.global-to-local, align 1
  %tmp89 = icmp slt i32 %v2_10001a74, 1
  br i1 %tmp89, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a80

dec_label_pc_10001a80:                            ; preds = %dec_label_pc_10001a70
  %v0_10001a80 = load i32, i32* @r31, align 4
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 268442248, i32* @lr, align 4
  %v1_10001a84 = inttoptr i32 %v0_10001a80 to i8*
  %v2_10001a84 = call i32 @function_10009f10(i8* %v1_10001a84)
  store i32 %v2_10001a84, i32* %r3.global-to-local, align 4
  %v1_10001a88 = icmp slt i32 %v2_10001a84, 127
  %v2_10001a88 = icmp sgt i32 %v2_10001a84, 127
  %v3_10001a88 = icmp eq i32 %v2_10001a84, 127
  store i1 %v1_10001a88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a88, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a90

dec_label_pc_10001a90:                            ; preds = %dec_label_pc_10001a80
  %v0_10001a90 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001a90 = add i32 %v0_10001a90, 789
  store i32 %v1_10001a90, i32* @r3, align 4
  %v0_10001a94 = load i32, i32* @r31, align 4
  store i32 %v0_10001a94, i32* %r4.global-to-local, align 4
  store i32 268442268, i32* %lr.global-to-local, align 4
  %v2_10001a98 = inttoptr i32 %v1_10001a90 to i8*
  %v3_10001a98 = call i32 @function_10009f38(i8* %v2_10001a98, i32 %v0_10001a94)
  store i32 %v3_10001a98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a9c

dec_label_pc_10001a9c:                            ; preds = %dec_label_pc_1000174c, %dec_label_pc_10001a80, %dec_label_pc_10001a70, %dec_label_pc_10001a90
  %v0_10001a9c = load i32, i32* @r1, align 4
  %v1_10001a9c = add i32 %v0_10001a9c, 8
  %v2_10001a9c = inttoptr i32 %v1_10001a9c to i32*
  %v3_10001a9c = load i32, i32* %v2_10001a9c, align 4
  %v0_10001aa0 = load i32, i32* @r31, align 4
  %v2_10001aa0 = add i32 %v3_10001a9c, 1
  %v1_10001aa4 = add i32 %v2_10001aa0, %v0_10001aa0
  store i32 %v1_10001aa4, i32* %r3.global-to-local, align 4
  store i32 268442284, i32* @lr, align 4
  %v1_10001aa8 = inttoptr i32 %v1_10001aa4 to i8*
  %v2_10001aa8 = call i32 @function_10009f10(i8* %v1_10001aa8)
  store i32 %v2_10001aa8, i32* %r3.global-to-local, align 4
  %v1_10001aac = icmp slt i32 %v2_10001aa8, 255
  %v2_10001aac = icmp sgt i32 %v2_10001aa8, 255
  %v3_10001aac = icmp eq i32 %v2_10001aa8, 255
  store i1 %v1_10001aac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001aac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001aac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001aac, label %dec_label_pc_10001758, label %dec_label_pc_10001ab4

dec_label_pc_10001ab4:                            ; preds = %dec_label_pc_10001a9c
  %v0_10001ab4 = load i32, i32* @r30, align 4
  store i32 %v0_10001ab4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442304, i32* @lr, align 4
  %v0_10001abc = call i32 @function_10009fb8()
  store i32 %v0_10001abc, i32* %r3.global-to-local, align 4
  %v0_10001ac0 = load i32, i32* @r1, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 8
  %v2_10001ac0 = inttoptr i32 %v1_10001ac0 to i32*
  %v3_10001ac0 = load i32, i32* %v2_10001ac0, align 4
  %v0_10001ac4 = load i32, i32* @r31, align 4
  %v2_10001ac4 = add i32 %v3_10001ac0, 1
  %v1_10001ac8 = add i32 %v2_10001ac4, %v0_10001ac4
  store i32 %v1_10001ac8, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v1_10001acc = inttoptr i32 %v1_10001ac8 to i8*
  %v2_10001acc = call i32 @function_10009f10(i8* %v1_10001acc)
  store i32 %v2_10001acc, i32* %r3.global-to-local, align 4
  %v1_10001ad0 = icmp slt i32 %v2_10001acc, 0
  %v2_10001ad0 = icmp sgt i32 %v2_10001acc, 0
  %v3_10001ad0 = icmp eq i32 %v2_10001acc, 0
  store i1 %v1_10001ad0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001ad0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001ad0, i1* %cr7_eq.global-to-local, align 1
  %tmp90 = icmp slt i32 %v2_10001acc, 1
  br i1 %tmp90, label %dec_label_pc_10001758, label %dec_label_pc_10001ad8

dec_label_pc_10001ad8:                            ; preds = %dec_label_pc_10001ab4
  %v0_10001ad8 = load i32, i32* @r1, align 4
  %v1_10001ad8 = add i32 %v0_10001ad8, 8
  %v2_10001ad8 = inttoptr i32 %v1_10001ad8 to i32*
  %v3_10001ad8 = load i32, i32* %v2_10001ad8, align 4
  %v0_10001adc = load i32, i32* @r30, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v0_10001ae0 = load i32, i32* @r31, align 4
  %v2_10001ae0 = add i32 %v3_10001ad8, 1
  %v1_10001ae4 = add i32 %v2_10001ae0, %v0_10001ae0
  store i32 %v1_10001ae4, i32* %r4.global-to-local, align 4
  store i32 268442348, i32* %lr.global-to-local, align 4
  %v2_10001ae8 = inttoptr i32 %v0_10001adc to i8*
  %v3_10001ae8 = call i32 @function_10009f38(i8* %v2_10001ae8, i32 %v1_10001ae4)
  store i32 %v3_10001ae8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001758

dec_label_pc_10001af0:                            ; preds = %dec_label_pc_10001720
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001af4 = load i32, i32* @r1, align 4
  %v2_10001af4 = add i32 %v1_10001af4, 8
  %v3_10001af4 = inttoptr i32 %v2_10001af4 to i32*
  store i32 7, i32* %v3_10001af4, align 4
  %v0_10001af8 = load i32, i32* @r31, align 4
  %v1_10001af8 = add i32 %v0_10001af8, 4
  %v2_10001af8 = inttoptr i32 %v1_10001af8 to i8*
  %v3_10001af8 = load i8, i8* %v2_10001af8, align 1
  %v4_10001af8 = zext i8 %v3_10001af8 to i32
  store i32 %v4_10001af8, i32* %r0.global-to-local, align 4
  %v1_10001afc = icmp ult i8 %v3_10001af8, 115
  %v2_10001afc = icmp ugt i8 %v3_10001af8, 115
  %v3_10001afc = icmp eq i8 %v3_10001af8, 115
  store i1 %v1_10001afc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001afc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001afc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001afc, label %dec_label_pc_10001b04, label %dec_label_pc_10001b0c

dec_label_pc_10001b04:                            ; preds = %dec_label_pc_10001af0
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001b08 = load i32, i32* @r1, align 4
  %v2_10001b08 = add i32 %v1_10001b08, 8
  %v3_10001b08 = inttoptr i32 %v2_10001b08 to i32*
  store i32 8, i32* %v3_10001b08, align 4
  %v0_10001b14.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001b0c

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001af0, %dec_label_pc_10001b04
  %v0_10001b14 = phi i32 [ %v0_10001af8, %dec_label_pc_10001af0 ], [ %v0_10001b14.pre, %dec_label_pc_10001b04 ]
  %v0_10001b0c = load i32, i32* @r1, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 8
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i32*
  %v3_10001b0c = load i32, i32* %v2_10001b0c, align 4
  %v0_10001b10 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001b14, i32* %r3.global-to-local, align 4
  %v1_10001b10 = sub i32 1, %v3_10001b0c
  %v2_10001b18 = add i32 %v1_10001b10, %v0_10001b10
  %v2_10001b1c = add i32 %v3_10001b0c, %v0_10001b14
  store i32 %v2_10001b1c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001b24.49 to i32), i32* @lr, align 4
  %v3_10001b20 = call i32 @function_1000af98(i32 %v0_10001b14, i32 %v2_10001b1c, i32 %v2_10001b18)
  store i32 %v3_10001b20, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001b28 = load i32, i32* @r1, align 4
  %v2_10001b28 = add i32 %v1_10001b28, 8
  %v3_10001b28 = inttoptr i32 %v2_10001b28 to i32*
  store i32 0, i32* %v3_10001b28, align 4
  %v0_10001b2c = load i32, i32* @r28, align 4
  %v1_10001b2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b2c = add i32 %v1_10001b2c, %v0_10001b2c
  %v3_10001b2c = inttoptr i32 %v2_10001b2c to i8*
  %v4_10001b2c = load i8, i8* %v3_10001b2c, align 1
  %v5_10001b2c = zext i8 %v4_10001b2c to i32
  store i32 %v5_10001b2c, i32* %r3.global-to-local, align 4
  %v2_10001b30 = icmp ne i8 %v4_10001b2c, 0
  %v3_10001b30 = icmp eq i8 %v4_10001b2c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b30, label %dec_label_pc_10001a70, label %dec_label_pc_10001b38

dec_label_pc_10001b38:                            ; preds = %dec_label_pc_10001b0c
  %v1_10001b38 = icmp ult i8 %v4_10001b2c, 47
  %v2_10001b38 = icmp ugt i8 %v4_10001b2c, 47
  %v3_10001b38 = icmp eq i8 %v4_10001b2c, 47
  store i1 %v1_10001b38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b38, i1* %cr7_eq.global-to-local, align 1
  %v0_10001b3c = load i32, i32* @r31, align 4
  store i32 %v0_10001b3c, i32* %r11.global-to-local, align 4
  br i1 %v3_10001b38, label %dec_label_pc_10001a68, label %dec_label_pc_10001b44

dec_label_pc_10001b44:                            ; preds = %dec_label_pc_10001b38
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001b58

dec_label_pc_10001b4c:                            ; preds = %dec_label_pc_10001b58
  %v1_10001b4c = icmp ult i8 %v4_10001b60, 47
  %v2_10001b4c = icmp ugt i8 %v4_10001b60, 47
  %v3_10001b4c = icmp eq i8 %v4_10001b60, 47
  store i1 %v1_10001b4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b4c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b4c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001b50 = add i32 %v1_10001b5c, 1
  store i32 %v1_10001b50, i32* %r9.global-to-local, align 4
  br i1 %v3_10001b4c, label %dec_label_pc_10001a68, label %dec_label_pc_10001b58

dec_label_pc_10001b58:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b44
  %v0_10001b58 = phi i32 [ %v1_10001b50, %dec_label_pc_10001b4c ], [ 1, %dec_label_pc_10001b44 ]
  %v1_10001b58 = load i32, i32* @r1, align 4
  %v2_10001b58 = add i32 %v1_10001b58, 8
  %v3_10001b58 = inttoptr i32 %v2_10001b58 to i32*
  store i32 %v0_10001b58, i32* %v3_10001b58, align 4
  %v0_10001b5c = load i32, i32* @r31, align 4
  %v1_10001b5c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b5c = add i32 %v1_10001b5c, %v0_10001b5c
  store i32 %v2_10001b5c, i32* %r11.global-to-local, align 4
  %v3_10001b60 = inttoptr i32 %v2_10001b5c to i8*
  %v4_10001b60 = load i8, i8* %v3_10001b60, align 1
  %v5_10001b60 = zext i8 %v4_10001b60 to i32
  store i32 %v5_10001b60, i32* %r0.global-to-local, align 4
  %v2_10001b64 = icmp ne i8 %v4_10001b60, 0
  %v3_10001b64 = icmp eq i8 %v4_10001b60, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001a70, label %dec_label_pc_10001b4c

dec_label_pc_10001b70:                            ; preds = %dec_label_pc_100014d0
  %v0_10001b70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001b70 = trunc i32 %v0_10001b70 to i8
  %v2_10001b70 = load i32, i32* @r30, align 4
  %v3_10001b70 = add i32 %v2_10001b70, -529
  %v4_10001b70 = inttoptr i32 %v3_10001b70 to i8*
  store i8 %v1_10001b70, i8* %v4_10001b70, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001b78:                            ; preds = %dec_label_pc_10001934
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b7c = load i32, i32* @r30, align 4
  %v3_10001b7c = add i32 %v2_10001b7c, -529
  %v4_10001b7c = inttoptr i32 %v3_10001b7c to i8*
  store i8 1, i8* %v4_10001b7c, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001b84:                            ; preds = %dec_label_pc_10001660
  %v1_10001b84 = add i32 %v1_10001674, 1
  store i32 %v1_10001b84, i32* %r11.global-to-local, align 4
  %v1_10001b88 = load i32, i32* @r1, align 4
  %v2_10001b88 = add i32 %v1_10001b88, 8
  %v3_10001b88 = inttoptr i32 %v2_10001b88 to i32*
  store i32 %v1_10001b84, i32* %v3_10001b88, align 4
  %v0_10001680.pre = load i32, i32* @r28, align 4
  %v1_10001680.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10001680

dec_label_pc_10001b90:                            ; preds = %dec_label_pc_10001948
  %v0_10001b90 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001b90, i32* %r3.global-to-local, align 4
  store i32 268442520, i32* @lr, align 4
  %v1_10001b94 = inttoptr i32 %v0_10001b90 to i8*
  %v2_10001b94 = call i32 @function_10009f10(i8* %v1_10001b94)
  store i32 %v2_10001b94, i32* %r3.global-to-local, align 4
  %v1_10001b98 = icmp slt i32 %v2_10001b94, 127
  %v2_10001b98 = icmp sgt i32 %v2_10001b94, 127
  %v3_10001b98 = icmp eq i32 %v2_10001b94, 127
  store i1 %v1_10001b98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b98, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001b98, label %dec_label_pc_100019ac, label %dec_label_pc_10001ba0

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b90
  %v0_10001ba0 = load i32, i32* @r30, align 4
  %v1_10001ba0 = add i32 %v0_10001ba0, 935
  %v2_10001ba0 = inttoptr i32 %v1_10001ba0 to i32*
  %v3_10001ba0 = load i32, i32* %v2_10001ba0, align 4
  store i32 %v3_10001ba0, i32* %r3.global-to-local, align 4
  %v0_10001ba4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r4.global-to-local, align 4
  %v0_10001ba8 = load i32, i32* @r1, align 4
  %v1_10001ba8 = add i32 %v0_10001ba8, 20808
  %v2_10001ba8 = inttoptr i32 %v1_10001ba8 to i32*
  %v3_10001ba8 = load i32, i32* %v2_10001ba8, align 4
  store i32 %v3_10001ba8, i32* %r0.global-to-local, align 4
  %v0_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v1_10001bac = add i32 %v0_10001bac, 3
  store i32 %v1_10001bac, i32* %r28.global-to-local, align 4
  %v1_10001bb0 = mul i32 %v3_10001ba0, 128
  %v0_10001bb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001bb4 = add i32 %v0_10001bb4, %v1_10001bac
  store i32 %v2_10001bb4, i32* %r27.global-to-local, align 4
  %v2_10001bb8 = add i32 %v3_10001ba8, %v1_10001bb0
  store i32 %v2_10001bb8, i32* @r3, align 4
  store i32 268442560, i32* %lr.global-to-local, align 4
  %v2_10001bbc = inttoptr i32 %v2_10001bb8 to i8*
  %v3_10001bbc = call i32 @function_10009f38(i8* %v2_10001bbc, i32 %v0_10001ba4)
  store i32 %v3_10001bbc, i32* %r3.global-to-local, align 4
  %v0_10001bc0 = load i32, i32* @r30, align 4
  %v1_10001bc0 = add i32 %v0_10001bc0, 935
  %v2_10001bc0 = inttoptr i32 %v1_10001bc0 to i32*
  %v3_10001bc0 = load i32, i32* %v2_10001bc0, align 4
  store i32 %v3_10001bc0, i32* %r29.global-to-local, align 4
  %v0_10001bc4 = load i32, i32* @r1, align 4
  %v1_10001bc4 = add i32 %v0_10001bc4, 20808
  %v2_10001bc4 = inttoptr i32 %v1_10001bc4 to i32*
  %v3_10001bc4 = load i32, i32* %v2_10001bc4, align 4
  store i32 %v3_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = mul i32 %v3_10001bc0, 128
  %v2_10001bcc = add i32 %v3_10001bc4, %v1_10001bc8
  store i32 %v2_10001bcc, i32* %r29.global-to-local, align 4
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  store i32 268442584, i32* @lr, align 4
  %v1_10001bd4 = inttoptr i32 %v2_10001bcc to i8*
  %v2_10001bd4 = call i32 @function_10009f10(i8* %v1_10001bd4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d22c.50 to i32), i32* %r4.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v2_10001bd4
  store i32 %v2_10001be0, i32* @r3, align 4
  store i32 268442600, i32* %lr.global-to-local, align 4
  %v2_10001be4 = inttoptr i32 %v2_10001be0 to i8*
  %v3_10001be4 = call i32 @function_10009f38(i8* %v2_10001be4, i32 ptrtoint (i32* @global_var_1000d22c.50 to i32))
  store i32 %v3_10001be4, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001bec = load i32, i32* @r30, align 4
  %v1_10001bec = add i32 %v0_10001bec, 1579
  %v2_10001bec = inttoptr i32 %v1_10001bec to i32*
  %v3_10001bec = load i32, i32* %v2_10001bec, align 4
  %v0_10001bf8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001bf8, i32* %r3.global-to-local, align 4
  %v0_10001bfc = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bfc = sub i32 %v3_10001bec, %v0_10001bfc
  store i32 %v2_10001bfc, i32* %r4.global-to-local, align 4
  %v1_10001c00 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001c00 = add i32 %v1_10001c00, %v0_10001bfc
  store i32 %v2_10001c00, i32* %r28.global-to-local, align 4
  store i32 268442632, i32* %lr.global-to-local, align 4
  %v4_10001c04 = call i32 @function_10009fdc(i32 %v0_10001bf8, i32 %v2_10001bfc, i32 ptrtoint (i32* @global_var_1000d228.47 to i32), i32 1)
  store i32 %v4_10001c04, i32* %r3.global-to-local, align 4
  %v0_10001c08 = load i32, i32* @r30, align 4
  %v1_10001c08 = add i32 %v0_10001c08, 935
  %v2_10001c08 = inttoptr i32 %v1_10001c08 to i32*
  %v3_10001c08 = load i32, i32* %v2_10001c08, align 4
  store i32 %v3_10001c08, i32* %r29.global-to-local, align 4
  %v0_10001c0c = load i32, i32* @r1, align 4
  %v1_10001c0c = add i32 %v0_10001c0c, 20808
  %v2_10001c0c = inttoptr i32 %v1_10001c0c to i32*
  %v3_10001c0c = load i32, i32* %v2_10001c0c, align 4
  store i32 %v3_10001c0c, i32* %r0.global-to-local, align 4
  %v0_10001c10 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c10 = add i32 %v0_10001c10, %v4_10001c04
  %v1_10001c14 = mul i32 %v3_10001c08, 128
  %v1_10001c18 = add i32 %v2_10001c10, 2111
  store i32 %v1_10001c18, i32* %r28.global-to-local, align 4
  %v2_10001c1c = add i32 %v3_10001c0c, %v1_10001c14
  store i32 %v2_10001c1c, i32* %r29.global-to-local, align 4
  %v0_10001c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001c20 = trunc i32 %v0_10001c20 to i8
  %v3_10001c20 = add i32 %v2_10001c10, 2115
  %v4_10001c20 = inttoptr i32 %v3_10001c20 to i8*
  store i8 %v1_10001c20, i8* %v4_10001c20, align 1
  %v0_10001c24 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c24, i32* %r3.global-to-local, align 4
  store i32 268442668, i32* @lr, align 4
  %v1_10001c28 = inttoptr i32 %v0_10001c24 to i8*
  %v2_10001c28 = call i32 @function_10009f10(i8* %v1_10001c28)
  %v0_10001c2c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c2c, i32* %r4.global-to-local, align 4
  %v0_10001c30 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c30 = add i32 %v0_10001c30, %v2_10001c28
  store i32 %v2_10001c30, i32* @r3, align 4
  store i32 268442680, i32* %lr.global-to-local, align 4
  %v2_10001c34 = inttoptr i32 %v2_10001c30 to i8*
  %v3_10001c34 = call i32 @function_10009f38(i8* %v2_10001c34, i32 %v0_10001c2c)
  store i32 %v3_10001c34, i32* %r3.global-to-local, align 4
  %v0_10001c38 = load i32, i32* @r30, align 4
  %v1_10001c38 = add i32 %v0_10001c38, 935
  %v2_10001c38 = inttoptr i32 %v1_10001c38 to i32*
  %v3_10001c38 = load i32, i32* %v2_10001c38, align 4
  %v1_10001c3c = add i32 %v3_10001c38, 1
  store i32 %v1_10001c3c, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c3c, i32* %v2_10001c38, align 4
  br label %dec_label_pc_100019ac

dec_label_pc_10001c70:                            ; preds = %dec_label_pc_10000578
  %v0_10001c70 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c70, i32* @r3, align 4
  %v0_10001c74 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001c74 = add i32 %v0_10001c74, 1
  store i32 %v1_10001c74, i32* %r28.global-to-local, align 4
  %v0_10001c78 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c78, i32* %r4.global-to-local, align 4
  %v0_10001c7c = load i32, i32* @r31, align 4
  %v1_10001c7c = add i32 %v0_10001c7c, 3140
  store i32 %v1_10001c7c, i32* @r31, align 4
  store i32 268442756, i32* %lr.global-to-local, align 4
  %v2_10001c80 = inttoptr i32 %v0_10001c70 to i8*
  %v3_10001c80 = call i32 @function_10009f38(i8* %v2_10001c80, i32 %v0_10001c78)
  store i32 %v3_10001c80, i32* %r3.global-to-local, align 4
  %v0_10001c84 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001c84 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c84 = icmp slt i32 %v0_10001c84, %v1_10001c84
  %v3_10001c84 = icmp sgt i32 %v0_10001c84, %v1_10001c84
  %v4_10001c84 = icmp eq i32 %v0_10001c84, %v1_10001c84
  store i1 %v2_10001c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c84, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001c84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c84, label %dec_label_pc_10001c8c, label %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge

dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge: ; preds = %dec_label_pc_10001c70
  %v2_100004d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c70
  %v0_10001c8c = load i32, i32* @r1, align 4
  %v1_10001c8c = add i32 %v0_10001c8c, 20804
  %v2_10001c8c = inttoptr i32 %v1_10001c8c to i32*
  %v3_10001c8c = load i32, i32* %v2_10001c8c, align 4
  store i32 %v3_10001c8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

; uselistorder directives
  uselistorder i32 %v3_10001c8c, { 1, 0 }
  uselistorder i32 %v0_10001c8c, { 1, 0 }
  uselistorder i32 %v1_10001c84, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10001b94, { 2, 1, 0, 3 }
  uselistorder i8 %v4_10001b60, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v2_10001b5c, { 1, 2, 0 }
  uselistorder i1 %v3_10001b4c, { 1, 0 }
  uselistorder i32 %v0_10001b3c, { 1, 0 }
  uselistorder i1 %v3_10001b38, { 1, 0 }
  uselistorder i32 %v3_10001b0c, { 1, 0 }
  uselistorder i32 %v0_10001b14, { 2, 0, 1 }
  uselistorder i32 %v2_10001acc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001aa8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a84, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a74, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001a4c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a34, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100019dc, { 1, 0, 2 }
  uselistorder i32 %v0_100019d0, { 1, 0 }
  uselistorder i32 %v3_10001994, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001978, { 1, 0, 2 }
  uselistorder i32 %v4_1000196c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001928, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100018cc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_100018a8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001884, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001874, { 0, 3, 2, 1, 4 }
  uselistorder i8 %v4_10001864, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_1000185c, { 0, 2, 1 }
  uselistorder i1 %v3_1000184c, { 1, 0 }
  uselistorder i1 %v3_10001838, { 1, 0 }
  uselistorder i32 %v0_10001814, { 2, 0, 1 }
  uselistorder i32 %v2_100017ec, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100017a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001740, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10001714, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100016f0, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100016d8, { 1, 0 }
  uselistorder i32 %v0_100016d8, { 1, 0 }
  uselistorder i32 %v3_100019cc, { 2, 0, 3, 1 }
  uselistorder i32 %v5_100016a0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001674, { 2, 1, 0 }
  uselistorder i32 %v0_10001674, { 1, 0 }
  uselistorder i32 %v0_10001658, { 1, 0 }
  uselistorder i32 %v1_10001648, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_1000163c, { 0, 2, 1 }
  uselistorder i32 %v1_10001624, { 1, 2, 3, 0 }
  uselistorder i32 %v5_100015e4, { 0, 1, 5, 4, 3, 2, 6, 9, 8, 7, 10 }
  uselistorder i32 %v3_100015d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1000158c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000154c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001538, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_100014a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001488, { 1, 0 }
  uselistorder i32 %v5_1000146c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10001454, { 1, 0 }
  uselistorder i32 %v4_10001448, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001400, { 1, 2, 0 }
  uselistorder i32 %v0_100013d0, { 1, 0 }
  uselistorder i32 %v3_100013bc, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1000139c, { 6, 5, 4, 7, 3, 0, 2, 1 }
  uselistorder i32* %v2_1000139c, { 1, 0 }
  uselistorder i32 %v0_1000139c, { 1, 0 }
  uselistorder i32 %v3_10001388, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10001370, { 1, 2, 0 }
  uselistorder i32 %v0_10001364, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10001354, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000145c, { 0, 2, 1 }
  uselistorder i32 %v3_10001344, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000133c, { 2, 1, 0 }
  uselistorder i32 %v1_10001308, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100012a4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000125c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000124c, { 0, 2, 1 }
  uselistorder i32 %v4_1000123c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001214, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_10001210, { 2, 1, 0, 3 }
  uselistorder i32 %v5_100011cc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100011ac, { 1, 0 }
  uselistorder i32 %v5_1000118c, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10001178, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10001134, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001110, { 2, 1, 0, 3 }
  uselistorder i1 %v3_100010c0, { 0, 2, 1 }
  uselistorder i32 %v3_100010d8, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %v2_100010d8, { 0, 2, 1 }
  uselistorder i32 %v2_100010d4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_1000107c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v5_10001044, { 5, 0, 4, 3, 2, 1, 8, 7, 6, 9 }
  uselistorder i32 %v0_10001010, { 0, 2, 1 }
  uselistorder i32 %v4_1000100c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000fe8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000fdc, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000f84, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000f70, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000f2c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000f00, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000eb8, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000ea4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000e60, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000e2c, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000de4, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000d8c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d58, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d2c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100017d4, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v5_10000ce8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000cc4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10000c98, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000c84, { 1, 0 }
  uselistorder i32 %v1_10000c6c, { 1, 0 }
  uselistorder i32 %v2_10000c5c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10000c54, { 1, 0 }
  uselistorder i32 %v1_10000c34, { 1, 0 }
  uselistorder i32 %v2_10000c20, { 1, 0, 3, 4, 5, 2 }
  uselistorder i32 %v3_10000bf4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000b90, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b8c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000b3c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b18, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000089c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000870, { 1, 0 }
  uselistorder i32 %v1_10000858, { 2, 1, 0 }
  uselistorder i32 %v1_10000848, { 1, 0 }
  uselistorder i32 %v3_10000838, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000824, { 2, 1, 0, 3 }
  uselistorder i1 %v3_1000081c, { 1, 0 }
  uselistorder i1 %v3_10000814, { 1, 0 }
  uselistorder i32 %v1_10000800, { 1, 0 }
  uselistorder i32 %v1_100007f0, { 1, 0 }
  uselistorder i32 %v0_100007b4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %v1_10000784, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000768, { 1, 0 }
  uselistorder i32 %v2_10000758, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_100006cc, { 1, 0, 4, 3, 2, 5 }
  uselistorder i8 %v3_10000688, { 14, 15, 16, 17, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_10000688, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10000c8c, { 5, 6, 2, 3, 0, 1, 7, 4 }
  uselistorder i32 %v1_10000678, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10000660, { 1, 0 }
  uselistorder i1 %v3_10000658, { 1, 0 }
  uselistorder i1 %v3_10000650, { 1, 0 }
  uselistorder i1 %v3_10000648, { 1, 0 }
  uselistorder i1 %v3_10000640, { 1, 0 }
  uselistorder i32 %v1_1000060c, { 1, 0 }
  uselistorder i32 %v1_100005ec, { 1, 0 }
  uselistorder i32 %v1_100005a0, { 1, 0 }
  uselistorder i32 %v3_10000590, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10000440., { 1, 2, 0 }
  uselistorder i32 %v1_10000418, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10000404, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10000400, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003e8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003d8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000038c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 14, 15 }
  uselistorder i32 %v2_10000368, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1000035c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10000238, { 1, 0 }
  uselistorder i32 %v2_10000214, { 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 0, 11, 12 }
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 72, 73, 74, 76, 75, 77, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 68, 69, 70, 71, 45, 46, 47, 48, 51, 52, 49, 50, 53, 54, 55, 56, 57, 59, 58, 1, 61, 60, 0, 62, 63, 64, 65, 66, 67 }
  uselistorder i32* %r4.global-to-local, { 138, 139, 140, 141, 142, 144, 145, 143, 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63, 65, 64, 66, 67, 68, 69, 70, 72, 71, 73, 74, 75, 76, 77, 79, 78, 81, 80, 83, 82, 84, 85, 86, 130, 131, 132, 133, 134, 135, 136, 137, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 126, 125, 128, 127, 129, 146 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 22, 23, 24, 25, 26, 6, 7, 8, 9, 10, 13, 11, 12, 3, 0, 14, 2, 15, 16, 17, 18, 19, 1, 20, 21, 27, 28, 29, 30, 31 }
  uselistorder i32* %r3.global-to-local, { 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 312, 313, 314, 315, 12, 13, 14, 15, 16, 307, 308, 309, 310, 311, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 57, 11, 10, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 1, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 7, 282, 283, 9, 284, 285, 8, 286, 287, 289, 288, 290, 291, 292, 293, 294, 295, 187, 188, 190, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 229, 232, 233, 234, 235, 4, 236, 2, 237, 3, 239, 238, 240, 241, 5, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 6, 252, 254, 253, 255, 257, 256, 258, 259, 260, 261, 262, 264, 263, 265, 266, 267, 268, 269, 270, 273, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 316, 317, 0 }
  uselistorder i32* %r29.global-to-local, { 94, 95, 96, 97, 98, 99, 100, 27, 15, 35, 36, 37, 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 38, 39, 40, 41, 42, 45, 43, 44, 46, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 83, 29, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 51, 47, 48, 49, 50, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 92, 93, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r28.global-to-local, { 39, 40, 38, 41, 42, 43, 44, 45, 0, 1, 6, 2, 3, 4, 5, 21, 22, 23, 9, 10, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 25, 27, 28, 37, 29, 30, 32, 33, 31, 35, 34, 36 }
  uselistorder i32* %r27.global-to-local, { 27, 30, 29, 31, 15, 1, 4, 5, 0, 2, 20, 6, 8, 7, 9, 10, 11, 12, 3, 13, 14, 16, 17, 18, 19, 22, 21, 23, 25, 24, 26, 28 }
  uselistorder i32* %r26.global-to-local, { 1, 3, 0, 2, 4, 5, 6, 7, 9, 8, 12, 10, 11, 13, 14, 18, 15, 19, 16, 20, 17, 21, 23, 24, 22, 25, 26 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 13, 12, 15, 14, 16, 11, 17 }
  uselistorder i32* %r24.global-to-local, { 35, 3, 5, 6, 7, 8, 0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39 }
  uselistorder i32* %r23.global-to-local, { 13, 14, 2, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11, 16, 17, 0, 12, 15, 18, 19, 21, 22, 20, 23 }
  uselistorder i32* %r22.global-to-local, { 45, 44, 46, 47, 48, 1, 49, 53, 50, 52, 51, 0, 54, 3, 2, 6, 4, 5, 7, 9, 8, 11, 10, 13, 12, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 55, 57, 56, 58 }
  uselistorder i32* %r21.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r20.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32 }
  uselistorder i32* %r19.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20 }
  uselistorder i32* %r15.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 46, 47, 48, 49, 50, 51, 52, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 44, 45, 31, 30, 32, 33, 34, 35, 1, 36, 0, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32* %r0.global-to-local, { 109, 110, 111, 112, 113, 114, 116, 115, 0, 1, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 40, 41, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 108, 70, 72, 71, 73, 76, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118 }
  uselistorder i32* %lr.global-to-local, { 106, 107, 108, 109, 110, 112, 111, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 99, 100, 101, 102, 103, 104, 105, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 113, 114 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 1, 4, 5, 7, 6, 0, 8, 9, 10 }
  uselistorder i1* %cr7_lt.global-to-local, { 123, 124, 126, 125, 127, 130, 131, 1, 2, 128, 129, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 120, 121, 122, 88, 89, 94, 93, 90, 91, 92, 95, 96, 97, 98, 99, 100, 107, 108, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119 }
  uselistorder i1* %cr7_gt.global-to-local, { 123, 124, 126, 125, 127, 130, 131, 1, 2, 128, 129, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 120, 121, 122, 88, 89, 94, 93, 90, 91, 92, 95, 96, 97, 98, 99, 100, 107, 108, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119 }
  uselistorder i1* %cr7_eq.global-to-local, { 125, 126, 128, 127, 129, 132, 133, 1, 2, 130, 131, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 122, 123, 124, 90, 91, 96, 95, 92, 93, 94, 97, 98, 99, 100, 101, 102, 109, 110, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268441368, { 1, 0 }
  uselistorder i8 34, { 3, 4, 5, 0, 1, 2, 6, 7, 8 }
  uselistorder i32 1579, { 0, 1, 2, 3, 5, 6, 7, 8, 9, 4, 10, 11, 12, 13 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1000d210.40 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000d20c.39 to i32), { 1, 0, 2 }
  uselistorder i32 931, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009fdc, { 0, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 10240, { 2, 0, 1, 3, 4 }
  uselistorder i8 7, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1000d1e0.24 to i32), { 0, 8, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11 }
  uselistorder i32 3140, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 43, { 0, 2, 1, 3 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000d1ec.7 to i32), { 1, 2, 0 }
  uselistorder i32 268435604, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001a9c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100019dc, { 1, 0 }
  uselistorder label %dec_label_pc_100019ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000189c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001810, { 1, 0 }
  uselistorder label %dec_label_pc_100017bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001758, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001708, { 1, 0 }
  uselistorder label %dec_label_pc_100016e4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10001680, { 1, 0 }
  uselistorder label %dec_label_pc_10001658, { 1, 0 }
  uselistorder label %dec_label_pc_10001600, { 1, 0 }
  uselistorder label %dec_label_pc_10001558, { 1, 0 }
  uselistorder label %dec_label_pc_100014d0, { 1, 0 }
  uselistorder label %dec_label_pc_10001364, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000133c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100011f0, { 1, 0 }
  uselistorder label %dec_label_pc_100011e4, { 2, 3, 1, 7, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_100011a4, { 1, 0 }
  uselistorder label %dec_label_pc_100010f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100010d0, { 1, 0 }
  uselistorder label %dec_label_pc_100010a0, { 1, 0 }
  uselistorder label %dec_label_pc_10001064, { 1, 0 }
  uselistorder label %dec_label_pc_10001024, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10000fbc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10000f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000f14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10000e40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10000d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000be8, { 1, 0 }
  uselistorder label %dec_label_pc_10000bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000b50, { 1, 0 }
  uselistorder label %dec_label_pc_10000b18, { 1, 0 }
  uselistorder label %dec_label_pc_100008b0, { 1, 0 }
  uselistorder label %dec_label_pc_10000824, { 15, 7, 2, 8, 0, 3, 9, 10, 11, 12, 13, 1, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_100007ec, { 1, 0 }
  uselistorder label %dec_label_pc_100006c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000069c, { 1, 0 }
  uselistorder label %dec_label_pc_10000678, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005c4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_100005c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100005b4, { 1, 0 }
  uselistorder label %dec_label_pc_10000578, { 1, 0 }
  uselistorder label %dec_label_pc_10000530, { 1, 0 }
  uselistorder label %dec_label_pc_10000430, { 1, 0 }
}

define i32 @function_10001d50(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001d50:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10001d5c = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10001d5c)
  %v1_10001d60 = add i32 %tmp, 4
  %v2_10001d60 = inttoptr i32 %v1_10001d60 to i8*
  %v3_10001d60 = load i8, i8* %v2_10001d60, align 1
  %v4_10001d60 = zext i8 %v3_10001d60 to i32
  %v4_10001d68 = icmp eq i32 %v4_10001d60, %arg3
  br i1 %v4_10001d68, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84.preheader

dec_label_pc_10001d84.preheader:                  ; preds = %dec_label_pc_10001d50
  %v0_10001d88.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001d84

dec_label_pc_10001d74:                            ; preds = %dec_label_pc_10001d84
  %v1_10001d74 = add i32 %v0_10001d74.in, 12
  %v2_10001d74 = inttoptr i32 %v1_10001d74 to i8*
  %v3_10001d74 = load i8, i8* %v2_10001d74, align 1
  %v4_10001d74 = zext i8 %v3_10001d74 to i32
  %v4_10001d7c = icmp eq i32 %v4_10001d74, %arg3
  br i1 %v4_10001d7c, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84

dec_label_pc_10001d84:                            ; preds = %dec_label_pc_10001d84.preheader, %dec_label_pc_10001d74
  %v0_10001d88 = phi i32 [ %v0_10001d88.pre, %dec_label_pc_10001d84.preheader ], [ %v1_10001d88, %dec_label_pc_10001d74 ]
  %v0_10001d74.in = phi i32 [ %tmp, %dec_label_pc_10001d84.preheader ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v0_10001d74 = add i32 %v0_10001d74.in, 8
  %v1_10001d88 = add i32 %v0_10001d88, -1
  store i32 %v1_10001d88, i32* %ctr.global-to-local, align 4
  %v2_10001d88 = icmp eq i32 %v1_10001d88, 0
  br i1 %v2_10001d88, label %dec_label_pc_10001d8c, label %dec_label_pc_10001d74

dec_label_pc_10001d8c:                            ; preds = %dec_label_pc_10001d84
  ret i32 %arg4

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d74, %dec_label_pc_10001d50
  %v0_10001d90 = phi i32 [ %tmp, %dec_label_pc_10001d50 ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v1_10001d90 = inttoptr i32 %v0_10001d90 to i32*
  %v2_10001d90 = load i32, i32* %v1_10001d90, align 4
  ret i32 %v2_10001d90

; uselistorder directives
  uselistorder i32 %v1_10001d88, { 2, 1, 0 }
  uselistorder i32 %v0_10001d74.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001d84, { 1, 0 }
}

define i32 @function_10001d98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10001d98:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268443096, i32* @lr, align 4
  %v0_10001dd4 = call i32 @function_1000a7e4()
  %v3_10001dd8 = icmp eq i32 %v0_10001dd4, -1
  br i1 %v3_10001dd8, label %dec_label_pc_10001de8, label %dec_label_pc_10001de0

dec_label_pc_10001de0:                            ; preds = %dec_label_pc_10001d98
  %tmp14 = icmp slt i32 %v0_10001dd4, 1
  br i1 %tmp14, label %dec_label_pc_10001e10, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001de0, %dec_label_pc_10001d98
  ret i32 %v0_10001dd4

dec_label_pc_10001e10:                            ; preds = %dec_label_pc_10001de0
  store i32 268443156, i32* @lr, align 4
  %v0_10001e10 = call i32 @function_1000a7e4()
  %v3_10001e14 = icmp eq i32 %v0_10001e10, -1
  br i1 %v3_10001e14, label %dec_label_pc_10001e38, label %dec_label_pc_10001e1c

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001e10
  %v3_10001e1c = icmp eq i32 %v0_10001e10, 0
  br i1 %v3_10001e1c, label %dec_label_pc_10001e24, label %dec_label_pc_10001e40

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001e1c
  %v0_10001e24 = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10001e2c.56 to i32), i32* @lr, align 4
  %v1_10001e28 = call i32 @function_1000c090(i32 %v0_10001e24)
  store i32 268443184, i32* @lr, align 4
  %v0_10001e2c = call i32 @function_1000a874()
  store i32 ptrtoint ([3 x i8]* @global_var_10001e38.57 to i32), i32* @lr, align 4
  %v2_10001e34 = call i32 @function_1000a8bc(i32 %v0_10001e2c, i32 9)
  br label %dec_label_pc_10001e38

dec_label_pc_10001e38:                            ; preds = %dec_label_pc_10001e70, %dec_label_pc_10001e40, %dec_label_pc_10001e10, %dec_label_pc_10001e8c, %dec_label_pc_10001e24
  %v0_10001e3c = call i32 @function_1000c00c()
  br label %dec_label_pc_10001e40

dec_label_pc_10001e40:                            ; preds = %dec_label_pc_10001e1c, %dec_label_pc_10001e38
  %v3_10001e44 = load i8, i8* @global_var_1001e184.58, align 1
  %v3_10001e48 = icmp eq i8 %v3_10001e44, 0
  br i1 %v3_10001e48, label %dec_label_pc_10001e38, label %dec_label_pc_10001e50

dec_label_pc_10001e50:                            ; preds = %dec_label_pc_10001e40
  %v4_10001e44 = zext i8 %v3_10001e44 to i32
  %v3_10001e58 = load i32, i32* @global_var_1001e188.59, align 4
  %v1_10001e60 = inttoptr i32 %v3_10001e58 to i32*
  %v2_10001e60 = load i32, i32* %v1_10001e60, align 4
  %v1_10001e64 = add i32 %v2_10001e60, 4
  %v2_10001e64 = inttoptr i32 %v1_10001e64 to i8*
  %v3_10001e64 = load i8, i8* %v2_10001e64, align 1
  %v4_10001e64 = zext i8 %v3_10001e64 to i32
  %v1_10001e68 = load i32, i32* @r30, align 4
  %v4_10001e68 = icmp eq i32 %v4_10001e64, %v1_10001e68
  br i1 %v4_10001e68, label %dec_label_pc_10001e8c, label %dec_label_pc_10001e70

dec_label_pc_10001e70:                            ; preds = %dec_label_pc_10001e50, %dec_label_pc_10001e78
  %v0_10001e74 = phi i32 [ %v1_10001e74, %dec_label_pc_10001e78 ], [ %v4_10001e44, %dec_label_pc_10001e50 ]
  %v0_10001e70 = phi i32 [ %v1_10001e70, %dec_label_pc_10001e78 ], [ 0, %dec_label_pc_10001e50 ]
  %v1_10001e70 = add i32 %v0_10001e70, 1
  %v1_10001e74 = add i32 %v0_10001e74, -1
  %v2_10001e74 = icmp eq i32 %v1_10001e74, 0
  br i1 %v2_10001e74, label %dec_label_pc_10001e38, label %dec_label_pc_10001e78

dec_label_pc_10001e78:                            ; preds = %dec_label_pc_10001e70
  %v1_10001e78 = mul i32 %v1_10001e70, 4
  %v2_10001e7c = add i32 %v1_10001e78, %v3_10001e58
  %v3_10001e7c = inttoptr i32 %v2_10001e7c to i32*
  %v4_10001e7c = load i32, i32* %v3_10001e7c, align 4
  %v1_10001e80 = add i32 %v4_10001e7c, 4
  %v2_10001e80 = inttoptr i32 %v1_10001e80 to i8*
  %v3_10001e80 = load i8, i8* %v2_10001e80, align 1
  %v4_10001e80 = zext i8 %v3_10001e80 to i32
  %v4_10001e84 = icmp eq i32 %v4_10001e80, %v1_10001e68
  br i1 %v4_10001e84, label %dec_label_pc_10001e8c, label %dec_label_pc_10001e70

dec_label_pc_10001e8c:                            ; preds = %dec_label_pc_10001e78, %dec_label_pc_10001e50
  %v0_10001e8c = phi i32 [ %v2_10001e60, %dec_label_pc_10001e50 ], [ %v4_10001e7c, %dec_label_pc_10001e78 ]
  %v1_10001e8c = inttoptr i32 %v0_10001e8c to i32*
  %v2_10001e8c = load i32, i32* %v1_10001e8c, align 4
  call void @__pseudo_call(i32 %v2_10001e8c)
  br label %dec_label_pc_10001e38

; uselistorder directives
  uselistorder i32 %v1_10001e74, { 1, 0 }
  uselistorder i8 %v3_10001e44, { 1, 0 }
  uselistorder i32 %v0_10001dd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001e70, { 1, 0 }
  uselistorder label %dec_label_pc_10001e40, { 1, 0 }
  uselistorder label %dec_label_pc_10001e38, { 3, 0, 1, 4, 2 }
}

define i32 @function_10001eac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10001eac:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001eac = call i32 @__asm_mfcr()
  store i32 %v0_10001eac, i32* %r3.global-to-local, align 4
  %v0_10001ebc = load i32, i32* @r30, align 4
  %v0_10001ec4 = load i32, i32* @r31, align 4
  %v0_10001edc = load i32, i32* @r24, align 4
  %v0_10001ee4 = load i32, i32* @r26, align 4
  %v0_10001ee8 = load i32, i32* @r27, align 4
  %v0_10001eec = load i32, i32* @r28, align 4
  %v0_10001ef0 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f00

dec_label_pc_10001f00:                            ; preds = %dec_label_pc_10001eac
  %v3_10001f00 = icmp eq i32 %arg2, 4
  %v1_10001f04 = inttoptr i32 %v0_10001eac to i32*
  %v2_10001f04 = load i32, i32* %v1_10001f04, align 4
  store i32 %v2_10001f04, i32* %r25.global-to-local, align 4
  br i1 %v3_10001f00, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f54

dec_label_pc_10001f0c:                            ; preds = %dec_label_pc_10001f00, %dec_label_pc_10002100, %dec_label_pc_10001f6c, %dec_label_pc_10001f60, %dec_label_pc_10001f54, %dec_label_pc_10001eac, %dec_label_pc_10002134
  %v1_10001f20 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10001eac)
  store i32 %v0_10001edc, i32* @r24, align 4
  store i32 %v0_10001ee4, i32* @r26, align 4
  store i32 %v0_10001ee8, i32* @r27, align 4
  store i32 %v0_10001eec, i32* @r28, align 4
  store i32 %v0_10001ef0, i32* @r29, align 4
  store i32 %v0_10001ebc, i32* @r30, align 4
  store i32 %v0_10001ec4, i32* @r31, align 4
  %v0_10001f50 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f50

dec_label_pc_10001f54:                            ; preds = %dec_label_pc_10001f00
  %v3_10001f54 = icmp eq i32 %arg2, 5
  %v1_10001f58 = add i32 %v0_10001eac, 4
  %v2_10001f58 = inttoptr i32 %v1_10001f58 to i8*
  %v3_10001f58 = load i8, i8* %v2_10001f58, align 1
  %v4_10001f58 = zext i8 %v3_10001f58 to i32
  store i32 %v4_10001f58, i32* %r22.global-to-local, align 4
  br i1 %v3_10001f54, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f60

dec_label_pc_10001f60:                            ; preds = %dec_label_pc_10001f54
  %v1_10001f60 = add i32 %v0_10001eac, 5
  %v2_10001f60 = inttoptr i32 %v1_10001f60 to i8*
  %v3_10001f60 = load i8, i8* %v2_10001f60, align 1
  %v4_10001f60 = zext i8 %v3_10001f60 to i32
  store i32 %v4_10001f60, i32* @r26, align 4
  %v3_10001f64 = icmp eq i8 %v3_10001f60, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001f64, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001f64, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f6c

dec_label_pc_10001f6c:                            ; preds = %dec_label_pc_10001f60
  %v1_10001f6c = mul nuw nsw i32 %v4_10001f60, 5
  store i32 %v1_10001f6c, i32* @r27, align 4
  %v1_10001f70 = add i32 %arg2, -6
  store i32 %v1_10001f70, i32* @r28, align 4
  %v2_10001f74 = icmp ult i32 %v1_10001f70, %v1_10001f6c
  br i1 %v2_10001f74, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f6c
  store i32 %v4_10001f60, i32* %r3.global-to-local, align 4
  store i32 268443528, i32* @lr, align 4
  %v2_10001f84 = call i32 @function_1000b8f4(i32 %v4_10001f60, i32 24)
  store i32 %v2_10001f84, i32* %r3.global-to-local, align 4
  %v0_10001f88 = load i32, i32* @r31, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 6
  store i32 %v1_10001f88, i32* @r29, align 4
  store i32 %v2_10001f84, i32* %r20.global-to-local, align 4
  %v0_10001f90 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001f90 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001f90 = or i1 %v0_10001f90, %v1_10001f90
  br i1 %v2_10001f90, label %dec_label_pc_10001fecthread-pre-split, label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001f7c
  %v0_10001f94 = load i32, i32* @r27, align 4
  store i32 %v2_10001f84, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_10001f94, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge, %dec_label_pc_10001f94
  %v2_10001fc8 = phi i32 [ %v1_10001fd8, %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge ], [ %v2_10001f84, %dec_label_pc_10001f94 ]
  %v0_10001fc4 = phi i32 [ %v0_10001fbc.pre, %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge ], [ %v1_10001f88, %dec_label_pc_10001f94 ]
  %v1_10001fbc = add i32 %v0_10001fc4, 4
  %v2_10001fbc = inttoptr i32 %v1_10001fbc to i8*
  %v3_10001fbc = load i8, i8* %v2_10001fbc, align 1
  %v1_10001fc0 = inttoptr i32 %v0_10001fc4 to i32*
  %v2_10001fc0 = load i32, i32* %v1_10001fc0, align 4
  store i32 %v2_10001fc0, i32* %r9.global-to-local, align 4
  %v1_10001fc4 = add i32 %v0_10001fc4, 5
  store i32 %v1_10001fc4, i32* @r29, align 4
  %v3_10001fc8 = add i32 %v2_10001fc8, 20
  %v4_10001fc8 = inttoptr i32 %v3_10001fc8 to i8*
  store i8 %v3_10001fbc, i8* %v4_10001fc8, align 1
  %v0_10001fcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, 4
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  store i32 %v0_10001fcc, i32* %v3_10001fcc, align 4
  %v0_10001fd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, 16
  %v3_10001fd0 = inttoptr i32 %v2_10001fd0 to i32*
  store i32 %v0_10001fd0, i32* %v3_10001fd0, align 4
  %v0_10001fd4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001fd4 = trunc i32 %v0_10001fd4 to i16
  %v2_10001fd4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fd4 = inttoptr i32 %v2_10001fd4 to i16*
  store i16 %v1_10001fd4, i16* %v3_10001fd4, align 2
  %v0_10001fd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001fd8 = add i32 %v0_10001fd8, 24
  store i32 %v1_10001fd8, i32* %r11.global-to-local, align 4
  %v0_10001fdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10001fdc = add i32 %v0_10001fdc, -1
  store i32 %v1_10001fdc, i32* %ctr.global-to-local, align 4
  %v2_10001fdc = icmp eq i32 %v1_10001fdc, 0
  br i1 %v2_10001fdc, label %dec_label_pc_10001fe0, label %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge

dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge: ; preds = %dec_label_pc_10001fbc
  %v0_10001fbc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fe0:                            ; preds = %dec_label_pc_10001fbc
  %v0_10001fe0 = load i32, i32* @r26, align 4
  %v1_10001fe0 = mul i32 %v0_10001fe0, -5
  %v0_10001fe4 = load i32, i32* @r30, align 4
  %v2_10001fe4 = add i32 %v0_10001fe4, %v1_10001fe0
  store i32 %v2_10001fe4, i32* %r9.global-to-local, align 4
  %v1_10001fe8 = add i32 %v2_10001fe4, -6
  store i32 %v1_10001fe8, i32* @r28, align 4
  br label %dec_label_pc_10001fec

dec_label_pc_10001fecthread-pre-split:            ; preds = %dec_label_pc_10001f7c
  %v0_10001fec.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_10001fec

dec_label_pc_10001fec:                            ; preds = %dec_label_pc_10001fecthread-pre-split, %dec_label_pc_10001fe0
  %v0_10001fec = phi i32 [ %v0_10001fec.pr, %dec_label_pc_10001fecthread-pre-split ], [ %v1_10001fe8, %dec_label_pc_10001fe0 ]
  %v3_10001fec = icmp eq i32 %v0_10001fec, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_10001fec, label %dec_label_pc_100020f0, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_10001fec
  %v0_10001ff8 = load i32, i32* @r29, align 4
  %v1_10001ff8 = inttoptr i32 %v0_10001ff8 to i8*
  %v2_10001ff8 = load i8, i8* %v1_10001ff8, align 1
  %v3_10001ff8 = zext i8 %v2_10001ff8 to i32
  store i32 %v3_10001ff8, i32* @r24, align 4
  %v3_10001ffc = icmp eq i8 %v2_10001ff8, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001ffc, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001ffc, label %dec_label_pc_100020c8, label %dec_label_pc_10002004

dec_label_pc_10002004:                            ; preds = %dec_label_pc_10001ff8
  store i32 %v3_10001ff8, i32* %r3.global-to-local, align 4
  store i32 268443664, i32* @lr, align 4
  %v2_1000200c = call i32 @function_1000b8f4(i32 %v3_10001ff8, i32 8)
  store i32 %v2_1000200c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000200c, i32* %r21.global-to-local, align 4
  %v0_10002014 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002014 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002014 = or i1 %v0_10002014, %v1_10002014
  br i1 %v2_10002014, label %dec_label_pc_100020c8, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_10002004
  %v0_10002018 = load i32, i32* @r28, align 4
  %v1_10002018 = add i32 %v0_10002018, -1
  %v4_10002018 = icmp eq i32 %v1_10002018, 0
  store i32 %v1_10002018, i32* %ctr.global-to-local, align 4
  br i1 %v4_10002018, label %dec_label_pc_100020f0, label %dec_label_pc_10002024

dec_label_pc_10002024:                            ; preds = %dec_label_pc_10002018
  %v0_10002024 = load i32, i32* @r29, align 4
  %v1_10002024 = add i32 %v0_10002024, 1
  %v2_10002024 = inttoptr i32 %v1_10002024 to i8*
  %v3_10002024 = load i8, i8* %v2_10002024, align 1
  store i32 %v1_10002024, i32* %r9.global-to-local, align 4
  %v3_1000202c = add i32 %v2_1000200c, 4
  %v4_1000202c = inttoptr i32 %v3_1000202c to i8*
  store i8 %v3_10002024, i8* %v4_1000202c, align 1
  %v0_10002030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002030 = add i32 %v0_10002030, -1
  store i32 %v1_10002030, i32* %ctr.global-to-local, align 4
  %v2_10002030 = icmp eq i32 %v1_10002030, 0
  br i1 %v2_10002030, label %dec_label_pc_100020f0, label %dec_label_pc_10002034

dec_label_pc_10002034:                            ; preds = %dec_label_pc_10002024
  store i32 %v1_10002030, i32* %r11.global-to-local, align 4
  %v0_10002038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002038 = add i32 %v0_10002038, 1
  %v2_10002038 = inttoptr i32 %v1_10002038 to i8*
  %v3_10002038 = load i8, i8* %v2_10002038, align 1
  %v4_10002038 = zext i8 %v3_10002038 to i32
  %v1_10002040 = add i32 %v0_10002030, -2
  store i32 %v1_10002040, i32* @r29, align 4
  %v2_10002044 = icmp slt i32 %v1_10002040, %v4_10002038
  br i1 %v2_10002044, label %dec_label_pc_100020f0, label %dec_label_pc_1000204c

dec_label_pc_1000204c:                            ; preds = %dec_label_pc_10002034
  %v1_1000204c = add i32 %v0_10002038, 2
  store i32 %v1_1000204c, i32* @r28, align 4
  %v0_10002050 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002050 = add i32 %v0_10002050, 8
  store i32 %v1_10002050, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10002094

dec_label_pc_10002060:                            ; preds = %dec_label_pc_10002094
  %v5_100020bc = icmp eq i32 %v2_100020bc, 0
  br i1 %v5_100020bc, label %dec_label_pc_100020f0, label %dec_label_pc_10002064

dec_label_pc_10002064:                            ; preds = %dec_label_pc_10002060
  %v1_10002064 = load i32, i32* @r28, align 4
  %v2_10002064 = add i32 %v1_10002064, %v0_100020bc
  %v3_10002064 = inttoptr i32 %v2_10002064 to i8*
  %v4_10002064 = load i8, i8* %v3_10002064, align 1
  store i32 %v2_10002064, i32* %r3.global-to-local, align 4
  %v1_1000206c = add i32 %v2_10002064, 1
  store i32 %v1_1000206c, i32* %r9.global-to-local, align 4
  %v2_10002070 = load i32, i32* @r30, align 4
  %v3_10002070 = add i32 %v2_10002070, 4
  %v4_10002070 = inttoptr i32 %v3_10002070 to i8*
  store i8 %v4_10002064, i8* %v4_10002070, align 1
  %v0_10002074 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002074 = add i32 %v0_10002074, -1
  %v4_10002074 = icmp eq i32 %v1_10002074, 0
  %v0_10002078 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002078 = add i32 %v0_10002078, 1
  store i32 %v1_10002078, i32* @r28, align 4
  br i1 %v4_10002074, label %dec_label_pc_100020f0, label %dec_label_pc_10002080

dec_label_pc_10002080:                            ; preds = %dec_label_pc_10002064
  %v0_10002080 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002080 = add i32 %v0_10002080, 1
  %v2_10002080 = inttoptr i32 %v1_10002080 to i8*
  %v3_10002080 = load i8, i8* %v2_10002080, align 1
  %v4_10002080 = zext i8 %v3_10002080 to i32
  store i32 %v1_10002074, i32* %r9.global-to-local, align 4
  %v1_10002088 = add i32 %v0_10002074, -2
  store i32 %v1_10002088, i32* @r29, align 4
  %v2_1000208c = icmp slt i32 %v1_10002088, %v4_10002080
  br i1 %v2_1000208c, label %dec_label_pc_100020f0, label %dec_label_pc_10002094

dec_label_pc_10002094:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_1000204c
  %v0_10002098 = phi i32 [ %v4_10002080, %dec_label_pc_10002080 ], [ %v4_10002038, %dec_label_pc_1000204c ]
  %v1_10002098 = add nuw nsw i32 %v0_10002098, 1
  store i32 %v1_10002098, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100020a0.60 to i32), i32* @lr, align 4
  %v2_1000209c = call i32 @function_1000b8f4(i32 %v1_10002098, i32 1)
  store i32 %v2_1000209c, i32* %r3.global-to-local, align 4
  %v0_100020a0 = load i32, i32* @r27, align 4
  %v1_100020a0 = add i32 %v0_100020a0, 1
  store i32 %v1_100020a0, i32* @r27, align 4
  %v1_100020a4 = load i32, i32* @r30, align 4
  %v2_100020a4 = inttoptr i32 %v1_100020a4 to i32*
  store i32 %v2_1000209c, i32* %v2_100020a4, align 4
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v0_100020ac = load i32, i32* @r31, align 4
  %v0_100020b0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100020b0, i32* @r30, align 4
  store i32 268443832, i32* @lr, align 4
  %v3_100020b4 = call i32 @function_10009f94(i32 %v2_1000209c, i32 %v0_100020a8, i32 %v0_100020ac)
  store i32 %v3_100020b4, i32* %r3.global-to-local, align 4
  %v0_100020b8 = load i32, i32* @r27, align 4
  %v1_100020b8 = load i32, i32* @r24, align 4
  %v4_100020b8 = icmp eq i32 %v0_100020b8, %v1_100020b8
  %v0_100020bc = load i32, i32* @r31, align 4
  %v1_100020bc = load i32, i32* @r29, align 4
  %v2_100020bc = sub i32 %v1_100020bc, %v0_100020bc
  store i32 %v2_100020bc, i32* %r11.global-to-local, align 4
  %v0_100020c0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100020c0 = add i32 %v0_100020c0, 8
  store i32 %v1_100020c0, i32* %r23.global-to-local, align 4
  br i1 %v4_100020b8, label %dec_label_pc_100020c8, label %dec_label_pc_10002060

dec_label_pc_100020c8:                            ; preds = %dec_label_pc_10002094, %dec_label_pc_10002004, %dec_label_pc_10001ff8
  %v0_100020c8 = call i32 @function_1000aeb8()
  %v2_100020d0 = inttoptr i32 %v0_100020c8 to i32*
  store i32 0, i32* %v2_100020d0, align 4
  %v0_100020d4 = load i32, i32* %r22.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  %v0_100020dc = load i32, i32* @r26, align 4
  %v0_100020e0 = load i32, i32* %r20.global-to-local, align 4
  %v0_100020e4 = load i32, i32* @r24, align 4
  %v0_100020e8 = load i32, i32* %r21.global-to-local, align 4
  store i32 268443888, i32* @lr, align 4
  %v6_100020ec = call i32 @function_10001d98(i32 %v0_100020d8, i32 %v0_100020d4, i32 %v0_100020dc, i32 %v0_100020e0, i32 %v0_100020e4, i32 %v0_100020e8)
  store i32 %v6_100020ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_10002064, %dec_label_pc_10002060, %dec_label_pc_10002034, %dec_label_pc_10002024, %dec_label_pc_10002018, %dec_label_pc_10001fec, %dec_label_pc_100020c8
  %v0_100020f0 = load i32, i32* %r20.global-to-local, align 4
  %v3_100020f0 = icmp eq i32 %v0_100020f0, 0
  br i1 %v3_100020f0, label %dec_label_pc_10002100, label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_100020f0
  store i32 %v0_100020f0, i32* @r3, align 4
  store i32 268443904, i32* @lr, align 4
  %v0_100020fc = call i32 @function_1000b964()
  store i32 %v0_100020fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_100020f0, %dec_label_pc_100020f8
  %v0_10002100 = load i32, i32* %r21.global-to-local, align 4
  %v3_10002100 = icmp eq i32 %v0_10002100, 0
  br i1 %v3_10002100, label %dec_label_pc_10001f0c, label %dec_label_pc_10002108

dec_label_pc_10002108:                            ; preds = %dec_label_pc_10002100
  %v0_10002108 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_10002108, 1
  br i1 %tmp27, label %dec_label_pc_10002134, label %dec_label_pc_10002110

dec_label_pc_10002110:                            ; preds = %dec_label_pc_10002108
  br label %dec_label_pc_10002114

dec_label_pc_10002114:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002110
  %v0_1000212c6 = phi i32 [ %v0_10002108, %dec_label_pc_10002110 ], [ %v0_1000212c, %dec_label_pc_1000212c ]
  %v0_1000211c = phi i32 [ %v0_10002100, %dec_label_pc_10002110 ], [ %v0_10002134.pre, %dec_label_pc_1000212c ]
  %v0_10002114 = phi i32 [ 0, %dec_label_pc_10002110 ], [ %v1_1000212c, %dec_label_pc_1000212c ]
  %v1_10002114 = mul i32 %v0_10002114, 8
  %v1_10002118 = add i32 %v0_10002114, 1
  store i32 %v1_10002118, i32* @r31, align 4
  %v2_1000211c = add i32 %v1_10002114, %v0_1000211c
  %v3_1000211c = inttoptr i32 %v2_1000211c to i32*
  %v4_1000211c = load i32, i32* %v3_1000211c, align 4
  store i32 %v4_1000211c, i32* @r3, align 4
  %v3_10002120 = icmp eq i32 %v4_1000211c, 0
  br i1 %v3_10002120, label %dec_label_pc_1000212c, label %dec_label_pc_10002128

dec_label_pc_10002128:                            ; preds = %dec_label_pc_10002114
  store i32 268443948, i32* @lr, align 4
  %v0_10002128 = call i32 @function_1000b964()
  store i32 %v0_10002128, i32* %r3.global-to-local, align 4
  %v0_1000212c.pre = load i32, i32* @r24, align 4
  %v1_1000212c.pre = load i32, i32* @r31, align 4
  %v0_10002134.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_1000212c

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_10002114, %dec_label_pc_10002128
  %v0_10002134.pre = phi i32 [ %v0_1000211c, %dec_label_pc_10002114 ], [ %v0_10002134.pre.pre, %dec_label_pc_10002128 ]
  %v1_1000212c = phi i32 [ %v1_10002118, %dec_label_pc_10002114 ], [ %v1_1000212c.pre, %dec_label_pc_10002128 ]
  %v0_1000212c = phi i32 [ %v0_1000212c6, %dec_label_pc_10002114 ], [ %v0_1000212c.pre, %dec_label_pc_10002128 ]
  %v4_1000212c = icmp eq i32 %v0_1000212c, %v1_1000212c
  br i1 %v4_1000212c, label %dec_label_pc_10002134, label %dec_label_pc_10002114

dec_label_pc_10002134:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002108
  %v0_10002134 = phi i32 [ %v0_10002100, %dec_label_pc_10002108 ], [ %v0_10002134.pre, %dec_label_pc_1000212c ]
  store i32 %v0_10002134, i32* @r3, align 4
  store i32 268443964, i32* @lr, align 4
  %v0_10002138 = call i32 @function_1000b964()
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f0c

; uselistorder directives
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_1000212c, { 1, 0 }
  uselistorder i32 %v0_10002114, { 1, 0 }
  uselistorder i32 %v2_100020bc, { 1, 0 }
  uselistorder i32 %v0_100020bc, { 1, 0 }
  uselistorder i32 %v2_10002064, { 1, 0, 2 }
  uselistorder i32 %v1_10002030, { 0, 2, 1 }
  uselistorder i32 %v3_10001ff8, { 1, 0, 2 }
  uselistorder i32 %v1_10001fdc, { 1, 0 }
  uselistorder i32 %v1_10001fd8, { 1, 0 }
  uselistorder i32 %v0_10001fc4, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10001f60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10001eac, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 6, 5, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 3, 1, 2, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000212c, { 1, 0 }
  uselistorder label %dec_label_pc_10002100, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10001f0c, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10002140(i32 %arg1) local_unnamed_addr {
dec_label_pc_10002140:
  store i32 268566528, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001e20c.62 to i32), i32* @r31, align 4
  %v3_1000215c = load i32, i32* @global_var_1001e20c.62, align 4
  %v3_10002164 = icmp eq i32 %v3_1000215c, 0
  br i1 %v3_10002164, label %dec_label_pc_1000216c, label %dec_label_pc_10002204

dec_label_pc_1000216c:                            ; preds = %dec_label_pc_10002140
  %v3_1000216c = load i32, i32* @global_var_1001e210.63, align 4
  store i32 0, i32* @r29, align 4
  store i32 0, i32* @global_var_1001e20c.62, align 4
  %v3_10002178 = icmp eq i32 %v3_1000216c, 0
  br i1 %v3_10002178, label %dec_label_pc_10002180, label %dec_label_pc_10002220

dec_label_pc_10002180:                            ; preds = %dec_label_pc_1000216c, %dec_label_pc_10002204
  %v0_10002184 = phi i32 [ 0, %dec_label_pc_1000216c ], [ %v0_10002214, %dec_label_pc_10002204 ]
  %v3_10002180 = load i32, i32* @global_var_1001e214.64, align 4
  store i32 %v0_10002184, i32* @global_var_1001e210.63, align 4
  %v3_10002188 = icmp eq i32 %v3_10002180, 0
  br i1 %v3_10002188, label %dec_label_pc_10002190, label %dec_label_pc_10002238

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10002180, %dec_label_pc_10002220
  %v0_10002194 = phi i32 [ %v0_10002184, %dec_label_pc_10002180 ], [ %v0_1000222c, %dec_label_pc_10002220 ]
  %v3_10002190 = load i32, i32* @global_var_1001e218.65, align 4
  store i32 %v0_10002194, i32* @global_var_1001e214.64, align 4
  %v3_10002198 = icmp eq i32 %v3_10002190, 0
  br i1 %v3_10002198, label %dec_label_pc_100021a0, label %dec_label_pc_10002250

dec_label_pc_100021a0:                            ; preds = %dec_label_pc_10002190, %dec_label_pc_10002238
  %v0_100021a4 = phi i32 [ %v0_10002194, %dec_label_pc_10002190 ], [ %v0_10002244, %dec_label_pc_10002238 ]
  %v3_100021a0 = load i32, i32* @global_var_1001e21c.66, align 4
  store i32 %v0_100021a4, i32* @global_var_1001e218.65, align 4
  %v3_100021a8 = icmp eq i32 %v3_100021a0, 0
  br i1 %v3_100021a8, label %dec_label_pc_100021b0, label %dec_label_pc_10002268

dec_label_pc_100021b0:                            ; preds = %dec_label_pc_100021a0, %dec_label_pc_10002250
  %v0_100021b4 = phi i32 [ %v0_100021a4, %dec_label_pc_100021a0 ], [ %v0_1000225c, %dec_label_pc_10002250 ]
  %v3_100021b0 = load i32, i32* @global_var_1001e220.67, align 4
  store i32 %v0_100021b4, i32* @global_var_1001e21c.66, align 4
  %v3_100021b8 = icmp eq i32 %v3_100021b0, 0
  br i1 %v3_100021b8, label %dec_label_pc_100021c0, label %dec_label_pc_10002280

dec_label_pc_100021c0:                            ; preds = %dec_label_pc_100021b0, %dec_label_pc_10002268
  %v0_100021c4 = phi i32 [ %v0_100021b4, %dec_label_pc_100021b0 ], [ %v0_10002274, %dec_label_pc_10002268 ]
  %v3_100021c0 = load i32, i32* @global_var_1001e224.68, align 4
  store i32 %v0_100021c4, i32* @global_var_1001e220.67, align 4
  %v3_100021c8 = icmp eq i32 %v3_100021c0, 0
  br i1 %v3_100021c8, label %dec_label_pc_100021d0, label %dec_label_pc_10002298

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_100021c0, %dec_label_pc_10002280
  %v0_100021d4 = phi i32 [ %v0_100021c4, %dec_label_pc_100021c0 ], [ %v0_1000228c, %dec_label_pc_10002280 ]
  %v3_100021d0 = load i32, i32* @global_var_1001e228.69, align 4
  store i32 %v0_100021d4, i32* @global_var_1001e224.68, align 4
  %v3_100021d8 = icmp eq i32 %v3_100021d0, 0
  br i1 %v3_100021d8, label %dec_label_pc_100021e0, label %dec_label_pc_100022b0

dec_label_pc_100021e0:                            ; preds = %dec_label_pc_100021d0, %dec_label_pc_10002298
  %v0_100021e0 = phi i32 [ %v0_100021d4, %dec_label_pc_100021d0 ], [ %v0_100022a4, %dec_label_pc_10002298 ]
  store i32 %v0_100021e0, i32* @global_var_1001e228.69, align 4
  store i32 268444136, i32* @lr, align 4
  %v0_100021e4 = call i32 @function_10007b04()
  ret i32 %v0_100021e4

dec_label_pc_10002204:                            ; preds = %dec_label_pc_10002140
  store i32 0, i32* @r29, align 4
  store i32 268444176, i32* @lr, align 4
  %v2_1000220c = call i32 @function_1000a8bc(i32 %v3_1000215c, i32 9)
  %v3_10002210 = load i32, i32* @global_var_1001e210.63, align 4
  %v0_10002214 = load i32, i32* @r29, align 4
  store i32 %v0_10002214, i32* @global_var_1001e20c.62, align 4
  %v3_10002218 = icmp eq i32 %v3_10002210, 0
  br i1 %v3_10002218, label %dec_label_pc_10002180, label %dec_label_pc_10002220

dec_label_pc_10002220:                            ; preds = %dec_label_pc_1000216c, %dec_label_pc_10002204
  store i32 268444200, i32* @lr, align 4
  %v2_10002224 = call i32 @function_1000a8bc(i32 9, i32 9)
  %v3_10002228 = load i32, i32* @global_var_1001e214.64, align 4
  %v0_1000222c = load i32, i32* @r29, align 4
  store i32 %v0_1000222c, i32* @global_var_1001e210.63, align 4
  %v3_10002230 = icmp eq i32 %v3_10002228, 0
  br i1 %v3_10002230, label %dec_label_pc_10002190, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_10002180, %dec_label_pc_10002220
  store i32 268444224, i32* @lr, align 4
  %v2_1000223c = call i32 @function_1000a8bc(i32 9, i32 9)
  %v3_10002240 = load i32, i32* @global_var_1001e218.65, align 4
  %v0_10002244 = load i32, i32* @r29, align 4
  store i32 %v0_10002244, i32* @global_var_1001e214.64, align 4
  %v3_10002248 = icmp eq i32 %v3_10002240, 0
  br i1 %v3_10002248, label %dec_label_pc_100021a0, label %dec_label_pc_10002250

dec_label_pc_10002250:                            ; preds = %dec_label_pc_10002190, %dec_label_pc_10002238
  store i32 268444248, i32* @lr, align 4
  %v2_10002254 = call i32 @function_1000a8bc(i32 9, i32 9)
  %v3_10002258 = load i32, i32* @global_var_1001e21c.66, align 4
  %v0_1000225c = load i32, i32* @r29, align 4
  store i32 %v0_1000225c, i32* @global_var_1001e218.65, align 4
  %v3_10002260 = icmp eq i32 %v3_10002258, 0
  br i1 %v3_10002260, label %dec_label_pc_100021b0, label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100021a0, %dec_label_pc_10002250
  store i32 268444272, i32* @lr, align 4
  %v2_1000226c = call i32 @function_1000a8bc(i32 9, i32 9)
  %v3_10002270 = load i32, i32* @global_var_1001e220.67, align 4
  %v0_10002274 = load i32, i32* @r29, align 4
  store i32 %v0_10002274, i32* @global_var_1001e21c.66, align 4
  %v3_10002278 = icmp eq i32 %v3_10002270, 0
  br i1 %v3_10002278, label %dec_label_pc_100021c0, label %dec_label_pc_10002280

dec_label_pc_10002280:                            ; preds = %dec_label_pc_100021b0, %dec_label_pc_10002268
  store i32 268444296, i32* @lr, align 4
  %v2_10002284 = call i32 @function_1000a8bc(i32 9, i32 9)
  %v3_10002288 = load i32, i32* @global_var_1001e224.68, align 4
  %v0_1000228c = load i32, i32* @r29, align 4
  store i32 %v0_1000228c, i32* @global_var_1001e220.67, align 4
  %v3_10002290 = icmp eq i32 %v3_10002288, 0
  br i1 %v3_10002290, label %dec_label_pc_100021d0, label %dec_label_pc_10002298

dec_label_pc_10002298:                            ; preds = %dec_label_pc_100021c0, %dec_label_pc_10002280
  store i32 268444320, i32* @lr, align 4
  %v2_1000229c = call i32 @function_1000a8bc(i32 9, i32 9)
  %v3_100022a0 = load i32, i32* @global_var_1001e228.69, align 4
  %v0_100022a4 = load i32, i32* @r29, align 4
  store i32 %v0_100022a4, i32* @global_var_1001e224.68, align 4
  %v3_100022a8 = icmp eq i32 %v3_100022a0, 0
  br i1 %v3_100022a8, label %dec_label_pc_100021e0, label %dec_label_pc_100022b0

dec_label_pc_100022b0:                            ; preds = %dec_label_pc_100021d0, %dec_label_pc_10002298
  store i32 268444344, i32* @lr, align 4
  %v2_100022b4 = call i32 @function_1000a8bc(i32 9, i32 9)
  %v0_100022b8 = load i32, i32* @r29, align 4
  store i32 %v0_100022b8, i32* @global_var_1001e228.69, align 4
  store i32 268444352, i32* @lr, align 4
  %v0_100022bc = call i32 @function_10007b04()
  ret i32 %v0_100022bc

; uselistorder directives
  uselistorder i32 %v0_100022a4, { 1, 0 }
  uselistorder i32 %v0_1000228c, { 1, 0 }
  uselistorder i32 %v0_10002274, { 1, 0 }
  uselistorder i32 %v0_1000225c, { 1, 0 }
  uselistorder i32 %v0_10002244, { 1, 0 }
  uselistorder i32 %v0_1000222c, { 1, 0 }
  uselistorder i32 %v0_10002214, { 1, 0 }
  uselistorder label %dec_label_pc_100022b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002298, { 1, 0 }
  uselistorder label %dec_label_pc_10002280, { 1, 0 }
  uselistorder label %dec_label_pc_10002268, { 1, 0 }
  uselistorder label %dec_label_pc_10002250, { 1, 0 }
  uselistorder label %dec_label_pc_10002238, { 1, 0 }
  uselistorder label %dec_label_pc_10002220, { 1, 0 }
  uselistorder label %dec_label_pc_100021e0, { 1, 0 }
  uselistorder label %dec_label_pc_100021d0, { 1, 0 }
  uselistorder label %dec_label_pc_100021c0, { 1, 0 }
  uselistorder label %dec_label_pc_100021b0, { 1, 0 }
  uselistorder label %dec_label_pc_100021a0, { 1, 0 }
  uselistorder label %dec_label_pc_10002190, { 1, 0 }
  uselistorder label %dec_label_pc_10002180, { 1, 0 }
}

define i32 @function_100022dc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100022dc:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10002320, label %dec_label_pc_100022f4

dec_label_pc_100022f4:                            ; preds = %dec_label_pc_100022dc
  %v0_100022f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100022f4 = add i32 %v0_100022f4, 4
  %v2_100022f4 = inttoptr i32 %v1_100022f4 to i8*
  %v3_100022f4 = load i8, i8* %v2_100022f4, align 1
  %v4_100022f4 = zext i8 %v3_100022f4 to i32
  %v4_100022fc = icmp eq i32 %v4_100022f4, %arg3
  br i1 %v4_100022fc, label %dec_label_pc_10002334, label %dec_label_pc_10002318

dec_label_pc_10002308:                            ; preds = %dec_label_pc_10002318
  %v1_10002308 = add i32 %v0_10002308.in, 12
  %v2_10002308 = inttoptr i32 %v1_10002308 to i8*
  %v3_10002308 = load i8, i8* %v2_10002308, align 1
  %v4_10002308 = zext i8 %v3_10002308 to i32
  %v4_10002310 = icmp eq i32 %v4_10002308, %arg3
  br i1 %v4_10002310, label %dec_label_pc_10002334, label %dec_label_pc_10002318

dec_label_pc_10002318:                            ; preds = %dec_label_pc_100022f4, %dec_label_pc_10002308
  %v0_1000231c = phi i32 [ %v1_1000231c, %dec_label_pc_10002308 ], [ %arg1, %dec_label_pc_100022f4 ]
  %v0_10002308.in = phi i32 [ %v0_10002308, %dec_label_pc_10002308 ], [ %v0_100022f4, %dec_label_pc_100022f4 ]
  %v0_10002308 = add i32 %v0_10002308.in, 8
  store i32 %v0_10002308, i32* %r4.global-to-local, align 4
  %v1_1000231c = add i32 %v0_1000231c, -1
  %v2_1000231c = icmp eq i32 %v1_1000231c, 0
  br i1 %v2_1000231c, label %dec_label_pc_10002320, label %dec_label_pc_10002308

dec_label_pc_10002320:                            ; preds = %dec_label_pc_10002318, %dec_label_pc_10002334, %dec_label_pc_100022dc
  ret i32 %arg4

dec_label_pc_10002334:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_100022f4
  %v0_10002334 = phi i32 [ %v0_100022f4, %dec_label_pc_100022f4 ], [ %v0_10002308, %dec_label_pc_10002308 ]
  %v1_10002334 = inttoptr i32 %v0_10002334 to i32*
  %v2_10002334 = load i32, i32* %v1_10002334, align 4
  %v3_10002338 = icmp eq i32 %v2_10002334, 0
  br i1 %v3_10002338, label %dec_label_pc_10002320, label %dec_label_pc_10002340

dec_label_pc_10002340:                            ; preds = %dec_label_pc_10002334
  store i32 268444484, i32* @lr, align 4
  %v1_10002340 = call i32 @function_1000b2cc(i32 %v2_10002334)
  ret i32 %v1_10002340

; uselistorder directives
  uselistorder i32 %v1_1000231c, { 1, 0 }
  uselistorder i32 %v0_10002308, { 1, 0, 2 }
  uselistorder i32 %v0_10002308.in, { 1, 0 }
  uselistorder i32 %v0_100022f4, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002320, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002318, { 1, 0 }
}

define i32 @function_1000235c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000235c:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100023a0, label %dec_label_pc_10002374

dec_label_pc_10002374:                            ; preds = %dec_label_pc_1000235c
  %v0_10002374 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002374 = add i32 %v0_10002374, 4
  %v2_10002374 = inttoptr i32 %v1_10002374 to i8*
  %v3_10002374 = load i8, i8* %v2_10002374, align 1
  %v4_10002374 = zext i8 %v3_10002374 to i32
  %v4_1000237c = icmp eq i32 %v4_10002374, %arg3
  br i1 %v4_1000237c, label %dec_label_pc_100023b4, label %dec_label_pc_10002398

dec_label_pc_10002388:                            ; preds = %dec_label_pc_10002398
  %v1_10002388 = add i32 %v0_10002388.in, 12
  %v2_10002388 = inttoptr i32 %v1_10002388 to i8*
  %v3_10002388 = load i8, i8* %v2_10002388, align 1
  %v4_10002388 = zext i8 %v3_10002388 to i32
  %v4_10002390 = icmp eq i32 %v4_10002388, %arg3
  br i1 %v4_10002390, label %dec_label_pc_100023b4, label %dec_label_pc_10002398

dec_label_pc_10002398:                            ; preds = %dec_label_pc_10002374, %dec_label_pc_10002388
  %v0_1000239c = phi i32 [ %v1_1000239c, %dec_label_pc_10002388 ], [ %arg1, %dec_label_pc_10002374 ]
  %v0_10002388.in = phi i32 [ %v0_10002388, %dec_label_pc_10002388 ], [ %v0_10002374, %dec_label_pc_10002374 ]
  %v0_10002388 = add i32 %v0_10002388.in, 8
  store i32 %v0_10002388, i32* %r4.global-to-local, align 4
  %v1_1000239c = add i32 %v0_1000239c, -1
  %v2_1000239c = icmp eq i32 %v1_1000239c, 0
  br i1 %v2_1000239c, label %dec_label_pc_100023a0, label %dec_label_pc_10002388

dec_label_pc_100023a0:                            ; preds = %dec_label_pc_10002398, %dec_label_pc_100023b4, %dec_label_pc_1000235c
  ret i32 %arg4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_10002388, %dec_label_pc_10002374
  %v0_100023b4 = phi i32 [ %v0_10002374, %dec_label_pc_10002374 ], [ %v0_10002388, %dec_label_pc_10002388 ]
  %v1_100023b4 = inttoptr i32 %v0_100023b4 to i32*
  %v2_100023b4 = load i32, i32* %v1_100023b4, align 4
  store i32 %v2_100023b4, i32* @r3, align 4
  %v3_100023b8 = icmp eq i32 %v2_100023b4, 0
  br i1 %v3_100023b8, label %dec_label_pc_100023a0, label %dec_label_pc_100023c0

dec_label_pc_100023c0:                            ; preds = %dec_label_pc_100023b4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = call i32 @function_1000a038(i32 %v2_100023b4, i32 10)
  ret i32 %v2_100023c4

; uselistorder directives
  uselistorder i32 %v1_1000239c, { 1, 0 }
  uselistorder i32 %v0_10002388, { 1, 0, 2 }
  uselistorder i32 %v0_10002388.in, { 1, 0 }
  uselistorder i32 %v0_10002374, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100023a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002398, { 1, 0 }
}

define i32 @function_100023e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100023e0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_100023e4 = load i32, i32* @lr, align 4
  store i32 %v0_100023e4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_10002400 = load i32, i32* @r28, align 4
  store i32 268444684, i32* @lr, align 4
  %v2_10002408 = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_1000240c = load i8, i8* @global_var_1001e184.58, align 1
  %v4_1000240c = zext i8 %v3_1000240c to i32
  store i32 %v4_1000240c, i32* %r4.global-to-local, align 4
  store i32 %v2_10002408, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10002420 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002424 = inttoptr i32 %v2_10002408 to i32*
  store i32 268453760, i32* %v2_10002424, align 4
  %v0_10002428 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002428 = mul i32 %v0_10002428, 4
  store i32 %v1_10002428, i32* %r4.global-to-local, align 4
  %v0_1000242c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000242c = trunc i32 %v0_1000242c to i8
  %v2_1000242c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000242c = add i32 %v2_1000242c, 4
  %v4_1000242c = inttoptr i32 %v3_1000242c to i8*
  store i8 %v1_1000242c, i8* %v4_1000242c, align 1
  %v0_10002430 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002430 = add i32 %v0_10002430, 4
  store i32 %v1_10002430, i32* %r4.global-to-local, align 4
  store i32 268444728, i32* @lr, align 4
  %v3_10002434 = call i32 @function_1000ba64(i32 %v3_10002420, i32 %v1_10002430, i32 268453760)
  %v3_10002438 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002438 = zext i8 %v3_10002438 to i32
  store i32 %v3_10002434, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002448 = mul nuw nsw i32 %v4_10002438, 4
  %v0_1000244c = load i32, i32* @r28, align 4
  %v3_1000244c = add i32 %v1_10002448, %v3_10002434
  %v4_1000244c = inttoptr i32 %v3_1000244c to i32*
  store i32 %v0_1000244c, i32* %v4_1000244c, align 4
  %v0_10002454 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002454, i32* @global_var_1001e188.59, align 4
  %v0_10002458 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002458 = trunc i32 %v0_10002458 to i8
  store i8 %v1_10002458, i8* @global_var_1001e184.58, align 1
  store i32 268444768, i32* @lr, align 4
  %v2_1000245c = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_10002460 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002460 = zext i8 %v3_10002460 to i32
  store i32 %v4_10002460, i32* %r4.global-to-local, align 4
  store i32 %v2_1000245c, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10002474 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002478 = inttoptr i32 %v2_1000245c to i32*
  store i32 268455004, i32* %v2_10002478, align 4
  %v0_1000247c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000247c = mul i32 %v0_1000247c, 4
  store i32 %v1_1000247c, i32* %r4.global-to-local, align 4
  %v0_10002480 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002480 = trunc i32 %v0_10002480 to i8
  %v2_10002480 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002480 = add i32 %v2_10002480, 4
  %v4_10002480 = inttoptr i32 %v3_10002480 to i8*
  store i8 %v1_10002480, i8* %v4_10002480, align 1
  %v0_10002484 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002484 = add i32 %v0_10002484, 4
  store i32 %v1_10002484, i32* %r4.global-to-local, align 4
  store i32 268444812, i32* @lr, align 4
  %v3_10002488 = call i32 @function_1000ba64(i32 %v3_10002474, i32 %v1_10002484, i32 268455004)
  %v3_1000248c = load i8, i8* @global_var_1001e184.58, align 1
  %v4_1000248c = zext i8 %v3_1000248c to i32
  store i32 %v3_10002488, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_1000249c = mul nuw nsw i32 %v4_1000248c, 4
  %v0_100024a0 = load i32, i32* @r28, align 4
  %v3_100024a0 = add i32 %v1_1000249c, %v3_10002488
  %v4_100024a0 = inttoptr i32 %v3_100024a0 to i32*
  store i32 %v0_100024a0, i32* %v4_100024a0, align 4
  %v0_100024a8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100024a8, i32* @global_var_1001e188.59, align 4
  %v0_100024ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100024ac = trunc i32 %v0_100024ac to i8
  store i8 %v1_100024ac, i8* @global_var_1001e184.58, align 1
  store i32 268444852, i32* @lr, align 4
  %v2_100024b0 = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_100024b4 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100024b4 = zext i8 %v3_100024b4 to i32
  store i32 %v4_100024b4, i32* %r4.global-to-local, align 4
  store i32 %v2_100024b0, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_100024c8 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_100024cc = inttoptr i32 %v2_100024b0 to i32*
  store i32 268455996, i32* %v2_100024cc, align 4
  %v0_100024d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024d0 = mul i32 %v0_100024d0, 4
  store i32 %v1_100024d0, i32* %r4.global-to-local, align 4
  %v0_100024d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100024d4 = trunc i32 %v0_100024d4 to i8
  %v2_100024d4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100024d4 = add i32 %v2_100024d4, 4
  %v4_100024d4 = inttoptr i32 %v3_100024d4 to i8*
  store i8 %v1_100024d4, i8* %v4_100024d4, align 1
  %v0_100024d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024d8 = add i32 %v0_100024d8, 4
  store i32 %v1_100024d8, i32* %r4.global-to-local, align 4
  store i32 268444896, i32* @lr, align 4
  %v3_100024dc = call i32 @function_1000ba64(i32 %v3_100024c8, i32 %v1_100024d8, i32 268455996)
  %v3_100024e0 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100024e0 = zext i8 %v3_100024e0 to i32
  store i32 %v3_100024dc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100024f0 = mul nuw nsw i32 %v4_100024e0, 4
  %v0_100024f4 = load i32, i32* @r28, align 4
  %v3_100024f4 = add i32 %v1_100024f0, %v3_100024dc
  %v4_100024f4 = inttoptr i32 %v3_100024f4 to i32*
  store i32 %v0_100024f4, i32* %v4_100024f4, align 4
  %v0_100024fc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100024fc, i32* @global_var_1001e188.59, align 4
  %v0_10002500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002500 = trunc i32 %v0_10002500 to i8
  store i8 %v1_10002500, i8* @global_var_1001e184.58, align 1
  store i32 268444936, i32* @lr, align 4
  %v2_10002504 = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_10002508 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002508 = zext i8 %v3_10002508 to i32
  store i32 %v4_10002508, i32* %r4.global-to-local, align 4
  store i32 %v2_10002504, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_1000251c = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002520 = inttoptr i32 %v2_10002504 to i32*
  store i32 268452936, i32* %v2_10002520, align 4
  %v0_10002524 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002524 = mul i32 %v0_10002524, 4
  store i32 %v1_10002524, i32* %r4.global-to-local, align 4
  %v0_10002528 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i8
  %v2_10002528 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002528 = add i32 %v2_10002528, 4
  %v4_10002528 = inttoptr i32 %v3_10002528 to i8*
  store i8 %v1_10002528, i8* %v4_10002528, align 1
  %v0_1000252c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000252c = add i32 %v0_1000252c, 4
  store i32 %v1_1000252c, i32* %r4.global-to-local, align 4
  store i32 268444980, i32* @lr, align 4
  %v3_10002530 = call i32 @function_1000ba64(i32 %v3_1000251c, i32 %v1_1000252c, i32 268452936)
  %v3_10002534 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002534 = zext i8 %v3_10002534 to i32
  store i32 %v3_10002530, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002544 = mul nuw nsw i32 %v4_10002534, 4
  %v0_10002548 = load i32, i32* @r28, align 4
  %v3_10002548 = add i32 %v1_10002544, %v3_10002530
  %v4_10002548 = inttoptr i32 %v3_10002548 to i32*
  store i32 %v0_10002548, i32* %v4_10002548, align 4
  %v0_10002550 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002550, i32* @global_var_1001e188.59, align 4
  %v0_10002554 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002554 = trunc i32 %v0_10002554 to i8
  store i8 %v1_10002554, i8* @global_var_1001e184.58, align 1
  store i32 268445020, i32* @lr, align 4
  %v2_10002558 = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_1000255c = load i8, i8* @global_var_1001e184.58, align 1
  %v4_1000255c = zext i8 %v3_1000255c to i32
  store i32 %v4_1000255c, i32* %r4.global-to-local, align 4
  store i32 %v2_10002558, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_10002570 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002574 = inttoptr i32 %v2_10002558 to i32*
  store i32 268451492, i32* %v2_10002574, align 4
  %v0_10002578 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002578 = mul i32 %v0_10002578, 4
  store i32 %v1_10002578, i32* %r4.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000257c = trunc i32 %v0_1000257c to i8
  %v2_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000257c = add i32 %v2_1000257c, 4
  %v4_1000257c = inttoptr i32 %v3_1000257c to i8*
  store i8 %v1_1000257c, i8* %v4_1000257c, align 1
  %v0_10002580 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002580 = add i32 %v0_10002580, 4
  store i32 %v1_10002580, i32* %r4.global-to-local, align 4
  store i32 268445064, i32* @lr, align 4
  %v3_10002584 = call i32 @function_1000ba64(i32 %v3_10002570, i32 %v1_10002580, i32 268451492)
  %v3_10002588 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002588 = zext i8 %v3_10002588 to i32
  store i32 %v3_10002584, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002598 = mul nuw nsw i32 %v4_10002588, 4
  %v0_1000259c = load i32, i32* @r28, align 4
  %v3_1000259c = add i32 %v1_10002598, %v3_10002584
  %v4_1000259c = inttoptr i32 %v3_1000259c to i32*
  store i32 %v0_1000259c, i32* %v4_1000259c, align 4
  %v0_100025a4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100025a4, i32* @global_var_1001e188.59, align 4
  %v0_100025a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025a8 = trunc i32 %v0_100025a8 to i8
  store i8 %v1_100025a8, i8* @global_var_1001e184.58, align 1
  store i32 268445104, i32* @lr, align 4
  %v2_100025ac = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_100025b0 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100025b0 = zext i8 %v3_100025b0 to i32
  store i32 %v4_100025b0, i32* %r4.global-to-local, align 4
  store i32 %v2_100025ac, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_100025c4 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_100025c8 = inttoptr i32 %v2_100025ac to i32*
  store i32 268449984, i32* %v2_100025c8, align 4
  %v0_100025cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100025cc = mul i32 %v0_100025cc, 4
  store i32 %v1_100025cc, i32* %r4.global-to-local, align 4
  %v0_100025d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025d0 = trunc i32 %v0_100025d0 to i8
  %v2_100025d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100025d0 = add i32 %v2_100025d0, 4
  %v4_100025d0 = inttoptr i32 %v3_100025d0 to i8*
  store i8 %v1_100025d0, i8* %v4_100025d0, align 1
  %v0_100025d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100025d4 = add i32 %v0_100025d4, 4
  store i32 %v1_100025d4, i32* %r4.global-to-local, align 4
  store i32 268445148, i32* @lr, align 4
  %v3_100025d8 = call i32 @function_1000ba64(i32 %v3_100025c4, i32 %v1_100025d4, i32 268449984)
  %v3_100025dc = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100025dc = zext i8 %v3_100025dc to i32
  store i32 %v3_100025d8, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100025ec = mul nuw nsw i32 %v4_100025dc, 4
  %v0_100025f0 = load i32, i32* @r28, align 4
  %v3_100025f0 = add i32 %v1_100025ec, %v3_100025d8
  %v4_100025f0 = inttoptr i32 %v3_100025f0 to i32*
  store i32 %v0_100025f0, i32* %v4_100025f0, align 4
  %v0_100025f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100025f8, i32* @global_var_1001e188.59, align 4
  %v0_100025fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100025fc = trunc i32 %v0_100025fc to i8
  store i8 %v1_100025fc, i8* @global_var_1001e184.58, align 1
  store i32 268445188, i32* @lr, align 4
  %v2_10002600 = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_10002604 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002604 = zext i8 %v3_10002604 to i32
  store i32 %v4_10002604, i32* %r4.global-to-local, align 4
  store i32 %v2_10002600, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10002618 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_1000261c = inttoptr i32 %v2_10002600 to i32*
  store i32 268448376, i32* %v2_1000261c, align 4
  %v0_10002620 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002620 = mul i32 %v0_10002620, 4
  store i32 %v1_10002620, i32* %r4.global-to-local, align 4
  %v0_10002624 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002624 = trunc i32 %v0_10002624 to i8
  %v2_10002624 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002624 = add i32 %v2_10002624, 4
  %v4_10002624 = inttoptr i32 %v3_10002624 to i8*
  store i8 %v1_10002624, i8* %v4_10002624, align 1
  %v0_10002628 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002628 = add i32 %v0_10002628, 4
  store i32 %v1_10002628, i32* %r4.global-to-local, align 4
  store i32 268445232, i32* @lr, align 4
  %v3_1000262c = call i32 @function_1000ba64(i32 %v3_10002618, i32 %v1_10002628, i32 268448376)
  %v3_10002630 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002630 = zext i8 %v3_10002630 to i32
  store i32 %v3_1000262c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002640 = mul nuw nsw i32 %v4_10002630, 4
  %v0_10002644 = load i32, i32* @r28, align 4
  %v3_10002644 = add i32 %v1_10002640, %v3_1000262c
  %v4_10002644 = inttoptr i32 %v3_10002644 to i32*
  store i32 %v0_10002644, i32* %v4_10002644, align 4
  %v0_1000264c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000264c, i32* @global_var_1001e188.59, align 4
  %v0_10002650 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002650 = trunc i32 %v0_10002650 to i8
  store i8 %v1_10002650, i8* @global_var_1001e184.58, align 1
  store i32 268445272, i32* @lr, align 4
  %v2_10002654 = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_10002658 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002658 = zext i8 %v3_10002658 to i32
  store i32 %v4_10002658, i32* %r4.global-to-local, align 4
  store i32 %v2_10002654, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_1000266c = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002670 = inttoptr i32 %v2_10002654 to i32*
  store i32 268447012, i32* %v2_10002670, align 4
  %v0_10002674 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002674 = mul i32 %v0_10002674, 4
  store i32 %v1_10002674, i32* %r4.global-to-local, align 4
  %v0_10002678 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002678 = trunc i32 %v0_10002678 to i8
  %v2_10002678 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002678 = add i32 %v2_10002678, 4
  %v4_10002678 = inttoptr i32 %v3_10002678 to i8*
  store i8 %v1_10002678, i8* %v4_10002678, align 1
  %v0_1000267c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000267c = add i32 %v0_1000267c, 4
  store i32 %v1_1000267c, i32* %r4.global-to-local, align 4
  store i32 268445316, i32* @lr, align 4
  %v3_10002680 = call i32 @function_1000ba64(i32 %v3_1000266c, i32 %v1_1000267c, i32 268447012)
  %v3_10002684 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002684 = zext i8 %v3_10002684 to i32
  store i32 %v3_10002680, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002694 = mul nuw nsw i32 %v4_10002684, 4
  %v0_10002698 = load i32, i32* @r28, align 4
  %v3_10002698 = add i32 %v1_10002694, %v3_10002680
  %v4_10002698 = inttoptr i32 %v3_10002698 to i32*
  store i32 %v0_10002698, i32* %v4_10002698, align 4
  %v0_100026a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100026a0, i32* @global_var_1001e188.59, align 4
  %v0_100026a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100026a4 = trunc i32 %v0_100026a4 to i8
  store i8 %v1_100026a4, i8* @global_var_1001e184.58, align 1
  store i32 268445356, i32* @lr, align 4
  %v2_100026a8 = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_100026ac = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100026ac = zext i8 %v3_100026ac to i32
  store i32 %v4_100026ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100026a8, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_100026c0 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_100026c4 = inttoptr i32 %v2_100026a8 to i32*
  store i32 268445540, i32* %v2_100026c4, align 4
  %v0_100026c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100026c8 = mul i32 %v0_100026c8, 4
  store i32 %v1_100026c8, i32* %r4.global-to-local, align 4
  %v0_100026cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100026cc = trunc i32 %v0_100026cc to i8
  %v2_100026cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100026cc = add i32 %v2_100026cc, 4
  %v4_100026cc = inttoptr i32 %v3_100026cc to i8*
  store i8 %v1_100026cc, i8* %v4_100026cc, align 1
  %v0_100026d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100026d0 = add i32 %v0_100026d0, 4
  store i32 %v1_100026d0, i32* %r4.global-to-local, align 4
  store i32 268445400, i32* @lr, align 4
  %v3_100026d4 = call i32 @function_1000ba64(i32 %v3_100026c0, i32 %v1_100026d0, i32 268445540)
  %v3_100026d8 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100026d8 = zext i8 %v3_100026d8 to i32
  store i32 %v3_100026d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100026e8 = mul nuw nsw i32 %v4_100026d8, 4
  %v0_100026ec = load i32, i32* @r28, align 4
  %v3_100026ec = add i32 %v1_100026e8, %v3_100026d4
  %v4_100026ec = inttoptr i32 %v3_100026ec to i32*
  store i32 %v0_100026ec, i32* %v4_100026ec, align 4
  %v0_100026f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100026f4 = trunc i32 %v0_100026f4 to i8
  store i8 %v1_100026f4, i8* @global_var_1001e184.58, align 1
  %v0_100026f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100026f8, i32* @global_var_1001e188.59, align 4
  store i32 268445440, i32* @lr, align 4
  %v2_100026fc = call i32 @function_1000b8f4(i32 1, i32 8)
  %v3_10002700 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002700 = zext i8 %v3_10002700 to i32
  store i32 %v4_10002700, i32* %r4.global-to-local, align 4
  store i32 %v2_100026fc, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_10002714 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002718 = inttoptr i32 %v2_100026fc to i32*
  store i32 268436024, i32* %v2_10002718, align 4
  %v0_1000271c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000271c = mul i32 %v0_1000271c, 4
  store i32 %v1_1000271c, i32* %r4.global-to-local, align 4
  %v0_10002720 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002720 = trunc i32 %v0_10002720 to i8
  %v2_10002720 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002720 = add i32 %v2_10002720, 4
  %v4_10002720 = inttoptr i32 %v3_10002720 to i8*
  store i8 %v1_10002720, i8* %v4_10002720, align 1
  %v0_10002724 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002724 = add i32 %v0_10002724, 4
  store i32 %v1_10002724, i32* %r4.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v3_10002728 = call i32 @function_1000ba64(i32 %v3_10002714, i32 %v1_10002724, i32 268436024)
  %v3_1000272c = load i8, i8* @global_var_1001e184.58, align 1
  %v4_1000272c = zext i8 %v3_1000272c to i32
  store i32 %v3_10002728, i32* @global_var_1001e188.59, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002738 = mul nuw nsw i32 %v4_1000272c, 4
  %v0_1000273c = load i32, i32* @r28, align 4
  %v3_1000273c = add i32 %v1_10002738, %v3_10002728
  %v4_1000273c = inttoptr i32 %v3_1000273c to i32*
  store i32 %v0_1000273c, i32* %v4_1000273c, align 4
  %v0_10002744 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002744 = trunc i32 %v0_10002744 to i8
  store i8 %v1_10002744, i8* @global_var_1001e184.58, align 1
  store i32 %v0_100023e4, i32* %r0.global-to-local, align 4
  store i32 %v0_10002400, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001e185.70 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001e184.58, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10002764(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002764:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002768 = load i32, i32* @lr, align 4
  store i32 %v0_10002768, i32* %r0.global-to-local, align 4
  %v0_1000276c = call i32 @__asm_mfcr()
  store i32 %v0_1000276c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000277c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000276c, i32* %r18.global-to-local, align 4
  %v0_100027b0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100027b8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100027c0 = load i32, i32* @r30, align 4
  %v0_100027c4 = load i32, i32* @r31, align 4
  store i32 268445656, i32* @lr, align 4
  %v2_100027d4 = call i32 @function_1000b8f4(i32 4, i32 4)
  store i32 %v2_100027d4, i32* %r19.global-to-local, align 4
  %v0_100027dc = load i32, i32* @r28, align 4
  %v0_100027e8 = load i32, i32* @r29, align 4
  store i32 %v0_100027e8, i32* %r3.global-to-local, align 4
  store i32 268445680, i32* @lr, align 4
  %v4_100027ec = inttoptr i32 %v0_100027dc to i32*
  %v5_100027ec = call i32 @function_1000235c(i32 %v0_100027e8, i32* %v4_100027ec, i32 2, i32 0)
  %v0_100027fc = load i32, i32* @r28, align 4
  %v1_10002800 = urem i32 %v5_100027ec, 256
  store i32 %v1_10002800, i32* %r14.global-to-local, align 4
  %v0_10002804 = load i32, i32* @r29, align 4
  store i32 %v0_10002804, i32* %r3.global-to-local, align 4
  store i32 268445708, i32* @lr, align 4
  %v4_10002808 = inttoptr i32 %v0_100027fc to i32*
  %v5_10002808 = call i32 @function_1000235c(i32 %v0_10002804, i32* %v4_10002808, i32 3, i32 65535)
  %v0_1000280c = load i32, i32* @r28, align 4
  store i32 %v5_10002808, i32* %r24.global-to-local, align 4
  %v0_1000281c = load i32, i32* @r29, align 4
  store i32 %v0_1000281c, i32* %r3.global-to-local, align 4
  store i32 268445732, i32* @lr, align 4
  %v4_10002820 = inttoptr i32 %v0_1000280c to i32*
  %v5_10002820 = call i32 @function_1000235c(i32 %v0_1000281c, i32* %v4_10002820, i32 4, i32 64)
  %v0_10002824 = load i32, i32* @r28, align 4
  %v1_10002830 = urem i32 %v5_10002820, 256
  store i32 %v1_10002830, i32* %r20.global-to-local, align 4
  %v0_10002834 = load i32, i32* @r29, align 4
  store i32 %v0_10002834, i32* %r3.global-to-local, align 4
  store i32 268445756, i32* @lr, align 4
  %v4_10002838 = inttoptr i32 %v0_10002824 to i32*
  %v5_10002838 = call i32 @function_1000235c(i32 %v0_10002834, i32* %v4_10002838, i32 5, i32 1)
  %v0_10002848 = load i32, i32* @r28, align 4
  %v1_1000284c = urem i32 %v5_10002838, 256
  store i32 %v1_1000284c, i32* @r31, align 4
  %v0_10002850 = load i32, i32* @r29, align 4
  store i32 %v0_10002850, i32* %r3.global-to-local, align 4
  store i32 268445784, i32* @lr, align 4
  %v4_10002854 = inttoptr i32 %v0_10002848 to i32*
  %v5_10002854 = call i32 @function_1000235c(i32 %v0_10002850, i32* %v4_10002854, i32 6, i32 65535)
  %v0_1000285c = load i32, i32* @r28, align 4
  store i32 %v5_10002854, i32* %r26.global-to-local, align 4
  %v0_1000286c = load i32, i32* @r29, align 4
  store i32 %v0_1000286c, i32* %r3.global-to-local, align 4
  store i32 268445812, i32* @lr, align 4
  %v4_10002870 = inttoptr i32 %v0_1000285c to i32*
  %v5_10002870 = call i32 @function_1000235c(i32 %v0_1000286c, i32* %v4_10002870, i32 7, i32 65535)
  %v0_10002874 = load i32, i32* @r28, align 4
  store i32 %v5_10002870, i32* %r27.global-to-local, align 4
  %v0_10002884 = load i32, i32* @r29, align 4
  store i32 %v0_10002884, i32* %r3.global-to-local, align 4
  store i32 268445836, i32* @lr, align 4
  %v4_10002888 = inttoptr i32 %v0_10002874 to i32*
  %v5_10002888 = call i32 @function_1000235c(i32 %v0_10002884, i32* %v4_10002888, i32 0, i32 512)
  %v0_1000288c = load i32, i32* @r28, align 4
  store i32 %v5_10002888, i32* %r15.global-to-local, align 4
  %v0_1000289c = load i32, i32* @r29, align 4
  store i32 %v0_1000289c, i32* %r3.global-to-local, align 4
  store i32 268445860, i32* @lr, align 4
  %v4_100028a0 = inttoptr i32 %v0_1000288c to i32*
  %v5_100028a0 = call i32 @function_1000235c(i32 %v0_1000289c, i32* %v4_100028a0, i32 1, i32 1)
  %v0_100028a4 = load i32, i32* @r28, align 4
  %v1_100028b0 = urem i32 %v5_100028a0, 256
  store i32 %v1_100028b0, i32* %r21.global-to-local, align 4
  %v0_100028b4 = load i32, i32* @r29, align 4
  store i32 %v0_100028b4, i32* %r3.global-to-local, align 4
  store i32 268445884, i32* @lr, align 4
  %v4_100028b8 = inttoptr i32 %v0_100028a4 to i32*
  %v5_100028b8 = call i32 @function_1000235c(i32 %v0_100028b4, i32* %v4_100028b8, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100028c0 = load i32, i32* @global_var_1001e180.71, align 4
  %v0_100028c4 = load i32, i32* @r28, align 4
  store i32 %v5_100028b8, i32* %r30.global-to-local, align 4
  %v0_100028d0 = load i32, i32* @r29, align 4
  store i32 %v0_100028d0, i32* %r3.global-to-local, align 4
  store i32 268445912, i32* @lr, align 4
  %v4_100028d4 = inttoptr i32 %v0_100028c4 to i32*
  %v5_100028d4 = call i32 @function_1000235c(i32 %v0_100028d0, i32* %v4_100028d4, i32 25, i32 %v3_100028c0)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445932, i32* @lr, align 4
  %v3_100028e8 = call i32 @function_1000b568(i32 2, i32 3, i32 6)
  store i32 %v3_100028e8, i32* %r3.global-to-local, align 4
  %v3_100028ec = icmp eq i32 %v3_100028e8, -1
  store i1 %v3_100028ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100028e8, i32* %r23.global-to-local, align 4
  br i1 %v3_100028ec, label %dec_label_pc_10002a90, label %dec_label_pc_100028f8

dec_label_pc_100028f8:                            ; preds = %dec_label_pc_10002764
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002904 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268445972, i32* @lr, align 4
  %v5_10002910 = call i32 @function_1000b52c(i32 0, i32 3, i32 %v2_10002904, i32 4, i32 4)
  store i32 %v5_10002910, i32* %r3.global-to-local, align 4
  %v3_10002914 = icmp eq i32 %v5_10002910, -1
  store i1 %v3_10002914, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002914, label %dec_label_pc_10002a88, label %dec_label_pc_1000291c

dec_label_pc_1000291c:                            ; preds = %dec_label_pc_100028f8
  %v0_1000291c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000291c = icmp slt i32 %v0_1000291c, 0
  %v3_1000291c = icmp eq i32 %v0_1000291c, 0
  store i1 %v1_1000291c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000291c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002928 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002928 = urem i32 %v0_10002928, 65536
  store i32 %v1_10002928, i32* %r24.global-to-local, align 4
  %v0_1000292c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000292c = urem i32 %v0_1000292c, 65536
  store i32 %v1_1000292c, i32* %r16.global-to-local, align 4
  %v0_10002930 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002930 = urem i32 %v0_10002930, 65536
  store i32 %v1_10002930, i32* %r17.global-to-local, align 4
  %v0_10002934 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002934 = urem i32 %v0_10002934, 256
  store i32 %v1_10002934, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_1000291c, 1
  br i1 %tmp37, label %dec_label_pc_10002af0, label %dec_label_pc_1000293c

dec_label_pc_1000293c:                            ; preds = %dec_label_pc_1000291c
  %v0_1000293c = load i32, i32* @r31, align 4
  %v3_1000293c = icmp eq i32 %v0_1000293c, 0
  store i1 %v3_1000293c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002940 = icmp eq i32 %v1_10002934, 0
  store i1 %v3_10002940, i1* %cr3_eq.global-to-local, align 1
  %v0_10002944 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002944 = urem i32 %v0_10002944, 65536
  %v0_10002928.not = or i32 %v0_10002928, -65536
  %v1_10002948 = xor i32 %v0_10002928.not, 65535
  store i32 %v1_10002948, i32* %r11.global-to-local, align 4
  %v1_10002950 = add nuw nsw i32 %v1_10002944, 66
  store i32 %v1_10002950, i32* %r0.global-to-local, align 4
  %v1_10002954 = add nuw nsw i32 %v1_10002944, 28
  store i32 %v1_10002954, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002944, 66
  %v1_10002958 = urem i32 %fold, 65536
  store i32 %v1_10002958, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10002944, 28
  %v1_1000295c = urem i32 %fold8, 65536
  store i32 %v1_1000295c, i32* %r26.global-to-local, align 4
  %v1_10002960 = urem i32 %v1_10002948, 65536
  store i32 %v1_10002960, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10002944, 8
  %v1_10002964 = urem i32 %fold9, 65536
  store i32 %v1_10002964, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002998

dec_label_pc_10002970:                            ; preds = %dec_label_pc_10002a64
  %v0_10002970 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002970 = add i32 %v0_10002970, 16
  %v2_10002970 = inttoptr i32 %v1_10002970 to i32*
  %v3_10002970 = load i32, i32* %v2_10002970, align 4
  store i32 %v3_10002970, i32* %r0.global-to-local, align 4
  %v1_10002974 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002974 = add i32 %v1_10002974, 16
  %v3_10002974 = inttoptr i32 %v2_10002974 to i32*
  store i32 %v3_10002970, i32* %v3_10002974, align 4
  br label %dec_label_pc_10002978

dec_label_pc_10002978:                            ; preds = %dec_label_pc_10002a80, %dec_label_pc_10002970
  %v3_10002978 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002978, i32* %r9.global-to-local, align 4
  %v0_1000297c = load i32, i32* @r28, align 4
  %v1_1000297c = trunc i32 %v0_1000297c to i16
  %v2_1000297c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000297c = add i32 %v2_1000297c, 4
  %v4_1000297c = inttoptr i32 %v3_1000297c to i16*
  store i16 %v1_1000297c, i16* %v4_1000297c, align 2
  %v0_10002980 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002980 = add i32 %v0_10002980, 1
  store i32 %v1_10002980, i32* %r31.global-to-local, align 4
  %v0_10002984 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002984 = trunc i32 %v0_10002984 to i16
  %v2_10002984 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002984 = inttoptr i32 %v2_10002984 to i16*
  store i16 %v1_10002984, i16* %v3_10002984, align 2
  %v0_10002988 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002988 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002988 = icmp slt i32 %v0_10002988, %v1_10002988
  %v4_10002988 = icmp eq i32 %v0_10002988, %v1_10002988
  store i1 %v4_10002988, i1* %cr7_eq.global-to-local, align 1
  %v0_1000298c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000298c = trunc i32 %v0_1000298c to i16
  %v2_1000298c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000298c = add i32 %v2_1000298c, 2
  %v4_1000298c = inttoptr i32 %v3_1000298c to i16*
  store i16 %v1_1000298c, i16* %v4_1000298c, align 2
  %v0_10002990 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002990, i32* %stack_var_-104, align 4
  br i1 %v2_10002988, label %dec_label_pc_10002998, label %dec_label_pc_10002af4

dec_label_pc_10002998:                            ; preds = %dec_label_pc_10002978, %dec_label_pc_1000293c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268446116, i32* @lr, align 4
  %v2_100029a0 = call i32 @function_1000b8f4(i32 1510, i32 4)
  store i32 %v2_100029a0, i32* %r3.global-to-local, align 4
  %v3_100029a4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100029a4, i32* %r9.global-to-local, align 4
  %v0_100029a8 = load i32, i32* @r31, align 4
  %v1_100029a8 = mul i32 %v0_100029a8, 4
  store i32 %v1_100029a8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_100029b0 = load i32, i32* %r19.global-to-local, align 4
  %v3_100029b0 = add i32 %v1_100029b0, %v1_100029a8
  %v4_100029b0 = inttoptr i32 %v3_100029b0 to i32*
  store i32 %v2_100029a0, i32* %v4_100029b0, align 4
  %v0_100029b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100029b4 = mul i32 %v0_100029b4, 4
  store i32 %v1_100029b4, i32* %r9.global-to-local, align 4
  %v1_100029b8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100029b8 = add i32 %v1_100029b8, %v1_100029b4
  %v3_100029b8 = inttoptr i32 %v2_100029b8 to i32*
  %v4_100029b8 = load i32, i32* %v3_100029b8, align 4
  store i32 %v4_100029b8, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100029c0 = inttoptr i32 %v4_100029b8 to i32*
  %v2_100029c0 = load i32, i32* %v1_100029c0, align 4
  store i32 %v2_100029c0, i32* %r0.global-to-local, align 4
  %v1_100029c4 = add i32 %v4_100029b8, 38
  store i32 %v1_100029c4, i32* %r30.global-to-local, align 4
  %v0_100029c8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100029c8 = trunc i32 %v0_100029c8 to i8
  %v3_100029c8 = add i32 %v4_100029b8, 8
  %v4_100029c8 = inttoptr i32 %v3_100029c8 to i8*
  store i8 %v1_100029c8, i8* %v4_100029c8, align 1
  %v0_100029cc = load i32, i32* %r31.global-to-local, align 4
  %v1_100029cc = add i32 %v0_100029cc, 58
  store i32 %v1_100029cc, i32* %r29.global-to-local, align 4
  %v1_100029d0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100029d0, i32* %r0.global-to-local, align 4
  %v0_100029d4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100029d4 = trunc i32 %v0_100029d4 to i16
  %v2_100029d4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100029d4 = add i32 %v2_100029d4, 4
  %v4_100029d4 = inttoptr i32 %v3_100029d4 to i16*
  store i16 %v1_100029d4, i16* %v4_100029d4, align 2
  %v1_100029d8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100029d8, i32* %r0.global-to-local, align 4
  %v0_100029dc = load i32, i32* %r31.global-to-local, align 4
  %v1_100029dc = add i32 %v0_100029dc, 20
  store i32 %v1_100029dc, i32* %r9.global-to-local, align 4
  %v2_100029e0 = inttoptr i32 %v0_100029dc to i32*
  store i32 %v1_100029d8, i32* %v2_100029e0, align 4
  %v0_100029e4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100029e4 = add i32 %v0_100029e4, 24
  store i32 %v1_100029e4, i32* %r11.global-to-local, align 4
  %v0_100029e8 = load i32, i32* %r14.global-to-local, align 4
  %v1_100029e8 = trunc i32 %v0_100029e8 to i8
  %v3_100029e8 = add i32 %v0_100029e4, 1
  %v4_100029e8 = inttoptr i32 %v3_100029e8 to i8*
  store i8 %v1_100029e8, i8* %v4_100029e8, align 1
  %v0_100029ec = load i32, i32* %r22.global-to-local, align 4
  %v1_100029ec = trunc i32 %v0_100029ec to i16
  %v2_100029ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100029ec = add i32 %v2_100029ec, 2
  %v4_100029ec = inttoptr i32 %v3_100029ec to i16*
  store i16 %v1_100029ec, i16* %v4_100029ec, align 2
  %v0_100029f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029f0, label %dec_label_pc_100029fc, label %dec_label_pc_100029f4

dec_label_pc_100029f4:                            ; preds = %dec_label_pc_10002998
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100029f8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100029f8 = add i32 %v2_100029f8, 6
  %v4_100029f8 = inttoptr i32 %v3_100029f8 to i16*
  store i16 16384, i16* %v4_100029f8, align 2
  br label %dec_label_pc_100029fc

dec_label_pc_100029fc:                            ; preds = %dec_label_pc_10002998, %dec_label_pc_100029f4
  %v2_10002a00 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002a00 = add i32 %v2_10002a00, 9
  %v4_10002a00 = inttoptr i32 %v3_10002a00 to i8*
  store i8 47, i8* %v4_10002a00, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10002a08 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002a08 = add i32 %v2_10002a08, 2
  %v4_10002a08 = inttoptr i32 %v3_10002a08 to i16*
  store i16 25944, i16* %v4_10002a08, align 2
  %v2_10002a10 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002a10 = add i32 %v2_10002a10, 12
  %v4_10002a10 = inttoptr i32 %v3_10002a10 to i16*
  store i16 2048, i16* %v4_10002a10, align 2
  %v3_10002a14 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_100028d4, i32* %r11.global-to-local, align 4
  %v1_10002a1c = mul i32 %v3_10002a14, 24
  store i32 %v1_10002a1c, i32* %r9.global-to-local, align 4
  %v0_10002a20 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002a20 = add i32 %v0_10002a20, 38
  %v2_10002a20 = inttoptr i32 %v1_10002a20 to i32*
  %v3_10002a20 = load i32, i32* %v2_10002a20, align 4
  store i32 %v3_10002a20, i32* %r0.global-to-local, align 4
  %v2_10002a24 = add i32 %v0_10002a20, 12
  %v3_10002a24 = inttoptr i32 %v2_10002a24 to i32*
  store i32 %v5_100028d4, i32* %v3_10002a24, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10002a2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002a2c = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a2c = add i32 %v1_10002a2c, %v0_10002a2c
  store i32 %v2_10002a2c, i32* %r9.global-to-local, align 4
  %v1_10002a30 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002a30, i32* %r0.global-to-local, align 4
  %v0_10002a34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002a34 = add i32 %v0_10002a34, 16
  %v2_10002a34 = inttoptr i32 %v1_10002a34 to i32*
  %v3_10002a34 = load i32, i32* %v2_10002a34, align 4
  store i32 %v3_10002a34, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002a3c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002a3c, i32* %r0.global-to-local, align 4
  %v1_10002a40 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002a40 = add i32 %v1_10002a40, 38
  %v3_10002a40 = inttoptr i32 %v2_10002a40 to i32*
  store i32 %v1_10002a3c, i32* %v3_10002a40, align 4
  %v0_10002a44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002a44 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002a44 = add i32 %v1_10002a44, 16
  %v3_10002a44 = inttoptr i32 %v2_10002a44 to i32*
  store i32 %v0_10002a44, i32* %v3_10002a44, align 4
  %v0_10002a48 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002a48 = trunc i32 %v0_10002a48 to i8
  %v2_10002a48 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a48 = add i32 %v2_10002a48, 1
  %v4_10002a48 = inttoptr i32 %v3_10002a48 to i8*
  store i8 %v1_10002a48, i8* %v4_10002a48, align 1
  %v0_10002a4c = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a4c = trunc i32 %v0_10002a4c to i16
  %v2_10002a4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a4c = add i32 %v2_10002a4c, 2
  %v4_10002a4c = inttoptr i32 %v3_10002a4c to i16*
  store i16 %v1_10002a4c, i16* %v4_10002a4c, align 2
  %v0_10002a50 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002a50 = trunc i32 %v0_10002a50 to i16
  %v2_10002a50 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a50 = add i32 %v2_10002a50, 4
  %v4_10002a50 = inttoptr i32 %v3_10002a50 to i16*
  store i16 %v1_10002a50, i16* %v4_10002a50, align 2
  %v0_10002a54 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002a54 = trunc i32 %v0_10002a54 to i8
  %v2_10002a54 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a54 = add i32 %v2_10002a54, 8
  %v4_10002a54 = inttoptr i32 %v3_10002a54 to i8*
  store i8 %v1_10002a54, i8* %v4_10002a54, align 1
  %v0_10002a58 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a58, label %dec_label_pc_10002a64, label %dec_label_pc_10002a5c

dec_label_pc_10002a5c:                            ; preds = %dec_label_pc_100029fc
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10002a60 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a60 = add i32 %v2_10002a60, 6
  %v4_10002a60 = inttoptr i32 %v3_10002a60 to i16*
  store i16 16384, i16* %v4_10002a60, align 2
  br label %dec_label_pc_10002a64

dec_label_pc_10002a64:                            ; preds = %dec_label_pc_100029fc, %dec_label_pc_10002a5c
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10002a68 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a68 = add i32 %v2_10002a68, 9
  %v4_10002a68 = inttoptr i32 %v3_10002a68 to i8*
  store i8 17, i8* %v4_10002a68, align 1
  %v0_10002a6c = call i32 @function_10006fa8()
  store i32 %v0_10002a6c, i32* %r3.global-to-local, align 4
  %v1_10002a70 = add i32 %v0_10002a6c, -1024
  store i32 %v1_10002a70, i32* %r0.global-to-local, align 4
  %v1_10002a74 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002a74 = add i32 %v1_10002a74, 12
  %v3_10002a74 = inttoptr i32 %v2_10002a74 to i32*
  store i32 %v0_10002a6c, i32* %v3_10002a74, align 4
  %v0_10002a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a78 = sub i32 -1, %v0_10002a78
  store i32 %v1_10002a78, i32* %r0.global-to-local, align 4
  %v0_10002a7c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a7c, label %dec_label_pc_10002a80, label %dec_label_pc_10002970

dec_label_pc_10002a80:                            ; preds = %dec_label_pc_10002a64
  %v1_10002a80 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002a80 = add i32 %v1_10002a80, 16
  %v3_10002a80 = inttoptr i32 %v2_10002a80 to i32*
  store i32 %v1_10002a78, i32* %v3_10002a80, align 4
  br label %dec_label_pc_10002978

dec_label_pc_10002a88:                            ; preds = %dec_label_pc_100028f8
  %v0_10002a88 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002a88, i32* %r3.global-to-local, align 4
  store i32 268446352, i32* @lr, align 4
  %v0_10002a8c = call i32 @function_1000a79c()
  store i32 %v0_10002a8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a90

dec_label_pc_10002a90:                            ; preds = %dec_label_pc_10002764, %dec_label_pc_10002a88
  store i32 %v0_1000277c, i32* %r0.global-to-local, align 4
  %v1_10002aa4 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000276c)
  store i32 %v0_100027b0, i32* %r28.global-to-local, align 4
  store i32 %v0_100027b8, i32* %r29.global-to-local, align 4
  store i32 %v0_100027c0, i32* %r30.global-to-local, align 4
  store i32 %v0_100027c4, i32* %r31.global-to-local, align 4
  %v0_10002aec = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002aec

dec_label_pc_10002af0:                            ; preds = %dec_label_pc_1000291c
  %v3_10002af0 = icmp eq i32 %v1_10002934, 0
  store i1 %v3_10002af0, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002af4

dec_label_pc_10002af4:                            ; preds = %dec_label_pc_10002978, %dec_label_pc_10002af0
  store i32 %v5_100028d4, i32* %r0.global-to-local, align 4
  %v0_10002af8 = load i32, i32* %r21.global-to-local, align 4
  %v3_10002af8 = icmp eq i32 %v0_10002af8, 0
  store i1 %v3_10002af8, i1* %cr2_eq.global-to-local, align 1
  %v2_10002afc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10002afc, i32* %r14.global-to-local, align 4
  %v0_10002b00 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002b00 = add i32 %v0_10002b00, 8
  store i32 %v1_10002b00, i32* %r21.global-to-local, align 4
  %v3_10002b04 = icmp eq i32 %v5_100028d4, -1
  store i1 %v3_10002b04, i1* %cr7_eq.global-to-local, align 1
  %v1_10002b08 = add i32 %v0_10002b00, 66
  store i32 %v1_10002b08, i32* %r22.global-to-local, align 4
  %v0_10002b0c = call i32 @__asm_mfcr()
  store i32 %v0_10002b0c, i32* %r3.global-to-local, align 4
  %v1_10002b10 = mul i32 %v0_10002b0c, 268435456
  store i32 %v1_10002b10, i32* %r20.global-to-local, align 4
  %v2_10002ba4 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10002bc8 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10002bd8 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10002b14.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002b14.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002b14.outer

dec_label_pc_10002b14.outer:                      ; preds = %dec_label_pc_10002c78, %dec_label_pc_10002af4
  %v1_10002b14.ph = phi i1 [ %v1_10002b14.pre, %dec_label_pc_10002af4 ], [ %v1_10002c78, %dec_label_pc_10002c78 ]
  %v0_10002b14.ph = phi i1 [ %v0_10002b14.pre, %dec_label_pc_10002af4 ], [ %v0_10002c78, %dec_label_pc_10002c78 ]
  %v2_10002b14 = or i1 %v1_10002b14.ph, %v0_10002b14.ph
  br label %dec_label_pc_10002b14

dec_label_pc_10002b14:                            ; preds = %dec_label_pc_10002b14.outer, %dec_label_pc_10002b14
  br i1 %v2_10002b14, label %dec_label_pc_10002b14, label %dec_label_pc_10002b18

dec_label_pc_10002b18:                            ; preds = %dec_label_pc_10002b14, %dec_label_pc_10002c78
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10002b28

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002be8, %dec_label_pc_10002b18
  %v0_10002b28 = phi i32 [ %v1_10002c68, %dec_label_pc_10002be8 ], [ 0, %dec_label_pc_10002b18 ]
  %v1_10002b28 = mul i32 %v0_10002b28, 24
  store i32 %v1_10002b28, i32* %r0.global-to-local, align 4
  %v1_10002b2c = mul i32 %v0_10002b28, 4
  store i32 %v1_10002b2c, i32* %r11.global-to-local, align 4
  %v1_10002b30 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002b30 = add i32 %v1_10002b30, %v1_10002b2c
  %v3_10002b30 = inttoptr i32 %v2_10002b30 to i32*
  %v4_10002b30 = load i32, i32* %v3_10002b30, align 4
  store i32 %v4_10002b30, i32* %r28.global-to-local, align 4
  %v1_10002b34 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002b34 = add i32 %v1_10002b34, %v1_10002b28
  %v1_10002b38 = add i32 %v2_10002b34, 20
  %v2_10002b38 = inttoptr i32 %v1_10002b38 to i8*
  %v3_10002b38 = load i8, i8* %v2_10002b38, align 1
  %v4_10002b38 = zext i8 %v3_10002b38 to i32
  store i32 %v4_10002b38, i32* %r9.global-to-local, align 4
  %v1_10002b3c = add i32 %v4_10002b30, 24
  store i32 %v1_10002b3c, i32* @r30, align 4
  %v1_10002b40 = add i32 %v4_10002b30, 38
  store i32 %v1_10002b40, i32* @r31, align 4
  %v1_10002b44 = add i32 %v4_10002b30, 58
  store i32 %v1_10002b44, i32* %r27.global-to-local, align 4
  %v3_10002b48 = icmp eq i8 %v3_10002b38, 31
  store i1 %v3_10002b48, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10002b38, 32
  br i1 %tmp39, label %dec_label_pc_10002c80, label %dec_label_pc_10002b50

dec_label_pc_10002b50:                            ; preds = %dec_label_pc_10002b28
  %v0_10002b50 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002b50 = mul i32 %v0_10002b50, 16
  %v2_10002b50 = udiv i32 %v0_10002b50, 268435456
  %v3_10002b50 = or i32 %v2_10002b50, %v1_10002b50
  store i32 %v3_10002b50, i32* %r20.global-to-local, align 4
  %v1_10002b54 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002b50)
  %v1_10002b58 = mul nuw i32 %v2_10002b50, 268435456
  %v2_10002b58 = urem i32 %v0_10002b50, 268435456
  %v3_10002b58 = or i32 %v1_10002b58, %v2_10002b58
  store i32 %v3_10002b58, i32* %r20.global-to-local, align 4
  %v0_10002b5c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b5c, label %dec_label_pc_10002cb4, label %dec_label_pc_10002b60

dec_label_pc_10002b60:                            ; preds = %dec_label_pc_10002c80, %dec_label_pc_10002b50
  store i32 65535, i32* @r29, align 4
  %v0_10002b68 = load i32, i32* %r24.global-to-local, align 4
  %v4_10002b68 = icmp eq i32 %v0_10002b68, 65535
  store i1 %v4_10002b68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002b68, label %dec_label_pc_10002ccc, label %dec_label_pc_10002b70

dec_label_pc_10002b70:                            ; preds = %dec_label_pc_10002cb4, %dec_label_pc_10002b60
  %v1_10002b70 = phi i32 [ %v1_10002cc4, %dec_label_pc_10002cb4 ], [ 65535, %dec_label_pc_10002b60 ]
  %v0_10002b70 = load i32, i32* %r16.global-to-local, align 4
  %v4_10002b70 = icmp eq i32 %v0_10002b70, %v1_10002b70
  store i1 %v4_10002b70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002b70, label %dec_label_pc_10002cec, label %dec_label_pc_10002b78

dec_label_pc_10002b78:                            ; preds = %dec_label_pc_10002ccc.dec_label_pc_10002b78_crit_edge, %dec_label_pc_10002b70
  %v1_10002b78 = phi i32 [ %v1_10002b78.pre, %dec_label_pc_10002ccc.dec_label_pc_10002b78_crit_edge ], [ %v1_10002b70, %dec_label_pc_10002b70 ]
  %v0_10002b78 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002b78 = icmp eq i32 %v0_10002b78, %v1_10002b78
  store i1 %v4_10002b78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002b78, label %dec_label_pc_10002cfc, label %dec_label_pc_10002b80

dec_label_pc_10002b80:                            ; preds = %dec_label_pc_10002cec, %dec_label_pc_10002b78
  %v0_10002b80 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b80, label %dec_label_pc_10002d08, label %dec_label_pc_10002b84

dec_label_pc_10002b84:                            ; preds = %dec_label_pc_10002cfc, %dec_label_pc_10002b80
  %v0_10002b84 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b84 = add i32 %v0_10002b84, 16
  %v2_10002b84 = inttoptr i32 %v1_10002b84 to i32*
  %v3_10002b84 = load i32, i32* %v2_10002b84, align 4
  store i32 %v3_10002b84, i32* %r0.global-to-local, align 4
  %v1_10002b88 = load i32, i32* @r31, align 4
  %v2_10002b88 = add i32 %v1_10002b88, 16
  %v3_10002b88 = inttoptr i32 %v2_10002b88 to i32*
  store i32 %v3_10002b84, i32* %v3_10002b88, align 4
  br label %dec_label_pc_10002b8c

dec_label_pc_10002b8c:                            ; preds = %dec_label_pc_10002d08, %dec_label_pc_10002b84
  %v0_10002b8c = call i32 @function_10006fa8()
  store i32 %v0_10002b8c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002b8c, i32* %stack_var_-100, align 4
  %v0_10002b94 = call i32 @function_10006fa8()
  store i32 %v0_10002b94, i32* %r3.global-to-local, align 4
  store i32 %v0_10002b94, i32* %stack_var_-96, align 4
  %v0_10002b9c = call i32 @function_10006fa8()
  store i32 %v0_10002b9c, i32* %stack_var_-92, align 4
  %v0_10002ba8 = load i32, i32* @r30, align 4
  store i32 %v0_10002ba8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002bb4.72 to i32), i32* @lr, align 4
  %v3_10002bb0 = call i32 @function_10009f94(i32 %v0_10002ba8, i32 %v2_10002ba4, i32 4)
  %v0_10002bb4 = load i32, i32* @r30, align 4
  %v1_10002bb4 = add i32 %v0_10002bb4, 6
  store i32 %v1_10002bb4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002bc4.73 to i32), i32* @lr, align 4
  %v3_10002bc0 = call i32 @function_10009f94(i32 %v1_10002bb4, i32 %v2_10002afc, i32 4)
  %v0_10002bc4 = load i32, i32* @r30, align 4
  %v1_10002bc4 = add i32 %v0_10002bc4, 4
  store i32 %v1_10002bc4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002bd4.74 to i32), i32* @lr, align 4
  %v3_10002bd0 = call i32 @function_10009f94(i32 %v1_10002bc4, i32 %v2_10002bc8, i32 2)
  %v0_10002bd4 = load i32, i32* @r30, align 4
  %v1_10002bd4 = add i32 %v0_10002bd4, 10
  store i32 %v1_10002bd4, i32* %r3.global-to-local, align 4
  store i32 268446692, i32* @lr, align 4
  %v3_10002be0 = call i32 @function_10009f94(i32 %v1_10002bd4, i32 %v2_10002bd8, i32 2)
  store i32 %v3_10002be0, i32* %r3.global-to-local, align 4
  %v0_10002be4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002be4, label %dec_label_pc_10002be8, label %dec_label_pc_10002d14

dec_label_pc_10002be8:                            ; preds = %dec_label_pc_10002b8c, %dec_label_pc_10002d14
  %v0_10002be8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002be8 = trunc i32 %v0_10002be8 to i16
  %v2_10002be8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002be8 = add i32 %v2_10002be8, 10
  %v4_10002be8 = inttoptr i32 %v3_10002be8 to i16*
  store i16 %v1_10002be8, i16* %v4_10002be8, align 2
  %v0_10002bf0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002bf0, i32* @r3, align 4
  %v2_10002bf4 = call i32 @function_100056ac(i32 %v0_10002bf0, i32 20)
  %v3_10002bf4 = trunc i32 %v2_10002bf4 to i16
  %v4_10002bfc = add i32 %v0_10002bf0, 10
  %v5_10002bfc = inttoptr i32 %v4_10002bfc to i16*
  store i16 %v3_10002bf4, i16* %v5_10002bfc, align 2
  %v0_10002c00 = load i32, i32* @r31, align 4
  store i32 %v0_10002c00, i32* @r3, align 4
  %v0_10002c04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002c04 = trunc i32 %v0_10002c04 to i16
  %v3_10002c04 = add i32 %v0_10002c00, 10
  %v4_10002c04 = inttoptr i32 %v3_10002c04 to i16*
  store i16 %v1_10002c04, i16* %v4_10002c04, align 2
  %v2_10002c08 = call i32 @function_100056ac(i32 %v0_10002c00, i32 20)
  %v3_10002c08 = trunc i32 %v2_10002c08 to i16
  %v0_10002c0c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10002c0c, i32* @r4, align 4
  %v3_10002c10 = load i32, i32* @r31, align 4
  %v4_10002c10 = add i32 %v3_10002c10, 10
  %v5_10002c10 = inttoptr i32 %v4_10002c10 to i16*
  store i16 %v3_10002c08, i16* %v5_10002c10, align 2
  %v0_10002c14 = load i32, i32* %r21.global-to-local, align 4
  %v0_10002c18 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002c18 = trunc i32 %v0_10002c18 to i16
  %v2_10002c18 = load i32, i32* %r27.global-to-local, align 4
  %v3_10002c18 = add i32 %v2_10002c18, 6
  %v4_10002c18 = inttoptr i32 %v3_10002c18 to i16*
  store i16 %v1_10002c18, i16* %v4_10002c18, align 2
  %v0_10002c1c = load i32, i32* @r31, align 4
  store i32 %v0_10002c1c, i32* %r3.global-to-local, align 4
  %v0_10002c20 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002c20 = add i32 %v0_10002c20, 4
  %v2_10002c20 = inttoptr i32 %v1_10002c20 to i16*
  %v3_10002c20 = load i16, i16* %v2_10002c20, align 2
  %v4_10002c20 = zext i16 %v3_10002c20 to i32
  %v4_10002c24 = call i32 @function_10005710(i32 %v0_10002c1c, i32 %v0_10002c0c, i32 %v4_10002c20, i32 %v0_10002c14)
  %v5_10002c24 = trunc i32 %v4_10002c24 to i16
  store i32 %v4_10002c24, i32* %r3.global-to-local, align 4
  %v3_10002c28 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002c28, i32* %r0.global-to-local, align 4
  %v0_10002c2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002c2c = add i32 %v0_10002c2c, 16
  %v2_10002c2c = inttoptr i32 %v1_10002c2c to i32*
  %v3_10002c2c = load i32, i32* %v2_10002c2c, align 4
  store i32 %v3_10002c2c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002c34 = mul i32 %v3_10002c28, 24
  store i32 %v1_10002c34, i32* %r0.global-to-local, align 4
  %v3_10002c38 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002c38 = add i32 %v3_10002c38, 6
  %v5_10002c38 = inttoptr i32 %v4_10002c38 to i16*
  store i16 %v5_10002c24, i16* %v5_10002c38, align 2
  %v0_10002c3c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002c40 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002c40, i32* %r3.global-to-local, align 4
  %v0_10002c44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002c44 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002c44 = add i32 %v1_10002c44, %v0_10002c44
  %v0_10002c48 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002c48 = trunc i32 %v0_10002c48 to i16
  %v5_10002c48 = inttoptr i32 %v2_10002c44 to i16*
  store i16 %v3_10002c48, i16* %v5_10002c48, align 2
  %v0_10002c4c = load i32, i32* %r11.global-to-local, align 4
  %v2_10002c4c = add i32 %v2_10002c44, 4
  %v3_10002c4c = inttoptr i32 %v2_10002c4c to i32*
  store i32 %v0_10002c4c, i32* %v3_10002c4c, align 4
  %v0_10002c50 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002c54 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002c54 = trunc i32 %v0_10002c54 to i16
  %v3_10002c54 = add i32 %v2_10002c44, 2
  %v4_10002c54 = inttoptr i32 %v3_10002c54 to i16*
  store i16 %v1_10002c54, i16* %v4_10002c54, align 2
  store i32 268446820, i32* @lr, align 4
  %v6_10002c60 = call i32 @function_1000b4ec(i32 %v0_10002c40, i32 %v0_10002c3c, i32 %v0_10002c50, i32 16384, i32 %v2_10002c44, i32 16)
  store i32 %v6_10002c60, i32* %r3.global-to-local, align 4
  %v3_10002c64 = load i32, i32* %stack_var_-104, align 4
  %v1_10002c68 = add i32 %v3_10002c64, 1
  store i32 %v1_10002c68, i32* %r9.global-to-local, align 4
  %v1_10002c6c = load i32, i32* %r18.global-to-local, align 4
  %v2_10002c6c = icmp slt i32 %v1_10002c68, %v1_10002c6c
  %v4_10002c6c = icmp eq i32 %v1_10002c68, %v1_10002c6c
  store i1 %v4_10002c6c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002c68, i32* %stack_var_-104, align 4
  br i1 %v2_10002c6c, label %dec_label_pc_10002b28, label %dec_label_pc_10002c78

dec_label_pc_10002c78:                            ; preds = %dec_label_pc_10002be8
  %v0_10002c78 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002c78 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002c78 = or i1 %v0_10002c78, %v1_10002c78
  br i1 %v2_10002c78, label %dec_label_pc_10002b14.outer, label %dec_label_pc_10002b18

dec_label_pc_10002c80:                            ; preds = %dec_label_pc_10002b28
  %v1_10002c80 = add i32 %v2_10002b34, 16
  %v2_10002c80 = inttoptr i32 %v1_10002c80 to i32*
  %v3_10002c80 = load i32, i32* %v2_10002c80, align 4
  store i32 %v3_10002c80, i32* %r29.global-to-local, align 4
  %v0_10002c84 = call i32 @function_10006fa8()
  store i32 %v0_10002c84, i32* %r3.global-to-local, align 4
  %v3_10002c88 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002c88, i32* %r9.global-to-local, align 4
  %v0_10002c8c = load i32, i32* %r20.global-to-local, align 4
  %v1_10002c8c = mul i32 %v0_10002c8c, 16
  %v2_10002c8c = udiv i32 %v0_10002c8c, 268435456
  %v3_10002c8c = or i32 %v2_10002c8c, %v1_10002c8c
  store i32 %v3_10002c8c, i32* %r20.global-to-local, align 4
  %v1_10002c90 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002c8c)
  %v1_10002c94 = mul nuw i32 %v2_10002c8c, 268435456
  %v2_10002c94 = urem i32 %v0_10002c8c, 268435456
  %v3_10002c94 = or i32 %v1_10002c94, %v2_10002c94
  store i32 %v3_10002c94, i32* %r20.global-to-local, align 4
  %v0_10002c98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002c98 = mul i32 %v0_10002c98, 24
  %v1_10002c9c = load i32, i32* %r25.global-to-local, align 4
  %v2_10002c9c = add i32 %v1_10002c9c, %v1_10002c98
  store i32 %v2_10002c9c, i32* %r9.global-to-local, align 4
  %v1_10002ca0 = add i32 %v2_10002c9c, 20
  %v2_10002ca0 = inttoptr i32 %v1_10002ca0 to i8*
  %v3_10002ca0 = load i8, i8* %v2_10002ca0, align 1
  %v4_10002ca0 = zext i8 %v3_10002ca0 to i32
  store i32 %v4_10002ca0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ca0, 64
  %v2_10002ca4 = zext i8 %tmp to i32
  %v3_10002ca4 = lshr i32 %v0_10002c84, %v2_10002ca4
  store i32 %v3_10002ca4, i32* %r3.global-to-local, align 4
  %v0_10002ca8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002ca8 = add i32 %v3_10002ca4, %v0_10002ca8
  store i32 %v2_10002ca8, i32* %r29.global-to-local, align 4
  %v1_10002cac = load i32, i32* %r28.global-to-local, align 4
  %v2_10002cac = add i32 %v1_10002cac, 16
  %v3_10002cac = inttoptr i32 %v2_10002cac to i32*
  store i32 %v2_10002ca8, i32* %v3_10002cac, align 4
  %v0_10002cb0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002cb0, label %dec_label_pc_10002cb4, label %dec_label_pc_10002b60

dec_label_pc_10002cb4:                            ; preds = %dec_label_pc_10002c80, %dec_label_pc_10002b50
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002cb8 = call i32 @function_10006fa8()
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002cc0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002cc0 = add i32 %v1_10002cc0, 12
  %v3_10002cc0 = inttoptr i32 %v2_10002cc0 to i32*
  store i32 %v0_10002cb8, i32* %v3_10002cc0, align 4
  %v0_10002cc4 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002cc4 = load i32, i32* @r29, align 4
  %v4_10002cc4 = icmp eq i32 %v0_10002cc4, %v1_10002cc4
  store i1 %v4_10002cc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002cc4, label %dec_label_pc_10002ccc, label %dec_label_pc_10002b70

dec_label_pc_10002ccc:                            ; preds = %dec_label_pc_10002cb4, %dec_label_pc_10002b60
  %v0_10002ccc = call i32 @function_10006fa8()
  %v0_10002cd0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002cd0 = load i32, i32* @r29, align 4
  %v4_10002cd0 = icmp eq i32 %v0_10002cd0, %v1_10002cd0
  store i1 %v4_10002cd0, i1* %cr7_eq.global-to-local, align 1
  %v1_10002cd4 = urem i32 %v0_10002ccc, 65536
  store i32 %v1_10002cd4, i32* %r3.global-to-local, align 4
  %v1_10002cd8 = add nsw i32 %v1_10002cd4, -1000
  store i32 %v1_10002cd8, i32* %r0.global-to-local, align 4
  %v1_10002cdc = trunc i32 %v0_10002ccc to i16
  %v2_10002cdc = load i32, i32* %r28.global-to-local, align 4
  %v3_10002cdc = add i32 %v2_10002cdc, 4
  %v4_10002cdc = inttoptr i32 %v3_10002cdc to i16*
  store i16 %v1_10002cdc, i16* %v4_10002cdc, align 2
  %v0_10002ce0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ce0 = sub i32 -1, %v0_10002ce0
  store i32 %v1_10002ce0, i32* %r0.global-to-local, align 4
  %v1_10002ce4 = trunc i32 %v1_10002ce0 to i16
  %v2_10002ce4 = load i32, i32* @r31, align 4
  %v3_10002ce4 = add i32 %v2_10002ce4, 4
  %v4_10002ce4 = inttoptr i32 %v3_10002ce4 to i16*
  store i16 %v1_10002ce4, i16* %v4_10002ce4, align 2
  br i1 %v4_10002cd0, label %dec_label_pc_10002cec, label %dec_label_pc_10002ccc.dec_label_pc_10002b78_crit_edge

dec_label_pc_10002ccc.dec_label_pc_10002b78_crit_edge: ; preds = %dec_label_pc_10002ccc
  %v1_10002b78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002b78

dec_label_pc_10002cec:                            ; preds = %dec_label_pc_10002ccc, %dec_label_pc_10002b70
  %v0_10002cec = call i32 @function_10006fa8()
  %v1_10002cec = trunc i32 %v0_10002cec to i16
  store i32 %v0_10002cec, i32* %r3.global-to-local, align 4
  %v0_10002cf0 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002cf0 = load i32, i32* @r29, align 4
  %v4_10002cf0 = icmp eq i32 %v0_10002cf0, %v1_10002cf0
  store i1 %v4_10002cf0, i1* %cr7_eq.global-to-local, align 1
  %v3_10002cf4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002cf4 = add i32 %v3_10002cf4, 58
  %v5_10002cf4 = inttoptr i32 %v4_10002cf4 to i16*
  store i16 %v1_10002cec, i16* %v5_10002cf4, align 2
  br i1 %v4_10002cf0, label %dec_label_pc_10002cfc, label %dec_label_pc_10002b80

dec_label_pc_10002cfc:                            ; preds = %dec_label_pc_10002cec, %dec_label_pc_10002b78
  %v0_10002cfc = call i32 @function_10006fa8()
  %v1_10002cfc = trunc i32 %v0_10002cfc to i16
  store i32 %v0_10002cfc, i32* %r3.global-to-local, align 4
  %v3_10002d00 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002d00 = add i32 %v3_10002d00, 2
  %v5_10002d00 = inttoptr i32 %v4_10002d00 to i16*
  store i16 %v1_10002cfc, i16* %v5_10002d00, align 2
  %v0_10002d04 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002d04, label %dec_label_pc_10002d08, label %dec_label_pc_10002b84

dec_label_pc_10002d08:                            ; preds = %dec_label_pc_10002cfc, %dec_label_pc_10002b80
  %v0_10002d08 = call i32 @function_10006fa8()
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  %v1_10002d0c = load i32, i32* @r31, align 4
  %v2_10002d0c = add i32 %v1_10002d0c, 16
  %v3_10002d0c = inttoptr i32 %v2_10002d0c to i32*
  store i32 %v0_10002d08, i32* %v3_10002d0c, align 4
  br label %dec_label_pc_10002b8c

dec_label_pc_10002d14:                            ; preds = %dec_label_pc_10002b8c
  %v0_10002d14 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002d14 = add i32 %v0_10002d14, 8
  store i32 %v1_10002d14, i32* @r3, align 4
  %v0_10002d18 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10002d18, i32* @r4, align 4
  %v0_10002d1c = call i32 @function_100071d4()
  store i32 %v0_10002d1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002be8

; uselistorder directives
  uselistorder i32 %v0_10002cfc, { 1, 0 }
  uselistorder i32 %v0_10002cec, { 1, 0 }
  uselistorder i32 %v1_10002ce0, { 1, 0 }
  uselistorder i32 %v1_10002cd4, { 1, 0 }
  uselistorder i32 %v0_10002ccc, { 1, 0 }
  uselistorder i32 %v1_10002cc4, { 1, 0 }
  uselistorder i32 %v0_10002c8c, { 2, 1, 0 }
  uselistorder i1 %v1_10002c78, { 1, 0 }
  uselistorder i1 %v0_10002c78, { 1, 0 }
  uselistorder i32 %v1_10002c68, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002c44, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002c24, { 1, 0 }
  uselistorder i32 %v0_10002b50, { 2, 1, 0 }
  uselistorder i32 %v4_10002b30, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002b2c, { 1, 0 }
  uselistorder i32 %v1_10002a78, { 1, 0 }
  uselistorder i32 %v1_100029b4, { 1, 0 }
  uselistorder i32 %v1_100029a8, { 1, 0 }
  uselistorder i32 %v1_10002944, { 1, 0 }
  uselistorder i32 %v0_10002944, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002934, { 1, 2, 0 }
  uselistorder i32 %v0_10002928, { 1, 0 }
  uselistorder i32 %v5_100028d4, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14 }
  uselistorder i32* %r31.global-to-local, { 16, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 0, 1, 2, 3, 15 }
  uselistorder i32* %r30.global-to-local, { 12, 0, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 2, 10, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 5, 4, 6, 7, 8, 3, 0, 1, 2 }
  uselistorder i32* %r27.global-to-local, { 9, 4, 5, 6, 7, 8, 10, 0, 1, 2, 3 }
  uselistorder i32* %r26.global-to-local, { 4, 5, 6, 7, 8, 0, 1, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r22.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r20.global-to-local, { 3, 4, 7, 5, 6, 8, 9, 0, 1, 2 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r18.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r17.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r14.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r11.global-to-local, { 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 2, 3, 4, 5, 6, 7, 8, 9, 14, 10, 11, 12, 13, 1, 15, 16, 17, 18, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 3, 4, 5, 10, 6, 7, 8, 9, 11, 12, 13, 0, 1, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i1* %cr2_eq.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 38, { 3, 4, 5, 6, 0, 7, 1, 8, 2, 9 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002be8, { 1, 0 }
  uselistorder label %dec_label_pc_10002b18, { 1, 0 }
  uselistorder label %dec_label_pc_10002b14, { 1, 0 }
  uselistorder label %dec_label_pc_10002af4, { 1, 0 }
  uselistorder label %dec_label_pc_10002a90, { 1, 0 }
  uselistorder label %dec_label_pc_10002a64, { 1, 0 }
  uselistorder label %dec_label_pc_100029fc, { 1, 0 }
}

define i32 @function_10002d24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002d24:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002d28 = load i32, i32* @lr, align 4
  store i32 %v0_10002d28, i32* %r0.global-to-local, align 4
  %v0_10002d2c = call i32 @__asm_mfcr()
  store i32 %v0_10002d2c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10002d3c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002d2c, i32* %r19.global-to-local, align 4
  %v0_10002d70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002d78 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002d80 = load i32, i32* @r30, align 4
  %v0_10002d84 = load i32, i32* @r31, align 4
  store i32 268447128, i32* @lr, align 4
  %v2_10002d94 = call i32 @function_1000b8f4(i32 4, i32 4)
  store i32 %v2_10002d94, i32* %r20.global-to-local, align 4
  %v0_10002d9c = load i32, i32* @r28, align 4
  %v0_10002da8 = load i32, i32* @r29, align 4
  store i32 %v0_10002da8, i32* %r3.global-to-local, align 4
  store i32 268447152, i32* @lr, align 4
  %v4_10002dac = inttoptr i32 %v0_10002d9c to i32*
  %v5_10002dac = call i32 @function_1000235c(i32 %v0_10002da8, i32* %v4_10002dac, i32 2, i32 0)
  %v0_10002dbc = load i32, i32* @r28, align 4
  %v1_10002dc0 = urem i32 %v5_10002dac, 256
  store i32 %v1_10002dc0, i32* %r14.global-to-local, align 4
  %v0_10002dc4 = load i32, i32* @r29, align 4
  store i32 %v0_10002dc4, i32* %r3.global-to-local, align 4
  store i32 268447180, i32* @lr, align 4
  %v4_10002dc8 = inttoptr i32 %v0_10002dbc to i32*
  %v5_10002dc8 = call i32 @function_1000235c(i32 %v0_10002dc4, i32* %v4_10002dc8, i32 3, i32 65535)
  %v0_10002dcc = load i32, i32* @r28, align 4
  store i32 %v5_10002dc8, i32* %r25.global-to-local, align 4
  %v0_10002ddc = load i32, i32* @r29, align 4
  store i32 %v0_10002ddc, i32* %r3.global-to-local, align 4
  store i32 268447204, i32* @lr, align 4
  %v4_10002de0 = inttoptr i32 %v0_10002dcc to i32*
  %v5_10002de0 = call i32 @function_1000235c(i32 %v0_10002ddc, i32* %v4_10002de0, i32 4, i32 64)
  %v0_10002de4 = load i32, i32* @r28, align 4
  %v1_10002df0 = urem i32 %v5_10002de0, 256
  store i32 %v1_10002df0, i32* %r21.global-to-local, align 4
  %v0_10002df4 = load i32, i32* @r29, align 4
  store i32 %v0_10002df4, i32* %r3.global-to-local, align 4
  store i32 268447228, i32* @lr, align 4
  %v4_10002df8 = inttoptr i32 %v0_10002de4 to i32*
  %v5_10002df8 = call i32 @function_1000235c(i32 %v0_10002df4, i32* %v4_10002df8, i32 5, i32 1)
  %v0_10002e08 = load i32, i32* @r28, align 4
  %v1_10002e0c = urem i32 %v5_10002df8, 256
  store i32 %v1_10002e0c, i32* @r31, align 4
  %v0_10002e10 = load i32, i32* @r29, align 4
  store i32 %v0_10002e10, i32* %r3.global-to-local, align 4
  store i32 268447256, i32* @lr, align 4
  %v4_10002e14 = inttoptr i32 %v0_10002e08 to i32*
  %v5_10002e14 = call i32 @function_1000235c(i32 %v0_10002e10, i32* %v4_10002e14, i32 6, i32 65535)
  %v0_10002e1c = load i32, i32* @r28, align 4
  store i32 %v5_10002e14, i32* %r24.global-to-local, align 4
  %v0_10002e2c = load i32, i32* @r29, align 4
  store i32 %v0_10002e2c, i32* %r3.global-to-local, align 4
  store i32 268447284, i32* @lr, align 4
  %v4_10002e30 = inttoptr i32 %v0_10002e1c to i32*
  %v5_10002e30 = call i32 @function_1000235c(i32 %v0_10002e2c, i32* %v4_10002e30, i32 7, i32 65535)
  %v0_10002e34 = load i32, i32* @r28, align 4
  store i32 %v5_10002e30, i32* %r27.global-to-local, align 4
  %v0_10002e44 = load i32, i32* @r29, align 4
  store i32 %v0_10002e44, i32* %r3.global-to-local, align 4
  store i32 268447308, i32* @lr, align 4
  %v4_10002e48 = inttoptr i32 %v0_10002e34 to i32*
  %v5_10002e48 = call i32 @function_1000235c(i32 %v0_10002e44, i32* %v4_10002e48, i32 0, i32 512)
  %v0_10002e4c = load i32, i32* @r28, align 4
  store i32 %v5_10002e48, i32* %r16.global-to-local, align 4
  %v0_10002e5c = load i32, i32* @r29, align 4
  store i32 %v0_10002e5c, i32* %r3.global-to-local, align 4
  store i32 268447332, i32* @lr, align 4
  %v4_10002e60 = inttoptr i32 %v0_10002e4c to i32*
  %v5_10002e60 = call i32 @function_1000235c(i32 %v0_10002e5c, i32* %v4_10002e60, i32 1, i32 1)
  %v0_10002e64 = load i32, i32* @r28, align 4
  %v1_10002e70 = urem i32 %v5_10002e60, 256
  store i32 %v1_10002e70, i32* %r15.global-to-local, align 4
  %v0_10002e74 = load i32, i32* @r29, align 4
  store i32 %v0_10002e74, i32* %r3.global-to-local, align 4
  store i32 268447356, i32* @lr, align 4
  %v4_10002e78 = inttoptr i32 %v0_10002e64 to i32*
  %v5_10002e78 = call i32 @function_1000235c(i32 %v0_10002e74, i32* %v4_10002e78, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002e80 = load i32, i32* @global_var_1001e180.71, align 4
  %v0_10002e84 = load i32, i32* @r28, align 4
  store i32 %v5_10002e78, i32* %r30.global-to-local, align 4
  %v0_10002e90 = load i32, i32* @r29, align 4
  store i32 %v0_10002e90, i32* %r3.global-to-local, align 4
  store i32 268447384, i32* @lr, align 4
  %v4_10002e94 = inttoptr i32 %v0_10002e84 to i32*
  %v5_10002e94 = call i32 @function_1000235c(i32 %v0_10002e90, i32* %v4_10002e94, i32 25, i32 %v3_10002e80)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447404, i32* @lr, align 4
  %v3_10002ea8 = call i32 @function_1000b568(i32 2, i32 3, i32 6)
  store i32 %v3_10002ea8, i32* %r3.global-to-local, align 4
  %v3_10002eac = icmp eq i32 %v3_10002ea8, -1
  store i1 %v3_10002eac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002ea8, i32* %r23.global-to-local, align 4
  br i1 %v3_10002eac, label %dec_label_pc_10003044, label %dec_label_pc_10002eb8

dec_label_pc_10002eb8:                            ; preds = %dec_label_pc_10002d24
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002ec4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268447444, i32* @lr, align 4
  %v5_10002ed0 = call i32 @function_1000b52c(i32 0, i32 3, i32 %v2_10002ec4, i32 4, i32 4)
  store i32 %v5_10002ed0, i32* %r3.global-to-local, align 4
  %v3_10002ed4 = icmp eq i32 %v5_10002ed0, -1
  store i1 %v3_10002ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002ed4, label %dec_label_pc_1000303c, label %dec_label_pc_10002edc

dec_label_pc_10002edc:                            ; preds = %dec_label_pc_10002eb8
  %v0_10002edc = load i32, i32* %r19.global-to-local, align 4
  %v1_10002edc = icmp slt i32 %v0_10002edc, 0
  %v3_10002edc = icmp eq i32 %v0_10002edc, 0
  store i1 %v1_10002edc, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002edc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002ee8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002ee8 = urem i32 %v0_10002ee8, 65536
  store i32 %v1_10002ee8, i32* %r25.global-to-local, align 4
  %v0_10002eec = load i32, i32* %r24.global-to-local, align 4
  %v1_10002eec = urem i32 %v0_10002eec, 65536
  store i32 %v1_10002eec, i32* %r17.global-to-local, align 4
  %v0_10002ef0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002ef0 = urem i32 %v0_10002ef0, 65536
  store i32 %v1_10002ef0, i32* %r18.global-to-local, align 4
  %v0_10002ef4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002ef4 = urem i32 %v0_10002ef4, 256
  store i32 %v1_10002ef4, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10002edc, 1
  br i1 %tmp33, label %dec_label_pc_100030a4, label %dec_label_pc_10002efc

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002edc
  %v0_10002efc = load i32, i32* @r31, align 4
  %v3_10002efc = icmp eq i32 %v0_10002efc, 0
  store i1 %v3_10002efc, i1* %cr2_eq.global-to-local, align 1
  %v3_10002f00 = icmp eq i32 %v1_10002ef4, 0
  store i1 %v3_10002f00, i1* %cr3_eq.global-to-local, align 1
  %v0_10002f04 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002f04 = urem i32 %v0_10002f04, 65536
  %v0_10002ee8.not = or i32 %v0_10002ee8, -65536
  %v1_10002f08 = xor i32 %v0_10002ee8.not, 65535
  store i32 %v1_10002f08, i32* %r11.global-to-local, align 4
  %v1_10002f10 = add nuw nsw i32 %v1_10002f04, 52
  store i32 %v1_10002f10, i32* %r0.global-to-local, align 4
  %v1_10002f14 = add nuw nsw i32 %v1_10002f04, 28
  store i32 %v1_10002f14, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002f04, 52
  %v1_10002f18 = urem i32 %fold, 65536
  store i32 %v1_10002f18, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10002f04, 28
  %v1_10002f1c = urem i32 %fold8, 65536
  store i32 %v1_10002f1c, i32* %r24.global-to-local, align 4
  %v1_10002f20 = urem i32 %v1_10002f08, 65536
  store i32 %v1_10002f20, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10002f04, 8
  %v1_10002f24 = urem i32 %fold9, 65536
  store i32 %v1_10002f24, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002f58

dec_label_pc_10002f30:                            ; preds = %dec_label_pc_10003018
  %v0_10002f30 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002f30 = add i32 %v0_10002f30, 16
  %v2_10002f30 = inttoptr i32 %v1_10002f30 to i32*
  %v3_10002f30 = load i32, i32* %v2_10002f30, align 4
  store i32 %v3_10002f30, i32* %r0.global-to-local, align 4
  %v1_10002f34 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002f34 = add i32 %v1_10002f34, 16
  %v3_10002f34 = inttoptr i32 %v2_10002f34 to i32*
  store i32 %v3_10002f30, i32* %v3_10002f34, align 4
  br label %dec_label_pc_10002f38

dec_label_pc_10002f38:                            ; preds = %dec_label_pc_10003034, %dec_label_pc_10002f30
  %v3_10002f38 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f38, i32* %r9.global-to-local, align 4
  %v0_10002f3c = load i32, i32* @r28, align 4
  %v1_10002f3c = trunc i32 %v0_10002f3c to i16
  %v2_10002f3c = load i32, i32* %r29.global-to-local, align 4
  %v3_10002f3c = add i32 %v2_10002f3c, 4
  %v4_10002f3c = inttoptr i32 %v3_10002f3c to i16*
  store i16 %v1_10002f3c, i16* %v4_10002f3c, align 2
  %v0_10002f40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f40 = add i32 %v0_10002f40, 1
  store i32 %v1_10002f40, i32* %r31.global-to-local, align 4
  %v0_10002f44 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002f44 = trunc i32 %v0_10002f44 to i16
  %v2_10002f44 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002f44 = inttoptr i32 %v2_10002f44 to i16*
  store i16 %v1_10002f44, i16* %v3_10002f44, align 2
  %v0_10002f48 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002f48 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002f48 = icmp slt i32 %v0_10002f48, %v1_10002f48
  %v4_10002f48 = icmp eq i32 %v0_10002f48, %v1_10002f48
  store i1 %v4_10002f48, i1* %cr7_eq.global-to-local, align 1
  %v0_10002f4c = load i32, i32* %r18.global-to-local, align 4
  %v1_10002f4c = trunc i32 %v0_10002f4c to i16
  %v2_10002f4c = load i32, i32* %r29.global-to-local, align 4
  %v3_10002f4c = add i32 %v2_10002f4c, 2
  %v4_10002f4c = inttoptr i32 %v3_10002f4c to i16*
  store i16 %v1_10002f4c, i16* %v4_10002f4c, align 2
  %v0_10002f50 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002f50, i32* %stack_var_-104, align 4
  br i1 %v2_10002f48, label %dec_label_pc_10002f58, label %dec_label_pc_100030a8

dec_label_pc_10002f58:                            ; preds = %dec_label_pc_10002f38, %dec_label_pc_10002efc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447588, i32* @lr, align 4
  %v2_10002f60 = call i32 @function_1000b8f4(i32 1510, i32 4)
  store i32 %v2_10002f60, i32* %r3.global-to-local, align 4
  %v3_10002f64 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f64, i32* %r9.global-to-local, align 4
  %v0_10002f68 = load i32, i32* @r31, align 4
  %v1_10002f68 = mul i32 %v0_10002f68, 4
  store i32 %v1_10002f68, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10002f70 = load i32, i32* %r20.global-to-local, align 4
  %v3_10002f70 = add i32 %v1_10002f70, %v1_10002f68
  %v4_10002f70 = inttoptr i32 %v3_10002f70 to i32*
  store i32 %v2_10002f60, i32* %v4_10002f70, align 4
  %v0_10002f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f74 = mul i32 %v0_10002f74, 4
  store i32 %v1_10002f74, i32* %r9.global-to-local, align 4
  %v1_10002f78 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f78 = add i32 %v1_10002f78, %v1_10002f74
  %v3_10002f78 = inttoptr i32 %v2_10002f78 to i32*
  %v4_10002f78 = load i32, i32* %v3_10002f78, align 4
  store i32 %v4_10002f78, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002f80 = inttoptr i32 %v4_10002f78 to i32*
  %v2_10002f80 = load i32, i32* %v1_10002f80, align 4
  store i32 %v2_10002f80, i32* %r0.global-to-local, align 4
  %v1_10002f84 = add i32 %v4_10002f78, 24
  store i32 %v1_10002f84, i32* %r30.global-to-local, align 4
  %v0_10002f88 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002f88 = trunc i32 %v0_10002f88 to i8
  %v3_10002f88 = add i32 %v4_10002f78, 8
  %v4_10002f88 = inttoptr i32 %v3_10002f88 to i8*
  store i8 %v1_10002f88, i8* %v4_10002f88, align 1
  %v0_10002f8c = load i32, i32* %r31.global-to-local, align 4
  %v1_10002f8c = add i32 %v0_10002f8c, 44
  store i32 %v1_10002f8c, i32* %r29.global-to-local, align 4
  %v1_10002f90 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002f90, i32* %r0.global-to-local, align 4
  %v0_10002f94 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002f94 = trunc i32 %v0_10002f94 to i16
  %v2_10002f94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f94 = add i32 %v2_10002f94, 4
  %v4_10002f94 = inttoptr i32 %v3_10002f94 to i16*
  store i16 %v1_10002f94, i16* %v4_10002f94, align 2
  %v1_10002f98 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002f98, i32* %r0.global-to-local, align 4
  %v0_10002f9c = load i32, i32* %r31.global-to-local, align 4
  %v1_10002f9c = add i32 %v0_10002f9c, 20
  store i32 %v1_10002f9c, i32* %r9.global-to-local, align 4
  %v2_10002fa0 = inttoptr i32 %v0_10002f9c to i32*
  store i32 %v1_10002f98, i32* %v2_10002fa0, align 4
  %v0_10002fa4 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002fa4 = trunc i32 %v0_10002fa4 to i8
  %v2_10002fa4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002fa4 = add i32 %v2_10002fa4, 1
  %v4_10002fa4 = inttoptr i32 %v3_10002fa4 to i8*
  store i8 %v1_10002fa4, i8* %v4_10002fa4, align 1
  %v0_10002fa8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002fa8 = trunc i32 %v0_10002fa8 to i16
  %v2_10002fa8 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002fa8 = add i32 %v2_10002fa8, 2
  %v4_10002fa8 = inttoptr i32 %v3_10002fa8 to i16*
  store i16 %v1_10002fa8, i16* %v4_10002fa8, align 2
  %v0_10002fac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002fac, label %dec_label_pc_10002fb8, label %dec_label_pc_10002fb0

dec_label_pc_10002fb0:                            ; preds = %dec_label_pc_10002f58
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002fb4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002fb4 = add i32 %v2_10002fb4, 6
  %v4_10002fb4 = inttoptr i32 %v3_10002fb4 to i16*
  store i16 16384, i16* %v4_10002fb4, align 2
  br label %dec_label_pc_10002fb8

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002f58, %dec_label_pc_10002fb0
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10002fc0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002fc0 = add i32 %v2_10002fc0, 9
  %v4_10002fc0 = inttoptr i32 %v3_10002fc0 to i8*
  store i8 47, i8* %v4_10002fc0, align 1
  %v0_10002fc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fc4 = trunc i32 %v0_10002fc4 to i16
  %v2_10002fc4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fc4 = add i32 %v2_10002fc4, 2
  %v4_10002fc4 = inttoptr i32 %v3_10002fc4 to i16*
  store i16 %v1_10002fc4, i16* %v4_10002fc4, align 2
  %v3_10002fc8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10002e94, i32* %r11.global-to-local, align 4
  %v1_10002fd0 = mul i32 %v3_10002fc8, 24
  store i32 %v1_10002fd0, i32* %r9.global-to-local, align 4
  %v0_10002fd4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002fd4 = add i32 %v0_10002fd4, 24
  %v2_10002fd4 = inttoptr i32 %v1_10002fd4 to i32*
  %v3_10002fd4 = load i32, i32* %v2_10002fd4, align 4
  store i32 %v3_10002fd4, i32* %r0.global-to-local, align 4
  %v2_10002fd8 = add i32 %v0_10002fd4, 12
  %v3_10002fd8 = inttoptr i32 %v2_10002fd8 to i32*
  store i32 %v5_10002e94, i32* %v3_10002fd8, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10002fe0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002fe0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002fe0 = add i32 %v1_10002fe0, %v0_10002fe0
  store i32 %v2_10002fe0, i32* %r9.global-to-local, align 4
  %v1_10002fe4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002fe4, i32* %r0.global-to-local, align 4
  %v0_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002fe8 = add i32 %v0_10002fe8, 16
  %v2_10002fe8 = inttoptr i32 %v1_10002fe8 to i32*
  %v3_10002fe8 = load i32, i32* %v2_10002fe8, align 4
  store i32 %v3_10002fe8, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002ff0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002ff0, i32* %r0.global-to-local, align 4
  %v1_10002ff4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ff4 = add i32 %v1_10002ff4, 24
  %v3_10002ff4 = inttoptr i32 %v2_10002ff4 to i32*
  store i32 %v1_10002ff0, i32* %v3_10002ff4, align 4
  %v0_10002ff8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ff8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ff8 = add i32 %v1_10002ff8, 16
  %v3_10002ff8 = inttoptr i32 %v2_10002ff8 to i32*
  store i32 %v0_10002ff8, i32* %v3_10002ff8, align 4
  %v0_10002ffc = load i32, i32* %r14.global-to-local, align 4
  %v1_10002ffc = trunc i32 %v0_10002ffc to i8
  %v2_10002ffc = load i32, i32* %r30.global-to-local, align 4
  %v3_10002ffc = add i32 %v2_10002ffc, 1
  %v4_10002ffc = inttoptr i32 %v3_10002ffc to i8*
  store i8 %v1_10002ffc, i8* %v4_10002ffc, align 1
  %v0_10003000 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003000 = trunc i32 %v0_10003000 to i16
  %v2_10003000 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003000 = add i32 %v2_10003000, 2
  %v4_10003000 = inttoptr i32 %v3_10003000 to i16*
  store i16 %v1_10003000, i16* %v4_10003000, align 2
  %v0_10003004 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003004 = trunc i32 %v0_10003004 to i16
  %v2_10003004 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003004 = add i32 %v2_10003004, 4
  %v4_10003004 = inttoptr i32 %v3_10003004 to i16*
  store i16 %v1_10003004, i16* %v4_10003004, align 2
  %v0_10003008 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003008 = trunc i32 %v0_10003008 to i8
  %v2_10003008 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003008 = add i32 %v2_10003008, 8
  %v4_10003008 = inttoptr i32 %v3_10003008 to i8*
  store i8 %v1_10003008, i8* %v4_10003008, align 1
  %v0_1000300c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000300c, label %dec_label_pc_10003018, label %dec_label_pc_10003010

dec_label_pc_10003010:                            ; preds = %dec_label_pc_10002fb8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10003014 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003014 = add i32 %v2_10003014, 6
  %v4_10003014 = inttoptr i32 %v3_10003014 to i16*
  store i16 16384, i16* %v4_10003014, align 2
  br label %dec_label_pc_10003018

dec_label_pc_10003018:                            ; preds = %dec_label_pc_10002fb8, %dec_label_pc_10003010
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000301c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000301c = add i32 %v2_1000301c, 9
  %v4_1000301c = inttoptr i32 %v3_1000301c to i8*
  store i8 17, i8* %v4_1000301c, align 1
  %v0_10003020 = call i32 @function_10006fa8()
  store i32 %v0_10003020, i32* %r3.global-to-local, align 4
  %v1_10003024 = add i32 %v0_10003020, -1024
  store i32 %v1_10003024, i32* %r0.global-to-local, align 4
  %v1_10003028 = load i32, i32* %r30.global-to-local, align 4
  %v2_10003028 = add i32 %v1_10003028, 12
  %v3_10003028 = inttoptr i32 %v2_10003028 to i32*
  store i32 %v0_10003020, i32* %v3_10003028, align 4
  %v0_1000302c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000302c = sub i32 -1, %v0_1000302c
  store i32 %v1_1000302c, i32* %r0.global-to-local, align 4
  %v0_10003030 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003030, label %dec_label_pc_10003034, label %dec_label_pc_10002f30

dec_label_pc_10003034:                            ; preds = %dec_label_pc_10003018
  %v1_10003034 = load i32, i32* %r30.global-to-local, align 4
  %v2_10003034 = add i32 %v1_10003034, 16
  %v3_10003034 = inttoptr i32 %v2_10003034 to i32*
  store i32 %v1_1000302c, i32* %v3_10003034, align 4
  br label %dec_label_pc_10002f38

dec_label_pc_1000303c:                            ; preds = %dec_label_pc_10002eb8
  %v0_1000303c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000303c, i32* %r3.global-to-local, align 4
  store i32 268447812, i32* @lr, align 4
  %v0_10003040 = call i32 @function_1000a79c()
  store i32 %v0_10003040, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003044

dec_label_pc_10003044:                            ; preds = %dec_label_pc_10002d24, %dec_label_pc_1000303c
  store i32 %v0_10002d3c, i32* %r0.global-to-local, align 4
  %v1_10003058 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002d2c)
  store i32 %v0_10002d70, i32* %r28.global-to-local, align 4
  store i32 %v0_10002d78, i32* %r29.global-to-local, align 4
  store i32 %v0_10002d80, i32* %r30.global-to-local, align 4
  store i32 %v0_10002d84, i32* %r31.global-to-local, align 4
  %v0_100030a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100030a0

dec_label_pc_100030a4:                            ; preds = %dec_label_pc_10002edc
  %v3_100030a4 = icmp eq i32 %v1_10002ef4, 0
  store i1 %v3_100030a4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100030a8

dec_label_pc_100030a8:                            ; preds = %dec_label_pc_10002f38, %dec_label_pc_100030a4
  store i32 %v5_10002e94, i32* %r0.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r15.global-to-local, align 4
  %v3_100030ac = icmp eq i32 %v0_100030ac, 0
  store i1 %v3_100030ac, i1* %cr2_eq.global-to-local, align 1
  %v0_100030b0 = load i32, i32* %r16.global-to-local, align 4
  %v1_100030b0 = add i32 %v0_100030b0, 8
  store i32 %v1_100030b0, i32* %r22.global-to-local, align 4
  %v1_100030b4 = add i32 %v0_100030b0, 52
  store i32 %v1_100030b4, i32* %r24.global-to-local, align 4
  %v3_100030b8 = icmp eq i32 %v5_10002e94, -1
  store i1 %v3_100030b8, i1* %cr7_eq.global-to-local, align 1
  %v0_100030bc = call i32 @__asm_mfcr()
  store i32 %v0_100030bc, i32* %r3.global-to-local, align 4
  %v1_100030c0 = mul i32 %v0_100030bc, 268435456
  store i32 %v1_100030c0, i32* %r21.global-to-local, align 4
  %v0_100030c4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100030c4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100030c4.outer

dec_label_pc_100030c4.outer:                      ; preds = %dec_label_pc_100031cc, %dec_label_pc_100030a8
  %v1_100030c4.ph = phi i1 [ %v1_100030c4.pre, %dec_label_pc_100030a8 ], [ %v1_100031cc, %dec_label_pc_100031cc ]
  %v0_100030c4.ph = phi i1 [ %v0_100030c4.pre, %dec_label_pc_100030a8 ], [ %v0_100031cc, %dec_label_pc_100031cc ]
  %v2_100030c4 = or i1 %v1_100030c4.ph, %v0_100030c4.ph
  br label %dec_label_pc_100030c4

dec_label_pc_100030c4:                            ; preds = %dec_label_pc_100030c4.outer, %dec_label_pc_100030c4
  br i1 %v2_100030c4, label %dec_label_pc_100030c4, label %dec_label_pc_100030c8

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030c4, %dec_label_pc_100031cc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100030d8

dec_label_pc_100030d8:                            ; preds = %dec_label_pc_1000313c, %dec_label_pc_100030c8
  %v0_100030d8 = phi i32 [ %v1_100031bc, %dec_label_pc_1000313c ], [ 0, %dec_label_pc_100030c8 ]
  %v1_100030d8 = mul i32 %v0_100030d8, 24
  store i32 %v1_100030d8, i32* %r0.global-to-local, align 4
  %v1_100030dc = mul i32 %v0_100030d8, 4
  store i32 %v1_100030dc, i32* %r11.global-to-local, align 4
  %v1_100030e0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100030e0 = add i32 %v1_100030e0, %v1_100030dc
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  %v4_100030e0 = load i32, i32* %v3_100030e0, align 4
  store i32 %v4_100030e0, i32* %r28.global-to-local, align 4
  %v1_100030e4 = load i32, i32* %r26.global-to-local, align 4
  %v2_100030e4 = add i32 %v1_100030e4, %v1_100030d8
  %v1_100030e8 = add i32 %v2_100030e4, 20
  %v2_100030e8 = inttoptr i32 %v1_100030e8 to i8*
  %v3_100030e8 = load i8, i8* %v2_100030e8, align 1
  %v4_100030e8 = zext i8 %v3_100030e8 to i32
  store i32 %v4_100030e8, i32* %r9.global-to-local, align 4
  %v1_100030ec = add i32 %v4_100030e0, 24
  store i32 %v1_100030ec, i32* @r31, align 4
  %v1_100030f0 = add i32 %v4_100030e0, 44
  store i32 %v1_100030f0, i32* @r30, align 4
  %v3_100030f4 = icmp eq i8 %v3_100030e8, 31
  store i1 %v3_100030f4, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_100030e8, 32
  br i1 %tmp35, label %dec_label_pc_100031d4, label %dec_label_pc_100030fc

dec_label_pc_100030fc:                            ; preds = %dec_label_pc_100030d8
  %v0_100030fc = load i32, i32* %r21.global-to-local, align 4
  %v1_100030fc = mul i32 %v0_100030fc, 16
  %v2_100030fc = udiv i32 %v0_100030fc, 268435456
  %v3_100030fc = or i32 %v2_100030fc, %v1_100030fc
  store i32 %v3_100030fc, i32* %r21.global-to-local, align 4
  %v1_10003100 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100030fc)
  %v1_10003104 = mul nuw i32 %v2_100030fc, 268435456
  %v2_10003104 = urem i32 %v0_100030fc, 268435456
  %v3_10003104 = or i32 %v1_10003104, %v2_10003104
  store i32 %v3_10003104, i32* %r21.global-to-local, align 4
  %v0_10003108 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003108, label %dec_label_pc_10003208, label %dec_label_pc_1000310c

dec_label_pc_1000310c:                            ; preds = %dec_label_pc_100031d4, %dec_label_pc_100030fc
  store i32 65535, i32* @r29, align 4
  %v0_10003114 = load i32, i32* %r25.global-to-local, align 4
  %v4_10003114 = icmp eq i32 %v0_10003114, 65535
  store i1 %v4_10003114, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003114, label %dec_label_pc_10003220, label %dec_label_pc_1000311c

dec_label_pc_1000311c:                            ; preds = %dec_label_pc_10003208, %dec_label_pc_1000310c
  %v1_1000311c = phi i32 [ %v1_10003218, %dec_label_pc_10003208 ], [ 65535, %dec_label_pc_1000310c ]
  %v0_1000311c = load i32, i32* %r17.global-to-local, align 4
  %v4_1000311c = icmp eq i32 %v0_1000311c, %v1_1000311c
  store i1 %v4_1000311c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000311c, label %dec_label_pc_10003240, label %dec_label_pc_10003124

dec_label_pc_10003124:                            ; preds = %dec_label_pc_10003220.dec_label_pc_10003124_crit_edge, %dec_label_pc_1000311c
  %v1_10003124 = phi i32 [ %v1_10003124.pre, %dec_label_pc_10003220.dec_label_pc_10003124_crit_edge ], [ %v1_1000311c, %dec_label_pc_1000311c ]
  %v0_10003124 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003124 = icmp eq i32 %v0_10003124, %v1_10003124
  store i1 %v4_10003124, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003124, label %dec_label_pc_10003250, label %dec_label_pc_1000312c

dec_label_pc_1000312c:                            ; preds = %dec_label_pc_10003240, %dec_label_pc_10003124
  %v0_1000312c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000312c, label %dec_label_pc_1000325c, label %dec_label_pc_10003130

dec_label_pc_10003130:                            ; preds = %dec_label_pc_10003250, %dec_label_pc_1000312c
  %v0_10003130 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003130 = add i32 %v0_10003130, 16
  %v2_10003130 = inttoptr i32 %v1_10003130 to i32*
  %v3_10003130 = load i32, i32* %v2_10003130, align 4
  store i32 %v3_10003130, i32* %r0.global-to-local, align 4
  %v1_10003134 = load i32, i32* @r31, align 4
  %v2_10003134 = add i32 %v1_10003134, 16
  %v3_10003134 = inttoptr i32 %v2_10003134 to i32*
  store i32 %v3_10003130, i32* %v3_10003134, align 4
  %v0_10003138 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003138, label %dec_label_pc_1000313c, label %dec_label_pc_10003268

dec_label_pc_1000313c:                            ; preds = %dec_label_pc_10003130, %dec_label_pc_1000325c, %dec_label_pc_10003268
  %v0_1000313c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000313c = trunc i32 %v0_1000313c to i16
  %v2_1000313c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000313c = add i32 %v2_1000313c, 10
  %v4_1000313c = inttoptr i32 %v3_1000313c to i16*
  store i16 %v1_1000313c, i16* %v4_1000313c, align 2
  %v0_10003144 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003144, i32* @r3, align 4
  %v2_10003148 = call i32 @function_100056ac(i32 %v0_10003144, i32 20)
  %v3_10003148 = trunc i32 %v2_10003148 to i16
  %v4_10003150 = add i32 %v0_10003144, 10
  %v5_10003150 = inttoptr i32 %v4_10003150 to i16*
  store i16 %v3_10003148, i16* %v5_10003150, align 2
  %v0_10003154 = load i32, i32* @r31, align 4
  store i32 %v0_10003154, i32* @r3, align 4
  %v0_10003158 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003158 = trunc i32 %v0_10003158 to i16
  %v3_10003158 = add i32 %v0_10003154, 10
  %v4_10003158 = inttoptr i32 %v3_10003158 to i16*
  store i16 %v1_10003158, i16* %v4_10003158, align 2
  %v2_1000315c = call i32 @function_100056ac(i32 %v0_10003154, i32 20)
  %v3_1000315c = trunc i32 %v2_1000315c to i16
  %v0_10003160 = load i32, i32* @r30, align 4
  store i32 %v0_10003160, i32* @r4, align 4
  %v3_10003164 = load i32, i32* @r31, align 4
  %v4_10003164 = add i32 %v3_10003164, 10
  %v5_10003164 = inttoptr i32 %v4_10003164 to i16*
  store i16 %v3_1000315c, i16* %v5_10003164, align 2
  %v0_10003168 = load i32, i32* %r22.global-to-local, align 4
  %v0_1000316c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000316c = trunc i32 %v0_1000316c to i16
  %v2_1000316c = load i32, i32* @r30, align 4
  %v3_1000316c = add i32 %v2_1000316c, 6
  %v4_1000316c = inttoptr i32 %v3_1000316c to i16*
  store i16 %v1_1000316c, i16* %v4_1000316c, align 2
  %v0_10003170 = load i32, i32* @r31, align 4
  store i32 %v0_10003170, i32* %r3.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r30, align 4
  %v1_10003174 = add i32 %v0_10003174, 4
  %v2_10003174 = inttoptr i32 %v1_10003174 to i16*
  %v3_10003174 = load i16, i16* %v2_10003174, align 2
  %v4_10003174 = zext i16 %v3_10003174 to i32
  %v4_10003178 = call i32 @function_10005710(i32 %v0_10003170, i32 %v0_10003160, i32 %v4_10003174, i32 %v0_10003168)
  %v5_10003178 = trunc i32 %v4_10003178 to i16
  store i32 %v4_10003178, i32* %r3.global-to-local, align 4
  %v3_1000317c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000317c, i32* %r0.global-to-local, align 4
  %v0_10003180 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003180 = add i32 %v0_10003180, 16
  %v2_10003180 = inttoptr i32 %v1_10003180 to i32*
  %v3_10003180 = load i32, i32* %v2_10003180, align 4
  store i32 %v3_10003180, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003188 = mul i32 %v3_1000317c, 24
  store i32 %v1_10003188, i32* %r0.global-to-local, align 4
  %v3_1000318c = load i32, i32* @r30, align 4
  %v4_1000318c = add i32 %v3_1000318c, 6
  %v5_1000318c = inttoptr i32 %v4_1000318c to i16*
  store i16 %v5_10003178, i16* %v5_1000318c, align 2
  %v0_10003190 = load i32, i32* %r28.global-to-local, align 4
  %v0_10003194 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003194, i32* %r3.global-to-local, align 4
  %v0_10003198 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003198 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003198 = add i32 %v1_10003198, %v0_10003198
  %v0_1000319c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000319c = trunc i32 %v0_1000319c to i16
  %v5_1000319c = inttoptr i32 %v2_10003198 to i16*
  store i16 %v3_1000319c, i16* %v5_1000319c, align 2
  %v0_100031a0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100031a0 = add i32 %v2_10003198, 4
  %v3_100031a0 = inttoptr i32 %v2_100031a0 to i32*
  store i32 %v0_100031a0, i32* %v3_100031a0, align 4
  %v0_100031a4 = load i32, i32* %r24.global-to-local, align 4
  %v0_100031a8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100031a8 = trunc i32 %v0_100031a8 to i16
  %v3_100031a8 = add i32 %v2_10003198, 2
  %v4_100031a8 = inttoptr i32 %v3_100031a8 to i16*
  store i16 %v1_100031a8, i16* %v4_100031a8, align 2
  store i32 268448184, i32* @lr, align 4
  %v6_100031b4 = call i32 @function_1000b4ec(i32 %v0_10003194, i32 %v0_10003190, i32 %v0_100031a4, i32 16384, i32 %v2_10003198, i32 16)
  store i32 %v6_100031b4, i32* %r3.global-to-local, align 4
  %v3_100031b8 = load i32, i32* %stack_var_-104, align 4
  %v1_100031bc = add i32 %v3_100031b8, 1
  store i32 %v1_100031bc, i32* %r9.global-to-local, align 4
  %v1_100031c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100031c0 = icmp slt i32 %v1_100031bc, %v1_100031c0
  %v4_100031c0 = icmp eq i32 %v1_100031bc, %v1_100031c0
  store i1 %v4_100031c0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100031bc, i32* %stack_var_-104, align 4
  br i1 %v2_100031c0, label %dec_label_pc_100030d8, label %dec_label_pc_100031cc

dec_label_pc_100031cc:                            ; preds = %dec_label_pc_1000313c
  %v0_100031cc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100031cc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100031cc = or i1 %v0_100031cc, %v1_100031cc
  br i1 %v2_100031cc, label %dec_label_pc_100030c4.outer, label %dec_label_pc_100030c8

dec_label_pc_100031d4:                            ; preds = %dec_label_pc_100030d8
  %v1_100031d4 = add i32 %v2_100030e4, 16
  %v2_100031d4 = inttoptr i32 %v1_100031d4 to i32*
  %v3_100031d4 = load i32, i32* %v2_100031d4, align 4
  store i32 %v3_100031d4, i32* %r29.global-to-local, align 4
  %v0_100031d8 = call i32 @function_10006fa8()
  store i32 %v0_100031d8, i32* %r3.global-to-local, align 4
  %v3_100031dc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100031dc, i32* %r9.global-to-local, align 4
  %v0_100031e0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100031e0 = mul i32 %v0_100031e0, 16
  %v2_100031e0 = udiv i32 %v0_100031e0, 268435456
  %v3_100031e0 = or i32 %v2_100031e0, %v1_100031e0
  store i32 %v3_100031e0, i32* %r21.global-to-local, align 4
  %v1_100031e4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100031e0)
  %v1_100031e8 = mul nuw i32 %v2_100031e0, 268435456
  %v2_100031e8 = urem i32 %v0_100031e0, 268435456
  %v3_100031e8 = or i32 %v1_100031e8, %v2_100031e8
  store i32 %v3_100031e8, i32* %r21.global-to-local, align 4
  %v0_100031ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100031ec = mul i32 %v0_100031ec, 24
  %v1_100031f0 = load i32, i32* %r26.global-to-local, align 4
  %v2_100031f0 = add i32 %v1_100031f0, %v1_100031ec
  store i32 %v2_100031f0, i32* %r9.global-to-local, align 4
  %v1_100031f4 = add i32 %v2_100031f0, 20
  %v2_100031f4 = inttoptr i32 %v1_100031f4 to i8*
  %v3_100031f4 = load i8, i8* %v2_100031f4, align 1
  %v4_100031f4 = zext i8 %v3_100031f4 to i32
  store i32 %v4_100031f4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100031f4, 64
  %v2_100031f8 = zext i8 %tmp to i32
  %v3_100031f8 = lshr i32 %v0_100031d8, %v2_100031f8
  store i32 %v3_100031f8, i32* %r3.global-to-local, align 4
  %v0_100031fc = load i32, i32* %r29.global-to-local, align 4
  %v2_100031fc = add i32 %v3_100031f8, %v0_100031fc
  store i32 %v2_100031fc, i32* %r29.global-to-local, align 4
  %v1_10003200 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003200 = add i32 %v1_10003200, 16
  %v3_10003200 = inttoptr i32 %v2_10003200 to i32*
  store i32 %v2_100031fc, i32* %v3_10003200, align 4
  %v0_10003204 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003204, label %dec_label_pc_10003208, label %dec_label_pc_1000310c

dec_label_pc_10003208:                            ; preds = %dec_label_pc_100031d4, %dec_label_pc_100030fc
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000320c = call i32 @function_10006fa8()
  store i32 %v0_1000320c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003214 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003214 = add i32 %v1_10003214, 12
  %v3_10003214 = inttoptr i32 %v2_10003214 to i32*
  store i32 %v0_1000320c, i32* %v3_10003214, align 4
  %v0_10003218 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003218 = load i32, i32* @r29, align 4
  %v4_10003218 = icmp eq i32 %v0_10003218, %v1_10003218
  store i1 %v4_10003218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003218, label %dec_label_pc_10003220, label %dec_label_pc_1000311c

dec_label_pc_10003220:                            ; preds = %dec_label_pc_10003208, %dec_label_pc_1000310c
  %v0_10003220 = call i32 @function_10006fa8()
  %v0_10003224 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003224 = load i32, i32* @r29, align 4
  %v4_10003224 = icmp eq i32 %v0_10003224, %v1_10003224
  store i1 %v4_10003224, i1* %cr7_eq.global-to-local, align 1
  %v1_10003228 = urem i32 %v0_10003220, 65536
  store i32 %v1_10003228, i32* %r3.global-to-local, align 4
  %v1_1000322c = add nsw i32 %v1_10003228, -1000
  store i32 %v1_1000322c, i32* %r0.global-to-local, align 4
  %v1_10003230 = trunc i32 %v0_10003220 to i16
  %v2_10003230 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003230 = add i32 %v2_10003230, 4
  %v4_10003230 = inttoptr i32 %v3_10003230 to i16*
  store i16 %v1_10003230, i16* %v4_10003230, align 2
  %v0_10003234 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003234 = sub i32 -1, %v0_10003234
  store i32 %v1_10003234, i32* %r0.global-to-local, align 4
  %v1_10003238 = trunc i32 %v1_10003234 to i16
  %v2_10003238 = load i32, i32* @r31, align 4
  %v3_10003238 = add i32 %v2_10003238, 4
  %v4_10003238 = inttoptr i32 %v3_10003238 to i16*
  store i16 %v1_10003238, i16* %v4_10003238, align 2
  br i1 %v4_10003224, label %dec_label_pc_10003240, label %dec_label_pc_10003220.dec_label_pc_10003124_crit_edge

dec_label_pc_10003220.dec_label_pc_10003124_crit_edge: ; preds = %dec_label_pc_10003220
  %v1_10003124.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003124

dec_label_pc_10003240:                            ; preds = %dec_label_pc_10003220, %dec_label_pc_1000311c
  %v0_10003240 = call i32 @function_10006fa8()
  %v1_10003240 = trunc i32 %v0_10003240 to i16
  store i32 %v0_10003240, i32* %r3.global-to-local, align 4
  %v0_10003244 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003244 = load i32, i32* @r29, align 4
  %v4_10003244 = icmp eq i32 %v0_10003244, %v1_10003244
  store i1 %v4_10003244, i1* %cr7_eq.global-to-local, align 1
  %v3_10003248 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003248 = add i32 %v3_10003248, 44
  %v5_10003248 = inttoptr i32 %v4_10003248 to i16*
  store i16 %v1_10003240, i16* %v5_10003248, align 2
  br i1 %v4_10003244, label %dec_label_pc_10003250, label %dec_label_pc_1000312c

dec_label_pc_10003250:                            ; preds = %dec_label_pc_10003240, %dec_label_pc_10003124
  %v0_10003250 = call i32 @function_10006fa8()
  %v1_10003250 = trunc i32 %v0_10003250 to i16
  store i32 %v0_10003250, i32* %r3.global-to-local, align 4
  %v3_10003254 = load i32, i32* @r30, align 4
  %v4_10003254 = add i32 %v3_10003254, 2
  %v5_10003254 = inttoptr i32 %v4_10003254 to i16*
  store i16 %v1_10003250, i16* %v5_10003254, align 2
  %v0_10003258 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003258, label %dec_label_pc_1000325c, label %dec_label_pc_10003130

dec_label_pc_1000325c:                            ; preds = %dec_label_pc_10003250, %dec_label_pc_1000312c
  %v0_1000325c = call i32 @function_10006fa8()
  store i32 %v0_1000325c, i32* %r3.global-to-local, align 4
  %v1_10003260 = load i32, i32* @r31, align 4
  %v2_10003260 = add i32 %v1_10003260, 16
  %v3_10003260 = inttoptr i32 %v2_10003260 to i32*
  store i32 %v0_1000325c, i32* %v3_10003260, align 4
  %v0_10003264 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003264, label %dec_label_pc_1000313c, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003130, %dec_label_pc_1000325c
  %v0_10003268 = load i32, i32* @r30, align 4
  %v1_10003268 = add i32 %v0_10003268, 8
  store i32 %v1_10003268, i32* @r3, align 4
  %v0_1000326c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_1000326c, i32* @r4, align 4
  %v0_10003270 = call i32 @function_100071d4()
  store i32 %v0_10003270, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000313c

; uselistorder directives
  uselistorder i32 %v0_10003250, { 1, 0 }
  uselistorder i32 %v0_10003240, { 1, 0 }
  uselistorder i32 %v1_10003234, { 1, 0 }
  uselistorder i32 %v1_10003228, { 1, 0 }
  uselistorder i32 %v0_10003220, { 1, 0 }
  uselistorder i32 %v1_10003218, { 1, 0 }
  uselistorder i32 %v0_100031e0, { 2, 1, 0 }
  uselistorder i1 %v1_100031cc, { 1, 0 }
  uselistorder i1 %v0_100031cc, { 1, 0 }
  uselistorder i32 %v1_100031bc, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10003198, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10003178, { 1, 0 }
  uselistorder i32 %v0_100030fc, { 2, 1, 0 }
  uselistorder i32 %v4_100030e0, { 1, 0, 2 }
  uselistorder i32 %v1_100030dc, { 1, 0 }
  uselistorder i32 %v1_1000302c, { 1, 0 }
  uselistorder i32 %v1_10002f74, { 1, 0 }
  uselistorder i32 %v1_10002f68, { 1, 0 }
  uselistorder i32 %v1_10002f04, { 1, 0 }
  uselistorder i32 %v0_10002f04, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002ef4, { 1, 2, 0 }
  uselistorder i32 %v0_10002ee8, { 1, 0 }
  uselistorder i32 %v5_10002e94, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i8 47, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder label %dec_label_pc_10003268, { 1, 0 }
  uselistorder label %dec_label_pc_1000313c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100030c8, { 1, 0 }
  uselistorder label %dec_label_pc_100030c4, { 1, 0 }
  uselistorder label %dec_label_pc_100030a8, { 1, 0 }
  uselistorder label %dec_label_pc_10003044, { 1, 0 }
  uselistorder label %dec_label_pc_10003018, { 1, 0 }
  uselistorder label %dec_label_pc_10002fb8, { 1, 0 }
}

define i32 @function_10003278(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003278:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_1000327c = load i32, i32* @lr, align 4
  store i32 %v0_1000327c, i32* %r0.global-to-local, align 4
  %v0_10003280 = call i32 @__asm_mfcr()
  store i32 %v0_10003280, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003290 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003280, i32* %r21.global-to-local, align 4
  %v0_100032c8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100032d0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448492, i32* @lr, align 4
  %v2_100032e8 = call i32 @function_1000b8f4(i32 16, i32 16)
  store i32 %v2_100032e8, i32* %r22.global-to-local, align 4
  %v0_100032f4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100032f4, i32* %r3.global-to-local, align 4
  store i32 268448508, i32* @lr, align 4
  %v2_100032f8 = call i32 @function_1000b8f4(i32 %v0_100032f4, i32 4)
  %v0_100032fc = load i32, i32* @r28, align 4
  store i32 %v2_100032f8, i32* %r23.global-to-local, align 4
  %v0_1000330c = load i32, i32* @r29, align 4
  store i32 %v0_1000330c, i32* %r3.global-to-local, align 4
  store i32 268448532, i32* @lr, align 4
  %v4_10003310 = inttoptr i32 %v0_100032fc to i32*
  %v5_10003310 = call i32 @function_1000235c(i32 %v0_1000330c, i32* %v4_10003310, i32 2, i32 0)
  %v5_10003320 = trunc i32 %v5_10003310 to i8
  %v0_10003328 = load i32, i32* @r28, align 4
  %v0_1000332c = load i32, i32* @r29, align 4
  store i32 %v0_1000332c, i32* %r3.global-to-local, align 4
  store i32 268448564, i32* @lr, align 4
  %v4_10003330 = inttoptr i32 %v0_10003328 to i32*
  %v5_10003330 = call i32 @function_1000235c(i32 %v0_1000332c, i32* %v4_10003330, i32 3, i32 65535)
  %v0_10003334 = load i32, i32* @r28, align 4
  store i32 %v5_10003330, i32* @r31, align 4
  %v0_10003344 = load i32, i32* @r29, align 4
  store i32 %v0_10003344, i32* %r3.global-to-local, align 4
  store i32 268448588, i32* @lr, align 4
  %v4_10003348 = inttoptr i32 %v0_10003334 to i32*
  %v5_10003348 = call i32 @function_1000235c(i32 %v0_10003344, i32* %v4_10003348, i32 4, i32 64)
  %v0_1000334c = load i32, i32* @r28, align 4
  %v5_10003358 = trunc i32 %v5_10003348 to i8
  %v0_10003360 = load i32, i32* @r29, align 4
  store i32 %v0_10003360, i32* %r3.global-to-local, align 4
  store i32 268448616, i32* @lr, align 4
  %v4_10003364 = inttoptr i32 %v0_1000334c to i32*
  %v5_10003364 = call i32 @function_1000235c(i32 %v0_10003360, i32* %v4_10003364, i32 5, i32 1)
  %v1_1000336c = urem i32 %v5_10003364, 256
  %v0_10003378 = load i32, i32* @r28, align 4
  %v0_10003380 = load i32, i32* @r29, align 4
  store i32 %v0_10003380, i32* %r3.global-to-local, align 4
  store i32 268448648, i32* @lr, align 4
  %v4_10003384 = inttoptr i32 %v0_10003378 to i32*
  %v5_10003384 = call i32 @function_1000235c(i32 %v0_10003380, i32* %v4_10003384, i32 7, i32 65535)
  %v0_10003388 = load i32, i32* @r28, align 4
  %v5_10003394 = trunc i32 %v5_10003384 to i16
  %v0_1000339c = load i32, i32* @r29, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v4_100033a0 = inttoptr i32 %v0_10003388 to i32*
  %v5_100033a0 = call i32 @function_1000235c(i32 %v0_1000339c, i32* %v4_100033a0, i32 11, i32 0)
  %v0_100033a4 = load i32, i32* @r28, align 4
  %v1_100033a8 = urem i32 %v5_100033a0, 256
  %v0_100033b8 = load i32, i32* @r29, align 4
  store i32 %v0_100033b8, i32* %r3.global-to-local, align 4
  store i32 268448704, i32* @lr, align 4
  %v4_100033bc = inttoptr i32 %v0_100033a4 to i32*
  %v5_100033bc = call i32 @function_1000235c(i32 %v0_100033b8, i32* %v4_100033bc, i32 12, i32 1)
  %v0_100033c0 = load i32, i32* @r28, align 4
  %v1_100033cc = urem i32 %v5_100033bc, 256
  %v0_100033d0 = load i32, i32* @r29, align 4
  store i32 %v0_100033d0, i32* %r3.global-to-local, align 4
  store i32 268448728, i32* @lr, align 4
  %v4_100033d4 = inttoptr i32 %v0_100033c0 to i32*
  %v5_100033d4 = call i32 @function_1000235c(i32 %v0_100033d0, i32* %v4_100033d4, i32 13, i32 1)
  %v0_100033d8 = load i32, i32* @r28, align 4
  %v1_100033e4 = urem i32 %v5_100033d4, 256
  %v0_100033e8 = load i32, i32* @r29, align 4
  store i32 %v0_100033e8, i32* %r3.global-to-local, align 4
  store i32 268448752, i32* @lr, align 4
  %v4_100033ec = inttoptr i32 %v0_100033d8 to i32*
  %v5_100033ec = call i32 @function_1000235c(i32 %v0_100033e8, i32* %v4_100033ec, i32 14, i32 0)
  %v0_100033f0 = load i32, i32* @r28, align 4
  %v1_100033fc = urem i32 %v5_100033ec, 256
  %v0_10003400 = load i32, i32* @r29, align 4
  store i32 %v0_10003400, i32* %r3.global-to-local, align 4
  store i32 268448776, i32* @lr, align 4
  %v4_10003404 = inttoptr i32 %v0_100033f0 to i32*
  %v5_10003404 = call i32 @function_1000235c(i32 %v0_10003400, i32* %v4_10003404, i32 15, i32 0)
  %v0_10003408 = load i32, i32* @r28, align 4
  %v1_10003414 = urem i32 %v5_10003404, 256
  %v0_10003418 = load i32, i32* @r29, align 4
  store i32 %v0_10003418, i32* %r3.global-to-local, align 4
  store i32 268448800, i32* @lr, align 4
  %v4_1000341c = inttoptr i32 %v0_10003408 to i32*
  %v5_1000341c = call i32 @function_1000235c(i32 %v0_10003418, i32* %v4_1000341c, i32 16, i32 0)
  %v0_10003428 = load i32, i32* @r28, align 4
  %v1_1000342c = urem i32 %v5_1000341c, 256
  %v0_10003430 = load i32, i32* @r29, align 4
  store i32 %v0_10003430, i32* %r3.global-to-local, align 4
  store i32 268448824, i32* @lr, align 4
  %v4_10003434 = inttoptr i32 %v0_10003428 to i32*
  %v5_10003434 = call i32 @function_1000235c(i32 %v0_10003430, i32* %v4_10003434, i32 0, i32 768)
  %v0_10003438 = load i32, i32* @r28, align 4
  store i32 %v5_10003434, i32* %r25.global-to-local, align 4
  %v0_10003448 = load i32, i32* @r29, align 4
  store i32 %v0_10003448, i32* %r3.global-to-local, align 4
  store i32 268448848, i32* @lr, align 4
  %v4_1000344c = inttoptr i32 %v0_10003438 to i32*
  %v5_1000344c = call i32 @function_1000235c(i32 %v0_10003448, i32* %v4_1000344c, i32 1, i32 1)
  %v1_10003454 = urem i32 %v5_1000344c, 256
  store i32 %v1_10003454, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448868, i32* @lr, align 4
  %v3_10003460 = call i32 @function_1000b568(i32 2, i32 3, i32 6)
  store i32 %v3_10003460, i32* %r3.global-to-local, align 4
  %v3_10003464 = icmp eq i32 %v3_10003460, -1
  store i1 %v3_10003464, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003460, i32* %r24.global-to-local, align 4
  br i1 %v3_10003464, label %dec_label_pc_10003624, label %dec_label_pc_10003470

dec_label_pc_10003470:                            ; preds = %dec_label_pc_10003278
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000347c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448908, i32* @lr, align 4
  %v5_10003488 = call i32 @function_1000b52c(i32 0, i32 3, i32 %v2_1000347c, i32 4, i32 4)
  store i32 %v5_10003488, i32* %r3.global-to-local, align 4
  %v3_1000348c = icmp eq i32 %v5_10003488, -1
  store i1 %v3_1000348c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000348c, label %dec_label_pc_1000361c, label %dec_label_pc_10003494

dec_label_pc_10003494:                            ; preds = %dec_label_pc_10003470
  %v0_10003494 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003494 = icmp slt i32 %v0_10003494, 0
  %v3_10003494 = icmp eq i32 %v0_10003494, 0
  store i1 %v1_10003494, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003494, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100034a0 = load i32, i32* @r31, align 4
  %v1_100034a0 = urem i32 %v0_100034a0, 65536
  store i32 %v1_100034a0, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003494, 1
  br i1 %tmp49, label %dec_label_pc_100037bc, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_10003494
  %v4_100034a8 = sext i16 %v5_10003394 to i32
  store i32 %v4_100034a8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_1000354c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10003558 = ptrtoint i32* %stack_var_-384 to i32
  %v2_1000355c = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003594 = zext i16 %tmp13 to i32
  %v1_100035c4 = and i32 %tmp, 1179648
  %v3_100036d8 = icmp eq i32 %v1_1000336c, 0
  %v4_100036f8 = sext i8 %v5_10003320 to i32
  %v4_10003700 = sext i8 %v5_10003358 to i32
  %v1_100035c8 = and i32 %tmp, 327680
  %v3_100035c8 = icmp eq i32 %v1_100035c8, 0
  %v4_100035d0 = icmp eq i32 %v1_100035c4, 1179648
  br label %dec_label_pc_100034b4

dec_label_pc_100034b4:                            ; preds = %dec_label_pc_100037a8, %dec_label_pc_100035dc, %dec_label_pc_100034a8
  %v0_100034b4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100034b4 = add i32 %v0_100034b4, 40
  store i32 %v1_100034b4, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100034b8

dec_label_pc_100034b8:                            ; preds = %dec_label_pc_100035b4, %dec_label_pc_100034b4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v3_100034c4 = call i32 @function_1000b568(i32 2, i32 1, i32 0)
  store i32 %v3_100034c4, i32* %r3.global-to-local, align 4
  %v3_100034c8 = icmp eq i32 %v3_100034c4, -1
  store i1 %v3_100034c8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100034c4, i32* %r28.global-to-local, align 4
  br i1 %v3_100034c8, label %dec_label_pc_100037a8, label %dec_label_pc_100034d4

dec_label_pc_100034d4:                            ; preds = %dec_label_pc_100034b8
  store i32 3, i32* @r4, align 4
  store i32 268448996, i32* @lr, align 4
  %v1_100034e0 = call i32 @function_1000a66c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100034ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100034ec, i32* %r3.global-to-local, align 4
  store i32 268449016, i32* @lr, align 4
  %v2_100034f4 = call i32 @function_1000a66c(i32 %v0_100034ec)
  store i32 %v2_100034f4, i32* %r3.global-to-local, align 4
  %v3_100034f8 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003500 = mul i32 %v3_100034f8, 24
  store i32 %v1_10003500, i32* %r0.global-to-local, align 4
  %v0_10003508 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003508 = add i32 %v0_10003508, %v1_10003500
  store i32 %v2_10003508, i32* %r11.global-to-local, align 4
  %v1_1000350c = add i32 %v2_10003508, 20
  %v2_1000350c = inttoptr i32 %v1_1000350c to i8*
  %v3_1000350c = load i8, i8* %v2_1000350c, align 1
  %v4_1000350c = zext i8 %v3_1000350c to i32
  store i32 %v4_1000350c, i32* %r9.global-to-local, align 4
  %v3_10003510 = icmp eq i8 %v3_1000350c, 31
  store i1 %v3_10003510, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_1000350c, 32
  %v1_100035e8 = add i32 %v2_10003508, 16
  %v2_100035e8 = inttoptr i32 %v1_100035e8 to i32*
  %v3_100035e8 = load i32, i32* %v2_100035e8, align 4
  br i1 %tmp50, label %dec_label_pc_100035e8, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_100034d4
  store i32 %v3_100035e8, i32* %r0.global-to-local, align 4
  %v0_10003520 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003520, label %dec_label_pc_10003610, label %dec_label_pc_10003524

dec_label_pc_10003524:                            ; preds = %dec_label_pc_100035e8, %dec_label_pc_10003518
  %stack_var_-396.0 = phi i32 [ %v2_10003604, %dec_label_pc_100035e8 ], [ %v3_100035e8, %dec_label_pc_10003518 ]
  store i32 %v4_100034a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000352c

dec_label_pc_1000352c:                            ; preds = %dec_label_pc_10003610, %dec_label_pc_10003524
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003610 ], [ %stack_var_-396.0, %dec_label_pc_10003524 ]
  %storemerge = phi i16 [ %v1_10003610, %dec_label_pc_10003610 ], [ %v5_10003394, %dec_label_pc_10003524 ]
  %v0_10003534 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003534, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000353c.75 to i32), i32* @lr, align 4
  %v0_10003538 = call i32 @function_1000b368()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449092, i32* @lr, align 4
  %v0_10003540 = call i32 @function_1000ab6c()
  store i32 %v0_10003540, i32* %r3.global-to-local, align 4
  store i32 %v0_10003540, i32* @r31, align 4
  %v4_10003588 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10003598 = zext i16 %storemerge to i32
  %v4_1000359c = icmp eq i16 %storemerge, %tmp13
  %v4_10003588.not = xor i1 %v4_10003588, true
  br label %dec_label_pc_10003548

dec_label_pc_10003548:                            ; preds = %dec_label_pc_100035a4, %dec_label_pc_1000352c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10003558, i32* %r7.global-to-local, align 4
  store i32 %v2_1000355c, i32* %r8.global-to-local, align 4
  %v0_10003560 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449132, i32* @lr, align 4
  %v6_10003568 = call i32 @function_1000b474(i32 %v0_10003560, i32 %v2_1000354c, i32 256, i32 16384, i32 %v2_10003558, i32 %v2_1000355c)
  store i32 %v6_10003568, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10003574 = icmp eq i32 %v6_10003568, -1
  store i1 %v3_10003574, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003574, label %dec_label_pc_10003624, label %dec_label_pc_10003580

dec_label_pc_10003580:                            ; preds = %dec_label_pc_10003548
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10003588, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10003568, 41
  %or.cond = or i1 %tmp51, %v4_10003588.not
  br i1 %or.cond, label %dec_label_pc_100035a4, label %dec_label_pc_10003594

dec_label_pc_10003594:                            ; preds = %dec_label_pc_10003580
  store i32 %v4_10003594, i32* %r0.global-to-local, align 4
  store i32 %v4_10003598, i32* %r8.global-to-local, align 4
  store i1 %v4_1000359c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000359c, label %dec_label_pc_100035c0, label %dec_label_pc_100035a4

dec_label_pc_100035a4:                            ; preds = %dec_label_pc_10003580, %dec_label_pc_100035d8, %dec_label_pc_10003594
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @function_1000ab6c()
  %v0_100035a8 = load i32, i32* @r31, align 4
  %v2_100035a8 = sub i32 %v0_100035a4, %v0_100035a8
  store i32 %v2_100035a8, i32* %r3.global-to-local, align 4
  %v3_100035ac = icmp eq i32 %v2_100035a8, 10
  store i1 %v3_100035ac, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_100035a8, 11
  br i1 %tmp52, label %dec_label_pc_10003548, label %dec_label_pc_100035b4

dec_label_pc_100035b4:                            ; preds = %dec_label_pc_100035a4
  %v0_100035b4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100035b4, i32* %r3.global-to-local, align 4
  store i32 268449212, i32* @lr, align 4
  %v0_100035b8 = call i32 @function_1000a79c()
  store i32 %v0_100035b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b8

dec_label_pc_100035c0:                            ; preds = %dec_label_pc_10003594
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_100035c4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100035d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100035d0, label %dec_label_pc_10003684, label %dec_label_pc_100035d8

dec_label_pc_100035d8:                            ; preds = %dec_label_pc_100035c0
  br i1 %v3_100035c8, label %dec_label_pc_100035a4, label %dec_label_pc_100035dc

dec_label_pc_100035dc:                            ; preds = %dec_label_pc_100035d8
  %v0_100035dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100035dc, i32* %r3.global-to-local, align 4
  store i32 268449252, i32* @lr, align 4
  %v0_100035e0 = call i32 @function_1000a79c()
  store i32 %v0_100035e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b4

dec_label_pc_100035e8:                            ; preds = %dec_label_pc_100034d4
  store i32 %v3_100035e8, i32* %r29.global-to-local, align 4
  %v0_100035ec = call i32 @function_10006fa8()
  store i32 %v0_100035ec, i32* %r3.global-to-local, align 4
  %v3_100035f0 = load i32, i32* %stack_var_-408, align 4
  %v1_100035f4 = mul i32 %v3_100035f0, 24
  %v1_100035f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100035f8 = add i32 %v1_100035f8, %v1_100035f4
  store i32 %v2_100035f8, i32* %r9.global-to-local, align 4
  %v1_100035fc = add i32 %v2_100035f8, 20
  %v2_100035fc = inttoptr i32 %v1_100035fc to i8*
  %v3_100035fc = load i8, i8* %v2_100035fc, align 1
  %v4_100035fc = zext i8 %v3_100035fc to i32
  store i32 %v4_100035fc, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_100035fc, 64
  %v2_10003600 = zext i8 %tmp53 to i32
  %v3_10003600 = lshr i32 %v0_100035ec, %v2_10003600
  store i32 %v3_10003600, i32* %r3.global-to-local, align 4
  %v0_10003604 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003604 = add i32 %v3_10003600, %v0_10003604
  store i32 %v2_10003604, i32* %r29.global-to-local, align 4
  %v0_1000360c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000360c, label %dec_label_pc_10003610, label %dec_label_pc_10003524

dec_label_pc_10003610:                            ; preds = %dec_label_pc_100035e8, %dec_label_pc_10003518
  %stack_var_-396.2 = phi i32 [ %v2_10003604, %dec_label_pc_100035e8 ], [ %v3_100035e8, %dec_label_pc_10003518 ]
  %v0_10003610 = call i32 @function_10006fa8()
  %v1_10003610 = trunc i32 %v0_10003610 to i16
  store i32 %v0_10003610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000352c

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_10003470
  %v0_1000361c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000361c, i32* %r3.global-to-local, align 4
  store i32 268449316, i32* @lr, align 4
  %v0_10003620 = call i32 @function_1000a79c()
  store i32 %v0_10003620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003624

dec_label_pc_10003624:                            ; preds = %dec_label_pc_10003548, %dec_label_pc_10003278, %dec_label_pc_1000361c
  store i32 %v0_10003290, i32* %r0.global-to-local, align 4
  %v1_10003638 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003280)
  store i32 %v0_100032c8, i32* %r28.global-to-local, align 4
  store i32 %v0_100032d0, i32* %r29.global-to-local, align 4
  %v0_10003680 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003680

dec_label_pc_10003684:                            ; preds = %dec_label_pc_100035c0
  %v3_10003684 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003684, i32* %r29.global-to-local, align 4
  %v0_10003688 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003688, i32* @r3, align 4
  %v0_1000368c = load i32, i32* @r30, align 4
  %v1_1000368c = add i32 %v0_1000368c, 2
  %v2_1000368c = inttoptr i32 %v1_1000368c to i16*
  %v3_1000368c = load i16, i16* %v2_1000368c, align 2
  %v4_1000368c = zext i16 %v3_1000368c to i32
  store i32 %v4_1000368c, i32* %r11.global-to-local, align 4
  %v1_10003690 = mul i32 %v3_10003684, 16
  store i32 %v1_10003690, i32* %r9.global-to-local, align 4
  %v1_10003694 = mul i32 %v3_10003684, 4
  store i32 %v1_10003694, i32* @r29, align 4
  %v1_10003698 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003698 = add i32 %v1_10003698, %v1_10003690
  %v4_10003698 = inttoptr i32 %v3_10003698 to i32*
  store i32 %tmp14, i32* %v4_10003698, align 4
  %v0_1000369c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000369c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000369c = add i32 %v1_1000369c, %v0_1000369c
  store i32 %v2_1000369c, i32* %r9.global-to-local, align 4
  %v0_100036a0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100036a0 = trunc i32 %v0_100036a0 to i16
  %v3_100036a0 = add i32 %v2_1000369c, 14
  %v4_100036a0 = inttoptr i32 %v3_100036a0 to i16*
  store i16 %v1_100036a0, i16* %v4_100036a0, align 2
  %v0_100036a4 = load i32, i32* @r30, align 4
  %v1_100036a4 = add i32 %v0_100036a4, 4
  %v2_100036a4 = inttoptr i32 %v1_100036a4 to i32*
  %v3_100036a4 = load i32, i32* %v2_100036a4, align 4
  store i32 %v3_100036a4, i32* %r0.global-to-local, align 4
  %v0_100036a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036a8 = trunc i32 %v0_100036a8 to i16
  %v2_100036a8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100036a8 = add i32 %v2_100036a8, 12
  %v4_100036a8 = inttoptr i32 %v3_100036a8 to i16*
  store i16 %v1_100036a8, i16* %v4_100036a8, align 2
  %v0_100036ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100036ac = load i32, i32* %r9.global-to-local, align 4
  %v2_100036ac = add i32 %v1_100036ac, 4
  %v3_100036ac = inttoptr i32 %v2_100036ac to i32*
  store i32 %v0_100036ac, i32* %v3_100036ac, align 4
  %v0_100036b0 = load i32, i32* @r30, align 4
  %v1_100036b0 = add i32 %v0_100036b0, 8
  %v2_100036b0 = inttoptr i32 %v1_100036b0 to i32*
  %v3_100036b0 = load i32, i32* %v2_100036b0, align 4
  store i32 %v3_100036b0, i32* %r0.global-to-local, align 4
  %v1_100036b4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100036b4 = add i32 %v1_100036b4, 8
  %v3_100036b4 = inttoptr i32 %v2_100036b4 to i32*
  store i32 %v3_100036b0, i32* %v3_100036b4, align 4
  store i32 268449468, i32* @lr, align 4
  %v0_100036b8 = call i32 @function_1000b79c()
  store i32 %v0_100036b8, i32* %r3.global-to-local, align 4
  %v3_100036bc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100036bc, i32* %r0.global-to-local, align 4
  %v1_100036c0 = load i32, i32* @r29, align 4
  %v2_100036c0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100036c0 = add i32 %v2_100036c0, %v1_100036c0
  %v4_100036c0 = inttoptr i32 %v3_100036c0 to i32*
  store i32 %v0_100036b8, i32* %v4_100036c0, align 4
  %v0_100036c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100036c4 = mul i32 %v0_100036c4, 4
  store i32 %v1_100036c4, i32* %r0.global-to-local, align 4
  %v0_100036c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100036c8 = add i32 %v0_100036c8, %v1_100036c4
  %v3_100036c8 = inttoptr i32 %v2_100036c8 to i32*
  %v4_100036c8 = load i32, i32* %v3_100036c8, align 4
  store i32 %v4_100036c8, i32* @r31, align 4
  store i32 %v1_1000336c, i32* %r0.global-to-local, align 4
  %v1_100036d0 = inttoptr i32 %v4_100036c8 to i32*
  %v2_100036d0 = load i32, i32* %v1_100036d0, align 4
  store i32 %v2_100036d0, i32* %r9.global-to-local, align 4
  %v1_100036d4 = add i32 %v4_100036c8, 20
  store i32 %v1_100036d4, i32* @r30, align 4
  store i1 %v3_100036d8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100036e0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036e0, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100036e8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100036ec = load i32, i32* %r19.global-to-local, align 4
  %v1_100036ec = trunc i32 %v0_100036ec to i16
  %v2_100036ec = load i32, i32* @r31, align 4
  %v3_100036ec = add i32 %v2_100036ec, 4
  %v4_100036ec = inttoptr i32 %v3_100036ec to i16*
  store i16 %v1_100036ec, i16* %v4_100036ec, align 2
  %v1_100036f0 = load i32, i32* @r31, align 4
  %v2_100036f0 = inttoptr i32 %v1_100036f0 to i32*
  store i32 %v1_100036e8, i32* %v2_100036f0, align 4
  %v0_100036f4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100036f4 = trunc i32 %v0_100036f4 to i16
  %v2_100036f4 = load i32, i32* @r31, align 4
  %v3_100036f4 = add i32 %v2_100036f4, 2
  %v4_100036f4 = inttoptr i32 %v3_100036f4 to i16*
  store i16 %v1_100036f4, i16* %v4_100036f4, align 2
  store i32 %v4_100036f8, i32* %r9.global-to-local, align 4
  %v2_100036fc = load i32, i32* @r31, align 4
  %v3_100036fc = add i32 %v2_100036fc, 1
  %v4_100036fc = inttoptr i32 %v3_100036fc to i8*
  store i8 %v5_10003320, i8* %v4_100036fc, align 1
  store i32 %v4_10003700, i32* %r0.global-to-local, align 4
  %v2_10003704 = load i32, i32* @r31, align 4
  %v3_10003704 = add i32 %v2_10003704, 8
  %v4_10003704 = inttoptr i32 %v3_10003704 to i8*
  store i8 %v5_10003358, i8* %v4_10003704, align 1
  %v0_10003708 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003708, label %dec_label_pc_10003714, label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_10003684
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003710 = load i32, i32* @r31, align 4
  %v3_10003710 = add i32 %v2_10003710, 6
  %v4_10003710 = inttoptr i32 %v3_10003710 to i16*
  store i16 16384, i16* %v4_10003710, align 2
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003684, %dec_label_pc_1000370c
  %v2_1000371c = load i32, i32* @r31, align 4
  %v3_1000371c = add i32 %v2_1000371c, 9
  %v4_1000371c = inttoptr i32 %v3_1000371c to i8*
  store i8 6, i8* %v4_1000371c, align 1
  %v3_10003720 = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_10003720, i32* %r0.global-to-local, align 4
  %v1_10003724 = load i32, i32* @r31, align 4
  %v2_10003724 = add i32 %v1_10003724, 12
  %v3_10003724 = inttoptr i32 %v2_10003724 to i32*
  store i32 %v3_10003720, i32* %v3_10003724, align 4
  %v3_10003728 = load i32, i32* %stack_var_-408, align 4
  %v1_1000372c = mul i32 %v3_10003728, 16
  store i32 %v1_1000372c, i32* %r9.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, %v1_1000372c
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  %v4_10003730 = load i32, i32* %v3_10003730, align 4
  store i32 %v4_10003730, i32* %r0.global-to-local, align 4
  store i32 %v2_10003730, i32* %r9.global-to-local, align 4
  %v1_10003738 = add i32 %v2_10003730, 12
  %v2_10003738 = inttoptr i32 %v1_10003738 to i16*
  %v3_10003738 = load i16, i16* %v2_10003738, align 2
  %v4_10003738 = zext i16 %v3_10003738 to i32
  store i32 %v4_10003738, i32* %r11.global-to-local, align 4
  %v1_1000373c = load i32, i32* @r31, align 4
  %v2_1000373c = add i32 %v1_1000373c, 16
  %v3_1000373c = inttoptr i32 %v2_1000373c to i32*
  store i32 %v4_10003730, i32* %v3_1000373c, align 4
  %v0_10003740 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003740 = trunc i32 %v0_10003740 to i16
  %v2_10003740 = load i32, i32* @r31, align 4
  %v3_10003740 = add i32 %v2_10003740, 20
  %v4_10003740 = inttoptr i32 %v3_10003740 to i16*
  store i16 %v1_10003740, i16* %v4_10003740, align 2
  %v0_10003744 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003744 = add i32 %v0_10003744, 8
  %v2_10003744 = inttoptr i32 %v1_10003744 to i32*
  %v3_10003744 = load i32, i32* %v2_10003744, align 4
  store i32 %v3_10003744, i32* %r0.global-to-local, align 4
  %v0_10003748 = load i32, i32* @r30, align 4
  %v1_10003748 = add i32 %v0_10003748, 12
  %v2_10003748 = inttoptr i32 %v1_10003748 to i32*
  %v3_10003748 = load i32, i32* %v2_10003748, align 4
  store i32 %v3_10003748, i32* %r11.global-to-local, align 4
  %v2_1000374c = add i32 %v0_10003748, 4
  %v3_1000374c = inttoptr i32 %v2_1000374c to i32*
  store i32 %v3_10003744, i32* %v3_1000374c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003754 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003754, i32* %r11.global-to-local, align 4
  %v0_10003758 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003758 = add i32 %v0_10003758, 14
  %v2_10003758 = inttoptr i32 %v1_10003758 to i16*
  %v3_10003758 = load i16, i16* %v2_10003758, align 2
  %v4_10003758 = zext i16 %v3_10003758 to i32
  store i32 %v4_10003758, i32* %r0.global-to-local, align 4
  %v1_1000375c = add i32 %v0_10003758, 4
  %v2_1000375c = inttoptr i32 %v1_1000375c to i32*
  %v3_1000375c = load i32, i32* %v2_1000375c, align 4
  store i32 %v3_1000375c, i32* %r10.global-to-local, align 4
  %v1_10003760 = or i32 %v1_10003754, 1114112
  store i32 %v1_10003760, i32* %r11.global-to-local, align 4
  %v2_10003764 = load i32, i32* @r30, align 4
  %v3_10003764 = add i32 %v2_10003764, 2
  %v4_10003764 = inttoptr i32 %v3_10003764 to i16*
  store i16 %v3_10003758, i16* %v4_10003764, align 2
  %v0_10003768 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003768 = load i32, i32* @r30, align 4
  %v2_10003768 = add i32 %v1_10003768, 8
  %v3_10003768 = inttoptr i32 %v2_10003768 to i32*
  store i32 %v0_10003768, i32* %v3_10003768, align 4
  %v0_1000376c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000376c = load i32, i32* @r30, align 4
  %v2_1000376c = add i32 %v1_1000376c, 12
  %v3_1000376c = inttoptr i32 %v2_1000376c to i32*
  store i32 %v0_1000376c, i32* %v3_1000376c, align 4
  %v0_10003770 = call i32 @function_10006fa8()
  %v1_10003770 = trunc i32 %v0_10003770 to i16
  store i32 %v1_100033a8, i32* %r9.global-to-local, align 4
  %v3_10003778 = load i32, i32* @r30, align 4
  %v4_10003778 = add i32 %v3_10003778, 14
  %v5_10003778 = inttoptr i32 %v4_10003778 to i16*
  store i16 %v1_10003770, i16* %v5_10003778, align 2
  %v0_1000377c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000377c, i32* @r4, align 4
  %v0_10003780 = load i32, i32* @r31, align 4
  %v1_10003780 = add i32 %v0_10003780, 40
  store i32 %v1_10003780, i32* @r3, align 4
  %v0_10003784 = load i32, i32* @r30, align 4
  %v1_10003784 = add i32 %v0_10003784, 12
  %v2_10003784 = inttoptr i32 %v1_10003784 to i32*
  %v3_10003784 = load i32, i32* %v2_10003784, align 4
  store i32 %v3_10003784, i32* %r0.global-to-local, align 4
  %v1_10003788 = call i32 @__asm_rlwimi(i32 %v1_100033a8, i32 21, i32 10, i32 10)
  store i32 %v1_10003788, i32* %r0.global-to-local, align 4
  %v1_1000378c = call i32 @__asm_rlwimi(i32 %v1_100033cc, i32 20, i32 11, i32 11)
  store i32 %v1_1000378c, i32* %r0.global-to-local, align 4
  %v1_10003790 = call i32 @__asm_rlwimi(i32 %v1_100033e4, i32 19, i32 12, i32 12)
  store i32 %v1_10003790, i32* %r0.global-to-local, align 4
  %v1_10003794 = call i32 @__asm_rlwimi(i32 %v1_100033fc, i32 18, i32 13, i32 13)
  store i32 %v1_10003794, i32* %r0.global-to-local, align 4
  %v1_10003798 = call i32 @__asm_rlwimi(i32 %v1_10003414, i32 17, i32 14, i32 14)
  store i32 %v1_10003798, i32* %r0.global-to-local, align 4
  %v1_1000379c = call i32 @__asm_rlwimi(i32 %v1_1000342c, i32 16, i32 15, i32 15)
  store i32 %v1_1000379c, i32* %r0.global-to-local, align 4
  %v1_100037a0 = load i32, i32* @r30, align 4
  %v2_100037a0 = add i32 %v1_100037a0, 12
  %v3_100037a0 = inttoptr i32 %v2_100037a0 to i32*
  store i32 %v1_1000379c, i32* %v3_100037a0, align 4
  %v0_100037a4 = call i32 @function_100071d4()
  store i32 %v0_100037a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100037a8

dec_label_pc_100037a8:                            ; preds = %dec_label_pc_100034b8, %dec_label_pc_10003714
  %v3_100037a8 = load i32, i32* %stack_var_-408, align 4
  %v1_100037ac = add i32 %v3_100037a8, 1
  store i32 %v1_100037ac, i32* %r9.global-to-local, align 4
  %v1_100037b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100037b0 = icmp slt i32 %v1_100037ac, %v1_100037b0
  %v4_100037b0 = icmp eq i32 %v1_100037ac, %v1_100037b0
  store i1 %v4_100037b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100037ac, i32* %stack_var_-408, align 4
  br i1 %v2_100037b0, label %dec_label_pc_100034b4, label %dec_label_pc_100037bc.loopexit

dec_label_pc_100037bc.loopexit:                   ; preds = %dec_label_pc_100037a8
  %v0_100037c8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100037c8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100037bc

dec_label_pc_100037bc:                            ; preds = %dec_label_pc_100037bc.loopexit, %dec_label_pc_10003494
  %v1_100037c8.pre = phi i1 [ %v1_100037c8.pre.pre, %dec_label_pc_100037bc.loopexit ], [ %v1_10003494, %dec_label_pc_10003494 ]
  %v0_100037c8.pre = phi i1 [ %v0_100037c8.pre.pre, %dec_label_pc_100037bc.loopexit ], [ %v3_10003494, %dec_label_pc_10003494 ]
  %v0_100037bc = load i32, i32* %r27.global-to-local, align 4
  %v3_100037bc = icmp eq i32 %v0_100037bc, 0
  store i1 %v3_100037bc, i1* %cr2_eq.global-to-local, align 1
  %v0_100037c0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100037c0 = add i32 %v0_100037c0, 40
  store i32 %v1_100037c0, i32* %r26.global-to-local, align 4
  %v1_100037c4 = add i32 %v0_100037c0, 20
  store i32 %v1_100037c4, i32* @r31, align 4
  br label %dec_label_pc_100037c8.outer

dec_label_pc_100037c8.outer:                      ; preds = %dec_label_pc_1000389c, %dec_label_pc_100037bc
  %v1_100037c8.ph = phi i1 [ %v1_100037c8.pre, %dec_label_pc_100037bc ], [ %v1_1000389c, %dec_label_pc_1000389c ]
  %v0_100037c8.ph = phi i1 [ %v0_100037c8.pre, %dec_label_pc_100037bc ], [ %v0_1000389c, %dec_label_pc_1000389c ]
  %v2_100037c8 = or i1 %v1_100037c8.ph, %v0_100037c8.ph
  br label %dec_label_pc_100037c8

dec_label_pc_100037c8:                            ; preds = %dec_label_pc_100037c8.outer, %dec_label_pc_100037c8
  br i1 %v2_100037c8, label %dec_label_pc_100037c8, label %dec_label_pc_100037cc

dec_label_pc_100037cc:                            ; preds = %dec_label_pc_100037c8, %dec_label_pc_1000389c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100037dc = load i32, i32* %r19.global-to-local, align 4
  %v4_100037dc = icmp eq i32 %v0_100037dc, 65535
  store i1 %v4_100037dc, i1* %cr4_eq.global-to-local, align 1
  %v0_100037e0 = load i32, i32* @r31, align 4
  %v1_100037e0 = urem i32 %v0_100037e0, 65536
  store i32 %v1_100037e0, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100037ec

dec_label_pc_100037ec:                            ; preds = %dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge, %dec_label_pc_100037cc
  %v0_100037f8 = phi i1 [ %v0_100037f8.pre, %dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge ], [ %v4_100037dc, %dec_label_pc_100037cc ]
  %v0_100037ec = phi i32 [ %v1_1000388c, %dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge ], [ 0, %dec_label_pc_100037cc ]
  %v1_100037ec = mul i32 %v0_100037ec, 4
  store i32 %v1_100037ec, i32* %r0.global-to-local, align 4
  %v0_100037f0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100037f0 = add i32 %v0_100037f0, %v1_100037ec
  %v3_100037f0 = inttoptr i32 %v2_100037f0 to i32*
  %v4_100037f0 = load i32, i32* %v3_100037f0, align 4
  store i32 %v4_100037f0, i32* @r29, align 4
  %v1_100037f4 = add i32 %v4_100037f0, 20
  store i32 %v1_100037f4, i32* %r28.global-to-local, align 4
  br i1 %v0_100037f8, label %dec_label_pc_100038a4, label %dec_label_pc_100037fc

dec_label_pc_100037fc:                            ; preds = %dec_label_pc_100037ec
  %v1_100037fc = add i32 %v4_100037f0, 40
  store i32 %v1_100037fc, i32* @r3, align 4
  %v0_10003800 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003800, i32* @r4, align 4
  %v0_10003804 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003804, label %dec_label_pc_10003808, label %dec_label_pc_100038b8

dec_label_pc_10003808:                            ; preds = %dec_label_pc_100037fc, %dec_label_pc_100038a4, %dec_label_pc_100038b8
  %v2_10003808 = phi i32 [ %v4_100037f0, %dec_label_pc_100037fc ], [ %v0_100038b0, %dec_label_pc_100038a4 ], [ %v2_10003808.pre, %dec_label_pc_100038b8 ]
  %v0_10003808 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003808 = trunc i32 %v0_10003808 to i16
  %v3_10003808 = add i32 %v2_10003808, 10
  %v4_10003808 = inttoptr i32 %v3_10003808 to i16*
  store i16 %v1_10003808, i16* %v4_10003808, align 2
  %v0_10003810 = load i32, i32* @r29, align 4
  store i32 %v0_10003810, i32* @r3, align 4
  %v2_10003814 = call i32 @function_100056ac(i32 %v0_10003810, i32 20)
  %v3_10003814 = trunc i32 %v2_10003814 to i16
  store i32 %v2_10003814, i32* %r3.global-to-local, align 4
  %v3_10003818 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003818, i32* %r9.global-to-local, align 4
  %v3_1000381c = load i32, i32* @r29, align 4
  %v4_1000381c = add i32 %v3_1000381c, 10
  %v5_1000381c = inttoptr i32 %v4_1000381c to i16*
  store i16 %v3_10003814, i16* %v5_1000381c, align 2
  %v0_10003820 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003820, i32* @r4, align 4
  %v0_10003824 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003824 = mul i32 %v0_10003824, 16
  store i32 %v1_10003824, i32* %r9.global-to-local, align 4
  %v0_10003828 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  %v3_10003828 = add i32 %v0_10003820, 16
  %v4_10003828 = inttoptr i32 %v3_10003828 to i16*
  store i16 %v1_10003828, i16* %v4_10003828, align 2
  %v0_1000382c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000382c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000382c = add i32 %v1_1000382c, %v0_1000382c
  store i32 %v2_1000382c, i32* %r9.global-to-local, align 4
  %v0_10003830 = load i32, i32* @r30, align 4
  %v1_10003834 = add i32 %v2_1000382c, 4
  %v2_10003834 = inttoptr i32 %v1_10003834 to i32*
  %v3_10003834 = load i32, i32* %v2_10003834, align 4
  store i32 %v3_10003834, i32* %r11.global-to-local, align 4
  %v0_10003838 = load i32, i32* @r31, align 4
  %v0_1000383c = load i32, i32* @r29, align 4
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  %v1_10003840 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003840 = add i32 %v1_10003840, 4
  %v3_10003840 = inttoptr i32 %v2_10003840 to i32*
  store i32 %v3_10003834, i32* %v3_10003840, align 4
  %v0_10003844 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003844 = add i32 %v0_10003844, 1
  store i32 %v1_10003844, i32* %r11.global-to-local, align 4
  %v1_10003848 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003848 = add i32 %v1_10003848, 4
  %v3_10003848 = inttoptr i32 %v2_10003848 to i32*
  store i32 %v1_10003844, i32* %v3_10003848, align 4
  %v0_1000384c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000384c = add i32 %v0_1000384c, 8
  %v2_1000384c = inttoptr i32 %v1_1000384c to i32*
  %v3_1000384c = load i32, i32* %v2_1000384c, align 4
  store i32 %v3_1000384c, i32* %r0.global-to-local, align 4
  %v1_10003850 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003850 = add i32 %v1_10003850, 8
  %v3_10003850 = inttoptr i32 %v2_10003850 to i32*
  store i32 %v3_1000384c, i32* %v3_10003850, align 4
  %v4_10003854 = call i32 @function_10005710(i32 %v0_1000383c, i32 %v0_10003820, i32 %v0_10003830, i32 %v0_10003838)
  %v5_10003854 = trunc i32 %v4_10003854 to i16
  store i32 %v4_10003854, i32* %r3.global-to-local, align 4
  %v3_10003858 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003858, i32* %r7.global-to-local, align 4
  %v0_1000385c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000385c = add i32 %v0_1000385c, 2
  %v2_1000385c = inttoptr i32 %v1_1000385c to i16*
  %v3_1000385c = load i16, i16* %v2_1000385c, align 2
  %v4_1000385c = zext i16 %v3_1000385c to i32
  store i32 %v4_1000385c, i32* %r0.global-to-local, align 4
  %v0_10003860 = load i32, i32* @r29, align 4
  %v1_10003864 = mul i32 %v3_10003858, 24
  store i32 %v1_10003864, i32* %r7.global-to-local, align 4
  %v4_10003868 = add i32 %v0_1000385c, 16
  %v5_10003868 = inttoptr i32 %v4_10003868 to i16*
  store i16 %v5_10003854, i16* %v5_10003868, align 2
  %v0_1000386c = load i32, i32* %r26.global-to-local, align 4
  %v0_10003870 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003870, i32* %r3.global-to-local, align 4
  %v0_10003874 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003874 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003874 = add i32 %v1_10003874, %v0_10003874
  store i32 %v2_10003874, i32* %r7.global-to-local, align 4
  %v0_1000387c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000387c = trunc i32 %v0_1000387c to i16
  %v3_1000387c = add i32 %v2_10003874, 2
  %v4_1000387c = inttoptr i32 %v3_1000387c to i16*
  store i16 %v1_1000387c, i16* %v4_1000387c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449928, i32* @lr, align 4
  %v6_10003884 = call i32 @function_1000b4ec(i32 %v0_10003870, i32 %v0_10003860, i32 %v0_1000386c, i32 16384, i32 %v2_10003874, i32 16)
  store i32 %v6_10003884, i32* %r3.global-to-local, align 4
  %v3_10003888 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003888, i32* %r9.global-to-local, align 4
  %v1_1000388c = add i32 %v3_10003888, 1
  store i32 %v1_1000388c, i32* %r0.global-to-local, align 4
  %v1_10003890 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003890 = icmp slt i32 %v1_1000388c, %v1_10003890
  %v4_10003890 = icmp eq i32 %v1_1000388c, %v1_10003890
  store i1 %v4_10003890, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000388c, i32* %stack_var_-408, align 4
  br i1 %v2_10003890, label %dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge, label %dec_label_pc_1000389c

dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge: ; preds = %dec_label_pc_10003808
  %v0_100037f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_100037ec

dec_label_pc_1000389c:                            ; preds = %dec_label_pc_10003808
  %v0_1000389c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000389c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000389c = or i1 %v0_1000389c, %v1_1000389c
  br i1 %v2_1000389c, label %dec_label_pc_100037c8.outer, label %dec_label_pc_100037cc

dec_label_pc_100038a4:                            ; preds = %dec_label_pc_100037ec
  %v0_100038a4 = call i32 @function_10006fa8()
  %v1_100038a4 = trunc i32 %v0_100038a4 to i16
  %v0_100038a8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100038a8, i32* @r4, align 4
  %v3_100038ac = load i32, i32* @r29, align 4
  %v4_100038ac = add i32 %v3_100038ac, 4
  %v5_100038ac = inttoptr i32 %v4_100038ac to i16*
  store i16 %v1_100038a4, i16* %v5_100038ac, align 2
  %v0_100038b0 = load i32, i32* @r29, align 4
  %v1_100038b0 = add i32 %v0_100038b0, 40
  store i32 %v1_100038b0, i32* @r3, align 4
  %v0_100038b4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100038b4, label %dec_label_pc_10003808, label %dec_label_pc_100038b8

dec_label_pc_100038b8:                            ; preds = %dec_label_pc_100037fc, %dec_label_pc_100038a4
  %v0_100038b8 = call i32 @function_100071d4()
  store i32 %v0_100038b8, i32* %r3.global-to-local, align 4
  %v2_10003808.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003808

; uselistorder directives
  uselistorder i32 %v0_100038b0, { 1, 0 }
  uselistorder i1 %v1_1000389c, { 1, 0 }
  uselistorder i1 %v0_1000389c, { 1, 0 }
  uselistorder i32 %v1_1000388c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003854, { 1, 0 }
  uselistorder i32 %v0_10003820, { 1, 0, 2 }
  uselistorder i32 %v2_10003814, { 1, 0 }
  uselistorder i32 %v1_100037ec, { 1, 0 }
  uselistorder i32 %v1_100037ac, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10003730, { 1, 0, 2 }
  uselistorder i32 %v1_1000372c, { 1, 0 }
  uselistorder i32 %v1_100036c4, { 1, 0 }
  uselistorder i32 %v1_10003690, { 1, 0 }
  uselistorder i32 %v0_10003610, { 1, 0 }
  uselistorder i32 %v2_10003604, { 1, 2, 0 }
  uselistorder i1 %v4_10003588, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_100035e8, { 1, 3, 0, 2 }
  uselistorder i32 %v1_100035c4, { 1, 0 }
  uselistorder i32 %v1_1000336c, { 1, 0 }
  uselistorder i8 %v5_10003358, { 1, 0 }
  uselistorder i8 %v5_10003320, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 29, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 1 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 1179648, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100038b8, { 1, 0 }
  uselistorder label %dec_label_pc_10003808, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100037cc, { 1, 0 }
  uselistorder label %dec_label_pc_100037c8, { 1, 0 }
  uselistorder label %dec_label_pc_100037a8, { 1, 0 }
  uselistorder label %dec_label_pc_10003714, { 1, 0 }
  uselistorder label %dec_label_pc_10003624, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100035a4, { 1, 2, 0 }
}

define i32 @function_100038c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100038c0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100038c4 = load i32, i32* @lr, align 4
  store i32 %v0_100038c4, i32* %r0.global-to-local, align 4
  %v0_100038c8 = call i32 @__asm_mfcr()
  store i32 %v0_100038c8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_100038d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100038c8, i32* %r21.global-to-local, align 4
  %v0_10003918 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003920 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003928 = load i32, i32* @r30, align 4
  store i32 268450100, i32* @lr, align 4
  %v2_10003930 = call i32 @function_1000b8f4(i32 4, i32 4)
  store i32 %v2_10003930, i32* %r22.global-to-local, align 4
  %v0_10003938 = load i32, i32* @r28, align 4
  %v0_10003944 = load i32, i32* @r29, align 4
  store i32 %v0_10003944, i32* %r3.global-to-local, align 4
  store i32 268450124, i32* @lr, align 4
  %v4_10003948 = inttoptr i32 %v0_10003938 to i32*
  %v5_10003948 = call i32 @function_1000235c(i32 %v0_10003944, i32* %v4_10003948, i32 2, i32 0)
  %v5_10003958 = trunc i32 %v5_10003948 to i8
  %v0_10003960 = load i32, i32* @r28, align 4
  %v0_10003964 = load i32, i32* @r29, align 4
  store i32 %v0_10003964, i32* %r3.global-to-local, align 4
  store i32 268450156, i32* @lr, align 4
  %v4_10003968 = inttoptr i32 %v0_10003960 to i32*
  %v5_10003968 = call i32 @function_1000235c(i32 %v0_10003964, i32* %v4_10003968, i32 3, i32 65535)
  %v0_1000396c = load i32, i32* @r28, align 4
  store i32 %v5_10003968, i32* %r18.global-to-local, align 4
  %v0_1000397c = load i32, i32* @r29, align 4
  store i32 %v0_1000397c, i32* %r3.global-to-local, align 4
  store i32 268450180, i32* @lr, align 4
  %v4_10003980 = inttoptr i32 %v0_1000396c to i32*
  %v5_10003980 = call i32 @function_1000235c(i32 %v0_1000397c, i32* %v4_10003980, i32 4, i32 64)
  %v0_10003984 = load i32, i32* @r28, align 4
  %v5_10003990 = trunc i32 %v5_10003980 to i8
  %v0_10003998 = load i32, i32* @r29, align 4
  store i32 %v0_10003998, i32* %r3.global-to-local, align 4
  store i32 268450208, i32* @lr, align 4
  %v4_1000399c = inttoptr i32 %v0_10003984 to i32*
  %v5_1000399c = call i32 @function_1000235c(i32 %v0_10003998, i32* %v4_1000399c, i32 5, i32 0)
  %v0_100039ac = load i32, i32* @r28, align 4
  %v1_100039b0 = urem i32 %v5_1000399c, 256
  store i32 %v1_100039b0, i32* @r31, align 4
  %v0_100039b4 = load i32, i32* @r29, align 4
  store i32 %v0_100039b4, i32* %r3.global-to-local, align 4
  store i32 268450236, i32* @lr, align 4
  %v4_100039b8 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039b8 = call i32 @function_1000235c(i32 %v0_100039b4, i32* %v4_100039b8, i32 6, i32 65535)
  %v0_100039c0 = load i32, i32* @r28, align 4
  store i32 %v5_100039b8, i32* %r19.global-to-local, align 4
  %v0_100039d0 = load i32, i32* @r29, align 4
  store i32 %v0_100039d0, i32* %r3.global-to-local, align 4
  store i32 268450264, i32* @lr, align 4
  %v4_100039d4 = inttoptr i32 %v0_100039c0 to i32*
  %v5_100039d4 = call i32 @function_1000235c(i32 %v0_100039d0, i32* %v4_100039d4, i32 7, i32 65535)
  %v0_100039dc = load i32, i32* @r28, align 4
  store i32 %v5_100039d4, i32* %r20.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r29, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_1000235c(i32 %v0_100039ec, i32* %v4_100039f0, i32 17, i32 65535)
  %v0_100039f8 = load i32, i32* @r28, align 4
  store i32 %v5_100039f0, i32* %r15.global-to-local, align 4
  %v0_10003a08 = load i32, i32* @r29, align 4
  store i32 %v0_10003a08, i32* %r3.global-to-local, align 4
  store i32 268450320, i32* @lr, align 4
  %v4_10003a0c = inttoptr i32 %v0_100039f8 to i32*
  %v5_10003a0c = call i32 @function_1000235c(i32 %v0_10003a08, i32* %v4_10003a0c, i32 18, i32 65535)
  %v0_10003a10 = load i32, i32* @r28, align 4
  store i32 %v5_10003a0c, i32* %r17.global-to-local, align 4
  %v0_10003a20 = load i32, i32* @r29, align 4
  store i32 %v0_10003a20, i32* %r3.global-to-local, align 4
  store i32 268450344, i32* @lr, align 4
  %v4_10003a24 = inttoptr i32 %v0_10003a10 to i32*
  %v5_10003a24 = call i32 @function_1000235c(i32 %v0_10003a20, i32* %v4_10003a24, i32 11, i32 0)
  %v0_10003a28 = load i32, i32* @r28, align 4
  %v0_10003a38 = load i32, i32* @r29, align 4
  store i32 %v0_10003a38, i32* %r3.global-to-local, align 4
  store i32 268450368, i32* @lr, align 4
  %v4_10003a3c = inttoptr i32 %v0_10003a28 to i32*
  %v5_10003a3c = call i32 @function_1000235c(i32 %v0_10003a38, i32* %v4_10003a3c, i32 12, i32 1)
  %v0_10003a40 = load i32, i32* @r28, align 4
  store i32 %v5_10003a3c, i32* %r14.global-to-local, align 4
  %v0_10003a50 = load i32, i32* @r29, align 4
  store i32 %v0_10003a50, i32* %r3.global-to-local, align 4
  store i32 268450392, i32* @lr, align 4
  %v4_10003a54 = inttoptr i32 %v0_10003a40 to i32*
  %v5_10003a54 = call i32 @function_1000235c(i32 %v0_10003a50, i32* %v4_10003a54, i32 13, i32 0)
  %v0_10003a58 = load i32, i32* @r28, align 4
  store i32 %v5_10003a54, i32* %r24.global-to-local, align 4
  %v0_10003a68 = load i32, i32* @r29, align 4
  store i32 %v0_10003a68, i32* %r3.global-to-local, align 4
  store i32 268450416, i32* @lr, align 4
  %v4_10003a6c = inttoptr i32 %v0_10003a58 to i32*
  %v5_10003a6c = call i32 @function_1000235c(i32 %v0_10003a68, i32* %v4_10003a6c, i32 14, i32 0)
  %v0_10003a70 = load i32, i32* @r28, align 4
  store i32 %v5_10003a6c, i32* %r27.global-to-local, align 4
  %v0_10003a80 = load i32, i32* @r29, align 4
  store i32 %v0_10003a80, i32* %r3.global-to-local, align 4
  store i32 268450440, i32* @lr, align 4
  %v4_10003a84 = inttoptr i32 %v0_10003a70 to i32*
  %v5_10003a84 = call i32 @function_1000235c(i32 %v0_10003a80, i32* %v4_10003a84, i32 15, i32 0)
  %v0_10003a88 = load i32, i32* @r28, align 4
  store i32 %v5_10003a84, i32* %r26.global-to-local, align 4
  %v0_10003a98 = load i32, i32* @r29, align 4
  store i32 %v0_10003a98, i32* %r3.global-to-local, align 4
  store i32 268450464, i32* @lr, align 4
  %v4_10003a9c = inttoptr i32 %v0_10003a88 to i32*
  %v5_10003a9c = call i32 @function_1000235c(i32 %v0_10003a98, i32* %v4_10003a9c, i32 16, i32 0)
  %v0_10003aa0 = load i32, i32* @r28, align 4
  store i32 %v5_10003a9c, i32* %r30.global-to-local, align 4
  %v0_10003ab0 = load i32, i32* @r29, align 4
  store i32 %v0_10003ab0, i32* %r3.global-to-local, align 4
  store i32 268450488, i32* @lr, align 4
  %v4_10003ab4 = inttoptr i32 %v0_10003aa0 to i32*
  %v5_10003ab4 = call i32 @function_1000235c(i32 %v0_10003ab0, i32* %v4_10003ab4, i32 0, i32 512)
  %v0_10003ab8 = load i32, i32* @r28, align 4
  store i32 %v5_10003ab4, i32* %r16.global-to-local, align 4
  %v0_10003ac8 = load i32, i32* @r29, align 4
  store i32 %v0_10003ac8, i32* %r3.global-to-local, align 4
  store i32 268450512, i32* @lr, align 4
  %v4_10003acc = inttoptr i32 %v0_10003ab8 to i32*
  %v5_10003acc = call i32 @function_1000235c(i32 %v0_10003ac8, i32* %v4_10003acc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003ad4 = load i32, i32* @global_var_1001e180.71, align 4
  %v1_10003ad8 = urem i32 %v5_10003acc, 256
  %v0_10003adc = load i32, i32* @r28, align 4
  %v0_10003ae8 = load i32, i32* @r29, align 4
  store i32 %v0_10003ae8, i32* %r3.global-to-local, align 4
  store i32 268450544, i32* @lr, align 4
  %v5_10003aec = inttoptr i32 %v0_10003adc to i32*
  %v6_10003aec = call i32 @function_100022dc(i32 %v0_10003ae8, i32* %v5_10003aec, i32 25, i32 %v3_10003ad4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450564, i32* @lr, align 4
  %v3_10003b00 = call i32 @function_1000b568(i32 2, i32 3, i32 6)
  store i32 %v3_10003b00, i32* %r3.global-to-local, align 4
  %v3_10003b04 = icmp eq i32 %v3_10003b00, -1
  store i32 %v3_10003b00, i32* %r23.global-to-local, align 4
  br i1 %v3_10003b04, label %dec_label_pc_10003e44, label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_100038c0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003b1c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450604, i32* @lr, align 4
  %v5_10003b28 = call i32 @function_1000b52c(i32 0, i32 3, i32 %v2_10003b1c, i32 4, i32 4)
  store i32 %v5_10003b28, i32* %r3.global-to-local, align 4
  %v3_10003b2c = icmp eq i32 %v5_10003b28, -1
  br i1 %v3_10003b2c, label %dec_label_pc_10003e3c, label %dec_label_pc_10003b34

dec_label_pc_10003b34:                            ; preds = %dec_label_pc_10003b10
  %v0_10003b34 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b34 = icmp slt i32 %v0_10003b34, 0
  %v3_10003b34 = icmp eq i32 %v0_10003b34, 0
  store i1 %v1_10003b34, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003b34, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003b40 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b40 = urem i32 %v0_10003b40, 65536
  store i32 %v1_10003b40, i32* %r18.global-to-local, align 4
  %v0_10003b44 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b44 = urem i32 %v0_10003b44, 65536
  store i32 %v1_10003b44, i32* %r19.global-to-local, align 4
  %v0_10003b48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b48 = urem i32 %v0_10003b48, 65536
  store i32 %v1_10003b48, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003b34, 1
  br i1 %tmp40, label %dec_label_pc_10003e1c, label %dec_label_pc_10003b50

dec_label_pc_10003b50:                            ; preds = %dec_label_pc_10003b34
  %v0_10003b54 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003b54 = urem i32 %v0_10003b54, 256
  %v0_10003b58 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003b58 = add i32 %v0_10003b58, 40
  store i32 %v1_10003b58, i32* %r24.global-to-local, align 4
  %v3_10003b5c = icmp eq i32 %v1_10003b54, 0
  store i1 %v3_10003b5c, i1* %cr3_eq.global-to-local, align 1
  %v1_10003b60 = urem i32 %v5_10003a24, 2
  store i32 %v1_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b64 = urem i32 %v0_10003b64, 2
  store i32 %v1_10003b64, i32* %r28.global-to-local, align 4
  %v1_10003b68 = urem i32 %v0_10003b54, 2
  store i32 %v1_10003b68, i32* %r26.global-to-local, align 4
  %v1_10003b6c = urem i32 %v1_10003b58, 65536
  store i32 %v1_10003b6c, i32* %r0.global-to-local, align 4
  %v0_10003b74 = load i32, i32* @r31, align 4
  %v3_10003b74 = icmp eq i32 %v0_10003b74, 0
  store i1 %v3_10003b74, i1* %cr2_eq.global-to-local, align 1
  %v5_10003b78 = trunc i32 %v1_10003b58 to i16
  %v0_10003b7c = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b7c = urem i32 %v0_10003b7c, 2
  store i32 %v1_10003b7c, i32* %r14.global-to-local, align 4
  %v0_10003b80 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003b80 = urem i32 %v0_10003b80, 2
  store i32 %v1_10003b80, i32* %r27.global-to-local, align 4
  %v0_10003b84 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003b84 = urem i32 %v0_10003b84, 2
  %v4_10003bd4 = sext i8 %v5_10003958 to i32
  br label %dec_label_pc_10003b8c

dec_label_pc_10003b8c:                            ; preds = %dec_label_pc_10003c6c, %dec_label_pc_10003b50
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450712, i32* @lr, align 4
  %v2_10003b94 = call i32 @function_1000b8f4(i32 1510, i32 1)
  store i32 %v2_10003b94, i32* %r3.global-to-local, align 4
  %v3_10003b98 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b98, i32* %r9.global-to-local, align 4
  %v0_10003b9c = load i32, i32* @r31, align 4
  %v1_10003b9c = mul i32 %v0_10003b9c, 4
  store i32 %v1_10003b9c, i32* %r0.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003ba0 = add i32 %v1_10003ba0, %v1_10003b9c
  %v4_10003ba0 = inttoptr i32 %v3_10003ba0 to i32*
  store i32 %v2_10003b94, i32* %v4_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003ba4 = mul i32 %v0_10003ba4, 4
  store i32 %v1_10003ba4, i32* %r9.global-to-local, align 4
  %v1_10003ba8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003ba8 = add i32 %v1_10003ba8, %v1_10003ba4
  %v3_10003ba8 = inttoptr i32 %v2_10003ba8 to i32*
  %v4_10003ba8 = load i32, i32* %v3_10003ba8, align 4
  store i32 %v4_10003ba8, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003bb0 = inttoptr i32 %v4_10003ba8 to i32*
  %v2_10003bb0 = load i32, i32* %v1_10003bb0, align 4
  store i32 %v2_10003bb0, i32* %r0.global-to-local, align 4
  %v1_10003bb4 = add i32 %v4_10003ba8, 20
  store i32 %v1_10003bb4, i32* @r30, align 4
  %v0_10003bb8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003bb8 = trunc i32 %v0_10003bb8 to i16
  %v3_10003bb8 = add i32 %v4_10003ba8, 4
  %v4_10003bb8 = inttoptr i32 %v3_10003bb8 to i16*
  store i16 %v1_10003bb8, i16* %v4_10003bb8, align 2
  %v1_10003bbc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003bbc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003bc4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003bc8 = load i32, i32* @r31, align 4
  %v2_10003bc8 = inttoptr i32 %v1_10003bc8 to i32*
  store i32 %v1_10003bc4, i32* %v2_10003bc8, align 4
  %v2_10003bd0 = load i32, i32* @r31, align 4
  %v3_10003bd0 = add i32 %v2_10003bd0, 8
  %v4_10003bd0 = inttoptr i32 %v3_10003bd0 to i8*
  store i8 %v5_10003990, i8* %v4_10003bd0, align 1
  store i32 %v4_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003bd8 = load i32, i32* @r31, align 4
  %v3_10003bd8 = add i32 %v2_10003bd8, 1
  %v4_10003bd8 = inttoptr i32 %v3_10003bd8 to i8*
  store i8 %v5_10003958, i8* %v4_10003bd8, align 1
  store i32 %v1_10003b58, i32* %r0.global-to-local, align 4
  %v2_10003be0 = load i32, i32* @r31, align 4
  %v3_10003be0 = add i32 %v2_10003be0, 2
  %v4_10003be0 = inttoptr i32 %v3_10003be0 to i16*
  store i16 %v5_10003b78, i16* %v4_10003be0, align 2
  %v0_10003be4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003be4, label %dec_label_pc_10003bf0, label %dec_label_pc_10003be8

dec_label_pc_10003be8:                            ; preds = %dec_label_pc_10003b8c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003bec = load i32, i32* @r31, align 4
  %v3_10003bec = add i32 %v2_10003bec, 6
  %v4_10003bec = inttoptr i32 %v3_10003bec to i16*
  store i16 16384, i16* %v4_10003bec, align 2
  br label %dec_label_pc_10003bf0

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003b8c, %dec_label_pc_10003be8
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003bf4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003bf4 = trunc i32 %v0_10003bf4 to i16
  %v2_10003bf4 = load i32, i32* @r31, align 4
  %v3_10003bf4 = add i32 %v2_10003bf4, 20
  %v4_10003bf4 = inttoptr i32 %v3_10003bf4 to i16*
  store i16 %v1_10003bf4, i16* %v4_10003bf4, align 2
  %v0_10003bf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003bf8 = trunc i32 %v0_10003bf8 to i8
  %v2_10003bf8 = load i32, i32* @r31, align 4
  %v3_10003bf8 = add i32 %v2_10003bf8, 9
  %v4_10003bf8 = inttoptr i32 %v3_10003bf8 to i8*
  store i8 %v1_10003bf8, i8* %v4_10003bf8, align 1
  %v0_10003bfc = load i32, i32* %r20.global-to-local, align 4
  %v1_10003bfc = trunc i32 %v0_10003bfc to i16
  %v2_10003bfc = load i32, i32* @r30, align 4
  %v3_10003bfc = add i32 %v2_10003bfc, 2
  %v4_10003bfc = inttoptr i32 %v3_10003bfc to i16*
  store i16 %v1_10003bfc, i16* %v4_10003bfc, align 2
  %v1_10003c04 = load i32, i32* @r31, align 4
  %v2_10003c04 = add i32 %v1_10003c04, 12
  %v3_10003c04 = inttoptr i32 %v2_10003c04 to i32*
  store i32 %v6_10003aec, i32* %v3_10003c04, align 4
  %v3_10003c08 = load i32, i32* %stack_var_-136, align 4
  %v1_10003c0c = mul i32 %v3_10003c08, 24
  %v1_10003c10 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003c10 = add i32 %v1_10003c10, %v1_10003c0c
  store i32 %v2_10003c10, i32* %r9.global-to-local, align 4
  %v1_10003c14 = add i32 %v2_10003c10, 16
  %v2_10003c14 = inttoptr i32 %v1_10003c14 to i32*
  %v3_10003c14 = load i32, i32* %v2_10003c14, align 4
  store i32 %v3_10003c14, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003c1c = load i32, i32* @r31, align 4
  %v2_10003c1c = add i32 %v1_10003c1c, 16
  %v3_10003c1c = inttoptr i32 %v2_10003c1c to i32*
  store i32 %v3_10003c14, i32* %v3_10003c1c, align 4
  %v0_10003c20 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003c20 = load i32, i32* @r30, align 4
  %v2_10003c20 = add i32 %v1_10003c20, 4
  %v3_10003c20 = inttoptr i32 %v2_10003c20 to i32*
  store i32 %v0_10003c20, i32* %v3_10003c20, align 4
  %v0_10003c24 = load i32, i32* @r30, align 4
  %v1_10003c24 = add i32 %v0_10003c24, 12
  %v2_10003c24 = inttoptr i32 %v1_10003c24 to i32*
  %v3_10003c24 = load i32, i32* %v2_10003c24, align 4
  store i32 %v3_10003c24, i32* %r0.global-to-local, align 4
  %v1_10003c28 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003c28, i32* %r0.global-to-local, align 4
  store i32 %v1_10003b60, i32* %r9.global-to-local, align 4
  %v1_10003c30 = call i32 @__asm_rlwimi(i32 %v1_10003b60, i32 21, i32 10, i32 10)
  store i32 %v1_10003c30, i32* %r0.global-to-local, align 4
  %v1_10003c34 = call i32 @__asm_rlwimi(i32 %v1_10003b7c, i32 20, i32 11, i32 11)
  store i32 %v1_10003c34, i32* %r0.global-to-local, align 4
  %v1_10003c38 = call i32 @__asm_rlwimi(i32 %v1_10003b68, i32 19, i32 12, i32 12)
  store i32 %v1_10003c38, i32* %r0.global-to-local, align 4
  %v1_10003c3c = call i32 @__asm_rlwimi(i32 %v1_10003b80, i32 18, i32 13, i32 13)
  store i32 %v1_10003c3c, i32* %r0.global-to-local, align 4
  %v1_10003c40 = call i32 @__asm_rlwimi(i32 %v1_10003b64, i32 17, i32 14, i32 14)
  store i32 %v1_10003c40, i32* %r0.global-to-local, align 4
  %v1_10003c44 = call i32 @__asm_rlwimi(i32 %v1_10003b84, i32 16, i32 15, i32 15)
  store i32 %v1_10003c44, i32* %r0.global-to-local, align 4
  %v1_10003c48 = load i32, i32* @r30, align 4
  %v2_10003c48 = add i32 %v1_10003c48, 12
  %v3_10003c48 = inttoptr i32 %v2_10003c48 to i32*
  store i32 %v1_10003c44, i32* %v3_10003c48, align 4
  %v0_10003c4c = call i32 @function_10006fa8()
  %v1_10003c4c = trunc i32 %v0_10003c4c to i16
  %v0_10003c50 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003c50, i32* @r4, align 4
  %v3_10003c54 = load i32, i32* @r30, align 4
  %v4_10003c54 = add i32 %v3_10003c54, 14
  %v5_10003c54 = inttoptr i32 %v4_10003c54 to i16*
  store i16 %v1_10003c4c, i16* %v5_10003c54, align 2
  %v0_10003c58 = load i32, i32* @r31, align 4
  %v1_10003c58 = add i32 %v0_10003c58, 40
  store i32 %v1_10003c58, i32* @r3, align 4
  %v0_10003c5c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c5c, label %dec_label_pc_10003c6c, label %dec_label_pc_10003c60

dec_label_pc_10003c60:                            ; preds = %dec_label_pc_10003bf0
  %v0_10003c60 = load i32, i32* @r30, align 4
  %v1_10003c60 = add i32 %v0_10003c60, 12
  %v2_10003c60 = inttoptr i32 %v1_10003c60 to i32*
  %v3_10003c60 = load i32, i32* %v2_10003c60, align 4
  %v1_10003c64 = or i32 %v3_10003c60, 524288
  store i32 %v1_10003c64, i32* %r0.global-to-local, align 4
  store i32 %v1_10003c64, i32* %v2_10003c60, align 4
  br label %dec_label_pc_10003c6c

dec_label_pc_10003c6c:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003c60
  %v0_10003c6c = call i32 @function_100071d4()
  store i32 %v0_10003c6c, i32* %r3.global-to-local, align 4
  %v3_10003c70 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003c70, i32* %r9.global-to-local, align 4
  %v1_10003c74 = add i32 %v3_10003c70, 1
  %v1_10003c78 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003c78 = icmp slt i32 %v1_10003c74, %v1_10003c78
  store i32 %v1_10003c74, i32* %stack_var_-136, align 4
  br i1 %v2_10003c78, label %dec_label_pc_10003b8c, label %dec_label_pc_10003c84

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003c6c
  store i32 %v6_10003aec, i32* %r0.global-to-local, align 4
  %v0_10003c88 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003c88 = add i32 %v0_10003c88, 20
  store i32 %v1_10003c88, i32* @r30, align 4
  store i32 %v1_10003ad8, i32* %r9.global-to-local, align 4
  %v3_10003c90 = icmp eq i32 %v6_10003aec, -1
  store i1 %v3_10003c90, i1* %cr2_eq.global-to-local, align 1
  %v3_10003c94 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003c94, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c98.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c98.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003c98.preheader

dec_label_pc_10003c98.preheader:                  ; preds = %dec_label_pc_10003d78, %dec_label_pc_10003e1c, %dec_label_pc_10003c84
  %v1_10003c98 = phi i1 [ %v1_10003b34, %dec_label_pc_10003e1c ], [ %v1_10003c98.pre, %dec_label_pc_10003c84 ], [ %v1_10003d78, %dec_label_pc_10003d78 ]
  %v0_10003c98 = phi i1 [ %v3_10003b34, %dec_label_pc_10003e1c ], [ %v0_10003c98.pre, %dec_label_pc_10003c84 ], [ %v0_10003d78, %dec_label_pc_10003d78 ]
  %v2_10003c98 = or i1 %v1_10003c98, %v0_10003c98
  br label %dec_label_pc_10003c98

dec_label_pc_10003c98:                            ; preds = %dec_label_pc_10003c98.preheader, %dec_label_pc_10003c98
  br i1 %v2_10003c98, label %dec_label_pc_10003c98, label %dec_label_pc_10003c9c

dec_label_pc_10003c9c:                            ; preds = %dec_label_pc_10003c98, %dec_label_pc_10003d78
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003ca0 = load i32, i32* @r30, align 4
  %v1_10003ca0 = urem i32 %v0_10003ca0, 65536
  store i32 %v1_10003ca0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003cb0

dec_label_pc_10003cb0:                            ; preds = %dec_label_pc_10003d08, %dec_label_pc_10003c9c
  %v0_10003cb0 = phi i32 [ %v1_10003d68, %dec_label_pc_10003d08 ], [ 0, %dec_label_pc_10003c9c ]
  %v1_10003cb0 = mul i32 %v0_10003cb0, 24
  store i32 %v1_10003cb0, i32* %r0.global-to-local, align 4
  %v1_10003cb4 = mul i32 %v0_10003cb0, 4
  %v1_10003cb8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003cb8 = add i32 %v1_10003cb8, %v1_10003cb4
  %v3_10003cb8 = inttoptr i32 %v2_10003cb8 to i32*
  %v4_10003cb8 = load i32, i32* %v3_10003cb8, align 4
  store i32 %v4_10003cb8, i32* %r28.global-to-local, align 4
  %v1_10003cbc = load i32, i32* %r25.global-to-local, align 4
  %v2_10003cbc = add i32 %v1_10003cbc, %v1_10003cb0
  %v1_10003cc0 = add i32 %v2_10003cbc, 20
  %v2_10003cc0 = inttoptr i32 %v1_10003cc0 to i8*
  %v3_10003cc0 = load i8, i8* %v2_10003cc0, align 1
  %v4_10003cc0 = zext i8 %v3_10003cc0 to i32
  store i32 %v4_10003cc0, i32* %r9.global-to-local, align 4
  %v1_10003cc4 = add i32 %v4_10003cb8, 20
  store i32 %v1_10003cc4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003cc0, 32
  br i1 %tmp41, label %dec_label_pc_10003d80, label %dec_label_pc_10003cd0

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003cb0
  %v0_10003cd0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003cd0, label %dec_label_pc_10003da8, label %dec_label_pc_10003cd4

dec_label_pc_10003cd4:                            ; preds = %dec_label_pc_10003d80, %dec_label_pc_10003cd0
  store i32 65535, i32* @r29, align 4
  %v0_10003cdc = load i32, i32* %r18.global-to-local, align 4
  %v4_10003cdc = icmp eq i32 %v0_10003cdc, 65535
  br i1 %v4_10003cdc, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ce4

dec_label_pc_10003ce4:                            ; preds = %dec_label_pc_10003da8, %dec_label_pc_10003cd4
  %v1_10003ce4 = phi i32 [ %v1_10003db8, %dec_label_pc_10003da8 ], [ 65535, %dec_label_pc_10003cd4 ]
  %v0_10003ce4 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003ce4 = icmp eq i32 %v0_10003ce4, %v1_10003ce4
  br i1 %v4_10003ce4, label %dec_label_pc_10003dd0, label %dec_label_pc_10003cec

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003dc0.dec_label_pc_10003cec_crit_edge, %dec_label_pc_10003ce4
  %v1_10003cec = phi i32 [ %v1_10003cec.pre, %dec_label_pc_10003dc0.dec_label_pc_10003cec_crit_edge ], [ %v1_10003ce4, %dec_label_pc_10003ce4 ]
  %v0_10003cec = load i32, i32* %r20.global-to-local, align 4
  %v4_10003cec = icmp eq i32 %v0_10003cec, %v1_10003cec
  br i1 %v4_10003cec, label %dec_label_pc_10003de0, label %dec_label_pc_10003cf4

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003dd0.dec_label_pc_10003cf4_crit_edge, %dec_label_pc_10003cec
  %v1_10003cf4 = phi i32 [ %v1_10003cf4.pre, %dec_label_pc_10003dd0.dec_label_pc_10003cf4_crit_edge ], [ %v1_10003cec, %dec_label_pc_10003cec ]
  %v0_10003cf4 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003cf4 = icmp eq i32 %v0_10003cf4, %v1_10003cf4
  br i1 %v4_10003cf4, label %dec_label_pc_10003df0, label %dec_label_pc_10003cfc

dec_label_pc_10003cfc:                            ; preds = %dec_label_pc_10003de0.dec_label_pc_10003cfc_crit_edge, %dec_label_pc_10003cf4
  %v1_10003cfc = phi i32 [ %v1_10003cfc.pre, %dec_label_pc_10003de0.dec_label_pc_10003cfc_crit_edge ], [ %v1_10003cf4, %dec_label_pc_10003cf4 ]
  %v0_10003cfc = load i32, i32* %r17.global-to-local, align 4
  %v4_10003cfc = icmp eq i32 %v0_10003cfc, %v1_10003cfc
  br i1 %v4_10003cfc, label %dec_label_pc_10003e00, label %dec_label_pc_10003d04

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_10003cfc
  %v0_10003d04 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d04, label %dec_label_pc_10003d08, label %dec_label_pc_10003e0c

dec_label_pc_10003d08:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003e00, %dec_label_pc_10003e0c
  %v0_10003d08 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003d08 = trunc i32 %v0_10003d08 to i16
  %v2_10003d08 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003d08 = add i32 %v2_10003d08, 10
  %v4_10003d08 = inttoptr i32 %v3_10003d08 to i16*
  store i16 %v1_10003d08, i16* %v4_10003d08, align 2
  %v0_10003d10 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003d10, i32* @r3, align 4
  %v2_10003d14 = call i32 @function_100056ac(i32 %v0_10003d10, i32 20)
  %v3_10003d14 = trunc i32 %v2_10003d14 to i16
  %v0_10003d18 = load i32, i32* @r31, align 4
  store i32 %v0_10003d18, i32* @r4, align 4
  %v4_10003d1c = add i32 %v0_10003d10, 10
  %v5_10003d1c = inttoptr i32 %v4_10003d1c to i16*
  store i16 %v3_10003d14, i16* %v5_10003d1c, align 2
  %v0_10003d20 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003d24 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003d24 = trunc i32 %v0_10003d24 to i16
  %v2_10003d24 = load i32, i32* @r31, align 4
  %v3_10003d24 = add i32 %v2_10003d24, 16
  %v4_10003d24 = inttoptr i32 %v3_10003d24 to i16*
  store i16 %v1_10003d24, i16* %v4_10003d24, align 2
  %v0_10003d28 = load i32, i32* @r30, align 4
  %v0_10003d2c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003d2c, i32* %r3.global-to-local, align 4
  %v4_10003d30 = call i32 @function_10005710(i32 %v0_10003d2c, i32 %v0_10003d18, i32 %v0_10003d20, i32 %v0_10003d28)
  %v5_10003d30 = trunc i32 %v4_10003d30 to i16
  store i32 %v4_10003d30, i32* %r3.global-to-local, align 4
  %v3_10003d34 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003d34, i32* %r7.global-to-local, align 4
  %v0_10003d38 = load i32, i32* @r31, align 4
  %v1_10003d38 = add i32 %v0_10003d38, 2
  %v2_10003d38 = inttoptr i32 %v1_10003d38 to i16*
  %v3_10003d38 = load i16, i16* %v2_10003d38, align 2
  %v4_10003d38 = zext i16 %v3_10003d38 to i32
  store i32 %v4_10003d38, i32* %r0.global-to-local, align 4
  %v0_10003d3c = load i32, i32* %r28.global-to-local, align 4
  %v1_10003d40 = mul i32 %v3_10003d34, 24
  store i32 %v1_10003d40, i32* %r7.global-to-local, align 4
  %v4_10003d44 = add i32 %v0_10003d38, 16
  %v5_10003d44 = inttoptr i32 %v4_10003d44 to i16*
  store i16 %v5_10003d30, i16* %v5_10003d44, align 2
  %v0_10003d48 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003d4c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003d4c, i32* %r3.global-to-local, align 4
  %v0_10003d50 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003d50 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d50 = add i32 %v1_10003d50, %v0_10003d50
  store i32 %v2_10003d50, i32* %r7.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d58 = trunc i32 %v0_10003d58 to i16
  %v3_10003d58 = add i32 %v2_10003d50, 2
  %v4_10003d58 = inttoptr i32 %v3_10003d58 to i16*
  store i16 %v1_10003d58, i16* %v4_10003d58, align 2
  store i32 268451172, i32* @lr, align 4
  %v6_10003d60 = call i32 @function_1000b4ec(i32 %v0_10003d4c, i32 %v0_10003d3c, i32 %v0_10003d48, i32 16384, i32 %v2_10003d50, i32 16)
  store i32 %v6_10003d60, i32* %r3.global-to-local, align 4
  %v3_10003d64 = load i32, i32* %stack_var_-136, align 4
  %v1_10003d68 = add i32 %v3_10003d64, 1
  store i32 %v1_10003d68, i32* %r9.global-to-local, align 4
  %v1_10003d6c = load i32, i32* %r21.global-to-local, align 4
  %v2_10003d6c = icmp slt i32 %v1_10003d68, %v1_10003d6c
  store i32 %v1_10003d68, i32* %stack_var_-136, align 4
  br i1 %v2_10003d6c, label %dec_label_pc_10003cb0, label %dec_label_pc_10003d78

dec_label_pc_10003d78:                            ; preds = %dec_label_pc_10003d08
  %v0_10003d78 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003d78 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003d78 = or i1 %v0_10003d78, %v1_10003d78
  br i1 %v2_10003d78, label %dec_label_pc_10003c98.preheader, label %dec_label_pc_10003c9c

dec_label_pc_10003d80:                            ; preds = %dec_label_pc_10003cb0
  %v1_10003d80 = add i32 %v2_10003cbc, 16
  %v2_10003d80 = inttoptr i32 %v1_10003d80 to i32*
  %v3_10003d80 = load i32, i32* %v2_10003d80, align 4
  store i32 %v3_10003d80, i32* %r29.global-to-local, align 4
  %v0_10003d84 = call i32 @function_10006fa8()
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v3_10003d88 = load i32, i32* %stack_var_-136, align 4
  %v1_10003d8c = mul i32 %v3_10003d88, 24
  %v1_10003d90 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d90 = add i32 %v1_10003d90, %v1_10003d8c
  store i32 %v2_10003d90, i32* %r9.global-to-local, align 4
  %v1_10003d94 = add i32 %v2_10003d90, 20
  %v2_10003d94 = inttoptr i32 %v1_10003d94 to i8*
  %v3_10003d94 = load i8, i8* %v2_10003d94, align 1
  %v4_10003d94 = zext i8 %v3_10003d94 to i32
  store i32 %v4_10003d94, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d94, 64
  %v2_10003d98 = zext i8 %tmp to i32
  %v3_10003d98 = lshr i32 %v0_10003d84, %v2_10003d98
  store i32 %v3_10003d98, i32* %r3.global-to-local, align 4
  %v0_10003d9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d9c = add i32 %v3_10003d98, %v0_10003d9c
  store i32 %v2_10003d9c, i32* %r29.global-to-local, align 4
  %v1_10003da0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003da0 = add i32 %v1_10003da0, 16
  %v3_10003da0 = inttoptr i32 %v2_10003da0 to i32*
  store i32 %v2_10003d9c, i32* %v3_10003da0, align 4
  %v0_10003da4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003da4, label %dec_label_pc_10003da8, label %dec_label_pc_10003cd4

dec_label_pc_10003da8:                            ; preds = %dec_label_pc_10003d80, %dec_label_pc_10003cd0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003dac = call i32 @function_10006fa8()
  store i32 %v0_10003dac, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003db4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003db4 = add i32 %v1_10003db4, 12
  %v3_10003db4 = inttoptr i32 %v2_10003db4 to i32*
  store i32 %v0_10003dac, i32* %v3_10003db4, align 4
  %v0_10003db8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003db8 = load i32, i32* @r29, align 4
  %v4_10003db8 = icmp eq i32 %v0_10003db8, %v1_10003db8
  br i1 %v4_10003db8, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ce4

dec_label_pc_10003dc0:                            ; preds = %dec_label_pc_10003da8, %dec_label_pc_10003cd4
  %v0_10003dc0 = call i32 @function_10006fa8()
  %v1_10003dc0 = trunc i32 %v0_10003dc0 to i16
  store i32 %v0_10003dc0, i32* %r3.global-to-local, align 4
  %v0_10003dc4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003dc4 = load i32, i32* @r29, align 4
  %v4_10003dc4 = icmp eq i32 %v0_10003dc4, %v1_10003dc4
  %v3_10003dc8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003dc8 = add i32 %v3_10003dc8, 4
  %v5_10003dc8 = inttoptr i32 %v4_10003dc8 to i16*
  store i16 %v1_10003dc0, i16* %v5_10003dc8, align 2
  br i1 %v4_10003dc4, label %dec_label_pc_10003dd0, label %dec_label_pc_10003dc0.dec_label_pc_10003cec_crit_edge

dec_label_pc_10003dc0.dec_label_pc_10003cec_crit_edge: ; preds = %dec_label_pc_10003dc0
  %v1_10003cec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003cec

dec_label_pc_10003dd0:                            ; preds = %dec_label_pc_10003dc0, %dec_label_pc_10003ce4
  %v0_10003dd0 = call i32 @function_10006fa8()
  %v1_10003dd0 = trunc i32 %v0_10003dd0 to i16
  store i32 %v0_10003dd0, i32* %r3.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003dd4 = load i32, i32* @r29, align 4
  %v4_10003dd4 = icmp eq i32 %v0_10003dd4, %v1_10003dd4
  %v3_10003dd8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003dd8 = add i32 %v3_10003dd8, 20
  %v5_10003dd8 = inttoptr i32 %v4_10003dd8 to i16*
  store i16 %v1_10003dd0, i16* %v5_10003dd8, align 2
  br i1 %v4_10003dd4, label %dec_label_pc_10003de0, label %dec_label_pc_10003dd0.dec_label_pc_10003cf4_crit_edge

dec_label_pc_10003dd0.dec_label_pc_10003cf4_crit_edge: ; preds = %dec_label_pc_10003dd0
  %v1_10003cf4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003cf4

dec_label_pc_10003de0:                            ; preds = %dec_label_pc_10003dd0, %dec_label_pc_10003cec
  %v0_10003de0 = call i32 @function_10006fa8()
  %v1_10003de0 = trunc i32 %v0_10003de0 to i16
  store i32 %v0_10003de0, i32* %r3.global-to-local, align 4
  %v0_10003de4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003de4 = load i32, i32* @r29, align 4
  %v4_10003de4 = icmp eq i32 %v0_10003de4, %v1_10003de4
  %v3_10003de8 = load i32, i32* @r31, align 4
  %v4_10003de8 = add i32 %v3_10003de8, 2
  %v5_10003de8 = inttoptr i32 %v4_10003de8 to i16*
  store i16 %v1_10003de0, i16* %v5_10003de8, align 2
  br i1 %v4_10003de4, label %dec_label_pc_10003df0, label %dec_label_pc_10003de0.dec_label_pc_10003cfc_crit_edge

dec_label_pc_10003de0.dec_label_pc_10003cfc_crit_edge: ; preds = %dec_label_pc_10003de0
  %v1_10003cfc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003cfc

dec_label_pc_10003df0:                            ; preds = %dec_label_pc_10003de0, %dec_label_pc_10003cf4
  %v0_10003df0 = call i32 @function_10006fa8()
  store i32 %v0_10003df0, i32* %r3.global-to-local, align 4
  %v0_10003df4 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003df4 = load i32, i32* @r29, align 4
  %v4_10003df4 = icmp eq i32 %v0_10003df4, %v1_10003df4
  %v1_10003df8 = load i32, i32* @r31, align 4
  %v2_10003df8 = add i32 %v1_10003df8, 4
  %v3_10003df8 = inttoptr i32 %v2_10003df8 to i32*
  store i32 %v0_10003df0, i32* %v3_10003df8, align 4
  br i1 %v4_10003df4, label %dec_label_pc_10003e00, label %dec_label_pc_10003d04

dec_label_pc_10003e00:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_10003cfc
  %v0_10003e00 = call i32 @function_10006fa8()
  store i32 %v0_10003e00, i32* %r3.global-to-local, align 4
  %v1_10003e04 = load i32, i32* @r31, align 4
  %v2_10003e04 = add i32 %v1_10003e04, 8
  %v3_10003e04 = inttoptr i32 %v2_10003e04 to i32*
  store i32 %v0_10003e00, i32* %v3_10003e04, align 4
  %v0_10003e08 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003e08, label %dec_label_pc_10003d08, label %dec_label_pc_10003e0c

dec_label_pc_10003e0c:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003e00
  %v0_10003e0c = load i32, i32* %r28.global-to-local, align 4
  %v1_10003e0c = add i32 %v0_10003e0c, 40
  store i32 %v1_10003e0c, i32* @r3, align 4
  %v0_10003e10 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003e10, i32* @r4, align 4
  %v0_10003e14 = call i32 @function_100071d4()
  store i32 %v0_10003e14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d08

dec_label_pc_10003e1c:                            ; preds = %dec_label_pc_10003b34
  store i32 %v6_10003aec, i32* %r0.global-to-local, align 4
  %v0_10003e20 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003e20 = add i32 %v0_10003e20, 40
  store i32 %v1_10003e20, i32* %r24.global-to-local, align 4
  store i32 %v1_10003ad8, i32* %r9.global-to-local, align 4
  %v1_10003e28 = add i32 %v0_10003e20, 20
  store i32 %v1_10003e28, i32* @r30, align 4
  %v3_10003e2c = icmp eq i32 %v6_10003aec, -1
  store i1 %v3_10003e2c, i1* %cr2_eq.global-to-local, align 1
  %v3_10003e30 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003e30, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003c98.preheader

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003b10
  %v0_10003e3c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003e3c, i32* %r3.global-to-local, align 4
  store i32 268451396, i32* @lr, align 4
  %v0_10003e40 = call i32 @function_1000a79c()
  store i32 %v0_10003e40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003e44

dec_label_pc_10003e44:                            ; preds = %dec_label_pc_100038c0, %dec_label_pc_10003e3c
  store i32 %v0_100038d8, i32* %r0.global-to-local, align 4
  %v1_10003e58 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100038c8)
  store i32 %v0_10003918, i32* %r28.global-to-local, align 4
  store i32 %v0_10003920, i32* %r29.global-to-local, align 4
  store i32 %v0_10003928, i32* %r30.global-to-local, align 4
  %v0_10003ea0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003ea0

; uselistorder directives
  uselistorder i32 %v0_10003de0, { 1, 0 }
  uselistorder i32 %v0_10003dd0, { 1, 0 }
  uselistorder i32 %v0_10003dc0, { 1, 0 }
  uselistorder i32 %v1_10003db8, { 1, 0 }
  uselistorder i1 %v1_10003d78, { 1, 0 }
  uselistorder i1 %v0_10003d78, { 1, 0 }
  uselistorder i32 %v1_10003d68, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003d30, { 1, 0 }
  uselistorder i32 %v1_10003ba4, { 1, 0 }
  uselistorder i32 %v1_10003b9c, { 1, 0 }
  uselistorder i32 %v1_10003b80, { 1, 0 }
  uselistorder i32 %v1_10003b7c, { 1, 0 }
  uselistorder i32 %v1_10003b68, { 1, 0 }
  uselistorder i32 %v1_10003b64, { 1, 0 }
  uselistorder i32 %v1_10003b60, { 2, 1, 0 }
  uselistorder i32 %v1_10003b58, { 1, 2, 0, 3 }
  uselistorder i32 %v6_10003aec, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003ad8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10003958, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003e44, { 1, 0 }
  uselistorder label %dec_label_pc_10003e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c98, { 1, 0 }
  uselistorder label %dec_label_pc_10003c98.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003bf0, { 1, 0 }
}

define i32 @function_10003ea4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003ea4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003ea8 = load i32, i32* @lr, align 4
  store i32 %v0_10003ea8, i32* %r0.global-to-local, align 4
  %v0_10003eac = call i32 @__asm_mfcr()
  store i32 %v0_10003eac, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003ebc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003eac, i32* %r24.global-to-local, align 4
  %v0_10003efc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003f04 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003f10 = load i32, i32* @r31, align 4
  store i32 268451608, i32* @lr, align 4
  %v2_10003f14 = call i32 @function_1000b8f4(i32 4, i32 4)
  store i32 %v2_10003f14, i32* %r25.global-to-local, align 4
  %v0_10003f1c = load i32, i32* @r28, align 4
  %v0_10003f28 = load i32, i32* @r29, align 4
  store i32 %v0_10003f28, i32* %r3.global-to-local, align 4
  store i32 268451632, i32* @lr, align 4
  %v4_10003f2c = inttoptr i32 %v0_10003f1c to i32*
  %v5_10003f2c = call i32 @function_1000235c(i32 %v0_10003f28, i32* %v4_10003f2c, i32 2, i32 0)
  %v5_10003f3c = trunc i32 %v5_10003f2c to i8
  %v0_10003f44 = load i32, i32* @r28, align 4
  %v0_10003f48 = load i32, i32* @r29, align 4
  store i32 %v0_10003f48, i32* %r3.global-to-local, align 4
  store i32 268451664, i32* @lr, align 4
  %v4_10003f4c = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f4c = call i32 @function_1000235c(i32 %v0_10003f48, i32* %v4_10003f4c, i32 3, i32 65535)
  %v0_10003f50 = load i32, i32* @r28, align 4
  store i32 %v5_10003f4c, i32* %r21.global-to-local, align 4
  %v0_10003f60 = load i32, i32* @r29, align 4
  store i32 %v0_10003f60, i32* %r3.global-to-local, align 4
  store i32 268451688, i32* @lr, align 4
  %v4_10003f64 = inttoptr i32 %v0_10003f50 to i32*
  %v5_10003f64 = call i32 @function_1000235c(i32 %v0_10003f60, i32* %v4_10003f64, i32 4, i32 64)
  %v0_10003f68 = load i32, i32* @r28, align 4
  %v5_10003f74 = trunc i32 %v5_10003f64 to i8
  %v0_10003f7c = load i32, i32* @r29, align 4
  store i32 %v0_10003f7c, i32* %r3.global-to-local, align 4
  store i32 268451716, i32* @lr, align 4
  %v4_10003f80 = inttoptr i32 %v0_10003f68 to i32*
  %v5_10003f80 = call i32 @function_1000235c(i32 %v0_10003f7c, i32* %v4_10003f80, i32 5, i32 1)
  %v0_10003f90 = load i32, i32* @r28, align 4
  %v1_10003f94 = urem i32 %v5_10003f80, 256
  store i32 %v1_10003f94, i32* @r31, align 4
  %v0_10003f98 = load i32, i32* @r29, align 4
  store i32 %v0_10003f98, i32* %r3.global-to-local, align 4
  store i32 268451744, i32* @lr, align 4
  %v4_10003f9c = inttoptr i32 %v0_10003f90 to i32*
  %v5_10003f9c = call i32 @function_1000235c(i32 %v0_10003f98, i32* %v4_10003f9c, i32 6, i32 65535)
  %v0_10003fa4 = load i32, i32* @r28, align 4
  store i32 %v5_10003f9c, i32* %r22.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_1000235c(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 7, i32 65535)
  %v0_10003fc0 = load i32, i32* @r28, align 4
  store i32 %v5_10003fb8, i32* %r23.global-to-local, align 4
  %v0_10003fd0 = load i32, i32* @r29, align 4
  store i32 %v0_10003fd0, i32* %r3.global-to-local, align 4
  store i32 268451800, i32* @lr, align 4
  %v4_10003fd4 = inttoptr i32 %v0_10003fc0 to i32*
  %v5_10003fd4 = call i32 @function_1000235c(i32 %v0_10003fd0, i32* %v4_10003fd4, i32 17, i32 65535)
  %v0_10003fd8 = load i32, i32* @r28, align 4
  store i32 %v5_10003fd4, i32* %r19.global-to-local, align 4
  %v0_10003fe8 = load i32, i32* @r29, align 4
  store i32 %v0_10003fe8, i32* %r3.global-to-local, align 4
  store i32 268451824, i32* @lr, align 4
  %v4_10003fec = inttoptr i32 %v0_10003fd8 to i32*
  %v5_10003fec = call i32 @function_1000235c(i32 %v0_10003fe8, i32* %v4_10003fec, i32 18, i32 0)
  %v0_10003ff0 = load i32, i32* @r28, align 4
  store i32 %v5_10003fec, i32* %r20.global-to-local, align 4
  %v0_10004000 = load i32, i32* @r29, align 4
  store i32 %v0_10004000, i32* %r3.global-to-local, align 4
  store i32 268451848, i32* @lr, align 4
  %v4_10004004 = inttoptr i32 %v0_10003ff0 to i32*
  %v5_10004004 = call i32 @function_1000235c(i32 %v0_10004000, i32* %v4_10004004, i32 11, i32 0)
  %v0_10004008 = load i32, i32* @r28, align 4
  store i32 %v5_10004004, i32* %r14.global-to-local, align 4
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v0_10004018, i32* %r3.global-to-local, align 4
  store i32 268451872, i32* @lr, align 4
  %v4_1000401c = inttoptr i32 %v0_10004008 to i32*
  %v5_1000401c = call i32 @function_1000235c(i32 %v0_10004018, i32* %v4_1000401c, i32 12, i32 0)
  %v0_10004020 = load i32, i32* @r28, align 4
  store i32 %v5_1000401c, i32* %r17.global-to-local, align 4
  %v0_10004030 = load i32, i32* @r29, align 4
  store i32 %v0_10004030, i32* %r3.global-to-local, align 4
  store i32 268451896, i32* @lr, align 4
  %v4_10004034 = inttoptr i32 %v0_10004020 to i32*
  %v5_10004034 = call i32 @function_1000235c(i32 %v0_10004030, i32* %v4_10004034, i32 13, i32 0)
  %v0_10004038 = load i32, i32* @r28, align 4
  store i32 %v5_10004034, i32* %r18.global-to-local, align 4
  %v0_10004048 = load i32, i32* @r29, align 4
  store i32 %v0_10004048, i32* %r3.global-to-local, align 4
  store i32 268451920, i32* @lr, align 4
  %v4_1000404c = inttoptr i32 %v0_10004038 to i32*
  %v5_1000404c = call i32 @function_1000235c(i32 %v0_10004048, i32* %v4_1000404c, i32 14, i32 0)
  %v0_10004050 = load i32, i32* @r28, align 4
  %v0_10004060 = load i32, i32* @r29, align 4
  store i32 %v0_10004060, i32* %r3.global-to-local, align 4
  store i32 268451944, i32* @lr, align 4
  %v4_10004064 = inttoptr i32 %v0_10004050 to i32*
  %v5_10004064 = call i32 @function_1000235c(i32 %v0_10004060, i32* %v4_10004064, i32 15, i32 1)
  %v0_10004068 = load i32, i32* @r28, align 4
  store i32 %v5_10004064, i32* %r16.global-to-local, align 4
  %v0_10004078 = load i32, i32* @r29, align 4
  store i32 %v0_10004078, i32* %r3.global-to-local, align 4
  store i32 268451968, i32* @lr, align 4
  %v4_1000407c = inttoptr i32 %v0_10004068 to i32*
  %v5_1000407c = call i32 @function_1000235c(i32 %v0_10004078, i32* %v4_1000407c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004084 = load i32, i32* @global_var_1001e180.71, align 4
  %v0_10004088 = load i32, i32* @r28, align 4
  store i32 %v5_1000407c, i32* %r30.global-to-local, align 4
  %v0_10004094 = load i32, i32* @r29, align 4
  store i32 %v0_10004094, i32* %r3.global-to-local, align 4
  store i32 268451996, i32* @lr, align 4
  %v5_10004098 = inttoptr i32 %v0_10004088 to i32*
  %v6_10004098 = call i32 @function_100022dc(i32 %v0_10004094, i32* %v5_10004098, i32 25, i32 %v3_10004084, i32 268566528)
  store i32 %v6_10004098, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268452016, i32* @lr, align 4
  %v3_100040ac = call i32 @function_1000b568(i32 2, i32 3, i32 6)
  store i32 %v3_100040ac, i32* %r3.global-to-local, align 4
  %v3_100040b0 = icmp eq i32 %v3_100040ac, -1
  store i32 %v3_100040ac, i32* %r26.global-to-local, align 4
  br i1 %v3_100040b0, label %dec_label_pc_100043e8, label %dec_label_pc_100040bc

dec_label_pc_100040bc:                            ; preds = %dec_label_pc_10003ea4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100040c8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268452056, i32* @lr, align 4
  %v5_100040d4 = call i32 @function_1000b52c(i32 0, i32 3, i32 %v2_100040c8, i32 4, i32 4)
  store i32 %v5_100040d4, i32* %r3.global-to-local, align 4
  %v3_100040d8 = icmp eq i32 %v5_100040d4, -1
  br i1 %v3_100040d8, label %dec_label_pc_100043e0, label %dec_label_pc_100040e0

dec_label_pc_100040e0:                            ; preds = %dec_label_pc_100040bc
  %v0_100040e0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100040e0 = icmp slt i32 %v0_100040e0, 0
  %v3_100040e0 = icmp eq i32 %v0_100040e0, 0
  store i1 %v1_100040e0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100040e0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_100040ec = load i32, i32* %r21.global-to-local, align 4
  %v1_100040ec = urem i32 %v0_100040ec, 65536
  store i32 %v1_100040ec, i32* %r21.global-to-local, align 4
  %v0_100040f0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100040f0 = urem i32 %v0_100040f0, 65536
  store i32 %v1_100040f0, i32* %r22.global-to-local, align 4
  %v0_100040f4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100040f4 = urem i32 %v0_100040f4, 65536
  store i32 %v1_100040f4, i32* %r23.global-to-local, align 4
  %v0_100040f8 = load i32, i32* %r14.global-to-local, align 4
  %v1_100040f8 = urem i32 %v0_100040f8, 256
  store i32 %v1_100040f8, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_100040e0, 1
  br i1 %tmp40, label %dec_label_pc_1000425c, label %dec_label_pc_10004100

dec_label_pc_10004100:                            ; preds = %dec_label_pc_100040e0
  store i32 %v5_1000404c, i32* %r0.global-to-local, align 4
  %v0_10004104 = load i32, i32* @r31, align 4
  %v3_10004104 = icmp eq i32 %v0_10004104, 0
  store i1 %v3_10004104, i1* %cr3_eq.global-to-local, align 1
  %v0_10004108 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004108 = urem i32 %v0_10004108, 2
  store i32 %v1_10004108, i32* %r29.global-to-local, align 4
  %v0_1000410c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000410c = urem i32 %v0_1000410c, 2
  store i32 %v1_1000410c, i32* %r17.global-to-local, align 4
  %v0_10004110 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004110 = urem i32 %v0_10004110, 2
  store i32 %v1_10004110, i32* %r18.global-to-local, align 4
  %v1_10004114 = urem i32 %v5_1000404c, 2
  store i32 %v1_10004114, i32* %r28.global-to-local, align 4
  %v0_10004118 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004118 = urem i32 %v0_10004118, 2
  store i32 %v1_10004118, i32* %r30.global-to-local, align 4
  %v1_1000411c = urem i32 %v0_100040f8, 2
  store i32 %v1_1000411c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_1000416c = sext i8 %v5_10003f3c to i32
  %v4_10004174 = sext i8 %v5_10003f74 to i32
  br label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_10004188, %dec_label_pc_10004100
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452144, i32* @lr, align 4
  %v2_1000412c = call i32 @function_1000b8f4(i32 128, i32 1)
  store i32 %v2_1000412c, i32* %r3.global-to-local, align 4
  %v3_10004130 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004130, i32* %r9.global-to-local, align 4
  %v0_10004134 = load i32, i32* @r31, align 4
  %v1_10004134 = mul i32 %v0_10004134, 4
  store i32 %v1_10004134, i32* %r0.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004138 = add i32 %v1_10004138, %v1_10004134
  %v4_10004138 = inttoptr i32 %v3_10004138 to i32*
  store i32 %v2_1000412c, i32* %v4_10004138, align 4
  %v0_1000413c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000413c = mul i32 %v0_1000413c, 4
  store i32 %v1_1000413c, i32* %r9.global-to-local, align 4
  %v1_10004140 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004140 = add i32 %v1_10004140, %v1_1000413c
  %v3_10004140 = inttoptr i32 %v2_10004140 to i32*
  %v4_10004140 = load i32, i32* %v3_10004140, align 4
  store i32 %v4_10004140, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004148 = inttoptr i32 %v4_10004140 to i32*
  %v2_10004148 = load i32, i32* %v1_10004148, align 4
  store i32 %v2_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = add i32 %v4_10004140, 20
  store i32 %v1_1000414c, i32* %r11.global-to-local, align 4
  %v0_10004150 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004150 = trunc i32 %v0_10004150 to i16
  %v3_10004150 = add i32 %v4_10004140, 4
  %v4_10004150 = inttoptr i32 %v3_10004150 to i16*
  store i16 %v1_10004150, i16* %v4_10004150, align 2
  %v1_10004154 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10004164 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004164 = inttoptr i32 %v1_10004164 to i32*
  store i32 %v1_1000415c, i32* %v2_10004164, align 4
  %v0_10004168 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004168 = trunc i32 %v0_10004168 to i16
  %v2_10004168 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004168 = add i32 %v2_10004168, 2
  %v4_10004168 = inttoptr i32 %v3_10004168 to i16*
  store i16 %v1_10004168, i16* %v4_10004168, align 2
  store i32 %v4_1000416c, i32* %r0.global-to-local, align 4
  %v2_10004170 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004170 = add i32 %v2_10004170, 1
  %v4_10004170 = inttoptr i32 %v3_10004170 to i8*
  store i8 %v5_10003f3c, i8* %v4_10004170, align 1
  store i32 %v4_10004174, i32* %r9.global-to-local, align 4
  %v2_10004178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004178 = add i32 %v2_10004178, 8
  %v4_10004178 = inttoptr i32 %v3_10004178 to i8*
  store i8 %v5_10003f74, i8* %v4_10004178, align 1
  %v0_1000417c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000417c, label %dec_label_pc_10004188, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004124
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004184 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004184 = add i32 %v2_10004184, 6
  %v4_10004184 = inttoptr i32 %v3_10004184 to i16*
  store i16 16384, i16* %v4_10004184, align 2
  br label %dec_label_pc_10004188

dec_label_pc_10004188:                            ; preds = %dec_label_pc_10004124, %dec_label_pc_10004180
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_1000418c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000418c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000418c = add i32 %v1_1000418c, 12
  %v3_1000418c = inttoptr i32 %v2_1000418c to i32*
  store i32 %v0_1000418c, i32* %v3_1000418c, align 4
  %v0_10004190 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004190 = trunc i32 %v0_10004190 to i8
  %v2_10004190 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004190 = add i32 %v2_10004190, 9
  %v4_10004190 = inttoptr i32 %v3_10004190 to i8*
  store i8 %v1_10004190, i8* %v4_10004190, align 1
  %v0_10004194 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004194 = trunc i32 %v0_10004194 to i16
  %v2_10004194 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004194 = add i32 %v2_10004194, 20
  %v4_10004194 = inttoptr i32 %v3_10004194 to i16*
  store i16 %v1_10004194, i16* %v4_10004194, align 2
  %v3_10004198 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004198, i32* %r9.global-to-local, align 4
  %v0_1000419c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000419c = trunc i32 %v0_1000419c to i16
  %v2_1000419c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000419c = add i32 %v2_1000419c, 2
  %v4_1000419c = inttoptr i32 %v3_1000419c to i16*
  store i16 %v1_1000419c, i16* %v4_1000419c, align 2
  %v0_100041a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041a0 = mul i32 %v0_100041a0, 24
  %v1_100041a4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100041a4 = add i32 %v1_100041a4, %v1_100041a0
  store i32 %v2_100041a4, i32* %r9.global-to-local, align 4
  %v1_100041a8 = add i32 %v2_100041a4, 16
  %v2_100041a8 = inttoptr i32 %v1_100041a8 to i32*
  %v3_100041a8 = load i32, i32* %v2_100041a8, align 4
  store i32 %v3_100041a8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100041b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100041b0 = add i32 %v1_100041b0, 16
  %v3_100041b0 = inttoptr i32 %v2_100041b0 to i32*
  store i32 %v3_100041a8, i32* %v3_100041b0, align 4
  %v0_100041b4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100041b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100041b4 = add i32 %v1_100041b4, 4
  %v3_100041b4 = inttoptr i32 %v2_100041b4 to i32*
  store i32 %v0_100041b4, i32* %v3_100041b4, align 4
  %v0_100041b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100041b8 = add i32 %v0_100041b8, 12
  %v2_100041b8 = inttoptr i32 %v1_100041b8 to i32*
  %v3_100041b8 = load i32, i32* %v2_100041b8, align 4
  store i32 %v3_100041b8, i32* %r0.global-to-local, align 4
  %v1_100041bc = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_100041bc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100041c4 = call i32 @__asm_rlwimi(i32 %v1_1000411c, i32 21, i32 10, i32 10)
  store i32 %v1_100041c4, i32* %r0.global-to-local, align 4
  %v1_100041c8 = call i32 @__asm_rlwimi(i32 %v1_1000410c, i32 20, i32 11, i32 11)
  store i32 %v1_100041c8, i32* %r0.global-to-local, align 4
  %v1_100041cc = call i32 @__asm_rlwimi(i32 %v1_10004110, i32 19, i32 12, i32 12)
  store i32 %v1_100041cc, i32* %r0.global-to-local, align 4
  %v1_100041d0 = call i32 @__asm_rlwimi(i32 %v1_10004114, i32 18, i32 13, i32 13)
  store i32 %v1_100041d0, i32* %r0.global-to-local, align 4
  %v1_100041d4 = call i32 @__asm_rlwimi(i32 %v1_10004108, i32 17, i32 14, i32 14)
  store i32 %v1_100041d4, i32* %r0.global-to-local, align 4
  %v1_100041d8 = call i32 @__asm_rlwimi(i32 %v1_10004118, i32 16, i32 15, i32 15)
  %v1_100041dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100041dc = add i32 %v1_100041dc, 12
  %v3_100041dc = inttoptr i32 %v2_100041dc to i32*
  store i32 %v1_100041d8, i32* %v3_100041dc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_100041e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041e4 = add i32 %v2_100041e4, 40
  %v4_100041e4 = inttoptr i32 %v3_100041e4 to i8*
  store i8 2, i8* %v4_100041e4, align 1
  %v0_100041e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041e8 = trunc i32 %v0_100041e8 to i8
  %v2_100041e8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041e8 = add i32 %v2_100041e8, 41
  %v4_100041e8 = inttoptr i32 %v3_100041e8 to i8*
  store i8 %v1_100041e8, i8* %v4_100041e8, align 1
  %v0_100041ec = call i32 @function_10006fa8()
  %v2_100041f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041f4 = add i32 %v2_100041f4, 46
  %v4_100041f4 = inttoptr i32 %v3_100041f4 to i8*
  store i8 8, i8* %v4_100041f4, align 1
  %v1_100041f8 = urem i32 %v0_100041ec, 16
  store i32 %v1_100041f8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10004204 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004204 = add i32 %v2_10004204, 44
  %v4_10004204 = inttoptr i32 %v3_10004204 to i8*
  store i8 4, i8* %v4_10004204, align 1
  %v0_10004208 = load i32, i32* %r3.global-to-local, align 4
  %v1_10004208 = add i32 %v0_10004208, 1400
  store i32 %v1_10004208, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004210 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004210 = trunc i32 %v0_10004210 to i8
  %v2_10004210 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004210 = add i32 %v2_10004210, 45
  %v4_10004210 = inttoptr i32 %v3_10004210 to i8*
  store i8 %v1_10004210, i8* %v4_10004210, align 1
  %v0_10004214 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004214 = trunc i32 %v0_10004214 to i8
  %v2_10004214 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004214 = add i32 %v2_10004214, 47
  %v4_10004214 = inttoptr i32 %v3_10004214 to i8*
  store i8 %v1_10004214, i8* %v4_10004214, align 1
  %v0_10004218 = load i32, i32* %r3.global-to-local, align 4
  %v1_10004218 = trunc i32 %v0_10004218 to i16
  %v2_10004218 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004218 = add i32 %v2_10004218, 42
  %v4_10004218 = inttoptr i32 %v3_10004218 to i16*
  store i16 %v1_10004218, i16* %v4_10004218, align 2
  %v0_1000421c = call i32 @function_10006fa8()
  store i32 %v0_1000421c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10004228 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004228 = add i32 %v1_10004228, 52
  %v3_10004228 = inttoptr i32 %v2_10004228 to i32*
  store i32 0, i32* %v3_10004228, align 4
  %v0_1000422c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000422c = trunc i32 %v0_1000422c to i8
  %v2_1000422c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000422c = add i32 %v2_1000422c, 56
  %v4_1000422c = inttoptr i32 %v3_1000422c to i8*
  store i8 %v1_1000422c, i8* %v4_1000422c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10004238 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004238 = add i32 %v1_10004238, 48
  %v3_10004238 = inttoptr i32 %v2_10004238 to i32*
  store i32 %v0_1000421c, i32* %v3_10004238, align 4
  %v0_1000423c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000423c = trunc i32 %v0_1000423c to i8
  %v2_1000423c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000423c = add i32 %v2_1000423c, 59
  %v4_1000423c = inttoptr i32 %v3_1000423c to i8*
  store i8 %v1_1000423c, i8* %v4_1000423c, align 1
  %v0_10004240 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004240 = trunc i32 %v0_10004240 to i8
  %v2_10004240 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004240 = add i32 %v2_10004240, 57
  %v4_10004240 = inttoptr i32 %v3_10004240 to i8*
  store i8 %v1_10004240, i8* %v4_10004240, align 1
  %v0_10004244 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004244 = trunc i32 %v0_10004244 to i8
  %v2_10004244 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004244 = add i32 %v2_10004244, 58
  %v4_10004244 = inttoptr i32 %v3_10004244 to i8*
  store i8 %v1_10004244, i8* %v4_10004244, align 1
  %v3_10004248 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004248, i32* %r9.global-to-local, align 4
  %v1_1000424c = add i32 %v3_10004248, 1
  store i32 %v1_1000424c, i32* %r31.global-to-local, align 4
  %v1_10004250 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004250 = icmp slt i32 %v1_1000424c, %v1_10004250
  store i32 %v1_1000424c, i32* %stack_var_-120, align 4
  br i1 %v2_10004250, label %dec_label_pc_10004124, label %dec_label_pc_1000425c.loopexit

dec_label_pc_1000425c.loopexit:                   ; preds = %dec_label_pc_10004188
  %v0_10004260.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10004264.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004264.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000425c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_1000425c.loopexit, %dec_label_pc_100040e0
  %v1_10004264.pre = phi i1 [ %v1_10004264.pre.pre, %dec_label_pc_1000425c.loopexit ], [ %v1_100040e0, %dec_label_pc_100040e0 ]
  %v0_10004264.pre = phi i1 [ %v0_10004264.pre.pre, %dec_label_pc_1000425c.loopexit ], [ %v3_100040e0, %dec_label_pc_100040e0 ]
  %v0_10004260 = phi i32 [ %v0_10004260.pre, %dec_label_pc_1000425c.loopexit ], [ %v1_100040f8, %dec_label_pc_100040e0 ]
  %v0_1000425c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000425c = icmp eq i32 %v0_1000425c, -1
  store i1 %v3_1000425c, i1* %cr2_eq.global-to-local, align 1
  %v3_10004260 = icmp eq i32 %v0_10004260, 0
  store i1 %v3_10004260, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10004264.outer

dec_label_pc_10004264.outer:                      ; preds = %dec_label_pc_10004340, %dec_label_pc_1000425c
  %v1_10004264.ph = phi i1 [ %v1_10004264.pre, %dec_label_pc_1000425c ], [ %v1_10004340, %dec_label_pc_10004340 ]
  %v0_10004264.ph = phi i1 [ %v0_10004264.pre, %dec_label_pc_1000425c ], [ %v0_10004340, %dec_label_pc_10004340 ]
  %v2_10004264 = or i1 %v1_10004264.ph, %v0_10004264.ph
  br label %dec_label_pc_10004264

dec_label_pc_10004264:                            ; preds = %dec_label_pc_10004264.outer, %dec_label_pc_10004264
  br i1 %v2_10004264, label %dec_label_pc_10004264, label %dec_label_pc_10004268

dec_label_pc_10004268:                            ; preds = %dec_label_pc_10004264, %dec_label_pc_10004340
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004278

dec_label_pc_10004278:                            ; preds = %dec_label_pc_100042d0, %dec_label_pc_10004268
  %v0_10004278 = phi i32 [ %v1_10004330, %dec_label_pc_100042d0 ], [ 0, %dec_label_pc_10004268 ]
  %v1_10004278 = mul i32 %v0_10004278, 24
  store i32 %v1_10004278, i32* %r0.global-to-local, align 4
  %v1_1000427c = mul i32 %v0_10004278, 4
  store i32 %v1_1000427c, i32* %r11.global-to-local, align 4
  %v1_10004280 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004280 = add i32 %v1_10004280, %v1_1000427c
  %v3_10004280 = inttoptr i32 %v2_10004280 to i32*
  %v4_10004280 = load i32, i32* %v3_10004280, align 4
  store i32 %v4_10004280, i32* %r28.global-to-local, align 4
  %v1_10004284 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004284 = add i32 %v1_10004284, %v1_10004278
  %v1_10004288 = add i32 %v2_10004284, 20
  %v2_10004288 = inttoptr i32 %v1_10004288 to i8*
  %v3_10004288 = load i8, i8* %v2_10004288, align 1
  %v4_10004288 = zext i8 %v3_10004288 to i32
  store i32 %v4_10004288, i32* %r9.global-to-local, align 4
  %v1_1000428c = add i32 %v4_10004280, 20
  store i32 %v1_1000428c, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10004288, 32
  br i1 %tmp41, label %dec_label_pc_10004348, label %dec_label_pc_10004298

dec_label_pc_10004298:                            ; preds = %dec_label_pc_10004278
  %v0_10004298 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004298, label %dec_label_pc_10004370, label %dec_label_pc_1000429c

dec_label_pc_1000429c:                            ; preds = %dec_label_pc_10004348, %dec_label_pc_10004298
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100042a4 = load i32, i32* %r21.global-to-local, align 4
  %v4_100042a4 = icmp eq i32 %v0_100042a4, 65535
  br i1 %v4_100042a4, label %dec_label_pc_10004388, label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_10004370, %dec_label_pc_1000429c
  %v1_100042ac = phi i32 [ %v1_10004380, %dec_label_pc_10004370 ], [ 65535, %dec_label_pc_1000429c ]
  %v0_100042ac = load i32, i32* %r22.global-to-local, align 4
  %v4_100042ac = icmp eq i32 %v0_100042ac, %v1_100042ac
  br i1 %v4_100042ac, label %dec_label_pc_10004398, label %dec_label_pc_100042b4

dec_label_pc_100042b4:                            ; preds = %dec_label_pc_10004388.dec_label_pc_100042b4_crit_edge, %dec_label_pc_100042ac
  %v1_100042b4 = phi i32 [ %v1_100042b4.pre, %dec_label_pc_10004388.dec_label_pc_100042b4_crit_edge ], [ %v1_100042ac, %dec_label_pc_100042ac ]
  %v0_100042b4 = load i32, i32* %r23.global-to-local, align 4
  %v4_100042b4 = icmp eq i32 %v0_100042b4, %v1_100042b4
  br i1 %v4_100042b4, label %dec_label_pc_100043a8, label %dec_label_pc_100042bc

dec_label_pc_100042bc:                            ; preds = %dec_label_pc_10004398.dec_label_pc_100042bc_crit_edge, %dec_label_pc_100042b4
  %v1_100042bc = phi i32 [ %v1_100042bc.pre, %dec_label_pc_10004398.dec_label_pc_100042bc_crit_edge ], [ %v1_100042b4, %dec_label_pc_100042b4 ]
  %v0_100042bc = load i32, i32* %r19.global-to-local, align 4
  %v4_100042bc = icmp eq i32 %v0_100042bc, %v1_100042bc
  br i1 %v4_100042bc, label %dec_label_pc_100043b8, label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_100043a8.dec_label_pc_100042c4_crit_edge, %dec_label_pc_100042bc
  %v1_100042c4 = phi i32 [ %v1_100042c4.pre, %dec_label_pc_100043a8.dec_label_pc_100042c4_crit_edge ], [ %v1_100042bc, %dec_label_pc_100042bc ]
  %v0_100042c4 = load i32, i32* %r20.global-to-local, align 4
  %v4_100042c4 = icmp eq i32 %v0_100042c4, %v1_100042c4
  br i1 %v4_100042c4, label %dec_label_pc_100043c8, label %dec_label_pc_100042cc

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100043b8, %dec_label_pc_100042c4
  %v0_100042cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100042cc, label %dec_label_pc_100042d0, label %dec_label_pc_100043d4

dec_label_pc_100042d0:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_100043c8, %dec_label_pc_100043d4
  %v0_100042d0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100042d0 = trunc i32 %v0_100042d0 to i16
  %v2_100042d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100042d0 = add i32 %v2_100042d0, 10
  %v4_100042d0 = inttoptr i32 %v3_100042d0 to i16*
  store i16 %v1_100042d0, i16* %v4_100042d0, align 2
  %v0_100042d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100042d8, i32* @r3, align 4
  %v2_100042dc = call i32 @function_100056ac(i32 %v0_100042d8, i32 20)
  %v3_100042dc = trunc i32 %v2_100042dc to i16
  %v0_100042e0 = load i32, i32* @r31, align 4
  store i32 %v0_100042e0, i32* @r4, align 4
  %v4_100042e4 = add i32 %v0_100042d8, 10
  %v5_100042e4 = inttoptr i32 %v4_100042e4 to i16*
  store i16 %v3_100042dc, i16* %v5_100042e4, align 2
  %v0_100042ec = load i32, i32* %r30.global-to-local, align 4
  %v1_100042ec = trunc i32 %v0_100042ec to i16
  %v2_100042ec = load i32, i32* @r31, align 4
  %v3_100042ec = add i32 %v2_100042ec, 16
  %v4_100042ec = inttoptr i32 %v3_100042ec to i16*
  store i16 %v1_100042ec, i16* %v4_100042ec, align 2
  %v0_100042f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100042f4, i32* %r3.global-to-local, align 4
  %v4_100042f8 = call i32 @function_10005710(i32 %v0_100042f4, i32 %v0_100042e0, i32 40, i32 40)
  %v5_100042f8 = trunc i32 %v4_100042f8 to i16
  store i32 %v4_100042f8, i32* %r3.global-to-local, align 4
  %v3_100042fc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100042fc, i32* %r7.global-to-local, align 4
  %v0_10004300 = load i32, i32* @r31, align 4
  %v1_10004300 = add i32 %v0_10004300, 2
  %v2_10004300 = inttoptr i32 %v1_10004300 to i16*
  %v3_10004300 = load i16, i16* %v2_10004300, align 2
  %v4_10004300 = zext i16 %v3_10004300 to i32
  store i32 %v4_10004300, i32* %r0.global-to-local, align 4
  %v0_10004304 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004308 = mul i32 %v3_100042fc, 24
  store i32 %v1_10004308, i32* %r7.global-to-local, align 4
  %v4_1000430c = add i32 %v0_10004300, 16
  %v5_1000430c = inttoptr i32 %v4_1000430c to i16*
  store i16 %v5_100042f8, i16* %v5_1000430c, align 2
  %v0_10004314 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004314, i32* %r3.global-to-local, align 4
  %v0_10004318 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004318 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004318 = add i32 %v1_10004318, %v0_10004318
  store i32 %v2_10004318, i32* %r7.global-to-local, align 4
  %v0_10004320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004320 = trunc i32 %v0_10004320 to i16
  %v3_10004320 = add i32 %v2_10004318, 2
  %v4_10004320 = inttoptr i32 %v3_10004320 to i16*
  store i16 %v1_10004320, i16* %v4_10004320, align 2
  store i32 268452652, i32* @lr, align 4
  %v6_10004328 = call i32 @function_1000b4ec(i32 %v0_10004314, i32 %v0_10004304, i32 60, i32 16384, i32 %v2_10004318, i32 16)
  store i32 %v6_10004328, i32* %r3.global-to-local, align 4
  %v3_1000432c = load i32, i32* %stack_var_-120, align 4
  %v1_10004330 = add i32 %v3_1000432c, 1
  store i32 %v1_10004330, i32* %r9.global-to-local, align 4
  %v1_10004334 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004334 = icmp slt i32 %v1_10004330, %v1_10004334
  store i32 %v1_10004330, i32* %stack_var_-120, align 4
  br i1 %v2_10004334, label %dec_label_pc_10004278, label %dec_label_pc_10004340

dec_label_pc_10004340:                            ; preds = %dec_label_pc_100042d0
  %v0_10004340 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004340 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004340 = or i1 %v0_10004340, %v1_10004340
  br i1 %v2_10004340, label %dec_label_pc_10004264.outer, label %dec_label_pc_10004268

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004278
  %v1_10004348 = add i32 %v2_10004284, 16
  %v2_10004348 = inttoptr i32 %v1_10004348 to i32*
  %v3_10004348 = load i32, i32* %v2_10004348, align 4
  store i32 %v3_10004348, i32* %r29.global-to-local, align 4
  %v0_1000434c = call i32 @function_10006fa8()
  store i32 %v0_1000434c, i32* %r3.global-to-local, align 4
  %v3_10004350 = load i32, i32* %stack_var_-120, align 4
  %v1_10004354 = mul i32 %v3_10004350, 24
  %v1_10004358 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004358 = add i32 %v1_10004358, %v1_10004354
  store i32 %v2_10004358, i32* %r9.global-to-local, align 4
  %v1_1000435c = add i32 %v2_10004358, 20
  %v2_1000435c = inttoptr i32 %v1_1000435c to i8*
  %v3_1000435c = load i8, i8* %v2_1000435c, align 1
  %v4_1000435c = zext i8 %v3_1000435c to i32
  store i32 %v4_1000435c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000435c, 64
  %v2_10004360 = zext i8 %tmp to i32
  %v3_10004360 = lshr i32 %v0_1000434c, %v2_10004360
  store i32 %v3_10004360, i32* %r3.global-to-local, align 4
  %v0_10004364 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004364 = add i32 %v3_10004360, %v0_10004364
  store i32 %v2_10004364, i32* %r29.global-to-local, align 4
  %v1_10004368 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004368 = add i32 %v1_10004368, 16
  %v3_10004368 = inttoptr i32 %v2_10004368 to i32*
  store i32 %v2_10004364, i32* %v3_10004368, align 4
  %v0_1000436c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000436c, label %dec_label_pc_10004370, label %dec_label_pc_1000429c

dec_label_pc_10004370:                            ; preds = %dec_label_pc_10004348, %dec_label_pc_10004298
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10004374 = call i32 @function_10006fa8()
  store i32 %v0_10004374, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_1000437c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000437c = add i32 %v1_1000437c, 12
  %v3_1000437c = inttoptr i32 %v2_1000437c to i32*
  store i32 %v0_10004374, i32* %v3_1000437c, align 4
  %v0_10004380 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004380 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004380 = icmp eq i32 %v0_10004380, %v1_10004380
  br i1 %v4_10004380, label %dec_label_pc_10004388, label %dec_label_pc_100042ac

dec_label_pc_10004388:                            ; preds = %dec_label_pc_10004370, %dec_label_pc_1000429c
  %v0_10004388 = call i32 @function_10006fa8()
  %v1_10004388 = trunc i32 %v0_10004388 to i16
  store i32 %v0_10004388, i32* %r3.global-to-local, align 4
  %v0_1000438c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000438c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000438c = icmp eq i32 %v0_1000438c, %v1_1000438c
  %v3_10004390 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004390 = add i32 %v3_10004390, 4
  %v5_10004390 = inttoptr i32 %v4_10004390 to i16*
  store i16 %v1_10004388, i16* %v5_10004390, align 2
  br i1 %v4_1000438c, label %dec_label_pc_10004398, label %dec_label_pc_10004388.dec_label_pc_100042b4_crit_edge

dec_label_pc_10004388.dec_label_pc_100042b4_crit_edge: ; preds = %dec_label_pc_10004388
  %v1_100042b4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100042b4

dec_label_pc_10004398:                            ; preds = %dec_label_pc_10004388, %dec_label_pc_100042ac
  %v0_10004398 = call i32 @function_10006fa8()
  %v1_10004398 = trunc i32 %v0_10004398 to i16
  store i32 %v0_10004398, i32* %r3.global-to-local, align 4
  %v0_1000439c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000439c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000439c = icmp eq i32 %v0_1000439c, %v1_1000439c
  %v3_100043a0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100043a0 = add i32 %v3_100043a0, 20
  %v5_100043a0 = inttoptr i32 %v4_100043a0 to i16*
  store i16 %v1_10004398, i16* %v5_100043a0, align 2
  br i1 %v4_1000439c, label %dec_label_pc_100043a8, label %dec_label_pc_10004398.dec_label_pc_100042bc_crit_edge

dec_label_pc_10004398.dec_label_pc_100042bc_crit_edge: ; preds = %dec_label_pc_10004398
  %v1_100042bc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100042bc

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_10004398, %dec_label_pc_100042b4
  %v0_100043a8 = call i32 @function_10006fa8()
  %v1_100043a8 = trunc i32 %v0_100043a8 to i16
  store i32 %v0_100043a8, i32* %r3.global-to-local, align 4
  %v0_100043ac = load i32, i32* %r19.global-to-local, align 4
  %v1_100043ac = load i32, i32* %r29.global-to-local, align 4
  %v4_100043ac = icmp eq i32 %v0_100043ac, %v1_100043ac
  %v3_100043b0 = load i32, i32* @r31, align 4
  %v4_100043b0 = add i32 %v3_100043b0, 2
  %v5_100043b0 = inttoptr i32 %v4_100043b0 to i16*
  store i16 %v1_100043a8, i16* %v5_100043b0, align 2
  br i1 %v4_100043ac, label %dec_label_pc_100043b8, label %dec_label_pc_100043a8.dec_label_pc_100042c4_crit_edge

dec_label_pc_100043a8.dec_label_pc_100042c4_crit_edge: ; preds = %dec_label_pc_100043a8
  %v1_100042c4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100042c4

dec_label_pc_100043b8:                            ; preds = %dec_label_pc_100043a8, %dec_label_pc_100042bc
  %v0_100043b8 = call i32 @function_10006fa8()
  store i32 %v0_100043b8, i32* %r3.global-to-local, align 4
  %v0_100043bc = load i32, i32* %r20.global-to-local, align 4
  %v1_100043bc = load i32, i32* %r29.global-to-local, align 4
  %v4_100043bc = icmp eq i32 %v0_100043bc, %v1_100043bc
  %v1_100043c0 = load i32, i32* @r31, align 4
  %v2_100043c0 = add i32 %v1_100043c0, 4
  %v3_100043c0 = inttoptr i32 %v2_100043c0 to i32*
  store i32 %v0_100043b8, i32* %v3_100043c0, align 4
  br i1 %v4_100043bc, label %dec_label_pc_100043c8, label %dec_label_pc_100042cc

dec_label_pc_100043c8:                            ; preds = %dec_label_pc_100043b8, %dec_label_pc_100042c4
  %v0_100043c8 = call i32 @function_10006fa8()
  store i32 %v0_100043c8, i32* %r3.global-to-local, align 4
  %v1_100043cc = load i32, i32* @r31, align 4
  %v2_100043cc = add i32 %v1_100043cc, 8
  %v3_100043cc = inttoptr i32 %v2_100043cc to i32*
  store i32 %v0_100043c8, i32* %v3_100043cc, align 4
  %v0_100043d0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100043d0, label %dec_label_pc_100042d0, label %dec_label_pc_100043d4

dec_label_pc_100043d4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_100043c8
  %v0_100043d4 = call i32 @function_10006fa8()
  %v1_100043d4 = trunc i32 %v0_100043d4 to i16
  store i32 %v0_100043d4, i32* %r3.global-to-local, align 4
  %v3_100043d8 = load i32, i32* @r31, align 4
  %v4_100043d8 = add i32 %v3_100043d8, 18
  %v5_100043d8 = inttoptr i32 %v4_100043d8 to i16*
  store i16 %v1_100043d4, i16* %v5_100043d8, align 2
  br label %dec_label_pc_100042d0

dec_label_pc_100043e0:                            ; preds = %dec_label_pc_100040bc
  %v0_100043e0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100043e0, i32* %r3.global-to-local, align 4
  store i32 268452840, i32* @lr, align 4
  %v0_100043e4 = call i32 @function_1000a79c()
  store i32 %v0_100043e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100043e8

dec_label_pc_100043e8:                            ; preds = %dec_label_pc_10003ea4, %dec_label_pc_100043e0
  store i32 %v0_10003ebc, i32* %r0.global-to-local, align 4
  %v1_100043fc = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003eac)
  store i32 %v0_10003efc, i32* %r28.global-to-local, align 4
  store i32 %v0_10003f04, i32* %r29.global-to-local, align 4
  store i32 %v0_10003f10, i32* %r31.global-to-local, align 4
  %v0_10004444 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004444

; uselistorder directives
  uselistorder i32 %v0_100043d4, { 1, 0 }
  uselistorder i32 %v0_100043a8, { 1, 0 }
  uselistorder i32 %v0_10004398, { 1, 0 }
  uselistorder i32 %v0_10004388, { 1, 0 }
  uselistorder i32 %v1_10004380, { 1, 0 }
  uselistorder i1 %v1_10004340, { 1, 0 }
  uselistorder i1 %v0_10004340, { 1, 0 }
  uselistorder i32 %v1_10004330, { 0, 2, 3, 1 }
  uselistorder i32 %v4_100042f8, { 1, 0 }
  uselistorder i32 %v1_1000427c, { 1, 0 }
  uselistorder i32 %v1_1000413c, { 1, 0 }
  uselistorder i32 %v1_10004134, { 1, 0 }
  uselistorder i32 %v1_1000411c, { 1, 0 }
  uselistorder i32 %v1_10004118, { 1, 0 }
  uselistorder i32 %v1_10004114, { 1, 0 }
  uselistorder i32 %v1_10004110, { 1, 0 }
  uselistorder i32 %v1_1000410c, { 1, 0 }
  uselistorder i32 %v1_10004108, { 1, 0 }
  uselistorder i32 %v1_100040f8, { 1, 0 }
  uselistorder i8 %v5_10003f74, { 1, 0 }
  uselistorder i8 %v5_10003f3c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 10, 7, 11, 9, 12, 8, 13, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 42, { 2, 0, 3, 1, 4 }
  uselistorder i8 4, { 3, 4, 0, 1, 2 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_100043e8, { 1, 0 }
  uselistorder label %dec_label_pc_100043d4, { 1, 0 }
  uselistorder label %dec_label_pc_100042d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004268, { 1, 0 }
  uselistorder label %dec_label_pc_10004264, { 1, 0 }
  uselistorder label %dec_label_pc_10004188, { 1, 0 }
}

define i32 @function_10004448(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004448:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10004450 = call i32 @__asm_mfcr()
  store i32 %v0_10004450, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000447c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004484 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268453032, i32* @lr, align 4
  %v2_100044a4 = call i32 @function_1000b8f4(i32 4, i32 4)
  store i32 %v2_100044a4, i32* %r27.global-to-local, align 4
  %v0_100044b0 = load i32, i32* @r30, align 4
  store i32 %v0_100044b0, i32* %r3.global-to-local, align 4
  store i32 268453048, i32* @lr, align 4
  %v2_100044b4 = call i32 @function_1000b8f4(i32 %v0_100044b0, i32 4)
  %v0_100044bc = load i32, i32* @r28, align 4
  store i32 %v2_100044b4, i32* %r26.global-to-local, align 4
  %v0_100044cc = load i32, i32* @r29, align 4
  store i32 %v0_100044cc, i32* %r3.global-to-local, align 4
  store i32 268453076, i32* @lr, align 4
  %v4_100044d0 = inttoptr i32 %v0_100044bc to i32*
  %v5_100044d0 = call i32 @function_1000235c(i32 %v0_100044cc, i32* %v4_100044d0, i32 7, i32 65535)
  %v0_100044dc = load i32, i32* @r28, align 4
  %v1_100044e4 = urem i32 %v5_100044d0, 65536
  store i32 %v1_100044e4, i32* %r21.global-to-local, align 4
  %v0_100044e8 = load i32, i32* @r29, align 4
  store i32 %v0_100044e8, i32* %r3.global-to-local, align 4
  store i32 268453104, i32* @lr, align 4
  %v4_100044ec = inttoptr i32 %v0_100044dc to i32*
  %v5_100044ec = call i32 @function_1000235c(i32 %v0_100044e8, i32* %v4_100044ec, i32 6, i32 65535)
  %v0_100044f0 = load i32, i32* @r28, align 4
  %v1_100044f4 = urem i32 %v5_100044ec, 65536
  store i32 %v1_100044f4, i32* %r22.global-to-local, align 4
  %v0_10004500 = load i32, i32* @r29, align 4
  store i32 %v0_10004500, i32* %r3.global-to-local, align 4
  store i32 268453128, i32* @lr, align 4
  %v4_10004504 = inttoptr i32 %v0_100044f0 to i32*
  %v5_10004504 = call i32 @function_1000235c(i32 %v0_10004500, i32* %v4_10004504, i32 0, i32 512)
  %v0_10004508 = load i32, i32* @r28, align 4
  %v1_1000450c = urem i32 %v5_10004504, 65536
  store i32 %v1_1000450c, i32* @r31, align 4
  %v0_10004514 = load i32, i32* @r29, align 4
  store i32 %v0_10004514, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10004520.78 to i32), i32* @lr, align 4
  %v4_1000451c = inttoptr i32 %v0_10004508 to i32*
  %v5_1000451c = call i32 @function_1000235c(i32 %v0_10004514, i32* %v4_1000451c, i32 1, i32 1)
  store i32 %v5_1000451c, i32* %r3.global-to-local, align 4
  %v0_1000452c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000452c = icmp eq i32 %v0_1000452c, 65535
  %v1_10004534 = urem i32 %v5_1000451c, 256
  store i32 %v1_10004534, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_1000452c, label %dec_label_pc_10004730, label %dec_label_pc_10004548

dec_label_pc_10004548:                            ; preds = %dec_label_pc_10004448, %dec_label_pc_10004730
  %v0_10004548 = load i32, i32* @r30, align 4
  %v1_10004548 = icmp slt i32 %v0_10004548, 0
  %v3_10004548 = icmp eq i32 %v0_10004548, 0
  store i1 %v1_10004548, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004548, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10004548, 1
  br i1 %tmp38, label %dec_label_pc_10004608, label %dec_label_pc_10004550

dec_label_pc_10004550:                            ; preds = %dec_label_pc_10004548
  %v0_10004554 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004554, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10004560 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004560 = icmp eq i32 %v0_10004560, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100046b0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10004560, label %dec_label_pc_10004680, label %dec_label_pc_10004574

dec_label_pc_10004574:                            ; preds = %dec_label_pc_10004550, %dec_label_pc_100045e8
  %v0_10004580 = phi i32 [ %v0_100045fc, %dec_label_pc_100045e8 ], [ 0, %dec_label_pc_10004550 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10004580 = add i32 %v0_10004580, 1
  store i32 %v1_10004580, i32* %r24.global-to-local, align 4
  store i32 268453256, i32* @lr, align 4
  %v2_10004584 = call i32 @function_1000b8f4(i32 65535, i32 1)
  %v0_10004588 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004588 = trunc i32 %v0_10004588 to i16
  %v2_10004588 = load i32, i32* @r28, align 4
  %v3_10004588 = add i32 %v2_10004588, 2
  %v4_10004588 = inttoptr i32 %v3_10004588 to i16*
  store i16 %v1_10004588, i16* %v4_10004588, align 2
  %v1_1000458c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000458c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000458c = add i32 %v2_1000458c, %v1_1000458c
  %v4_1000458c = inttoptr i32 %v3_1000458c to i32*
  store i32 %v2_10004584, i32* %v4_1000458c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453280, i32* @lr, align 4
  %v3_1000459c = call i32 @function_1000b568(i32 2, i32 2, i32 17)
  store i32 %v3_1000459c, i32* %r3.global-to-local, align 4
  %v3_100045a4 = icmp eq i32 %v3_1000459c, -1
  %v1_100045ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100045ac = load i32, i32* %r26.global-to-local, align 4
  %v3_100045ac = add i32 %v2_100045ac, %v1_100045ac
  %v4_100045ac = inttoptr i32 %v3_100045ac to i32*
  store i32 %v3_1000459c, i32* %v4_100045ac, align 4
  br i1 %v3_100045a4, label %dec_label_pc_100046e4, label %dec_label_pc_100045b4

dec_label_pc_100045b4:                            ; preds = %dec_label_pc_10004574
  %v0_100045b4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100045b4, i32* %stack_var_-72, align 4
  store i32 268453316, i32* @lr, align 4
  %v0_100045c0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100045c0 = call i32 @function_1000b334(i32 %v0_100045c0, i32 %v2_100046b0, i32 16)
  store i32 %v3_100045c0, i32* %r3.global-to-local, align 4
  %v0_100045c4 = load i32, i32* @r28, align 4
  %v1_100045c4 = add i32 %v0_100045c4, 20
  %v2_100045c4 = inttoptr i32 %v1_100045c4 to i8*
  %v3_100045c4 = load i8, i8* %v2_100045c4, align 1
  %v2_100045c8 = icmp ugt i8 %v3_100045c4, 31
  br i1 %v2_100045c8, label %dec_label_pc_100045e8, label %dec_label_pc_100045d0

dec_label_pc_100045d0:                            ; preds = %dec_label_pc_100045b4
  %v1_100045d0 = add i32 %v0_100045c4, 16
  %v2_100045d0 = inttoptr i32 %v1_100045d0 to i32*
  %v3_100045d0 = load i32, i32* %v2_100045d0, align 4
  store i32 %v3_100045d0, i32* %r29.global-to-local, align 4
  %v0_100045d4 = call i32 @function_10006fa8()
  store i32 %v0_100045d4, i32* %r3.global-to-local, align 4
  %v0_100045d8 = load i32, i32* @r28, align 4
  %v1_100045d8 = add i32 %v0_100045d8, 20
  %v2_100045d8 = inttoptr i32 %v1_100045d8 to i8*
  %v3_100045d8 = load i8, i8* %v2_100045d8, align 1
  %tmp = urem i8 %v3_100045d8, 64
  %v2_100045dc = zext i8 %tmp to i32
  %v3_100045dc = lshr i32 %v0_100045d4, %v2_100045dc
  %v0_100045e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100045e0 = add i32 %v3_100045dc, %v0_100045e0
  store i32 %v2_100045e0, i32* %r3.global-to-local, align 4
  %v2_100045e4 = add i32 %v0_100045d8, 4
  %v3_100045e4 = inttoptr i32 %v2_100045e4 to i32*
  store i32 %v2_100045e0, i32* %v3_100045e4, align 4
  br label %dec_label_pc_100045e8

dec_label_pc_100045e8:                            ; preds = %dec_label_pc_100045b4, %dec_label_pc_100045d0
  %v0_100045e8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100045e8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100045e8 = add i32 %v1_100045e8, %v0_100045e8
  %v3_100045e8 = inttoptr i32 %v2_100045e8 to i32*
  %v4_100045e8 = load i32, i32* %v3_100045e8, align 4
  store i32 %v4_100045e8, i32* @r3, align 4
  %v1_100045f4 = add i32 %v0_100045e8, 4
  store i32 %v1_100045f4, i32* %r25.global-to-local, align 4
  store i32 268453372, i32* @lr, align 4
  %v0_100045f8 = call i32 @function_1000b368()
  store i32 %v0_100045f8, i32* %r3.global-to-local, align 4
  %v0_100045fc = load i32, i32* %r24.global-to-local, align 4
  %v1_100045fc = load i32, i32* @r30, align 4
  %v4_100045fc = icmp eq i32 %v0_100045fc, %v1_100045fc
  %v0_10004600 = load i32, i32* @r28, align 4
  %v1_10004600 = add i32 %v0_10004600, 24
  store i32 %v1_10004600, i32* @r28, align 4
  br i1 %v4_100045fc, label %dec_label_pc_10004608, label %dec_label_pc_10004574

dec_label_pc_10004608:                            ; preds = %dec_label_pc_100045e8, %dec_label_pc_10004660, %dec_label_pc_10004548
  %v0_10004608 = load i32, i32* %r23.global-to-local, align 4
  %v3_10004608 = icmp eq i32 %v0_10004608, 0
  store i1 %v3_10004608, i1* %cr3_eq.global-to-local, align 1
  %v0_1000460c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000460c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000460c.outer

dec_label_pc_1000460c.outer:                      ; preds = %dec_label_pc_10004640, %dec_label_pc_10004778, %dec_label_pc_10004608
  %v1_1000460c.ph39 = phi i1 [ %v1_1000460c.pre, %dec_label_pc_10004608 ], [ %v1_10004778, %dec_label_pc_10004778 ], [ %v1_10004640, %dec_label_pc_10004640 ]
  %v0_1000460c.ph40 = phi i1 [ %v0_1000460c.pre, %dec_label_pc_10004608 ], [ %v0_10004778, %dec_label_pc_10004778 ], [ %v0_10004640, %dec_label_pc_10004640 ]
  %v2_1000460c = or i1 %v1_1000460c.ph39, %v0_1000460c.ph40
  br label %dec_label_pc_1000460c

dec_label_pc_1000460c:                            ; preds = %dec_label_pc_1000460c.outer, %dec_label_pc_1000460c
  br i1 %v2_1000460c, label %dec_label_pc_1000460c, label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_10004778, %dec_label_pc_10004640, %dec_label_pc_1000460c
  %v0_10004610 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004610, label %dec_label_pc_10004614, label %dec_label_pc_1000473c

dec_label_pc_10004614:                            ; preds = %dec_label_pc_10004610
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000461c

dec_label_pc_1000461c:                            ; preds = %dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge, %dec_label_pc_10004614
  %v0_10004620 = phi i32 [ %v0_10004638, %dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge ], [ 0, %dec_label_pc_10004614 ]
  %v0_10004630 = phi i32 [ %v0_1000461c.pre, %dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge ], [ 0, %dec_label_pc_10004614 ]
  %v1_1000461c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000461c = add i32 %v1_1000461c, %v0_10004630
  %v3_1000461c = inttoptr i32 %v2_1000461c to i32*
  %v4_1000461c = load i32, i32* %v3_1000461c, align 4
  store i32 %v4_1000461c, i32* %r3.global-to-local, align 4
  %v1_10004620 = add i32 %v0_10004620, 1
  store i32 %v1_10004620, i32* %r28.global-to-local, align 4
  %v1_10004624 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004624 = add i32 %v1_10004624, %v0_10004630
  %v3_10004624 = inttoptr i32 %v2_10004624 to i32*
  %v4_10004624 = load i32, i32* %v3_10004624, align 4
  %v0_10004628 = load i32, i32* @r31, align 4
  %v1_10004630 = add i32 %v0_10004630, 4
  store i32 %v1_10004630, i32* %r29.global-to-local, align 4
  store i32 268453432, i32* @lr, align 4
  %v4_10004634 = call i32 @function_1000b4b4(i32 %v4_1000461c, i32 %v4_10004624, i32 %v0_10004628, i32 16384)
  store i32 %v4_10004634, i32* %r3.global-to-local, align 4
  %v0_10004638 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004638 = load i32, i32* @r30, align 4
  %v4_10004638 = icmp eq i32 %v0_10004638, %v1_10004638
  br i1 %v4_10004638, label %dec_label_pc_10004640, label %dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge

dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge: ; preds = %dec_label_pc_1000461c
  %v0_1000461c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000461c

dec_label_pc_10004640:                            ; preds = %dec_label_pc_1000461c
  %v0_10004640 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004640 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004640 = or i1 %v0_10004640, %v1_10004640
  br i1 %v2_10004640, label %dec_label_pc_1000460c.outer, label %dec_label_pc_10004610

dec_label_pc_10004660:                            ; preds = %dec_label_pc_100046c4, %dec_label_pc_100046e0
  %v0_10004660 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004660 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004660 = add i32 %v1_10004660, %v0_10004660
  %v3_10004660 = inttoptr i32 %v2_10004660 to i32*
  %v4_10004660 = load i32, i32* %v3_10004660, align 4
  store i32 %v4_10004660, i32* @r3, align 4
  %v1_1000466c = add i32 %v0_10004660, 4
  store i32 %v1_1000466c, i32* %r25.global-to-local, align 4
  store i32 268453492, i32* @lr, align 4
  %v0_10004670 = call i32 @function_1000b368()
  store i32 %v0_10004670, i32* %r3.global-to-local, align 4
  %v0_10004674 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004674 = load i32, i32* @r30, align 4
  %v4_10004674 = icmp eq i32 %v0_10004674, %v1_10004674
  %v0_10004678 = load i32, i32* @r28, align 4
  %v1_10004678 = add i32 %v0_10004678, 24
  store i32 %v1_10004678, i32* @r28, align 4
  br i1 %v4_10004674, label %dec_label_pc_10004608, label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004550, %dec_label_pc_10004660
  %v0_1000468c = phi i32 [ %v0_10004674, %dec_label_pc_10004660 ], [ 0, %dec_label_pc_10004550 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000468c = add i32 %v0_1000468c, 1
  store i32 %v1_1000468c, i32* %r24.global-to-local, align 4
  store i32 268453524, i32* @lr, align 4
  %v2_10004690 = call i32 @function_1000b8f4(i32 65535, i32 1)
  store i32 %v2_10004690, i32* %r3.global-to-local, align 4
  %v1_10004694 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004694 = load i32, i32* %r27.global-to-local, align 4
  %v3_10004694 = add i32 %v2_10004694, %v1_10004694
  %v4_10004694 = inttoptr i32 %v3_10004694 to i32*
  store i32 %v2_10004690, i32* %v4_10004694, align 4
  %v0_10004698 = call i32 @function_10006fa8()
  %v1_10004698 = trunc i32 %v0_10004698 to i16
  %v3_1000469c = load i32, i32* @r28, align 4
  %v4_1000469c = add i32 %v3_1000469c, 2
  %v5_1000469c = inttoptr i32 %v4_1000469c to i16*
  store i16 %v1_10004698, i16* %v5_1000469c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453552, i32* @lr, align 4
  %v3_100046ac = call i32 @function_1000b568(i32 2, i32 2, i32 17)
  store i32 %v3_100046ac, i32* %r3.global-to-local, align 4
  %v3_100046b4 = icmp eq i32 %v3_100046ac, -1
  %v1_100046bc = load i32, i32* %r25.global-to-local, align 4
  %v2_100046bc = load i32, i32* %r26.global-to-local, align 4
  %v3_100046bc = add i32 %v2_100046bc, %v1_100046bc
  %v4_100046bc = inttoptr i32 %v3_100046bc to i32*
  store i32 %v3_100046ac, i32* %v4_100046bc, align 4
  br i1 %v3_100046b4, label %dec_label_pc_100046e4, label %dec_label_pc_100046c4

dec_label_pc_100046c4:                            ; preds = %dec_label_pc_10004680
  %v0_100046c4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100046c4, i32* %stack_var_-72, align 4
  store i32 268453588, i32* @lr, align 4
  %v0_100046d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100046d0 = call i32 @function_1000b334(i32 %v0_100046d0, i32 %v2_100046b0, i32 16)
  store i32 %v3_100046d0, i32* %r3.global-to-local, align 4
  %v0_100046d4 = load i32, i32* @r28, align 4
  %v1_100046d4 = add i32 %v0_100046d4, 20
  %v2_100046d4 = inttoptr i32 %v1_100046d4 to i8*
  %v3_100046d4 = load i8, i8* %v2_100046d4, align 1
  %v2_100046d8 = icmp ugt i8 %v3_100046d4, 31
  br i1 %v2_100046d8, label %dec_label_pc_10004660, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046c4
  %v1_10004648 = add i32 %v0_100046d4, 16
  %v2_10004648 = inttoptr i32 %v1_10004648 to i32*
  %v3_10004648 = load i32, i32* %v2_10004648, align 4
  store i32 %v3_10004648, i32* %r29.global-to-local, align 4
  %v0_1000464c = call i32 @function_10006fa8()
  store i32 %v0_1000464c, i32* %r3.global-to-local, align 4
  %v0_10004650 = load i32, i32* @r28, align 4
  %v1_10004650 = add i32 %v0_10004650, 20
  %v2_10004650 = inttoptr i32 %v1_10004650 to i8*
  %v3_10004650 = load i8, i8* %v2_10004650, align 1
  %tmp43 = urem i8 %v3_10004650, 64
  %v2_10004654 = zext i8 %tmp43 to i32
  %v3_10004654 = lshr i32 %v0_1000464c, %v2_10004654
  %v0_10004658 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004658 = add i32 %v3_10004654, %v0_10004658
  store i32 %v2_10004658, i32* %r3.global-to-local, align 4
  %v2_1000465c = add i32 %v0_10004650, 4
  %v3_1000465c = inttoptr i32 %v2_1000465c to i32*
  store i32 %v2_10004658, i32* %v3_1000465c, align 4
  br label %dec_label_pc_10004660

dec_label_pc_100046e4:                            ; preds = %dec_label_pc_10004574, %dec_label_pc_10004680
  %v1_100046f8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10004450)
  store i32 %v0_1000447c, i32* %r28.global-to-local, align 4
  store i32 %v0_10004484, i32* %r29.global-to-local, align 4
  %v0_1000472c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000472c

dec_label_pc_10004730:                            ; preds = %dec_label_pc_10004448
  %v0_10004730 = call i32 @function_10006fa8()
  store i32 %v0_10004730, i32* %r3.global-to-local, align 4
  %v1_10004734 = urem i32 %v0_10004730, 65536
  store i32 %v1_10004734, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10004548

dec_label_pc_1000473c:                            ; preds = %dec_label_pc_10004610
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004744

dec_label_pc_10004744:                            ; preds = %dec_label_pc_10004744.dec_label_pc_10004744_crit_edge, %dec_label_pc_1000473c
  %v0_1000474c = phi i32 [ %v0_10004770, %dec_label_pc_10004744.dec_label_pc_10004744_crit_edge ], [ 0, %dec_label_pc_1000473c ]
  %v0_10004744 = phi i32 [ %v0_10004744.pre, %dec_label_pc_10004744.dec_label_pc_10004744_crit_edge ], [ 0, %dec_label_pc_1000473c ]
  %v1_10004744 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004744 = add i32 %v1_10004744, %v0_10004744
  %v3_10004744 = inttoptr i32 %v2_10004744 to i32*
  %v4_10004744 = load i32, i32* %v3_10004744, align 4
  store i32 %v4_10004744, i32* @r29, align 4
  %v0_10004748 = load i32, i32* @r31, align 4
  store i32 %v0_10004748, i32* @r4, align 4
  %v1_1000474c = add i32 %v0_1000474c, 1
  store i32 %v1_1000474c, i32* %r25.global-to-local, align 4
  store i32 %v4_10004744, i32* @r3, align 4
  %v0_10004754 = call i32 @function_100071d4()
  store i32 %v0_10004754, i32* %r3.global-to-local, align 4
  %v0_10004758 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004758 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004758 = add i32 %v1_10004758, %v0_10004758
  %v3_10004758 = inttoptr i32 %v2_10004758 to i32*
  %v4_10004758 = load i32, i32* %v3_10004758, align 4
  store i32 %v4_10004758, i32* %r3.global-to-local, align 4
  %v0_1000475c = load i32, i32* @r29, align 4
  %v0_10004760 = load i32, i32* @r31, align 4
  %v1_10004768 = add i32 %v0_10004758, 4
  store i32 %v1_10004768, i32* %r28.global-to-local, align 4
  store i32 268453744, i32* @lr, align 4
  %v4_1000476c = call i32 @function_1000b4b4(i32 %v4_10004758, i32 %v0_1000475c, i32 %v0_10004760, i32 16384)
  store i32 %v4_1000476c, i32* %r3.global-to-local, align 4
  %v0_10004770 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004770 = load i32, i32* @r30, align 4
  %v4_10004770 = icmp eq i32 %v0_10004770, %v1_10004770
  br i1 %v4_10004770, label %dec_label_pc_10004778, label %dec_label_pc_10004744.dec_label_pc_10004744_crit_edge

dec_label_pc_10004744.dec_label_pc_10004744_crit_edge: ; preds = %dec_label_pc_10004744
  %v0_10004744.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004744

dec_label_pc_10004778:                            ; preds = %dec_label_pc_10004744
  %v0_10004778 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004778 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004778 = or i1 %v0_10004778, %v1_10004778
  br i1 %v2_10004778, label %dec_label_pc_1000460c.outer, label %dec_label_pc_10004610

; uselistorder directives
  uselistorder i1 %v1_10004778, { 1, 0 }
  uselistorder i1 %v0_10004778, { 1, 0 }
  uselistorder i32 %v0_10004770, { 1, 0 }
  uselistorder i32 %v0_10004758, { 1, 0 }
  uselistorder i32 %v0_10004660, { 1, 0 }
  uselistorder i1 %v1_10004640, { 1, 0 }
  uselistorder i1 %v0_10004640, { 1, 0 }
  uselistorder i32 %v0_10004638, { 1, 0 }
  uselistorder i32 %v0_10004630, { 2, 0, 1 }
  uselistorder i32 %v0_100045fc, { 1, 0 }
  uselistorder i32 %v0_100045e8, { 1, 0 }
  uselistorder i32 %v2_100046b0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 22, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 31, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_100046e4, { 1, 0 }
  uselistorder label %dec_label_pc_10004680, { 1, 0 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_1000460c, { 1, 0 }
  uselistorder label %dec_label_pc_1000460c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004608, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100045e8, { 1, 0 }
  uselistorder label %dec_label_pc_10004574, { 1, 0 }
  uselistorder label %dec_label_pc_10004548, { 1, 0 }
}

define i32 @function_10004780(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004780:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10004784 = load i32, i32* @lr, align 4
  store i32 %v0_10004784, i32* %r0.global-to-local, align 4
  %v0_10004788 = call i32 @__asm_mfcr()
  store i32 %v0_10004788, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10004798 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10004788, i32* %r19.global-to-local, align 4
  %v0_100047cc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100047d4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100047dc = load i32, i32* @r30, align 4
  %v0_100047e0 = load i32, i32* @r31, align 4
  store i32 268453876, i32* @lr, align 4
  %v2_100047f0 = call i32 @function_1000b8f4(i32 4, i32 4)
  store i32 %v2_100047f0, i32* %r20.global-to-local, align 4
  %v0_100047f8 = load i32, i32* @r28, align 4
  %v0_10004804 = load i32, i32* @r29, align 4
  store i32 %v0_10004804, i32* %r3.global-to-local, align 4
  store i32 268453900, i32* @lr, align 4
  %v4_10004808 = inttoptr i32 %v0_100047f8 to i32*
  %v5_10004808 = call i32 @function_1000235c(i32 %v0_10004804, i32* %v4_10004808, i32 2, i32 0)
  %v0_10004818 = load i32, i32* @r28, align 4
  %v1_1000481c = urem i32 %v5_10004808, 256
  store i32 %v1_1000481c, i32* %r15.global-to-local, align 4
  %v0_10004820 = load i32, i32* @r29, align 4
  store i32 %v0_10004820, i32* %r3.global-to-local, align 4
  store i32 268453928, i32* @lr, align 4
  %v4_10004824 = inttoptr i32 %v0_10004818 to i32*
  %v5_10004824 = call i32 @function_1000235c(i32 %v0_10004820, i32* %v4_10004824, i32 3, i32 65535)
  %v0_10004828 = load i32, i32* @r28, align 4
  store i32 %v5_10004824, i32* %r23.global-to-local, align 4
  %v0_10004838 = load i32, i32* @r29, align 4
  store i32 %v0_10004838, i32* %r3.global-to-local, align 4
  store i32 268453952, i32* @lr, align 4
  %v4_1000483c = inttoptr i32 %v0_10004828 to i32*
  %v5_1000483c = call i32 @function_1000235c(i32 %v0_10004838, i32* %v4_1000483c, i32 4, i32 64)
  %v0_10004840 = load i32, i32* @r28, align 4
  %v1_1000484c = urem i32 %v5_1000483c, 256
  store i32 %v1_1000484c, i32* %r16.global-to-local, align 4
  %v0_10004850 = load i32, i32* @r29, align 4
  store i32 %v0_10004850, i32* %r3.global-to-local, align 4
  store i32 268453976, i32* @lr, align 4
  %v4_10004854 = inttoptr i32 %v0_10004840 to i32*
  %v5_10004854 = call i32 @function_1000235c(i32 %v0_10004850, i32* %v4_10004854, i32 5, i32 0)
  %v0_10004864 = load i32, i32* @r28, align 4
  %v1_10004868 = urem i32 %v5_10004854, 256
  store i32 %v1_10004868, i32* @r31, align 4
  %v0_1000486c = load i32, i32* @r29, align 4
  store i32 %v0_1000486c, i32* %r3.global-to-local, align 4
  store i32 268454004, i32* @lr, align 4
  %v4_10004870 = inttoptr i32 %v0_10004864 to i32*
  %v5_10004870 = call i32 @function_1000235c(i32 %v0_1000486c, i32* %v4_10004870, i32 6, i32 65535)
  %v0_10004878 = load i32, i32* @r28, align 4
  store i32 %v5_10004870, i32* %r24.global-to-local, align 4
  %v0_10004888 = load i32, i32* @r29, align 4
  store i32 %v0_10004888, i32* %r3.global-to-local, align 4
  store i32 268454032, i32* @lr, align 4
  %v4_1000488c = inttoptr i32 %v0_10004878 to i32*
  %v5_1000488c = call i32 @function_1000235c(i32 %v0_10004888, i32* %v4_1000488c, i32 7, i32 65535)
  %v0_10004890 = load i32, i32* @r28, align 4
  store i32 %v5_1000488c, i32* %r25.global-to-local, align 4
  %v0_100048a0 = load i32, i32* @r29, align 4
  store i32 %v0_100048a0, i32* %r3.global-to-local, align 4
  store i32 268454056, i32* @lr, align 4
  %v4_100048a4 = inttoptr i32 %v0_10004890 to i32*
  %v5_100048a4 = call i32 @function_1000235c(i32 %v0_100048a0, i32* %v4_100048a4, i32 0, i32 512)
  %v0_100048a8 = load i32, i32* @r28, align 4
  store i32 %v5_100048a4, i32* %r26.global-to-local, align 4
  %v0_100048b8 = load i32, i32* @r29, align 4
  store i32 %v0_100048b8, i32* %r3.global-to-local, align 4
  store i32 268454080, i32* @lr, align 4
  %v4_100048bc = inttoptr i32 %v0_100048a8 to i32*
  %v5_100048bc = call i32 @function_1000235c(i32 %v0_100048b8, i32* %v4_100048bc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100048c4 = load i32, i32* @global_var_1001e180.71, align 4
  %v0_100048c8 = load i32, i32* @r28, align 4
  %v1_100048d0 = urem i32 %v5_100048bc, 256
  store i32 %v1_100048d0, i32* %r17.global-to-local, align 4
  %v0_100048d4 = load i32, i32* @r29, align 4
  store i32 %v0_100048d4, i32* %r3.global-to-local, align 4
  store i32 268454108, i32* @lr, align 4
  %v4_100048d8 = inttoptr i32 %v0_100048c8 to i32*
  %v5_100048d8 = call i32 @function_1000235c(i32 %v0_100048d4, i32* %v4_100048d8, i32 25, i32 %v3_100048c4)
  store i32 %v5_100048d8, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268454128, i32* @lr, align 4
  %v3_100048ec = call i32 @function_1000b568(i32 2, i32 3, i32 17)
  store i32 %v3_100048ec, i32* %r3.global-to-local, align 4
  %v3_100048f0 = icmp eq i32 %v3_100048ec, -1
  store i32 %v3_100048ec, i32* %r21.global-to-local, align 4
  br i1 %v3_100048f0, label %dec_label_pc_10004b4c, label %dec_label_pc_100048fc

dec_label_pc_100048fc:                            ; preds = %dec_label_pc_10004780
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004908 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268454168, i32* @lr, align 4
  %v5_10004914 = call i32 @function_1000b52c(i32 0, i32 3, i32 %v2_10004908, i32 4, i32 4)
  store i32 %v5_10004914, i32* %r3.global-to-local, align 4
  %v3_10004918 = icmp eq i32 %v5_10004914, -1
  br i1 %v3_10004918, label %dec_label_pc_10004b44, label %dec_label_pc_10004920

dec_label_pc_10004920:                            ; preds = %dec_label_pc_100048fc
  %v0_10004920 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004920 = urem i32 %v0_10004920, 65536
  store i32 %v1_10004920, i32* %r18.global-to-local, align 4
  %v0_10004924 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004924 = urem i32 %v0_10004924, 65536
  store i32 %v1_10004924, i32* %r22.global-to-local, align 4
  %v0_1000492c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000492c = urem i32 %v0_1000492c, 65536
  store i32 %v1_1000492c, i32* %r23.global-to-local, align 4
  %v0_10004930 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004930 = urem i32 %v0_10004930, 65536
  store i32 %v1_10004930, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10004920, 1461
  br i1 %tmp30, label %dec_label_pc_1000493c, label %dec_label_pc_10004938

dec_label_pc_10004938:                            ; preds = %dec_label_pc_10004920
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000493c

dec_label_pc_1000493c:                            ; preds = %dec_label_pc_10004920, %dec_label_pc_10004938
  %v0_10004c4c = phi i32 [ %v1_10004920, %dec_label_pc_10004920 ], [ 1460, %dec_label_pc_10004938 ]
  %v0_1000493c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000493c = icmp slt i32 %v0_1000493c, 0
  %v3_1000493c = icmp eq i32 %v0_1000493c, 0
  store i1 %v1_1000493c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000493c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_1000493c, 1
  br i1 %tmp31, label %dec_label_pc_10004c44, label %dec_label_pc_1000494c

dec_label_pc_1000494c:                            ; preds = %dec_label_pc_1000493c
  %v0_1000494c = load i32, i32* @r31, align 4
  %v3_1000494c = icmp eq i32 %v0_1000494c, 0
  %v1_10004950 = add nuw nsw i32 %v0_10004c4c, 28
  store i32 %v1_10004950, i32* %r25.global-to-local, align 4
  %v1_10004954 = add nuw nsw i32 %v0_10004c4c, 8
  store i32 %v1_10004954, i32* %r26.global-to-local, align 4
  %v1_10004958 = urem i32 %v1_10004950, 65536
  store i32 %v1_10004958, i32* @r28, align 4
  %v1_1000495c = urem i32 %v1_10004954, 65536
  store i32 %v1_1000495c, i32* @r29, align 4
  br i1 %v3_1000494c, label %dec_label_pc_10004964, label %dec_label_pc_10004bac

dec_label_pc_10004964:                            ; preds = %dec_label_pc_1000494c
  br label %dec_label_pc_10004968

dec_label_pc_10004968:                            ; preds = %dec_label_pc_10004968, %dec_label_pc_10004964
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268454260, i32* @lr, align 4
  %v2_10004970 = call i32 @function_1000b8f4(i32 1510, i32 1)
  store i32 %v2_10004970, i32* %r3.global-to-local, align 4
  %v3_10004974 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004974, i32* %r9.global-to-local, align 4
  %v0_10004978 = load i32, i32* @r31, align 4
  %v1_10004978 = mul i32 %v0_10004978, 4
  store i32 %v1_10004978, i32* %r0.global-to-local, align 4
  %v1_1000497c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000497c = add i32 %v1_1000497c, %v1_10004978
  %v4_1000497c = inttoptr i32 %v3_1000497c to i32*
  store i32 %v2_10004970, i32* %v4_1000497c, align 4
  %v0_10004980 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004980 = mul i32 %v0_10004980, 4
  store i32 %v1_10004980, i32* %r9.global-to-local, align 4
  %v1_10004984 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004984 = add i32 %v1_10004984, %v1_10004980
  %v3_10004984 = inttoptr i32 %v2_10004984 to i32*
  %v4_10004984 = load i32, i32* %v3_10004984, align 4
  store i32 %v4_10004984, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000498c = inttoptr i32 %v4_10004984 to i32*
  %v2_1000498c = load i32, i32* %v1_1000498c, align 4
  store i32 %v2_1000498c, i32* %r0.global-to-local, align 4
  %v1_10004990 = add i32 %v4_10004984, 20
  store i32 %v1_10004990, i32* %r10.global-to-local, align 4
  %v0_10004994 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004994 = trunc i32 %v0_10004994 to i8
  %v3_10004994 = add i32 %v4_10004984, 8
  %v4_10004994 = inttoptr i32 %v3_10004994 to i8*
  store i8 %v1_10004994, i8* %v4_10004994, align 1
  %v1_10004998 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004998, i32* %r0.global-to-local, align 4
  %v0_1000499c = load i32, i32* @r30, align 4
  %v1_1000499c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000499c = add i32 %v1_1000499c, 12
  %v3_1000499c = inttoptr i32 %v2_1000499c to i32*
  store i32 %v0_1000499c, i32* %v3_1000499c, align 4
  %v1_100049a0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100049a4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100049a4 = trunc i32 %v0_100049a4 to i16
  %v2_100049a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049a4 = add i32 %v2_100049a4, 4
  %v4_100049a4 = inttoptr i32 %v3_100049a4 to i16*
  store i16 %v1_100049a4, i16* %v4_100049a4, align 2
  %v1_100049a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100049a8 = inttoptr i32 %v1_100049a8 to i32*
  store i32 %v1_100049a0, i32* %v2_100049a8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100049b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049b0 = add i32 %v2_100049b0, 9
  %v4_100049b0 = inttoptr i32 %v3_100049b0 to i8*
  store i8 17, i8* %v4_100049b0, align 1
  %v0_100049b4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100049b4 = trunc i32 %v0_100049b4 to i8
  %v2_100049b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049b4 = add i32 %v2_100049b4, 1
  %v4_100049b4 = inttoptr i32 %v3_100049b4 to i8*
  store i8 %v1_100049b4, i8* %v4_100049b4, align 1
  %v0_100049b8 = load i32, i32* @r28, align 4
  %v1_100049b8 = trunc i32 %v0_100049b8 to i16
  %v2_100049b8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049b8 = add i32 %v2_100049b8, 2
  %v4_100049b8 = inttoptr i32 %v3_100049b8 to i16*
  store i16 %v1_100049b8, i16* %v4_100049b8, align 2
  %v3_100049bc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100049bc, i32* %r9.global-to-local, align 4
  %v0_100049c0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100049c0 = trunc i32 %v0_100049c0 to i16
  %v2_100049c0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049c0 = add i32 %v2_100049c0, 20
  %v4_100049c0 = inttoptr i32 %v3_100049c0 to i16*
  store i16 %v1_100049c0, i16* %v4_100049c0, align 2
  %v0_100049c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100049c4 = add i32 %v0_100049c4, 1
  store i32 %v1_100049c4, i32* %r31.global-to-local, align 4
  %v1_100049c8 = mul i32 %v0_100049c4, 24
  store i32 %v1_100049c8, i32* %r9.global-to-local, align 4
  %v1_100049cc = load i32, i32* %r19.global-to-local, align 4
  %v2_100049cc = icmp slt i32 %v1_100049c4, %v1_100049cc
  %v0_100049d0 = load i32, i32* @r29, align 4
  %v1_100049d0 = trunc i32 %v0_100049d0 to i16
  %v2_100049d0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100049d0 = add i32 %v2_100049d0, 4
  %v4_100049d0 = inttoptr i32 %v3_100049d0 to i16*
  store i16 %v1_100049d0, i16* %v4_100049d0, align 2
  %v0_100049d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100049d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100049d4 = add i32 %v1_100049d4, %v0_100049d4
  store i32 %v2_100049d4, i32* %r9.global-to-local, align 4
  %v0_100049d8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100049d8 = trunc i32 %v0_100049d8 to i16
  %v2_100049d8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100049d8 = add i32 %v2_100049d8, 2
  %v4_100049d8 = inttoptr i32 %v3_100049d8 to i16*
  store i16 %v1_100049d8, i16* %v4_100049d8, align 2
  %v0_100049dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100049dc = add i32 %v0_100049dc, 16
  %v2_100049dc = inttoptr i32 %v1_100049dc to i32*
  %v3_100049dc = load i32, i32* %v2_100049dc, align 4
  store i32 %v3_100049dc, i32* %r0.global-to-local, align 4
  %v1_100049e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100049e0 = add i32 %v1_100049e0, 16
  %v3_100049e0 = inttoptr i32 %v2_100049e0 to i32*
  store i32 %v3_100049dc, i32* %v3_100049e0, align 4
  %v0_100049e4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100049e4, i32* %stack_var_-104, align 4
  br i1 %v2_100049cc, label %dec_label_pc_10004968, label %dec_label_pc_100049ec

dec_label_pc_100049ec:                            ; preds = %dec_label_pc_10004bb4, %dec_label_pc_10004968
  %v0_100049ec = load i32, i32* @r30, align 4
  %v3_100049ec = icmp eq i32 %v0_100049ec, -1
  store i1 %v3_100049ec, i1* %cr2_eq.global-to-local, align 1
  %v0_100049f0 = load i32, i32* %r17.global-to-local, align 4
  %v3_100049f0 = icmp eq i32 %v0_100049f0, 0
  store i1 %v3_100049f0, i1* %cr3_eq.global-to-local, align 1
  %v0_100049f4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100049f4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100049f4.preheader

dec_label_pc_100049f4.preheader:                  ; preds = %dec_label_pc_10004ac0, %dec_label_pc_10004c44, %dec_label_pc_100049ec
  %v1_100049f4 = phi i1 [ %v1_1000493c, %dec_label_pc_10004c44 ], [ %v1_100049f4.pre, %dec_label_pc_100049ec ], [ %v1_10004ac0, %dec_label_pc_10004ac0 ]
  %v0_100049f4 = phi i1 [ %v3_1000493c, %dec_label_pc_10004c44 ], [ %v0_100049f4.pre, %dec_label_pc_100049ec ], [ %v0_10004ac0, %dec_label_pc_10004ac0 ]
  %v2_100049f4 = or i1 %v1_100049f4, %v0_100049f4
  br label %dec_label_pc_100049f4

dec_label_pc_100049f4:                            ; preds = %dec_label_pc_100049f4.preheader, %dec_label_pc_100049f4
  br i1 %v2_100049f4, label %dec_label_pc_100049f4, label %dec_label_pc_100049f8

dec_label_pc_100049f8:                            ; preds = %dec_label_pc_100049f4, %dec_label_pc_10004ac0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10004a08

dec_label_pc_10004a08:                            ; preds = %dec_label_pc_10004a50, %dec_label_pc_100049f8
  %v0_10004a08 = phi i32 [ %v1_10004ab0, %dec_label_pc_10004a50 ], [ 0, %dec_label_pc_100049f8 ]
  %v1_10004a08 = mul i32 %v0_10004a08, 24
  store i32 %v1_10004a08, i32* %r0.global-to-local, align 4
  %v1_10004a0c = mul i32 %v0_10004a08, 4
  store i32 %v1_10004a0c, i32* %r11.global-to-local, align 4
  %v1_10004a10 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004a10 = add i32 %v1_10004a10, %v1_10004a0c
  %v3_10004a10 = inttoptr i32 %v2_10004a10 to i32*
  %v4_10004a10 = load i32, i32* %v3_10004a10, align 4
  store i32 %v4_10004a10, i32* %r28.global-to-local, align 4
  %v1_10004a14 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004a14 = add i32 %v1_10004a14, %v1_10004a08
  store i32 %v2_10004a14, i32* %r10.global-to-local, align 4
  %v1_10004a18 = add i32 %v2_10004a14, 20
  %v2_10004a18 = inttoptr i32 %v1_10004a18 to i8*
  %v3_10004a18 = load i8, i8* %v2_10004a18, align 1
  %v4_10004a18 = zext i8 %v3_10004a18 to i32
  store i32 %v4_10004a18, i32* %r9.global-to-local, align 4
  %v1_10004a1c = add i32 %v4_10004a10, 20
  store i32 %v1_10004a1c, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10004a18, 32
  br i1 %tmp32, label %dec_label_pc_10004ac8, label %dec_label_pc_10004a28

dec_label_pc_10004a28:                            ; preds = %dec_label_pc_10004a08
  %v0_10004a28 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004a28, label %dec_label_pc_10004af0, label %dec_label_pc_10004a2c

dec_label_pc_10004a2c:                            ; preds = %dec_label_pc_10004ac8, %dec_label_pc_10004a28
  store i32 65535, i32* @r29, align 4
  %v0_10004a34 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004a34 = icmp eq i32 %v0_10004a34, 65535
  br i1 %v4_10004a34, label %dec_label_pc_10004b08, label %dec_label_pc_10004a3c

dec_label_pc_10004a3c:                            ; preds = %dec_label_pc_10004af0, %dec_label_pc_10004a2c
  %v1_10004a3c = phi i32 [ %v1_10004b00, %dec_label_pc_10004af0 ], [ 65535, %dec_label_pc_10004a2c ]
  %v0_10004a3c = load i32, i32* %r23.global-to-local, align 4
  %v4_10004a3c = icmp eq i32 %v0_10004a3c, %v1_10004a3c
  br i1 %v4_10004a3c, label %dec_label_pc_10004b18, label %dec_label_pc_10004a44

dec_label_pc_10004a44:                            ; preds = %dec_label_pc_10004b08.dec_label_pc_10004a44_crit_edge, %dec_label_pc_10004a3c
  %v1_10004a44 = phi i32 [ %v1_10004a44.pre, %dec_label_pc_10004b08.dec_label_pc_10004a44_crit_edge ], [ %v1_10004a3c, %dec_label_pc_10004a3c ]
  %v0_10004a44 = load i32, i32* %r24.global-to-local, align 4
  %v4_10004a44 = icmp eq i32 %v0_10004a44, %v1_10004a44
  br i1 %v4_10004a44, label %dec_label_pc_10004b28, label %dec_label_pc_10004a4c

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_10004b18, %dec_label_pc_10004a44
  %v0_10004a4c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004a4c, label %dec_label_pc_10004a50, label %dec_label_pc_10004b34

dec_label_pc_10004a50:                            ; preds = %dec_label_pc_10004a4c, %dec_label_pc_10004b28, %dec_label_pc_10004b34
  %v0_10004a50 = load i32, i32* @r30, align 4
  %v1_10004a50 = trunc i32 %v0_10004a50 to i16
  %v2_10004a50 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004a50 = add i32 %v2_10004a50, 10
  %v4_10004a50 = inttoptr i32 %v3_10004a50 to i16*
  store i16 %v1_10004a50, i16* %v4_10004a50, align 2
  %v0_10004a58 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004a58, i32* @r3, align 4
  %v2_10004a5c = call i32 @function_100056ac(i32 %v0_10004a58, i32 20)
  %v3_10004a5c = trunc i32 %v2_10004a5c to i16
  %v0_10004a60 = load i32, i32* @r31, align 4
  store i32 %v0_10004a60, i32* @r4, align 4
  %v4_10004a64 = add i32 %v0_10004a58, 10
  %v5_10004a64 = inttoptr i32 %v4_10004a64 to i16*
  store i16 %v3_10004a5c, i16* %v5_10004a64, align 2
  %v0_10004a68 = load i32, i32* %r26.global-to-local, align 4
  %v0_10004a6c = load i32, i32* @r30, align 4
  %v1_10004a6c = trunc i32 %v0_10004a6c to i16
  %v2_10004a6c = load i32, i32* @r31, align 4
  %v3_10004a6c = add i32 %v2_10004a6c, 6
  %v4_10004a6c = inttoptr i32 %v3_10004a6c to i16*
  store i16 %v1_10004a6c, i16* %v4_10004a6c, align 2
  %v0_10004a70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004a70, i32* %r3.global-to-local, align 4
  %v0_10004a74 = load i32, i32* @r31, align 4
  %v1_10004a74 = add i32 %v0_10004a74, 4
  %v2_10004a74 = inttoptr i32 %v1_10004a74 to i16*
  %v3_10004a74 = load i16, i16* %v2_10004a74, align 2
  %v4_10004a74 = zext i16 %v3_10004a74 to i32
  %v4_10004a78 = call i32 @function_10005710(i32 %v0_10004a70, i32 %v0_10004a60, i32 %v4_10004a74, i32 %v0_10004a68)
  %v5_10004a78 = trunc i32 %v4_10004a78 to i16
  store i32 %v4_10004a78, i32* %r3.global-to-local, align 4
  %v3_10004a7c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004a7c, i32* %r7.global-to-local, align 4
  %v0_10004a80 = load i32, i32* @r31, align 4
  %v1_10004a80 = add i32 %v0_10004a80, 2
  %v2_10004a80 = inttoptr i32 %v1_10004a80 to i16*
  %v3_10004a80 = load i16, i16* %v2_10004a80, align 2
  %v4_10004a80 = zext i16 %v3_10004a80 to i32
  store i32 %v4_10004a80, i32* %r0.global-to-local, align 4
  %v0_10004a84 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004a88 = mul i32 %v3_10004a7c, 24
  store i32 %v1_10004a88, i32* %r7.global-to-local, align 4
  %v4_10004a8c = add i32 %v0_10004a80, 6
  %v5_10004a8c = inttoptr i32 %v4_10004a8c to i16*
  store i16 %v5_10004a78, i16* %v5_10004a8c, align 2
  %v0_10004a90 = load i32, i32* %r25.global-to-local, align 4
  %v0_10004a94 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10004a94, i32* %r3.global-to-local, align 4
  %v0_10004a98 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004a98 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004a98 = add i32 %v1_10004a98, %v0_10004a98
  store i32 %v2_10004a98, i32* %r7.global-to-local, align 4
  %v0_10004aa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004aa0 = trunc i32 %v0_10004aa0 to i16
  %v3_10004aa0 = add i32 %v2_10004a98, 2
  %v4_10004aa0 = inttoptr i32 %v3_10004aa0 to i16*
  store i16 %v1_10004aa0, i16* %v4_10004aa0, align 2
  store i32 268454572, i32* @lr, align 4
  %v6_10004aa8 = call i32 @function_1000b4ec(i32 %v0_10004a94, i32 %v0_10004a84, i32 %v0_10004a90, i32 16384, i32 %v2_10004a98, i32 16)
  store i32 %v6_10004aa8, i32* %r3.global-to-local, align 4
  %v3_10004aac = load i32, i32* %stack_var_-104, align 4
  %v1_10004ab0 = add i32 %v3_10004aac, 1
  store i32 %v1_10004ab0, i32* %r9.global-to-local, align 4
  %v1_10004ab4 = load i32, i32* %r19.global-to-local, align 4
  %v2_10004ab4 = icmp slt i32 %v1_10004ab0, %v1_10004ab4
  store i32 %v1_10004ab0, i32* %stack_var_-104, align 4
  br i1 %v2_10004ab4, label %dec_label_pc_10004a08, label %dec_label_pc_10004ac0

dec_label_pc_10004ac0:                            ; preds = %dec_label_pc_10004a50
  %v0_10004ac0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004ac0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004ac0 = or i1 %v0_10004ac0, %v1_10004ac0
  br i1 %v2_10004ac0, label %dec_label_pc_100049f4.preheader, label %dec_label_pc_100049f8

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_10004a08
  %v1_10004ac8 = add i32 %v2_10004a14, 16
  %v2_10004ac8 = inttoptr i32 %v1_10004ac8 to i32*
  %v3_10004ac8 = load i32, i32* %v2_10004ac8, align 4
  store i32 %v3_10004ac8, i32* %r29.global-to-local, align 4
  %v0_10004acc = call i32 @function_10006fa8()
  store i32 %v0_10004acc, i32* %r3.global-to-local, align 4
  %v3_10004ad0 = load i32, i32* %stack_var_-104, align 4
  %v1_10004ad4 = mul i32 %v3_10004ad0, 24
  %v1_10004ad8 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004ad8 = add i32 %v1_10004ad8, %v1_10004ad4
  store i32 %v2_10004ad8, i32* %r9.global-to-local, align 4
  %v1_10004adc = add i32 %v2_10004ad8, 20
  %v2_10004adc = inttoptr i32 %v1_10004adc to i8*
  %v3_10004adc = load i8, i8* %v2_10004adc, align 1
  %v4_10004adc = zext i8 %v3_10004adc to i32
  store i32 %v4_10004adc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004adc, 64
  %v2_10004ae0 = zext i8 %tmp to i32
  %v3_10004ae0 = lshr i32 %v0_10004acc, %v2_10004ae0
  store i32 %v3_10004ae0, i32* %r3.global-to-local, align 4
  %v0_10004ae4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004ae4 = add i32 %v3_10004ae0, %v0_10004ae4
  store i32 %v2_10004ae4, i32* %r29.global-to-local, align 4
  %v1_10004ae8 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004ae8 = add i32 %v1_10004ae8, 16
  %v3_10004ae8 = inttoptr i32 %v2_10004ae8 to i32*
  store i32 %v2_10004ae4, i32* %v3_10004ae8, align 4
  %v0_10004aec = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004aec, label %dec_label_pc_10004af0, label %dec_label_pc_10004a2c

dec_label_pc_10004af0:                            ; preds = %dec_label_pc_10004ac8, %dec_label_pc_10004a28
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10004af4 = call i32 @function_10006fa8()
  store i32 %v0_10004af4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10004afc = load i32, i32* %r28.global-to-local, align 4
  %v2_10004afc = add i32 %v1_10004afc, 12
  %v3_10004afc = inttoptr i32 %v2_10004afc to i32*
  store i32 %v0_10004af4, i32* %v3_10004afc, align 4
  %v0_10004b00 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004b00 = load i32, i32* @r29, align 4
  %v4_10004b00 = icmp eq i32 %v0_10004b00, %v1_10004b00
  br i1 %v4_10004b00, label %dec_label_pc_10004b08, label %dec_label_pc_10004a3c

dec_label_pc_10004b08:                            ; preds = %dec_label_pc_10004af0, %dec_label_pc_10004a2c
  %v0_10004b08 = call i32 @function_10006fa8()
  %v1_10004b08 = trunc i32 %v0_10004b08 to i16
  store i32 %v0_10004b08, i32* %r3.global-to-local, align 4
  %v0_10004b0c = load i32, i32* %r23.global-to-local, align 4
  %v1_10004b0c = load i32, i32* @r29, align 4
  %v4_10004b0c = icmp eq i32 %v0_10004b0c, %v1_10004b0c
  %v3_10004b10 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004b10 = add i32 %v3_10004b10, 4
  %v5_10004b10 = inttoptr i32 %v4_10004b10 to i16*
  store i16 %v1_10004b08, i16* %v5_10004b10, align 2
  br i1 %v4_10004b0c, label %dec_label_pc_10004b18, label %dec_label_pc_10004b08.dec_label_pc_10004a44_crit_edge

dec_label_pc_10004b08.dec_label_pc_10004a44_crit_edge: ; preds = %dec_label_pc_10004b08
  %v1_10004a44.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10004a44

dec_label_pc_10004b18:                            ; preds = %dec_label_pc_10004b08, %dec_label_pc_10004a3c
  %v0_10004b18 = call i32 @function_10006fa8()
  %v1_10004b18 = trunc i32 %v0_10004b18 to i16
  store i32 %v0_10004b18, i32* %r3.global-to-local, align 4
  %v0_10004b1c = load i32, i32* %r24.global-to-local, align 4
  %v1_10004b1c = load i32, i32* @r29, align 4
  %v4_10004b1c = icmp eq i32 %v0_10004b1c, %v1_10004b1c
  %v3_10004b20 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004b20 = add i32 %v3_10004b20, 20
  %v5_10004b20 = inttoptr i32 %v4_10004b20 to i16*
  store i16 %v1_10004b18, i16* %v5_10004b20, align 2
  br i1 %v4_10004b1c, label %dec_label_pc_10004b28, label %dec_label_pc_10004a4c

dec_label_pc_10004b28:                            ; preds = %dec_label_pc_10004b18, %dec_label_pc_10004a44
  %v0_10004b28 = call i32 @function_10006fa8()
  %v1_10004b28 = trunc i32 %v0_10004b28 to i16
  store i32 %v0_10004b28, i32* %r3.global-to-local, align 4
  %v3_10004b2c = load i32, i32* @r31, align 4
  %v4_10004b2c = add i32 %v3_10004b2c, 2
  %v5_10004b2c = inttoptr i32 %v4_10004b2c to i16*
  store i16 %v1_10004b28, i16* %v5_10004b2c, align 2
  %v0_10004b30 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004b30, label %dec_label_pc_10004a50, label %dec_label_pc_10004b34

dec_label_pc_10004b34:                            ; preds = %dec_label_pc_10004a4c, %dec_label_pc_10004b28
  %v0_10004b34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004b34 = add i32 %v0_10004b34, 28
  store i32 %v1_10004b34, i32* @r3, align 4
  %v0_10004b38 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10004b38, i32* @r4, align 4
  %v0_10004b3c = call i32 @function_100071d4()
  store i32 %v0_10004b3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004a50

dec_label_pc_10004b44:                            ; preds = %dec_label_pc_100048fc
  %v0_10004b44 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10004b44, i32* %r3.global-to-local, align 4
  store i32 268454732, i32* @lr, align 4
  %v0_10004b48 = call i32 @function_1000a79c()
  store i32 %v0_10004b48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004b4c

dec_label_pc_10004b4c:                            ; preds = %dec_label_pc_10004780, %dec_label_pc_10004b44
  store i32 %v0_10004798, i32* %r0.global-to-local, align 4
  %v1_10004b60 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10004788)
  store i32 %v0_100047cc, i32* %r28.global-to-local, align 4
  store i32 %v0_100047d4, i32* %r29.global-to-local, align 4
  store i32 %v0_100047dc, i32* %r30.global-to-local, align 4
  store i32 %v0_100047e0, i32* %r31.global-to-local, align 4
  %v0_10004ba8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004ba8

dec_label_pc_10004bac:                            ; preds = %dec_label_pc_1000494c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004bb4

dec_label_pc_10004bb4:                            ; preds = %dec_label_pc_10004bb4, %dec_label_pc_10004bac
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268454848, i32* @lr, align 4
  %v2_10004bbc = call i32 @function_1000b8f4(i32 1510, i32 1)
  store i32 %v2_10004bbc, i32* %r3.global-to-local, align 4
  %v3_10004bc0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004bc0, i32* %r9.global-to-local, align 4
  %v0_10004bc4 = load i32, i32* @r31, align 4
  %v1_10004bc4 = mul i32 %v0_10004bc4, 4
  store i32 %v1_10004bc4, i32* %r0.global-to-local, align 4
  %v1_10004bc8 = load i32, i32* %r20.global-to-local, align 4
  %v3_10004bc8 = add i32 %v1_10004bc8, %v1_10004bc4
  %v4_10004bc8 = inttoptr i32 %v3_10004bc8 to i32*
  store i32 %v2_10004bbc, i32* %v4_10004bc8, align 4
  %v0_10004bcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10004bcc = mul i32 %v0_10004bcc, 4
  store i32 %v1_10004bcc, i32* %r9.global-to-local, align 4
  %v1_10004bd0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004bd0 = add i32 %v1_10004bd0, %v1_10004bcc
  %v3_10004bd0 = inttoptr i32 %v2_10004bd0 to i32*
  %v4_10004bd0 = load i32, i32* %v3_10004bd0, align 4
  store i32 %v4_10004bd0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10004bd8 = inttoptr i32 %v4_10004bd0 to i32*
  %v2_10004bd8 = load i32, i32* %v1_10004bd8, align 4
  store i32 %v2_10004bd8, i32* %r0.global-to-local, align 4
  %v1_10004bdc = add i32 %v4_10004bd0, 20
  store i32 %v1_10004bdc, i32* %r10.global-to-local, align 4
  %v0_10004be0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004be0 = trunc i32 %v0_10004be0 to i8
  %v3_10004be0 = add i32 %v4_10004bd0, 8
  %v4_10004be0 = inttoptr i32 %v3_10004be0 to i8*
  store i8 %v1_10004be0, i8* %v4_10004be0, align 1
  %v1_10004be4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004be4, i32* %r0.global-to-local, align 4
  %v0_10004be8 = load i32, i32* @r30, align 4
  %v1_10004be8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004be8 = add i32 %v1_10004be8, 12
  %v3_10004be8 = inttoptr i32 %v2_10004be8 to i32*
  store i32 %v0_10004be8, i32* %v3_10004be8, align 4
  %v1_10004bec = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10004bf0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004bf0 = trunc i32 %v0_10004bf0 to i16
  %v2_10004bf0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004bf0 = add i32 %v2_10004bf0, 4
  %v4_10004bf0 = inttoptr i32 %v3_10004bf0 to i16*
  store i16 %v1_10004bf0, i16* %v4_10004bf0, align 2
  %v1_10004bf4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004bf4 = inttoptr i32 %v1_10004bf4 to i32*
  store i32 %v1_10004bec, i32* %v2_10004bf4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10004bfc = load i32, i32* %r11.global-to-local, align 4
  %v3_10004bfc = add i32 %v2_10004bfc, 9
  %v4_10004bfc = inttoptr i32 %v3_10004bfc to i8*
  store i8 17, i8* %v4_10004bfc, align 1
  %v0_10004c00 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004c00 = trunc i32 %v0_10004c00 to i8
  %v2_10004c00 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c00 = add i32 %v2_10004c00, 1
  %v4_10004c00 = inttoptr i32 %v3_10004c00 to i8*
  store i8 %v1_10004c00, i8* %v4_10004c00, align 1
  %v0_10004c04 = load i32, i32* @r28, align 4
  %v1_10004c04 = trunc i32 %v0_10004c04 to i16
  %v2_10004c04 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c04 = add i32 %v2_10004c04, 2
  %v4_10004c04 = inttoptr i32 %v3_10004c04 to i16*
  store i16 %v1_10004c04, i16* %v4_10004c04, align 2
  %v3_10004c08 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004c08, i32* %r9.global-to-local, align 4
  %v0_10004c0c = load i32, i32* %r23.global-to-local, align 4
  %v1_10004c0c = trunc i32 %v0_10004c0c to i16
  %v2_10004c0c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c0c = add i32 %v2_10004c0c, 20
  %v4_10004c0c = inttoptr i32 %v3_10004c0c to i16*
  store i16 %v1_10004c0c, i16* %v4_10004c0c, align 2
  %v0_10004c10 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004c10 = add i32 %v0_10004c10, 1
  store i32 %v1_10004c10, i32* %r31.global-to-local, align 4
  %v1_10004c14 = mul i32 %v0_10004c10, 24
  %v1_10004c18 = load i32, i32* %r19.global-to-local, align 4
  %v2_10004c18 = icmp slt i32 %v1_10004c10, %v1_10004c18
  %v1_10004c1c = load i32, i32* %r27.global-to-local, align 4
  %v2_10004c1c = add i32 %v1_10004c1c, %v1_10004c14
  store i32 %v2_10004c1c, i32* %r9.global-to-local, align 4
  %v1_10004c20 = add i32 %v2_10004c1c, 16
  %v2_10004c20 = inttoptr i32 %v1_10004c20 to i32*
  %v3_10004c20 = load i32, i32* %v2_10004c20, align 4
  store i32 %v3_10004c20, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10004c28 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c28 = add i32 %v2_10004c28, 6
  %v4_10004c28 = inttoptr i32 %v3_10004c28 to i16*
  store i16 16384, i16* %v4_10004c28, align 2
  %v0_10004c2c = load i32, i32* %r0.global-to-local, align 4
  %v1_10004c2c = load i32, i32* %r11.global-to-local, align 4
  %v2_10004c2c = add i32 %v1_10004c2c, 16
  %v3_10004c2c = inttoptr i32 %v2_10004c2c to i32*
  store i32 %v0_10004c2c, i32* %v3_10004c2c, align 4
  %v0_10004c30 = load i32, i32* @r29, align 4
  %v1_10004c30 = trunc i32 %v0_10004c30 to i16
  %v2_10004c30 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004c30 = add i32 %v2_10004c30, 4
  %v4_10004c30 = inttoptr i32 %v3_10004c30 to i16*
  store i16 %v1_10004c30, i16* %v4_10004c30, align 2
  %v0_10004c34 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004c34 = trunc i32 %v0_10004c34 to i16
  %v2_10004c34 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004c34 = add i32 %v2_10004c34, 2
  %v4_10004c34 = inttoptr i32 %v3_10004c34 to i16*
  store i16 %v1_10004c34, i16* %v4_10004c34, align 2
  %v0_10004c38 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004c38, i32* %stack_var_-104, align 4
  br i1 %v2_10004c18, label %dec_label_pc_10004bb4, label %dec_label_pc_100049ec

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_1000493c
  %v0_10004c44 = load i32, i32* %r30.global-to-local, align 4
  %v3_10004c44 = icmp eq i32 %v0_10004c44, -1
  store i1 %v3_10004c44, i1* %cr2_eq.global-to-local, align 1
  %v0_10004c48 = load i32, i32* %r17.global-to-local, align 4
  %v3_10004c48 = icmp eq i32 %v0_10004c48, 0
  store i1 %v3_10004c48, i1* %cr3_eq.global-to-local, align 1
  %v1_10004c4c = add nuw nsw i32 %v0_10004c4c, 28
  store i32 %v1_10004c4c, i32* %r25.global-to-local, align 4
  %v1_10004c50 = add nuw nsw i32 %v0_10004c4c, 8
  store i32 %v1_10004c50, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100049f4.preheader

; uselistorder directives
  uselistorder i32 %v1_10004bcc, { 1, 0 }
  uselistorder i32 %v1_10004bc4, { 1, 0 }
  uselistorder i32 %v0_10004b28, { 1, 0 }
  uselistorder i32 %v0_10004b18, { 1, 0 }
  uselistorder i32 %v0_10004b08, { 1, 0 }
  uselistorder i32 %v1_10004b00, { 1, 0 }
  uselistorder i1 %v1_10004ac0, { 1, 0 }
  uselistorder i1 %v0_10004ac0, { 1, 0 }
  uselistorder i32 %v1_10004ab0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10004a78, { 1, 0 }
  uselistorder i32 %v1_10004a0c, { 1, 0 }
  uselistorder i32 %v1_10004980, { 1, 0 }
  uselistorder i32 %v1_10004978, { 1, 0 }
  uselistorder i32 %v0_10004c4c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10004920, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 7, 8, 25, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r23.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_100071d4, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10004b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004b34, { 1, 0 }
  uselistorder label %dec_label_pc_10004a50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100049f8, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000493c, { 1, 0 }
}

define i32 @function_10004c5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004c5c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10004c60 = load i32, i32* @lr, align 4
  store i32 %v0_10004c60, i32* %r0.global-to-local, align 4
  %v0_10004c64 = call i32 @__asm_mfcr()
  store i32 %v0_10004c64, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10004c64, i32* %r23.global-to-local, align 4
  %v0_10004c9c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004ca4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10004cac = load i32, i32* @r30, align 4
  store i32 268455116, i32* @lr, align 4
  %v2_10004cc8 = call i32 @function_1000b8f4(i32 4, i32 4)
  store i32 %v2_10004cc8, i32* %r24.global-to-local, align 4
  %v0_10004cd0 = load i32, i32* @r28, align 4
  %v0_10004cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10004cd4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268455140, i32* @lr, align 4
  %v4_10004ce0 = inttoptr i32 %v0_10004cd0 to i32*
  %v5_10004ce0 = call i32 @function_1000235c(i32 %v0_10004cd4, i32* %v4_10004ce0, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10004cf0 = load i32, i32* @r28, align 4
  %v1_10004cf4 = urem i32 %v5_10004ce0, 256
  store i32 %v1_10004cf4, i32* %r19.global-to-local, align 4
  %v0_10004cf8 = load i32, i32* @r29, align 4
  store i32 %v0_10004cf8, i32* %r3.global-to-local, align 4
  store i32 268455168, i32* @lr, align 4
  %v4_10004cfc = inttoptr i32 %v0_10004cf0 to i32*
  %v5_10004cfc = call i32 @function_1000235c(i32 %v0_10004cf8, i32* %v4_10004cfc, i32 3, i32 65535)
  %v0_10004d00 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10004cfc, i32* %r21.global-to-local, align 4
  %v0_10004d10 = load i32, i32* @r29, align 4
  store i32 %v0_10004d10, i32* %r3.global-to-local, align 4
  store i32 268455192, i32* @lr, align 4
  %v4_10004d14 = inttoptr i32 %v0_10004d00 to i32*
  %v5_10004d14 = call i32 @function_1000235c(i32 %v0_10004d10, i32* %v4_10004d14, i32 4, i32 64)
  %v0_10004d18 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10004d24 = urem i32 %v5_10004d14, 256
  store i32 %v1_10004d24, i32* %r26.global-to-local, align 4
  %v0_10004d28 = load i32, i32* @r29, align 4
  store i32 %v0_10004d28, i32* %r3.global-to-local, align 4
  store i32 268455216, i32* @lr, align 4
  %v4_10004d2c = inttoptr i32 %v0_10004d18 to i32*
  %v5_10004d2c = call i32 @function_1000235c(i32 %v0_10004d28, i32* %v4_10004d2c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10004d3c = load i32, i32* @r28, align 4
  %v1_10004d40 = urem i32 %v5_10004d2c, 256
  store i32 %v1_10004d40, i32* @r31, align 4
  %v0_10004d44 = load i32, i32* @r29, align 4
  store i32 %v0_10004d44, i32* %r3.global-to-local, align 4
  store i32 268455244, i32* @lr, align 4
  %v4_10004d48 = inttoptr i32 %v0_10004d3c to i32*
  %v5_10004d48 = call i32 @function_1000235c(i32 %v0_10004d44, i32* %v4_10004d48, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10004d54 = load i32, i32* @r28, align 4
  store i32 %v5_10004d48, i32* %r22.global-to-local, align 4
  %v0_10004d5c = load i32, i32* @r29, align 4
  store i32 %v0_10004d5c, i32* %r3.global-to-local, align 4
  store i32 268455268, i32* @lr, align 4
  %v4_10004d60 = inttoptr i32 %v0_10004d54 to i32*
  %v5_10004d60 = call i32 @function_1000235c(i32 %v0_10004d5c, i32* %v4_10004d60, i32 7, i32 27015)
  store i32 %v5_10004d60, i32* %r29.global-to-local, align 4
  store i32 29, i32* %r3.global-to-local, align 4
  store i32 268455280, i32* @lr, align 4
  %v1_10004d6c = call i32 @function_1000968c(i32 29)
  store i32 29, i32* %r3.global-to-local, align 4
  %v3_10004d78 = call i32 @function_100095d8(i32 29, i32* nonnull %stack_var_-84)
  store i32 %v3_10004d78, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268455312, i32* @lr, align 4
  %v3_10004d8c = call i32 @function_1000b568(i32 2, i32 3, i32 17)
  store i32 %v3_10004d8c, i32* %r3.global-to-local, align 4
  %v3_10004d90 = icmp eq i32 %v3_10004d8c, -1
  store i32 %v3_10004d8c, i32* %r25.global-to-local, align 4
  br i1 %v3_10004d90, label %dec_label_pc_10004fe0, label %dec_label_pc_10004d9c

dec_label_pc_10004d9c:                            ; preds = %dec_label_pc_10004c5c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10004da8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10004da8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268455352, i32* @lr, align 4
  %v5_10004db4 = call i32 @function_1000b52c(i32 0, i32 3, i32 %v2_10004da8, i32 4, i32 4)
  store i32 %v5_10004db4, i32* %r3.global-to-local, align 4
  %v3_10004db8 = icmp eq i32 %v5_10004db4, -1
  br i1 %v3_10004db8, label %dec_label_pc_10004fd8, label %dec_label_pc_10004dc0

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004d9c
  %v0_10004dc0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004dc0 = icmp slt i32 %v0_10004dc0, 0
  %v3_10004dc0 = icmp eq i32 %v0_10004dc0, 0
  store i1 %v1_10004dc0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004dc0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004dc8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004dc8 = urem i32 %v0_10004dc8, 65536
  store i32 %v1_10004dc8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10004dd0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004dd0 = urem i32 %v0_10004dd0, 65536
  store i32 %v1_10004dd0, i32* %r21.global-to-local, align 4
  %v0_10004dd4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004dd4 = urem i32 %v0_10004dd4, 65536
  store i32 %v1_10004dd4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_10004dc0, 1
  br i1 %tmp32, label %dec_label_pc_10004eac.outer, label %dec_label_pc_10004ddc

dec_label_pc_10004ddc:                            ; preds = %dec_label_pc_10004dc0
  %v0_10004ddc = load i32, i32* @r31, align 4
  %v3_10004ddc = icmp eq i32 %v0_10004ddc, 0
  store i1 %v3_10004ddc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10004dfc

dec_label_pc_10004dfc:                            ; preds = %dec_label_pc_10004e58, %dec_label_pc_10004ddc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268455432, i32* @lr, align 4
  %v2_10004e04 = call i32 @function_1000b8f4(i32 128, i32 1)
  store i32 %v2_10004e04, i32* %r3.global-to-local, align 4
  %v3_10004e08 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004e08, i32* %r0.global-to-local, align 4
  %v0_10004e0c = load i32, i32* @r31, align 4
  %v1_10004e0c = mul i32 %v0_10004e0c, 4
  store i32 %v1_10004e0c, i32* %r9.global-to-local, align 4
  %v0_10004e10 = load i32, i32* @r30, align 4
  %v2_10004e14 = load i32, i32* %r24.global-to-local, align 4
  %v3_10004e14 = add i32 %v2_10004e14, %v1_10004e0c
  %v4_10004e14 = inttoptr i32 %v3_10004e14 to i32*
  store i32 %v2_10004e04, i32* %v4_10004e14, align 4
  %v0_10004e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004e18 = mul i32 %v0_10004e18, 4
  store i32 %v1_10004e18, i32* %r0.global-to-local, align 4
  %v0_10004e1c = load i32, i32* %r24.global-to-local, align 4
  %v2_10004e1c = add i32 %v0_10004e1c, %v1_10004e18
  %v3_10004e1c = inttoptr i32 %v2_10004e1c to i32*
  %v4_10004e1c = load i32, i32* %v3_10004e1c, align 4
  store i32 %v4_10004e1c, i32* %r10.global-to-local, align 4
  %v1_10004e20 = inttoptr i32 %v4_10004e1c to i32*
  %v2_10004e20 = load i32, i32* %v1_10004e20, align 4
  store i32 %v2_10004e20, i32* %r0.global-to-local, align 4
  %v1_10004e24 = add i32 %v4_10004e1c, 32
  store i32 %v1_10004e24, i32* %r3.global-to-local, align 4
  %v0_10004e28 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004e28 = trunc i32 %v0_10004e28 to i16
  %v3_10004e28 = add i32 %v4_10004e1c, 4
  %v4_10004e28 = inttoptr i32 %v3_10004e28 to i16*
  store i16 %v1_10004e28, i16* %v4_10004e28, align 2
  %v0_10004e2c = load i32, i32* %r10.global-to-local, align 4
  %v1_10004e2c = add i32 %v0_10004e2c, 20
  store i32 %v1_10004e2c, i32* %r8.global-to-local, align 4
  %v1_10004e30 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004e30, i32* %r0.global-to-local, align 4
  %v1_10004e34 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10004e34, i32* %r0.global-to-local, align 4
  %v1_10004e38 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004e38 = inttoptr i32 %v1_10004e38 to i32*
  store i32 %v1_10004e34, i32* %v2_10004e38, align 4
  %v0_10004e3c = load i32, i32* %r19.global-to-local, align 4
  %v1_10004e3c = trunc i32 %v0_10004e3c to i8
  %v2_10004e3c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e3c = add i32 %v2_10004e3c, 1
  %v4_10004e3c = inttoptr i32 %v3_10004e3c to i8*
  store i8 %v1_10004e3c, i8* %v4_10004e3c, align 1
  %v3_10004e40 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004e40, i32* %r9.global-to-local, align 4
  %v0_10004e44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004e44 = trunc i32 %v0_10004e44 to i8
  %v2_10004e44 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e44 = add i32 %v2_10004e44, 8
  %v4_10004e44 = inttoptr i32 %v3_10004e44 to i8*
  store i8 %v1_10004e44, i8* %v4_10004e44, align 1
  %v0_10004e48 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004e48 = add i32 %v0_10004e48, 32
  store i32 %v1_10004e48, i32* %r9.global-to-local, align 4
  %v1_10004e4c = trunc i32 %v1_10004e48 to i16
  %v2_10004e4c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e4c = add i32 %v2_10004e4c, 2
  %v4_10004e4c = inttoptr i32 %v3_10004e4c to i16*
  store i16 %v1_10004e4c, i16* %v4_10004e4c, align 2
  %v0_10004e50 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004e50, label %dec_label_pc_10004e58, label %dec_label_pc_10004e54

dec_label_pc_10004e54:                            ; preds = %dec_label_pc_10004dfc
  %v0_10004e54 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004e54 = trunc i32 %v0_10004e54 to i16
  %v2_10004e54 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e54 = add i32 %v2_10004e54, 6
  %v4_10004e54 = inttoptr i32 %v3_10004e54 to i16*
  store i16 %v1_10004e54, i16* %v4_10004e54, align 2
  br label %dec_label_pc_10004e58

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004dfc, %dec_label_pc_10004e54
  %v0_10004e58 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004e58 = trunc i32 %v0_10004e58 to i8
  %v2_10004e58 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e58 = add i32 %v2_10004e58, 9
  %v4_10004e58 = inttoptr i32 %v3_10004e58 to i8*
  store i8 %v1_10004e58, i8* %v4_10004e58, align 1
  %v0_10004e5c = load i32, i32* %r21.global-to-local, align 4
  %v1_10004e5c = trunc i32 %v0_10004e5c to i16
  %v2_10004e5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e5c = add i32 %v2_10004e5c, 20
  %v4_10004e5c = inttoptr i32 %v3_10004e5c to i16*
  store i16 %v1_10004e5c, i16* %v4_10004e5c, align 2
  %v3_10004e60 = load i32, i32* %stack_var_-88, align 4
  %v3_10004e64 = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_10004e64, i32* %r0.global-to-local, align 4
  %v1_10004e68 = mul i32 %v3_10004e60, 24
  store i32 %v1_10004e68, i32* %r9.global-to-local, align 4
  %v0_10004e6c = load i32, i32* %r22.global-to-local, align 4
  %v1_10004e6c = trunc i32 %v0_10004e6c to i16
  %v2_10004e6c = load i32, i32* %r8.global-to-local, align 4
  %v3_10004e6c = add i32 %v2_10004e6c, 2
  %v4_10004e6c = inttoptr i32 %v3_10004e6c to i16*
  store i16 %v1_10004e6c, i16* %v4_10004e6c, align 2
  %v0_10004e70 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004e70 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004e70 = add i32 %v1_10004e70, 12
  %v3_10004e70 = inttoptr i32 %v2_10004e70 to i32*
  store i32 %v0_10004e70, i32* %v3_10004e70, align 4
  %v0_10004e74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004e74 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004e74 = add i32 %v1_10004e74, %v0_10004e74
  store i32 %v2_10004e74, i32* %r9.global-to-local, align 4
  %v1_10004e78 = add i32 %v2_10004e74, 16
  %v2_10004e78 = inttoptr i32 %v1_10004e78 to i32*
  %v3_10004e78 = load i32, i32* %v2_10004e78, align 4
  store i32 %v3_10004e78, i32* %r0.global-to-local, align 4
  %v3_10004e7c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004e7c, i32* %r11.global-to-local, align 4
  %v0_10004e80 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004e80 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004e80 = add i32 %v1_10004e80, 28
  %v3_10004e80 = inttoptr i32 %v2_10004e80 to i32*
  store i32 %v0_10004e80, i32* %v3_10004e80, align 4
  %v0_10004e84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004e84 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004e84 = add i32 %v1_10004e84, 16
  %v3_10004e84 = inttoptr i32 %v2_10004e84 to i32*
  store i32 %v0_10004e84, i32* %v3_10004e84, align 4
  %v0_10004e88 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004e88 = add i32 %v0_10004e88, 12
  store i32 %v1_10004e88, i32* %r11.global-to-local, align 4
  %v1_10004e8c = trunc i32 %v1_10004e88 to i16
  %v2_10004e8c = load i32, i32* %r8.global-to-local, align 4
  %v3_10004e8c = add i32 %v2_10004e8c, 4
  %v4_10004e8c = inttoptr i32 %v3_10004e8c to i16*
  store i16 %v1_10004e8c, i16* %v4_10004e8c, align 2
  %v3_10004e90 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004e90, i32* %r5.global-to-local, align 4
  store i32 268455576, i32* @lr, align 4
  %v3_10004e94 = call i32 @function_10009f94(i32 %v3_10004e90, i32 %v0_10004e10, i32 %v3_10004e90)
  store i32 %v3_10004e94, i32* %r3.global-to-local, align 4
  %v3_10004e98 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004e98, i32* %r9.global-to-local, align 4
  %v1_10004e9c = add i32 %v3_10004e98, 1
  %v1_10004ea0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004ea0 = icmp slt i32 %v1_10004e9c, %v1_10004ea0
  store i32 %v1_10004e9c, i32* %stack_var_-88, align 4
  br i1 %v2_10004ea0, label %dec_label_pc_10004dfc, label %dec_label_pc_10004eac.preheader.loopexit

dec_label_pc_10004eac.preheader.loopexit:         ; preds = %dec_label_pc_10004e58
  %v0_10004eac.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004eac.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10004eac.outer

dec_label_pc_10004eac.outer:                      ; preds = %dec_label_pc_10004f78, %dec_label_pc_10004dc0, %dec_label_pc_10004eac.preheader.loopexit
  %v1_10004eac.ph34 = phi i1 [ %v1_10004dc0, %dec_label_pc_10004dc0 ], [ %v1_10004eac.pre.pre, %dec_label_pc_10004eac.preheader.loopexit ], [ %v1_10004f78, %dec_label_pc_10004f78 ]
  %v0_10004eac.ph35 = phi i1 [ %v3_10004dc0, %dec_label_pc_10004dc0 ], [ %v0_10004eac.pre.pre, %dec_label_pc_10004eac.preheader.loopexit ], [ %v0_10004f78, %dec_label_pc_10004f78 ]
  %v2_10004eac = or i1 %v1_10004eac.ph34, %v0_10004eac.ph35
  br label %dec_label_pc_10004eac

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004eac.outer, %dec_label_pc_10004eac
  br i1 %v2_10004eac, label %dec_label_pc_10004eac, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004eac, %dec_label_pc_10004f78
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10004ec0

dec_label_pc_10004ec0:                            ; preds = %dec_label_pc_10004f00, %dec_label_pc_10004eb0
  %v0_10004ed0 = phi i32 [ %v1_10004f68, %dec_label_pc_10004f00 ], [ 0, %dec_label_pc_10004eb0 ]
  %v1_10004ec0 = mul i32 %v0_10004ed0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_10004ecc = load i32, i32* %r27.global-to-local, align 4
  %v2_10004ecc = add i32 %v1_10004ecc, %v1_10004ec0
  store i32 %v2_10004ecc, i32* %r10.global-to-local, align 4
  %v1_10004ed0 = mul i32 %v0_10004ed0, 4
  store i32 %v1_10004ed0, i32* %r0.global-to-local, align 4
  %v1_10004ed4 = add i32 %v2_10004ecc, 20
  %v2_10004ed4 = inttoptr i32 %v1_10004ed4 to i8*
  %v3_10004ed4 = load i8, i8* %v2_10004ed4, align 1
  %v4_10004ed4 = zext i8 %v3_10004ed4 to i32
  store i32 %v4_10004ed4, i32* %r9.global-to-local, align 4
  %v0_10004ed8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004ed8 = add i32 %v0_10004ed8, %v1_10004ed0
  %v3_10004ed8 = inttoptr i32 %v2_10004ed8 to i32*
  %v4_10004ed8 = load i32, i32* %v3_10004ed8, align 4
  store i32 %v4_10004ed8, i32* %r28.global-to-local, align 4
  %v1_10004ee0 = add i32 %v4_10004ed8, 20
  store i32 %v1_10004ee0, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_10004ed4, 32
  br i1 %tmp33, label %dec_label_pc_10004f80, label %dec_label_pc_10004ee8

dec_label_pc_10004ee8:                            ; preds = %dec_label_pc_10004ec0
  %v0_10004ee8 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004ee8 = icmp eq i32 %v0_10004ee8, 65535
  br i1 %v4_10004ee8, label %dec_label_pc_10004fac, label %dec_label_pc_10004ef0

dec_label_pc_10004ef0:                            ; preds = %dec_label_pc_10004f80.dec_label_pc_10004ef0_crit_edge, %dec_label_pc_10004ee8
  %v1_10004ef0 = phi i32 [ %v1_10004ef0.pre, %dec_label_pc_10004f80.dec_label_pc_10004ef0_crit_edge ], [ 65535, %dec_label_pc_10004ee8 ]
  %v0_10004ef0 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004ef0 = icmp eq i32 %v0_10004ef0, %v1_10004ef0
  br i1 %v4_10004ef0, label %dec_label_pc_10004fbc, label %dec_label_pc_10004ef8

dec_label_pc_10004ef8:                            ; preds = %dec_label_pc_10004fac.dec_label_pc_10004ef8_crit_edge, %dec_label_pc_10004ef0
  %v1_10004ef8 = phi i32 [ %v1_10004ef8.pre, %dec_label_pc_10004fac.dec_label_pc_10004ef8_crit_edge ], [ %v1_10004ef0, %dec_label_pc_10004ef0 ]
  %v0_10004ef8 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004ef8 = icmp eq i32 %v0_10004ef8, %v1_10004ef8
  br i1 %v4_10004ef8, label %dec_label_pc_10004fcc, label %dec_label_pc_10004f00

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004fbc, %dec_label_pc_10004ef8, %dec_label_pc_10004fcc
  %v0_10004f00 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004f00 = trunc i32 %v0_10004f00 to i16
  %v2_10004f00 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004f00 = add i32 %v2_10004f00, 10
  %v4_10004f00 = inttoptr i32 %v3_10004f00 to i16*
  store i16 %v1_10004f00, i16* %v4_10004f00, align 2
  %v0_10004f08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004f08, i32* @r3, align 4
  %v2_10004f0c = call i32 @function_100056ac(i32 %v0_10004f08, i32 20)
  %v3_10004f0c = trunc i32 %v2_10004f0c to i16
  store i32 %v2_10004f0c, i32* %r3.global-to-local, align 4
  %v3_10004f10 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004f10, i32* %r6.global-to-local, align 4
  %v3_10004f14 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004f14 = add i32 %v3_10004f14, 10
  %v5_10004f14 = inttoptr i32 %v4_10004f14 to i16*
  store i16 %v3_10004f0c, i16* %v5_10004f14, align 2
  %v0_10004f18 = load i32, i32* @r31, align 4
  store i32 %v0_10004f18, i32* @r4, align 4
  %v0_10004f1c = load i32, i32* %r26.global-to-local, align 4
  %v1_10004f1c = trunc i32 %v0_10004f1c to i16
  %v3_10004f1c = add i32 %v0_10004f18, 6
  %v4_10004f1c = inttoptr i32 %v3_10004f1c to i16*
  store i16 %v1_10004f1c, i16* %v4_10004f1c, align 2
  %v0_10004f20 = load i32, i32* %r6.global-to-local, align 4
  %v1_10004f20 = add i32 %v0_10004f20, 12
  store i32 %v1_10004f20, i32* %r6.global-to-local, align 4
  %v0_10004f24 = load i32, i32* @r31, align 4
  %v1_10004f24 = add i32 %v0_10004f24, 4
  %v2_10004f24 = inttoptr i32 %v1_10004f24 to i16*
  %v3_10004f24 = load i16, i16* %v2_10004f24, align 2
  %v4_10004f24 = zext i16 %v3_10004f24 to i32
  store i32 %v4_10004f24, i32* %r5.global-to-local, align 4
  %v0_10004f28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004f28, i32* %r3.global-to-local, align 4
  %v4_10004f2c = call i32 @function_10005710(i32 %v0_10004f28, i32 %v0_10004f18, i32 %v4_10004f24, i32 %v1_10004f20)
  %v5_10004f2c = trunc i32 %v4_10004f2c to i16
  store i32 %v4_10004f2c, i32* %r3.global-to-local, align 4
  %v3_10004f30 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004f30, i32* %r7.global-to-local, align 4
  %v0_10004f34 = load i32, i32* @r31, align 4
  %v1_10004f34 = add i32 %v0_10004f34, 2
  %v2_10004f34 = inttoptr i32 %v1_10004f34 to i16*
  %v3_10004f34 = load i16, i16* %v2_10004f34, align 2
  %v4_10004f34 = zext i16 %v3_10004f34 to i32
  store i32 %v4_10004f34, i32* %r0.global-to-local, align 4
  %v0_10004f38 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004f3c = mul i32 %v3_10004f30, 24
  store i32 %v1_10004f3c, i32* %r7.global-to-local, align 4
  %v3_10004f40 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004f40, i32* %r5.global-to-local, align 4
  %v4_10004f44 = add i32 %v0_10004f34, 6
  %v5_10004f44 = inttoptr i32 %v4_10004f44 to i16*
  store i16 %v5_10004f2c, i16* %v5_10004f44, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10004f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10004f4c = load i32, i32* %r27.global-to-local, align 4
  %v2_10004f4c = add i32 %v1_10004f4c, %v0_10004f4c
  store i32 %v2_10004f4c, i32* %r7.global-to-local, align 4
  %v0_10004f50 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004f50 = add i32 %v0_10004f50, 32
  store i32 %v1_10004f50, i32* %r5.global-to-local, align 4
  %v0_10004f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004f54 = trunc i32 %v0_10004f54 to i16
  %v3_10004f54 = add i32 %v2_10004f4c, 2
  %v4_10004f54 = inttoptr i32 %v3_10004f54 to i16*
  store i16 %v1_10004f54, i16* %v4_10004f54, align 2
  %v0_10004f58 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004f58, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268455780, i32* @lr, align 4
  %v6_10004f60 = call i32 @function_1000b4ec(i32 %v0_10004f58, i32 %v0_10004f38, i32 %v1_10004f50, i32 16384, i32 %v2_10004f4c, i32 16)
  store i32 %v6_10004f60, i32* %r3.global-to-local, align 4
  %v3_10004f64 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004f64, i32* %r9.global-to-local, align 4
  %v1_10004f68 = add i32 %v3_10004f64, 1
  store i32 %v1_10004f68, i32* %r11.global-to-local, align 4
  %v1_10004f6c = load i32, i32* %r23.global-to-local, align 4
  %v2_10004f6c = icmp slt i32 %v1_10004f68, %v1_10004f6c
  store i32 %v1_10004f68, i32* %stack_var_-88, align 4
  br i1 %v2_10004f6c, label %dec_label_pc_10004ec0, label %dec_label_pc_10004f78

dec_label_pc_10004f78:                            ; preds = %dec_label_pc_10004f00
  %v0_10004f78 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004f78 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004f78 = or i1 %v0_10004f78, %v1_10004f78
  br i1 %v2_10004f78, label %dec_label_pc_10004eac.outer, label %dec_label_pc_10004eb0

dec_label_pc_10004f80:                            ; preds = %dec_label_pc_10004ec0
  %v1_10004f80 = add i32 %v2_10004ecc, 16
  %v2_10004f80 = inttoptr i32 %v1_10004f80 to i32*
  %v3_10004f80 = load i32, i32* %v2_10004f80, align 4
  store i32 %v3_10004f80, i32* %r29.global-to-local, align 4
  %v0_10004f84 = call i32 @function_10006fa8()
  store i32 %v0_10004f84, i32* %r3.global-to-local, align 4
  %v3_10004f88 = load i32, i32* %stack_var_-88, align 4
  %v0_10004f8c = load i32, i32* %r20.global-to-local, align 4
  %v1_10004f8c = load i32, i32* %r30.global-to-local, align 4
  %v4_10004f8c = icmp eq i32 %v0_10004f8c, %v1_10004f8c
  %v1_10004f90 = mul i32 %v3_10004f88, 24
  %v1_10004f94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004f94 = add i32 %v1_10004f94, %v1_10004f90
  store i32 %v2_10004f94, i32* %r9.global-to-local, align 4
  %v1_10004f98 = add i32 %v2_10004f94, 20
  %v2_10004f98 = inttoptr i32 %v1_10004f98 to i8*
  %v3_10004f98 = load i8, i8* %v2_10004f98, align 1
  %v4_10004f98 = zext i8 %v3_10004f98 to i32
  store i32 %v4_10004f98, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004f98, 64
  %v2_10004f9c = zext i8 %tmp to i32
  %v3_10004f9c = lshr i32 %v0_10004f84, %v2_10004f9c
  store i32 %v3_10004f9c, i32* %r3.global-to-local, align 4
  %v0_10004fa0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004fa0 = add i32 %v3_10004f9c, %v0_10004fa0
  store i32 %v2_10004fa0, i32* %r29.global-to-local, align 4
  %v1_10004fa4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004fa4 = add i32 %v1_10004fa4, 16
  %v3_10004fa4 = inttoptr i32 %v2_10004fa4 to i32*
  store i32 %v2_10004fa0, i32* %v3_10004fa4, align 4
  br i1 %v4_10004f8c, label %dec_label_pc_10004fac, label %dec_label_pc_10004f80.dec_label_pc_10004ef0_crit_edge

dec_label_pc_10004f80.dec_label_pc_10004ef0_crit_edge: ; preds = %dec_label_pc_10004f80
  %v1_10004ef0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004ef0

dec_label_pc_10004fac:                            ; preds = %dec_label_pc_10004f80, %dec_label_pc_10004ee8
  %v0_10004fac = call i32 @function_10006fa8()
  %v1_10004fac = trunc i32 %v0_10004fac to i16
  store i32 %v0_10004fac, i32* %r3.global-to-local, align 4
  %v0_10004fb0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004fb0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004fb0 = icmp eq i32 %v0_10004fb0, %v1_10004fb0
  %v3_10004fb4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004fb4 = add i32 %v3_10004fb4, 4
  %v5_10004fb4 = inttoptr i32 %v4_10004fb4 to i16*
  store i16 %v1_10004fac, i16* %v5_10004fb4, align 2
  br i1 %v4_10004fb0, label %dec_label_pc_10004fbc, label %dec_label_pc_10004fac.dec_label_pc_10004ef8_crit_edge

dec_label_pc_10004fac.dec_label_pc_10004ef8_crit_edge: ; preds = %dec_label_pc_10004fac
  %v1_10004ef8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004ef8

dec_label_pc_10004fbc:                            ; preds = %dec_label_pc_10004fac, %dec_label_pc_10004ef0
  %v0_10004fbc = call i32 @function_10006fa8()
  %v1_10004fbc = trunc i32 %v0_10004fbc to i16
  store i32 %v0_10004fbc, i32* %r3.global-to-local, align 4
  %v0_10004fc0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004fc0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004fc0 = icmp eq i32 %v0_10004fc0, %v1_10004fc0
  %v3_10004fc4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004fc4 = add i32 %v3_10004fc4, 20
  %v5_10004fc4 = inttoptr i32 %v4_10004fc4 to i16*
  store i16 %v1_10004fbc, i16* %v5_10004fc4, align 2
  br i1 %v4_10004fc0, label %dec_label_pc_10004fcc, label %dec_label_pc_10004f00

dec_label_pc_10004fcc:                            ; preds = %dec_label_pc_10004fbc, %dec_label_pc_10004ef8
  %v0_10004fcc = call i32 @function_10006fa8()
  %v1_10004fcc = trunc i32 %v0_10004fcc to i16
  store i32 %v0_10004fcc, i32* %r3.global-to-local, align 4
  %v3_10004fd0 = load i32, i32* @r31, align 4
  %v4_10004fd0 = add i32 %v3_10004fd0, 2
  %v5_10004fd0 = inttoptr i32 %v4_10004fd0 to i16*
  store i16 %v1_10004fcc, i16* %v5_10004fd0, align 2
  br label %dec_label_pc_10004f00

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10004d9c
  %v0_10004fd8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004fd8, i32* %r3.global-to-local, align 4
  store i32 268455904, i32* @lr, align 4
  %v0_10004fdc = call i32 @function_1000a79c()
  store i32 %v0_10004fdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004fe0

dec_label_pc_10004fe0:                            ; preds = %dec_label_pc_10004c5c, %dec_label_pc_10004fd8
  store i32 %v0_10004c60, i32* %r0.global-to-local, align 4
  %v1_10004ff4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10004c64)
  store i32 %v0_10004c9c, i32* %r28.global-to-local, align 4
  store i32 %v0_10004ca4, i32* %r29.global-to-local, align 4
  store i32 %v0_10004cac, i32* %r30.global-to-local, align 4
  %v0_10005038 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005038

; uselistorder directives
  uselistorder i32 %v0_10004fcc, { 1, 0 }
  uselistorder i32 %v0_10004fbc, { 1, 0 }
  uselistorder i32 %v0_10004fac, { 1, 0 }
  uselistorder i1 %v1_10004f78, { 1, 0 }
  uselistorder i1 %v0_10004f78, { 1, 0 }
  uselistorder i32 %v1_10004f68, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10004f2c, { 1, 0 }
  uselistorder i32 %v2_10004f0c, { 1, 0 }
  uselistorder i32 %v1_10004ed0, { 1, 0 }
  uselistorder i32 %v1_10004e18, { 1, 0 }
  uselistorder i32 %v1_10004e0c, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 2, 4, 1, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10004f00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004eb0, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004e58, { 1, 0 }
}

define i32 @function_1000503c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000503c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10005040 = load i32, i32* @lr, align 4
  store i32 %v0_10005040, i32* %r0.global-to-local, align 4
  %v0_10005044 = call i32 @__asm_mfcr()
  store i32 %v0_10005044, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10005054 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005044, i32* %r15.global-to-local, align 4
  %v0_10005074 = load i32, i32* @r24, align 4
  %v0_10005078 = load i32, i32* @r25, align 4
  %v0_1000507c = load i32, i32* @r26, align 4
  %v0_10005080 = load i32, i32* @r27, align 4
  %v0_10005084 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10005094 = load i32, i32* @r31, align 4
  %v0_100050a8 = load i32, i32* @r30, align 4
  store i32 268456112, i32* @lr, align 4
  %v2_100050ac = call i32 @function_1000b8f4(i32 4, i32 4)
  store i32 %v2_100050ac, i32* %r16.global-to-local, align 4
  %v0_100050b4 = load i32, i32* @r28, align 4
  %v0_100050c0 = load i32, i32* @r29, align 4
  store i32 %v0_100050c0, i32* %r3.global-to-local, align 4
  store i32 268456136, i32* @lr, align 4
  %v4_100050c4 = inttoptr i32 %v0_100050b4 to i32*
  %v5_100050c4 = call i32 @function_1000235c(i32 %v0_100050c0, i32* %v4_100050c4, i32 2, i32 0)
  %v5_100050d4 = trunc i32 %v5_100050c4 to i8
  %v0_100050dc = load i32, i32* @r28, align 4
  %v0_100050e0 = load i32, i32* @r29, align 4
  store i32 %v0_100050e0, i32* %r3.global-to-local, align 4
  store i32 268456168, i32* @lr, align 4
  %v4_100050e4 = inttoptr i32 %v0_100050dc to i32*
  %v5_100050e4 = call i32 @function_1000235c(i32 %v0_100050e0, i32* %v4_100050e4, i32 3, i32 65535)
  %v0_100050e8 = load i32, i32* @r28, align 4
  store i32 %v5_100050e4, i32* %r19.global-to-local, align 4
  %v0_100050f8 = load i32, i32* @r29, align 4
  store i32 %v0_100050f8, i32* %r3.global-to-local, align 4
  store i32 268456192, i32* @lr, align 4
  %v4_100050fc = inttoptr i32 %v0_100050e8 to i32*
  %v5_100050fc = call i32 @function_1000235c(i32 %v0_100050f8, i32* %v4_100050fc, i32 4, i32 64)
  %v0_10005100 = load i32, i32* @r28, align 4
  %v5_1000510c = trunc i32 %v5_100050fc to i8
  %v0_10005114 = load i32, i32* @r29, align 4
  store i32 %v0_10005114, i32* %r3.global-to-local, align 4
  store i32 268456220, i32* @lr, align 4
  %v4_10005118 = inttoptr i32 %v0_10005100 to i32*
  %v5_10005118 = call i32 @function_1000235c(i32 %v0_10005114, i32* %v4_10005118, i32 5, i32 0)
  %v0_10005128 = load i32, i32* @r28, align 4
  %v1_1000512c = urem i32 %v5_10005118, 256
  store i32 %v1_1000512c, i32* %r27.global-to-local, align 4
  %v0_10005130 = load i32, i32* @r29, align 4
  store i32 %v0_10005130, i32* %r3.global-to-local, align 4
  store i32 268456248, i32* @lr, align 4
  %v4_10005134 = inttoptr i32 %v0_10005128 to i32*
  %v5_10005134 = call i32 @function_1000235c(i32 %v0_10005130, i32* %v4_10005134, i32 6, i32 65535)
  %v0_10005138 = load i32, i32* @r28, align 4
  store i32 %v5_10005134, i32* %r20.global-to-local, align 4
  %v0_10005148 = load i32, i32* @r29, align 4
  store i32 %v0_10005148, i32* %r3.global-to-local, align 4
  store i32 268456272, i32* @lr, align 4
  %v4_1000514c = inttoptr i32 %v0_10005138 to i32*
  %v5_1000514c = call i32 @function_1000235c(i32 %v0_10005148, i32* %v4_1000514c, i32 7, i32 53)
  %v0_10005154 = load i32, i32* @r28, align 4
  store i32 %v5_1000514c, i32* %r23.global-to-local, align 4
  %v0_10005164 = load i32, i32* @r29, align 4
  store i32 %v0_10005164, i32* %r3.global-to-local, align 4
  store i32 268456300, i32* @lr, align 4
  %v4_10005168 = inttoptr i32 %v0_10005154 to i32*
  %v5_10005168 = call i32 @function_1000235c(i32 %v0_10005164, i32* %v4_10005168, i32 9, i32 65535)
  %v0_1000516c = load i32, i32* @r28, align 4
  store i32 %v5_10005168, i32* %r24.global-to-local, align 4
  %v0_1000517c = load i32, i32* @r29, align 4
  store i32 %v0_1000517c, i32* %r3.global-to-local, align 4
  store i32 268456324, i32* @lr, align 4
  %v4_10005180 = inttoptr i32 %v0_1000516c to i32*
  %v5_10005180 = call i32 @function_1000235c(i32 %v0_1000517c, i32* %v4_10005180, i32 0, i32 12)
  %v0_1000518c = load i32, i32* @r28, align 4
  store i32 %v5_10005180, i32* %r26.global-to-local, align 4
  %v0_10005194 = load i32, i32* @r29, align 4
  store i32 %v0_10005194, i32* %r3.global-to-local, align 4
  store i32 268456348, i32* @lr, align 4
  %v4_10005198 = inttoptr i32 %v0_1000518c to i32*
  %v5_10005198 = call i32 @function_10001d50(i32 %v0_10005194, i32* %v4_10005198, i32 8, i32 0)
  store i32 %v5_10005198, i32* %r25.global-to-local, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  store i32 268456360, i32* @lr, align 4
  %v1_100051a4 = call i32 @function_1000968c(i32 30)
  store i32 30, i32* %r3.global-to-local, align 4
  %v3_100051b0 = call i32 @function_100095d8(i32 30, i32* null)
  store i32 %v3_100051b0, i32* %r3.global-to-local, align 4
  store i32 268456384, i32* @lr, align 4
  %v2_100051bc = call i32 @function_1000a904(i32 %v3_100051b0, i32 0)
  store i32 %v2_100051bc, i32* @r31, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  store i32 268456396, i32* @lr, align 4
  %v1_100051c8 = call i32 @function_10009600(i32 30)
  store i32 %v1_100051c8, i32* %r3.global-to-local, align 4
  %v0_100051cc = load i32, i32* @r31, align 4
  %v1_100051cc = icmp slt i32 %v0_100051cc, 0
  %v3_100051cc = icmp eq i32 %v0_100051cc, 0
  store i1 %v3_100051cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100051cc, label %dec_label_pc_1000529c, label %dec_label_pc_100051d4

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_1000503c
  %v2_100051d4 = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_100051d4, i32* %r28.global-to-local, align 4
  store i32 %v0_100051cc, i32* %r3.global-to-local, align 4
  store i32 268456424, i32* @lr, align 4
  %v3_100051e4 = call i32 @function_1000a9d4(i32 %v0_100051cc, i32 %v2_100051d4, i32 2048)
  store i32 %v3_100051e4, i32* %r30.global-to-local, align 4
  %v0_100051ec = load i32, i32* @r31, align 4
  store i32 %v0_100051ec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100051f4.79 to i32), i32* @lr, align 4
  %v0_100051f0 = call i32 @function_1000a79c()
  store i32 31, i32* %r3.global-to-local, align 4
  store i32 268456444, i32* @lr, align 4
  %v1_100051f8 = call i32 @function_1000968c(i32 31)
  store i32 31, i32* %r3.global-to-local, align 4
  %v3_10005204 = call i32 @function_100095d8(i32 31, i32* null)
  %v0_10005208 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100051d4, i32* %r3.global-to-local, align 4
  %v3_10005214 = bitcast i32* %stack_var_-2148 to i8*
  %v4_10005214 = call i32 @function_1000a2c0(i8* %v3_10005214, i32 %v0_10005208, i32 %v3_10005204)
  store i32 %v4_10005214, i32* @r31, align 4
  store i32 31, i32* %r3.global-to-local, align 4
  store i32 268456484, i32* @lr, align 4
  %v1_10005220 = call i32 @function_10009600(i32 31)
  store i32 %v1_10005220, i32* %r3.global-to-local, align 4
  %v0_10005224 = load i32, i32* @r31, align 4
  %v3_10005224 = icmp eq i32 %v0_10005224, -1
  store i1 %v3_10005224, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005224, label %dec_label_pc_1000529c, label %dec_label_pc_1000522c

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_100051d4
  %v0_1000522c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000522c = icmp sgt i32 %v0_1000522c, %v0_10005224
  %v4_1000522c = icmp eq i32 %v0_1000522c, %v0_10005224
  store i1 %v4_1000522c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000522c, label %dec_label_pc_10005234, label %dec_label_pc_1000529c

dec_label_pc_10005234:                            ; preds = %dec_label_pc_1000522c
  %v2_10005234 = sub i32 %v0_1000522c, %v0_10005224
  store i32 %v2_10005234, i32* %r0.global-to-local, align 4
  %v1_10005238 = add i32 %v0_1000522c, -1
  store i32 %v1_10005238, i32* %r3.global-to-local, align 4
  store i32 %v2_10005234, i32* %ctr.global-to-local, align 4
  %v0_10005244 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005244 = add i32 %v0_10005244, %v0_10005224
  store i32 %v2_10005244, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000524c = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1000524c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005250

dec_label_pc_10005250:                            ; preds = %dec_label_pc_10005294, %dec_label_pc_10005234
  %v0_10005298 = phi i32 [ %v1_10005298, %dec_label_pc_10005294 ], [ %v2_10005234, %dec_label_pc_10005234 ]
  %v0_10005294 = phi i32 [ %v1_10005294, %dec_label_pc_10005294 ], [ %v0_10005224, %dec_label_pc_10005234 ]
  %v0_1000525c = phi i32 [ %v1_1000525c, %dec_label_pc_10005294 ], [ %v2_10005244, %dec_label_pc_10005234 ]
  %v0_10005250 = phi i32 [ %v0_100052504, %dec_label_pc_10005294 ], [ 0, %dec_label_pc_10005234 ]
  %v3_10005250 = icmp eq i32 %v0_10005250, 0
  store i1 %v3_10005250, i1* %cr7_eq.global-to-local, align 1
  %v1_10005254 = inttoptr i32 %v0_1000525c to i8*
  %v2_10005254 = load i8, i8* %v1_10005254, align 1
  %v3_10005254 = zext i8 %v2_10005254 to i32
  store i32 %v3_10005254, i32* %r9.global-to-local, align 4
  %v4_10005258 = icmp eq i32 %v1_10005238, %v0_10005294
  %v1_1000525c = add i32 %v0_1000525c, 1
  store i32 %v1_1000525c, i32* %r11.global-to-local, align 4
  br i1 %v3_10005250, label %dec_label_pc_1000526c, label %dec_label_pc_1000527c

dec_label_pc_1000526c:                            ; preds = %dec_label_pc_10005250
  %v3_1000526c = icmp eq i8 %v2_10005254, 9
  store i1 %v3_1000526c, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10005254, label %dec_label_pc_10005278 [
    i8 32, label %dec_label_pc_10005294
    i8 9, label %dec_label_pc_10005294
  ]

dec_label_pc_10005278:                            ; preds = %dec_label_pc_1000526c
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000527c

dec_label_pc_1000527c:                            ; preds = %dec_label_pc_10005250, %dec_label_pc_10005278
  %v0_100052505 = phi i32 [ %v0_10005250, %dec_label_pc_10005250 ], [ 1, %dec_label_pc_10005278 ]
  %v1_1000527c = add nuw nsw i32 %v3_10005254, 208
  %v1_10005280 = urem i32 %v1_1000527c, 256
  store i32 %v1_10005280, i32* %r0.global-to-local, align 4
  %v2_10005284 = icmp ugt i32 %v1_10005280, 9
  %v3_10005284 = icmp eq i32 %v1_10005280, 9
  store i1 %v3_10005284, i1* %cr7_eq.global-to-local, align 1
  %v3_10005260.not = icmp ne i8 %v2_10005254, 46
  %brmerge.not = and i1 %v3_10005260.not, %v2_10005284
  %brmerge26 = or i1 %v4_10005258, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_100052d0, label %dec_label_pc_10005294

dec_label_pc_10005294:                            ; preds = %dec_label_pc_1000527c, %dec_label_pc_1000526c, %dec_label_pc_1000526c
  %v0_100052504 = phi i32 [ 0, %dec_label_pc_1000526c ], [ 0, %dec_label_pc_1000526c ], [ %v0_100052505, %dec_label_pc_1000527c ]
  %v1_10005294 = add i32 %v0_10005294, 1
  %v1_10005298 = add i32 %v0_10005298, -1
  store i32 %v1_10005298, i32* %ctr.global-to-local, align 4
  %v2_10005298 = icmp eq i32 %v1_10005298, 0
  br i1 %v2_10005298, label %dec_label_pc_1000529c, label %dec_label_pc_10005250

dec_label_pc_1000529c:                            ; preds = %dec_label_pc_10005294, %dec_label_pc_1000522c, %dec_label_pc_100051d4, %dec_label_pc_1000503c
  %v0_1000529c = call i32 @function_10006fa8()
  %v1_100052a0 = urem i32 %v0_1000529c, 4
  store i32 %v1_100052a0, i32* %r3.global-to-local, align 4
  %v3_100052a4 = icmp eq i32 %v1_100052a0, 1
  store i1 %v3_100052a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100052a4, label %dec_label_pc_10005688, label %dec_label_pc_100052ac

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_1000529c
  %v1_100052a4 = icmp eq i32 %v1_100052a0, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100052a4, label %dec_label_pc_100056a0, label %dec_label_pc_100052b4

dec_label_pc_100052b4:                            ; preds = %dec_label_pc_100052ac
  %v2_100052b4 = icmp eq i32 %v1_100052a0, 3
  %v3_100052b4 = icmp eq i32 %v1_100052a0, 2
  store i1 %v3_100052b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100052b4, label %dec_label_pc_10005694, label %dec_label_pc_100052bc

dec_label_pc_100052bc:                            ; preds = %dec_label_pc_100052b4
  store i1 %v2_100052b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100052b4, label %dec_label_pc_100052c4, label %dec_label_pc_10005300

dec_label_pc_100052c4:                            ; preds = %dec_label_pc_100052bc
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10005300

dec_label_pc_100052d0:                            ; preds = %dec_label_pc_1000527c
  %v2_100052d0 = sub i32 %v0_10005294, %v0_10005224
  store i32 %v2_1000524c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100052e4.80 to i32), i32* @lr, align 4
  %v3_100052e0 = call i32 @function_10009f94(i32 %v2_1000524c, i32 %v2_10005244, i32 %v2_100052d0)
  %v2_100052e4 = ptrtoint i32* %stack_var_-2184 to i32
  %v2_100052e8 = add i32 %v2_100052d0, %v2_100052e4
  store i32 %v2_100052e8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100052f0 = add i32 %v2_100052e8, 4
  %v4_100052f0 = inttoptr i32 %v3_100052f0 to i8*
  store i8 0, i8* %v4_100052f0, align 1
  store i32 %v2_1000524c, i32* %r3.global-to-local, align 4
  store i32 268456700, i32* @lr, align 4
  %v1_100052f8 = call i32 @function_1000b2cc(i32 %v2_1000524c)
  store i32 %v1_100052f8, i32* %r3.global-to-local, align 4
  store i32 %v1_100052f8, i32* @r21, align 4
  br label %dec_label_pc_10005300

dec_label_pc_10005300:                            ; preds = %dec_label_pc_100052bc, %dec_label_pc_100056a0, %dec_label_pc_10005694, %dec_label_pc_10005688, %dec_label_pc_100052c4, %dec_label_pc_100052d0
  %v0_10005300 = load i32, i32* %r25.global-to-local, align 4
  %v3_10005300 = icmp eq i32 %v0_10005300, 0
  store i1 %v3_10005300, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005300, label %dec_label_pc_10005628, label %dec_label_pc_10005308

dec_label_pc_10005308:                            ; preds = %dec_label_pc_10005300
  store i32 %v0_10005300, i32* %r3.global-to-local, align 4
  store i32 268456720, i32* @lr, align 4
  %v1_1000530c = inttoptr i32 %v0_10005300 to i8*
  %v2_1000530c = call i32 @function_10009f10(i8* %v1_1000530c)
  store i32 %v2_1000530c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268456740, i32* @lr, align 4
  %v3_10005320 = call i32 @function_1000b568(i32 2, i32 3, i32 17)
  store i32 %v3_10005320, i32* %r3.global-to-local, align 4
  %v3_10005324 = icmp eq i32 %v3_10005320, -1
  store i1 %v3_10005324, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10005320, i32* %r22.global-to-local, align 4
  br i1 %v3_10005324, label %dec_label_pc_10005628, label %dec_label_pc_10005330

dec_label_pc_10005330:                            ; preds = %dec_label_pc_10005308
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000533c = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268456780, i32* @lr, align 4
  %v5_10005348 = call i32 @function_1000b52c(i32 0, i32 3, i32 %v2_1000533c, i32 4, i32 4)
  store i32 %v5_10005348, i32* %r3.global-to-local, align 4
  %v3_1000534c = icmp eq i32 %v5_10005348, -1
  store i1 %v3_1000534c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000534c, label %dec_label_pc_10005620, label %dec_label_pc_10005354

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005330
  %v0_10005354 = load i32, i32* %r15.global-to-local, align 4
  %v1_10005354 = icmp slt i32 %v0_10005354, 0
  %v3_10005354 = icmp eq i32 %v0_10005354, 0
  store i1 %v1_10005354, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10005354, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000535c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000535c = urem i32 %v0_1000535c, 65536
  store i32 %v1_1000535c, i32* %r17.global-to-local, align 4
  %v0_10005360 = load i32, i32* %r20.global-to-local, align 4
  %v1_10005360 = urem i32 %v0_10005360, 65536
  store i32 %v1_10005360, i32* %r18.global-to-local, align 4
  %v0_10005364 = load i32, i32* %r23.global-to-local, align 4
  %v1_10005364 = urem i32 %v0_10005364, 65536
  store i32 %v1_10005364, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000536c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000536c = urem i32 %v0_1000536c, 65536
  store i32 %v1_1000536c, i32* %r20.global-to-local, align 4
  %v0_10005370 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005370 = urem i32 %v0_10005370, 256
  store i32 %v1_10005370, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10005354, 1
  %v1_10005614 = load i32, i32* @r29, align 4
  %v2_10005614 = add i32 %v1_10005614, %v1_10005370
  store i32 %v2_10005614, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100054d8.preheader, label %dec_label_pc_10005378

dec_label_pc_10005378:                            ; preds = %dec_label_pc_10005354
  %v1_1000537c = icmp slt i32 %v1_10005614, 0
  %v3_1000537c = icmp eq i32 %v1_10005614, 0
  store i1 %v1_1000537c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000537c, i1* %cr3_eq.global-to-local, align 1
  %v1_10005380 = urem i32 %v2_10005614, 65536
  %v0_10005384 = load i32, i32* %r27.global-to-local, align 4
  %v3_10005384 = icmp eq i32 %v0_10005384, 0
  store i1 %v3_10005384, i1* %cr2_eq.global-to-local, align 1
  %v1_10005388 = add nuw nsw i32 %v1_10005380, 27
  store i32 %v1_10005388, i32* %r0.global-to-local, align 4
  %v1_1000538c = add nuw nsw i32 %v1_10005380, 47
  store i32 %v1_1000538c, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10005614, 47
  %v1_10005390 = urem i32 %fold, 65536
  store i32 %v1_10005390, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10005614, 27
  %v1_10005394 = urem i32 %fold3, 65536
  store i32 %v1_10005394, i32* %r27.global-to-local, align 4
  %v1_10005398 = add i32 %v1_10005614, 1
  store i32 %v1_10005398, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100053e8 = sext i8 %v5_100050d4 to i32
  %v4_100053f0 = sext i8 %v5_1000510c to i32
  br label %dec_label_pc_100053a0

dec_label_pc_100053a0:                            ; preds = %dec_label_pc_100054b0, %dec_label_pc_10005378
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268456876, i32* @lr, align 4
  %v2_100053a8 = call i32 @function_1000b8f4(i32 600, i32 1)
  store i32 %v2_100053a8, i32* %r3.global-to-local, align 4
  %v3_100053ac = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100053ac, i32* %r0.global-to-local, align 4
  %v0_100053b0 = load i32, i32* @r31, align 4
  %v1_100053b0 = mul i32 %v0_100053b0, 4
  store i32 %v1_100053b0, i32* %r9.global-to-local, align 4
  %v2_100053b4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100053b4 = add i32 %v2_100053b4, %v1_100053b0
  %v4_100053b4 = inttoptr i32 %v3_100053b4 to i32*
  store i32 %v2_100053a8, i32* %v4_100053b4, align 4
  %v0_100053b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100053b8 = mul i32 %v0_100053b8, 4
  store i32 %v1_100053b8, i32* %r0.global-to-local, align 4
  %v0_100053bc = load i32, i32* %r16.global-to-local, align 4
  %v2_100053bc = add i32 %v0_100053bc, %v1_100053b8
  %v3_100053bc = inttoptr i32 %v2_100053bc to i32*
  %v4_100053bc = load i32, i32* %v3_100053bc, align 4
  store i32 %v4_100053bc, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100053c4 = inttoptr i32 %v4_100053bc to i32*
  %v2_100053c4 = load i32, i32* %v1_100053c4, align 4
  store i32 %v2_100053c4, i32* %r9.global-to-local, align 4
  %v1_100053c8 = add i32 %v4_100053bc, 20
  store i32 %v1_100053c8, i32* %r10.global-to-local, align 4
  %v0_100053cc = load i32, i32* %r17.global-to-local, align 4
  %v1_100053cc = trunc i32 %v0_100053cc to i16
  %v3_100053cc = add i32 %v4_100053bc, 4
  %v4_100053cc = inttoptr i32 %v3_100053cc to i16*
  store i16 %v1_100053cc, i16* %v4_100053cc, align 2
  %v0_100053d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100053d0 = add i32 %v0_100053d0, 28
  store i32 %v1_100053d0, i32* %r8.global-to-local, align 4
  %v1_100053d4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100053d4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100053dc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100053dc, i32* %r9.global-to-local, align 4
  %v1_100053e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100053e0 = inttoptr i32 %v1_100053e0 to i32*
  store i32 %v1_100053dc, i32* %v2_100053e0, align 4
  %v0_100053e4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100053e4 = trunc i32 %v0_100053e4 to i16
  %v2_100053e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100053e4 = add i32 %v2_100053e4, 2
  %v4_100053e4 = inttoptr i32 %v3_100053e4 to i16*
  store i16 %v1_100053e4, i16* %v4_100053e4, align 2
  store i32 %v4_100053e8, i32* %r0.global-to-local, align 4
  %v2_100053ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100053ec = add i32 %v2_100053ec, 1
  %v4_100053ec = inttoptr i32 %v3_100053ec to i8*
  store i8 %v5_100050d4, i8* %v4_100053ec, align 1
  store i32 %v4_100053f0, i32* %r7.global-to-local, align 4
  %v2_100053f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100053f4 = add i32 %v2_100053f4, 8
  %v4_100053f4 = inttoptr i32 %v3_100053f4 to i8*
  store i8 %v5_1000510c, i8* %v4_100053f4, align 1
  %v0_100053f8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100053f8, label %dec_label_pc_10005404, label %dec_label_pc_100053fc

dec_label_pc_100053fc:                            ; preds = %dec_label_pc_100053a0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10005400 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005400 = add i32 %v2_10005400, 6
  %v4_10005400 = inttoptr i32 %v3_10005400 to i16*
  store i16 16384, i16* %v4_10005400, align 2
  br label %dec_label_pc_10005404

dec_label_pc_10005404:                            ; preds = %dec_label_pc_100053a0, %dec_label_pc_100053fc
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_1000540c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000540c = add i32 %v2_1000540c, 9
  %v4_1000540c = inttoptr i32 %v3_1000540c to i8*
  store i8 17, i8* %v4_1000540c, align 1
  %v0_10005410 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005410 = add i32 %v0_10005410, 41
  store i32 %v1_10005410, i32* %r9.global-to-local, align 4
  %v0_10005414 = load i32, i32* %r27.global-to-local, align 4
  %v1_10005414 = trunc i32 %v0_10005414 to i16
  %v2_10005414 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005414 = add i32 %v2_10005414, 4
  %v4_10005414 = inttoptr i32 %v3_10005414 to i16*
  store i16 %v1_10005414, i16* %v4_10005414, align 2
  %v0_10005418 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005418 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005418 = add i32 %v1_10005418, %v0_10005418
  store i32 %v2_10005418, i32* %r30.global-to-local, align 4
  %v3_1000541c = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_1000541c, i32* %r0.global-to-local, align 4
  %v1_10005420 = add i32 %v2_10005418, 1
  store i32 %v1_10005420, i32* %r31.global-to-local, align 4
  %v0_10005424 = load i32, i32* %r19.global-to-local, align 4
  %v1_10005424 = trunc i32 %v0_10005424 to i16
  %v2_10005424 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005424 = add i32 %v2_10005424, 2
  %v4_10005424 = inttoptr i32 %v3_10005424 to i16*
  store i16 %v1_10005424, i16* %v4_10005424, align 2
  %v0_10005428 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005428, i32* %r3.global-to-local, align 4
  %v0_1000542c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000542c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000542c = add i32 %v1_1000542c, 12
  %v3_1000542c = inttoptr i32 %v2_1000542c to i32*
  store i32 %v0_1000542c, i32* %v3_1000542c, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10005434 = load i32, i32* %r18.global-to-local, align 4
  %v1_10005434 = trunc i32 %v0_10005434 to i16
  %v2_10005434 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005434 = add i32 %v2_10005434, 20
  %v4_10005434 = inttoptr i32 %v3_10005434 to i16*
  store i16 %v1_10005434, i16* %v4_10005434, align 2
  %v0_10005438 = load i32, i32* %r25.global-to-local, align 4
  %v0_1000543c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000543c = trunc i32 %v0_1000543c to i16
  %v2_1000543c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000543c = add i32 %v2_1000543c, 2
  %v4_1000543c = inttoptr i32 %v3_1000543c to i16*
  store i16 %v1_1000543c, i16* %v4_1000543c, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10005444 = load i32, i32* %r8.global-to-local, align 4
  %v3_10005444 = add i32 %v2_10005444, 4
  %v4_10005444 = inttoptr i32 %v3_10005444 to i16*
  store i16 1, i16* %v4_10005444, align 2
  %v0_10005448 = load i32, i32* @r28, align 4
  %v0_1000544c = load i32, i32* @r21, align 4
  %v1_1000544c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000544c = add i32 %v1_1000544c, 16
  %v3_1000544c = inttoptr i32 %v2_1000544c to i32*
  store i32 %v0_1000544c, i32* %v3_1000544c, align 4
  %v0_10005450 = load i32, i32* %r20.global-to-local, align 4
  %v1_10005450 = trunc i32 %v0_10005450 to i16
  %v2_10005450 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005450 = add i32 %v2_10005450, 28
  %v4_10005450 = inttoptr i32 %v3_10005450 to i16*
  store i16 %v1_10005450, i16* %v4_10005450, align 2
  %v0_10005454 = load i32, i32* %r23.global-to-local, align 4
  %v1_10005454 = trunc i32 %v0_10005454 to i8
  %v2_10005454 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005454 = add i32 %v2_10005454, 40
  %v4_10005454 = inttoptr i32 %v3_10005454 to i8*
  store i8 %v1_10005454, i8* %v4_10005454, align 1
  store i32 268457052, i32* @lr, align 4
  %v3_10005458 = call i32 @function_10009f94(i32 %v0_10005428, i32 %v0_10005438, i32 %v0_10005448)
  store i32 %v3_10005458, i32* %r3.global-to-local, align 4
  %v0_1000545c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000545c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000545c = or i1 %v0_1000545c, %v1_1000545c
  br i1 %v2_1000545c, label %dec_label_pc_100054a8, label %dec_label_pc_10005460

dec_label_pc_10005460:                            ; preds = %dec_label_pc_10005404
  %v0_10005460 = load i32, i32* @r29, align 4
  store i32 %v0_10005460, i32* %ctr.global-to-local, align 4
  %v0_10005464 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005464, i32* %r3.global-to-local, align 4
  %v0_10005468 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005468, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10005488

dec_label_pc_10005478:                            ; preds = %dec_label_pc_10005488
  %v1_10005478 = urem i32 %v1_1000548c, 256
  br label %dec_label_pc_1000547c

dec_label_pc_1000547c:                            ; preds = %dec_label_pc_10005498, %dec_label_pc_10005478
  %v0_10005484 = phi i32 [ %v0_10005484.pre, %dec_label_pc_10005498 ], [ %v0_1000548418, %dec_label_pc_10005478 ]
  %v0_10005480 = phi i32 [ %v0_1000549c, %dec_label_pc_10005498 ], [ %v0_1000548016, %dec_label_pc_10005478 ]
  %v2_1000549813 = phi i32 [ %v0_1000549c, %dec_label_pc_10005498 ], [ %v2_10005498, %dec_label_pc_10005478 ]
  %v0_1000547c = phi i32 [ %v0_1000547c.pre, %dec_label_pc_10005498 ], [ %v0_10005488, %dec_label_pc_10005478 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10005498 ], [ %v1_10005478, %dec_label_pc_10005478 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_1000547c = add i32 %v0_1000547c, 1
  store i32 %v1_1000547c, i32* %r10.global-to-local, align 4
  %v1_10005480 = add i32 %v0_10005480, 1
  store i32 %v1_10005480, i32* %r3.global-to-local, align 4
  %v1_10005484 = add i32 %v0_10005484, -1
  store i32 %v1_10005484, i32* %ctr.global-to-local, align 4
  %v2_10005484 = icmp eq i32 %v1_10005484, 0
  br i1 %v2_10005484, label %dec_label_pc_100054b0.loopexit, label %dec_label_pc_10005488

dec_label_pc_10005488:                            ; preds = %dec_label_pc_1000547c, %dec_label_pc_10005460
  %v0_1000548418 = phi i32 [ %v1_10005484, %dec_label_pc_1000547c ], [ %v0_10005460, %dec_label_pc_10005460 ]
  %v0_1000548016 = phi i32 [ %v1_10005480, %dec_label_pc_1000547c ], [ %v0_10005464, %dec_label_pc_10005460 ]
  %v2_10005498 = phi i32 [ %v2_1000549813, %dec_label_pc_1000547c ], [ %v0_10005468, %dec_label_pc_10005460 ]
  %v0_10005498 = phi i32 [ %storemerge, %dec_label_pc_1000547c ], [ 0, %dec_label_pc_10005460 ]
  %v0_10005488 = phi i32 [ %v1_1000547c, %dec_label_pc_1000547c ], [ 0, %dec_label_pc_10005460 ]
  %v1_10005488 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005488 = add i32 %v1_10005488, %v0_10005488
  %v3_10005488 = inttoptr i32 %v2_10005488 to i8*
  %v4_10005488 = load i8, i8* %v3_10005488, align 1
  %v5_10005488 = zext i8 %v4_10005488 to i32
  store i32 %v5_10005488, i32* %r0.global-to-local, align 4
  %v1_1000548c = add nsw i32 %v0_10005498, 1
  store i32 %v1_1000548c, i32* %r11.global-to-local, align 4
  %v3_10005490 = icmp eq i8 %v4_10005488, 46
  store i1 %v3_10005490, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005490, label %dec_label_pc_10005498, label %dec_label_pc_10005478

dec_label_pc_10005498:                            ; preds = %dec_label_pc_10005488
  %v1_10005498 = trunc i32 %v0_10005498 to i8
  %v3_10005498 = inttoptr i32 %v2_10005498 to i8*
  store i8 %v1_10005498, i8* %v3_10005498, align 1
  %v0_1000549c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000549c, i32* %r9.global-to-local, align 4
  %v0_1000547c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_10005484.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000547c

dec_label_pc_100054a8:                            ; preds = %dec_label_pc_10005404
  %v0_100054a8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100054a8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100054b0

dec_label_pc_100054b0.loopexit:                   ; preds = %dec_label_pc_1000547c
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100054b0

dec_label_pc_100054b0:                            ; preds = %dec_label_pc_100054b0.loopexit, %dec_label_pc_100054a8
  %v2_100054b0 = phi i32 [ %v2_1000549813, %dec_label_pc_100054b0.loopexit ], [ %v0_100054a8, %dec_label_pc_100054a8 ]
  %v0_100054b0.off0 = phi i8 [ %extract.t, %dec_label_pc_100054b0.loopexit ], [ 0, %dec_label_pc_100054a8 ]
  %v3_100054b0 = inttoptr i32 %v2_100054b0 to i8*
  store i8 %v0_100054b0.off0, i8* %v3_100054b0, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100054b8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100054b8 = load i32, i32* @r29, align 4
  %v2_100054b8 = add i32 %v1_100054b8, %v0_100054b8
  store i32 %v2_100054b8, i32* %r9.global-to-local, align 4
  %v3_100054bc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100054bc, i32* %r11.global-to-local, align 4
  %v3_100054c0 = add i32 %v2_100054b8, 4
  %v4_100054c0 = inttoptr i32 %v3_100054c0 to i16*
  store i16 1, i16* %v4_100054c0, align 2
  %v0_100054c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100054c4 = add i32 %v0_100054c4, 1
  store i32 %v1_100054c4, i32* %r31.global-to-local, align 4
  %v0_100054c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100054c8 = trunc i32 %v0_100054c8 to i16
  %v2_100054c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100054c8 = add i32 %v2_100054c8, 2
  %v4_100054c8 = inttoptr i32 %v3_100054c8 to i16*
  store i16 %v1_100054c8, i16* %v4_100054c8, align 2
  %v0_100054cc = load i32, i32* %r31.global-to-local, align 4
  %v1_100054cc = load i32, i32* %r15.global-to-local, align 4
  %v2_100054cc = icmp slt i32 %v0_100054cc, %v1_100054cc
  %v4_100054cc = icmp eq i32 %v0_100054cc, %v1_100054cc
  store i1 %v4_100054cc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100054cc, i32* %stack_var_-2184, align 4
  br i1 %v2_100054cc, label %dec_label_pc_100053a0, label %dec_label_pc_100054d8.preheader.loopexit

dec_label_pc_100054d8.preheader.loopexit:         ; preds = %dec_label_pc_100054b0
  %v0_100054d8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100054d8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100054d8.preheader

dec_label_pc_100054d8.preheader:                  ; preds = %dec_label_pc_100055d0, %dec_label_pc_10005354, %dec_label_pc_100054d8.preheader.loopexit
  %v1_100054d8 = phi i1 [ %v1_10005354, %dec_label_pc_10005354 ], [ %v1_100054d8.pre, %dec_label_pc_100054d8.preheader.loopexit ], [ %v1_100055d0, %dec_label_pc_100055d0 ]
  %v0_100054d8 = phi i1 [ %v3_10005354, %dec_label_pc_10005354 ], [ %v0_100054d8.pre, %dec_label_pc_100054d8.preheader.loopexit ], [ %v0_100055d0, %dec_label_pc_100055d0 ]
  %v2_100054d8 = or i1 %v1_100054d8, %v0_100054d8
  br label %dec_label_pc_100054d8

dec_label_pc_100054d8:                            ; preds = %dec_label_pc_100054d8.preheader, %dec_label_pc_100054d8
  br i1 %v2_100054d8, label %dec_label_pc_100054d8, label %dec_label_pc_100054dc

dec_label_pc_100054dc:                            ; preds = %dec_label_pc_100054d8, %dec_label_pc_100055d0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_100054ec = load i32, i32* %r19.global-to-local, align 4
  %v4_100054ec = icmp eq i32 %v0_100054ec, 65535
  store i1 %v4_100054ec, i1* %cr7_eq.global-to-local, align 1
  %v0_100054f0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100054f0 = icmp slt i32 %v0_100054f0, 65535
  %v4_100054f0 = icmp eq i32 %v0_100054f0, 65535
  store i1 %v2_100054f0, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_100054f0, i1* %cr3_eq.global-to-local, align 1
  %v0_100054f4 = load i32, i32* %r20.global-to-local, align 4
  %v4_100054f4 = icmp eq i32 %v0_100054f4, 65535
  store i1 %v4_100054f4, i1* %cr2_eq.global-to-local, align 1
  %v0_100054f8 = load i32, i32* @r24, align 4
  %v1_100054f8 = add i32 %v0_100054f8, 27
  store i32 %v1_100054f8, i32* @r30, align 4
  %v0_100054fc = call i32 @__asm_mfcr()
  store i32 %v0_100054fc, i32* %r3.global-to-local, align 4
  %v1_10005500 = mul i32 %v0_100054fc, 268435456
  store i32 %v1_10005500, i32* @r26, align 4
  %v0_10005504 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005504 = load i32, i32* %r0.global-to-local, align 4
  %v4_10005504 = icmp eq i32 %v0_10005504, %v1_10005504
  store i1 %v4_10005504, i1* %cr7_eq.global-to-local, align 1
  %v0_10005508 = load i32, i32* @r24, align 4
  %v1_10005508 = add i32 %v0_10005508, 47
  store i32 %v1_10005508, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005510 = call i32 @__asm_mfcr()
  store i32 %v0_10005510, i32* %r3.global-to-local, align 4
  %v1_10005514 = mul i32 %v0_10005510, 268435456
  store i32 %v1_10005514, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_1000551c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000551c

dec_label_pc_1000551c:                            ; preds = %dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge, %dec_label_pc_100054dc
  %v0_10005520 = phi i32 [ %v0_10005520.pre, %dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge ], [ %v1_10005514, %dec_label_pc_100054dc ]
  %v0_1000551c = phi i32 [ %v1_100055c0, %dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge ], [ %v0_1000551c.pre, %dec_label_pc_100054dc ]
  %v1_1000551c = mul i32 %v0_1000551c, 4
  store i32 %v1_1000551c, i32* %r0.global-to-local, align 4
  %v1_10005520 = mul i32 %v0_10005520, 16
  %v2_10005520 = udiv i32 %v0_10005520, 268435456
  %v3_10005520 = or i32 %v2_10005520, %v1_10005520
  store i32 %v3_10005520, i32* %r27.global-to-local, align 4
  %v1_10005524 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10005520)
  %v1_10005528 = mul nuw i32 %v2_10005520, 268435456
  %v2_10005528 = urem i32 %v0_10005520, 268435456
  %v3_10005528 = or i32 %v1_10005528, %v2_10005528
  store i32 %v3_10005528, i32* @r27, align 4
  %v0_1000552c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000552c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000552c = add i32 %v1_1000552c, %v0_1000552c
  %v3_1000552c = inttoptr i32 %v2_1000552c to i32*
  %v4_1000552c = load i32, i32* %v3_1000552c, align 4
  store i32 %v4_1000552c, i32* @r29, align 4
  %v1_10005530 = add i32 %v4_1000552c, 20
  store i32 %v1_10005530, i32* @r28, align 4
  %v0_10005534 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005534, label %dec_label_pc_100055d8, label %dec_label_pc_10005538

dec_label_pc_10005538:                            ; preds = %dec_label_pc_1000551c
  %v0_10005538 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005538, label %dec_label_pc_100055e4, label %dec_label_pc_1000553c

dec_label_pc_1000553c:                            ; preds = %dec_label_pc_100055d8, %dec_label_pc_10005538
  %v0_1000553c = load i32, i32* @r26, align 4
  %v1_1000553c = mul i32 %v0_1000553c, 16
  %v2_1000553c = udiv i32 %v0_1000553c, 268435456
  %v3_1000553c = or i32 %v2_1000553c, %v1_1000553c
  store i32 %v3_1000553c, i32* %r26.global-to-local, align 4
  %v1_10005540 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000553c)
  %v1_10005544 = mul nuw i32 %v2_1000553c, 268435456
  %v2_10005544 = urem i32 %v0_1000553c, 268435456
  %v3_10005544 = or i32 %v1_10005544, %v2_10005544
  store i32 %v3_10005544, i32* @r26, align 4
  %v0_10005548 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005548, label %dec_label_pc_100055fc, label %dec_label_pc_1000554c

dec_label_pc_1000554c:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_1000553c
  %v0_1000554c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000554c, label %dec_label_pc_10005608, label %dec_label_pc_10005550

dec_label_pc_10005550:                            ; preds = %dec_label_pc_100055fc, %dec_label_pc_1000554c, %dec_label_pc_10005608
  %v0_10005550 = load i32, i32* @r29, align 4
  %v1_10005550 = add i32 %v0_10005550, 41
  store i32 %v1_10005550, i32* %r3.global-to-local, align 4
  %v0_10005554 = load i32, i32* %r23.global-to-local, align 4
  store i32 268457308, i32* @lr, align 4
  %v2_10005558 = inttoptr i32 %v1_10005550 to i8*
  %v3_10005558 = call i32 @function_10007068(i8* %v2_10005558, i32 %v0_10005554)
  %v0_1000555c = load i32, i32* @r25, align 4
  %v1_1000555c = trunc i32 %v0_1000555c to i16
  %v2_1000555c = load i32, i32* @r29, align 4
  %v3_1000555c = add i32 %v2_1000555c, 10
  %v4_1000555c = inttoptr i32 %v3_1000555c to i16*
  store i16 %v1_1000555c, i16* %v4_1000555c, align 2
  %v0_10005564 = load i32, i32* @r29, align 4
  store i32 %v0_10005564, i32* @r3, align 4
  %v2_10005568 = call i32 @function_100056ac(i32 %v0_10005564, i32 20)
  %v3_10005568 = trunc i32 %v2_10005568 to i16
  %v0_1000556c = load i32, i32* @r28, align 4
  store i32 %v0_1000556c, i32* @r4, align 4
  %v3_10005570 = load i32, i32* @r29, align 4
  %v4_10005570 = add i32 %v3_10005570, 10
  %v5_10005570 = inttoptr i32 %v4_10005570 to i16*
  store i16 %v3_10005568, i16* %v5_10005570, align 2
  %v0_10005574 = load i32, i32* @r30, align 4
  %v0_10005578 = load i32, i32* @r25, align 4
  %v1_10005578 = trunc i32 %v0_10005578 to i16
  %v2_10005578 = load i32, i32* @r28, align 4
  %v3_10005578 = add i32 %v2_10005578, 6
  %v4_10005578 = inttoptr i32 %v3_10005578 to i16*
  store i16 %v1_10005578, i16* %v4_10005578, align 2
  %v0_1000557c = load i32, i32* @r29, align 4
  store i32 %v0_1000557c, i32* %r3.global-to-local, align 4
  %v0_10005580 = load i32, i32* @r28, align 4
  %v1_10005580 = add i32 %v0_10005580, 4
  %v2_10005580 = inttoptr i32 %v1_10005580 to i16*
  %v3_10005580 = load i16, i16* %v2_10005580, align 2
  %v4_10005580 = zext i16 %v3_10005580 to i32
  %v4_10005584 = call i32 @function_10005710(i32 %v0_1000557c, i32 %v0_1000556c, i32 %v4_10005580, i32 %v0_10005574)
  %v5_10005584 = trunc i32 %v4_10005584 to i16
  store i32 %v4_10005584, i32* %r3.global-to-local, align 4
  %v3_10005588 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10005588, i32* %r7.global-to-local, align 4
  %v0_1000558c = load i32, i32* @r28, align 4
  %v1_1000558c = add i32 %v0_1000558c, 2
  %v2_1000558c = inttoptr i32 %v1_1000558c to i16*
  %v3_1000558c = load i16, i16* %v2_1000558c, align 2
  %v4_1000558c = zext i16 %v3_1000558c to i32
  store i32 %v4_1000558c, i32* %r0.global-to-local, align 4
  %v0_10005590 = load i32, i32* @r29, align 4
  %v1_10005594 = mul i32 %v3_10005588, 24
  store i32 %v1_10005594, i32* %r7.global-to-local, align 4
  %v4_10005598 = add i32 %v0_1000558c, 6
  %v5_10005598 = inttoptr i32 %v4_10005598 to i16*
  store i16 %v5_10005584, i16* %v5_10005598, align 2
  %v0_1000559c = load i32, i32* @r31, align 4
  %v0_100055a0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100055a0, i32* %r3.global-to-local, align 4
  %v0_100055a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100055a4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100055a4 = add i32 %v1_100055a4, %v0_100055a4
  store i32 %v2_100055a4, i32* %r7.global-to-local, align 4
  %v0_100055ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100055ac = trunc i32 %v0_100055ac to i16
  %v3_100055ac = add i32 %v2_100055a4, 2
  %v4_100055ac = inttoptr i32 %v3_100055ac to i16*
  store i16 %v1_100055ac, i16* %v4_100055ac, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100055b4 = load i32, i32* @r21, align 4
  %v2_100055b4 = add i32 %v2_100055a4, 4
  %v3_100055b4 = inttoptr i32 %v2_100055b4 to i32*
  store i32 %v0_100055b4, i32* %v3_100055b4, align 4
  store i32 268457404, i32* @lr, align 4
  %v6_100055b8 = call i32 @function_1000b4ec(i32 %v0_100055a0, i32 %v0_10005590, i32 %v0_1000559c, i32 16384, i32 %v2_100055a4, i32 16)
  store i32 %v6_100055b8, i32* %r3.global-to-local, align 4
  %v3_100055bc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100055bc, i32* %r9.global-to-local, align 4
  %v1_100055c0 = add i32 %v3_100055bc, 1
  store i32 %v1_100055c0, i32* %r0.global-to-local, align 4
  %v1_100055c4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100055c4 = icmp slt i32 %v1_100055c0, %v1_100055c4
  %v4_100055c4 = icmp eq i32 %v1_100055c0, %v1_100055c4
  store i1 %v4_100055c4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100055c0, i32* %stack_var_-2184, align 4
  br i1 %v2_100055c4, label %dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge, label %dec_label_pc_100055d0

dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge: ; preds = %dec_label_pc_10005550
  %v0_10005520.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000551c

dec_label_pc_100055d0:                            ; preds = %dec_label_pc_10005550
  %v0_100055d0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100055d0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100055d0 = or i1 %v0_100055d0, %v1_100055d0
  br i1 %v2_100055d0, label %dec_label_pc_100054d8.preheader, label %dec_label_pc_100054dc

dec_label_pc_100055d8:                            ; preds = %dec_label_pc_1000551c
  %v0_100055d8 = call i32 @function_10006fa8()
  %v1_100055d8 = trunc i32 %v0_100055d8 to i16
  store i32 %v0_100055d8, i32* %r3.global-to-local, align 4
  %v3_100055dc = load i32, i32* @r29, align 4
  %v4_100055dc = add i32 %v3_100055dc, 4
  %v5_100055dc = inttoptr i32 %v4_100055dc to i16*
  store i16 %v1_100055d8, i16* %v5_100055dc, align 2
  %v0_100055e0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100055e0, label %dec_label_pc_100055e4, label %dec_label_pc_1000553c

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_100055d8, %dec_label_pc_10005538
  %v0_100055e4 = call i32 @function_10006fa8()
  %v1_100055e4 = trunc i32 %v0_100055e4 to i16
  store i32 %v0_100055e4, i32* %r3.global-to-local, align 4
  %v0_100055e8 = load i32, i32* @r26, align 4
  %v1_100055e8 = mul i32 %v0_100055e8, 16
  %v2_100055e8 = udiv i32 %v0_100055e8, 268435456
  %v3_100055e8 = or i32 %v2_100055e8, %v1_100055e8
  store i32 %v3_100055e8, i32* %r26.global-to-local, align 4
  %v1_100055ec = call %0 @__asm_mtcrf(i32 1, i32 %v3_100055e8)
  %v1_100055f0 = mul nuw i32 %v2_100055e8, 268435456
  %v2_100055f0 = urem i32 %v0_100055e8, 268435456
  %v3_100055f0 = or i32 %v1_100055f0, %v2_100055f0
  store i32 %v3_100055f0, i32* @r26, align 4
  %v3_100055f4 = load i32, i32* @r29, align 4
  %v4_100055f4 = add i32 %v3_100055f4, 20
  %v5_100055f4 = inttoptr i32 %v4_100055f4 to i16*
  store i16 %v1_100055e4, i16* %v5_100055f4, align 2
  %v0_100055f8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100055f8, label %dec_label_pc_100055fc, label %dec_label_pc_1000554c

dec_label_pc_100055fc:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_1000553c
  %v0_100055fc = call i32 @function_10006fa8()
  %v1_100055fc = trunc i32 %v0_100055fc to i16
  store i32 %v0_100055fc, i32* %r3.global-to-local, align 4
  %v3_10005600 = load i32, i32* @r28, align 4
  %v4_10005600 = add i32 %v3_10005600, 2
  %v5_10005600 = inttoptr i32 %v4_10005600 to i16*
  store i16 %v1_100055fc, i16* %v5_10005600, align 2
  %v0_10005604 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005604, label %dec_label_pc_10005608, label %dec_label_pc_10005550

dec_label_pc_10005608:                            ; preds = %dec_label_pc_100055fc, %dec_label_pc_1000554c
  %v0_10005608 = call i32 @function_10006fa8()
  %v1_10005608 = trunc i32 %v0_10005608 to i16
  store i32 %v0_10005608, i32* %r3.global-to-local, align 4
  %v3_1000560c = load i32, i32* @r29, align 4
  %v4_1000560c = add i32 %v3_1000560c, 28
  %v5_1000560c = inttoptr i32 %v4_1000560c to i16*
  store i16 %v1_10005608, i16* %v5_1000560c, align 2
  br label %dec_label_pc_10005550

dec_label_pc_10005620:                            ; preds = %dec_label_pc_10005330
  %v0_10005620 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10005620, i32* %r3.global-to-local, align 4
  store i32 268457512, i32* @lr, align 4
  %v0_10005624 = call i32 @function_1000a79c()
  store i32 %v0_10005624, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005628

dec_label_pc_10005628:                            ; preds = %dec_label_pc_10005308, %dec_label_pc_10005300, %dec_label_pc_10005620
  store i32 %v0_10005054, i32* %r0.global-to-local, align 4
  %v1_1000563c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10005044)
  store i32 %v0_10005074, i32* %r24.global-to-local, align 4
  store i32 %v0_10005078, i32* %r25.global-to-local, align 4
  store i32 %v0_1000507c, i32* %r26.global-to-local, align 4
  store i32 %v0_10005080, i32* %r27.global-to-local, align 4
  store i32 %v0_10005084, i32* %r28.global-to-local, align 4
  store i32 %v0_100050a8, i32* %r30.global-to-local, align 4
  store i32 %v0_10005094, i32* %r31.global-to-local, align 4
  %v0_10005684 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005684

dec_label_pc_10005688:                            ; preds = %dec_label_pc_1000529c
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10005300

dec_label_pc_10005694:                            ; preds = %dec_label_pc_100052b4
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10005300

dec_label_pc_100056a0:                            ; preds = %dec_label_pc_100052ac
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10005300

; uselistorder directives
  uselistorder i32 %v0_10005608, { 1, 0 }
  uselistorder i32 %v0_100055fc, { 1, 0 }
  uselistorder i32 %v0_100055e8, { 2, 1, 0 }
  uselistorder i32 %v0_100055e4, { 1, 0 }
  uselistorder i32 %v0_100055d8, { 1, 0 }
  uselistorder i1 %v1_100055d0, { 1, 0 }
  uselistorder i1 %v0_100055d0, { 1, 0 }
  uselistorder i32 %v1_100055c0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10005584, { 1, 0 }
  uselistorder i32 %v0_1000553c, { 2, 1, 0 }
  uselistorder i32 %v0_10005520, { 2, 1, 0 }
  uselistorder i32 %v1_10005514, { 1, 0 }
  uselistorder i32 %v0_1000549c, { 2, 0, 1 }
  uselistorder i32 %v1_1000548c, { 1, 0 }
  uselistorder i32 %v1_10005484, { 0, 2, 1 }
  uselistorder i32 %v1_100053b8, { 1, 0 }
  uselistorder i32 %v1_100053b0, { 1, 0 }
  uselistorder i32 %v2_10005614, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10005614, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10005370, { 1, 0 }
  uselistorder i32 %v0_10005300, { 1, 0, 2 }
  uselistorder i1 %v2_100052b4, { 1, 0 }
  uselistorder i32 %v1_100052a0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10005298, { 2, 1, 0 }
  uselistorder i32 %v1_10005280, { 1, 2, 0 }
  uselistorder i32 %v1_1000525c, { 1, 0 }
  uselistorder i32 %v0_10005250, { 1, 0 }
  uselistorder i32 %v2_1000524c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_1000522c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10005224, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_100051cc, { 1, 0, 2, 3 }
  uselistorder i8 %v5_1000510c, { 1, 0 }
  uselistorder i8 %v5_100050d4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 3, 2, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i32 47, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32)* @function_1000b2cc, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_1000235c, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 86, 87, 88, 89, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91 }
  uselistorder label %dec_label_pc_10005628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005550, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100054dc, { 1, 0 }
  uselistorder label %dec_label_pc_100054d8, { 1, 0 }
  uselistorder label %dec_label_pc_100054d8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005404, { 1, 0 }
  uselistorder label %dec_label_pc_10005300, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_1000527c, { 1, 0 }
}

define i32 @function_100056ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100056ac:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_100056e0, label %dec_label_pc_100056b8

dec_label_pc_100056b8:                            ; preds = %dec_label_pc_100056ac
  %v1_100056b8 = add i32 %arg1, -2
  %v1_100056bc = udiv i32 %v1_100056b8, 2
  %v1_100056c0 = add nuw i32 %v1_100056bc, 1
  %v0_100056cc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100056cc

dec_label_pc_100056cc:                            ; preds = %dec_label_pc_100056cc, %dec_label_pc_100056b8
  %v0_100056dc = phi i32 [ %v1_100056dc, %dec_label_pc_100056cc ], [ %v1_100056c0, %dec_label_pc_100056b8 ]
  %v0_100056d8 = phi i32 [ %v2_100056d8, %dec_label_pc_100056cc ], [ 0, %dec_label_pc_100056b8 ]
  %v0_100056d4 = phi i32 [ %v1_100056d4, %dec_label_pc_100056cc ], [ %v0_100056cc.pre, %dec_label_pc_100056b8 ]
  %v1_100056cc = inttoptr i32 %v0_100056d4 to i16*
  %v2_100056cc = load i16, i16* %v1_100056cc, align 2
  %v3_100056cc = zext i16 %v2_100056cc to i32
  %v1_100056d4 = add i32 %v0_100056d4, 2
  store i32 %v1_100056d4, i32* @r3, align 4
  %v2_100056d8 = add i32 %v3_100056cc, %v0_100056d8
  %v1_100056dc = add i32 %v0_100056dc, -1
  %v2_100056dc = icmp eq i32 %v1_100056dc, 0
  br i1 %v2_100056dc, label %dec_label_pc_100056e0.loopexit, label %dec_label_pc_100056cc

dec_label_pc_100056e0.loopexit:                   ; preds = %dec_label_pc_100056cc
  %tmp11 = mul i32 %v1_100056bc, -2
  %tmp10 = add i32 %v1_100056b8, %tmp11
  br label %dec_label_pc_100056e0

dec_label_pc_100056e0:                            ; preds = %dec_label_pc_100056e0.loopexit, %dec_label_pc_100056ac
  %v0_100056ec = phi i32 [ 0, %dec_label_pc_100056ac ], [ %v2_100056d8, %dec_label_pc_100056e0.loopexit ]
  %v0_100056e0 = phi i32 [ %arg1, %dec_label_pc_100056ac ], [ %tmp10, %dec_label_pc_100056e0.loopexit ]
  %v3_100056e0 = icmp eq i32 %v0_100056e0, 1
  br i1 %v3_100056e0, label %dec_label_pc_100056e8, label %dec_label_pc_100056f0

dec_label_pc_100056e8:                            ; preds = %dec_label_pc_100056e0
  %v0_100056e8 = load i32, i32* @r3, align 4
  %v1_100056e8 = add i32 %v0_100056e8, 1
  %v2_100056e8 = inttoptr i32 %v1_100056e8 to i8*
  %v3_100056e8 = load i8, i8* %v2_100056e8, align 1
  %v4_100056e8 = zext i8 %v3_100056e8 to i32
  %v2_100056ec = add i32 %v4_100056e8, %v0_100056ec
  br label %dec_label_pc_100056f0

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056e0, %dec_label_pc_100056e8
  %v0_100056f0 = phi i32 [ %v0_100056ec, %dec_label_pc_100056e0 ], [ %v2_100056ec, %dec_label_pc_100056e8 ]
  %v1_100056f0 = urem i32 %v0_100056f0, 65536
  %v1_100056f4 = udiv i32 %v0_100056f0, 65536
  %v2_100056f8 = add nuw nsw i32 %v1_100056f0, %v1_100056f4
  %v1_100056fc = udiv i32 %v2_100056f8, 65536
  %v2_10005700 = add nuw nsw i32 %v1_100056fc, %v2_100056f8
  %v1_10005704 = urem i32 %v2_10005700, 65536
  %v1_10005708 = xor i32 %v1_10005704, 65535
  ret i32 %v1_10005708

; uselistorder directives
  uselistorder i32 %v2_100056f8, { 1, 0 }
  uselistorder i32 %v0_100056ec, { 1, 0 }
  uselistorder i32 %v1_100056dc, { 1, 0 }
  uselistorder i32 %v1_100056d4, { 1, 0 }
  uselistorder label %dec_label_pc_100056f0, { 1, 0 }
}

define i32 @function_10005710(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10005710:
  %r0.global-to-local = alloca i32, align 4
  %v1_10005714 = add i32 %arg1, 12
  %v2_10005714 = inttoptr i32 %v1_10005714 to i32*
  %v3_10005714 = load i32, i32* %v2_10005714, align 4
  %v1_10005718 = add i32 %arg1, 16
  %v2_10005718 = inttoptr i32 %v1_10005718 to i32*
  %v3_10005718 = load i32, i32* %v2_10005718, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10005754, label %dec_label_pc_10005720

dec_label_pc_10005720:                            ; preds = %dec_label_pc_10005710
  %v1_10005720 = add i32 %arg3, -2
  %v1_10005728 = icmp slt i32 %v1_10005720, 0
  %v1_1000572c = udiv i32 %v1_10005720, 2
  %v1_10005730 = add nuw i32 %v1_1000572c, 1
  br i1 %v1_10005728, label %dec_label_pc_100057bc, label %dec_label_pc_1000573c.preheader

dec_label_pc_1000573c.preheader:                  ; preds = %dec_label_pc_100057bc, %dec_label_pc_10005720
  %v0_100057504 = phi i32 [ 1, %dec_label_pc_100057bc ], [ %v1_10005730, %dec_label_pc_10005720 ]
  %v0_1000573c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000573c

dec_label_pc_1000573c:                            ; preds = %dec_label_pc_1000573c.preheader, %dec_label_pc_1000573c
  %v0_10005750 = phi i32 [ %v0_100057504, %dec_label_pc_1000573c.preheader ], [ %v1_10005750, %dec_label_pc_1000573c ]
  %v0_1000574c = phi i32 [ 0, %dec_label_pc_1000573c.preheader ], [ %v2_1000574c, %dec_label_pc_1000573c ]
  %v0_10005744 = phi i32 [ %v0_1000573c.pre, %dec_label_pc_1000573c.preheader ], [ %v1_10005744, %dec_label_pc_1000573c ]
  %v1_1000573c = inttoptr i32 %v0_10005744 to i16*
  %v2_1000573c = load i16, i16* %v1_1000573c, align 2
  %v3_1000573c = zext i16 %v2_1000573c to i32
  store i32 %v3_1000573c, i32* %r0.global-to-local, align 4
  %v1_10005744 = add i32 %v0_10005744, 2
  %v2_1000574c = add i32 %v3_1000573c, %v0_1000574c
  %v1_10005750 = add i32 %v0_10005750, -1
  %v2_10005750 = icmp eq i32 %v1_10005750, 0
  br i1 %v2_10005750, label %dec_label_pc_10005754.loopexit, label %dec_label_pc_1000573c

dec_label_pc_10005754.loopexit:                   ; preds = %dec_label_pc_1000573c
  %tmp14 = mul i32 %v0_100057504, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10005748 = icmp eq i32 %tmp13, 1
  br i1 %v3_10005748, label %dec_label_pc_100057a8, label %dec_label_pc_10005758

dec_label_pc_10005754:                            ; preds = %dec_label_pc_10005710
  %v3_10005710 = icmp eq i32 %arg3, 1
  br i1 %v3_10005710, label %dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge, label %dec_label_pc_10005758

dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge: ; preds = %dec_label_pc_10005754
  %v0_100057a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100057a8

dec_label_pc_10005758:                            ; preds = %dec_label_pc_10005754.loopexit, %dec_label_pc_10005754, %dec_label_pc_100057a8
  %v0_10005770 = phi i32 [ 0, %dec_label_pc_10005754 ], [ %v2_100057ac, %dec_label_pc_100057a8 ], [ %v2_1000574c, %dec_label_pc_10005754.loopexit ]
  %v1_10005758 = urem i32 %v3_10005714, 65536
  %v1_1000575c = udiv i32 %v3_10005714, 65536
  %v2_10005760 = add nuw nsw i32 %v1_10005758, %v1_1000575c
  store i32 %v2_10005760, i32* %r0.global-to-local, align 4
  %v1_10005764 = urem i32 %v3_10005718, 65536
  %v1_10005768 = add i32 %arg1, 9
  %v2_10005768 = inttoptr i32 %v1_10005768 to i8*
  %v3_10005768 = load i8, i8* %v2_10005768, align 1
  %v4_10005768 = zext i8 %v3_10005768 to i32
  %v1_1000576c = udiv i32 %v3_10005718, 65536
  %v2_10005770 = add i32 %v0_10005770, %v1_1000576c
  %v2_10005778 = add i32 %v2_10005770, %v4_10005768
  %v2_10005774 = add i32 %v2_10005760, %arg2
  %v2_1000577c = add i32 %v2_10005774, %v1_10005764
  %v2_10005780 = add i32 %v2_1000577c, %v2_10005778
  store i32 %v2_10005780, i32* %r0.global-to-local, align 4
  %v1_10005784 = call i32 @__asm_rlwinm.(i32 %v2_10005780, i32 16, i32 16, i32 31)
  %v4_10005784 = icmp eq i32 %v1_10005784, 0
  br i1 %v4_10005784, label %dec_label_pc_1000579c, label %dec_label_pc_1000578c

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005758, %dec_label_pc_1000578c
  %v1_10005790 = phi i32 [ %v1_10005794, %dec_label_pc_1000578c ], [ %v1_10005784, %dec_label_pc_10005758 ]
  %v0_1000578c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000578c = urem i32 %v0_1000578c, 65536
  %v2_10005790 = add i32 %v1_1000578c, %v1_10005790
  store i32 %v2_10005790, i32* %r0.global-to-local, align 4
  %v1_10005794 = call i32 @__asm_rlwinm.(i32 %v2_10005790, i32 16, i32 16, i32 31)
  %v4_10005794 = icmp eq i32 %v1_10005794, 0
  br i1 %v4_10005794, label %dec_label_pc_1000579c, label %dec_label_pc_1000578c

dec_label_pc_1000579c:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005758
  %v0_1000579c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000579c = urem i32 %v0_1000579c, 65536
  %v1_100057a0 = xor i32 %v1_1000579c, 65535
  ret i32 %v1_100057a0

dec_label_pc_100057a8:                            ; preds = %dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge, %dec_label_pc_10005754.loopexit
  %v0_100057a8 = phi i32 [ %v1_10005744, %dec_label_pc_10005754.loopexit ], [ %v0_100057a8.pre, %dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge ]
  %v0_100057ac10 = phi i32 [ %v2_1000574c, %dec_label_pc_10005754.loopexit ], [ 0, %dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge ]
  %v1_100057a8 = inttoptr i32 %v0_100057a8 to i8*
  %v2_100057a8 = load i8, i8* %v1_100057a8, align 1
  %v3_100057a8 = zext i8 %v2_100057a8 to i32
  store i32 %v3_100057a8, i32* %r0.global-to-local, align 4
  %v2_100057ac = add i32 %v3_100057a8, %v0_100057ac10
  br label %dec_label_pc_10005758

dec_label_pc_100057bc:                            ; preds = %dec_label_pc_10005720
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000573c.preheader

; uselistorder directives
  uselistorder i32 %v1_10005794, { 1, 0 }
  uselistorder i32 %v1_10005750, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000578c, { 1, 0 }
  uselistorder label %dec_label_pc_10005758, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000573c, { 1, 0 }
}

define i32 @function_100057c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100057c8:
  %v3_100057dc = load i32, i32* @global_var_1001e194.81, align 4
  store i32 268457956, i32* @lr, align 4
  %v2_100057e0 = call i32 @function_1000a8bc(i32 %v3_100057dc, i32 9)
  ret i32 %v2_100057e0
}

define i32 @function_100057f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100057f4:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10005804 = load i32, i32* @r27, align 4
  %v2_10005808 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10005808, i32* @r27, align 4
  %v2_10005810 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10005814 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10005824 = load i32, i32* @r25, align 4
  %v2_10005828 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_1000582c = load i32, i32* @r30, align 4
  %v2_10005830 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10005830, i32* @r30, align 4
  %v0_10005834 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_1000583c = load i32, i32* @r23, align 4
  %v0_10005844 = load i32, i32* @r28, align 4
  store i32 268458060, i32* @lr, align 4
  %v3_10005848 = call i32 @function_1000b03c(i32 %v2_10005808, i32 0, i32 4096)
  store i32 268458076, i32* @lr, align 4
  %v3_10005858 = call i32 @function_1000b03c(i32 %v2_10005810, i32 0, i32 4096)
  store i32 268458092, i32* @lr, align 4
  %v3_10005868 = call i32 @function_1000b03c(i32 %v2_10005830, i32 0, i32 513)
  %v0_10005874 = load i32, i32* @r29, align 4
  %v0_10005878 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005878, i32* %stack_var_-8792, align 4
  %v3_10005888 = trunc i32 %v0_10005874 to i8
  %v4_10005888 = call i32 @function_1000a470(i8 %v3_10005888, i32 16, i32 %v2_10005828)
  store i32 268458132, i32* @lr, align 4
  %v2_10005890 = call i32 @function_10009f10(i8* nonnull %stack_var_-8776)
  %v3_10005894 = icmp eq i32 %v2_10005890, 2
  br i1 %v3_10005894, label %dec_label_pc_10005dc4, label %dec_label_pc_1000589c

dec_label_pc_1000589c:                            ; preds = %dec_label_pc_100057f4, %dec_label_pc_10005dc4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100058a8.82 to i32), i32* @lr, align 4
  %v1_100058a4 = call i32 @function_1000968c(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_100058b0.83 to i32), i32* @lr, align 4
  %v1_100058ac = call i32 @function_1000968c(i32 7)
  store i32 268458168, i32* @lr, align 4
  %v1_100058b4 = call i32 @function_1000968c(i32 9)
  store i32 268458188, i32* @lr, align 4
  %v3_100058c8 = call i32 @function_1000a904(i32 ptrtoint ([14 x i8]* @global_var_1000d248.84 to i32), i32 0)
  %v3_100058cc = icmp eq i32 %v3_100058c8, -1
  store i32 %v3_100058c8, i32* @r28, align 4
  br i1 %v3_100058cc, label %dec_label_pc_10005d18, label %dec_label_pc_100058d8

dec_label_pc_100058d8:                            ; preds = %dec_label_pc_1000589c
  %v2_100058d8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_100058d8, i32* %r26.global-to-local, align 4
  store i32 268458220, i32* @lr, align 4
  %v4_100058e889 = call i32 @function_1000a170(i8* nonnull %stack_var_-8760, i32 512, i32 %v3_100058c8)
  %v3_100058ec92 = icmp eq i32 %v4_100058e889, 0
  br i1 %v3_100058ec92, label %dec_label_pc_10005a98.loopexit, label %dec_label_pc_100058f4

dec_label_pc_100058f4:                            ; preds = %dec_label_pc_100058d8, %dec_label_pc_100058dc.backedge
  %v3_100058f4 = load i8, i8* %stack_var_-8760, align 1
  %v3_100058f8 = icmp eq i8 %v3_100058f4, 0
  br i1 %v3_100058f8, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_10005900

dec_label_pc_100058dc.backedge:                   ; preds = %dec_label_pc_10005914, %dec_label_pc_100058f4, %dec_label_pc_10005984, %dec_label_pc_10005a1c, %dec_label_pc_10005a6c
  %v0_100058e4.pre = load i32, i32* @r28, align 4
  store i32 268458220, i32* @lr, align 4
  %v4_100058e8 = call i32 @function_1000a170(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_100058e4.pre)
  %v3_100058ec = icmp eq i32 %v4_100058e8, 0
  br i1 %v3_100058ec, label %dec_label_pc_10005a98.loopexit, label %dec_label_pc_100058f4

dec_label_pc_10005900:                            ; preds = %dec_label_pc_100058f4
  %v3_10005900 = icmp eq i8 %v3_100058f4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10005900, label %dec_label_pc_10005934, label %dec_label_pc_10005910

dec_label_pc_10005910:                            ; preds = %dec_label_pc_10005900
  %v1_10005918.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %dec_label_pc_10005928, %dec_label_pc_10005910
  %v0_10005914 = phi i32 [ %v1_10005914, %dec_label_pc_10005928 ], [ 0, %dec_label_pc_10005910 ]
  %v1_10005914 = add i32 %v0_10005914, 1
  %v2_10005918 = add i32 %v1_10005914, %v1_10005918.pre
  %v3_10005918 = inttoptr i32 %v2_10005918 to i8*
  %v4_10005918 = load i8, i8* %v3_10005918, align 1
  %v3_1000591c = icmp eq i8 %v4_10005918, 0
  br i1 %v3_1000591c, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_10005928

dec_label_pc_10005928:                            ; preds = %dec_label_pc_10005914
  %v3_10005920 = icmp eq i8 %v4_10005918, 58
  br i1 %v3_10005920, label %dec_label_pc_1000592c, label %dec_label_pc_10005914

dec_label_pc_1000592c:                            ; preds = %dec_label_pc_10005928
  %v1_1000592c = add i32 %v0_10005914, 4
  store i32 %v1_1000592c, i32* @r31, align 4
  %v1_10005930 = add i32 %v0_10005914, 3
  br label %dec_label_pc_10005934

dec_label_pc_10005934:                            ; preds = %dec_label_pc_10005900, %dec_label_pc_1000592c
  %v1_1000598c = phi i32 [ 2, %dec_label_pc_10005900 ], [ %v1_10005930, %dec_label_pc_1000592c ]
  %v0_10005934 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005934 = add i32 %v0_10005934, %v1_1000598c
  %v1_1000593c = add i32 %v2_10005934, 32
  %v2_1000593c = inttoptr i32 %v1_1000593c to i8*
  %v3_1000593c = load i8, i8* %v2_1000593c, align 1
  %v3_10005940 = icmp eq i8 %v3_1000593c, 0
  br i1 %v3_10005940, label %dec_label_pc_10005984, label %dec_label_pc_10005948

dec_label_pc_10005948:                            ; preds = %dec_label_pc_10005934
  %v3_10005948 = icmp eq i8 %v3_1000593c, 32
  %v1_1000594c = add i32 %v1_1000598c, 1
  store i32 %v1_1000594c, i32* @r31, align 4
  br i1 %v3_10005948, label %dec_label_pc_10005984, label %dec_label_pc_10005954

dec_label_pc_10005954:                            ; preds = %dec_label_pc_10005948
  %v0_1000595c = load i32, i32* @r30, align 4
  %v2_1000595c = add i32 %v0_1000595c, %v1_1000594c
  br label %dec_label_pc_10005968

dec_label_pc_10005968:                            ; preds = %dec_label_pc_10005968, %dec_label_pc_10005954
  %v0_1000596c = phi i32 [ %v1_1000596c, %dec_label_pc_10005968 ], [ %v1_1000598c, %dec_label_pc_10005954 ]
  %v0_10005970 = phi i32 [ %v1_10005970, %dec_label_pc_10005968 ], [ %v2_1000595c, %dec_label_pc_10005954 ]
  %v1_10005968 = inttoptr i32 %v0_10005970 to i8*
  %v2_10005968 = load i8, i8* %v1_10005968, align 1
  %v1_1000596c = add i32 %v0_1000596c, 1
  %v1_10005970 = add i32 %v0_10005970, 1
  %tmp60 = or i8 %v2_10005968, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10005980, label %dec_label_pc_10005968

dec_label_pc_10005980:                            ; preds = %dec_label_pc_10005968
  %v1_10005980 = add i32 %v0_1000596c, 2
  store i32 %v1_10005980, i32* @r31, align 4
  br label %dec_label_pc_10005984

dec_label_pc_10005984:                            ; preds = %dec_label_pc_10005948, %dec_label_pc_10005934, %dec_label_pc_10005980
  %v1_10005984 = phi i32 [ %v1_1000598c, %dec_label_pc_10005948 ], [ %v1_1000598c, %dec_label_pc_10005934 ], [ %v1_1000596c, %dec_label_pc_10005980 ]
  %v2_10005984 = add i32 %v1_10005984, %v0_10005934
  %v0_1000598c = load i32, i32* @r30, align 4
  %v2_1000598c = add i32 %v0_1000598c, %v1_1000598c
  store i32 %v2_1000598c, i32* @r29, align 4
  %v3_10005990 = add i32 %v2_10005984, 32
  %v4_10005990 = inttoptr i32 %v3_10005990 to i8*
  store i8 0, i8* %v4_10005990, align 1
  %v0_10005994 = load i32, i32* @r29, align 4
  store i32 268458396, i32* @lr, align 4
  %v1_10005998 = inttoptr i32 %v0_10005994 to i8*
  %v2_10005998 = call i32 @function_10009f10(i8* %v1_10005998)
  %v0_100059a4 = load i32, i32* @r29, align 4
  %v3_100059a8 = inttoptr i32 %v0_100059a4 to i8*
  %v4_100059a8 = call i32 @function_1000a2c0(i8* %v3_100059a8, i32 %v2_10005998, i32 %v2_10005828)
  %v3_100059b0 = icmp eq i32 %v4_100059a8, -1
  br i1 %v3_100059b0, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_100059bc.preheader

dec_label_pc_100059bc.preheader:                  ; preds = %dec_label_pc_10005984
  %v0_100059bc.pre = load i32, i32* @r31, align 4
  %v0_100059c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100059bc.outer

dec_label_pc_100059bc.outer:                      ; preds = %dec_label_pc_10005d68, %dec_label_pc_100059bc.preheader
  %v0_100059d828.ph = phi i32 [ %v1_10005d50, %dec_label_pc_10005d68 ], [ 0, %dec_label_pc_100059bc.preheader ]
  %v0_100059bc.ph = phi i32 [ %v1_10005a7477, %dec_label_pc_10005d68 ], [ %v0_100059bc.pre, %dec_label_pc_100059bc.preheader ]
  %v0_10005a1c.ph = phi i32 [ 1, %dec_label_pc_10005d68 ], [ 0, %dec_label_pc_100059bc.preheader ]
  br label %dec_label_pc_100059bc

dec_label_pc_100059bc:                            ; preds = %dec_label_pc_100059bc.outer, %dec_label_pc_10005d58
  %v0_100059d828 = phi i32 [ %v1_10005d50, %dec_label_pc_10005d58 ], [ %v0_100059d828.ph, %dec_label_pc_100059bc.outer ]
  %v0_100059bc = phi i32 [ %v1_10005a7477, %dec_label_pc_10005d58 ], [ %v0_100059bc.ph, %dec_label_pc_100059bc.outer ]
  %v1_100059bc = add i32 %v0_100059bc, 1
  %v2_100059c4 = add i32 %v1_100059bc, %v0_100059c4.pre
  %v1_100059f068 = inttoptr i32 %v2_100059c4 to i8*
  %v2_100059f069 = load i8, i8* %v1_100059f068, align 1
  store i32 %v1_100059bc, i32* @r31, align 4
  %v3_100059f872 = icmp eq i8 %v2_100059f069, 0
  br i1 %v3_100059f872, label %dec_label_pc_10005a1c, label %dec_label_pc_10005a08

dec_label_pc_100059cc:                            ; preds = %dec_label_pc_10005a08
  %v3_100059fc80 = icmp eq i8 %v3_100059fc80.in, 9
  br i1 %v3_100059fc80, label %dec_label_pc_10005a0c, label %dec_label_pc_100059d8

dec_label_pc_100059d8:                            ; preds = %dec_label_pc_100059cc
  %v3_100059cc = icmp eq i32 %v0_100059cc76, 1
  br i1 %v3_100059cc, label %dec_label_pc_10005d50, label %dec_label_pc_100059e0

dec_label_pc_100059e0:                            ; preds = %dec_label_pc_100059d8, %dec_label_pc_10005d50
  %v0_100059e0 = phi i32 [ %v1_10005d50, %dec_label_pc_10005d50 ], [ %v0_10005a0c75, %dec_label_pc_100059d8 ]
  %v2_100059e0 = icmp sgt i32 %v0_100059e0, 6
  br i1 %v2_100059e0, label %dec_label_pc_10005a1c, label %dec_label_pc_100059ec

dec_label_pc_100059ec:                            ; preds = %dec_label_pc_10005a0c, %dec_label_pc_100059e0
  %v0_100059d827 = phi i32 [ %v0_10005a0c75, %dec_label_pc_10005a0c ], [ %v0_100059e0, %dec_label_pc_100059e0 ]
  %v0_100059cc25 = phi i32 [ 1, %dec_label_pc_10005a0c ], [ 0, %dec_label_pc_100059e0 ]
  %v0_100059f022 = add i32 %v0_10005a1479, 1
  %v1_100059ec = add i32 %v1_10005a7477, 1
  %v1_100059f0 = inttoptr i32 %v0_100059f022 to i8*
  %v2_100059f0 = load i8, i8* %v1_100059f0, align 1
  store i32 %v1_100059ec, i32* @r31, align 4
  %v3_100059f8 = icmp eq i8 %v2_100059f0, 0
  br i1 %v3_100059f8, label %dec_label_pc_10005a1c, label %dec_label_pc_10005a08

dec_label_pc_10005a08:                            ; preds = %dec_label_pc_100059bc, %dec_label_pc_100059ec
  %v3_100059fc80.in = phi i8 [ %v2_100059f0, %dec_label_pc_100059ec ], [ %v2_100059f069, %dec_label_pc_100059bc ]
  %v3_10005a0081.in = phi i8 [ %v2_100059f0, %dec_label_pc_100059ec ], [ %v2_100059f069, %dec_label_pc_100059bc ]
  %v0_10005a1479 = phi i32 [ %v0_100059f022, %dec_label_pc_100059ec ], [ %v2_100059c4, %dec_label_pc_100059bc ]
  %v1_10005a7477 = phi i32 [ %v1_100059ec, %dec_label_pc_100059ec ], [ %v1_100059bc, %dec_label_pc_100059bc ]
  %v0_100059cc76 = phi i32 [ %v0_100059cc25, %dec_label_pc_100059ec ], [ 0, %dec_label_pc_100059bc ]
  %v0_10005a0c75 = phi i32 [ %v0_100059d827, %dec_label_pc_100059ec ], [ %v0_100059d828, %dec_label_pc_100059bc ]
  %v3_10005a0081 = icmp eq i8 %v3_10005a0081.in, 32
  br i1 %v3_10005a0081, label %dec_label_pc_10005a0c, label %dec_label_pc_100059cc

dec_label_pc_10005a0c:                            ; preds = %dec_label_pc_10005a08, %dec_label_pc_100059cc
  %tmp62 = icmp slt i32 %v0_10005a0c75, 7
  br i1 %tmp62, label %dec_label_pc_100059ec, label %dec_label_pc_10005a1c

dec_label_pc_10005a1c:                            ; preds = %dec_label_pc_100059ec, %dec_label_pc_100059e0, %dec_label_pc_10005a0c, %dec_label_pc_100059bc
  %v1_10005a74.lcssa = phi i32 [ %v1_100059bc, %dec_label_pc_100059bc ], [ %v1_10005a7477, %dec_label_pc_10005a0c ], [ %v1_10005a7477, %dec_label_pc_100059e0 ], [ %v1_100059ec, %dec_label_pc_100059ec ]
  %v3_10005a1c = icmp eq i32 %v0_10005a1c.ph, 0
  br i1 %v3_10005a1c, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_10005a28

dec_label_pc_10005a28:                            ; preds = %dec_label_pc_10005a1c
  %v0_10005a28 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005a28 = add i32 %v0_10005a28, %v1_10005a74.lcssa
  %v1_10005a2c = add i32 %v2_10005a28, 32
  %v2_10005a2c = inttoptr i32 %v1_10005a2c to i8*
  %v3_10005a2c = load i8, i8* %v2_10005a2c, align 1
  %v3_10005a30 = icmp eq i8 %v3_10005a2c, 0
  br i1 %v3_10005a30, label %dec_label_pc_10005a6c, label %dec_label_pc_10005a38

dec_label_pc_10005a38:                            ; preds = %dec_label_pc_10005a28
  %v3_10005a38 = icmp eq i8 %v3_10005a2c, 32
  br i1 %v3_10005a38, label %dec_label_pc_10005a6c, label %dec_label_pc_10005a40

dec_label_pc_10005a40:                            ; preds = %dec_label_pc_10005a38
  %v1_10005a40 = add i32 %v1_10005a74.lcssa, 1
  %v2_10005a44 = add i32 %v1_10005a40, %v0_100059c4.pre
  br label %dec_label_pc_10005a54

dec_label_pc_10005a50:                            ; preds = %dec_label_pc_10005a54
  %v1_10005a5c = add i32 %v0_10005a5c, 1
  %v1_10005a50 = add i32 %v0_10005a50, 1
  br label %dec_label_pc_10005a54

dec_label_pc_10005a54:                            ; preds = %dec_label_pc_10005a40, %dec_label_pc_10005a50
  %v0_10005a50 = phi i32 [ %v1_10005a40, %dec_label_pc_10005a40 ], [ %v1_10005a50, %dec_label_pc_10005a50 ]
  %v0_10005a5c = phi i32 [ %v2_10005a44, %dec_label_pc_10005a40 ], [ %v1_10005a5c, %dec_label_pc_10005a50 ]
  %v1_10005a54 = inttoptr i32 %v0_10005a5c to i8*
  %v2_10005a54 = load i8, i8* %v1_10005a54, align 1
  store i32 %v0_10005a50, i32* %r31.global-to-local, align 4
  %tmp63 = or i8 %v2_10005a54, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10005a6c, label %dec_label_pc_10005a50

dec_label_pc_10005a6c:                            ; preds = %dec_label_pc_10005a54, %dec_label_pc_10005a38, %dec_label_pc_10005a28
  %v1_10005a6c = phi i32 [ %v1_10005a74.lcssa, %dec_label_pc_10005a38 ], [ %v1_10005a74.lcssa, %dec_label_pc_10005a28 ], [ %v0_10005a50, %dec_label_pc_10005a54 ]
  %v2_10005a6c = add i32 %v1_10005a6c, %v0_10005a28
  %v2_10005a74 = add i32 %v1_10005a74.lcssa, %v0_100059c4.pre
  store i32 %v2_10005a74, i32* @r31, align 4
  %v3_10005a78 = add i32 %v2_10005a6c, 32
  %v4_10005a78 = inttoptr i32 %v3_10005a78 to i8*
  store i8 0, i8* %v4_10005a78, align 1
  %v0_10005a7c = load i32, i32* @r31, align 4
  store i32 268458628, i32* @lr, align 4
  %v1_10005a80 = inttoptr i32 %v0_10005a7c to i8*
  %v2_10005a80 = call i32 @function_10009f10(i8* %v1_10005a80)
  %v2_10005a84 = icmp sgt i32 %v2_10005a80, 15
  br i1 %v2_10005a84, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_10005a8c

dec_label_pc_10005a8c:                            ; preds = %dec_label_pc_10005a6c
  %v0_10005a8c = load i32, i32* @r31, align 4
  store i32 %v2_100058d8, i32* @r3, align 4
  %v2_10005a94 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10005a94 = call i32 @function_10009f38(i8* %v2_10005a94, i32 %v0_10005a8c)
  br label %dec_label_pc_10005a98

dec_label_pc_10005a98.loopexit:                   ; preds = %dec_label_pc_100058dc.backedge, %dec_label_pc_100058d8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10005a98

dec_label_pc_10005a98:                            ; preds = %dec_label_pc_10005a98.loopexit, %dec_label_pc_10005a8c
  %v1_10005aa4.pre-phi = phi i8* [ %.pre, %dec_label_pc_10005a98.loopexit ], [ %v2_10005a94, %dec_label_pc_10005a8c ]
  store i32 268458656, i32* @lr, align 4
  %v0_10005a9c = call i32 @function_1000a79c()
  store i32 268458664, i32* @lr, align 4
  %v2_10005aa4 = call i32 @function_10009f10(i8* %v1_10005aa4.pre-phi)
  %v3_10005aa8 = icmp eq i32 %v2_10005aa4, 0
  br i1 %v3_10005aa8, label %dec_label_pc_10005d70, label %dec_label_pc_10005ab0

dec_label_pc_10005ab0:                            ; preds = %dec_label_pc_10005a98
  %v3_10005ab8 = call i32 @function_100095d8(i32 6, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268458692, i32* @lr, align 4
  %v1_10005ac0 = call i32 @function_1000ace8(i32 %v3_10005ab8)
  store i32 %v1_10005ac0, i32* @r23, align 4
  %v3_10005ac4 = icmp eq i32 %v1_10005ac0, 0
  br i1 %v3_10005ac4, label %dec_label_pc_10005cf8, label %dec_label_pc_10005acc

dec_label_pc_10005acc:                            ; preds = %dec_label_pc_10005ab0
  store i32 0, i32* @r28, align 4
  store i32 268458712, i32* @lr, align 4
  %v1_10005ad47 = inttoptr i32 %v1_10005ac0 to i32*
  %v2_10005ad48 = call i32 @function_1000adf8(i32* %v1_10005ad47)
  %v3_10005ad811 = icmp eq i32 %v2_10005ad48, 0
  br i1 %v3_10005ad811, label %dec_label_pc_10005cec, label %dec_label_pc_10005ae0.preheader.lr.ph

dec_label_pc_10005ae0.preheader.lr.ph:            ; preds = %dec_label_pc_10005acc
  %v2_10005b14 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10005c84 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10005ae0.preheader

dec_label_pc_10005ad0.loopexit:                   ; preds = %dec_label_pc_10005ae8, %dec_label_pc_10005b00, %dec_label_pc_10005b68
  %v0_10005ad0 = load i32, i32* @r23, align 4
  store i32 268458712, i32* @lr, align 4
  %v1_10005ad4 = inttoptr i32 %v0_10005ad0 to i32*
  %v2_10005ad4 = call i32 @function_1000adf8(i32* %v1_10005ad4)
  %v3_10005ad8 = icmp eq i32 %v2_10005ad4, 0
  br i1 %v3_10005ad8, label %dec_label_pc_10005cec, label %dec_label_pc_10005ae0.preheader

dec_label_pc_10005ae0.preheader:                  ; preds = %dec_label_pc_10005ae0.preheader.lr.ph, %dec_label_pc_10005ad0.loopexit
  %v0_10005ae835 = phi i32 [ %v2_10005ad48, %dec_label_pc_10005ae0.preheader.lr.ph ], [ %v2_10005ad4, %dec_label_pc_10005ad0.loopexit ]
  br label %dec_label_pc_10005ae0

dec_label_pc_10005ae0:                            ; preds = %dec_label_pc_10005ae0.preheader, %dec_label_pc_10005cd4
  %v0_10005ae8 = phi i32 [ %v0_10005ae835, %dec_label_pc_10005ae0.preheader ], [ %v2_10005ce0, %dec_label_pc_10005cd4 ]
  %v0_10005ae0 = load i32, i32* @r28, align 4
  %v3_10005ae0 = icmp eq i32 %v0_10005ae0, 0
  br i1 %v3_10005ae0, label %dec_label_pc_10005ae8, label %dec_label_pc_10005cec

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005ae0
  %v1_10005ae8 = add i32 %v0_10005ae8, 11
  %v2_10005ae8 = inttoptr i32 %v1_10005ae8 to i8*
  %v3_10005ae8 = load i8, i8* %v2_10005ae8, align 1
  %v4_10005ae8 = zext i8 %v3_10005ae8 to i32
  store i32 %v1_10005ae8, i32* @r30, align 4
  %v1_10005af0 = add nuw nsw i32 %v4_10005ae8, 208
  %v1_10005af4 = urem i32 %v1_10005af0, 256
  %v2_10005af8 = icmp ugt i32 %v1_10005af4, 9
  br i1 %v2_10005af8, label %dec_label_pc_10005ad0.loopexit, label %dec_label_pc_10005b00

dec_label_pc_10005b00:                            ; preds = %dec_label_pc_10005ae8
  %v3_10005b08 = call i32 @function_100095d8(i32 6, i32* null)
  store i32 %v2_10005808, i32* @r3, align 4
  %v3_10005b14 = call i32 @function_10009f38(i8* %v2_10005b14, i32 %v3_10005b08)
  store i32 268458784, i32* @lr, align 4
  %v2_10005b1c = call i32 @function_10009f10(i8* %v2_10005b14)
  %v0_10005b20 = load i32, i32* @r30, align 4
  %v0_10005b24 = load i32, i32* @r27, align 4
  %v2_10005b24 = add i32 %v0_10005b24, %v2_10005b1c
  store i32 %v2_10005b24, i32* @r3, align 4
  %v2_10005b28 = inttoptr i32 %v2_10005b24 to i8*
  %v3_10005b28 = call i32 @function_10009f38(i8* %v2_10005b28, i32 %v0_10005b20)
  store i32 268458804, i32* @lr, align 4
  %v2_10005b30 = call i32 @function_10009f10(i8* %v2_10005b14)
  %v3_10005b40 = call i32 @function_100095d8(i32 7, i32* null)
  %v0_10005b48 = load i32, i32* @r27, align 4
  %v2_10005b48 = add i32 %v2_10005b30, %v0_10005b48
  store i32 %v2_10005b48, i32* @r3, align 4
  %v2_10005b4c = inttoptr i32 %v2_10005b48 to i8*
  %v3_10005b4c = call i32 @function_10009f38(i8* %v2_10005b4c, i32 %v3_10005b40)
  store i32 4096, i32* @r5, align 4
  store i32 268458848, i32* @lr, align 4
  %v3_10005b5c = call i32 @function_1000aa1c(i32 %v2_10005808, i32 %v2_10005810, i32 4096)
  %v3_10005b60 = icmp eq i32 %v3_10005b5c, -1
  br i1 %v3_10005b60, label %dec_label_pc_10005ad0.loopexit, label %dec_label_pc_10005b68

dec_label_pc_10005b68:                            ; preds = %dec_label_pc_10005b00
  %v3_10005b70 = call i32 @function_100095d8(i32 6, i32* null)
  store i32 %v2_10005808, i32* @r3, align 4
  %v3_10005b7c = call i32 @function_10009f38(i8* %v2_10005b14, i32 %v3_10005b70)
  store i32 268458888, i32* @lr, align 4
  %v2_10005b84 = call i32 @function_10009f10(i8* %v2_10005b14)
  %v0_10005b88 = load i32, i32* @r30, align 4
  %v0_10005b8c = load i32, i32* @r27, align 4
  %v2_10005b8c = add i32 %v0_10005b8c, %v2_10005b84
  store i32 %v2_10005b8c, i32* @r3, align 4
  %v2_10005b90 = inttoptr i32 %v2_10005b8c to i8*
  %v3_10005b90 = call i32 @function_10009f38(i8* %v2_10005b90, i32 %v0_10005b88)
  store i32 268458908, i32* @lr, align 4
  %v2_10005b98 = call i32 @function_10009f10(i8* %v2_10005b14)
  %v3_10005ba8 = call i32 @function_100095d8(i32 9, i32* null)
  %v0_10005bb0 = load i32, i32* @r27, align 4
  %v2_10005bb0 = add i32 %v2_10005b98, %v0_10005bb0
  store i32 %v2_10005bb0, i32* @r3, align 4
  %v2_10005bb4 = inttoptr i32 %v2_10005bb0 to i8*
  %v3_10005bb4 = call i32 @function_10009f38(i8* %v2_10005bb4, i32 %v3_10005ba8)
  store i32 268458944, i32* @lr, align 4
  %v1_10005bbc = call i32 @function_1000ace8(i32 %v2_10005808)
  store i32 %v1_10005bbc, i32* @r25, align 4
  %v3_10005bc0 = icmp eq i32 %v1_10005bbc, 0
  br i1 %v3_10005bc0, label %dec_label_pc_10005ad0.loopexit, label %dec_label_pc_10005bc8

dec_label_pc_10005bc8.loopexit:                   ; preds = %dec_label_pc_10005be8, %dec_label_pc_10005c84
  %v0_10005bc8.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_10005bc8

dec_label_pc_10005bc8:                            ; preds = %dec_label_pc_10005b68, %dec_label_pc_10005bc8.loopexit
  %v0_10005bc8 = phi i32 [ %v0_10005bc8.pre, %dec_label_pc_10005bc8.loopexit ], [ %v1_10005bbc, %dec_label_pc_10005b68 ]
  store i32 268458960, i32* @lr, align 4
  %v1_10005bcc = inttoptr i32 %v0_10005bc8 to i32*
  %v2_10005bcc = call i32 @function_1000adf8(i32* %v1_10005bcc)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_10005bcc, i32* @r31, align 4
  %v3_10005bd4 = icmp eq i32 %v2_10005bcc, 0
  %v0_10005bd8 = load i32, i32* @r28, align 4
  store i32 %v2_10005810, i32* @r3, align 4
  %v3_10005bd8.not = icmp ne i32 %v0_10005bd8, 0
  %brmerge = or i1 %v3_10005bd4, %v3_10005bd8.not
  br i1 %brmerge, label %dec_label_pc_10005cd4, label %dec_label_pc_10005be8

dec_label_pc_10005be8:                            ; preds = %dec_label_pc_10005bc8
  store i32 268458988, i32* @lr, align 4
  %v0_10005be8 = call i32 @function_10009fb8()
  %v3_10005bf4 = call i32 @function_100095d8(i32 6, i32* null)
  store i32 %v2_10005808, i32* @r3, align 4
  %v3_10005c00 = call i32 @function_10009f38(i8* %v2_10005b14, i32 %v3_10005bf4)
  store i32 268459020, i32* @lr, align 4
  %v2_10005c08 = call i32 @function_10009f10(i8* %v2_10005b14)
  %v0_10005c0c = load i32, i32* @r30, align 4
  %v0_10005c10 = load i32, i32* @r27, align 4
  %v2_10005c10 = add i32 %v0_10005c10, %v2_10005c08
  store i32 %v2_10005c10, i32* @r3, align 4
  %v2_10005c14 = inttoptr i32 %v2_10005c10 to i8*
  %v3_10005c14 = call i32 @function_10009f38(i8* %v2_10005c14, i32 %v0_10005c0c)
  store i32 268459040, i32* @lr, align 4
  %v2_10005c1c = call i32 @function_10009f10(i8* %v2_10005b14)
  %v3_10005c2c = call i32 @function_100095d8(i32 9, i32* null)
  %v0_10005c34 = load i32, i32* @r27, align 4
  %v2_10005c34 = add i32 %v2_10005c1c, %v0_10005c34
  store i32 %v2_10005c34, i32* @r3, align 4
  %v2_10005c38 = inttoptr i32 %v2_10005c34 to i8*
  %v3_10005c38 = call i32 @function_10009f38(i8* %v2_10005c38, i32 %v3_10005c2c)
  store i32 268459076, i32* @lr, align 4
  %v2_10005c40 = call i32 @function_10009f10(i8* %v2_10005b14)
  %v0_10005c4c = load i32, i32* @r27, align 4
  %v2_10005c4c = add i32 %v0_10005c4c, %v2_10005c40
  store i32 %v2_10005c4c, i32* @r3, align 4
  %v2_10005c50 = inttoptr i32 %v2_10005c4c to i8*
  %v3_10005c50 = call i32 @function_10009f38(i8* %v2_10005c50, i32 ptrtoint (i32* @global_var_1000d1f0.8 to i32))
  store i32 268459100, i32* @lr, align 4
  %v2_10005c58 = call i32 @function_10009f10(i8* %v2_10005b14)
  %v0_10005c5c = load i32, i32* @r31, align 4
  %v1_10005c5c = add i32 %v0_10005c5c, 11
  %v0_10005c60 = load i32, i32* @r27, align 4
  %v2_10005c60 = add i32 %v0_10005c60, %v2_10005c58
  store i32 %v2_10005c60, i32* @r3, align 4
  %v2_10005c64 = inttoptr i32 %v2_10005c60 to i8*
  %v3_10005c64 = call i32 @function_10009f38(i8* %v2_10005c64, i32 %v1_10005c5c)
  store i32 268459128, i32* @lr, align 4
  %v3_10005c74 = call i32 @function_1000aa1c(i32 %v2_10005808, i32 %v2_10005810, i32 4096)
  %v3_10005c78 = icmp eq i32 %v3_10005c74, -1
  br i1 %v3_10005c78, label %dec_label_pc_10005bc8.loopexit, label %dec_label_pc_10005c84

dec_label_pc_10005c84:                            ; preds = %dec_label_pc_10005be8
  store i32 268459144, i32* @lr, align 4
  %v2_10005c84 = call i32 @function_10009f10(i8* %v1_10005c84)
  %v4_10005c94 = call i32 @function_1000a2c0(i8* %v1_10005c84, i32 %v2_10005c84, i32 %v2_100058d8)
  %v3_10005c9c = icmp eq i32 %v4_10005c94, -1
  %v0_10005ca0 = load i32, i32* @r30, align 4
  store i32 %v0_10005ca0, i32* @r3, align 4
  br i1 %v3_10005c9c, label %dec_label_pc_10005bc8.loopexit, label %dec_label_pc_10005ca8

dec_label_pc_10005ca8:                            ; preds = %dec_label_pc_10005c84
  store i32 268459180, i32* @lr, align 4
  %v2_10005ca8 = call i32 @function_1000a038(i32 %v0_10005ca0, i32 10)
  store i32 268459188, i32* @lr, align 4
  %v2_10005cb0 = call i32 @function_1000a8bc(i32 %v2_10005ca8, i32 9)
  %v0_10005cb4 = load i32, i32* @r25, align 4
  store i32 268459196, i32* @lr, align 4
  %v1_10005cb8 = inttoptr i32 %v0_10005cb4 to i32*
  %v2_10005cb8 = call i32 @function_1000adf8(i32* %v1_10005cb8)
  store i32 1, i32* @r28, align 4
  store i32 %v2_10005cb8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005cd4

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_10005bc8, %dec_label_pc_10005ca8
  %v0_10005cd4 = load i32, i32* @r25, align 4
  store i32 268459228, i32* @lr, align 4
  %v1_10005cd8 = inttoptr i32 %v0_10005cd4 to i32*
  %v2_10005cd8 = call i32 @function_1000ac44(i32* %v1_10005cd8)
  %v0_10005cdc = load i32, i32* @r23, align 4
  store i32 268459236, i32* @lr, align 4
  %v1_10005ce0 = inttoptr i32 %v0_10005cdc to i32*
  %v2_10005ce0 = call i32 @function_1000adf8(i32* %v1_10005ce0)
  %v3_10005ce4 = icmp eq i32 %v2_10005ce0, 0
  br i1 %v3_10005ce4, label %dec_label_pc_10005cec, label %dec_label_pc_10005ae0

dec_label_pc_10005cec:                            ; preds = %dec_label_pc_10005ad0.loopexit, %dec_label_pc_10005cd4, %dec_label_pc_10005ae0, %dec_label_pc_10005acc
  %v0_10005cec = load i32, i32* @r23, align 4
  %v0_10005cf0 = load i32, i32* @r28, align 4
  %v1_10005cf0 = urem i32 %v0_10005cf0, 256
  store i32 %v1_10005cf0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005cf8.86 to i32), i32* @lr, align 4
  %v1_10005cf4 = inttoptr i32 %v0_10005cec to i32*
  %v2_10005cf4 = call i32 @function_1000ac44(i32* %v1_10005cf4)
  br label %dec_label_pc_10005cf8

dec_label_pc_10005cf8:                            ; preds = %dec_label_pc_10005ab0, %dec_label_pc_10005cec
  store i32 ptrtoint ([3 x i8]* @global_var_10005d00.87 to i32), i32* @lr, align 4
  %v1_10005cfc = call i32 @function_1000c090(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10005d08.88 to i32), i32* @lr, align 4
  %v1_10005d04 = call i32 @function_10009600(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005d10.89 to i32), i32* @lr, align 4
  %v1_10005d0c = call i32 @function_10009600(i32 7)
  store i32 268459288, i32* @lr, align 4
  %v1_10005d14 = call i32 @function_10009600(i32 9)
  br label %dec_label_pc_10005d18

dec_label_pc_10005d18:                            ; preds = %dec_label_pc_1000589c, %dec_label_pc_10005cf8
  %v0_10005d1c = load i32, i32* @r31, align 4
  store i32 %v0_1000583c, i32* @r23, align 4
  store i32 %v0_10005824, i32* @r25, align 4
  store i32 %v0_10005804, i32* @r27, align 4
  store i32 %v0_10005844, i32* @r28, align 4
  store i32 %v0_10005814, i32* @r29, align 4
  store i32 %v0_1000582c, i32* @r30, align 4
  store i32 %v0_10005834, i32* @r31, align 4
  ret i32 %v0_10005d1c

dec_label_pc_10005d50:                            ; preds = %dec_label_pc_100059d8
  %v3_100059d8 = icmp eq i32 %v0_10005a0c75, 0
  %v1_10005d50 = add i32 %v0_10005a0c75, 1
  br i1 %v3_100059d8, label %dec_label_pc_10005d58, label %dec_label_pc_100059e0

dec_label_pc_10005d58:                            ; preds = %dec_label_pc_10005d50
  %v0_10005d58 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005d58 = add i32 %v0_10005d58, %v1_10005a7477
  %v1_10005d5c = add i32 %v2_10005d58, 33
  %v2_10005d5c = inttoptr i32 %v1_10005d5c to i8*
  %v3_10005d5c = load i8, i8* %v2_10005d5c, align 1
  %v3_10005d60 = icmp eq i8 %v3_10005d5c, 65
  br i1 %v3_10005d60, label %dec_label_pc_10005d68, label %dec_label_pc_100059bc

dec_label_pc_10005d68:                            ; preds = %dec_label_pc_10005d58
  br label %dec_label_pc_100059bc.outer

dec_label_pc_10005d70:                            ; preds = %dec_label_pc_10005a98
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005d7c.90 to i32), i32* @lr, align 4
  %v1_10005d78 = call i32 @function_10009600(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005d84.91 to i32), i32* @lr, align 4
  %v1_10005d80 = call i32 @function_10009600(i32 7)
  store i32 268459404, i32* @lr, align 4
  %v1_10005d88 = call i32 @function_10009600(i32 9)
  %v0_10005d90 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000583c, i32* @r23, align 4
  store i32 %v0_10005824, i32* @r25, align 4
  store i32 %v0_10005804, i32* @r27, align 4
  store i32 %v0_10005844, i32* @r28, align 4
  store i32 %v0_10005814, i32* @r29, align 4
  store i32 %v0_1000582c, i32* @r30, align 4
  store i32 %v0_10005834, i32* @r31, align 4
  ret i32 %v0_10005d90

dec_label_pc_10005dc4:                            ; preds = %dec_label_pc_100057f4
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_1000589c

; uselistorder directives
  uselistorder i32 %v2_10005ce0, { 1, 0 }
  uselistorder i32 %v0_10005a5c, { 1, 0 }
  uselistorder i32 %v0_10005a50, { 0, 2, 1 }
  uselistorder i32 %v1_10005a40, { 1, 0 }
  uselistorder i32 %v1_10005a74.lcssa, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_10005a0c75, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_10005a7477, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_100059f022, { 1, 0 }
  uselistorder i32 %v1_1000598c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_100058d8, { 1, 0, 2 }
  uselistorder i32 %v2_10005828, { 1, 0 }
  uselistorder i32 %v2_10005808, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000a038, { 4, 3, 2, 1, 0 }
  uselistorder i32 268458712, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_1000a170, { 1, 0 }
  uselistorder i32 268458220, { 1, 0 }
  uselistorder label %dec_label_pc_10005d18, { 1, 0 }
  uselistorder label %dec_label_pc_10005cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10005cec, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10005cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10005bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10005bc8.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10005ae0, { 1, 0 }
  uselistorder label %dec_label_pc_10005ae0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005ad0.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005a54, { 1, 0 }
  uselistorder label %dec_label_pc_10005a1c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10005a08, { 1, 0 }
  uselistorder label %dec_label_pc_100059e0, { 1, 0 }
  uselistorder label %dec_label_pc_100059bc, { 1, 0 }
  uselistorder label %dec_label_pc_10005984, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005934, { 1, 0 }
  uselistorder label %dec_label_pc_100058dc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100058f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000589c, { 1, 0 }
}

define i32 @function_10005de8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005de8:
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-8276 = alloca i32, align 4
  %stack_var_-8340 = alloca i32, align 4
  %stack_var_-8404 = alloca i32, align 4
  %stack_var_-8420 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %v0_10005df4 = load i32, i32* @r28, align 4
  %v0_10005e10 = load i32, i32* @r22, align 4
  %v0_10005e14 = load i32, i32* @r23, align 4
  %v0_10005e24 = load i32, i32* @r27, align 4
  %v0_10005e28 = load i32, i32* @r29, align 4
  %v0_10005e2c = load i32, i32* @r30, align 4
  %v0_10005e30 = load i32, i32* @r31, align 4
  store i32 268459576, i32* @lr, align 4
  %v0_10005e34 = call i32 @function_1000ab6c()
  store i32 %v0_10005e34, i32* @r28, align 4
  store i32 268459584, i32* @lr, align 4
  %v0_10005e3c = call i32 @function_1000a7e4()
  store i32 %v0_10005e3c, i32* @global_var_1001e194.81, align 4
  %tmp85 = icmp slt i32 %v0_10005e3c, 1
  br i1 %tmp85, label %dec_label_pc_10005e9c, label %dec_label_pc_10005e50

dec_label_pc_10005e50:                            ; preds = %dec_label_pc_10006000, %dec_label_pc_10005ef8, %dec_label_pc_10005e9c, %dec_label_pc_10005de8
  %v0_10005e98 = phi i32 [ -1, %dec_label_pc_10005ef8 ], [ -1, %dec_label_pc_10005e9c ], [ %v0_10005e3c, %dec_label_pc_10005de8 ], [ 0, %dec_label_pc_10006000 ]
  store i32 %v0_10005e10, i32* @r22, align 4
  store i32 %v0_10005e14, i32* @r23, align 4
  store i32 %v0_10005e24, i32* @r27, align 4
  store i32 %v0_10005df4, i32* %r28.global-to-local, align 4
  store i32 %v0_10005e28, i32* @r29, align 4
  store i32 %v0_10005e2c, i32* @r30, align 4
  store i32 %v0_10005e30, i32* @r31, align 4
  ret i32 %v0_10005e98

dec_label_pc_10005e9c:                            ; preds = %dec_label_pc_10005de8
  %v3_10005e9c = icmp eq i32 %v0_10005e3c, -1
  br i1 %v3_10005e9c, label %dec_label_pc_10005e50, label %dec_label_pc_10005ea4

dec_label_pc_10005ea4:                            ; preds = %dec_label_pc_10005e9c
  store i32 0, i32* @r30, align 4
  store i32 2, i32* %stack_var_-8436, align 4
  store i32 ptrtoint (i32* @global_var_10005ebc.92 to i32), i32* @lr, align 4
  %v1_10005eb8 = call i32 @function_100057f4(i32 23)
  store i32 268459732, i32* @lr, align 4
  %v3_10005ed0 = call i32 @function_1000b568(i32 2, i32 1, i32 0)
  %v3_10005ed4 = icmp eq i32 %v3_10005ed0, -1
  store i32 %v3_10005ed0, i32* @r31, align 4
  br i1 %v3_10005ed4, label %dec_label_pc_10005ef8, label %dec_label_pc_10005ee0

dec_label_pc_10005ee0:                            ; preds = %dec_label_pc_10005ea4
  %v2_10005ee0 = ptrtoint i32* %stack_var_-8436 to i32
  store i32 268459756, i32* @lr, align 4
  %v3_10005ee8 = call i32 @function_1000b334(i32 %v2_10005ee0, i32 16, i32 16)
  %v0_10005eec = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005ef8.93 to i32), i32* @lr, align 4
  %v2_10005ef4 = call i32 @function_1000b40c(i32 %v0_10005eec, i32 1)
  br label %dec_label_pc_10005ef8

dec_label_pc_10005ef8:                            ; preds = %dec_label_pc_10005ea4, %dec_label_pc_10005ee0
  store i32 268459780, i32* @lr, align 4
  %v1_10005f00 = call i32 @function_1000c090(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268459788, i32* @lr, align 4
  %v0_10005f08 = call i32 @function_1000b79c()
  store i32 %v0_10005f08, i32* %r11.global-to-local, align 4
  %v0_10005f18 = load i32, i32* @r30, align 4
  %v1_10005f18 = trunc i32 %v0_10005f18 to i8
  %v3_10005f18 = inttoptr i32 %v0_10005f08 to i8*
  store i8 %v1_10005f18, i8* %v3_10005f18, align 1
  %v2_10005f1c = ptrtoint i32* %stack_var_-4180 to i32
  store i32 %v2_10005f1c, i32* %r21.global-to-local, align 4
  %v0_10005f20 = load i32, i32* @r30, align 4
  store i32 %v0_10005f20, i32* @global_var_1001e18c.94, align 4
  %v0_10005f24 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10005f24, i32* @global_var_1001e190.95, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005f2c.96 to i32), i32* @lr, align 4
  %v1_10005f28 = call i32 @function_1000968c(i32 6)
  store i32 268459828, i32* @lr, align 4
  %v1_10005f30 = call i32 @function_1000968c(i32 7)
  %v3_10005f3c = call i32 @function_100095d8(i32 6, i32* null)
  store i32 %v2_10005f1c, i32* @r3, align 4
  %v2_10005f48 = bitcast i32* %stack_var_-4180 to i8*
  %v3_10005f48 = call i32 @function_10009f38(i8* %v2_10005f48, i32 %v3_10005f3c)
  %v0_10005f4c = load i32, i32* %r21.global-to-local, align 4
  %v2_10005f4c = add i32 %v0_10005f4c, %v3_10005f48
  store i32 %v2_10005f4c, i32* %r29.global-to-local, align 4
  store i32 268459860, i32* @lr, align 4
  %v0_10005f50 = call i32 @function_1000a82c()
  %v2_10005f54 = ptrtoint i32* %stack_var_-8420 to i32
  %v3_10005f5c = trunc i32 %v0_10005f50 to i8
  %v4_10005f5c = call i32 @function_1000a470(i8 %v3_10005f5c, i32 10, i32 %v2_10005f54)
  store i32 %v2_10005f4c, i32* @r3, align 4
  %v2_10005f68 = inttoptr i32 %v2_10005f4c to i8*
  %v3_10005f68 = call i32 @function_10009f38(i8* %v2_10005f68, i32 %v4_10005f5c)
  %v0_10005f70 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005f70 = add i32 %v0_10005f70, %v3_10005f68
  store i32 %v2_10005f70, i32* %r29.global-to-local, align 4
  %v3_10005f78 = call i32 @function_100095d8(i32 7, i32* null)
  store i32 %v2_10005f70, i32* @r3, align 4
  %v2_10005f84 = inttoptr i32 %v2_10005f70 to i8*
  %v3_10005f84 = call i32 @function_10009f38(i8* %v2_10005f84, i32 %v3_10005f78)
  store i32 %v3_10005f84, i32* @r31, align 4
  store i32 268459932, i32* @lr, align 4
  %v2_10005f98 = call i32 @function_1000a904(i32 %v2_10005f1c, i32 0)
  %v3_10005f9c = icmp eq i32 %v2_10005f98, -1
  br i1 %v3_10005f9c, label %dec_label_pc_10005e50, label %dec_label_pc_10005fa4

dec_label_pc_10005fa4:                            ; preds = %dec_label_pc_10005ef8
  store i32 ptrtoint ([3 x i8]* @global_var_10005fa8.97 to i32), i32* @lr, align 4
  %v0_10005fa4 = call i32 @function_1000a79c()
  store i32 ptrtoint ([3 x i8]* @global_var_10005fb0.98 to i32), i32* @lr, align 4
  %v1_10005fac = call i32 @function_10009600(i32 6)
  store i32 268459960, i32* @lr, align 4
  %v1_10005fb4 = call i32 @function_10009600(i32 7)
  %v3_10005fb8 = load i32, i32* @global_var_1001e190.95, align 4
  store i32 268459976, i32* @lr, align 4
  %v3_10005fc4 = call i32 @function_1000aa1c(i32 %v2_10005f1c, i32 %v3_10005fb8, i32 4095)
  %v3_10005fc8 = icmp eq i32 %v3_10005fc4, -1
  br i1 %v3_10005fc8, label %dec_label_pc_10005fd8, label %dec_label_pc_10005fd0

dec_label_pc_10005fd0:                            ; preds = %dec_label_pc_10005fa4
  %v3_10005fd0 = load i32, i32* @global_var_1001e190.95, align 4
  %v0_10005fd4 = load i32, i32* @r30, align 4
  %v3_10005fd4 = trunc i32 %v0_10005fd4 to i8
  %v4_10005fd4 = add i32 %v3_10005fd0, %v3_10005fc4
  %v5_10005fd4 = inttoptr i32 %v4_10005fd4 to i8*
  store i8 %v3_10005fd4, i8* %v5_10005fd4, align 1
  br label %dec_label_pc_10005fd8

dec_label_pc_10005fd8:                            ; preds = %dec_label_pc_10005fa4, %dec_label_pc_10005fd0
  %v0_10005fd8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005fd8 = load i32, i32* @r31, align 4
  %v2_10005fd8 = add i32 %v1_10005fd8, %v0_10005fd8
  store i32 %v2_10005f1c, i32* @r3, align 4
  %v0_10005fe0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10005fe0 = sub i32 %v2_10005fd8, %v0_10005fe0
  store i32 %v2_10005fe0, i32* @r4, align 4
  %v0_10005fe4 = load i32, i32* @r28, align 4
  store i32 %v0_10005fe4, i32* %r29.global-to-local, align 4
  store i32 268460012, i32* @lr, align 4
  %v0_10005fe8 = call i32 @function_10009fb8()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  %v2_10005ff4 = ptrtoint i32* %stack_var_-8404 to i32
  store i32 %v2_10005ff4, i32* @r22, align 4
  %v2_10005ff8 = ptrtoint i32* %stack_var_-8340 to i32
  store i32 %v2_10005ff8, i32* %r20.global-to-local, align 4
  %v2_10005ffc = ptrtoint i32* %stack_var_-8276 to i32
  %v2_100060cc = bitcast i32* %stack_var_-8404 to i8*
  %v2_10006110 = bitcast i32* %stack_var_-8340 to i8*
  %v3_10006198 = bitcast i32* %stack_var_-8276 to i8*
  br label %dec_label_pc_10006000

dec_label_pc_10006000:                            ; preds = %dec_label_pc_10006090, %dec_label_pc_10005fd8
  store i32 268460040, i32* @lr, align 4
  %v1_10006004 = call i32 @function_1000968c(i32 6)
  %v3_10006010 = call i32 @function_100095d8(i32 6, i32* null)
  store i32 268460056, i32* @lr, align 4
  %v1_10006014 = call i32 @function_1000ace8(i32 %v3_10006010)
  store i32 %v1_10006014, i32* @r27, align 4
  %v3_10006018 = icmp eq i32 %v1_10006014, 0
  br i1 %v3_10006018, label %dec_label_pc_10005e50, label %dec_label_pc_10006020

dec_label_pc_10006020:                            ; preds = %dec_label_pc_10006000
  store i32 268460072, i32* @lr, align 4
  %v1_10006024 = call i32 @function_10009600(i32 6)
  %v0_1000602813 = load i32, i32* @r27, align 4
  store i32 268460080, i32* @lr, align 4
  %v1_1000602c14 = inttoptr i32 %v0_1000602813 to i32*
  %v2_1000602c15 = call i32 @function_1000adf8(i32* %v1_1000602c14)
  %v3_1000603018 = icmp eq i32 %v2_1000602c15, 0
  br i1 %v3_1000603018, label %dec_label_pc_10006090, label %dec_label_pc_10006038.preheader

dec_label_pc_10006038.preheader:                  ; preds = %dec_label_pc_10006020, %dec_label_pc_10006028.backedge
  %v0_1000603821 = phi i32 [ %v2_1000602c, %dec_label_pc_10006028.backedge ], [ %v2_1000602c15, %dec_label_pc_10006020 ]
  br label %dec_label_pc_10006038

dec_label_pc_10006038:                            ; preds = %dec_label_pc_10006038.preheader, %dec_label_pc_1000607c
  %v0_1000604c = phi i32 [ %v0_1000603821, %dec_label_pc_10006038.preheader ], [ %v2_10006084, %dec_label_pc_1000607c ]
  %v1_10006038 = add i32 %v0_1000604c, 11
  %v2_10006038 = inttoptr i32 %v1_10006038 to i8*
  %v3_10006038 = load i8, i8* %v2_10006038, align 1
  %v4_10006038 = zext i8 %v3_10006038 to i32
  %v1_1000603c = add nuw nsw i32 %v4_10006038, 208
  %v1_10006040 = urem i32 %v1_1000603c, 256
  %v2_10006044 = icmp ugt i32 %v1_10006040, 9
  br i1 %v2_10006044, label %dec_label_pc_10006028.backedge, label %dec_label_pc_1000604c

dec_label_pc_1000604c:                            ; preds = %dec_label_pc_10006038
  %v0_10006050 = load i32, i32* @r23, align 4
  %v1_10006050 = add i32 %v0_10006050, 1
  store i32 %v1_10006050, i32* @r23, align 4
  store i32 268460124, i32* @lr, align 4
  %v3_10006058 = call i32 @function_1000be44(i8* %v2_10006038, i32 %v1_10006040)
  %v0_1000605c = load i32, i32* @r28, align 4
  %v2_1000605c = icmp slt i32 %v0_1000605c, %v3_10006058
  store i32 %v3_10006058, i32* %r30.global-to-local, align 4
  br i1 %v2_1000605c, label %dec_label_pc_1000609c, label %dec_label_pc_10006068

dec_label_pc_10006068:                            ; preds = %dec_label_pc_1000604c
  store i32 268460144, i32* @lr, align 4
  %v0_1000606c = call i32 @function_1000ab6c()
  %v0_10006070 = load i32, i32* @r29, align 4
  %v2_10006070 = sub i32 %v0_1000606c, %v0_10006070
  %tmp86 = icmp slt i32 %v2_10006070, 601
  br i1 %tmp86, label %dec_label_pc_100061f8, label %dec_label_pc_1000607c

dec_label_pc_1000607c:                            ; preds = %dec_label_pc_10006068
  %v0_1000607c = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268460168, i32* @lr, align 4
  %v1_10006084 = inttoptr i32 %v0_1000607c to i32*
  %v2_10006084 = call i32 @function_1000adf8(i32* %v1_10006084)
  %v3_10006088 = icmp eq i32 %v2_10006084, 0
  br i1 %v3_10006088, label %dec_label_pc_10006090, label %dec_label_pc_10006038

dec_label_pc_10006090:                            ; preds = %dec_label_pc_10006028.backedge, %dec_label_pc_1000607c, %dec_label_pc_10006020
  %v0_10006090 = load i32, i32* @r27, align 4
  store i32 268460184, i32* @lr, align 4
  %v1_10006094 = inttoptr i32 %v0_10006090 to i32*
  %v2_10006094 = call i32 @function_1000ac44(i32* %v1_10006094)
  br label %dec_label_pc_10006000

dec_label_pc_1000609c:                            ; preds = %dec_label_pc_1000604c
  store i32 268460196, i32* @lr, align 4
  %v0_100060a0 = call i32 @function_1000ab6c()
  store i32 %v0_100060a0, i32* %r19.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100060b0.100 to i32), i32* @lr, align 4
  %v1_100060ac = call i32 @function_1000968c(i32 6)
  store i32 268460216, i32* @lr, align 4
  %v1_100060b4 = call i32 @function_1000968c(i32 7)
  %v3_100060c0 = call i32 @function_100095d8(i32 6, i32* null)
  store i32 %v2_10005ff4, i32* @r3, align 4
  %v3_100060cc = call i32 @function_10009f38(i8* %v2_100060cc, i32 %v3_100060c0)
  %v0_100060d0 = load i32, i32* @r31, align 4
  %v0_100060d4 = load i32, i32* @r22, align 4
  %v2_100060d4 = add i32 %v0_100060d4, %v3_100060cc
  store i32 %v2_100060d4, i32* %r28.global-to-local, align 4
  store i32 %v2_100060d4, i32* @r3, align 4
  %v2_100060dc = inttoptr i32 %v2_100060d4 to i8*
  %v3_100060dc = call i32 @function_10009f38(i8* %v2_100060dc, i32 %v0_100060d0)
  store i32 %v3_100060dc, i32* %r29.global-to-local, align 4
  %v3_100060ec = call i32 @function_100095d8(i32 7, i32* null)
  %v2_100060f4 = add i32 %v3_100060dc, %v2_100060d4
  store i32 %v2_100060f4, i32* @r3, align 4
  %v2_100060f8 = inttoptr i32 %v2_100060f4 to i8*
  %v3_100060f8 = call i32 @function_10009f38(i8* %v2_100060f8, i32 %v3_100060ec)
  %v3_10006104 = call i32 @function_100095d8(i32 6, i32* null)
  store i32 %v2_10005ff8, i32* @r3, align 4
  %v3_10006110 = call i32 @function_10009f38(i8* %v2_10006110, i32 %v3_10006104)
  %v0_10006114 = load i32, i32* @r31, align 4
  %v0_10006118 = load i32, i32* %r20.global-to-local, align 4
  %v2_10006118 = add i32 %v0_10006118, %v3_10006110
  store i32 %v2_10006118, i32* %r28.global-to-local, align 4
  store i32 %v2_10006118, i32* @r3, align 4
  %v2_10006120 = inttoptr i32 %v2_10006118 to i8*
  %v3_10006120 = call i32 @function_10009f38(i8* %v2_10006120, i32 %v0_10006114)
  store i32 %v3_10006120, i32* %r29.global-to-local, align 4
  %v3_10006130 = call i32 @function_100095d8(i32 11, i32* null)
  %v2_10006138 = add i32 %v3_10006120, %v2_10006118
  store i32 %v2_10006138, i32* @r3, align 4
  %v2_1000613c = inttoptr i32 %v2_10006138 to i8*
  %v3_1000613c = call i32 @function_10009f38(i8* %v2_1000613c, i32 %v3_10006130)
  store i32 ptrtoint ([3 x i8]* @global_var_10006148.102 to i32), i32* @lr, align 4
  %v1_10006144 = call i32 @function_10009600(i32 6)
  store i32 268460368, i32* @lr, align 4
  %v1_1000614c = call i32 @function_10009600(i32 7)
  store i32 4095, i32* @r5, align 4
  store i32 268460384, i32* @lr, align 4
  %v3_1000615c = call i32 @function_1000aa1c(i32 %v2_10005ff4, i32 %v2_10005ffc, i32 4095)
  %v3_10006160 = icmp eq i32 %v3_1000615c, -1
  store i32 %v3_1000615c, i32* %r29.global-to-local, align 4
  br i1 %v3_10006160, label %dec_label_pc_1000624c, label %dec_label_pc_1000616c

dec_label_pc_1000616c:                            ; preds = %dec_label_pc_1000609c
  %v0_1000616c = load i32, i32* @r1, align 4
  %v2_1000616c = add i32 %v0_1000616c, %v3_1000615c
  %v3_10006174 = add i32 %v2_1000616c, 188
  %v4_10006174 = inttoptr i32 %v3_10006174 to i8*
  store i8 0, i8* %v4_10006174, align 1
  store i32 268460416, i32* @lr, align 4
  %v1_1000617c = call i32 @function_1000968c(i32 10)
  %v3_10006188 = call i32 @function_100095d8(i32 10, i32* null)
  %v0_1000618c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000618c = add i32 %v0_1000618c, -1
  %v4_10006198 = call i32 @function_1000a2c0(i8* %v3_10006198, i32 %v1_1000618c, i32 %v3_10006188)
  %v3_1000619c = icmp eq i32 %v4_10006198, -1
  br i1 %v3_1000619c, label %dec_label_pc_100061b8, label %dec_label_pc_100061a4

dec_label_pc_100061a4:                            ; preds = %dec_label_pc_1000616c
  store i32 268460460, i32* @lr, align 4
  %v1_100061a8 = call i32 @function_1000abb4(i32 %v2_10005ffc)
  %v0_100061ac = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100061b8.103 to i32), i32* @lr, align 4
  %v2_100061b4 = call i32 @function_1000a8bc(i32 %v0_100061ac, i32 9)
  br label %dec_label_pc_100061b8

dec_label_pc_100061b8:                            ; preds = %dec_label_pc_1000616c, %dec_label_pc_100061a4
  store i32 ptrtoint (i32* @global_var_100061c0.104 to i32), i32* @lr, align 4
  %v1_100061bc = call i32 @function_10009600(i32 10)
  store i32 268460484, i32* @lr, align 4
  %v0_100061c0 = call i32 @function_1000a82c()
  %v0_100061c4 = load i32, i32* %r30.global-to-local, align 4
  %v4_100061c4 = icmp eq i32 %v0_100061c4, %v0_100061c0
  br i1 %v4_100061c4, label %dec_label_pc_100061ec, label %dec_label_pc_100061cc

dec_label_pc_100061cc:                            ; preds = %dec_label_pc_100061b8
  store i32 268460496, i32* @lr, align 4
  %v0_100061cc = call i32 @function_1000a874()
  %v0_100061d0 = load i32, i32* %r30.global-to-local, align 4
  %v4_100061d0 = icmp eq i32 %v0_100061d0, %v0_100061cc
  br i1 %v4_100061d0, label %dec_label_pc_100061ec, label %dec_label_pc_100061d8

dec_label_pc_100061d8:                            ; preds = %dec_label_pc_100061cc
  %v3_100061d8 = load i32, i32* @global_var_1001e190.95, align 4
  %v3_100061e0 = call i32 @function_1000a36c(i8* %v3_10006198, i32 %v3_100061d8)
  %v3_100061e4 = icmp eq i32 %v3_100061e0, 0
  br i1 %v3_100061e4, label %dec_label_pc_10006228, label %dec_label_pc_100061d8.dec_label_pc_100061ec_crit_edge

dec_label_pc_100061d8.dec_label_pc_100061ec_crit_edge: ; preds = %dec_label_pc_100061d8
  %v0_100061ec.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100061ec

dec_label_pc_100061ec:                            ; preds = %dec_label_pc_100061d8.dec_label_pc_100061ec_crit_edge, %dec_label_pc_100061cc, %dec_label_pc_100061b8
  %v0_100061ec = phi i32 [ %v0_100061ec.pre, %dec_label_pc_100061d8.dec_label_pc_100061ec_crit_edge ], [ %v0_100061cc, %dec_label_pc_100061cc ], [ %v0_100061c0, %dec_label_pc_100061b8 ]
  store i32 %v0_100061ec, i32* %r28.global-to-local, align 4
  %v0_100061f0 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_100061f0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006028.backedge

dec_label_pc_10006028.backedge:                   ; preds = %dec_label_pc_10006038, %dec_label_pc_100061ec, %dec_label_pc_1000621c, %dec_label_pc_1000648c, %dec_label_pc_100061f8, %dec_label_pc_10006200
  %v0_10006028 = load i32, i32* @r27, align 4
  store i32 268460080, i32* @lr, align 4
  %v1_1000602c = inttoptr i32 %v0_10006028 to i32*
  %v2_1000602c = call i32 @function_1000adf8(i32* %v1_1000602c)
  %v3_10006030 = icmp eq i32 %v2_1000602c, 0
  br i1 %v3_10006030, label %dec_label_pc_10006090, label %dec_label_pc_10006038.preheader

dec_label_pc_100061f8:                            ; preds = %dec_label_pc_10006068
  %v0_100061f8 = load i32, i32* %r30.global-to-local, align 4
  %tmp87 = icmp slt i32 %v0_100061f8, 401
  br i1 %tmp87, label %dec_label_pc_10006028.backedge, label %dec_label_pc_10006200

dec_label_pc_10006200:                            ; preds = %dec_label_pc_100061f8
  %v0_10006208 = load i32, i32* @r23, align 4
  %v1_1000620c = urem i32 %v0_10006208, 10
  %v4_10006214 = icmp eq i32 %v1_1000620c, 0
  br i1 %v4_10006214, label %dec_label_pc_1000621c, label %dec_label_pc_10006028.backedge

dec_label_pc_1000621c:                            ; preds = %dec_label_pc_10006200
  store i32 268460580, i32* @lr, align 4
  %v1_10006220 = call i32 @function_1000c090(i32 1)
  br label %dec_label_pc_10006028.backedge

dec_label_pc_10006228:                            ; preds = %dec_label_pc_100061d8
  store i32 268460600, i32* @lr, align 4
  %v2_10006234 = call i32 @function_1000a904(i32 %v2_10005ffc, i32 0)
  %v3_10006238 = icmp eq i32 %v2_10006234, -1
  store i32 %v2_10006234, i32* @r31, align 4
  br i1 %v3_10006238, label %dec_label_pc_100064e8, label %dec_label_pc_10006244

dec_label_pc_10006244:                            ; preds = %dec_label_pc_10006228, %dec_label_pc_100064e8
  store i32 268460620, i32* @lr, align 4
  %v0_10006248 = call i32 @function_1000a79c()
  br label %dec_label_pc_1000624c

dec_label_pc_1000624c:                            ; preds = %dec_label_pc_1000609c, %dec_label_pc_10006244
  store i32 268460636, i32* @lr, align 4
  %v2_10006258 = call i32 @function_1000a904(i32 %v2_10005ff4, i32 0)
  %v3_1000625c = icmp eq i32 %v2_10006258, -1
  store i32 %v2_10006258, i32* %r24.global-to-local, align 4
  br i1 %v3_1000625c, label %dec_label_pc_1000648c, label %dec_label_pc_10006268

dec_label_pc_10006268:                            ; preds = %dec_label_pc_1000624c
  store i32 ptrtoint ([3 x i8]* @global_var_10006270.105 to i32), i32* @lr, align 4
  %v1_1000626c = call i32 @function_1000968c(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_10006278.106 to i32), i32* @lr, align 4
  %v1_10006274 = call i32 @function_1000968c(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10006280.107 to i32), i32* @lr, align 4
  %v1_1000627c = call i32 @function_1000968c(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10006288.108 to i32), i32* @lr, align 4
  %v1_10006284 = call i32 @function_1000968c(i32 15)
  store i32 268460688, i32* @lr, align 4
  %v1_1000628c = call i32 @function_1000968c(i32 16)
  %v3_10006298 = call i32 @function_100095d8(i32 12, i32* nonnull %stack_var_-8452)
  store i32 %v3_10006298, i32* @r31, align 4
  %v3_100062a8 = call i32 @function_100095d8(i32 13, i32* nonnull %stack_var_-8448)
  store i32 %v3_100062a8, i32* %r29.global-to-local, align 4
  %v3_100062b8 = call i32 @function_100095d8(i32 14, i32* nonnull %stack_var_-8444)
  store i32 %v3_100062b8, i32* %r28.global-to-local, align 4
  %v3_100062c8 = call i32 @function_100095d8(i32 15, i32* nonnull %stack_var_-8456)
  store i32 %v3_100062c8, i32* %r26.global-to-local, align 4
  %v3_100062d8 = call i32 @function_100095d8(i32 16, i32* nonnull %stack_var_-8440)
  store i32 %v3_100062d8, i32* %r25.global-to-local, align 4
  %v0_100062e094 = load i32, i32* %r24.global-to-local, align 4
  store i32 268460784, i32* @lr, align 4
  %v3_100062ec95 = call i32 @function_1000a9d4(i32 %v0_100062e094, i32 %v2_10005f1c, i32 4096)
  %tmp8897 = icmp slt i32 %v3_100062ec95, 1
  br i1 %tmp8897, label %dec_label_pc_100064f8, label %dec_label_pc_100062f8

dec_label_pc_100062f8:                            ; preds = %dec_label_pc_10006268, %dec_label_pc_100062e0.backedge
  %v3_100062ec98 = phi i32 [ %v3_100062ec, %dec_label_pc_100062e0.backedge ], [ %v3_100062ec95, %dec_label_pc_10006268 ]
  %v3_100062f099.in = phi i32 [ %v3_100062ec, %dec_label_pc_100062e0.backedge ], [ %v3_100062ec95, %dec_label_pc_10006268 ]
  %v3_100062f099 = icmp eq i32 %v3_100062f099.in, 0
  %v3_100062f8 = load i32, i32* %stack_var_-8452, align 4
  %v2_100062fc = icmp slt i32 %v3_100062ec98, %v3_100062f8
  br i1 %v2_100062fc, label %dec_label_pc_1000633c, label %dec_label_pc_10006304

dec_label_pc_10006304:                            ; preds = %dec_label_pc_100062f8
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10006318.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006318

dec_label_pc_10006318:                            ; preds = %dec_label_pc_10006304, %dec_label_pc_10006334
  %v0_10006338 = phi i32 [ %v3_100062ec98, %dec_label_pc_10006304 ], [ %v1_10006338, %dec_label_pc_10006334 ]
  %v0_10006334 = phi i32 [ %v2_10005f1c, %dec_label_pc_10006304 ], [ %v1_10006334, %dec_label_pc_10006334 ]
  %v1_10006318 = phi i32 [ 0, %dec_label_pc_10006304 ], [ %v1_1000631825, %dec_label_pc_10006334 ]
  %v2_10006318 = add i32 %v1_10006318, %v0_10006318.pre
  %v3_10006318 = inttoptr i32 %v2_10006318 to i8*
  %v4_10006318 = load i8, i8* %v3_10006318, align 1
  %v1_1000631c = add i32 %v1_10006318, 1
  store i32 %v1_1000631c, i32* %r11.global-to-local, align 4
  %v1_10006320 = inttoptr i32 %v0_10006334 to i8*
  %v2_10006320 = load i8, i8* %v1_10006320, align 1
  %v4_10006328 = icmp eq i8 %v2_10006320, %v4_10006318
  br i1 %v4_10006328, label %dec_label_pc_1000644c, label %dec_label_pc_10006330

dec_label_pc_10006330:                            ; preds = %dec_label_pc_10006318
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006334

dec_label_pc_10006334:                            ; preds = %dec_label_pc_1000644c, %dec_label_pc_10006330
  %v1_1000631825 = phi i32 [ %v1_1000631c, %dec_label_pc_1000644c ], [ 0, %dec_label_pc_10006330 ]
  %v1_10006334 = add i32 %v0_10006334, 1
  %v1_10006338 = add i32 %v0_10006338, -1
  %v2_10006338 = icmp eq i32 %v1_10006338, 0
  br i1 %v2_10006338, label %dec_label_pc_1000633c, label %dec_label_pc_10006318

dec_label_pc_1000633c:                            ; preds = %dec_label_pc_10006334, %dec_label_pc_100062f8
  %v3_1000633c = load i32, i32* %stack_var_-8448, align 4
  %v2_10006340 = icmp slt i32 %v3_100062ec98, %v3_1000633c
  br i1 %v2_10006340, label %dec_label_pc_10006380, label %dec_label_pc_10006348

dec_label_pc_10006348:                            ; preds = %dec_label_pc_1000633c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100062f099, label %dec_label_pc_10006380, label %dec_label_pc_1000635c.preheader

dec_label_pc_1000635c.preheader:                  ; preds = %dec_label_pc_10006348
  %v0_1000635c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000635c

dec_label_pc_1000635c:                            ; preds = %dec_label_pc_1000635c.preheader, %dec_label_pc_1000637c
  %v0_1000637c = phi i32 [ %v3_100062ec98, %dec_label_pc_1000635c.preheader ], [ %v1_1000637c, %dec_label_pc_1000637c ]
  %storemerge.in = phi i32 [ %v2_10005f1c, %dec_label_pc_1000635c.preheader ], [ %storemerge, %dec_label_pc_1000637c ]
  %v1_1000635c = phi i32 [ 0, %dec_label_pc_1000635c.preheader ], [ %v1_1000635c31, %dec_label_pc_1000637c ]
  %v2_1000635c = add i32 %v1_1000635c, %v0_1000635c.pre
  %v3_1000635c = inttoptr i32 %v2_1000635c to i8*
  %v4_1000635c = load i8, i8* %v3_1000635c, align 1
  %v1_10006360 = add i32 %v1_1000635c, 1
  store i32 %v1_10006360, i32* %r11.global-to-local, align 4
  %v1_10006364 = inttoptr i32 %storemerge.in to i8*
  %v2_10006364 = load i8, i8* %v1_10006364, align 1
  %v4_1000636c = icmp eq i8 %v2_10006364, %v4_1000635c
  br i1 %v4_1000636c, label %dec_label_pc_100064b8, label %dec_label_pc_10006374

dec_label_pc_10006374:                            ; preds = %dec_label_pc_1000635c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000637c

dec_label_pc_1000637c:                            ; preds = %dec_label_pc_100064b8, %dec_label_pc_10006374
  %v1_1000635c31 = phi i32 [ %v1_10006360, %dec_label_pc_100064b8 ], [ 0, %dec_label_pc_10006374 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_1000637c = add i32 %v0_1000637c, -1
  %v2_1000637c = icmp eq i32 %v1_1000637c, 0
  br i1 %v2_1000637c, label %dec_label_pc_10006380, label %dec_label_pc_1000635c

dec_label_pc_10006380:                            ; preds = %dec_label_pc_1000637c, %dec_label_pc_10006348, %dec_label_pc_1000633c
  %v3_10006380 = load i32, i32* %stack_var_-8444, align 4
  %v2_10006384 = icmp slt i32 %v3_100062ec98, %v3_10006380
  br i1 %v2_10006384, label %dec_label_pc_100063c4, label %dec_label_pc_1000638c

dec_label_pc_1000638c:                            ; preds = %dec_label_pc_10006380
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100062f099, label %dec_label_pc_100063c4, label %dec_label_pc_100063a0.preheader

dec_label_pc_100063a0.preheader:                  ; preds = %dec_label_pc_1000638c
  %v0_100063a0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100063a0

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_100063a0.preheader, %dec_label_pc_100063c0
  %v0_100063c0 = phi i32 [ %v3_100062ec98, %dec_label_pc_100063a0.preheader ], [ %v1_100063c0, %dec_label_pc_100063c0 ]
  %storemerge3.in = phi i32 [ %v2_10005f1c, %dec_label_pc_100063a0.preheader ], [ %storemerge3, %dec_label_pc_100063c0 ]
  %v1_100063a0 = phi i32 [ 0, %dec_label_pc_100063a0.preheader ], [ %v1_100063a037, %dec_label_pc_100063c0 ]
  %v2_100063a0 = add i32 %v1_100063a0, %v0_100063a0.pre
  %v3_100063a0 = inttoptr i32 %v2_100063a0 to i8*
  %v4_100063a0 = load i8, i8* %v3_100063a0, align 1
  %v1_100063a4 = add i32 %v1_100063a0, 1
  store i32 %v1_100063a4, i32* %r11.global-to-local, align 4
  %v1_100063a8 = inttoptr i32 %storemerge3.in to i8*
  %v2_100063a8 = load i8, i8* %v1_100063a8, align 1
  %v4_100063b0 = icmp eq i8 %v2_100063a8, %v4_100063a0
  br i1 %v4_100063b0, label %dec_label_pc_100064c4, label %dec_label_pc_100063b8

dec_label_pc_100063b8:                            ; preds = %dec_label_pc_100063a0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100063c0

dec_label_pc_100063c0:                            ; preds = %dec_label_pc_100064c4, %dec_label_pc_100063b8
  %v1_100063a037 = phi i32 [ %v1_100063a4, %dec_label_pc_100064c4 ], [ 0, %dec_label_pc_100063b8 ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_100063c0 = add i32 %v0_100063c0, -1
  %v2_100063c0 = icmp eq i32 %v1_100063c0, 0
  br i1 %v2_100063c0, label %dec_label_pc_100063c4, label %dec_label_pc_100063a0

dec_label_pc_100063c4:                            ; preds = %dec_label_pc_100063c0, %dec_label_pc_1000638c, %dec_label_pc_10006380
  %v3_100063c4 = load i32, i32* %stack_var_-8456, align 4
  %v2_100063c8 = icmp slt i32 %v3_100062ec98, %v3_100063c4
  br i1 %v2_100063c8, label %dec_label_pc_10006408, label %dec_label_pc_100063d0

dec_label_pc_100063d0:                            ; preds = %dec_label_pc_100063c4
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100062f099, label %dec_label_pc_10006408, label %dec_label_pc_100063e4.preheader

dec_label_pc_100063e4.preheader:                  ; preds = %dec_label_pc_100063d0
  %v0_100063e4.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100063e4

dec_label_pc_100063e4:                            ; preds = %dec_label_pc_100063e4.preheader, %dec_label_pc_10006404
  %v0_10006404 = phi i32 [ %v3_100062ec98, %dec_label_pc_100063e4.preheader ], [ %v1_10006404, %dec_label_pc_10006404 ]
  %storemerge4.in = phi i32 [ %v2_10005f1c, %dec_label_pc_100063e4.preheader ], [ %storemerge4, %dec_label_pc_10006404 ]
  %v1_100063e4 = phi i32 [ 0, %dec_label_pc_100063e4.preheader ], [ %v1_100063e443, %dec_label_pc_10006404 ]
  %v2_100063e4 = add i32 %v1_100063e4, %v0_100063e4.pre
  %v3_100063e4 = inttoptr i32 %v2_100063e4 to i8*
  %v4_100063e4 = load i8, i8* %v3_100063e4, align 1
  %v1_100063e8 = add i32 %v1_100063e4, 1
  store i32 %v1_100063e8, i32* %r11.global-to-local, align 4
  %v1_100063ec = inttoptr i32 %storemerge4.in to i8*
  %v2_100063ec = load i8, i8* %v1_100063ec, align 1
  %v4_100063f4 = icmp eq i8 %v2_100063ec, %v4_100063e4
  br i1 %v4_100063f4, label %dec_label_pc_100064d0, label %dec_label_pc_100063fc

dec_label_pc_100063fc:                            ; preds = %dec_label_pc_100063e4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006404

dec_label_pc_10006404:                            ; preds = %dec_label_pc_100064d0, %dec_label_pc_100063fc
  %v1_100063e443 = phi i32 [ %v1_100063e8, %dec_label_pc_100064d0 ], [ 0, %dec_label_pc_100063fc ]
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_10006404 = add i32 %v0_10006404, -1
  %v2_10006404 = icmp eq i32 %v1_10006404, 0
  br i1 %v2_10006404, label %dec_label_pc_10006408, label %dec_label_pc_100063e4

dec_label_pc_10006408:                            ; preds = %dec_label_pc_10006404, %dec_label_pc_100063d0, %dec_label_pc_100063c4
  %v3_10006408 = load i32, i32* %stack_var_-8440, align 4
  %v2_1000640c = icmp slt i32 %v3_100062ec98, %v3_10006408
  br i1 %v2_1000640c, label %dec_label_pc_100062e0.backedge, label %dec_label_pc_10006414

dec_label_pc_10006414:                            ; preds = %dec_label_pc_10006408
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100062f099, label %dec_label_pc_100062e0.backedge, label %dec_label_pc_10006428.lr.ph

dec_label_pc_100062e0.backedge:                   ; preds = %dec_label_pc_10006424.backedge, %dec_label_pc_10006414, %dec_label_pc_10006408
  %v0_100062e0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268460784, i32* @lr, align 4
  %v3_100062ec = call i32 @function_1000a9d4(i32 %v0_100062e0, i32 %v2_10005f1c, i32 4096)
  %tmp88 = icmp slt i32 %v3_100062ec, 1
  br i1 %tmp88, label %dec_label_pc_100064f8, label %dec_label_pc_100062f8

dec_label_pc_10006428.lr.ph:                      ; preds = %dec_label_pc_10006414
  %v0_10006428.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10006428

dec_label_pc_10006428:                            ; preds = %dec_label_pc_10006428.lr.ph, %dec_label_pc_10006424.backedge
  %v0_10006424 = phi i32 [ %v3_100062ec98, %dec_label_pc_10006428.lr.ph ], [ %v1_10006424, %dec_label_pc_10006424.backedge ]
  %storemerge19.in = phi i32 [ %v2_10005f1c, %dec_label_pc_10006428.lr.ph ], [ %storemerge19, %dec_label_pc_10006424.backedge ]
  %v1_10006428 = phi i32 [ 0, %dec_label_pc_10006428.lr.ph ], [ %v1_1000642849, %dec_label_pc_10006424.backedge ]
  %v2_10006428 = add i32 %v1_10006428, %v0_10006428.pre
  %v3_10006428 = inttoptr i32 %v2_10006428 to i8*
  %v4_10006428 = load i8, i8* %v3_10006428, align 1
  %v1_1000642c = add i32 %v1_10006428, 1
  store i32 %v1_1000642c, i32* %r11.global-to-local, align 4
  %v1_10006430 = inttoptr i32 %storemerge19.in to i8*
  %v2_10006430 = load i8, i8* %v1_10006430, align 1
  %v4_10006438 = icmp eq i8 %v2_10006430, %v4_10006428
  br i1 %v4_10006438, label %dec_label_pc_100064dc, label %dec_label_pc_10006440

dec_label_pc_10006440:                            ; preds = %dec_label_pc_10006428
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006424.backedge

dec_label_pc_10006424.backedge:                   ; preds = %dec_label_pc_100064dc, %dec_label_pc_10006440
  %v1_1000642849 = phi i32 [ 0, %dec_label_pc_10006440 ], [ %v1_1000642c, %dec_label_pc_100064dc ]
  %storemerge19 = add i32 %storemerge19.in, 1
  %v1_10006424 = add i32 %v0_10006424, -1
  %v2_10006424 = icmp eq i32 %v1_10006424, 0
  br i1 %v2_10006424, label %dec_label_pc_100062e0.backedge, label %dec_label_pc_10006428

dec_label_pc_1000644c:                            ; preds = %dec_label_pc_10006318
  %v4_10006324 = icmp eq i32 %v3_100062f8, %v1_1000631c
  br i1 %v4_10006324, label %dec_label_pc_10006450, label %dec_label_pc_10006334

dec_label_pc_10006450:                            ; preds = %dec_label_pc_1000644c, %dec_label_pc_100064b8, %dec_label_pc_100064c4, %dec_label_pc_100064d0, %dec_label_pc_100064dc
  store i32 ptrtoint ([3 x i8]* @global_var_10006458.109 to i32), i32* @lr, align 4
  %v1_10006454 = call i32 @function_10009600(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_10006460.110 to i32), i32* @lr, align 4
  %v1_1000645c = call i32 @function_10009600(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10006468.111 to i32), i32* @lr, align 4
  %v1_10006464 = call i32 @function_10009600(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10006470.112 to i32), i32* @lr, align 4
  %v1_1000646c = call i32 @function_10009600(i32 15)
  store i32 268461176, i32* @lr, align 4
  %v1_10006474 = call i32 @function_10009600(i32 16)
  store i32 268461184, i32* @lr, align 4
  %v0_1000647c = call i32 @function_1000a79c()
  %v0_10006480 = load i32, i32* %r30.global-to-local, align 4
  store i32 268461196, i32* @lr, align 4
  %v2_10006488 = call i32 @function_1000a8bc(i32 %v0_10006480, i32 9)
  br label %dec_label_pc_1000648c

dec_label_pc_1000648c:                            ; preds = %dec_label_pc_1000624c, %dec_label_pc_100064f8, %dec_label_pc_10006450
  store i32 64, i32* @r4, align 4
  store i32 %v2_10005ff4, i32* @r3, align 4
  store i32 268461208, i32* @lr, align 4
  %v0_10006494 = call i32 @function_10009fb8()
  store i32 %v2_10005ff8, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_100064a0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100064a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100064a8.113 to i32), i32* @lr, align 4
  %v0_100064a4 = call i32 @function_10009fb8()
  store i32 268461232, i32* @lr, align 4
  %v1_100064ac = call i32 @function_1000c090(i32 1)
  %v0_100064b0 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_100064b0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006028.backedge

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_1000635c
  %v4_10006368 = icmp eq i32 %v3_1000633c, %v1_10006360
  br i1 %v4_10006368, label %dec_label_pc_10006450, label %dec_label_pc_1000637c

dec_label_pc_100064c4:                            ; preds = %dec_label_pc_100063a0
  %v4_100063ac = icmp eq i32 %v3_10006380, %v1_100063a4
  br i1 %v4_100063ac, label %dec_label_pc_10006450, label %dec_label_pc_100063c0

dec_label_pc_100064d0:                            ; preds = %dec_label_pc_100063e4
  %v4_100063f0 = icmp eq i32 %v3_100063c4, %v1_100063e8
  br i1 %v4_100063f0, label %dec_label_pc_10006450, label %dec_label_pc_10006404

dec_label_pc_100064dc:                            ; preds = %dec_label_pc_10006428
  %v4_10006434 = icmp eq i32 %v3_10006408, %v1_1000642c
  br i1 %v4_10006434, label %dec_label_pc_10006450, label %dec_label_pc_10006424.backedge

dec_label_pc_100064e8:                            ; preds = %dec_label_pc_10006228
  %v0_100064e8 = load i32, i32* %r30.global-to-local, align 4
  store i32 268461300, i32* @lr, align 4
  %v2_100064f0 = call i32 @function_1000a8bc(i32 %v0_100064e8, i32 9)
  br label %dec_label_pc_10006244

dec_label_pc_100064f8:                            ; preds = %dec_label_pc_100062e0.backedge, %dec_label_pc_10006268
  store i32 ptrtoint ([3 x i8]* @global_var_10006500.114 to i32), i32* @lr, align 4
  %v1_100064fc = call i32 @function_10009600(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_10006508.115 to i32), i32* @lr, align 4
  %v1_10006504 = call i32 @function_10009600(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10006510.116 to i32), i32* @lr, align 4
  %v1_1000650c = call i32 @function_10009600(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10006518.117 to i32), i32* @lr, align 4
  %v1_10006514 = call i32 @function_10009600(i32 15)
  store i32 268461344, i32* @lr, align 4
  %v1_1000651c = call i32 @function_10009600(i32 16)
  store i32 268461352, i32* @lr, align 4
  %v0_10006524 = call i32 @function_1000a79c()
  br label %dec_label_pc_1000648c

; uselistorder directives
  uselistorder i32 %v1_10006424, { 1, 0 }
  uselistorder i32 %v1_1000642c, { 1, 0, 2 }
  uselistorder i32 %v1_10006428, { 1, 0 }
  uselistorder i32 %v3_100062ec, { 2, 1, 0 }
  uselistorder i32 %v1_10006404, { 1, 0 }
  uselistorder i32 %v1_100063e4, { 1, 0 }
  uselistorder i32 %v1_100063c0, { 1, 0 }
  uselistorder i32 %v1_100063a0, { 1, 0 }
  uselistorder i32 %v1_1000637c, { 1, 0 }
  uselistorder i32 %v1_1000635c, { 1, 0 }
  uselistorder i32 %v1_10006338, { 1, 0 }
  uselistorder i32 %v1_10006318, { 1, 0 }
  uselistorder i1 %v3_100062f099, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100062ec98, { 9, 1, 8, 3, 7, 4, 6, 2, 5, 0 }
  uselistorder i32 %v2_1000602c, { 1, 0 }
  uselistorder i32 %v2_10006084, { 1, 0 }
  uselistorder i32 %v1_10006040, { 1, 0 }
  uselistorder i32 %v2_10005ffc, { 1, 0, 2 }
  uselistorder i32 %v2_10005f70, { 1, 0, 2 }
  uselistorder i32 %v2_10005f4c, { 1, 0, 2 }
  uselistorder i32 %v2_10005f1c, { 1, 6, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11 }
  uselistorder i32 %v0_10005e3c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8436, { 1, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 15, 16 }
  uselistorder i32 268460784, { 1, 0 }
  uselistorder i32 (i32*)* @function_1000adf8, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268460080, { 1, 0 }
  uselistorder i32 (i32)* @function_1000ace8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000aa1c, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000648c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006450, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006428, { 1, 0 }
  uselistorder label %dec_label_pc_100063e4, { 1, 0 }
  uselistorder label %dec_label_pc_100063a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000635c, { 1, 0 }
  uselistorder label %dec_label_pc_10006318, { 1, 0 }
  uselistorder label %dec_label_pc_100062f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000624c, { 1, 0 }
  uselistorder label %dec_label_pc_10006244, { 1, 0 }
  uselistorder label %dec_label_pc_10006028.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_100061b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006038, { 1, 0 }
  uselistorder label %dec_label_pc_10006038.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10005ef8, { 1, 0 }
}

define i32 @function_1000652c() local_unnamed_addr {
dec_label_pc_1000652c:
  store i32 268461868, i32* @global_var_1001e168.118, align 4
  %v0_1000653c = load i32, i32* @r3, align 4
  ret i32 %v0_1000653c
}

define i32 @function_10006540(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006540:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10006554 = load i32, i32* @r27, align 4
  %v0_10006560 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_1000657c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1000657c, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268461448, i32* @lr, align 4
  %v3_10006584 = call i32 @function_1000b568(i32 2, i32 1, i32 0)
  %v3_10006588 = icmp eq i32 %v3_10006584, -1
  store i32 %v3_10006584, i32* @global_var_1001e160.119, align 4
  br i1 %v3_10006588, label %dec_label_pc_10006638, label %dec_label_pc_100065a4

dec_label_pc_100065a4:                            ; preds = %dec_label_pc_10006540
  %v2_1000658c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268461480, i32* @lr, align 4
  %v5_100065a4 = call i32 @function_1000b52c(i32 %v3_10006584, i32 1, i32 2, i32 %v2_1000658c, i32 4)
  %v3_100065a8 = load i32, i32* @global_var_1001e160.119, align 4
  store i32 3, i32* @r4, align 4
  store i32 268461504, i32* @lr, align 4
  %v2_100065bc = call i32 @function_1000a66c(i32 %v3_100065a8)
  store i32 4, i32* @r4, align 4
  store i32 268461524, i32* @lr, align 4
  %v2_100065d0 = call i32 @function_1000a66c(i32 %v3_100065a8)
  %v3_100065d4 = load i8, i8* @global_var_1001e020.120, align 1
  %v3_100065dc = icmp eq i8 %v3_100065d4, 0
  br i1 %v3_100065dc, label %dec_label_pc_1000665c, label %dec_label_pc_100065e8

dec_label_pc_100065e8:                            ; preds = %dec_label_pc_100065a4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100065fc = call i32 @function_1000aeb8()
  %v0_10006600 = load i32, i32* @r27, align 4
  %v2_10006600 = inttoptr i32 %v0_100065fc to i32*
  store i32 %v0_10006600, i32* %v2_10006600, align 4
  store i32 %v0_100065fc, i32* @r29, align 4
  %v3_10006610 = load i32, i32* @global_var_1001e160.119, align 4
  store i32 268461592, i32* @lr, align 4
  %v3_10006614 = call i32 @function_1000b334(i32 %v3_10006610, i32 %v2_1000657c, i32 16)
  %v3_1000661c = icmp eq i32 %v3_10006614, -1
  br i1 %v3_1000661c, label %dec_label_pc_100066a4, label %dec_label_pc_10006628

dec_label_pc_10006628:                            ; preds = %dec_label_pc_1000665c, %dec_label_pc_100065e8
  %v3_10006630 = load i32, i32* @global_var_1001e160.119, align 4
  store i32 268461624, i32* @lr, align 4
  %v2_10006634 = call i32 @function_1000b40c(i32 %v3_10006630, i32 1)
  br label %dec_label_pc_10006638

dec_label_pc_10006638:                            ; preds = %dec_label_pc_10006540, %dec_label_pc_10006628
  %v0_10006658 = phi i32 [ -1, %dec_label_pc_10006540 ], [ %v2_10006634, %dec_label_pc_10006628 ]
  store i32 %v0_10006554, i32* @r27, align 4
  store i32 %v0_10006560, i32* @r28, align 4
  ret i32 %v0_10006658

dec_label_pc_1000665c:                            ; preds = %dec_label_pc_100065a4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10006678 = call i32 @function_1000aeb8()
  %v0_1000667c = load i32, i32* @r27, align 4
  %v2_1000667c = inttoptr i32 %v0_10006678 to i32*
  store i32 %v0_1000667c, i32* %v2_1000667c, align 4
  store i32 %v0_10006678, i32* @r29, align 4
  %v3_1000668c = load i32, i32* @global_var_1001e160.119, align 4
  store i32 268461716, i32* @lr, align 4
  %v3_10006690 = call i32 @function_1000b334(i32 %v3_1000668c, i32 %v2_1000657c, i32 16)
  %v3_10006698 = icmp eq i32 %v3_10006690, -1
  br i1 %v3_10006698, label %dec_label_pc_100066a4, label %dec_label_pc_10006628

dec_label_pc_100066a4:                            ; preds = %dec_label_pc_1000665c, %dec_label_pc_100065e8
  %v0_100066a4 = load i32, i32* @r29, align 4
  %v1_100066a4 = inttoptr i32 %v0_100066a4 to i32*
  %v2_100066a4 = load i32, i32* %v1_100066a4, align 4
  %v3_100066a8 = load i32, i32* @global_var_1001e160.119, align 4
  store i32 %v3_100066a8, i32* @r3, align 4
  %v3_100066ac = icmp eq i32 %v2_100066a4, 99
  br i1 %v3_100066ac, label %dec_label_pc_10006714, label %dec_label_pc_100066b4

dec_label_pc_100066b4:                            ; preds = %dec_label_pc_10006714, %dec_label_pc_100066a4, %dec_label_pc_10006720
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100066d0.121 to i32), i32* @lr, align 4
  %v0_100066cc = call i32 @function_1000b368()
  store i32 268461784, i32* @lr, align 4
  %v1_100066d4 = call i32 @function_1000c090(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_100066e0.122 to i32), i32* @lr, align 4
  %v0_100066dc = call i32 @function_1000a79c()
  store i32 268461804, i32* @lr, align 4
  %v1_100066e8 = call i32 @function_100057f4(i32 48101)
  store i32 268461808, i32* @lr, align 4
  %v1_100066ec = call i32 @function_10006540(i32 %v1_100066e8)
  store i32 %v0_10006554, i32* @r27, align 4
  store i32 %v0_10006560, i32* @r28, align 4
  ret i32 %v1_100066ec

dec_label_pc_10006714:                            ; preds = %dec_label_pc_100066a4
  %v3_10006714 = load i8, i8* @global_var_1001e020.120, align 1
  %v3_10006718 = icmp eq i8 %v3_10006714, 0
  br i1 %v3_10006718, label %dec_label_pc_100066b4, label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_10006714
  %v0_10006724 = load i32, i32* @r27, align 4
  %v1_10006724 = trunc i32 %v0_10006724 to i8
  store i8 %v1_10006724, i8* @global_var_1001e020.120, align 1
  br label %dec_label_pc_100066b4

; uselistorder directives
  uselistorder i32 %v2_1000657c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_100057f4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000b40c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000b334, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001e020.120, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100066b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006638, { 1, 0 }
}

define i32 @function_1000672c() local_unnamed_addr {
dec_label_pc_1000672c:
  %r28.global-to-local = alloca i32, align 4
  store i32 268461900, i32* @lr, align 4
  %v1_10006748 = call i32 @function_1000968c(i32 3)
  %v3_10006754 = call i32 @function_100095d8(i32 3, i32* null)
  store i32 268461916, i32* @lr, align 4
  %v1_10006758 = call i32 @function_10007324(i32 %v3_10006754)
  store i32 %v1_10006758, i32* @r31, align 4
  store i32 268461928, i32* @lr, align 4
  %v1_10006764 = call i32 @function_10009600(i32 3)
  %v0_10006768 = load i32, i32* @r31, align 4
  %v3_10006768 = icmp eq i32 %v0_10006768, 0
  br i1 %v3_10006768, label %dec_label_pc_100067cc, label %dec_label_pc_10006770

dec_label_pc_10006770:                            ; preds = %dec_label_pc_1000672c
  %v1_10006770 = add i32 %v0_10006768, 4
  %v2_10006770 = inttoptr i32 %v1_10006770 to i32*
  %v3_10006770 = load i32, i32* %v2_10006770, align 4
  store i32 %v3_10006770, i32* %r28.global-to-local, align 4
  %v0_10006774 = call i32 @function_10006fa8()
  %v0_10006778 = load i32, i32* @r31, align 4
  %v1_10006778 = inttoptr i32 %v0_10006778 to i8*
  %v2_10006778 = load i8, i8* %v1_10006778, align 1
  %v3_10006778 = zext i8 %v2_10006778 to i32
  %v2_10006784 = urem i32 %v0_10006774, %v3_10006778
  %v1_10006798 = mul nuw nsw i32 %v2_10006784, 4
  %v1_1000679c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000679c = add i32 %v1_1000679c, %v1_10006798
  %v3_1000679c = inttoptr i32 %v2_1000679c to i32*
  %v4_1000679c = load i32, i32* %v3_1000679c, align 4
  store i32 %v4_1000679c, i32* @global_var_1001e280.125, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100067a8.126 to i32), i32* @lr, align 4
  %v1_100067a4 = call i32 @function_100072e0(i32 %v0_10006778)
  store i32 ptrtoint ([3 x i8]* @global_var_100067b0.127 to i32), i32* @lr, align 4
  %v1_100067ac = call i32 @function_1000968c(i32 4)
  %v3_100067b8 = call i32 @function_100095d8(i32 4, i32* null)
  %v4_100067b8 = inttoptr i32 %v3_100067b8 to i16*
  %v3_100067bc = load i16, i16* %v4_100067b8, align 2
  store i16 %v3_100067bc, i16* bitcast (i32* @global_var_1001e27e.128 to i16*), align 4
  store i32 268462028, i32* @lr, align 4
  %v1_100067c8 = call i32 @function_10009600(i32 4)
  br label %dec_label_pc_100067cc

dec_label_pc_100067cc:                            ; preds = %dec_label_pc_1000672c, %dec_label_pc_10006770
  %v0_100067e4 = phi i32 [ %v1_10006764, %dec_label_pc_1000672c ], [ %v1_100067c8, %dec_label_pc_10006770 ]
  ret i32 %v0_100067e4

; uselistorder directives
  uselistorder label %dec_label_pc_100067cc, { 1, 0 }
}

define i32 @function_100067e8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100067e8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-1568 = alloca i32, align 4
  %stack_var_-1580 = alloca i32, align 4
  %stack_var_-1104 = alloca i32, align 4
  %stack_var_-1576 = alloca i32, align 4
  %stack_var_-1232 = alloca i32, align 4
  %stack_var_-1360 = alloca i32, align 4
  %stack_var_-1588 = alloca i32, align 4
  %stack_var_-1592 = alloca i16, align 2
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1488 = alloca i32, align 4
  %v0_100067e8 = load i32, i32* @lr, align 4
  store i32 %v0_100067e8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r28, align 4
  %v2_10006800 = ptrtoint i32* %stack_var_-1488 to i32
  %v2_10006804 = load i32, i32* %arg2, align 4
  store i32 %tmp, i32* @r27, align 4
  store i32 268462152, i32* @lr, align 4
  %v1_10006844 = call i32 @function_1000abb4(i32 %v2_10006804)
  store i32 268462160, i32* @lr, align 4
  %v1_1000684c = call i32 @function_1000b618(i32 %v2_10006800)
  store i32 %v2_10006800, i32* @r3, align 4
  store i32 268462172, i32* @lr, align 4
  %v2_10006858 = call i32 @function_1000b5cc(i32 %v2_10006800, i32 2)
  store i32 0, i32* @r5, align 4
  store i32 268462188, i32* @lr, align 4
  %v3_10006868 = call i32 @function_1000aaf4(i32 0, i32 %v2_10006800, i32 0)
  store i32 268462200, i32* @lr, align 4
  %v2_10006874 = call i32 @function_1000b644(i32 17, i32 1)
  store i32 268462216, i32* @lr, align 4
  %v2_10006884 = call i32 @function_1000b644(i32 5, i32 268461356)
  store i32 268462236, i32* @lr, align 4
  %v3_10006898 = call i32 @function_1000a904(i32 ptrtoint ([14 x i8]* @global_var_1000d258.129 to i32), i32 2)
  %v3_1000689c = icmp eq i32 %v3_10006898, -1
  store i32 %v3_10006898, i32* @r29, align 4
  br i1 %v3_1000689c, label %dec_label_pc_10006a5c, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_10006a5c, %dec_label_pc_100067e8
  %v0_100068b4 = phi i32 [ %v3_10006a6c, %dec_label_pc_10006a5c ], [ %v3_10006898, %dec_label_pc_100067e8 ]
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100068b8 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_100068b8, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-1584, align 4
  store i32 268462280, i32* @lr, align 4
  %v3_100068c4 = call i32 @function_1000a584(i32 %v0_100068b4, i32 -2147199228, i32 %v2_100068b8)
  store i32 268462288, i32* @lr, align 4
  %v0_100068cc = call i32 @function_1000a79c()
  br label %dec_label_pc_100068d0

dec_label_pc_100068d0:                            ; preds = %dec_label_pc_10006a5c, %dec_label_pc_100068a8
  store i32 268566528, i32* @r30, align 4
  store i32 268566528, i32* @r22, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100068e4.130 to i32), i32* @lr, align 4
  %v1_100068e0 = call i32 @function_1000a754(i32 ptrtoint (i32* @global_var_1000d1f0.8 to i32))
  %v2_100068e4 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_100068e4, i32* @r26, align 4
  store i32 268462316, i32* @lr, align 4
  %v1_100068e8 = call i32 @function_1000a214(i32 %v1_100068e0)
  store i32 1105119797, i32* %r9.global-to-local, align 4
  store i32 1105119797, i32* @global_var_1001e280.125, align 4
  store i16 80, i16* bitcast (i32* @global_var_1001e27e.128 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001e27c.124 to i16*), align 4
  store i32 %v1_100068e8, i32* @global_var_1001e180.71, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006914.131 to i32), i32* @lr, align 4
  %v2_10006910 = call i32 @function_10009718(i32 %v1_100068e8, i32 1105119797)
  store i32 268462364, i32* @lr, align 4
  %v1_10006918 = call i32 @function_1000b59c(i32 5)
  store i32 ptrtoint (i32* @global_var_10006920.132 to i32), i32* @lr, align 4
  %v1_1000691c = call i32 @function_10006540(i32 %v1_10006918)
  store i32 268462372, i32* @lr, align 4
  %v1_10006920 = call i32 @function_10006ff8(i32 %v1_1000691c)
  store i32 %v2_100068e4, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268462384, i32* @lr, align 4
  %v0_1000692c = call i32 @function_10009fb8()
  %v0_10006930 = load i32, i32* @r28, align 4
  %v3_10006930 = icmp eq i32 %v0_10006930, 2
  br i1 %v3_10006930, label %dec_label_pc_10006a80, label %dec_label_pc_10006938

dec_label_pc_10006938:                            ; preds = %dec_label_pc_10006a80, %dec_label_pc_100068d0, %dec_label_pc_10006a90
  %v0_10006938 = call i32 @function_10006fa8()
  %v2_1000693c = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_1000693c, i32* @r28, align 4
  %v1_10006940 = call i32 @__asm_rlwinm(i32 %v0_10006938, i32 2, i32 28, i32 29)
  %v2_10006944 = ptrtoint i16* %stack_var_-1592 to i32
  store i32 %v2_10006944, i32* @r31, align 4
  %v1_10006948 = add i32 %v1_10006940, 12
  %v2_10006954 = add i32 %v1_10006948, %v2_10006944
  store i32 %v2_10006954, i32* @r29, align 4
  store i32 268462428, i32* @lr, align 4
  %v2_10006958 = bitcast i32* %stack_var_-1552 to i8*
  %v3_10006958 = call i32 @function_10007068(i8* %v2_10006958, i32 %v1_10006948)
  %v0_1000695c = load i32, i32* @r27, align 4
  %v1_1000695c = inttoptr i32 %v0_1000695c to i32*
  %v2_1000695c = load i32, i32* %v1_1000695c, align 4
  store i32 %v2_1000695c, i32* @r3, align 4
  store i32 0, i32* @r27, align 4
  %v2_10006968 = load i32, i32* @r29, align 4
  %v3_10006968 = add i32 %v2_10006968, 40
  %v4_10006968 = inttoptr i32 %v3_10006968 to i8*
  store i8 0, i8* %v4_10006968, align 1
  %v2_1000696c = inttoptr i32 %v2_1000695c to i8*
  %v3_1000696c = call i32 @function_10009f38(i8* %v2_1000696c, i32 %v2_1000693c)
  %v0_10006970 = call i32 @function_10006fa8()
  %v1_10006970 = sext i32 %v0_10006970 to i64
  %v5_10006980 = mul nuw nsw i64 %v1_10006970, 2863311531
  %v1_100069882 = udiv i64 %v5_10006980, 17179869184
  %v1_10006988 = trunc i64 %v1_100069882 to i32
  %v1_1000698c = mul i32 %v1_10006988, 6
  store i32 %v1_1000698c, i32* %r0.global-to-local, align 4
  %v2_10006990 = sub i32 %v0_10006970, %v1_1000698c
  %v1_10006994 = mul i32 %v2_10006990, 4
  %v1_10006998 = add i32 %v1_10006994, 12
  %v0_100069a0 = load i32, i32* @r31, align 4
  %v2_100069a0 = add i32 %v1_10006998, %v0_100069a0
  store i32 %v2_100069a0, i32* @r29, align 4
  store i32 268462504, i32* @lr, align 4
  %v3_100069a4 = call i32 @function_10007068(i8* %v2_10006958, i32 %v1_10006998)
  %v0_100069a8 = load i32, i32* @r27, align 4
  %v1_100069a8 = trunc i32 %v0_100069a8 to i8
  %v2_100069a8 = load i32, i32* @r29, align 4
  %v3_100069a8 = add i32 %v2_100069a8, 40
  %v4_100069a8 = inttoptr i32 %v3_100069a8 to i8*
  store i8 %v1_100069a8, i8* %v4_100069a8, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100069bc.135 to i32), i32* @lr, align 4
  %v2_100069b8 = call i32 @function_1000a98c(i32 15, i32 %v2_1000693c)
  store i32 268462532, i32* @lr, align 4
  %v1_100069c0 = call i32 @function_1000968c(i32 2)
  %v3_100069cc = call i32 @function_100095d8(i32 2, i32* nonnull %stack_var_-1588)
  %v3_100069d0 = load i32, i32* %stack_var_-1588, align 4
  store i32 %v3_100069d0, i32* %r5.global-to-local, align 4
  store i32 268462560, i32* @lr, align 4
  %v3_100069dc = call i32 @function_1000abfc(i32 1, i32 %v3_100069cc, i32 %v3_100069d0)
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100069f4.137 to i32), i32* @lr, align 4
  %v3_100069f0 = call i32 @function_1000abfc(i32 1, i32 ptrtoint (i32* @global_var_1000d27c.136 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_100069fc.138 to i32), i32* @lr, align 4
  %v1_100069f8 = call i32 @function_10009600(i32 2)
  store i32 268462592, i32* @lr, align 4
  %v0_100069fc = call i32 @function_1000a7e4()
  %tmp45 = icmp slt i32 %v0_100069fc, 1
  br i1 %tmp45, label %dec_label_pc_10006ab8, label %dec_label_pc_10006a08

dec_label_pc_10006a08:                            ; preds = %dec_label_pc_10006938
  store i32 %v0_100067e8, i32* %r0.global-to-local, align 4
  ret i32 0

dec_label_pc_10006a5c:                            ; preds = %dec_label_pc_100067e8
  store i32 268462704, i32* @lr, align 4
  %v3_10006a6c = call i32 @function_1000a904(i32 ptrtoint ([19 x i8]* @global_var_1000d268.139 to i32), i32 2)
  %v3_10006a70 = icmp eq i32 %v3_10006a6c, -1
  store i32 %v3_10006a6c, i32* @r29, align 4
  br i1 %v3_10006a70, label %dec_label_pc_100068d0, label %dec_label_pc_100068a8

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_100068d0
  %v0_10006a80 = load i32, i32* @r27, align 4
  %v1_10006a80 = add i32 %v0_10006a80, 4
  %v2_10006a80 = inttoptr i32 %v1_10006a80 to i32*
  %v3_10006a80 = load i32, i32* %v2_10006a80, align 4
  store i32 268462728, i32* @lr, align 4
  %v1_10006a84 = inttoptr i32 %v3_10006a80 to i8*
  %v2_10006a84 = call i32 @function_10009f10(i8* %v1_10006a84)
  %v2_10006a88 = icmp sgt i32 %v2_10006a84, 31
  br i1 %v2_10006a88, label %dec_label_pc_10006938, label %dec_label_pc_10006a90

dec_label_pc_10006a90:                            ; preds = %dec_label_pc_10006a80
  %v0_10006a90 = load i32, i32* @r27, align 4
  %v1_10006a90 = add i32 %v0_10006a90, 4
  %v2_10006a90 = inttoptr i32 %v1_10006a90 to i32*
  %v3_10006a90 = load i32, i32* %v2_10006a90, align 4
  store i32 %v2_100068e4, i32* @r3, align 4
  %v2_10006a98 = bitcast i32* %stack_var_-1520 to i8*
  %v3_10006a98 = call i32 @function_10009f38(i8* %v2_10006a98, i32 %v3_10006a90)
  %v0_10006a9c = load i32, i32* @r27, align 4
  %v1_10006a9c = add i32 %v0_10006a9c, 4
  %v2_10006a9c = inttoptr i32 %v1_10006a9c to i32*
  %v3_10006a9c = load i32, i32* %v2_10006a9c, align 4
  store i32 268462760, i32* @lr, align 4
  %v1_10006aa4 = inttoptr i32 %v3_10006a9c to i8*
  %v2_10006aa4 = call i32 @function_10009f10(i8* %v1_10006aa4)
  store i32 %v2_10006aa4, i32* @r4, align 4
  store i32 %v3_10006a9c, i32* @r3, align 4
  store i32 268462772, i32* @lr, align 4
  %v0_10006ab0 = call i32 @function_10009fb8()
  br label %dec_label_pc_10006938

dec_label_pc_10006ab8:                            ; preds = %dec_label_pc_10006938
  store i32 268462780, i32* @lr, align 4
  %v1_10006ab8 = call i32 @function_1000aaac(i32 %v0_100069fc)
  store i32 0, i32* @r20, align 4
  store i32 %v1_10006ab8, i32* @r18, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006acc.140 to i32), i32* @lr, align 4
  %v0_10006ac8 = call i32 @function_1000a79c()
  store i32 ptrtoint ([3 x i8]* @global_var_10006ad4.141 to i32), i32* @lr, align 4
  %v0_10006ad0 = call i32 @function_1000a79c()
  store i32 ptrtoint ([3 x i8]* @global_var_10006adc.142 to i32), i32* @lr, align 4
  %v0_10006ad8 = call i32 @function_1000a79c()
  %v2_10006adc = ptrtoint i32* %stack_var_-1584 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_10006ae4.143 to i32), i32* @lr, align 4
  %v1_10006ae0 = call i32 @function_100023e0(i32 %v0_10006ad8)
  %v2_10006ae4 = ptrtoint i32* %stack_var_-1360 to i32
  store i32 %v2_10006ae4, i32* @r27, align 4
  store i32 268462828, i32* @lr, align 4
  %v1_10006ae8 = call i32 @function_10005de8(i32 %v1_10006ae0)
  %v2_10006aec = ptrtoint i32* %stack_var_-1232 to i32
  store i32 %v2_10006aec, i32* @r28, align 4
  store i32 268462836, i32* @lr, align 4
  %v0_10006af0 = call i32 @function_10007b04()
  store i32 268566528, i32* @r24, align 4
  %v2_10006b00 = ptrtoint i32* %stack_var_-1576 to i32
  %v2_10006d58 = ptrtoint i32* %stack_var_-1104 to i32
  %v2_10006e50 = ptrtoint i32* %stack_var_-1580 to i32
  %v1_10006edc = bitcast i32* %stack_var_-1520 to i8*
  %v2_10006eac = ptrtoint i32* %stack_var_-1568 to i32
  br label %dec_label_pc_10006b04

dec_label_pc_10006b04:                            ; preds = %dec_label_pc_10006f44, %dec_label_pc_10006f68, %dec_label_pc_10006f38, %dec_label_pc_10006ed8, %dec_label_pc_10006cdc, %dec_label_pc_10006ccc, %dec_label_pc_10006bbc, %dec_label_pc_10006f9c, %dec_label_pc_10006f50, %dec_label_pc_10006f24, %dec_label_pc_10006e6c, %dec_label_pc_10006d90, %dec_label_pc_10006c90, %dec_label_pc_10006ab8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006b1447 = load i32, i32* @r27, align 4
  %v4_10006b1449 = inttoptr i32 %v2_10006b1447 to i32*
  store i32 0, i32* %v4_10006b1449, align 4
  %v0_10006b1850 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b1851 = add i32 %v0_10006b1850, 4
  store i32 %v1_10006b1851, i32* %r9.global-to-local, align 4
  %v0_10006b1c52 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b1c53 = add i32 %v0_10006b1c52, -1
  store i32 %v1_10006b1c53, i32* %ctr.global-to-local, align 4
  %v2_10006b1c54 = icmp eq i32 %v1_10006b1c53, 0
  br i1 %v2_10006b1c54, label %dec_label_pc_10006b20, label %dec_label_pc_10006b14.dec_label_pc_10006b14_crit_edge

dec_label_pc_10006b14.dec_label_pc_10006b14_crit_edge: ; preds = %dec_label_pc_10006b04, %dec_label_pc_10006b14.dec_label_pc_10006b14_crit_edge
  %v1_10006b1855 = phi i32 [ %v1_10006b18, %dec_label_pc_10006b14.dec_label_pc_10006b14_crit_edge ], [ %v1_10006b1851, %dec_label_pc_10006b04 ]
  %v0_10006b14.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006b14 = load i32, i32* @r27, align 4
  %v3_10006b14 = add i32 %v2_10006b14, %v1_10006b1855
  %v4_10006b14 = inttoptr i32 %v3_10006b14 to i32*
  store i32 %v0_10006b14.pre, i32* %v4_10006b14, align 4
  %v0_10006b18 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b18 = add i32 %v0_10006b18, 4
  store i32 %v1_10006b18, i32* %r9.global-to-local, align 4
  %v0_10006b1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b1c = add i32 %v0_10006b1c, -1
  store i32 %v1_10006b1c, i32* %ctr.global-to-local, align 4
  %v2_10006b1c = icmp eq i32 %v1_10006b1c, 0
  br i1 %v2_10006b1c, label %dec_label_pc_10006b20, label %dec_label_pc_10006b14.dec_label_pc_10006b14_crit_edge

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006b14.dec_label_pc_10006b14_crit_edge, %dec_label_pc_10006b04
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006b3056 = load i32, i32* @r28, align 4
  %v4_10006b3058 = inttoptr i32 %v2_10006b3056 to i32*
  store i32 0, i32* %v4_10006b3058, align 4
  %v0_10006b3459 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b3460 = add i32 %v0_10006b3459, 4
  store i32 %v1_10006b3460, i32* %r9.global-to-local, align 4
  %v0_10006b3861 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b3862 = add i32 %v0_10006b3861, -1
  store i32 %v1_10006b3862, i32* %ctr.global-to-local, align 4
  %v2_10006b3863 = icmp eq i32 %v1_10006b3862, 0
  br i1 %v2_10006b3863, label %dec_label_pc_10006b3c, label %dec_label_pc_10006b30.dec_label_pc_10006b30_crit_edge

dec_label_pc_10006b30.dec_label_pc_10006b30_crit_edge: ; preds = %dec_label_pc_10006b20, %dec_label_pc_10006b30.dec_label_pc_10006b30_crit_edge
  %v1_10006b3464 = phi i32 [ %v1_10006b34, %dec_label_pc_10006b30.dec_label_pc_10006b30_crit_edge ], [ %v1_10006b3460, %dec_label_pc_10006b20 ]
  %v0_10006b30.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006b30 = load i32, i32* @r28, align 4
  %v3_10006b30 = add i32 %v2_10006b30, %v1_10006b3464
  %v4_10006b30 = inttoptr i32 %v3_10006b30 to i32*
  store i32 %v0_10006b30.pre, i32* %v4_10006b30, align 4
  %v0_10006b34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b34 = add i32 %v0_10006b34, 4
  store i32 %v1_10006b34, i32* %r9.global-to-local, align 4
  %v0_10006b38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b38 = add i32 %v0_10006b38, -1
  store i32 %v1_10006b38, i32* %ctr.global-to-local, align 4
  %v2_10006b38 = icmp eq i32 %v1_10006b38, 0
  br i1 %v2_10006b38, label %dec_label_pc_10006b3c, label %dec_label_pc_10006b30.dec_label_pc_10006b30_crit_edge

dec_label_pc_10006b3c:                            ; preds = %dec_label_pc_10006b30.dec_label_pc_10006b30_crit_edge, %dec_label_pc_10006b20
  %v3_10006b3c = load i32, i32* @global_var_1001e160.119, align 4
  %v3_10006b40 = icmp eq i32 %v3_10006b3c, -1
  br i1 %v3_10006b40, label %dec_label_pc_10006b68, label %dec_label_pc_10006b48

dec_label_pc_10006b48:                            ; preds = %dec_label_pc_10006b3c
  %v1_10006b48 = call i32 @__asm_rlwinm(i32 %v3_10006b3c, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006b50 = load i32, i32* @r31, align 4
  %v2_10006b50 = add i32 %v1_10006b50, %v1_10006b48
  %v1_10006b54 = urem i32 %v3_10006b3c, 32
  %v1_10006b58 = add i32 %v2_10006b50, 232
  %v2_10006b58 = inttoptr i32 %v1_10006b58 to i32*
  %v3_10006b58 = load i32, i32* %v2_10006b58, align 4
  %v3_10006b5c = shl i32 1, %v1_10006b54
  store i32 %v3_10006b5c, i32* %r0.global-to-local, align 4
  %v2_10006b60 = or i32 %v3_10006b58, %v3_10006b5c
  store i32 %v2_10006b60, i32* %r9.global-to-local, align 4
  store i32 %v2_10006b60, i32* %v2_10006b58, align 4
  br label %dec_label_pc_10006b68

dec_label_pc_10006b68:                            ; preds = %dec_label_pc_10006b3c, %dec_label_pc_10006b48
  %v3_10006b68 = load i32, i32* @global_var_1001e164.144, align 4
  store i32 %v3_10006b68, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* @r25, align 4
  %v3_10006b70 = icmp eq i32 %v3_10006b68, -1
  br i1 %v3_10006b70, label %dec_label_pc_10006da8, label %dec_label_pc_10006b78

dec_label_pc_10006b78:                            ; preds = %dec_label_pc_10006da8, %dec_label_pc_10006b68, %dec_label_pc_10006e04
  %v3_10006ca4 = phi i32 [ -1, %dec_label_pc_10006da8 ], [ %v3_10006b68, %dec_label_pc_10006b68 ], [ %v3_10006ca4.pre, %dec_label_pc_10006e04 ]
  %v3_10006b78 = load i8, i8* @global_var_1001e198.145, align 1
  %v3_10006b7c = icmp eq i8 %v3_10006b78, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006cac = call i32 @__asm_rlwinm(i32 %v3_10006ca4, i32 29, i32 3, i32 29)
  %v1_10006cb0 = urem i32 %v3_10006ca4, 32
  %v1_10006cb4 = load i32, i32* @r31, align 4
  %v2_10006cb4 = add i32 %v1_10006cb4, %v1_10006cac
  %v0_10006cb8 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006cb8 = shl i32 %v0_10006cb8, %v1_10006cb0
  store i32 %v3_10006cb8, i32* %r0.global-to-local, align 4
  br i1 %v3_10006b7c, label %dec_label_pc_10006ca4, label %dec_label_pc_10006b84

dec_label_pc_10006b84:                            ; preds = %dec_label_pc_10006b78
  %v1_10006b9c = add i32 %v2_10006cb4, 360
  %v2_10006b9c = inttoptr i32 %v1_10006b9c to i32*
  %v3_10006b9c = load i32, i32* %v2_10006b9c, align 4
  %v2_10006ba0 = or i32 %v3_10006b9c, %v3_10006cb8
  store i32 %v2_10006ba0, i32* %r9.global-to-local, align 4
  store i32 %v2_10006ba0, i32* %v2_10006b9c, align 4
  br label %dec_label_pc_10006ba8

dec_label_pc_10006ba8:                            ; preds = %dec_label_pc_10006ca4, %dec_label_pc_10006b84
  %v3_10006ba8 = load i32, i32* @global_var_1001e164.144, align 4
  store i32 %v3_10006ba8, i32* %r0.global-to-local, align 4
  %v3_10006bac = load i32, i32* @global_var_1001e160.119, align 4
  %v2_10006bb0 = icmp slt i32 %v3_10006bac, %v3_10006ba8
  br i1 %v2_10006bb0, label %dec_label_pc_10006bb8, label %dec_label_pc_10006bbc

dec_label_pc_10006bb8:                            ; preds = %dec_label_pc_10006ba8
  br label %dec_label_pc_10006bbc

dec_label_pc_10006bbc:                            ; preds = %dec_label_pc_10006ba8, %dec_label_pc_10006bb8
  %v0_10006bc4 = phi i32 [ %v3_10006bac, %dec_label_pc_10006ba8 ], [ %v3_10006ba8, %dec_label_pc_10006bb8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10006bc4 = add i32 %v0_10006bc4, 1
  store i32 %v2_10006aec, i32* %r5.global-to-local, align 4
  store i32 10, i32* %stack_var_-1576, align 4
  store i32 268463076, i32* @lr, align 4
  %v5_10006be0 = call i32 @function_1000aa64(i32 %v1_10006bc4, i32 %v2_10006ae4, i32 %v2_10006aec, i32 0, i32 %v2_10006b00)
  %v6_10006be0 = trunc i32 %v5_10006be0 to i16
  %v4_10006be4 = icmp eq i16 %v6_10006be0, -1
  br i1 %v4_10006be4, label %dec_label_pc_10006b04, label %dec_label_pc_10006bec

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006bbc
  %v4_10006bec = icmp eq i16 %v6_10006be0, 0
  br i1 %v4_10006bec, label %dec_label_pc_10006bf4, label %dec_label_pc_10006c20

dec_label_pc_10006bf4:                            ; preds = %dec_label_pc_10006bec
  %v0_10006bf8 = load i32, i32* @r20, align 4
  store i16 0, i16* %stack_var_-1592, align 2
  %v2_10006c08 = srem i32 %v0_10006bf8, 6
  %v1_10006c0c = sub i32 %v0_10006bf8, %v2_10006c08
  store i32 %v1_10006c0c, i32* %r9.global-to-local, align 4
  store i32 %v2_10006c08, i32* %r0.global-to-local, align 4
  %v1_10006c14 = add i32 %v0_10006bf8, 1
  store i32 %v1_10006c14, i32* @r20, align 4
  %v3_10006c18 = icmp eq i32 %v2_10006c08, 0
  br i1 %v3_10006c18, label %dec_label_pc_10006e20, label %dec_label_pc_10006c20

dec_label_pc_10006c20:                            ; preds = %dec_label_pc_10006bec, %dec_label_pc_10006bf4, %dec_label_pc_10006e20
  %v3_10006c20 = load i32, i32* @global_var_1001e160.119, align 4
  %v3_10006c24 = icmp eq i32 %v3_10006c20, -1
  br i1 %v3_10006c24, label %dec_label_pc_10006c48, label %dec_label_pc_10006c2c

dec_label_pc_10006c2c:                            ; preds = %dec_label_pc_10006c20
  %v1_10006c2c = call i32 @__asm_rlwinm(i32 %v3_10006c20, i32 29, i32 3, i32 29)
  %v1_10006c30 = urem i32 %v3_10006c20, 32
  %v1_10006c34 = load i32, i32* @r31, align 4
  %v2_10006c34 = add i32 %v1_10006c34, %v1_10006c2c
  store i32 %v2_10006c34, i32* %r9.global-to-local, align 4
  %v1_10006c38 = add i32 %v2_10006c34, 232
  %v2_10006c38 = inttoptr i32 %v1_10006c38 to i32*
  %v3_10006c38 = load i32, i32* %v2_10006c38, align 4
  %v3_10006c3c = lshr i32 %v3_10006c38, %v1_10006c30
  store i32 %v3_10006c3c, i32* %r0.global-to-local, align 4
  %v1_10006c40 = urem i32 %v3_10006c3c, 2
  store i32 %v1_10006c40, i32* %r9.global-to-local, align 4
  %v3_10006c40 = icmp eq i32 %v1_10006c40, 0
  br i1 %v3_10006c40, label %dec_label_pc_10006c48, label %dec_label_pc_10006ea4

dec_label_pc_10006c48:                            ; preds = %dec_label_pc_10006c2c, %dec_label_pc_10006c20
  %v3_10006c48 = load i8, i8* @global_var_1001e198.145, align 1
  %v4_10006c48 = zext i8 %v3_10006c48 to i32
  store i32 %v4_10006c48, i32* @r29, align 4
  %v3_10006c4c = icmp eq i8 %v3_10006c48, 0
  %v3_10006ccc = load i32, i32* @global_var_1001e164.144, align 4
  br i1 %v3_10006c4c, label %dec_label_pc_10006ccc, label %dec_label_pc_10006c54

dec_label_pc_10006c54:                            ; preds = %dec_label_pc_10006c48
  store i32 268566528, i32* @r29, align 4
  %v1_10006c5c = call i32 @__asm_rlwinm(i32 %v3_10006ccc, i32 29, i32 3, i32 29)
  %v1_10006c60 = urem i32 %v3_10006ccc, 32
  %v1_10006c64 = load i32, i32* @r31, align 4
  %v2_10006c64 = add i32 %v1_10006c64, %v1_10006c5c
  store i32 %v2_10006c64, i32* %r9.global-to-local, align 4
  %v1_10006c68 = add i32 %v2_10006c64, 360
  %v2_10006c68 = inttoptr i32 %v1_10006c68 to i32*
  %v3_10006c68 = load i32, i32* %v2_10006c68, align 4
  %v3_10006c6c = lshr i32 %v3_10006c68, %v1_10006c60
  store i32 %v3_10006c6c, i32* %r0.global-to-local, align 4
  %v1_10006c74 = urem i32 %v3_10006c6c, 2
  %v3_10006c74 = icmp eq i32 %v1_10006c74, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* @global_var_1001e198.145, align 1
  br i1 %v3_10006c74, label %dec_label_pc_10006c84, label %dec_label_pc_10006e3c

dec_label_pc_10006c84:                            ; preds = %dec_label_pc_10006c54
  %v3_10006c84 = icmp eq i32 %v3_10006ccc, -1
  br i1 %v3_10006c84, label %dec_label_pc_10006c90, label %dec_label_pc_10006c8c

dec_label_pc_10006c8c:                            ; preds = %dec_label_pc_10006c84
  store i32 ptrtoint (i32* @global_var_10006c90.146 to i32), i32* @lr, align 4
  %v0_10006c8c = call i32 @function_1000a79c()
  br label %dec_label_pc_10006c90

dec_label_pc_10006c90:                            ; preds = %dec_label_pc_10006c84, %dec_label_pc_10006c8c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001e164.144, align 4
  store i32 268463264, i32* @lr, align 4
  %v1_10006c9c = call i32 @function_1000c090(i32 1)
  br label %dec_label_pc_10006b04

dec_label_pc_10006ca4:                            ; preds = %dec_label_pc_10006b78
  %v1_10006cbc = add i32 %v2_10006cb4, 232
  %v2_10006cbc = inttoptr i32 %v1_10006cbc to i32*
  %v3_10006cbc = load i32, i32* %v2_10006cbc, align 4
  %v2_10006cc0 = or i32 %v3_10006cbc, %v3_10006cb8
  store i32 %v2_10006cc0, i32* %r9.global-to-local, align 4
  store i32 %v2_10006cc0, i32* %v2_10006cbc, align 4
  br label %dec_label_pc_10006ba8

dec_label_pc_10006ccc:                            ; preds = %dec_label_pc_10006c48
  %v3_10006cd4 = icmp eq i32 %v3_10006ccc, -1
  br i1 %v3_10006cd4, label %dec_label_pc_10006b04, label %dec_label_pc_10006cdc

dec_label_pc_10006cdc:                            ; preds = %dec_label_pc_10006ccc
  %v1_10006cdc = call i32 @__asm_rlwinm(i32 %v3_10006ccc, i32 29, i32 3, i32 29)
  %v1_10006ce0 = urem i32 %v3_10006ccc, 32
  %v1_10006ce4 = load i32, i32* @r31, align 4
  %v2_10006ce4 = add i32 %v1_10006ce4, %v1_10006cdc
  store i32 %v2_10006ce4, i32* %r9.global-to-local, align 4
  %v1_10006ce8 = add i32 %v2_10006ce4, 232
  %v2_10006ce8 = inttoptr i32 %v1_10006ce8 to i32*
  %v3_10006ce8 = load i32, i32* %v2_10006ce8, align 4
  %v3_10006cec = lshr i32 %v3_10006ce8, %v1_10006ce0
  store i32 %v3_10006cec, i32* %r0.global-to-local, align 4
  %v1_10006cf0 = urem i32 %v3_10006cec, 2
  store i32 %v1_10006cf0, i32* %r9.global-to-local, align 4
  %v3_10006cf0 = icmp eq i32 %v1_10006cf0, 0
  br i1 %v3_10006cf0, label %dec_label_pc_10006b04, label %dec_label_pc_10006cf8

dec_label_pc_10006cf8:                            ; preds = %dec_label_pc_10006cdc
  %v0_10006cf8 = call i32 @function_1000aeb8()
  %v0_10006d00 = load i32, i32* @r29, align 4
  %v2_10006d00 = inttoptr i32 %v0_10006cf8 to i32*
  store i32 %v0_10006d00, i32* %v2_10006d00, align 4
  store i32 %v0_10006cf8, i32* @r23, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  %v3_10006d10 = load i32, i32* @global_var_1001e164.144, align 4
  store i32 268463384, i32* @lr, align 4
  %v4_10006d14 = call i32 @function_1000b43c(i32 %v3_10006d10, i32 %v2_10006944, i32 2, i32 16386)
  %v3_10006d18 = icmp eq i32 %v4_10006d14, -1
  br i1 %v3_10006d18, label %dec_label_pc_10006f38, label %dec_label_pc_10006d20

dec_label_pc_10006d20:                            ; preds = %dec_label_pc_10006cf8
  %v3_10006d20 = icmp eq i32 %v4_10006d14, 0
  br i1 %v3_10006d20, label %dec_label_pc_10006d80, label %dec_label_pc_10006d28

dec_label_pc_10006d28:                            ; preds = %dec_label_pc_10006d20
  %v3_10006d28 = load i16, i16* %stack_var_-1592, align 2
  %v4_10006d28 = sext i16 %v3_10006d28 to i32
  store i32 %v4_10006d28, i32* %r5.global-to-local, align 4
  %v1_10006d2c = urem i32 %v4_10006d28, 65536
  store i32 %v1_10006d2c, i32* %r0.global-to-local, align 4
  %v3_10006d30 = icmp eq i32 %v1_10006d2c, 0
  br i1 %v3_10006d30, label %dec_label_pc_10006f50, label %dec_label_pc_10006d38

dec_label_pc_10006d38:                            ; preds = %dec_label_pc_10006d28
  %tmp46 = icmp ult i32 %v1_10006d2c, 1025
  br i1 %tmp46, label %dec_label_pc_10006d54, label %dec_label_pc_10006d40

dec_label_pc_10006d40:                            ; preds = %dec_label_pc_10006d38
  store i32 ptrtoint (i32* @global_var_10006d48.147 to i32), i32* @lr, align 4
  %v0_10006d44 = call i32 @function_1000a79c()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001e164.144, align 4
  %v3_10006d50 = load i16, i16* %stack_var_-1592, align 2
  %v4_10006d50 = sext i16 %v3_10006d50 to i32
  store i32 %v4_10006d50, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10006d54

dec_label_pc_10006d54:                            ; preds = %dec_label_pc_10006d38, %dec_label_pc_10006d40
  %v0_10006d54 = load i32, i32* @r29, align 4
  %v1_10006d54 = load i32, i32* @r23, align 4
  %v2_10006d54 = inttoptr i32 %v1_10006d54 to i32*
  store i32 %v0_10006d54, i32* %v2_10006d54, align 4
  store i32 %v2_10006d58, i32* @r29, align 4
  %v0_10006d5c = load i32, i32* %r5.global-to-local, align 4
  %v1_10006d5c = urem i32 %v0_10006d5c, 65536
  store i32 %v1_10006d5c, i32* %r5.global-to-local, align 4
  %v3_10006d64 = load i32, i32* @global_var_1001e164.144, align 4
  store i32 268463472, i32* @lr, align 4
  %v4_10006d6c = call i32 @function_1000b43c(i32 %v3_10006d64, i32 %v2_10006d58, i32 %v1_10006d5c, i32 16386)
  %v3_10006d70 = icmp eq i32 %v4_10006d6c, -1
  br i1 %v3_10006d70, label %dec_label_pc_10006f38, label %dec_label_pc_10006d78

dec_label_pc_10006d78:                            ; preds = %dec_label_pc_10006d54
  %v3_10006d78 = icmp eq i32 %v4_10006d6c, 0
  br i1 %v3_10006d78, label %dec_label_pc_10006d80, label %dec_label_pc_10006f68

dec_label_pc_10006d80:                            ; preds = %dec_label_pc_10006f44, %dec_label_pc_10006d78, %dec_label_pc_10006d20
  %v3_10006d80 = load i32, i32* @global_var_1001e164.144, align 4
  %v3_10006d84 = icmp eq i32 %v3_10006d80, -1
  br i1 %v3_10006d84, label %dec_label_pc_10006d90, label %dec_label_pc_10006d8c

dec_label_pc_10006d8c:                            ; preds = %dec_label_pc_10006d80
  store i32 ptrtoint (i32* @global_var_10006d90.148 to i32), i32* @lr, align 4
  %v0_10006d8c = call i32 @function_1000a79c()
  br label %dec_label_pc_10006d90

dec_label_pc_10006d90:                            ; preds = %dec_label_pc_10006d80, %dec_label_pc_10006d8c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001e164.144, align 4
  store i32 268463524, i32* @lr, align 4
  %v1_10006da0 = call i32 @function_1000c090(i32 1)
  br label %dec_label_pc_10006b04

dec_label_pc_10006da8:                            ; preds = %dec_label_pc_10006b68
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268463544, i32* @lr, align 4
  %v3_10006db4 = call i32 @function_1000b568(i32 2, i32 1, i32 0)
  %v3_10006db8 = icmp eq i32 %v3_10006db4, -1
  store i32 %v3_10006db4, i32* @r29, align 4
  store i32 %v3_10006db4, i32* @global_var_1001e164.144, align 4
  br i1 %v3_10006db8, label %dec_label_pc_10006b78, label %dec_label_pc_10006dc8

dec_label_pc_10006dc8:                            ; preds = %dec_label_pc_10006da8
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268463576, i32* @lr, align 4
  %v1_10006dd4 = call i32 @function_1000a66c(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006ddc = or i32 %v1_10006dd4, 2048
  store i32 %v1_10006ddc, i32* %r5.global-to-local, align 4
  %v0_10006de0 = load i32, i32* @r29, align 4
  store i32 268463596, i32* @lr, align 4
  %v2_10006de8 = call i32 @function_1000a66c(i32 %v0_10006de0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006df0 = load i32, i32* @global_var_1001e168.118, align 4
  store i32 %v3_10006df0, i32* %r0.global-to-local, align 4
  %v3_10006df4 = icmp eq i32 %v3_10006df0, 0
  br i1 %v3_10006df4, label %dec_label_pc_10006e04, label %dec_label_pc_10006dfc

dec_label_pc_10006dfc:                            ; preds = %dec_label_pc_10006dc8
  store i32 %v3_10006df0, i32* %ctr.global-to-local, align 4
  store i32 268463620, i32* @lr, align 4
  %v2_10006e00 = call i32 @function_1000a214(i32 %v2_10006de8)
  br label %dec_label_pc_10006e04

dec_label_pc_10006e04:                            ; preds = %dec_label_pc_10006dc8, %dec_label_pc_10006dfc
  %v3_10006e04 = load i32, i32* @global_var_1001e164.144, align 4
  store i32 %v3_10006e04, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r5.global-to-local, align 4
  store i8 1, i8* @global_var_1001e198.145, align 1
  store i32 268463644, i32* @lr, align 4
  %v0_10006e18 = call i32 @function_1000b368()
  %v3_10006ca4.pre = load i32, i32* @global_var_1001e164.144, align 4
  br label %dec_label_pc_10006b78

dec_label_pc_10006e20:                            ; preds = %dec_label_pc_10006bf4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006e28 = load i32, i32* @global_var_1001e164.144, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268463672, i32* @lr, align 4
  %v4_10006e34 = call i32 @function_1000b4b4(i32 %v3_10006e28, i32 %v2_10006944, i32 2, i32 16384)
  br label %dec_label_pc_10006c20

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006c54
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 0, i32* %stack_var_-1584, align 4
  store i32 4, i32* %stack_var_-1580, align 4
  store i32 268463712, i32* @lr, align 4
  %v5_10006e5c = call i32 @function_1000b3d0(i32 1, i32 4, i32 %v2_10006adc, i32 %v2_10006e50, i32 4)
  %v3_10006e60 = load i32, i32* %stack_var_-1584, align 4
  store i32 %v3_10006e60, i32* %r0.global-to-local, align 4
  %v3_10006e64 = icmp eq i32 %v3_10006e60, 0
  br i1 %v3_10006e64, label %dec_label_pc_10006ed8, label %dec_label_pc_10006e6c

dec_label_pc_10006e6c:                            ; preds = %dec_label_pc_10006e3c
  store i32 ptrtoint (i32* @global_var_10006e74.149 to i32), i32* @lr, align 4
  %v0_10006e70 = call i32 @function_1000a79c()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001e164.144, align 4
  %v0_10006e7c = call i32 @function_10006fa8()
  %v1_10006e7c = sext i32 %v0_10006e7c to i64
  %v5_10006e88 = mul nuw nsw i64 %v1_10006e7c, 3435973837
  %v1_10006e8c4 = udiv i64 %v5_10006e88, 34359738368
  %v1_10006e8c = trunc i64 %v1_10006e8c4 to i32
  %v1_10006e90 = mul i32 %v1_10006e8c, 10
  store i32 %v1_10006e90, i32* %r0.global-to-local, align 4
  %v3_10006e94 = sub i32 %v0_10006e7c, %v1_10006e90
  %v1_10006e98 = add i32 %v3_10006e94, 1
  store i32 268463776, i32* @lr, align 4
  %v1_10006e9c = call i32 @function_1000c090(i32 %v1_10006e98)
  br label %dec_label_pc_10006b04

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006c2c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10006adc, i32* %r5.global-to-local, align 4
  store i32 16, i32* %stack_var_-1584, align 4
  store i32 ptrtoint (i32* @global_var_10006eb8.151 to i32), i32* @lr, align 4
  %v3_10006eb4 = call i32 @function_1000b300(i32 %v2_10006eac, i32 %v2_10006adc, i32 %v1_10006c40)
  store i32 268463804, i32* @lr, align 4
  %v1_10006eb8 = call i32 @function_10007840(i32 %v3_10006eb4)
  store i32 268463808, i32* @lr, align 4
  %v1_10006ebc = call i32 @function_100057c8(i32 %v1_10006eb8)
  store i32 ptrtoint ([3 x i8]* @global_var_10006ec4.152 to i32), i32* @lr, align 4
  %v1_10006ec0 = call i32 @function_10002140(i32 %v1_10006ebc)
  %v0_10006ec4 = load i32, i32* @r18, align 4
  %v1_10006ec4 = sub i32 0, %v0_10006ec4
  store i32 ptrtoint ([3 x i8]* @global_var_10006ed0.153 to i32), i32* @lr, align 4
  %v2_10006ecc = call i32 @function_1000a8bc(i32 %v1_10006ec4, i32 9)
  %v0_10006ed4 = call i32 @function_1000c00c()
  br label %dec_label_pc_10006ed8

dec_label_pc_10006ed8:                            ; preds = %dec_label_pc_10006e3c, %dec_label_pc_10006ea4
  store i32 268463840, i32* @lr, align 4
  %v2_10006edc = call i32 @function_10009f10(i8* %v1_10006edc)
  %v3_10006edc = trunc i32 %v2_10006edc to i16
  store i16 %v3_10006edc, i16* %stack_var_-1592, align 2
  store i32 268463848, i32* @lr, align 4
  %v2_10006ee4 = call i32 @function_1000a214(i32 %v2_10006edc)
  store i32 %v2_10006ee4, i32* @global_var_1001e180.71, align 4
  %v0_10006ef0 = load i32, i32* @r29, align 4
  %v1_10006ef0 = add i32 %v0_10006ef0, -7836
  %v2_10006ef0 = inttoptr i32 %v1_10006ef0 to i32*
  %v3_10006ef0 = load i32, i32* %v2_10006ef0, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268463876, i32* @lr, align 4
  %v4_10006f00 = call i32 @function_1000b4b4(i32 %v3_10006ef0, i32 ptrtoint (i32* @global_var_1000d280.154 to i32), i32 4, i32 16384)
  %v0_10006f04 = load i32, i32* @r29, align 4
  %v1_10006f04 = add i32 %v0_10006f04, -7836
  %v2_10006f04 = inttoptr i32 %v1_10006f04 to i32*
  %v3_10006f04 = load i32, i32* %v2_10006f04, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268463896, i32* @lr, align 4
  %v4_10006f14 = call i32 @function_1000b4b4(i32 %v3_10006f04, i32 %v2_10006944, i32 1, i32 16384)
  %v3_10006f18 = load i16, i16* %stack_var_-1592, align 2
  %v4_10006f18 = sext i16 %v3_10006f18 to i32
  store i32 %v4_10006f18, i32* %r5.global-to-local, align 4
  %v3_10006f1c = icmp eq i16 %v3_10006f18, 0
  br i1 %v3_10006f1c, label %dec_label_pc_10006b04, label %dec_label_pc_10006f24

dec_label_pc_10006f24:                            ; preds = %dec_label_pc_10006ed8
  %v0_10006f24 = load i32, i32* @r29, align 4
  %v1_10006f24 = add i32 %v0_10006f24, -7836
  %v2_10006f24 = inttoptr i32 %v1_10006f24 to i32*
  %v3_10006f24 = load i32, i32* %v2_10006f24, align 4
  store i32 268463924, i32* @lr, align 4
  %v4_10006f30 = call i32 @function_1000b4b4(i32 %v3_10006f24, i32 %v2_100068e4, i32 %v4_10006f18, i32 16384)
  br label %dec_label_pc_10006b04

dec_label_pc_10006f38:                            ; preds = %dec_label_pc_10006d54, %dec_label_pc_10006cf8
  %v0_10006f38 = load i32, i32* @r23, align 4
  %v1_10006f38 = inttoptr i32 %v0_10006f38 to i32*
  %v2_10006f38 = load i32, i32* %v1_10006f38, align 4
  %v3_10006f3c = icmp eq i32 %v2_10006f38, 11
  br i1 %v3_10006f3c, label %dec_label_pc_10006b04, label %dec_label_pc_10006f44

dec_label_pc_10006f44:                            ; preds = %dec_label_pc_10006f38
  %v3_10006f44 = icmp eq i32 %v2_10006f38, 4
  br i1 %v3_10006f44, label %dec_label_pc_10006b04, label %dec_label_pc_10006d80

dec_label_pc_10006f50:                            ; preds = %dec_label_pc_10006d28
  %v3_10006f50 = load i32, i32* @global_var_1001e164.144, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268463972, i32* @lr, align 4
  %v4_10006f60 = call i32 @function_1000b43c(i32 %v3_10006f50, i32 %v2_10006944, i32 2, i32 16384)
  br label %dec_label_pc_10006b04

dec_label_pc_10006f68:                            ; preds = %dec_label_pc_10006d78
  %v3_10006f68 = load i32, i32* @global_var_1001e164.144, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268463996, i32* @lr, align 4
  %v4_10006f78 = call i32 @function_1000b43c(i32 %v3_10006f68, i32 %v2_10006944, i32 2, i32 16384)
  %v3_10006f7c = load i32, i32* @global_var_1001e164.144, align 4
  %v3_10006f80 = load i16, i16* %stack_var_-1592, align 2
  %v4_10006f80 = sext i16 %v3_10006f80 to i32
  store i32 %v4_10006f80, i32* %r5.global-to-local, align 4
  store i32 268464016, i32* @lr, align 4
  %v4_10006f8c = call i32 @function_1000b43c(i32 %v3_10006f7c, i32 %v2_10006d58, i32 %v4_10006f80, i32 16384)
  %v3_10006f90 = load i16, i16* %stack_var_-1592, align 2
  %v3_10006f94 = icmp eq i16 %v3_10006f90, 0
  br i1 %v3_10006f94, label %dec_label_pc_10006b04, label %dec_label_pc_10006f9c

dec_label_pc_10006f9c:                            ; preds = %dec_label_pc_10006f68
  %v4_10006f90 = sext i16 %v3_10006f90 to i32
  store i32 268464036, i32* @lr, align 4
  %v2_10006fa0 = call i32 @function_10001eac(i32 %v2_10006d58, i32 %v4_10006f90)
  br label %dec_label_pc_10006b04

; uselistorder directives
  uselistorder i16 %v3_10006f90, { 1, 0 }
  uselistorder i32 %v3_10006db4, { 1, 0, 2 }
  uselistorder i32 %v1_10006d5c, { 1, 0 }
  uselistorder i32 %v1_10006d2c, { 2, 1, 0 }
  uselistorder i32 %v1_10006cf0, { 1, 0 }
  uselistorder i32 %v3_10006ccc, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10006c40, { 2, 1, 0 }
  uselistorder i32 %v2_10006c08, { 1, 0, 2 }
  uselistorder i32 %v0_10006bf8, { 2, 0, 1 }
  uselistorder i32 %v2_10006cb4, { 1, 0 }
  uselistorder i32 %v1_10006b38, { 1, 0 }
  uselistorder i32 %v1_10006b34, { 1, 0 }
  uselistorder i32 %v1_10006b1c, { 1, 0 }
  uselistorder i32 %v1_10006b18, { 1, 0 }
  uselistorder i32 %v2_10006adc, { 2, 1, 0 }
  uselistorder i32 %v3_10006a6c, { 1, 2, 0 }
  uselistorder i32 %v1_10006998, { 1, 0 }
  uselistorder i32 %v1_10006948, { 1, 0 }
  uselistorder i32 %v2_10006944, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000693c, { 1, 0, 2 }
  uselistorder i32 %v1_100068e8, { 1, 0 }
  uselistorder i32 %v2_10006800, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-1584, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-1520, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1592, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1588, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 16, 17, 18, 22, 23, 19, 20, 21 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 16386, { 1, 0, 2 }
  uselistorder i8* @global_var_1001e198.145, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001e164.144, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 ()* @function_10007b04, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10009600, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000abfc, { 1, 0 }
  uselistorder i32 (i32)* @function_1000968c, { 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_10009f38, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 56, 57, 58, 59, 61, 60, 23, 24, 25, 26, 50, 51, 52, 53, 54, 55, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 (i32)* @function_10006540, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000d1f0.8 to i32), { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_1000b644, { 1, 0 }
  uselistorder i32 (i32)* @function_1000abb4, { 1, 0 }
  uselistorder label %dec_label_pc_10006ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10006e04, { 1, 0 }
  uselistorder label %dec_label_pc_10006d90, { 1, 0 }
  uselistorder label %dec_label_pc_10006d54, { 1, 0 }
  uselistorder label %dec_label_pc_10006c90, { 1, 0 }
  uselistorder label %dec_label_pc_10006c20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10006b78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006b68, { 1, 0 }
  uselistorder label %dec_label_pc_10006b30.dec_label_pc_10006b30_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006b14.dec_label_pc_10006b14_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006b04, { 7, 1, 8, 0, 2, 9, 3, 10, 11, 4, 5, 12, 6, 13 }
  uselistorder label %dec_label_pc_10006938, { 2, 0, 1 }
}

define i32 @function_10006fa8() local_unnamed_addr {
dec_label_pc_10006fa8:
  %v3_10006fb0 = load i32, i32* @global_var_1001e238.155, align 4
  %v3_10006fb8 = load i32, i32* @global_var_1001e22c.156, align 4
  %v1_10006fc0 = udiv i32 %v3_10006fb0, 524288
  %v3_10006fc4 = load i32, i32* @global_var_1001e234.157, align 4
  %v1_10006fc8 = mul i32 %v3_10006fb8, 2048
  %v2_10006fcc = xor i32 %v1_10006fc0, %v3_10006fb0
  %v2_10006fd0 = xor i32 %v1_10006fc8, %v3_10006fb8
  %v3_10006fd4 = load i32, i32* @global_var_1001e230.158, align 4
  %v2_10006fd8 = xor i32 %v2_10006fcc, %v2_10006fd0
  %v1_10006fdc = udiv i32 %v2_10006fd0, 256
  %v2_10006fe0 = xor i32 %v2_10006fd8, %v1_10006fdc
  store i32 %v3_10006fd4, i32* @global_var_1001e22c.156, align 4
  store i32 %v3_10006fc4, i32* @global_var_1001e230.158, align 4
  store i32 %v3_10006fb0, i32* @global_var_1001e234.157, align 4
  store i32 %v2_10006fe0, i32* @global_var_1001e238.155, align 4
  ret i32 %v2_10006fe0

; uselistorder directives
  uselistorder i32 %v2_10006fe0, { 1, 0 }
  uselistorder i32 %v3_10006fb8, { 1, 0 }
  uselistorder i32 %v3_10006fb0, { 2, 1, 0 }
}

define i32 @function_10006ff8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006ff8:
  store i32 268464152, i32* @lr, align 4
  %v0_10007014 = call i32 @function_1000ab6c()
  store i32 %v0_10007014, i32* @global_var_1001e22c.156, align 4
  store i32 268464164, i32* @lr, align 4
  %v0_10007020 = call i32 @function_1000a82c()
  store i32 268464172, i32* @lr, align 4
  %v0_10007028 = call i32 @function_1000a874()
  %v2_1000702c = xor i32 %v0_10007020, %v0_10007028
  store i32 %v2_1000702c, i32* @global_var_1001e230.158, align 4
  store i32 268464184, i32* @lr, align 4
  %v1_10007034 = call i32 @function_1000aec4(i32 %v0_10007028)
  %v3_10007038 = load i32, i32* @global_var_1001e230.158, align 4
  %v2_10007048 = xor i32 %v3_10007038, %v1_10007034
  store i32 %v2_10007048, i32* @global_var_1001e238.155, align 4
  store i32 %v1_10007034, i32* @global_var_1001e234.157, align 4
  ret i32 %v1_10007034

; uselistorder directives
  uselistorder i32 %v1_10007034, { 2, 1, 0 }
  uselistorder i32 %v0_10007028, { 1, 0 }
  uselistorder i32 ()* @function_1000a874, { 1, 2, 0 }
}

define i32 @function_10007068(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007068:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 33, i32* @r5, align 4
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_1000d288.159 to i32), i32* @r4, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_1000708c = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000708c, i32* @r3, align 4
  store i32 268464304, i32* @lr, align 4
  %v0_100070ac = call i32 @function_1000aefc()
  store i32 %v0_100070ac, i32* %r3.global-to-local, align 4
  %v0_100070b0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100070b0 = icmp slt i32 %v0_100070b0, 0
  %v2_100070b0 = icmp sgt i32 %v0_100070b0, 0
  %v3_100070b0 = icmp eq i32 %v0_100070b0, 0
  store i1 %v1_100070b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100070b0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100070b0, i1* %cr7_eq.global-to-local, align 1
  %tmp20 = icmp slt i32 %v0_100070b0, 1
  br i1 %tmp20, label %dec_label_pc_100071a4, label %dec_label_pc_100070b8

dec_label_pc_100070b8:                            ; preds = %dec_label_pc_10007068
  %v3_100070cc = load i32, i32* @global_var_1001e238.155, align 4
  store i32 %v3_100070cc, i32* %r4.global-to-local, align 4
  %v3_100070d0 = load i32, i32* @global_var_1001e234.157, align 4
  store i32 %v3_100070d0, i32* %r29.global-to-local, align 4
  store i32 1041204193, i32* %r28.global-to-local, align 4
  %v3_100070d8 = load i32, i32* @global_var_1001e230.158, align 4
  store i32 %v3_100070d8, i32* %r12.global-to-local, align 4
  %v3_100070dc = load i32, i32* @global_var_1001e22c.156, align 4
  store i32 %v3_100070dc, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007144

dec_label_pc_100070e4:                            ; preds = %dec_label_pc_10007144
  %v2_100070e4 = call i32 @__asm_rlwinm(i32 %v2_10007164, i32 29, i32 27, i32 31)
  %v2_100070e8 = call i32 @__asm_rlwinm(i32 %v2_10007164, i32 21, i32 27, i32 31)
  store i32 %v2_100070e8, i32* %r9.global-to-local, align 4
  %v0_100070ec = load i32, i32* %r30.global-to-local, align 4
  %v1_100070ec = add i32 %v0_100070ec, -4
  store i32 %v1_100070ec, i32* %r30.global-to-local, align 4
  %v0_100070f0 = load i32, i32* @r1, align 4
  %v2_100070f0 = add i32 %v0_100070f0, %v2_100070e4
  store i32 %v2_100070f0, i32* %r11.global-to-local, align 4
  %v2_100070f4 = add i32 %v0_100070f0, %v2_100070e8
  store i32 %v2_100070f4, i32* %r6.global-to-local, align 4
  %v2_100070f8 = call i32 @__asm_rlwinm(i32 %v2_10007164, i32 13, i32 27, i32 31)
  %v2_100070fc = udiv i32 %v2_1000715c, 134217728
  store i32 %v2_100070fc, i32* %r9.global-to-local, align 4
  %v0_10007100 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007100 = icmp slt i32 %v0_10007100, 0
  %v2_10007100 = icmp sgt i32 %v0_10007100, 0
  %v3_10007100 = icmp eq i32 %v0_10007100, 0
  store i1 %v1_10007100, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007100, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007100, i1* %cr7_eq.global-to-local, align 1
  %v0_10007104 = load i32, i32* @r1, align 4
  %v2_10007104 = add i32 %v0_10007104, %v2_100070f8
  store i32 %v2_10007104, i32* %r10.global-to-local, align 4
  %v2_10007108 = add i32 %v0_10007104, %v2_100070fc
  %v0_1000710c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000710c = add i32 %v0_1000710c, 8
  %v2_1000710c = inttoptr i32 %v1_1000710c to i8*
  %v3_1000710c = load i8, i8* %v2_1000710c, align 1
  %v1_10007110 = add i32 %v2_10007104, 8
  %v2_10007110 = inttoptr i32 %v1_10007110 to i8*
  %v3_10007110 = load i8, i8* %v2_10007110, align 1
  %v4_10007110 = zext i8 %v3_10007110 to i32
  store i32 %v4_10007110, i32* %r7.global-to-local, align 4
  %v0_10007114 = load i32, i32* %r12.global-to-local, align 4
  store i32 %v0_10007114, i32* %r10.global-to-local, align 4
  %v0_10007118 = load i32, i32* %r6.global-to-local, align 4
  %v1_10007118 = add i32 %v0_10007118, 8
  %v2_10007118 = inttoptr i32 %v1_10007118 to i8*
  %v3_10007118 = load i8, i8* %v2_10007118, align 1
  %v4_10007118 = zext i8 %v3_10007118 to i32
  store i32 %v4_10007118, i32* %r9.global-to-local, align 4
  %v1_1000711c = add i32 %v2_10007108, 8
  %v2_1000711c = inttoptr i32 %v1_1000711c to i8*
  %v3_1000711c = load i8, i8* %v2_1000711c, align 1
  %v4_1000711c = zext i8 %v3_1000711c to i32
  store i32 %v4_1000711c, i32* %r11.global-to-local, align 4
  %v2_10007120 = load i32, i32* %r31.global-to-local, align 4
  %v3_10007120 = inttoptr i32 %v2_10007120 to i8*
  store i8 %v3_1000710c, i8* %v3_10007120, align 1
  %v0_10007124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007124 = trunc i32 %v0_10007124 to i8
  %v2_10007124 = load i32, i32* %r31.global-to-local, align 4
  %v3_10007124 = add i32 %v2_10007124, 1
  %v4_10007124 = inttoptr i32 %v3_10007124 to i8*
  store i8 %v1_10007124, i8* %v4_10007124, align 1
  %v0_10007128 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007128 = add i32 %v0_10007128, 4
  store i32 %v1_10007128, i32* %r31.global-to-local, align 4
  %v0_1000712c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000712c = trunc i32 %v0_1000712c to i8
  %v2_1000712c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000712c = add i32 %v2_1000712c, 2
  %v4_1000712c = inttoptr i32 %v3_1000712c to i8*
  store i8 %v1_1000712c, i8* %v4_1000712c, align 1
  %v0_10007130 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007130 = trunc i32 %v0_10007130 to i8
  %v2_10007130 = load i32, i32* %r3.global-to-local, align 4
  %v3_10007130 = add i32 %v2_10007130, 1
  %v4_10007130 = inttoptr i32 %v3_10007130 to i8*
  store i8 %v1_10007130, i8* %v4_10007130, align 1
  %v0_10007134 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007134 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007134 = or i1 %v0_10007134, %v1_10007134
  br i1 %v2_10007134, label %dec_label_pc_10007194, label %dec_label_pc_10007138

dec_label_pc_10007138:                            ; preds = %dec_label_pc_1000716c, %dec_label_pc_100070e4
  %v0_10007138 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10007138, i32* %r12.global-to-local, align 4
  %v0_1000713c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000713c, i32* %r29.global-to-local, align 4
  store i32 %v2_10007164, i32* %r4.global-to-local, align 4
  %v0_10007144.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10007148.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007144

dec_label_pc_10007144:                            ; preds = %dec_label_pc_100070b8, %dec_label_pc_10007138
  %v0_10007178 = phi i32 [ %v3_100070d8, %dec_label_pc_100070b8 ], [ %v0_10007138, %dec_label_pc_10007138 ]
  %v0_1000714c = phi i32 [ %v3_100070cc, %dec_label_pc_100070b8 ], [ %v2_10007164, %dec_label_pc_10007138 ]
  %v0_10007148 = phi i32 [ %v3_100070dc, %dec_label_pc_100070b8 ], [ %v0_10007148.pre, %dec_label_pc_10007138 ]
  %v0_10007170 = phi i32 [ %v0_100070b0, %dec_label_pc_100070b8 ], [ %v0_10007144.pre, %dec_label_pc_10007138 ]
  %v1_10007144 = icmp ult i32 %v0_10007170, 3
  %v2_10007144 = icmp ugt i32 %v0_10007170, 3
  %v3_10007144 = icmp eq i32 %v0_10007170, 3
  store i1 %v1_10007144, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007144, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007144, i1* %cr7_eq.global-to-local, align 1
  %v1_10007148 = mul i32 %v0_10007148, 2048
  %v1_1000714c = udiv i32 %v0_1000714c, 524288
  %v2_10007150 = xor i32 %v1_10007148, %v0_10007148
  %v2_10007154 = xor i32 %v1_1000714c, %v0_1000714c
  %v0_10007158 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007158 = add i32 %v0_10007158, 1
  store i32 %v1_10007158, i32* %r3.global-to-local, align 4
  %v2_1000715c = xor i32 %v2_10007154, %v2_10007150
  %v1_10007160 = udiv i32 %v2_10007150, 256
  store i32 %v1_10007160, i32* %r9.global-to-local, align 4
  %v2_10007164 = xor i32 %v1_10007160, %v2_1000715c
  br i1 %v2_10007144, label %dec_label_pc_100070e4, label %dec_label_pc_1000716c

dec_label_pc_1000716c:                            ; preds = %dec_label_pc_10007144
  %v3_10007164 = sext i32 %v2_10007164 to i64
  %v2_1000716c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000716c = zext i32 %v2_1000716c to i64
  %v5_1000716c = mul nuw nsw i64 %v4_1000716c, %v3_10007164
  %v1_10007170 = add i32 %v0_10007170, -1
  store i32 %v1_10007170, i32* %r30.global-to-local, align 4
  %v1_10007174 = icmp slt i32 %v1_10007170, 0
  %v2_10007174 = icmp sgt i32 %v1_10007170, 0
  %v3_10007174 = icmp eq i32 %v1_10007170, 0
  store i1 %v1_10007174, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007174, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007174, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10007178, i32* %r10.global-to-local, align 4
  %v1_1000717c6 = udiv i64 %v5_1000716c, 34359738368
  %v1_1000717c = trunc i64 %v1_1000717c6 to i32
  %tmp21 = mul i32 %v1_1000717c, -33
  %v3_10007184 = add i32 %tmp21, %v2_10007164
  %v1_10007188 = trunc i32 %v3_10007184 to i8
  %v3_10007188 = inttoptr i32 %v0_10007158 to i8*
  store i8 %v1_10007188, i8* %v3_10007188, align 1
  %v0_1000718c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000718c = add i32 %v0_1000718c, 1
  store i32 %v1_1000718c, i32* %r31.global-to-local, align 4
  %v0_10007190 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10007190, label %dec_label_pc_10007138, label %dec_label_pc_10007194

dec_label_pc_10007194:                            ; preds = %dec_label_pc_1000716c, %dec_label_pc_100070e4
  store i32 %v2_10007164, i32* @global_var_1001e238.155, align 4
  %v0_10007198 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10007198, i32* @global_var_1001e234.157, align 4
  %v0_1000719c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000719c, i32* @global_var_1001e230.158, align 4
  %v0_100071a0 = load i32, i32* %r12.global-to-local, align 4
  store i32 %v0_100071a0, i32* @global_var_1001e22c.156, align 4
  %v0_100071d0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100071a4

dec_label_pc_100071a4:                            ; preds = %dec_label_pc_10007068, %dec_label_pc_10007194
  %v0_100071d0 = phi i32 [ %v0_100070ac, %dec_label_pc_10007068 ], [ %v0_100071d0.pre, %dec_label_pc_10007194 ]
  ret i32 %v0_100071d0

; uselistorder directives
  uselistorder i32 %v1_10007170, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10007164, { 0, 1, 7, 5, 4, 3, 6, 2 }
  uselistorder i32 %v1_10007160, { 1, 0 }
  uselistorder i32 %v2_1000715c, { 1, 0 }
  uselistorder i32 %v0_10007170, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10007148, { 1, 0 }
  uselistorder i32 %v0_1000714c, { 1, 0 }
  uselistorder i32 %v2_100070fc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 6, 1, 3, 4, 5, 7 }
  uselistorder i32* %r30.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 4, 2, 3, 5, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r12.global-to-local, { 1, 0, 2, 3 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i1* %cr7_gt.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_100071a4, { 1, 0 }
  uselistorder label %dec_label_pc_10007144, { 1, 0 }
}

define i32 @function_100071d4() local_unnamed_addr {
dec_label_pc_100071d4:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_100071d4 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_100071d4, 1
  br i1 %tmp19, label %dec_label_pc_100071d4.dec_label_pc_10007288_crit_edge, label %dec_label_pc_100071ec

dec_label_pc_100071d4.dec_label_pc_10007288_crit_edge: ; preds = %dec_label_pc_100071d4
  %v0_10007298.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007288

dec_label_pc_100071ec:                            ; preds = %dec_label_pc_100071d4
  %v3_100071fc = load i32, i32* @global_var_1001e238.155, align 4
  store i32 %v3_100071fc, i32* %r7.global-to-local, align 4
  %v3_10007200 = load i32, i32* @global_var_1001e234.157, align 4
  store i32 %v3_10007200, i32* %r5.global-to-local, align 4
  %v3_10007204 = load i32, i32* @global_var_1001e230.158, align 4
  store i32 %v3_10007204, i32* %r6.global-to-local, align 4
  %v3_10007208 = load i32, i32* @global_var_1001e22c.156, align 4
  br label %dec_label_pc_10007234

dec_label_pc_10007210:                            ; preds = %dec_label_pc_10007234
  %v1_10007210 = load i32, i32* @r3, align 4
  %v2_10007210 = inttoptr i32 %v1_10007210 to i32*
  store i32 %v2_10007258, i32* %v2_10007210, align 4
  %v0_10007214 = load i32, i32* @r4, align 4
  %v1_10007214 = add i32 %v0_10007214, -4
  store i32 %v1_10007214, i32* @r4, align 4
  %v0_10007218 = load i32, i32* @r3, align 4
  %v1_10007218 = add i32 %v0_10007218, 4
  br label %dec_label_pc_1000721c

dec_label_pc_1000721c:                            ; preds = %dec_label_pc_1000726c, %dec_label_pc_10007210
  %v0_1000721c = phi i32 [ %v0_1000721c.pr, %dec_label_pc_1000726c ], [ %v1_10007214, %dec_label_pc_10007210 ]
  %storemerge = phi i32 [ %v1_10007270, %dec_label_pc_1000726c ], [ %v1_10007218, %dec_label_pc_10007210 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10007220 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_1000721c, 1
  br i1 %tmp20, label %dec_label_pc_10007278, label %dec_label_pc_10007228

dec_label_pc_10007228:                            ; preds = %dec_label_pc_1000721c
  %v0_10007228 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10007228, i32* %r6.global-to-local, align 4
  %v0_1000722c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000722c, i32* %r5.global-to-local, align 4
  %v0_10007230 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10007230, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10007234

dec_label_pc_10007234:                            ; preds = %dec_label_pc_100071ec, %dec_label_pc_10007228
  %v0_100072d4 = phi i32 [ %v3_10007204, %dec_label_pc_100071ec ], [ %v0_10007228, %dec_label_pc_10007228 ]
  %v0_100072b8 = phi i32 [ %v3_10007200, %dec_label_pc_100071ec ], [ %v0_1000722c, %dec_label_pc_10007228 ]
  %v0_100072bc = phi i32 [ %v3_100071fc, %dec_label_pc_100071ec ], [ %v0_10007230, %dec_label_pc_10007228 ]
  %v0_1000729c = phi i32 [ %v3_10007208, %dec_label_pc_100071ec ], [ %v0_10007220, %dec_label_pc_10007228 ]
  %v0_10007264 = phi i32 [ %v0_100071d4, %dec_label_pc_100071ec ], [ %v0_1000721c, %dec_label_pc_10007228 ]
  %v2_10007234 = icmp sgt i32 %v0_10007264, 3
  %v1_10007238 = mul i32 %v0_1000729c, 2048
  %v1_1000723c = udiv i32 %v0_100072bc, 524288
  %v2_10007240 = xor i32 %v1_10007238, %v0_1000729c
  %v2_10007244 = xor i32 %v1_1000723c, %v0_100072bc
  %v2_1000724c = xor i32 %v2_10007244, %v2_10007240
  %v1_10007250 = udiv i32 %v2_10007240, 256
  %v2_10007258 = xor i32 %v2_1000724c, %v1_10007250
  store i32 %v2_10007258, i32* %r0.global-to-local, align 4
  br i1 %v2_10007234, label %dec_label_pc_10007210, label %dec_label_pc_10007260

dec_label_pc_10007260:                            ; preds = %dec_label_pc_10007234
  %v3_10007248 = icmp eq i32 %v0_10007264, 1
  store i32 %v2_10007258, i32* %r0.global-to-local, align 4
  %v1_10007264 = add i32 %v0_10007264, -2
  store i32 %v1_10007264, i32* @r4, align 4
  br i1 %v3_10007248, label %dec_label_pc_1000729c, label %dec_label_pc_1000726c

dec_label_pc_1000726c:                            ; preds = %dec_label_pc_10007260
  %v1_1000726c = trunc i32 %v2_10007258 to i16
  %v2_1000726c = load i32, i32* @r3, align 4
  %v3_1000726c = inttoptr i32 %v2_1000726c to i16*
  store i16 %v1_1000726c, i16* %v3_1000726c, align 2
  %v0_10007270 = load i32, i32* @r3, align 4
  %v1_10007270 = add i32 %v0_10007270, 2
  %v0_1000721c.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000721c

dec_label_pc_10007278:                            ; preds = %dec_label_pc_1000721c
  %v0_10007278 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10007278, i32* @global_var_1001e238.155, align 4
  %v0_1000727c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000727c, i32* @global_var_1001e234.157, align 4
  %v0_10007280 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10007280, i32* @global_var_1001e230.158, align 4
  store i32 %v0_10007220, i32* @global_var_1001e22c.156, align 4
  br label %dec_label_pc_10007288

dec_label_pc_10007288:                            ; preds = %dec_label_pc_100071d4.dec_label_pc_10007288_crit_edge, %dec_label_pc_10007278
  %v0_10007298 = phi i32 [ %v0_10007298.pre, %dec_label_pc_100071d4.dec_label_pc_10007288_crit_edge ], [ %storemerge, %dec_label_pc_10007278 ]
  ret i32 %v0_10007298

dec_label_pc_1000729c:                            ; preds = %dec_label_pc_10007260
  store i32 %v2_10007258, i32* %r0.global-to-local, align 4
  store i32 %v0_100072b8, i32* @global_var_1001e230.158, align 4
  store i32 %v0_100072bc, i32* @global_var_1001e234.157, align 4
  store i32 %v2_10007258, i32* @global_var_1001e238.155, align 4
  store i32 %v0_100072d4, i32* @global_var_1001e22c.156, align 4
  %v1_100072d8 = trunc i32 %v2_10007258 to i8
  %v2_100072d8 = load i32, i32* @r3, align 4
  %v3_100072d8 = inttoptr i32 %v2_100072d8 to i8*
  store i8 %v1_100072d8, i8* %v3_100072d8, align 1
  %v0_100072dc = load i32, i32* @r3, align 4
  ret i32 %v0_100072dc

; uselistorder directives
  uselistorder i32 %v2_10007258, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_1000729c, { 1, 0 }
  uselistorder i32 %v0_100072bc, { 1, 2, 0 }
  uselistorder i32 %v0_100071d4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10007288, { 1, 0 }
  uselistorder label %dec_label_pc_10007234, { 1, 0 }
}

define i32 @function_100072e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100072e0:
  store i32 %arg1, i32* @r31, align 4
  %v3_100072ec = icmp eq i32 %arg1, 0
  br i1 %v3_100072ec, label %dec_label_pc_10007310, label %dec_label_pc_100072f8

dec_label_pc_100072f8:                            ; preds = %dec_label_pc_100072e0
  %v1_100072f8 = add i32 %arg1, 4
  %v2_100072f8 = inttoptr i32 %v1_100072f8 to i32*
  %v3_100072f8 = load i32, i32* %v2_100072f8, align 4
  store i32 %v3_100072f8, i32* @r3, align 4
  %v3_100072fc = icmp eq i32 %v3_100072f8, 0
  br i1 %v3_100072fc, label %dec_label_pc_10007308, label %dec_label_pc_10007304

dec_label_pc_10007304:                            ; preds = %dec_label_pc_100072f8
  store i32 268464904, i32* @lr, align 4
  %v0_10007304 = call i32 @function_1000b964()
  %v0_10007308.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007308

dec_label_pc_10007308:                            ; preds = %dec_label_pc_100072f8, %dec_label_pc_10007304
  %v0_10007308 = phi i32 [ %arg1, %dec_label_pc_100072f8 ], [ %v0_10007308.pre, %dec_label_pc_10007304 ]
  store i32 %v0_10007308, i32* @r3, align 4
  store i32 268464912, i32* @lr, align 4
  %v0_1000730c = call i32 @function_1000b964()
  br label %dec_label_pc_10007310

dec_label_pc_10007310:                            ; preds = %dec_label_pc_100072e0, %dec_label_pc_10007308
  %v0_10007320 = phi i32 [ 0, %dec_label_pc_100072e0 ], [ %v0_1000730c, %dec_label_pc_10007308 ]
  ret i32 %v0_10007320

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10007310, { 1, 0 }
  uselistorder label %dec_label_pc_10007308, { 1, 0 }
}

define i32 @function_10007324(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007324:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10007328 = load i32, i32* @lr, align 4
  store i32 %v0_10007328, i32* %r0.global-to-local, align 4
  %v0_1000732c = call i32 @__asm_mfcr()
  %v0_10007334 = load i32, i32* @r29, align 4
  store i32 %v0_1000732c, i32* @r29, align 4
  %v2_10007348 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_10007350 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_10007350, i32* %r26.global-to-local, align 4
  %v0_10007354 = load i32, i32* %r0.global-to-local, align 4
  %v0_10007374 = load i32, i32* @r28, align 4
  store i32 268465028, i32* @lr, align 4
  %v2_10007380 = call i32 @function_1000b8f4(i32 1, i32 8)
  store i32 %v2_10007380, i32* %r25.global-to-local, align 4
  %v0_10007388 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007390.160 to i32), i32* @lr, align 4
  %v1_1000738c = inttoptr i32 %v0_10007388 to i8*
  %v2_1000738c = call i32 @function_10009f10(i8* %v1_1000738c)
  %v2_10007390 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_10007390, i32* %r10.global-to-local, align 4
  %v1_10007394 = add i32 %v2_1000738c, 1
  store i32 %v2_10007350, i32* %r7.global-to-local, align 4
  %v1_100073a0 = add i32 %v2_1000738c, 2
  store i32 %v1_100073a0, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_10007394, -1
  br i1 %tmp94, label %dec_label_pc_100073c8.preheader, label %dec_label_pc_100073c8.preheader.thread

dec_label_pc_100073c8.preheader:                  ; preds = %dec_label_pc_10007324
  %v3_1000739c = icmp eq i32 %v1_10007394, 0
  %v1_100073c813 = or i32 %v2_10007390, 1
  store i32 %v1_100073c813, i32* %r11.global-to-local, align 4
  store i32 %v1_10007394, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000739c, label %dec_label_pc_100073f8, label %dec_label_pc_100073d0.lr.ph

dec_label_pc_100073d0.lr.ph:                      ; preds = %dec_label_pc_100073c8.preheader
  %v0_100073d0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100073d0

dec_label_pc_100073b4:                            ; preds = %dec_label_pc_100073e0
  %v3_100073b4 = inttoptr i32 %v2_100073b4 to i8*
  store i8 %v2_100073d0, i8* %v3_100073b4, align 1
  %v0_100073b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100073b8 = urem i32 %v0_100073b8, 256
  %v0_100073bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100073bc = add i32 %v0_100073bc, 1
  store i32 %v1_100073bc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100073c0

dec_label_pc_100073c0:                            ; preds = %dec_label_pc_100073e8, %dec_label_pc_100073b4
  %v0_100073c4 = phi i32 [ %v0_100073c4.pre, %dec_label_pc_100073e8 ], [ %v1_100073bc, %dec_label_pc_100073b4 ]
  %v0_100073e020 = phi i32 [ 0, %dec_label_pc_100073e8 ], [ %v1_100073b8, %dec_label_pc_100073b4 ]
  %v0_100073c0 = load i32, i32* @r29, align 4
  %v1_100073c0 = add i32 %v0_100073c0, 1
  store i32 %v1_100073c0, i32* @r29, align 4
  store i32 %v0_100073c4, i32* %r10.global-to-local, align 4
  %v1_100073c8 = add i32 %v0_100073c4, 1
  store i32 %v1_100073c8, i32* %r11.global-to-local, align 4
  %v0_100073cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100073cc = add i32 %v0_100073cc, -1
  store i32 %v1_100073cc, i32* %ctr.global-to-local, align 4
  %v2_100073cc = icmp eq i32 %v1_100073cc, 0
  br i1 %v2_100073cc, label %dec_label_pc_100073f8, label %dec_label_pc_100073d0

dec_label_pc_100073d0:                            ; preds = %dec_label_pc_100073d0.lr.ph, %dec_label_pc_100073c0
  %v2_100073b4 = phi i32 [ %v2_10007390, %dec_label_pc_100073d0.lr.ph ], [ %v0_100073c4, %dec_label_pc_100073c0 ]
  %v0_100073e8 = phi i32 [ 0, %dec_label_pc_100073d0.lr.ph ], [ %v0_100073e020, %dec_label_pc_100073c0 ]
  %v0_100073d0 = phi i32 [ %v0_100073d0.pre, %dec_label_pc_100073d0.lr.ph ], [ %v1_100073c0, %dec_label_pc_100073c0 ]
  %v1_100073d0 = inttoptr i32 %v0_100073d0 to i8*
  %v2_100073d0 = load i8, i8* %v1_100073d0, align 1
  %v3_100073d0 = zext i8 %v2_100073d0 to i32
  store i32 %v3_100073d0, i32* %r0.global-to-local, align 4
  %v3_100073d4 = icmp eq i8 %v2_100073d0, 46
  br i1 %v3_100073d4, label %dec_label_pc_100073e8, label %dec_label_pc_100073e0

dec_label_pc_100073e0:                            ; preds = %dec_label_pc_100073d0
  %v3_100073d8 = icmp eq i8 %v2_100073d0, 0
  %v1_100073e0 = add nsw i32 %v0_100073e8, 1
  store i32 %v1_100073e0, i32* %r9.global-to-local, align 4
  br i1 %v3_100073d8, label %dec_label_pc_100073e8, label %dec_label_pc_100073b4

dec_label_pc_100073e8:                            ; preds = %dec_label_pc_100073e0, %dec_label_pc_100073d0
  %v1_100073e8 = trunc i32 %v0_100073e8 to i8
  %v2_100073e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_100073e8 = inttoptr i32 %v2_100073e8 to i8*
  store i8 %v1_100073e8, i8* %v3_100073e8, align 1
  %v0_100073ec = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100073ec, i32* %r7.global-to-local, align 4
  %v0_100073c4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100073c0

dec_label_pc_100073f8:                            ; preds = %dec_label_pc_100073c0, %dec_label_pc_100073c8.preheader.thread, %dec_label_pc_100073c8.preheader
  %v2_10007400 = phi i32 [ %v2_10007390, %dec_label_pc_100073c8.preheader ], [ %v2_10007390, %dec_label_pc_100073c8.preheader.thread ], [ %v0_100073c4, %dec_label_pc_100073c0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10007400 = inttoptr i32 %v2_10007400 to i8*
  store i8 0, i8* %v3_10007400, align 1
  %v2_10007404 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007414.161 to i32), i32* @lr, align 4
  %v1_10007410 = bitcast i32* %stack_var_-4144 to i8*
  %v2_10007410 = call i32 @function_10009f10(i8* %v1_10007410)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10007418 = load i32, i32* %r26.global-to-local, align 4
  %v2_10007418 = add i32 %v0_10007418, %v2_10007410
  store i32 %v2_10007418, i32* %r29.global-to-local, align 4
  %v0_10007424 = load i32, i32* @r30, align 4
  %v3_10007424 = icmp eq i32 %v0_10007424, -1
  store i1 %v3_10007424, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_1000742c = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_1000742c, i32* @r31, align 4
  %v2_10007434 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_10007434, i32* %r19.global-to-local, align 4
  store i32 268465216, i32* @lr, align 4
  %v2_1000743c = call i32 @function_10009f10(i8* %v1_10007410)
  %v1_10007440 = add i32 %v2_1000743c, 17
  store i32 %v1_10007440, i32* %r23.global-to-local, align 4
  %v0_10007444 = call i32 @function_10006fa8()
  %v1_10007444 = sext i32 %v0_10007444 to i64
  store i32 16, i32* @r4, align 4
  %v5_10007458 = mul nuw nsw i64 %v1_10007444, 2147516417
  store i32 %v2_10007404, i32* @r3, align 4
  %v2_10007460 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_10007460, i32* %r20.global-to-local, align 4
  %v1_100074642 = udiv i64 %v5_10007458, 140737488355328
  %v1_10007464 = trunc i64 %v1_100074642 to i32
  store i32 %v1_10007464, i32* %r0.global-to-local, align 4
  %v2_10007468 = add i32 %v1_10007464, %v0_10007444
  store i32 %v2_10007468, i32* %r9.global-to-local, align 4
  %v1_1000746c = urem i32 %v2_10007468, 65536
  store i32 %v1_1000746c, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007474.163 to i32), i32* @lr, align 4
  %v0_10007470 = call i32 @function_10009fb8()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_10007488 = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_100074a0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100074a0, i32* %stack_var_-4156, align 4
  %v3_100074a8 = add i32 %v0_10007488, 3
  %v4_100074a8 = inttoptr i32 %v3_100074a8 to i16*
  store i16 1, i16* %v4_100074a8, align 2
  %v0_100074ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100074ac = trunc i32 %v0_100074ac to i16
  %v2_100074ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100074ac = add i32 %v2_100074ac, 1
  %v4_100074ac = inttoptr i32 %v3_100074ac to i16*
  store i16 %v1_100074ac, i16* %v4_100074ac, align 2
  %v2_10007550 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_10007584 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_10007674 = bitcast i32* %stack_var_-2096 to i8*
  %v4_1000768c = zext i16 %tmp60 to i32
  %v3_10007690 = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_100074b0

dec_label_pc_100074b0:                            ; preds = %dec_label_pc_100075f0, %dec_label_pc_100073f8
  %v0_100074b0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100074b0, label %dec_label_pc_100074bc, label %dec_label_pc_100074b4

dec_label_pc_100074b4:                            ; preds = %dec_label_pc_100074b0
  store i32 ptrtoint ([3 x i8]* @global_var_100074bc.164 to i32), i32* @lr, align 4
  %v0_100074b8 = call i32 @function_1000a79c()
  br label %dec_label_pc_100074bc

dec_label_pc_100074bc:                            ; preds = %dec_label_pc_100074b0, %dec_label_pc_100074b4
  store i32 268465356, i32* @lr, align 4
  %v3_100074c8 = call i32 @function_1000b568(i32 2, i32 2, i32 0)
  store i32 %v3_100074c8, i32* @r3, align 4
  %v3_100074cc = icmp eq i32 %v3_100074c8, -1
  store i1 %v3_100074cc, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_100074c8, i32* @r30, align 4
  br i1 %v3_100074cc, label %dec_label_pc_100075f8, label %dec_label_pc_100074d8

dec_label_pc_100074d8:                            ; preds = %dec_label_pc_100074bc
  store i32 268465380, i32* @lr, align 4
  %v0_100074e0 = call i32 @function_1000b368()
  %v3_100074e4 = icmp eq i32 %v0_100074e0, -1
  br i1 %v3_100074e4, label %dec_label_pc_100075f8, label %dec_label_pc_100074ec

dec_label_pc_100074ec:                            ; preds = %dec_label_pc_100074d8
  %v0_100074ec = load i32, i32* @r30, align 4
  %v0_100074f4 = load i32, i32* %r23.global-to-local, align 4
  store i32 268465408, i32* @lr, align 4
  %v4_100074fc = call i32 @function_1000b4b4(i32 %v0_100074ec, i32 %v2_10007348, i32 %v0_100074f4, i32 16384)
  %v3_10007500 = icmp eq i32 %v4_100074fc, -1
  br i1 %v3_10007500, label %dec_label_pc_100075f8, label %dec_label_pc_10007508

dec_label_pc_10007508:                            ; preds = %dec_label_pc_100074ec
  %v0_10007508 = load i32, i32* @r30, align 4
  store i32 %v0_10007508, i32* @r4, align 4
  store i32 268465436, i32* @lr, align 4
  %v2_10007518 = call i32 @function_1000a66c(i32 3)
  %v0_1000751c = load i32, i32* @r30, align 4
  store i32 %v0_1000751c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10007530.165 to i32), i32* @lr, align 4
  %v2_1000752c = call i32 @function_1000a66c(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10007540141 = load i32, i32* @r31, align 4
  %v4_10007540143 = inttoptr i32 %v2_10007540141 to i32*
  store i32 0, i32* %v4_10007540143, align 4
  %v0_10007544144 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007544145 = add i32 %v0_10007544144, 4
  store i32 %v1_10007544145, i32* %r9.global-to-local, align 4
  %v0_10007548146 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007548147 = add i32 %v0_10007548146, -1
  store i32 %v1_10007548147, i32* %ctr.global-to-local, align 4
  %v2_10007548148 = icmp eq i32 %v1_10007548147, 0
  br i1 %v2_10007548148, label %dec_label_pc_1000754c, label %dec_label_pc_10007540.dec_label_pc_10007540_crit_edge

dec_label_pc_10007540.dec_label_pc_10007540_crit_edge: ; preds = %dec_label_pc_10007508, %dec_label_pc_10007540.dec_label_pc_10007540_crit_edge
  %v1_10007544149 = phi i32 [ %v1_10007544, %dec_label_pc_10007540.dec_label_pc_10007540_crit_edge ], [ %v1_10007544145, %dec_label_pc_10007508 ]
  %v0_10007540.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_10007540 = load i32, i32* @r31, align 4
  %v3_10007540 = add i32 %v2_10007540, %v1_10007544149
  %v4_10007540 = inttoptr i32 %v3_10007540 to i32*
  store i32 %v0_10007540.pre, i32* %v4_10007540, align 4
  %v0_10007544 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007544 = add i32 %v0_10007544, 4
  store i32 %v1_10007544, i32* %r9.global-to-local, align 4
  %v0_10007548 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007548 = add i32 %v0_10007548, -1
  store i32 %v1_10007548, i32* %ctr.global-to-local, align 4
  %v2_10007548 = icmp eq i32 %v1_10007548, 0
  br i1 %v2_10007548, label %dec_label_pc_1000754c, label %dec_label_pc_10007540.dec_label_pc_10007540_crit_edge

dec_label_pc_1000754c:                            ; preds = %dec_label_pc_10007540.dec_label_pc_10007540_crit_edge, %dec_label_pc_10007508
  %v0_1000754c = load i32, i32* @r30, align 4
  %v1_1000754c = call i32 @__asm_rlwinm(i32 %v0_1000754c, i32 29, i32 3, i32 29)
  store i32 %v1_1000754c, i32* %r9.global-to-local, align 4
  store i32 %v2_10007550, i32* %r0.global-to-local, align 4
  %v2_10007554 = add i32 %v1_1000754c, %v2_10007550
  store i32 %v2_10007554, i32* %r29.global-to-local, align 4
  %v0_10007558 = load i32, i32* @r30, align 4
  %v1_10007558 = urem i32 %v0_10007558, 32
  store i32 %v1_10007558, i32* %r28.global-to-local, align 4
  %v1_1000755c = add i32 %v2_10007554, 28
  %v2_1000755c = inttoptr i32 %v1_1000755c to i32*
  %v3_1000755c = load i32, i32* %v2_1000755c, align 4
  %v3_10007564 = shl i32 1, %v1_10007558
  %v1_10007568 = add i32 %v0_10007558, 1
  %v2_1000756c = or i32 %v3_10007564, %v3_1000755c
  store i32 %v2_1000756c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000756c, i32* %v2_1000755c, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_10007584, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268465556, i32* @lr, align 4
  %v5_10007590 = call i32 @function_1000aa64(i32 %v1_10007568, i32 %v2_1000742c, i32 0, i32 0, i32 %v2_10007584)
  %v3_10007594 = icmp eq i32 %v5_10007590, -1
  br i1 %v3_10007594, label %dec_label_pc_10007608, label %dec_label_pc_1000759c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_1000754c
  %v3_1000759c = icmp eq i32 %v5_10007590, 0
  br i1 %v3_1000759c, label %dec_label_pc_100075e8, label %dec_label_pc_100075a4

dec_label_pc_100075a4:                            ; preds = %dec_label_pc_1000759c
  %v0_100075a4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100075a4 = add i32 %v0_100075a4, 28
  %v2_100075a4 = inttoptr i32 %v1_100075a4 to i32*
  %v3_100075a4 = load i32, i32* %v2_100075a4, align 4
  %v1_100075a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100075a8 = urem i32 %v1_100075a8, 32
  %v3_100075a8 = sub i32 0, %v1_100075a8
  %v4_100075a8 = urem i32 %v3_100075a8, 32
  %v5_100075a8 = shl i32 %v3_100075a4, %v4_100075a8
  %v6_100075a8 = xor i32 %v4_100075a8, 31
  %v7_100075a8 = lshr i32 %v3_100075a4, %v6_100075a8
  %v8_100075a8 = udiv i32 %v7_100075a8, 2
  %v9_100075a8 = or i32 %v8_100075a8, %v5_100075a8
  %v10_100075a8 = and i32 %v1_100075a8, 32
  %v11_100075a8 = icmp ne i32 %v10_100075a8, 0
  %v12_100075a8 = lshr i32 -1, %v2_100075a8
  %v13_100075a8 = select i1 %v11_100075a8, i32 0, i32 %v12_100075a8
  %v14_100075a8 = and i32 %v9_100075a8, %v13_100075a8
  %v15_100075a8 = ashr i32 %v3_100075a4, 31
  %v16_100075a8 = sub i32 -1, %v13_100075a8
  %v17_100075a8 = and i32 %v15_100075a8, %v16_100075a8
  %v18_100075a8 = or i32 %v14_100075a8, %v17_100075a8
  store i32 %v18_100075a8, i32* %r0.global-to-local, align 4
  %v1_100075ac = urem i32 %v18_100075a8, 2
  store i32 %v1_100075ac, i32* %r9.global-to-local, align 4
  %v3_100075ac = icmp eq i32 %v1_100075ac, 0
  br i1 %v3_100075ac, label %dec_label_pc_10007608, label %dec_label_pc_100075b4

dec_label_pc_100075b4:                            ; preds = %dec_label_pc_100075a4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_100075c8 = load i32, i32* @r30, align 4
  store i32 268465616, i32* @lr, align 4
  %v6_100075cc = call i32 @function_1000b474(i32 %v0_100075c8, i32 %v2_10007434, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_100075cc, i32* %r29.global-to-local, align 4
  %v0_100075d4 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100075dc.166 to i32), i32* @lr, align 4
  %v1_100075d8 = inttoptr i32 %v0_100075d4 to i8*
  %v2_100075d8 = call i32 @function_10009f10(i8* %v1_100075d8)
  %v1_100075dc = add i32 %v2_100075d8, 17
  %v2_100075e0 = icmp ult i32 %v6_100075cc, %v1_100075dc
  br i1 %v2_100075e0, label %dec_label_pc_100075e8, label %dec_label_pc_1000766c

dec_label_pc_100075e8:                            ; preds = %dec_label_pc_1000766c, %dec_label_pc_100075b4, %dec_label_pc_1000768c, %dec_label_pc_1000759c
  %v0_100075e8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100075e8 = icmp eq i32 %v0_100075e8, 5
  br i1 %v3_100075e8, label %dec_label_pc_10007608, label %dec_label_pc_100075f0

dec_label_pc_100075f0:                            ; preds = %dec_label_pc_100075f8, %dec_label_pc_100075e8
  %v0_100075f0 = phi i32 [ %v0_10007600, %dec_label_pc_100075f8 ], [ %v0_100075e8, %dec_label_pc_100075e8 ]
  %v1_100075f0 = add i32 %v0_100075f0, 1
  store i32 %v1_100075f0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100074b0

dec_label_pc_100075f8:                            ; preds = %dec_label_pc_100074ec, %dec_label_pc_100074d8, %dec_label_pc_100074bc
  store i32 268465664, i32* @lr, align 4
  %v1_100075fc = call i32 @function_1000c090(i32 1)
  %v0_10007600 = load i32, i32* %r27.global-to-local, align 4
  %v3_10007600 = icmp eq i32 %v0_10007600, 5
  br i1 %v3_10007600, label %dec_label_pc_10007608, label %dec_label_pc_100075f0

dec_label_pc_10007608:                            ; preds = %dec_label_pc_100075f8, %dec_label_pc_100075e8, %dec_label_pc_100075a4, %dec_label_pc_1000754c, %dec_label_pc_10007698.backedge, %dec_label_pc_10007698.preheader
  store i32 268465680, i32* @lr, align 4
  %v0_1000760c = call i32 @function_1000a79c()
  %v0_10007610 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007610 = inttoptr i32 %v0_10007610 to i8*
  %v2_10007610 = load i8, i8* %v1_10007610, align 1
  %v3_10007610 = zext i8 %v2_10007610 to i32
  store i32 %v3_10007610, i32* %r0.global-to-local, align 4
  %v3_10007614 = icmp eq i8 %v2_10007610, 0
  br i1 %v3_10007614, label %dec_label_pc_10007784, label %dec_label_pc_1000761c

dec_label_pc_1000761c:                            ; preds = %dec_label_pc_10007608, %dec_label_pc_10007794
  %v0_10007620 = phi i32 [ %v0_10007610, %dec_label_pc_10007608 ], [ 0, %dec_label_pc_10007794 ]
  store i32 %v0_10007354, i32* %r0.global-to-local, align 4
  %v1_10007634 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000732c)
  store i32 %v0_10007374, i32* %r28.global-to-local, align 4
  store i32 %v0_10007334, i32* %r29.global-to-local, align 4
  ret i32 %v0_10007620

dec_label_pc_1000766c:                            ; preds = %dec_label_pc_100075b4
  store i32 %v2_10007460, i32* %r26.global-to-local, align 4
  store i32 268465784, i32* @lr, align 4
  %v2_10007674 = call i32 @function_10009f10(i8* %v1_10007674)
  %v3_10007678 = load i16, i16* %stack_var_-2108, align 2
  %v4_10007678 = sext i16 %v3_10007678 to i32
  store i32 %v4_10007678, i32* %r0.global-to-local, align 4
  %v0_1000767c = load i32, i32* %r20.global-to-local, align 4
  %v1_10007680 = load i32, i32* %r22.global-to-local, align 4
  %v4_10007680 = icmp eq i32 %v4_10007678, %v1_10007680
  %v2_1000767c = add i32 %v2_10007674, 5
  %v1_10007684 = add i32 %v2_1000767c, %v0_1000767c
  br i1 %v4_10007680, label %dec_label_pc_1000768c, label %dec_label_pc_100075e8

dec_label_pc_1000768c:                            ; preds = %dec_label_pc_1000766c
  store i32 %v4_1000768c, i32* %r28.global-to-local, align 4
  br i1 %v3_10007690, label %dec_label_pc_100075e8, label %dec_label_pc_10007698.preheader

dec_label_pc_10007698.preheader:                  ; preds = %dec_label_pc_1000768c
  %v1_100076988 = add nsw i32 %v4_1000768c, -1
  store i32 %v1_100076988, i32* %r0.global-to-local, align 4
  %v1_100076a09 = urem i32 %v1_100076988, 65536
  store i32 %v1_100076a09, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_100076a811 = icmp eq i32 %v1_100076a09, 65535
  br i1 %v4_100076a811, label %dec_label_pc_10007608, label %dec_label_pc_100076b0

dec_label_pc_100076b0:                            ; preds = %dec_label_pc_10007698.preheader, %dec_label_pc_10007698.backedge
  %v0_1000769849 = phi i32 [ %v1_100076a0, %dec_label_pc_10007698.backedge ], [ %v1_100076a09, %dec_label_pc_10007698.preheader ]
  %v0_1000770c = phi i32 [ %storemerge, %dec_label_pc_10007698.backedge ], [ %v1_10007684, %dec_label_pc_10007698.preheader ]
  store i32 %v0_1000770c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_100076bc110 = inttoptr i32 %v0_1000770c to i8*
  %v2_100076bc111 = load i8, i8* %v1_100076bc110, align 1
  %v3_100076bc112 = zext i8 %v2_100076bc111 to i32
  store i32 %v3_100076bc112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_100076c4114 = icmp eq i8 %v2_100076bc111, 0
  br i1 %v3_100076c4114, label %dec_label_pc_10007708, label %dec_label_pc_100076d4.preheader

dec_label_pc_100076d4.preheader:                  ; preds = %dec_label_pc_100076b0, %dec_label_pc_100077a4
  %v2_100076bc120 = phi i8 [ %v2_100076bc, %dec_label_pc_100077a4 ], [ %v2_100076bc111, %dec_label_pc_100076b0 ]
  %v3_100076cc123.in = phi i8 [ %v2_100076bc, %dec_label_pc_100077a4 ], [ %v2_100076bc111, %dec_label_pc_100076b0 ]
  %v1_100076c8122.in = phi i32 [ %v3_100076bc, %dec_label_pc_100077a4 ], [ %v3_100076bc112, %dec_label_pc_100076b0 ]
  %v1_100076c0121 = phi i32 [ %v1_100076c0, %dec_label_pc_100077a4 ], [ 1, %dec_label_pc_100076b0 ]
  %v0_100076bc119 = phi i32 [ %v1_100077a8, %dec_label_pc_100077a4 ], [ %v0_1000770c, %dec_label_pc_100076b0 ]
  %v0_100076c0118 = phi i32 [ %v0_100076c028, %dec_label_pc_100077a4 ], [ 0, %dec_label_pc_100076b0 ]
  %v0_10007708117 = phi i32 [ %v2_100077a4, %dec_label_pc_100077a4 ], [ 1, %dec_label_pc_100076b0 ]
  br label %dec_label_pc_100076d4

dec_label_pc_100076d4:                            ; preds = %dec_label_pc_100076d4.preheader, %dec_label_pc_100076d8
  %v1_100077a4 = phi i32 [ 0, %dec_label_pc_100076d8 ], [ %v1_100076c0121, %dec_label_pc_100076d4.preheader ]
  %v0_100076e4.in = phi i32 [ %v3_100076f4, %dec_label_pc_100076d8 ], [ %v1_100076c8122.in, %dec_label_pc_100076d4.preheader ]
  %v0_100077a8 = phi i32 [ %v2_100076f0, %dec_label_pc_100076d8 ], [ %v0_100076bc119, %dec_label_pc_100076d4.preheader ]
  %v0_100076d4.in = phi i8 [ %v2_100076f4, %dec_label_pc_100076d8 ], [ %v3_100076cc123.in, %dec_label_pc_100076d4.preheader ]
  %v1_100076d4.in = phi i8 [ %v2_100076f4, %dec_label_pc_100076d8 ], [ %v2_100076bc120, %dec_label_pc_100076d4.preheader ]
  %v0_100076c028 = phi i32 [ 1, %dec_label_pc_100076d8 ], [ %v0_100076c0118, %dec_label_pc_100076d4.preheader ]
  %v0_100076d4 = icmp eq i8 %v0_100076d4.in, -65
  %v1_100076d4 = icmp ult i8 %v1_100076d4.in, -65
  %v2_100076d4 = or i1 %v0_100076d4, %v1_100076d4
  br i1 %v2_100076d4, label %dec_label_pc_100077a4, label %dec_label_pc_100076d8

dec_label_pc_100076d8:                            ; preds = %dec_label_pc_100076d4
  %v0_100076e4 = mul nuw nsw i32 %v0_100076e4.in, 256
  %v1_100076d8 = add i32 %v0_100077a8, 1
  %v2_100076d8 = inttoptr i32 %v1_100076d8 to i8*
  %v3_100076d8 = load i8, i8* %v2_100076d8, align 1
  %v4_100076d8 = zext i8 %v3_100076d8 to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100076e4 = or i32 %v4_100076d8, -49152
  %v1_100076ec = add nsw i32 %v2_100076e4, %v0_100076e4
  %v0_100076f0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100076f0 = add i32 %v1_100076ec, %v0_100076f0
  store i32 %v2_100076f0, i32* %r9.global-to-local, align 4
  %v1_100076f4 = inttoptr i32 %v2_100076f0 to i8*
  %v2_100076f4 = load i8, i8* %v1_100076f4, align 1
  %v3_100076f4 = zext i8 %v2_100076f4 to i32
  store i32 %v3_100076f4, i32* %r0.global-to-local, align 4
  %v3_100076f8 = icmp eq i8 %v2_100076f4, 0
  br i1 %v3_100076f8, label %dec_label_pc_10007708, label %dec_label_pc_100076d4

dec_label_pc_10007708:                            ; preds = %dec_label_pc_100076b0, %dec_label_pc_100077a4, %dec_label_pc_100076d8
  %v0_10007708103 = phi i32 [ %v0_10007708117, %dec_label_pc_100076d8 ], [ 1, %dec_label_pc_100076b0 ], [ %v2_100077a4, %dec_label_pc_100077a4 ]
  %v1_10007708 = phi i32 [ 1, %dec_label_pc_100076d8 ], [ 0, %dec_label_pc_100076b0 ], [ %v0_100076c028, %dec_label_pc_100077a4 ]
  %v2_10007708 = add i32 %v1_10007708, %v0_10007708103
  store i32 %v2_10007708, i32* %r10.global-to-local, align 4
  %v2_1000770c = add i32 %v2_10007708, %v0_1000770c
  %v3_1000770c = inttoptr i32 %v2_1000770c to i16*
  %v4_1000770c = load i16, i16* %v3_1000770c, align 2
  %v5_1000770c = zext i16 %v4_1000770c to i32
  store i32 %v5_1000770c, i32* %r0.global-to-local, align 4
  %v1_10007714 = add i32 %v2_1000770c, 10
  store i32 %v1_10007714, i32* @r29, align 4
  %v3_10007718 = icmp eq i16 %v4_1000770c, 1
  br i1 %v3_10007718, label %dec_label_pc_100077bc, label %dec_label_pc_10007720

dec_label_pc_10007720:                            ; preds = %dec_label_pc_100077bc, %dec_label_pc_10007708
  store i32 %v1_10007714, i32* %r9.global-to-local, align 4
  %v1_1000772c125 = inttoptr i32 %v1_10007714 to i8*
  %v2_1000772c126 = load i8, i8* %v1_1000772c125, align 1
  %v3_1000772c127 = zext i8 %v2_1000772c126 to i32
  store i32 %v3_1000772c127, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10007734129 = icmp eq i8 %v2_1000772c126, 0
  %v1_10007738130 = mul nuw nsw i32 %v3_1000772c127, 256
  store i32 %v1_10007738130, i32* %r10.global-to-local, align 4
  br i1 %v3_10007734129, label %dec_label_pc_10007778, label %dec_label_pc_10007744.preheader

dec_label_pc_10007744.preheader:                  ; preds = %dec_label_pc_10007720, %dec_label_pc_100077b0
  %v2_1000772c135 = phi i8 [ %v2_1000772c, %dec_label_pc_100077b0 ], [ %v2_1000772c126, %dec_label_pc_10007720 ]
  %v3_1000773c138.in = phi i8 [ %v2_1000772c, %dec_label_pc_100077b0 ], [ %v2_1000772c126, %dec_label_pc_10007720 ]
  %v1_10007738137 = phi i32 [ %v1_10007738, %dec_label_pc_100077b0 ], [ %v1_10007738130, %dec_label_pc_10007720 ]
  %v1_10007730136 = phi i32 [ %v1_10007730, %dec_label_pc_100077b0 ], [ 1, %dec_label_pc_10007720 ]
  %v0_1000772c134 = phi i32 [ %v1_100077b4, %dec_label_pc_100077b0 ], [ %v1_10007714, %dec_label_pc_10007720 ]
  %v0_10007730133 = phi i32 [ %v0_1000773038, %dec_label_pc_100077b0 ], [ 0, %dec_label_pc_10007720 ]
  %v0_10007778132 = phi i32 [ %v2_100077b0, %dec_label_pc_100077b0 ], [ 1, %dec_label_pc_10007720 ]
  br label %dec_label_pc_10007744

dec_label_pc_10007744:                            ; preds = %dec_label_pc_10007744.preheader, %dec_label_pc_10007748
  %v1_100077b0 = phi i32 [ 0, %dec_label_pc_10007748 ], [ %v1_10007730136, %dec_label_pc_10007744.preheader ]
  %v0_10007754 = phi i32 [ %v1_1000776c, %dec_label_pc_10007748 ], [ %v1_10007738137, %dec_label_pc_10007744.preheader ]
  %v0_100077b4 = phi i32 [ %v2_10007760, %dec_label_pc_10007748 ], [ %v0_1000772c134, %dec_label_pc_10007744.preheader ]
  %v0_10007744.in = phi i8 [ %v2_10007764, %dec_label_pc_10007748 ], [ %v3_1000773c138.in, %dec_label_pc_10007744.preheader ]
  %v1_10007744.in = phi i8 [ %v2_10007764, %dec_label_pc_10007748 ], [ %v2_1000772c135, %dec_label_pc_10007744.preheader ]
  %v0_1000773038 = phi i32 [ 1, %dec_label_pc_10007748 ], [ %v0_10007730133, %dec_label_pc_10007744.preheader ]
  %v0_10007744 = icmp eq i8 %v0_10007744.in, -65
  %v1_10007744 = icmp ult i8 %v1_10007744.in, -65
  %v2_10007744 = or i1 %v0_10007744, %v1_10007744
  br i1 %v2_10007744, label %dec_label_pc_100077b0, label %dec_label_pc_10007748

dec_label_pc_10007748:                            ; preds = %dec_label_pc_10007744
  %v1_10007748 = add i32 %v0_100077b4, 1
  %v2_10007748 = inttoptr i32 %v1_10007748 to i8*
  %v3_10007748 = load i8, i8* %v2_10007748, align 1
  %v4_10007748 = zext i8 %v3_10007748 to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10007754 = or i32 %v4_10007748, -49152
  %v1_1000775c = add nsw i32 %v2_10007754, %v0_10007754
  %v0_10007760 = load i32, i32* %r19.global-to-local, align 4
  %v2_10007760 = add i32 %v1_1000775c, %v0_10007760
  store i32 %v2_10007760, i32* %r9.global-to-local, align 4
  %v1_10007764 = inttoptr i32 %v2_10007760 to i8*
  %v2_10007764 = load i8, i8* %v1_10007764, align 1
  %v3_10007764 = zext i8 %v2_10007764 to i32
  store i32 %v3_10007764, i32* %r0.global-to-local, align 4
  %v3_10007768 = icmp eq i8 %v2_10007764, 0
  %v1_1000776c = mul nuw nsw i32 %v3_10007764, 256
  store i32 %v1_1000776c, i32* %r10.global-to-local, align 4
  br i1 %v3_10007768, label %dec_label_pc_10007778, label %dec_label_pc_10007744

dec_label_pc_10007778:                            ; preds = %dec_label_pc_10007720, %dec_label_pc_100077b0, %dec_label_pc_10007748
  %v0_10007778109 = phi i32 [ %v0_10007778132, %dec_label_pc_10007748 ], [ 1, %dec_label_pc_10007720 ], [ %v2_100077b0, %dec_label_pc_100077b0 ]
  %v1_10007778 = phi i32 [ 1, %dec_label_pc_10007748 ], [ 0, %dec_label_pc_10007720 ], [ %v0_1000773038, %dec_label_pc_100077b0 ]
  %v2_10007778 = add i32 %v1_10007778, %v0_10007778109
  %v2_1000777c = add i32 %v2_10007778, %v1_10007714
  br label %dec_label_pc_10007698.backedge

dec_label_pc_10007698.backedge:                   ; preds = %dec_label_pc_10007778, %dec_label_pc_10007828
  %v0_10007698 = phi i32 [ %v0_1000769849, %dec_label_pc_10007778 ], [ %v0_10007698.pre, %dec_label_pc_10007828 ]
  %storemerge = phi i32 [ %v2_1000777c, %dec_label_pc_10007778 ], [ %v2_1000782c, %dec_label_pc_10007828 ]
  %v1_10007698 = add i32 %v0_10007698, -1
  store i32 %v1_10007698, i32* %r0.global-to-local, align 4
  %v1_100076a0 = urem i32 %v1_10007698, 65536
  store i32 %v1_100076a0, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_100076a8 = icmp eq i32 %v1_100076a0, 65535
  br i1 %v4_100076a8, label %dec_label_pc_10007608, label %dec_label_pc_100076b0

dec_label_pc_10007784:                            ; preds = %dec_label_pc_10007608
  %v1_10007784 = add i32 %v0_10007610, 4
  %v2_10007784 = inttoptr i32 %v1_10007784 to i32*
  %v3_10007784 = load i32, i32* %v2_10007784, align 4
  store i32 %v3_10007784, i32* @r3, align 4
  %v3_10007788 = icmp eq i32 %v3_10007784, 0
  br i1 %v3_10007788, label %dec_label_pc_10007794, label %dec_label_pc_10007790

dec_label_pc_10007790:                            ; preds = %dec_label_pc_10007784
  store i32 268466068, i32* @lr, align 4
  %v0_10007790 = call i32 @function_1000b964()
  %v0_10007794.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10007794

dec_label_pc_10007794:                            ; preds = %dec_label_pc_10007784, %dec_label_pc_10007790
  %v0_10007794 = phi i32 [ %v0_10007610, %dec_label_pc_10007784 ], [ %v0_10007794.pre, %dec_label_pc_10007790 ]
  store i32 %v0_10007794, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268466080, i32* @lr, align 4
  %v0_1000779c = call i32 @function_1000b964()
  br label %dec_label_pc_1000761c

dec_label_pc_100077a4:                            ; preds = %dec_label_pc_100076d4
  %v2_100077a4 = add i32 %v1_100077a4, %v0_10007708117
  store i32 %v2_100077a4, i32* %r10.global-to-local, align 4
  %v1_100077a8 = add i32 %v0_100077a8, 1
  store i32 %v1_100077a8, i32* %r9.global-to-local, align 4
  %v1_100076bc = inttoptr i32 %v1_100077a8 to i8*
  %v2_100076bc = load i8, i8* %v1_100076bc, align 1
  %v3_100076bc = zext i8 %v2_100076bc to i32
  store i32 %v3_100076bc, i32* %r0.global-to-local, align 4
  %v1_100076c0 = xor i32 %v0_100076c028, 1
  store i32 %v1_100076c0, i32* %r11.global-to-local, align 4
  %v3_100076c4 = icmp eq i8 %v2_100076bc, 0
  br i1 %v3_100076c4, label %dec_label_pc_10007708, label %dec_label_pc_100076d4.preheader

dec_label_pc_100077b0:                            ; preds = %dec_label_pc_10007744
  %v2_100077b0 = add i32 %v1_100077b0, %v0_10007778132
  %v1_100077b4 = add i32 %v0_100077b4, 1
  store i32 %v1_100077b4, i32* %r9.global-to-local, align 4
  %v1_1000772c = inttoptr i32 %v1_100077b4 to i8*
  %v2_1000772c = load i8, i8* %v1_1000772c, align 1
  %v3_1000772c = zext i8 %v2_1000772c to i32
  store i32 %v3_1000772c, i32* %r0.global-to-local, align 4
  %v1_10007730 = xor i32 %v0_1000773038, 1
  store i32 %v1_10007730, i32* %r11.global-to-local, align 4
  %v3_10007734 = icmp eq i8 %v2_1000772c, 0
  %v1_10007738 = mul nuw nsw i32 %v3_1000772c, 256
  store i32 %v1_10007738, i32* %r10.global-to-local, align 4
  br i1 %v3_10007734, label %dec_label_pc_10007778, label %dec_label_pc_10007744.preheader

dec_label_pc_100077bc:                            ; preds = %dec_label_pc_10007708
  %v1_100077bc = add i32 %v2_1000770c, 2
  %v2_100077bc = inttoptr i32 %v1_100077bc to i16*
  %v3_100077bc = load i16, i16* %v2_100077bc, align 2
  %v4_100077bc = zext i16 %v3_100077bc to i32
  store i32 %v4_100077bc, i32* %r0.global-to-local, align 4
  %v3_100077c0 = icmp eq i16 %v3_100077bc, 1
  br i1 %v3_100077c0, label %dec_label_pc_100077c8, label %dec_label_pc_10007720

dec_label_pc_100077c8:                            ; preds = %dec_label_pc_100077bc
  %v1_100077c8 = add i32 %v2_1000770c, 8
  %v2_100077c8 = inttoptr i32 %v1_100077c8 to i16*
  %v3_100077c8 = load i16, i16* %v2_100077c8, align 2
  %v4_100077c8 = zext i16 %v3_100077c8 to i32
  store i32 %v4_100077c8, i32* %r0.global-to-local, align 4
  %v3_100077cc = icmp eq i16 %v3_100077c8, 4
  br i1 %v3_100077cc, label %dec_label_pc_100077d4, label %dec_label_pc_10007828

dec_label_pc_100077d4:                            ; preds = %dec_label_pc_100077c8
  %v2_100077d4 = inttoptr i32 %v1_10007714 to i8*
  %v3_100077d4 = load i8, i8* %v2_100077d4, align 1
  %v4_100077d4 = zext i8 %v3_100077d4 to i32
  store i32 %v4_100077d4, i32* %r0.global-to-local, align 4
  store i32 %v4_100077d4, i32* %stack_var_-4312, align 4
  %v1_100077dc = add i32 %v2_1000770c, 11
  %v2_100077dc = inttoptr i32 %v1_100077dc to i8*
  %v3_100077dc = load i8, i8* %v2_100077dc, align 1
  %v4_100077dc = zext i8 %v3_100077dc to i32
  store i32 %v4_100077dc, i32* %r9.global-to-local, align 4
  %v1_100077e4 = add i32 %v2_1000770c, 12
  %v2_100077e4 = inttoptr i32 %v1_100077e4 to i8*
  %v3_100077e4 = load i8, i8* %v2_100077e4, align 1
  %v4_100077e4 = zext i8 %v3_100077e4 to i32
  store i32 %v4_100077e4, i32* %r0.global-to-local, align 4
  %v1_100077ec = add i32 %v2_1000770c, 13
  %v2_100077ec = inttoptr i32 %v1_100077ec to i8*
  %v3_100077ec = load i8, i8* %v2_100077ec, align 1
  %v4_100077ec = zext i8 %v3_100077ec to i32
  store i32 %v4_100077ec, i32* %r9.global-to-local, align 4
  %v0_100077f4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100077f4 = inttoptr i32 %v0_100077f4 to i8*
  %v2_100077f4 = load i8, i8* %v1_100077f4, align 1
  %v3_100077f4 = zext i8 %v2_100077f4 to i32
  %v1_100077f8 = add i32 %v0_100077f4, 4
  %v2_100077f8 = inttoptr i32 %v1_100077f8 to i32*
  %v3_100077f8 = load i32, i32* %v2_100077f8, align 4
  %v1_100077fc = mul nuw nsw i32 %v3_100077f4, 4
  %v1_10007800 = add nuw nsw i32 %v1_100077fc, 4
  store i32 268466184, i32* @lr, align 4
  %v3_10007804 = sext i8 %v3_100077ec to i32
  %v4_10007804 = call i32 @function_1000ba64(i32 %v3_100077f8, i32 %v1_10007800, i32 %v3_10007804)
  %v0_10007808 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007808 = inttoptr i32 %v0_10007808 to i8*
  %v2_10007808 = load i8, i8* %v1_10007808, align 1
  %v3_10007808 = zext i8 %v2_10007808 to i32
  %v3_1000780c = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_1000780c, i32* %r0.global-to-local, align 4
  %v1_10007810 = add nuw nsw i32 %v3_10007808, 1
  store i32 %v1_10007810, i32* %r11.global-to-local, align 4
  %v1_10007814 = mul nuw nsw i32 %v3_10007808, 4
  store i32 %v1_10007814, i32* %r9.global-to-local, align 4
  %v3_10007818 = add i32 %v1_10007814, %v4_10007804
  %v4_10007818 = inttoptr i32 %v3_10007818 to i32*
  store i32 %v3_1000780c, i32* %v4_10007818, align 4
  %v0_1000781c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000781c = trunc i32 %v0_1000781c to i8
  %v2_1000781c = load i32, i32* %r25.global-to-local, align 4
  %v3_1000781c = inttoptr i32 %v2_1000781c to i8*
  store i8 %v1_1000781c, i8* %v3_1000781c, align 1
  %v1_10007820 = load i32, i32* %r25.global-to-local, align 4
  %v2_10007820 = add i32 %v1_10007820, 4
  %v3_10007820 = inttoptr i32 %v2_10007820 to i32*
  store i32 %v4_10007804, i32* %v3_10007820, align 4
  %v0_10007824 = load i32, i32* @r31, align 4
  %v1_10007824 = add i32 %v0_10007824, 8
  %v2_10007824 = inttoptr i32 %v1_10007824 to i16*
  %v3_10007824 = load i16, i16* %v2_10007824, align 2
  %v4_10007824 = zext i16 %v3_10007824 to i32
  store i32 %v4_10007824, i32* %r0.global-to-local, align 4
  %v0_1000782c.pre = load i32, i32* @r29, align 4
  %v0_10007698.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007828

dec_label_pc_10007828:                            ; preds = %dec_label_pc_100077c8, %dec_label_pc_100077d4
  %v0_10007698.pre = phi i32 [ %v0_1000769849, %dec_label_pc_100077c8 ], [ %v0_10007698.pre.pre, %dec_label_pc_100077d4 ]
  %v0_1000782c = phi i32 [ %v1_10007714, %dec_label_pc_100077c8 ], [ %v0_1000782c.pre, %dec_label_pc_100077d4 ]
  %v0_10007828 = phi i32 [ %v4_100077c8, %dec_label_pc_100077c8 ], [ %v4_10007824, %dec_label_pc_100077d4 ]
  store i32 %v0_10007828, i32* %r0.global-to-local, align 4
  %v2_1000782c = add i32 %v0_10007828, %v0_1000782c
  br label %dec_label_pc_10007698.backedge

dec_label_pc_100073c8.preheader.thread:           ; preds = %dec_label_pc_10007324
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100073c81355 = or i32 %v2_10007390, 1
  store i32 %v1_100073c81355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100073f8

; uselistorder directives
  uselistorder i32 %v1_10007814, { 1, 0 }
  uselistorder i32 %v4_10007804, { 1, 0 }
  uselistorder i32 %v1_10007730, { 1, 0 }
  uselistorder i8 %v2_1000772c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100077b4, { 1, 2, 0 }
  uselistorder i32 %v2_100077b0, { 1, 0 }
  uselistorder i32 %v1_100076c0, { 1, 0 }
  uselistorder i32 %v3_100076bc, { 1, 0 }
  uselistorder i8 %v2_100076bc, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100077a8, { 1, 2, 0 }
  uselistorder i32 %v2_100077a4, { 2, 1, 0 }
  uselistorder i32 %v1_100076a0, { 1, 0, 2 }
  uselistorder i8 %v2_10007764, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10007760, { 1, 2, 0 }
  uselistorder i32 %v0_1000773038, { 2, 0, 1 }
  uselistorder i32 %v0_10007778132, { 1, 0 }
  uselistorder i32 %v1_10007738130, { 1, 0 }
  uselistorder i32 %v1_10007714, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_100076f4, { 1, 0 }
  uselistorder i8 %v2_100076f4, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100076f0, { 1, 2, 0 }
  uselistorder i32 %v0_100076c028, { 2, 0, 1 }
  uselistorder i32 %v0_10007708117, { 1, 0 }
  uselistorder i32 %v0_1000770c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100076a09, { 2, 1, 0 }
  uselistorder i32 %v0_10007610, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10007600, { 1, 0 }
  uselistorder i32 %v1_100075ac, { 1, 0 }
  uselistorder i32 %v4_100075a8, { 1, 0 }
  uselistorder i32 %v1_100075a8, { 1, 2, 0 }
  uselistorder i32 %v3_100075a4, { 2, 1, 0 }
  uselistorder i32 %v1_10007558, { 1, 0 }
  uselistorder i32 %v0_10007558, { 1, 0 }
  uselistorder i32 %v1_10007548, { 1, 0 }
  uselistorder i32 %v1_10007544, { 1, 0 }
  uselistorder i8 %v2_100073d0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100073cc, { 1, 0 }
  uselistorder i32 %v0_100073c4, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10007394, { 0, 2, 1 }
  uselistorder i32 %v2_10007390, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_1000732c, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9, 22, 10, 11, 15, 12, 20, 21, 13, 14, 16, 17, 19, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 5, 4, 0, 1, 6, 7 }
  uselistorder i32* %r11.global-to-local, { 15, 0, 1, 3, 5, 2, 12, 4, 11, 6, 7, 8, 13, 10, 9, 14 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 8, 29, 10, 11, 28, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %ctr.global-to-local, { 9, 0, 5, 6, 1, 2, 3, 7, 8, 4 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 48, 49, 18, 19, 50, 51, 9, 8, 7, 52, 53, 21, 22, 23, 10, 11, 54, 24, 55, 25, 56, 0, 12, 57, 58, 26, 27, 28, 59, 60, 61, 62, 63, 64, 29, 30, 1, 13, 65, 66, 31, 32, 33, 34, 2, 14, 67, 68, 35, 36, 37, 38, 39, 69, 15, 40, 41, 3, 16, 70, 71, 5, 42, 43, 44, 4, 17, 72, 73, 6, 45, 46, 47, 20, 74 }
  uselistorder i32 (i32)* @function_1000c090, { 7, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 3, 0, 1, 2, 5, 4, 6 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_10007828, { 1, 0 }
  uselistorder label %dec_label_pc_10007794, { 1, 0 }
  uselistorder label %dec_label_pc_10007698.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10007778, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007744, { 1, 0 }
  uselistorder label %dec_label_pc_10007744.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10007708, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100076d4, { 1, 0 }
  uselistorder label %dec_label_pc_100076d4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100076b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000761c, { 1, 0 }
  uselistorder label %dec_label_pc_10007608, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100075e8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10007540.dec_label_pc_10007540_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100074bc, { 1, 0 }
  uselistorder label %dec_label_pc_100073f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100073d0, { 1, 0 }
}

define i32 @function_10007840(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007840:
  %v3_10007854 = load i32, i32* @global_var_1001e1b4.167, align 4
  store i32 268466268, i32* @lr, align 4
  %v2_10007858 = call i32 @function_1000a8bc(i32 %v3_10007854, i32 9)
  ret i32 %v2_10007858
}

define i32 @function_1000786c() local_unnamed_addr {
dec_label_pc_1000786c:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007874 = load i32, i32* @r31, align 4
  %v0_10007878 = load i32, i32* @r3, align 4
  store i32 %v0_10007878, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10007888 = add i32 %v0_10007878, 4
  %v2_10007888 = inttoptr i32 %v1_10007888 to i32*
  %v3_10007888 = load i32, i32* %v2_10007888, align 4
  %v3_10007890 = icmp eq i32 %v3_10007888, -1
  br i1 %v3_10007890, label %dec_label_pc_100078a8, label %dec_label_pc_100078a4

dec_label_pc_100078a4:                            ; preds = %dec_label_pc_1000786c
  store i32 268466344, i32* @lr, align 4
  %v0_100078a4 = call i32 @function_1000a79c()
  br label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %dec_label_pc_1000786c, %dec_label_pc_100078a4
  store i32 268466360, i32* @lr, align 4
  %v3_100078b4 = call i32 @function_1000b568(i32 2, i32 1, i32 0)
  store i32 512, i32* @r4, align 4
  %v0_100078c0 = load i32, i32* @r31, align 4
  %v1_100078c0 = add i32 %v0_100078c0, 28
  store i32 %v1_100078c0, i32* @r3, align 4
  %v3_100078c4 = icmp eq i32 %v3_100078b4, -1
  %v2_100078c8 = add i32 %v0_100078c0, 4
  %v3_100078c8 = inttoptr i32 %v2_100078c8 to i32*
  store i32 %v3_100078b4, i32* %v3_100078c8, align 4
  br i1 %v3_100078c4, label %dec_label_pc_100078a8.dec_label_pc_10007940_crit_edge, label %dec_label_pc_100078d0

dec_label_pc_100078a8.dec_label_pc_10007940_crit_edge: ; preds = %dec_label_pc_100078a8
  %v0_10007954.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007940

dec_label_pc_100078d0:                            ; preds = %dec_label_pc_100078a8
  %v0_100078d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100078d0 = load i32, i32* @r31, align 4
  %v2_100078d0 = add i32 %v1_100078d0, 24
  %v3_100078d0 = inttoptr i32 %v2_100078d0 to i32*
  store i32 %v0_100078d0, i32* %v3_100078d0, align 4
  store i32 268466392, i32* @lr, align 4
  %v0_100078d4 = call i32 @function_10009fb8()
  %v0_100078d8 = load i32, i32* @r31, align 4
  %v1_100078d8 = add i32 %v0_100078d8, 4
  %v2_100078d8 = inttoptr i32 %v1_100078d8 to i32*
  %v3_100078d8 = load i32, i32* %v2_100078d8, align 4
  store i32 %v3_100078d8, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268466416, i32* @lr, align 4
  %v2_100078ec = call i32 @function_1000a66c(i32 %v3_100078d8)
  store i32 4, i32* @r4, align 4
  store i32 268466436, i32* @lr, align 4
  %v2_10007900 = call i32 @function_1000a66c(i32 %v3_100078d8)
  %v3_10007908 = load i32, i32* @global_var_1001e1a8.168, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10007910 = load i32, i32* @r31, align 4
  %v2_10007918 = add i32 %v0_10007910, 8
  %v3_10007918 = inttoptr i32 %v2_10007918 to i32*
  store i32 %v3_10007908, i32* %v3_10007918, align 4
  %v0_10007920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007920 = load i32, i32* @r31, align 4
  %v2_10007920 = add i32 %v1_10007920, 12
  %v3_10007920 = inttoptr i32 %v2_10007920 to i32*
  store i32 %v0_10007920, i32* %v3_10007920, align 4
  %v0_10007928 = load i32, i32* @r31, align 4
  %v1_10007928 = add i32 %v0_10007928, 4
  %v2_10007928 = inttoptr i32 %v1_10007928 to i32*
  %v3_10007928 = load i32, i32* %v2_10007928, align 4
  store i32 %v3_10007928, i32* @r3, align 4
  %v1_1000792c = add i32 %v0_10007928, 16
  %v2_1000792c = inttoptr i32 %v1_1000792c to i32*
  %v3_1000792c = load i32, i32* %v2_1000792c, align 4
  store i32 %v3_1000792c, i32* %r9.global-to-local, align 4
  store i32 268466496, i32* @lr, align 4
  %v0_1000793c = call i32 @function_1000b368()
  br label %dec_label_pc_10007940

dec_label_pc_10007940:                            ; preds = %dec_label_pc_100078a8.dec_label_pc_10007940_crit_edge, %dec_label_pc_100078d0
  %v0_10007954 = phi i32 [ %v0_10007954.pre, %dec_label_pc_100078a8.dec_label_pc_10007940_crit_edge ], [ %v0_1000793c, %dec_label_pc_100078d0 ]
  store i32 %v0_10007874, i32* @r31, align 4
  ret i32 %v0_10007954

; uselistorder directives
  uselistorder i32 ()* @function_10009fb8, { 6, 11, 13, 12, 10, 9, 8, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007940, { 1, 0 }
  uselistorder label %dec_label_pc_100078a8, { 1, 0 }
}

define i32 @function_10007958(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007958:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000795c = load i32, i32* @lr, align 4
  store i32 %v0_1000795c, i32* %r0.global-to-local, align 4
  %v3_10007968 = load i32, i32* @global_var_1001e19c.169, align 4
  %v1_10007974 = mul i32 %v3_10007968, 16
  store i32 %v1_10007974, i32* %r9.global-to-local, align 4
  %v0_10007978 = load i32, i32* @r28, align 4
  %v3_10007980 = load i32, i32* @global_var_1001e1a0.170, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_1000798c = add i32 %v1_10007974, 16
  %v0_100079a4 = load i32, i32* @r29, align 4
  %v0_100079a8 = load i32, i32* @r30, align 4
  store i32 268466612, i32* @lr, align 4
  %v3_100079b0 = call i32 @function_1000ba64(i32 %v3_10007980, i32 %v1_1000798c, i32 %v1_10007974)
  store i32 %v3_100079b0, i32* %r25.global-to-local, align 4
  %v0_100079b8 = load i32, i32* @r28, align 4
  store i32 %v3_100079b0, i32* @global_var_1001e1a0.170, align 4
  %v3_100079c0 = load i32, i32* @global_var_1001e19c.169, align 4
  store i32 %v3_100079c0, i32* %r24.global-to-local, align 4
  store i32 268466632, i32* @lr, align 4
  %v1_100079c4 = inttoptr i32 %v0_100079b8 to i8*
  %v2_100079c4 = call i32 @function_10009f10(i8* %v1_100079c4)
  %sext = mul i32 %v2_100079c4, 16777216
  %v1_100079c8 = sdiv i32 %sext, 16777216
  %v2_100079c8 = add nsw i32 %v1_100079c8, 1
  store i32 %v2_100079c8, i32* @r29, align 4
  store i32 %v1_100079c8, i32* @r30, align 4
  store i32 %v2_100079c8, i32* @r3, align 4
  store i32 268466648, i32* @lr, align 4
  %v0_100079d4 = call i32 @function_1000b79c()
  %v0_100079d8 = load i32, i32* @r28, align 4
  %v0_100079dc = load i32, i32* @r29, align 4
  store i32 %v0_100079d4, i32* %r31.global-to-local, align 4
  store i32 268466664, i32* @lr, align 4
  %v3_100079e4 = call i32 @function_10009f94(i32 %v0_100079d8, i32 %v0_100079dc, i32 %v0_100079dc)
  %v0_100079e8 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_100079e8, 1
  %extract.t6 = trunc i32 %v0_100079e8 to i8
  br i1 %tmp21, label %dec_label_pc_10007a0c, label %dec_label_pc_100079f0

dec_label_pc_100079f0:                            ; preds = %dec_label_pc_10007958
  store i32 %v0_100079e8, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100079f8

dec_label_pc_100079f8:                            ; preds = %dec_label_pc_100079f8, %dec_label_pc_100079f0
  %v1_10007a00 = phi i32 [ %v1_10007a04, %dec_label_pc_100079f8 ], [ 0, %dec_label_pc_100079f0 ]
  %v1_100079f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100079f8 = add i32 %v1_100079f8, %v1_10007a00
  %v3_100079f8 = inttoptr i32 %v2_100079f8 to i8*
  %v4_100079f8 = load i8, i8* %v3_100079f8, align 1
  %v5_100079f8 = zext i8 %v4_100079f8 to i32
  %v1_100079fc = xor i32 %v5_100079f8, 34
  store i32 %v1_100079fc, i32* %r0.global-to-local, align 4
  %v3_10007a00 = trunc i32 %v1_100079fc to i8
  store i8 %v3_10007a00, i8* %v3_100079f8, align 1
  %v0_10007a04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007a04 = add i32 %v0_10007a04, 1
  store i32 %v1_10007a04, i32* %r9.global-to-local, align 4
  %v0_10007a08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007a08 = add i32 %v0_10007a08, -1
  store i32 %v1_10007a08, i32* %ctr.global-to-local, align 4
  %v2_10007a08 = icmp eq i32 %v1_10007a08, 0
  br i1 %v2_10007a08, label %dec_label_pc_10007a0c.loopexit, label %dec_label_pc_100079f8

dec_label_pc_10007a0c.loopexit:                   ; preds = %dec_label_pc_100079f8
  %v0_10007a24.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10007a24.pre to i8
  br label %dec_label_pc_10007a0c

dec_label_pc_10007a0c:                            ; preds = %dec_label_pc_10007a0c.loopexit, %dec_label_pc_10007958
  %v0_10007a24.off0 = phi i8 [ %extract.t, %dec_label_pc_10007a0c.loopexit ], [ %extract.t6, %dec_label_pc_10007958 ]
  %v3_10007a0c = load i32, i32* @global_var_1001e19c.169, align 4
  %v0_10007a10 = load i32, i32* %r23.global-to-local, align 4
  %v3_10007a14 = load i32, i32* @global_var_1001e1a0.170, align 4
  %v1_10007a18 = mul i32 %v3_10007a0c, 16
  %v2_10007a1c = add i32 %v3_10007a14, %v1_10007a18
  store i32 %v2_10007a1c, i32* %r9.global-to-local, align 4
  %v0_10007a20 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007a20 = mul i32 %v0_10007a20, 16
  store i32 %v1_10007a20, i32* %r0.global-to-local, align 4
  %v3_10007a24 = add i32 %v2_10007a1c, 12
  %v4_10007a24 = inttoptr i32 %v3_10007a24 to i8*
  store i8 %v0_10007a24.off0, i8* %v4_10007a24, align 1
  %v0_10007a28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007a28 = load i32, i32* %r25.global-to-local, align 4
  %v2_10007a28 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007a28 = add i32 %v2_10007a28, %v1_10007a28
  %v4_10007a28 = inttoptr i32 %v3_10007a28 to i32*
  store i32 %v0_10007a28, i32* %v4_10007a28, align 4
  %v3_10007a2c = load i32, i32* @global_var_1001e19c.169, align 4
  store i32 %v3_10007a2c, i32* @r30, align 4
  %v3_10007a30 = load i32, i32* @global_var_1001e1a0.170, align 4
  store i32 %v3_10007a30, i32* %r25.global-to-local, align 4
  store i32 268466744, i32* @lr, align 4
  %v1_10007a34 = inttoptr i32 %v0_10007a10 to i8*
  %v2_10007a34 = call i32 @function_10009f10(i8* %v1_10007a34)
  %sext1 = mul i32 %v2_10007a34, 16777216
  %v1_10007a38 = sdiv i32 %sext1, 16777216
  %v2_10007a38 = add nsw i32 %v1_10007a38, 1
  store i32 %v2_10007a38, i32* @r29, align 4
  store i32 %v1_10007a38, i32* @r28, align 4
  store i32 %v2_10007a38, i32* @r3, align 4
  store i32 268466760, i32* @lr, align 4
  %v0_10007a44 = call i32 @function_1000b79c()
  %v0_10007a48 = load i32, i32* %r23.global-to-local, align 4
  %v0_10007a4c = load i32, i32* @r29, align 4
  store i32 %v0_10007a44, i32* %r31.global-to-local, align 4
  store i32 268466776, i32* @lr, align 4
  %v3_10007a54 = call i32 @function_10009f94(i32 %v0_10007a48, i32 %v0_10007a4c, i32 %v0_10007a4c)
  %v0_10007a58 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10007a58, 1
  %extract.t8 = trunc i32 %v0_10007a58 to i8
  br i1 %tmp22, label %dec_label_pc_10007a7c, label %dec_label_pc_10007a60

dec_label_pc_10007a60:                            ; preds = %dec_label_pc_10007a0c
  store i32 %v0_10007a58, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007a68

dec_label_pc_10007a68:                            ; preds = %dec_label_pc_10007a68, %dec_label_pc_10007a60
  %v1_10007a70 = phi i32 [ %v1_10007a74, %dec_label_pc_10007a68 ], [ 0, %dec_label_pc_10007a60 ]
  %v1_10007a68 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007a68 = add i32 %v1_10007a68, %v1_10007a70
  %v3_10007a68 = inttoptr i32 %v2_10007a68 to i8*
  %v4_10007a68 = load i8, i8* %v3_10007a68, align 1
  %v5_10007a68 = zext i8 %v4_10007a68 to i32
  %v1_10007a6c = xor i32 %v5_10007a68, 34
  store i32 %v1_10007a6c, i32* %r0.global-to-local, align 4
  %v3_10007a70 = trunc i32 %v1_10007a6c to i8
  store i8 %v3_10007a70, i8* %v3_10007a68, align 1
  %v0_10007a74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007a74 = add i32 %v0_10007a74, 1
  store i32 %v1_10007a74, i32* %r9.global-to-local, align 4
  %v0_10007a78 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007a78 = add i32 %v0_10007a78, -1
  store i32 %v1_10007a78, i32* %ctr.global-to-local, align 4
  %v2_10007a78 = icmp eq i32 %v1_10007a78, 0
  br i1 %v2_10007a78, label %dec_label_pc_10007a7c.loopexit, label %dec_label_pc_10007a68

dec_label_pc_10007a7c.loopexit:                   ; preds = %dec_label_pc_10007a68
  %v0_10007a90.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_10007a90.pre to i8
  br label %dec_label_pc_10007a7c

dec_label_pc_10007a7c:                            ; preds = %dec_label_pc_10007a7c.loopexit, %dec_label_pc_10007a0c
  %v0_10007a90.off0 = phi i8 [ %extract.t7, %dec_label_pc_10007a7c.loopexit ], [ %extract.t8, %dec_label_pc_10007a0c ]
  %v3_10007a7c = load i32, i32* @global_var_1001e19c.169, align 4
  %v3_10007a84 = load i32, i32* @global_var_1001e1a0.170, align 4
  %v1_10007a88 = mul i32 %v3_10007a7c, 16
  %v2_10007a8c = or i32 %v1_10007a88, 13
  %v3_10007a90 = add i32 %v2_10007a8c, %v3_10007a84
  %v4_10007a90 = inttoptr i32 %v3_10007a90 to i8*
  store i8 %v0_10007a90.off0, i8* %v4_10007a90, align 1
  %v0_10007a94 = load i32, i32* @r30, align 4
  %v1_10007a94 = mul i32 %v0_10007a94, 16
  %v1_10007a98 = load i32, i32* %r25.global-to-local, align 4
  %v2_10007a98 = add i32 %v1_10007a98, %v1_10007a94
  store i32 %v2_10007a98, i32* %r9.global-to-local, align 4
  %v3_10007a9c = load i32, i32* @global_var_1001e19c.169, align 4
  %v3_10007aa0 = load i32, i32* @global_var_1001e1a0.170, align 4
  %v1_10007aa4 = mul i32 %v3_10007a9c, 16
  %v3_10007aa8 = load i16, i16* @global_var_1001e1a4.171, align 2
  %v4_10007aa8 = zext i16 %v3_10007aa8 to i32
  store i32 %v4_10007aa8, i32* %r7.global-to-local, align 4
  %v2_10007aac = add i32 %v3_10007aa0, %v1_10007aa4
  store i32 %v2_10007aac, i32* %r11.global-to-local, align 4
  store i32 %v0_1000795c, i32* %r0.global-to-local, align 4
  %v1_10007ab4 = add i32 %v3_10007a9c, 1
  store i32 %v1_10007ab4, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001e1a4.171 to i32), i32* %r8.global-to-local, align 4
  %v0_10007abc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007abc = add i32 %v2_10007a98, 4
  %v3_10007abc = inttoptr i32 %v2_10007abc to i32*
  store i32 %v0_10007abc, i32* %v3_10007abc, align 4
  %v0_10007ac4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10007ac4, i32* @global_var_1001e19c.169, align 4
  store i32 %v0_10007978, i32* @r28, align 4
  store i32 %v0_100079a4, i32* @r29, align 4
  store i32 %v0_100079a8, i32* @r30, align 4
  %v0_10007af4 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007af4 = trunc i32 %v0_10007af4 to i16
  %v2_10007af4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007af4 = add i32 %v2_10007af4, 10
  %v4_10007af4 = inttoptr i32 %v3_10007af4 to i16*
  store i16 %v1_10007af4, i16* %v4_10007af4, align 2
  %v0_10007af8 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007af8 = trunc i32 %v0_10007af8 to i16
  %v2_10007af8 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007af8 = add i32 %v2_10007af8, 8
  %v4_10007af8 = inttoptr i32 %v3_10007af8 to i16*
  store i16 %v1_10007af8, i16* %v4_10007af8, align 2
  %v0_10007afc = load i32, i32* %r8.global-to-local, align 4
  %v1_10007afc = trunc i32 %v0_10007afc to i16
  store i16 %v1_10007afc, i16* @global_var_1001e1a4.171, align 2
  ret i32 %v3_10007a54

; uselistorder directives
  uselistorder i32 %v3_10007a9c, { 1, 0 }
  uselistorder i32 %v1_10007a78, { 1, 0 }
  uselistorder i32 %v1_10007a74, { 1, 0 }
  uselistorder i32 %v0_10007a58, { 1, 0, 2 }
  uselistorder i32 %v1_10007a08, { 1, 0 }
  uselistorder i32 %v1_10007a04, { 1, 0 }
  uselistorder i32 %v0_100079e8, { 1, 0, 2 }
  uselistorder i32 %v1_10007974, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10009f10, { 22, 23, 3, 4, 5, 6, 7, 0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 74, 75, 76, 24, 25, 77, 78, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 69, 70, 71, 72, 73, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 (i32, i32, i32)* @function_1000ba64, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_10007b04() local_unnamed_addr {
dec_label_pc_10007b04:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i16 @__decompiler_undefined_function_1()
  %tmp58 = call i16 @__decompiler_undefined_function_1()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1904 = alloca i32, align 4
  %stack_var_-1896 = alloca i32, align 4
  %stack_var_-1892 = alloca i32, align 4
  %stack_var_-1856 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1728 = alloca i32, align 4
  %stack_var_-1900 = alloca i64, align 8
  %v0_10007b04 = load i32, i32* @lr, align 4
  store i32 %v0_10007b04, i32* %r0.global-to-local, align 4
  %v0_10007b0c = load i32, i32* @r14, align 4
  %v0_10007b1c = load i32, i32* @r18, align 4
  %v0_10007b2c = load i32, i32* @r22, align 4
  %v0_10007b30 = load i32, i32* @r23, align 4
  %v0_10007b38 = load i32, i32* @r25, align 4
  %v0_10007b3c = load i32, i32* @r26, align 4
  %v0_10007b40 = load i32, i32* @r27, align 4
  %v0_10007b44 = load i32, i32* @r28, align 4
  %v0_10007b48 = load i32, i32* @r29, align 4
  %v0_10007b4c = load i32, i32* @r30, align 4
  %v0_10007b50 = load i32, i32* @r31, align 4
  store i32 268467036, i32* @lr, align 4
  %v0_10007b58 = call i32 @function_1000a7e4()
  store i32 %v0_10007b58, i32* %r3.global-to-local, align 4
  %v1_10007b5c = icmp slt i32 %v0_10007b58, 0
  %v3_10007b5c = icmp eq i32 %v0_10007b58, 0
  store i1 %v1_10007b5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b5c, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10007b58, i32* @global_var_1001e1b4.167, align 4
  %tmp100 = icmp slt i32 %v0_10007b58, 1
  br i1 %tmp100, label %dec_label_pc_10007bc4, label %dec_label_pc_10007b6c

dec_label_pc_10007b6c:                            ; preds = %dec_label_pc_10007bc4, %dec_label_pc_10007b04
  store i32 %v0_10007b04, i32* %r0.global-to-local, align 4
  store i32 %v0_10007b0c, i32* @r14, align 4
  store i32 %v0_10007b1c, i32* @r18, align 4
  store i32 %v0_10007b2c, i32* @r22, align 4
  store i32 %v0_10007b30, i32* @r23, align 4
  store i32 %v0_10007b38, i32* %r25.global-to-local, align 4
  store i32 %v0_10007b3c, i32* @r26, align 4
  store i32 %v0_10007b40, i32* @r27, align 4
  store i32 %v0_10007b44, i32* @r28, align 4
  store i32 %v0_10007b48, i32* @r29, align 4
  store i32 %v0_10007b4c, i32* @r30, align 4
  store i32 %v0_10007b50, i32* @r31, align 4
  ret i32 %v0_10007b58

dec_label_pc_10007bc4:                            ; preds = %dec_label_pc_10007b04
  %v1_10007bc4 = icmp slt i32 %v0_10007b58, -1
  %v3_10007bc4 = icmp eq i32 %v0_10007b58, -1
  store i1 %v1_10007bc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bc4, label %dec_label_pc_10007b6c, label %dec_label_pc_10007bcc

dec_label_pc_10007bcc:                            ; preds = %dec_label_pc_10007bc4
  store i32 268467152, i32* @lr, align 4
  %v1_10007bcc = call i32 @function_1000a214(i32 %v0_10007b58)
  store i32 %v1_10007bcc, i32* %r3.global-to-local, align 4
  store i32 %v1_10007bcc, i32* @global_var_1001e180.71, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bdc.172 to i32), i32* @lr, align 4
  %v1_10007bd8 = call i32 @function_10006ff8(i32 %v1_10007bcc)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268467172, i32* @lr, align 4
  %v0_10007be0 = call i32 @function_1000ab6c()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10007be0, i32* @global_var_1001e1a8.168, align 4
  store i32 544, i32* %r4.global-to-local, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007bf8.173 to i32), i32* @lr, align 4
  %v2_10007bf4 = call i32 @function_1000b8f4(i32 256, i32 544)
  store i32 %v2_10007bf4, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1900, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10007bf4, i32* @global_var_1001e1ac.174, align 4
  store i32 %v2_10007bf4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007c24 = add i32 %v2_10007bf4, 4
  store i32 %v1_10007c24, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007c28

dec_label_pc_10007c28:                            ; preds = %dec_label_pc_10007c28.dec_label_pc_10007c28_crit_edge, %dec_label_pc_10007bcc
  %v1_10007c3c = phi i32 [ %v1_10007c44, %dec_label_pc_10007c28.dec_label_pc_10007c28_crit_edge ], [ %v1_10007c24, %dec_label_pc_10007bcc ]
  %v0_10007c3c = phi i32 [ %v0_10007c3c.pre, %dec_label_pc_10007c28.dec_label_pc_10007c28_crit_edge ], [ -1, %dec_label_pc_10007bcc ]
  %v1_10007c38 = phi i32 [ %v1_10007c38.pre, %dec_label_pc_10007c28.dec_label_pc_10007c28_crit_edge ], [ %v2_10007bf4, %dec_label_pc_10007bcc ]
  %v0_10007c34 = phi i32 [ %v0_10007c48, %dec_label_pc_10007c28.dec_label_pc_10007c28_crit_edge ], [ 0, %dec_label_pc_10007bcc ]
  %v1_10007c28 = mul i32 %v0_10007c34, 512
  store i32 %v1_10007c28, i32* %r0.global-to-local, align 4
  %v2_10007c30 = mul i32 %v0_10007c34, 544
  %v1_10007c34 = add i32 %v0_10007c34, 1
  store i32 %v1_10007c34, i32* %r10.global-to-local, align 4
  %v2_10007c38 = add i32 %v2_10007c30, %v1_10007c38
  store i32 %v2_10007c38, i32* %r9.global-to-local, align 4
  %v2_10007c3c = inttoptr i32 %v1_10007c3c to i32*
  store i32 %v0_10007c3c, i32* %v2_10007c3c, align 4
  %v0_10007c40 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007c40 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007c40 = add i32 %v1_10007c40, 12
  %v3_10007c40 = inttoptr i32 %v2_10007c40 to i32*
  store i32 %v0_10007c40, i32* %v3_10007c40, align 4
  %v0_10007c44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007c44 = add i32 %v0_10007c44, 544
  store i32 %v1_10007c44, i32* %r11.global-to-local, align 4
  %v0_10007c48 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10007c48, i32* %r9.global-to-local, align 4
  %v0_10007c4c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007c4c = add i32 %v0_10007c4c, -1
  store i32 %v1_10007c4c, i32* %ctr.global-to-local, align 4
  %v2_10007c4c = icmp eq i32 %v1_10007c4c, 0
  br i1 %v2_10007c4c, label %dec_label_pc_10007c50, label %dec_label_pc_10007c28.dec_label_pc_10007c28_crit_edge

dec_label_pc_10007c28.dec_label_pc_10007c28_crit_edge: ; preds = %dec_label_pc_10007c28
  %v1_10007c38.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10007c3c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007c28

dec_label_pc_10007c50:                            ; preds = %dec_label_pc_10007c28
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r4.global-to-local, align 4
  store i64 256, i64* %stack_var_-1900, align 8
  store i32 268467304, i32* @lr, align 4
  %v3_10007c64 = call i32 @function_1000b568(i32 2, i32 3, i32 6)
  store i32 %v3_10007c64, i32* %r3.global-to-local, align 4
  %v1_10007c68 = icmp slt i32 %v3_10007c64, -1
  %v3_10007c68 = icmp eq i32 %v3_10007c64, -1
  store i1 %v1_10007c68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10007c64, i32* @r29, align 4
  store i32 %v3_10007c64, i32* @global_var_1001e1b0.175, align 4
  br i1 %v3_10007c68, label %dec_label_pc_1000896c, label %dec_label_pc_10007c7c

dec_label_pc_10007c7c:                            ; preds = %dec_label_pc_10007c50
  store i32 3, i32* @r4, align 4
  store i32 268467340, i32* @lr, align 4
  %v1_10007c88 = call i32 @function_1000a66c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10007c94 = load i32, i32* @r29, align 4
  store i32 %v0_10007c94, i32* %r3.global-to-local, align 4
  store i32 268467360, i32* @lr, align 4
  %v2_10007c9c = call i32 @function_1000a66c(i32 %v0_10007c94)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007ca4 = load i32, i32* @global_var_1001e1b0.175, align 4
  store i32 %v3_10007ca4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10007cb4 = ptrtoint i64* %stack_var_-1900 to i32
  store i32 %v2_10007cb4, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1900, align 8
  store i32 268467396, i32* @lr, align 4
  %v5_10007cc0 = call i32 @function_1000b52c(i32 %v3_10007ca4, i32 0, i32 3, i32 %v2_10007cb4, i32 4)
  store i32 %v5_10007cc0, i32* %r3.global-to-local, align 4
  %v1_10007cc4 = icmp slt i32 %v5_10007cc0, 0
  %v3_10007cc4 = icmp eq i32 %v5_10007cc0, 0
  store i1 %v1_10007cc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cc4, label %dec_label_pc_10007ccc, label %dec_label_pc_100095ac

dec_label_pc_10007ccc:                            ; preds = %dec_label_pc_10007c7c, %dec_label_pc_10007ccc
  %v0_10007ccc = call i32 @function_10006fa8()
  store i32 %v0_10007ccc, i32* %r3.global-to-local, align 4
  %v1_10007cd0 = urem i32 %v0_10007ccc, 65536
  store i32 %v1_10007cd0, i32* @r18, align 4
  %v1_10007cd4 = icmp ult i32 %v1_10007cd0, 1023
  %v3_10007cd4 = icmp eq i32 %v1_10007cd0, 1023
  store i1 %v1_10007cd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cd4, i1* %cr7_eq.global-to-local, align 1
  %tmp101 = icmp ult i32 %v1_10007cd0, 1024
  br i1 %tmp101, label %dec_label_pc_10007ccc, label %dec_label_pc_10007cdc

dec_label_pc_10007cdc:                            ; preds = %dec_label_pc_10007ccc
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10007ce4 = load i32, i32* @global_var_1001e23c.176, align 4
  store i32 %v3_10007ce4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001e23c.176 to i32), i32* @r30, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10007cf4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007cf4, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10007cfc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10007cfc, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10007cfc, i32* @global_var_1001e23c.176, align 4
  store i32 ptrtoint (i32* @global_var_1000d368.178 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001e23e.179 to i16*), align 4
  %v0_10007d10 = call i32 @function_10006fa8()
  %v1_10007d10 = trunc i32 %v0_10007d10 to i16
  store i32 %v0_10007d10, i32* %r3.global-to-local, align 4
  %v3_10007d14 = load i32, i32* @global_var_1001e25c.180, align 4
  store i32 %v3_10007d14, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001e244.181 to i8*), align 4
  %v1_10007d24 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10007d24, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10007d2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10007d2c = trunc i32 %v0_10007d2c to i8
  store i8 %v1_10007d2c, i8* bitcast (i32* @global_var_1001e245.182 to i8*), align 4
  store i16 %v1_10007d10, i16* bitcast (i32* @global_var_1001e240.183 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d360.184 to i32), i32* @r29, align 4
  store i32 %v1_10007d24, i32* @global_var_1001e25c.180, align 4
  store i16 23, i16* @global_var_1001e252.185, align 2
  store i32 ptrtoint (i32* @global_var_1000d374.186 to i32), i32* @r26, align 4
  %v0_10007d4c = load i32, i32* @r18, align 4
  %v1_10007d4c = trunc i32 %v0_10007d4c to i16
  store i16 %v1_10007d4c, i16* bitcast (i32* @global_var_1001e250.177 to i16*), align 4
  store i32 268500992, i32* %r25.global-to-local, align 4
  %v0_10007d54 = call i32 @function_10006fa8()
  %v1_10007d54 = trunc i32 %v0_10007d54 to i16
  %v0_10007d58 = load i32, i32* @r28, align 4
  store i32 %v0_10007d58, i32* %r4.global-to-local, align 4
  store i16 %v1_10007d54, i16* bitcast (i32* @global_var_1001e25e.187 to i16*), align 4
  %v0_10007d64 = load i32, i32* @r29, align 4
  store i32 %v0_10007d64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d380.188 to i32), i32* @r25, align 4
  %v3_10007d6c = load i32, i32* @global_var_1001e25c.180, align 4
  store i32 ptrtoint (i32* @global_var_1000d388.189 to i32), i32* @r24, align 4
  %v1_10007d7c = or i32 %v3_10007d6c, 131072
  store i32 %v1_10007d7c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d390.190 to i32), i32* @r23, align 4
  store i32 %v1_10007d7c, i32* @global_var_1001e25c.180, align 4
  store i32 ptrtoint (i32* @global_var_1000d3ac.191 to i32), i32* @r22, align 4
  store i32 268500992, i32* %r21.global-to-local, align 4
  store i32 268467608, i32* @lr, align 4
  %v4_10007d94 = call i32 @function_10007958(i32 %v0_10007d64, i32 %v0_10007d58, i32 2)
  %v0_10007d98 = load i32, i32* @r29, align 4
  store i32 %v0_10007d98, i32* %r3.global-to-local, align 4
  store i32 %v0_10007d98, i32* %r4.global-to-local, align 4
  store i32 268467624, i32* @lr, align 4
  %v5_10007da4 = call i32 @function_10007958(i32 %v0_10007d98, i32 %v0_10007d98, i32 10)
  %v0_10007dac = load i32, i32* @r29, align 4
  store i32 %v0_10007dac, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d36c.192 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000d3d8.193 to i32), i32* %r21.global-to-local, align 4
  store i32 268467648, i32* @lr, align 4
  %v4_10007dbc = call i32 @function_10007958(i32 %v0_10007dac, i32 ptrtoint (i32* @global_var_1000d36c.192 to i32), i32 5)
  %v0_10007dc4 = load i32, i32* @r29, align 4
  store i32 %v0_10007dc4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3e4.194 to i32), i32* %r4.global-to-local, align 4
  store i32 268467672, i32* @lr, align 4
  %v4_10007dd4 = call i32 @function_10007958(i32 %v0_10007dc4, i32 ptrtoint (i32* @global_var_1000d3e4.194 to i32), i32 8)
  %v0_10007dd8 = load i32, i32* @r29, align 4
  store i32 %v0_10007dd8, i32* %r3.global-to-local, align 4
  %v0_10007ddc = load i32, i32* @r26, align 4
  store i32 %v0_10007ddc, i32* %r4.global-to-local, align 4
  store i32 268467688, i32* @lr, align 4
  %v4_10007de4 = call i32 @function_10007958(i32 %v0_10007dd8, i32 %v0_10007ddc, i32 1)
  %v0_10007dec = load i32, i32* @r29, align 4
  store i32 %v0_10007dec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d37c.195 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d420.196 to i32), i32* @r27, align 4
  store i32 268467712, i32* @lr, align 4
  %v4_10007dfc = call i32 @function_10007958(i32 %v0_10007dec, i32 ptrtoint (i32* @global_var_1000d37c.195 to i32), i32 3)
  %v0_10007e00 = load i32, i32* @r29, align 4
  store i32 %v0_10007e00, i32* %r3.global-to-local, align 4
  %v0_10007e04 = load i32, i32* @r28, align 4
  store i32 %v0_10007e04, i32* %r4.global-to-local, align 4
  store i32 268467728, i32* @lr, align 4
  %v4_10007e0c = call i32 @function_10007958(i32 %v0_10007e00, i32 %v0_10007e04, i32 7)
  %v0_10007e10 = load i32, i32* @r29, align 4
  store i32 %v0_10007e10, i32* %r3.global-to-local, align 4
  %v0_10007e14 = load i32, i32* @r25, align 4
  store i32 %v0_10007e14, i32* %r4.global-to-local, align 4
  store i32 268467744, i32* @lr, align 4
  %v4_10007e1c = call i32 @function_10007958(i32 %v0_10007e10, i32 %v0_10007e14, i32 5)
  %v0_10007e20 = load i32, i32* @r29, align 4
  store i32 %v0_10007e20, i32* %r3.global-to-local, align 4
  %v0_10007e24 = load i32, i32* @r24, align 4
  store i32 %v0_10007e24, i32* %r4.global-to-local, align 4
  store i32 268467760, i32* @lr, align 4
  %v4_10007e2c = call i32 @function_10007958(i32 %v0_10007e20, i32 %v0_10007e24, i32 15)
  %v0_10007e30 = load i32, i32* @r29, align 4
  store i32 %v0_10007e30, i32* %r3.global-to-local, align 4
  %v0_10007e34 = load i32, i32* @r23, align 4
  store i32 %v0_10007e34, i32* %r4.global-to-local, align 4
  store i32 268467776, i32* @lr, align 4
  %v4_10007e3c = call i32 @function_10007958(i32 %v0_10007e30, i32 %v0_10007e34, i32 12)
  %v0_10007e44 = load i32, i32* @r29, align 4
  store i32 %v0_10007e44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000d398.197 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* @r28, align 4
  store i32 268467800, i32* @lr, align 4
  %v5_10007e54 = call i32 @function_10007958(i32 %v0_10007e44, i32 ptrtoint ([7 x i8]* @global_var_1000d398.197 to i32), i32 5)
  %v0_10007e5c = load i32, i32* @r29, align 4
  store i32 %v0_10007e5c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3a0.198 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000d418.199 to i32), i32* @r28, align 4
  store i32 268467824, i32* @lr, align 4
  %v4_10007e6c = call i32 @function_10007958(i32 %v0_10007e5c, i32 ptrtoint (i32* @global_var_1000d3a0.198 to i32), i32 5)
  %v0_10007e70 = load i32, i32* @r29, align 4
  store i32 %v0_10007e70, i32* %r3.global-to-local, align 4
  %v0_10007e74 = load i32, i32* @r22, align 4
  store i32 %v0_10007e74, i32* %r4.global-to-local, align 4
  store i32 268467840, i32* @lr, align 4
  %v4_10007e7c = call i32 @function_10007958(i32 %v0_10007e70, i32 %v0_10007e74, i32 7)
  %v0_10007e84 = load i32, i32* @r29, align 4
  store i32 %v0_10007e84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3b8.200 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r20.global-to-local, align 4
  store i32 268467864, i32* @lr, align 4
  %v4_10007e94 = call i32 @function_10007958(i32 %v0_10007e84, i32 ptrtoint (i32* @global_var_1000d3b8.200 to i32), i32 1)
  %v0_10007e9c = load i32, i32* @r29, align 4
  store i32 %v0_10007e9c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3c0.201 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000d440.202 to i32), i32* %r20.global-to-local, align 4
  store i32 268467888, i32* @lr, align 4
  %v4_10007eac = call i32 @function_10007958(i32 %v0_10007e9c, i32 ptrtoint (i32* @global_var_1000d3c0.201 to i32), i32 1)
  %v0_10007eb4 = load i32, i32* @r29, align 4
  store i32 %v0_10007eb4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3cc.203 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  store i32 268467912, i32* @lr, align 4
  %v4_10007ec4 = call i32 @function_10007958(i32 %v0_10007eb4, i32 ptrtoint (i32* @global_var_1000d3cc.203 to i32), i32 7)
  %v0_10007ec8 = load i32, i32* @r29, align 4
  store i32 %v0_10007ec8, i32* %r3.global-to-local, align 4
  %v0_10007ecc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10007ecc, i32* %r4.global-to-local, align 4
  store i32 268467928, i32* @lr, align 4
  %v5_10007ed4 = call i32 @function_10007958(i32 %v0_10007ec8, i32 %v0_10007ecc, i32 1)
  %v0_10007edc = load i32, i32* @r29, align 4
  store i32 %v0_10007edc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3e0.204 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d464.205 to i32), i32* %r19.global-to-local, align 4
  store i32 268467952, i32* @lr, align 4
  %v4_10007eec = call i32 @function_10007958(i32 %v0_10007edc, i32 ptrtoint (i32* @global_var_1000d3e0.204 to i32), i32 4)
  %v0_10007ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10007ef4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000d3e8.206 to i32), i32* %r4.global-to-local, align 4
  %v2_10007f00 = ptrtoint i32* %stack_var_-1728 to i32
  store i32 %v2_10007f00, i32* @r14, align 4
  store i32 268467976, i32* @lr, align 4
  %v5_10007f04 = call i32 @function_10007958(i32 %v0_10007ef4, i32 ptrtoint ([7 x i8]* @global_var_1000d3e8.206 to i32), i32 5)
  %v0_10007f0c = load i32, i32* @r29, align 4
  store i32 %v0_10007f0c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000d3f0.207 to i32), i32* %r4.global-to-local, align 4
  store i32 268467996, i32* @lr, align 4
  %v5_10007f18 = call i32 @function_10007958(i32 %v0_10007f0c, i32 ptrtoint ([6 x i8]* @global_var_1000d3f0.207 to i32), i32 2)
  %v0_10007f20 = load i32, i32* @r29, align 4
  store i32 %v0_10007f20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d3f8.208 to i32), i32* %r4.global-to-local, align 4
  store i32 268468016, i32* @lr, align 4
  %v5_10007f2c = call i32 @function_10007958(i32 %v0_10007f20, i32 ptrtoint ([5 x i8]* @global_var_1000d3f8.208 to i32), i32 7)
  %v0_10007f34 = load i32, i32* @r29, align 4
  store i32 %v0_10007f34, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000d400.209 to i32), i32* %r4.global-to-local, align 4
  store i32 268468036, i32* @lr, align 4
  %v5_10007f40 = call i32 @function_10007958(i32 %v0_10007f34, i32 ptrtoint ([8 x i8]* @global_var_1000d400.209 to i32), i32 5)
  %v0_10007f48 = load i32, i32* @r29, align 4
  store i32 %v0_10007f48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d408.210 to i32), i32* %r4.global-to-local, align 4
  store i32 268468056, i32* @lr, align 4
  %v4_10007f54 = call i32 @function_10007958(i32 %v0_10007f48, i32 ptrtoint (i32* @global_var_1000d408.210 to i32), i32 15)
  %v0_10007f5c = load i32, i32* @r29, align 4
  store i32 %v0_10007f5c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000d410.211 to i32), i32* %r4.global-to-local, align 4
  store i32 268468076, i32* @lr, align 4
  %v5_10007f68 = call i32 @function_10007958(i32 %v0_10007f5c, i32 ptrtoint ([6 x i8]* @global_var_1000d410.211 to i32), i32 6)
  %v0_10007f6c = load i32, i32* @r29, align 4
  store i32 %v0_10007f6c, i32* %r3.global-to-local, align 4
  %v0_10007f70 = load i32, i32* @r28, align 4
  store i32 %v0_10007f70, i32* %r4.global-to-local, align 4
  store i32 268468092, i32* @lr, align 4
  %v5_10007f78 = call i32 @function_10007958(i32 %v0_10007f6c, i32 %v0_10007f70, i32 5)
  %v0_10007f7c = load i32, i32* @r29, align 4
  store i32 %v0_10007f7c, i32* %r3.global-to-local, align 4
  %v0_10007f80 = load i32, i32* @r27, align 4
  store i32 %v0_10007f80, i32* %r4.global-to-local, align 4
  store i32 268468108, i32* @lr, align 4
  %v5_10007f88 = call i32 @function_10007958(i32 %v0_10007f7c, i32 %v0_10007f80, i32 3)
  %v0_10007f90 = load i32, i32* @r29, align 4
  store i32 %v0_10007f90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000d428.212 to i32), i32* %r4.global-to-local, align 4
  store i32 268468128, i32* @lr, align 4
  %v5_10007f9c = call i32 @function_10007958(i32 %v0_10007f90, i32 ptrtoint ([8 x i8]* @global_var_1000d428.212 to i32), i32 4)
  %v0_10007fa4 = load i32, i32* @r29, align 4
  store i32 %v0_10007fa4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d430.213 to i32), i32* %r4.global-to-local, align 4
  store i32 268468148, i32* @lr, align 4
  %v4_10007fb0 = call i32 @function_10007958(i32 %v0_10007fa4, i32 ptrtoint (i32* @global_var_1000d430.213 to i32), i32 3)
  %v0_10007fb8 = load i32, i32* @r29, align 4
  store i32 %v0_10007fb8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d438.214 to i32), i32* %r4.global-to-local, align 4
  store i32 268468168, i32* @lr, align 4
  %v4_10007fc4 = call i32 @function_10007958(i32 %v0_10007fb8, i32 ptrtoint (i32* @global_var_1000d438.214 to i32), i32 2)
  %v0_10007fc8 = load i32, i32* @r29, align 4
  store i32 %v0_10007fc8, i32* %r3.global-to-local, align 4
  %v0_10007fcc = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10007fcc, i32* %r4.global-to-local, align 4
  store i32 268468184, i32* @lr, align 4
  %v5_10007fd4 = call i32 @function_10007958(i32 %v0_10007fc8, i32 %v0_10007fcc, i32 1)
  %v0_10007fdc = load i32, i32* @r29, align 4
  store i32 %v0_10007fdc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d44c.215 to i32), i32* %r4.global-to-local, align 4
  store i32 268468204, i32* @lr, align 4
  %v4_10007fe8 = call i32 @function_10007958(i32 %v0_10007fdc, i32 ptrtoint (i32* @global_var_1000d44c.215 to i32), i32 2)
  %v0_10007ff0 = load i32, i32* @r29, align 4
  store i32 %v0_10007ff0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d458.216 to i32), i32* %r4.global-to-local, align 4
  store i32 268468224, i32* @lr, align 4
  %v4_10007ffc = call i32 @function_10007958(i32 %v0_10007ff0, i32 ptrtoint (i32* @global_var_1000d458.216 to i32), i32 2)
  %v0_10008000 = load i32, i32* @r29, align 4
  store i32 %v0_10008000, i32* %r3.global-to-local, align 4
  %v0_10008004 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10008004, i32* %r4.global-to-local, align 4
  store i32 268468240, i32* @lr, align 4
  %v4_1000800c = call i32 @function_10007958(i32 %v0_10008000, i32 %v0_10008004, i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_1000d474.217 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d480.218 to i32), i32* %r4.global-to-local, align 4
  store i32 268468264, i32* @lr, align 4
  %v4_10008024 = call i32 @function_10007958(i32 ptrtoint ([11 x i8]* @global_var_1000d474.217 to i32), i32 ptrtoint (i32* @global_var_1000d480.218 to i32), i32 2)
  %v0_10008028 = load i32, i32* @r27, align 4
  store i32 %v0_10008028, i32* %r4.global-to-local, align 4
  %v0_1000802c = load i32, i32* @r28, align 4
  store i32 %v0_1000802c, i32* %r3.global-to-local, align 4
  store i32 268468280, i32* @lr, align 4
  %v5_10008034 = call i32 @function_10007958(i32 %v0_1000802c, i32 %v0_10008028, i32 5)
  %v0_10008038 = load i32, i32* @r28, align 4
  store i32 %v0_10008038, i32* %r3.global-to-local, align 4
  %v0_1000803c = load i32, i32* @r26, align 4
  store i32 %v0_1000803c, i32* %r4.global-to-local, align 4
  store i32 268468296, i32* @lr, align 4
  %v4_10008044 = call i32 @function_10007958(i32 %v0_10008038, i32 %v0_1000803c, i32 3)
  %v0_10008048 = load i32, i32* @r28, align 4
  store i32 %v0_10008048, i32* %r3.global-to-local, align 4
  %v0_1000804c = load i32, i32* @r25, align 4
  store i32 %v0_1000804c, i32* %r4.global-to-local, align 4
  store i32 268468312, i32* @lr, align 4
  %v4_10008054 = call i32 @function_10007958(i32 %v0_10008048, i32 %v0_1000804c, i32 3)
  %v0_10008058 = load i32, i32* @r28, align 4
  store i32 %v0_10008058, i32* %r3.global-to-local, align 4
  %v0_1000805c = load i32, i32* @r24, align 4
  store i32 %v0_1000805c, i32* %r4.global-to-local, align 4
  store i32 268468328, i32* @lr, align 4
  %v4_10008064 = call i32 @function_10007958(i32 %v0_10008058, i32 %v0_1000805c, i32 3)
  %v0_10008068 = load i32, i32* @r28, align 4
  store i32 %v0_10008068, i32* %r3.global-to-local, align 4
  %v0_1000806c = load i32, i32* @r23, align 4
  store i32 %v0_1000806c, i32* %r4.global-to-local, align 4
  store i32 268468344, i32* @lr, align 4
  %v4_10008074 = call i32 @function_10007958(i32 %v0_10008068, i32 %v0_1000806c, i32 3)
  %v0_10008078 = load i32, i32* @r28, align 4
  store i32 %v0_10008078, i32* %r3.global-to-local, align 4
  %v0_1000807c = load i32, i32* @r22, align 4
  store i32 %v0_1000807c, i32* %r4.global-to-local, align 4
  store i32 268468360, i32* @lr, align 4
  %v4_10008084 = call i32 @function_10007958(i32 %v0_10008078, i32 %v0_1000807c, i32 4)
  store i32 ptrtoint (i32* @global_var_1000d48c.219 to i32), i32* %r4.global-to-local, align 4
  %v0_10008094 = load i32, i32* @r28, align 4
  store i32 %v0_10008094, i32* %r3.global-to-local, align 4
  store i32 268468384, i32* @lr, align 4
  %v4_1000809c = call i32 @function_10007958(i32 %v0_10008094, i32 ptrtoint (i32* @global_var_1000d48c.219 to i32), i32 7)
  %v0_100080a0 = load i32, i32* @r28, align 4
  store i32 %v0_100080a0, i32* %r3.global-to-local, align 4
  %v0_100080a4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100080a4, i32* %r4.global-to-local, align 4
  store i32 268468400, i32* @lr, align 4
  %v5_100080ac = call i32 @function_10007958(i32 %v0_100080a0, i32 %v0_100080a4, i32 1)
  store i32 ptrtoint (i32* @global_var_1000d494.220 to i32), i32* %r4.global-to-local, align 4
  %v0_100080b8 = load i32, i32* @r28, align 4
  store i32 %v0_100080b8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d208.221 to i32), i32* @r27, align 4
  store i32 268468424, i32* @lr, align 4
  %v4_100080c4 = call i32 @function_10007958(i32 %v0_100080b8, i32 ptrtoint (i32* @global_var_1000d494.220 to i32), i32 5)
  store i32 ptrtoint ([14 x i8]* @global_var_1000d49c.222 to i32), i32* %r3.global-to-local, align 4
  %v0_100080d0 = load i32, i32* @r27, align 4
  store i32 %v0_100080d0, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268468448, i32* @lr, align 4
  %v4_100080dc = call i32 @function_10007958(i32 ptrtoint ([14 x i8]* @global_var_1000d49c.222 to i32), i32 %v0_100080d0, i32 5)
  store i32 ptrtoint ([14 x i8]* @global_var_1000d2ac.223 to i32), i32* %r3.global-to-local, align 4
  %v0_100080e8 = load i32, i32* @r25, align 4
  store i32 %v0_100080e8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000d310.224 to i32), i32* @r29, align 4
  store i32 268468472, i32* @lr, align 4
  %v4_100080f4 = call i32 @function_10007958(i32 ptrtoint ([14 x i8]* @global_var_1000d2ac.223 to i32), i32 %v0_100080e8, i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1000d2bc.225 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000d2bc.225 to i32), i32* %r4.global-to-local, align 4
  store i32 268468492, i32* @lr, align 4
  %v4_10008108 = call i32 @function_10007958(i32 ptrtoint ([6 x i8]* @global_var_1000d2bc.225 to i32), i32 3, i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_1000d2c4.226 to i32), i32* %r3.global-to-local, align 4
  %v0_10008118 = load i32, i32* @r27, align 4
  store i32 %v0_10008118, i32* %r4.global-to-local, align 4
  store i32 268468512, i32* @lr, align 4
  %v4_1000811c = call i32 @function_10007958(i32 ptrtoint ([4 x i8]* @global_var_1000d2c4.226 to i32), i32 %v0_10008118, i32 5)
  %v0_10008120 = load i32, i32* @r28, align 4
  store i32 %v0_10008120, i32* %r3.global-to-local, align 4
  store i32 %v0_10008120, i32* %r4.global-to-local, align 4
  store i32 268468528, i32* @lr, align 4
  %v5_1000812c = call i32 @function_10007958(i32 %v0_10008120, i32 %v0_10008120, i32 15)
  %v0_10008130 = load i32, i32* @r28, align 4
  store i32 %v0_10008130, i32* %r3.global-to-local, align 4
  %v0_10008134 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10008134, i32* %r4.global-to-local, align 4
  store i32 268468544, i32* @lr, align 4
  %v4_1000813c = call i32 @function_10007958(i32 %v0_10008130, i32 %v0_10008134, i32 7)
  store i32 ptrtoint ([9 x i8]* @global_var_1000d2c8.227 to i32), i32* %r4.global-to-local, align 4
  %v0_10008148 = load i32, i32* @r28, align 4
  store i32 %v0_10008148, i32* %r3.global-to-local, align 4
  store i32 268468564, i32* @lr, align 4
  %v5_10008150 = call i32 @function_10007958(i32 %v0_10008148, i32 ptrtoint ([9 x i8]* @global_var_1000d2c8.227 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_1000d2d4.228 to i32), i32* %r4.global-to-local, align 4
  %v0_1000815c = load i32, i32* @r28, align 4
  store i32 %v0_1000815c, i32* %r3.global-to-local, align 4
  store i32 268468584, i32* @lr, align 4
  %v4_10008164 = call i32 @function_10007958(i32 %v0_1000815c, i32 ptrtoint (i32* @global_var_1000d2d4.228 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000d2e0.229 to i32), i32* %r4.global-to-local, align 4
  %v0_10008170 = load i32, i32* @r28, align 4
  store i32 %v0_10008170, i32* %r3.global-to-local, align 4
  store i32 268468604, i32* @lr, align 4
  %v4_10008178 = call i32 @function_10007958(i32 %v0_10008170, i32 ptrtoint (i32* @global_var_1000d2e0.229 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000d2ec.230 to i32), i32* %r4.global-to-local, align 4
  %v0_10008184 = load i32, i32* @r28, align 4
  store i32 %v0_10008184, i32* %r3.global-to-local, align 4
  store i32 268468624, i32* @lr, align 4
  %v4_1000818c = call i32 @function_10007958(i32 %v0_10008184, i32 ptrtoint (i32* @global_var_1000d2ec.230 to i32), i32 7)
  %v0_10008194 = load i32, i32* @r28, align 4
  store i32 %v0_10008194, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d2f4.231 to i32), i32* %r4.global-to-local, align 4
  store i32 268468644, i32* @lr, align 4
  %v4_100081a0 = call i32 @function_10007958(i32 %v0_10008194, i32 ptrtoint (i32* @global_var_1000d2f4.231 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000d300.232 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000d308.233 to i32), i32* %r4.global-to-local, align 4
  store i32 268468668, i32* @lr, align 4
  %v4_100081b8 = call i32 @function_10007958(i32 ptrtoint (i32* @global_var_1000d300.232 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000d308.233 to i32), i32 15)
  %v0_100081bc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100081bc, i32* %r3.global-to-local, align 4
  %v0_100081c0 = load i32, i32* @r27, align 4
  store i32 %v0_100081c0, i32* %r4.global-to-local, align 4
  store i32 268468684, i32* @lr, align 4
  %v4_100081c8 = call i32 @function_10007958(i32 %v0_100081bc, i32 %v0_100081c0, i32 5)
  %v0_100081cc = load i32, i32* @r29, align 4
  store i32 %v0_100081cc, i32* %r3.global-to-local, align 4
  store i32 %v0_100081cc, i32* %r4.global-to-local, align 4
  store i32 268468700, i32* @lr, align 4
  %v5_100081d8 = call i32 @function_10007958(i32 %v0_100081cc, i32 %v0_100081cc, i32 10)
  %v0_100081dc = load i32, i32* @r29, align 4
  store i32 %v0_100081dc, i32* %r3.global-to-local, align 4
  %v0_100081e0 = load i32, i32* @r25, align 4
  store i32 %v0_100081e0, i32* %r4.global-to-local, align 4
  store i32 268468716, i32* @lr, align 4
  %v4_100081e8 = call i32 @function_10007958(i32 %v0_100081dc, i32 %v0_100081e0, i32 7)
  %v0_100081ec = load i32, i32* @r29, align 4
  store i32 %v0_100081ec, i32* %r3.global-to-local, align 4
  %v0_100081f4 = load i32, i32* @r23, align 4
  store i32 %v0_100081f4, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d318.234 to i32), i32* @r29, align 4
  store i32 268468740, i32* @lr, align 4
  %v4_10008200 = call i32 @function_10007958(i32 %v0_100081ec, i32 %v0_100081f4, i32 7)
  %v0_10008204 = load i32, i32* @r29, align 4
  store i32 %v0_10008204, i32* %r3.global-to-local, align 4
  store i32 %v0_10008204, i32* %r4.global-to-local, align 4
  store i32 268468756, i32* @lr, align 4
  %v5_10008210 = call i32 @function_10007958(i32 %v0_10008204, i32 %v0_10008204, i32 15)
  %v0_10008214 = load i32, i32* @r29, align 4
  store i32 %v0_10008214, i32* %r3.global-to-local, align 4
  %v0_1000821c = load i32, i32* @r23, align 4
  store i32 %v0_1000821c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000d320.235 to i32), i32* @r29, align 4
  store i32 268468780, i32* @lr, align 4
  %v4_10008228 = call i32 @function_10007958(i32 %v0_10008214, i32 %v0_1000821c, i32 3)
  %v0_1000822c = load i32, i32* @r26, align 4
  store i32 %v0_1000822c, i32* %r4.global-to-local, align 4
  %v0_10008234 = load i32, i32* @r29, align 4
  store i32 %v0_10008234, i32* %r3.global-to-local, align 4
  store i32 268468796, i32* @lr, align 4
  %v4_10008238 = call i32 @function_10007958(i32 %v0_10008234, i32 %v0_1000822c, i32 10)
  %v0_1000823c = load i32, i32* @r29, align 4
  store i32 %v0_1000823c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000823c, i32* %r4.global-to-local, align 4
  store i32 268468812, i32* @lr, align 4
  %v5_10008248 = call i32 @function_10007958(i32 %v0_1000823c, i32 %v0_1000823c, i32 3)
  %v0_1000824c = load i32, i32* @r29, align 4
  store i32 %v0_1000824c, i32* %r3.global-to-local, align 4
  %v0_10008250 = load i32, i32* @r24, align 4
  store i32 %v0_10008250, i32* %r4.global-to-local, align 4
  store i32 268468828, i32* @lr, align 4
  %v4_10008258 = call i32 @function_10007958(i32 %v0_1000824c, i32 %v0_10008250, i32 10)
  %v0_1000825c = load i32, i32* @r29, align 4
  store i32 %v0_1000825c, i32* %r3.global-to-local, align 4
  %v0_10008260 = load i32, i32* @r23, align 4
  store i32 %v0_10008260, i32* %r4.global-to-local, align 4
  store i32 268468844, i32* @lr, align 4
  %v4_10008268 = call i32 @function_10007958(i32 %v0_1000825c, i32 %v0_10008260, i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1000d328.236 to i32), i32* %r3.global-to-local, align 4
  %v0_10008278 = load i32, i32* @r27, align 4
  store i32 %v0_10008278, i32* %r4.global-to-local, align 4
  store i32 268468864, i32* @lr, align 4
  %v4_1000827c = call i32 @function_10007958(i32 ptrtoint ([7 x i8]* @global_var_1000d328.236 to i32), i32 %v0_10008278, i32 7)
  %v0_10008280 = load i32, i32* @r25, align 4
  store i32 %v0_10008280, i32* %r3.global-to-local, align 4
  store i32 %v0_10008280, i32* %r4.global-to-local, align 4
  store i32 268468880, i32* @lr, align 4
  %v3_1000828c = call i32 @function_10007958(i32 %v0_10008280, i32 %v0_10008280, i32 2)
  store i32 ptrtoint ([4 x i8]* @global_var_1000d330.237 to i32), i32* %r3.global-to-local, align 4
  %v0_10008298 = load i32, i32* @r27, align 4
  store i32 %v0_10008298, i32* %r4.global-to-local, align 4
  store i32 268468900, i32* @lr, align 4
  %v4_100082a0 = call i32 @function_10007958(i32 ptrtoint ([4 x i8]* @global_var_1000d330.237 to i32), i32 %v0_10008298, i32 10)
  store i32 ptrtoint ([7 x i8]* @global_var_1000d334.238 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000d334.238 to i32), i32* %r4.global-to-local, align 4
  store i32 268468920, i32* @lr, align 4
  %v4_100082b4 = call i32 @function_10007958(i32 ptrtoint ([7 x i8]* @global_var_1000d334.238 to i32), i32 5, i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1000d33c.239 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000d33c.239 to i32), i32* %r4.global-to-local, align 4
  store i32 268468940, i32* @lr, align 4
  %v4_100082c8 = call i32 @function_10007958(i32 ptrtoint ([9 x i8]* @global_var_1000d33c.239 to i32), i32 1, i32 1)
  store i32 %v4_100082c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100082cc

dec_label_pc_100082cc:                            ; preds = %dec_label_pc_100087ac, %dec_label_pc_10007cdc
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100082d0 = load i32, i32* @global_var_1001e1a8.168, align 4
  store i32 %v3_100082d0, i32* @r29, align 4
  %v0_100082d4 = load i32, i32* %r21.global-to-local, align 4
  %v2_100082d4 = icmp slt i32 %v0_100082d4, %v3_100082d0
  %v4_100082d4 = icmp eq i32 %v0_100082d4, %v3_100082d0
  store i1 %v2_100082d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100082d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100082d4, label %dec_label_pc_100084c8, label %dec_label_pc_100082dc

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_100082cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100082e0 = ptrtoint i32* %stack_var_-1872 to i32
  store i32 %v2_100082e0, i32* @r26, align 4
  store i64 0, i64* %stack_var_-1900, align 8
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_100082f0

dec_label_pc_100082f0:                            ; preds = %dec_label_pc_100083f4.dec_label_pc_100082f0_crit_edge, %dec_label_pc_100082dc
  %v0_100082f0 = phi i32 [ %v0_100082f0.pre, %dec_label_pc_100083f4.dec_label_pc_100082f0_crit_edge ], [ 0, %dec_label_pc_100082dc ]
  store i32 %v0_100082f0, i32* %stack_var_-1872, align 4
  %v0_10008300 = call i32 @function_10006fa8()
  %v1_10008300 = trunc i32 %v0_10008300 to i16
  store i32 %v0_10008300, i32* %r3.global-to-local, align 4
  %v3_10008304 = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_10008304, i32* %r0.global-to-local, align 4
  store i16 %v1_10008300, i16* bitcast (i32* @global_var_1001e240.183 to i16*), align 4
  store i32 %v3_10008304, i32* @global_var_1001e248.240, align 4
  br label %dec_label_pc_10008310.preheader

dec_label_pc_10008310.preheader:                  ; preds = %dec_label_pc_100082f0, %dec_label_pc_10008974
  br label %dec_label_pc_10008310

dec_label_pc_10008310:                            ; preds = %dec_label_pc_100089bc, %dec_label_pc_100089a8, %dec_label_pc_1000899c, %dec_label_pc_10008988, %dec_label_pc_100083ec, %dec_label_pc_100083e4, %dec_label_pc_100083dc, %dec_label_pc_100083d4, %dec_label_pc_100083cc, %dec_label_pc_100083c4, %dec_label_pc_100083bc, %dec_label_pc_100083b4, %dec_label_pc_100083ac, %dec_label_pc_100083a4, %dec_label_pc_1000839c, %dec_label_pc_1000838c, %dec_label_pc_10008384, %dec_label_pc_10008354, %dec_label_pc_1000834c, %dec_label_pc_1000833c, %dec_label_pc_10008334, %dec_label_pc_1000832c, %dec_label_pc_10008310, %dec_label_pc_10008310.preheader
  %v0_10008310 = call i32 @function_10006fa8()
  store i32 %v0_10008310, i32* %r3.global-to-local, align 4
  %v1_10008314 = urem i32 %v0_10008310, 256
  store i32 %v1_10008314, i32* %r11.global-to-local, align 4
  %v1_10008318 = udiv i32 %v0_10008310, 16777216
  store i32 %v1_10008318, i32* %r10.global-to-local, align 4
  %v1_1000831c = icmp ult i32 %v1_10008314, 127
  %v3_1000831c = icmp eq i32 %v1_10008314, 127
  store i1 %v1_1000831c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000831c, i1* %cr7_eq.global-to-local, align 1
  %v1_10008320 = call i32 @__asm_rlwinm(i32 %v0_10008310, i32 24, i32 24, i32 31)
  store i32 %v1_10008320, i32* @r9, align 4
  %v1_10008324 = call i32 @__asm_rlwinm(i32 %v0_10008310, i32 16, i32 24, i32 31)
  store i32 %v1_10008324, i32* %r3.global-to-local, align 4
  %v0_10008328 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008328, label %dec_label_pc_10008310, label %dec_label_pc_1000832c

dec_label_pc_1000832c:                            ; preds = %dec_label_pc_10008310
  %v0_1000832c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000832c = icmp slt i32 %v0_1000832c, 0
  %v3_1000832c = icmp eq i32 %v0_1000832c, 0
  store i1 %v1_1000832c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000832c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000832c, label %dec_label_pc_10008310, label %dec_label_pc_10008334

dec_label_pc_10008334:                            ; preds = %dec_label_pc_1000832c
  %v1_10008334 = icmp slt i32 %v0_1000832c, 3
  %v3_10008334 = icmp eq i32 %v0_1000832c, 3
  store i1 %v1_10008334, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008334, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008334, label %dec_label_pc_10008310, label %dec_label_pc_1000833c

dec_label_pc_1000833c:                            ; preds = %dec_label_pc_10008334
  %v1_1000833c = add i32 %v0_1000832c, 241
  %v1_10008340 = urem i32 %v1_1000833c, 256
  store i32 %v1_10008340, i32* %r0.global-to-local, align 4
  %v1_10008344 = icmp eq i32 %v1_10008340, 0
  %v3_10008344 = icmp eq i32 %v1_10008340, 1
  store i1 %v1_10008344, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008344, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_10008340, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_10008310, label %dec_label_pc_1000834c

dec_label_pc_1000834c:                            ; preds = %dec_label_pc_1000833c
  %v1_1000834c = icmp slt i32 %v0_1000832c, 56
  %v3_1000834c = icmp eq i32 %v0_1000832c, 56
  store i1 %v1_1000834c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000834c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000834c, label %dec_label_pc_10008310, label %dec_label_pc_10008354

dec_label_pc_10008354:                            ; preds = %dec_label_pc_1000834c
  %v1_10008354 = icmp slt i32 %v0_1000832c, 10
  %v3_10008354 = icmp eq i32 %v0_1000832c, 10
  store i1 %v1_10008354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008354, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008354, label %dec_label_pc_10008310, label %dec_label_pc_1000835c

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_10008354
  %v1_1000835c = icmp slt i32 %v0_1000832c, 192
  %v3_1000835c = icmp eq i32 %v0_1000832c, 192
  store i1 %v1_1000835c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000835c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000835c, label %dec_label_pc_10008974, label %dec_label_pc_10008364

dec_label_pc_10008364:                            ; preds = %dec_label_pc_1000835c
  %v1_10008364 = icmp slt i32 %v0_1000832c, 172
  %v3_10008364 = icmp eq i32 %v0_1000832c, 172
  store i1 %v1_10008364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008364, label %dec_label_pc_10008980, label %dec_label_pc_1000836c

dec_label_pc_1000836c:                            ; preds = %dec_label_pc_10008364
  %v1_1000836c = icmp slt i32 %v0_1000832c, 100
  %v3_1000836c = icmp eq i32 %v0_1000832c, 100
  store i1 %v1_1000836c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000836c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000836c, label %dec_label_pc_10008994, label %dec_label_pc_10008374

dec_label_pc_10008374:                            ; preds = %dec_label_pc_1000836c
  %v1_10008374 = icmp slt i32 %v0_1000832c, 169
  %v3_10008374 = icmp eq i32 %v0_1000832c, 169
  store i1 %v1_10008374, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008374, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008374, label %dec_label_pc_100089a8, label %dec_label_pc_1000837c

dec_label_pc_1000837c:                            ; preds = %dec_label_pc_10008374
  %v1_1000837c = icmp slt i32 %v0_1000832c, 198
  %v3_1000837c = icmp eq i32 %v0_1000832c, 198
  store i1 %v1_1000837c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000837c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000837c, label %dec_label_pc_100089b4, label %dec_label_pc_10008384

dec_label_pc_10008384:                            ; preds = %dec_label_pc_1000837c
  %v1_10008384 = icmp ult i32 %v0_1000832c, 223
  %v2_10008384 = icmp ugt i32 %v0_1000832c, 223
  %v3_10008384 = icmp eq i32 %v0_1000832c, 223
  store i1 %v1_10008384, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008384, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10008384, label %dec_label_pc_10008310, label %dec_label_pc_1000838c

dec_label_pc_1000838c:                            ; preds = %dec_label_pc_10008384
  %v1_1000838c = add i32 %v0_1000832c, 250
  %v1_10008390 = urem i32 %v1_1000838c, 256
  store i32 %v1_10008390, i32* %r0.global-to-local, align 4
  %v1_10008394 = icmp eq i32 %v1_10008390, 0
  %v3_10008394 = icmp eq i32 %v1_10008390, 1
  store i1 %v1_10008394, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008394, i1* %cr7_eq.global-to-local, align 1
  %tmp104 = or i32 %v1_10008390, 1
  %tmp105 = icmp eq i32 %tmp104, 1
  br i1 %tmp105, label %dec_label_pc_10008310, label %dec_label_pc_1000839c

dec_label_pc_1000839c:                            ; preds = %dec_label_pc_1000838c
  %v1_1000839c = icmp slt i32 %v0_1000832c, 11
  %v3_1000839c = icmp eq i32 %v0_1000832c, 11
  store i1 %v1_1000839c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000839c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000839c, label %dec_label_pc_10008310, label %dec_label_pc_100083a4

dec_label_pc_100083a4:                            ; preds = %dec_label_pc_1000839c
  %v1_100083a4 = icmp slt i32 %v0_1000832c, 21
  %v3_100083a4 = icmp eq i32 %v0_1000832c, 21
  store i1 %v1_100083a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083a4, label %dec_label_pc_10008310, label %dec_label_pc_100083ac

dec_label_pc_100083ac:                            ; preds = %dec_label_pc_100083a4
  %v1_100083ac = icmp slt i32 %v0_1000832c, 22
  %v3_100083ac = icmp eq i32 %v0_1000832c, 22
  store i1 %v1_100083ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083ac, label %dec_label_pc_10008310, label %dec_label_pc_100083b4

dec_label_pc_100083b4:                            ; preds = %dec_label_pc_100083ac
  %v1_100083b4 = icmp slt i32 %v0_1000832c, 26
  %v3_100083b4 = icmp eq i32 %v0_1000832c, 26
  store i1 %v1_100083b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083b4, label %dec_label_pc_10008310, label %dec_label_pc_100083bc

dec_label_pc_100083bc:                            ; preds = %dec_label_pc_100083b4
  %v1_100083bc = icmp slt i32 %v0_1000832c, 28
  %v3_100083bc = icmp eq i32 %v0_1000832c, 28
  store i1 %v1_100083bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083bc, label %dec_label_pc_10008310, label %dec_label_pc_100083c4

dec_label_pc_100083c4:                            ; preds = %dec_label_pc_100083bc
  %v1_100083c4 = icmp slt i32 %v0_1000832c, 29
  %v3_100083c4 = icmp eq i32 %v0_1000832c, 29
  store i1 %v1_100083c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083c4, label %dec_label_pc_10008310, label %dec_label_pc_100083cc

dec_label_pc_100083cc:                            ; preds = %dec_label_pc_100083c4
  %v1_100083cc = icmp slt i32 %v0_1000832c, 30
  %v3_100083cc = icmp eq i32 %v0_1000832c, 30
  store i1 %v1_100083cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083cc, label %dec_label_pc_10008310, label %dec_label_pc_100083d4

dec_label_pc_100083d4:                            ; preds = %dec_label_pc_100083cc
  %v1_100083d4 = icmp slt i32 %v0_1000832c, 33
  %v3_100083d4 = icmp eq i32 %v0_1000832c, 33
  store i1 %v1_100083d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083d4, label %dec_label_pc_10008310, label %dec_label_pc_100083dc

dec_label_pc_100083dc:                            ; preds = %dec_label_pc_100083d4
  %v1_100083dc = icmp slt i32 %v0_1000832c, 55
  %v3_100083dc = icmp eq i32 %v0_1000832c, 55
  store i1 %v1_100083dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083dc, label %dec_label_pc_10008310, label %dec_label_pc_100083e4

dec_label_pc_100083e4:                            ; preds = %dec_label_pc_100083dc
  %v1_100083e4 = icmp slt i32 %v0_1000832c, 214
  %v3_100083e4 = icmp eq i32 %v0_1000832c, 214
  store i1 %v1_100083e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083e4, label %dec_label_pc_10008310, label %dec_label_pc_100083ec

dec_label_pc_100083ec:                            ; preds = %dec_label_pc_100083e4
  %v1_100083ec = icmp slt i32 %v0_1000832c, 215
  %v3_100083ec = icmp eq i32 %v0_1000832c, 215
  store i1 %v1_100083ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083ec, label %dec_label_pc_10008310, label %dec_label_pc_100083ec.dec_label_pc_100083f4.loopexit_crit_edge

dec_label_pc_100083ec.dec_label_pc_100083f4.loopexit_crit_edge: ; preds = %dec_label_pc_100083ec
  %v0_100083f8.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_100083f4

dec_label_pc_100083f4:                            ; preds = %dec_label_pc_100089bc, %dec_label_pc_100089a8, %dec_label_pc_1000899c, %dec_label_pc_10008988, %dec_label_pc_100089b4, %dec_label_pc_10008994, %dec_label_pc_10008980, %dec_label_pc_100083ec.dec_label_pc_100083f4.loopexit_crit_edge, %dec_label_pc_10008974.dec_label_pc_100083f4_crit_edge
  %v0_10008400 = phi i32 [ %v0_1000840017, %dec_label_pc_10008974.dec_label_pc_100083f4_crit_edge ], [ %v1_10008324, %dec_label_pc_100083ec.dec_label_pc_100083f4.loopexit_crit_edge ], [ %v1_10008324, %dec_label_pc_10008980 ], [ %v1_10008324, %dec_label_pc_10008994 ], [ %v1_10008324, %dec_label_pc_100089b4 ], [ %v1_10008324, %dec_label_pc_10008988 ], [ %v1_10008324, %dec_label_pc_1000899c ], [ %v1_10008324, %dec_label_pc_100089a8 ], [ %v1_10008324, %dec_label_pc_100089bc ]
  %v0_100083f8 = phi i32 [ %v0_10008974, %dec_label_pc_10008974.dec_label_pc_100083f4_crit_edge ], [ %v0_100083f8.pre.pre, %dec_label_pc_100083ec.dec_label_pc_100083f4.loopexit_crit_edge ], [ %v0_10008980, %dec_label_pc_10008980 ], [ %v0_10008994, %dec_label_pc_10008994 ], [ %v0_100089b4, %dec_label_pc_100089b4 ], [ %v0_10008980, %dec_label_pc_10008988 ], [ %v0_10008994, %dec_label_pc_1000899c ], [ %v0_100089a8, %dec_label_pc_100089a8 ], [ %v0_100089b4, %dec_label_pc_100089bc ]
  %v0_100083f4 = phi i32 [ %v0_100083f4.pre, %dec_label_pc_10008974.dec_label_pc_100083f4_crit_edge ], [ %v0_1000832c, %dec_label_pc_100083ec.dec_label_pc_100083f4.loopexit_crit_edge ], [ 172, %dec_label_pc_10008980 ], [ 100, %dec_label_pc_10008994 ], [ 198, %dec_label_pc_100089b4 ], [ 172, %dec_label_pc_10008988 ], [ 100, %dec_label_pc_1000899c ], [ 169, %dec_label_pc_100089a8 ], [ 198, %dec_label_pc_100089bc ]
  %v1_100083f4 = mul i32 %v0_100083f4, 16777216
  %v1_100083f8 = mul i32 %v0_100083f8, 65536
  %v2_100083fc = or i32 %v1_100083f4, %v1_100083f8
  %v1_10008400 = mul i32 %v0_10008400, 256
  %v1_10008404 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008404 = or i32 %v2_100083fc, %v1_10008404
  store i32 %v2_10008404, i32* %r0.global-to-local, align 4
  %v0_10008408 = load i32, i32* @r30, align 4
  store i32 %v0_10008408, i32* @r3, align 4
  %v2_1000840c = or i32 %v2_10008404, %v1_10008400
  store i32 %v2_1000840c, i32* %r9.global-to-local, align 4
  store i32 20, i32* %r4.global-to-local, align 4
  store i32 %v2_1000840c, i32* @global_var_1001e24c.242, align 4
  %v0_10008418 = load i32, i32* @r27, align 4
  %v1_10008418 = trunc i32 %v0_10008418 to i16
  store i16 %v1_10008418, i16* bitcast (i32* @global_var_1001e246.243 to i16*), align 4
  %v2_1000841c = call i32 @function_100056ac(i32 %v0_10008408, i32 20)
  %v3_1000841c = trunc i32 %v2_1000841c to i16
  %v3_10008420 = load i64, i64* %stack_var_-1900, align 8
  %v4_10008420 = trunc i64 %v3_10008420 to i32
  store i32 %v4_10008420, i32* %r9.global-to-local, align 4
  store i16 %v3_1000841c, i16* bitcast (i32* @global_var_1001e246.243 to i16*), align 4
  %v4_10008430 = mul nsw i64 %v3_10008420, 1717986919
  %v5_10008430 = udiv i64 %v4_10008430, 4294967296
  %v6_10008430 = trunc i64 %v5_10008430 to i32
  %tmp = icmp slt i32 %v4_10008420, 0
  %v1_10008434 = zext i1 %tmp to i32
  %v2_10008434 = ashr i32 %v4_10008420, 31
  %v3_10008434 = and i32 %v2_10008434, -2
  %v4_10008434 = or i32 %v3_10008434, %v1_10008434
  store i32 %v4_10008434, i32* %r11.global-to-local, align 4
  %v1_1000843846 = udiv i64 %v4_10008430, 17179869184
  %v1_10008438 = trunc i64 %v1_1000843846 to i32
  %v2_10008438 = ashr i32 %v6_10008430, 31
  %v3_10008438 = and i32 %v2_10008438, -1073741824
  %v4_10008438 = or i32 %v3_10008438, %v1_10008438
  %v2_1000843c = sub nsw i32 %v4_10008438, %v4_10008434
  %v1_10008440 = mul i32 %v2_1000843c, 10
  %v2_10008444 = icmp slt i32 %v4_10008420, %v1_10008440
  %v4_10008444 = icmp eq i32 %v4_10008420, %v1_10008440
  store i1 %v2_10008444, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008444, i1* %cr7_eq.global-to-local, align 1
  %.4 = select i1 %v4_10008444, i16 2323, i16 23
  store i16 %.4, i16* @global_var_1001e252.185, align 2
  %v3_10008454 = load i32, i32* @global_var_1001e24c.242, align 4
  store i32 %v3_10008454, i32* %r0.global-to-local, align 4
  %v0_10008458 = load i32, i32* @r31, align 4
  store i32 %v0_10008458, i32* @r4, align 4
  %v0_1000845c = load i32, i32* @r27, align 4
  %v1_1000845c = trunc i32 %v0_1000845c to i16
  store i16 %v1_1000845c, i16* bitcast (i32* @global_var_1001e260.244 to i16*), align 4
  store i32 %v3_10008454, i32* @global_var_1001e254.245, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_1000846c = load i32, i32* @r30, align 4
  store i32 %v0_1000846c, i32* %r3.global-to-local, align 4
  %v4_10008470 = call i32 @function_10005710(i32 %v0_1000846c, i32 %v0_10008458, i32 20, i32 20)
  %v5_10008470 = trunc i32 %v4_10008470 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10008470, i16* bitcast (i32* @global_var_1001e260.244 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10008480 = load i32, i32* @global_var_1001e24c.242, align 4
  store i32 %v3_10008480, i32* %r9.global-to-local, align 4
  %v0_10008484 = load i32, i32* @r30, align 4
  store i32 %v0_10008484, i32* %r4.global-to-local, align 4
  %v3_10008488 = load i16, i16* @global_var_1001e252.185, align 2
  %v4_10008488 = zext i16 %v3_10008488 to i32
  store i32 %v4_10008488, i32* %r11.global-to-local, align 4
  %v3_10008490 = load i32, i32* @global_var_1001e1b0.175, align 4
  store i32 %v3_10008490, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008498 = load i32, i32* @r26, align 4
  store i32 %v0_10008498, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1872, align 4
  store i32 268469424, i32* @lr, align 4
  %v6_100084ac = call i32 @function_1000b4ec(i32 %v3_10008490, i32 %v0_10008484, i32 40, i32 16384, i32 %v0_10008498, i32 16)
  store i32 %v6_100084ac, i32* %r3.global-to-local, align 4
  %v3_100084b0 = load i64, i64* %stack_var_-1900, align 8
  %v4_100084b0 = trunc i64 %v3_100084b0 to i32
  %v1_100084b4 = add i32 %v4_100084b0, 1
  store i32 %v1_100084b4, i32* %r9.global-to-local, align 4
  %v1_100084b8 = icmp slt i32 %v1_100084b4, 319
  %v3_100084b8 = icmp eq i32 %v1_100084b4, 319
  store i1 %v1_100084b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084b8, i1* %cr7_eq.global-to-local, align 1
  %v5_100084bc = sext i32 %v1_100084b4 to i64
  store i64 %v5_100084bc, i64* %stack_var_-1900, align 8
  %tmp106 = icmp slt i32 %v1_100084b4, 320
  br i1 %tmp106, label %dec_label_pc_100083f4.dec_label_pc_100082f0_crit_edge, label %dec_label_pc_100084c4

dec_label_pc_100083f4.dec_label_pc_100082f0_crit_edge: ; preds = %dec_label_pc_100083f4
  %v0_100082f0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100082f0

dec_label_pc_100084c4:                            ; preds = %dec_label_pc_100083f4
  %v0_100084c4 = load i32, i32* @r29, align 4
  store i32 %v0_100084c4, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_100084c8

dec_label_pc_100084c8:                            ; preds = %dec_label_pc_100082cc, %dec_label_pc_100084c4
  %v0_100084c8 = call i32 @function_1000aeb8()
  store i32 %v0_100084c8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 %v0_100084c8, i32* %r22.global-to-local, align 4
  %v2_100084e0 = ptrtoint i32* %stack_var_-1600 to i32
  %v4_10008528 = zext i8 %tmp59 to i32
  %v1_1000852c = icmp ult i8 %tmp59, 6
  %v3_1000852c = icmp eq i8 %tmp59, 6
  %v4_10008534 = zext i16 %tmp58 to i32
  %v1_1000853c = icmp ult i16 %tmp58, 23
  %v3_1000853c = icmp eq i16 %tmp58, 23
  %v4_1000854c = zext i16 %tmp57 to i32
  %v1_1000855c = and i32 %tmp56, 131072
  %v3_1000855c = icmp eq i32 %v1_1000855c, 0
  %v1_10008584 = add i32 %tmp55, -1
  %v2_10008588 = icmp slt i32 %v1_10008584, %tmp54
  %v4_10008588 = icmp eq i32 %v1_10008584, %tmp54
  %v1_10008564 = and i32 %tmp56, 1048576
  %v3_10008564 = icmp eq i32 %v1_10008564, 0
  %v1_1000856c = and i32 %tmp56, 262144
  %v3_1000856c = icmp eq i32 %v1_1000856c, 0
  %v1_10008574 = and i32 %tmp56, 65536
  %v3_10008574 = icmp eq i32 %v1_10008574, 0
  %v1_10008544 = icmp ult i16 %tmp58, 2323
  %v3_10008544 = icmp eq i16 %tmp58, 2323
  br label %dec_label_pc_100084d4

dec_label_pc_100084d4:                            ; preds = %dec_label_pc_1000857c, %dec_label_pc_10008574, %dec_label_pc_1000856c, %dec_label_pc_1000854c, %dec_label_pc_10008544, %dec_label_pc_10008528, %dec_label_pc_10008518, %dec_label_pc_10008564, %dec_label_pc_10008558, %dec_label_pc_10008510, %dec_label_pc_100084c8
  %v1_100084dc = phi i32 [ %v0_100084c8, %dec_label_pc_100084c8 ], [ %v0_10008504, %dec_label_pc_10008510 ], [ %v0_10008504, %dec_label_pc_10008558 ], [ %v0_10008504, %dec_label_pc_10008564 ], [ %v0_10008504, %dec_label_pc_10008518 ], [ %v0_10008504, %dec_label_pc_10008528 ], [ %v0_10008504, %dec_label_pc_10008544 ], [ %v0_10008504, %dec_label_pc_1000854c ], [ %v0_10008504, %dec_label_pc_1000856c ], [ %v0_10008504, %dec_label_pc_10008574 ], [ %v0_10008504, %dec_label_pc_1000857c ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_100084dc = inttoptr i32 %v1_100084dc to i32*
  store i32 0, i32* %v2_100084dc, align 4
  store i32 %v2_100084e0, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_100084ec = load i32, i32* @global_var_1001e1b0.175, align 4
  store i32 %v3_100084ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268469500, i32* @lr, align 4
  %v6_100084f8 = call i32 @function_1000b474(i32 %v3_100084ec, i32 %v2_100084e0, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_100084f8, i32* %r3.global-to-local, align 4
  %tmp107 = icmp slt i32 %v6_100084f8, 1
  br i1 %tmp107, label %dec_label_pc_10008620, label %dec_label_pc_10008504

dec_label_pc_10008504:                            ; preds = %dec_label_pc_100084d4, %dec_label_pc_100085e4
  %v0_10008510 = phi i32 [ %v6_10008614, %dec_label_pc_100085e4 ], [ %v6_100084f8, %dec_label_pc_100084d4 ]
  %v0_10008504 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008504 = inttoptr i32 %v0_10008504 to i32*
  %v2_10008504 = load i32, i32* %v1_10008504, align 4
  store i32 %v2_10008504, i32* %r0.global-to-local, align 4
  %v1_10008508 = icmp slt i32 %v2_10008504, 11
  %v3_10008508 = icmp eq i32 %v2_10008504, 11
  store i1 %v1_10008508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008508, label %dec_label_pc_10008620, label %dec_label_pc_10008510

dec_label_pc_10008510:                            ; preds = %dec_label_pc_10008504
  %v1_10008510 = icmp ult i32 %v0_10008510, 39
  %v3_10008510 = icmp eq i32 %v0_10008510, 39
  store i1 %v1_10008510, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008510, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10008510, 40
  br i1 %tmp108, label %dec_label_pc_100084d4, label %dec_label_pc_10008518

dec_label_pc_10008518:                            ; preds = %dec_label_pc_10008510
  %v3_10008518 = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_10008518, i32* %r0.global-to-local, align 4
  store i32 %tmp60, i32* %r9.global-to-local, align 4
  %v2_10008520 = icmp slt i32 %tmp60, %v3_10008518
  %v4_10008520 = icmp eq i32 %tmp60, %v3_10008518
  store i1 %v2_10008520, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10008520, label %dec_label_pc_10008528, label %dec_label_pc_100084d4

dec_label_pc_10008528:                            ; preds = %dec_label_pc_10008518
  store i32 %v4_10008528, i32* %r0.global-to-local, align 4
  store i1 %v1_1000852c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000852c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000852c, label %dec_label_pc_10008534, label %dec_label_pc_100084d4

dec_label_pc_10008534:                            ; preds = %dec_label_pc_10008528
  store i32 %v4_10008534, i32* %r8.global-to-local, align 4
  store i32 %v4_10008534, i32* %r0.global-to-local, align 4
  store i1 %v1_1000853c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000853c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000853c, label %dec_label_pc_1000854c, label %dec_label_pc_10008544

dec_label_pc_10008544:                            ; preds = %dec_label_pc_10008534
  store i1 %v1_10008544, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008544, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008544, label %dec_label_pc_1000854c, label %dec_label_pc_100084d4

dec_label_pc_1000854c:                            ; preds = %dec_label_pc_10008544, %dec_label_pc_10008534
  store i32 %v4_1000854c, i32* %r0.global-to-local, align 4
  %v1_10008550 = load i32, i32* @r18, align 4
  %v2_10008550 = icmp slt i32 %v4_1000854c, %v1_10008550
  %v4_10008550 = icmp eq i32 %v4_1000854c, %v1_10008550
  store i1 %v2_10008550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008550, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10008550, label %dec_label_pc_10008558, label %dec_label_pc_100084d4

dec_label_pc_10008558:                            ; preds = %dec_label_pc_1000854c
  store i32 %tmp56, i32* %r0.global-to-local, align 4
  store i32 %v1_1000855c, i32* %r9.global-to-local, align 4
  br i1 %v3_1000855c, label %dec_label_pc_100084d4, label %dec_label_pc_10008564

dec_label_pc_10008564:                            ; preds = %dec_label_pc_10008558
  store i32 %v1_10008564, i32* %r10.global-to-local, align 4
  br i1 %v3_10008564, label %dec_label_pc_100084d4, label %dec_label_pc_1000856c

dec_label_pc_1000856c:                            ; preds = %dec_label_pc_10008564
  store i32 %v1_1000856c, i32* %r11.global-to-local, align 4
  br i1 %v3_1000856c, label %dec_label_pc_10008574, label %dec_label_pc_100084d4

dec_label_pc_10008574:                            ; preds = %dec_label_pc_1000856c
  store i32 %v1_10008574, i32* %r9.global-to-local, align 4
  br i1 %v3_10008574, label %dec_label_pc_1000857c, label %dec_label_pc_100084d4

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_10008574
  store i32 %tmp55, i32* %r9.global-to-local, align 4
  store i32 %tmp54, i32* %r0.global-to-local, align 4
  store i32 %v1_10008584, i32* %r10.global-to-local, align 4
  store i1 %v2_10008588, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008588, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10008588, label %dec_label_pc_10008590, label %dec_label_pc_100084d4

dec_label_pc_10008590:                            ; preds = %dec_label_pc_1000857c
  %v0_10008590 = load i32, i32* @r29, align 4
  %v1_10008590 = icmp slt i32 %v0_10008590, 255
  %v2_10008590 = icmp sgt i32 %v0_10008590, 255
  %v3_10008590 = icmp eq i32 %v0_10008590, 255
  store i1 %v1_10008590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10008590, label %dec_label_pc_10008620, label %dec_label_pc_10008598

dec_label_pc_10008598:                            ; preds = %dec_label_pc_10008590
  %v3_100085a0 = load i32, i32* @global_var_1001e1ac.174, align 4
  store i32 %v3_100085a0, i32* %r11.global-to-local, align 4
  %v1_100085a4 = mul i32 %v0_10008590, 512
  store i32 %v1_100085a4, i32* %r9.global-to-local, align 4
  %v2_100085a8 = mul i32 %v0_10008590, 544
  store i32 %v2_100085a8, i32* %r0.global-to-local, align 4
  %v2_100085ac = add i32 %v3_100085a0, %v2_100085a8
  store i32 %v2_100085ac, i32* @r3, align 4
  %v1_100085b0 = add i32 %v2_100085ac, 12
  %v2_100085b0 = inttoptr i32 %v1_100085b0 to i32*
  %v3_100085b0 = load i32, i32* %v2_100085b0, align 4
  store i32 %v3_100085b0, i32* %r9.global-to-local, align 4
  %v1_100085b4 = icmp slt i32 %v3_100085b0, 0
  %v3_100085b4 = icmp eq i32 %v3_100085b0, 0
  store i1 %v1_100085b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085b4, label %dec_label_pc_100085e4, label %dec_label_pc_100085bc

dec_label_pc_100085bc:                            ; preds = %dec_label_pc_10008598
  %v1_100085bc = sub i32 256, %v0_10008590
  store i32 %v1_100085bc, i32* %r11.global-to-local, align 4
  %v1_100085c0 = add i32 %v2_100085ac, 544
  store i32 %v1_100085c0, i32* %r9.global-to-local, align 4
  store i32 %v1_100085bc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100085c8

dec_label_pc_100085c8:                            ; preds = %dec_label_pc_100085d0, %dec_label_pc_100085bc
  %v0_100085d0 = phi i32 [ %v1_100085d8, %dec_label_pc_100085d0 ], [ %v1_100085c0, %dec_label_pc_100085bc ]
  %v0_100085cc = phi i32 [ %v1_100085cc, %dec_label_pc_100085d0 ], [ %v1_100085bc, %dec_label_pc_100085bc ]
  %v0_100085c8 = phi i32 [ %v1_100085c8, %dec_label_pc_100085d0 ], [ %v0_10008590, %dec_label_pc_100085bc ]
  %v1_100085c8 = add i32 %v0_100085c8, 1
  store i32 %v1_100085c8, i32* @r29, align 4
  %v1_100085cc = add i32 %v0_100085cc, -1
  store i32 %v1_100085cc, i32* %ctr.global-to-local, align 4
  %v2_100085cc = icmp eq i32 %v1_100085cc, 0
  br i1 %v2_100085cc, label %dec_label_pc_10008620, label %dec_label_pc_100085d0

dec_label_pc_100085d0:                            ; preds = %dec_label_pc_100085c8
  %v1_100085d0 = add i32 %v0_100085d0, 12
  %v2_100085d0 = inttoptr i32 %v1_100085d0 to i32*
  %v3_100085d0 = load i32, i32* %v2_100085d0, align 4
  store i32 %v3_100085d0, i32* %r0.global-to-local, align 4
  store i32 %v0_100085d0, i32* @r3, align 4
  %v1_100085d8 = add i32 %v0_100085d0, 544
  store i32 %v1_100085d8, i32* %r9.global-to-local, align 4
  %v1_100085dc = icmp slt i32 %v3_100085d0, 0
  %v3_100085dc = icmp eq i32 %v3_100085d0, 0
  store i1 %v1_100085dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085dc, label %dec_label_pc_100085e4, label %dec_label_pc_100085c8

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_100085d0, %dec_label_pc_10008598
  %v1_100085e4 = phi i32 [ %v2_100085ac, %dec_label_pc_10008598 ], [ %v0_100085d0, %dec_label_pc_100085d0 ]
  %v2_100085e4 = add i32 %v1_100085e4, 16
  %v3_100085e4 = inttoptr i32 %v2_100085e4 to i32*
  store i32 %tmp54, i32* %v3_100085e4, align 4
  %v0_100085e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100085e8 = trunc i32 %v0_100085e8 to i16
  %v2_100085e8 = load i32, i32* @r3, align 4
  %v3_100085e8 = add i32 %v2_100085e8, 20
  %v4_100085e8 = inttoptr i32 %v3_100085e8 to i16*
  store i16 %v1_100085e8, i16* %v4_100085e8, align 2
  store i32 ptrtoint (i32* @global_var_100085f0.246 to i32), i32* @lr, align 4
  %v0_100085ec = call i32 @function_1000786c()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100085f4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100085f4 = inttoptr i32 %v1_100085f4 to i32*
  store i32 0, i32* %v2_100085f4, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_100084e0, i32* %r4.global-to-local, align 4
  %v3_10008604 = load i32, i32* @global_var_1001e1b0.175, align 4
  store i32 %v3_10008604, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268469784, i32* @lr, align 4
  %v6_10008614 = call i32 @function_1000b474(i32 %v3_10008604, i32 %v2_100084e0, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10008614, i32* %r3.global-to-local, align 4
  %v2_10008618 = icmp sgt i32 %v6_10008614, 0
  br i1 %v2_10008618, label %dec_label_pc_10008504, label %dec_label_pc_10008620

dec_label_pc_10008620:                            ; preds = %dec_label_pc_100084d4, %dec_label_pc_100085e4, %dec_label_pc_10008590, %dec_label_pc_10008504, %dec_label_pc_100085c8
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10008638134 = load i32, i32* @r1, align 4
  %v3_10008638135 = add i32 %v2_10008638134, 64
  %v4_10008638136 = inttoptr i32 %v3_10008638135 to i32*
  store i32 0, i32* %v4_10008638136, align 4
  %v0_1000863c137 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000863c138 = add i32 %v0_1000863c137, -1
  store i32 %v1_1000863c138, i32* %ctr.global-to-local, align 4
  %v2_1000863c139 = icmp eq i32 %v1_1000863c138, 0
  br i1 %v2_1000863c139, label %dec_label_pc_10008640, label %dec_label_pc_10008630.dec_label_pc_10008630_crit_edge

dec_label_pc_10008630.dec_label_pc_10008630_crit_edge: ; preds = %dec_label_pc_10008620, %dec_label_pc_10008630.dec_label_pc_10008630_crit_edge
  %v0_10008630.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10008638.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10008630 = add i32 %v0_10008630.pre, 64
  store i32 %v1_10008630, i32* %r11.global-to-local, align 4
  %v1_10008634 = add i32 %v0_10008630.pre, 4
  store i32 %v1_10008634, i32* %r9.global-to-local, align 4
  %v2_10008638 = load i32, i32* @r1, align 4
  %v3_10008638 = add i32 %v2_10008638, %v1_10008630
  %v4_10008638 = inttoptr i32 %v3_10008638 to i32*
  store i32 %v0_10008638.pre, i32* %v4_10008638, align 4
  %v0_1000863c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000863c = add i32 %v0_1000863c, -1
  store i32 %v1_1000863c, i32* %ctr.global-to-local, align 4
  %v2_1000863c = icmp eq i32 %v1_1000863c, 0
  br i1 %v2_1000863c, label %dec_label_pc_10008640, label %dec_label_pc_10008630.dec_label_pc_10008630_crit_edge

dec_label_pc_10008640:                            ; preds = %dec_label_pc_10008630.dec_label_pc_10008630_crit_edge, %dec_label_pc_10008620
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008650

dec_label_pc_10008650:                            ; preds = %dec_label_pc_10008650, %dec_label_pc_10008640
  %v1_10008650 = phi i32 [ 0, %dec_label_pc_10008640 ], [ %v1_10008654, %dec_label_pc_10008650 ]
  %v0_10008650 = phi i32 [ 0, %dec_label_pc_10008640 ], [ %v0_1000865c, %dec_label_pc_10008650 ]
  %v2_10008650 = load i32, i32* @r14, align 4
  %v3_10008650 = add i32 %v2_10008650, %v1_10008650
  %v4_10008650 = inttoptr i32 %v3_10008650 to i32*
  store i32 %v0_10008650, i32* %v4_10008650, align 4
  %v0_10008654 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008654 = add i32 %v0_10008654, 4
  store i32 %v1_10008654, i32* %r9.global-to-local, align 4
  %v0_10008658 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008658 = add i32 %v0_10008658, -1
  store i32 %v1_10008658, i32* %ctr.global-to-local, align 4
  %v2_10008658 = icmp eq i32 %v1_10008658, 0
  %v0_1000865c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_10008658, label %dec_label_pc_1000865c, label %dec_label_pc_10008650

dec_label_pc_1000865c:                            ; preds = %dec_label_pc_10008650
  %v5_1000865c = sext i32 %v0_1000865c to i64
  store i64 %v5_1000865c, i64* %stack_var_-1900, align 8
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v2_100089e8 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_100086c8

dec_label_pc_10008678:                            ; preds = %dec_label_pc_100086f0
  %v1_10008678 = icmp slt i32 %v3_100086e4, 1
  store i1 %v1_10008678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086e8, i1* %cr7_eq.global-to-local, align 1
  %v1_100089e4 = add i32 %v2_100086e0, 4
  %v2_100089e4 = inttoptr i32 %v1_100089e4 to i32*
  %v3_100089e4 = load i32, i32* %v2_100089e4, align 4
  store i32 %v3_100089e4, i32* %r3.global-to-local, align 4
  br i1 %v3_100086e8, label %dec_label_pc_100089e4, label %dec_label_pc_10008680

dec_label_pc_10008680:                            ; preds = %dec_label_pc_10008678
  store i32 %v2_100089e8, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_100089e4, 65536
  %v1_1000868c = sdiv i32 %sext, 65536
  %v2_1000868c = call i32 @__asm_rlwinm(i32 %v1_1000868c, i32 29, i32 3, i32 29)
  %v0_10008690 = load i32, i32* @r27, align 4
  %v3_10008690 = icmp slt i32 %v0_10008690, %v1_1000868c
  %v5_10008690 = icmp eq i32 %v0_10008690, %v1_1000868c
  store i1 %v3_10008690, i1* %cr7_lt.global-to-local, align 1
  store i1 %v5_10008690, i1* %cr7_eq.global-to-local, align 1
  %v1_10008694 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008694 = add i32 %v1_10008694, %v2_1000868c
  store i32 %v2_10008694, i32* %r11.global-to-local, align 4
  %v2_10008698 = urem i32 %v3_100089e4, 32
  store i32 %v2_10008698, i32* %r10.global-to-local, align 4
  %v1_1000869c = add i32 %v2_10008694, 56
  %v2_1000869c = inttoptr i32 %v1_1000869c to i32*
  %v3_1000869c = load i32, i32* %v2_1000869c, align 4
  %v0_100086a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_100086a0 = shl i32 %v0_100086a0, %v2_10008698
  store i32 %v3_100086a0, i32* %r0.global-to-local, align 4
  %v2_100086a4 = or i32 %v3_100086a0, %v3_1000869c
  store i32 %v2_100086a4, i32* %r9.global-to-local, align 4
  store i32 %v2_100086a4, i32* %v2_1000869c, align 4
  br i1 %v3_10008690, label %dec_label_pc_100086b0, label %dec_label_pc_100086b4

dec_label_pc_100086b0:                            ; preds = %dec_label_pc_10008680
  store i32 %v1_1000868c, i32* @r27, align 4
  br label %dec_label_pc_100086b4

dec_label_pc_100086b4:                            ; preds = %dec_label_pc_100089e4, %dec_label_pc_10008680, %dec_label_pc_100089d4, %dec_label_pc_10008a18, %dec_label_pc_10008a10, %dec_label_pc_100086b0
  %v3_100086b4 = load i64, i64* %stack_var_-1900, align 8
  %v4_100086b4 = trunc i64 %v3_100086b4 to i32
  store i32 %v4_100086b4, i32* %r9.global-to-local, align 4
  %v1_100086b8 = add i32 %v4_100086b4, 1
  store i32 %v1_100086b8, i32* %r0.global-to-local, align 4
  %v1_100086bc = icmp slt i32 %v1_100086b8, 255
  %v2_100086bc = icmp sgt i32 %v1_100086b8, 255
  %v3_100086bc = icmp eq i32 %v1_100086b8, 255
  store i1 %v1_100086bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086bc, i1* %cr7_eq.global-to-local, align 1
  %v5_100086c0 = sext i32 %v1_100086b8 to i64
  store i64 %v5_100086c0, i64* %stack_var_-1900, align 8
  br i1 %v2_100086bc, label %dec_label_pc_10008758, label %dec_label_pc_100086c8

dec_label_pc_100086c8:                            ; preds = %dec_label_pc_1000873c, %dec_label_pc_100086b4, %dec_label_pc_1000865c
  %v0_100086cc = phi i32 [ 0, %dec_label_pc_1000865c ], [ %v1_100086b8, %dec_label_pc_100086b4 ], [ %v1_10008748, %dec_label_pc_1000873c ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_100086d0 = load i32, i32* @global_var_1001e1ac.174, align 4
  store i32 %v3_100086d0, i32* %r9.global-to-local, align 4
  %v2_100086d8 = mul i32 %v0_100086cc, 544
  store i32 %v2_100086d8, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_100086e0 = add i32 %v3_100086d0, %v2_100086d8
  store i32 %v2_100086e0, i32* @r29, align 4
  %v1_100086e4 = add i32 %v2_100086e0, 12
  %v2_100086e4 = inttoptr i32 %v1_100086e4 to i32*
  %v3_100086e4 = load i32, i32* %v2_100086e4, align 4
  store i32 %v3_100086e4, i32* %r10.global-to-local, align 4
  %v1_100086e8 = icmp eq i32 %v3_100086e4, 0
  %v3_100086e8 = icmp eq i32 %v3_100086e4, 1
  store i1 %v1_100086e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086e8, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = or i32 %v3_100086e4, 1
  %tmp111 = icmp eq i32 %tmp110, 1
  br i1 %tmp111, label %dec_label_pc_100089d4, label %dec_label_pc_100086f0

dec_label_pc_100086f0:                            ; preds = %dec_label_pc_100086c8, %dec_label_pc_100089dc
  %v1_10008700 = phi i32 [ 30, %dec_label_pc_100086c8 ], [ 5, %dec_label_pc_100089dc ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100086f4 = load i32, i32* @global_var_1001e1a8.168, align 4
  store i32 %v3_100086f4, i32* %r0.global-to-local, align 4
  %v1_100086f8 = add i32 %v2_100086e0, 8
  %v2_100086f8 = inttoptr i32 %v1_100086f8 to i32*
  %v3_100086f8 = load i32, i32* %v2_100086f8, align 4
  store i32 %v3_100086f8, i32* %r9.global-to-local, align 4
  %v2_100086fc = sub i32 %v3_100086f4, %v3_100086f8
  store i32 %v2_100086fc, i32* %r0.global-to-local, align 4
  %v2_10008700 = icmp ult i32 %v2_100086fc, %v1_10008700
  %v3_10008700 = icmp ugt i32 %v2_100086fc, %v1_10008700
  %v4_10008700 = icmp eq i32 %v2_100086fc, %v1_10008700
  store i1 %v2_10008700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008700, label %dec_label_pc_10008708, label %dec_label_pc_10008678

dec_label_pc_10008708:                            ; preds = %dec_label_pc_100086f0
  %v1_10008708 = add i32 %v2_100086e0, 4
  %v2_10008708 = inttoptr i32 %v1_10008708 to i32*
  %v3_10008708 = load i32, i32* %v2_10008708, align 4
  store i32 %v3_10008708, i32* %r3.global-to-local, align 4
  store i32 268470032, i32* @lr, align 4
  %v0_1000870c = call i32 @function_1000a79c()
  store i32 %v0_1000870c, i32* %r3.global-to-local, align 4
  %v0_10008710 = load i32, i32* @r29, align 4
  %v1_10008710 = add i32 %v0_10008710, 12
  %v2_10008710 = inttoptr i32 %v1_10008710 to i32*
  %v3_10008710 = load i32, i32* %v2_10008710, align 4
  store i32 %v3_10008710, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10008718 = icmp ult i32 %v3_10008710, 2
  %v3_10008718 = icmp eq i32 %v3_10008710, 2
  store i1 %v1_10008718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008718, i1* %cr7_eq.global-to-local, align 1
  %v2_1000871c = add i32 %v0_10008710, 4
  %v3_1000871c = inttoptr i32 %v2_1000871c to i32*
  store i32 -1, i32* %v3_1000871c, align 4
  %tmp112 = icmp ult i32 %v3_10008710, 3
  br i1 %tmp112, label %dec_label_pc_10008a18, label %dec_label_pc_10008724

dec_label_pc_10008724:                            ; preds = %dec_label_pc_10008708
  %v0_10008724 = load i32, i32* @r29, align 4
  %v1_10008724 = add i32 %v0_10008724, 540
  %v2_10008724 = inttoptr i32 %v1_10008724 to i8*
  %v3_10008724 = load i8, i8* %v2_10008724, align 1
  %v4_10008724 = zext i8 %v3_10008724 to i32
  %v1_10008728 = add nuw nsw i32 %v4_10008724, 1
  %v1_1000872c = urem i32 %v1_10008728, 256
  store i32 %v1_1000872c, i32* %r9.global-to-local, align 4
  %v1_10008730 = icmp ult i32 %v1_1000872c, 10
  %v3_10008730 = icmp eq i32 %v1_1000872c, 10
  store i1 %v1_10008730, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008730, i1* %cr7_eq.global-to-local, align 1
  %v1_10008734 = trunc i32 %v1_10008728 to i8
  store i8 %v1_10008734, i8* %v2_10008724, align 1
  %v0_10008738 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008738, label %dec_label_pc_10008a18, label %dec_label_pc_1000873c

dec_label_pc_1000873c:                            ; preds = %dec_label_pc_10008724
  %v0_1000873c = load i32, i32* @r29, align 4
  store i32 %v0_1000873c, i32* @r3, align 4
  store i32 268470084, i32* @lr, align 4
  %v0_10008740 = call i32 @function_1000786c()
  store i32 %v0_10008740, i32* %r3.global-to-local, align 4
  %v3_10008744 = load i64, i64* %stack_var_-1900, align 8
  %v4_10008744 = trunc i64 %v3_10008744 to i32
  store i32 %v4_10008744, i32* %r9.global-to-local, align 4
  %v1_10008748 = add i32 %v4_10008744, 1
  store i32 %v1_10008748, i32* %r0.global-to-local, align 4
  %v1_1000874c = icmp slt i32 %v1_10008748, 255
  %v3_1000874c = icmp eq i32 %v1_10008748, 255
  store i1 %v1_1000874c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000874c, i1* %cr7_eq.global-to-local, align 1
  %v5_10008750 = sext i32 %v1_10008748 to i64
  store i64 %v5_10008750, i64* %stack_var_-1900, align 8
  %tmp113 = icmp slt i32 %v1_10008748, 256
  br i1 %tmp113, label %dec_label_pc_100086c8, label %dec_label_pc_10008758

dec_label_pc_10008758:                            ; preds = %dec_label_pc_1000873c, %dec_label_pc_100086b4
  %v0_10008758 = load i32, i32* @r27, align 4
  %v1_10008758 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008758 = icmp slt i32 %v0_10008758, %v1_10008758
  %v4_10008758 = icmp eq i32 %v0_10008758, %v1_10008758
  store i1 %v2_10008758, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008758, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_10008758, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1892, align 4
  br i1 %v2_10008758, label %dec_label_pc_10008774, label %dec_label_pc_10008778

dec_label_pc_10008774:                            ; preds = %dec_label_pc_10008758
  store i32 %v1_10008758, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008778

dec_label_pc_10008778:                            ; preds = %dec_label_pc_10008758, %dec_label_pc_10008774
  %v0_10008788 = phi i32 [ %v0_10008758, %dec_label_pc_10008758 ], [ %v1_10008758, %dec_label_pc_10008774 ]
  %v2_10008778 = ptrtoint i32* %stack_var_-1856 to i32
  store i32 %v2_10008778, i32* %r4.global-to-local, align 4
  %v1_1000877c = ptrtoint i32* %stack_var_-1728 to i32
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10008784 = ptrtoint i32* %stack_var_-1892 to i32
  store i32 %v2_10008784, i32* %r7.global-to-local, align 4
  %v1_10008788 = add i32 %v0_10008788, 1
  store i32 %v1_10008788, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008790.247 to i32), i32* @lr, align 4
  %v5_1000878c = call i32 @function_1000aa64(i32 %v1_10008788, i32 %v2_10008778, i32 %v1_1000877c, i32 0, i32 %v2_10008784)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268470168, i32* @lr, align 4
  %v0_10008794 = call i32 @function_1000ab6c()
  store i32 %v0_10008794, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10008794, i32* @global_var_1001e1a8.168, align 4
  %v0_100087a4 = load i32, i32* %r29.global-to-local, align 4
  %v5_100087a4 = sext i32 %v0_100087a4 to i64
  store i64 %v5_100087a4, i64* %stack_var_-1900, align 8
  %v2_100093d0 = ptrtoint i32* %stack_var_-1904 to i32
  %v2_100093d4 = ptrtoint i32* %stack_var_-1896 to i32
  br label %dec_label_pc_100087c0

dec_label_pc_100087ac:                            ; preds = %dec_label_pc_10008824, %dec_label_pc_100092b8, %dec_label_pc_10008804, %dec_label_pc_100087c0, %dec_label_pc_100095bc, %dec_label_pc_10009480, %dec_label_pc_100092ec
  %v3_100087ac = load i64, i64* %stack_var_-1900, align 8
  %v4_100087ac = trunc i64 %v3_100087ac to i32
  store i32 %v4_100087ac, i32* %r9.global-to-local, align 4
  %v1_100087b0 = add i32 %v4_100087ac, 1
  store i32 %v1_100087b0, i32* %r0.global-to-local, align 4
  %v1_100087b4 = icmp slt i32 %v1_100087b0, 255
  %v2_100087b4 = icmp sgt i32 %v1_100087b0, 255
  %v3_100087b4 = icmp eq i32 %v1_100087b0, 255
  store i1 %v1_100087b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087b4, i1* %cr7_eq.global-to-local, align 1
  %v5_100087b8 = sext i32 %v1_100087b0 to i64
  store i64 %v5_100087b8, i64* %stack_var_-1900, align 8
  br i1 %v2_100087b4, label %dec_label_pc_100082cc, label %dec_label_pc_100087c0

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087ac, %dec_label_pc_10008778
  %v0_100087c4 = phi i32 [ %v1_100087b0, %dec_label_pc_100087ac ], [ 0, %dec_label_pc_10008778 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_100087c4 = mul i32 %v0_100087c4, 512
  store i32 %v1_100087c4, i32* %r11.global-to-local, align 4
  %v3_100087c8 = load i32, i32* @global_var_1001e1ac.174, align 4
  store i32 %v3_100087c8, i32* %r9.global-to-local, align 4
  %v2_100087d0 = mul i32 %v0_100087c4, 544
  store i32 %v2_100087d0, i32* %r0.global-to-local, align 4
  %v2_100087d4 = add i32 %v3_100087c8, %v2_100087d0
  store i32 %v2_100087d4, i32* @r28, align 4
  %v1_100087d8 = add i32 %v2_100087d4, 4
  %v2_100087d8 = inttoptr i32 %v1_100087d8 to i32*
  %v3_100087d8 = load i32, i32* %v2_100087d8, align 4
  store i32 %v3_100087d8, i32* %r3.global-to-local, align 4
  %v1_100087dc = icmp slt i32 %v3_100087d8, -1
  %v3_100087dc = icmp eq i32 %v3_100087d8, -1
  store i1 %v1_100087dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100087dc, label %dec_label_pc_100087ac, label %dec_label_pc_100087e4

dec_label_pc_100087e4:                            ; preds = %dec_label_pc_100087c0
  store i32 %v2_100089e8, i32* %r11.global-to-local, align 4
  %v1_100087e8 = call i32 @__asm_rlwinm(i32 %v3_100087d8, i32 29, i32 3, i32 29)
  %v1_100087ec = load i32, i32* %r11.global-to-local, align 4
  %v2_100087ec = add i32 %v1_100087ec, %v1_100087e8
  store i32 %v2_100087ec, i32* %r9.global-to-local, align 4
  %v0_100087f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100087f0 = urem i32 %v0_100087f0, 32
  store i32 %v1_100087f0, i32* %r11.global-to-local, align 4
  %v1_100087f4 = add i32 %v2_100087ec, 184
  %v2_100087f4 = inttoptr i32 %v1_100087f4 to i32*
  %v3_100087f4 = load i32, i32* %v2_100087f4, align 4
  %v3_100087f8 = lshr i32 %v3_100087f4, %v1_100087f0
  store i32 %v3_100087f8, i32* %r0.global-to-local, align 4
  %v1_100087fc = urem i32 %v3_100087f8, 2
  store i32 %v1_100087fc, i32* %r9.global-to-local, align 4
  %v3_100087fc = icmp eq i32 %v1_100087fc, 0
  br i1 %v3_100087fc, label %dec_label_pc_10008804, label %dec_label_pc_100093c0

dec_label_pc_10008804:                            ; preds = %dec_label_pc_100087e4, %dec_label_pc_10009458
  %v0_10008808 = phi i32 [ %v0_100087f0, %dec_label_pc_100087e4 ], [ %v0_10008808.pre, %dec_label_pc_10009458 ]
  store i32 %v2_100089e8, i32* %r0.global-to-local, align 4
  %v1_10008808 = call i32 @__asm_rlwinm(i32 %v0_10008808, i32 29, i32 3, i32 29)
  %v1_1000880c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000880c = add i32 %v1_1000880c, %v1_10008808
  store i32 %v2_1000880c, i32* %r9.global-to-local, align 4
  %v0_10008810 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008810 = urem i32 %v0_10008810, 32
  store i32 %v1_10008810, i32* %r11.global-to-local, align 4
  %v1_10008814 = add i32 %v2_1000880c, 56
  %v2_10008814 = inttoptr i32 %v1_10008814 to i32*
  %v3_10008814 = load i32, i32* %v2_10008814, align 4
  %v3_10008818 = lshr i32 %v3_10008814, %v1_10008810
  store i32 %v3_10008818, i32* %r0.global-to-local, align 4
  %v1_1000881c = urem i32 %v3_10008818, 2
  store i32 %v1_1000881c, i32* %r9.global-to-local, align 4
  %v3_1000881c = icmp eq i32 %v1_1000881c, 0
  br i1 %v3_1000881c, label %dec_label_pc_100087ac, label %dec_label_pc_10008824.preheader

dec_label_pc_10008824.preheader:                  ; preds = %dec_label_pc_10008804
  %v0_10008824.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008824

dec_label_pc_10008824:                            ; preds = %dec_label_pc_10008824.preheader, %dec_label_pc_10008890
  %v0_10009310 = phi i32 [ %v0_10008824.pre, %dec_label_pc_10008824.preheader ], [ %v0_100088a8, %dec_label_pc_10008890 ]
  %v1_10008824 = add i32 %v0_10009310, 12
  %v2_10008824 = inttoptr i32 %v1_10008824 to i32*
  %v3_10008824 = load i32, i32* %v2_10008824, align 4
  store i32 %v3_10008824, i32* %r10.global-to-local, align 4
  %v1_10008828 = icmp slt i32 %v3_10008824, 0
  %v3_10008828 = icmp eq i32 %v3_10008824, 0
  store i1 %v1_10008828, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008828, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008828, label %dec_label_pc_100087ac, label %dec_label_pc_10008830

dec_label_pc_10008830:                            ; preds = %dec_label_pc_10008824
  %v1_10008830 = add i32 %v0_10009310, 24
  %v2_10008830 = inttoptr i32 %v1_10008830 to i32*
  %v3_10008830 = load i32, i32* %v2_10008830, align 4
  store i32 %v3_10008830, i32* %r0.global-to-local, align 4
  %v1_10008834 = add i32 %v0_10009310, 28
  store i32 %v1_10008834, i32* %r24.global-to-local, align 4
  %v1_10008838 = icmp slt i32 %v3_10008830, 512
  %v3_10008838 = icmp eq i32 %v3_10008830, 512
  store i1 %v1_10008838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008838, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008838, label %dec_label_pc_10009310, label %dec_label_pc_10008840

dec_label_pc_10008840:                            ; preds = %dec_label_pc_10008830, %dec_label_pc_10009310
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10008848 = load i32, i32* %r22.global-to-local, align 4
  %v2_10008848 = inttoptr i32 %v1_10008848 to i32*
  store i32 0, i32* %v2_10008848, align 4
  %v0_1000884c = load i32, i32* @r28, align 4
  %v1_1000884c = add i32 %v0_1000884c, 24
  %v2_1000884c = inttoptr i32 %v1_1000884c to i32*
  %v3_1000884c = load i32, i32* %v2_1000884c, align 4
  %v1_10008850 = add i32 %v0_1000884c, 4
  %v2_10008850 = inttoptr i32 %v1_10008850 to i32*
  %v3_10008850 = load i32, i32* %v2_10008850, align 4
  store i32 %v3_10008850, i32* %r3.global-to-local, align 4
  %v0_10008854 = load i32, i32* %r24.global-to-local, align 4
  %v2_10008854 = add i32 %v0_10008854, %v3_1000884c
  store i32 %v2_10008854, i32* @r29, align 4
  %v1_10008858 = sub i32 512, %v3_1000884c
  store i32 %v2_10008854, i32* %r4.global-to-local, align 4
  store i32 268470372, i32* @lr, align 4
  %v4_10008860 = call i32 @function_1000b43c(i32 %v3_10008850, i32 %v2_10008854, i32 %v1_10008858, i32 16384)
  store i32 %v4_10008860, i32* %r3.global-to-local, align 4
  %tmp115 = icmp slt i32 %v4_10008860, 1
  br i1 %tmp115, label %dec_label_pc_100092ac, label %dec_label_pc_1000886c

dec_label_pc_1000886c:                            ; preds = %dec_label_pc_10008840
  store i32 %v4_10008860, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008878

dec_label_pc_10008878:                            ; preds = %dec_label_pc_10008888, %dec_label_pc_1000886c
  %v0_1000888c42 = phi i32 [ %v1_1000888c, %dec_label_pc_10008888 ], [ %v4_10008860, %dec_label_pc_1000886c ]
  %v1_10008884 = phi i32 [ %v1_10008888, %dec_label_pc_10008888 ], [ 0, %dec_label_pc_1000886c ]
  %v1_10008878 = load i32, i32* @r29, align 4
  %v2_10008878 = add i32 %v1_10008878, %v1_10008884
  %v3_10008878 = inttoptr i32 %v2_10008878 to i8*
  %v4_10008878 = load i8, i8* %v3_10008878, align 1
  %v5_10008878 = zext i8 %v4_10008878 to i32
  store i32 %v5_10008878, i32* %r0.global-to-local, align 4
  %v3_1000887c = icmp eq i8 %v4_10008878, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000887c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000887c, label %dec_label_pc_10008884, label %dec_label_pc_10008888

dec_label_pc_10008884:                            ; preds = %dec_label_pc_10008878
  %v0_10008884 = load i32, i32* %r11.global-to-local, align 4
  %v3_10008884 = trunc i32 %v0_10008884 to i8
  store i8 %v3_10008884, i8* %v3_10008878, align 1
  %v0_10008888.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000888c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008888

dec_label_pc_10008888:                            ; preds = %dec_label_pc_10008878, %dec_label_pc_10008884
  %v0_1000888c = phi i32 [ %v0_1000888c42, %dec_label_pc_10008878 ], [ %v0_1000888c.pre, %dec_label_pc_10008884 ]
  %v0_10008888 = phi i32 [ %v1_10008884, %dec_label_pc_10008878 ], [ %v0_10008888.pre, %dec_label_pc_10008884 ]
  %v1_10008888 = add i32 %v0_10008888, 1
  store i32 %v1_10008888, i32* %r9.global-to-local, align 4
  %v1_1000888c = add i32 %v0_1000888c, -1
  store i32 %v1_1000888c, i32* %ctr.global-to-local, align 4
  %v2_1000888c = icmp eq i32 %v1_1000888c, 0
  br i1 %v2_1000888c, label %dec_label_pc_10008890, label %dec_label_pc_10008878

dec_label_pc_10008890:                            ; preds = %dec_label_pc_10008888, %dec_label_pc_100092b0
  %v0_10008890 = load i32, i32* @r28, align 4
  %v1_10008890 = add i32 %v0_10008890, 24
  %v2_10008890 = inttoptr i32 %v1_10008890 to i32*
  %v3_10008890 = load i32, i32* %v2_10008890, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10008898 = load i32, i32* @global_var_1001e1a8.168, align 4
  store i32 %v3_10008898, i32* %r0.global-to-local, align 4
  %v2_1000889c = add i32 %v3_10008890, %v4_10008860
  store i32 %v2_1000889c, i32* %r4.global-to-local, align 4
  store i32 %v2_1000889c, i32* %v2_10008890, align 4
  %v0_100088a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100088a4 = load i32, i32* @r28, align 4
  %v2_100088a4 = add i32 %v1_100088a4, 8
  %v3_100088a4 = inttoptr i32 %v2_100088a4 to i32*
  store i32 %v0_100088a4, i32* %v3_100088a4, align 4
  %v0_100088a8 = load i32, i32* @r28, align 4
  %v1_100088a8 = add i32 %v0_100088a8, 12
  %v2_100088a8 = inttoptr i32 %v1_100088a8 to i32*
  %v3_100088a8 = load i32, i32* %v2_100088a8, align 4
  store i32 %v3_100088a8, i32* %r10.global-to-local, align 4
  %v1_100088ac = icmp ult i32 %v3_100088a8, 10
  %v2_100088ac = icmp ugt i32 %v3_100088a8, 10
  %v3_100088ac = icmp eq i32 %v3_100088a8, 10
  store i1 %v1_100088ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100088ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100088ac, label %dec_label_pc_10008824, label %dec_label_pc_100088b4

dec_label_pc_100088b4:                            ; preds = %dec_label_pc_10008890
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100088b8 = mul i32 %v3_100088a8, 4
  store i32 %v1_100088b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d4ac.241 to i32), i32* %r11.global-to-local, align 4
  %v2_100088c0 = add i32 %v1_100088b8, ptrtoint (i32* @global_var_1000d4ac.241 to i32)
  %v3_100088c0 = inttoptr i32 %v2_100088c0 to i32*
  %v4_100088c0 = load i32, i32* %v3_100088c0, align 4
  %v2_100088c4 = add i32 %v4_100088c0, ptrtoint (i32* @global_var_1000d4ac.241 to i32)
  store i32 %v2_100088c4, i32* %r9.global-to-local, align 4
  store i32 %v2_100088c4, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100088c4)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_100093d4, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100088e0 = load i32, i32* @r26, align 4
  store i32 %v0_100088e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1896, align 4
  store i32 268470508, i32* @lr, align 4
  %v4_100088e8 = call i32 @function_1000b4b4(i32 %v0_100088e0, i32 %v2_100093d4, i32 1, i32 16384)
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 %v2_100093d0, i32* %r4.global-to-local, align 4
  %v0_100088f8 = load i32, i32* @r26, align 4
  store i32 %v0_100088f8, i32* %r3.global-to-local, align 4
  store i32 268470528, i32* @lr, align 4
  %v4_100088fc = call i32 @function_1000b4b4(i32 %v0_100088f8, i32 %v2_100093d0, i32 4, i32 16384)
  store i32 %v2_100089e8, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_1000890c = load i32, i32* @r26, align 4
  store i32 %v0_1000890c, i32* %r3.global-to-local, align 4
  store i32 268470548, i32* @lr, align 4
  %v4_10008910 = call i32 @function_1000b4b4(i32 %v0_1000890c, i32 %v2_100089e8, i32 2, i32 16384)
  store i32 ptrtoint ([3 x i8]* @global_var_1000d39c.248 to i32), i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008920 = load i32, i32* @r26, align 4
  store i32 %v0_10008920, i32* %r3.global-to-local, align 4
  store i32 268470568, i32* @lr, align 4
  %v5_10008924 = call i32 @function_1000b4b4(i32 %v0_10008920, i32 ptrtoint ([3 x i8]* @global_var_1000d39c.248 to i32), i32 1, i32 16384)
  store i32 319820054, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008934 = load i32, i32* @r26, align 4
  store i32 %v0_10008934, i32* %r3.global-to-local, align 4
  store i32 268470588, i32* @lr, align 4
  %v5_10008938 = call i32 @function_1000b4b4(i32 %v0_10008934, i32 319820054, i32 78, i32 16384)
  store i32 ptrtoint (i8* @global_var_1000d39d.249 to i32), i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008948 = load i32, i32* @r26, align 4
  store i32 %v0_10008948, i32* %r3.global-to-local, align 4
  store i32 268470608, i32* @lr, align 4
  %v5_1000894c = call i32 @function_1000b4b4(i32 %v0_10008948, i32 sext (i8 ptrtoint (i8* @global_var_1000d39d.249 to i8) to i32), i32 1, i32 16384)
  store i32 387186688, i32* %r4.global-to-local, align 4
  %v0_10008958 = load i32, i32* @r26, align 4
  store i32 %v0_10008958, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268470628, i32* @lr, align 4
  %v5_10008960 = call i32 @function_1000b4b4(i32 %v0_10008958, i32 387186688, i32 83, i32 16384)
  %v0_10008964 = load i32, i32* @r26, align 4
  store i32 %v0_10008964, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000896c.251 to i32), i32* @lr, align 4
  %v0_10008968 = call i32 @function_1000a79c()
  store i32 %v0_10008968, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000896c

dec_label_pc_1000896c:                            ; preds = %dec_label_pc_10007c50, %dec_label_pc_100095ac, %dec_label_pc_100088b4
  %v0_10008970 = call i32 @function_1000c00c()
  store i32 %v0_10008970, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008974

dec_label_pc_10008974:                            ; preds = %dec_label_pc_1000835c, %dec_label_pc_1000896c
  %v0_1000840017 = phi i32 [ %v0_10008970, %dec_label_pc_1000896c ], [ %v1_10008324, %dec_label_pc_1000835c ]
  %v0_10008974 = load i32, i32* @r9, align 4
  %v1_10008974 = icmp slt i32 %v0_10008974, 168
  %v3_10008974 = icmp eq i32 %v0_10008974, 168
  store i1 %v1_10008974, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008974, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008974, label %dec_label_pc_10008310.preheader, label %dec_label_pc_10008974.dec_label_pc_100083f4_crit_edge

dec_label_pc_10008974.dec_label_pc_100083f4_crit_edge: ; preds = %dec_label_pc_10008974
  %v0_100083f4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100083f4

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008364
  %v0_10008980 = load i32, i32* @r9, align 4
  %v1_10008980 = icmp ult i32 %v0_10008980, 15
  %v3_10008980 = icmp eq i32 %v0_10008980, 15
  store i1 %v1_10008980, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008980, i1* %cr7_eq.global-to-local, align 1
  %tmp116 = icmp ult i32 %v0_10008980, 16
  br i1 %tmp116, label %dec_label_pc_100083f4, label %dec_label_pc_10008988

dec_label_pc_10008988:                            ; preds = %dec_label_pc_10008980
  %v1_10008988 = icmp ult i32 %v0_10008980, 31
  %v3_10008988 = icmp eq i32 %v0_10008980, 31
  store i1 %v1_10008988, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008988, i1* %cr7_eq.global-to-local, align 1
  %tmp117 = icmp ult i32 %v0_10008980, 32
  br i1 %tmp117, label %dec_label_pc_10008310, label %dec_label_pc_100083f4

dec_label_pc_10008994:                            ; preds = %dec_label_pc_1000836c
  %v0_10008994 = load i32, i32* @r9, align 4
  %v1_10008994 = icmp ult i32 %v0_10008994, 63
  %v3_10008994 = icmp eq i32 %v0_10008994, 63
  store i1 %v1_10008994, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008994, i1* %cr7_eq.global-to-local, align 1
  %tmp118 = icmp ult i32 %v0_10008994, 64
  br i1 %tmp118, label %dec_label_pc_100083f4, label %dec_label_pc_1000899c

dec_label_pc_1000899c:                            ; preds = %dec_label_pc_10008994
  %v1_1000899c = icmp ult i32 %v0_10008994, 126
  %v3_1000899c = icmp eq i32 %v0_10008994, 126
  store i1 %v1_1000899c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000899c, i1* %cr7_eq.global-to-local, align 1
  %tmp119 = icmp ult i32 %v0_10008994, 127
  br i1 %tmp119, label %dec_label_pc_10008310, label %dec_label_pc_100083f4

dec_label_pc_100089a8:                            ; preds = %dec_label_pc_10008374
  %v0_100089a8 = load i32, i32* @r9, align 4
  %v1_100089a8 = icmp slt i32 %v0_100089a8, 255
  %v3_100089a8 = icmp eq i32 %v0_100089a8, 255
  store i1 %v1_100089a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100089a8, label %dec_label_pc_10008310, label %dec_label_pc_100083f4

dec_label_pc_100089b4:                            ; preds = %dec_label_pc_1000837c
  %v0_100089b4 = load i32, i32* @r9, align 4
  %v1_100089b4 = icmp ult i32 %v0_100089b4, 17
  %v3_100089b4 = icmp eq i32 %v0_100089b4, 17
  store i1 %v1_100089b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089b4, i1* %cr7_eq.global-to-local, align 1
  %tmp120 = icmp ult i32 %v0_100089b4, 18
  br i1 %tmp120, label %dec_label_pc_100083f4, label %dec_label_pc_100089bc

dec_label_pc_100089bc:                            ; preds = %dec_label_pc_100089b4
  %v1_100089bc = icmp eq i32 %v0_100089b4, 18
  %v3_100089bc = icmp eq i32 %v0_100089b4, 19
  store i1 %v1_100089bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089bc, i1* %cr7_eq.global-to-local, align 1
  %tmp121 = icmp ult i32 %v0_100089b4, 20
  br i1 %tmp121, label %dec_label_pc_10008310, label %dec_label_pc_100083f4

dec_label_pc_100089d4:                            ; preds = %dec_label_pc_100086c8
  %v1_100089d4 = icmp slt i32 %v3_100086e4, 0
  store i1 %v1_100089d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_100086e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100086e8, label %dec_label_pc_100086b4, label %dec_label_pc_100089dc

dec_label_pc_100089dc:                            ; preds = %dec_label_pc_100089d4
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100086f0

dec_label_pc_100089e4:                            ; preds = %dec_label_pc_10008678
  store i32 %v2_100089e8, i32* %r0.global-to-local, align 4
  %v1_100089ec = call i32 @__asm_rlwinm(i32 %v3_100089e4, i32 29, i32 3, i32 29)
  %v0_100089f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100089f0 = icmp slt i32 %v0_100089f0, %v3_100089e4
  %v4_100089f0 = icmp eq i32 %v0_100089f0, %v3_100089e4
  store i1 %v2_100089f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100089f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100089f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100089f4 = add i32 %v1_100089f4, %v1_100089ec
  store i32 %v2_100089f4, i32* %r11.global-to-local, align 4
  %v1_100089f8 = urem i32 %v3_100089e4, 32
  store i32 %v1_100089f8, i32* %r0.global-to-local, align 4
  %v1_100089fc = add i32 %v2_100089f4, 184
  %v2_100089fc = inttoptr i32 %v1_100089fc to i32*
  %v3_100089fc = load i32, i32* %v2_100089fc, align 4
  %v0_10008a00 = load i32, i32* %r10.global-to-local, align 4
  %v3_10008a00 = shl i32 %v0_10008a00, %v1_100089f8
  store i32 %v3_10008a00, i32* %r0.global-to-local, align 4
  %v2_10008a04 = or i32 %v3_10008a00, %v3_100089fc
  store i32 %v2_10008a04, i32* %r9.global-to-local, align 4
  store i32 %v2_10008a04, i32* %v2_100089fc, align 4
  br i1 %v2_100089f0, label %dec_label_pc_10008a10, label %dec_label_pc_100086b4

dec_label_pc_10008a10:                            ; preds = %dec_label_pc_100089e4
  store i32 %v3_100089e4, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100086b4

dec_label_pc_10008a18:                            ; preds = %dec_label_pc_10008724, %dec_label_pc_10008708
  %v0_10008a18 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008a18 = load i32, i32* @r29, align 4
  %v2_10008a18 = add i32 %v1_10008a18, 12
  %v3_10008a18 = inttoptr i32 %v2_10008a18 to i32*
  store i32 %v0_10008a18, i32* %v3_10008a18, align 4
  %v0_10008a1c = load i32, i32* @r26, align 4
  %v1_10008a1c = trunc i32 %v0_10008a1c to i8
  %v2_10008a1c = load i32, i32* @r29, align 4
  %v3_10008a1c = add i32 %v2_10008a1c, 540
  %v4_10008a1c = inttoptr i32 %v3_10008a1c to i8*
  store i8 %v1_10008a1c, i8* %v4_10008a1c, align 1
  br label %dec_label_pc_100086b4

dec_label_pc_100092ac:                            ; preds = %dec_label_pc_10008840
  %v3_10008864 = icmp eq i32 %v4_10008860, 0
  br i1 %v3_10008864, label %dec_label_pc_100095a0, label %dec_label_pc_100092b0

dec_label_pc_100092b0:                            ; preds = %dec_label_pc_100092ac
  %v1_100092b0 = icmp slt i32 %v4_10008860, -1
  %v3_100092b0 = icmp eq i32 %v4_10008860, -1
  store i1 %v1_100092b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100092b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100092b0, label %dec_label_pc_100092b8, label %dec_label_pc_10008890

dec_label_pc_100092b8:                            ; preds = %dec_label_pc_100092b0
  %v0_100092b8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100092b8 = inttoptr i32 %v0_100092b8 to i32*
  %v2_100092b8 = load i32, i32* %v1_100092b8, align 4
  store i32 %v2_100092b8, i32* %r0.global-to-local, align 4
  %v1_100092bc = icmp slt i32 %v2_100092b8, 11
  %v3_100092bc = icmp eq i32 %v2_100092b8, 11
  store i1 %v1_100092bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100092bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100092bc, label %dec_label_pc_100087ac, label %dec_label_pc_100092c4

dec_label_pc_100092c4:                            ; preds = %dec_label_pc_100092b8, %dec_label_pc_100095a0
  %v0_100092c4 = load i32, i32* @r28, align 4
  %v1_100092c4 = add i32 %v0_100092c4, 4
  %v2_100092c4 = inttoptr i32 %v1_100092c4 to i32*
  %v3_100092c4 = load i32, i32* %v2_100092c4, align 4
  store i32 %v3_100092c4, i32* %r3.global-to-local, align 4
  store i32 268473036, i32* @lr, align 4
  %v0_100092c8 = call i32 @function_1000a79c()
  store i32 %v0_100092c8, i32* %r3.global-to-local, align 4
  %v0_100092cc = load i32, i32* @r28, align 4
  %v1_100092cc = add i32 %v0_100092cc, 540
  %v2_100092cc = inttoptr i32 %v1_100092cc to i8*
  %v3_100092cc = load i8, i8* %v2_100092cc, align 1
  %v4_100092cc = zext i8 %v3_100092cc to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100092d4 = add nuw nsw i32 %v4_100092cc, 1
  store i32 %v1_100092d4, i32* %r9.global-to-local, align 4
  %v2_100092d8 = add i32 %v0_100092cc, 4
  %v3_100092d8 = inttoptr i32 %v2_100092d8 to i32*
  store i32 -1, i32* %v3_100092d8, align 4
  %v0_100092dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100092dc = urem i32 %v0_100092dc, 256
  store i32 %v1_100092dc, i32* %r9.global-to-local, align 4
  %v1_100092e0 = icmp ult i32 %v1_100092dc, 9
  %v3_100092e0 = icmp eq i32 %v1_100092dc, 9
  store i1 %v1_100092e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100092e0, i1* %cr7_eq.global-to-local, align 1
  %v1_100092e4 = trunc i32 %v0_100092dc to i8
  %v2_100092e4 = load i32, i32* @r28, align 4
  %v3_100092e4 = add i32 %v2_100092e4, 540
  %v4_100092e4 = inttoptr i32 %v3_100092e4 to i8*
  store i8 %v1_100092e4, i8* %v4_100092e4, align 1
  %v0_100092e8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100092e8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100092e8 = or i1 %v0_100092e8, %v1_100092e8
  br i1 %v2_100092e8, label %dec_label_pc_100095bc, label %dec_label_pc_100092ec

dec_label_pc_100092ec:                            ; preds = %dec_label_pc_100092c4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100092f4 = load i32, i32* @r28, align 4
  %v2_100092f4 = add i32 %v1_100092f4, 12
  %v3_100092f4 = inttoptr i32 %v2_100092f4 to i32*
  store i32 0, i32* %v3_100092f4, align 4
  %v0_100092f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100092f8 = trunc i32 %v0_100092f8 to i8
  %v2_100092f8 = load i32, i32* @r28, align 4
  %v3_100092f8 = add i32 %v2_100092f8, 540
  %v4_100092f8 = inttoptr i32 %v3_100092f8 to i8*
  store i8 %v1_100092f8, i8* %v4_100092f8, align 1
  br label %dec_label_pc_100087ac

dec_label_pc_10009310:                            ; preds = %dec_label_pc_10008830
  %v1_10009310 = add i32 %v0_10009310, 156
  store i32 %v1_10009310, i32* %r4.global-to-local, align 4
  store i32 %v1_10008834, i32* %r3.global-to-local, align 4
  store i32 268473120, i32* @lr, align 4
  %v3_1000931c = call i32 @function_1000af98(i32 %v1_10008834, i32 %v1_10009310, i32 384)
  store i32 %v3_1000931c, i32* %r3.global-to-local, align 4
  %v0_10009320 = load i32, i32* @r28, align 4
  %v1_10009320 = add i32 %v0_10009320, 24
  %v2_10009320 = inttoptr i32 %v1_10009320 to i32*
  %v3_10009320 = load i32, i32* %v2_10009320, align 4
  store i32 %v3_10009320, i32* %r9.global-to-local, align 4
  %v1_10009324 = add i32 %v3_10009320, -128
  store i32 %v1_10009324, i32* %r4.global-to-local, align 4
  store i32 %v1_10009324, i32* %v2_10009320, align 4
  br label %dec_label_pc_10008840

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100087e4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 %v2_100093d0, i32* %r6.global-to-local, align 4
  store i32 %v2_100093d4, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1896, align 4
  store i32 0, i32* %stack_var_-1904, align 4
  store i32 268473316, i32* @lr, align 4
  %v5_100093e0 = call i32 @function_1000b3d0(i32 1, i32 4, i32 %v2_100093d0, i32 %v2_100093d4, i32 %v1_100087fc)
  store i32 %v5_100093e0, i32* %r3.global-to-local, align 4
  %v3_100093e4 = load i32, i32* %stack_var_-1904, align 4
  store i32 %v3_100093e4, i32* %r0.global-to-local, align 4
  %v2_100093e8 = or i32 %v3_100093e4, %v5_100093e0
  store i32 %v2_100093e8, i32* %r9.global-to-local, align 4
  %v5_100093e8 = icmp eq i32 %v2_100093e8, 0
  br i1 %v5_100093e8, label %dec_label_pc_100093f0, label %dec_label_pc_10009480

dec_label_pc_100093f0:                            ; preds = %dec_label_pc_100093c0
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_100093f4 = load i32, i32* @r28, align 4
  %v2_100093f4 = add i32 %v1_100093f4, 12
  %v3_100093f4 = inttoptr i32 %v2_100093f4 to i32*
  store i32 2, i32* %v3_100093f4, align 4
  %v0_100093f8 = call i32 @function_10006fa8()
  %v3_10009400 = load i16, i16* @global_var_1001e1a4.171, align 2
  %v4_10009400 = zext i16 %v3_10009400 to i32
  store i32 %v4_10009400, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009408 = load i32, i32* @global_var_1001e19c.169, align 4
  store i32 %v3_10009408, i32* %r10.global-to-local, align 4
  %v1_10009410 = icmp slt i32 %v3_10009408, 0
  %v3_10009410 = icmp eq i32 %v3_10009408, 0
  store i1 %v1_10009410, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009410, i1* %cr7_eq.global-to-local, align 1
  %v2_1000940c = urem i32 %v0_100093f8, %v4_10009400
  %v2_10009414 = sub i32 %v0_100093f8, %v2_1000940c
  store i32 %v2_10009414, i32* %r0.global-to-local, align 4
  store i32 %v2_1000940c, i32* %r3.global-to-local, align 4
  %tmp123 = icmp slt i32 %v3_10009408, 1
  br i1 %tmp123, label %dec_label_pc_10009570, label %dec_label_pc_10009424

dec_label_pc_10009424:                            ; preds = %dec_label_pc_100093f0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10009408, i32* %ctr.global-to-local, align 4
  %v3_1000942c = load i32, i32* @global_var_1001e1a0.170, align 4
  store i32 %v3_1000942c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000943c

dec_label_pc_10009434:                            ; preds = %dec_label_pc_1000944c, %dec_label_pc_1000943c
  %v4_100094509 = phi i1 [ %v4_10009450, %dec_label_pc_1000944c ], [ %v4_10009444, %dec_label_pc_1000943c ]
  %v2_100094507 = phi i1 [ %v2_10009450, %dec_label_pc_1000944c ], [ %v2_10009444, %dec_label_pc_1000943c ]
  %v1_10009434 = add i32 %v0_10009434, 16
  store i32 %v1_10009434, i32* %r0.global-to-local, align 4
  %v1_10009438 = add i32 %v0_10009438, -1
  store i32 %v1_10009438, i32* %ctr.global-to-local, align 4
  %v2_10009438 = icmp eq i32 %v1_10009438, 0
  br i1 %v2_10009438, label %dec_label_pc_10009570.loopexit, label %dec_label_pc_1000943c

dec_label_pc_1000943c:                            ; preds = %dec_label_pc_10009434, %dec_label_pc_10009424
  %v0_10009438 = phi i32 [ %v1_10009438, %dec_label_pc_10009434 ], [ %v3_10009408, %dec_label_pc_10009424 ]
  %v0_10009434 = phi i32 [ %v1_10009434, %dec_label_pc_10009434 ], [ %v3_1000942c, %dec_label_pc_10009424 ]
  store i32 %v0_10009434, i32* %r9.global-to-local, align 4
  %v1_10009440 = add i32 %v0_10009434, 8
  %v2_10009440 = inttoptr i32 %v1_10009440 to i16*
  %v3_10009440 = load i16, i16* %v2_10009440, align 2
  %v4_10009440 = zext i16 %v3_10009440 to i32
  store i32 %v4_10009440, i32* %r0.global-to-local, align 4
  %v2_10009444 = icmp ult i32 %v4_10009440, %v2_1000940c
  %v3_10009444 = icmp ugt i32 %v4_10009440, %v2_1000940c
  %v4_10009444 = icmp eq i32 %v4_10009440, %v2_1000940c
  br i1 %v3_10009444, label %dec_label_pc_10009434, label %dec_label_pc_1000944c

dec_label_pc_1000944c:                            ; preds = %dec_label_pc_1000943c
  %v1_1000944c = add i32 %v0_10009434, 10
  %v2_1000944c = inttoptr i32 %v1_1000944c to i16*
  %v3_1000944c = load i16, i16* %v2_1000944c, align 2
  %v4_1000944c = zext i16 %v3_1000944c to i32
  store i32 %v4_1000944c, i32* %r0.global-to-local, align 4
  %v2_10009450 = icmp ult i32 %v4_1000944c, %v2_1000940c
  %v3_10009450 = icmp ugt i32 %v4_1000944c, %v2_1000940c
  %v4_10009450 = icmp eq i32 %v4_1000944c, %v2_1000940c
  br i1 %v3_10009450, label %dec_label_pc_10009458.loopexit, label %dec_label_pc_10009434

dec_label_pc_10009458.loopexit:                   ; preds = %dec_label_pc_1000944c
  store i1 %v2_10009450, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009450, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10009458

dec_label_pc_10009458:                            ; preds = %dec_label_pc_10009458.loopexit, %dec_label_pc_10009570
  %v0_10009460 = phi i32 [ %v0_10009434, %dec_label_pc_10009458.loopexit ], [ 0, %dec_label_pc_10009570 ]
  %v0_10009458 = load i32, i32* @r28, align 4
  %v1_10009458 = add i32 %v0_10009458, 4
  %v2_10009458 = inttoptr i32 %v1_10009458 to i32*
  %v3_10009458 = load i32, i32* %v2_10009458, align 4
  store i32 %v3_10009458, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10009460 = inttoptr i32 %v0_10009458 to i32*
  store i32 %v0_10009460, i32* %v2_10009460, align 4
  %v0_10009464 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009464 = load i32, i32* @r28, align 4
  %v2_10009464 = add i32 %v1_10009464, 24
  %v3_10009464 = inttoptr i32 %v2_10009464 to i32*
  store i32 %v0_10009464, i32* %v3_10009464, align 4
  %v0_10008808.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008804

dec_label_pc_10009480:                            ; preds = %dec_label_pc_100093c0
  %v0_10009480 = load i32, i32* @r28, align 4
  %v1_10009480 = add i32 %v0_10009480, 4
  %v2_10009480 = inttoptr i32 %v1_10009480 to i32*
  %v3_10009480 = load i32, i32* %v2_10009480, align 4
  store i32 %v3_10009480, i32* %r3.global-to-local, align 4
  store i32 268473480, i32* @lr, align 4
  %v0_10009484 = call i32 @function_1000a79c()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10009490 = load i32, i32* @r28, align 4
  %v2_10009490 = add i32 %v1_10009490, 4
  %v3_10009490 = inttoptr i32 %v2_10009490 to i32*
  store i32 -1, i32* %v3_10009490, align 4
  %v0_10009494 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009494 = load i32, i32* @r28, align 4
  %v2_10009494 = add i32 %v1_10009494, 12
  %v3_10009494 = inttoptr i32 %v2_10009494 to i32*
  store i32 %v0_10009494, i32* %v3_10009494, align 4
  %v0_10009498 = load i32, i32* %r29.global-to-local, align 4
  %v1_10009498 = trunc i32 %v0_10009498 to i8
  %v2_10009498 = load i32, i32* @r28, align 4
  %v3_10009498 = add i32 %v2_10009498, 540
  %v4_10009498 = inttoptr i32 %v3_10009498 to i8*
  store i8 %v1_10009498, i8* %v4_10009498, align 1
  br label %dec_label_pc_100087ac

dec_label_pc_10009570.loopexit:                   ; preds = %dec_label_pc_10009434
  store i1 %v2_100094507, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100094509, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10009570

dec_label_pc_10009570:                            ; preds = %dec_label_pc_10009570.loopexit, %dec_label_pc_100093f0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009458

dec_label_pc_100095a0:                            ; preds = %dec_label_pc_100092ac
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100095a4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100095a4 = inttoptr i32 %v1_100095a4 to i32*
  store i32 104, i32* %v2_100095a4, align 4
  br label %dec_label_pc_100092c4

dec_label_pc_100095ac:                            ; preds = %dec_label_pc_10007c7c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100095b0 = load i32, i32* @global_var_1001e1b0.175, align 4
  store i32 %v3_100095b0, i32* %r3.global-to-local, align 4
  store i32 268473784, i32* @lr, align 4
  %v0_100095b4 = call i32 @function_1000a79c()
  store i32 %v0_100095b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000896c

dec_label_pc_100095bc:                            ; preds = %dec_label_pc_100092c4
  %v0_100095bc = load i32, i32* @r28, align 4
  store i32 %v0_100095bc, i32* @r3, align 4
  store i32 268473796, i32* @lr, align 4
  %v0_100095c0 = call i32 @function_1000786c()
  store i32 %v0_100095c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100087ac

; uselistorder directives
  uselistorder i32 %v4_1000944c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10009440, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10009434, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_10009438, { 0, 2, 1 }
  uselistorder i32 %v2_1000940c, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10009408, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_100092dc, { 1, 2, 0 }
  uselistorder i32 %v0_100092dc, { 1, 0 }
  uselistorder i32 %v2_100092b8, { 1, 0, 2 }
  uselistorder i32 %v1_100089f8, { 1, 0 }
  uselistorder i32 %v0_100089b4, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_100089a8, { 1, 2, 0 }
  uselistorder i32 %v0_10008994, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10008980, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10008974, { 1, 2, 0 }
  uselistorder i32 %v1_100088b8, { 1, 0 }
  uselistorder i32 %v3_100088a8, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_100088a8, { 1, 0 }
  uselistorder i32 %v1_1000888c, { 2, 1, 0 }
  uselistorder i32 %v1_10008888, { 1, 0 }
  uselistorder i32 %v1_10008884, { 1, 0 }
  uselistorder i32 %v4_10008860, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v2_10008854, { 1, 0, 2 }
  uselistorder i32 %v3_1000884c, { 1, 0 }
  uselistorder i32 %v1_10008834, { 1, 0, 2 }
  uselistorder i32 %v3_10008830, { 1, 0, 2 }
  uselistorder i32 %v3_10008824, { 1, 0, 2 }
  uselistorder i32 %v0_10009310, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000881c, { 1, 0 }
  uselistorder i32 %v1_10008810, { 1, 0 }
  uselistorder i32 %v1_100087fc, { 2, 1, 0 }
  uselistorder i32 %v1_100087f0, { 1, 0 }
  uselistorder i32 %v0_100087f0, { 1, 0 }
  uselistorder i32 %v3_100087d8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100087c4, { 1, 0 }
  uselistorder i32 %v1_100087b0, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_100093d4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_100093d0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008748, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_1000872c, { 1, 2, 0 }
  uselistorder i32 %v1_10008728, { 1, 0 }
  uselistorder i32 %v3_10008710, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100086fc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10008700, { 2, 1, 0 }
  uselistorder i1 %v3_100086e8, { 2, 0, 1 }
  uselistorder i1 %v1_100086e8, { 1, 0, 2 }
  uselistorder i32 %v3_100086e4, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v2_100086e0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_100086b8, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_10008698, { 1, 0 }
  uselistorder i32 %v3_100089e4, { 5, 0, 4, 3, 6, 2, 1, 7 }
  uselistorder i32 %v2_100089e8, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_10008658, { 1, 0 }
  uselistorder i32 %v1_10008654, { 1, 0 }
  uselistorder i32 %v1_1000863c, { 1, 0 }
  uselistorder i32 %v6_10008614, { 1, 2, 0 }
  uselistorder i32 %v1_100085d8, { 1, 0 }
  uselistorder i32 %v3_100085d0, { 1, 0, 2 }
  uselistorder i32 %v1_100085cc, { 2, 1, 0 }
  uselistorder i32 %v1_100085c8, { 1, 0 }
  uselistorder i32 %v0_100085d0, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100085b0, { 1, 0, 2 }
  uselistorder i32 %v0_10008590, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_10008518, { 1, 0, 2 }
  uselistorder i32 %v2_10008504, { 1, 0, 2 }
  uselistorder i32 %v0_10008504, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008510, { 2, 1, 0 }
  uselistorder i1 %v3_10008544, { 1, 0 }
  uselistorder i32 %v1_10008574, { 1, 0 }
  uselistorder i32 %v1_1000856c, { 1, 0 }
  uselistorder i32 %v1_10008564, { 1, 0 }
  uselistorder i32 %v1_10008584, { 2, 1, 0 }
  uselistorder i32 %v1_1000855c, { 1, 0 }
  uselistorder i32 %v4_1000854c, { 1, 0, 2 }
  uselistorder i32 %v2_100084e0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100084b4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10008440, { 1, 0 }
  uselistorder i32 %v4_10008420, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10008390, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10008340, { 3, 1, 2, 0 }
  uselistorder i32 %v0_1000832c, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 26, 25, 24, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 41, 43, 42, 44, 45 }
  uselistorder i32 %v1_10008314, { 1, 2, 0 }
  uselistorder i32 %v0_10008310, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10008300, { 1, 0 }
  uselistorder i32 %v3_100082d0, { 1, 0, 2 }
  uselistorder i32 %v0_10008280, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10007d10, { 1, 0 }
  uselistorder i32 %v1_10007cd0, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10007cc0, { 1, 0, 2 }
  uselistorder i32 %v3_10007c64, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10007c4c, { 1, 0 }
  uselistorder i32 %v0_10007c48, { 1, 0 }
  uselistorder i32 %v1_10007c44, { 1, 0 }
  uselistorder i32 %v0_10007c34, { 1, 2, 0 }
  uselistorder i32 %v2_10007bf4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10007b58, { 5, 3, 2, 4, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1900, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1892, { 1, 0 }
  uselistorder i32 %tmp60, { 1, 2, 0 }
  uselistorder i8 %tmp59, { 2, 1, 0 }
  uselistorder i16 %tmp58, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 32, 34, 33, 28, 29, 30, 31, 35, 36, 37, 39, 38, 0, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 60, 61, 62, 64, 65 }
  uselistorder i32* %r6.global-to-local, { 7, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r4.global-to-local, { 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 1, 2, 3, 4, 5, 6, 7, 8, 0, 25, 26, 27, 28, 29, 30, 32, 31, 34, 33, 35, 36, 37, 23, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 58, 57, 59, 60, 61, 62, 63, 65, 64, 66, 67, 68, 69, 70, 71, 73, 72, 74, 75, 76, 77, 79, 78, 80, 81, 82, 83, 85, 84, 86, 88, 87, 89, 91, 90, 92, 93, 94, 96, 95, 97, 98, 99, 100, 101, 102, 104, 103, 105, 106, 108, 107, 109, 110, 111, 112, 114, 113, 116, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 25, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 38, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 35, 36, 37, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 0, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 30, 31, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 31, 32, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i16* @global_var_1001e1a4.171, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000b3d0, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000b4b4, { 7, 6, 5, 4, 3, 2, 1, 10, 14, 13, 12, 11, 9, 8, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000b43c, { 5, 10, 9, 8, 7, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000aa64, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_1000786c, { 2, 1, 0 }
  uselistorder i32 39, { 4, 5, 0, 6, 1, 7, 2, 8, 3, 9 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000b474, { 1, 0, 3, 2 }
  uselistorder i8 6, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000b4ec, { 2, 8, 7, 0, 6, 5, 4, 3, 1 }
  uselistorder i32 16384, { 26, 36, 9, 37, 8, 38, 7, 39, 6, 40, 0, 41, 1, 42, 2, 54, 3, 55, 4, 56, 5, 57, 10, 27, 30, 31, 29, 32, 33, 34, 28, 11, 43, 12, 44, 45, 46, 13, 15, 14, 16, 47, 17, 48, 19, 49, 18, 20, 50, 51, 21, 52, 53, 35, 22, 23, 24, 25 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10005710, { 2, 8, 7, 0, 6, 5, 4, 3, 1 }
  uselistorder i32 (i32, i32)* @function_100056ac, { 3, 10, 9, 0, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 198, { 1, 0, 2, 3 }
  uselistorder i32 172, { 1, 0, 4, 5, 6, 7, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @function_10007958, { 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @r24, { 6, 7, 8, 9, 1, 3, 4, 2, 5, 0, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i16* @global_var_1001e252.185, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0 }
  uselistorder i8 64, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 65536, { 1, 0, 68, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 17, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 ()* @function_10006fa8, { 21, 20, 19, 18, 17, 16, 66, 69, 68, 67, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 6, 5, 4, 3, 2, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 15, 14, 13, 12, 11, 10, 9, 8, 7, 22, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000b52c, { 2, 10, 9, 8, 1, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 544, { 0, 1, 5, 6, 2, 7, 3, 4, 8 }
  uselistorder i32 ()* @function_1000ab6c, { 6, 5, 4, 11, 10, 9, 8, 7, 3, 0, 2, 1 }
  uselistorder i32 (i32)* @function_1000a214, { 0, 2, 3, 1 }
  uselistorder i32 ()* @function_1000a7e4, { 2, 4, 3, 1, 0 }
  uselistorder i32* @r18, { 2, 3, 4, 5, 6, 0, 1, 7 }
  uselistorder label %dec_label_pc_10009458, { 1, 0 }
  uselistorder label %dec_label_pc_100092c4, { 1, 0 }
  uselistorder label %dec_label_pc_10008974, { 1, 0 }
  uselistorder label %dec_label_pc_1000896c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008890, { 1, 0 }
  uselistorder label %dec_label_pc_10008888, { 1, 0 }
  uselistorder label %dec_label_pc_10008840, { 1, 0 }
  uselistorder label %dec_label_pc_10008824, { 1, 0 }
  uselistorder label %dec_label_pc_10008804, { 1, 0 }
  uselistorder label %dec_label_pc_100087ac, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008778, { 1, 0 }
  uselistorder label %dec_label_pc_100086f0, { 1, 0 }
  uselistorder label %dec_label_pc_100086b4, { 3, 4, 0, 2, 5, 1 }
  uselistorder label %dec_label_pc_10008630.dec_label_pc_10008630_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008620, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_10008504, { 1, 0 }
  uselistorder label %dec_label_pc_100084d4, { 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 10 }
  uselistorder label %dec_label_pc_100084c8, { 1, 0 }
  uselistorder label %dec_label_pc_100083f4, { 0, 4, 1, 2, 5, 3, 6, 8, 7 }
  uselistorder label %dec_label_pc_10008310.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10007ccc, { 1, 0 }
}

define i32 @function_100095d8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100095d8:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100095d8 = icmp eq i32* %arg2, null
  %v1_100095e0 = mul i32 %arg1, 8
  store i32 %v1_100095e0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001e28c.272 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_100095d8, label %dec_label_pc_100095f8, label %dec_label_pc_100095f0

dec_label_pc_100095f0:                            ; preds = %dec_label_pc_100095d8
  %v1_100095f0 = add i32 %v1_100095e0, add (i32 ptrtoint (i32* @global_var_1001e28c.272 to i32), i32 4)
  %v2_100095f0 = inttoptr i32 %v1_100095f0 to i16*
  %v3_100095f0 = load i16, i16* %v2_100095f0, align 4
  %v4_100095f0 = zext i16 %v3_100095f0 to i32
  store i32 %v4_100095f0, i32* %arg2, align 4
  %v0_100095f8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_100095f8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100095f8

dec_label_pc_100095f8:                            ; preds = %dec_label_pc_100095d8, %dec_label_pc_100095f0
  %v1_100095f8 = phi i32 [ ptrtoint (i32* @global_var_1001e28c.272 to i32), %dec_label_pc_100095d8 ], [ %v1_100095f8.pre, %dec_label_pc_100095f0 ]
  %v0_100095f8 = phi i32 [ %v1_100095e0, %dec_label_pc_100095d8 ], [ %v0_100095f8.pre, %dec_label_pc_100095f0 ]
  %v2_100095f8 = add i32 %v0_100095f8, %v1_100095f8
  %v3_100095f8 = inttoptr i32 %v2_100095f8 to i32*
  %v4_100095f8 = load i32, i32* %v3_100095f8, align 4
  store i32 %v4_100095f8, i32* %r3.global-to-local, align 4
  ret i32 %v4_100095f8

; uselistorder directives
  uselistorder i32 %v1_100095e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100095f8, { 1, 0 }
}

define i32 @function_10009600(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009600:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10009604 = mul i32 %arg1, 8
  %v2_1000960c = add i32 %v1_10009604, ptrtoint (i32* @global_var_1001e28c.272 to i32)
  %v1_10009614 = add i32 %v1_10009604, add (i32 ptrtoint (i32* @global_var_1001e28c.272 to i32), i32 4)
  %v2_10009614 = inttoptr i32 %v1_10009614 to i16*
  %v3_10009614 = load i16, i16* %v2_10009614, align 4
  %v3_10009618 = icmp eq i16 %v3_10009614, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009618, i1* %cr7_eq.global-to-local, align 1
  %v3_1000961c = load i32, i32* @global_var_1001e16c.273, align 4
  %v1_10009620 = udiv i32 %v3_1000961c, 16777216
  store i32 %v1_10009620, i32* @r5, align 4
  %v1_10009624 = urem i32 %v3_1000961c, 256
  store i32 %v1_10009624, i32* %r6.global-to-local, align 4
  %v1_10009628 = call i32 @__asm_rlwinm(i32 %v3_1000961c, i32 24, i32 24, i32 31)
  %v1_1000962c = call i32 @__asm_rlwinm(i32 %v3_1000961c, i32 16, i32 24, i32 31)
  %v0_10009630 = load i32, i32* @lr, align 4
  %v1_10009630 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10009630 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10009630 = or i1 %v1_10009630, %v2_10009630
  call void @__pseudo_cond_branch(i1 %v3_10009630, i32 %v0_10009630)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10009638 = inttoptr i32 %v2_1000960c to i32*
  br label %dec_label_pc_10009638

dec_label_pc_10009638:                            ; preds = %dec_label_pc_10009638, %dec_label_pc_10009600
  %v1_10009644 = phi i32 [ %v1_10009678, %dec_label_pc_10009638 ], [ 0, %dec_label_pc_10009600 ]
  %v2_10009638 = load i32, i32* %v1_10009638, align 4
  %v2_1000963c = add i32 %v2_10009638, %v1_10009644
  %v3_1000963c = inttoptr i32 %v2_1000963c to i8*
  %v4_1000963c = load i8, i8* %v3_1000963c, align 1
  %v5_1000963c = zext i8 %v4_1000963c to i32
  %v0_10009640 = load i32, i32* %r6.global-to-local, align 4
  %v2_10009640 = xor i32 %v0_10009640, %v5_1000963c
  %v3_10009644 = trunc i32 %v2_10009640 to i8
  store i8 %v3_10009644, i8* %v3_1000963c, align 1
  %v2_10009648 = load i32, i32* %v1_10009638, align 4
  %v0_1000964c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000964c = add i32 %v0_1000964c, %v2_10009648
  %v3_1000964c = inttoptr i32 %v2_1000964c to i8*
  %v4_1000964c = load i8, i8* %v3_1000964c, align 1
  %v5_1000964c = zext i8 %v4_1000964c to i32
  %v2_10009650 = xor i32 %v5_1000964c, %v1_10009628
  %v3_10009654 = trunc i32 %v2_10009650 to i8
  store i8 %v3_10009654, i8* %v3_1000964c, align 1
  %v2_10009658 = load i32, i32* %v1_10009638, align 4
  %v0_1000965c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000965c = add i32 %v0_1000965c, %v2_10009658
  %v3_1000965c = inttoptr i32 %v2_1000965c to i8*
  %v4_1000965c = load i8, i8* %v3_1000965c, align 1
  %v5_1000965c = zext i8 %v4_1000965c to i32
  %v2_10009660 = xor i32 %v5_1000965c, %v1_1000962c
  %v3_10009664 = trunc i32 %v2_10009660 to i8
  store i8 %v3_10009664, i8* %v3_1000965c, align 1
  %v2_10009668 = load i32, i32* %v1_10009638, align 4
  %v0_1000966c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000966c = add i32 %v0_1000966c, %v2_10009668
  %v3_1000966c = inttoptr i32 %v2_1000966c to i8*
  %v4_1000966c = load i8, i8* %v3_1000966c, align 1
  %v5_1000966c = zext i8 %v4_1000966c to i32
  %v0_10009670 = load i32, i32* @r5, align 4
  %v2_10009670 = xor i32 %v0_10009670, %v5_1000966c
  %v3_10009674 = trunc i32 %v2_10009670 to i8
  store i8 %v3_10009674, i8* %v3_1000966c, align 1
  %v0_10009678 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009678 = add i32 %v0_10009678, 1
  store i32 %v1_10009678, i32* %r10.global-to-local, align 4
  %v3_1000967c = load i16, i16* %v2_10009614, align 4
  %v4_1000967c = zext i16 %v3_1000967c to i32
  %v2_10009680 = icmp slt i32 %v4_1000967c, %v1_10009678
  %v3_10009680 = icmp sgt i32 %v4_1000967c, %v1_10009678
  %v4_10009680 = icmp eq i32 %v4_1000967c, %v1_10009678
  store i1 %v2_10009680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009680, label %dec_label_pc_10009638, label %dec_label_pc_10009688

dec_label_pc_10009688:                            ; preds = %dec_label_pc_10009638
  ret i32 %v2_1000960c

; uselistorder directives
  uselistorder i32 %v4_1000967c, { 2, 1, 0 }
  uselistorder i32 %v1_10009678, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000961c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10009604, { 1, 0 }
}

define i32 @function_1000968c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000968c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10009690 = mul i32 %arg1, 8
  %v2_10009698 = add i32 %v1_10009690, ptrtoint (i32* @global_var_1001e28c.272 to i32)
  %v1_100096a0 = add i32 %v1_10009690, add (i32 ptrtoint (i32* @global_var_1001e28c.272 to i32), i32 4)
  %v2_100096a0 = inttoptr i32 %v1_100096a0 to i16*
  %v3_100096a0 = load i16, i16* %v2_100096a0, align 4
  %v3_100096a4 = icmp eq i16 %v3_100096a0, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100096a4, i1* %cr7_eq.global-to-local, align 1
  %v3_100096a8 = load i32, i32* @global_var_1001e16c.273, align 4
  %v1_100096ac = udiv i32 %v3_100096a8, 16777216
  store i32 %v1_100096ac, i32* @r5, align 4
  %v1_100096b0 = urem i32 %v3_100096a8, 256
  store i32 %v1_100096b0, i32* %r6.global-to-local, align 4
  %v1_100096b4 = call i32 @__asm_rlwinm(i32 %v3_100096a8, i32 24, i32 24, i32 31)
  %v1_100096b8 = call i32 @__asm_rlwinm(i32 %v3_100096a8, i32 16, i32 24, i32 31)
  %v0_100096bc = load i32, i32* @lr, align 4
  %v1_100096bc = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_100096bc = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_100096bc = or i1 %v1_100096bc, %v2_100096bc
  call void @__pseudo_cond_branch(i1 %v3_100096bc, i32 %v0_100096bc)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100096c4 = inttoptr i32 %v2_10009698 to i32*
  br label %dec_label_pc_100096c4

dec_label_pc_100096c4:                            ; preds = %dec_label_pc_100096c4, %dec_label_pc_1000968c
  %v1_100096d0 = phi i32 [ %v1_10009704, %dec_label_pc_100096c4 ], [ 0, %dec_label_pc_1000968c ]
  %v2_100096c4 = load i32, i32* %v1_100096c4, align 4
  %v2_100096c8 = add i32 %v2_100096c4, %v1_100096d0
  %v3_100096c8 = inttoptr i32 %v2_100096c8 to i8*
  %v4_100096c8 = load i8, i8* %v3_100096c8, align 1
  %v5_100096c8 = zext i8 %v4_100096c8 to i32
  %v0_100096cc = load i32, i32* %r6.global-to-local, align 4
  %v2_100096cc = xor i32 %v0_100096cc, %v5_100096c8
  %v3_100096d0 = trunc i32 %v2_100096cc to i8
  store i8 %v3_100096d0, i8* %v3_100096c8, align 1
  %v2_100096d4 = load i32, i32* %v1_100096c4, align 4
  %v0_100096d8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100096d8 = add i32 %v0_100096d8, %v2_100096d4
  %v3_100096d8 = inttoptr i32 %v2_100096d8 to i8*
  %v4_100096d8 = load i8, i8* %v3_100096d8, align 1
  %v5_100096d8 = zext i8 %v4_100096d8 to i32
  %v2_100096dc = xor i32 %v5_100096d8, %v1_100096b4
  %v3_100096e0 = trunc i32 %v2_100096dc to i8
  store i8 %v3_100096e0, i8* %v3_100096d8, align 1
  %v2_100096e4 = load i32, i32* %v1_100096c4, align 4
  %v0_100096e8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100096e8 = add i32 %v0_100096e8, %v2_100096e4
  %v3_100096e8 = inttoptr i32 %v2_100096e8 to i8*
  %v4_100096e8 = load i8, i8* %v3_100096e8, align 1
  %v5_100096e8 = zext i8 %v4_100096e8 to i32
  %v2_100096ec = xor i32 %v5_100096e8, %v1_100096b8
  %v3_100096f0 = trunc i32 %v2_100096ec to i8
  store i8 %v3_100096f0, i8* %v3_100096e8, align 1
  %v2_100096f4 = load i32, i32* %v1_100096c4, align 4
  %v0_100096f8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100096f8 = add i32 %v0_100096f8, %v2_100096f4
  %v3_100096f8 = inttoptr i32 %v2_100096f8 to i8*
  %v4_100096f8 = load i8, i8* %v3_100096f8, align 1
  %v5_100096f8 = zext i8 %v4_100096f8 to i32
  %v0_100096fc = load i32, i32* @r5, align 4
  %v2_100096fc = xor i32 %v0_100096fc, %v5_100096f8
  %v3_10009700 = trunc i32 %v2_100096fc to i8
  store i8 %v3_10009700, i8* %v3_100096f8, align 1
  %v0_10009704 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009704 = add i32 %v0_10009704, 1
  store i32 %v1_10009704, i32* %r10.global-to-local, align 4
  %v3_10009708 = load i16, i16* %v2_100096a0, align 4
  %v4_10009708 = zext i16 %v3_10009708 to i32
  %v2_1000970c = icmp slt i32 %v4_10009708, %v1_10009704
  %v3_1000970c = icmp sgt i32 %v4_10009708, %v1_10009704
  %v4_1000970c = icmp eq i32 %v4_10009708, %v1_10009704
  store i1 %v2_1000970c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000970c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000970c, label %dec_label_pc_100096c4, label %dec_label_pc_10009714

dec_label_pc_10009714:                            ; preds = %dec_label_pc_100096c4
  ret i32 %v2_10009698

; uselistorder directives
  uselistorder i32 %v4_10009708, { 2, 1, 0 }
  uselistorder i32 %v1_10009704, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_100096a8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10009690, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001e28c.272 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001e28c.272 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10009718(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009718:
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 20, i32* @r3, align 4
  store i32 23, i32* %r20.global-to-local, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 16, i32* %r22.global-to-local, align 4
  store i32 11, i32* %r23.global-to-local, align 4
  store i32 9, i32* %r24.global-to-local, align 4
  store i32 8, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268474228, i32* @lr, align 4
  %v0_10009770 = call i32 @function_1000b79c()
  store i32 %v0_10009770, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009790.275 to i32), i32* @lr, align 4
  %v4_1000978c = call i32 @function_10009f94(i32 ptrtoint ([21 x i8]* @global_var_1000d4e8.274 to i32), i32 20, i32 20)
  store i32 2, i32* @r3, align 4
  store i16 20, i16* bitcast (i32* @global_var_1001e2a8.276 to i16*), align 4
  %v0_1000979c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000979c, i32* @global_var_1001e2a4.277, align 4
  store i32 268474276, i32* @lr, align 4
  %v0_100097a0 = call i32 @function_1000b79c()
  store i32 %v0_100097a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100097b8.279 to i32), i32* @lr, align 4
  %v4_100097b4 = call i32 @function_10009f94(i32 ptrtoint ([3 x i8]* @global_var_1000d500.278 to i32), i32 2, i32 2)
  store i32 23, i32* @r3, align 4
  %v0_100097bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100097bc, i32* @global_var_1001e2ac.280, align 4
  %v0_100097c0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100097c0 = trunc i32 %v0_100097c0 to i16
  store i16 %v1_100097c0, i16* bitcast (i32* @global_var_1001e2b0.281 to i16*), align 4
  store i32 268474312, i32* @lr, align 4
  %v0_100097c4 = call i32 @function_1000b79c()
  store i32 %v0_100097c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100097dc.283 to i32), i32* @lr, align 4
  %v4_100097d8 = call i32 @function_10009f94(i32 ptrtoint ([24 x i8]* @global_var_1000d504.282 to i32), i32 23, i32 23)
  store i32 2, i32* @r3, align 4
  %v0_100097e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100097e0, i32* @global_var_1001e31c.284, align 4
  %v0_100097e4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100097e4 = trunc i32 %v0_100097e4 to i16
  store i16 %v1_100097e4, i16* bitcast (i32* @global_var_1001e320.285 to i16*), align 4
  store i32 268474348, i32* @lr, align 4
  %v0_100097e8 = call i32 @function_1000b79c()
  store i32 %v0_100097e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009800.287 to i32), i32* @lr, align 4
  %v3_100097fc = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d51c.286 to i32), i32 2, i32 2)
  store i32 15, i32* @r3, align 4
  %v0_10009804 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009804, i32* @global_var_1001e324.288, align 4
  %v0_10009808 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009808 = trunc i32 %v0_10009808 to i16
  store i16 %v1_10009808, i16* bitcast (i32* @global_var_1001e328.289 to i16*), align 4
  store i32 268474384, i32* @lr, align 4
  %v0_1000980c = call i32 @function_1000b79c()
  store i32 %v0_1000980c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009824.291 to i32), i32* @lr, align 4
  %v3_10009820 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d520.290 to i32), i32 15, i32 15)
  store i32 29, i32* @r3, align 4
  store i16 15, i16* bitcast (i32* @global_var_1001e2a0.292 to i16*), align 4
  %v0_10009830 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009830, i32* @global_var_1001e29c.293, align 4
  store i32 268474424, i32* @lr, align 4
  %v0_10009834 = call i32 @function_1000b79c()
  store i32 %v0_10009834, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000984c.295 to i32), i32* @lr, align 4
  %v3_10009848 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d530.294 to i32), i32 29, i32 29)
  store i32 7, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001e2b8.296 to i16*), align 4
  %v0_10009858 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009858, i32* @global_var_1001e2b4.297, align 4
  store i32 268474464, i32* @lr, align 4
  %v0_1000985c = call i32 @function_1000b79c()
  store i32 7, i32* %r27.global-to-local, align 4
  store i32 %v0_1000985c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009878.299 to i32), i32* @lr, align 4
  %v4_10009874 = call i32 @function_10009f94(i32 ptrtoint ([8 x i8]* @global_var_1000d550.298 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_1000987c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000987c, i32* @global_var_1001e2bc.300, align 4
  %v0_10009880 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009880 = trunc i32 %v0_10009880 to i16
  store i16 %v1_10009880, i16* bitcast (i32* @global_var_1001e2c0.301 to i16*), align 4
  store i32 268474504, i32* @lr, align 4
  %v0_10009884 = call i32 @function_1000b79c()
  store i32 %v0_10009884, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000989c.303 to i32), i32* @lr, align 4
  %v4_10009898 = call i32 @function_10009f94(i32 ptrtoint ([6 x i8]* @global_var_1000d558.302 to i32), i32 5, i32 5)
  store i32 11, i32* @r3, align 4
  store i16 5, i16* bitcast (i32* @global_var_1001e2c8.304 to i16*), align 4
  %v0_100098a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100098a8, i32* @global_var_1001e2c4.305, align 4
  store i32 268474544, i32* @lr, align 4
  %v0_100098ac = call i32 @function_1000b79c()
  store i32 %v0_100098ac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100098c4.307 to i32), i32* @lr, align 4
  %v3_100098c0 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d560.306 to i32), i32 11, i32 11)
  store i32 4, i32* @r3, align 4
  %v0_100098c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100098c8, i32* @global_var_1001e2cc.308, align 4
  %v0_100098cc = load i32, i32* %r23.global-to-local, align 4
  %v1_100098cc = trunc i32 %v0_100098cc to i16
  store i16 %v1_100098cc, i16* bitcast (i32* @global_var_1001e2d0.309 to i16*), align 4
  store i32 268474580, i32* @lr, align 4
  %v0_100098d0 = call i32 @function_1000b79c()
  store i32 %v0_100098d0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100098e8.311 to i32), i32* @lr, align 4
  %v4_100098e4 = call i32 @function_10009f94(i32 ptrtoint ([5 x i8]* @global_var_1000d56c.310 to i32), i32 4, i32 4)
  store i32 7, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001e2d8.312 to i16*), align 4
  %v0_100098f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100098f4, i32* @global_var_1001e2d4.313, align 4
  store i32 268474620, i32* @lr, align 4
  %v0_100098f8 = call i32 @function_1000b79c()
  store i32 %v0_100098f8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009910.315 to i32), i32* @lr, align 4
  %v4_1000990c = call i32 @function_10009f94(i32 ptrtoint ([8 x i8]* @global_var_1000d574.314 to i32), i32 7, i32 7)
  store i32 8, i32* @r3, align 4
  %v0_10009914 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009914, i32* @global_var_1001e2dc.316, align 4
  %v0_10009918 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009918 = trunc i32 %v0_10009918 to i16
  store i16 %v1_10009918, i16* bitcast (i32* @global_var_1001e2e0.317 to i16*), align 4
  store i32 268474656, i32* @lr, align 4
  %v0_1000991c = call i32 @function_1000b79c()
  store i32 %v0_1000991c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009934.319 to i32), i32* @lr, align 4
  %v4_10009930 = call i32 @function_10009f94(i32 ptrtoint ([9 x i8]* @global_var_1000d57c.318 to i32), i32 8, i32 8)
  store i32 13, i32* @r3, align 4
  %v0_10009938 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009938, i32* @global_var_1001e2e4.320, align 4
  %v0_1000993c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000993c = trunc i32 %v0_1000993c to i16
  store i16 %v1_1000993c, i16* bitcast (i32* @global_var_1001e2e8.321 to i16*), align 4
  store i32 268474692, i32* @lr, align 4
  %v0_10009940 = call i32 @function_1000b79c()
  store i32 %v0_10009940, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009958.323 to i32), i32* @lr, align 4
  %v3_10009954 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d588.322 to i32), i32 13, i32 13)
  store i32 10, i32* @r3, align 4
  store i16 13, i16* bitcast (i32* @global_var_1001e2f0.324 to i16*), align 4
  %v0_10009964 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009964, i32* @global_var_1001e2ec.325, align 4
  store i32 268474732, i32* @lr, align 4
  %v0_10009968 = call i32 @function_1000b79c()
  store i32 %v0_10009968, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009980.327 to i32), i32* @lr, align 4
  %v4_1000997c = call i32 @function_10009f94(i32 ptrtoint ([11 x i8]* @global_var_1000d598.326 to i32), i32 10, i32 10)
  store i32 10, i32* @r3, align 4
  %v0_10009984 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009984, i32* @global_var_1001e2f4.328, align 4
  %v0_10009988 = load i32, i32* %r26.global-to-local, align 4
  %v1_10009988 = trunc i32 %v0_10009988 to i16
  store i16 %v1_10009988, i16* bitcast (i32* @global_var_1001e2f8.329 to i16*), align 4
  store i32 268474768, i32* @lr, align 4
  %v0_1000998c = call i32 @function_1000b79c()
  store i32 %v0_1000998c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100099a4.331 to i32), i32* @lr, align 4
  %v4_100099a0 = call i32 @function_10009f94(i32 ptrtoint ([11 x i8]* @global_var_1000d5a4.330 to i32), i32 10, i32 10)
  store i32 33, i32* @r3, align 4
  %v0_100099a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100099a8, i32* @global_var_1001e2fc.332, align 4
  %v0_100099ac = load i32, i32* %r26.global-to-local, align 4
  %v1_100099ac = trunc i32 %v0_100099ac to i16
  store i16 %v1_100099ac, i16* bitcast (i32* @global_var_1001e300.333 to i16*), align 4
  store i32 268474804, i32* @lr, align 4
  %v0_100099b0 = call i32 @function_1000b79c()
  store i32 %v0_100099b0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100099c8.335 to i32), i32* @lr, align 4
  %v3_100099c4 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d5b0.334 to i32), i32 33, i32 33)
  store i32 8, i32* @r3, align 4
  store i16 33, i16* bitcast (i32* @global_var_1001e308.336 to i16*), align 4
  %v0_100099d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100099d4, i32* @global_var_1001e304.337, align 4
  store i32 268474844, i32* @lr, align 4
  %v0_100099d8 = call i32 @function_1000b79c()
  store i32 %v0_100099d8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100099f0.339 to i32), i32* @lr, align 4
  %v4_100099ec = call i32 @function_10009f94(i32 ptrtoint ([9 x i8]* @global_var_1000d5d4.338 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_100099f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100099f4, i32* @global_var_1001e30c.340, align 4
  %v0_100099f8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100099f8 = trunc i32 %v0_100099f8 to i16
  store i16 %v1_100099f8, i16* bitcast (i32* @global_var_1001e310.341 to i16*), align 4
  store i32 268474880, i32* @lr, align 4
  %v0_100099fc = call i32 @function_1000b79c()
  store i32 %v0_100099fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009a14.343 to i32), i32* @lr, align 4
  %v4_10009a10 = call i32 @function_10009f94(i32 ptrtoint ([12 x i8]* @global_var_1000d5e0.342 to i32), i32 11, i32 11)
  store i32 6, i32* @r3, align 4
  %v0_10009a18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009a18, i32* @global_var_1001e314.344, align 4
  %v0_10009a1c = load i32, i32* %r23.global-to-local, align 4
  %v1_10009a1c = trunc i32 %v0_10009a1c to i16
  store i16 %v1_10009a1c, i16* bitcast (i32* @global_var_1001e318.345 to i16*), align 4
  store i32 268474916, i32* @lr, align 4
  %v0_10009a20 = call i32 @function_1000b79c()
  store i32 %v0_10009a20, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009a38.347 to i32), i32* @lr, align 4
  %v4_10009a34 = call i32 @function_10009f94(i32 ptrtoint ([7 x i8]* @global_var_1000d5ec.346 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  store i16 6, i16* bitcast (i32* @global_var_1001e330.348 to i16*), align 4
  %v0_10009a44 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009a44, i32* @global_var_1001e32c.349, align 4
  store i32 268474956, i32* @lr, align 4
  %v0_10009a48 = call i32 @function_1000b79c()
  store i32 %v0_10009a48, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009a60.351 to i32), i32* @lr, align 4
  %v4_10009a5c = call i32 @function_10009f94(i32 ptrtoint ([8 x i8]* @global_var_1000d5f4.350 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10009a64 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009a64, i32* @global_var_1001e334.352, align 4
  %v0_10009a68 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009a68 = trunc i32 %v0_10009a68 to i16
  store i16 %v1_10009a68, i16* bitcast (i32* @global_var_1001e338.353 to i16*), align 4
  store i32 268474992, i32* @lr, align 4
  %v0_10009a6c = call i32 @function_1000b79c()
  store i32 %v0_10009a6c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009a84.355 to i32), i32* @lr, align 4
  %v4_10009a80 = call i32 @function_10009f94(i32 ptrtoint ([8 x i8]* @global_var_1000d5fc.354 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_10009a88 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009a88, i32* @global_var_1001e33c.356, align 4
  %v0_10009a8c = load i32, i32* %r27.global-to-local, align 4
  %v1_10009a8c = trunc i32 %v0_10009a8c to i16
  store i16 %v1_10009a8c, i16* bitcast (i32* @global_var_1001e340.357 to i16*), align 4
  store i32 268475028, i32* @lr, align 4
  %v0_10009a90 = call i32 @function_1000b79c()
  store i32 %v0_10009a90, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009aa8.359 to i32), i32* @lr, align 4
  %v4_10009aa4 = call i32 @function_10009f94(i32 ptrtoint ([4 x i8]* @global_var_1000d604.358 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001e348.360 to i16*), align 4
  %v0_10009ab4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ab4, i32* @global_var_1001e344.361, align 4
  store i32 268475068, i32* @lr, align 4
  %v0_10009ab8 = call i32 @function_1000b79c()
  store i32 %v0_10009ab8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009ad0.363 to i32), i32* @lr, align 4
  %v3_10009acc = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d608.362 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10009ad4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ad4, i32* @global_var_1001e34c.364, align 4
  store i32 12, i32* %r27.global-to-local, align 4
  %v0_10009adc = load i32, i32* %r21.global-to-local, align 4
  %v1_10009adc = trunc i32 %v0_10009adc to i16
  store i16 %v1_10009adc, i16* bitcast (i32* @global_var_1001e350.365 to i16*), align 4
  store i32 268475108, i32* @lr, align 4
  %v0_10009ae0 = call i32 @function_1000b79c()
  store i32 %v0_10009ae0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009af8.367 to i32), i32* @lr, align 4
  %v3_10009af4 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d61c.366 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001e358.368 to i16*), align 4
  %v0_10009b04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b04, i32* @global_var_1001e354.369, align 4
  store i32 268475148, i32* @lr, align 4
  %v0_10009b08 = call i32 @function_1000b79c()
  store i32 %v0_10009b08, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009b20.371 to i32), i32* @lr, align 4
  %v4_10009b1c = call i32 @function_10009f94(i32 ptrtoint ([10 x i8]* @global_var_1000d638.370 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  %v0_10009b24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b24, i32* @global_var_1001e35c.372, align 4
  %v0_10009b28 = load i32, i32* %r24.global-to-local, align 4
  %v1_10009b28 = trunc i32 %v0_10009b28 to i16
  store i16 %v1_10009b28, i16* bitcast (i32* @global_var_1001e360.373 to i16*), align 4
  store i32 268475184, i32* @lr, align 4
  %v0_10009b2c = call i32 @function_1000b79c()
  store i32 %v0_10009b2c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009b44.375 to i32), i32* @lr, align 4
  %v3_10009b40 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d644.374 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10009b48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b48, i32* @global_var_1001e364.376, align 4
  %v0_10009b4c = load i32, i32* %r22.global-to-local, align 4
  %v1_10009b4c = trunc i32 %v0_10009b4c to i16
  store i16 %v1_10009b4c, i16* bitcast (i32* @global_var_1001e368.377 to i16*), align 4
  store i32 268475220, i32* @lr, align 4
  %v0_10009b50 = call i32 @function_1000b79c()
  store i32 %v0_10009b50, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009b68.379 to i32), i32* @lr, align 4
  %v3_10009b64 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d658.378 to i32), i32 22, i32 22)
  store i32 21, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001e370.380 to i16*), align 4
  %v0_10009b74 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b74, i32* @global_var_1001e36c.381, align 4
  store i32 268475260, i32* @lr, align 4
  %v0_10009b78 = call i32 @function_1000b79c()
  store i32 %v0_10009b78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009b90.383 to i32), i32* @lr, align 4
  %v3_10009b8c = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d670.382 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001e378.384 to i16*), align 4
  %v0_10009b9c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b9c, i32* @global_var_1001e374.385, align 4
  store i32 268475300, i32* @lr, align 4
  %v0_10009ba0 = call i32 @function_1000b79c()
  store i32 %v0_10009ba0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009bb8.387 to i32), i32* @lr, align 4
  %v4_10009bb4 = call i32 @function_10009f94(i32 ptrtoint ([18 x i8]* @global_var_1000d688.386 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001e380.388 to i16*), align 4
  %v0_10009bc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009bc4, i32* @global_var_1001e37c.389, align 4
  store i32 268475340, i32* @lr, align 4
  %v0_10009bc8 = call i32 @function_1000b79c()
  store i32 %v0_10009bc8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009be0.391 to i32), i32* @lr, align 4
  %v3_10009bdc = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d69c.390 to i32), i32 12, i32 12)
  store i32 23, i32* @r3, align 4
  %v0_10009be4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009be4, i32* @global_var_1001e384.392, align 4
  %v0_10009be8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009be8 = trunc i32 %v0_10009be8 to i16
  store i16 %v1_10009be8, i16* bitcast (i32* @global_var_1001e388.393 to i16*), align 4
  store i32 268475376, i32* @lr, align 4
  %v0_10009bec = call i32 @function_1000b79c()
  store i32 %v0_10009bec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009c04.395 to i32), i32* @lr, align 4
  %v3_10009c00 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d6ac.394 to i32), i32 23, i32 23)
  store i32 83, i32* @r3, align 4
  %v0_10009c08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009c08, i32* @global_var_1001e38c.396, align 4
  %v0_10009c0c = load i32, i32* %r20.global-to-local, align 4
  %v1_10009c0c = trunc i32 %v0_10009c0c to i16
  store i16 %v1_10009c0c, i16* bitcast (i32* @global_var_1001e390.397 to i16*), align 4
  store i32 268475412, i32* @lr, align 4
  %v0_10009c10 = call i32 @function_1000b79c()
  store i32 %v0_10009c10, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009c28.399 to i32), i32* @lr, align 4
  %v3_10009c24 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d6c4.398 to i32), i32 83, i32 83)
  store i32 32, i32* @r3, align 4
  store i16 83, i16* bitcast (i32* @global_var_1001e398.400 to i16*), align 4
  %v0_10009c34 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009c34, i32* @global_var_1001e394.401, align 4
  store i32 268475452, i32* @lr, align 4
  %v0_10009c38 = call i32 @function_1000b79c()
  store i32 %v0_10009c38, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009c50.403 to i32), i32* @lr, align 4
  %v3_10009c4c = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d718.402 to i32), i32 32, i32 32)
  store i32 48, i32* @r3, align 4
  store i16 32, i16* bitcast (i32* @global_var_1001e3a0.404 to i16*), align 4
  %v0_10009c5c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009c5c, i32* @global_var_1001e39c.405, align 4
  store i32 268475492, i32* @lr, align 4
  %v0_10009c60 = call i32 @function_1000b79c()
  store i32 %v0_10009c60, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009c78.407 to i32), i32* @lr, align 4
  %v3_10009c74 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d73c.406 to i32), i32 48, i32 48)
  store i32 12, i32* @r3, align 4
  store i16 48, i16* bitcast (i32* @global_var_1001e3a8.408 to i16*), align 4
  %v0_10009c84 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009c84, i32* @global_var_1001e3a4.409, align 4
  store i32 268475532, i32* @lr, align 4
  %v0_10009c88 = call i32 @function_1000b79c()
  store i32 %v0_10009c88, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009ca0.411 to i32), i32* @lr, align 4
  %v3_10009c9c = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d770.410 to i32), i32 12, i32 12)
  store i32 9, i32* @r3, align 4
  %v0_10009ca4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ca4, i32* @global_var_1001e3ac.412, align 4
  %v0_10009ca8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009ca8 = trunc i32 %v0_10009ca8 to i16
  store i16 %v1_10009ca8, i16* bitcast (i32* @global_var_1001e3b0.413 to i16*), align 4
  store i32 268475568, i32* @lr, align 4
  %v0_10009cac = call i32 @function_1000b79c()
  store i32 %v0_10009cac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009cc4.415 to i32), i32* @lr, align 4
  %v3_10009cc0 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d780.414 to i32), i32 9, i32 9)
  store i32 10, i32* @r3, align 4
  %v0_10009cc8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009cc8, i32* @global_var_1001e3b4.416, align 4
  %v0_10009ccc = load i32, i32* %r24.global-to-local, align 4
  %v1_10009ccc = trunc i32 %v0_10009ccc to i16
  store i16 %v1_10009ccc, i16* bitcast (i32* @global_var_1001e3b8.417 to i16*), align 4
  store i32 268475604, i32* @lr, align 4
  %v0_10009cd0 = call i32 @function_1000b79c()
  store i32 %v0_10009cd0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009ce8.419 to i32), i32* @lr, align 4
  %v3_10009ce4 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d78c.418 to i32), i32 10, i32 10)
  store i32 12, i32* @r3, align 4
  %v0_10009cec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009cec, i32* @global_var_1001e3bc.420, align 4
  %v0_10009cf0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10009cf0 = trunc i32 %v0_10009cf0 to i16
  store i16 %v1_10009cf0, i16* bitcast (i32* @global_var_1001e3c0.421 to i16*), align 4
  store i32 268475640, i32* @lr, align 4
  %v0_10009cf4 = call i32 @function_1000b79c()
  store i32 %v0_10009cf4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d0c.423 to i32), i32* @lr, align 4
  %v3_10009d08 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d798.422 to i32), i32 12, i32 12)
  store i32 16, i32* @r3, align 4
  %v0_10009d10 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009d10, i32* @global_var_1001e3c4.424, align 4
  %v0_10009d14 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009d14 = trunc i32 %v0_10009d14 to i16
  store i16 %v1_10009d14, i16* bitcast (i32* @global_var_1001e3c8.425 to i16*), align 4
  store i32 268475676, i32* @lr, align 4
  %v0_10009d18 = call i32 @function_1000b79c()
  store i32 %v0_10009d18, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d30.427 to i32), i32* @lr, align 4
  %v3_10009d2c = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d7a8.426 to i32), i32 16, i32 16)
  store i32 19, i32* @r3, align 4
  %v0_10009d34 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009d34, i32* @global_var_1001e3cc.428, align 4
  %v0_10009d38 = load i32, i32* %r22.global-to-local, align 4
  %v1_10009d38 = trunc i32 %v0_10009d38 to i16
  store i16 %v1_10009d38, i16* bitcast (i32* @global_var_1001e3d0.429 to i16*), align 4
  store i32 268475712, i32* @lr, align 4
  %v0_10009d3c = call i32 @function_1000b79c()
  store i32 %v0_10009d3c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d54.431 to i32), i32* @lr, align 4
  %v3_10009d50 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d7bc.430 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10009d58 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009d58, i32* @global_var_1001e3d4.432, align 4
  %v0_10009d5c = load i32, i32* %r21.global-to-local, align 4
  %v1_10009d5c = trunc i32 %v0_10009d5c to i16
  store i16 %v1_10009d5c, i16* bitcast (i32* @global_var_1001e3d8.433 to i16*), align 4
  store i32 268475748, i32* @lr, align 4
  %v0_10009d60 = call i32 @function_1000b79c()
  store i32 %v0_10009d60, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d78.435 to i32), i32* @lr, align 4
  %v4_10009d74 = call i32 @function_10009f94(i32 ptrtoint ([9 x i8]* @global_var_1000d7d0.434 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_10009d7c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009d7c, i32* @global_var_1001e3dc.436, align 4
  %v0_10009d80 = load i32, i32* %r25.global-to-local, align 4
  %v1_10009d80 = trunc i32 %v0_10009d80 to i16
  store i16 %v1_10009d80, i16* bitcast (i32* @global_var_1001e3e0.437 to i16*), align 4
  store i32 268475784, i32* @lr, align 4
  %v0_10009d84 = call i32 @function_1000b79c()
  store i32 %v0_10009d84, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d9c.439 to i32), i32* @lr, align 4
  %v3_10009d98 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d6b8.438 to i32), i32 11, i32 11)
  store i32 12, i32* @r3, align 4
  %v0_10009da0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009da0, i32* @global_var_1001e3e4.440, align 4
  %v0_10009da4 = load i32, i32* %r23.global-to-local, align 4
  %v1_10009da4 = trunc i32 %v0_10009da4 to i16
  store i16 %v1_10009da4, i16* bitcast (i32* @global_var_1001e3e8.441 to i16*), align 4
  store i32 268475820, i32* @lr, align 4
  %v0_10009da8 = call i32 @function_1000b79c()
  store i32 %v0_10009da8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009dc0.443 to i32), i32* @lr, align 4
  %v3_10009dbc = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d7dc.442 to i32), i32 12, i32 12)
  store i32 18, i32* @r3, align 4
  %v0_10009dc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009dc4, i32* @global_var_1001e3ec.444, align 4
  %v0_10009dc8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009dc8 = trunc i32 %v0_10009dc8 to i16
  store i16 %v1_10009dc8, i16* bitcast (i32* @global_var_1001e3f0.445 to i16*), align 4
  store i32 268475856, i32* @lr, align 4
  %v0_10009dcc = call i32 @function_1000b79c()
  store i32 %v0_10009dcc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009de4.447 to i32), i32* @lr, align 4
  %v3_10009de0 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d7ec.446 to i32), i32 18, i32 18)
  store i32 25, i32* @r3, align 4
  store i16 18, i16* bitcast (i32* @global_var_1001e3f8.448 to i16*), align 4
  %v0_10009df0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009df0, i32* @global_var_1001e3f4.449, align 4
  store i32 268475896, i32* @lr, align 4
  %v0_10009df4 = call i32 @function_1000b79c()
  store i32 %v0_10009df4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009e0c.451 to i32), i32* @lr, align 4
  %v3_10009e08 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d800.450 to i32), i32 25, i32 25)
  store i32 111, i32* @r3, align 4
  store i16 25, i16* bitcast (i32* @global_var_1001e400.452 to i16*), align 4
  %v0_10009e18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e18, i32* @global_var_1001e3fc.453, align 4
  store i32 268475936, i32* @lr, align 4
  %v0_10009e1c = call i32 @function_1000b79c()
  store i32 %v0_10009e1c, i32* %r28.global-to-local, align 4
  store i32 111, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009e38.455 to i32), i32* @lr, align 4
  %v3_10009e34 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d81c.454 to i32), i32 111, i32 111)
  store i32 111, i32* @r3, align 4
  %v0_10009e3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e3c, i32* @global_var_1001e404.456, align 4
  store i16 111, i16* bitcast (i32* @global_var_1001e408.457 to i16*), align 4
  store i32 268475976, i32* @lr, align 4
  %v0_10009e44 = call i32 @function_1000b79c()
  store i32 %v0_10009e44, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009e5c.459 to i32), i32* @lr, align 4
  %v3_10009e58 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d88c.458 to i32), i32 111, i32 111)
  store i32 110, i32* @r3, align 4
  %v0_10009e60 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e60, i32* @global_var_1001e40c.460, align 4
  %v0_10009e64 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009e64 = trunc i32 %v0_10009e64 to i16
  store i16 %v1_10009e64, i16* bitcast (i32* @global_var_1001e410.461 to i16*), align 4
  store i32 268476012, i32* @lr, align 4
  %v0_10009e68 = call i32 @function_1000b79c()
  store i32 %v0_10009e68, i32* %r28.global-to-local, align 4
  store i32 110, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009e84.463 to i32), i32* @lr, align 4
  %v3_10009e80 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d8fc.462 to i32), i32 110, i32 110)
  store i32 110, i32* @r3, align 4
  %v0_10009e88 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e88, i32* @global_var_1001e414.464, align 4
  store i16 110, i16* bitcast (i32* @global_var_1001e418.465 to i16*), align 4
  store i32 268476052, i32* @lr, align 4
  %v0_10009e90 = call i32 @function_1000b79c()
  store i32 %v0_10009e90, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009ea8.467 to i32), i32* @lr, align 4
  %v3_10009ea4 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d96c.466 to i32), i32 110, i32 110)
  store i32 117, i32* @r3, align 4
  %v0_10009eac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009eac, i32* @global_var_1001e41c.468, align 4
  %v0_10009eb0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009eb0 = trunc i32 %v0_10009eb0 to i16
  store i16 %v1_10009eb0, i16* bitcast (i32* @global_var_1001e420.469 to i16*), align 4
  store i32 268476088, i32* @lr, align 4
  %v0_10009eb4 = call i32 @function_1000b79c()
  store i32 %v0_10009eb4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009ecc.471 to i32), i32* @lr, align 4
  %v3_10009ec8 = call i32 @function_10009f94(i32 ptrtoint (i32* @global_var_1000d9dc.470 to i32), i32 117, i32 117)
  store i16 117, i16* bitcast (i32* @global_var_1001e428.472 to i16*), align 4
  %v0_10009ed8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ed8, i32* @global_var_1001e424.473, align 4
  ret i32 %v3_10009ec8

; uselistorder directives
  uselistorder i32 110, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 111, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 83, { 1, 2, 3, 0 }
  uselistorder i32 21, { 1, 2, 3, 8, 9, 4, 5, 6, 7, 0 }
  uselistorder i32 33, { 0, 1, 5, 8, 9, 7, 6, 2, 10, 3, 11, 4, 12 }
  uselistorder i32 (i32, i32, i32)* @function_10009f94, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 6, 5, 9, 8, 7, 3, 2, 1, 0, 4 }
}

define i32 @function_10009f10(i8* %arg1) local_unnamed_addr {
dec_label_pc_10009f10:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10009f10 = load i8, i8* %arg1, align 1
  %v3_10009f1c = icmp eq i8 %v3_10009f10, 0
  %v0_10009f20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009f1c, i32 %v0_10009f20)
  br label %dec_label_pc_10009f24

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009f24, %dec_label_pc_10009f10
  %v0_10009f24 = phi i32 [ %v1_10009f24, %dec_label_pc_10009f24 ], [ 0, %dec_label_pc_10009f10 ]
  %v1_10009f24 = add i32 %v0_10009f24, 1
  %v2_10009f28 = add i32 %v1_10009f24, %tmp
  %v3_10009f28 = inttoptr i32 %v2_10009f28 to i8*
  %v4_10009f28 = load i8, i8* %v3_10009f28, align 1
  %v3_10009f2c = icmp eq i8 %v4_10009f28, 0
  br i1 %v3_10009f2c, label %dec_label_pc_10009f34, label %dec_label_pc_10009f24

dec_label_pc_10009f34:                            ; preds = %dec_label_pc_10009f24
  ret i32 %v1_10009f24
}

define i32 @function_10009f38(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009f38:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009f38 = load i8, i8* %arg1, align 1
  %v3_10009f3c = icmp eq i8 %v2_10009f38, 0
  br i1 %v3_10009f3c, label %dec_label_pc_10009f88, label %dec_label_pc_10009f44

dec_label_pc_10009f44:                            ; preds = %dec_label_pc_10009f38
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f48

dec_label_pc_10009f48:                            ; preds = %dec_label_pc_10009f48, %dec_label_pc_10009f44
  %v0_10009f48 = phi i32 [ %v1_10009f48, %dec_label_pc_10009f48 ], [ 0, %dec_label_pc_10009f44 ]
  %v1_10009f48 = add i32 %v0_10009f48, 1
  store i32 %v1_10009f48, i32* %r9.global-to-local, align 4
  %v2_10009f4c = add i32 %v1_10009f48, %tmp
  %v3_10009f4c = inttoptr i32 %v2_10009f4c to i8*
  %v4_10009f4c = load i8, i8* %v3_10009f4c, align 1
  %v3_10009f50 = icmp eq i8 %v4_10009f4c, 0
  br i1 %v3_10009f50, label %dec_label_pc_10009f58, label %dec_label_pc_10009f48

dec_label_pc_10009f58:                            ; preds = %dec_label_pc_10009f48
  %v3_10009f58 = icmp eq i32 %v1_10009f48, -1
  br i1 %v3_10009f58, label %dec_label_pc_10009f80, label %dec_label_pc_10009f60

dec_label_pc_10009f60:                            ; preds = %dec_label_pc_10009f58
  %phitmp = add i32 %v0_10009f48, 2
  br label %dec_label_pc_10009f64

dec_label_pc_10009f64:                            ; preds = %dec_label_pc_10009f88, %dec_label_pc_10009f60
  %v0_10009f64 = phi i32 [ 1, %dec_label_pc_10009f88 ], [ %phitmp, %dec_label_pc_10009f60 ]
  store i32 %v0_10009f64, i32* %ctr.global-to-local, align 4
  %v2_10009f74.pre = load i32, i32* @r3, align 4
  %v2_10009f6c8 = load i8, i8* %arg1, align 1
  %v1_10009f7010 = add i32 %tmp, 1
  store i32 %v1_10009f7010, i32* %r4.global-to-local, align 4
  %v3_10009f7411 = inttoptr i32 %v2_10009f74.pre to i8*
  store i8 %v2_10009f6c8, i8* %v3_10009f7411, align 1
  %v0_10009f7812 = load i32, i32* @r3, align 4
  %v1_10009f7813 = add i32 %v0_10009f7812, 1
  store i32 %v1_10009f7813, i32* %r3.global-to-local, align 4
  %v0_10009f7c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f7c15 = add i32 %v0_10009f7c14, -1
  store i32 %v1_10009f7c15, i32* %ctr.global-to-local, align 4
  %v2_10009f7c16 = icmp eq i32 %v1_10009f7c15, 0
  br i1 %v2_10009f7c16, label %dec_label_pc_10009f80.loopexit, label %dec_label_pc_10009f6c.dec_label_pc_10009f6c_crit_edge

dec_label_pc_10009f6c.dec_label_pc_10009f6c_crit_edge: ; preds = %dec_label_pc_10009f64, %dec_label_pc_10009f6c.dec_label_pc_10009f6c_crit_edge
  %v1_10009f7817 = phi i32 [ %v1_10009f78, %dec_label_pc_10009f6c.dec_label_pc_10009f6c_crit_edge ], [ %v1_10009f7813, %dec_label_pc_10009f64 ]
  %v0_10009f6c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009f6c = inttoptr i32 %v0_10009f6c.pre to i8*
  %v2_10009f6c = load i8, i8* %v1_10009f6c, align 1
  %v1_10009f70 = add i32 %v0_10009f6c.pre, 1
  store i32 %v1_10009f70, i32* %r4.global-to-local, align 4
  %v3_10009f74 = inttoptr i32 %v1_10009f7817 to i8*
  store i8 %v2_10009f6c, i8* %v3_10009f74, align 1
  %v0_10009f78 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009f78 = add i32 %v0_10009f78, 1
  store i32 %v1_10009f78, i32* %r3.global-to-local, align 4
  %v0_10009f7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f7c = add i32 %v0_10009f7c, -1
  store i32 %v1_10009f7c, i32* %ctr.global-to-local, align 4
  %v2_10009f7c = icmp eq i32 %v1_10009f7c, 0
  br i1 %v2_10009f7c, label %dec_label_pc_10009f80.loopexit, label %dec_label_pc_10009f6c.dec_label_pc_10009f6c_crit_edge

dec_label_pc_10009f80.loopexit:                   ; preds = %dec_label_pc_10009f6c.dec_label_pc_10009f6c_crit_edge, %dec_label_pc_10009f64
  %v0_10009f80.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f80

dec_label_pc_10009f80:                            ; preds = %dec_label_pc_10009f80.loopexit, %dec_label_pc_10009f58
  %v0_10009f80 = phi i32 [ %v0_10009f80.pre, %dec_label_pc_10009f80.loopexit ], [ -1, %dec_label_pc_10009f58 ]
  store i32 %v0_10009f80, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009f80

dec_label_pc_10009f88:                            ; preds = %dec_label_pc_10009f38
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f64

; uselistorder directives
  uselistorder i32 %v0_10009f80, { 1, 0 }
  uselistorder i32 %v1_10009f7c, { 1, 0 }
  uselistorder i32 %v1_10009f78, { 1, 0 }
  uselistorder i32 %v1_10009f48, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009f6c.dec_label_pc_10009f6c_crit_edge, { 1, 0 }
}

define i32 @function_10009f94(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009f94:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10009f94 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10009f9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009f94, i32 %v0_10009f9c)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009fa4

dec_label_pc_10009fa4:                            ; preds = %dec_label_pc_10009fa4, %dec_label_pc_10009f94
  %v0_10009fa4 = phi i32 [ %v1_10009fac, %dec_label_pc_10009fa4 ], [ 0, %dec_label_pc_10009f94 ]
  %v2_10009fa4 = add i32 %v0_10009fa4, %arg2
  %v3_10009fa4 = inttoptr i32 %v2_10009fa4 to i8*
  %v4_10009fa4 = load i8, i8* %v3_10009fa4, align 1
  %v4_10009fa8 = add i32 %v0_10009fa4, %arg1
  %v5_10009fa8 = inttoptr i32 %v4_10009fa8 to i8*
  store i8 %v4_10009fa4, i8* %v5_10009fa8, align 1
  %v0_10009fac = load i32, i32* %r9.global-to-local, align 4
  %v1_10009fac = add i32 %v0_10009fac, 1
  store i32 %v1_10009fac, i32* %r9.global-to-local, align 4
  %v0_10009fb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fb0 = add i32 %v0_10009fb0, -1
  store i32 %v1_10009fb0, i32* %ctr.global-to-local, align 4
  %v2_10009fb0 = icmp eq i32 %v1_10009fb0, 0
  br i1 %v2_10009fb0, label %dec_label_pc_10009fb4, label %dec_label_pc_10009fa4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009fa4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009fb0, { 1, 0 }
  uselistorder i32 %v1_10009fac, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10009fb8() local_unnamed_addr {
dec_label_pc_10009fb8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10009fb8 = load i32, i32* @r4, align 4
  store i32 %v0_10009fb8, i32* %r0.global-to-local, align 4
  %v3_10009fb8 = icmp eq i32 %v0_10009fb8, 0
  store i32 %v0_10009fb8, i32* %ctr.global-to-local, align 4
  %v0_10009fc0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009fb8, i32 %v0_10009fc0)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10009fcc3 = load i32, i32* @r3, align 4
  %v5_10009fcc4 = inttoptr i32 %v2_10009fcc3 to i8*
  store i8 0, i8* %v5_10009fcc4, align 1
  %v0_10009fd05 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009fd06 = add i32 %v0_10009fd05, 1
  store i32 %v1_10009fd06, i32* %r9.global-to-local, align 4
  %v0_10009fd47 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fd48 = add i32 %v0_10009fd47, -1
  store i32 %v1_10009fd48, i32* %ctr.global-to-local, align 4
  %v2_10009fd49 = icmp eq i32 %v1_10009fd48, 0
  br i1 %v2_10009fd49, label %dec_label_pc_10009fd8, label %dec_label_pc_10009fcc.dec_label_pc_10009fcc_crit_edge

dec_label_pc_10009fcc.dec_label_pc_10009fcc_crit_edge: ; preds = %dec_label_pc_10009fb8, %dec_label_pc_10009fcc.dec_label_pc_10009fcc_crit_edge
  %v1_10009fd010 = phi i32 [ %v1_10009fd0, %dec_label_pc_10009fcc.dec_label_pc_10009fcc_crit_edge ], [ %v1_10009fd06, %dec_label_pc_10009fb8 ]
  %v0_10009fcc.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10009fcc.pre to i8
  %v2_10009fcc = load i32, i32* @r3, align 4
  %v4_10009fcc = add i32 %v2_10009fcc, %v1_10009fd010
  %v5_10009fcc = inttoptr i32 %v4_10009fcc to i8*
  store i8 %extract.t, i8* %v5_10009fcc, align 1
  %v0_10009fd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009fd0 = add i32 %v0_10009fd0, 1
  store i32 %v1_10009fd0, i32* %r9.global-to-local, align 4
  %v0_10009fd4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fd4 = add i32 %v0_10009fd4, -1
  store i32 %v1_10009fd4, i32* %ctr.global-to-local, align 4
  %v2_10009fd4 = icmp eq i32 %v1_10009fd4, 0
  br i1 %v2_10009fd4, label %dec_label_pc_10009fd8, label %dec_label_pc_10009fcc.dec_label_pc_10009fcc_crit_edge

dec_label_pc_10009fd8:                            ; preds = %dec_label_pc_10009fcc.dec_label_pc_10009fcc_crit_edge, %dec_label_pc_10009fb8
  %v0_10009fd8 = load i32, i32* @r3, align 4
  ret i32 %v0_10009fd8

; uselistorder directives
  uselistorder i32 %v1_10009fd4, { 1, 0 }
  uselistorder i32 %v1_10009fd0, { 1, 0 }
  uselistorder i32 %v0_10009fb8, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009fcc.dec_label_pc_10009fcc_crit_edge, { 1, 0 }
}

define i32 @function_10009fdc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009fdc:
  %v3_10009fdc = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10009fdc, label %dec_label_pc_10009fe8, label %dec_label_pc_10009ff0

dec_label_pc_10009fe8:                            ; preds = %dec_label_pc_1000a00c, %dec_label_pc_10009fdc, %dec_label_pc_10009ff0
  ret i32 -1

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fdc
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10009fe8, label %dec_label_pc_10009ff8

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009ff0
  br label %dec_label_pc_1000a014

dec_label_pc_1000a008:                            ; preds = %dec_label_pc_1000a014
  br label %dec_label_pc_1000a00c

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_1000a02c, %dec_label_pc_1000a008
  %v0_1000a0141 = phi i32 [ %v1_1000a018, %dec_label_pc_1000a02c ], [ 0, %dec_label_pc_1000a008 ]
  %v1_1000a00c = add i32 %v0_1000a030, 1
  %v1_1000a010 = add i32 %v0_1000a010, -1
  %v2_1000a010 = icmp eq i32 %v1_1000a010, 0
  br i1 %v2_1000a010, label %dec_label_pc_10009fe8, label %dec_label_pc_1000a014

dec_label_pc_1000a014:                            ; preds = %dec_label_pc_1000a00c, %dec_label_pc_10009ff8
  %v0_1000a010 = phi i32 [ %v1_1000a010, %dec_label_pc_1000a00c ], [ %arg2, %dec_label_pc_10009ff8 ]
  %v0_1000a030 = phi i32 [ %v1_1000a00c, %dec_label_pc_1000a00c ], [ 0, %dec_label_pc_10009ff8 ]
  %v0_1000a014 = phi i32 [ %v0_1000a0141, %dec_label_pc_1000a00c ], [ 0, %dec_label_pc_10009ff8 ]
  %v2_1000a014 = add i32 %v0_1000a014, %arg3
  %v3_1000a014 = inttoptr i32 %v2_1000a014 to i8*
  %v4_1000a014 = load i8, i8* %v3_1000a014, align 1
  %v1_1000a018 = add i32 %v0_1000a014, 1
  %v2_1000a01c = add i32 %v0_1000a030, %arg1
  %v3_1000a01c = inttoptr i32 %v2_1000a01c to i8*
  %v4_1000a01c = load i8, i8* %v3_1000a01c, align 1
  %v4_1000a024 = icmp eq i8 %v4_1000a01c, %v4_1000a014
  br i1 %v4_1000a024, label %dec_label_pc_1000a02c, label %dec_label_pc_1000a008

dec_label_pc_1000a02c:                            ; preds = %dec_label_pc_1000a014
  %v4_1000a020 = icmp eq i32 %v1_1000a018, %arg4
  br i1 %v4_1000a020, label %dec_label_pc_1000a030, label %dec_label_pc_1000a00c

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a02c
  %v1_1000a030 = add i32 %v0_1000a030, 1
  ret i32 %v1_1000a030

; uselistorder directives
  uselistorder i32 %v0_1000a014, { 1, 0 }
  uselistorder label %dec_label_pc_10009fe8, { 0, 2, 1 }
}

define i32 @function_1000a038(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_1000a038.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a038

dec_label_pc_1000a038:                            ; preds = %dec_label_pc_1000a054, %dec_label_pc_1000a038, %bb
  %v0_1000a038 = phi i32 [ %v0_1000a038.pre, %bb ], [ %v1_1000a03c, %dec_label_pc_1000a038 ], [ %v1_1000a03c, %dec_label_pc_1000a054 ]
  %v1_1000a038 = inttoptr i32 %v0_1000a038 to i8*
  %v2_1000a038 = load i8, i8* %v1_1000a038, align 1
  %v1_1000a03c = add i32 %v0_1000a038, 1
  %v3_1000a048 = icmp eq i8 %v2_1000a038, 32
  br i1 %v3_1000a048, label %dec_label_pc_1000a038, label %dec_label_pc_1000a054

dec_label_pc_1000a054:                            ; preds = %dec_label_pc_1000a038
  %v2_1000a038.off = add i8 %v2_1000a038, -9
  %tmp = icmp ult i8 %v2_1000a038.off, 2
  br i1 %tmp, label %dec_label_pc_1000a038, label %dec_label_pc_1000a060

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a054
  %v3_1000a060 = icmp eq i8 %v2_1000a038, 45
  br i1 %v3_1000a060, label %dec_label_pc_1000a10c, label %dec_label_pc_1000a068

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a060
  %v3_1000a068 = icmp eq i8 %v2_1000a038, 43
  br i1 %v3_1000a068, label %dec_label_pc_1000a164, label %dec_label_pc_1000a070

dec_label_pc_1000a070:                            ; preds = %dec_label_pc_1000a068, %dec_label_pc_1000a164
  %v0_1000a10026 = phi i32 [ %v1_1000a03c, %dec_label_pc_1000a068 ], [ %v1_1000a168, %dec_label_pc_1000a164 ]
  %v0_1000a0905.in = phi i8 [ %v2_1000a038, %dec_label_pc_1000a068 ], [ %v2_1000a164, %dec_label_pc_1000a164 ]
  br label %dec_label_pc_1000a07c

dec_label_pc_1000a07c:                            ; preds = %dec_label_pc_1000a10c, %dec_label_pc_1000a070
  %v0_1000a10025 = phi i32 [ %v1_1000a114, %dec_label_pc_1000a10c ], [ %v0_1000a10026, %dec_label_pc_1000a070 ]
  %v0_1000a0904.in = phi i8 [ %v2_1000a10c, %dec_label_pc_1000a10c ], [ %v0_1000a0905.in, %dec_label_pc_1000a070 ]
  %v0_1000a154 = phi i32 [ 1, %dec_label_pc_1000a10c ], [ 0, %dec_label_pc_1000a070 ]
  %v1_1000a08c = phi i32 [ -2147483648, %dec_label_pc_1000a10c ], [ 2147483647, %dec_label_pc_1000a070 ]
  %v2_1000a07c = udiv i32 %v1_1000a08c, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_1000a088 = mul i32 %v2_1000a07c, %arg1
  %v2_1000a08c = sub i32 %v1_1000a08c, %v2_1000a088
  br label %dec_label_pc_1000a090

dec_label_pc_1000a090:                            ; preds = %dec_label_pc_1000a100, %dec_label_pc_1000a07c
  %v0_1000a100 = phi i32 [ %v1_1000a104, %dec_label_pc_1000a100 ], [ %v0_1000a10025, %dec_label_pc_1000a07c ]
  %v0_1000a0f4 = phi i32 [ %v0_1000a0ec17, %dec_label_pc_1000a100 ], [ 0, %dec_label_pc_1000a07c ]
  %v0_1000a0e4 = phi i32 [ %v0_1000a14411, %dec_label_pc_1000a100 ], [ 0, %dec_label_pc_1000a07c ]
  %v0_1000a0dc = phi i32 [ %v0_1000a1389, %dec_label_pc_1000a100 ], [ 0, %dec_label_pc_1000a07c ]
  %v1_1000a0d0.in = phi i8 [ %v2_1000a100, %dec_label_pc_1000a100 ], [ %v0_1000a0904.in, %dec_label_pc_1000a07c ]
  %v1_1000a0d0 = zext i8 %v1_1000a0d0.in to i32
  %v1_1000a094 = add nsw i32 %v1_1000a0d0, -48
  %fold = add nuw nsw i32 %v1_1000a0d0, 208
  %v1_1000a09c = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_1000a09c, 10
  br i1 %tmp27, label %dec_label_pc_1000a0d4, label %dec_label_pc_1000a0a8

dec_label_pc_1000a0a8:                            ; preds = %dec_label_pc_1000a090
  %v1_1000a0a8 = add nuw nsw i32 %v1_1000a0d0, 191
  %v1_1000a0ac = urem i32 %v1_1000a0a8, 256
  %tmp28 = icmp ult i32 %v1_1000a0ac, 26
  br i1 %tmp28, label %dec_label_pc_1000a0d0, label %dec_label_pc_1000a0bc

dec_label_pc_1000a0bc:                            ; preds = %dec_label_pc_1000a0a8
  %v1_1000a0bc = add nuw nsw i32 %v1_1000a0d0, 159
  %v1_1000a0c0 = urem i32 %v1_1000a0bc, 256
  %v2_1000a0c4 = icmp ugt i32 %v1_1000a0c0, 25
  br i1 %v2_1000a0c4, label %dec_label_pc_1000a138, label %dec_label_pc_1000a0cc

dec_label_pc_1000a0cc:                            ; preds = %dec_label_pc_1000a0bc
  br label %dec_label_pc_1000a0d0

dec_label_pc_1000a0d0:                            ; preds = %dec_label_pc_1000a0a8, %dec_label_pc_1000a0cc
  %v0_1000a0d0 = phi i32 [ 55, %dec_label_pc_1000a0a8 ], [ 87, %dec_label_pc_1000a0cc ]
  %v2_1000a0d0 = sub nsw i32 %v1_1000a0d0, %v0_1000a0d0
  br label %dec_label_pc_1000a0d4

dec_label_pc_1000a0d4:                            ; preds = %dec_label_pc_1000a090, %dec_label_pc_1000a0d0
  %v1_1000a0fc = phi i32 [ %v1_1000a094, %dec_label_pc_1000a090 ], [ %v2_1000a0d0, %dec_label_pc_1000a0d0 ]
  %v2_1000a0d4 = icmp slt i32 %v1_1000a0fc, %arg1
  br i1 %v2_1000a0d4, label %dec_label_pc_1000a0dc, label %dec_label_pc_1000a138

dec_label_pc_1000a0dc:                            ; preds = %dec_label_pc_1000a0d4
  %v1_1000a0dc = icmp slt i32 %v0_1000a0dc, 0
  br i1 %v1_1000a0dc, label %dec_label_pc_1000a120, label %dec_label_pc_1000a0e4

dec_label_pc_1000a0e4:                            ; preds = %dec_label_pc_1000a0dc
  %v3_1000a0e4 = icmp ugt i32 %v0_1000a0e4, %v2_1000a07c
  br i1 %v3_1000a0e4, label %dec_label_pc_1000a120, label %dec_label_pc_1000a0ec

dec_label_pc_1000a0ec:                            ; preds = %dec_label_pc_1000a0e4
  %v4_1000a0ec = icmp eq i32 %v0_1000a0f4, %v2_1000a07c
  br i1 %v4_1000a0ec, label %dec_label_pc_1000a128, label %dec_label_pc_1000a0f4

dec_label_pc_1000a0f4:                            ; preds = %dec_label_pc_1000a128, %dec_label_pc_1000a0ec
  %v2_1000a0f4 = mul i32 %v0_1000a0f4, %arg1
  %v2_1000a0fc = add i32 %v1_1000a0fc, %v2_1000a0f4
  store i32 %v2_1000a0fc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a100

dec_label_pc_1000a100:                            ; preds = %dec_label_pc_1000a128, %dec_label_pc_1000a120, %dec_label_pc_1000a0f4
  %v0_1000a0ec17 = phi i32 [ %v2_1000a07c, %dec_label_pc_1000a128 ], [ %v0_1000a0f4, %dec_label_pc_1000a120 ], [ %v2_1000a0fc, %dec_label_pc_1000a0f4 ]
  %v0_1000a14411 = phi i32 [ %v2_1000a07c, %dec_label_pc_1000a128 ], [ %v0_1000a0e4, %dec_label_pc_1000a120 ], [ %v2_1000a0fc, %dec_label_pc_1000a0f4 ]
  %v0_1000a1389 = phi i32 [ -1, %dec_label_pc_1000a128 ], [ -1, %dec_label_pc_1000a120 ], [ 1, %dec_label_pc_1000a0f4 ]
  %v1_1000a100 = inttoptr i32 %v0_1000a100 to i8*
  %v2_1000a100 = load i8, i8* %v1_1000a100, align 1
  %v1_1000a104 = add i32 %v0_1000a100, 1
  br label %dec_label_pc_1000a090

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a060
  %v1_1000a10c = inttoptr i32 %v1_1000a03c to i8*
  %v2_1000a10c = load i8, i8* %v1_1000a10c, align 1
  %v1_1000a114 = add i32 %v0_1000a038, 2
  br label %dec_label_pc_1000a07c

dec_label_pc_1000a120:                            ; preds = %dec_label_pc_1000a0e4, %dec_label_pc_1000a0dc
  br label %dec_label_pc_1000a100

dec_label_pc_1000a128:                            ; preds = %dec_label_pc_1000a0ec
  %v3_1000a128 = icmp sgt i32 %v1_1000a0fc, %v2_1000a08c
  br i1 %v3_1000a128, label %dec_label_pc_1000a100, label %dec_label_pc_1000a0f4

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a0d4, %dec_label_pc_1000a0bc
  %v1_1000a138 = icmp slt i32 %v0_1000a0dc, 0
  br i1 %v1_1000a138, label %dec_label_pc_1000a154, label %dec_label_pc_1000a140

dec_label_pc_1000a140:                            ; preds = %dec_label_pc_1000a138
  %v3_1000a140 = icmp eq i32 %v0_1000a154, 0
  %v0_1000a148 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a140, i32 %v0_1000a148)
  %v0_1000a14c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a14c = sub i32 0, %v0_1000a14c
  ret i32 %v1_1000a14c

dec_label_pc_1000a154:                            ; preds = %dec_label_pc_1000a138
  %v1_1000a154 = xor i32 %v0_1000a154, 1
  %v2_1000a15c = sub nuw i32 -2147483648, %v1_1000a154
  ret i32 %v2_1000a15c

dec_label_pc_1000a164:                            ; preds = %dec_label_pc_1000a068
  %v1_1000a164 = inttoptr i32 %v1_1000a03c to i8*
  %v2_1000a164 = load i8, i8* %v1_1000a164, align 1
  %v1_1000a168 = add i32 %v0_1000a038, 2
  br label %dec_label_pc_1000a070

; uselistorder directives
  uselistorder i32 %v2_1000a0fc, { 1, 0, 2 }
  uselistorder i32 %v1_1000a0fc, { 1, 0, 2 }
  uselistorder i32 %v1_1000a0d0, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_1000a0f4, { 2, 0, 1 }
  uselistorder i32 %v0_1000a100, { 1, 0 }
  uselistorder i32 %v2_1000a07c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1000a03c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000a038, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 2, { 0, 3, 1, 2 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a0d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a070, { 1, 0 }
}

define i32 @function_1000a170(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a170:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_1000a19c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_1000a1a4

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a1d0.dec_label_pc_1000a1a4_crit_edge, %dec_label_pc_1000a170
  %v0_1000a1a8 = phi i32 [ %v0_1000a1a8.pre, %dec_label_pc_1000a1d0.dec_label_pc_1000a1a4_crit_edge ], [ %arg3, %dec_label_pc_1000a170 ]
  %v0_1000a1a4 = phi i32 [ %v1_1000a1bc, %dec_label_pc_1000a1d0.dec_label_pc_1000a1a4_crit_edge ], [ %tmp, %dec_label_pc_1000a170 ]
  store i32 1, i32* @r5, align 4
  store i32 268476852, i32* @lr, align 4
  %v4_1000a1b0 = call i32 @function_1000a9d4(i32 %v0_1000a1a8, i32 %v0_1000a1a4, i32 1)
  %v0_1000a1b4 = load i32, i32* @r31, align 4
  %v3_1000a1b8 = icmp eq i32 %v4_1000a1b0, 1
  %v1_1000a1bc = add i32 %v0_1000a1b4, 1
  store i32 %v1_1000a1bc, i32* @r31, align 4
  %v0_1000a1c4 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a1b8, label %dec_label_pc_1000a1c4, label %dec_label_pc_1000a1dc

dec_label_pc_1000a1c4:                            ; preds = %dec_label_pc_1000a1a4
  %v1_1000a1c4 = add i32 %v0_1000a1c4, 1
  store i32 %v1_1000a1c4, i32* %r30.global-to-local, align 4
  %v0_1000a1c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000a1c8 = icmp sgt i32 %v0_1000a1c8, %v1_1000a1c4
  br i1 %v3_1000a1c8, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a1dc

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1c4
  %v1_1000a1d0 = inttoptr i32 %v0_1000a1b4 to i8*
  %v2_1000a1d0 = load i8, i8* %v1_1000a1d0, align 1
  %v3_1000a1d4 = icmp eq i8 %v2_1000a1d0, 10
  br i1 %v3_1000a1d4, label %dec_label_pc_1000a1dc, label %dec_label_pc_1000a1d0.dec_label_pc_1000a1a4_crit_edge

dec_label_pc_1000a1d0.dec_label_pc_1000a1a4_crit_edge: ; preds = %dec_label_pc_1000a1d0
  %v0_1000a1a8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a1a4

dec_label_pc_1000a1dc:                            ; preds = %dec_label_pc_1000a1a4, %dec_label_pc_1000a1d0, %dec_label_pc_1000a1c4
  %v1_1000a1e4 = phi i32 [ %v1_1000a1c4, %dec_label_pc_1000a1d0 ], [ %v1_1000a1c4, %dec_label_pc_1000a1c4 ], [ %v0_1000a1c4, %dec_label_pc_1000a1a4 ]
  %tmp12 = icmp slt i32 %v1_1000a1e4, 0
  %v1_1000a1dc = zext i1 %tmp12 to i32
  %v2_1000a1dc = ashr i32 %v1_1000a1e4, 31
  %v3_1000a1dc = and i32 %v2_1000a1dc, -2
  %v4_1000a1dc = or i32 %v3_1000a1dc, %v1_1000a1dc
  %v2_1000a1e4 = xor i32 %v4_1000a1dc, %v1_1000a1e4
  %v2_1000a1ec = sub i32 %v4_1000a1dc, %v2_1000a1e4
  %tmp13 = icmp slt i32 %v2_1000a1ec, 0
  %v1_1000a1f4 = zext i1 %tmp13 to i32
  %v2_1000a1f4 = ashr i32 %v2_1000a1ec, 31
  %v3_1000a1f4 = and i32 %v2_1000a1f4, -2
  %v4_1000a1f4 = or i32 %v3_1000a1f4, %v1_1000a1f4
  %v0_1000a1fc = load i32, i32* %r27.global-to-local, align 4
  %v2_1000a1fc = and i32 %v4_1000a1f4, %v0_1000a1fc
  store i32 %v0_1000a19c, i32* @r31, align 4
  ret i32 %v2_1000a1fc

; uselistorder directives
  uselistorder i32 %v2_1000a1ec, { 1, 0 }
  uselistorder i32 %v4_1000a1dc, { 1, 0 }
  uselistorder i32 %v1_1000a1e4, { 1, 2, 0 }
  uselistorder i32 %v1_1000a1bc, { 1, 0 }
  uselistorder i8 10, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000a9d4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a1dc, { 1, 2, 0 }
}

define i32 @function_1000a214(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a214:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_1000a22c = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_1000a234 = call i32 @function_1000aeb8()
  %v2_1000a240 = inttoptr i32 %v0_1000a234 to i32*
  store i32 0, i32* %v2_1000a240, align 4
  store i32 268477008, i32* @lr, align 4
  %v3_1000a24c = call i32 @function_1000b568(i32 2, i32 2, i32 0)
  store i32 %v3_1000a24c, i32* @r3, align 4
  %v3_1000a254 = icmp eq i32 %v3_1000a24c, -1
  store i32 %v3_1000a24c, i32* @r31, align 4
  br i1 %v3_1000a254, label %dec_label_pc_1000a2a4, label %dec_label_pc_1000a270

dec_label_pc_1000a270:                            ; preds = %dec_label_pc_1000a214
  %v2_1000a220 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268477064, i32* @lr, align 4
  %v0_1000a284 = call i32 @function_1000b368()
  %v2_1000a28c = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a290 = load i32, i32* @r31, align 4
  store i32 268477080, i32* @lr, align 4
  %v3_1000a294 = call i32 @function_1000b39c(i32 %v0_1000a290, i32 %v2_1000a220, i32 %v2_1000a28c)
  store i32 268477088, i32* @lr, align 4
  %v0_1000a29c = call i32 @function_1000a79c()
  br label %dec_label_pc_1000a2a4

dec_label_pc_1000a2a4:                            ; preds = %dec_label_pc_1000a214, %dec_label_pc_1000a270
  %v0_1000a2a4 = phi i32 [ 0, %dec_label_pc_1000a214 ], [ 134744072, %dec_label_pc_1000a270 ]
  store i32 %v0_1000a22c, i32* @r31, align 4
  ret i32 %v0_1000a2a4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_1000b368, { 2, 1, 7, 8, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000b568, { 4, 2, 3, 17, 18, 16, 15, 14, 13, 1, 12, 11, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000a2a4, { 1, 0 }
}

define i32 @function_1000a2c0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a2c0:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_1000a2c0 = load i8, i8* %tmp, align 1
  %v3_1000a2cc = icmp eq i8 %v3_1000a2c0, 0
  br i1 %v3_1000a2cc, label %dec_label_pc_1000a2e4, label %dec_label_pc_1000a2d4

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a2c0, %dec_label_pc_1000a2d4
  %v0_1000a2d4 = phi i32 [ %v1_1000a2d4, %dec_label_pc_1000a2d4 ], [ 0, %dec_label_pc_1000a2c0 ]
  %v1_1000a2d4 = add i32 %v0_1000a2d4, 1
  %v3_1000a2d8 = add i32 %v1_1000a2d4, %arg3
  %v4_1000a2d8 = inttoptr i32 %v3_1000a2d8 to i8*
  %v5_1000a2d8 = load i8, i8* %v4_1000a2d8, align 1
  %v3_1000a2dc = icmp eq i8 %v5_1000a2d8, 0
  br i1 %v3_1000a2dc, label %dec_label_pc_1000a2e4, label %dec_label_pc_1000a2d4

dec_label_pc_1000a2e4:                            ; preds = %dec_label_pc_1000a2d4, %dec_label_pc_1000a2c0
  %v0_1000a31411 = phi i32 [ 0, %dec_label_pc_1000a2c0 ], [ %v1_1000a2d4, %dec_label_pc_1000a2d4 ]
  %v1_1000a2e4 = icmp slt i32 %arg2, 0
  %v1_1000a2e8 = add i32 %arg2, 1
  br i1 %v1_1000a2e4, label %dec_label_pc_1000a360, label %dec_label_pc_1000a2fc

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e4, %dec_label_pc_1000a360, %dec_label_pc_1000a354
  %v2_1000a3088 = phi i32 [ %v1_1000a30c, %dec_label_pc_1000a354 ], [ 0, %dec_label_pc_1000a360 ], [ 0, %dec_label_pc_1000a2e4 ]
  %v0_1000a3006 = phi i32 [ %v1_1000a304, %dec_label_pc_1000a354 ], [ %tmp16, %dec_label_pc_1000a360 ], [ %tmp16, %dec_label_pc_1000a2e4 ]
  %v0_1000a2fc = phi i32 [ %v0_1000a348, %dec_label_pc_1000a354 ], [ 1, %dec_label_pc_1000a360 ], [ %v1_1000a2e8, %dec_label_pc_1000a2e4 ]
  %v1_1000a2fc = add i32 %v0_1000a2fc, -1
  %v2_1000a2fc = icmp eq i32 %v1_1000a2fc, 0
  br i1 %v2_1000a2fc, label %dec_label_pc_1000a34c, label %dec_label_pc_1000a300

dec_label_pc_1000a300:                            ; preds = %dec_label_pc_1000a2fc, %dec_label_pc_1000a344
  %v2_1000a308 = phi i32 [ 0, %dec_label_pc_1000a344 ], [ %v2_1000a3088, %dec_label_pc_1000a2fc ]
  %v0_1000a300 = phi i32 [ %v1_1000a304, %dec_label_pc_1000a344 ], [ %v0_1000a3006, %dec_label_pc_1000a2fc ]
  %v0_1000a348 = phi i32 [ %v1_1000a348, %dec_label_pc_1000a344 ], [ %v1_1000a2fc, %dec_label_pc_1000a2fc ]
  %v1_1000a300 = inttoptr i32 %v0_1000a300 to i8*
  %v2_1000a300 = load i8, i8* %v1_1000a300, align 1
  %v3_1000a300 = zext i8 %v2_1000a300 to i32
  %v1_1000a304 = add i32 %v0_1000a300, 1
  %v3_1000a308 = add i32 %v2_1000a308, %arg3
  %v4_1000a308 = inttoptr i32 %v3_1000a308 to i8*
  %v5_1000a308 = load i8, i8* %v4_1000a308, align 1
  %v6_1000a308 = zext i8 %v5_1000a308 to i32
  %v1_1000a30c = add i32 %v2_1000a308, 1
  %v1_1000a310 = add nuw nsw i32 %v3_1000a300, 191
  %v1_1000a318 = urem i32 %v1_1000a310, 256
  %v2_1000a31c = icmp ugt i32 %v1_1000a318, 25
  %v1_1000a320 = add nuw nsw i32 %v6_1000a308, 191
  %v1_1000a324 = urem i32 %v1_1000a320, 256
  %v2_1000a328 = icmp ugt i32 %v1_1000a324, 25
  br i1 %v2_1000a31c, label %dec_label_pc_1000a334, label %dec_label_pc_1000a330

dec_label_pc_1000a330:                            ; preds = %dec_label_pc_1000a300
  %v1_1000a330 = or i32 %v3_1000a300, 96
  br i1 %v2_1000a328, label %dec_label_pc_1000a33c, label %dec_label_pc_1000a338

dec_label_pc_1000a334:                            ; preds = %dec_label_pc_1000a300
  br i1 %v2_1000a328, label %dec_label_pc_1000a33c, label %dec_label_pc_1000a338

dec_label_pc_1000a338:                            ; preds = %dec_label_pc_1000a330, %dec_label_pc_1000a334
  %v0_1000a33c13 = phi i32 [ %v1_1000a330, %dec_label_pc_1000a330 ], [ %v3_1000a300, %dec_label_pc_1000a334 ]
  %v1_1000a338 = or i32 %v6_1000a308, 96
  br label %dec_label_pc_1000a33c

dec_label_pc_1000a33c:                            ; preds = %dec_label_pc_1000a330, %dec_label_pc_1000a334, %dec_label_pc_1000a338
  %v1_1000a33c = phi i32 [ %v6_1000a308, %dec_label_pc_1000a330 ], [ %v6_1000a308, %dec_label_pc_1000a334 ], [ %v1_1000a338, %dec_label_pc_1000a338 ]
  %v0_1000a33c = phi i32 [ %v1_1000a330, %dec_label_pc_1000a330 ], [ %v3_1000a300, %dec_label_pc_1000a334 ], [ %v0_1000a33c13, %dec_label_pc_1000a338 ]
  %v4_1000a33c = icmp eq i32 %v0_1000a33c, %v1_1000a33c
  br i1 %v4_1000a33c, label %dec_label_pc_1000a354, label %dec_label_pc_1000a344

dec_label_pc_1000a344:                            ; preds = %dec_label_pc_1000a33c
  %v1_1000a348 = add i32 %v0_1000a348, -1
  %v2_1000a348 = icmp eq i32 %v1_1000a348, 0
  br i1 %v2_1000a348, label %dec_label_pc_1000a34c, label %dec_label_pc_1000a300

dec_label_pc_1000a34c:                            ; preds = %dec_label_pc_1000a2fc, %dec_label_pc_1000a344
  ret i32 -1

dec_label_pc_1000a354:                            ; preds = %dec_label_pc_1000a33c
  %v4_1000a314.le = icmp eq i32 %v0_1000a31411, %v1_1000a30c
  br i1 %v4_1000a314.le, label %dec_label_pc_1000a358, label %dec_label_pc_1000a2fc

dec_label_pc_1000a358:                            ; preds = %dec_label_pc_1000a354
  %v2_1000a358 = sub i32 %v1_1000a304, %tmp16
  ret i32 %v2_1000a358

dec_label_pc_1000a360:                            ; preds = %dec_label_pc_1000a2e4
  br label %dec_label_pc_1000a2fc

; uselistorder directives
  uselistorder i32 %v1_1000a348, { 1, 0 }
  uselistorder i32 %v1_1000a330, { 1, 0 }
  uselistorder i1 %v2_1000a328, { 1, 0 }
  uselistorder i32 %v1_1000a30c, { 1, 0 }
  uselistorder i32 %v3_1000a300, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000a348, { 1, 0 }
  uselistorder i32 %v0_1000a300, { 1, 0 }
  uselistorder i32 %v2_1000a308, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 8, 9, 10, 4, 5, 7, 0, 1, 6, 2, 3, 11, 12, 13 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000a34c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a33c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a338, { 1, 0 }
  uselistorder label %dec_label_pc_1000a300, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a2d4, { 1, 0 }
}

define i32 @function_1000a36c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a36c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1000a36c = load i8, i8* %arg1, align 1
  %v3_1000a374 = icmp eq i8 %v2_1000a36c, 0
  br i1 %v3_1000a374, label %dec_label_pc_1000a38c, label %dec_label_pc_1000a37c

dec_label_pc_1000a37c:                            ; preds = %dec_label_pc_1000a36c, %dec_label_pc_1000a37c
  %v0_1000a37c = phi i32 [ %v1_1000a37c, %dec_label_pc_1000a37c ], [ 0, %dec_label_pc_1000a36c ]
  %v1_1000a37c = add i32 %v0_1000a37c, 1
  %v2_1000a380 = add i32 %v1_1000a37c, %tmp
  %v3_1000a380 = inttoptr i32 %v2_1000a380 to i8*
  %v4_1000a380 = load i8, i8* %v3_1000a380, align 1
  %v3_1000a384 = icmp eq i8 %v4_1000a380, 0
  br i1 %v3_1000a384, label %dec_label_pc_1000a38c, label %dec_label_pc_1000a37c

dec_label_pc_1000a38c:                            ; preds = %dec_label_pc_1000a37c, %dec_label_pc_1000a36c
  %v0_1000a3ac = phi i32 [ 0, %dec_label_pc_1000a36c ], [ %v1_1000a37c, %dec_label_pc_1000a37c ]
  %v1_1000a38c = inttoptr i32 %arg2 to i8*
  %v2_1000a38c = load i8, i8* %v1_1000a38c, align 1
  %v3_1000a394 = icmp eq i8 %v2_1000a38c, 0
  br i1 %v3_1000a394, label %dec_label_pc_1000a3ac, label %dec_label_pc_1000a39c

dec_label_pc_1000a39c:                            ; preds = %dec_label_pc_1000a38c, %dec_label_pc_1000a39c
  %v0_1000a39c = phi i32 [ %v1_1000a39c, %dec_label_pc_1000a39c ], [ 0, %dec_label_pc_1000a38c ]
  %v1_1000a39c = add i32 %v0_1000a39c, 1
  %v2_1000a3a0 = add i32 %v1_1000a39c, %arg2
  %v3_1000a3a0 = inttoptr i32 %v2_1000a3a0 to i8*
  %v4_1000a3a0 = load i8, i8* %v3_1000a3a0, align 1
  %v3_1000a3a4 = icmp eq i8 %v4_1000a3a0, 0
  br i1 %v3_1000a3a4, label %dec_label_pc_1000a3ac, label %dec_label_pc_1000a39c

dec_label_pc_1000a3ac:                            ; preds = %dec_label_pc_1000a39c, %dec_label_pc_1000a38c
  %v0_1000a3b0 = phi i32 [ 0, %dec_label_pc_1000a38c ], [ %v1_1000a39c, %dec_label_pc_1000a39c ]
  %v4_1000a3ac = icmp eq i32 %v0_1000a3ac, %v0_1000a3b0
  br i1 %v4_1000a3ac, label %dec_label_pc_1000a3c4, label %dec_label_pc_1000a3bc

dec_label_pc_1000a3bc:                            ; preds = %dec_label_pc_1000a3c8, %dec_label_pc_1000a3ac
  ret i32 0

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a3ac
  %v2_1000a3c4 = icmp eq i32 %v0_1000a3ac, 0
  br i1 %v2_1000a3c4, label %dec_label_pc_1000a3e4, label %dec_label_pc_1000a3c8

dec_label_pc_1000a3c8:                            ; preds = %dec_label_pc_1000a3c4, %dec_label_pc_1000a3e0
  %v0_1000a3e0 = phi i32 [ %v1_1000a3e0, %dec_label_pc_1000a3e0 ], [ %v0_1000a3ac, %dec_label_pc_1000a3c4 ]
  %v0_1000a3d0 = phi i32 [ %v1_1000a3d4, %dec_label_pc_1000a3e0 ], [ %arg2, %dec_label_pc_1000a3c4 ]
  %v0_1000a3c8 = phi i32 [ %v1_1000a3cc, %dec_label_pc_1000a3e0 ], [ %tmp, %dec_label_pc_1000a3c4 ]
  %v1_1000a3c8 = inttoptr i32 %v0_1000a3c8 to i8*
  %v2_1000a3c8 = load i8, i8* %v1_1000a3c8, align 1
  %v1_1000a3d0 = inttoptr i32 %v0_1000a3d0 to i8*
  %v2_1000a3d0 = load i8, i8* %v1_1000a3d0, align 1
  %v4_1000a3d8 = icmp eq i8 %v2_1000a3c8, %v2_1000a3d0
  br i1 %v4_1000a3d8, label %dec_label_pc_1000a3e0, label %dec_label_pc_1000a3bc

dec_label_pc_1000a3e0:                            ; preds = %dec_label_pc_1000a3c8
  %v1_1000a3d4 = add i32 %v0_1000a3d0, 1
  %v1_1000a3cc = add i32 %v0_1000a3c8, 1
  %v1_1000a3e0 = add i32 %v0_1000a3e0, -1
  %v2_1000a3e0 = icmp eq i32 %v1_1000a3e0, 0
  br i1 %v2_1000a3e0, label %dec_label_pc_1000a3e4, label %dec_label_pc_1000a3c8

dec_label_pc_1000a3e4:                            ; preds = %dec_label_pc_1000a3e0, %dec_label_pc_1000a3c4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_1000a3e0, { 1, 0 }
  uselistorder i32 %v0_1000a3c8, { 1, 0 }
  uselistorder i32 %v0_1000a3d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a39c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a37c, { 1, 0 }
}

define i32 @function_1000a3ec(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a3ec:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1000a3ec = load i8, i8* %arg1, align 1
  %v3_1000a3f4 = icmp eq i8 %v2_1000a3ec, 0
  br i1 %v3_1000a3f4, label %dec_label_pc_1000a40c, label %dec_label_pc_1000a3fc

dec_label_pc_1000a3fc:                            ; preds = %dec_label_pc_1000a3ec, %dec_label_pc_1000a3fc
  %v0_1000a3fc = phi i32 [ %v1_1000a3fc, %dec_label_pc_1000a3fc ], [ 0, %dec_label_pc_1000a3ec ]
  %v1_1000a3fc = add i32 %v0_1000a3fc, 1
  %v2_1000a400 = add i32 %v1_1000a3fc, %tmp
  %v3_1000a400 = inttoptr i32 %v2_1000a400 to i8*
  %v4_1000a400 = load i8, i8* %v3_1000a400, align 1
  %v3_1000a404 = icmp eq i8 %v4_1000a400, 0
  br i1 %v3_1000a404, label %dec_label_pc_1000a40c, label %dec_label_pc_1000a3fc

dec_label_pc_1000a40c:                            ; preds = %dec_label_pc_1000a3fc, %dec_label_pc_1000a3ec
  %v1_1000a42c = phi i32 [ 0, %dec_label_pc_1000a3ec ], [ %v1_1000a3fc, %dec_label_pc_1000a3fc ]
  %v1_1000a40c = inttoptr i32 %arg2 to i8*
  %v2_1000a40c = load i8, i8* %v1_1000a40c, align 1
  %v3_1000a414 = icmp eq i8 %v2_1000a40c, 0
  br i1 %v3_1000a414, label %dec_label_pc_1000a42c, label %dec_label_pc_1000a41c

dec_label_pc_1000a41c:                            ; preds = %dec_label_pc_1000a40c, %dec_label_pc_1000a41c
  %v0_1000a41c = phi i32 [ %v1_1000a41c, %dec_label_pc_1000a41c ], [ 0, %dec_label_pc_1000a40c ]
  %v1_1000a41c = add i32 %v0_1000a41c, 1
  %v2_1000a420 = add i32 %v1_1000a41c, %arg2
  %v3_1000a420 = inttoptr i32 %v2_1000a420 to i8*
  %v4_1000a420 = load i8, i8* %v3_1000a420, align 1
  %v3_1000a424 = icmp eq i8 %v4_1000a420, 0
  br i1 %v3_1000a424, label %dec_label_pc_1000a42c, label %dec_label_pc_1000a41c

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a41c, %dec_label_pc_1000a40c
  %v1_1000a434 = phi i32 [ 0, %dec_label_pc_1000a40c ], [ %v1_1000a41c, %dec_label_pc_1000a41c ]
  %v3_1000a42c = icmp slt i32 %v1_1000a42c, %arg3
  br i1 %v3_1000a42c, label %dec_label_pc_1000a460, label %dec_label_pc_1000a434

dec_label_pc_1000a434:                            ; preds = %dec_label_pc_1000a42c
  %v3_1000a434 = icmp slt i32 %v1_1000a434, %arg3
  %v1_1000a438 = add i32 %arg3, 1
  br i1 %v3_1000a434, label %dec_label_pc_1000a460, label %dec_label_pc_1000a444

dec_label_pc_1000a444:                            ; preds = %dec_label_pc_1000a434, %dec_label_pc_1000a448
  %v0_1000a450 = phi i32 [ %v1_1000a454, %dec_label_pc_1000a448 ], [ %arg2, %dec_label_pc_1000a434 ]
  %v0_1000a448 = phi i32 [ %v1_1000a44c, %dec_label_pc_1000a448 ], [ %tmp, %dec_label_pc_1000a434 ]
  %v0_1000a444 = phi i32 [ %v1_1000a444, %dec_label_pc_1000a448 ], [ %v1_1000a438, %dec_label_pc_1000a434 ]
  %v1_1000a444 = add i32 %v0_1000a444, -1
  %v2_1000a444 = icmp eq i32 %v1_1000a444, 0
  br i1 %v2_1000a444, label %dec_label_pc_1000a468, label %dec_label_pc_1000a448

dec_label_pc_1000a448:                            ; preds = %dec_label_pc_1000a444
  %v1_1000a448 = inttoptr i32 %v0_1000a448 to i8*
  %v2_1000a448 = load i8, i8* %v1_1000a448, align 1
  %v1_1000a44c = add i32 %v0_1000a448, 1
  %v1_1000a450 = inttoptr i32 %v0_1000a450 to i8*
  %v2_1000a450 = load i8, i8* %v1_1000a450, align 1
  %v1_1000a454 = add i32 %v0_1000a450, 1
  %v4_1000a458 = icmp eq i8 %v2_1000a448, %v2_1000a450
  br i1 %v4_1000a458, label %dec_label_pc_1000a444, label %dec_label_pc_1000a460

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a448, %dec_label_pc_1000a434, %dec_label_pc_1000a42c
  ret i32 0

dec_label_pc_1000a468:                            ; preds = %dec_label_pc_1000a444
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_1000a444, { 1, 0 }
  uselistorder i32 %v0_1000a448, { 1, 0 }
  uselistorder i32 %v0_1000a450, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a444, { 1, 0 }
  uselistorder label %dec_label_pc_1000a41c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3fc, { 1, 0 }
}

define i32 @function_1000a470(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a470:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a470 = icmp eq i32 %arg3, 0
  %v4_1000a474 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a474, i32* %stack_var_-64, align 4
  %v5_1000a474 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_1000a470, label %dec_label_pc_1000a490, label %dec_label_pc_1000a47c

dec_label_pc_1000a47c:                            ; preds = %dec_label_pc_1000a470
  %v0_1000a47c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000a47c = icmp eq i32 %v0_1000a47c, 0
  store i1 %v3_1000a47c, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_1000a47c, label %dec_label_pc_1000a484, label %dec_label_pc_1000a49c

dec_label_pc_1000a484:                            ; preds = %dec_label_pc_1000a47c
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_1000a488 = add i32 %arg3, 1
  %v5_1000a488 = inttoptr i32 %v4_1000a488 to i8*
  store i8 0, i8* %v5_1000a488, align 1
  %v0_1000a48c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a48c = trunc i32 %v0_1000a48c to i8
  store i8 %v1_1000a48c, i8* %tmp, align 1
  br label %dec_label_pc_1000a490

dec_label_pc_1000a490:                            ; preds = %dec_label_pc_1000a470, %dec_label_pc_1000a51c, %dec_label_pc_1000a484
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_1000a49c:                            ; preds = %dec_label_pc_1000a47c
  %v2_1000a47c = icmp sgt i32 %v0_1000a47c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000a49c.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_1000a47c, %v3_1000a49c.not
  br i1 %brmerge, label %dec_label_pc_1000a4b0, label %dec_label_pc_1000a564

dec_label_pc_1000a4b0:                            ; preds = %dec_label_pc_1000a49c, %dec_label_pc_1000a564
  %v0_1000a4b42 = phi i32 [ %v0_1000a47c, %dec_label_pc_1000a49c ], [ %v1_1000a564, %dec_label_pc_1000a564 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a49c ], [ 1, %dec_label_pc_1000a564 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4b4

dec_label_pc_1000a4b4:                            ; preds = %dec_label_pc_1000a4e0.dec_label_pc_1000a4b4_crit_edge, %dec_label_pc_1000a4b0
  %v1_1000a4b8 = phi i32 [ %v1_1000a4b8.pre, %dec_label_pc_1000a4e0.dec_label_pc_1000a4b4_crit_edge ], [ 32, %dec_label_pc_1000a4b0 ]
  %v0_1000a4b8 = phi i32 [ %v0_1000a4b8.pre, %dec_label_pc_1000a4e0.dec_label_pc_1000a4b4_crit_edge ], [ %v5_1000a474, %dec_label_pc_1000a4b0 ]
  %v1_1000a4c8 = phi i32 [ %v0_1000a4b4.pre, %dec_label_pc_1000a4e0.dec_label_pc_1000a4b4_crit_edge ], [ %v0_1000a4b42, %dec_label_pc_1000a4b0 ]
  %v2_1000a4b4 = udiv i32 %v1_1000a4c8, %arg2
  %v2_1000a4b8 = add i32 %v0_1000a4b8, %v1_1000a4b8
  store i32 %v2_1000a4b8, i32* %r11.global-to-local, align 4
  %v1_1000a4bc = add i32 %v1_1000a4b8, -1
  store i32 %v1_1000a4bc, i32* %r10.global-to-local, align 4
  %v2_1000a4c0 = mul i32 %v2_1000a4b4, %arg2
  %v3_1000a4c4 = icmp ult i32 %v1_1000a4c8, %arg2
  store i1 %v3_1000a4c4, i1* %cr6_eq.global-to-local, align 1
  %v2_1000a4c8 = sub i32 %v1_1000a4c8, %v2_1000a4c0
  store i32 %v2_1000a4c8, i32* %r9.global-to-local, align 4
  store i32 %v2_1000a4b4, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_1000a4c8, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_1000a4c8
  %v0_1000a4e0.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_1000a4e0 = add i32 %v2_1000a4b8, 8
  %v4_1000a4e0 = inttoptr i32 %v3_1000a4e0 to i8*
  store i8 %v0_1000a4e0.off0, i8* %v4_1000a4e0, align 1
  %v0_1000a4e4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000a4e4, label %dec_label_pc_1000a4e8, label %dec_label_pc_1000a4e0.dec_label_pc_1000a4b4_crit_edge

dec_label_pc_1000a4e0.dec_label_pc_1000a4b4_crit_edge: ; preds = %dec_label_pc_1000a4b4
  %v0_1000a4b4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a4b8.pre = load i32, i32* @r1, align 4
  %v1_1000a4b8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4b4

dec_label_pc_1000a4e8:                            ; preds = %dec_label_pc_1000a4b4
  %v0_1000a4e8 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000a4e8 = icmp eq i32 %v0_1000a4e8, 0
  br i1 %v3_1000a4e8, label %dec_label_pc_1000a4f0, label %dec_label_pc_1000a550

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4e8
  %v0_1000a4f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a4f0 = add i32 %v0_1000a4f0, 1
  store i32 %v1_1000a4f0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4f4

dec_label_pc_1000a4f4:                            ; preds = %dec_label_pc_1000a550, %dec_label_pc_1000a4f0
  %v1_1000a4fc = phi i32 [ %v1_1000a4f8.pre, %dec_label_pc_1000a550 ], [ %v1_1000a4f0, %dec_label_pc_1000a4f0 ]
  %v2_1000a4f4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000a4f4, i32* %r9.global-to-local, align 4
  %v2_1000a4f8 = add i32 %v1_1000a4fc, %v2_1000a4f4
  %v3_1000a4f8 = inttoptr i32 %v2_1000a4f8 to i8*
  %v4_1000a4f8 = load i8, i8* %v3_1000a4f8, align 1
  %v5_1000a4f8 = zext i8 %v4_1000a4f8 to i32
  store i32 %v5_1000a4f8, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a4f8, i32* %r9.global-to-local, align 4
  %v3_1000a500 = icmp eq i8 %v4_1000a4f8, 0
  br i1 %v3_1000a500, label %dec_label_pc_1000a578, label %dec_label_pc_1000a508

dec_label_pc_1000a508:                            ; preds = %dec_label_pc_1000a4f4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a50c

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a50c, %dec_label_pc_1000a508
  %v0_1000a50c = phi i32 [ %v1_1000a50c, %dec_label_pc_1000a50c ], [ 0, %dec_label_pc_1000a508 ]
  %v1_1000a50c = add i32 %v0_1000a50c, 1
  store i32 %v1_1000a50c, i32* %r10.global-to-local, align 4
  %v2_1000a510 = add i32 %v1_1000a50c, %v2_1000a4f8
  %v3_1000a510 = inttoptr i32 %v2_1000a510 to i8*
  %v4_1000a510 = load i8, i8* %v3_1000a510, align 1
  %v5_1000a510 = zext i8 %v4_1000a510 to i32
  store i32 %v5_1000a510, i32* %r0.global-to-local, align 4
  %v3_1000a514 = icmp eq i8 %v4_1000a510, 0
  br i1 %v3_1000a514, label %dec_label_pc_1000a51c, label %dec_label_pc_1000a50c

dec_label_pc_1000a51c:                            ; preds = %dec_label_pc_1000a50c
  %v3_1000a51c = icmp eq i32 %v1_1000a50c, -1
  br i1 %v3_1000a51c, label %dec_label_pc_1000a490, label %dec_label_pc_1000a524

dec_label_pc_1000a524:                            ; preds = %dec_label_pc_1000a51c
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_1000a50c, 2
  br label %dec_label_pc_1000a528

dec_label_pc_1000a528:                            ; preds = %dec_label_pc_1000a578, %dec_label_pc_1000a524
  %v0_1000a528 = phi i32 [ 1, %dec_label_pc_1000a578 ], [ %phitmp, %dec_label_pc_1000a524 ]
  store i32 %v0_1000a528, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a528, i32* %ctr.global-to-local, align 4
  %v2_1000a53024 = load i8, i8* %v3_1000a4f8, align 1
  %v3_1000a53025 = zext i8 %v2_1000a53024 to i32
  store i32 %v3_1000a53025, i32* %r0.global-to-local, align 4
  %v1_1000a53426 = add i32 %v2_1000a4f8, 1
  store i32 %v1_1000a53426, i32* %r9.global-to-local, align 4
  store i8 %v2_1000a53024, i8* %tmp, align 1
  %v0_1000a53c28 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a53c29 = add i32 %v0_1000a53c28, 1
  store i32 %v1_1000a53c29, i32* %r11.global-to-local, align 4
  %v0_1000a54030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a54031 = add i32 %v0_1000a54030, -1
  store i32 %v1_1000a54031, i32* %ctr.global-to-local, align 4
  %v2_1000a54032 = icmp eq i32 %v1_1000a54031, 0
  br i1 %v2_1000a54032, label %dec_label_pc_1000a544, label %dec_label_pc_1000a530.dec_label_pc_1000a530_crit_edge

dec_label_pc_1000a530.dec_label_pc_1000a530_crit_edge: ; preds = %dec_label_pc_1000a528, %dec_label_pc_1000a530.dec_label_pc_1000a530_crit_edge
  %v1_1000a53c33 = phi i32 [ %v1_1000a53c, %dec_label_pc_1000a530.dec_label_pc_1000a530_crit_edge ], [ %v1_1000a53c29, %dec_label_pc_1000a528 ]
  %v0_1000a530.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a530 = inttoptr i32 %v0_1000a530.pre to i8*
  %v2_1000a530 = load i8, i8* %v1_1000a530, align 1
  %v3_1000a530 = zext i8 %v2_1000a530 to i32
  store i32 %v3_1000a530, i32* %r0.global-to-local, align 4
  %v1_1000a534 = add i32 %v0_1000a530.pre, 1
  store i32 %v1_1000a534, i32* %r9.global-to-local, align 4
  %v3_1000a538 = inttoptr i32 %v1_1000a53c33 to i8*
  store i8 %v2_1000a530, i8* %v3_1000a538, align 1
  %v0_1000a53c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a53c = add i32 %v0_1000a53c, 1
  store i32 %v1_1000a53c, i32* %r11.global-to-local, align 4
  %v0_1000a540 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a540 = add i32 %v0_1000a540, -1
  store i32 %v1_1000a540, i32* %ctr.global-to-local, align 4
  %v2_1000a540 = icmp eq i32 %v1_1000a540, 0
  br i1 %v2_1000a540, label %dec_label_pc_1000a544, label %dec_label_pc_1000a530.dec_label_pc_1000a530_crit_edge

dec_label_pc_1000a544:                            ; preds = %dec_label_pc_1000a530.dec_label_pc_1000a530_crit_edge, %dec_label_pc_1000a528
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_1000a550:                            ; preds = %dec_label_pc_1000a4e8
  %v0_1000a550.pre = load i32, i32* @r1, align 4
  %v1_1000a550.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a550 = add i32 %v1_1000a550.pre, %v0_1000a550.pre
  store i32 %v2_1000a550, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_1000a558 = add i32 %v2_1000a550, 8
  %v4_1000a558 = inttoptr i32 %v3_1000a558 to i8*
  store i8 45, i8* %v4_1000a558, align 1
  %v1_1000a4f8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4f4

dec_label_pc_1000a564:                            ; preds = %dec_label_pc_1000a49c
  %v1_1000a564 = sub i32 0, %v0_1000a47c
  store i32 %v1_1000a564, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4b0

dec_label_pc_1000a578:                            ; preds = %dec_label_pc_1000a4f4
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a528

; uselistorder directives
  uselistorder i32 %v1_1000a564, { 1, 0 }
  uselistorder i32 %v1_1000a540, { 1, 0 }
  uselistorder i32 %v1_1000a53c, { 1, 0 }
  uselistorder i32 %v0_1000a528, { 1, 0 }
  uselistorder i32 %v1_1000a50c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000a4b4, { 1, 0 }
  uselistorder i32 %v1_1000a4c8, { 1, 0, 2 }
  uselistorder i32 %v1_1000a4b8, { 1, 0 }
  uselistorder i32 %v0_1000a47c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 4, 3, 0, 5, 6, 1 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 4, 3, 0, 5, 6, 1 }
  uselistorder i32* %r10.global-to-local, { 6, 7, 2, 1, 8, 9, 11, 10, 3, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 45, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1000a530.dec_label_pc_1000a530_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a490, { 1, 2, 0 }
}

define i32 @function_1000a584(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a584:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000a594 = icmp eq i32 %arg2, -2143521772
  %v2_1000a5a8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a5a8, i32* %stack_var_-32, align 4
  br i1 %v4_1000a594, label %dec_label_pc_1000a608, label %dec_label_pc_1000a5c8

dec_label_pc_1000a5c8:                            ; preds = %dec_label_pc_1000a584
  %v3_1000a5c8 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000a5c8, label %dec_label_pc_1000a5e0, label %dec_label_pc_1000a5d0

dec_label_pc_1000a5d0:                            ; preds = %dec_label_pc_1000a5c8
  %v3_1000a5d4 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000a5d4, label %dec_label_pc_1000a5fc, label %dec_label_pc_1000a628

dec_label_pc_1000a5e0:                            ; preds = %dec_label_pc_1000a5c8
  %v1_1000a5e0 = xor i32 %arg2, -2143551488
  %v3_1000a5e4 = icmp eq i32 %v1_1000a5e0, 29717
  br i1 %v3_1000a5e4, label %dec_label_pc_1000a618, label %dec_label_pc_1000a5ec

dec_label_pc_1000a5ec:                            ; preds = %dec_label_pc_1000a5e0
  %v3_1000a5f0 = icmp eq i32 %v1_1000a5e0, 29718
  br i1 %v3_1000a5f0, label %dec_label_pc_1000a620, label %dec_label_pc_1000a628

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5d0
  store i32 ptrtoint (i32* @global_var_1000a604.475 to i32), i32* @lr, align 4
  %v2_1000a600 = inttoptr i32 %arg3 to i32*
  %v3_1000a600 = call i32 @function_1000b0cc(i32* %v2_1000a600, i32 %arg1)
  br label %dec_label_pc_1000a610

dec_label_pc_1000a608:                            ; preds = %dec_label_pc_1000a584
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000a60c

dec_label_pc_1000a60c:                            ; preds = %dec_label_pc_1000a620, %dec_label_pc_1000a618, %dec_label_pc_1000a608
  store i32 268477968, i32* @lr, align 4
  %v0_1000a60c = call i32 @function_1000b168()
  br label %dec_label_pc_1000a610

dec_label_pc_1000a610:                            ; preds = %dec_label_pc_1000a5fc, %dec_label_pc_1000a60c
  %storemerge = phi i32 [ %v0_1000a60c, %dec_label_pc_1000a60c ], [ %v3_1000a600, %dec_label_pc_1000a5fc ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a654

dec_label_pc_1000a618:                            ; preds = %dec_label_pc_1000a5e0
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000a60c

dec_label_pc_1000a620:                            ; preds = %dec_label_pc_1000a5ec
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000a60c

dec_label_pc_1000a628:                            ; preds = %dec_label_pc_1000a5ec, %dec_label_pc_1000a5d0
  %v0_1000a638 = call i32 @__asm_mfcr()
  %v1_1000a63c = and i32 %v0_1000a638, 268435456
  %v3_1000a63c = icmp eq i32 %v1_1000a63c, 0
  store i32 %v0_1000a638, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a63c, label %dec_label_pc_1000a654, label %dec_label_pc_1000a648

dec_label_pc_1000a648:                            ; preds = %dec_label_pc_1000a628
  %v0_1000a648 = call i32 @function_1000aeb8()
  %v0_1000a64c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a64c = inttoptr i32 %v0_1000a648 to i32*
  store i32 %v0_1000a64c, i32* %v2_1000a64c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a654

dec_label_pc_1000a654:                            ; preds = %dec_label_pc_1000a628, %dec_label_pc_1000a610, %dec_label_pc_1000a648
  %v0_1000a658 = phi i32 [ %v0_1000a638, %dec_label_pc_1000a628 ], [ %storemerge, %dec_label_pc_1000a610 ], [ -1, %dec_label_pc_1000a648 ]
  ret i32 %v0_1000a658

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a654, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a610, { 1, 0 }
}

define i32 @function_1000a66c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a66c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_1000a680 = load i32, i32* @r4, align 4
  %v1_1000a680 = add i32 %v0_1000a680, -12
  %v2_1000a684 = icmp ugt i32 %v1_1000a680, 2
  %v2_1000a68c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a68c, i32* %stack_var_-32, align 4
  br i1 %v2_1000a684, label %dec_label_pc_1000a6b8, label %dec_label_pc_1000a6a8

dec_label_pc_1000a6a8:                            ; preds = %dec_label_pc_1000a66c
  store i32 268478128, i32* @lr, align 4
  %v2_1000a6ac = call i32 @function_1000a6f0(i32 3)
  store i32 %v2_1000a6ac, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a6d8

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a66c
  %v0_1000a6bc = call i32 @__asm_mfcr()
  %v1_1000a6c0 = and i32 %v0_1000a6bc, 268435456
  %v3_1000a6c0 = icmp eq i32 %v1_1000a6c0, 0
  store i32 %v0_1000a6bc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a6c0, label %dec_label_pc_1000a6d8, label %dec_label_pc_1000a6cc

dec_label_pc_1000a6cc:                            ; preds = %dec_label_pc_1000a6b8
  %v0_1000a6cc = call i32 @function_1000aeb8()
  %v0_1000a6d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a6d0 = inttoptr i32 %v0_1000a6cc to i32*
  store i32 %v0_1000a6d0, i32* %v2_1000a6d0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a6d8

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a6a8, %dec_label_pc_1000a6cc
  %v0_1000a6dc = phi i32 [ %v0_1000a6bc, %dec_label_pc_1000a6b8 ], [ %v2_1000a6ac, %dec_label_pc_1000a6a8 ], [ -1, %dec_label_pc_1000a6cc ]
  ret i32 %v0_1000a6dc

; uselistorder directives
  uselistorder label %dec_label_pc_1000a6d8, { 2, 0, 1 }
}

define i32 @function_1000a6f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a6f0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000a708 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a708, i32* %stack_var_-32, align 4
  %v0_1000a724 = call i32 @__asm_mfcr()
  %v1_1000a728 = and i32 %v0_1000a724, 268435456
  %v3_1000a728 = icmp eq i32 %v1_1000a728, 0
  store i32 %v0_1000a724, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a728, label %dec_label_pc_1000a740, label %dec_label_pc_1000a734

dec_label_pc_1000a734:                            ; preds = %dec_label_pc_1000a6f0
  %v0_1000a734 = call i32 @function_1000aeb8()
  %v0_1000a738 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a738 = inttoptr i32 %v0_1000a734 to i32*
  store i32 %v0_1000a738, i32* %v2_1000a738, align 4
  br label %dec_label_pc_1000a740

dec_label_pc_1000a740:                            ; preds = %dec_label_pc_1000a6f0, %dec_label_pc_1000a734
  %v0_1000a750 = phi i32 [ %v0_1000a724, %dec_label_pc_1000a6f0 ], [ -1, %dec_label_pc_1000a734 ]
  ret i32 %v0_1000a750

; uselistorder directives
  uselistorder label %dec_label_pc_1000a740, { 1, 0 }
}

define i32 @function_1000a754(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a754:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a76c = call i32 @__asm_mfcr()
  %v1_1000a770 = and i32 %v0_1000a76c, 268435456
  %v3_1000a770 = icmp eq i32 %v1_1000a770, 0
  store i32 %v0_1000a76c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a770, label %dec_label_pc_1000a788, label %dec_label_pc_1000a77c

dec_label_pc_1000a77c:                            ; preds = %dec_label_pc_1000a754
  %v0_1000a77c = call i32 @function_1000aeb8()
  %v0_1000a780 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a780 = inttoptr i32 %v0_1000a77c to i32*
  store i32 %v0_1000a780, i32* %v2_1000a780, align 4
  br label %dec_label_pc_1000a788

dec_label_pc_1000a788:                            ; preds = %dec_label_pc_1000a754, %dec_label_pc_1000a77c
  %v0_1000a798 = phi i32 [ %v0_1000a76c, %dec_label_pc_1000a754 ], [ -1, %dec_label_pc_1000a77c ]
  ret i32 %v0_1000a798

; uselistorder directives
  uselistorder label %dec_label_pc_1000a788, { 1, 0 }
}

define i32 @function_1000a79c() local_unnamed_addr {
dec_label_pc_1000a79c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a7b4 = call i32 @__asm_mfcr()
  %v1_1000a7b8 = and i32 %v0_1000a7b4, 268435456
  %v3_1000a7b8 = icmp eq i32 %v1_1000a7b8, 0
  store i32 %v0_1000a7b4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a7b8, label %dec_label_pc_1000a7d0, label %dec_label_pc_1000a7c4

dec_label_pc_1000a7c4:                            ; preds = %dec_label_pc_1000a79c
  %v0_1000a7c4 = call i32 @function_1000aeb8()
  %v0_1000a7c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a7c8 = inttoptr i32 %v0_1000a7c4 to i32*
  store i32 %v0_1000a7c8, i32* %v2_1000a7c8, align 4
  br label %dec_label_pc_1000a7d0

dec_label_pc_1000a7d0:                            ; preds = %dec_label_pc_1000a79c, %dec_label_pc_1000a7c4
  %v0_1000a7e0 = phi i32 [ %v0_1000a7b4, %dec_label_pc_1000a79c ], [ -1, %dec_label_pc_1000a7c4 ]
  ret i32 %v0_1000a7e0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a7d0, { 1, 0 }
}

define i32 @function_1000a7e4() local_unnamed_addr {
dec_label_pc_1000a7e4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a7fc = call i32 @__asm_mfcr()
  %v1_1000a800 = and i32 %v0_1000a7fc, 268435456
  %v3_1000a800 = icmp eq i32 %v1_1000a800, 0
  store i32 %v0_1000a7fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a800, label %dec_label_pc_1000a818, label %dec_label_pc_1000a80c

dec_label_pc_1000a80c:                            ; preds = %dec_label_pc_1000a7e4
  %v0_1000a80c = call i32 @function_1000aeb8()
  %v0_1000a810 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a810 = inttoptr i32 %v0_1000a80c to i32*
  store i32 %v0_1000a810, i32* %v2_1000a810, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a818:                            ; preds = %dec_label_pc_1000a7e4, %dec_label_pc_1000a80c
  %v0_1000a828 = phi i32 [ %v0_1000a7fc, %dec_label_pc_1000a7e4 ], [ -1, %dec_label_pc_1000a80c ]
  ret i32 %v0_1000a828

; uselistorder directives
  uselistorder label %dec_label_pc_1000a818, { 1, 0 }
}

define i32 @function_1000a82c() local_unnamed_addr {
dec_label_pc_1000a82c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a844 = call i32 @__asm_mfcr()
  %v1_1000a848 = and i32 %v0_1000a844, 268435456
  %v3_1000a848 = icmp eq i32 %v1_1000a848, 0
  store i32 %v0_1000a844, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a848, label %dec_label_pc_1000a860, label %dec_label_pc_1000a854

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a82c
  %v0_1000a854 = call i32 @function_1000aeb8()
  %v0_1000a858 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a858 = inttoptr i32 %v0_1000a854 to i32*
  store i32 %v0_1000a858, i32* %v2_1000a858, align 4
  br label %dec_label_pc_1000a860

dec_label_pc_1000a860:                            ; preds = %dec_label_pc_1000a82c, %dec_label_pc_1000a854
  %v0_1000a870 = phi i32 [ %v0_1000a844, %dec_label_pc_1000a82c ], [ -1, %dec_label_pc_1000a854 ]
  ret i32 %v0_1000a870

; uselistorder directives
  uselistorder label %dec_label_pc_1000a860, { 1, 0 }
}

define i32 @function_1000a874() local_unnamed_addr {
dec_label_pc_1000a874:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a88c = call i32 @__asm_mfcr()
  %v1_1000a890 = and i32 %v0_1000a88c, 268435456
  %v3_1000a890 = icmp eq i32 %v1_1000a890, 0
  store i32 %v0_1000a88c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a890, label %dec_label_pc_1000a8a8, label %dec_label_pc_1000a89c

dec_label_pc_1000a89c:                            ; preds = %dec_label_pc_1000a874
  %v0_1000a89c = call i32 @function_1000aeb8()
  %v0_1000a8a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a8a0 = inttoptr i32 %v0_1000a89c to i32*
  store i32 %v0_1000a8a0, i32* %v2_1000a8a0, align 4
  br label %dec_label_pc_1000a8a8

dec_label_pc_1000a8a8:                            ; preds = %dec_label_pc_1000a874, %dec_label_pc_1000a89c
  %v0_1000a8b8 = phi i32 [ %v0_1000a88c, %dec_label_pc_1000a874 ], [ -1, %dec_label_pc_1000a89c ]
  ret i32 %v0_1000a8b8

; uselistorder directives
  uselistorder label %dec_label_pc_1000a8a8, { 1, 0 }
}

define i32 @function_1000a8bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a8bc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a8d4 = call i32 @__asm_mfcr()
  %v1_1000a8d8 = and i32 %v0_1000a8d4, 268435456
  %v3_1000a8d8 = icmp eq i32 %v1_1000a8d8, 0
  store i32 %v0_1000a8d4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a8d8, label %dec_label_pc_1000a8f0, label %dec_label_pc_1000a8e4

dec_label_pc_1000a8e4:                            ; preds = %dec_label_pc_1000a8bc
  %v0_1000a8e4 = call i32 @function_1000aeb8()
  %v0_1000a8e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a8e8 = inttoptr i32 %v0_1000a8e4 to i32*
  store i32 %v0_1000a8e8, i32* %v2_1000a8e8, align 4
  br label %dec_label_pc_1000a8f0

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8bc, %dec_label_pc_1000a8e4
  %v0_1000a900 = phi i32 [ %v0_1000a8d4, %dec_label_pc_1000a8bc ], [ -1, %dec_label_pc_1000a8e4 ]
  ret i32 %v0_1000a900

; uselistorder directives
  uselistorder label %dec_label_pc_1000a8f0, { 1, 0 }
}

define i32 @function_1000a904(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a904:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000a918 = and i32 %arg2, 64
  %v3_1000a918 = icmp eq i32 %v1_1000a918, 0
  br i1 %v3_1000a918, label %dec_label_pc_1000a944, label %dec_label_pc_1000a928

dec_label_pc_1000a928:                            ; preds = %dec_label_pc_1000a904
  %v2_1000a930 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a930, i32* %stack_var_-32, align 4
  %v0_1000a940 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000a944

dec_label_pc_1000a944:                            ; preds = %dec_label_pc_1000a904, %dec_label_pc_1000a928
  %v0_1000a944 = phi i32 [ 0, %dec_label_pc_1000a904 ], [ %v0_1000a940, %dec_label_pc_1000a928 ]
  store i32 %v0_1000a944, i32* @r5, align 4
  %v0_1000a94c = call i32 @__asm_mfcr()
  %v1_1000a950 = and i32 %v0_1000a94c, 268435456
  %v3_1000a950 = icmp eq i32 %v1_1000a950, 0
  store i32 %v0_1000a94c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a950, label %dec_label_pc_1000a968, label %dec_label_pc_1000a95c

dec_label_pc_1000a95c:                            ; preds = %dec_label_pc_1000a944
  %v0_1000a95c = call i32 @function_1000aeb8()
  %v0_1000a960 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a960 = inttoptr i32 %v0_1000a95c to i32*
  store i32 %v0_1000a960, i32* %v2_1000a960, align 4
  br label %dec_label_pc_1000a968

dec_label_pc_1000a968:                            ; preds = %dec_label_pc_1000a944, %dec_label_pc_1000a95c
  %v0_1000a978 = phi i32 [ %v0_1000a94c, %dec_label_pc_1000a944 ], [ -1, %dec_label_pc_1000a95c ]
  ret i32 %v0_1000a978

; uselistorder directives
  uselistorder label %dec_label_pc_1000a968, { 1, 0 }
  uselistorder label %dec_label_pc_1000a944, { 1, 0 }
}

define i32 @function_1000a97c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a97c:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000a988 = call i32 @function_1000a904(i32 577, i32 577)
  ret i32 %v2_1000a988
}

define i32 @function_1000a98c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a98c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a9a4 = call i32 @__asm_mfcr()
  %v1_1000a9a8 = and i32 %v0_1000a9a4, 268435456
  %v3_1000a9a8 = icmp eq i32 %v1_1000a9a8, 0
  store i32 %v0_1000a9a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a9a8, label %dec_label_pc_1000a9c0, label %dec_label_pc_1000a9b4

dec_label_pc_1000a9b4:                            ; preds = %dec_label_pc_1000a98c
  %v0_1000a9b4 = call i32 @function_1000aeb8()
  %v0_1000a9b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a9b8 = inttoptr i32 %v0_1000a9b4 to i32*
  store i32 %v0_1000a9b8, i32* %v2_1000a9b8, align 4
  br label %dec_label_pc_1000a9c0

dec_label_pc_1000a9c0:                            ; preds = %dec_label_pc_1000a98c, %dec_label_pc_1000a9b4
  %v0_1000a9d0 = phi i32 [ %v0_1000a9a4, %dec_label_pc_1000a98c ], [ -1, %dec_label_pc_1000a9b4 ]
  ret i32 %v0_1000a9d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a9c0, { 1, 0 }
}

define i32 @function_1000a9d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a9d4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a9ec = call i32 @__asm_mfcr()
  %v1_1000a9f0 = and i32 %v0_1000a9ec, 268435456
  %v3_1000a9f0 = icmp eq i32 %v1_1000a9f0, 0
  store i32 %v0_1000a9ec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a9f0, label %dec_label_pc_1000aa08, label %dec_label_pc_1000a9fc

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9d4
  %v0_1000a9fc = call i32 @function_1000aeb8()
  %v0_1000aa00 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa00 = inttoptr i32 %v0_1000a9fc to i32*
  store i32 %v0_1000aa00, i32* %v2_1000aa00, align 4
  br label %dec_label_pc_1000aa08

dec_label_pc_1000aa08:                            ; preds = %dec_label_pc_1000a9d4, %dec_label_pc_1000a9fc
  %v0_1000aa18 = phi i32 [ %v0_1000a9ec, %dec_label_pc_1000a9d4 ], [ -1, %dec_label_pc_1000a9fc ]
  ret i32 %v0_1000aa18

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa08, { 1, 0 }
}

define i32 @function_1000aa1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000aa1c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa34 = call i32 @__asm_mfcr()
  %v1_1000aa38 = and i32 %v0_1000aa34, 268435456
  %v3_1000aa38 = icmp eq i32 %v1_1000aa38, 0
  store i32 %v0_1000aa34, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa38, label %dec_label_pc_1000aa50, label %dec_label_pc_1000aa44

dec_label_pc_1000aa44:                            ; preds = %dec_label_pc_1000aa1c
  %v0_1000aa44 = call i32 @function_1000aeb8()
  %v0_1000aa48 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa48 = inttoptr i32 %v0_1000aa44 to i32*
  store i32 %v0_1000aa48, i32* %v2_1000aa48, align 4
  br label %dec_label_pc_1000aa50

dec_label_pc_1000aa50:                            ; preds = %dec_label_pc_1000aa1c, %dec_label_pc_1000aa44
  %v0_1000aa60 = phi i32 [ %v0_1000aa34, %dec_label_pc_1000aa1c ], [ -1, %dec_label_pc_1000aa44 ]
  ret i32 %v0_1000aa60

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa50, { 1, 0 }
}

define i32 @function_1000aa64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000aa64:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa7c = call i32 @__asm_mfcr()
  %v1_1000aa80 = and i32 %v0_1000aa7c, 268435456
  %v3_1000aa80 = icmp eq i32 %v1_1000aa80, 0
  store i32 %v0_1000aa7c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa80, label %dec_label_pc_1000aa98, label %dec_label_pc_1000aa8c

dec_label_pc_1000aa8c:                            ; preds = %dec_label_pc_1000aa64
  %v0_1000aa8c = call i32 @function_1000aeb8()
  %v0_1000aa90 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa90 = inttoptr i32 %v0_1000aa8c to i32*
  store i32 %v0_1000aa90, i32* %v2_1000aa90, align 4
  br label %dec_label_pc_1000aa98

dec_label_pc_1000aa98:                            ; preds = %dec_label_pc_1000aa64, %dec_label_pc_1000aa8c
  %v0_1000aaa8 = phi i32 [ %v0_1000aa7c, %dec_label_pc_1000aa64 ], [ -1, %dec_label_pc_1000aa8c ]
  ret i32 %v0_1000aaa8

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa98, { 1, 0 }
}

define i32 @function_1000aaac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aaac:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aac4 = call i32 @__asm_mfcr()
  %v1_1000aac8 = and i32 %v0_1000aac4, 268435456
  %v3_1000aac8 = icmp eq i32 %v1_1000aac8, 0
  store i32 %v0_1000aac4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aac8, label %dec_label_pc_1000aae0, label %dec_label_pc_1000aad4

dec_label_pc_1000aad4:                            ; preds = %dec_label_pc_1000aaac
  %v0_1000aad4 = call i32 @function_1000aeb8()
  %v0_1000aad8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aad8 = inttoptr i32 %v0_1000aad4 to i32*
  store i32 %v0_1000aad8, i32* %v2_1000aad8, align 4
  br label %dec_label_pc_1000aae0

dec_label_pc_1000aae0:                            ; preds = %dec_label_pc_1000aaac, %dec_label_pc_1000aad4
  %v0_1000aaf0 = phi i32 [ %v0_1000aac4, %dec_label_pc_1000aaac ], [ -1, %dec_label_pc_1000aad4 ]
  ret i32 %v0_1000aaf0

; uselistorder directives
  uselistorder label %dec_label_pc_1000aae0, { 1, 0 }
}

define i32 @function_1000aaf4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000aaf4:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000aaf4 = icmp eq i32 %arg2, 0
  br i1 %v3_1000aaf4, label %dec_label_pc_1000ab34, label %dec_label_pc_1000ab1c

dec_label_pc_1000ab1c:                            ; preds = %dec_label_pc_1000aaf4
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000ab34, label %dec_label_pc_1000ab24

dec_label_pc_1000ab24:                            ; preds = %dec_label_pc_1000ab1c
  %v0_1000ab24 = call i32 @function_1000aeb8()
  %v2_1000ab2c = inttoptr i32 %v0_1000ab24 to i32*
  store i32 22, i32* %v2_1000ab2c, align 4
  %v0_1000ab58.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ab54

dec_label_pc_1000ab34:                            ; preds = %dec_label_pc_1000ab1c, %dec_label_pc_1000aaf4
  %v0_1000ab38 = call i32 @__asm_mfcr()
  %v1_1000ab3c = and i32 %v0_1000ab38, 268435456
  %v3_1000ab3c = icmp eq i32 %v1_1000ab3c, 0
  store i32 %v0_1000ab38, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab3c, label %dec_label_pc_1000ab54, label %dec_label_pc_1000ab48

dec_label_pc_1000ab48:                            ; preds = %dec_label_pc_1000ab34
  %v0_1000ab48 = call i32 @function_1000aeb8()
  %v0_1000ab4c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab4c = inttoptr i32 %v0_1000ab48 to i32*
  store i32 %v0_1000ab4c, i32* %v2_1000ab4c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ab54

dec_label_pc_1000ab54:                            ; preds = %dec_label_pc_1000ab34, %dec_label_pc_1000ab24, %dec_label_pc_1000ab48
  %v0_1000ab58 = phi i32 [ %v0_1000ab38, %dec_label_pc_1000ab34 ], [ %v0_1000ab58.pre, %dec_label_pc_1000ab24 ], [ -1, %dec_label_pc_1000ab48 ]
  ret i32 %v0_1000ab58

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab54, { 2, 0, 1 }
}

define i32 @function_1000ab6c() local_unnamed_addr {
dec_label_pc_1000ab6c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ab84 = call i32 @__asm_mfcr()
  %v1_1000ab88 = and i32 %v0_1000ab84, 268435456
  %v3_1000ab88 = icmp eq i32 %v1_1000ab88, 0
  store i32 %v0_1000ab84, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab88, label %dec_label_pc_1000aba0, label %dec_label_pc_1000ab94

dec_label_pc_1000ab94:                            ; preds = %dec_label_pc_1000ab6c
  %v0_1000ab94 = call i32 @function_1000aeb8()
  %v0_1000ab98 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab98 = inttoptr i32 %v0_1000ab94 to i32*
  store i32 %v0_1000ab98, i32* %v2_1000ab98, align 4
  br label %dec_label_pc_1000aba0

dec_label_pc_1000aba0:                            ; preds = %dec_label_pc_1000ab6c, %dec_label_pc_1000ab94
  %v0_1000abb0 = phi i32 [ %v0_1000ab84, %dec_label_pc_1000ab6c ], [ -1, %dec_label_pc_1000ab94 ]
  ret i32 %v0_1000abb0

; uselistorder directives
  uselistorder label %dec_label_pc_1000aba0, { 1, 0 }
}

define i32 @function_1000abb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000abb4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000abcc = call i32 @__asm_mfcr()
  %v1_1000abd0 = and i32 %v0_1000abcc, 268435456
  %v3_1000abd0 = icmp eq i32 %v1_1000abd0, 0
  store i32 %v0_1000abcc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000abd0, label %dec_label_pc_1000abe8, label %dec_label_pc_1000abdc

dec_label_pc_1000abdc:                            ; preds = %dec_label_pc_1000abb4
  %v0_1000abdc = call i32 @function_1000aeb8()
  %v0_1000abe0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000abe0 = inttoptr i32 %v0_1000abdc to i32*
  store i32 %v0_1000abe0, i32* %v2_1000abe0, align 4
  br label %dec_label_pc_1000abe8

dec_label_pc_1000abe8:                            ; preds = %dec_label_pc_1000abb4, %dec_label_pc_1000abdc
  %v0_1000abf8 = phi i32 [ %v0_1000abcc, %dec_label_pc_1000abb4 ], [ -1, %dec_label_pc_1000abdc ]
  ret i32 %v0_1000abf8

; uselistorder directives
  uselistorder label %dec_label_pc_1000abe8, { 1, 0 }
}

define i32 @function_1000abfc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000abfc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac14 = call i32 @__asm_mfcr()
  %v1_1000ac18 = and i32 %v0_1000ac14, 268435456
  %v3_1000ac18 = icmp eq i32 %v1_1000ac18, 0
  store i32 %v0_1000ac14, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac18, label %dec_label_pc_1000ac30, label %dec_label_pc_1000ac24

dec_label_pc_1000ac24:                            ; preds = %dec_label_pc_1000abfc
  %v0_1000ac24 = call i32 @function_1000aeb8()
  %v0_1000ac28 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac28 = inttoptr i32 %v0_1000ac24 to i32*
  store i32 %v0_1000ac28, i32* %v2_1000ac28, align 4
  br label %dec_label_pc_1000ac30

dec_label_pc_1000ac30:                            ; preds = %dec_label_pc_1000abfc, %dec_label_pc_1000ac24
  %v0_1000ac40 = phi i32 [ %v0_1000ac14, %dec_label_pc_1000abfc ], [ -1, %dec_label_pc_1000ac24 ]
  ret i32 %v0_1000ac40

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac30, { 1, 0 }
}

define i32 @function_1000ac44(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000ac44:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000ac60 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1000ac68 = load i32, i32* %arg1, align 4
  store i32 %v2_1000ac60, i32* @r3, align 4
  %v3_1000ac74 = icmp eq i32 %v2_1000ac68, -1
  br i1 %v3_1000ac74, label %dec_label_pc_1000ac7c, label %dec_label_pc_1000ac90

dec_label_pc_1000ac7c:                            ; preds = %dec_label_pc_1000ac44
  %v0_1000ac7c = call i32 @function_1000aeb8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ac88 = inttoptr i32 %v0_1000ac7c to i32*
  store i32 9, i32* %v2_1000ac88, align 4
  %v0_1000acd4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000acd0

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac44
  %v3_1000ac90 = call i32 @function_1000c300(i32 %v2_1000ac60, i32 ptrtoint ([3 x i8]* @global_var_1000c2f8.477 to i32))
  %v0_1000ac98 = call i32 @function_1000c2f8()
  %v0_1000aca0 = load i32, i32* @r31, align 4
  %v1_1000aca0 = inttoptr i32 %v0_1000aca0 to i32*
  %v2_1000aca0 = load i32, i32* %v1_1000aca0, align 4
  store i32 %v2_1000aca0, i32* @r29, align 4
  store i32 -1, i32* %v1_1000aca0, align 4
  store i32 %v2_1000ac60, i32* @r3, align 4
  %v2_1000acb0 = call i32 @function_1000c300(i32 %v2_1000ac60, i32 1)
  %v0_1000acb4 = load i32, i32* @r31, align 4
  %v1_1000acb4 = add i32 %v0_1000acb4, 12
  %v2_1000acb4 = inttoptr i32 %v1_1000acb4 to i32*
  %v3_1000acb4 = load i32, i32* %v2_1000acb4, align 4
  store i32 %v3_1000acb4, i32* @r3, align 4
  store i32 268479676, i32* @lr, align 4
  %v0_1000acb8 = call i32 @function_1000b964()
  %v0_1000acbc = load i32, i32* @r31, align 4
  store i32 %v0_1000acbc, i32* @r3, align 4
  store i32 268479684, i32* @lr, align 4
  %v0_1000acc0 = call i32 @function_1000b964()
  store i32 268479692, i32* @lr, align 4
  %v0_1000acc8 = call i32 @function_1000a79c()
  store i32 %v0_1000acc8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000acd0

dec_label_pc_1000acd0:                            ; preds = %dec_label_pc_1000ac7c, %dec_label_pc_1000ac90
  %v0_1000acd4 = phi i32 [ %v0_1000acd4.pre, %dec_label_pc_1000ac7c ], [ %v0_1000acc8, %dec_label_pc_1000ac90 ]
  ret i32 %v0_1000acd4

; uselistorder directives
  uselistorder i32 %v2_1000ac60, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000acd0, { 1, 0 }
}

define i32 @function_1000ace8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ace8:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_1000ace8 = load i32, i32* @lr, align 4
  store i32 %v0_1000ace8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268479752, i32* @lr, align 4
  %v2_1000ad04 = call i32 @function_1000a904(i32 18432, i32 18432)
  %v1_1000ad08 = icmp slt i32 %v2_1000ad04, 0
  br i1 %v1_1000ad08, label %dec_label_pc_1000ade0, label %dec_label_pc_1000ad10

dec_label_pc_1000ad10:                            ; preds = %dec_label_pc_1000ace8
  %v2_1000ad10 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000ad10, i32* @r4, align 4
  store i32 268479768, i32* @lr, align 4
  %v1_1000ad14 = call i32 @function_1000c6d4(i32 %v2_1000ad10)
  %v1_1000ad18 = icmp slt i32 %v1_1000ad14, 0
  br i1 %v1_1000ad18, label %dec_label_pc_1000ad3c, label %dec_label_pc_1000ad20

dec_label_pc_1000ad20:                            ; preds = %dec_label_pc_1000ad10
  %v0_1000ad20 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268479796, i32* @lr, align 4
  %v2_1000ad30 = call i32 @function_1000a66c(i32 %v0_1000ad20)
  %tmp5 = icmp sgt i32 %v2_1000ad30, -1
  br i1 %tmp5, label %dec_label_pc_1000ad5c, label %dec_label_pc_1000ad3c

dec_label_pc_1000ad3c:                            ; preds = %dec_label_pc_1000ad20, %dec_label_pc_1000ad10
  %v0_1000ad3c = call i32 @function_1000aeb8()
  store i32 0, i32* @r31, align 4
  store i32 %v0_1000ad3c, i32* @r28, align 4
  %v1_1000ad4c = inttoptr i32 %v0_1000ad3c to i32*
  %v2_1000ad4c = load i32, i32* %v1_1000ad4c, align 4
  store i32 268479828, i32* @lr, align 4
  %v0_1000ad50 = call i32 @function_1000a79c()
  %v1_1000ad54 = load i32, i32* @r28, align 4
  %v2_1000ad54 = inttoptr i32 %v1_1000ad54 to i32*
  store i32 %v2_1000ad4c, i32* %v2_1000ad54, align 4
  br label %dec_label_pc_1000ade0

dec_label_pc_1000ad5c:                            ; preds = %dec_label_pc_1000ad20
  store i32 48, i32* @r3, align 4
  store i32 268479844, i32* @lr, align 4
  %v0_1000ad60 = call i32 @function_1000b79c()
  store i32 %v0_1000ad60, i32* %r31.global-to-local, align 4
  %v3_1000ad64 = icmp eq i32 %v0_1000ad60, 0
  br i1 %v3_1000ad64, label %dec_label_pc_1000adb8, label %dec_label_pc_1000ad6c

dec_label_pc_1000ad6c:                            ; preds = %dec_label_pc_1000ad5c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000ad70 = load i32, i32* @r29, align 4
  %v2_1000ad70 = inttoptr i32 %v0_1000ad60 to i32*
  store i32 %v0_1000ad70, i32* %v2_1000ad70, align 4
  %v0_1000ad74 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ad74 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad74 = add i32 %v1_1000ad74, 4
  %v3_1000ad74 = inttoptr i32 %v2_1000ad74 to i32*
  store i32 %v0_1000ad74, i32* %v3_1000ad74, align 4
  %v0_1000ad78 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ad78 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad78 = add i32 %v1_1000ad78, 16
  %v3_1000ad78 = inttoptr i32 %v2_1000ad78 to i32*
  store i32 %v0_1000ad78, i32* %v3_1000ad78, align 4
  %v0_1000ad7c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ad7c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad7c = add i32 %v1_1000ad7c, 8
  %v3_1000ad7c = inttoptr i32 %v2_1000ad7c to i32*
  store i32 %v0_1000ad7c, i32* %v3_1000ad7c, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1000ad84 = icmp ugt i32 %tmp, 511
  %v1_1000ad88 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad88 = add i32 %v1_1000ad88, 20
  %v3_1000ad88 = inttoptr i32 %v2_1000ad88 to i32*
  store i32 %tmp, i32* %v3_1000ad88, align 4
  br i1 %v2_1000ad84, label %dec_label_pc_1000ad98, label %dec_label_pc_1000ad90

dec_label_pc_1000ad90:                            ; preds = %dec_label_pc_1000ad6c
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_1000ad94 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad94 = add i32 %v1_1000ad94, 20
  %v3_1000ad94 = inttoptr i32 %v2_1000ad94 to i32*
  store i32 512, i32* %v3_1000ad94, align 4
  br label %dec_label_pc_1000ad98

dec_label_pc_1000ad98:                            ; preds = %dec_label_pc_1000ad6c, %dec_label_pc_1000ad90
  %v0_1000ad98 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ad98 = add i32 %v0_1000ad98, 20
  %v2_1000ad98 = inttoptr i32 %v1_1000ad98 to i32*
  %v3_1000ad98 = load i32, i32* %v2_1000ad98, align 4
  store i32 268479908, i32* @lr, align 4
  %v2_1000ada0 = call i32 @function_1000b8f4(i32 1, i32 %v3_1000ad98)
  %v3_1000ada4 = icmp eq i32 %v2_1000ada0, 0
  %v1_1000ada8 = load i32, i32* @r31, align 4
  %v2_1000ada8 = add i32 %v1_1000ada8, 12
  %v3_1000ada8 = inttoptr i32 %v2_1000ada8 to i32*
  store i32 %v2_1000ada0, i32* %v3_1000ada8, align 4
  br i1 %v3_1000ada4, label %dec_label_pc_1000adb0, label %dec_label_pc_1000add4

dec_label_pc_1000adb0:                            ; preds = %dec_label_pc_1000ad98
  %v0_1000adb0 = load i32, i32* @r31, align 4
  store i32 %v0_1000adb0, i32* @r3, align 4
  store i32 268479928, i32* @lr, align 4
  %v0_1000adb4 = call i32 @function_1000b964()
  br label %dec_label_pc_1000adb8

dec_label_pc_1000adb8:                            ; preds = %dec_label_pc_1000ad5c, %dec_label_pc_1000adb0
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1000adc4.480 to i32), i32* @lr, align 4
  %v0_1000adc0 = call i32 @function_1000a79c()
  %v0_1000adc4 = call i32 @function_1000aeb8()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_1000adcc = inttoptr i32 %v0_1000adc4 to i32*
  store i32 12, i32* %v2_1000adcc, align 4
  br label %dec_label_pc_1000ade0

dec_label_pc_1000add4:                            ; preds = %dec_label_pc_1000ad98
  %v0_1000addc = call i32 @function_1000c2f8()
  br label %dec_label_pc_1000ade0

dec_label_pc_1000ade0:                            ; preds = %dec_label_pc_1000ace8, %dec_label_pc_1000adb8, %dec_label_pc_1000ad3c, %dec_label_pc_1000add4
  store i32 %v0_1000ace8, i32* %r0.global-to-local, align 4
  %v0_1000ade4 = load i32, i32* @r31, align 4
  ret i32 %v0_1000ade4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000b8f4, { 36, 6, 37, 35, 34, 33, 32, 2, 1, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5, 4, 3, 0 }
  uselistorder i32 512, { 9, 11, 12, 13, 14, 0, 1, 2, 15, 10, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @function_1000a79c, { 27, 26, 25, 12, 11, 10, 9, 14, 8, 7, 34, 33, 42, 41, 40, 39, 38, 37, 36, 35, 32, 31, 30, 29, 28, 24, 23, 22, 21, 6, 20, 19, 18, 17, 16, 15, 13, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_1000ade0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000adb8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad98, { 1, 0 }
}

define i32 @function_1000adf8(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000adf8:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_1000adfc = load i32, i32* @lr, align 4
  store i32 %v0_1000adfc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000ae14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000ae14, i32* @r3, align 4
  %v3_1000ae20 = call i32 @function_1000c300(i32 %v2_1000ae14, i32 ptrtoint ([3 x i8]* @global_var_1000c2f8.477 to i32))
  %v0_1000ae28 = call i32 @function_1000c2f8()
  br label %dec_label_pc_1000ae2c

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000ae68, %dec_label_pc_1000adf8
  %v0_1000ae2c = load i32, i32* @r31, align 4
  %v1_1000ae2c = add i32 %v0_1000ae2c, 4
  %v2_1000ae2c = inttoptr i32 %v1_1000ae2c to i32*
  %v3_1000ae2c = load i32, i32* %v2_1000ae2c, align 4
  store i32 %v3_1000ae2c, i32* %r0.global-to-local, align 4
  %v1_1000ae30 = add i32 %v0_1000ae2c, 8
  %v2_1000ae30 = inttoptr i32 %v1_1000ae30 to i32*
  %v3_1000ae30 = load i32, i32* %v2_1000ae30, align 4
  store i32 %v3_1000ae30, i32* %r9.global-to-local, align 4
  %v3_1000ae34 = icmp ugt i32 %v3_1000ae30, %v3_1000ae2c
  br i1 %v3_1000ae34, label %dec_label_pc_1000ae68, label %dec_label_pc_1000ae3c

dec_label_pc_1000ae3c:                            ; preds = %dec_label_pc_1000ae2c
  %v1_1000ae3c = inttoptr i32 %v0_1000ae2c to i32*
  %v2_1000ae3c = load i32, i32* %v1_1000ae3c, align 4
  store i32 %v2_1000ae3c, i32* @r3, align 4
  %v1_1000ae40 = add i32 %v0_1000ae2c, 12
  %v2_1000ae40 = inttoptr i32 %v1_1000ae40 to i32*
  %v3_1000ae40 = load i32, i32* %v2_1000ae40, align 4
  %v1_1000ae44 = add i32 %v0_1000ae2c, 20
  %v2_1000ae44 = inttoptr i32 %v1_1000ae44 to i32*
  %v3_1000ae44 = load i32, i32* %v2_1000ae44, align 4
  store i32 %v3_1000ae44, i32* @r5, align 4
  store i32 268480076, i32* @lr, align 4
  %v4_1000ae48 = inttoptr i32 %v2_1000ae3c to i32*
  %v5_1000ae48 = call i32 @function_1000c748(i32* %v4_1000ae48, i32 %v3_1000ae40, i32 %v3_1000ae44, i32 %v3_1000ae30)
  %v2_1000ae4c = icmp sgt i32 %v5_1000ae48, 0
  br i1 %v2_1000ae4c, label %dec_label_pc_1000ae5c, label %dec_label_pc_1000ae54

dec_label_pc_1000ae54:                            ; preds = %dec_label_pc_1000ae3c
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000ae94

dec_label_pc_1000ae5c:                            ; preds = %dec_label_pc_1000ae3c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000ae60 = load i32, i32* @r31, align 4
  %v2_1000ae60 = add i32 %v1_1000ae60, 8
  %v3_1000ae60 = inttoptr i32 %v2_1000ae60 to i32*
  store i32 %v5_1000ae48, i32* %v3_1000ae60, align 4
  %v0_1000ae64 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ae64 = load i32, i32* @r31, align 4
  %v2_1000ae64 = add i32 %v1_1000ae64, 4
  %v3_1000ae64 = inttoptr i32 %v2_1000ae64 to i32*
  store i32 %v0_1000ae64, i32* %v3_1000ae64, align 4
  %v0_1000ae68.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ae68

dec_label_pc_1000ae68:                            ; preds = %dec_label_pc_1000ae2c, %dec_label_pc_1000ae5c
  %v1_1000ae7c = phi i32 [ %v0_1000ae2c, %dec_label_pc_1000ae2c ], [ %v0_1000ae68.pre, %dec_label_pc_1000ae5c ]
  %v1_1000ae68 = add i32 %v1_1000ae7c, 4
  %v2_1000ae68 = inttoptr i32 %v1_1000ae68 to i32*
  %v3_1000ae68 = load i32, i32* %v2_1000ae68, align 4
  store i32 %v3_1000ae68, i32* %r9.global-to-local, align 4
  %v1_1000ae6c = add i32 %v1_1000ae7c, 12
  %v2_1000ae6c = inttoptr i32 %v1_1000ae6c to i32*
  %v3_1000ae6c = load i32, i32* %v2_1000ae6c, align 4
  store i32 %v3_1000ae6c, i32* %r11.global-to-local, align 4
  %v2_1000ae70 = add i32 %v3_1000ae6c, %v3_1000ae68
  store i32 %v2_1000ae70, i32* @r29, align 4
  %v1_1000ae74 = add i32 %v2_1000ae70, 8
  %v2_1000ae74 = inttoptr i32 %v1_1000ae74 to i16*
  %v3_1000ae74 = load i16, i16* %v2_1000ae74, align 2
  %v4_1000ae74 = zext i16 %v3_1000ae74 to i32
  %v2_1000ae78 = add i32 %v4_1000ae74, %v3_1000ae68
  store i32 %v2_1000ae78, i32* %r0.global-to-local, align 4
  store i32 %v2_1000ae78, i32* %v2_1000ae68, align 4
  %v0_1000ae80 = load i32, i32* @r29, align 4
  %v1_1000ae80 = add i32 %v0_1000ae80, 4
  %v2_1000ae80 = inttoptr i32 %v1_1000ae80 to i32*
  %v3_1000ae80 = load i32, i32* %v2_1000ae80, align 4
  store i32 %v3_1000ae80, i32* %r0.global-to-local, align 4
  %v1_1000ae84 = load i32, i32* @r31, align 4
  %v2_1000ae84 = add i32 %v1_1000ae84, 16
  %v3_1000ae84 = inttoptr i32 %v2_1000ae84 to i32*
  store i32 %v3_1000ae80, i32* %v3_1000ae84, align 4
  %v0_1000ae88 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ae88 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ae88 = add i32 %v1_1000ae88, %v0_1000ae88
  %v3_1000ae88 = inttoptr i32 %v2_1000ae88 to i32*
  %v4_1000ae88 = load i32, i32* %v3_1000ae88, align 4
  store i32 %v4_1000ae88, i32* %r0.global-to-local, align 4
  %v3_1000ae8c = icmp eq i32 %v4_1000ae88, 0
  br i1 %v3_1000ae8c, label %dec_label_pc_1000ae2c, label %dec_label_pc_1000ae94

dec_label_pc_1000ae94:                            ; preds = %dec_label_pc_1000ae68, %dec_label_pc_1000ae54
  store i32 %v2_1000ae14, i32* @r3, align 4
  %v2_1000ae9c = call i32 @function_1000c300(i32 %v2_1000ae14, i32 1)
  store i32 %v0_1000adfc, i32* %r0.global-to-local, align 4
  %v0_1000aea4 = load i32, i32* @r29, align 4
  ret i32 %v0_1000aea4

; uselistorder directives
  uselistorder i32 %v1_1000ae7c, { 1, 0 }
  uselistorder i32 %v0_1000ae2c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_1000ae14, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ae68, { 1, 0 }
}

define i32 @function_1000aeb8() local_unnamed_addr {
dec_label_pc_1000aeb8:
  ret i32 ptrtoint (i32* @global_var_1001e1d8.482 to i32)
}

define i32 @function_1000aec4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aec4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1000aecc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268480216, i32* @lr, align 4
  %v1_1000aed4 = call i32 @function_1000cb88(i32 %v2_1000aecc)
  %v3_1000aedc = load i32, i32* %stack_var_-24, align 4
  %v2_1000aee0 = add i32 %v3_1000aedc, %tmp
  %v1_1000aee8 = mul i32 %v2_1000aee0, 10000
  %v1_1000aef4 = and i32 %v1_1000aee8, 2147483632
  ret i32 %v1_1000aef4
}

define i32 @function_1000aefc() local_unnamed_addr {
dec_label_pc_1000aefc:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000aefc = load i32, i32* @r5, align 4
  %v1_1000aefc = call i32 @__asm_rlwinm.(i32 %v0_1000aefc, i32 29, i32 3, i32 31)
  store i32 %v1_1000aefc, i32* %r9.global-to-local, align 4
  %v4_1000aefc = icmp eq i32 %v1_1000aefc, 0
  %v0_1000af00 = load i32, i32* @r4, align 4
  %v1_1000af00 = add i32 %v0_1000af00, -4
  store i32 %v1_1000af00, i32* %r4.global-to-local, align 4
  %v0_1000af04 = load i32, i32* @r3, align 4
  %v1_1000af04 = add i32 %v0_1000af04, -4
  store i32 %v1_1000af04, i32* @r11, align 4
  br i1 %v4_1000aefc, label %dec_label_pc_1000af2c, label %dec_label_pc_1000af0c

dec_label_pc_1000af0c:                            ; preds = %dec_label_pc_1000aefc
  %v1_1000af0c = urem i32 %v1_1000af04, 4
  %v3_1000af0c = icmp eq i32 %v1_1000af0c, 0
  br i1 %v3_1000af0c, label %dec_label_pc_1000af14, label %dec_label_pc_1000af68

dec_label_pc_1000af14:                            ; preds = %dec_label_pc_1000af88.dec_label_pc_1000af14_crit_edge, %dec_label_pc_1000af0c
  %v1_1000af20.pre = phi i32 [ %v1_1000af04, %dec_label_pc_1000af0c ], [ %v1_1000af20.pre.pre, %dec_label_pc_1000af88.dec_label_pc_1000af14_crit_edge ]
  %v0_1000af14 = phi i32 [ %v1_1000aefc, %dec_label_pc_1000af0c ], [ %v1_1000af88, %dec_label_pc_1000af88.dec_label_pc_1000af14_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000af0c ], [ %v2_1000af70, %dec_label_pc_1000af88.dec_label_pc_1000af14_crit_edge ]
  store i32 %v0_1000af14, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000af18

dec_label_pc_1000af18:                            ; preds = %dec_label_pc_1000af18, %dec_label_pc_1000af14
  %v1_1000af20 = phi i32 [ %v2_1000af24, %dec_label_pc_1000af18 ], [ %v1_1000af20.pre, %dec_label_pc_1000af14 ]
  %v0_1000af18 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000af18 = add i32 %v0_1000af18, 4
  %v2_1000af18 = inttoptr i32 %v1_1000af18 to i32*
  %v3_1000af18 = load i32, i32* %v2_1000af18, align 4
  %v1_1000af1c = add i32 %v0_1000af18, 8
  %v2_1000af1c = inttoptr i32 %v1_1000af1c to i32*
  %v3_1000af1c = load i32, i32* %v2_1000af1c, align 4
  store i32 %v3_1000af1c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000af1c, i32* %r4.global-to-local, align 4
  %v2_1000af20 = add i32 %v1_1000af20, 4
  %v3_1000af20 = inttoptr i32 %v2_1000af20 to i32*
  store i32 %v3_1000af18, i32* %v3_1000af20, align 4
  %v0_1000af24 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000af24 = load i32, i32* @r11, align 4
  %v2_1000af24 = add i32 %v1_1000af24, 8
  %v3_1000af24 = inttoptr i32 %v2_1000af24 to i32*
  store i32 %v0_1000af24, i32* %v3_1000af24, align 4
  store i32 %v2_1000af24, i32* @r11, align 4
  %v0_1000af28 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000af28 = add i32 %v0_1000af28, -1
  store i32 %v1_1000af28, i32* %ctr.global-to-local, align 4
  %v2_1000af28 = icmp eq i32 %v1_1000af28, 0
  br i1 %v2_1000af28, label %dec_label_pc_1000af2c, label %dec_label_pc_1000af18

dec_label_pc_1000af2c:                            ; preds = %dec_label_pc_1000af18, %dec_label_pc_1000af88, %dec_label_pc_1000aefc
  %.1 = phi i32 [ undef, %dec_label_pc_1000aefc ], [ %v2_1000af70, %dec_label_pc_1000af88 ], [ %.0, %dec_label_pc_1000af18 ]
  %v1_1000af2c = urem i32 %.1, 8
  store i32 %v1_1000af2c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000af2c, 4
  br i1 %tmp, label %dec_label_pc_1000af44, label %dec_label_pc_1000af38

dec_label_pc_1000af38:                            ; preds = %dec_label_pc_1000af2c
  %v0_1000af38 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000af38 = add i32 %v0_1000af38, 4
  %v2_1000af38 = inttoptr i32 %v1_1000af38 to i32*
  %v3_1000af38 = load i32, i32* %v2_1000af38, align 4
  store i32 %v1_1000af38, i32* %r4.global-to-local, align 4
  %v1_1000af3c = add nsw i32 %v1_1000af2c, -4
  store i32 %v1_1000af3c, i32* @r5, align 4
  %v1_1000af40 = load i32, i32* @r11, align 4
  %v2_1000af40 = add i32 %v1_1000af40, 4
  %v3_1000af40 = inttoptr i32 %v2_1000af40 to i32*
  store i32 %v3_1000af38, i32* %v3_1000af40, align 4
  store i32 %v2_1000af40, i32* @r11, align 4
  %v0_1000af44.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000af44

dec_label_pc_1000af44:                            ; preds = %dec_label_pc_1000af2c, %dec_label_pc_1000af38
  %v0_1000af44 = phi i32 [ %v1_1000af2c, %dec_label_pc_1000af2c ], [ %v0_1000af44.pre, %dec_label_pc_1000af38 ]
  %v3_1000af44 = icmp eq i32 %v0_1000af44, 0
  %v0_1000af48 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000af44, i32 %v0_1000af48)
  %v0_1000af4c = load i32, i32* @r5, align 4
  store i32 %v0_1000af4c, i32* %ctr.global-to-local, align 4
  %v0_1000af50 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000af50 = add i32 %v0_1000af50, 3
  store i32 %v1_1000af50, i32* %r4.global-to-local, align 4
  %v0_1000af54 = load i32, i32* @r11, align 4
  %v1_1000af54 = add i32 %v0_1000af54, 3
  store i32 %v1_1000af54, i32* %r9.global-to-local, align 4
  %v1_1000af589 = add i32 %v0_1000af50, 4
  %v2_1000af5810 = inttoptr i32 %v1_1000af589 to i8*
  %v3_1000af5811 = load i8, i8* %v2_1000af5810, align 1
  store i32 %v1_1000af589, i32* %r4.global-to-local, align 4
  %v3_1000af5c13 = add i32 %v0_1000af54, 4
  %v4_1000af5c14 = inttoptr i32 %v3_1000af5c13 to i8*
  store i8 %v3_1000af5811, i8* %v4_1000af5c14, align 1
  store i32 %v3_1000af5c13, i32* %r9.global-to-local, align 4
  %v0_1000af6015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000af6016 = add i32 %v0_1000af6015, -1
  store i32 %v1_1000af6016, i32* %ctr.global-to-local, align 4
  %v2_1000af6017 = icmp eq i32 %v1_1000af6016, 0
  br i1 %v2_1000af6017, label %dec_label_pc_1000af94, label %dec_label_pc_1000af58.dec_label_pc_1000af58_crit_edge

dec_label_pc_1000af58.dec_label_pc_1000af58_crit_edge: ; preds = %dec_label_pc_1000af44, %dec_label_pc_1000af58.dec_label_pc_1000af58_crit_edge
  %v3_1000af5c18 = phi i32 [ %v3_1000af5c, %dec_label_pc_1000af58.dec_label_pc_1000af58_crit_edge ], [ %v3_1000af5c13, %dec_label_pc_1000af44 ]
  %v0_1000af58.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000af58 = add i32 %v0_1000af58.pre, 1
  %v2_1000af58 = inttoptr i32 %v1_1000af58 to i8*
  %v3_1000af58 = load i8, i8* %v2_1000af58, align 1
  store i32 %v1_1000af58, i32* %r4.global-to-local, align 4
  %v3_1000af5c = add i32 %v3_1000af5c18, 1
  %v4_1000af5c = inttoptr i32 %v3_1000af5c to i8*
  store i8 %v3_1000af58, i8* %v4_1000af5c, align 1
  store i32 %v3_1000af5c, i32* %r9.global-to-local, align 4
  %v0_1000af60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000af60 = add i32 %v0_1000af60, -1
  store i32 %v1_1000af60, i32* %ctr.global-to-local, align 4
  %v2_1000af60 = icmp eq i32 %v1_1000af60, 0
  br i1 %v2_1000af60, label %dec_label_pc_1000af94, label %dec_label_pc_1000af58.dec_label_pc_1000af58_crit_edge

dec_label_pc_1000af68:                            ; preds = %dec_label_pc_1000af0c
  %v1_1000af68 = sub nsw i32 4, %v1_1000af0c
  store i32 %v1_1000af68, i32* %ctr.global-to-local, align 4
  %v1_1000af70 = load i32, i32* @r5, align 4
  %v2_1000af70 = sub i32 %v1_1000af70, %v1_1000af68
  br label %dec_label_pc_1000af74

dec_label_pc_1000af74:                            ; preds = %dec_label_pc_1000af74.dec_label_pc_1000af74_crit_edge, %dec_label_pc_1000af68
  %v2_1000af7c = phi i32 [ %v1_1000af80, %dec_label_pc_1000af74.dec_label_pc_1000af74_crit_edge ], [ %v1_1000af04, %dec_label_pc_1000af68 ]
  %v0_1000af74 = phi i32 [ %v0_1000af74.pre, %dec_label_pc_1000af74.dec_label_pc_1000af74_crit_edge ], [ %v1_1000af00, %dec_label_pc_1000af68 ]
  %v1_1000af74 = add i32 %v0_1000af74, 4
  %v2_1000af74 = inttoptr i32 %v1_1000af74 to i8*
  %v3_1000af74 = load i8, i8* %v2_1000af74, align 1
  %v1_1000af78 = add i32 %v0_1000af74, 1
  store i32 %v1_1000af78, i32* %r4.global-to-local, align 4
  %v3_1000af7c = add i32 %v2_1000af7c, 4
  %v4_1000af7c = inttoptr i32 %v3_1000af7c to i8*
  store i8 %v3_1000af74, i8* %v4_1000af7c, align 1
  %v0_1000af80 = load i32, i32* @r11, align 4
  %v1_1000af80 = add i32 %v0_1000af80, 1
  store i32 %v1_1000af80, i32* @r11, align 4
  %v0_1000af84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000af84 = add i32 %v0_1000af84, -1
  store i32 %v1_1000af84, i32* %ctr.global-to-local, align 4
  %v2_1000af84 = icmp eq i32 %v1_1000af84, 0
  br i1 %v2_1000af84, label %dec_label_pc_1000af88, label %dec_label_pc_1000af74.dec_label_pc_1000af74_crit_edge

dec_label_pc_1000af74.dec_label_pc_1000af74_crit_edge: ; preds = %dec_label_pc_1000af74
  %v0_1000af74.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000af74

dec_label_pc_1000af88:                            ; preds = %dec_label_pc_1000af74
  %v1_1000af88 = call i32 @__asm_rlwinm.(i32 %v2_1000af70, i32 29, i32 3, i32 31)
  store i32 %v1_1000af88, i32* %r9.global-to-local, align 4
  %v4_1000af88 = icmp eq i32 %v1_1000af88, 0
  br i1 %v4_1000af88, label %dec_label_pc_1000af2c, label %dec_label_pc_1000af88.dec_label_pc_1000af14_crit_edge

dec_label_pc_1000af88.dec_label_pc_1000af14_crit_edge: ; preds = %dec_label_pc_1000af88
  %v1_1000af20.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000af14

dec_label_pc_1000af94:                            ; preds = %dec_label_pc_1000af58.dec_label_pc_1000af58_crit_edge, %dec_label_pc_1000af44
  %v0_1000af94 = load i32, i32* @r3, align 4
  ret i32 %v0_1000af94

; uselistorder directives
  uselistorder i32 %v1_1000af88, { 1, 2, 0 }
  uselistorder i32 %v1_1000af84, { 1, 0 }
  uselistorder i32 %v1_1000af80, { 1, 0 }
  uselistorder i32 %v0_1000af74, { 1, 0 }
  uselistorder i32 %v2_1000af70, { 2, 1, 0 }
  uselistorder i32 %v1_1000af60, { 1, 0 }
  uselistorder i32 %v3_1000af5c, { 1, 2, 0 }
  uselistorder i32 %v1_1000af2c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000af28, { 1, 0 }
  uselistorder i32 %v2_1000af24, { 1, 2, 0 }
  uselistorder i32 %v1_1000af0c, { 1, 0 }
  uselistorder i32 %v1_1000af04, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000af58.dec_label_pc_1000af58_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000af44, { 1, 0 }
  uselistorder label %dec_label_pc_1000af2c, { 1, 0, 2 }
}

define i32 @function_1000af98(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000af98:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000af98 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_1000af98, label %dec_label_pc_1000afac, label %dec_label_pc_1000afa8

dec_label_pc_1000afa8:                            ; preds = %dec_label_pc_1000af98
  %v0_1000afa8 = call i32 @function_1000aefc()
  store i32 %v0_1000afa8, i32* @r3, align 4
  br label %dec_label_pc_1000afac

dec_label_pc_1000afac:                            ; preds = %dec_label_pc_1000af98, %dec_label_pc_1000afa8
  %v1_1000afac = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000afac, i32* %r9.global-to-local, align 4
  %v4_1000afac = icmp eq i32 %v1_1000afac, 0
  %v2_1000afb0 = add i32 %arg3, %arg2
  store i32 %v2_1000afb0, i32* %r4.global-to-local, align 4
  %v0_1000afb4 = load i32, i32* @r3, align 4
  %v2_1000afb4 = add i32 %v0_1000afb4, %arg3
  store i32 %v2_1000afb4, i32* %r10.global-to-local, align 4
  br i1 %v4_1000afac, label %dec_label_pc_1000afdc, label %dec_label_pc_1000afbc

dec_label_pc_1000afbc:                            ; preds = %dec_label_pc_1000afac
  %v1_1000afbc = urem i32 %v2_1000afb4, 4
  %v3_1000afbc = icmp eq i32 %v1_1000afbc, 0
  br i1 %v3_1000afbc, label %dec_label_pc_1000afc4, label %dec_label_pc_1000b010

dec_label_pc_1000afc4:                            ; preds = %dec_label_pc_1000b028.dec_label_pc_1000afc4_crit_edge, %dec_label_pc_1000afbc
  %v1_1000afd0.pre = phi i32 [ %v1_1000afd0.pre.pre, %dec_label_pc_1000b028.dec_label_pc_1000afc4_crit_edge ], [ %v2_1000afb4, %dec_label_pc_1000afbc ]
  %v0_1000afc4 = phi i32 [ %v1_1000b028, %dec_label_pc_1000b028.dec_label_pc_1000afc4_crit_edge ], [ %v1_1000afac, %dec_label_pc_1000afbc ]
  store i32 %v0_1000afc4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000afc8

dec_label_pc_1000afc8:                            ; preds = %dec_label_pc_1000afc8, %dec_label_pc_1000afc4
  %v1_1000afd0 = phi i32 [ %v2_1000afd4, %dec_label_pc_1000afc8 ], [ %v1_1000afd0.pre, %dec_label_pc_1000afc4 ]
  %v0_1000afc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000afc8 = add i32 %v0_1000afc8, -4
  %v2_1000afc8 = inttoptr i32 %v1_1000afc8 to i32*
  %v3_1000afc8 = load i32, i32* %v2_1000afc8, align 4
  %v1_1000afcc = add i32 %v0_1000afc8, -8
  %v2_1000afcc = inttoptr i32 %v1_1000afcc to i32*
  %v3_1000afcc = load i32, i32* %v2_1000afcc, align 4
  store i32 %v3_1000afcc, i32* %r9.global-to-local, align 4
  store i32 %v1_1000afcc, i32* %r4.global-to-local, align 4
  %v2_1000afd0 = add i32 %v1_1000afd0, -4
  %v3_1000afd0 = inttoptr i32 %v2_1000afd0 to i32*
  store i32 %v3_1000afc8, i32* %v3_1000afd0, align 4
  %v0_1000afd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000afd4 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000afd4 = add i32 %v1_1000afd4, -8
  %v3_1000afd4 = inttoptr i32 %v2_1000afd4 to i32*
  store i32 %v0_1000afd4, i32* %v3_1000afd4, align 4
  store i32 %v2_1000afd4, i32* %r10.global-to-local, align 4
  %v0_1000afd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000afd8 = add i32 %v0_1000afd8, -1
  store i32 %v1_1000afd8, i32* %ctr.global-to-local, align 4
  %v2_1000afd8 = icmp eq i32 %v1_1000afd8, 0
  br i1 %v2_1000afd8, label %dec_label_pc_1000afdc, label %dec_label_pc_1000afc8

dec_label_pc_1000afdc:                            ; preds = %dec_label_pc_1000afc8, %dec_label_pc_1000b028, %dec_label_pc_1000afac
  %v0_1000afdc = load i32, i32* @r11, align 4
  %v1_1000afdc = urem i32 %v0_1000afdc, 8
  store i32 %v1_1000afdc, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000afdc, 4
  br i1 %tmp, label %dec_label_pc_1000aff4, label %dec_label_pc_1000afe8

dec_label_pc_1000afe8:                            ; preds = %dec_label_pc_1000afdc
  %v0_1000afe8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000afe8 = add i32 %v0_1000afe8, -4
  %v2_1000afe8 = inttoptr i32 %v1_1000afe8 to i32*
  %v3_1000afe8 = load i32, i32* %v2_1000afe8, align 4
  store i32 %v1_1000afe8, i32* %r4.global-to-local, align 4
  %v1_1000afec = add nsw i32 %v1_1000afdc, -4
  store i32 %v1_1000afec, i32* %r5.global-to-local, align 4
  %v1_1000aff0 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000aff0 = add i32 %v1_1000aff0, -4
  %v3_1000aff0 = inttoptr i32 %v2_1000aff0 to i32*
  store i32 %v3_1000afe8, i32* %v3_1000aff0, align 4
  store i32 %v2_1000aff0, i32* %r10.global-to-local, align 4
  %v0_1000aff4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000aff4

dec_label_pc_1000aff4:                            ; preds = %dec_label_pc_1000afdc, %dec_label_pc_1000afe8
  %v0_1000affc = phi i32 [ %v1_1000afdc, %dec_label_pc_1000afdc ], [ %v0_1000aff4.pre, %dec_label_pc_1000afe8 ]
  %v3_1000aff4 = icmp eq i32 %v0_1000affc, 0
  br i1 %v3_1000aff4, label %dec_label_pc_1000b034, label %dec_label_pc_1000affc

dec_label_pc_1000affc:                            ; preds = %dec_label_pc_1000aff4
  store i32 %v0_1000affc, i32* %ctr.global-to-local, align 4
  %v2_1000b004.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b000

dec_label_pc_1000b000:                            ; preds = %dec_label_pc_1000b000, %dec_label_pc_1000affc
  %v2_1000b004 = phi i32 [ %v3_1000b004, %dec_label_pc_1000b000 ], [ %v2_1000b004.pre, %dec_label_pc_1000affc ]
  %v0_1000b000 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b000 = add i32 %v0_1000b000, -1
  %v2_1000b000 = inttoptr i32 %v1_1000b000 to i8*
  %v3_1000b000 = load i8, i8* %v2_1000b000, align 1
  store i32 %v1_1000b000, i32* %r4.global-to-local, align 4
  %v3_1000b004 = add i32 %v2_1000b004, -1
  %v4_1000b004 = inttoptr i32 %v3_1000b004 to i8*
  store i8 %v3_1000b000, i8* %v4_1000b004, align 1
  store i32 %v3_1000b004, i32* %r10.global-to-local, align 4
  %v0_1000b008 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b008 = add i32 %v0_1000b008, -1
  store i32 %v1_1000b008, i32* %ctr.global-to-local, align 4
  %v2_1000b008 = icmp eq i32 %v1_1000b008, 0
  br i1 %v2_1000b008, label %dec_label_pc_1000b034, label %dec_label_pc_1000b000

dec_label_pc_1000b010:                            ; preds = %dec_label_pc_1000afbc
  %v1_1000b010 = sub nsw i32 4, %v1_1000afbc
  store i32 %v1_1000b010, i32* %ctr.global-to-local, align 4
  %v2_1000b018 = sub i32 %arg3, %v1_1000b010
  store i32 %v2_1000b018, i32* @r11, align 4
  %v1_1000b01c8 = add i32 %v2_1000afb0, -1
  %v2_1000b01c9 = inttoptr i32 %v1_1000b01c8 to i8*
  %v3_1000b01c10 = load i8, i8* %v2_1000b01c9, align 1
  store i32 %v1_1000b01c8, i32* %r4.global-to-local, align 4
  %v3_1000b02012 = add i32 %v2_1000afb4, -1
  %v4_1000b02013 = inttoptr i32 %v3_1000b02012 to i8*
  store i8 %v3_1000b01c10, i8* %v4_1000b02013, align 1
  store i32 %v3_1000b02012, i32* %r10.global-to-local, align 4
  %v0_1000b02414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b02415 = add i32 %v0_1000b02414, -1
  store i32 %v1_1000b02415, i32* %ctr.global-to-local, align 4
  %v2_1000b02416 = icmp eq i32 %v1_1000b02415, 0
  br i1 %v2_1000b02416, label %dec_label_pc_1000b028, label %dec_label_pc_1000b01c.dec_label_pc_1000b01c_crit_edge

dec_label_pc_1000b01c.dec_label_pc_1000b01c_crit_edge: ; preds = %dec_label_pc_1000b010, %dec_label_pc_1000b01c.dec_label_pc_1000b01c_crit_edge
  %v3_1000b02017 = phi i32 [ %v3_1000b020, %dec_label_pc_1000b01c.dec_label_pc_1000b01c_crit_edge ], [ %v3_1000b02012, %dec_label_pc_1000b010 ]
  %v0_1000b01c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b01c = add i32 %v0_1000b01c.pre, -1
  %v2_1000b01c = inttoptr i32 %v1_1000b01c to i8*
  %v3_1000b01c = load i8, i8* %v2_1000b01c, align 1
  store i32 %v1_1000b01c, i32* %r4.global-to-local, align 4
  %v3_1000b020 = add i32 %v3_1000b02017, -1
  %v4_1000b020 = inttoptr i32 %v3_1000b020 to i8*
  store i8 %v3_1000b01c, i8* %v4_1000b020, align 1
  store i32 %v3_1000b020, i32* %r10.global-to-local, align 4
  %v0_1000b024 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b024 = add i32 %v0_1000b024, -1
  store i32 %v1_1000b024, i32* %ctr.global-to-local, align 4
  %v2_1000b024 = icmp eq i32 %v1_1000b024, 0
  br i1 %v2_1000b024, label %dec_label_pc_1000b028, label %dec_label_pc_1000b01c.dec_label_pc_1000b01c_crit_edge

dec_label_pc_1000b028:                            ; preds = %dec_label_pc_1000b01c.dec_label_pc_1000b01c_crit_edge, %dec_label_pc_1000b010
  %v0_1000b028 = load i32, i32* @r11, align 4
  %v1_1000b028 = call i32 @__asm_rlwinm.(i32 %v0_1000b028, i32 29, i32 3, i32 31)
  store i32 %v1_1000b028, i32* %r9.global-to-local, align 4
  %v4_1000b028 = icmp eq i32 %v1_1000b028, 0
  br i1 %v4_1000b028, label %dec_label_pc_1000afdc, label %dec_label_pc_1000b028.dec_label_pc_1000afc4_crit_edge

dec_label_pc_1000b028.dec_label_pc_1000afc4_crit_edge: ; preds = %dec_label_pc_1000b028
  %v1_1000afd0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000afc4

dec_label_pc_1000b034:                            ; preds = %dec_label_pc_1000b000, %dec_label_pc_1000aff4
  %v0_1000b034 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000b034

; uselistorder directives
  uselistorder i32 %v1_1000b028, { 1, 2, 0 }
  uselistorder i32 %v1_1000b024, { 1, 0 }
  uselistorder i32 %v3_1000b020, { 1, 2, 0 }
  uselistorder i32 %v1_1000b008, { 1, 0 }
  uselistorder i32 %v3_1000b004, { 1, 2, 0 }
  uselistorder i32 %v1_1000afdc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000afd8, { 1, 0 }
  uselistorder i32 %v2_1000afd4, { 1, 2, 0 }
  uselistorder i32 %v1_1000afbc, { 1, 0 }
  uselistorder i32 %v2_1000afb4, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 4, 0, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_1000b01c.dec_label_pc_1000b01c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000aff4, { 1, 0 }
  uselistorder label %dec_label_pc_1000afdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000afac, { 1, 0 }
}

define i32 @function_1000b03c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b03c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000b03c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000b03c, i32* %r9.global-to-local, align 4
  %v4_1000b03c = icmp eq i32 %v1_1000b03c, 0
  %v1_1000b044 = add i32 %arg1, -4
  store i32 %v1_1000b044, i32* %r11.global-to-local, align 4
  %v1_1000b048 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000b04c = call i32 @__asm_rlwimi(i32 %v1_1000b048, i32 16, i32 0, i32 15)
  %v2_1000b04c = trunc i32 %v1_1000b04c to i8
  br i1 %v4_1000b03c, label %dec_label_pc_1000b074, label %dec_label_pc_1000b054

dec_label_pc_1000b054:                            ; preds = %dec_label_pc_1000b03c
  %v0_1000b054 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b054 = urem i32 %v0_1000b054, 4
  %v3_1000b054 = icmp eq i32 %v1_1000b054, 0
  br i1 %v3_1000b054, label %dec_label_pc_1000b054.dec_label_pc_1000b05c_crit_edge, label %dec_label_pc_1000b0a4

dec_label_pc_1000b054.dec_label_pc_1000b05c_crit_edge: ; preds = %dec_label_pc_1000b054
  %v0_1000b05c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b05c

dec_label_pc_1000b05c:                            ; preds = %dec_label_pc_1000b0bc.dec_label_pc_1000b05c_crit_edge, %dec_label_pc_1000b054.dec_label_pc_1000b05c_crit_edge
  %v0_1000b060.pre = phi i32 [ %v0_1000b054, %dec_label_pc_1000b054.dec_label_pc_1000b05c_crit_edge ], [ %v0_1000b060.pre.pre, %dec_label_pc_1000b0bc.dec_label_pc_1000b05c_crit_edge ]
  %v0_1000b05c = phi i32 [ %v0_1000b05c.pre, %dec_label_pc_1000b054.dec_label_pc_1000b05c_crit_edge ], [ %v1_1000b0bc, %dec_label_pc_1000b0bc.dec_label_pc_1000b05c_crit_edge ]
  store i32 %v0_1000b05c, i32* %ctr.global-to-local, align 4
  %v1_1000b064 = sext i8 %v2_1000b04c to i32
  br label %dec_label_pc_1000b060

dec_label_pc_1000b060:                            ; preds = %dec_label_pc_1000b060, %dec_label_pc_1000b05c
  %v0_1000b060 = phi i32 [ %v1_1000b06c, %dec_label_pc_1000b060 ], [ %v0_1000b060.pre, %dec_label_pc_1000b05c ]
  %v1_1000b060 = add i32 %v0_1000b060, 4
  store i32 %v1_1000b060, i32* %r9.global-to-local, align 4
  %v4_1000b064 = inttoptr i32 %v1_1000b060 to i32*
  store i32 %v1_1000b064, i32* %v4_1000b064, align 4
  %v2_1000b068 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000b068 = add i32 %v2_1000b068, 4
  %v4_1000b068 = inttoptr i32 %v3_1000b068 to i32*
  store i32 %v1_1000b064, i32* %v4_1000b068, align 4
  %v0_1000b06c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b06c = add i32 %v0_1000b06c, 4
  store i32 %v1_1000b06c, i32* %r11.global-to-local, align 4
  %v0_1000b070 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b070 = add i32 %v0_1000b070, -1
  store i32 %v1_1000b070, i32* %ctr.global-to-local, align 4
  %v2_1000b070 = icmp eq i32 %v1_1000b070, 0
  br i1 %v2_1000b070, label %dec_label_pc_1000b074, label %dec_label_pc_1000b060

dec_label_pc_1000b074:                            ; preds = %dec_label_pc_1000b060, %dec_label_pc_1000b0bc, %dec_label_pc_1000b03c
  %v0_1000b074 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b074 = urem i32 %v0_1000b074, 8
  store i32 %v1_1000b074, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b074, 4
  br i1 %tmp, label %dec_label_pc_1000b088, label %dec_label_pc_1000b080

dec_label_pc_1000b080:                            ; preds = %dec_label_pc_1000b074
  %v1_1000b080 = sext i8 %v2_1000b04c to i32
  %v2_1000b080 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000b080 = add i32 %v2_1000b080, 4
  %v4_1000b080 = inttoptr i32 %v3_1000b080 to i32*
  store i32 %v1_1000b080, i32* %v4_1000b080, align 4
  store i32 %v3_1000b080, i32* %r11.global-to-local, align 4
  %v0_1000b084 = load i32, i32* @r5, align 4
  %v1_1000b084 = add i32 %v0_1000b084, -4
  store i32 %v1_1000b084, i32* @r5, align 4
  br label %dec_label_pc_1000b088

dec_label_pc_1000b088:                            ; preds = %dec_label_pc_1000b074, %dec_label_pc_1000b080
  %v0_1000b088 = phi i32 [ %v1_1000b074, %dec_label_pc_1000b074 ], [ %v1_1000b084, %dec_label_pc_1000b080 ]
  %v3_1000b088 = icmp eq i32 %v0_1000b088, 0
  %v0_1000b08c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b088, i32 %v0_1000b08c)
  %v0_1000b090 = load i32, i32* @r5, align 4
  store i32 %v0_1000b090, i32* %ctr.global-to-local, align 4
  %v0_1000b094 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b094 = add i32 %v0_1000b094, 3
  store i32 %v1_1000b094, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b098

dec_label_pc_1000b098:                            ; preds = %dec_label_pc_1000b098, %dec_label_pc_1000b088
  %v3_1000b098 = phi i32 [ %v4_1000b098, %dec_label_pc_1000b098 ], [ %v1_1000b094, %dec_label_pc_1000b088 ]
  %v4_1000b098 = add i32 %v3_1000b098, 1
  %v5_1000b098 = inttoptr i32 %v4_1000b098 to i8*
  store i8 %v2_1000b04c, i8* %v5_1000b098, align 1
  store i32 %v4_1000b098, i32* %r9.global-to-local, align 4
  %v0_1000b09c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b09c = add i32 %v0_1000b09c, -1
  store i32 %v1_1000b09c, i32* %ctr.global-to-local, align 4
  %v2_1000b09c = icmp eq i32 %v1_1000b09c, 0
  br i1 %v2_1000b09c, label %dec_label_pc_1000b0c8, label %dec_label_pc_1000b098

dec_label_pc_1000b0a4:                            ; preds = %dec_label_pc_1000b054
  %v1_1000b0a4 = sub nsw i32 4, %v1_1000b054
  store i32 %v1_1000b0a4, i32* %ctr.global-to-local, align 4
  %v1_1000b0ac = load i32, i32* %r5.global-to-local, align 4
  %v2_1000b0ac = sub i32 %v1_1000b0ac, %v1_1000b0a4
  store i32 %v2_1000b0ac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000b0b0

dec_label_pc_1000b0b0:                            ; preds = %dec_label_pc_1000b0b0, %dec_label_pc_1000b0a4
  %v3_1000b0b0 = phi i32 [ %v1_1000b0b4, %dec_label_pc_1000b0b0 ], [ %v0_1000b054, %dec_label_pc_1000b0a4 ]
  %v4_1000b0b0 = add i32 %v3_1000b0b0, 4
  %v5_1000b0b0 = inttoptr i32 %v4_1000b0b0 to i8*
  store i8 %v2_1000b04c, i8* %v5_1000b0b0, align 1
  %v0_1000b0b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b0b4 = add i32 %v0_1000b0b4, 1
  store i32 %v1_1000b0b4, i32* %r11.global-to-local, align 4
  %v0_1000b0b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b0b8 = add i32 %v0_1000b0b8, -1
  store i32 %v1_1000b0b8, i32* %ctr.global-to-local, align 4
  %v2_1000b0b8 = icmp eq i32 %v1_1000b0b8, 0
  br i1 %v2_1000b0b8, label %dec_label_pc_1000b0bc, label %dec_label_pc_1000b0b0

dec_label_pc_1000b0bc:                            ; preds = %dec_label_pc_1000b0b0
  %v0_1000b0bc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b0bc = call i32 @__asm_rlwinm.(i32 %v0_1000b0bc, i32 29, i32 3, i32 31)
  store i32 %v1_1000b0bc, i32* %r9.global-to-local, align 4
  %v4_1000b0bc = icmp eq i32 %v1_1000b0bc, 0
  br i1 %v4_1000b0bc, label %dec_label_pc_1000b074, label %dec_label_pc_1000b0bc.dec_label_pc_1000b05c_crit_edge

dec_label_pc_1000b0bc.dec_label_pc_1000b05c_crit_edge: ; preds = %dec_label_pc_1000b0bc
  %v0_1000b060.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b05c

dec_label_pc_1000b0c8:                            ; preds = %dec_label_pc_1000b098
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000b0bc, { 1, 2, 0 }
  uselistorder i32 %v1_1000b0b8, { 1, 0 }
  uselistorder i32 %v1_1000b0b4, { 1, 0 }
  uselistorder i32 %v1_1000b09c, { 1, 0 }
  uselistorder i32 %v4_1000b098, { 1, 2, 0 }
  uselistorder i32 %v1_1000b074, { 2, 1, 0 }
  uselistorder i32 %v1_1000b070, { 1, 0 }
  uselistorder i32 %v1_1000b06c, { 1, 0 }
  uselistorder i32 %v1_1000b054, { 1, 0 }
  uselistorder i32 %v0_1000b054, { 2, 1, 0 }
  uselistorder i8 %v2_1000b04c, { 1, 3, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 46, 47, 43, 44, 45, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder label %dec_label_pc_1000b088, { 1, 0 }
  uselistorder label %dec_label_pc_1000b074, { 1, 0, 2 }
}

define i32 @function_1000b0cc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b0cc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000b0d0 = load i32, i32* @lr, align 4
  store i32 %v0_1000b0d0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000b0e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268480756, i32* @lr, align 4
  %v3_1000b0f0 = call i32 @function_1000a584(i32 1076655123, i32 %v2_1000b0e0, i32 %v2_1000b0e0)
  %v2_1000b0f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b0f4, i32* @r4, align 4
  store i32 %v3_1000b0f0, i32* @r30, align 4
  %v3_1000b0f8 = icmp eq i32 %v3_1000b0f0, 0
  %v0_1000b100 = load i32, i32* @r31, align 4
  br i1 %v3_1000b0f8, label %dec_label_pc_1000b108, label %dec_label_pc_1000b150

dec_label_pc_1000b108:                            ; preds = %dec_label_pc_1000b0cc
  %v1_1000b100 = add i32 %v0_1000b100, 17
  %v3_1000b120 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000b120, i32* %r0.global-to-local, align 4
  %v2_1000b124 = add i32 %v0_1000b100, 4
  %v3_1000b124 = inttoptr i32 %v2_1000b124 to i32*
  store i32 %tmp7, i32* %v3_1000b124, align 4
  %v0_1000b128 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b128 = load i32, i32* @r31, align 4
  %v2_1000b128 = inttoptr i32 %v1_1000b128 to i32*
  store i32 %v0_1000b128, i32* %v2_1000b128, align 4
  %v0_1000b12c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b12c = load i32, i32* @r31, align 4
  %v2_1000b12c = add i32 %v1_1000b12c, 8
  %v3_1000b12c = inttoptr i32 %v2_1000b12c to i32*
  store i32 %v0_1000b12c, i32* %v3_1000b12c, align 4
  %v0_1000b130 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b130 = load i32, i32* @r31, align 4
  %v2_1000b130 = add i32 %v1_1000b130, 12
  %v3_1000b130 = inttoptr i32 %v2_1000b130 to i32*
  store i32 %v0_1000b130, i32* %v3_1000b130, align 4
  %v3_1000b134 = load i32, i32* @r31, align 4
  %v4_1000b134 = add i32 %v3_1000b134, 16
  %v5_1000b134 = inttoptr i32 %v4_1000b134 to i8*
  store i8 %tmp4, i8* %v5_1000b134, align 1
  %v1_1000b138 = load i32, i32* @r31, align 4
  %v2_1000b138 = add i32 %v1_1000b138, 52
  %v3_1000b138 = inttoptr i32 %v2_1000b138 to i32*
  store i32 %tmp3, i32* %v3_1000b138, align 4
  %v1_1000b13c = load i32, i32* @r31, align 4
  %v2_1000b13c = add i32 %v1_1000b13c, 56
  %v3_1000b13c = inttoptr i32 %v2_1000b13c to i32*
  store i32 %tmp2, i32* %v3_1000b13c, align 4
  store i32 268480836, i32* @lr, align 4
  %v6_1000b140 = sext i8 %tmp4 to i32
  %v8_1000b140 = call i32 @function_1000cd4c(i32 %v1_1000b100, i32 %v2_1000b0f4, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000b140, i32 %tmp7)
  store i32 268480848, i32* @lr, align 4
  %v3_1000b14c = call i32 @function_1000b03c(i32 %v8_1000b140, i32 0, i32 13)
  %v0_1000b154.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b150

dec_label_pc_1000b150:                            ; preds = %dec_label_pc_1000b0cc, %dec_label_pc_1000b108
  %v0_1000b154 = phi i32 [ %v3_1000b0f0, %dec_label_pc_1000b0cc ], [ %v0_1000b154.pre, %dec_label_pc_1000b108 ]
  store i32 %v0_1000b0d0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b154

; uselistorder directives
  uselistorder i32 %v2_1000b0e0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 13, { 5, 6, 7, 12, 0, 1, 13, 8, 9, 10, 11, 14, 15, 2, 16, 17, 3, 18, 19, 4 }
  uselistorder label %dec_label_pc_1000b150, { 1, 0 }
}

define i32 @function_1000b168() local_unnamed_addr {
dec_label_pc_1000b168:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000b168 = load i32, i32* @r4, align 4
  %v3_1000b168 = icmp eq i32 %v0_1000b168, 1
  %v0_1000b178 = load i32, i32* @r3, align 4
  store i32 %v0_1000b178, i32* @r27, align 4
  %v0_1000b180 = load i32, i32* @r5, align 4
  store i32 %v0_1000b180, i32* @r31, align 4
  br i1 %v3_1000b168, label %dec_label_pc_1000b1a4, label %dec_label_pc_1000b188

dec_label_pc_1000b188:                            ; preds = %dec_label_pc_1000b168
  %v3_1000b188 = icmp eq i32 %v0_1000b168, 2
  br i1 %v3_1000b188, label %dec_label_pc_1000b1c4, label %dec_label_pc_1000b190

dec_label_pc_1000b190:                            ; preds = %dec_label_pc_1000b188
  %v3_1000b190 = icmp eq i32 %v0_1000b168, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000b190, label %dec_label_pc_1000b1cc, label %dec_label_pc_1000b1b0

dec_label_pc_1000b1a4:                            ; preds = %dec_label_pc_1000b168
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000b1cc

dec_label_pc_1000b1b0:                            ; preds = %dec_label_pc_1000b190
  %v0_1000b1b0 = call i32 @function_1000aeb8()
  store i32 -1, i32* @r28, align 4
  %v2_1000b1bc = inttoptr i32 %v0_1000b1b0 to i32*
  store i32 22, i32* %v2_1000b1bc, align 4
  br label %dec_label_pc_1000b2b4

dec_label_pc_1000b1c4:                            ; preds = %dec_label_pc_1000b188
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000b1cc

dec_label_pc_1000b1cc:                            ; preds = %dec_label_pc_1000b190, %dec_label_pc_1000b1a4, %dec_label_pc_1000b1c4
  %v1_1000b1cc = inttoptr i32 %v0_1000b180 to i32*
  %v2_1000b1cc = load i32, i32* %v1_1000b1cc, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000b1d4 = add i32 %v0_1000b180, 4
  %v2_1000b1d4 = inttoptr i32 %v1_1000b1d4 to i32*
  %v3_1000b1d4 = load i32, i32* %v2_1000b1d4, align 4
  store i32 %v3_1000b1d4, i32* %r9.global-to-local, align 4
  %v1_1000b1d8 = add i32 %v0_1000b180, 17
  store i32 %v1_1000b1d8, i32* @r4, align 4
  %v1_1000b1dc = add i32 %v0_1000b180, 8
  %v2_1000b1dc = inttoptr i32 %v1_1000b1dc to i32*
  %v3_1000b1dc = load i32, i32* %v2_1000b1dc, align 4
  %v2_1000b1e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b1e0, i32* @r3, align 4
  %v2_1000b1e8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000b1cc, i32* %stack_var_-72, align 4
  store i32 268481048, i32* @lr, align 4
  %v0_1000b214 = call i32 @function_1000aefc()
  %v0_1000b218 = load i32, i32* @r27, align 4
  %v0_1000b21c = load i32, i32* @r30, align 4
  store i32 268481068, i32* @lr, align 4
  %v3_1000b228 = call i32 @function_1000a584(i32 %v0_1000b218, i32 %v0_1000b21c, i32 %v2_1000b1e8)
  store i32 %v3_1000b228, i32* @r28, align 4
  %v3_1000b22c = icmp eq i32 %v3_1000b228, 0
  br i1 %v3_1000b22c, label %dec_label_pc_1000b234, label %dec_label_pc_1000b2b4

dec_label_pc_1000b234:                            ; preds = %dec_label_pc_1000b1cc
  %v0_1000b234 = load i32, i32* @r30, align 4
  %v3_1000b238 = icmp eq i32 %v0_1000b234, -2144570348
  br i1 %v3_1000b238, label %dec_label_pc_1000b240, label %dec_label_pc_1000b2b0

dec_label_pc_1000b240:                            ; preds = %dec_label_pc_1000b234
  %v0_1000b240 = call i32 @function_1000aeb8()
  store i32 %v0_1000b240, i32* @r29, align 4
  %v0_1000b250 = load i32, i32* @r27, align 4
  %v1_1000b258 = inttoptr i32 %v0_1000b240 to i32*
  %v2_1000b258 = load i32, i32* %v1_1000b258, align 4
  store i32 %v2_1000b258, i32* @r30, align 4
  store i32 268481124, i32* @lr, align 4
  %v3_1000b260 = call i32 @function_1000a584(i32 %v0_1000b250, i32 1076655123, i32 %v2_1000b1e8)
  %v3_1000b264 = icmp eq i32 %v3_1000b260, 0
  br i1 %v3_1000b264, label %dec_label_pc_1000b274, label %dec_label_pc_1000b26c

dec_label_pc_1000b26c:                            ; preds = %dec_label_pc_1000b240
  %v0_1000b26c = load i32, i32* @r30, align 4
  %v1_1000b26c = load i32, i32* @r29, align 4
  %v2_1000b26c = inttoptr i32 %v1_1000b26c to i32*
  store i32 %v0_1000b26c, i32* %v2_1000b26c, align 4
  br label %dec_label_pc_1000b2b4

dec_label_pc_1000b274:                            ; preds = %dec_label_pc_1000b240
  %v0_1000b274 = load i32, i32* @r31, align 4
  %v1_1000b274 = add i32 %v0_1000b274, 8
  %v2_1000b274 = inttoptr i32 %v1_1000b274 to i32*
  %v3_1000b274 = load i32, i32* %v2_1000b274, align 4
  %v1_1000b27c = call i32 @__asm_rlwinm(i32 %v3_1000b274, i32 0, i32 19, i32 20)
  %v1_1000b280 = call i32 @__asm_rlwinm(i32 %v3_1000b1dc, i32 0, i32 19, i32 20)
  store i32 %v1_1000b280, i32* %r9.global-to-local, align 4
  %v4_1000b284 = icmp eq i32 %v1_1000b27c, %v1_1000b280
  br i1 %v4_1000b284, label %dec_label_pc_1000b28c, label %dec_label_pc_1000b2a0

dec_label_pc_1000b28c:                            ; preds = %dec_label_pc_1000b274
  %v1_1000b28c = and i32 %v3_1000b274, 768
  store i32 %v1_1000b28c, i32* %r9.global-to-local, align 4
  %v3_1000b28c = icmp eq i32 %v1_1000b28c, 0
  br i1 %v3_1000b28c, label %dec_label_pc_1000b2b0, label %dec_label_pc_1000b294

dec_label_pc_1000b294:                            ; preds = %dec_label_pc_1000b28c
  %v1_1000b294 = call i32 @__asm_rlwinm(i32 %v3_1000b1dc, i32 0, i32 22, i32 23)
  %v0_1000b298 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000b298 = icmp eq i32 %v0_1000b298, %v1_1000b294
  br i1 %v4_1000b298, label %dec_label_pc_1000b2b0, label %dec_label_pc_1000b2a0

dec_label_pc_1000b2a0:                            ; preds = %dec_label_pc_1000b274, %dec_label_pc_1000b294
  store i32 -1, i32* @r28, align 4
  %v1_1000b2a8 = load i32, i32* @r29, align 4
  %v2_1000b2a8 = inttoptr i32 %v1_1000b2a8 to i32*
  store i32 22, i32* %v2_1000b2a8, align 4
  br label %dec_label_pc_1000b2b4

dec_label_pc_1000b2b0:                            ; preds = %dec_label_pc_1000b234, %dec_label_pc_1000b294, %dec_label_pc_1000b28c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b2b4

dec_label_pc_1000b2b4:                            ; preds = %dec_label_pc_1000b1cc, %dec_label_pc_1000b2a0, %dec_label_pc_1000b26c, %dec_label_pc_1000b1b0, %dec_label_pc_1000b2b0
  %v0_1000b2b8 = load i32, i32* @r28, align 4
  ret i32 %v0_1000b2b8

; uselistorder directives
  uselistorder i32 %v0_1000b180, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a584, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000b2b4, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000b2b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b2a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1cc, { 2, 1, 0 }
}

define i32 @function_1000b2cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b2cc:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000b2d4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000b2d4, i32* @r4, align 4
  store i32 268481248, i32* @lr, align 4
  %v1_1000b2dc = bitcast i32* %stack_var_-24 to i8*
  %v2_1000b2dc = call i32 @function_1000cd80(i8* %v1_1000b2dc)
  %v3_1000b2e0 = icmp eq i32 %v2_1000b2dc, 0
  br i1 %v3_1000b2e0, label %dec_label_pc_1000b2f0, label %dec_label_pc_1000b2ec

dec_label_pc_1000b2ec:                            ; preds = %dec_label_pc_1000b2cc
  %v3_1000b2ec = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b2f0

dec_label_pc_1000b2f0:                            ; preds = %dec_label_pc_1000b2cc, %dec_label_pc_1000b2ec
  %v0_1000b2fc = phi i32 [ -1, %dec_label_pc_1000b2cc ], [ %v3_1000b2ec, %dec_label_pc_1000b2ec ]
  ret i32 %v0_1000b2fc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b2f0, { 1, 0 }
}

define i32 @function_1000b300(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b300:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b314 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481316, i32* @lr, align 4
  %v2_1000b320 = call i32 @function_1000c650(i32 5, i32 %v2_1000b314)
  ret i32 %v2_1000b320

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b334(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b334:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b348 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481368, i32* @lr, align 4
  %v2_1000b354 = call i32 @function_1000c650(i32 2, i32 %v2_1000b348)
  ret i32 %v2_1000b354

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b368() local_unnamed_addr {
dec_label_pc_1000b368:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b370 = load i32, i32* @r3, align 4
  store i32 %v0_1000b370, i32* %stack_var_-24, align 4
  %v2_1000b37c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481420, i32* @lr, align 4
  %v2_1000b388 = call i32 @function_1000c650(i32 3, i32 %v2_1000b37c)
  ret i32 %v2_1000b388

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b39c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b39c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b3b0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481472, i32* @lr, align 4
  %v2_1000b3bc = call i32 @function_1000c650(i32 6, i32 %v2_1000b3b0)
  ret i32 %v2_1000b3bc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b3d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000b3d0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000b3e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268481532, i32* @lr, align 4
  %v2_1000b3f8 = call i32 @function_1000c650(i32 15, i32 %v2_1000b3e4)
  ret i32 %v2_1000b3f8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 26, 6, 7, 16, 24, 25, 1, 8, 2, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 3, 20, 21, 4, 22, 23, 5 }
}

define i32 @function_1000b40c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b40c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b420 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481580, i32* @lr, align 4
  %v2_1000b428 = call i32 @function_1000c650(i32 4, i32 %v2_1000b420)
  ret i32 %v2_1000b428

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b43c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b43c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b450 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481636, i32* @lr, align 4
  %v2_1000b460 = call i32 @function_1000c650(i32 10, i32 %v2_1000b450)
  ret i32 %v2_1000b460

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b474(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000b474:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000b488 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268481700, i32* @lr, align 4
  %v2_1000b4a0 = call i32 @function_1000c650(i32 12, i32 %v2_1000b488)
  ret i32 %v2_1000b4a0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000b4b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b4b4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b4c8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481756, i32* @lr, align 4
  %v2_1000b4d8 = call i32 @function_1000c650(i32 9, i32 %v2_1000b4c8)
  ret i32 %v2_1000b4d8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 1, 5, 6, 7, 36, 8, 9, 37, 38, 55, 56, 2, 10, 11, 12, 13, 39, 14, 15, 16, 17, 18, 40, 19, 3, 57, 41, 42, 43, 4, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 33, 34, 31, 32, 29, 30, 27, 28, 25, 26, 23, 24, 21, 22, 20, 35, 0, 58, 59, 60, 61, 62, 63, 64, 65, 66 }
}

define i32 @function_1000b4ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000b4ec:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000b500 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268481820, i32* @lr, align 4
  %v2_1000b518 = call i32 @function_1000c650(i32 11, i32 %v2_1000b500)
  ret i32 %v2_1000b518

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000b52c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000b52c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000b540 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268481880, i32* @lr, align 4
  %v2_1000b554 = call i32 @function_1000c650(i32 14, i32 %v2_1000b540)
  ret i32 %v2_1000b554

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000b568(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b568:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b57c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481932, i32* @lr, align 4
  %v2_1000b588 = call i32 @function_1000c650(i32 1, i32 %v2_1000b57c)
  ret i32 %v2_1000b588

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000c650, { 5, 4, 8, 3, 7, 2, 11, 1, 6, 0, 10, 9 }
}

define i32 @function_1000b59c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b59c:
  %v0_1000b59c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268481972, i32* @lr, align 4
  %v0_1000b5b0 = call i32 @function_1000a82c()
  %v0_1000b5b8 = load i32, i32* @r29, align 4
  store i32 %v0_1000b59c, i32* @lr, align 4
  %v2_1000b5c8 = call i32 @function_1000a8bc(i32 %v0_1000b5b0, i32 %v0_1000b5b8)
  ret i32 %v2_1000b5c8

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000a8bc, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_1000a82c, { 0, 1, 3, 2 }
}

define i32 @function_1000b5cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b5cc:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000b5fc, label %dec_label_pc_1000b5e8

dec_label_pc_1000b5e8:                            ; preds = %dec_label_pc_1000b5cc
  %v0_1000b5e8 = call i32 @function_1000aeb8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000b5f4 = inttoptr i32 %v0_1000b5e8 to i32*
  store i32 22, i32* %v2_1000b5f4, align 4
  %v0_1000b608.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b604

dec_label_pc_1000b5fc:                            ; preds = %dec_label_pc_1000b5cc
  %v0_1000b5fc = call i32 @function_1000b74c()
  store i32 %v0_1000b5fc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b604

dec_label_pc_1000b604:                            ; preds = %dec_label_pc_1000b5e8, %dec_label_pc_1000b5fc
  %v0_1000b608 = phi i32 [ %v0_1000b608.pre, %dec_label_pc_1000b5e8 ], [ %v0_1000b5fc, %dec_label_pc_1000b5fc ]
  ret i32 %v0_1000b608

; uselistorder directives
  uselistorder label %dec_label_pc_1000b604, { 1, 0 }
}

define i32 @function_1000b618(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b618:
  store i32 268482096, i32* @lr, align 4
  %v3_1000b62c = call i32 @function_1000b03c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_1000b644(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b644:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000b644 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b644, label %dec_label_pc_1000b670, label %dec_label_pc_1000b660

dec_label_pc_1000b660:                            ; preds = %dec_label_pc_1000b644
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000b670, label %dec_label_pc_1000b668

dec_label_pc_1000b668:                            ; preds = %dec_label_pc_1000b660
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000b6a0.lr.ph, label %dec_label_pc_1000b670

dec_label_pc_1000b670:                            ; preds = %dec_label_pc_1000b668, %dec_label_pc_1000b660, %dec_label_pc_1000b644
  %v0_1000b670 = call i32 @function_1000aeb8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000b67c = inttoptr i32 %v0_1000b670 to i32*
  store i32 22, i32* %v2_1000b67c, align 4
  %v0_1000b710.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b70c

dec_label_pc_1000b6a0.lr.ph:                      ; preds = %dec_label_pc_1000b668
  %v2_1000b690 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b690, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000b6a022 = add i32 %v2_1000b690, 128
  %v3_1000b6a023 = inttoptr i32 %v2_1000b6a022 to i32*
  store i32 0, i32* %v3_1000b6a023, align 4
  %v0_1000b6a424 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b6a425 = add i32 %v0_1000b6a424, -1
  store i32 %v1_1000b6a425, i32* %r11.global-to-local, align 4
  %v1_1000b6a826 = mul i32 %v1_1000b6a425, 4
  %v1_1000b6ac27 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b6ac28 = add i32 %v1_1000b6ac27, %v1_1000b6a826
  store i32 %v2_1000b6ac28, i32* %r9.global-to-local, align 4
  %v0_1000b6b029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b6b030 = add i32 %v0_1000b6b029, -1
  store i32 %v1_1000b6b030, i32* %ctr.global-to-local, align 4
  %v2_1000b6b031 = icmp eq i32 %v1_1000b6b030, 0
  br i1 %v2_1000b6b031, label %dec_label_pc_1000b6b4, label %dec_label_pc_1000b6a0.dec_label_pc_1000b6a0_crit_edge

dec_label_pc_1000b6a0.dec_label_pc_1000b6a0_crit_edge: ; preds = %dec_label_pc_1000b6a0.lr.ph, %dec_label_pc_1000b6a0.dec_label_pc_1000b6a0_crit_edge
  %v2_1000b6ac32 = phi i32 [ %v2_1000b6ac, %dec_label_pc_1000b6a0.dec_label_pc_1000b6a0_crit_edge ], [ %v2_1000b6ac28, %dec_label_pc_1000b6a0.lr.ph ]
  %v0_1000b6a0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b6a0 = add i32 %v2_1000b6ac32, 4
  %v3_1000b6a0 = inttoptr i32 %v2_1000b6a0 to i32*
  store i32 %v0_1000b6a0.pre, i32* %v3_1000b6a0, align 4
  %v0_1000b6a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b6a4 = add i32 %v0_1000b6a4, -1
  store i32 %v1_1000b6a4, i32* %r11.global-to-local, align 4
  %v1_1000b6a8 = mul i32 %v1_1000b6a4, 4
  %v1_1000b6ac = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b6ac = add i32 %v1_1000b6ac, %v1_1000b6a8
  store i32 %v2_1000b6ac, i32* %r9.global-to-local, align 4
  %v0_1000b6b0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b6b0 = add i32 %v0_1000b6b0, -1
  store i32 %v1_1000b6b0, i32* %ctr.global-to-local, align 4
  %v2_1000b6b0 = icmp eq i32 %v1_1000b6b0, 0
  br i1 %v2_1000b6b0, label %dec_label_pc_1000b6b4, label %dec_label_pc_1000b6a0.dec_label_pc_1000b6a0_crit_edge

dec_label_pc_1000b6b4:                            ; preds = %dec_label_pc_1000b6a0.dec_label_pc_1000b6a0_crit_edge, %dec_label_pc_1000b6a0.lr.ph
  %v0_1000b6b8.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b6b4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000b6b4, i32* @r3, align 4
  store i32 %v0_1000b6b8.pre, i32* @r4, align 4
  %v0_1000b6bc = call i32 @function_1000b74c()
  %v1_1000b6c0 = icmp slt i32 %v0_1000b6bc, 0
  br i1 %v1_1000b6c0, label %dec_label_pc_1000b708, label %dec_label_pc_1000b6c8

dec_label_pc_1000b6c8:                            ; preds = %dec_label_pc_1000b6b4
  %v0_1000b6cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b6d4 = call i32 @function_1000b724(i32 ptrtoint (i32* @global_var_1001e42c.485 to i32), i32 %v0_1000b6cc)
  %v2_1000b6e0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268482296, i32* @lr, align 4
  %v4_1000b6f4 = call i32 @function_1000ce40(i32 %v0_1000b6cc, i32* nonnull %stack_var_-296, i32 %v2_1000b6e0)
  %v1_1000b6f8 = icmp slt i32 %v4_1000b6f4, 0
  br i1 %v1_1000b6f8, label %dec_label_pc_1000b708, label %dec_label_pc_1000b700

dec_label_pc_1000b700:                            ; preds = %dec_label_pc_1000b6c8
  %v3_1000b700 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000b700, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b70c

dec_label_pc_1000b708:                            ; preds = %dec_label_pc_1000b6c8, %dec_label_pc_1000b6b4
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b70c

dec_label_pc_1000b70c:                            ; preds = %dec_label_pc_1000b700, %dec_label_pc_1000b670, %dec_label_pc_1000b708
  %v0_1000b710 = phi i32 [ %v3_1000b700, %dec_label_pc_1000b700 ], [ %v0_1000b710.pre, %dec_label_pc_1000b670 ], [ -1, %dec_label_pc_1000b708 ]
  ret i32 %v0_1000b710

; uselistorder directives
  uselistorder i32 %v1_1000b6b0, { 1, 0 }
  uselistorder i32 %v2_1000b6ac, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000b70c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b6a0.dec_label_pc_1000b6a0_crit_edge, { 1, 0 }
}

define i32 @function_1000b724(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b724:
  %v1_1000b724 = add i32 %arg2, -1
  %v1_1000b728 = call i32 @__asm_rlwinm(i32 %v1_1000b724, i32 29, i32 3, i32 29)
  %v1_1000b72c = urem i32 %v1_1000b724, 32
  %v2_1000b730 = add i32 %v1_1000b728, %arg1
  %v3_1000b730 = inttoptr i32 %v2_1000b730 to i32*
  %v4_1000b730 = load i32, i32* %v3_1000b730, align 4
  %v3_1000b738 = shl i32 1, %v1_1000b72c
  %v2_1000b73c = and i32 %v4_1000b730, %v3_1000b738
  %v2_1000b740 = icmp ne i32 %v2_1000b73c, 0
  %v5_1000b744 = zext i1 %v2_1000b740 to i32
  ret i32 %v5_1000b744
}

define i32 @function_1000b74c() local_unnamed_addr {
dec_label_pc_1000b74c:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000b74c = load i32, i32* @r4, align 4
  %v1_1000b74c = add i32 %v0_1000b74c, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000b754 = call i32 @__asm_rlwinm(i32 %v1_1000b74c, i32 29, i32 3, i32 29)
  %v1_1000b758 = urem i32 %v1_1000b74c, 32
  %v1_1000b75c = load i32, i32* @r3, align 4
  %v2_1000b75c = add i32 %v1_1000b75c, %v1_1000b754
  %v3_1000b75c = inttoptr i32 %v2_1000b75c to i32*
  %v4_1000b75c = load i32, i32* %v3_1000b75c, align 4
  %v0_1000b760 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000b760 = shl i32 %v0_1000b760, %v1_1000b758
  store i32 %v3_1000b760, i32* %r0.global-to-local, align 4
  %v2_1000b764 = or i32 %v3_1000b760, %v4_1000b75c
  store i32 %v2_1000b764, i32* %v3_1000b75c, align 4
  ret i32 0
}

define i32 @function_1000b774(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b774:
  %v1_1000b774 = add i32 %arg2, -1
  %v1_1000b77c = call i32 @__asm_rlwinm(i32 %v1_1000b774, i32 29, i32 3, i32 29)
  %v1_1000b780 = urem i32 %v1_1000b774, 32
  %v2_1000b784 = add i32 %v1_1000b77c, %arg1
  %v3_1000b784 = inttoptr i32 %v2_1000b784 to i32*
  %v4_1000b784 = load i32, i32* %v3_1000b784, align 4
  %v3_1000b788 = shl i32 -2, %v1_1000b780
  %v4_1000b788 = sub nsw i32 32, %v1_1000b780
  %v5_1000b788 = lshr i32 -2, %v4_1000b788
  %v6_1000b788 = or i32 %v5_1000b788, %v3_1000b788
  %v2_1000b78c = and i32 %v6_1000b788, %v4_1000b784
  store i32 %v2_1000b78c, i32* %v3_1000b784, align 4
  ret i32 0
}

define i32 @function_1000b79c() local_unnamed_addr {
dec_label_pc_1000b79c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000b79c = load i32, i32* @r3, align 4
  %v3_1000b79c = icmp eq i32 %v0_1000b79c, 0
  br i1 %v3_1000b79c, label %dec_label_pc_1000b7b4, label %dec_label_pc_1000b7b8

dec_label_pc_1000b7b4:                            ; preds = %dec_label_pc_1000b79c
  br label %dec_label_pc_1000b7b8

dec_label_pc_1000b7b8:                            ; preds = %dec_label_pc_1000b79c, %dec_label_pc_1000b7b4
  %v0_1000b7c8 = phi i32 [ 1, %dec_label_pc_1000b7b4 ], [ %v0_1000b79c, %dec_label_pc_1000b79c ]
  %v3_1000b7bc = icmp ugt i32 %v0_1000b7c8, -8
  br i1 %v3_1000b7bc, label %dec_label_pc_1000b8cc, label %dec_label_pc_1000b7c4

dec_label_pc_1000b7c4:                            ; preds = %dec_label_pc_1000b7b8
  %v1_1000b7c8 = add i32 %v0_1000b7c8, 4
  store i32 ptrtoint (i32* @global_var_1001e264.486 to i32), i32* @r29, align 4
  store i32 %v1_1000b7c8, i32* %stack_var_-40, align 4
  %v0_1000b7d8 = call i32 @function_1000c2f8()
  %v2_1000b7e0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000b7e8 = call i32 @function_1000bb94(i32* inttoptr (i32 268558704 to i32*), i32 %v2_1000b7e0)
  store i32 %v3_1000b7e8, i32* %r31.global-to-local, align 4
  %v0_1000b7f4 = call i32 @function_1000c2f8()
  %v3_1000b7f8 = icmp eq i32 %v3_1000b7e8, 0
  br i1 %v3_1000b7f8, label %dec_label_pc_1000b800, label %dec_label_pc_1000b8b0.thread

dec_label_pc_1000b8b0.thread:                     ; preds = %dec_label_pc_1000b7c4
  br label %dec_label_pc_1000b8c4

dec_label_pc_1000b800:                            ; preds = %dec_label_pc_1000b7c4
  %v3_1000b804 = load i32, i32* @global_var_1001e1c8.489, align 4
  store i32 %v3_1000b804, i32* %r31.global-to-local, align 4
  %v3_1000b808 = load i32, i32* %stack_var_-40, align 4
  %v2_1000b80c = icmp ult i32 %v3_1000b808, %v3_1000b804
  br i1 %v2_1000b80c, label %dec_label_pc_1000b824, label %dec_label_pc_1000b814

dec_label_pc_1000b814:                            ; preds = %dec_label_pc_1000b800
  %v1_1000b818 = sub i32 0, %v3_1000b804
  %v2_1000b814 = add i32 %v3_1000b804, -1
  %v1_1000b81c = add i32 %v2_1000b814, %v3_1000b808
  %v2_1000b820 = and i32 %v1_1000b81c, %v1_1000b818
  store i32 %v2_1000b820, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b824

dec_label_pc_1000b824:                            ; preds = %dec_label_pc_1000b800, %dec_label_pc_1000b814
  %v0_1000b830 = call i32 @function_1000c2f8()
  %v0_1000b834 = load i32, i32* %r31.global-to-local, align 4
  store i32 268482620, i32* @lr, align 4
  %v1_1000b838 = call i32 @function_1000cb18(i32 %v0_1000b834)
  %v3_1000b83c = icmp eq i32 %v1_1000b838, -1
  br i1 %v3_1000b83c, label %dec_label_pc_1000b85c, label %dec_label_pc_1000b844

dec_label_pc_1000b844:                            ; preds = %dec_label_pc_1000b824
  %v1_1000b844 = add i32 %v1_1000b838, 3
  %v1_1000b848 = call i32 @__asm_rlwinm(i32 %v1_1000b844, i32 0, i32 0, i32 29)
  store i32 %v1_1000b848, i32* @r30, align 4
  %v4_1000b84c = icmp eq i32 %v1_1000b848, %v1_1000b838
  br i1 %v4_1000b84c, label %dec_label_pc_1000b85c, label %dec_label_pc_1000b854

dec_label_pc_1000b854:                            ; preds = %dec_label_pc_1000b844
  %v2_1000b854 = sub i32 %v1_1000b848, %v1_1000b838
  store i32 268482652, i32* @lr, align 4
  %v1_1000b858 = call i32 @function_1000cb18(i32 %v2_1000b854)
  br label %dec_label_pc_1000b85c

dec_label_pc_1000b85c:                            ; preds = %dec_label_pc_1000b844, %dec_label_pc_1000b824, %dec_label_pc_1000b854
  %v0_1000b864 = call i32 @function_1000c2f8()
  %v0_1000b868 = load i32, i32* @r30, align 4
  %v3_1000b868 = icmp eq i32 %v0_1000b868, -1
  br i1 %v3_1000b868, label %dec_label_pc_1000b8cc, label %dec_label_pc_1000b8b0

dec_label_pc_1000b8b0:                            ; preds = %dec_label_pc_1000b85c
  store i32 ptrtoint (i32* @global_var_1001e264.486 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001e170 to i32), i32* @r29, align 4
  %v0_1000b884 = call i32 @function_1000c2f8()
  %v0_1000b888 = load i32, i32* @r31, align 4
  %v0_1000b88c = load i32, i32* @r30, align 4
  %v0_1000b890 = load i32, i32* @r29, align 4
  store i32 268482712, i32* @lr, align 4
  %v3_1000b894 = inttoptr i32 %v0_1000b890 to i32*
  %v4_1000b894 = call i32 @function_1000bd18(i32* %v3_1000b894, i32 %v0_1000b88c, i32 %v0_1000b888)
  %v0_1000b898 = load i32, i32* @r29, align 4
  %v2_1000b8a0 = inttoptr i32 %v0_1000b898 to i32*
  %v3_1000b8a0 = call i32 @function_1000bb94(i32* %v2_1000b8a0, i32 %v2_1000b7e0)
  store i32 %v3_1000b8a0, i32* %r31.global-to-local, align 4
  %v0_1000b8ac = call i32 @function_1000c2f8()
  %v3_1000b8b0 = icmp eq i32 %v3_1000b8a0, 0
  br i1 %v3_1000b8b0, label %dec_label_pc_1000b8c4.thread, label %dec_label_pc_1000b8c4

dec_label_pc_1000b8c4.thread:                     ; preds = %dec_label_pc_1000b8b0
  br label %dec_label_pc_1000b8cc

dec_label_pc_1000b8c4:                            ; preds = %dec_label_pc_1000b8b0, %dec_label_pc_1000b8b0.thread
  %v0_1000b8c4.pr6 = phi i32 [ %v3_1000b7e8, %dec_label_pc_1000b8b0.thread ], [ %v3_1000b8a0, %dec_label_pc_1000b8b0 ]
  %v3_1000b8b8 = load i32, i32* %stack_var_-40, align 4
  %v2_1000b8bc = inttoptr i32 %v0_1000b8c4.pr6 to i32*
  store i32 %v3_1000b8b8, i32* %v2_1000b8bc, align 4
  %v0_1000b8c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b8c0 = add i32 %v0_1000b8c0, 4
  store i32 %v1_1000b8c0, i32* @r31, align 4
  %v3_1000b8c4 = icmp eq i32 %v1_1000b8c0, 0
  br i1 %v3_1000b8c4, label %dec_label_pc_1000b8cc, label %dec_label_pc_1000b8dc

dec_label_pc_1000b8cc:                            ; preds = %dec_label_pc_1000b8c4.thread, %dec_label_pc_1000b8c4, %dec_label_pc_1000b85c, %dec_label_pc_1000b7b8
  %v0_1000b8cc = call i32 @function_1000aeb8()
  %v2_1000b8d4 = inttoptr i32 %v0_1000b8cc to i32*
  store i32 12, i32* %v2_1000b8d4, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000b8dc

dec_label_pc_1000b8dc:                            ; preds = %dec_label_pc_1000b8c4, %dec_label_pc_1000b8cc
  %v0_1000b8e0 = phi i32 [ %v1_1000b8c0, %dec_label_pc_1000b8c4 ], [ 0, %dec_label_pc_1000b8cc ]
  ret i32 %v0_1000b8e0

; uselistorder directives
  uselistorder i32 %v1_1000b8c0, { 1, 0, 2 }
  uselistorder i32 %v1_1000b848, { 1, 0, 2 }
  uselistorder i32 %v1_1000b838, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000b804, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000b7e8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000b8dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8cc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000b85c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b824, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7b8, { 1, 0 }
}

define i32 @function_1000b8f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b8f4:
  %v3_1000b8f4 = icmp eq i32 %arg1, 0
  %v2_1000b904 = mul i32 %arg2, %arg1
  store i32 %v2_1000b904, i32* @r31, align 4
  br i1 %v3_1000b8f4, label %dec_label_pc_1000b930, label %dec_label_pc_1000b910

dec_label_pc_1000b910:                            ; preds = %dec_label_pc_1000b8f4
  %v2_1000b910 = udiv i32 %v2_1000b904, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000b918 = icmp eq i32 %v2_1000b910, %arg2
  br i1 %v4_1000b918, label %dec_label_pc_1000b930, label %dec_label_pc_1000b920

dec_label_pc_1000b920:                            ; preds = %dec_label_pc_1000b910
  %v0_1000b920 = call i32 @function_1000aeb8()
  %v2_1000b928 = inttoptr i32 %v0_1000b920 to i32*
  store i32 12, i32* %v2_1000b928, align 4
  br label %dec_label_pc_1000b94c

dec_label_pc_1000b930:                            ; preds = %dec_label_pc_1000b910, %dec_label_pc_1000b8f4
  store i32 %v2_1000b904, i32* @r3, align 4
  store i32 268482872, i32* @lr, align 4
  %v0_1000b934 = call i32 @function_1000b79c()
  %v0_1000b938 = load i32, i32* @r31, align 4
  store i32 %v0_1000b934, i32* @r30, align 4
  %v3_1000b93c = icmp eq i32 %v0_1000b934, 0
  br i1 %v3_1000b93c, label %dec_label_pc_1000b94c, label %dec_label_pc_1000b948

dec_label_pc_1000b948:                            ; preds = %dec_label_pc_1000b930
  store i32 268482892, i32* @lr, align 4
  %v3_1000b948 = call i32 @function_1000b03c(i32 0, i32 %v0_1000b938, i32 %v0_1000b938)
  br label %dec_label_pc_1000b94c

dec_label_pc_1000b94c:                            ; preds = %dec_label_pc_1000b930, %dec_label_pc_1000b920, %dec_label_pc_1000b948
  %v0_1000b950 = load i32, i32* @r30, align 4
  ret i32 %v0_1000b950

; uselistorder directives
  uselistorder i32 %v0_1000b938, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b94c, { 2, 0, 1 }
}

define i32 @function_1000b964() local_unnamed_addr {
dec_label_pc_1000b964:
  %v0_1000b964 = load i32, i32* @r3, align 4
  %v3_1000b964 = icmp eq i32 %v0_1000b964, 0
  br i1 %v3_1000b964, label %dec_label_pc_1000ba50, label %dec_label_pc_1000b97c

dec_label_pc_1000b97c:                            ; preds = %dec_label_pc_1000b964
  %v1_1000b980 = add i32 %v0_1000b964, -4
  %v2_1000b980 = inttoptr i32 %v1_1000b980 to i32*
  %v3_1000b980 = load i32, i32* %v2_1000b980, align 4
  store i32 %v3_1000b980, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000b994 = call i32 @function_1000c2f8()
  %v0_1000b99c = load i32, i32* @r28, align 4
  store i32 268482984, i32* @lr, align 4
  %v4_1000b9a4 = call i32 @function_1000bd18(i32* nonnull @global_var_1001e170, i32 %v1_1000b980, i32 %v0_1000b99c)
  %v3_1000b9ac = load i32, i32* @global_var_1001e1c8.489, align 4
  store i32 %v4_1000b9a4, i32* @r29, align 4
  %v1_1000b9b4 = inttoptr i32 %v4_1000b9a4 to i32*
  %v2_1000b9b4 = load i32, i32* %v1_1000b9b4, align 4
  store i32 %v2_1000b9b4, i32* @r27, align 4
  %v1_1000b9b8 = mul i32 %v3_1000b9ac, 8
  %v2_1000b9bc = icmp ult i32 %v2_1000b9b4, %v1_1000b9b8
  br i1 %v2_1000b9bc, label %dec_label_pc_1000b9f0, label %dec_label_pc_1000b9c4

dec_label_pc_1000b9c4:                            ; preds = %dec_label_pc_1000b97c
  store i32 ptrtoint (i32* @global_var_1001e4ac.490 to i32), i32* @r28, align 4
  %v0_1000b9d4 = call i32 @function_1000c2f8()
  store i32 268483040, i32* @lr, align 4
  %v1_1000b9dc = call i32 @function_1000cb18(i32 0)
  %v0_1000b9e0 = load i32, i32* @r31, align 4
  %v4_1000b9e0 = icmp eq i32 %v0_1000b9e0, %v1_1000b9dc
  br i1 %v4_1000b9e0, label %dec_label_pc_1000b9f8, label %dec_label_pc_1000b9e8

dec_label_pc_1000b9e8:                            ; preds = %dec_label_pc_1000b9c4
  %v0_1000b9ec = call i32 @function_1000c2f8()
  br label %dec_label_pc_1000b9f0

dec_label_pc_1000b9f0:                            ; preds = %dec_label_pc_1000b97c, %dec_label_pc_1000b9e8
  br label %dec_label_pc_1000ba4c

dec_label_pc_1000b9f8:                            ; preds = %dec_label_pc_1000b9c4
  %v0_1000b9f8 = load i32, i32* @r29, align 4
  %v1_1000b9f8 = add i32 %v0_1000b9f8, 4
  %v2_1000b9f8 = inttoptr i32 %v1_1000b9f8 to i32*
  %v3_1000b9f8 = load i32, i32* %v2_1000b9f8, align 4
  %v3_1000b9fc = icmp eq i32 %v3_1000b9f8, 0
  br i1 %v3_1000b9fc, label %dec_label_pc_1000ba0c, label %dec_label_pc_1000ba04

dec_label_pc_1000ba04:                            ; preds = %dec_label_pc_1000b9f8
  %v1_1000ba04 = add i32 %v0_1000b9f8, 8
  %v2_1000ba04 = inttoptr i32 %v1_1000ba04 to i32*
  %v3_1000ba04 = load i32, i32* %v2_1000ba04, align 4
  %v2_1000ba08 = add i32 %v3_1000b9f8, 8
  %v3_1000ba08 = inttoptr i32 %v2_1000ba08 to i32*
  store i32 %v3_1000ba04, i32* %v3_1000ba08, align 4
  %v0_1000ba0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ba0c

dec_label_pc_1000ba0c:                            ; preds = %dec_label_pc_1000b9f8, %dec_label_pc_1000ba04
  %v0_1000ba0c = phi i32 [ %v0_1000b9f8, %dec_label_pc_1000b9f8 ], [ %v0_1000ba0c.pre, %dec_label_pc_1000ba04 ]
  %v1_1000ba0c = add i32 %v0_1000ba0c, 8
  %v2_1000ba0c = inttoptr i32 %v1_1000ba0c to i32*
  %v3_1000ba0c = load i32, i32* %v2_1000ba0c, align 4
  %v1_1000ba10 = add i32 %v0_1000ba0c, 4
  %v2_1000ba10 = inttoptr i32 %v1_1000ba10 to i32*
  %v3_1000ba10 = load i32, i32* %v2_1000ba10, align 4
  %v3_1000ba14 = icmp eq i32 %v3_1000ba0c, 0
  br i1 %v3_1000ba14, label %dec_label_pc_1000ba24, label %dec_label_pc_1000ba1c

dec_label_pc_1000ba1c:                            ; preds = %dec_label_pc_1000ba0c
  %v2_1000ba1c = add i32 %v3_1000ba0c, 4
  %v3_1000ba1c = inttoptr i32 %v2_1000ba1c to i32*
  store i32 %v3_1000ba10, i32* %v3_1000ba1c, align 4
  br label %dec_label_pc_1000ba28

dec_label_pc_1000ba24:                            ; preds = %dec_label_pc_1000ba0c
  store i32 %v3_1000ba10, i32* @global_var_1001e170, align 4
  br label %dec_label_pc_1000ba28

dec_label_pc_1000ba28:                            ; preds = %dec_label_pc_1000ba1c, %dec_label_pc_1000ba24
  %v0_1000ba30 = call i32 @function_1000c2f8()
  %v0_1000ba34 = load i32, i32* @r27, align 4
  %v1_1000ba34 = load i32, i32* @r29, align 4
  %v0_1000ba3c = load i32, i32* @r31, align 4
  %v2_1000ba34 = sub i32 12, %v0_1000ba34
  %v1_1000ba38 = add i32 %v2_1000ba34, %v1_1000ba34
  %v2_1000ba3c = sub i32 %v1_1000ba38, %v0_1000ba3c
  store i32 268483140, i32* @lr, align 4
  %v1_1000ba40 = call i32 @function_1000cb18(i32 %v2_1000ba3c)
  br label %dec_label_pc_1000ba4c

dec_label_pc_1000ba4c:                            ; preds = %dec_label_pc_1000b9f0, %dec_label_pc_1000ba28
  %v0_1000ba4c = call i32 @function_1000c2f8()
  br label %dec_label_pc_1000ba50

dec_label_pc_1000ba50:                            ; preds = %dec_label_pc_1000b964, %dec_label_pc_1000ba4c
  %.0 = phi i32 [ undef, %dec_label_pc_1000b964 ], [ %v0_1000ba4c, %dec_label_pc_1000ba4c ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000ba0c, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_1000cb18, { 3, 2, 1, 0 }
  uselistorder i32* @r26, { 25, 15, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30, 31 }
  uselistorder label %dec_label_pc_1000ba50, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba28, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9f0, { 1, 0 }
}

define i32 @function_1000ba64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ba64:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000ba64 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000ba64, label %dec_label_pc_1000ba80, label %dec_label_pc_1000ba8c

dec_label_pc_1000ba80:                            ; preds = %dec_label_pc_1000ba64
  store i32 ptrtoint ([3 x i8]* @global_var_1000ba84.494 to i32), i32* @lr, align 4
  %v0_1000ba80 = call i32 @function_1000b964()
  br label %dec_label_pc_1000ba98

dec_label_pc_1000ba8c:                            ; preds = %dec_label_pc_1000ba64
  %v3_1000ba8c = icmp eq i32 %arg1, 0
  br i1 %v3_1000ba8c, label %dec_label_pc_1000ba98, label %dec_label_pc_1000baa4

dec_label_pc_1000ba98:                            ; preds = %dec_label_pc_1000ba8c, %dec_label_pc_1000ba80
  %storemerge = phi i32 [ 0, %dec_label_pc_1000ba80 ], [ %arg2, %dec_label_pc_1000ba8c ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268483228, i32* @lr, align 4
  %v0_1000ba98 = call i32 @function_1000b79c()
  store i32 %v0_1000ba98, i32* @r28, align 4
  br label %dec_label_pc_1000bb7c

dec_label_pc_1000baa4:                            ; preds = %dec_label_pc_1000ba8c
  %v1_1000baa4 = add i32 %arg2, 7
  %v1_1000baa8 = add i32 %arg1, -4
  store i32 %v1_1000baa8, i32* %r27.global-to-local, align 4
  %v1_1000baac = call i32 @__asm_rlwinm(i32 %v1_1000baa4, i32 0, i32 0, i32 29)
  store i32 %v1_1000baac, i32* @r31, align 4
  %v2_1000bab0 = inttoptr i32 %v1_1000baa8 to i32*
  %v3_1000bab0 = load i32, i32* %v2_1000bab0, align 4
  store i32 %v3_1000bab0, i32* @r30, align 4
  %v2_1000bab4 = icmp ugt i32 %v1_1000baac, 11
  br i1 %v2_1000bab4, label %dec_label_pc_1000bac0, label %dec_label_pc_1000babc

dec_label_pc_1000babc:                            ; preds = %dec_label_pc_1000baa4
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000bac0

dec_label_pc_1000bac0:                            ; preds = %dec_label_pc_1000baa4, %dec_label_pc_1000babc
  %v0_1000bb40 = phi i32 [ %v1_1000baac, %dec_label_pc_1000baa4 ], [ 12, %dec_label_pc_1000babc ]
  %v3_1000bac0 = icmp ugt i32 %v0_1000bb40, %v3_1000bab0
  br i1 %v3_1000bac0, label %dec_label_pc_1000bac8, label %dec_label_pc_1000bb40

dec_label_pc_1000bac8:                            ; preds = %dec_label_pc_1000bac0
  store i32 ptrtoint (i32* @global_var_1001e264.486 to i32), i32* @r29, align 4
  %v0_1000bad4 = call i32 @function_1000c2f8()
  %v0_1000badc = load i32, i32* %r27.global-to-local, align 4
  %v1_1000badc = load i32, i32* @r30, align 4
  %v2_1000badc = add i32 %v1_1000badc, %v0_1000badc
  %v1_1000bae0 = load i32, i32* @r31, align 4
  %v2_1000bae0 = sub i32 %v1_1000bae0, %v1_1000badc
  %v4_1000bae8 = call i32 @function_1000bc34(i32* nonnull @global_var_1001e170, i32 %v2_1000badc, i32 %v2_1000bae0)
  store i32 %v4_1000bae8, i32* %r27.global-to-local, align 4
  %v0_1000baf4 = call i32 @function_1000c2f8()
  %v3_1000baf8 = icmp eq i32 %v4_1000bae8, 0
  br i1 %v3_1000baf8, label %dec_label_pc_1000bb0c, label %dec_label_pc_1000bb00

dec_label_pc_1000bb00:                            ; preds = %dec_label_pc_1000bac8
  %v0_1000bb00 = load i32, i32* @r30, align 4
  %v2_1000bb00 = add i32 %v0_1000bb00, %v4_1000bae8
  %v1_1000bb04 = load i32, i32* @r28, align 4
  %v2_1000bb04 = add i32 %v1_1000bb04, -4
  %v3_1000bb04 = inttoptr i32 %v2_1000bb04 to i32*
  store i32 %v2_1000bb00, i32* %v3_1000bb04, align 4
  br label %dec_label_pc_1000bb7c

dec_label_pc_1000bb0c:                            ; preds = %dec_label_pc_1000bac8
  %v0_1000bb0c = load i32, i32* @r31, align 4
  %v1_1000bb0c = add i32 %v0_1000bb0c, -4
  store i32 %v1_1000bb0c, i32* @r3, align 4
  store i32 268483348, i32* @lr, align 4
  %v0_1000bb10 = call i32 @function_1000b79c()
  store i32 %v0_1000bb10, i32* @r3, align 4
  store i32 %v0_1000bb10, i32* @r31, align 4
  %v3_1000bb14 = icmp eq i32 %v0_1000bb10, 0
  br i1 %v3_1000bb14, label %dec_label_pc_1000bb1c, label %dec_label_pc_1000bb24

dec_label_pc_1000bb1c:                            ; preds = %dec_label_pc_1000bb0c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000bb7c

dec_label_pc_1000bb24:                            ; preds = %dec_label_pc_1000bb0c
  %v0_1000bb24 = load i32, i32* @r28, align 4
  store i32 %v0_1000bb24, i32* @r4, align 4
  %v0_1000bb28 = load i32, i32* @r30, align 4
  %v1_1000bb28 = add i32 %v0_1000bb28, -4
  store i32 %v1_1000bb28, i32* @r5, align 4
  store i32 268483376, i32* @lr, align 4
  %v0_1000bb2c = call i32 @function_1000aefc()
  %v0_1000bb30 = load i32, i32* @r28, align 4
  store i32 %v0_1000bb30, i32* @r3, align 4
  store i32 268483384, i32* @lr, align 4
  %v0_1000bb34 = call i32 @function_1000b964()
  %v0_1000bb38 = load i32, i32* @r31, align 4
  store i32 %v0_1000bb38, i32* @r28, align 4
  br label %dec_label_pc_1000bb7c

dec_label_pc_1000bb40:                            ; preds = %dec_label_pc_1000bac0
  %v1_1000bb40 = add i32 %v0_1000bb40, 28
  %v3_1000bb44 = icmp ugt i32 %v1_1000bb40, %v3_1000bab0
  br i1 %v3_1000bb44, label %dec_label_pc_1000bb7c, label %dec_label_pc_1000bb4c

dec_label_pc_1000bb4c:                            ; preds = %dec_label_pc_1000bb40
  store i32 ptrtoint (i32* @global_var_1001e264.486 to i32), i32* @r29, align 4
  %v0_1000bb58 = call i32 @function_1000c2f8()
  %v0_1000bb60 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000bb60 = load i32, i32* @r31, align 4
  %v2_1000bb60 = add i32 %v1_1000bb60, %v0_1000bb60
  %v1_1000bb64 = load i32, i32* @r30, align 4
  %v2_1000bb64 = sub i32 %v1_1000bb64, %v1_1000bb60
  store i32 268483440, i32* @lr, align 4
  %v4_1000bb6c = call i32 @function_1000bd18(i32* nonnull @global_var_1001e170, i32 %v2_1000bb60, i32 %v2_1000bb64)
  %v0_1000bb74 = call i32 @function_1000c2f8()
  %v0_1000bb78 = load i32, i32* @r31, align 4
  %v1_1000bb78 = load i32, i32* @r28, align 4
  %v2_1000bb78 = add i32 %v1_1000bb78, -4
  %v3_1000bb78 = inttoptr i32 %v2_1000bb78 to i32*
  store i32 %v0_1000bb78, i32* %v3_1000bb78, align 4
  br label %dec_label_pc_1000bb7c

dec_label_pc_1000bb7c:                            ; preds = %dec_label_pc_1000bb40, %dec_label_pc_1000bb24, %dec_label_pc_1000bb1c, %dec_label_pc_1000bb00, %dec_label_pc_1000ba98, %dec_label_pc_1000bb4c
  %v0_1000bb80 = load i32, i32* @r28, align 4
  ret i32 %v0_1000bb80

; uselistorder directives
  uselistorder i32 %v1_1000bb60, { 1, 0 }
  uselistorder i32 %v4_1000bae8, { 1, 0, 2 }
  uselistorder i32 %v1_1000badc, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001e170, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000b79c, { 4, 3, 0, 6, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 2, 1, 7, 5 }
  uselistorder i32 ()* @function_1000b964, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000bb7c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000bac0, { 1, 0 }
}

define i32 @function_1000bb94(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bb94:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000bb94 = inttoptr i32 %arg2 to i32*
  %v2_1000bb94 = load i32, i32* %v1_1000bb94, align 4
  %v1_1000bb98 = add i32 %v2_1000bb94, 3
  store i32 %v1_1000bb98, i32* %r9.global-to-local, align 4
  %v1_1000bb9c = call i32 @__asm_rlwinm(i32 %v1_1000bb98, i32 0, i32 0, i32 29)
  %v2_1000bba0 = icmp ugt i32 %v1_1000bb9c, 11
  br i1 %v2_1000bba0, label %dec_label_pc_1000bc24.preheader, label %dec_label_pc_1000bba8

dec_label_pc_1000bba8:                            ; preds = %dec_label_pc_1000bb94
  br label %dec_label_pc_1000bc24.preheader

dec_label_pc_1000bc24.preheader:                  ; preds = %dec_label_pc_1000bb94, %dec_label_pc_1000bba8
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000bba8 ], [ %v1_1000bb9c, %dec_label_pc_1000bb94 ]
  %v0_1000bc08 = phi i32 [ 12, %dec_label_pc_1000bba8 ], [ %v1_1000bb9c, %dec_label_pc_1000bb94 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000bc245 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000bc245, label %dec_label_pc_1000bc2c, label %dec_label_pc_1000bbb4

dec_label_pc_1000bbb4:                            ; preds = %dec_label_pc_1000bc24.preheader, %dec_label_pc_1000bc20
  %v0_1000bc20 = phi i32 [ %storemerge, %dec_label_pc_1000bc20 ], [ %storemerge2, %dec_label_pc_1000bc24.preheader ]
  %v1_1000bbb4 = inttoptr i32 %v0_1000bc20 to i32*
  %v2_1000bbb4 = load i32, i32* %v1_1000bbb4, align 4
  store i32 %v2_1000bbb4, i32* %r10.global-to-local, align 4
  %v2_1000bbb8 = icmp ult i32 %v2_1000bbb4, %v0_1000bc08
  br i1 %v2_1000bbb8, label %dec_label_pc_1000bc20, label %dec_label_pc_1000bbc0

dec_label_pc_1000bbc0:                            ; preds = %dec_label_pc_1000bbb4
  %v1_1000bbc0 = add i32 %v0_1000bc08, 44
  %v2_1000bbc4 = icmp ult i32 %v2_1000bbb4, %v1_1000bbc0
  br i1 %v2_1000bbc4, label %dec_label_pc_1000bbcc, label %dec_label_pc_1000bc08

dec_label_pc_1000bbcc:                            ; preds = %dec_label_pc_1000bbc0
  %v1_1000bbcc = add i32 %v0_1000bc20, 4
  %v2_1000bbcc = inttoptr i32 %v1_1000bbcc to i32*
  %v3_1000bbcc = load i32, i32* %v2_1000bbcc, align 4
  store i32 %v3_1000bbcc, i32* %r11.global-to-local, align 4
  %v3_1000bbd0 = icmp eq i32 %v3_1000bbcc, 0
  br i1 %v3_1000bbd0, label %dec_label_pc_1000bbe0, label %dec_label_pc_1000bbd8

dec_label_pc_1000bbd8:                            ; preds = %dec_label_pc_1000bbcc
  %v1_1000bbd8 = add i32 %v0_1000bc20, 8
  %v2_1000bbd8 = inttoptr i32 %v1_1000bbd8 to i32*
  %v3_1000bbd8 = load i32, i32* %v2_1000bbd8, align 4
  %v2_1000bbdc = add i32 %v3_1000bbcc, 8
  %v3_1000bbdc = inttoptr i32 %v2_1000bbdc to i32*
  store i32 %v3_1000bbd8, i32* %v3_1000bbdc, align 4
  %v0_1000bbe0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000bbfc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000bbe0

dec_label_pc_1000bbe0:                            ; preds = %dec_label_pc_1000bbcc, %dec_label_pc_1000bbd8
  %v0_1000bbfc = phi i32 [ %v2_1000bbb4, %dec_label_pc_1000bbcc ], [ %v0_1000bbfc.pre, %dec_label_pc_1000bbd8 ]
  %v0_1000bbe0 = phi i32 [ %v0_1000bc20, %dec_label_pc_1000bbcc ], [ %v0_1000bbe0.pre, %dec_label_pc_1000bbd8 ]
  %v1_1000bbe0 = add i32 %v0_1000bbe0, 8
  %v2_1000bbe0 = inttoptr i32 %v1_1000bbe0 to i32*
  %v3_1000bbe0 = load i32, i32* %v2_1000bbe0, align 4
  %v1_1000bbe4 = add i32 %v0_1000bbe0, 4
  %v2_1000bbe4 = inttoptr i32 %v1_1000bbe4 to i32*
  %v3_1000bbe4 = load i32, i32* %v2_1000bbe4, align 4
  %v3_1000bbe8 = icmp eq i32 %v3_1000bbe0, 0
  store i32 %v0_1000bbfc, i32* %r11.global-to-local, align 4
  br i1 %v3_1000bbe8, label %dec_label_pc_1000bbfc, label %dec_label_pc_1000bbf0

dec_label_pc_1000bbf0:                            ; preds = %dec_label_pc_1000bbe0
  %v2_1000bbf4 = add i32 %v3_1000bbe0, 4
  %v3_1000bbf4 = inttoptr i32 %v2_1000bbf4 to i32*
  store i32 %v3_1000bbe4, i32* %v3_1000bbf4, align 4
  br label %dec_label_pc_1000bc10

dec_label_pc_1000bbfc:                            ; preds = %dec_label_pc_1000bbe0
  store i32 %v3_1000bbe4, i32* %arg1, align 4
  br label %dec_label_pc_1000bc10

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bbc0
  %v2_1000bc08 = sub i32 %v2_1000bbb4, %v0_1000bc08
  store i32 %v2_1000bc08, i32* %v1_1000bbb4, align 4
  br label %dec_label_pc_1000bc10

dec_label_pc_1000bc10:                            ; preds = %dec_label_pc_1000bbfc, %dec_label_pc_1000bbf0, %dec_label_pc_1000bc08
  %v0_1000bc10 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bc10 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000bc10 = sub i32 %v1_1000bc10, %v0_1000bc10
  store i32 %v2_1000bc10, i32* %r9.global-to-local, align 4
  %v0_1000bc14 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000bc14, i32* %v1_1000bb94, align 4
  %v0_1000bc18 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc18 = add i32 %v0_1000bc18, 12
  ret i32 %v1_1000bc18

dec_label_pc_1000bc20:                            ; preds = %dec_label_pc_1000bbb4
  %v1_1000bc20 = add i32 %v0_1000bc20, 4
  %storemerge.in = inttoptr i32 %v1_1000bc20 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000bc24 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000bc24, label %dec_label_pc_1000bc24.dec_label_pc_1000bc2c_crit_edge, label %dec_label_pc_1000bbb4

dec_label_pc_1000bc24.dec_label_pc_1000bc2c_crit_edge: ; preds = %dec_label_pc_1000bc20
  br label %dec_label_pc_1000bc2c

dec_label_pc_1000bc2c:                            ; preds = %dec_label_pc_1000bc24.dec_label_pc_1000bc2c_crit_edge, %dec_label_pc_1000bc24.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000bbe0, { 1, 0 }
  uselistorder i32 %v2_1000bbb4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000bc20, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000bc08, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bbe0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc24.preheader, { 1, 0 }
}

define i32 @function_1000bc34(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bc34:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000bc34 = load i32, i32* %arg1, align 4
  store i32 %v2_1000bc34, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000bc3c = add i32 %arg3, 3
  %v3_1000bcc03 = icmp eq i32 %v2_1000bc34, 0
  br i1 %v3_1000bcc03, label %dec_label_pc_1000bcc8, label %dec_label_pc_1000bc44

dec_label_pc_1000bc44:                            ; preds = %dec_label_pc_1000bc34, %dec_label_pc_1000bcbc
  %v0_1000bcbc = phi i32 [ %v3_1000bcbc, %dec_label_pc_1000bcbc ], [ %v2_1000bc34, %dec_label_pc_1000bc34 ]
  %v1_1000bc44 = inttoptr i32 %v0_1000bcbc to i32*
  %v2_1000bc44 = load i32, i32* %v1_1000bc44, align 4
  %v2_1000bc48 = sub i32 %v0_1000bcbc, %v2_1000bc44
  %v1_1000bc4c = add i32 %v2_1000bc48, 12
  %v3_1000bc50 = icmp ugt i32 %v1_1000bc4c, %arg2
  br i1 %v3_1000bc50, label %dec_label_pc_1000bcbc, label %dec_label_pc_1000bc58

dec_label_pc_1000bc58:                            ; preds = %dec_label_pc_1000bc44
  %v4_1000bc50 = icmp eq i32 %v1_1000bc4c, %arg2
  br i1 %v4_1000bc50, label %dec_label_pc_1000bc60, label %dec_label_pc_1000bcc8

dec_label_pc_1000bc60:                            ; preds = %dec_label_pc_1000bc58
  %v1_1000bc60 = call i32 @__asm_rlwinm(i32 %v1_1000bc3c, i32 0, i32 0, i32 29)
  %v2_1000bc64 = icmp ult i32 %v2_1000bc44, %v1_1000bc60
  br i1 %v2_1000bc64, label %dec_label_pc_1000bcc8, label %dec_label_pc_1000bc6c

dec_label_pc_1000bc6c:                            ; preds = %dec_label_pc_1000bc60
  %v1_1000bc6c = add i32 %v1_1000bc60, 44
  %v2_1000bc70 = icmp ult i32 %v2_1000bc44, %v1_1000bc6c
  br i1 %v2_1000bc70, label %dec_label_pc_1000bc78, label %dec_label_pc_1000bcac

dec_label_pc_1000bc78:                            ; preds = %dec_label_pc_1000bc6c
  %v0_1000bc78 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bc78 = add i32 %v0_1000bc78, 4
  %v2_1000bc78 = inttoptr i32 %v1_1000bc78 to i32*
  %v3_1000bc78 = load i32, i32* %v2_1000bc78, align 4
  %v3_1000bc7c = icmp eq i32 %v3_1000bc78, 0
  br i1 %v3_1000bc7c, label %dec_label_pc_1000bc8c, label %dec_label_pc_1000bc84

dec_label_pc_1000bc84:                            ; preds = %dec_label_pc_1000bc78
  %v1_1000bc84 = add i32 %v0_1000bc78, 8
  %v2_1000bc84 = inttoptr i32 %v1_1000bc84 to i32*
  %v3_1000bc84 = load i32, i32* %v2_1000bc84, align 4
  %v2_1000bc88 = add i32 %v3_1000bc78, 8
  %v3_1000bc88 = inttoptr i32 %v2_1000bc88 to i32*
  store i32 %v3_1000bc84, i32* %v3_1000bc88, align 4
  %v0_1000bc8c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000bc8c

dec_label_pc_1000bc8c:                            ; preds = %dec_label_pc_1000bc78, %dec_label_pc_1000bc84
  %v0_1000bc8c = phi i32 [ %v0_1000bc78, %dec_label_pc_1000bc78 ], [ %v0_1000bc8c.pre, %dec_label_pc_1000bc84 ]
  %v1_1000bc8c = add i32 %v0_1000bc8c, 8
  %v2_1000bc8c = inttoptr i32 %v1_1000bc8c to i32*
  %v3_1000bc8c = load i32, i32* %v2_1000bc8c, align 4
  %v1_1000bc90 = add i32 %v0_1000bc8c, 4
  %v2_1000bc90 = inttoptr i32 %v1_1000bc90 to i32*
  %v3_1000bc90 = load i32, i32* %v2_1000bc90, align 4
  %v3_1000bc94 = icmp eq i32 %v3_1000bc8c, 0
  br i1 %v3_1000bc94, label %dec_label_pc_1000bca4, label %dec_label_pc_1000bc9c

dec_label_pc_1000bc9c:                            ; preds = %dec_label_pc_1000bc8c
  %v2_1000bc9c = add i32 %v3_1000bc8c, 4
  %v3_1000bc9c = inttoptr i32 %v2_1000bc9c to i32*
  store i32 %v3_1000bc90, i32* %v3_1000bc9c, align 4
  ret i32 %v2_1000bc44

dec_label_pc_1000bca4:                            ; preds = %dec_label_pc_1000bc8c
  %v1_1000bca4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bca4 = inttoptr i32 %v1_1000bca4 to i32*
  store i32 %v3_1000bc90, i32* %v2_1000bca4, align 4
  ret i32 %v2_1000bc44

dec_label_pc_1000bcac:                            ; preds = %dec_label_pc_1000bc6c
  %v2_1000bcac = sub i32 %v2_1000bc44, %v1_1000bc60
  %v1_1000bcb4 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000bcb4 = inttoptr i32 %v1_1000bcb4 to i32*
  store i32 %v2_1000bcac, i32* %v2_1000bcb4, align 4
  ret i32 %v1_1000bc60

dec_label_pc_1000bcbc:                            ; preds = %dec_label_pc_1000bc44
  %v1_1000bcbc = add i32 %v0_1000bcbc, 4
  %v2_1000bcbc = inttoptr i32 %v1_1000bcbc to i32*
  %v3_1000bcbc = load i32, i32* %v2_1000bcbc, align 4
  store i32 %v3_1000bcbc, i32* %r11.global-to-local, align 4
  %v3_1000bcc0 = icmp eq i32 %v3_1000bcbc, 0
  br i1 %v3_1000bcc0, label %dec_label_pc_1000bcc0.dec_label_pc_1000bcc8.loopexit_crit_edge, label %dec_label_pc_1000bc44

dec_label_pc_1000bcc0.dec_label_pc_1000bcc8.loopexit_crit_edge: ; preds = %dec_label_pc_1000bcbc
  br label %dec_label_pc_1000bcc8

dec_label_pc_1000bcc8:                            ; preds = %dec_label_pc_1000bc34, %dec_label_pc_1000bcc0.dec_label_pc_1000bcc8.loopexit_crit_edge, %dec_label_pc_1000bc58, %dec_label_pc_1000bc60
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000bcbc, { 1, 2, 0 }
  uselistorder i32 %v0_1000bc8c, { 1, 0 }
  uselistorder i32 %v1_1000bc60, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000bc44, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000bcbc, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 29, { 23, 35, 24, 36, 4, 5, 51, 52, 49, 50, 55, 56, 37, 38, 53, 54, 0, 1, 6, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 18, 19, 20, 7, 8, 11, 12, 13, 14, 9, 10, 15, 16, 17, 2, 21, 3, 22, 39, 40, 41, 42, 45, 46, 43, 44, 47, 48 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000bcc8, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000bc8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc44, { 1, 0 }
}

define i32 @function_1000bcd0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000bcd0:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000bcd0 = icmp eq i32 %arg3, 0
  %v2_1000bcd4 = add i32 %arg2, 4
  %v3_1000bcd4 = inttoptr i32 %v2_1000bcd4 to i32*
  store i32 %arg4, i32* %v3_1000bcd4, align 4
  %v2_1000bcd8 = add i32 %arg2, 8
  %v3_1000bcd8 = inttoptr i32 %v2_1000bcd8 to i32*
  store i32 %arg3, i32* %v3_1000bcd8, align 4
  br i1 %v3_1000bcd0, label %dec_label_pc_1000bce8, label %dec_label_pc_1000bce0

dec_label_pc_1000bce0:                            ; preds = %dec_label_pc_1000bcd0
  %v2_1000bce0 = add i32 %arg3, 4
  %v3_1000bce0 = inttoptr i32 %v2_1000bce0 to i32*
  store i32 %arg2, i32* %v3_1000bce0, align 4
  br label %dec_label_pc_1000bcec

dec_label_pc_1000bce8:                            ; preds = %dec_label_pc_1000bcd0
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000bcec

dec_label_pc_1000bcec:                            ; preds = %dec_label_pc_1000bce0, %dec_label_pc_1000bce8
  %v3_1000bcec = icmp eq i32 %arg4, 0
  %v0_1000bcf0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bcec, i32 %v0_1000bcf0)
  %v2_1000bcf4 = add i32 %arg4, 8
  %v3_1000bcf4 = inttoptr i32 %v2_1000bcf4 to i32*
  store i32 %arg2, i32* %v3_1000bcf4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000bcec, { 1, 0 }
}

define i32 @function_1000bcfc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000bcfc:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000bcfc = icmp eq i32 %arg3, 0
  br i1 %v3_1000bcfc, label %dec_label_pc_1000bd0c, label %dec_label_pc_1000bd04

dec_label_pc_1000bd04:                            ; preds = %dec_label_pc_1000bcfc
  %v2_1000bd04 = add i32 %arg3, 4
  %v3_1000bd04 = inttoptr i32 %v2_1000bd04 to i32*
  store i32 %arg2, i32* %v3_1000bd04, align 4
  br label %dec_label_pc_1000bd10

dec_label_pc_1000bd0c:                            ; preds = %dec_label_pc_1000bcfc
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000bd10

dec_label_pc_1000bd10:                            ; preds = %dec_label_pc_1000bd04, %dec_label_pc_1000bd0c
  %v2_1000bd10 = add i32 %arg2, 8
  %v3_1000bd10 = inttoptr i32 %v2_1000bd10 to i32*
  store i32 %arg3, i32* %v3_1000bd10, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bd10, { 1, 0 }
}

define i32 @function_1000bd18(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bd18:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000bd30 = load i32, i32* %arg1, align 4
  store i32 %v2_1000bd30, i32* @r31, align 4
  %v2_1000bd34 = add i32 %arg3, %arg2
  store i32 %v2_1000bd34, i32* %r3.global-to-local, align 4
  %v3_1000bd487 = icmp eq i32 %v2_1000bd30, 0
  %v1_1000bd4c8 = add i32 %v2_1000bd30, 12
  %tmp69 = icmp uge i32 %v1_1000bd4c8, %arg2
  %or.cond10 = or i1 %v3_1000bd487, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000bd58, label %dec_label_pc_1000bd40

dec_label_pc_1000bd40:                            ; preds = %dec_label_pc_1000bd18, %dec_label_pc_1000bd40
  %v0_1000bda011 = phi i32 [ %v3_1000bd44, %dec_label_pc_1000bd40 ], [ %v2_1000bd30, %dec_label_pc_1000bd18 ]
  store i32 %v0_1000bda011, i32* %r11.global-to-local, align 4
  %v1_1000bd44 = add i32 %v0_1000bda011, 4
  %v2_1000bd44 = inttoptr i32 %v1_1000bd44 to i32*
  %v3_1000bd44 = load i32, i32* %v2_1000bd44, align 4
  store i32 %v3_1000bd44, i32* @r31, align 4
  %v3_1000bd48 = icmp eq i32 %v3_1000bd44, 0
  %v1_1000bd4c = add i32 %v3_1000bd44, 12
  %tmp6 = icmp uge i32 %v1_1000bd4c, %arg2
  %or.cond = or i1 %v3_1000bd48, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000bd58, label %dec_label_pc_1000bd40

dec_label_pc_1000bd58:                            ; preds = %dec_label_pc_1000bd40, %dec_label_pc_1000bd18
  %v0_1000bd94.lcssa = phi i32 [ 0, %dec_label_pc_1000bd18 ], [ %v0_1000bda011, %dec_label_pc_1000bd40 ]
  %v0_1000bda0.lcssa = phi i32 [ %v2_1000bd30, %dec_label_pc_1000bd18 ], [ %v3_1000bd44, %dec_label_pc_1000bd40 ]
  %v3_1000bd48.lcssa = phi i1 [ %v3_1000bd487, %dec_label_pc_1000bd18 ], [ %v3_1000bd48, %dec_label_pc_1000bd40 ]
  br i1 %v3_1000bd48.lcssa, label %dec_label_pc_1000be10, label %dec_label_pc_1000bd60

dec_label_pc_1000bd60:                            ; preds = %dec_label_pc_1000bd58
  %v1_1000bd60 = inttoptr i32 %v0_1000bda0.lcssa to i32*
  %v2_1000bd60 = load i32, i32* %v1_1000bd60, align 4
  %v2_1000bd64 = sub i32 %v0_1000bda0.lcssa, %v2_1000bd60
  %v1_1000bd68 = add i32 %v2_1000bd64, 12
  %v3_1000bd6c = icmp ugt i32 %v1_1000bd68, %v2_1000bd34
  br i1 %v3_1000bd6c, label %dec_label_pc_1000be10, label %dec_label_pc_1000bd74

dec_label_pc_1000bd74:                            ; preds = %dec_label_pc_1000bd60
  %v4_1000bd6c = icmp eq i32 %v1_1000bd68, %v2_1000bd34
  %v2_1000bd78 = add i32 %v2_1000bd60, %arg3
  store i32 %v2_1000bd78, i32* @r29, align 4
  br i1 %v4_1000bd6c, label %dec_label_pc_1000bd80, label %dec_label_pc_1000bdb0

dec_label_pc_1000bd80:                            ; preds = %dec_label_pc_1000bd74
  %v3_1000bd80 = icmp eq i32 %v0_1000bd94.lcssa, 0
  br i1 %v3_1000bd80, label %dec_label_pc_1000be04, label %dec_label_pc_1000bd88

dec_label_pc_1000bd88:                            ; preds = %dec_label_pc_1000bd80
  %v1_1000bd88 = add i32 %v0_1000bd94.lcssa, 12
  %v4_1000bd8c = icmp eq i32 %v1_1000bd88, %arg2
  br i1 %v4_1000bd8c, label %dec_label_pc_1000bd94, label %dec_label_pc_1000be04

dec_label_pc_1000bd94:                            ; preds = %dec_label_pc_1000bd88
  %v1_1000bd94 = inttoptr i32 %v0_1000bd94.lcssa to i32*
  %v2_1000bd94 = load i32, i32* %v1_1000bd94, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000bd9c = add i32 %v0_1000bd94.lcssa, 8
  %v2_1000bd9c = inttoptr i32 %v1_1000bd9c to i32*
  %v3_1000bd9c = load i32, i32* %v2_1000bd9c, align 4
  %v2_1000bda4 = add i32 %v2_1000bd94, %v2_1000bd78
  store i32 %v2_1000bda4, i32* @r29, align 4
  %v5_1000bda8 = call i32 @function_1000bcfc(i32* %arg1, i32 %v0_1000bda0.lcssa, i32 %v3_1000bd9c, i32 %v2_1000bd34)
  store i32 %v5_1000bda8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000be04

dec_label_pc_1000bdb0:                            ; preds = %dec_label_pc_1000bd74
  %v1_1000bdb0 = add i32 %v0_1000bda0.lcssa, 4
  %v2_1000bdb0 = inttoptr i32 %v1_1000bdb0 to i32*
  %v3_1000bdb0 = load i32, i32* %v2_1000bdb0, align 4
  %v3_1000bdb4 = icmp eq i32 %v3_1000bdb0, 0
  br i1 %v3_1000bdb4, label %dec_label_pc_1000bdec, label %dec_label_pc_1000bdbc

dec_label_pc_1000bdbc:                            ; preds = %dec_label_pc_1000bdb0
  %v1_1000bdbc = inttoptr i32 %v3_1000bdb0 to i32*
  %v2_1000bdbc = load i32, i32* %v1_1000bdbc, align 4
  %v2_1000bdc0 = sub i32 %v3_1000bdb0, %v2_1000bdbc
  %v1_1000bdc4 = add i32 %v2_1000bdc0, 12
  %v4_1000bdc8 = icmp eq i32 %v2_1000bd34, %v1_1000bdc4
  br i1 %v4_1000bdc8, label %dec_label_pc_1000bdd0, label %dec_label_pc_1000bdec

dec_label_pc_1000bdd0:                            ; preds = %dec_label_pc_1000bdbc
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000bddc = add i32 %v2_1000bdbc, %v2_1000bd78
  store i32 %v2_1000bddc, i32* @r29, align 4
  store i32 %v3_1000bdb0, i32* @r31, align 4
  %v5_1000bde4 = call i32 @function_1000bcfc(i32* %arg1, i32 %v3_1000bdb0, i32 %v0_1000bd94.lcssa, i32 %v2_1000bd34)
  store i32 %v5_1000bde4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000be04

dec_label_pc_1000bdec:                            ; preds = %dec_label_pc_1000bdbc, %dec_label_pc_1000bdb0
  %v2_1000bdec = add i32 %v0_1000bda0.lcssa, %arg3
  store i32 %v2_1000bdec, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268484100, i32* @lr, align 4
  %v5_1000be00 = call i32 @function_1000bcd0(i32* %arg1, i32 %v2_1000bdec, i32 %v0_1000bd94.lcssa, i32 %v3_1000bdb0)
  store i32 %v5_1000be00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000be04

dec_label_pc_1000be04:                            ; preds = %dec_label_pc_1000bd88, %dec_label_pc_1000bd80, %dec_label_pc_1000bdd0, %dec_label_pc_1000bd94, %dec_label_pc_1000bdec
  %v0_1000be04 = load i32, i32* @r31, align 4
  store i32 %v0_1000be04, i32* @r30, align 4
  %v0_1000be08 = load i32, i32* @r29, align 4
  %v2_1000be08 = inttoptr i32 %v0_1000be04 to i32*
  store i32 %v0_1000be08, i32* %v2_1000be08, align 4
  br label %dec_label_pc_1000be2c

dec_label_pc_1000be10:                            ; preds = %dec_label_pc_1000bd60, %dec_label_pc_1000bd58
  %v2_1000be10 = add i32 %v2_1000bd34, -12
  %v3_1000be10 = inttoptr i32 %v2_1000be10 to i32*
  store i32 %arg3, i32* %v3_1000be10, align 4
  %v0_1000be14 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000be14 = add i32 %v0_1000be14, -12
  store i32 %v1_1000be14, i32* @r30, align 4
  %v0_1000be18 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000be1c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000be1c, i32* %r3.global-to-local, align 4
  %v0_1000be20 = load i32, i32* @r31, align 4
  store i32 268484140, i32* @lr, align 4
  %v4_1000be28 = inttoptr i32 %v0_1000be1c to i32*
  %v5_1000be28 = call i32 @function_1000bcd0(i32* %v4_1000be28, i32 %v1_1000be14, i32 %v0_1000be18, i32 %v0_1000be20)
  store i32 %v5_1000be28, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000be2c

dec_label_pc_1000be2c:                            ; preds = %dec_label_pc_1000be04, %dec_label_pc_1000be10
  %v0_1000be30 = load i32, i32* @r30, align 4
  store i32 %v0_1000be30, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000be30

; uselistorder directives
  uselistorder i32 %v3_1000bdb0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000bd68, { 1, 0 }
  uselistorder i32 %v0_1000bda0.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000bd94.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000bd44, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000bd34, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000be2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000be04, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000bd40, { 1, 0 }
}

define i32 @function_1000be44(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000be44:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000be7c = load i32, i32* bitcast (i32** @global_var_1001e17c.497 to i32*), align 4
  %v2_1000be8827 = load i8, i8* %arg1, align 1
  %v3_1000be8828 = zext i8 %v2_1000be8827 to i32
  %v1_1000be8c29 = mul nuw nsw i32 %v3_1000be8828, 2
  %v2_1000be9030 = add i32 %v1_1000be8c29, %v3_1000be7c
  %v3_1000be9031 = inttoptr i32 %v2_1000be9030 to i16*
  %v4_1000be9032 = load i16, i16* %v3_1000be9031, align 2
  %v1_1000be9434 = and i16 %v4_1000be9032, 32
  %v3_1000be9435 = icmp eq i16 %v1_1000be9434, 0
  br i1 %v3_1000be9435, label %dec_label_pc_1000be9c, label %dec_label_pc_1000be84

dec_label_pc_1000be84:                            ; preds = %dec_label_pc_1000be44, %dec_label_pc_1000be84
  %v0_1000bebc36 = phi i32 [ %v1_1000be84, %dec_label_pc_1000be84 ], [ %tmp, %dec_label_pc_1000be44 ]
  %v1_1000be84 = add i32 %v0_1000bebc36, 1
  store i32 %v1_1000be84, i32* %r31.global-to-local, align 4
  %v1_1000be88 = inttoptr i32 %v1_1000be84 to i8*
  %v2_1000be88 = load i8, i8* %v1_1000be88, align 1
  %v3_1000be88 = zext i8 %v2_1000be88 to i32
  %v1_1000be8c = mul nuw nsw i32 %v3_1000be88, 2
  %v2_1000be90 = add i32 %v1_1000be8c, %v3_1000be7c
  %v3_1000be90 = inttoptr i32 %v2_1000be90 to i16*
  %v4_1000be90 = load i16, i16* %v3_1000be90, align 2
  %v1_1000be94 = and i16 %v4_1000be90, 32
  %v3_1000be94 = icmp eq i16 %v1_1000be94, 0
  br i1 %v3_1000be94, label %dec_label_pc_1000be9c, label %dec_label_pc_1000be84

dec_label_pc_1000be9c:                            ; preds = %dec_label_pc_1000be84, %dec_label_pc_1000be44
  %v0_1000bebc.lcssa = phi i32 [ %tmp, %dec_label_pc_1000be44 ], [ %v1_1000be84, %dec_label_pc_1000be84 ]
  %v2_1000be88.lcssa = phi i8 [ %v2_1000be8827, %dec_label_pc_1000be44 ], [ %v2_1000be88, %dec_label_pc_1000be84 ]
  %v3_1000be9c = icmp eq i8 %v2_1000be88.lcssa, 43
  br i1 %v3_1000be9c, label %dec_label_pc_1000bebc, label %dec_label_pc_1000bea4

dec_label_pc_1000bea4:                            ; preds = %dec_label_pc_1000be9c
  %v3_1000bea4 = icmp eq i8 %v2_1000be88.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000bea4, label %dec_label_pc_1000bebc, label %dec_label_pc_1000bec0

dec_label_pc_1000bebc:                            ; preds = %dec_label_pc_1000be9c, %dec_label_pc_1000bea4
  %storemerge = phi i32 [ 1, %dec_label_pc_1000bea4 ], [ 0, %dec_label_pc_1000be9c ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000bebc = add i32 %v0_1000bebc.lcssa, 1
  store i32 %v1_1000bebc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bec0

dec_label_pc_1000bec0:                            ; preds = %dec_label_pc_1000bea4, %dec_label_pc_1000bebc
  %v1_1000bec0 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000bec0 = icmp eq i32 %v1_1000bec0, 0
  br i1 %v4_1000bec0, label %dec_label_pc_1000becc, label %dec_label_pc_1000bec0.dec_label_pc_1000bf08_crit_edge

dec_label_pc_1000bec0.dec_label_pc_1000bf08_crit_edge: ; preds = %dec_label_pc_1000bec0
  %v0_1000bf08.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bf08

dec_label_pc_1000becc:                            ; preds = %dec_label_pc_1000bec0
  %v0_1000becc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000becc = inttoptr i32 %v0_1000becc to i8*
  %v2_1000becc = load i8, i8* %v1_1000becc, align 1
  %v0_1000bed0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bed0 = add i32 %v0_1000bed0, 10
  store i32 %v1_1000bed0, i32* %r30.global-to-local, align 4
  %v3_1000bed4 = icmp eq i8 %v2_1000becc, 48
  br i1 %v3_1000bed4, label %dec_label_pc_1000bedc, label %dec_label_pc_1000befc

dec_label_pc_1000bedc:                            ; preds = %dec_label_pc_1000becc
  %v1_1000bedc = add i32 %v0_1000becc, 1
  %v2_1000bedc = inttoptr i32 %v1_1000bedc to i8*
  %v3_1000bedc = load i8, i8* %v2_1000bedc, align 1
  %v4_1000bedc = zext i8 %v3_1000bedc to i32
  store i32 %v1_1000bedc, i32* %r31.global-to-local, align 4
  %v1_1000bee0 = add i32 %v0_1000bed0, 8
  store i32 %v1_1000bee0, i32* %r30.global-to-local, align 4
  %v1_1000bee4 = or i32 %v4_1000bedc, 32
  %v3_1000beec = icmp eq i32 %v1_1000bee4, 120
  br i1 %v3_1000beec, label %dec_label_pc_1000bef4, label %dec_label_pc_1000befc

dec_label_pc_1000bef4:                            ; preds = %dec_label_pc_1000bedc
  %v1_1000bef4 = mul i32 %v1_1000bee0, 2
  store i32 %v1_1000bef4, i32* %r30.global-to-local, align 4
  %v1_1000bef8 = add i32 %v0_1000becc, 2
  store i32 %v1_1000bef8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000befc

dec_label_pc_1000befc:                            ; preds = %dec_label_pc_1000bedc, %dec_label_pc_1000becc, %dec_label_pc_1000bef4
  %v0_1000bfb015 = phi i32 [ %v1_1000bedc, %dec_label_pc_1000bef4 ], [ %tmp, %dec_label_pc_1000becc ], [ %v1_1000bedc, %dec_label_pc_1000bedc ]
  %v0_1000befc = phi i32 [ %v1_1000bef4, %dec_label_pc_1000bef4 ], [ %v1_1000bed0, %dec_label_pc_1000becc ], [ %v1_1000bee0, %dec_label_pc_1000bedc ]
  %tmp22 = icmp slt i32 %v0_1000befc, 17
  br i1 %tmp22, label %dec_label_pc_1000bf08, label %dec_label_pc_1000bf04

dec_label_pc_1000bf04:                            ; preds = %dec_label_pc_1000befc
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bf08

dec_label_pc_1000bf08:                            ; preds = %dec_label_pc_1000bec0.dec_label_pc_1000bf08_crit_edge, %dec_label_pc_1000befc, %dec_label_pc_1000bf04
  %v0_1000bfb014 = phi i32 [ %tmp, %dec_label_pc_1000bec0.dec_label_pc_1000bf08_crit_edge ], [ %v0_1000bfb015, %dec_label_pc_1000befc ], [ %v0_1000bfb015, %dec_label_pc_1000bf04 ]
  %v1_1000bf1c = phi i32 [ %v0_1000bf08.pre, %dec_label_pc_1000bec0.dec_label_pc_1000bf08_crit_edge ], [ %v0_1000befc, %dec_label_pc_1000befc ], [ 16, %dec_label_pc_1000bf04 ]
  %v1_1000bf08 = add i32 %v1_1000bf1c, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000bf10 = icmp ugt i32 %v1_1000bf08, 34
  br i1 %v2_1000bf10, label %dec_label_pc_1000bfa8, label %dec_label_pc_1000bf18

dec_label_pc_1000bf18:                            ; preds = %dec_label_pc_1000bf08
  %v2_1000bf1c = udiv i32 -1, %v1_1000bf1c
  store i32 %v2_1000bf1c, i32* @r29, align 4
  %v2_1000bf20 = mul i32 %v2_1000bf1c, %v1_1000bf1c
  %v1_1000bf24 = sub i32 -1, %v2_1000bf20
  %v1_1000bf28 = urem i32 %v1_1000bf24, 256
  store i32 %v1_1000bf28, i32* @r27, align 4
  %v0_1000bf34.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bf34

dec_label_pc_1000bf30:                            ; preds = %dec_label_pc_1000bf9c, %dec_label_pc_1000bf84
  %v1_1000bf38.pre = phi i32 [ %v1_1000bf3c, %dec_label_pc_1000bf9c ], [ %v1_1000bf38.pre.pre, %dec_label_pc_1000bf84 ]
  %v0_1000bf38.pre = phi i32 [ %v2_1000bfa0, %dec_label_pc_1000bf9c ], [ %v0_1000bf38.pre.pre, %dec_label_pc_1000bf84 ]
  %v0_1000bf30 = phi i32 [ %v1_1000bf40, %dec_label_pc_1000bf9c ], [ %v0_1000bf30.pre, %dec_label_pc_1000bf84 ]
  br label %dec_label_pc_1000bf34

dec_label_pc_1000bf34:                            ; preds = %dec_label_pc_1000bf18, %dec_label_pc_1000bf30
  %v0_1000bfb012 = phi i32 [ %v0_1000bfb014, %dec_label_pc_1000bf18 ], [ %v0_1000bf30, %dec_label_pc_1000bf30 ]
  %v0_1000bf40 = phi i32 [ %v0_1000bf34.pre, %dec_label_pc_1000bf18 ], [ %v0_1000bf30, %dec_label_pc_1000bf30 ]
  %v1_1000bf3c = phi i32 [ %v2_1000bf1c, %dec_label_pc_1000bf18 ], [ %v1_1000bf38.pre, %dec_label_pc_1000bf30 ]
  %v0_1000bf9c = phi i32 [ 0, %dec_label_pc_1000bf18 ], [ %v0_1000bf38.pre, %dec_label_pc_1000bf30 ]
  %v1_1000bf34 = inttoptr i32 %v0_1000bf40 to i8*
  %v2_1000bf34 = load i8, i8* %v1_1000bf34, align 1
  %v3_1000bf34 = zext i8 %v2_1000bf34 to i32
  %v3_1000bf38 = icmp ugt i32 %v0_1000bf9c, %v1_1000bf3c
  %v1_1000bf40 = add i32 %v0_1000bf40, 1
  store i32 %v1_1000bf40, i32* %r31.global-to-local, align 4
  %v1_1000bf44 = add nsw i32 %v3_1000bf34, -48
  %v1_1000bf48 = or i32 %v3_1000bf34, 32
  %v1_1000bf4c = urem i32 %v1_1000bf44, 256
  %tmp23 = icmp ult i32 %v1_1000bf4c, 10
  br i1 %tmp23, label %dec_label_pc_1000bf6c, label %dec_label_pc_1000bf5c

dec_label_pc_1000bf5c:                            ; preds = %dec_label_pc_1000bf34
  %tmp24 = icmp ult i32 %v1_1000bf48, 97
  br i1 %tmp24, label %dec_label_pc_1000bf6c, label %dec_label_pc_1000bf68

dec_label_pc_1000bf68:                            ; preds = %dec_label_pc_1000bf5c
  %v1_1000bf5c = add nsw i32 %v1_1000bf48, -87
  %v1_1000bf68 = urem i32 %v1_1000bf5c, 256
  br label %dec_label_pc_1000bf6c

dec_label_pc_1000bf6c:                            ; preds = %dec_label_pc_1000bf5c, %dec_label_pc_1000bf34, %dec_label_pc_1000bf68
  %v1_1000bfa0 = phi i32 [ 40, %dec_label_pc_1000bf5c ], [ %v1_1000bf4c, %dec_label_pc_1000bf34 ], [ %v1_1000bf68, %dec_label_pc_1000bf68 ]
  %v1_1000bf6c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000bf6c = icmp slt i32 %v1_1000bfa0, %v1_1000bf6c
  br i1 %v2_1000bf6c, label %dec_label_pc_1000bf74, label %dec_label_pc_1000bfa8

dec_label_pc_1000bf74:                            ; preds = %dec_label_pc_1000bf6c
  br i1 %v3_1000bf38, label %dec_label_pc_1000bf84, label %dec_label_pc_1000bf78

dec_label_pc_1000bf78:                            ; preds = %dec_label_pc_1000bf74
  %v1_1000bf78 = load i32, i32* @r27, align 4
  %v0_1000bf7c.not = icmp ne i32 %v0_1000bf9c, %v1_1000bf3c
  %tmp25 = icmp ule i32 %v1_1000bfa0, %v1_1000bf78
  %or.cond = or i1 %tmp25, %v0_1000bf7c.not
  br i1 %or.cond, label %dec_label_pc_1000bf9c, label %dec_label_pc_1000bf84

dec_label_pc_1000bf84:                            ; preds = %dec_label_pc_1000bf78, %dec_label_pc_1000bf74
  %v0_1000bf84 = call i32 @function_1000aeb8()
  %v0_1000bf88 = load i32, i32* @r28, align 4
  %v1_1000bf88 = load i32, i32* %r26.global-to-local, align 4
  %v2_1000bf88 = and i32 %v1_1000bf88, %v0_1000bf88
  store i32 %v2_1000bf88, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000bf94 = inttoptr i32 %v0_1000bf84 to i32*
  store i32 34, i32* %v2_1000bf94, align 4
  %v0_1000bf30.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000bf38.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bf38.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000bf30

dec_label_pc_1000bf9c:                            ; preds = %dec_label_pc_1000bf78
  %v2_1000bf9c = mul i32 %v1_1000bf6c, %v0_1000bf9c
  %v2_1000bfa0 = add i32 %v2_1000bf9c, %v1_1000bfa0
  store i32 %v2_1000bfa0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bf30

dec_label_pc_1000bfa8:                            ; preds = %dec_label_pc_1000bf6c, %dec_label_pc_1000bf08
  %v0_1000bfb0 = phi i32 [ %v0_1000bfb014, %dec_label_pc_1000bf08 ], [ %v0_1000bfb012, %dec_label_pc_1000bf6c ]
  %v0_1000bfa8 = load i32, i32* %r25.global-to-local, align 4
  %v3_1000bfa8 = icmp eq i32 %v0_1000bfa8, 0
  br i1 %v3_1000bfa8, label %dec_label_pc_1000bfb4, label %dec_label_pc_1000bfb0

dec_label_pc_1000bfb0:                            ; preds = %dec_label_pc_1000bfa8
  %v2_1000bfb0 = inttoptr i32 %v0_1000bfa8 to i32*
  store i32 %v0_1000bfb0, i32* %v2_1000bfb0, align 4
  br label %dec_label_pc_1000bfb4

dec_label_pc_1000bfb4:                            ; preds = %dec_label_pc_1000bfa8, %dec_label_pc_1000bfb0
  %v0_1000bfb4 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000bfb4 = icmp eq i32 %v0_1000bfb4, 0
  %v0_1000bfb8 = load i32, i32* @r28, align 4
  %v1_1000bfb8 = sub i32 0, %v0_1000bfb8
  %tmp40 = lshr i32 %v1_1000bfb8, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000bff8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000bfb4, label %dec_label_pc_1000bfe8, label %dec_label_pc_1000bfd0

dec_label_pc_1000bfd0:                            ; preds = %dec_label_pc_1000bfb4
  %v3_1000bfd0 = icmp ugt i32 %v0_1000bff8.pre.pre, %tmp41
  br i1 %v3_1000bfd0, label %dec_label_pc_1000bfd8, label %dec_label_pc_1000bfe8

dec_label_pc_1000bfd8:                            ; preds = %dec_label_pc_1000bfd0
  %v0_1000bfd8 = call i32 @function_1000aeb8()
  %v2_1000bfe0 = inttoptr i32 %v0_1000bfd8 to i32*
  store i32 34, i32* %v2_1000bfe0, align 4
  %v0_1000bfe4 = load i32, i32* @r31, align 4
  store i32 %v0_1000bfe4, i32* %r8.global-to-local, align 4
  %v0_1000bfe8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000bfe8

dec_label_pc_1000bfe8:                            ; preds = %dec_label_pc_1000bfb4, %dec_label_pc_1000bfd0, %dec_label_pc_1000bfd8
  %v0_1000bff8.pre = phi i32 [ %v0_1000bff8.pre.pre, %dec_label_pc_1000bfd0 ], [ %v0_1000bfe4, %dec_label_pc_1000bfd8 ], [ %v0_1000bff8.pre.pre, %dec_label_pc_1000bfb4 ]
  %v0_1000bfe8 = phi i32 [ %v0_1000bfb8, %dec_label_pc_1000bfd0 ], [ %v0_1000bfe8.pre, %dec_label_pc_1000bfd8 ], [ %v0_1000bfb8, %dec_label_pc_1000bfb4 ]
  %v3_1000bfe8 = icmp eq i32 %v0_1000bfe8, 0
  br i1 %v3_1000bfe8, label %dec_label_pc_1000bff4, label %dec_label_pc_1000bff0

dec_label_pc_1000bff0:                            ; preds = %dec_label_pc_1000bfe8
  %v1_1000bff0 = sub i32 0, %v0_1000bff8.pre
  store i32 %v1_1000bff0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bff4

dec_label_pc_1000bff4:                            ; preds = %dec_label_pc_1000bfe8, %dec_label_pc_1000bff0
  %v0_1000bff8 = phi i32 [ %v1_1000bff0, %dec_label_pc_1000bff0 ], [ %v0_1000bff8.pre, %dec_label_pc_1000bfe8 ]
  ret i32 %v0_1000bff8

; uselistorder directives
  uselistorder i32 %v0_1000bff8.pre, { 1, 0 }
  uselistorder i32 %v0_1000bff8.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000bfa0, { 1, 0 }
  uselistorder i32 %v1_1000bf4c, { 1, 0 }
  uselistorder i32 %v1_1000bf48, { 1, 0 }
  uselistorder i32 %v1_1000bf40, { 1, 0 }
  uselistorder i32 %v3_1000bf34, { 1, 0 }
  uselistorder i32 %v0_1000bf9c, { 1, 0, 2 }
  uselistorder i32 %v1_1000bf3c, { 0, 2, 1 }
  uselistorder i32 %v0_1000bf30, { 1, 0 }
  uselistorder i32 %v2_1000bf1c, { 1, 0, 2 }
  uselistorder i32 %v1_1000bef4, { 1, 0 }
  uselistorder i32 %v1_1000bee0, { 1, 0, 2 }
  uselistorder i8 %v2_1000be88.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000be84, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000be7c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32 34, { 0, 1, 5, 6, 7, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 0, 7, 8, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 26, { 1, 0, 2, 3 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000bff4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bfe8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bfb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bf34, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000befc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bec0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bebc, { 1, 0 }
  uselistorder label %dec_label_pc_1000be84, { 1, 0 }
}

define i32 @function_1000c00c() local_unnamed_addr {
dec_label_pc_1000c00c:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000c024 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000c030 = load i32, i32* @r3, align 4
  store i32 %v0_1000c030, i32* @r31, align 4
  store i32 %v2_1000c024, i32* @r3, align 4
  %v3_1000c03c = call i32 @function_1000c300(i32 %v2_1000c024, i32 ptrtoint ([3 x i8]* @global_var_1000c2f8.477 to i32))
  %v0_1000c044 = call i32 @function_1000c2f8()
  %v3_1000c04c = load i32, i32* @global_var_1001e1bc.500, align 4
  %v3_1000c050 = icmp eq i32 %v3_1000c04c, 0
  br i1 %v3_1000c050, label %dec_label_pc_1000c064, label %dec_label_pc_1000c058

dec_label_pc_1000c058:                            ; preds = %dec_label_pc_1000c00c
  %v0_1000c058 = load i32, i32* @r31, align 4
  %v3_1000c060 = call i32 @unknown_0(i32 %v0_1000c058, i32 268566528)
  br label %dec_label_pc_1000c064

dec_label_pc_1000c064:                            ; preds = %dec_label_pc_1000c00c, %dec_label_pc_1000c058
  store i32 %v2_1000c024, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000c06c = call i32 @function_1000c300(i32 %v2_1000c024, i32 1)
  store i32 %v2_1000c06c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c074.502 to i32), i32* @lr, align 4
  %v1_1000c070 = call i32 @function_1000c264(i32 %v2_1000c06c)
  %v0_1000c088 = load i32, i32* @r31, align 4
  %v1_1000c08c = call i32 @function_1000c698(i32 %v0_1000c088)
  ret i32 %v1_1000c08c

; uselistorder directives
  uselistorder i32 %v2_1000c024, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000c300, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000c064, { 1, 0 }
}

define i32 @function_1000c090(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c090:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000c090 = icmp eq i32 %arg1, 0
  br i1 %v3_1000c090, label %dec_label_pc_1000c244, label %dec_label_pc_1000c0c0.lr.ph

dec_label_pc_1000c0c0.lr.ph:                      ; preds = %dec_label_pc_1000c090
  %v2_1000c0b4 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000c0b4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000c0c042 = add i32 %v2_1000c0b4, 132
  %v3_1000c0c043 = inttoptr i32 %v2_1000c0c042 to i32*
  store i32 0, i32* %v3_1000c0c043, align 4
  %v0_1000c0c444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c0c445 = add i32 %v0_1000c0c444, -1
  store i32 %v1_1000c0c445, i32* %r11.global-to-local, align 4
  %v1_1000c0c846 = mul i32 %v1_1000c0c445, 4
  %v1_1000c0cc47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000c0cc48 = add i32 %v1_1000c0cc47, %v1_1000c0c846
  %v0_1000c0d049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c0d050 = add i32 %v0_1000c0d049, -1
  store i32 %v1_1000c0d050, i32* %ctr.global-to-local, align 4
  %v2_1000c0d051 = icmp eq i32 %v1_1000c0d050, 0
  br i1 %v2_1000c0d051, label %dec_label_pc_1000c0d4, label %dec_label_pc_1000c0c0.dec_label_pc_1000c0c0_crit_edge

dec_label_pc_1000c0c0.dec_label_pc_1000c0c0_crit_edge: ; preds = %dec_label_pc_1000c0c0.lr.ph, %dec_label_pc_1000c0c0.dec_label_pc_1000c0c0_crit_edge
  %v2_1000c0cc52 = phi i32 [ %v2_1000c0cc, %dec_label_pc_1000c0c0.dec_label_pc_1000c0c0_crit_edge ], [ %v2_1000c0cc48, %dec_label_pc_1000c0c0.lr.ph ]
  %v0_1000c0c0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c0c0 = add i32 %v2_1000c0cc52, 8
  %v3_1000c0c0 = inttoptr i32 %v2_1000c0c0 to i32*
  store i32 %v0_1000c0c0.pre, i32* %v3_1000c0c0, align 4
  %v0_1000c0c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c0c4 = add i32 %v0_1000c0c4, -1
  store i32 %v1_1000c0c4, i32* %r11.global-to-local, align 4
  %v1_1000c0c8 = mul i32 %v1_1000c0c4, 4
  %v1_1000c0cc = load i32, i32* %r7.global-to-local, align 4
  %v2_1000c0cc = add i32 %v1_1000c0cc, %v1_1000c0c8
  %v0_1000c0d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c0d0 = add i32 %v0_1000c0d0, -1
  store i32 %v1_1000c0d0, i32* %ctr.global-to-local, align 4
  %v2_1000c0d0 = icmp eq i32 %v1_1000c0d0, 0
  br i1 %v2_1000c0d0, label %dec_label_pc_1000c0d4, label %dec_label_pc_1000c0c0.dec_label_pc_1000c0c0_crit_edge

dec_label_pc_1000c0d4:                            ; preds = %dec_label_pc_1000c0c0.dec_label_pc_1000c0c0_crit_edge, %dec_label_pc_1000c0c0.lr.ph
  %v0_1000c0e8.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c0d4 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000c0d4, i32* @r29, align 4
  store i32 %v2_1000c0d4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000c0e8.pre, i32* %stack_var_-440, align 4
  %v0_1000c0ec = call i32 @function_1000b74c()
  store i32 %v0_1000c0ec, i32* %r3.global-to-local, align 4
  %v1_1000c0f0 = icmp slt i32 %v0_1000c0ec, 0
  br i1 %v1_1000c0f0, label %dec_label_pc_1000c24c, label %dec_label_pc_1000c0f8

dec_label_pc_1000c0f8:                            ; preds = %dec_label_pc_1000c0d4
  %v2_1000c0f8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000c0f8, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268484876, i32* @lr, align 4
  %v3_1000c108 = call i32 @function_1000aaf4(i32 0, i32 %v2_1000c0d4, i32 %v2_1000c0f8)
  store i32 %v3_1000c108, i32* %r3.global-to-local, align 4
  %v3_1000c10c = icmp eq i32 %v3_1000c108, 0
  br i1 %v3_1000c10c, label %dec_label_pc_1000c114, label %dec_label_pc_1000c24c

dec_label_pc_1000c114:                            ; preds = %dec_label_pc_1000c0f8
  store i32 %v2_1000c0f8, i32* %r3.global-to-local, align 4
  %v2_1000c11c = call i32 @function_1000b724(i32 %v2_1000c0f8, i32 17)
  store i32 %v2_1000c11c, i32* %r3.global-to-local, align 4
  %v3_1000c120 = icmp eq i32 %v2_1000c11c, 0
  br i1 %v3_1000c120, label %dec_label_pc_1000c140.lr.ph, label %dec_label_pc_1000c20c

dec_label_pc_1000c140.lr.ph:                      ; preds = %dec_label_pc_1000c114
  store i32 %v2_1000c0b4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000c0c043, align 4
  %v0_1000c14433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c14434 = add i32 %v0_1000c14433, -1
  store i32 %v1_1000c14434, i32* %r11.global-to-local, align 4
  %v1_1000c14835 = mul i32 %v1_1000c14434, 4
  %v1_1000c14c36 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c14c37 = add i32 %v1_1000c14c36, %v1_1000c14835
  %v0_1000c15038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c15039 = add i32 %v0_1000c15038, -1
  store i32 %v1_1000c15039, i32* %ctr.global-to-local, align 4
  %v2_1000c15040 = icmp eq i32 %v1_1000c15039, 0
  br i1 %v2_1000c15040, label %dec_label_pc_1000c154, label %dec_label_pc_1000c140.dec_label_pc_1000c140_crit_edge

dec_label_pc_1000c140.dec_label_pc_1000c140_crit_edge: ; preds = %dec_label_pc_1000c140.lr.ph, %dec_label_pc_1000c140.dec_label_pc_1000c140_crit_edge
  %v2_1000c14c41 = phi i32 [ %v2_1000c14c, %dec_label_pc_1000c140.dec_label_pc_1000c140_crit_edge ], [ %v2_1000c14c37, %dec_label_pc_1000c140.lr.ph ]
  %v0_1000c140.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c140 = add i32 %v2_1000c14c41, 8
  %v3_1000c140 = inttoptr i32 %v2_1000c140 to i32*
  store i32 %v0_1000c140.pre, i32* %v3_1000c140, align 4
  %v0_1000c144 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c144 = add i32 %v0_1000c144, -1
  store i32 %v1_1000c144, i32* %r11.global-to-local, align 4
  %v1_1000c148 = mul i32 %v1_1000c144, 4
  %v1_1000c14c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c14c = add i32 %v1_1000c14c, %v1_1000c148
  %v0_1000c150 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c150 = add i32 %v0_1000c150, -1
  store i32 %v1_1000c150, i32* %ctr.global-to-local, align 4
  %v2_1000c150 = icmp eq i32 %v1_1000c150, 0
  br i1 %v2_1000c150, label %dec_label_pc_1000c154, label %dec_label_pc_1000c140.dec_label_pc_1000c140_crit_edge

dec_label_pc_1000c154:                            ; preds = %dec_label_pc_1000c140.dec_label_pc_1000c140_crit_edge, %dec_label_pc_1000c140.lr.ph
  store i32 %v2_1000c0d4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000c15c = call i32 @function_1000b74c()
  store i32 %v0_1000c15c, i32* %r3.global-to-local, align 4
  %v1_1000c160 = icmp slt i32 %v0_1000c15c, 0
  br i1 %v1_1000c160, label %dec_label_pc_1000c24c, label %dec_label_pc_1000c168

dec_label_pc_1000c168:                            ; preds = %dec_label_pc_1000c154
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000c170 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268484984, i32* @lr, align 4
  %v4_1000c174 = call i32 @function_1000ce40(i32 17, i32* null, i32 %v2_1000c170)
  store i32 %v4_1000c174, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000c174, -1
  br i1 %tmp30, label %dec_label_pc_1000c1a8, label %dec_label_pc_1000c180

dec_label_pc_1000c180:                            ; preds = %dec_label_pc_1000c168
  %v0_1000c180 = call i32 @function_1000aeb8()
  store i32 %v0_1000c180, i32* %r3.global-to-local, align 4
  %v1_1000c188 = inttoptr i32 %v0_1000c180 to i32*
  %v2_1000c188 = load i32, i32* %v1_1000c188, align 4
  store i32 %v2_1000c188, i32* @r28, align 4
  store i32 %v0_1000c180, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268485020, i32* @lr, align 4
  %v3_1000c198 = call i32 @function_1000aaf4(i32 2, i32 %v2_1000c0f8, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000c1a0 = load i32, i32* @r28, align 4
  %v1_1000c1a0 = load i32, i32* @r29, align 4
  %v2_1000c1a0 = inttoptr i32 %v1_1000c1a0 to i32*
  store i32 %v0_1000c1a0, i32* %v2_1000c1a0, align 4
  %v0_1000c260.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c250

dec_label_pc_1000c1a8:                            ; preds = %dec_label_pc_1000c168
  %v3_1000c1a8 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000c0f8, i32* @r28, align 4
  %v3_1000c1b4 = icmp eq i32 %v3_1000c1a8, 1
  br i1 %v3_1000c1b4, label %dec_label_pc_1000c1bc, label %dec_label_pc_1000c1f0

dec_label_pc_1000c1bc:                            ; preds = %dec_label_pc_1000c1a8
  store i32 %v2_1000c0b4, i32* %r3.global-to-local, align 4
  store i32 268485064, i32* @lr, align 4
  %v2_1000c1c4 = call i32 @function_1000cad0(i32 %v2_1000c0b4, i32 %v2_1000c0b4)
  store i32 %v2_1000c1c4, i32* %r3.global-to-local, align 4
  store i32 %v2_1000c1c4, i32* @r31, align 4
  %v0_1000c1cc = call i32 @function_1000aeb8()
  store i32 %v0_1000c1cc, i32* %r3.global-to-local, align 4
  store i32 %v0_1000c1cc, i32* @r29, align 4
  %v1_1000c1dc = inttoptr i32 %v0_1000c1cc to i32*
  %v2_1000c1dc = load i32, i32* %v1_1000c1dc, align 4
  store i32 %v2_1000c1dc, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268485096, i32* @lr, align 4
  %v3_1000c1e4 = call i32 @function_1000aaf4(i32 2, i32 %v2_1000c0f8, i32 0)
  store i32 %v3_1000c1e4, i32* %r3.global-to-local, align 4
  %v0_1000c1e8 = load i32, i32* @r28, align 4
  %v1_1000c1e8 = load i32, i32* @r29, align 4
  %v2_1000c1e8 = inttoptr i32 %v1_1000c1e8 to i32*
  store i32 %v0_1000c1e8, i32* %v2_1000c1e8, align 4
  %v0_1000c218.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c218

dec_label_pc_1000c1f0:                            ; preds = %dec_label_pc_1000c1a8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268485120, i32* @lr, align 4
  %v3_1000c1fc = call i32 @function_1000aaf4(i32 2, i32 %v2_1000c0f8, i32 0)
  br label %dec_label_pc_1000c20c

dec_label_pc_1000c20c:                            ; preds = %dec_label_pc_1000c114, %dec_label_pc_1000c1f0
  store i32 %v2_1000c0b4, i32* %r3.global-to-local, align 4
  store i32 268485140, i32* @lr, align 4
  %v2_1000c210 = call i32 @function_1000cad0(i32 %v2_1000c0b4, i32 %v2_1000c0b4)
  store i32 %v2_1000c210, i32* %r3.global-to-local, align 4
  store i32 %v2_1000c210, i32* @r31, align 4
  br label %dec_label_pc_1000c218

dec_label_pc_1000c218:                            ; preds = %dec_label_pc_1000c1bc, %dec_label_pc_1000c20c
  %v0_1000c218 = phi i32 [ %v0_1000c218.pr, %dec_label_pc_1000c1bc ], [ %v2_1000c210, %dec_label_pc_1000c20c ]
  %v3_1000c218 = icmp eq i32 %v0_1000c218, 0
  br i1 %v3_1000c218, label %dec_label_pc_1000c244, label %dec_label_pc_1000c220

dec_label_pc_1000c220:                            ; preds = %dec_label_pc_1000c218
  %v3_1000c230 = load i32, i32* %stack_var_-440, align 4
  %v0_1000c234 = call i32 @__asm_mfcr()
  store i32 %v0_1000c234, i32* %r3.global-to-local, align 4
  %v1_1000c238 = call i32 @__asm_rlwinm(i32 %v0_1000c234, i32 30, i32 31, i32 31)
  %v2_1000c23c = add i32 %v3_1000c230, %v1_1000c238
  store i32 %v2_1000c23c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c250

dec_label_pc_1000c244:                            ; preds = %dec_label_pc_1000c218, %dec_label_pc_1000c090
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c250

dec_label_pc_1000c24c:                            ; preds = %dec_label_pc_1000c0f8, %dec_label_pc_1000c154, %dec_label_pc_1000c0d4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c250

dec_label_pc_1000c250:                            ; preds = %dec_label_pc_1000c244, %dec_label_pc_1000c220, %dec_label_pc_1000c180, %dec_label_pc_1000c24c
  %v0_1000c260 = phi i32 [ 0, %dec_label_pc_1000c244 ], [ %v2_1000c23c, %dec_label_pc_1000c220 ], [ %v0_1000c260.pre, %dec_label_pc_1000c180 ], [ -1, %dec_label_pc_1000c24c ]
  ret i32 %v0_1000c260

; uselistorder directives
  uselistorder i32 %v1_1000c150, { 1, 0 }
  uselistorder i32 %v2_1000c0f8, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000c0d0, { 1, 0 }
  uselistorder i32 %v2_1000c0b4, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 1, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 3, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32, i32)* @function_1000cad0, { 1, 0 }
  uselistorder i32 17, { 2, 29, 30, 3, 31, 4, 13, 14, 5, 6, 15, 27, 28, 16, 17, 7, 8, 18, 9, 19, 20, 21, 10, 11, 12, 22, 0, 23, 1, 24, 25, 26 }
  uselistorder label %dec_label_pc_1000c250, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c24c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c218, { 1, 0 }
  uselistorder label %dec_label_pc_1000c20c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c140.dec_label_pc_1000c140_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0c0.dec_label_pc_1000c0c0_crit_edge, { 1, 0 }
}

define i32 @function_1000c264(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c2b4:
  %v3_1000c2b8 = load i32, i32* @global_var_1001e1cc.504, align 4
  %v3_1000c2bc = icmp eq i32 %v3_1000c2b8, 0
  br i1 %v3_1000c2bc, label %dec_label_pc_1000c2cc, label %dec_label_pc_1000c2c4

dec_label_pc_1000c2c4:                            ; preds = %dec_label_pc_1000c2b4
  %v2_1000c2c8 = load i32, i32* @r4, align 4
  %v3_1000c2c8 = call i32 @unknown_0(i32 268566528, i32 %v2_1000c2c8)
  store i32 %v3_1000c2c8, i32* @r3, align 4
  br label %dec_label_pc_1000c2cc

dec_label_pc_1000c2cc:                            ; preds = %dec_label_pc_1000c2b4, %dec_label_pc_1000c2c4
  %v3_1000c2d0 = load i32, i32* @global_var_1001e1d0.505, align 4
  %v3_1000c2d4 = icmp eq i32 %v3_1000c2d0, 0
  br i1 %v3_1000c2d4, label %dec_label_pc_1000c2cc.dec_label_pc_1000c2e4_crit_edge, label %dec_label_pc_1000c2dc

dec_label_pc_1000c2cc.dec_label_pc_1000c2e4_crit_edge: ; preds = %dec_label_pc_1000c2cc
  %v0_1000c2f4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c2e4

dec_label_pc_1000c2dc:                            ; preds = %dec_label_pc_1000c2cc
  %v2_1000c2e0 = load i32, i32* @r4, align 4
  %v3_1000c2e0 = call i32 @unknown_0(i32 268566528, i32 %v2_1000c2e0)
  br label %dec_label_pc_1000c2e4

dec_label_pc_1000c2e4:                            ; preds = %dec_label_pc_1000c2cc.dec_label_pc_1000c2e4_crit_edge, %dec_label_pc_1000c2dc
  %v0_1000c2f4 = phi i32 [ %v0_1000c2f4.pre, %dec_label_pc_1000c2cc.dec_label_pc_1000c2e4_crit_edge ], [ %v3_1000c2e0, %dec_label_pc_1000c2dc ]
  ret i32 %v0_1000c2f4

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c2e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2cc, { 1, 0 }
}

define i32 @function_1000c2f8() local_unnamed_addr {
dec_label_pc_1000c2f8:
  ret i32 0
}

define i32 @function_1000c300(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c300:
  %v0_1000c300 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c300
}

define i32 @function_1000c304(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c304:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268485416, i32* @lr, align 4
  %v1_1000c324 = call i32 @function_1000a66c(i32 1)
  %v3_1000c328 = icmp eq i32 %v1_1000c324, -1
  br i1 %v3_1000c328, label %dec_label_pc_1000c330, label %dec_label_pc_1000c350

dec_label_pc_1000c330:                            ; preds = %dec_label_pc_1000c304
  %v0_1000c334 = load i32, i32* @r30, align 4
  store i32 268485444, i32* @lr, align 4
  %v3_1000c340 = call i32 @function_1000a904(i32 ptrtoint ([10 x i8]* @global_var_1000da54.506 to i32), i32 %v0_1000c334)
  %v1_1000c344 = load i32, i32* @r31, align 4
  %v4_1000c344 = icmp eq i32 %v3_1000c340, %v1_1000c344
  br i1 %v4_1000c344, label %dec_label_pc_1000c350, label %dec_label_pc_1000c34c

dec_label_pc_1000c34c:                            ; preds = %dec_label_pc_1000c330
  %v1_1000c34c = call i32 @function_1000cf04(i32 %v3_1000c340)
  br label %dec_label_pc_1000c350

dec_label_pc_1000c350:                            ; preds = %dec_label_pc_1000c304, %dec_label_pc_1000c330, %dec_label_pc_1000c34c
  %v0_1000c360 = phi i32 [ %v1_1000c324, %dec_label_pc_1000c304 ], [ %v3_1000c340, %dec_label_pc_1000c330 ], [ %v1_1000c34c, %dec_label_pc_1000c34c ]
  ret i32 %v0_1000c360

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000a904, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_1000a66c, { 0, 9, 4, 3, 6, 5, 13, 12, 15, 14, 11, 10, 8, 7, 2, 1 }
  uselistorder label %dec_label_pc_1000c350, { 2, 1, 0 }
}

define i32 @function_1000c364(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c364:
  %v3_1000c384 = load i32, i32* @global_var_1001e1d4.507, align 4
  %v3_1000c388 = icmp eq i32 %v3_1000c384, 0
  br i1 %v3_1000c388, label %dec_label_pc_1000c3ac, label %dec_label_pc_1000c3d0

dec_label_pc_1000c3ac:                            ; preds = %dec_label_pc_1000c364
  store i32 1, i32* @global_var_1001e1d4.507, align 4
  store i32 4096, i32* @global_var_1001e1c8.489, align 4
  br label %dec_label_pc_1000c3d0

dec_label_pc_1000c3d0:                            ; preds = %dec_label_pc_1000c3ac, %dec_label_pc_1000c364
  %v0_1000c3e0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c3e0
}

define i32 @function_1000c3e4(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000c3e4:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000c3fc = mul i32 %arg2, 4
  %v2_1000c400 = add i32 %tmp, %v1_1000c3fc
  %v0_1000c404 = load i32, i32* @r9, align 4
  store i32 %v0_1000c404, i32* @global_var_1001e1c0.509, align 4
  %v1_1000c408 = add i32 %v2_1000c400, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000c408, i32* @global_var_1001e1c4.510, align 4
  store i32 %arg6, i32* @global_var_1001e1d0.505, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000c428 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000c430 = icmp eq i32 %v1_1000c408, %v2_1000c428
  br i1 %v4_1000c430, label %dec_label_pc_1000c438, label %dec_label_pc_1000c43c

dec_label_pc_1000c438:                            ; preds = %dec_label_pc_1000c3e4
  store i32 %v2_1000c400, i32* @global_var_1001e1c4.510, align 4
  br label %dec_label_pc_1000c43c

dec_label_pc_1000c43c:                            ; preds = %dec_label_pc_1000c3e4, %dec_label_pc_1000c438
  %v2_1000c43c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268485708, i32* @lr, align 4
  %v3_1000c448 = call i32 @function_1000b03c(i32 %v2_1000c43c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001e1c4.510, align 4
  br label %dec_label_pc_1000c458

dec_label_pc_1000c458:                            ; preds = %dec_label_pc_1000c458, %dec_label_pc_1000c43c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000c43c ], [ %v1_1000c45c, %dec_label_pc_1000c458 ]
  %v1_1000c458 = inttoptr i32 %storemerge to i32*
  %v2_1000c458 = load i32, i32* %v1_1000c458, align 4
  %v1_1000c45c = add i32 %storemerge, 4
  %v3_1000c460 = icmp eq i32 %v2_1000c458, 0
  br i1 %v3_1000c460, label %dec_label_pc_1000c468, label %dec_label_pc_1000c458

dec_label_pc_1000c468:                            ; preds = %dec_label_pc_1000c458
  store i32 %v1_1000c45c, i32* %r29.global-to-local, align 4
  %v1_1000c49412 = inttoptr i32 %v1_1000c45c to i32*
  %v2_1000c49413 = load i32, i32* %v1_1000c49412, align 4
  %v3_1000c49816 = icmp eq i32 %v2_1000c49413, 0
  br i1 %v3_1000c49816, label %dec_label_pc_1000c4a0, label %dec_label_pc_1000c470

dec_label_pc_1000c470:                            ; preds = %dec_label_pc_1000c468, %dec_label_pc_1000c490
  %v0_1000c484 = phi i32 [ %v1_1000c490, %dec_label_pc_1000c490 ], [ %v1_1000c45c, %dec_label_pc_1000c468 ]
  %v0_1000c478 = phi i32 [ %v2_1000c494, %dec_label_pc_1000c490 ], [ %v2_1000c49413, %dec_label_pc_1000c468 ]
  %v2_1000c470 = icmp ugt i32 %v0_1000c478, 14
  br i1 %v2_1000c470, label %dec_label_pc_1000c490, label %dec_label_pc_1000c478

dec_label_pc_1000c478:                            ; preds = %dec_label_pc_1000c470
  %v1_1000c478 = mul i32 %v0_1000c478, 8
  %v2_1000c480 = add i32 %v1_1000c478, %v2_1000c43c
  store i32 %v2_1000c480, i32* @r3, align 4
  store i32 %v0_1000c484, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268485776, i32* @lr, align 4
  %v0_1000c48c = call i32 @function_1000aefc()
  %v0_1000c490.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c490

dec_label_pc_1000c490:                            ; preds = %dec_label_pc_1000c470, %dec_label_pc_1000c478
  %v0_1000c490 = phi i32 [ %v0_1000c484, %dec_label_pc_1000c470 ], [ %v0_1000c490.pre, %dec_label_pc_1000c478 ]
  %v1_1000c490 = add i32 %v0_1000c490, 8
  store i32 %v1_1000c490, i32* %r29.global-to-local, align 4
  %v1_1000c494 = inttoptr i32 %v1_1000c490 to i32*
  %v2_1000c494 = load i32, i32* %v1_1000c494, align 4
  %v3_1000c498 = icmp eq i32 %v2_1000c494, 0
  br i1 %v3_1000c498, label %dec_label_pc_1000c4a0, label %dec_label_pc_1000c470

dec_label_pc_1000c4a0:                            ; preds = %dec_label_pc_1000c490, %dec_label_pc_1000c468
  %v1_1000c4a4 = call i32 @function_1000d054(i32 %v2_1000c43c)
  store i32 %v1_1000c4a4, i32* @r3, align 4
  store i32 268485804, i32* @lr, align 4
  %v1_1000c4a8 = call i32 @function_1000c364(i32 %v1_1000c4a4)
  %v3_1000c4b0 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000c4b0, label %dec_label_pc_1000c4b8, label %dec_label_pc_1000c4bc

dec_label_pc_1000c4b8:                            ; preds = %dec_label_pc_1000c4a0
  br label %dec_label_pc_1000c4bc

dec_label_pc_1000c4bc:                            ; preds = %dec_label_pc_1000c4a0, %dec_label_pc_1000c4b8
  %v0_1000c4c4 = phi i32 [ %tmp27, %dec_label_pc_1000c4a0 ], [ 4096, %dec_label_pc_1000c4b8 ]
  store i32 %v0_1000c4c4, i32* @global_var_1001e1c8.489, align 4
  %v3_1000c4c8 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000c4c8, label %dec_label_pc_1000c4d0, label %dec_label_pc_1000c504

dec_label_pc_1000c4d0:                            ; preds = %dec_label_pc_1000c4bc
  store i32 268485844, i32* @lr, align 4
  %v1_1000c4d0 = call i32 @function_1000ca08(i32 268566528)
  store i32 %v1_1000c4d0, i32* %r29.global-to-local, align 4
  store i32 268485852, i32* @lr, align 4
  %v0_1000c4d8 = call i32 @function_1000c978()
  %v4_1000c4dc = icmp eq i32 %v1_1000c4d0, %v0_1000c4d8
  br i1 %v4_1000c4dc, label %dec_label_pc_1000c4e4, label %dec_label_pc_1000c520

dec_label_pc_1000c4e4:                            ; preds = %dec_label_pc_1000c4d0
  store i32 268485864, i32* @lr, align 4
  %v1_1000c4e4 = call i32 @function_1000c9c0(i32 %v0_1000c4d8)
  store i32 %v1_1000c4e4, i32* %r29.global-to-local, align 4
  store i32 268485872, i32* @lr, align 4
  %v0_1000c4ec = call i32 @function_1000c930()
  %v4_1000c4f0 = icmp eq i32 %v1_1000c4e4, %v0_1000c4ec
  br i1 %v4_1000c4f0, label %dec_label_pc_1000c4f8.thread, label %dec_label_pc_1000c520

dec_label_pc_1000c4f8.thread:                     ; preds = %dec_label_pc_1000c4e4
  br label %dec_label_pc_1000c550

dec_label_pc_1000c504:                            ; preds = %dec_label_pc_1000c4bc
  %v4_1000c508 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000c508, label %dec_label_pc_1000c510, label %dec_label_pc_1000c520

dec_label_pc_1000c510:                            ; preds = %dec_label_pc_1000c504
  br label %dec_label_pc_1000c520

dec_label_pc_1000c520:                            ; preds = %dec_label_pc_1000c510, %dec_label_pc_1000c504, %dec_label_pc_1000c4e4, %dec_label_pc_1000c4d0
  store i32 268485936, i32* @lr, align 4
  %v2_1000c52c = call i32 @function_1000c304(i32 0, i32 32768)
  store i32 268485952, i32* @lr, align 4
  %v2_1000c53c = call i32 @function_1000c304(i32 1, i32 32770)
  store i32 268485968, i32* @lr, align 4
  %v2_1000c54c = call i32 @function_1000c304(i32 2, i32 32770)
  br label %dec_label_pc_1000c550

dec_label_pc_1000c550:                            ; preds = %dec_label_pc_1000c4f8.thread, %dec_label_pc_1000c520
  %v0_1000c55c = load i32, i32* @r30, align 4
  %v1_1000c55c = inttoptr i32 %v0_1000c55c to i32*
  %v2_1000c55c = load i32, i32* %v1_1000c55c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000c55c, i32* inttoptr (i32 268558708 to i32*), align 4
  %v0_1000c57c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000c57c, i32* @global_var_1001e1cc.504, align 4
  br i1 false, label %dec_label_pc_1000c584, label %dec_label_pc_1000c5fc

dec_label_pc_1000c584:                            ; preds = %dec_label_pc_1000c550, %dec_label_pc_1000c584
  br i1 undef, label %dec_label_pc_1000c584, label %dec_label_pc_1000c5fc

dec_label_pc_1000c5fc:                            ; preds = %dec_label_pc_1000c584, %dec_label_pc_1000c550
  %v0_1000c5a8 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000c5a8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000c60c = call i32 @function_1000aeb8()
  %v2_1000c614 = inttoptr i32 %v0_1000c60c to i32*
  store i32 0, i32* %v2_1000c614, align 4
  %v0_1000c640 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000c640)
  %v0_1000c64c = call i32 @function_1000c00c()
  ret i32 %v0_1000c64c

; uselistorder directives
  uselistorder i32 %v2_1000c494, { 1, 0 }
  uselistorder i32 %v1_1000c490, { 2, 1, 0 }
  uselistorder i32 %v1_1000c45c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000c43c, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000c00c, { 0, 2, 3, 1 }
  uselistorder i1 false, { 0, 6, 7, 8, 2, 3, 9, 10, 11, 12, 15, 13, 14, 4, 5, 1 }
  uselistorder i32 (i32, i32)* @function_1000c304, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 18, 0, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 2, 13, 14, 15, 16, 17, 3 }
  uselistorder i32* @r9, { 7, 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1000c584, { 1, 0 }
  uselistorder label %dec_label_pc_1000c550, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c490, { 1, 0 }
  uselistorder label %dec_label_pc_1000c470, { 1, 0 }
  uselistorder label %dec_label_pc_1000c43c, { 1, 0 }
}

define i32 @function_1000c650(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c650:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c668 = call i32 @__asm_mfcr()
  %v1_1000c66c = and i32 %v0_1000c668, 268435456
  %v3_1000c66c = icmp eq i32 %v1_1000c66c, 0
  store i32 %v0_1000c668, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c66c, label %dec_label_pc_1000c684, label %dec_label_pc_1000c678

dec_label_pc_1000c678:                            ; preds = %dec_label_pc_1000c650
  %v0_1000c678 = call i32 @function_1000aeb8()
  %v0_1000c67c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c67c = inttoptr i32 %v0_1000c678 to i32*
  store i32 %v0_1000c67c, i32* %v2_1000c67c, align 4
  br label %dec_label_pc_1000c684

dec_label_pc_1000c684:                            ; preds = %dec_label_pc_1000c650, %dec_label_pc_1000c678
  %v0_1000c694 = phi i32 [ %v0_1000c668, %dec_label_pc_1000c650 ], [ -1, %dec_label_pc_1000c678 ]
  ret i32 %v0_1000c694

; uselistorder directives
  uselistorder label %dec_label_pc_1000c684, { 1, 0 }
}

define i32 @function_1000c698(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c698:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000c6ac

dec_label_pc_1000c6ac:                            ; preds = %dec_label_pc_1000c6ac.backedge, %dec_label_pc_1000c698
  %v0_1000c6b8 = call i32 @__asm_mfcr()
  %v1_1000c6bc = and i32 %v0_1000c6b8, 268435456
  %v3_1000c6bc = icmp eq i32 %v1_1000c6bc, 0
  store i32 %v0_1000c6b8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c6bc, label %dec_label_pc_1000c6ac.backedge, label %dec_label_pc_1000c6c8

dec_label_pc_1000c6c8:                            ; preds = %dec_label_pc_1000c6ac
  %v0_1000c6c8 = call i32 @function_1000aeb8()
  %v0_1000c6cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c6cc = inttoptr i32 %v0_1000c6c8 to i32*
  store i32 %v0_1000c6cc, i32* %v2_1000c6cc, align 4
  br label %dec_label_pc_1000c6ac.backedge

dec_label_pc_1000c6ac.backedge:                   ; preds = %dec_label_pc_1000c6c8, %dec_label_pc_1000c6ac
  br label %dec_label_pc_1000c6ac
}

define i32 @function_1000c6d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c6d4:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000c6e0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c6e0, i32* @r29, align 4
  %v0_1000c6e8 = load i32, i32* @r4, align 4
  store i32 %v0_1000c6e8, i32* @r30, align 4
  %v0_1000c6f8 = call i32 @__asm_mfcr()
  %v1_1000c6fc = and i32 %v0_1000c6f8, 268435456
  %v3_1000c6fc = icmp eq i32 %v1_1000c6fc, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000c6f8, i32* @r31, align 4
  br i1 %v3_1000c6fc, label %dec_label_pc_1000c718, label %dec_label_pc_1000c70c

dec_label_pc_1000c70c:                            ; preds = %dec_label_pc_1000c6d4
  %v0_1000c70c = call i32 @function_1000aeb8()
  %v0_1000c710 = load i32, i32* @r31, align 4
  %v2_1000c710 = inttoptr i32 %v0_1000c70c to i32*
  store i32 %v0_1000c710, i32* %v2_1000c710, align 4
  br label %dec_label_pc_1000c730

dec_label_pc_1000c718:                            ; preds = %dec_label_pc_1000c6d4
  %v3_1000c718 = icmp eq i32 %v0_1000c6f8, 0
  store i32 %v0_1000c6f8, i32* @r28, align 4
  br i1 %v3_1000c718, label %dec_label_pc_1000c72c, label %dec_label_pc_1000c730

dec_label_pc_1000c72c:                            ; preds = %dec_label_pc_1000c718
  %v0_1000c720 = load i32, i32* @r30, align 4
  store i32 268486448, i32* @lr, align 4
  %v4_1000c72c = call i32 @function_1000cc9c(i32* nonnull %stack_var_-104, i32 %v0_1000c720, i32 0)
  br label %dec_label_pc_1000c730

dec_label_pc_1000c730:                            ; preds = %dec_label_pc_1000c718, %dec_label_pc_1000c70c, %dec_label_pc_1000c72c
  %v0_1000c734 = load i32, i32* @r28, align 4
  ret i32 %v0_1000c734

; uselistorder directives
  uselistorder i32 %v0_1000c6f8, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000c730, { 2, 0, 1 }
}

define i32 @function_1000c748(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c748:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000c75c = call i32 @function_1000c7d8()
  store i32 %v0_1000c75c, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000c75c, 1
  br i1 %tmp18, label %dec_label_pc_1000c7c0, label %dec_label_pc_1000c768

dec_label_pc_1000c768:                            ; preds = %dec_label_pc_1000c748
  %v0_1000c768 = load i32, i32* @r31, align 4
  %v2_1000c768 = add i32 %v0_1000c768, %v0_1000c75c
  store i32 %v2_1000c768, i32* %r29.global-to-local, align 4
  %v2_1000c7b03 = icmp ult i32 %v0_1000c768, %v2_1000c768
  br i1 %v2_1000c7b03, label %dec_label_pc_1000c770, label %dec_label_pc_1000c7c0

dec_label_pc_1000c770:                            ; preds = %dec_label_pc_1000c768, %dec_label_pc_1000c770
  %v1_1000c780 = phi i32 [ %v2_1000c7ac, %dec_label_pc_1000c770 ], [ %v0_1000c768, %dec_label_pc_1000c768 ]
  %v1_1000c7b410.in = phi i32 [ %v2_1000c7ac, %dec_label_pc_1000c770 ], [ %v0_1000c768, %dec_label_pc_1000c768 ]
  %v1_1000c7b811.in = phi i32 [ %v2_1000c7ac, %dec_label_pc_1000c770 ], [ %v0_1000c768, %dec_label_pc_1000c768 ]
  %v1_1000c7b410 = add i32 %v1_1000c7b410.in, 11
  %v1_1000c7b811 = add i32 %v1_1000c7b811.in, 19
  %v1_1000c770 = add i32 %v1_1000c780, 4
  %v2_1000c770 = inttoptr i32 %v1_1000c770 to i32*
  %v3_1000c770 = load i32, i32* %v2_1000c770, align 4
  store i32 %v3_1000c770, i32* %r11.global-to-local, align 4
  %v1_1000c774 = add i32 %v1_1000c780, 12
  %v2_1000c774 = inttoptr i32 %v1_1000c774 to i32*
  %v3_1000c774 = load i32, i32* %v2_1000c774, align 4
  %v1_1000c778 = add i32 %v1_1000c780, 16
  %v2_1000c778 = inttoptr i32 %v1_1000c778 to i16*
  %v3_1000c778 = load i16, i16* %v2_1000c778, align 2
  %v4_1000c778 = zext i16 %v3_1000c778 to i32
  store i32 %v4_1000c778, i32* %r5.global-to-local, align 4
  %v1_1000c77c = add i32 %v1_1000c780, 18
  %v2_1000c77c = inttoptr i32 %v1_1000c77c to i8*
  %v3_1000c77c = load i8, i8* %v2_1000c77c, align 1
  %v4_1000c77c = zext i8 %v3_1000c77c to i32
  store i32 %v4_1000c77c, i32* %r9.global-to-local, align 4
  store i32 %v3_1000c774, i32* %v2_1000c770, align 4
  %v0_1000c784 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c784 = load i32, i32* @r31, align 4
  %v2_1000c784 = inttoptr i32 %v1_1000c784 to i32*
  store i32 %v0_1000c784, i32* %v2_1000c784, align 4
  %v0_1000c788 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c788 = trunc i32 %v0_1000c788 to i8
  %v2_1000c788 = load i32, i32* @r31, align 4
  %v3_1000c788 = add i32 %v2_1000c788, 10
  %v4_1000c788 = inttoptr i32 %v3_1000c788 to i8*
  store i8 %v1_1000c788, i8* %v4_1000c788, align 1
  %v0_1000c78c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c78c = trunc i32 %v0_1000c78c to i16
  %v2_1000c78c = load i32, i32* @r31, align 4
  %v3_1000c78c = add i32 %v2_1000c78c, 8
  %v4_1000c78c = inttoptr i32 %v3_1000c78c to i16*
  store i16 %v1_1000c78c, i16* %v4_1000c78c, align 2
  %v0_1000c790 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c790 = add i32 %v0_1000c790, -19
  store i32 %v1_1000c790, i32* %r5.global-to-local, align 4
  store i32 268486552, i32* @lr, align 4
  %v3_1000c794 = call i32 @function_1000af98(i32 %v1_1000c7b410, i32 %v1_1000c7b811, i32 %v1_1000c790)
  %v0_1000c798 = load i32, i32* @r31, align 4
  %v1_1000c798 = add i32 %v0_1000c798, 8
  %v2_1000c798 = inttoptr i32 %v1_1000c798 to i16*
  %v3_1000c798 = load i16, i16* %v2_1000c798, align 2
  %v4_1000c798 = zext i16 %v3_1000c798 to i32
  store i32 %v4_1000c798, i32* %r5.global-to-local, align 4
  store i32 268486568, i32* @lr, align 4
  %v3_1000c7a4 = call i32 @function_1000af98(i32 %v0_1000c798, i32 %v0_1000c798, i32 %v4_1000c798)
  %v0_1000c7a8 = load i32, i32* @r31, align 4
  %v1_1000c7a8 = add i32 %v0_1000c7a8, 8
  %v2_1000c7a8 = inttoptr i32 %v1_1000c7a8 to i16*
  %v3_1000c7a8 = load i16, i16* %v2_1000c7a8, align 2
  %v4_1000c7a8 = zext i16 %v3_1000c7a8 to i32
  %v2_1000c7ac = add i32 %v4_1000c7a8, %v0_1000c7a8
  store i32 %v2_1000c7ac, i32* @r31, align 4
  %v1_1000c7b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c7b0 = icmp ult i32 %v2_1000c7ac, %v1_1000c7b0
  br i1 %v2_1000c7b0, label %dec_label_pc_1000c770, label %dec_label_pc_1000c7b0.dec_label_pc_1000c7c0.loopexit_crit_edge

dec_label_pc_1000c7b0.dec_label_pc_1000c7c0.loopexit_crit_edge: ; preds = %dec_label_pc_1000c770
  %v0_1000c7c4.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c7c0

dec_label_pc_1000c7c0:                            ; preds = %dec_label_pc_1000c768, %dec_label_pc_1000c7b0.dec_label_pc_1000c7c0.loopexit_crit_edge, %dec_label_pc_1000c748
  %v0_1000c7c4 = phi i32 [ %v0_1000c75c, %dec_label_pc_1000c748 ], [ %v0_1000c7c4.pre.pre, %dec_label_pc_1000c7b0.dec_label_pc_1000c7c0.loopexit_crit_edge ], [ %v0_1000c75c, %dec_label_pc_1000c768 ]
  ret i32 %v0_1000c7c4

; uselistorder directives
  uselistorder i32 %v2_1000c7ac, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000c798, { 1, 0, 2 }
  uselistorder i32 %v1_1000c780, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000c768, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000c75c, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_1000af98, { 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 11, { 0, 37, 30, 2, 8, 9, 16, 10, 11, 17, 12, 13, 18, 19, 31, 32, 33, 34, 35, 36, 1, 20, 14, 21, 22, 23, 24, 25, 3, 26, 27, 4, 28, 29, 15, 5, 6, 38, 39, 40, 41, 42, 43, 7 }
  uselistorder label %dec_label_pc_1000c7c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c770, { 1, 0 }
}

define i32 @function_1000c7d8() local_unnamed_addr {
dec_label_pc_1000c7d8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000c7dc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000c7dc, i32* %stack_var_-48, align 4
  %v5_1000c7dc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000c7dc, i32* %r9.global-to-local, align 4
  %v0_1000c7e8 = load i32, i32* @r5, align 4
  %v1_1000c7e8 = add i32 %v0_1000c7e8, 30
  %v1_1000c7ec = call i32 @__asm_rlwinm(i32 %v1_1000c7e8, i32 0, i32 0, i32 27)
  store i32 %v5_1000c7dc, i32* @r31, align 4
  %v1_1000c7fc = load i32, i32* @r1, align 4
  %v3_1000c7fc = sub i32 %v1_1000c7fc, %v1_1000c7ec
  %v4_1000c7fc = inttoptr i32 %v3_1000c7fc to i32*
  store i32 %v4_1000c7dc, i32* %v4_1000c7fc, align 4
  %v0_1000c800 = load i32, i32* @r4, align 4
  store i32 %v0_1000c800, i32* @r28, align 4
  %v0_1000c804 = load i32, i32* @r5, align 4
  store i32 %v0_1000c804, i32* @r23, align 4
  %v0_1000c808 = load i32, i32* @r3, align 4
  store i32 %v0_1000c808, i32* @r22, align 4
  %v1_1000c80c = add i32 %v3_1000c7fc, 23
  %v1_1000c810 = call i32 @__asm_rlwinm(i32 %v1_1000c80c, i32 0, i32 0, i32 27)
  store i32 %v1_1000c810, i32* @r27, align 4
  store i32 %v1_1000c810, i32* %r4.global-to-local, align 4
  %v0_1000c820 = call i32 @__asm_mfcr()
  %v1_1000c824 = and i32 %v0_1000c820, 268435456
  store i32 %v1_1000c824, i32* %r9.global-to-local, align 4
  %v3_1000c824 = icmp eq i32 %v1_1000c824, 0
  store i32 %v0_1000c820, i32* %r30.global-to-local, align 4
  br i1 %v3_1000c824, label %dec_label_pc_1000c83c, label %dec_label_pc_1000c830

dec_label_pc_1000c830:                            ; preds = %dec_label_pc_1000c7d8
  %v0_1000c830 = call i32 @function_1000aeb8()
  %v0_1000c834 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000c834 = inttoptr i32 %v0_1000c830 to i32*
  store i32 %v0_1000c834, i32* %v2_1000c834, align 4
  br label %dec_label_pc_1000c848

dec_label_pc_1000c83c:                            ; preds = %dec_label_pc_1000c7d8
  %v3_1000c83c = icmp eq i32 %v0_1000c820, -1
  store i32 %v0_1000c820, i32* %r24.global-to-local, align 4
  br i1 %v3_1000c83c, label %dec_label_pc_1000c848, label %dec_label_pc_1000c850

dec_label_pc_1000c848:                            ; preds = %dec_label_pc_1000c83c, %dec_label_pc_1000c830
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000c914

dec_label_pc_1000c850:                            ; preds = %dec_label_pc_1000c83c
  %v0_1000c850 = load i32, i32* @r28, align 4
  store i32 %v0_1000c850, i32* %r29.global-to-local, align 4
  store i32 %v1_1000c810, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000c8f812 = add i32 %v0_1000c820, %v1_1000c810
  %v1_1000c8fc13 = load i32, i32* @r23, align 4
  %v2_1000c8fc14 = add i32 %v1_1000c8fc13, %v0_1000c850
  store i32 %v2_1000c8fc14, i32* %r10.global-to-local, align 4
  %v2_1000c90015 = icmp ult i32 %v1_1000c810, %v2_1000c8f812
  %v1_1000c90418 = add i32 %v0_1000c850, 19
  store i32 %v1_1000c90418, i32* @r3, align 4
  %v1_1000c90819 = add i32 %v1_1000c810, 19
  store i32 %v1_1000c90819, i32* @r4, align 4
  br i1 %v2_1000c90015, label %dec_label_pc_1000c864, label %dec_label_pc_1000c910

dec_label_pc_1000c864:                            ; preds = %dec_label_pc_1000c850, %dec_label_pc_1000c8ac
  %v0_1000c86420 = phi i32 [ %v2_1000c8f4, %dec_label_pc_1000c8ac ], [ %v1_1000c810, %dec_label_pc_1000c850 ]
  %v1_1000c864 = add i32 %v0_1000c86420, 16
  %v2_1000c864 = inttoptr i32 %v1_1000c864 to i16*
  %v3_1000c864 = load i16, i16* %v2_1000c864, align 2
  %v4_1000c864 = zext i16 %v3_1000c864 to i32
  %v1_1000c868 = add nuw nsw i32 %v4_1000c864, 7
  store i32 %v1_1000c868, i32* %r9.global-to-local, align 4
  %v1_1000c86c = call i32 @__asm_rlwinm(i32 %v1_1000c868, i32 0, i32 0, i32 28)
  %v0_1000c870 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000c870 = add i32 %v1_1000c86c, %v0_1000c870
  store i32 %v3_1000c870, i32* %r11.global-to-local, align 4
  %v1_1000c874 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000c874 = icmp ugt i32 %v3_1000c870, %v1_1000c874
  br i1 %v3_1000c874, label %dec_label_pc_1000c87c, label %dec_label_pc_1000c8ac

dec_label_pc_1000c87c:                            ; preds = %dec_label_pc_1000c864
  %v0_1000c87c = load i32, i32* @r22, align 4
  %v0_1000c880 = load i32, i32* @r25, align 4
  %v0_1000c884 = load i32, i32* %r26.global-to-local, align 4
  store i32 268486800, i32* @lr, align 4
  %v4_1000c88c = call i32 @function_1000ca50(i32 %v0_1000c87c, i32 %v0_1000c880, i32 %v0_1000c884, i32 0)
  %v0_1000c890 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c890 = load i32, i32* @r28, align 4
  %v4_1000c890 = icmp eq i32 %v0_1000c890, %v1_1000c890
  br i1 %v4_1000c890, label %dec_label_pc_1000c898, label %dec_label_pc_1000c910

dec_label_pc_1000c898:                            ; preds = %dec_label_pc_1000c87c
  %v0_1000c898 = call i32 @function_1000aeb8()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000c8a4 = inttoptr i32 %v0_1000c898 to i32*
  store i32 22, i32* %v2_1000c8a4, align 4
  %v0_1000c918.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000c914

dec_label_pc_1000c8ac:                            ; preds = %dec_label_pc_1000c864
  %v2_1000c86c = trunc i32 %v1_1000c86c to i16
  %v0_1000c8ac = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c8ac = inttoptr i32 %v0_1000c8ac to i32*
  %v2_1000c8ac = load i32, i32* %v1_1000c8ac, align 4
  store i32 %v2_1000c8ac, i32* %r9.global-to-local, align 4
  %v1_1000c8b0 = add i32 %v0_1000c8ac, 4
  %v2_1000c8b0 = inttoptr i32 %v1_1000c8b0 to i32*
  %v3_1000c8b0 = load i32, i32* %v2_1000c8b0, align 4
  store i32 %v3_1000c8b0, i32* %r10.global-to-local, align 4
  %v1_1000c8b4 = add i32 %v0_1000c8ac, 8
  %v2_1000c8b4 = inttoptr i32 %v1_1000c8b4 to i32*
  %v3_1000c8b4 = load i32, i32* %v2_1000c8b4, align 4
  store i32 %v3_1000c8b4, i32* @r25, align 4
  %v1_1000c8b8 = add i32 %v0_1000c8ac, 12
  %v2_1000c8b8 = inttoptr i32 %v1_1000c8b8 to i32*
  %v3_1000c8b8 = load i32, i32* %v2_1000c8b8, align 4
  store i32 %v3_1000c8b8, i32* %r26.global-to-local, align 4
  %v2_1000c8bc = inttoptr i32 %v0_1000c870 to i32*
  store i32 %v2_1000c8ac, i32* %v2_1000c8bc, align 4
  %v0_1000c8c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c8c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c8c0 = add i32 %v1_1000c8c0, 4
  %v3_1000c8c0 = inttoptr i32 %v2_1000c8c0 to i32*
  store i32 %v0_1000c8c0, i32* %v3_1000c8c0, align 4
  %v0_1000c8c4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c8c4 = add i32 %v0_1000c8c4, 8
  %v2_1000c8c4 = inttoptr i32 %v1_1000c8c4 to i32*
  %v3_1000c8c4 = load i32, i32* %v2_1000c8c4, align 4
  store i32 %v3_1000c8c4, i32* %r9.global-to-local, align 4
  %v1_1000c8c8 = add i32 %v0_1000c8c4, 12
  %v2_1000c8c8 = inttoptr i32 %v1_1000c8c8 to i32*
  %v3_1000c8c8 = load i32, i32* %v2_1000c8c8, align 4
  store i32 %v3_1000c8c8, i32* %r10.global-to-local, align 4
  %v3_1000c8cc = load i32, i32* %r29.global-to-local, align 4
  %v4_1000c8cc = add i32 %v3_1000c8cc, 16
  %v5_1000c8cc = inttoptr i32 %v4_1000c8cc to i16*
  store i16 %v2_1000c86c, i16* %v5_1000c8cc, align 2
  %v0_1000c8d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c8d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c8d0 = add i32 %v1_1000c8d0, 8
  %v3_1000c8d0 = inttoptr i32 %v2_1000c8d0 to i32*
  store i32 %v0_1000c8d0, i32* %v3_1000c8d0, align 4
  %v0_1000c8d4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c8d4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c8d4 = add i32 %v1_1000c8d4, 12
  %v3_1000c8d4 = inttoptr i32 %v2_1000c8d4 to i32*
  store i32 %v0_1000c8d4, i32* %v3_1000c8d4, align 4
  %v0_1000c8d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c8d8 = add i32 %v0_1000c8d8, 18
  %v2_1000c8d8 = inttoptr i32 %v1_1000c8d8 to i8*
  %v3_1000c8d8 = load i8, i8* %v2_1000c8d8, align 1
  %v2_1000c8dc = load i32, i32* %r29.global-to-local, align 4
  %v3_1000c8dc = add i32 %v2_1000c8dc, 18
  %v4_1000c8dc = inttoptr i32 %v3_1000c8dc to i8*
  store i8 %v3_1000c8d8, i8* %v4_1000c8dc, align 1
  %v0_1000c8e0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c8e0, i32* %r29.global-to-local, align 4
  %v0_1000c8e4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c8e4 = add i32 %v0_1000c8e4, 16
  %v2_1000c8e4 = inttoptr i32 %v1_1000c8e4 to i16*
  %v3_1000c8e4 = load i16, i16* %v2_1000c8e4, align 2
  %v4_1000c8e4 = zext i16 %v3_1000c8e4 to i32
  %v1_1000c8e8 = add nsw i32 %v4_1000c8e4, -19
  store i32 %v1_1000c8e8, i32* @r5, align 4
  store i32 268486896, i32* @lr, align 4
  %v0_1000c8ec = call i32 @function_1000aefc()
  %v0_1000c8f0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c8f0 = add i32 %v0_1000c8f0, 16
  %v2_1000c8f0 = inttoptr i32 %v1_1000c8f0 to i16*
  %v3_1000c8f0 = load i16, i16* %v2_1000c8f0, align 2
  %v4_1000c8f0 = zext i16 %v3_1000c8f0 to i32
  %v2_1000c8f4 = add i32 %v4_1000c8f0, %v0_1000c8f0
  store i32 %v2_1000c8f4, i32* %r30.global-to-local, align 4
  %v1_1000c8f8.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000c8fc.pre = load i32, i32* @r28, align 4
  %v0_1000c904.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c8f8 = add i32 %v1_1000c8f8.pre, %v1_1000c810
  %v1_1000c8fc = load i32, i32* @r23, align 4
  %v2_1000c8fc = add i32 %v1_1000c8fc, %v0_1000c8fc.pre
  store i32 %v2_1000c8fc, i32* %r10.global-to-local, align 4
  %v2_1000c900 = icmp ult i32 %v2_1000c8f4, %v2_1000c8f8
  %v1_1000c904 = add i32 %v0_1000c904.pre, 19
  store i32 %v1_1000c904, i32* @r3, align 4
  %v1_1000c908 = add i32 %v2_1000c8f4, 19
  store i32 %v1_1000c908, i32* @r4, align 4
  br i1 %v2_1000c900, label %dec_label_pc_1000c864, label %dec_label_pc_1000c910

dec_label_pc_1000c910:                            ; preds = %dec_label_pc_1000c850, %dec_label_pc_1000c8ac, %dec_label_pc_1000c87c
  %v1_1000c910 = phi i32 [ %v0_1000c890, %dec_label_pc_1000c87c ], [ %v0_1000c850, %dec_label_pc_1000c850 ], [ %v0_1000c904.pre, %dec_label_pc_1000c8ac ]
  %v0_1000c910 = phi i32 [ %v1_1000c890, %dec_label_pc_1000c87c ], [ %v0_1000c850, %dec_label_pc_1000c850 ], [ %v0_1000c8fc.pre, %dec_label_pc_1000c8ac ]
  %v2_1000c910 = sub i32 %v1_1000c910, %v0_1000c910
  store i32 %v2_1000c910, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000c914

dec_label_pc_1000c914:                            ; preds = %dec_label_pc_1000c898, %dec_label_pc_1000c848, %dec_label_pc_1000c910
  %v0_1000c918 = phi i32 [ %v0_1000c918.pre, %dec_label_pc_1000c898 ], [ -1, %dec_label_pc_1000c848 ], [ %v2_1000c910, %dec_label_pc_1000c910 ]
  %v0_1000c914 = load i32, i32* @r1, align 4
  %v1_1000c914 = inttoptr i32 %v0_1000c914 to i32*
  %v2_1000c914 = load i32, i32* %v1_1000c914, align 4
  store i32 %v2_1000c914, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000c918

; uselistorder directives
  uselistorder i32 %v2_1000c8f4, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000c8ac, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000c86c, { 1, 0 }
  uselistorder i32 %v0_1000c820, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000c810, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 7, 8, 9, 3, 4, 6, 0, 5, 10, 11, 1, 12, 2, 13 }
  uselistorder i32 22, { 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 0 }
  uselistorder i32 7, { 47, 61, 16, 17, 42, 18, 19, 43, 20, 21, 44, 2, 1, 45, 46, 3, 22, 23, 24, 25, 4, 26, 5, 6, 27, 28, 62, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 48, 7, 49, 8, 50, 51, 52, 9, 10, 53, 11, 54, 12, 55, 39, 56, 57, 13, 58, 59, 14, 60, 40, 63, 41, 64, 65, 15 }
  uselistorder i32 19, { 16, 17, 1, 2, 0, 10, 11, 12, 3, 6, 7, 13, 8, 9, 14, 15, 21, 18, 19, 20, 4, 5 }
  uselistorder i32* @r25, { 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 1, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 22 }
  uselistorder i32* @r27, { 30, 22, 23, 63, 64, 3, 4, 5, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 24, 25, 2, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 1, 43, 44, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32 23, { 9, 5, 11, 0, 1, 6, 2, 3, 7, 8, 10, 4 }
  uselistorder i32* @r22, { 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 12 }
  uselistorder i32* @r23, { 10, 0, 11, 19, 20, 21, 22, 23, 24, 25, 26, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 27 }
  uselistorder i32* @r1, { 8, 9, 3, 4, 12, 0, 10, 11, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 5, 38, 6, 39, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 1, 70, 2, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 11, 12, 13, 36, 17, 25, 18, 26, 0, 38, 37, 1, 2, 3, 27, 28, 29, 30, 19, 20, 21, 22, 23, 24, 10, 14, 15, 16, 4, 6, 7, 5, 8, 9, 31, 32, 34, 33, 35, 39 }
  uselistorder i32 27, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 30, { 4, 15, 0, 8, 9, 10, 1, 5, 2, 6, 3, 7, 11, 12, 13, 14 }
  uselistorder label %dec_label_pc_1000c914, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c910, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c864, { 1, 0 }
}

define i32 @function_1000c930() local_unnamed_addr {
dec_label_pc_1000c930:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c948 = call i32 @__asm_mfcr()
  %v1_1000c94c = and i32 %v0_1000c948, 268435456
  %v3_1000c94c = icmp eq i32 %v1_1000c94c, 0
  store i32 %v0_1000c948, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c94c, label %dec_label_pc_1000c964, label %dec_label_pc_1000c958

dec_label_pc_1000c958:                            ; preds = %dec_label_pc_1000c930
  %v0_1000c958 = call i32 @function_1000aeb8()
  %v0_1000c95c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c95c = inttoptr i32 %v0_1000c958 to i32*
  store i32 %v0_1000c95c, i32* %v2_1000c95c, align 4
  br label %dec_label_pc_1000c964

dec_label_pc_1000c964:                            ; preds = %dec_label_pc_1000c930, %dec_label_pc_1000c958
  %v0_1000c974 = phi i32 [ %v0_1000c948, %dec_label_pc_1000c930 ], [ -1, %dec_label_pc_1000c958 ]
  ret i32 %v0_1000c974

; uselistorder directives
  uselistorder label %dec_label_pc_1000c964, { 1, 0 }
}

define i32 @function_1000c978() local_unnamed_addr {
dec_label_pc_1000c978:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c990 = call i32 @__asm_mfcr()
  %v1_1000c994 = and i32 %v0_1000c990, 268435456
  %v3_1000c994 = icmp eq i32 %v1_1000c994, 0
  store i32 %v0_1000c990, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c994, label %dec_label_pc_1000c9ac, label %dec_label_pc_1000c9a0

dec_label_pc_1000c9a0:                            ; preds = %dec_label_pc_1000c978
  %v0_1000c9a0 = call i32 @function_1000aeb8()
  %v0_1000c9a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c9a4 = inttoptr i32 %v0_1000c9a0 to i32*
  store i32 %v0_1000c9a4, i32* %v2_1000c9a4, align 4
  br label %dec_label_pc_1000c9ac

dec_label_pc_1000c9ac:                            ; preds = %dec_label_pc_1000c978, %dec_label_pc_1000c9a0
  %v0_1000c9bc = phi i32 [ %v0_1000c990, %dec_label_pc_1000c978 ], [ -1, %dec_label_pc_1000c9a0 ]
  ret i32 %v0_1000c9bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000c9ac, { 1, 0 }
}

define i32 @function_1000c9c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c9c0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c9d8 = call i32 @__asm_mfcr()
  %v1_1000c9dc = and i32 %v0_1000c9d8, 268435456
  %v3_1000c9dc = icmp eq i32 %v1_1000c9dc, 0
  store i32 %v0_1000c9d8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c9dc, label %dec_label_pc_1000c9f4, label %dec_label_pc_1000c9e8

dec_label_pc_1000c9e8:                            ; preds = %dec_label_pc_1000c9c0
  %v0_1000c9e8 = call i32 @function_1000aeb8()
  %v0_1000c9ec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c9ec = inttoptr i32 %v0_1000c9e8 to i32*
  store i32 %v0_1000c9ec, i32* %v2_1000c9ec, align 4
  br label %dec_label_pc_1000c9f4

dec_label_pc_1000c9f4:                            ; preds = %dec_label_pc_1000c9c0, %dec_label_pc_1000c9e8
  %v0_1000ca04 = phi i32 [ %v0_1000c9d8, %dec_label_pc_1000c9c0 ], [ -1, %dec_label_pc_1000c9e8 ]
  ret i32 %v0_1000ca04

; uselistorder directives
  uselistorder label %dec_label_pc_1000c9f4, { 1, 0 }
}

define i32 @function_1000ca08(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ca08:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ca20 = call i32 @__asm_mfcr()
  %v1_1000ca24 = and i32 %v0_1000ca20, 268435456
  %v3_1000ca24 = icmp eq i32 %v1_1000ca24, 0
  store i32 %v0_1000ca20, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ca24, label %dec_label_pc_1000ca3c, label %dec_label_pc_1000ca30

dec_label_pc_1000ca30:                            ; preds = %dec_label_pc_1000ca08
  %v0_1000ca30 = call i32 @function_1000aeb8()
  %v0_1000ca34 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca34 = inttoptr i32 %v0_1000ca30 to i32*
  store i32 %v0_1000ca34, i32* %v2_1000ca34, align 4
  br label %dec_label_pc_1000ca3c

dec_label_pc_1000ca3c:                            ; preds = %dec_label_pc_1000ca08, %dec_label_pc_1000ca30
  %v0_1000ca4c = phi i32 [ %v0_1000ca20, %dec_label_pc_1000ca08 ], [ -1, %dec_label_pc_1000ca30 ]
  ret i32 %v0_1000ca4c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ca3c, { 1, 0 }
}

define i32 @function_1000ca50(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000ca50:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000ca50 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000ca7c = call i32 @__asm_mfcr()
  %v1_1000ca80 = and i32 %v0_1000ca7c, 268435456
  %v3_1000ca80 = icmp eq i32 %v1_1000ca80, 0
  store i32 %v0_1000ca7c, i32* %r31.global-to-local, align 4
  store i32 %v0_1000ca7c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ca80, label %dec_label_pc_1000caa4, label %dec_label_pc_1000ca94

dec_label_pc_1000ca94:                            ; preds = %dec_label_pc_1000ca50
  %v0_1000ca94 = call i32 @function_1000aeb8()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000ca9c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca9c = inttoptr i32 %v0_1000ca94 to i32*
  store i32 %v0_1000ca9c, i32* %v2_1000ca9c, align 4
  %v0_1000caa8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000caa8

dec_label_pc_1000caa4:                            ; preds = %dec_label_pc_1000ca50
  %v3_1000ca8c = icmp eq i32 %v0_1000ca7c, 0
  br i1 %v3_1000ca8c, label %dec_label_pc_1000cab4, label %dec_label_pc_1000caa8

dec_label_pc_1000caa8:                            ; preds = %dec_label_pc_1000caa4, %dec_label_pc_1000ca94
  %v0_1000caa8 = phi i32 [ %v0_1000ca7c, %dec_label_pc_1000caa4 ], [ %v0_1000caa8.pre, %dec_label_pc_1000ca94 ]
  %tmp = icmp slt i32 %v0_1000caa8, 0
  %v1_1000caac = zext i1 %tmp to i32
  %v2_1000caac = ashr i32 %v0_1000caa8, 31
  %v3_1000caac = and i32 %v2_1000caac, -2
  %v4_1000caac = or i32 %v3_1000caac, %v1_1000caac
  br label %dec_label_pc_1000cabc

dec_label_pc_1000cab4:                            ; preds = %dec_label_pc_1000caa4
  %v3_1000cab4 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000cabc

dec_label_pc_1000cabc:                            ; preds = %dec_label_pc_1000caa8, %dec_label_pc_1000cab4
  %v0_1000cacc = phi i32 [ %v4_1000caac, %dec_label_pc_1000caa8 ], [ %v3_1000cab4, %dec_label_pc_1000cab4 ]
  store i32 %v0_1000ca50, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cacc

; uselistorder directives
  uselistorder i32 %v0_1000caa8, { 1, 0 }
  uselistorder i32 %v0_1000ca7c, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 7, 6, 1, 0, 8, 9, 12, 10, 2, 11, 3, 13, 4, 5, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_1000cabc, { 1, 0 }
}

define i32 @function_1000cad0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cad0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cae8 = call i32 @__asm_mfcr()
  %v1_1000caec = and i32 %v0_1000cae8, 268435456
  %v3_1000caec = icmp eq i32 %v1_1000caec, 0
  store i32 %v0_1000cae8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000caec, label %dec_label_pc_1000cb04, label %dec_label_pc_1000caf8

dec_label_pc_1000caf8:                            ; preds = %dec_label_pc_1000cad0
  %v0_1000caf8 = call i32 @function_1000aeb8()
  %v0_1000cafc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cafc = inttoptr i32 %v0_1000caf8 to i32*
  store i32 %v0_1000cafc, i32* %v2_1000cafc, align 4
  br label %dec_label_pc_1000cb04

dec_label_pc_1000cb04:                            ; preds = %dec_label_pc_1000cad0, %dec_label_pc_1000caf8
  %v0_1000cb14 = phi i32 [ %v0_1000cae8, %dec_label_pc_1000cad0 ], [ -1, %dec_label_pc_1000caf8 ]
  ret i32 %v0_1000cb14

; uselistorder directives
  uselistorder label %dec_label_pc_1000cb04, { 1, 0 }
}

define i32 @function_1000cb18(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cb18:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000cb34 = load i32, i32* @global_var_1001e1ec.515, align 4
  %v3_1000cb38 = icmp eq i32 %v3_1000cb34, 0
  br i1 %v3_1000cb38, label %dec_label_pc_1000cb40, label %dec_label_pc_1000cb4c

dec_label_pc_1000cb40:                            ; preds = %dec_label_pc_1000cb18
  store i32 268487492, i32* @lr, align 4
  %v1_1000cb40 = call i32 @function_1000d070(i32 0)
  %v1_1000cb44 = icmp slt i32 %v1_1000cb40, 0
  br i1 %v1_1000cb44, label %dec_label_pc_1000cb6c, label %dec_label_pc_1000cb40.dec_label_pc_1000cb4c_crit_edge

dec_label_pc_1000cb40.dec_label_pc_1000cb4c_crit_edge: ; preds = %dec_label_pc_1000cb40
  %v0_1000cb4c.pre = load i32, i32* @r30, align 4
  %v3_1000cb50.pre = load i32, i32* @global_var_1001e1ec.515, align 4
  br label %dec_label_pc_1000cb4c

dec_label_pc_1000cb4c:                            ; preds = %dec_label_pc_1000cb40.dec_label_pc_1000cb4c_crit_edge, %dec_label_pc_1000cb18
  %v3_1000cb50 = phi i32 [ %v3_1000cb50.pre, %dec_label_pc_1000cb40.dec_label_pc_1000cb4c_crit_edge ], [ %v3_1000cb34, %dec_label_pc_1000cb18 ]
  %v1_1000cb58 = phi i32 [ %v0_1000cb4c.pre, %dec_label_pc_1000cb40.dec_label_pc_1000cb4c_crit_edge ], [ %arg1, %dec_label_pc_1000cb18 ]
  %v3_1000cb4c = icmp eq i32 %v1_1000cb58, 0
  store i32 %v3_1000cb50, i32* @r31, align 4
  br i1 %v3_1000cb4c, label %dec_label_pc_1000cb70, label %dec_label_pc_1000cb60

dec_label_pc_1000cb60:                            ; preds = %dec_label_pc_1000cb4c
  %v2_1000cb58 = add i32 %v1_1000cb58, %v3_1000cb50
  store i32 268487524, i32* @lr, align 4
  %v1_1000cb60 = call i32 @function_1000d070(i32 %v2_1000cb58)
  %tmp6 = icmp sgt i32 %v1_1000cb60, -1
  br i1 %tmp6, label %dec_label_pc_1000cb60.dec_label_pc_1000cb70_crit_edge, label %dec_label_pc_1000cb6c

dec_label_pc_1000cb60.dec_label_pc_1000cb70_crit_edge: ; preds = %dec_label_pc_1000cb60
  %v0_1000cb74.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cb70

dec_label_pc_1000cb6c:                            ; preds = %dec_label_pc_1000cb60, %dec_label_pc_1000cb40
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000cb70

dec_label_pc_1000cb70:                            ; preds = %dec_label_pc_1000cb60.dec_label_pc_1000cb70_crit_edge, %dec_label_pc_1000cb4c, %dec_label_pc_1000cb6c
  %v0_1000cb74 = phi i32 [ %v0_1000cb74.pre, %dec_label_pc_1000cb60.dec_label_pc_1000cb70_crit_edge ], [ %v3_1000cb50, %dec_label_pc_1000cb4c ], [ -1, %dec_label_pc_1000cb6c ]
  ret i32 %v0_1000cb74

; uselistorder directives
  uselistorder i32 %v3_1000cb50, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000d070, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb70, { 2, 0, 1 }
}

define i32 @function_1000cb88(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cb88:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cba0 = call i32 @__asm_mfcr()
  %v1_1000cba4 = and i32 %v0_1000cba0, 268435456
  %v3_1000cba4 = icmp eq i32 %v1_1000cba4, 0
  store i32 %v0_1000cba0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cba4, label %dec_label_pc_1000cbbc, label %dec_label_pc_1000cbb0

dec_label_pc_1000cbb0:                            ; preds = %dec_label_pc_1000cb88
  %v0_1000cbb0 = call i32 @function_1000aeb8()
  %v0_1000cbb4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cbb4 = inttoptr i32 %v0_1000cbb0 to i32*
  store i32 %v0_1000cbb4, i32* %v2_1000cbb4, align 4
  br label %dec_label_pc_1000cbbc

dec_label_pc_1000cbbc:                            ; preds = %dec_label_pc_1000cb88, %dec_label_pc_1000cbb0
  %v0_1000cbcc = phi i32 [ %v0_1000cba0, %dec_label_pc_1000cb88 ], [ -1, %dec_label_pc_1000cbb0 ]
  ret i32 %v0_1000cbcc

; uselistorder directives
  uselistorder label %dec_label_pc_1000cbbc, { 1, 0 }
}

define i32 @function_1000cbd0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cbd0:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268487672, i32* @lr, align 4
  %v3_1000cbf4 = call i32 @function_1000b03c(i32 %arg2, i32 0, i32 104)
  %v2_1000cbf8 = load i32, i32* %arg1, align 4
  %v1_1000cbfc = add i32 %tmp, 4
  %v2_1000cbfc = inttoptr i32 %v1_1000cbfc to i32*
  %v3_1000cbfc = load i32, i32* %v2_1000cbfc, align 4
  store i32 %v3_1000cbfc, i32* %r10.global-to-local, align 4
  %v1_1000cc00 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc00 = inttoptr i32 %v1_1000cc00 to i32*
  store i32 %v2_1000cbf8, i32* %v2_1000cc00, align 4
  %v0_1000cc04 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cc04 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc04 = add i32 %v1_1000cc04, 4
  %v3_1000cc04 = inttoptr i32 %v2_1000cc04 to i32*
  store i32 %v0_1000cc04, i32* %v3_1000cc04, align 4
  %v0_1000cc08 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc08 = add i32 %v0_1000cc08, 8
  %v2_1000cc08 = inttoptr i32 %v1_1000cc08 to i32*
  %v3_1000cc08 = load i32, i32* %v2_1000cc08, align 4
  %v1_1000cc0c = add i32 %v0_1000cc08, 12
  %v2_1000cc0c = inttoptr i32 %v1_1000cc0c to i32*
  %v3_1000cc0c = load i32, i32* %v2_1000cc0c, align 4
  store i32 %v3_1000cc0c, i32* %r10.global-to-local, align 4
  %v1_1000cc10 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc10 = add i32 %v1_1000cc10, 8
  %v3_1000cc10 = inttoptr i32 %v2_1000cc10 to i32*
  store i32 %v3_1000cc08, i32* %v3_1000cc10, align 4
  %v0_1000cc14 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cc14 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc14 = add i32 %v1_1000cc14, 12
  %v3_1000cc14 = inttoptr i32 %v2_1000cc14 to i32*
  store i32 %v0_1000cc14, i32* %v3_1000cc14, align 4
  %v0_1000cc18 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc18 = add i32 %v0_1000cc18, 16
  %v2_1000cc18 = inttoptr i32 %v1_1000cc18 to i32*
  %v3_1000cc18 = load i32, i32* %v2_1000cc18, align 4
  %v1_1000cc1c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc1c = add i32 %v1_1000cc1c, 16
  %v3_1000cc1c = inttoptr i32 %v2_1000cc1c to i32*
  store i32 %v3_1000cc18, i32* %v3_1000cc1c, align 4
  %v0_1000cc20 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc20 = add i32 %v0_1000cc20, 20
  %v2_1000cc20 = inttoptr i32 %v1_1000cc20 to i32*
  %v3_1000cc20 = load i32, i32* %v2_1000cc20, align 4
  %v1_1000cc24 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc24 = add i32 %v1_1000cc24, 20
  %v3_1000cc24 = inttoptr i32 %v2_1000cc24 to i32*
  store i32 %v3_1000cc20, i32* %v3_1000cc24, align 4
  %v0_1000cc28 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc28 = add i32 %v0_1000cc28, 24
  %v2_1000cc28 = inttoptr i32 %v1_1000cc28 to i32*
  %v3_1000cc28 = load i32, i32* %v2_1000cc28, align 4
  %v1_1000cc2c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc2c = add i32 %v1_1000cc2c, 24
  %v3_1000cc2c = inttoptr i32 %v2_1000cc2c to i32*
  store i32 %v3_1000cc28, i32* %v3_1000cc2c, align 4
  %v0_1000cc30 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc30 = add i32 %v0_1000cc30, 28
  %v2_1000cc30 = inttoptr i32 %v1_1000cc30 to i32*
  %v3_1000cc30 = load i32, i32* %v2_1000cc30, align 4
  %v1_1000cc34 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc34 = add i32 %v1_1000cc34, 28
  %v3_1000cc34 = inttoptr i32 %v2_1000cc34 to i32*
  store i32 %v3_1000cc30, i32* %v3_1000cc34, align 4
  %v0_1000cc38 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc38 = add i32 %v0_1000cc38, 32
  %v2_1000cc38 = inttoptr i32 %v1_1000cc38 to i32*
  %v3_1000cc38 = load i32, i32* %v2_1000cc38, align 4
  %v1_1000cc3c = add i32 %v0_1000cc38, 36
  %v2_1000cc3c = inttoptr i32 %v1_1000cc3c to i32*
  %v3_1000cc3c = load i32, i32* %v2_1000cc3c, align 4
  store i32 %v3_1000cc3c, i32* %r10.global-to-local, align 4
  %v1_1000cc40 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc40 = add i32 %v1_1000cc40, 32
  %v3_1000cc40 = inttoptr i32 %v2_1000cc40 to i32*
  store i32 %v3_1000cc38, i32* %v3_1000cc40, align 4
  %v0_1000cc44 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cc44 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc44 = add i32 %v1_1000cc44, 36
  %v3_1000cc44 = inttoptr i32 %v2_1000cc44 to i32*
  store i32 %v0_1000cc44, i32* %v3_1000cc44, align 4
  %v0_1000cc48 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc48 = add i32 %v0_1000cc48, 48
  %v2_1000cc48 = inttoptr i32 %v1_1000cc48 to i32*
  %v3_1000cc48 = load i32, i32* %v2_1000cc48, align 4
  %v1_1000cc4c = add i32 %v0_1000cc48, 52
  %v2_1000cc4c = inttoptr i32 %v1_1000cc4c to i32*
  %v3_1000cc4c = load i32, i32* %v2_1000cc4c, align 4
  store i32 %v3_1000cc4c, i32* %r10.global-to-local, align 4
  %v1_1000cc50 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc50 = add i32 %v1_1000cc50, 48
  %v3_1000cc50 = inttoptr i32 %v2_1000cc50 to i32*
  store i32 %v3_1000cc48, i32* %v3_1000cc50, align 4
  %v0_1000cc54 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cc54 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc54 = add i32 %v1_1000cc54, 52
  %v3_1000cc54 = inttoptr i32 %v2_1000cc54 to i32*
  store i32 %v0_1000cc54, i32* %v3_1000cc54, align 4
  %v0_1000cc58 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc58 = add i32 %v0_1000cc58, 56
  %v2_1000cc58 = inttoptr i32 %v1_1000cc58 to i32*
  %v3_1000cc58 = load i32, i32* %v2_1000cc58, align 4
  %v1_1000cc5c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc5c = add i32 %v1_1000cc5c, 56
  %v3_1000cc5c = inttoptr i32 %v2_1000cc5c to i32*
  store i32 %v3_1000cc58, i32* %v3_1000cc5c, align 4
  %v0_1000cc60 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc60 = add i32 %v0_1000cc60, 64
  %v2_1000cc60 = inttoptr i32 %v1_1000cc60 to i32*
  %v3_1000cc60 = load i32, i32* %v2_1000cc60, align 4
  %v1_1000cc64 = add i32 %v0_1000cc60, 68
  %v2_1000cc64 = inttoptr i32 %v1_1000cc64 to i32*
  %v3_1000cc64 = load i32, i32* %v2_1000cc64, align 4
  store i32 %v3_1000cc64, i32* %r10.global-to-local, align 4
  %v1_1000cc68 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc68 = add i32 %v1_1000cc68, 64
  %v3_1000cc68 = inttoptr i32 %v2_1000cc68 to i32*
  store i32 %v3_1000cc60, i32* %v3_1000cc68, align 4
  %v0_1000cc6c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cc6c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc6c = add i32 %v1_1000cc6c, 68
  %v3_1000cc6c = inttoptr i32 %v2_1000cc6c to i32*
  store i32 %v0_1000cc6c, i32* %v3_1000cc6c, align 4
  %v0_1000cc70 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc70 = add i32 %v0_1000cc70, 72
  %v2_1000cc70 = inttoptr i32 %v1_1000cc70 to i32*
  %v3_1000cc70 = load i32, i32* %v2_1000cc70, align 4
  %v1_1000cc74 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc74 = add i32 %v1_1000cc74, 72
  %v3_1000cc74 = inttoptr i32 %v2_1000cc74 to i32*
  store i32 %v3_1000cc70, i32* %v3_1000cc74, align 4
  %v0_1000cc78 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc78 = add i32 %v0_1000cc78, 80
  %v2_1000cc78 = inttoptr i32 %v1_1000cc78 to i32*
  %v3_1000cc78 = load i32, i32* %v2_1000cc78, align 4
  %v1_1000cc7c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc7c = add i32 %v1_1000cc7c, 80
  %v3_1000cc7c = inttoptr i32 %v2_1000cc7c to i32*
  store i32 %v3_1000cc78, i32* %v3_1000cc7c, align 4
  %v0_1000cc80 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cc80 = add i32 %v0_1000cc80, 88
  %v2_1000cc80 = inttoptr i32 %v1_1000cc80 to i32*
  %v3_1000cc80 = load i32, i32* %v2_1000cc80, align 4
  %v1_1000cc84 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cc84 = add i32 %v1_1000cc84, 88
  %v3_1000cc84 = inttoptr i32 %v2_1000cc84 to i32*
  store i32 %v3_1000cc80, i32* %v3_1000cc84, align 4
  ret i32 %v3_1000cbf4

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 104, { 0, 1, 4, 3, 5, 2, 6 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000cc9c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000cc9c:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000cca0 = load i32, i32* @lr, align 4
  store i32 %v0_1000cca0, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268487876, i32* @lr, align 4
  %v3_1000ccc0 = call i32 @function_1000b03c(i32 %arg2, i32 0, i32 88)
  %v0_1000ccc4 = load i32, i32* @r28, align 4
  %v1_1000ccc4 = inttoptr i32 %v0_1000ccc4 to i32*
  %v2_1000ccc4 = load i32, i32* %v1_1000ccc4, align 4
  store i32 %v2_1000ccc4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000cccc = load i32, i32* @r29, align 4
  %v2_1000cccc = add i32 %v1_1000cccc, 4
  %v3_1000cccc = inttoptr i32 %v2_1000cccc to i32*
  store i32 %v2_1000ccc4, i32* %v3_1000cccc, align 4
  %v0_1000ccd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ccd0 = load i32, i32* @r29, align 4
  %v2_1000ccd0 = inttoptr i32 %v1_1000ccd0 to i32*
  store i32 %v0_1000ccd0, i32* %v2_1000ccd0, align 4
  %v0_1000ccd4 = load i32, i32* @r28, align 4
  %v1_1000ccd4 = add i32 %v0_1000ccd4, 4
  %v2_1000ccd4 = inttoptr i32 %v1_1000ccd4 to i32*
  %v3_1000ccd4 = load i32, i32* %v2_1000ccd4, align 4
  store i32 %v3_1000ccd4, i32* %r0.global-to-local, align 4
  %v1_1000ccd8 = load i32, i32* @r29, align 4
  %v2_1000ccd8 = add i32 %v1_1000ccd8, 12
  %v3_1000ccd8 = inttoptr i32 %v2_1000ccd8 to i32*
  store i32 %v3_1000ccd4, i32* %v3_1000ccd8, align 4
  %v0_1000ccdc = load i32, i32* @r28, align 4
  %v1_1000ccdc = add i32 %v0_1000ccdc, 8
  %v2_1000ccdc = inttoptr i32 %v1_1000ccdc to i32*
  %v3_1000ccdc = load i32, i32* %v2_1000ccdc, align 4
  store i32 %v3_1000ccdc, i32* %r0.global-to-local, align 4
  %v1_1000cce0 = load i32, i32* @r29, align 4
  %v2_1000cce0 = add i32 %v1_1000cce0, 16
  %v3_1000cce0 = inttoptr i32 %v2_1000cce0 to i32*
  store i32 %v3_1000ccdc, i32* %v3_1000cce0, align 4
  %v0_1000cce4 = load i32, i32* @r28, align 4
  %v1_1000cce4 = add i32 %v0_1000cce4, 12
  %v2_1000cce4 = inttoptr i32 %v1_1000cce4 to i16*
  %v3_1000cce4 = load i16, i16* %v2_1000cce4, align 2
  %v4_1000cce4 = zext i16 %v3_1000cce4 to i32
  store i32 %v4_1000cce4, i32* %r0.global-to-local, align 4
  %v1_1000cce8 = load i32, i32* @r29, align 4
  %v2_1000cce8 = add i32 %v1_1000cce8, 20
  %v3_1000cce8 = inttoptr i32 %v2_1000cce8 to i32*
  store i32 %v4_1000cce4, i32* %v3_1000cce8, align 4
  %v0_1000ccec = load i32, i32* @r28, align 4
  %v1_1000ccec = add i32 %v0_1000ccec, 16
  %v2_1000ccec = inttoptr i32 %v1_1000ccec to i32*
  %v3_1000ccec = load i32, i32* %v2_1000ccec, align 4
  store i32 %v3_1000ccec, i32* %r0.global-to-local, align 4
  %v1_1000ccf0 = load i32, i32* @r29, align 4
  %v2_1000ccf0 = add i32 %v1_1000ccf0, 24
  %v3_1000ccf0 = inttoptr i32 %v2_1000ccf0 to i32*
  store i32 %v3_1000ccec, i32* %v3_1000ccf0, align 4
  %v0_1000ccf4 = load i32, i32* @r28, align 4
  %v1_1000ccf4 = add i32 %v0_1000ccf4, 20
  %v2_1000ccf4 = inttoptr i32 %v1_1000ccf4 to i32*
  %v3_1000ccf4 = load i32, i32* %v2_1000ccf4, align 4
  store i32 %v3_1000ccf4, i32* %r0.global-to-local, align 4
  %v1_1000ccf8 = load i32, i32* @r29, align 4
  %v2_1000ccf8 = add i32 %v1_1000ccf8, 28
  %v3_1000ccf8 = inttoptr i32 %v2_1000ccf8 to i32*
  store i32 %v3_1000ccf4, i32* %v3_1000ccf8, align 4
  %v0_1000ccfc = load i32, i32* @r28, align 4
  %v1_1000ccfc = add i32 %v0_1000ccfc, 24
  %v2_1000ccfc = inttoptr i32 %v1_1000ccfc to i32*
  %v3_1000ccfc = load i32, i32* %v2_1000ccfc, align 4
  store i32 %v3_1000ccfc, i32* %r0.global-to-local, align 4
  %v0_1000cd00 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cd00 = load i32, i32* @r29, align 4
  %v2_1000cd00 = add i32 %v1_1000cd00, 32
  %v3_1000cd00 = inttoptr i32 %v2_1000cd00 to i32*
  store i32 %v0_1000cd00, i32* %v3_1000cd00, align 4
  %v0_1000cd04 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cd04 = load i32, i32* @r29, align 4
  %v2_1000cd04 = add i32 %v1_1000cd04, 36
  %v3_1000cd04 = inttoptr i32 %v2_1000cd04 to i32*
  store i32 %v0_1000cd04, i32* %v3_1000cd04, align 4
  %v0_1000cd08 = load i32, i32* @r28, align 4
  %v1_1000cd08 = add i32 %v0_1000cd08, 28
  %v2_1000cd08 = inttoptr i32 %v1_1000cd08 to i32*
  %v3_1000cd08 = load i32, i32* %v2_1000cd08, align 4
  store i32 %v3_1000cd08, i32* %r0.global-to-local, align 4
  %v1_1000cd0c = load i32, i32* @r29, align 4
  %v2_1000cd0c = add i32 %v1_1000cd0c, 44
  %v3_1000cd0c = inttoptr i32 %v2_1000cd0c to i32*
  store i32 %v3_1000cd08, i32* %v3_1000cd0c, align 4
  %v0_1000cd10 = load i32, i32* @r28, align 4
  %v1_1000cd10 = add i32 %v0_1000cd10, 32
  %v2_1000cd10 = inttoptr i32 %v1_1000cd10 to i32*
  %v3_1000cd10 = load i32, i32* %v2_1000cd10, align 4
  store i32 %v3_1000cd10, i32* %r0.global-to-local, align 4
  %v1_1000cd14 = load i32, i32* @r29, align 4
  %v2_1000cd14 = add i32 %v1_1000cd14, 48
  %v3_1000cd14 = inttoptr i32 %v2_1000cd14 to i32*
  store i32 %v3_1000cd10, i32* %v3_1000cd14, align 4
  %v0_1000cd18 = load i32, i32* @r28, align 4
  %v1_1000cd18 = add i32 %v0_1000cd18, 36
  %v2_1000cd18 = inttoptr i32 %v1_1000cd18 to i32*
  %v3_1000cd18 = load i32, i32* %v2_1000cd18, align 4
  store i32 %v3_1000cd18, i32* %r0.global-to-local, align 4
  %v1_1000cd1c = load i32, i32* @r29, align 4
  %v2_1000cd1c = add i32 %v1_1000cd1c, 52
  %v3_1000cd1c = inttoptr i32 %v2_1000cd1c to i32*
  store i32 %v3_1000cd18, i32* %v3_1000cd1c, align 4
  %v0_1000cd20 = load i32, i32* @r28, align 4
  %v1_1000cd20 = add i32 %v0_1000cd20, 40
  %v2_1000cd20 = inttoptr i32 %v1_1000cd20 to i32*
  %v3_1000cd20 = load i32, i32* %v2_1000cd20, align 4
  store i32 %v3_1000cd20, i32* %r0.global-to-local, align 4
  %v1_1000cd24 = load i32, i32* @r29, align 4
  %v2_1000cd24 = add i32 %v1_1000cd24, 56
  %v3_1000cd24 = inttoptr i32 %v2_1000cd24 to i32*
  store i32 %v3_1000cd20, i32* %v3_1000cd24, align 4
  %v0_1000cd28 = load i32, i32* @r28, align 4
  %v1_1000cd28 = add i32 %v0_1000cd28, 48
  %v2_1000cd28 = inttoptr i32 %v1_1000cd28 to i32*
  %v3_1000cd28 = load i32, i32* %v2_1000cd28, align 4
  store i32 %v3_1000cd28, i32* %r0.global-to-local, align 4
  %v1_1000cd2c = load i32, i32* @r29, align 4
  %v2_1000cd2c = add i32 %v1_1000cd2c, 64
  %v3_1000cd2c = inttoptr i32 %v2_1000cd2c to i32*
  store i32 %v3_1000cd28, i32* %v3_1000cd2c, align 4
  %v0_1000cd30 = load i32, i32* @r28, align 4
  %v1_1000cd30 = add i32 %v0_1000cd30, 56
  %v2_1000cd30 = inttoptr i32 %v1_1000cd30 to i32*
  %v3_1000cd30 = load i32, i32* %v2_1000cd30, align 4
  %v1_1000cd34 = load i32, i32* @r29, align 4
  %v2_1000cd34 = add i32 %v1_1000cd34, 72
  %v3_1000cd34 = inttoptr i32 %v2_1000cd34 to i32*
  store i32 %v3_1000cd30, i32* %v3_1000cd34, align 4
  store i32 %v0_1000cca0, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000ccc0

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 16, 12, 13, 2, 20, 11, 18, 0, 1, 19, 14, 15, 3, 4, 17, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 56, { 3, 4, 0, 1, 2, 13, 14, 15, 16, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 40, { 11, 0, 4, 1, 23, 9, 10, 12, 3, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 6, 24, 7, 25, 5, 26, 27, 8, 28 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 6, 7, 3, 4, 8, 0, 10, 1, 2, 5, 9 }
  uselistorder i32 36, { 5, 6, 3, 4, 1, 7, 2, 8, 9, 10, 11, 12, 0, 13 }
  uselistorder i32 24, { 7, 8, 4, 5, 1, 2, 6, 70, 71, 72, 73, 74, 75, 59, 60, 61, 62, 63, 65, 66, 67, 68, 64, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 3, 76, 77, 78, 0 }
  uselistorder i32 20, { 22, 23, 17, 18, 19, 20, 24, 25, 26, 27, 1, 0, 21, 8, 79, 2, 3, 80, 4, 81, 28, 9, 29, 30, 31, 32, 33, 10, 34, 35, 36, 37, 38, 39, 40, 41, 11, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 12, 52, 53, 54, 55, 56, 57, 58, 59, 13, 60, 61, 62, 63, 64, 65, 14, 66, 67, 68, 69, 70, 71, 72, 73, 5, 15, 74, 75, 76, 6, 16, 77, 78, 82, 83, 84, 85, 86, 87, 7 }
  uselistorder i32 16, { 62, 63, 52, 53, 64, 65, 66, 67, 68, 17, 61, 54, 151, 152, 69, 70, 36, 37, 38, 55, 39, 40, 56, 57, 141, 142, 129, 41, 131, 19, 132, 138, 15, 0, 16, 1, 2, 139, 3, 130, 60, 42, 58, 59, 43, 44, 45, 46, 47, 48, 49, 50, 20, 133, 134, 135, 136, 137, 4, 21, 71, 5, 6, 72, 73, 74, 22, 75, 76, 77, 78, 79, 80, 81, 23, 82, 83, 84, 25, 85, 24, 86, 87, 27, 88, 89, 7, 90, 91, 92, 26, 93, 94, 29, 95, 96, 97, 98, 99, 28, 33, 100, 101, 102, 8, 103, 104, 9, 10, 18, 106, 105, 30, 32, 31, 107, 108, 11, 109, 34, 110, 111, 112, 12, 113, 116, 117, 114, 115, 118, 119, 13, 120, 35, 121, 122, 123, 14, 124, 127, 128, 125, 126, 140, 51, 143, 144, 145, 146, 147, 148, 149, 150 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000cd4c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000cd4c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268488040, i32* @lr, align 4
  %v0_1000cd64 = call i32 @function_1000aefc()
  %v0_1000cd6c = load i32, i32* @r28, align 4
  %v1_1000cd6c = load i32, i32* @r29, align 4
  %v2_1000cd6c = add i32 %v1_1000cd6c, %v0_1000cd6c
  ret i32 %v2_1000cd6c

; uselistorder directives
  uselistorder i32* @r28, { 11, 12, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1, 50, 51, 52, 53, 54, 55, 302, 303, 304, 305, 306, 2, 28, 29, 30, 10, 31, 216, 217, 218, 219, 220, 221, 222, 223, 224, 275, 276, 277, 288, 13, 14, 15, 16, 17, 56, 57, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 4, 243, 3, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 272, 273, 274, 265, 5, 266, 267, 268, 269, 270, 6, 23, 18, 0, 19, 20, 21, 22, 24, 25, 26, 27, 32, 33, 34, 35, 58, 59, 60, 61, 62, 63, 64, 7, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 280, 278, 279, 281, 282, 9, 283, 284, 285, 286, 287, 8, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301 }
}

define i32 @function_1000cd80(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000cd80:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000cd80 = icmp eq i8* %arg1, null
  br i1 %v3_1000cd80, label %dec_label_pc_1000ce38, label %dec_label_pc_1000cd88

dec_label_pc_1000cd88:                            ; preds = %dec_label_pc_1000cd80
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000cd9c.pre = load i32, i32* bitcast (i32** @global_var_1001e17c.497 to i32*), align 4
  br label %dec_label_pc_1000cd98

dec_label_pc_1000cd98:                            ; preds = %dec_label_pc_1000cd88, %dec_label_pc_1000ce10
  %v0_1000ce10 = phi i32 [ 0, %dec_label_pc_1000cd88 ], [ %v2_1000ce18, %dec_label_pc_1000ce10 ]
  %v0_1000ce14 = phi i32 [ 1, %dec_label_pc_1000cd88 ], [ %v1_1000ce14, %dec_label_pc_1000ce10 ]
  %v0_1000cd98 = phi i32 [ %tmp, %dec_label_pc_1000cd88 ], [ %v0_1000cd983, %dec_label_pc_1000ce10 ]
  %v1_1000cd98 = inttoptr i32 %v0_1000cd98 to i8*
  %v2_1000cd98 = load i8, i8* %v1_1000cd98, align 1
  %v3_1000cd98 = zext i8 %v2_1000cd98 to i32
  %v1_1000cda0 = mul nuw nsw i32 %v3_1000cd98, 2
  %v2_1000cda4 = add i32 %v1_1000cda0, %v3_1000cd9c.pre
  %v3_1000cda4 = inttoptr i32 %v2_1000cda4 to i16*
  %v4_1000cda4 = load i16, i16* %v3_1000cda4, align 2
  %v1_1000cda8 = and i16 %v4_1000cda4, 8
  %v3_1000cda8 = icmp eq i16 %v1_1000cda8, 0
  br i1 %v3_1000cda8, label %dec_label_pc_1000ce38, label %dec_label_pc_1000cdb0

dec_label_pc_1000cdb0:                            ; preds = %dec_label_pc_1000cd98
  br label %dec_label_pc_1000cdc8

dec_label_pc_1000cdb8:                            ; preds = %dec_label_pc_1000cdc8
  %v1_1000cdcc = mul i32 %v1_1000ce18, 10
  %v2_1000cdd4 = add i32 %v3_1000cdc8, %v1_1000cdcc
  %v1_1000cdb8 = add i32 %v2_1000cdd4, -48
  %v1_1000cdbc = add i32 %v0_1000ce00, 1
  %v2_1000cdc0 = icmp sgt i32 %v1_1000cdb8, 255
  br i1 %v2_1000cdc0, label %dec_label_pc_1000ce38, label %dec_label_pc_1000cdc8

dec_label_pc_1000cdc8:                            ; preds = %dec_label_pc_1000cdb8, %dec_label_pc_1000cdb0
  %v1_1000ce18 = phi i32 [ %v1_1000cdb8, %dec_label_pc_1000cdb8 ], [ 0, %dec_label_pc_1000cdb0 ]
  %v0_1000ce00 = phi i32 [ %v1_1000cdbc, %dec_label_pc_1000cdb8 ], [ %v0_1000cd98, %dec_label_pc_1000cdb0 ]
  %v1_1000cdc8 = inttoptr i32 %v0_1000ce00 to i8*
  %v2_1000cdc8 = load i8, i8* %v1_1000cdc8, align 1
  %v3_1000cdc8 = zext i8 %v2_1000cdc8 to i32
  %v1_1000cdd0 = mul nuw nsw i32 %v3_1000cdc8, 2
  %v2_1000cdd8 = add i32 %v1_1000cdd0, %v3_1000cd9c.pre
  %v3_1000cdd8 = inttoptr i32 %v2_1000cdd8 to i16*
  %v4_1000cdd8 = load i16, i16* %v3_1000cdd8, align 2
  %v5_1000cdd8 = zext i16 %v4_1000cdd8 to i32
  %v1_1000cddc = and i32 %v5_1000cdd8, 8
  %v3_1000cddc = icmp eq i32 %v1_1000cddc, 0
  br i1 %v3_1000cddc, label %dec_label_pc_1000cde4, label %dec_label_pc_1000cdb8

dec_label_pc_1000cde4:                            ; preds = %dec_label_pc_1000cdc8
  %v2_1000cde4 = icmp sgt i32 %v0_1000ce14, 3
  br i1 %v2_1000cde4, label %dec_label_pc_1000cdfc, label %dec_label_pc_1000cdec

dec_label_pc_1000cdec:                            ; preds = %dec_label_pc_1000cde4
  %v3_1000cdec = icmp eq i8 %v2_1000cdc8, 46
  br i1 %v3_1000cdec, label %dec_label_pc_1000cdf4, label %dec_label_pc_1000ce38

dec_label_pc_1000cdf4:                            ; preds = %dec_label_pc_1000cdec
  %v1_1000cdf4 = add i32 %v0_1000ce00, 1
  br label %dec_label_pc_1000ce10

dec_label_pc_1000cdfc:                            ; preds = %dec_label_pc_1000cde4
  %v3_1000cdfc = icmp eq i8 %v2_1000cdc8, 0
  %v1_1000ce00 = add i32 %v0_1000ce00, 1
  br i1 %v3_1000cdfc, label %dec_label_pc_1000ce10, label %dec_label_pc_1000ce08

dec_label_pc_1000ce08:                            ; preds = %dec_label_pc_1000cdfc
  %v1_1000ce08 = and i32 %v5_1000cdd8, 32
  %v3_1000ce08 = icmp eq i32 %v1_1000ce08, 0
  br i1 %v3_1000ce08, label %dec_label_pc_1000ce38, label %dec_label_pc_1000ce10

dec_label_pc_1000ce10:                            ; preds = %dec_label_pc_1000ce08, %dec_label_pc_1000cdfc, %dec_label_pc_1000cdf4
  %v0_1000cd983 = phi i32 [ %v1_1000ce00, %dec_label_pc_1000ce08 ], [ %v1_1000ce00, %dec_label_pc_1000cdfc ], [ %v1_1000cdf4, %dec_label_pc_1000cdf4 ]
  %v1_1000ce10 = mul i32 %v0_1000ce10, 256
  %v1_1000ce14 = add nuw nsw i32 %v0_1000ce14, 1
  %v2_1000ce18 = or i32 %v1_1000ce18, %v1_1000ce10
  store i32 %v2_1000ce18, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000ce14, 5
  br i1 %tmp10, label %dec_label_pc_1000cd98, label %dec_label_pc_1000ce24

dec_label_pc_1000ce24:                            ; preds = %dec_label_pc_1000ce10
  %v0_1000ce24 = load i32, i32* @r4, align 4
  %v3_1000ce24 = icmp eq i32 %v0_1000ce24, 0
  %v0_1000ce2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ce24, i32 %v0_1000ce2c)
  %v0_1000ce30 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ce30 = load i32, i32* @r4, align 4
  %v2_1000ce30 = inttoptr i32 %v1_1000ce30 to i32*
  store i32 %v0_1000ce30, i32* %v2_1000ce30, align 4
  ret i32 1

dec_label_pc_1000ce38:                            ; preds = %dec_label_pc_1000cdec, %dec_label_pc_1000ce08, %dec_label_pc_1000cd98, %dec_label_pc_1000cdb8, %dec_label_pc_1000cd80
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000ce18, { 1, 0 }
  uselistorder i32 %v1_1000ce14, { 1, 0 }
  uselistorder i32 %v0_1000ce00, { 0, 1, 3, 2 }
  uselistorder i32 5, { 28, 3, 29, 30, 47, 65, 1, 31, 32, 33, 4, 5, 34, 35, 6, 7, 8, 9, 10, 36, 11, 12, 13, 66, 0, 48, 49, 2, 50, 37, 38, 39, 40, 41, 51, 14, 16, 52, 15, 53, 19, 54, 18, 55, 17, 42, 56, 20, 22, 57, 43, 58, 21, 44, 59, 23, 45, 60, 25, 61, 24, 46, 62, 27, 63, 26, 64, 67, 68, 69, 70, 71 }
  uselistorder i8 0, { 4, 12, 13, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 26, 27, 28, 30, 32, 29, 1, 31, 2, 33, 34, 5, 9, 35, 36, 37, 38, 39, 40, 41, 42, 43, 3, 44, 45, 46, 47, 6, 48, 49, 50, 51, 53, 54, 55, 56, 52, 59, 67, 68, 60, 61, 62, 63, 57, 58, 11, 64, 65, 66, 10, 7, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 104, 53, 41, 42, 54, 55, 56, 57, 58, 59, 175, 178, 11, 173, 174, 12, 122, 121, 119, 120, 105, 106, 107, 123, 124, 125, 113, 114, 115, 3, 43, 44, 45, 4, 179, 5, 6, 176, 177, 60, 61, 62, 63, 126, 127, 31, 32, 46, 33, 34, 47, 35, 36, 48, 49, 7, 8, 9, 108, 109, 110, 16, 112, 111, 50, 51, 52, 17, 64, 65, 66, 67, 68, 18, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 37, 81, 82, 83, 84, 85, 86, 87, 88, 89, 13, 90, 91, 92, 93, 14, 19, 94, 20, 95, 21, 96, 22, 97, 23, 98, 24, 99, 25, 100, 26, 101, 27, 102, 28, 103, 0, 1, 10, 116, 117, 38, 118, 2, 128, 129, 130, 131, 39, 132, 133, 134, 135, 136, 137, 40, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 144, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 29, 168, 15, 169, 170, 171, 172, 30 }
  uselistorder i32 -48, { 1, 0, 2 }
  uselistorder i32 10, { 72, 40, 13, 39, 2, 3, 6, 5, 0, 14, 15, 16, 32, 17, 18, 33, 19, 20, 34, 35, 73, 74, 75, 76, 77, 21, 78, 79, 80, 22, 23, 24, 7, 8, 81, 38, 36, 4, 37, 1, 25, 26, 27, 28, 9, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 10, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 29, 82, 83, 84, 85, 30, 86, 31, 11, 87, 12, 88 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 8, 3, 9, 10, 11 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce38, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000cd98, { 1, 0 }
}

define i32 @function_1000ce40(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ce40:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000ce44 = load i32, i32* @lr, align 4
  store i32 %v0_1000ce44, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000ce50 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000ce60 = add i32 %tmp, 4
  store i32 %v1_1000ce60, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000ce68 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000ce68, i32* @r3, align 4
  br i1 %v3_1000ce50, label %dec_label_pc_1000ce90, label %dec_label_pc_1000ce70

dec_label_pc_1000ce70:                            ; preds = %dec_label_pc_1000ce40
  %v2_1000ce70 = load i32, i32* %arg2, align 4
  store i32 %v2_1000ce70, i32* %r0.global-to-local, align 4
  store i32 268488316, i32* @lr, align 4
  %v0_1000ce78 = call i32 @function_1000aefc()
  %v0_1000ce7c = load i32, i32* @r31, align 4
  %v1_1000ce7c = add i32 %v0_1000ce7c, 132
  %v2_1000ce7c = inttoptr i32 %v1_1000ce7c to i32*
  %v3_1000ce7c = load i32, i32* %v2_1000ce7c, align 4
  store i32 %v3_1000ce7c, i32* %r0.global-to-local, align 4
  %v1_1000ce88 = add i32 %v0_1000ce7c, 136
  %v2_1000ce88 = inttoptr i32 %v1_1000ce88 to i32*
  %v3_1000ce88 = load i32, i32* %v2_1000ce88, align 4
  store i32 %v3_1000ce88, i32* %r0.global-to-local, align 4
  %v0_1000ce90.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000ce90

dec_label_pc_1000ce90:                            ; preds = %dec_label_pc_1000ce40, %dec_label_pc_1000ce70
  %v0_1000ce90 = phi i32 [ %arg3, %dec_label_pc_1000ce40 ], [ %v0_1000ce90.pre, %dec_label_pc_1000ce70 ]
  %v3_1000ce90 = icmp eq i32 %v0_1000ce90, 0
  %v2_1000cea8 = ptrtoint i32* %stack_var_-172 to i32
  %.v2_1000cea8 = select i1 %v3_1000ce90, i32 0, i32 %v2_1000cea8
  store i32 %.v2_1000cea8, i32* @r5, align 4
  store i32 268488368, i32* @lr, align 4
  %v0_1000ceac = call i32 @function_1000d0a4()
  %v0_1000ceb0 = load i32, i32* @r30, align 4
  %v3_1000ceb0 = icmp eq i32 %v0_1000ceb0, 0
  store i32 %v0_1000ceac, i32* @r31, align 4
  br i1 %v3_1000ceb0, label %dec_label_pc_1000ceec, label %dec_label_pc_1000cec0

dec_label_pc_1000cec0:                            ; preds = %dec_label_pc_1000ce90
  %v1_1000ceb8 = icmp slt i32 %v0_1000ceac, 0
  %v1_1000cec0 = add i32 %v0_1000ceb0, 4
  store i32 %v1_1000cec0, i32* @r3, align 4
  %v2_1000cec4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000cec4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000ceb8, label %dec_label_pc_1000ceec, label %dec_label_pc_1000ced0

dec_label_pc_1000ced0:                            ; preds = %dec_label_pc_1000cec0
  %v3_1000ced0 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000ced0, i32* %r0.global-to-local, align 4
  %v2_1000ced4 = inttoptr i32 %v0_1000ceb0 to i32*
  store i32 %v3_1000ced0, i32* %v2_1000ced4, align 4
  store i32 268488412, i32* @lr, align 4
  %v0_1000ced8 = call i32 @function_1000aefc()
  %v1_1000cee4 = load i32, i32* @r30, align 4
  %v2_1000cee4 = add i32 %v1_1000cee4, 136
  %v3_1000cee4 = inttoptr i32 %v2_1000cee4 to i32*
  %v0_1000cee8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cee8 = load i32, i32* @r30, align 4
  %v2_1000cee8 = add i32 %v1_1000cee8, 132
  %v3_1000cee8 = inttoptr i32 %v2_1000cee8 to i32*
  store i32 %v0_1000cee8, i32* %v3_1000cee8, align 4
  %v0_1000cef0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ceec

dec_label_pc_1000ceec:                            ; preds = %dec_label_pc_1000cec0, %dec_label_pc_1000ce90, %dec_label_pc_1000ced0
  %v0_1000cef0 = phi i32 [ %v0_1000ceac, %dec_label_pc_1000cec0 ], [ %v0_1000ceac, %dec_label_pc_1000ce90 ], [ %v0_1000cef0.pre, %dec_label_pc_1000ced0 ]
  store i32 %v0_1000ce44, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cef0

; uselistorder directives
  uselistorder i32 %v0_1000ceac, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000aefc, { 2, 1, 5, 7, 0, 3, 4, 8, 6 }
  uselistorder i32* @r5, { 24, 0, 25, 2, 12, 13, 14, 33, 19, 8, 9, 34, 35, 36, 37, 6, 28, 29, 1, 30, 31, 32, 15, 7, 26, 27, 3, 5, 4, 16, 20, 21, 22, 23, 18, 10, 11, 17 }
  uselistorder i32 128, { 13, 14, 2, 7, 8, 9, 11, 10, 12, 3, 0, 1, 4, 5, 6 }
  uselistorder i32* @r30, { 208, 209, 210, 0, 211, 1, 129, 2, 32, 33, 34, 212, 215, 213, 214, 130, 131, 132, 103, 104, 105, 106, 107, 133, 134, 138, 135, 136, 137, 7, 8, 9, 10, 11, 12, 13, 3, 14, 108, 109, 110, 117, 118, 119, 111, 112, 113, 4, 114, 115, 116, 16, 17, 18, 19, 20, 21, 22, 23, 24, 15, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 5, 42, 43, 6, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 120, 122, 123, 121, 124, 125, 126, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 203, 206, 207 }
  uselistorder i32* null, { 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44, 31, 32, 45, 33, 34, 35, 36, 2, 37, 38, 39, 40, 3, 41, 42, 4, 43, 5, 26, 27, 28, 29, 30 }
  uselistorder i32* @r31, { 2, 301, 302, 303, 239, 3, 240, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 310, 311, 304, 15, 305, 306, 307, 308, 309, 41, 42, 241, 242, 243, 244, 245, 246, 204, 205, 206, 207, 208, 209, 210, 211, 229, 230, 247, 251, 248, 249, 250, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 63, 4, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 212, 213, 214, 215, 78, 79, 80, 81, 82, 225, 226, 227, 216, 217, 218, 219, 220, 221, 222, 223, 224, 33, 34, 0, 35, 5, 36, 26, 28, 29, 27, 30, 31, 32, 37, 38, 39, 40, 6, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 83, 84, 85, 86, 87, 88, 89, 90, 91, 1, 7, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 228, 8, 231, 232, 233, 234, 235, 236, 237, 238, 13, 252, 253, 254, 255, 9, 259, 260, 261, 262, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 14, 271, 272, 11, 273, 274, 275, 276, 277, 279, 10, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 12, 294, 295, 296, 297, 298, 299, 300 }
  uselistorder label %dec_label_pc_1000ceec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ce90, { 1, 0 }
}

define i32 @function_1000cf04(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cf38.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000cf1c = call i32 @function_1000c2f8()
  %v2_1000cf24 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000cf24, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000cf3c33 = add i32 %v2_1000cf24, 124
  %v4_1000cf3c34 = inttoptr i32 %v3_1000cf3c33 to i32*
  store i32 0, i32* %v4_1000cf3c34, align 4
  %v0_1000cf4035 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cf4036 = add i32 %v0_1000cf4035, -1
  store i32 %v1_1000cf4036, i32* %r9.global-to-local, align 4
  %v0_1000cf4437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cf4438 = add i32 %v0_1000cf4437, -1
  store i32 %v1_1000cf4438, i32* %ctr.global-to-local, align 4
  %v2_1000cf4439 = icmp eq i32 %v1_1000cf4438, 0
  br i1 %v2_1000cf4439, label %dec_label_pc_1000cf48, label %dec_label_pc_1000cf38.dec_label_pc_1000cf38_crit_edge

dec_label_pc_1000cf38.dec_label_pc_1000cf38_crit_edge: ; preds = %dec_label_pc_1000cf38.lr.ph, %dec_label_pc_1000cf38.dec_label_pc_1000cf38_crit_edge
  %v1_1000cf4040 = phi i32 [ %v1_1000cf40, %dec_label_pc_1000cf38.dec_label_pc_1000cf38_crit_edge ], [ %v1_1000cf4036, %dec_label_pc_1000cf38.lr.ph ]
  %v0_1000cf3c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cf3c.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000cf38 = mul i32 %v1_1000cf4040, 4
  %v3_1000cf3c = add i32 %v1_1000cf38, %v1_1000cf3c.pre
  %v4_1000cf3c = inttoptr i32 %v3_1000cf3c to i32*
  store i32 %v0_1000cf3c.pre, i32* %v4_1000cf3c, align 4
  %v0_1000cf40 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cf40 = add i32 %v0_1000cf40, -1
  store i32 %v1_1000cf40, i32* %r9.global-to-local, align 4
  %v0_1000cf44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cf44 = add i32 %v0_1000cf44, -1
  store i32 %v1_1000cf44, i32* %ctr.global-to-local, align 4
  %v2_1000cf44 = icmp eq i32 %v1_1000cf44, 0
  br i1 %v2_1000cf44, label %dec_label_pc_1000cf48, label %dec_label_pc_1000cf38.dec_label_pc_1000cf38_crit_edge

dec_label_pc_1000cf48:                            ; preds = %dec_label_pc_1000cf38.dec_label_pc_1000cf38_crit_edge, %dec_label_pc_1000cf38.lr.ph
  store i32 %v2_1000cf24, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000cf50 = call i32 @function_1000b74c()
  %v3_1000cf54 = icmp eq i32 %v0_1000cf50, 0
  br i1 %v3_1000cf54, label %dec_label_pc_1000cf5c, label %dec_label_pc_1000cf6c

dec_label_pc_1000cf5c:                            ; preds = %dec_label_pc_1000cf48
  store i32 268488556, i32* @lr, align 4
  %v3_1000cf68 = call i32 @function_1000aaf4(i32 1, i32 %v2_1000cf24, i32 0)
  br label %dec_label_pc_1000cf6c

dec_label_pc_1000cf6c:                            ; preds = %dec_label_pc_1000cf48, %dec_label_pc_1000cf5c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000cf70 = load i32, i32* @global_var_1001e1e0.518, align 4
  %v3_1000cf74 = icmp eq i32 %v3_1000cf70, 0
  br i1 %v3_1000cf74, label %dec_label_pc_1000cf7c, label %dec_label_pc_1000cfa4

dec_label_pc_1000cf7c:                            ; preds = %dec_label_pc_1000cf6c
  store i32 1, i32* @global_var_1001e1e0.518, align 4
  br label %dec_label_pc_1000cf84

dec_label_pc_1000cf84:                            ; preds = %dec_label_pc_1000d000, %dec_label_pc_1000cf7c
  store i32 ptrtoint (i32* @global_var_1001e148.516 to i32), i32* %r29.global-to-local, align 4
  %v0_1000cf90 = call i32 @function_1000c2f8()
  store i32 268488604, i32* @lr, align 4
  %v1_1000cf98 = call i32 @function_1000b59c(i32 6)
  %v0_1000cfa0 = call i32 @function_1000c2f8()
  %v3_1000cfa8.pre = load i32, i32* @global_var_1001e1e0.518, align 4
  br label %dec_label_pc_1000cfa4

dec_label_pc_1000cfa4:                            ; preds = %dec_label_pc_1000cf6c, %dec_label_pc_1000cf84
  %v0_1000d01c = phi i32 [ %v3_1000cf70, %dec_label_pc_1000cf6c ], [ %v3_1000cfa8.pre, %dec_label_pc_1000cf84 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000cfac = icmp eq i32 %v0_1000d01c, 1
  br i1 %v3_1000cfac, label %dec_label_pc_1000cfec.lr.ph, label %dec_label_pc_1000d01c

dec_label_pc_1000cfec.lr.ph:                      ; preds = %dec_label_pc_1000cfa4
  %v2_1000cfb8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001e1e0.518, align 4
  store i32 ptrtoint (i32* @global_var_1000cfcc.520 to i32), i32* @lr, align 4
  %v3_1000cfc8 = call i32 @function_1000b03c(i32 %v2_1000cfb8, i32 0, i32 140)
  store i32 %v2_1000cf24, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000cf3c33, i32* %r9.global-to-local, align 4
  %v2_1000cff425 = add i32 %v2_1000cf24, 256
  %v3_1000cff426 = inttoptr i32 %v2_1000cff425 to i32*
  store i32 -1, i32* %v3_1000cff426, align 4
  %v0_1000cff827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cff828 = add i32 %v0_1000cff827, -1
  store i32 %v1_1000cff828, i32* %r11.global-to-local, align 4
  %v0_1000cffc29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cffc30 = add i32 %v0_1000cffc29, -1
  store i32 %v1_1000cffc30, i32* %ctr.global-to-local, align 4
  %v2_1000cffc31 = icmp eq i32 %v1_1000cffc30, 0
  br i1 %v2_1000cffc31, label %dec_label_pc_1000d000, label %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge

dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge: ; preds = %dec_label_pc_1000cfec.lr.ph, %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge
  %v1_1000cff832 = phi i32 [ %v1_1000cff8, %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge ], [ %v1_1000cff828, %dec_label_pc_1000cfec.lr.ph ]
  %v1_1000cff0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000cff4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cfec = mul i32 %v1_1000cff832, 4
  %v2_1000cff0 = add i32 %v1_1000cfec, %v1_1000cff0.pre
  store i32 %v2_1000cff0, i32* %r9.global-to-local, align 4
  %v2_1000cff4 = add i32 %v2_1000cff0, 132
  %v3_1000cff4 = inttoptr i32 %v2_1000cff4 to i32*
  store i32 %v0_1000cff4.pre, i32* %v3_1000cff4, align 4
  %v0_1000cff8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cff8 = add i32 %v0_1000cff8, -1
  store i32 %v1_1000cff8, i32* %r11.global-to-local, align 4
  %v0_1000cffc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cffc = add i32 %v0_1000cffc, -1
  store i32 %v1_1000cffc, i32* %ctr.global-to-local, align 4
  %v2_1000cffc = icmp eq i32 %v1_1000cffc, 0
  br i1 %v2_1000cffc, label %dec_label_pc_1000d000, label %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge

dec_label_pc_1000d000:                            ; preds = %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge, %dec_label_pc_1000cfec.lr.ph
  store i32 268488728, i32* @lr, align 4
  %v4_1000d014 = call i32 @function_1000ce40(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000cf84

dec_label_pc_1000d01c:                            ; preds = %dec_label_pc_1000cfa4
  %v3_1000d01c = icmp eq i32 %v0_1000d01c, 2
  br i1 %v3_1000d01c, label %dec_label_pc_1000d024, label %dec_label_pc_1000d030

dec_label_pc_1000d024:                            ; preds = %dec_label_pc_1000d01c
  store i32 3, i32* @global_var_1001e1e0.518, align 4
  br label %dec_label_pc_1000d030

dec_label_pc_1000d030:                            ; preds = %dec_label_pc_1000d01c, %dec_label_pc_1000d024
  %v3_1000d030 = phi i32 [ %v0_1000d01c, %dec_label_pc_1000d01c ], [ 3, %dec_label_pc_1000d024 ]
  %v1_1000d038 = icmp ne i32 %v3_1000d030, 3
  call void @__pseudo_cond_branch(i1 %v1_1000d038, i32 268488780)
  store i32 4, i32* @global_var_1001e1e0.518, align 4
  %v1_1000d048 = call i32 @function_1000c698(i32 127)
  ret i32 %v1_1000d048

; uselistorder directives
  uselistorder i32 %v1_1000cffc, { 1, 0 }
  uselistorder i32 %v1_1000cff8, { 1, 0 }
  uselistorder i32 %v1_1000cf44, { 1, 0 }
  uselistorder i32 %v1_1000cf40, { 1, 0 }
  uselistorder i32 %v2_1000cf24, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @function_1000c698, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 3, { 0, 6, 32, 91, 92, 104, 105, 57, 116, 115, 8, 121, 122, 123, 106, 107, 117, 118, 119, 120, 1, 7, 33, 34, 58, 93, 94, 95, 2, 96, 98, 99, 9, 35, 36, 37, 38, 39, 40, 41, 42, 10, 11, 100, 101, 12, 43, 102, 13, 103, 97, 65, 44, 3, 87, 68, 69, 70, 45, 59, 60, 62, 63, 61, 64, 46, 47, 14, 66, 4, 67, 71, 16, 48, 5, 15, 72, 18, 73, 49, 17, 74, 75, 76, 19, 50, 20, 77, 78, 79, 21, 51, 22, 80, 81, 24, 52, 23, 82, 83, 53, 84, 25, 26, 27, 85, 86, 28, 54, 29, 88, 89, 30, 55, 31, 90, 108, 109, 110, 112, 111, 113, 56, 114 }
  uselistorder i32 (i32, i32*, i32)* @function_1000ce40, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 66, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 68, 13, 75, 14, 15, 16, 17, 76, 70, 77, 71, 78, 18, 19, 20, 0, 73, 21, 22, 23, 24, 25, 26, 27, 28, 74, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 69, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 79, 80, 81, 65, 72 }
  uselistorder i32 (i32, i32, i32)* @function_1000b03c, { 1, 9, 10, 0, 3, 5, 4, 8, 7, 6, 2 }
  uselistorder i32 2, { 220, 40, 0, 1, 65, 66, 221, 67, 222, 68, 223, 28, 2, 3, 4, 41, 123, 136, 224, 124, 29, 69, 42, 70, 31, 30, 32, 71, 72, 125, 73, 74, 126, 127, 75, 208, 46, 5, 6, 209, 210, 38, 211, 76, 77, 78, 79, 80, 43, 44, 45, 214, 81, 135, 8, 7, 83, 82, 84, 33, 198, 138, 88, 128, 87, 129, 86, 130, 85, 47, 131, 9, 10, 11, 89, 90, 91, 92, 132, 133, 134, 93, 94, 96, 95, 97, 49, 48, 98, 99, 34, 39, 137, 212, 12, 35, 213, 13, 139, 140, 141, 142, 143, 144, 145, 100, 146, 147, 50, 148, 149, 150, 151, 152, 102, 153, 101, 154, 155, 156, 157, 158, 159, 160, 161, 103, 162, 51, 104, 105, 163, 164, 106, 107, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 14, 15, 16, 17, 18, 19, 108, 175, 52, 176, 177, 178, 179, 180, 20, 21, 22, 23, 24, 25, 109, 181, 53, 182, 183, 184, 185, 186, 187, 110, 188, 111, 189, 54, 190, 191, 192, 194, 195, 196, 193, 112, 197, 55, 199, 200, 201, 113, 114, 203, 204, 205, 202, 115, 206, 56, 207, 36, 215, 117, 57, 216, 58, 59, 118, 60, 37, 61, 119, 62, 120, 63, 121, 64, 122, 217, 26, 27, 218, 116, 219 }
  uselistorder i32* @global_var_1001e1e0.518, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 41, 42, 0, 43, 2, 1, 3, 40, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4, 19, 5, 20, 21, 22, 39 }
  uselistorder i32 (i32, i32, i32)* @function_1000aaf4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000b74c, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 77, 78, 79, 58, 59, 28, 1, 29, 7, 30, 87, 85, 5, 4, 80, 82, 83, 61, 81, 9, 6, 60, 10, 11, 12, 8, 86, 31, 32, 84, 13, 14, 15, 68, 65, 66, 67, 62, 63, 64, 20, 21, 22, 3, 52, 53, 54, 55, 34, 16, 17, 18, 19, 23, 24, 25, 26, 27, 33, 0, 2, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32 6, { 13, 14, 70, 1, 15, 16, 38, 2, 67, 3, 0, 39, 17, 18, 19, 20, 21, 22, 23, 24, 25, 4, 26, 27, 28, 29, 30, 31, 40, 32, 41, 42, 43, 5, 44, 45, 46, 6, 47, 48, 49, 50, 7, 8, 51, 52, 53, 33, 9, 54, 55, 34, 10, 56, 35, 57, 58, 59, 60, 36, 11, 61, 62, 63, 64, 65, 37, 12, 66, 68, 69 }
  uselistorder i32 4, { 142, 0, 1, 388, 389, 190, 191, 166, 167, 192, 193, 194, 397, 404, 2, 3, 4, 5, 6, 350, 352, 351, 348, 349, 309, 310, 311, 312, 353, 354, 355, 356, 337, 338, 339, 357, 358, 7, 168, 8, 77, 169, 170, 398, 399, 400, 143, 401, 402, 403, 9, 359, 144, 10, 390, 391, 392, 66, 67, 393, 394, 145, 395, 396, 11, 195, 196, 197, 198, 199, 146, 147, 171, 148, 313, 314, 315, 83, 76, 316, 317, 318, 78, 12, 320, 321, 322, 323, 319, 324, 325, 68, 149, 150, 79, 80, 81, 332, 333, 82, 334, 335, 336, 331, 326, 327, 328, 329, 330, 182, 13, 183, 14, 184, 185, 186, 69, 151, 187, 274, 200, 172, 152, 173, 85, 84, 86, 174, 175, 176, 177, 70, 178, 71, 179, 180, 181, 15, 153, 154, 155, 16, 188, 189, 87, 74, 201, 202, 203, 17, 204, 205, 206, 207, 93, 208, 209, 18, 19, 92, 91, 210, 211, 20, 88, 90, 89, 212, 213, 21, 214, 215, 99, 216, 22, 23, 217, 98, 97, 218, 94, 219, 96, 95, 220, 221, 222, 106, 24, 25, 223, 224, 26, 225, 226, 227, 105, 27, 28, 101, 100, 228, 102, 104, 103, 229, 230, 231, 232, 233, 234, 156, 108, 107, 235, 236, 29, 237, 238, 239, 109, 240, 241, 30, 31, 111, 110, 242, 112, 114, 113, 243, 244, 32, 245, 246, 120, 247, 248, 33, 34, 119, 118, 249, 115, 117, 116, 250, 251, 252, 253, 35, 254, 255, 256, 257, 157, 258, 36, 259, 260, 37, 261, 123, 122, 262, 121, 158, 263, 264, 265, 266, 38, 268, 269, 159, 270, 271, 272, 129, 273, 39, 40, 160, 267, 128, 127, 124, 126, 125, 275, 276, 277, 278, 279, 161, 162, 41, 281, 282, 163, 283, 284, 285, 135, 286, 42, 43, 164, 280, 134, 133, 130, 132, 131, 44, 287, 288, 45, 46, 289, 290, 47, 48, 291, 292, 49, 50, 293, 294, 51, 52, 295, 296, 53, 297, 54, 298, 299, 55, 56, 300, 301, 57, 58, 302, 303, 59, 60, 304, 305, 61, 62, 306, 307, 63, 360, 308, 340, 341, 342, 343, 344, 345, 75, 346, 64, 347, 361, 362, 363, 364, 365, 366, 136, 367, 368, 369, 370, 371, 372, 137, 373, 374, 375, 138, 139, 376, 377, 140, 378, 379, 141, 380, 381, 382, 72, 383, 73, 65, 384, 385, 386, 387, 165 }
  uselistorder i32 32, { 24, 25, 57, 48, 49, 39, 40, 20, 21, 46, 47, 41, 0, 1, 2, 22, 60, 23, 61, 26, 27, 42, 3, 28, 4, 5, 6, 29, 58, 30, 59, 44, 7, 8, 9, 31, 45, 10, 11, 12, 13, 14, 32, 33, 43, 50, 51, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 15, 16, 34, 67, 35, 68, 36, 69, 17, 18, 19, 70, 71, 37, 38 }
  uselistorder i32 31, { 1, 2, 13, 36, 37, 3, 4, 0, 5, 40, 41, 30, 31, 38, 39, 14, 15, 32, 33, 34, 35, 22, 23, 26, 27, 28, 29, 11, 12, 16, 17, 18, 10, 24, 25, 6, 19, 7, 20, 8, 21, 9 }
  uselistorder i32 ()* @function_1000c2f8, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000d030, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfec.dec_label_pc_1000cfec_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfa4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf38.dec_label_pc_1000cf38_crit_edge, { 1, 0 }
}

define i32 @function_1000d054(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d054:
  %v1_1000d054 = add i32 %arg1, 28
  %v2_1000d054 = inttoptr i32 %v1_1000d054 to i32*
  %v3_1000d054 = load i32, i32* %v2_1000d054, align 4
  store i32 %v3_1000d054, i32* @global_var_1001e1e4.521, align 4
  %v1_1000d064 = add i32 %arg1, 44
  %v2_1000d064 = inttoptr i32 %v1_1000d064 to i32*
  %v3_1000d064 = load i32, i32* %v2_1000d064, align 4
  store i32 %v3_1000d064, i32* @global_var_1001e1e8.522, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 17, 5, 10, 11, 6, 7, 8, 9, 2, 12, 3, 13, 14, 15, 0, 1, 4, 16 }
  uselistorder i32 28, { 44, 8, 9, 2, 3, 10, 7, 34, 35, 37, 38, 39, 40, 36, 5, 6, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 31, 32, 1, 33, 41, 42, 43 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000d070(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d070:
  store i32 %arg1, i32* @global_var_1001e1ec.515, align 4
  %v0_1000d098 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000d098)
  %v1_1000d0a0 = call i32 @function_1000d0ec(i32 12)
  ret i32 %v1_1000d0a0

; uselistorder directives
  uselistorder i32 12, { 14, 41, 42, 31, 32, 43, 44, 45, 46, 104, 105, 106, 107, 6, 88, 108, 0, 1, 8, 89, 5, 15, 16, 9, 33, 47, 48, 17, 49, 50, 51, 18, 19, 34, 20, 21, 35, 22, 23, 36, 24, 25, 37, 38, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 26, 103, 102, 98, 7, 39, 40, 27, 28, 29, 30, 101, 52, 10, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 11, 65, 66, 67, 68, 69, 70, 71, 12, 72, 73, 74, 75, 76, 77, 78, 79, 80, 13, 81, 82, 83, 84, 85, 86, 87, 2, 3, 4, 109, 110, 111 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 2, 10, 0, 3, 12, 11, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i1 true, { 1, 0 }
  uselistorder i32* @global_var_1001e1ec.515, { 1, 0, 2 }
}

define i32 @function_1000d0a4() local_unnamed_addr {
dec_label_pc_1000d0a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d0bc = call i32 @__asm_mfcr()
  %v1_1000d0c0 = and i32 %v0_1000d0bc, 268435456
  %v3_1000d0c0 = icmp eq i32 %v1_1000d0c0, 0
  store i32 %v0_1000d0bc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d0c0, label %dec_label_pc_1000d0d8, label %dec_label_pc_1000d0cc

dec_label_pc_1000d0cc:                            ; preds = %dec_label_pc_1000d0a4
  %v0_1000d0cc = call i32 @function_1000aeb8()
  %v0_1000d0d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d0d0 = inttoptr i32 %v0_1000d0cc to i32*
  store i32 %v0_1000d0d0, i32* %v2_1000d0d0, align 4
  br label %dec_label_pc_1000d0d8

dec_label_pc_1000d0d8:                            ; preds = %dec_label_pc_1000d0a4, %dec_label_pc_1000d0cc
  %v0_1000d0e8 = phi i32 [ %v0_1000d0bc, %dec_label_pc_1000d0a4 ], [ -1, %dec_label_pc_1000d0cc ]
  ret i32 %v0_1000d0e8

; uselistorder directives
  uselistorder i32 268435456, { 42, 36, 45, 31, 46, 47, 48, 49, 32, 33, 50, 51, 25, 30, 39, 52, 26, 40, 34, 35, 27, 53, 43, 37, 44, 38, 41, 28, 54, 55, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 14, 22, 11, 40, 10, 9, 8, 7, 39, 38, 6, 5, 4, 47, 41, 18, 3, 46, 17, 37, 36, 45, 2, 13, 20, 12, 19, 16, 44, 1, 0, 43, 42, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 21, 15 }
  uselistorder label %dec_label_pc_1000d0d8, { 1, 0 }
}

define i32 @function_1000d0ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d0ec:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000d100 = call i32 @function_1000aeb8()
  %v0_1000d104 = load i32, i32* @r29, align 4
  %v2_1000d104 = inttoptr i32 %v0_1000d100 to i32*
  store i32 %v0_1000d104, i32* %v2_1000d104, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_1000aeb8, { 25, 17, 31, 14, 44, 13, 12, 11, 10, 43, 42, 41, 9, 8, 3, 7, 6, 47, 46, 23, 24, 35, 34, 33, 32, 40, 39, 38, 55, 45, 20, 5, 4, 54, 19, 37, 36, 53, 2, 16, 27, 15, 26, 18, 52, 1, 0, 51, 30, 29, 50, 49, 48, 28, 22, 21 }
  uselistorder i32* @r29, { 333, 334, 346, 12, 13, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 347, 348, 349, 350, 351, 0, 42, 335, 336, 337, 338, 238, 239, 320, 1, 321, 322, 339, 340, 341, 342, 344, 345, 14, 15, 16, 63, 64, 65, 66, 67, 68, 69, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 309, 298, 299, 300, 301, 302, 303, 2, 33, 34, 35, 3, 36, 37, 38, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 41, 43, 44, 45, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 78, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 4, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 5, 155, 6, 156, 7, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 8, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 9, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 10, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 323, 325, 326, 327, 11, 328, 329, 330, 331, 332, 343 }
}

define i32 @function_1000d120(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d120:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001e000.503 to i32), i32* %r31.global-to-local, align 4
  %v3_1000d13c = load i32, i32* @global_var_1001e000.503, align 4
  %v3_1000d140 = icmp eq i32 %v3_1000d13c, -1
  br i1 %v3_1000d140, label %dec_label_pc_1000d15c, label %dec_label_pc_1000d148

dec_label_pc_1000d148:                            ; preds = %dec_label_pc_1000d120, %dec_label_pc_1000d148
  %v0_1000d148 = phi i32 [ %v3_1000d150, %dec_label_pc_1000d148 ], [ %v3_1000d13c, %dec_label_pc_1000d120 ]
  call void @__pseudo_call(i32 %v0_1000d148)
  %v0_1000d150 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d150 = add i32 %v0_1000d150, -4
  %v2_1000d150 = inttoptr i32 %v1_1000d150 to i32*
  %v3_1000d150 = load i32, i32* %v2_1000d150, align 4
  store i32 %v1_1000d150, i32* %r31.global-to-local, align 4
  %v3_1000d154 = icmp eq i32 %v3_1000d150, -1
  br i1 %v3_1000d154, label %dec_label_pc_1000d15c, label %dec_label_pc_1000d148

dec_label_pc_1000d15c:                            ; preds = %dec_label_pc_1000d148, %dec_label_pc_1000d120
  %v0_1000d16c = load i32, i32* @r3, align 4
  ret i32 %v0_1000d16c

; uselistorder directives
  uselistorder i32 %v3_1000d150, { 1, 0 }
  uselistorder i32 -4, { 0, 3, 4, 5, 6, 7, 8, 17, 18, 9, 10, 11, 12, 13, 14, 15, 16, 2, 1 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_1000d148, { 1, 0 }
}

define i32 @function_1000d170() local_unnamed_addr {
dec_label_pc_1000d170:
  %v0_1000d188 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d188

; uselistorder directives
  uselistorder i32* @r3, { 24, 11, 239, 240, 241, 12, 111, 0, 112, 32, 249, 21, 17, 3, 25, 242, 244, 31, 245, 246, 247, 165, 29, 166, 9, 14, 180, 185, 184, 243, 33, 186, 34, 35, 187, 26, 20, 22, 248, 113, 114, 115, 116, 117, 118, 119, 120, 121, 13, 30, 4, 16, 188, 1, 2, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 167, 168, 172, 173, 174, 177, 178, 179, 169, 6, 170, 171, 92, 93, 28, 94, 95, 96, 15, 157, 158, 159, 10, 160, 161, 7, 136, 86, 87, 88, 89, 90, 91, 97, 23, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 175, 176, 8, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 189, 181, 182, 183, 190, 191, 192, 193, 195, 196, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 18, 19, 27 }
}

define i32 @function_1000d18c() local_unnamed_addr {
entry:
  store i32 268489116, i32* @lr, align 4
  %v0_1000d198 = call i32 @function_100000b8()
  ret i32 %v0_1000d198

; uselistorder directives
  uselistorder i32 0, { 1104, 237, 1105, 39, 238, 168, 1108, 239, 1109, 1110, 37, 38, 1111, 1112, 1113, 67, 1114, 0, 739, 740, 741, 88, 87, 742, 567, 240, 241, 746, 874, 875, 169, 876, 1115, 16, 568, 569, 1116, 1117, 1118, 1119, 242, 570, 571, 572, 573, 574, 575, 576, 89, 577, 578, 1120, 1121, 243, 1139, 1140, 244, 1145, 1154, 161, 1155, 245, 1146, 1, 1122, 1123, 90, 1124, 1125, 246, 170, 247, 1126, 1127, 42, 43, 1128, 1129, 1130, 248, 1133, 1134, 1135, 40, 41, 1136, 1137, 1138, 536, 537, 538, 539, 540, 91, 541, 542, 543, 235, 544, 92, 879, 881, 20, 882, 44, 883, 880, 877, 878, 2, 751, 747, 748, 749, 750, 162, 3, 886, 884, 885, 163, 887, 888, 752, 753, 754, 755, 756, 249, 757, 758, 853, 854, 250, 855, 171, 889, 898, 899, 93, 890, 891, 892, 893, 894, 895, 896, 897, 4, 5, 466, 474, 475, 476, 45, 46, 477, 6, 251, 743, 478, 479, 480, 481, 482, 483, 484, 485, 252, 486, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 900, 901, 47, 902, 903, 904, 905, 906, 1147, 1148, 1149, 48, 1150, 1151, 1152, 1153, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 487, 545, 907, 1131, 1132, 488, 908, 591, 608, 489, 1141, 94, 1142, 1106, 870, 1107, 871, 909, 490, 1143, 1144, 491, 492, 910, 911, 912, 49, 95, 913, 914, 236, 915, 917, 916, 167, 7, 918, 73, 21, 74, 22, 919, 920, 8, 75, 23, 76, 24, 921, 77, 922, 25, 26, 923, 78, 27, 96, 253, 254, 17, 18, 592, 924, 925, 926, 927, 100, 98, 97, 928, 99, 102, 101, 929, 103, 930, 50, 931, 932, 933, 856, 104, 857, 858, 934, 935, 51, 105, 936, 9, 106, 937, 107, 938, 759, 760, 761, 111, 762, 763, 764, 765, 158, 766, 255, 767, 768, 772, 769, 109, 473, 770, 110, 771, 256, 773, 774, 775, 776, 777, 112, 778, 779, 172, 780, 781, 467, 79, 782, 783, 784, 785, 786, 787, 68, 69, 788, 789, 790, 52, 53, 791, 792, 173, 174, 793, 794, 257, 795, 797, 798, 799, 800, 801, 175, 176, 806, 807, 258, 808, 802, 803, 804, 805, 809, 19, 468, 469, 815, 816, 108, 817, 818, 819, 824, 825, 826, 827, 177, 828, 829, 113, 830, 831, 832, 833, 834, 835, 820, 114, 821, 822, 115, 823, 259, 796, 82, 516, 517, 28, 260, 80, 29, 30, 261, 81, 31, 518, 10, 181, 180, 519, 520, 521, 522, 523, 524, 179, 178, 525, 54, 55, 526, 527, 262, 116, 528, 529, 117, 530, 118, 531, 119, 532, 533, 609, 610, 611, 612, 613, 614, 615, 616, 617, 493, 494, 159, 495, 496, 497, 263, 498, 499, 500, 501, 502, 503, 504, 505, 182, 506, 507, 56, 57, 508, 509, 510, 58, 59, 511, 512, 513, 11, 514, 264, 265, 515, 534, 183, 535, 547, 121, 546, 120, 548, 549, 123, 550, 122, 551, 552, 125, 553, 124, 554, 555, 127, 556, 126, 557, 558, 129, 559, 128, 560, 12, 266, 267, 15, 563, 561, 562, 164, 564, 565, 184, 268, 566, 32, 593, 604, 594, 13, 595, 596, 597, 598, 165, 599, 600, 601, 602, 603, 33, 130, 66, 65, 131, 605, 60, 271, 606, 269, 270, 185, 607, 84, 810, 811, 83, 812, 132, 813, 85, 814, 133, 618, 619, 272, 620, 621, 135, 134, 622, 273, 623, 624, 625, 626, 627, 628, 629, 136, 630, 631, 632, 186, 633, 634, 274, 635, 70, 71, 636, 137, 637, 638, 639, 275, 187, 188, 189, 190, 138, 640, 276, 641, 642, 643, 644, 277, 645, 646, 647, 192, 191, 648, 278, 649, 650, 651, 652, 653, 139, 654, 279, 655, 656, 657, 658, 659, 280, 660, 661, 662, 193, 194, 195, 196, 143, 142, 663, 664, 34, 141, 140, 665, 666, 667, 35, 668, 669, 670, 671, 144, 197, 672, 145, 673, 281, 674, 675, 676, 282, 677, 678, 679, 680, 283, 681, 682, 683, 198, 199, 200, 201, 202, 203, 204, 205, 684, 685, 146, 686, 687, 284, 688, 689, 690, 691, 692, 693, 285, 694, 695, 696, 214, 206, 207, 208, 209, 210, 211, 212, 213, 147, 697, 698, 286, 699, 700, 701, 702, 705, 706, 287, 704, 703, 288, 707, 708, 709, 215, 216, 217, 218, 219, 220, 221, 710, 148, 711, 289, 712, 713, 714, 715, 716, 717, 718, 719, 720, 290, 721, 722, 723, 222, 223, 224, 225, 724, 149, 725, 291, 726, 727, 728, 729, 730, 731, 732, 733, 734, 292, 735, 736, 737, 226, 227, 228, 229, 738, 939, 940, 744, 745, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 150, 850, 293, 851, 852, 859, 72, 860, 861, 294, 862, 863, 864, 865, 866, 867, 868, 869, 872, 36, 873, 941, 297, 946, 947, 948, 949, 943, 944, 945, 942, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 298, 966, 967, 968, 969, 295, 970, 971, 166, 972, 973, 86, 151, 974, 975, 976, 977, 978, 979, 980, 981, 153, 982, 983, 984, 985, 986, 987, 1000, 1001, 1002, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1003, 301, 1004, 1005, 1006, 1007, 1008, 152, 1009, 1010, 1011, 1012, 296, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 299, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 300, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 156, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 154, 1070, 1072, 1071, 1073, 1074, 1075, 1076, 1077, 230, 155, 1078, 1079, 1080, 1081, 231, 1082, 302, 303, 1083, 1084, 1085, 1086, 1087, 61, 62, 1088, 1089, 63, 64, 1090, 1091, 160, 1092, 157, 1093, 1094, 1095, 304, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 232, 1103, 233, 234, 1164, 1165, 1166, 14, 470, 471, 472, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190 }
  uselistorder i32* @lr, { 7, 740, 883, 884, 888, 889, 890, 891, 892, 893, 583, 17, 304, 305, 8, 741, 742, 306, 307, 308, 309, 310, 311, 902, 903, 907, 908, 909, 910, 911, 912, 914, 916, 904, 906, 894, 895, 896, 897, 898, 899, 900, 901, 743, 745, 744, 586, 587, 588, 589, 590, 591, 723, 724, 725, 746, 750, 747, 748, 749, 18, 19, 885, 886, 887, 751, 752, 592, 753, 593, 754, 239, 755, 594, 756, 431, 20, 584, 21, 22, 23, 24, 25, 26, 27, 915, 913, 595, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 905, 28, 29, 596, 597, 598, 599, 326, 757, 758, 726, 759, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 760, 761, 600, 601, 602, 603, 604, 605, 9, 10, 11, 12, 13, 14, 15, 16, 606, 607, 608, 609, 610, 611, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 698, 699, 700, 701, 702, 703, 704, 709, 710, 711, 712, 690, 691, 692, 693, 694, 695, 696, 697, 612, 613, 614, 615, 616, 617, 130, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 370, 705, 706, 707, 708, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 0, 258, 259, 260, 261, 262, 263, 264, 265, 266, 283, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 2, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 3, 355, 356, 357, 358, 359, 360, 1, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 762, 585, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 763, 764, 765, 766, 769, 770, 771, 772, 767, 768, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 787, 4, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 5, 6 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
